{
    "title": "The Checkpoint",
    "pages": [
        "It was cold. Even with the sun shining, it was cold. The six men had their greatcoats buttoned tight as they trudged through the woods. Overhead the branches of the trees were bare. They were walking along a small road in a forest.\n\nSeveral feet of snow lay on each side of the road. The snow on the road was packed down, except for the inch or so that had fallen a few days before. The road wasn't used much, which was why they were on it. \n\nThe six men were soldiers. German soldiers. Their unit insignia showed they were from three infantry battalions and a transport battalion. A sergeant led the men. One was a corporal, the others privates. It was an odd makeup for a squad.\n\nExcept it wasn't a squad. The men were deserters. They knew Germany had lost the war and also knew months of fighting lay ahead before that fact would be admitted, and the army surrendered. They were doing their part to speed the process by leaving the front and heading home.\n\nThe six men had come together mostly by chance. The sergeant and one private came from the same infantry unit. The two had been friends before the war, and coincidence led them to serve together. They had waited until they had been sent to the rear for a few days rest. They were supposed to rejoin their unit for a new assault on the Allies. Instead, in the middle of the night, they slipped past a sentry who was half asleep and headed east toward home.\n\nOnly a couple miles down the road, they had almost literally bumped into the corporal. It was a dark moonless night and the corporal had stepped out of the woods right in front of them. He had been taking a leak and assumed he was alone on the road. After suspicious looks were exchanged, there was a guarded conversation. He claimed to be lost. They claimed to be lost. All three claimed to be looking for their units. \n\nThe sergeant knew the corporal's transportation battalion was ten kilometers to the south and west. The corporal knew the sergeant's infantry unit was five kilometers to the west. \n\n\"I think our unit is that way,\" said the sergeant, pointing east. \"Is your unit that way also?\"\n\nWith nods and knowing winks, all three continued to head east.\n\nThe men slept a few hours in the morning, hiding in the woods. Returning to the road, they found a single infantryman sitting nearby. There were more suspicious looks. Suddenly, they heard the noise of several tanks approaching. With quick glances, all four scattered into the woods.\n\nThe tanks passed by heading west toward the front. The four men continued to head east. The sergeant, who was the senior rank, decided they should take a smaller road through the woods. They would be less likely to run into other troops. \n\nNaturally, they ran into a pair of soldiers almost immediately. The two had foolishly built a small fire for heat and to cook food. The sergeant was tempted to leave them behind but decided they would be quickly captured and tell on the others. He had them douse the fire before the six men hustled several miles down the road. \n\nThe men looked like a squad, though usually a squad had ten men, not six. But there were a lot of six man squads in the German army these days. Replacements were few and far between. It felt safer being part of a squad. It looked more official - soldiers on their way to perform a task rather than deserters fleeing the war.\n\nFor the privates, it felt good to have a sergeant leading them. They were used to taking orders, not thinking on their own. Part of a Germanic sense of order and hierarchy.\n\nIt was early on the third day when the sergeant saw a clearing through the trees. He stopped the men about thirty feet back from the edge of the forest and walked forward for a better view.\n\n150 meters away were two farms, one on each side of the road. Each farm was fifteen or twenty acres. Big enough to support a family. On the right stood the remains of a house. The end walls were still standing, but the roof and long walls were gone.  \n\nRubble had been cleared from the inside floor and neatly piled a little distance from the house. Parts of the rubble had been stacked to make a wall a meter high and five meters long. A wisp of smoke rose from inside the house, probably from a cooking fire. The wall blocked a clear view.\n\nOn the left were the remains of another house. Only one corner remained upright. The rest of the house lay in a pile of rubble three meters high next to the road. \n\nThe sergeant saw two men by the road. They looked like soldiers. This was a good spot for a checkpoint. The open farmland made it easy to see anyone approaching and the rubble created a chokepoint on the road. \n\nThe sergeant thought, \"This must be a checkpoint meant to find deserters. There is no other reason for it to be here.\" \n\nThe sergeant was trying to figure out how to bypass the checkpoint when one of the sentries began waving his arm and yelling.\n\n\"Come out. I see you. Come out and approach.\" \n\nAt that distance, it was hard to hear but it was clear what the sentry wanted. The sergeant sighed. He was tired. Tired of the war, tired of walking, tired of sleeping in the cold, tired of trying to think of the next threat and the next solution. \n\nIf he hadn't been tired, he would have gotten off the road before approaching the edge of the woods. He would have stayed behind a tree to take a look. But he was tired. He had been standing in the middle of the road when the sentry spotted him.\n\nTheir few days of freedom were about to end unless the sergeant thought of a plausible reason for them to be here. But he was too tired to think.\n\nHe waved his men forward. They trudged toward the rubble and the checkpoint. One of the sentries disappeared behind the ruins on the left. That was a bit odd.\n\nWhen they were three meters away, the sentry in the road held up his hand and commanded them to halt. The sentry told the sergeant to come forward. \"Officious jerk,\" thought the sergeant. \n\n\"Orders?\" said the officious jerk.\n\n\"They fell out of my pocket during the fighting,\" said the sergeant, making up the story as he went along. \"We got lost in the woods and are trying to get back to the front.\"\n\nThe sergeant winced at his last remark. The fighting lay to the west, behind them. The distant sound of artillery could be clearly heard, like the far off rumble of thunder. It was afternoon and the sun was behind them. Even a child would have known they were headed the wrong way. Certainly, a soldier in the German army could figure it out.\n\nThe sentry nodded his head without comment and walked back to look over the other men. The sergeant looked around. To the left was the second sentry. He held his rifle casually but the sergeant knew that was an illusion. The weapon could be brought to bear quickly. The sergeant was too far away to be sure but he knew the safety would be off and a bullet would be in the chamber. The sentry could raise the rifle and fire in less than a second. Less than two seconds for a well aimed shot.\n\nTo the right was an elderly couple sitting in the remains of their house, not additional soldiers as he had feared. A fire burned between them. A pot hung above the fire. Cooking dinner, the sergeant supposed. He idly wondered how long it had taken the couple to clear the rubble from their house.\n\nHe turned his attention back to the second sentry. There was something odd about the man. The sergeant couldn't put his finger on it. The haircut wasn't quite right. It wasn't a German army haircut. The posture wasn't quite right. He didn't have the arrogant stance of a German officer or the subservient demeanor of a lowly enlisted man. \n\nThe boots gave it away. The man's pants were tucked inside his boots. German soldiers did not do that but American paratroopers did. What was an American soldier doing here in a German greatcoat? Were they all about to be captured?\n\nBeing captured wouldn't be such a bad thing. Maybe it would even be a good thing. The Americans treated prisoners decently. He and his men would be safe and warm and fed and done with the war. It would delay their return home by a few months but they could cope with that.\n\nThe first sentry, the officious jerk, returned to face the sergeant. He was definitely German army. The right haircut, the right posture, the right boots.\n\nThe sergeant looked closer. The man was a Lieutenant. The insignia was for the artillery. \n\n\"What is a Lieutenant doing on sentry duty? Is there an artillery unit nearby?\"\n\nThe sergeant hadn't heard any big guns firing in the area.\n\n\"It seems your men come from many units, Sergeant. It must have been a fierce battle to cause so many units to get mixed together.\" \n\nThe sentry calmly waited for an answer.\n\n\"Yes, it was a very fierce battle. It went on for a long time. We just want to get back to the front. Get back to our proper units.\" \n\nIt was another obvious lie. There had been no fierce battle. The guns had been relatively quiet for the last week.\n\n\"I'm sorry but none of you will be going back to your old units.\" \n\nThe sergeant knew they were about to be arrested. \n\n\"There are new orders for men like yourselves. Men who have gotten lost during fierce battles.\"\n\nThe sentry looked at him with no expression on his face. It was clearly a lie. The sergeant's hopes rose. \n\n\"You are to continue east to the Rhine. Forces are gathering there to man defensive positions.\" The sergeant's hopes dropped. It looked like they would be back in the war.\n\n\"Here are your orders.\" A piece of paper was exchanged. \"Follow this road to the east. At the next village, turn left. There is a small track through the forest. It is the quickest way to the Rhine. I'm told there is a small footbridge.\"\n\nHe was telling them how to avoid other sentries, how to get safely to the German border. The sergeant looked at the paper in his hand. They looked like official orders signed by General Model. They ordered his men to a spot 15 kilometers to the east of the Rhine. Well, behind any defensive positions.\n\nThe sentry continued to look at the sergeant with no expression. \n\n\"Do you understand your orders?\"\n\nThe sergeant came to attention and saluted. \"Yes, Lieutenant. I understand.\" He glanced at the American. The man nodded once but otherwise didn't move. \"We will be going now.\" \n\nThe sergeant waved his men forward and set a brisk pace. Another 150 meters and the road turned as it entered the forest. In less than ten minutes, the six deserters were out of sight.\n\n\"What just happened?\" the corporal asked.\n\n\"I think he had left his post also. I think he is pretending to be a sentry and telling soldiers like us how to get home.\" \n\nThe sergeant looked at the orders in his hand. \"Clever giving us fake orders. It will allow us to get past real sentries or at least provide us with a good reason for marching away from the front. It will keep us from being arrested.\" \n\nHe looked back in the direction they had just come.\n\n\"The second man was American. What are a German and an American doing manning a fake checkpoint?\" he wondered. \n\nHe wasn't going to wait around to find out. The sergeant increased the pace until they were more than a mile from the checkpoint.\n\nThe German Lieutenant stood on the road until the squad had entered the forest and was lost to sight. He gave the American a thumbs up.\n\n\"All clear,\" said the American.\n\nA woman in a nurse's uniform stepped out. She had been hiding behind the remaining corner of the house. Rubble had been piled to conceal the chair where she had been sitting. Only a close inspection would have found her. A close inspection and a fight with the American.\n\nThe nurse was young and attractive. The men coming down the road were all war weary, battle hardened veterans. Many had not seen a pretty woman in months. It was better for everyone if she wasn't seen.\n\nShe had arrived almost two weeks ago looking for her parents. Her parents lived on a farm outside a nearby village. When she had heard the village had been bombed, she had gone to check on her parents. She found her parents' home, her childhood home, in ruins. \n\nNeighbors said her parents had survived the bombing but didn't know where they had gone. The ruined house at the checkpoint had belonged to her uncle. It was the last place she knew to look, so she stayed, hoping her uncle or her parents would return someday. \n\nWhen the nurse had arrived, the German Lieutenant was already there. He had come to the same conclusion as other deserters and left his unit. He was supposed to be with an artillery battery 30 kilometers to the southwest, fighting to slow General Patton's army. \n\nThe Lieutenant hadn't snuck away in the middle of the night like the others. He had written fake orders for himself to forage for supplies behind the lines. He had left in broad daylight after showing the sentries his orders. Even with his orders, he tried to avoid other German soldiers. In doing so, he had taken the same small road as the sergeant and his men.\n\nThe Lieutenant had stopped in this place for a rest and stayed the night. He remained a second night. It was peaceful and quiet. The elderly couple reminded him of his own grandparents. The German had shared his food with them and they shared their food in return. \n\nThe German went foraging and found a mass of bushes that still had frozen berries on the branches. He filled his helmet and brought them back. The elderly woman collected eggs from a few chickens that walked around the yard. \n\nA stray cow was shot with the German's last bullet. He butchered it, burying most of the meat in the snow to freeze it. The German had been a butcher in his previous life, the life before the war. Before he had been drafted into the army.\n\nThe checkpoint had come about by accident. When the first soldier walked out of the woods, the German had gotten his rifle. He had no ammunition but the other man wouldn't know that. The soldier saw a Lieutenant with a rifle held across his chest. He assumed the Lieutenant was in charge of a checkpoint looking for deserters. \n\nLike the sergeant, the soldier despaired. But a wary conversation with the Lieutenant showed he had nothing to fear. He had mentioned his assumption before he walked on. The Lieutenant had built on the idea of a checkpoint. \n\nThe elderly couple had paper that he used to draw up fake orders. They wouldn't stand up to much scrutiny but they didn't have to. As long as the deserters could say they believed the orders were real, the men would be safe. Sent back to the front to face those risks but not jailed or shot as deserters.\n\nWhen the nurse had shown up, she had been wary. Her experience with soldiers had mostly consisted of crude comments and unwanted groping. She had fended those soldiers off, but this was different. Here she was alone, except for the old couple. If he attacked her, she would fight back, but she would lose.\n\nBut she knew enough German to converse. She watched how the soldier treated the old couple. She watched how he treated her and looked at her. She soon realized the man was not a threat. He was as tired of the war as everyone else. She made a comment about how most German officers were not so kind to people.\n\n\"That is because I am not a German officer. I am a butcher. I feed people. This,\" he gestured toward his uniform, \"was not my choice.\"\n\nThe German realized having a young, attractive woman around would be a problem when other soldiers came along. Especially if it was a group of soldiers. He could not protect her from five or ten men when he had no ammunition. \n\nThe nurse and the Lieutenant had built a small hiding place the nurse could go when soldiers approached. The elderly couple had provided the chair.\n\nThe nurse had been there only a few days when the American arrived. He had parachuted in behind the lines and gotten separated from his unit. He knew where the front was but also knew getting through German lines would be difficult. The American had decided the best course of action was to wait for the Allied troops to reach him. His insignia indicated he was a Captain.\n\nThe American had come out of the woods from the east. He had seen the German soldier and had watched long enough to know there was only one soldier. That was certainly odd for any checkpoint. Usually, there would be two or three on duty with another half dozen to take other shifts. \n\nHe considered circling through the woods but didn't think it was practical. The undergrowth got thicker the deeper one went in. Circling around might take a couple days if he could get through at all.\n\nThe German, the nurse, and the elderly couple were all focused on spotting deserters coming from the west. Nobody saw the American approaching from the other direction.\n\n\"Hands up!\" he cried, his rifle pointed at the German. The Lieutenant turned around slowly with his hands raised. \n\nThe elderly couple left their house to stand near the German. They said something in French that the American didn't understand. But it sounded like they didn't want him to shoot.\n\nThe American knew he was in a bind. He couldn't take the German prisoner. He was at least 30 kilometers from the front with no way to tie the man up and no MPs to hand him off to. He couldn't let the German go because he would raise the alarm and begin a search to take the American prisoner. And he refused to shoot the German in cold blood.\n\nA young woman appeared from his right. She had been using an impromptu latrine dug beyond her uncle's ruined house. She moved to within a few feet of the German and said, \"Don't shoot him\" in English.\n\nThe German smiled and shrugged. He knew the dilemma the American was facing. At some point, shooting the German would be the only viable solution, even if it was a distasteful solution. The German held up a finger. The universal sign for \"Wait, give me a moment.\"\n\nHis rifle was slung over his shoulder. He mimed removing the weapon. The American watched warily. Very slowly, the German took the sling and slid it off his shoulder and down his arm. Still holding the weapon by the sling only, he positioned it so the barrel pointed off to the side, away from the other soldier.\n\nThe American nodded slightly. \"Continue,\" it seemed to say. The German took the rifle by the barrel and raised it in the air. With his free hand, he loosened the clip and handed it to the nurse. She brought the clip to the American. It was empty.\n\nThe German worked the bolt. No bullet was there to be ejected. The German opened a compartment on his belt, rooted around with his hand, and came out empty. He slowly took out his sidearm, aimed at the dirt, and pulled the trigger several times. The American could clearly hear the 'click, click, click' of a hammer hitting an empty chamber.\n\nThe Lieutenant smiled and shrugged at the American again. The German had no ammunition. He slung the rifle back over his shoulder.\n\nThe American's stance eased. He lowered his rifle but didn't sling it over his shoulder. \"Now what?\" he thought. The German wasn't an immediate threat but the dilemma remained.\n\nThe nurse touched his arm. He had forgotten she was there.\n\n\"He left. He is not a threat,\" she said in English. \n\nThe German mimed eating and walked toward the house with the elderly couple. The nurse tugged the American's arm and then went the same direction. The American cautiously followed. There was food in a pot over the fire. The elderly woman dished a plate for the American and for the German.\n\nThe American sat on a small pile of rubble, keeping his rifle across his knees. While he ate, the German spoke to the nurse and the nurse translated into English. Her German was as broken as her English, so finding the right words took a long time. \n\nIn the end, the American slung his weapon over his shoulder. He understood the German was a deserter and didn't want to fight. He was helping the nurse and the elderly couple. He understood that other German soldiers passed through the area. ",
        "The nurse showed him her hiding place in the corner of the other house. \n\n\"I hide when they come. You hide when they come.\"\n\nThe American shook his head. Hiding was not in his nature. Instead, he pointed at the German's coat. The German went to a pile of clothes in the corner and pulled out another greatcoat he had taken off a dead soldier. There was a small hole and some blood on the back but from the front, it was presentable.\n\nThe American put it on and turned around like a model. \"What do you think?\" he mimed. The German went back to the pile of clothes and came back with a soft army cap. The American's helmet was a dead giveaway. Dead in a very real sense. \n\nThe American brought the German to the road and mimed a scenario. German deserters were coming out of the woods. The nurse went into hiding. The American stood near the hiding place, off the road, next to the rubble, rifle at the ready.\n\nThe German understood. He mimed a conversation and sent the imaginary deserters on the way. He gave a thumbs up. Then he mimed a conversation that didn't go well. He hastily stepped back, reaching for his empty rifle. The American raised his rifle. \"Bang, bang,\" he said. The German gave another thumbs up.\n\nThe next day the American Captain sat on the pile of rubble on the left. There was nothing to do except watch for deserters. He was bored. He crossed the road and began moving debris off the floor of the elderly couple's home. The Captain had grown up on a farm. He knew how to build walls.\n\nSome rubble was used for the wall. Some went onto a separate pile. To be used later to rebuild maybe. \n\nThe German Lieutenant spoke to the nurse. She took a seat where she was half-hidden but could see the road. The German joined the American in clearing the house. \n\n\"Why didn't I think of this before?\" the German wondered.\n\nBy the time the sergeant and his squad showed up, the two men had cleared the floor entirely. The wall was in place and a large pile of useful stone lay nearby. The American and German had bonded as men do when they build things by hand. They knew what stones went in which pile. They knew when to help and when help wasn't needed.\n\nWhile they worked, the two soldiers taught each other German and English. By the time the floor was cleared, they could speak to each other on some matters without the nurse acting as a translator. An unspoken agreement led them to focus on learning military terms. Terms they would need to use if a large group of deserters decided to cause trouble.\n\nIn the larger war, they were enemies. Here, in the small clearing in the forest, they were allies. They were the protectors of the nurse and the old couple. They were smart men, successful in civilian life, who had been uprooted by the war and trained in the art of warfare. They knew their job.\n\nThe two men didn't work all day long. The German and the American would take a break to watch the road. The nurse would forage at those times, retrieving some of the frozen beef, gathering more berries. She had found some wild onions. Once a week, the nurse and the elderly woman would go to town to buy or trade for vegetables and a little flour to make bread.\n\nThe two soldiers were planning to build a room in the house. They and the nurse wanted to build a bedroom for the couple. The elderly woman shook her head, a vigorous 'no.' She wanted a kitchen. Her husband shrugged and smiled as he held his wife's hand. \n\nSo it was decided that they would build a kitchen. The walls were half done when a squad of men emerged from the woods. They were carrying a fellow soldier on a makeshift stretcher. The German Lieutenant waved the American Captain to his side. He did not like the look of things.\n\nTheir uniforms were wrong. Instead of the standard dark green of the German army, they were wearing gray They had rifles and packs, but not all had canteens, mess kits, or ammunition belts. None seemed to have a helmet. There were no unit insignia or badge of rank to be seen.\n\nThe seven man squad stopped where they were told. Their leader explained the man in the stretcher had broken his leg two days before. He was feverish and ranting. They hoped to get him to medical care.\n\nThe Lieutenant questioned him. \n\n\"Who are you? Why aren't you in proper uniforms?\"\n\nThe leader stated they were a secret unit. The lack of uniforms and insignia would allow them to infiltrate the Allied lines. The explanation made no sense since the group was traveling away from the Allied lines.\n\n\"Who is the injured man?\"\n\n\"We don't know. We found him two days ago.\"\n\nAgain, not likely. First, they said he had broken his leg two days ago, now they were saying they found him two days ago with his leg already broken.\n\nThe Lieutenant was skeptical. These men looked hard and desperate. Harder and more desperate than the usual soldiers who passed the checkpoint. \n\n\"I wonder if they escaped from a prison somewhere?\" he thought, worried at the idea.\n\nThe American stood back a pace or two and off to the side. His rifle was in his hands and pointed in the direction of the squad. There was no pretense that he was just an observer. He had a clear view - and a clear shot - at all seven.\n\nThe Lieutenant checked on the man in the stretcher, making sure not to block the American Captain's field of fire. The man on the stretcher was dressed in the proper uniform with the proper equipment. He was a corporal in the Signal Corps.\n\n\"What is he doing with these other men?\" went through the Lieutenant's mind.\n\nThe German felt the forehead of the man on the stretcher. He really did have a fever. The man was moaning and mumbling. The Lieutenant looked back at the American. There were a series of looks, shrugs, and nods that only the two men understood.\n\n\"Colette.\" The nurse came out of hiding. She had heard the conversation and immediately went to the man on the stretcher.\n\nSeven hard men looked at the nurse with lust. The American tapped his rifle against his hand. A reminder. The nurse had the stretcher laid inside the house near the fire. She began tending to him.\n\nThe German Lieutenant ordered the seven deserters to stack their weapons by the wall. They obeyed because he was an officer and they were enlisted men. The Lieutenant felt better having the men unarmed. Although seven against two were not good odds, even if one of the two was armed. \n\nWhile the men sat on the ground, pulling out rations to eat, the American quietly removed the clips from all the rifles. Just in case one of the deserters tried to grab a weapon. The men talked among themselves as they ate. It was clear the subject was the nurse, and the comments were lewd.\n\nThe Captain walked over to the Lieutenant, never turning his back to the strangers. He quietly handed eight clips to the man who was his enemy. Giving ammunition to an enemy who had no ammunition of his own.\n\nExcept they weren't enemies. Not in this lonely spot removed from the war. They would protect the nurse. They would protect the elderly couple. They would protect each other.\n\nThe nurse slept next to the man with the broken leg. She woke up several times during the night to check on him and put a wet cloth on his forehead to help break the fever.\n\nThe Lieutenant and the Captain took shifts guarding the soldiers, who appeared asleep on the ground next to the road. Both had a bullet chambered and the safety off. They sat on the wall between the soldiers and their weapons. Neither soldier trusted these strangers. \n\nIn the morning, the nurse gave her assessment. \"He cannot go on. He needs rest and food, or he will die. He needs to have his leg put in a splint.\" \n\nThe squad protested loudly. The nurse was adamant. The American and German wondered why the unit was so upset about leaving a sick man they had found only two days before.\n\nThe seven men had a discussion about what to do. Stay or leave? A large part of the conversation seemed to revolve around the nurse, not their comrade in arms. There was a lot of leering before the men decided to go on.\n\nThe American listened impassively. He stood three meters away from the last man in the squad. The German was equally impassive. He stood three meters away from the first man in the squad. Both rifles pointed in the general direction of the seven men. \n\nThe squad offered insincere thanks and slowly walked away. After they disappeared into the forest, the American walked along the road in the same direction. From the entrance to the forest, he watched as the group marched away. He stayed, watching until the group was a mile off and turning the next corner. \n\nThe nurse stood next to the German. \"Who were they?\"\n\n\"Escaped prisoners most likely. Bad men. You stay close.\"\n\n\"You think they might be back.\"\n\nThe German nodded. \"So does he,\" nodding at the American who was just heading back.\n\nThe Lieutenant and the Captain had a long conversation away from the nurse and the elderly couple. Neither trusted the departed prisoners to keep marching. The seven men had been much too interested in the young nurse to give up that easily. \n\nThe two soldiers came up with a plan. The German would act as the last line of defense. He had to stay at the checkpoint in case other deserters appeared. \n\nThe American would act as the forward line. He would be in the woods. If the squad came back, he would try to stop them. It would be seven against one. The big unknown was whether the escaped prisoners had spare clips or only spare bullets. Without clips, the seven could only fire one shot each without reloading. The M1 carbine the American carried could fire 15 rounds without reloading.\n\nToward the end of the conversation, the old man approached. In broken German, he volunteered to take up a station at the entrance to the woods. He would have a clear view for a mile down the road and could alert the German if he saw anything threatening.\n\nThe old man had been a soldier in World War I. Even then, his age had kept him in the reserves, but still, he had been trained and he had fought. He was not afraid of being shot at.\n\nThe German and American agreed that would be a third way to defend themselves. The nurse and the old woman positioned themselves inside the house. One looked toward the woods to the east for new deserters while the other looked to the west in case the prisoners came through the fields.\n\nLate in the day, as dusk was arriving, the American went to the forest entrance. He patted the old man on the shoulder and unslung his rifle. He slowly began to walk the mile to the next turn. The Captain stayed on the side of the road, working from tree to tree. He paused periodically to listen.\n\nThirty meters from the next turn, the Captain stopped and listened. He heard nothing, so he squatted down and leaned against a tree. He would wait all night if he had to. Snow began to softly fall.\n\nThe American heard footsteps approaching from around the corner. The steps halted and a quiet conversation began. The American couldn't hear the words and didn't understand German very well anyway but he could tell from the tone that plans were being made.\n\nPlans to kill the American Captain and the German Lieutenant, maybe to kill the elderly couple. Plans to rape the nurse. \n\nThe Captain looked back. The old man was still there, a small figure visible only because the sky was lighter behind him. Good. If the worst happened, the Lieutenant would have ample warning.\n\nThe American stepped off the road into the snow. He trod slowly and carefully cutting through the woods instead of following the road around the corner. With a little luck, he would come out behind the prisoners.\n\nNo such luck. The seven desperate men were squatting on the ground talking about six meters further down the road. Their rifles were slung over their shoulders. The American moved two steps to his left, finding a slightly wider space between the trees. \n\nThe nurse and the elderly woman jumped when the shots rang out. Seven quick shots, followed by seven more. A pause and then a final three shots. They looked at the Lieutenant fearfully. His calm face reassured them. The Lieutenant had been expecting the shots for some time. All seventeen from the same weapon. An American rifle.\n\nThe American returned nearly an hour later carrying seven rifles and three ammunition belts. The old man met him at the entrance to the forest. The old man had stayed at his post, waiting, wanting to be certain.\n\nThe American Captain had dragged the dead bodies into the woods. Other deserters would use the road. They didn't need to find seven dead soldiers and wonder what happened. The snow that was falling would soon cover up the blood pooled in the roadway. Then it would cover up the bodies in the woods.\n\nThe nurse hugged the Captain as he reached the checkpoint. She hugged the Lieutenant also before returning to her patient. The old woman only nodded her thanks. The war had been going on for the better part of six years. The last war had gone on for four years. These things happened in a war.\n\nThe old man and the old woman each got a loaded rifle. A third loaded rifle went into the nurse's hiding place along with the American's weapon. The Captain had ammunition but not a lot. Better to use a German rifle and German ammunition. He took the fourth captured weapon. Rifles five and six went behind the wall, near the road. The last one went behind the rubble, also near the road. \n\nThe German Lieutenant and the American Captain divided the remaining ammunition between them. There were 50 clips with ten rounds each. That would deter a lot of deserters. It might deter an all out assault.\n\nThe war was getting closer to their little home in the forest. The two soldiers didn't know exactly what was happening but they could make a good guess. In late December, there had been a big battle. It had continued into early January. \n\nSince then the sound of the German artillery got closer and closer. The Germans were retreating. The Allies were advancing. What to do when the armies arrived was a problem.\n\nSo far regular German units had never come this way. It was a small back road, too small for tanks and large trucks. Troops on foot stayed on the main road, walking with the vehicles. Only deserters came down the back road.\n\nSome day the main German forces would come through as they retreated. At the very least, regular troops would arrive and set up in the woods to delay the Allied advance. At worst, it would be a rout with large numbers of men fleeing the enemy. \n\nThe German Lieutenant would leave when that happened. Back into the Army again. He had prepared fake orders for himself so he wouldn't be arrested or shot as a deserter. The orders said he was a scout looking for new positions for the artillery. \n\nBut what of the American? The Germans might arrive and be there for days. The American couldn't safely hide in the woods. He couldn't hide in the nurse's little cubbyhole. He would be quickly found in either place.\n\nThe old man had a solution. At the end of his fields was a small rocky hill next to a stream. Partway up one side was a cave, mostly hidden by some boulders. It was big enough to hold a man and some supplies. It wasn't ideal but it was the best they could do.\n\nDeserters were now coming by in groups, two or three times a day. It was getting increasingly risky for the American to pretend to be a sentry. Someone might think turning in an American prisoner would get them off the hook for deserting. \n\nIt was time for the American to get into the cave. Supplies were laid in. The Captain could return for more supplies at night if necessary. \n\nThe German gave the American his name and address. Kurt Metzger, a butcher from a small town near the Swiss border. The nurse was Colette Dubois from a village outside Strasbourg.\n\nThe American was Hank Powell. He was a cattle rancher from eastern Colorado. The information wasn't written down. If any German's found it, they would start a search. \n\nThe American remained in hiding for six days. There were more and more deserters on the first and second days. The artillery moved closer and closer to the clearing. The German Lieutenant no longer pretended to be a sentry at a checkpoint. Now he was a scout waiting for his unit to come closer so he could direct them to the positions he had found.\n\nThe nurse often didn't have time to hide from the deserters. But few paid any attention to her. The deserters just wanted to get farther away from the Allied advance.\n\nThe regular German army showed up on the third day. There were several hundred men, a mix of infantry and mortar units. The Captain of one mortar unit took a look at the Lieutenant's fake orders and threw them in the fire. He was short of men and officers. The Lieutenant was now assigned - or shanghaied - into the mortars.\n\nThe wounded man the nurse had been caring for was carried away on his stretcher. The medics said he would be evacuated to a hospital in Germany. He thanked the nurse for taking care of him and the old couple for feeding him. He thanked the Lieutenant for saving him from the prisoners who had taken him hostage.\n\n\"And thank the other one for me,\" he told the Lieutenant with a wink. He had seen the American and recognized the uniform. But he had also seen the American defend them all. \n\nThe German's set up in the woods, behind the houses. If the Allies tried to cross the fields, they would be cut down. For the next three days, more German troops arrived. Some settled in the woods and others continued on to set up the next defensive line. \n\nDay seven American troops arrived in the woods to the west. By this time, the old couple and the nurse were hunkered down in the remaining corner of her uncle's house. Surrounded by walls and rubble it seemed the safest place to be when the bullets began flying.\n\nThe Americans tried to cross the fields and were quickly repelled. Though they greatly outnumbered the Germans, they weren't about to try an unsupported assault. Within two hours, bulldozers had widened the road by uprooting trees and pushing them to the side. In another hour three tanks were on scene. \n\nThe tanks moved out, firing into the woods. Some troops followed the tanks but most fanned out across the two fields. When the Americans reached the two piles of rubble, they took cover with the infantrymen firing whenever they could identify a target and often even when they couldn't.\n\nOne squad of Americans found the old couple and the nurse in their hiding place. They motioned them to stay down. The three civilians covered their ears as the fighting continued. It took close to three hours more before the Germans were pushed back and the fighting moved into the woods.\n\nEven then the three stayed in their hiding place as stray rounds struck the rubble protecting them. Fortunately, some of the American troops had tossed K rations to them before moving forward. It was scary and boring but at least they ate well. There was even a chocolate bar for dessert.\n\nThe war quickly moved on and peace returned to the little clearing. The nurse and the old couple spent their time finishing the kitchen. There was no ceiling and the stone walls wouldn't be permanent until they had been stuccoed but it gave them hope to have one room done. \n\nNo one knew what had become of the American. The old man had checked the cave and it was empty except for a few supplies and empty containers. They all hoped the American had survived and moved on with the rest of the Allied army.\n\nA month later, the nurse's uncle arrived. With him were her parents. They had managed to travel through the German and American lines and waited in safety until they could return. With all six working together, the old couple's house was finished with two bedrooms, a bath, and a living room.\n\nThe group then started working on the uncle's house, clearing the rubble. The uncle left the one corner standing where it was as a reminder of the war. A new house would be built five meters away.",
        "April came and with it news that the Germans had surrendered. It was time for planting. A friend from the village brought his team of horses to plow both fields. There were gaps in the furrows where unexploded shells lay partially buried in the dirt.  \n\nAllied teams were slowly moving through the countryside removing or exploding shells but it would be months before they reached the little clearing.\n\n- - - - -\n\nTwo years later, the nurse decided to try to find Kurt, the German Lieutenant, and Hank, the American Captain. Had they lived through the war? Had they returned home? She wrote letters to the German but heard nothing back. That didn't necessarily mean anything. Many people in Europe were still refugees or had settled in new places.\n\nIt became her fixation and, after waiting a few months for a reply, she decided to go to Kurt's village. She made her way across the border and found the right place. Or what remained of it. It had been hit several times by the Allied bombing campaigns and almost no buildings were still standing. Good fortune smiled on her as she found a cousin of Kurt's who knew where he had gone. \n\nThe German was tired of war so he had moved across the border to Switzerland. Colette found him living above his small butcher shop, alive and well. \n\nThe Lieutenant had fought with the mortar unit until the surrender. Like many German officers, he had been held and interrogated by the Americans. Once they were convinced he was neither a Nazi nor a war criminal, they had let him go. \n\nKurt laughed as he told Colette, \"Sometimes I wish I was back there. Those Americans ate well and so did the prisoners. The guards were decent people.\"\n\nHe sat silent. \"One of the guards gave me a piece of cake his mother had sent him. He told me she sent him one every month. The piece he gave me was still fresh. Can you imagine? We were almost starving at the end and the Americans were shipping fresh cake across the ocean. How could we possibly have won against a country that could do that?\"\n\nKurt began weeping. Colette held him until he stopped.\n\n\"I want to see that country. It must be full of wonders. Will you come with me? To find Hank and see that great country?\"\n\nWithout hesitation, Colette agreed. Kurt and Hank were like brothers to her. They had protected her and shared so much in such a short time.\n\nTheir journey began as a reversal of Colette's trip. First back to Kurt's village where he sold his butcher shop to his cousin. Then back to the little clearing so the nurse could tell her parents she was leaving for America. \n\nHer parents were not pleased with Kurt until Colette explained how he had protected them from other deserters and later, with the American, protected them from the seven criminals. They cried as their daughter prepared to leave but they wished her good luck. Her mother hugged Kurt and whispered, \"Keep her safe.\" \n\nThe old woman slowly crossed the road. Her husband had died while Colette was gone. The old woman knew she would soon follow. She took Colette's hands in her own. \n\n\"You have been like a daughter to us these last years. Our son died in the war. You are the only family I have left.\"\n\nThe woman's hands shook as she removed her engagement ring and her wedding ring. Rings she had hidden from the Germans during the war. She pressed them into Colette's hand.\n\n\"I hope you fall in love and have many children. Tell them about us, so we are remembered.\"\n\nThe old woman hobbled away. Colette closed her hand around the rings and cried.\n\nKurt and Colette used the rings to pretend to be husband and wife. The charade minimized questions during their travels. In the nearby village, they encountered an American with a car and a French bride. The newlyweds were heading to Le Havre where they would catch a ship across the ocean. \n\nTold about Hank, the rancher in Colorado, the American invited them to ride with him and his wife. \n\n\"I don't know much about Colorado,\" he explained, \"I'm from New Jersey.\" \n\nIt was almost 500 kilometers to Le Havre and the trip took three days. Many roads had been patched together after repeated bombings so one couldn't drive very fast. In addition, there were still many people on the move, making roads congested.\n\nSome were like Kurt and Colette, heading for the coast to start a new life elsewhere. Some were refugees trying to return home. Some found home no longer existed and were looking for a new start. \n\nAt the port, American soldiers were checking papers for all those wanting to head to the United States. Fortunately, Kurt had been given paperwork when he had been released as a prisoner of war that allowed him to board with little questioning.\n\nColette had to answer more questions but once she said she was a nurse she was allowed to board also. Medical professionals, especially civilian nurses, were in short supply in the States. Many of the women who had served as Army nurses had gone home, settled down, and were starting families. They had seen enough patients on the battlefield to last a lifetime. Other women stayed in the Army to tend to the wounded soldiers who still needed care.\n\nThe ship they were on was slow and it took almost two weeks to arrive in New York. To save money, Kurt and Colette were in second class. Not as bad as third class but still overcrowded and underserved. Mealtime was the worst. If you arrived late, you were likely to eat only random scraps left over from the earlier feedings. \n\nThe first time they arrived late, it reminded Colette of the K rations the American soldiers had given her during the assault through the clearing.\n\n\"They had meat and cheese and biscuits in them! One had a chocolate bar. Another had caramels. There were cigarettes and gum. Little packets of salt and sugar. Things we could never get during the war. It's like you said about the cake. How can you defeat people who can afford to put gum and candy in soldier's rations?\"\n\nKurt and Colette shared a cabin with two other couples. By unspoken agreement, the men all slept on the lower berth of the bunk bed. If there were to be any trouble, the men could be up and respond quickly.\n\nFortunately, there wasn't any trouble. The time passed quickly with card games, impromptu dances, and strolls around the deck. There were people from all over Europe as well as a few Americans. They were all heading for the New World to start a new life, in one way or another.\n\nThe ship docked in New Jersey. The skyline of New York City rose across the river. Both travelers were overwhelmed. The biggest city they had ever seen was Le Havre and New York was impossibly bigger. It was a temptation they couldn't resist.\n\nKurt and Colette took the bus to the city. They found an inexpensive hotel in Greenwich Village and ate at a tiny diner in the next block. \n\nThey were amazed at everything. Europe was in ruins, the economy barely functioning, people struggling to find food. The whole continent surviving largely because of the Marshall Plan. \n\nHere nothing had been touched by the war. The skyscrapers had glass in the windows, not plywood. The church steeples had not been tumbled down by air raids and artillery shelling. The food was plentiful. Even the mannequins wore silk stockings.\n\nAt the tiny diner, they ate pork chops, fresh vegetables, ice cream, and apple cobbler. There was tea and coffee and something called Pepsi to drink. They could barely finish, there was so much food. \n\nIt was too much, almost sickening compared to what they were used to. They had spent months rebuilding the old couple's home in France. Now they heard that hundreds of homes were being built almost overnight in Long Island.\n\nBefore they left, they asked at the hotel how to get to Colorado.\n\n\"I don't know exactly. It's out west somewhere. Go down to Grand Central Station. They can get you on a train or a bus headed in that direction.\"\n\nThat is what they did. At Grand Central Station, they realized a train was going to be too expensive. They had money left over from selling Kurt's butcher shop and some money Colette had saved but it would take most of it to take the train. \n\nOnce they got to Colorado, they would need money to find Hank, so they bought tickets for the bus. The cheapest tickets were on a regional bus line to Chicago. It would take them four days and three nights to reach their destination.\n\n\"Is Chicago close to Colorado?\" Kurt asked. \n\n\"About halfway, I guess,\" replied the ticket agent. He didn't seem to think that was a big problem.\n\nFour days to get halfway to Colorado? And Colorado was only partway across the whole country? You could drive across most of Europe in four days. No wonder America could send cake across the ocean in the middle of a war and give chocolate and caramels to a million soldiers. \n\nColette and Kurt were just beginning to understand the massive size of the new country. The bus they boarded was a local, meaning it stopped at a variety of smaller cities and towns along the way. Kurt and Colette looked out the window at the countryside.\n\nThe urban environs of New York City soon gave way to agricultural land in western New Jersey. Philadelphia followed. Others on the bus told them about the role of Philadelphia in the founding of America.\n\nThere were dairy farms with red barns, mushroom farms (who knew?), and wheat fields as they passed through the rolling hills of central Pennsylvania. Nearing Pittsburgh, steel mills threw off great clouds of smoke as they produced raw material for cars and refrigerators and all sorts of other goods. The same mills had once produced steel for tanks and planes and rifles.\n\nThey skirted the gentle shore of Lake Erie for miles and miles until the bus reached Cleveland, the first big city since New York. Farms gave way to factories. Kurt was surprised to learn from a fellow traveler that Cleveland was a port city, with ships sailing to the Atlantic via the St Lawrence River. \n\nFactories and small cities continued to follow the shoreline until Toledo. There the farms returned. The land was flatter and the farms were bigger than in Pennsylvania.\n\nThe farms were of special interest to Colette. She had grown up as a farmer's daughter. Their farm was considered large at 100 acres. Now she watched as the smallest farms to be seen were that size. She watched as miles of perfectly good farmland was covered by a forest of trees.\n\n\"Who owns it? Do they cut the trees for lumber? Why don't they farm it?\"\n\nAn older man peered out the window. He was wearing coveralls and said he was a dairy farmer in Illinois.\n\n\"It's just empty land. Probably nobody owns it.\" He looked at the French woman quizzically. \"There's plenty of trees to cut elsewhere. Better trees than those. And there's already plenty of land for farming.\"\n\nHe shrugged as if to say 'no big deal'. Colette couldn't understand it. Who would let good farmland go to waste? How could no one own it?\n\nBut the longer she watched out the window, the more she understood. There was so much land. It went on and on and on. There were plenty of farms and cities; plenty of towns and rivers and lakes. Yet, in between, there was always more land, empty and unused.\n\nIt wasn't until they got to a large city that the empty land disappeared. Except it didn't really disappear. When Colette looked, it was still there. Tucked along a riverbank behind a building would be a stand of trees. A rocky hill would jut up covered in brush. Even as they made their way into downtown Chicago, Colette could see vacant lots covered in weeds and a few saplings. \n\nKurt and Colette spent three days in Chicago at another inexpensive hotel. They needed to bathe and rest after four days on the bus, never getting off except for meals and bathroom breaks. \n\nThey need to stretch their limbs so they walked through the city, admiring the buildings and stores. They visited Marshal Fields, the 12 story behemoth of a store, and Kurt insisted on buying a scarf for Colette. \n\nThe pair chatted with locals in small parks and on front stoops. The duo wasn't quite as overwhelmed as in New York. They were getting used to America. They sampled Chicago deep dish pizza which they agreed was the most delicious thing they had ever eaten.\n\nFinally, it was back on the bus again. A nicer bus with more comfortable seats. It even had a bathroom on board. Would wonders never cease?\n\nThey headed across western Illinois, Iowa, and Nebraska. America's agricultural heartland. The rolling hills disappeared. The land was flat and got flatter. The duo discovered how much more land America had. It was mile after mile after mile of corn, wheat, rye, barley, and soybeans. There was the occasional grain silo, a few houses, a small crossroads town with a gas station and then more miles of crops swaying in the wind. \n\nColette could never have imagined it if she hadn't seen it herself. It was all so big and all so new. She glimpsed a sign that said 'Portersville, Established 1876'. \n\nEurope was so old in comparison. Her uncle's house, the one destroyed at the little clearing in France, had been older than that. The nearby village had houses dating to the 1400s. \n\nThis country was new and raw. She found it exciting. Kurt, the butcher, found it boring until they reached western Nebraska. Then they began to get glimpses of cattle on the range. Kurt was confused by the barb wire fences that stretched for miles but only had a few dozen cattle visible.\n\nA man who had just joined the bus said, \"Oh, they just let the cattle out to graze. There might be 1,000 head on that ranch. You just don't see most of them.\"\n\n\"How big is the ranch?\"\n\n\"Maybe 500 acres or more. Here in Nebraska, they'll put maybe 1,000 head on 100 acres or so and rotate them around to different pastures.\" \n\n\"Do they raise cattle in Colorado?\"\n\n\"Oh yeah, lots of cattle. But they generally do it the old fashioned way. They just let the cattle out to wander wherever they want until its time to round them up. In Colorado, 500 acres is a small ranch, hardly worth talking about.\"\n\nThe bus let them out in Denver. They breathed in the fresh mountain air. Kurt felt himself relax at the sight of the Rockies. He had grown up with the Alps always in sight and hadn't realized how much he had missed the mountains.\n\nThe contrast between the Rockies to the west and the plains to the east was startling. The Rockies seemed to rise straight from the plains with no gentle foothills as a transition. The peaks were tall and sharp. Not like the mountains in the east or even the Alps. The Alps were as tall, maybe taller, but they were softer. The peaks had been worn down by weather.\n\nOnce again, Kurt and Colette found an inexpensive hotel. Now the hard part of the search would begin. All they knew was that Hank Powell used to have a ranch somewhere between Last Chance and Limon. They asked around at the hotel and the restaurant until they found someone familiar with the area.\n\n\"Don't know Hank Powell myself. There's a bunch of ranches in that area. But it's only 40 miles from Last Chance to Limon so it shouldn't be too hard to find him. Unless he's closer to Anton or Arriba. They're about 30 miles further east.\"\n\n\"So we have to search 1,200 square miles for our friend?\" asked Kurt, clearly surprised at the effort that would be required.\n\n\"Yeah, about that,\" said the stranger as he paid his lunch bill, \"Shouldn't take too long, I wouldn't think.\"\n\nKurt and Colette weren't used to life and distance in Colorado. They didn't understand that Last Chance, Limon, Anton, and Arriba were the only four towns in the area. They didn't understand there were only four main roads through the area. They didn't realize there were only 5,000 people in an area twice the size of Luxembourg.\n\nThey decided taking the bus would be a waste of time. It would take a day to move from town to town on the local bus and, once they arrived, they wouldn't be able to visit any of the surrounding ranches. The clerk at the hotel solved their problem. He called his uncle who owned a car dealership.\n\nThe uncle offered to rent them a car for seven days. It would cost half their remaining money. If it broke down, they would have to fix it themselves. He also wanted some sort of collateral to make sure they brought the car back. Colette gave him the engagement ring that had been given to her by the old woman in France.\n\nDeal arranged, Kurt and Colette spent one more night in the hotel. From now on, they decided, they would sleep in the car to save money. \n\nThe pair set off early in the morning. It took them almost four hours to reach Last Chance. The roads weren't good and they got lost twice getting out of Denver. Last Chance was barely a town. There were half a dozen homes, a church, a diner, a gas station, and a feed and hardware store. The couple ate a light lunch and decided to fill the car up with gas. They had been warned that gas stations were few and far between.\n\n\"You know a man named Hank Powell? He's supposed to live around here somewhere,\" Kurt asked in his German accent.\n\nThe gas station attendant looked wary. What did a foreigner want with Hank Powell?\n\nColette recognized the look. She jumped in. \n\n\"We met him during the war. He helped me and my friend out. We owe him our lives. He told us he lived around here. We wanted to thank him.\"\n\nThe attendant looked her over closely. An attractive unmarried woman with a French accent? The attendant couldn't resist.\n\n\"Head down that way about 20, 25 miles,\" he said pointing to a crossroad. \"You'll see a sign for Peaceful Clearing Ranch on the left. Take that road about 10 miles until you get to the house.\"\n\nThe man appraised them again. Not ranchers for sure.\n\n\"There's a couple gates on the road. Make sure you close them behind you so the cattle don't get out.\"\n\nHank rode his horse toward the house. The sun was setting. He had spent the day fixing fences and making sure the water barrels were full. Cattle ranching meant long and lonely days.\n\nThere was a car parked by the house. He didn't recognize it. Cattle ranching involved lots of land and few people. He knew everyone, and their vehicles, within thirty miles.\n\nThere was someone on the porch, in the old rocking chair. Someone else on the steps. Hank loosened the rifle in its holder. Better safe than sorry. More than one rancher had been robbed by strangers who thought all cowboys kept their money under a mattress.\n\nThe people on the porch stood and walked toward him. A man and a woman. The woman started to run, holding her hat with one hand and waving with the other. The man gave a thumbs up.\n\nHank touched his heels to his horse's flanks. The horse sped up to a fast trot down the packed dirt driveway. \n\nHe reined his horse to a stop and got off in one fluid motion. Colette jumped into his arms, giving him a kiss and a hug. Kurt wasn't far behind, a grin on his face.\n\n\"It took us a while to find you, my friend. America is a big place.\"\n\nThey shook hands and hugged. The three friends went inside to swap stories and eat. \n\n- - - - - \n\nKurt and Colette never left Colorado. \n\nTwo days after they arrived, there was an accident at a neighboring ranch. Colette went with Hank and used her nursing skills to save the man's leg. She became the person who was called whenever there was an accident or a serious illness or a baby that needed to be delivered. \n\nA few months later, Colette passed the nurses' exam to become fully licensed in Colorado. She and a doctor in Anton were the only medical people to serve 1,200 square miles.\n\nThree years later, she married the man whose leg she had saved. She wore the wedding and engagement rings the old woman had given her. Colette's two sons were named after her two friends from the war.\n\nKurt used his skills as a butcher to create a new business. He talked a Denver hotel into letting him provide fresh beef steaks for their restaurant. Hank and neighboring ranchers would give him high quality cattle to butcher. ",
        "The meat would be sold to the hotel at a premium. The proceeds were split between Kurt and the ranchers. It was 'farm to table' before anybody thought to call it that.\n\nKurt married the daughter of a rancher. They had four children, including a daughter, Colette, and a son, Hank. The other two were Pierre and Marie, after the old couple from the clearing.\n\nHank gave Kurt and Colette each ten acres of land out by the highway. Not much by Colorado ranching standards. But plenty for a house for their families. A clinic was built for Colette and a butcher shop was built for Kurt.\n\nHank, they discovered, owned 10,000 acres of land and ran 20,000 head of cattle. He was one of the largest ranchers in the area. \n\nHank never married and never had children. When he died at age 67, his will stated that the ranch was to go to a conservation group and be returned to prairie land. The cattle were to be auctioned off with the money going to his two friends.\n\nWhen they packed up his house, Kurt and Colette found a small locked room off the master bedroom. They found the key and opened it. \n\nInside was a chair. It was the chair Colette sat on when hiding from passing deserters. How it had gotten from France to Hank's house in Colorado was a mystery.\n\nThe chair was positioned to look out the window facing toward the east. Toward the little clearing in the woods.\n\nOn the wall was the M-1 rifle Hank had carried during the war. The rifle he had used to protect them from the escaped prisoners. Hanging nearby was the greatcoat that he had worn as a disguise while pretending to be a sentry.\n\nHank had once told Colette that he thought the time spent in the little clearing had been the high point of his life.\n\n\"You know why you go to war? To protect people you care about. To make things better in the end. But it's all an abstraction when you're in the middle of the fighting.\" \n\n\"In that little clearing, it wasn't an abstraction. It was real. It was you and the old couple that I cared about and wanted to protect. It was rebuilding their home so their life would be better. It was the best thing I've ever done.\""
    ],
    "authorname": "Merganser20",
    "tags": [
        "friends",
        "german",
        "nurse",
        "soldiers",
        "world war 2",
        "ww2"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-checkpoint-1"
}