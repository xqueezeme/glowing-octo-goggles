{
    "title": "Kelsey's World Ch. 27",
    "pages": [
        "The change of seasons toward winter depressed Charity. It wasn't the cold weather that got to her, although she did miss the carefree, naked days by the poolside at Brie's. No, it was the coming holidays and her first trip home since graduation that filled her with dread. \n\nShe had a flight into St. Louis on the Wednesday before Thanksgiving. Kelsey and Brie drove her up to the airport in the city. It was Charity's first time there, so they went early and they gave her a little tour \u2014 up on University Hill where Kelsey went to art school, past the run-down house near the campus where she lived with her roommate Hannah, and down to the Warehouse District downtown. They pulled up to the curb outside Tucker's Studio.\n\n\"That's it?\" Charity asked. \"I didn't picture it like this at all.\"\n\n\"Yeah, it's a nice neighborhood,\" Kelsey said. \"We'll have more time when you come home Saturday. If there's an amateur doin' a scene we can go in and you can meet everybody.\"\n\nCharity's heart skipped a beat. The thought thrilled her but terrified her, especially with her stern father's Bible readings looming in the near future.\n\n\u2014\n\nCharity licked salty sweat off the hard, stubby cock. It was only half the size of Austin's, she thought to herself, as she looked up into her father's eyes. Has Mom ever had a big one, she wondered, or just this little thing?\n\n\"This is Captain James,\" a loud voice said, startling Charity from her blurry, unsettling dream. \"We'll be landing in St. Louis in just a few minutes...\"\n\n\"Damn it!\" she mumbled softly. She straightened the wrap-around shirt that had gotten disheveled in her slumber, and smoothed her linen pants. Both articles of clothing were much different that what she'd worn when she left home for college, and they were damp with perspiration from her dream and the realization that she was just moments from seeing her father. There was no question he would disapprove of the blouse, and probably the fit of the slacks, too. The blouse showed a hint of cleavage and was a bit see-through in the right light, and the pants showed off her behind in a way she never dared when she lived at home.\n\nCharity had chosen both articles of clothing very carefully. She wanted to make a statement right off the bat. She was a sexual woman, and proud of it, but she knew it would mean war with her father. The clothes were meant to stake out her turf, right from the get-go.\n\n\"Charity? Oh my gosh!\" \n\n\"Hi, Mom!...Daddy didn't come with you?\"\n\n\"No, you know how he hates traffic. Oh my gosh, Sweetheart, you look wonderful! You're...not a girl anymore, are you...\"\n\nCharlene looked her daughter over, with a bit of envy in her eyes. Charity was pleased there was nothing more.\n\n\"Your father might not appreciate those New York clothes, but you really do look wonderful.\"\n\n\"Mom, upstate New York's not much different from Missouri. Our house is surrounded by farm fields.\"\n\n\"I know you told me that, but New York just seems so...different, and far away.\"\n\nCharity smiled sadly at her mother's innocence. Living her life under Clifford Witbro's thumb had stunted Charlene's knowledge of the world. Charity was glad to have escaped for college, and doubly glad that fate had put her together with Brie in the dormitory. \n\n\"How is Daddy?\" Charity asked.\n\n\"Oh, he's fine. You know your father...\"\n\n\"Who's coming for Thanksgiving? Are we gonna have a full house again?\"\n\n\"Yes,\" Charlene said. \"Aunt Silvia and Uncle Don. Three of your cousins \u2014 Jimmie, Mark and Jennifer. Mark and Jennifer are bringing dates. Your Great Aunt Lottie's coming. Edwin and Pauline from Church. Craig said he'd stop by.\"\n\n\"How's he doing without Mary?\" Charity asked. \"I still can't believe she died.\"\n\n\"He's okay I guess. He keeps to himself in that big house, which isn't good for him. I had to pester him to get him to come tomorrow.\"\n\nIn the car on the way home, Charity thought about Craig. He and his wife Mary lived next door throughout Charity's childhood. Craig was the first older man that had ever caught Charity's eye, a thin but well built gentleman with an easy smile and a habit of working shirtless in the yard. Charity's father Clifford didn't approve. He knew Charlene was sneaking glimpses, so one day he confronted Craig about his bare-chestedness. Craig nodded and looked serious, but it didn't alter his behavior. Charlene and Charity were both glad about that.\n\n\"Wake up, Sweetheart. We'll be home in a minute.\"\n\nCharity opened her eyes and tried to shake off her grogginess. The old neighborhood was passing by outside the car windows. She'd been home for all the holidays ever since she left for college, but returning this time felt different. She was a new woman, fully indoctrinated into the sexual world. It was a huge change for Charity, and seeing the neighborhood where she grew up brought it all home. She wondered what confronting her father would be like, but she didn't dwell on it. Just let it happen and be yourself, the way Kelsey would, she said to herself.\n\n\"I can't believe you traveled with just this one little carry-on bag,\" Charlene said. \"I'd need one this big just for my underwear.\"\n\nCharity smiled. She remembered filling half a big suitcase with underwear when she left for college \u2014 a dozen big grannie panties, a half-dozen industrial strength bras, a drawer full of slips and camisoles designed to eliminate the tiniest bit of \"see-through.\"\n\nWhen she walked up to the house she felt every molecule of her ass wiggling in a way she hadn't noticed before. Maybe the thin linen pants and tiny lace panties weren't the best choice...\n\n\"Hi, Daddy,\" she said.\n\n\"Charity,\" he said, sternly. \"How was your flight?\"\n\n\"Good. Easy. I like it when it's easy.\"\n\nShe watched as her father's eyes looked her over. He didn't say anything, but she could tell he didn't approve.\n\n\"Aren't you cold, Charity?\" Charlene asked. \"Would you like a sweater?\"\n\n\"Oh, yeah, I guess I'll change. Is my room...?\"\n\n\"It's still yours, Sweetheart,\" Charlene said. \"I haven't wanted to change it yet. It seems so odd having you gone for good.\"\n\n\"It'd make a nice sewing room, Mom. You could spread out your quilts and have lots of room to work on them.\"\n\n\"Yes. Yes...maybe I'll do that after you leave. You wouldn't mind?\"\n\n\"No, Mom, it'd be nice. You deserve a nice space of your own.\"\n\nCharity glanced at her stern looking father, wondering if he'd give the okay for such a change in the household. He didn't give any indication one way or another.\n\nCharity walked down the long hallway and turned the corner into her bedroom. It was just as she'd left it, but looked freshly cleaned and dusted. The pale yellow walls looked a bit less bright and cheerful than she remembered. The passages of scripture that her father had framed and hung on the walls when she was young struck her as odd and inappropriate. It was the first time she'd ever felt that way about them. The big, plastic Jesus-on-the-crucifix that loomed over the head of her twin bed gave her a sick feeling in her stomach when she looked at it. She was temped to hang her old childhood bathrobe over it to cover it up, but she knew doing something like that would send her father into a rage. Her secondary thought was to strip and lie naked on the bed, right under the plastic Jesus, and let him watch as she fingered herself to a much needed orgasm. It was the stress of travel that made her feel the need. That, and the thoughts about Craig next door, and cousins Jimmie and Mark.\n\nDoing such a thing was beyond her, though, She knew her mother or father could walk in at any moment, the way they always used to do. Just showing her newly sexual body in her skimpy, lacy underwear was a plenty big step, to plastic Jesus and whoever else might walk through the door.\n\n\"Charity!\" Charlene said as she entered. She shut the door quickly behind her. \"Oh my!\" Her eyes took in every goosebumpy inch of her daughter. \"Is that what you wore? On the plane?\"\n\n\"Mom, I had clothes on, remember?\"\n\nCharlene didn't know exactly what to say, so she moved slowly to the edge of the bed and sat there, watching as Charity pulled on some tight, faded bluejeans and a sweater that hugged her breasts more than Clifford would approve of.\n\n\"Maybe you should wear one of mine. For your father, you know?\" Charlene said. Her eyes were taking in all of the curves the sweater showed off.\n\n\"He's gonna have to get used to it, Mom. I'm not a little girl any more.\"\n\n\"Oh, he knows that, Sweetheart. But you know how he is...\"\n\nCharlene nearly whimpered with dread when Charity turned and she got a look at the way the jeans showed off her bootylicious ass. Charlene knew her husband wouldn't be able to stay silent for long.\n\n\"What time is everyone coming tomorrow?\" Charity asked.\n\n\"Two o'clock. Would you like to help me cook in the morning?\"\n\n\"Of course,\" Charity smiled.\n\n\"What are you wearing tomorrow?\" Charlene asked, as she watched Charity unpack the rest of things.\n\n\"I bought this last week,\" Charity said, holding up a two-tone mauvey brown sweater dress. She smirked at the look of uncertainty on her mother's face. \"Don't worry, its got a high-cut neck, and long sleeves.\"\n\nCharlene wasn't sure she should stop worrying. She could tell from looking at it that it would hug Charity's form, and the pleaty-looking bottom third looked to be well above the knee. She swallowed hard and didn't say anything.\n\nCharity and Charlene were both surprised that Clifford didn't comment on Charity's tight jeans and sweater. Siting at the dinner table, just the three of them, brought back a flood of memories for Charity. It was an enjoyable meal, with much reminiscing about the old days, Charity's old friends from school, and her success on the high school tennis team.\n\n\"You look like you're still in good shape, Sweetheart,\" Charlene said as she served brownies and vanilla ice cream for dessert. \"Do you still play?\"\n\n\"No. But Brie and Kelsey and I stay active. We burn calories every chance we get.\"\n\n\"They say that's the best way,\" Charlene said. \n\nCharity smiled.\n\n\u2014\n\n\"Charity, I'd appreciate it if you'd wear something else,\" Clifford said, trying his best to sound diplomatic. Charity had just emerged from the hallway on Thanksgiving afternoon, ready to meet the soon to be arriving guests. \"Your old clothes are still in your closet,\" he said.\n\n\"I bought this special, Daddy. And I don't fit in my old clothes, anyway. Mom, you should take all that stuff to Goodwill.\"\n\n\"I will, Sweetheart, if you're sure,\" Charlene said.\n\n\"I'm sure.\"\n\nClifford could barely look below Charity's shoulders, but he did, just enough to see how the pretty sweater dress clung tightly to his daughter's hourglass figure, and how the much-too-short bottom of it draped over the sexy curve of her buttocks. It didn't help that Charity's nerves had switched on her hard-at-the-drop-of-a-hat nipples. Her minimalist bra did little to hide them.\n\n\"I won't have you dressed like that, in my house or anywhere else,\" he said, sternly, trying to keep his cool.\n\n\"Daddy, I'm twenty-three years old, I have a good job, I live on my own halfway across the country. I think I can dress myself now.\"\n\n\"Young lady!...\"\n\n\"Charity, would you baste the turkey for me?\" Charlene asked.\n\n\"Sure, Mom.\"\n\nCharity was glad to leave the tension of the living room. Leaning over the heat of the open oven, she wondered what her mother was saying. She squirted steaming juice over the massive turkey with the basting bulb, thinking how it reminded her of a big cock and balls, ejaculating all over the browning bird. She had a sudden craving for a big glass of bourbon, but her father's house was dry. Not a single drop of drink had ever crossed the threshold, as far as she knew.\n\n\"Is he going to make me go eat at a restaurant?\" Charity asked when her mother joined her in the kitchen.\n\n\"Of course not, Dear!\" Charlene said. \"We'd better put the potatoes and other things in to start warming up.\"\n\nNot a word was spoken about the dress. Charity was surprised that her mother had been able to smooth things over so easily. It wasn't like Clifford to let something like that go.\n\nWithin an hour, the house was full. Charity was thrilled to see everyone, and all were amazed at her transformation. Her newly confident personality was easy to see, but it was her body language and physical presence that truly wowed the crowd. The tight little sweater dress was a stunning change from the drab, white-collared church dress that she'd worn the last time they were all together, at Christmas almost a year ago, and she really knew how to wear it! The little girl was gone \u2014 she moved like a woman, and did so proudly. \n\nIt infuriated Clifford. All that work he'd done, all those years of teaching her the church's way was the only way \u2014 it seemed to be all for naught. Charity had found the world, and it was pretty clear to him that she'd fucked it.\n\nWatching her flirt with her male cousins sent him into a fit of scripture quoting, which surprised everyone. He stood, arms up like a preacher, his deep voice bellowing through the crowded living room...\n\n\"But I see another law at work in my body! Warring against the law of my mind! Holding me captive to the law of sin that dwells within me...\n\n\"Those who live according to the flesh set their minds on the things of the flesh! But those who live according to the spirit set their minds on the things of the spirit...\"\n\nCharity and her cousin Jimmie took it as a good opportunity to go outside for some air. They were chatting casually, leaning against the cars in the driveway when Craig wandered over from next door, fashionably late.\n\n\"Oh my gosh!\" Charity said, smiling beautifully. \"Craig! You clean up nice!\"\n\n\"Hi Charity. Gosh it's good to see you,\" he said. He had his hands in his pants pockets, feeling over dressed in his charcoal-gray suit and tie.\n\nCharity couldn't resist hugging the sweet man for the first time in her life. \"I'm so sorry about Mary. What an awful thing.\"\n\nShe hugged him tight, for a good long time. Craig melted into her warmth with misty tears in his eyes.\n\n\"Thanks, Charity. She really liked you, you know,\" he said.\n\nThe hug separated, but Charity didn't move far away.\n\n\"You look...amazing,\" Craig said, looking her over from bottom to top. \"College was good for you. I knew it would be.\"\n\n\"Did you? You thought about that?\"\n\n\"Sure. It was time for you to learn about the world.\"\n\nCharity smiled. She had a feeling he was talking about the men of the world, and she agreed.\n\n\"Daddy's not happy with the new me. He's quoting the Bible in there,\" she said, gesturing toward the house. \"I don't suppose you could fix us up with a quick drink, to take the edge off?\"\n\nCraig smiled. He knew all to well the Witbro house was dry. \"I was wanting one myself, before I came over, but I thought maybe everyone would smell it on my breath.\"\n\n\"Fuck that,\" Charity smiled. \"Got any bourbon?\"\n\nCraig laughed. He'd laughed precious little since his beloved Mary had died. Charity was like a breath of fresh air he hadn't expected. \"Tell you what,\" he said. \"Let's set up a little bar in the garage, and whoever wants to use it is welcome.\"\n\n\"Daddy might never talk to you again,\" Charity said, with a twinkle in her eye.\n\n\"As long as your mom does, I'm cool with that.\"\n\nCharity chuckled. She had a quick vision, sort of an undressing-him-with-her-eyes thing, of Craig standing there bare chested in his nicely cut suit pants.\n\n\"You've met Jimmie, haven't you?\" she asked, as she and her cousin followed Craig into his garage.\n\n\"Sure, Jimmie, how are ya?\"\n\n\"Good, Craig,\" Jimmie said. The two men shook hands. \"I was really sorry to hear about your wife.\"\n\n\"Yeah, it sucks,\" Craig said. He took a deep breath. \"But, life goes on, right? Are we all on bourbon, or would you like a beer?\"\n\n\"Yeah, whiskey sounds good,\" Jimmie said. \"I don't wanna fill up on beer before all that good food. Did you help cook, Charity?\"\n\n\"I did. The turkey's a big one. I squirted all over it this morning.\"\n\nJimmie chuckled under his breath. He was pretty sure Charity was making a wildly inappropriate sexual reference, but something like that was so diametrically opposed to the old Charity, he couldn't be sure. He got a quiet tingle when he noticed Charity's nipples poking out the front of her sexy dress. The girl had blossomed into something new, that was for sure.\n\nIt only took Craig a minute to go into the house and emerge with a bottle and a stack of plastic cups. Charity downed a shot right away.\n\n\"Oh, fuck!\" she said quietly. \"I needed that. I should have brought a bottle with me.\"\n\nCharity heard voices. Cousins Mark and Jennifer and their dates were outside in the driveway.\n\n\"Over here you guys!\" Charity waved.\n\nThe bottle of Wild Turkey lost half its contents before the gang walked over to the house for Thanksgiving dinner.\n\nAfter the big feast, the kitchen counter became a self-serve pie dispensary. Apple pie, pumpkin pie, berry pie, and Great Aunt Lottie's mincemeat pie were all devoured. The simmering bourbon buzz combined with the sugar rush made Charity giddy. It didn't go unnoticed by her father. The happier she got the sexier she moved. The gossamer thin lace that pretended to be a bra seemed to be doing less and less to control her jiggly tits. When she giggled her way back into the house, hard nippled and happy after another round of shots in the garage next door, Clifford had had enough.\n\n\"Cover yourself, child,\" he bellowed, \"or get out of my house!\"\n\n\"Daddy, we have guests, you know,\" Charity said.\n\n\"Clifford, it's all right,\" Charlene said, trying to calm him. \"Why don't you play cribbage with Don.\"\n\nClifford raised his arms toward the ceiling again and bellowed... \n\n\"And of Jezebel spake the Lord, saying, the dogs shall eat Jezebel by the wall of Jezreel!\"\n\nCharlene looked crushed. \"Clifford, please don't do this.\"\n\nHis arms went higher, and his voice grew even louder... \"Do not prostitute thy daughter, to cause her to be a whore; lest the land fall to whoredom, and the land become full of wickedness!\"\n\n\"A whore, Daddy? Really?\" Charity said. \"Fuck you!\"\n\nAudible gasps were heard in the quiet room.\n\n\"Anybody ever tell you you're an asshole?\" Charity continued. \"Yeah, I like to fuck. I like it a lot. So does everybody in this room other than you, probably. But I'd never take any money to do it. I'm not a fucking whore!\"\n\nEveryone in the room was stunned. Charlene was crying.\n\n\"Give me a ride to a hotel?\" Charity asked Jimmie, before storming off down the hall to her room.\n\nSilvia tried to console her sister Charlene. \"Go to her,\" she said.\n\nCharlene sobbed her way down the hall and knocked quietly at Charity's door before going in.\n\n\"Oh Mom...\" Charity said, crying right along with her sweet mother. \"I love you, you know that, but I can't stay here with him. He's gonna have to get used to me, one of these days.\"\n\n\"I know, Sweetheart,\" Charlene said. She wiped her tears and hugged her daughter tight. \"I know.\"\n\nCharity walked back into the living room, pulling her carry-on bag behind her. \"I'm doing what you want, Daddy, but I wish I wasn't. If you want me out, I'm out.\"\n\nClifford was stone-faced and silent.\n\n\"It was great seeing everybody,\" Charity said, making the rounds to hug everyone. Craig got a well hidden kiss on the cheek. \"Make Mom smile once in a while, will ya?\" she whispered in his ear.\n\nCharlene walked out to the driveway with her, with Jimmie following.\n\n\"I had a feeling this would happen some day,\" Charlene said. \"It's not so bad, though. No blood was shed. We'll get past it.\"\n\n\"You're the best mom ever,\" Charity said quietly as she hugged her. \"Don't ever forget that. I'll call you later. Maybe we can go shopping or something tomorrow.\"",
        "\"Yes! Oh, I'd love that!\" Charlene said, wiping away another tear. She watched as Jimmie's car pulled away, and went back inside to try and salvage the party.\n\n\u2014\n\nJimmie pulled up in front of a cheap motel not far from the airport.\n\n\"You sure you want this one?\" he asked. \"It looks kinda sleazy.\"\n\n\"I'm not a fancy girl, Jimmie. And anyway, it says BAR, all lit up in neon. Let me check in and then I'll buy you a drink.\"\n\n\"Jesus, Charity, you're drinkin' me under the table today.\"\n\nCharity smiled her irresistible smile, grabbed her luggage and headed for the office door. \"I'll meet you in there. Order me a manhattan, will ya?\"\n\nThe bar was just as dusty as the rest of the old motel, a relic from the 50s when road trips were more common than flying. If you squinted your eyes and looked through all the accumulated detritus, you could see its mid-century modern underpinnings.\n\n\"I love this place,\" Charity yelled from over by the big old jukebox. She fed in some coins, pushed a few buttons, and Pink Floyd's Wish You Were Here echoed through the mostly empty bar. She walked back over to her stool next to Jimmie's. \"I've never heard of any of the songs on there, but it all looks cool.\"\n\n\"You never heard of Pink Floyd before?\" Jimmie asked.\n\n\"No. I like it, though,\" she said, listening for a few moments. \"It makes me wanna get really drunk.\"\n\n\"That's pretty much what it's for,\" Jimmie chuckled. \"What kind of stuff do you listen to?\"\n\n\"My roommate's really into EDM. Electronic dance music, you know?\"\n\n\"Yeah, I know,\" Jimmie said.\n\n\"She likes stuff like Fetty Wap, too, you know? Like, heavy hip hop. My other roommate's into Ariana Grande and stuff like that.\"\n\n\"You've got Two? Roommates?\"\n\n\"Yup. Two hotties and me.\"\n\n\"That makes three hotties. Maybe I should move to New York.\"\n\n\"You're sweet,\" Charity said, looking at Jimmie's soft, twinkly eyes. \"You were always my favorite, you know. Of all my cousins.\"\n\nJimmie smiled and sipped his drink. He wasn't used to drinking hard liquor, and was more than a little drunk from all the days imbibing. Wish You Were Here was starting to sound really trippy.\n\nCharity was feeling more than a little drunk herself. \"I prolly shouldn't do this,\" she said, \"but, you wanna see 'em? My roommates?\"\n\n\"Sure,\" Jimmie said.\n\n\"This is just between us, right? Promise?\"\n\n\"Sure. I promise.\"\n\nCharity took her phone out of her purse and found the group of photos she was looking for. She handed Jimmie the phone.\n\n\"You can flip through 'em if you want. There's a bunch.\"\n\nShe took her drink and went over to the jukebox, glancing back at Jimmie to see his reaction. He was sitting very still, with a look of wonder on his face as he flipped slowly through all the photographs. Some were naked selfies taken when the three girls were tanning under the summer sun, but most were pictures Richie and Erin had taken \u2014 the pin-ups they'd done of each of the girls, mimicking the old playboy centerfolds, and a whole slew of full-on sex photos, done in Richie and Erin's artistic style \u2014 girl on girl, threeway, fourway, anal, blurry sweaty orgasms...the works.\n\nJimmie was stunned. He looked over at Charity, dancing sexily by herself, looking stunning in her tight little sweater dress. He wondered how much her father knew, and if that was what all the fuss was about back at the house. He had a hundred questions he wanted to ask, but his khaki pants were nearly busting at the zipper and he was too embarrassed to stand up and walk over to her.\n\nCharity smiled a sweet, shy smile when she saw him looking at her. Another Pink Floyd song was playing, throbbing its trippy vibe into the dimly lit barroom...\n\n\"there is no pain, you are receding...\n\nA distant ship smoke on the horizon...\"\n\nJimmie put the phone down on the bar. He wanted to look at the photos until the end of time, but his politeness overruled his desire. Watching Charity, though, that was something he couldn't resist. His eyes locked on hers as her body moved fluidly to the music. She tried to walk over to him, but it ended up being more of a dance. She couldn't control it.\n\n\"I don't know about you, but I got a nice buzz goin',\" she said. She caught the bartender's eye and ordered another round.\n\n\"Shit, Charity, they got tough DWI laws around here. I can't drink anymore.\"\n\n\"You can take a cold shower. I got a room, remember? Not 'till later though.\"\n\n\"What's later?\"\n\n\"The cold shower.\"\n\nJimmie looked confused.\n\n\"You don't wanna spoil that, do ya?\" she said, smirking as she looked at his bulging crotch.\n\n\"Charity, what the fuck happened to you? You were so not like this a year ago.\"\n\n\"I met people who like to have fun,\" she said.\n\nThe bartender put two fresh drinks on the bar. Charity paid him.\n\n\"I'm staying here,\" she said to him. \"Can we take these to my room?\"\n\nHe poured them both into plastic cups without saying a word.\n\n\"Thanks, Honey,\" Charity said. She smiled when she thought of Kelsey, and how much the redhead's ways had infiltrated her life.\n\n\"You ready?\" she asked Jimmie. He didn't move a muscle. \"Oh, come on, Honey. Haven't you ever had a dream like this? Fucking your cousin in a dirty motel room? I think it's wicked hot. It's too perfect. We kinda gotta, don't you think?\"\n\n\"Charity, you're insane.\"\n\nThey walked out into the evening air to the strains of Pink Floyd's Learning To Fly, plastic cups in hand.\n\nJimmie woke with a start when a big truck rumbled by at 4:30AM. Charity was on her back, snoring softly with her mouth open. The top of the sheet was rumpled down at waist level, leaving her nice tits out in the dim light from the parking lot that filtered in through the cheesy old curtains. Cousin or no cousin, Jimmie couldn't resist them. Before that night with Charity, he'd been in a long dry spell, and really, when he thought about it, he'd never been with a girl as sexy as Charity. He was astonished that she was the one to hold that title. Charity for god's sake! Little churchy Charity! His hand went to the warmth of her tits just as his mind went to his mother, and his Aunt Charlene. He couldn't believe what he was in the middle of, but he didn't care at the moment \u2014 Charity's magic nipples were hardening between his fingers again, and her warm breath told him she was awakening.\n\n\"Fuck, Honey,\" she sighed. \"That feels nice...\" She rolled onto him, still half asleep, and slipped his hard cock into her well-fucked pussy. \"I get the feeling you haven't had a girlfriend in a while. You fucked the shit outta me tonight.\"\n\nJimmie smiled. He was thinking the same thing \u2014 Charity had fucked the shit out of him, too. There seemed to be a symbiosis \u2014 maybe it was the family thing, as much as he didn't want to think about that. Whatever it was, they were both hungry for it.\n\nCharity rose up, with her hands on Jimmie's chest. \"Don't move,\" she said, lifting herself off his slippery cock. She went to the window, threw open the curtain and remounted Jimmie, riding him with bouncing tits as a few trucks rumbled by outside.\n\n\"God damn you feel good!\" she said. \"I'm gonna have to come home more often. Wanna visit me in New York? My friends'll all fuck you 'till you can't walk anymore.\"\n\nJimmie was speechless again. It had happened numerous times that night. The way Charity looked with the pre-dawn parking lot light on her soft skin, and the way the excitement grew on her face as yet another big orgasm crept up on her, it was the most spectacularly beautiful thing he'd ever seen. Fucking your cousin in a dirty motel room? Oh yeah! Bring it on, baby! Bring it on!\n\n\u2014\n\n\"You look tired, Sweetheart,\" Charlene said. \"Why did you stay in such a noisy place? I would have given you the extra money for a Holiday Inn, or something nicer.\"\n\n\"I can afford it, Mom. I thought this place had character.\"\n\nCharity locked her door behind her and walked with her mother to the family car.\n\n\"It's got character all right,\" Charlene said. \"Your room smells...like somebody's been there. Is this one of those sex motels?\"\n\n\"No, Mom!\" Charity laughed. She decided to lie a little. \"It's a family place. I saw kids.\"\n\nThere was a shopping mall nearby, so Charlene drove there and they went inside, strolling slowly from store to store, talking as mothers and daughters do, catching up on each others lives.\n\n\"Do you have a boyfriend?\"\n\n\"Not really, Mom. I sorta fell for a guy, but...it didn't work out. We're still friends, though. If I told you I like older men, would that shock you?\"\n\nCharlene was silent for a moment. \"I don't know. I mean...how much older?\"\n\n\"That's the thing, it doesn't really matter. I guess I just don't think too much about age.\"\n\nCharlene didn't know what to say, so she didn't say anything.\n\n\"So how old is Great Aunt Lottie now?\"\n\n\"Oh, she's ninety-two,\" Charlene said, glad to have a change of subject.\n\n\"It's amazing how good she still looks. You do, too, Mom. Here, try this on,\" Charity said, holding up a cocktail dress. \"I wanna see you in it.\"\n\n\"Oh, Charity, that's not something I could wear.\"\n\n\"So just try it on then. Daddy'll never know. I wanna see.\"\n\nCharlene looked at the curvy little dress. All of hers had straighter cut sides, so as not to show off the shape of her body, and they were longer and much higher on the neck, too. \"Do you think it would fit? I'm not as slim as I used to be.\"\n\n\"You look great, Mom. Try it on.\"\n\nCharlene smiled at her daughter. The two of them went into the dressing room with three different sizes of the same dress. The brown polyester slacks came off, as did the turtleneck sweater. Charlene reached for the dress.\n\n\"No, Mom, take off the camisole, and your bra, too. You gotta get the full effect\"\n\n\"Charity, no! I can't. Not in a store.\"\n\n\"Mom, it's just you and me. Aren't you curious?\"\n\nCharlene was. She always admired beautiful women in beautiful womanly dresses, and often wondered what it would be like to wear one. She smiled a mischievous smile and pulled her satin camisole up over her head. Charity unhooked her bra before she could change her mind.\n\nCharlene was all goosebumpy as she stepped into the dress. Their first guess at size was right on the mark \u2014 Charity zipped up the back and the little dress hugged every curve just right. Charlene's breasts were just like her daughter's \u2014 a bit smaller than her curvy bottom, with energetic, cone-shaped nipples that did their thing at the most inopportune times. Charlene had always kept hers deeply under wraps, but in the sexy red cocktail dress they were free to do their thing.\n\n\"Oh my God, Mom! You're so sexy!\"\n\nCharlene's goosebumps flared again, as pebbly and tingly as ever before. She looked at herself in the mirror and couldn't believe her eyes. She looked like a real woman, and a hot one at that.\n\n\"Do people really wear things like this? Without...a bra?\"\n\n\"Sure, Mom. That's what it's made for. You look so good in it I can't believe it!\"\n\nCharity was thrilled, not only at the excitement in her mother's eyes, but also at the revelation that she'd still look hot twenty years down the road, if her mother was anything to go by. She thought about how cool it would be to bring her mother to one of the orgy parties, so all the guys could go wild on another mother/daughter combo, like they do with Kelsey and Kay. She took a selfie with her phone, being sure to get all her mom's lovely cleavage, so she could always remember the happy look on Charlene's face.\n\nThe thrilling moment ended, though, when the little dress came off. They put it back on the hanger, and hung it where they'd found it on the rack in the store. Charity could see the sadness in Charlene's eyes.\n\n\"Now you know you're a hottie,\" Charity said. \"Don't ever forget it, okay?\"\n\nThe shopping spree ended late in the afternoon. Charlene brought Charity back to the motel.\n\n\"Are you sure you won't come for dinner?\"\n\n\"No, Mom, I didn't get much sleep last night, and I've got an early flight tomorrow. There's an airport shuttle that'll pick me up in the morning.\"\n\nCharlene took a deep breath. She had misty tears in her eyes. \"It'll be better next time. You'll see. He'll get used to things, and I'll work on him. You will come back, won't you?\"\n\n\"Of course, Mom. I love you. I'm not just gonna leave you here. I'm really happy now. I love my life. You know that, right?\"\n\n\"I can tell. You're so different now, but...you just seem so alive. I don't know if I ever was.\"\n\n\"Mom, life throws curveballs at you. Sometimes you wanna hit 'em, sometimes you wanna catch 'em. You know what I mean?\"\n\n\"You're talking riddles, Sweetheart.\"\n\n\"Don't be afraid of a curveball.\"\n\n\"Life isn't all about balls, Dear.\"\n\nCharity smiled. \"Bye, Mom. I love you so much. I'll be thinking about how good you looked in that red dress. That picture's going up on my wall.\"\n\nCharlene smiled sadly and hugged Charity. \"I love you, Sweetheart. Call me when you get home.\"\n\n\u2014\n\n\"Hello?\"\n\n\"Hi. Craig?\"\n\n\"Yes.\"\n\n\"Hi, this is Charity.\"\n\n\"Charity? Hi. Is everything all right?\"\n\n\"Oh, yeah, I just wanted to say hi. It was so nice to see you yesterday.\"\n\n\"Yeah, it was great seeing you, too,\" Craig said. His mind flashed back to the way her tight sweater dress showed off her body in a whole new way.\n\n\"So, I'm sorta on my own this evening,\" Charity said. \"I was wondering if maybe you'd want to get dinner or something.\"\n\nSilence overtook the phone line. \n\n\"Yeah. I mean...you mean...not with your folks?\"\n\n\"No. I can't really be with my dad anymore on this trip. I'm hoping next time he'll be better.\"\n\n\"Yeah, that was kinda intense.\"\n\nCharity laughed. \"That's putting it mildly.\"\n\nA moment of silence punctuated the awkwardness.\n\n\"So, I'm in a motel out by the airport. There's a bunch of restaurants nearby...\"\n\n\"Oh...Yeah. I'll...pick you up? Right?\"\n\nCharity smiled big and bright. \"Right.\"\n\nShe watched out her window for Craig's car. He pulled up right in front of her room, just like she'd told him on the phone. She waved out the window and went out, locking the door behind her.\n\n\"I hope you don't mind the same dress,\" she said when she folded herself with youthful grace onto the front seat of his car. \"I'm traveling light. It doesn't smell too bad.\"\n\n\"You look incredible in it, so no, I don't mind,\" he said. His nice smile was tinged with surprise \u2014 Charity was noticeably braless. When she was getting dressed she put one on, but then she thought, what would Kelsey do? The way the dress formed around her soft tits held Craig's gaze for a few exciting seconds. He wondered if she had any underwear on at all.\n\n\"Do you mind if we stop at the mall for a few minutes? I wanna get a present for my mom.\"\n\n\"Sure. Which mall?\"\n\n\"It's just down here a couple miles,\" Charity said, pointing out the way. \"It's crazy busy with the holiday sales, but I know just what I want. It should only take a few minutes.\"\n\nCraig went into the mall with Charity, feeling very self conscious and nervous about being seen with her. He hoped they didn't run into anyone they knew.\n\nCharity made a bee-line to the dress shop, took the red one her mother had tried on off the rack and went straight to the checkout.\n\n\"That's for your mom?\" Craig asked, sounding surprised.\n\n\"I'll tell you about it later,\" Charity said. Craig loved the look on her face, but he sensed danger again, and looked around at the other shoppers. None of them seemed to care.\n\nThere was a wrapping station out in the mall, raising money for a homeless shelter, so Charity had the dress box wrapped in shiny red paper with a big gold bow. She bought a card and they were back out into the dark of the evening.\n\nDinner was a noisy affair \u2014 the restaurants were just as busy as the shopping centers on Thanksgiving weekend \u2014 but it didn't seem to matter. Craig was lost in Charity's presence \u2014 her voice, her giggle and her laugh were the only sounds in the room by the time the waiter weaved through the throng of diners with two plates of cheesecake for dessert.\n\n\"God this is good!\" Charity moaned as she smooshed the velvety stuff around inside her mouth. \"I usually don't eat this. It goes right to my ass.\"\n\n\"Is that what did it?\" Craig said, with twinkly eyes. \"Then eat more of it I say.\"\n\nCharity giggled. It thrilled her that guys loved her ass as much as they did. She couldn't wait to feel Craig's stubbly face rooting around in it, and his cock fucking her there.\n\n\"Eat fast,\" she said. \"We've got things to do.\"\n\n\"More shopping?\"\n\n\"No, silly!\" she smiled. She leaned in close and whispered in his ear. \"You're gonna take me to my motel and fuck me 'till the sun comes up.\"\n\nCraig couldn't breathe. It was that feeling you get when you're underwater too long.\n\n\"Charity, we can't do that...can we?\"\n\nCharity smiled. \"Let's go. Best if you don't think about it too much.\"\n\nThe drive to the motel was quiet, and full of delicious tension. Charity fooled around with the car radio, landing on a classic rock station. Led Zeppelin's When The Levee Breaks was in it's opening strains. Charity turned it up.\n\n\"Holy shhiiit!\" she said as her body started to move. \n\n\"You like Zeppelin?\" Craig asked.\n\n\"What's that?\"\n\n\"Led Zeppelin. This band.\"\n\n\"That's the name of 'em? I love it! Me and Jimmie were listening to Pink somethin' last night. Do you know them?\"\n\n\"Pink? The pop singer?\"\n\n\"No. Pink somethin'. A band from the old days, like this one.\"\n\n\"Pink Floyd?\"\n\n\"Yeah! That's it! I love them! And this...Oh my God, I just wanna take off all my clothes and dance!\"\n\n\"That's the blues,\" Craig said, listening to the reverb drenched harmonica floating over Zeppelin's powerful rhythm section.\n\n\"That's the name of the song?\"\n\n\"No,\" Craig smiled. \"It's the type of music. The blues. Led Zeppelin did a lot of it. Pink Foyd, too. They took old blues forms and made them more muscular and psychedelic.\"\n\n\"Ffuuuck!\" Charity said. \"His voice gives me goosebumps.\" She turned it up louder and her body writhed even more. Craig almost drove off the road. He couldn't believe how sexy she was, and how naive she was about music. He wished she lived closer so he could take her to some concerts and fuck the shit out of her after them.\n\n\"Goin' down\n\nGoin' down now\n\nGoin' down\n\nGoin' down now...\n\nCharity was mouthing Robert Plant's words, and she went down, right to Craig's lumped up crotch.\n\n\"Ooo! Somebody's excited!\" she smiled.\n\nShe had his cock out in a matter of moments, sucking him in to the beat of the song.\n\n\"Oh God!\" Craig gasped.\n\nThey were only a minute away from the motel. Somehow he made it there without crashing his car. He pulled into the same parking spot in front of Charity's room. She was relentless with her blowjob, going at it with gusto all the way through the long song. He begged her to stop when an older couple walked by, but she was in too deep to stop and Craig was glad of it. His gushing orgasm was monumental \u2014 the first outside of masturbation since his beloved wife died. Charity gobbled up the mess, swallowing every drop.\n\n\"Fuck!\" she sighed. \"You had a lot in you!\"\n\nCraig could only groan. He tried to gather his senses. They were lit up well by the parking lot lights. Charity was licking his balls when another man walked by.\n\n\"You're crazy,\" Craig managed to say to her. He wanted to slap himself in the face to knock some sense into his brain.\n\n\"You'll be able to fuck me good now,\" Charity said as she tucked his swollen cock away. \"You won't cum so fast.\"\n\nShe got out of the car with her shopping bag and went to her door. Craig still couldn't make himself move. He watched her as if it was a dream. She opened the door, looked over her shoulder at him, flipped up the back hem of her sweater dress to show him she didn't have any underwear on and disappeared inside, leaving the door open. He had to follow. He just had to.",
        "\"Ooohhh!\" he groaned when he sunk his cock into Charity's super-tight pussy for the first time. It was a groan that would be repeated throughout the long night, her tightness always a dizzying surprise.\n\n\"Fuck my asshole, Honey,\" she said, halfway through the sweaty night. \"I'll close my eyes and think about you out in your backyard with your shirt off.\"\n\n\"You really want it...in your ass?\"\n\n\"Yeah. I didn't bring any lube, so you'll have to work at it awhile,\" Charity said. Her ass was up in position, on her knees with her head down on the rumpled bed. \"Wet me up with your tongue first. That'll help.\"\n\n\"Oh ffuuck, Honey!\" she said when Craig tried to stick his warm tongue into her little hole. \"Oh, God yeah!\" Charity loved feeling a guy's stubble down there where the sun didn't shine. \"Did you know we watch you? When you're outside in the summertime?\"\n\n\"Who's \"we\"?\"\n\n\"My mom and me. She doesn't know, but I've seen her watching you.\"\n\nCraig's tongue suddenly went wild all over Charity's juicy pussy and ass, making her squeal with delight.\n\n\"Come on, stick your cock in me. I wanna feel you in there.\"\n\n\"In your ass? Are you sure?\"\n\n\"Yeah. Do you like it?\"\n\n\"It's the sexiest ass I've ever seen.\"\n\nCharity smiled. \"Do you like fucking that way?\"\n\n\"I don't know. I'll tell you in a few minutes.\"\n\nCraig started to press his way into the tiny, dark hole.\n\n\"If you have trouble you can fuck my throat again. That got you all slimy last time. It works almost like lube.\"\n\n\"Fuck, Charity,\" Craig said, his voice wavering a bit as the extreme tightness of anal sex warped his mind. \"When did you become such an expert on all this?\"\n\n\"Back in May. I went to live with my college roommate in her hometown. She and her friends, they sort of fuck for a hobby.\"\n\n\"Ohhh, Jesus!\" Craig bellowed. He hadn't expected to let something that loud out of his mouth, but there was no stopping it. His cock was three-quarters of the way inside Charity's little asshole. The feeling, and everything that was happening that night, was completely overwhelming.\n\nCharity was in that place too, all of the sudden. Conversation was over. When Craig started thrusting hard into her tingly ass she slapped a hand down hard on the mattress and her fingers drew the sheets into her white-knuckled fists.\n\n\"Fuck yeah!\" she shrieked. \n\nIt was the beginning of another noisy round. The person in the room next door pounded on the wall again, but Charity didn't care. Craig was the first older man she'd ever had sexual thoughts about, too many years ago to count, and she had him inside her, deep in her fiery furnace, way up inside her darkest secret. The knock on the wall didn't even register. She'd gone home, and she'd conquered it.\n\n\u2014\n\nCraig drove Charity to the airport at 8AM. They sat in the car at the curb for a few moments, smiling sweetly, wondering what to say.\n\n\"You absolutely have to come visit me,\" Charity said. \"You'll know why when you get there.\"\n\nCraig knew the look in her eye. \"I will,\" he said, and he meant it.\n\n\"Okay, here's the favor I need you to do for me,\" Charity said. \"Mom's super lonely, and just...cut off from the world.\" Charity handed him the nicely wrapped dress box and the card. \"This dress you saw? I got her to try it on yesterday. She looked so beautiful, and it made her really sad, because she'll never be able to wear anything like it. I want you to take this home with you, and sometime when Dad's not around call her over to your house and give this to her. Make sure you do it at your house, okay?\"\n\n\"Okay.\"\n\n\"I wrote her a note, in the card. Make sure she reads it. Do you know how to make Mai Tai's?\"\n\n\"I can learn.\"\n\n\"Good. Yeah, get the stuff to make 'em. And wear that suit you had on Thanksgiving day, and that thin tie. Remember when I asked you to make her smile once in a while? This'll do it.\"\n\nCraig had that mixed feeling again \u2014 excitement and fear. It worked out well with Charity, leaving him feeling more alive than he had in years. Giving Charlene a secret gift from her daughter and making her a drink would be risky, but Charity had proven to him some risks are worth taking.\n\n\"Bye, Honey,\" Charity said. \"Thanks for hangin' out with me. I'll see you in New York, right?\"\n\nCraig nodded and watched her walk away, her stunningly curvy ass wiggling under her thin linen pants. He picked up the sealed card, and wondered what it said...\n\nA little gift for you, Mom, but you have to do something for me, to make the gift complete. It's a cocktail dress after all, so I want you to go to Craig's spare bedroom and put it on. Properly. NO BRA! Craig will mix up some Mai Tai's. Have one with him, or two or three, and let that beautiful smile of yours out into the world. I love you, Mom. Have fun.\n\nLove, Charity"
    ],
    "authorname": "riverboy",
    "tags": [
        "thanksgiving",
        "cousin",
        "incest",
        "older man",
        "holidays",
        "cheap motel",
        "religion",
        "christianity"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/kelseys-world-ch-27"
}