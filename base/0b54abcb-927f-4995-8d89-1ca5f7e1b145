{
    "title": "TRC - Lord of the Glass Desert Ch. 15",
    "pages": [
        "\"You two are going to continue on with them?\" Kal asked while they walked beside Soonu and Chaldi's wagon. In the distance, they could see the village where they planned on parting ways.\n\nAs far as size, it didn't look much bigger than Telsin. A few wooden structures stood above the rest in the village center, but where the buildings in his hometown were all made from wood, this little hamlet mostly had clay huts topped with straw thatch. The architecture reminded him a little of Fazal but with softer edges. The clay used for the walls appeared to turn bright white as it weathered under the scorching heat of the savannah's dry season. At least that's what Kal guessed from the partially constructed homes dotting the settlement's outskirts.\n\nA fair-sized lake spread out just beyond the village and was the main reason for the town's existence. For the past day, the ground had been sloping steadily downward, and in the distance they could make out a similar gradual rise on the other side. The area acted like a gigantic collection basin. Kal didn't realize until he saw it, but this was the first real body of water he had seen since he crossed the mountains\n\nCoovie and Rhim both nodded.\n\n\"Melir appreciates our sharp ears and eyes,\" said Rhim.\n\n\"And Soonu and Chaldi appreciate our other gifts,\" said Coovie. She wiggled her butt as her face took on a dopey expression, \"and I certainly appreciate Soonu's gifts as well.\"\n\nLast night Kal and Kashka slept alone for the first time since meeting the gazelle women. Their only interruption came from Rhim asking for some of Cyrene's lube. The merchant's guard wasn't quite ready to sink his cock into the gazelle's pussy. Lucky for him, Rhim enjoyed taking a man in her bottom almost as much as her sex. Although Prentas made monster girls so they barely required any extra lubricant back there, Rhim was sold on the merits of a little added slickness the first time Kal slipped inside her ass. Instead of the slime, Kal gave her the little jar of salve that he used before reaching Prentas's tower. The tiny pot now hung from a string tied to her shoulder strap next to the water bottles Chaldi made.\n\nNeither gazelle was terribly impressed with the belts and instead opted to hang them across their torsos. After a few practice runs where they darted ahead of the wagon at full speed, they complained everything bounced around too much. Chaldi attached another belt, effectively turning the first into a shoulder strap, to hold everything in place. The girls seemed pleased with the result.\n\nThe leatherworker invited Coovie to share her and Soonu's bed last night, and today it looked like everything went well. Kal worried there might be some hard feelings or hidden jealousy, but that appeared not to be the case.\n\nBecause of his size, Soonu had never experienced a woman's bottom. According to Coovie, they were planning on changing that in the days to come. Chaldi had some bad experiences with men in her younger days, turning her off to taking a man in her bottom ever again. The leatherworker explained to the gazelle that this was something her husband wanted to experience for a very long time, but she just couldn't give him. She also mentioned that the couple of prostitutes they hired backed out once they saw him fully hard. On the other hand, the gazelle was looking forward to getting her rear stretched by the merchant. So much so that the gazelle said she slept with one of Chaldi's polished stone toys in her bottom once they were finished.\n\nKal had zero interest in seeing another guy's dick just for the sake of seeing it, but after listening to Chaldi, and now Coovie, talk about how big he was, the mage was finding it hard not to be just a little curious.\n\n\"Are you staying with them to the edge of the jungle then?\" Kal asked.\n\nRhim looked up at Melir, \"I thought you were going up and around?\"\n\nMelir nodded, \"We are. The jungle is too dangerous to go through, even with a fully armed guard. Too many monster girls and too many bandits.\"\n\n\"Bandits, you said?\"\n\nKashka looked up at the mage. Something in his voice sounded off.\n\nMelir didn't notice as he continued scanning grasslands. \"There are some ancient ruins off the main road through the Boordus Jungle. A group of bandits took it over a few years ago. After that, they made a pact with a tribe of ape-women to act as lookouts.\"\n\n\"I can hardly blame them there,\" said Rhim, grinning up at the man.\n\nThe mercenary blushed slightly, \"There's a big difference between you and them. From what I've heard they are surprisingly strong, and their need for a man makes normal monster girls look like virginal prudes. When in their 'attractive' phase, they are truly insatiable. A single ape-woman can fuck three men into their graves, then look around for more. I've heard that the bandits have attacked and kidnapped groups of men to use as sacrifices to these women. However, that hasn't happened in a long time.\"\n\n\"How do you know about all this?\" asked Kashka.\n\n\"Mostly rumors among the other mercenaries. The people of Lassedo,\" Melir pointed with his whip-stick at the town ahead, \"should be able to tell you more.\"\n\n\"What are you two going to do while they are in town?\" Kal asked the gazelles.\n\n\"Unless they object. We're bringing them with us,\" said Soonu.\n\nMelir's head whipped around to stare at the merchant as Chaldi cried, \"What!\" from the back of the wagon.\n\n\"If they are going to help Melir protect the wagon, then I see no reason to run them off. It's the least we can do for their help.\"\n\nChaldi poked her head out the small door between the men, \"Don't expect to be selling a lot while we're there.\"\n\n\"What are you talking about, wife? By the time we reach Lassedo, the faster merchants have already flooded the market. We hardly make any sales there as is.\"\n\n\"Fine,\" Chaldi grumbled, \"but you could have warned me earlier.\" She pointed at Kashka. \"The girls are going to at least have clothes like hers, or they won't let us in at all,\" she said before disappearing back into the wagon.\n\nRhim and Coovie looked at Kashka's simple top and shorts. \"We have to wear clothing?\" Rhim asked.\n\nKashka nodded. \"It's usually required if you want to wander freely around a human town.\" The cat-girl leaned into the gazelle and whispered. \"Plus, some men really enjoy watching you take them off.\"\n\n\"I'll attest to that,\" said Kal. \"But sometimes we like to strip it off like we're unwrapping a gift.\" The mage held out his hands and wiggled his fingers as though about to grope an imaginary set of breasts.\n\nKashka nudged Rhim and smoothly pulled up one side of her top to expose a nipple. \"Watch this,\" she whispered.\n\nThe gazelle looked on as Kal finished his lecherous pantomime and glanced around to see the other's reactions. The mage's eyes immediately locked onto the cat-girl's exposed breast and stayed there for a moment before giving Kashka a questioning look. Above them in the wagon, Rhim saw Melir was also staring at the feline-woman's charms. Kashka tugged her top back into place and grinned at the gazelle.\n\n\"But... they can see mine anytime they want,\" she said, looking down and cupping her breasts as if offering them for the men's inspection.\n\n\"Exactly, seeing you naked is just a normal thing. But for me?\" Kashka slowly peeled up her top while looking at Kal. The mage hopped forward and spun around, walking backwards so he could get a better view. Rhim caught movement on the edge of her vision as Melir nudged Soonu. A moment later, the merchant was also staring at Kashka's breasts as she slowly pulled the material up, teased her nipples until they hardened, then covered herself again. Even after the men couldn't see Kashka's breasts anymore, they continued to stare at the bumps in the cloth left by the fabric.\n\n\"Coovie? Rhim? I need one of you so I can take some measurements!\" Chaldi called.\n\nRhim glanced at Kashka's breasts, then up at Melir before yelling \"Coming!\" and darting to the wagon's rear where the leatherworker waited.\n\nCoovie had also been watching the men's reactions. Looking at Kashka, the gazelle shrugged. \"You convinced me,\" she said and stopped and let the back of the wagon come to her.\n\nKal again fell into step next to the cat-girl as the merchant and mercenary returned to their tasks. Kashka looked up at the mage, \"When they mentioned bandits earlier, you acted strangely. Do you know something about these men?\"\n\n\"Not a thing,\" said Kal, his tone cold. \"But...\" he turned to look at her, and Kashka saw a hatred in his eyes far beyond when they fought the sandworms, \"if there is a thieve's den in that jungle, we're going hunting.\"\n\n------\n\nLassedo turned out more lucrative than the merchant and his wife expected. The clothed gazelle-women with small bottles hanging from their belts attracted curious townsfolk, which Chaldi and Soonu quickly converted into sales. Most of the villagers accepted the monster girls were assisting Melir in detecting danger out on the road. Far fewer believed that the little bottles were to teach other monster girls how to attract a mate without resorting to kidnapping. That the gazelle-women gave no indication they were interested in any of the town menfolk did impress a few. Only two people didn't seem to understand the gazelle weren't enemies and had to be run off by Melir's whip-stick.\n\nMost who managed to notice Kashka took a single look at her collar and promptly ignored her.\n\nThe more observant noted the daggers on her hips and kept out of her and Kal's way.\n\nThe people who noticed Kashka usually did so from Kal interacting with her. One man, however, addressed her directly.\n\n\"Those are some nice daggers, young... lady,\" said the shopkeeper. He appeared unsure what to call her. \"Perhaps I could interest you in some better ones.\" A large awning graced the front of his shop, and he sat behind a couple of thin tables with selected wares displayed on top. A small, treadle-powered grinding wheel stood to one side of his outdoor area while another table nearby held an assortment of blades and handles waiting to be assembled. Most of the man's offerings were meant for a kitchen, not a fight, but the few daggers and short swords he displayed were well crafted.\n\nKashka glanced up at Kal, but he just smiled back and held out an arm, \"Your call, Mistress, I merely hold the purse. Just remember to use your resources.\"\n\nThe cat-girl looked up at him, confused by the last phrase.\n\n\"Mistress?\" the shopkeeper asked, looking between the mage and cat. He quickly shook his head, dismissing the question. \"It doesn't matter. I have a pair of fine daggers you may be interested in.\"\n\n\"As you noted, I already have a pair. Thank you,\" she replied with a slight bow before turning to walk away.\n\n\"But are yours magic?\"\n\nKashka stopped mid-stride. Another glance up at Kal revealed he had found something keenly interesting about his fingernails. Grumbling at the mage's lack of help, she asked, \"How are they magic? I keep my weapons immaculate, and a simple sharpness enchantment won't help me much.\"\n\n\"Sadly, I cannot say, other than they contain strong magic. I only recently purchased them and have not had a wizard identify their enchantments yet.\"\n\n\"Oh,\" said Kashka. Disappointed, she turned to leave again. \"I'm sorry, but I'm not--Oof!\" She barely took a step before running into Kal.\n\n\"Are we leaving so soon, Mistress?\" he asked as though he hadn't just made her look like a fool.\n\nThe cat opened her mouth to snap at him, but something in the mage's expression stopped her. She turned back to the shopkeeper. \"How much are you asking?\"\n\n\"Three hundred gold.\"\n\n\"You can't even tell me what kind of magic they are, and you want that much?\"\n\n\"I've been buying and selling blades for my entire life. I know when I see something special.\"\n\nKashka glanced up at Kal and saw curiosity in his eyes. Despite the air of distrust, she had learned watching Kal and others haggle over prices. The cat found herself intrigued by this man's confidence in his merchandise. \"Alright, I'll take a look.\"\n\nThe shopkeeper turned and yelled into the building behind him, \"Boy! Get out here!\"\n\n\"Yes, father!\" answered a young man's voice. A few seconds later, the shopkeep's son appeared in the doorway wearing shorts, a leather blacksmith's apron, and a coating of metal dust on his face. In his hand, he held a half-dozen rough ground blades he added to the table next to his father's grindstone.\n\n\"Watch the front for a few minutes. I need to get something out of the safe,\" said the shopkeeper before entering the building.\n\nThe son looked Kal over, paying particular attention to the lack of weapons hanging from his belt. \"What do you need in the safe for?\" he yelled inside.\n\n\"For the cat!\" his father shouted back.\n\nThe shopkeeper's son turned back and noticed Kashka for the first time. \"My apologies muh--ma'am. I didn't see you there.\" His eyes dropped to the daggers on her belt before mumbling, \"That's why he needs in the safe.\" The young man stopped and stared at Kashka with a slight look of fear as both the cat-girl's ears swiveled toward him. Suddenly uncomfortable, he sat down at the grinding wheel and pumped the treadle to put a final edge on the blades he just brought out.\n\nA few minutes later, Kal and Kashka heard a loud thump from inside the shop. The merchant exited the building holding up a belt with two ornate deep blue sheaths. The intricate inlays covering the sheaths were made of a metal that faintly glowed in the awning's shade, while the daggers inside were solid black except for an emerald embedded in the pommel.\n\nKashka ran a finger over the sheath's metal, \"Not much use for staying out of sight.\"\n\n\"Try them on. You may be surprised.\"\n\nWondering why she was entertaining the man, Kashka sighed, removed her belt, and handed it to Kal.\n\n\"Look,\" said Kal as she cinched down the belt with the magical daggers.\n\nLifting the sheath revealed the glowing metal had turned dull, dark gray.\n\n\"I believe these were made for someone who required stealth in their occupation,\" said the man. \"The daggers are completely silent when drawn, and, if you noticed, they didn't make noise when bumping against each other as I brought them out.\"\n\n\"Still not worth three hundred gold,\" said Kashka. Letting the sheath drop, she knocked on its side. Silence.\n\n\"There's more to them than just being quiet. Sadly, with what I spent on buying them, I haven't made back enough to afford the wizard I spoke of.\"\n\nThe cat-girl looked up at Kal and smirked. He told her to use her resources. Unbuckling the belt, she handed it and the daggers on it to the mage. \"Could you take a look at these and let me know what you think they're worth?\"\n\n\"I'd be happy to,\" said Kal. Setting them on the table, he slid one of the sheaths from the belt and set the rest aside. The mage flipped his cloak's hood up and hunched over the table as he began his inspection. A short time later, he asked Ria for parchment and quill before jotting down some notes. The letters were standard Common, but Kashka couldn't make heads or tails of the words. Apparently, neither could the shopkeeper.\n\nThe man behind the counter dipped his head down to look under Kal's cowl but stopped when his chin came to rest on the tip of one of Kashka's daggers. He was clearly unhappy with being threatened but stood up straight again and nodded in understanding: No peeking.\n\nLong minutes passed where the grinding of new blades and the scratching of the quill were the only sounds from the shopkeeper's stall.\n\nKal finally laid the dagger down and pushed his hood back, but only to hunch over the parchment and continue scribbling notes. He continued for a few more minutes until Kashka cleared her throat.\n\n\"Uh... Kal?\"\n\nThe mage's head shot up, and his gaze flicked between her and the shopkeeper. \"Sorry. I got a little lost in my thoughts there.\"\n\n\"How much do you think it's worth, Kal?\"\n\n\"The daggers?\" he said with a sigh, \"If he knew what the other enchantments were, then it might be worth the three hundred. I'd only go two hundred.\"\n\n\"But what if those enchantments are useful? Like--\"\n\n\"Like the making you completely silent or see in the dark, or leap really high?\" Kashka asked. \"I can do all those things already. It may be worth three hundred to a human, but if Kal says two hundred, then I'm inclined to agree. Two is my offer.\"\n\n\"I tried them on my range after buying them. I never missed a target.\"\n\nKal shook his head this time, \"She already doesn't miss unless you dodge or deflect her blades. Believe me, I know.\"\n\nThe shopkeeper shot him a look filled with skepticism. When he turned back to Kashka, she was holding out her hands with palms up. He stared at her solid black palms in confusion for a moment before their significance sunk in. \"You're one of those little savannah cats that seldom miss a hunt.\" The man shook his head, \"I need to make some money off these, or the wife will have my ass. I'll go two-fifty.\"\n\n\"Two twenty-five is my last offer,\" said Kashka. The cat-girl suddenly stopped and looked up at Kal with worry written across her face. \"Wait, Kal. I can't do this. Put this 'Mistress' game aside for a second. That's a lot of money, and it's your money, not mine.\"\n\n\"If I didn't feel this might be a good purchase, I would have told you a price he would have rejected outright, and we'd be on our way,\" he said with a smirk. \"You told me the other day to trust my women to keep me from making a misstep. That goes both ways. If you were about to do something foolish, then I would have spoken up already. Two hundred twenty-five gold feels like a fair price from what I could make out.\"\n\n\"And what could you make out?\" the shopkeeper asked, looking hopefully at the mage.\n\n\"Nothing I will share with you until the blades are hers. To sweeten the deal, I'll also look at any other magic items you have. Mind you, what I do may not be as effective as your wizard friend's identification spell.\"\n\nThe man grumbled for a moment, then looked at Kashka again. \"Alright, two twenty-five for the pair,\" he said, hesitantly extending a hand.\n\nShe could tell the man was trying hard to not jerk away as they shook hands and appreciated the effort. The cat was less appreciative of the shopkeeper immediately rubbing his hand on his pants afterward as though trying to wipe away her taint.\n\nThe frown on Kal's face showed he noticed as well. Shaking his head, he summoned Ria and paid the man before sending him to get any other magical items he needed to be identified.\n\n---\n\n\"Other than sharpness and a strengthened blade, there isn't much of use to her on those daggers. There are some enchantments I'm unfamiliar with and might require some study to figure out. Those are also the strongest enchantments, so I'm curious what they might be.\" said Kal as he handed the man a parchment with the runes found on, and in, the last short sword he looked over. This time, the mage described the runes in simple terms, not the magic language he used for Kashka's new daggers.\n\n\"So I got taken,\" said the shopkeeper with a sigh as he rested his elbows on the table where he conducted business. His son had disappeared inside once he finished sharpening the blades.\n\n\"Perhaps, but mostly because of your buyer,\" said Kal looking over at the cat-girl. \"I know a human thief who would have likely paid three hundred gold for those. But her abilities reduced the daggers' value. She moves in near-complete silence already. How much quieter can magic sheaths make her?\"\n\nAfter purchasing the daggers, Kashka switched them out on her belt, leaving the old ones sitting on the shopkeeper's table next to Kal. Stepping a few paces away, she began to familiarize herself with the new blades by tossing them into the air and catching them repeatedly. After a few seconds, she asked Kal to toss one of her old daggers at her. The mage gently lobbed the weapon in her direction and watched as she snatched it out of the air before starting to juggle all three blades.",
        "A cat-girl masterfully juggling razor-sharp daggers drew attention in the crowded marketplace. Some people were wary that a monster girl was casually tossing weapons around, but most assumed she was a street performer. Ria helped this image by carrying over the last of the feline's old weapons then darting in and out of the loops made by the flying daggers. Then, after a brief consultation with Kashka, the sprite flitted over to the shopkeep and asked if they could borrow the blanks his son had sharpened. Ria flew back and forth with the unfinished knives until the cat had ten blades spinning through the air over her head.\n\nKal had seen many juggling acts. Every so often, one stopped at the Inn in Telsin when he was younger, and he chanced upon a few in his travels since. Only a few involved daggers, and those were often dulled 'just in case.' This made Kashka's display unique in his experience. However, as impressive as it was, the onlooker's awe quickly faded. Then one of the kitchen blades went spinning at an odd angle, the sunlight flickering across its polished edge until Kashka caught it by the back of the blade and gracefully sent it back into the rotation. A few seconds later, another, then another, then another of the knives went whirling upward at wildly different angles and required unusual positioning of her hands to catch.\n\nAs a finale, Ria floated just below where the blade's paths crossed above Kashka's head as the cat sent all ten of the knives and daggers twisting through the air at crazy angles and spins. The flickering of sunlight off the twirling metal looked almost like a shower of sparks over her. She maintained the show for a few seconds before returning to routine catches and throws.\n\nAfter a few awkward moments, she called out behind her, \"Kal, I've never juggled more than four knives before. I can't catch them all, and I don't know how to stop.\"\n\nThe shopkeeper pulled back the cloth on one side of his table and patted the wood, \"Put mine right here,\" he offered.\n\nKashka glanced back and nodded before sending all six of the kitchen knives sailing backwards over her head.\n\nThe man had expected her to back up to the table and lay them down one by one. He yelled and jerked his hand away as the points of all six blades sunk into the wood in a tidy row. Their edges were even on the same side.\n\nThe cat-girl whipped her old daggers high into the air. In a flash, she darted over to the table while dropping her new blades into the sheaths on her belt. Grabbing the old weapons' sheaths off the shopkeep's table, she dashed back, skidding to her knees beneath the falling blades. With only the slightest adjustments, both non-magical daggers dropped smoothly into the slots on top of their scabbards.\n\nKashka slowly got to her feet, wincing as she realized she scraped some skin off her knees, and bowed like she'd seen many minstrels do at the end of their acts. The crowd clapped and cheered for a moment before quickly dispersing. Ria turned the few coins tossed her direction into specks of light before they touched the ground and stored them. Kashka turned around. Her face fell when she saw Kal still hunched over one of the shopkeeper's blades. Massaging the sore muscles of her forearms, she stepped over next to him.\n\nThe mage turned his head slightly so she could barely see his glowing blue eyes. \"How the hell did I ever manage to beat you?\" he asked. \"Every juggler I've ever seen would be missing one or both hands trying that stunt.\"\n\nA smile crept onto her face as she realized he had been watching. \"In fairness, if I tried keeping that up any longer, I might have lost a few fingers. Catching the daggers by the blade then pinching hard enough to throw them again was getting painful. As far as beating me? I think you mentioned something about running me all over Fazal and wearing me out before we finally fought.\"\n\n\"Yeah, there was that,\" he chuckled before shifting his attention back to the weapon in his hands. A few seconds later, Kal reached over and took her hand in his. Within moments, the stinging in her knees and soreness in her arms and fingers vanished.\n\n\"Thanks,\" she said quietly.\n\nHe nodded beneath the hood in reply, then looked up at the shopkeeper with eyes that were their normal brown color again. \"We heard the road through the Boordus Jungle is closed because of some bandits. Do you know anything about them?\"\n\n\"The Reavers? Honestly, we haven't heard much from them lately, but too many people died on that road for anyone to see if they're still around.\n\n\"A couple of years ago, Calfera, the seaport on the other side of the Boordus, sent soldiers to wipe them out. I heard only the captain's horse returned to the city with the captain's head mounted on its saddle. The trek around the north side of the jungle is hurting Calfera's trade. More and more merchants are continuing on to the port at Keruvis, the city on the southern edge of the Ice Lands, than turning back to Calfera.\"\n\n\"That must be hard on your trade.\"\n\n\"Not on us. This crossroads is where all the merchants from Fazal go north or south, but I understand the port is struggling, and several ships have found new routes. There are rumors the city is planning a larger offensive to open the road again, but that's just what I've heard in passing.\"\n\n\"Is there anything else you can tell me about the bandits in the jungle?\" Kal asked.\n\n\"Only that they had something going on with a troupe of ape-women. Some said the monster girls were allies, while others said they were slaves. I don't know which to believe. Not that it matters much, I'm happy with my shop here in Lassedo.\n\n\"If you want information on the Reavers, talk to the Guard Captain, Ibu. He should be able to tell you more than I.\"\n\n---\n\nKal and Kashka met Ibu in his office next to the village stocks. Unlike Telsin, the stocks and pillory were tucked within a three-sided building to protect those serving out their punishments from the sun. Although it wasn't nearly as hot as the Sulerin Desert, the savannah was warm enough that a full day of such exposure could kill a man.\n\nThe Guard Captain stood slightly taller than Kal and had the darker skin common to those who dwelled in and on the savannah. Like the other guards the mage had seen, Ibu wore loose, flowing clothing instead of armor. Most metal armors weren't viable in Lassedo's heat, and the padding beneath leather armors made them nearly as bad. He noticed a few guards on the town's outskirts wearing what looked like armor made of woven reeds which seemed odd to him but made sense in the savannah's oppressive heat. On Ibu's hip hung a curved saber while a straight-bladed dagger graced the other side. The fluid motion as he stood from his desk reminded Kal of Galen and conveyed this man was likely well versed with both weapons as well as the bronze-tipped spears in a rack on his office's back wall.\n\n\"Greetings, traveler. My name is Ibu,\" said the Guard Captain in a deep voice as he stepped around the desk, \"I regret to tell you I'm stepping out for midday meal. Unless you have an emergency, you'll need to return in an hour or so.\"\n\nKal exchanged a look with Kashka before saying, \"I'm just needing some information, and we haven't eaten yet. Perhaps I could buy your meal in exchange?\"\n\nThe Guard Captain smiled, \"That sounds like a fair trade if information is all you seek. However, I usually eat lunch with my wife. Is what you seek sensitive?\"\n\n\"I need whatever you can tell me about the men threatening the road through Boordus.\"\n\n\"Easy enough. I'll meet you over at the inn.\"\n\n---\n\nKal waved Ibu and his wife over when he saw them step through the inn's door. They carefully picked their way through the busy dining room to the square table where the cat and mage sat. When they arrived, the couple revealed a third guest with them. Ibu lifted his baby daughter out of the basket-like carrier on his wife's back and placed her in her mother's arms after she sat down across from Kashka\n\nKal noted the rapt look on the cat-girl's face as she stared at the child.\n\n\"Do you mind if we switch places?\" he asked Ibu and his wife, indicating himself and Kashka.\n\nIbu looked at his wife. \"Jaya?\"\n\n\"Can you make sure she doesn't bite or scratch me?\" the woman asked Kal after noting the collar around the cat's neck.\n\n\"She's free, so no, I can't,\" Kal replied. \"However, judging by the look on her face, I feel sorry for anyone who threatens you or your little girl.\"\n\n\"Kal,\" the cat-girl pouted, looking back at him, \"you're making me sound awful.\"\n\n\"I can see already that you'd turn into a furry ball of rage if something tried to hurt that little girl. Am I lying?\"\n\n\"Well... no.\" She held up an arm, \"But I wouldn't be furry.\"\n\nIbu chuckled and Jaya tried to hide the smile tugging at her lips as she finally nodded. After a quick shuffling of seats, Kal and Ibu sat beside each other as Kashka tried to contain her excitement at being so close to a baby. A few nearby patrons shot looks of annoyance at the cat-girl as a loud purr began emanating from her. The other diners had returned to their meals by the time the waitress came over with a large plate of food for the center of the table containing a variety of different sauces, vegetable mixes, and marinated, roasted meat. A second girl followed with plates of rolled-up flatbread and sweet drinks made of fermented sugary beans and milk.\n\nJaya laid her daughter into a sling that Kal had thought was just a part of her clothes and started the little girl nursing before grabbing a piece of flatbread and loading it with the platter's offerings.\n\n\"Kashka? When you belonged to the young girl, did you never see a baby up close?\" Kal asked as they started in on their meal.\n\nThe cat peeled her eyes from the child and shook her head as she answered, \"My master's mother didn't trust me around them, so I wasn't allowed out of the girl's room whenever company came over. I heard a baby every so often, but other than that, I only saw them when out on missions.\"\n\n\"You were a slave,\" said Jaya, \"don't you hate humans?\"\n\n\"My first owners were decent people but couldn't afford me. My second owner was scum, but Kal rescued me from him, saved my life, and set me free. I'm not going to hate all humans just because some of them are evil.\" Kashka's head dipped toward the little girl in Jaya's arms, \"Should I hate her because years ago I was caught and enslaved by humans?\"\n\n\"I think she has you there,\" Ibru chuckled at the expression on his wife's face. \"While we are talking about the dregs of humanity, you wanted to know about the Remnant Reavers?\" he asked, turning to Kal\n\n\"That's the name of the bandits, I presume.\"\n\nThe Guard Captain nodded, \"They used to be pirates, a band called the Kraken's Teeth that operated far south of here. A kingdom down there suffered one attack too many and decided to wipe out their entire fleet. They nearly succeeded but for one ship that fled the night before the battle. After weeks of being chased by the kingdom's fleet, they ran aground just south of Calfera.\"\n\n\"The seaport?\"\n\n\"Yes. They made their way up to the road which passes through the Boordus Jungle and began attacking merchants while recruiting more thieves and cutthroats. Eventually, they ran across the ruins and changed their name to the Remnant Reavers. It seems fitting as the remnants of the Kraken's Teeth now lived among the remnants of an ancient people.\n\n\"Then Gaboh, the leader of the Reavers, began losing men. Not in raids but at night in their camp. The men were disappearing without leaving any clues why or how.\"\n\n\"Bandits aren't exactly known for their deductive prowess,\" Kal deadpanned.\n\nIbu chuckled, \"Very true, however, a patrol stumbled upon one of their missing men out in the jungle uh--\" he looked around at the other diners, \"engaged... with an ape-type monster girl. The patrol snuck up and caught them both with a net.\n\n\"The monster girl claimed her troop recently moved into the area, and this was their first encounter with the Reavers. The ape-women's species is reportedly very highly sexed, especially during mealtimes, and the women offered a pact. They would act as lookouts and a front line of defense for the bandits in exchange for the men meeting their needs.\n\n\"From that point on, the Reavers became untouchable. The ape-women's ability to move swiftly and unseen through the jungle canopy meant no one could get close to their base without the Reavers having hours of warning. Entire companies of soldiers were turned back without laying eyes on the Reavers as their men fell to traps and pitfalls set up by the apes.\n\nDespite their success, it wasn't the bandit paradise you might think. Gaboh's men began running away, worried that the monster girls would kill them from sheer exhaustion. Some ex-Reavers reported Gaboh ordered them to capture men on raids instead of killing them, just to give his men a chance to rest.\"\n\n\"These women are that over-sexed?\"\n\nIbu nodded, \"About half the time, they are no different from any other monster girl. But, these women go into an 'attractive' phase where their lips,\" he pointed at his crotch,\" swell, and they want sex even more. Just seeing this swelling can fill a man with lust.\"\n\nKal groaned, \"And here I was just working with some gazelles about using their mating scent properly, now we have ape-women using glamours. Do you have any way of preventing the lust craze?\"\n\n\"The sight doesn't drive you mad, but the lust is strong enough you won't be interested in much else,\" said Ibu with a glance at Kashka.\n\n\"That, I can deal with.\"\n\n\"Deal with?\" The guard captain's brow furrowed, \"Please tell me you are not going through the Boordus. Calfera has sent small armies with no luck.\"\n\n\"I have a few advantages over their army. I'm faster, stronger, harder to see, and I have her watching my back,\" said Kal, tilting his head toward the cat-girl.\n\n\"Those daggers on her hips aren't just for show, I take it?\"\n\n\"No, she's--\" Kal looked over at the feline and raised an eyebrow. At the moment, she was leaning over in her chair, her food barely touched. Ibu and Jaya's daughter sat on her mother's lap and giggled as she tried to grab ahold of the cat-girl's ears. \"Kashka, I'm trying to tell this man you are a skilled and capable fighter. You aren't helping me convince him.\"\n\n\"Hush. Babies are more important,\" she said, flicking her ear back a moment before the girl got a good hold then bringing the other forward so the little one could make another attempt.\n\nKal looked at the Guard Captain and shrugged, \"Women and babies. I don't get it sometimes.\"\n\nIbu chuckled, \"Do you have none of your own?\"\n\n\"I do, but they are on the other side of the world. If Kashka comes with when I return to my home, she'll have all the babies to play with she can handle.\"\n\n\"And you're so far away?\" Jaya asked.\n\n\"My women are very understanding. Only one of my lovers is human. The others explained that over generations they've learned to raise their daughters without a father. They love me, want me, and appreciate me, but they don't need me there all the time.\"\n\n\"I'm not sure if I'd like that,\" said Ibu, looking at his daughter.\n\n\"I don't like it, but it's something I've had to accept about the path I've chosen.\"\n\n\"And that path is to hunt down brigands and bandits?\"\n\nKal shook his head, \"No, that's a personal battle. Last year I spent a few nights with a merchant woman and invited her back to my town. She refused, claiming she could never be happy as part of the harem I have collected.\" The mage's voice fell, \"Months later, I came across her cart on the side of the road. Raiders had killed her and her father. I've nearly died a few times, but even then, I can't imagine what kind of horror they went through in their last moments. Now, I have the power and skills to save others from suffering the same terror she and her father experienced.\"\n\n\"So you're judge and executioner?\"\n\n\"When needed, yes.\"\n\nIbu leaned forward, \"What if I told you I was once a Reaver?\"\n\n\"I'm concerned with the present and the future. Your past is not my problem, and I'd assume you are in your current position to make amends.\"\n\n\"Ibu,\" growled Jaya.\n\nThe Guard Captain held up a hand to stall his wife. \"You needn't worry. I was never a Reaver,\" he said to Kal. \"I merely wanted a gauge of your judgment and ask you to send word back if you succeed in taking out the Reavers. Normally, I wouldn't bother and just assume you were dead, but the gazelle's and guard's description of your fight with the gnoll troop has gotten my hopes up.\"\n\nKashka sat up in her chair and scowled as she looked between Ibu and Kal. \"That's a dangerous game to play,\" she told the man. \"I've seen some of what Kal can do, and if he weren't the type who thinks first, you could have been in serious danger or even dead already.\"\n\nIbu smiled, \"I'm aware. I had many people approach me earlier today about the merchant with the gazelles. After speaking with them, it wasn't hard to figure you were the ones they were traveling with. From my conversation with them, you seemed quite level-headed. If I were worried, I wouldn't have made such a claim.\"\n\n\"I still think it was foolish,\" she grumbled.\n\n\"As do I,\" said Jaya as she glared at her husband.\n\nLooking slightly uncomfortable, the Guard Captain turned back to Kal. \"Is there anything else you need of me?\"\n\n\"Estimated manpower and armament, known traps, and a map of the ruins would all help.\"\n\n\"Let's finish our meal and go back to my office. I know I don't have a map, but I'll see what I can tell you from the last reports.\"\n\n------\n\n\"You're heading out?\" Kal asked Chaldi and Soonu that evening as they packed up their wagon with the help of Coovie and Rhim.\n\n\"Just out of town,\" said the merchant. \"Chaldi received enough orders today to justify staying the few extra nights she needs to finish them.\" Kal noticed many places where the leatherworker's pieces once hung were now bare as the man folded up the wagon's side. \"The Captain of the town guard dropped by and asked us to camp outside of town to avoid any disturbances. There appears to be quite a few who were upset with these two being around,\" he said, glancing at the gazelles.\n\n\"I'm not surprised, sadly. Kashka and I came to say goodbye, we will be setting out in the morning for the Bood... Broo...\"\n\n\"Boordus?\" Soonu offered.\n\n\"That's it. Maybe now I'll remember its name. There appears to be a bandit infestation that needs taking care of.\"\n\n\"I'm tempted to follow you once we are done here. Considering what you did to the gnolls.\"\n\nKal shook his head, \"Against a band of raiders, I'd say that was a safe bet. But the ruins and their allies are unknowns, and they supposedly have laid numerous traps that we can easily avoid, but this,\" Kal patted the wagon, \"cannot. When we get to Calfera, the garrison there will need to clear the traps before the road is safe.\"\n\n\"Bah. Another trip over the top of the jungle won't hurt us.\" Soonu offered a hand which Kal shook, \"We didn't travel together for long, but I can't thank you enough for all your help. It means a lot to be able to properly make love to my wife again. Without you, that may not have happened.\" He leaned in and whispered to the mage, \"And there's no way I'd be finding out what a woman's ass feels like.\" Laughing, he patted Kal on the shoulder. \"Good luck, and don't get killed,\" said the merchant before stepping away to check on the horses.\n\nMelir and the mage nodded to one another in farewell before Kal joined Kashka, the gazelles, and Chaldi near the back of the wagon. It still felt odd to see Coovie and Rhim in clothes, but there was no way Ibu would have let them stay had the woman not at least had bottoms. Chest coverings appeared to be optional in Lassedo, but full nudity was unacceptable. For the gazelle women, covering their charms also allayed any fears they were trying to steal men, or so Chaldi believed.",
        "Seeing him walk up, Rhim threw her arms around Kal. \"Thank you, Kal. I had no idea when we met you how much it would change our lives.\"\n\n\"Happy to help,\" he said, lifting her as he returned the hug. \"I ask that if you two decide to travel beyond the savannah with these three that you pass on your knowledge beforehand.\" Setting her back on the ground, he added, \"Remember, human women are protective of their men, but they are not the enemy. Your kind needs them just as much as you need human men.\"\n\n\"We'll remember.\"\n\nCoovie stepped up for her hug but also pulled his hand down to the fabric covering her rear. Kal gave her bottom a squeeze, and his fingers brushed across something hard between her cheeks. He pressed against it, and a soft moan escaped the gazelle. \"I know the chances are slim,\" she whispered in his ear, \"but try to find us the next time you pass this way. Assuming I haven't found a permanent mate by then, I'd like to show my appreciation for everything you taught us.\"\n\n\"I will try, but no guarantees,\" he replied, giving the plug in her ass a slight wiggle before letting her go.\n\nChaldi and Kal shook hands then the mage turned her palm up and dropped a small pile of gold coins into it. \"Use that to cover if the girls need any more of those bottles. And try to spread the word if you can. Don't bother trying to argue or convince anyone if it's right or wrong. Just tell people I'm trying to bring humans and monster girls together and that I seem to know what I'm doing.\"\n\n\"Do you?\" asked the leatherworker as she quickly counted the gold and slipped it into a pocket on her apron.\n\n\"I think so, at least with most mammal-type monster girls. These ape-women we may encounter might require a different kind of retraining, but I need to know more about them first. If they've thrown their lot in with the Reavers, it won't matter anyway.\"\n\n\"Careful, Kal. You've fought spirits and insects and sandworms. You've never gone up against something that looks nearly identical to you,\" warned Kashka.\n\n\"You weren't there when we stormed the ant-girls' nest. That was the first time I killed a monster girl. Even though it was absolutely necessary, it still left a bad taste in my mouth. I honestly hope it doesn't come to killing them.\"\n\n\"Well, I wish you the best and hope we meet again,\" said Chaldi just as Soonu called out they were about to leave. The leatherworker climbed into the back of the wagon and waved as her husband flicked the reins to get the horses moving. Kal and Kashka waved back at the woman and gazelles as they made their way out of the marketplace and toward the road leading north.\n\nSighing, Kal let his hand drop and watched with a little bit of pride at the bottles hanging from the gazelle's shoulder straps. If the girls spread what they learned and their experiences afterward to other monster girls, it might start a chain reaction that could change attitudes throughout the area. He wished he had more time to teach some other monster girls, maybe the lionesses, what he discovered. The more people spreading the knowledge and message, the better.\n\nThe mage looked over at his cat-girl companion just as a hand grabbed the front of his shirt. Kashka pulled him down so they were nearly nose to nose.\n\nAs his eyes widened in surprise, she said in low tones, \"Unless we have some other pressing business to take care of. Your Mistress needs you inside her. Now.\"\n\nKal nearly fell over as she let go of his shirt. Kashka turned around, flaring her tan cloak as she spun, before striding towards Lassedo's inn where they were spending the night.\n\nIt was probably a good thing duty forced the Guard Captain to cut their lunch short. Had Kashka spent any more time around his and Jaya's daughter, she might have stopped eating a leaf of gondas weed each morning. The intense, hungry look Kal received once the Guard Captain and his family's backs were turned left little wonder what had gotten her in such a state.\n\n\"As you wish,\" he quietly muttered as a grin spread across his face. Straightening his shirt and adjusting the lump in his pants, he followed the cat-girl. The mage's smile widened as the tip of her tail poked out from beneath the cat's cloak, vibrating with excitement.\n\n------\n\nOne Year Later\n\nA gentle breeze wafted across the savannah as the night sky darkened, revealing a brilliant display of stars. The tall grass brushed against the legs of a group of monster girls standing on a slight rise overlooking a distant campfire surrounded by a band of humans\n\n\"You'd better not be screwing around with us,\" growled the lioness. Her bared fangs glowed in the moonlight as she snarled at the gazelle-woman.\n\n\"I promise it will work,\" said Coovie, \"I can't promise they will fuck you, but I know it works.\"\n\n\"Ugh, fine. But If I don't get any cock out of this, your tongue will make up for it.\"\n\nThe gazelle smiled, \"I'm okay with that.\" She untied one a bottle from her belt and handed it to the lioness, \"Fill this almost to the top. You should be able to hear when it's about to overflow.\"\n\nAs the woman stepped off to the side, another of the pride's lionesses spoke up. \"How can you be so sure this works?\"\n\n\"Because my friend stayed up north to be closer to her mate. She helps him protect the human wagons right now, but he is talking about finding a place to live and a human woman so they can start a family.\"\n\n\"A human woman?\" one of the lionesses sneered, \"not much of a 'mate' then.\"\n\nCoovie shook her head, \"Without human women, there are no more human men. Without human men, there are no more of us. He's talking about finding a human woman to join him and my friend, not replace her.\"\n\nThe gazelle couldn't blame the skeptical looks they were giving her. Thankfully, the first lioness, and pride leader, interrupted any more questions by coming back with the bottle. \"Now what?\" she asked, holding the stoppered leather container out at arm's length.\n\n\"Now, we move upwind.\"\n\n---\n\n\"Quit playing that damn thing. You'll bring down a pack of hyenas on us. Or worse, more gnolls,\" snarled the old man in mage's robes.\n\nThe bard rolled his eyes and continued plucking at the strings of the instrument in his hands. The lute-like instrument, called an akonting, consisted of a large gourd with a strip of leather stretched across it to make a drum. A stiff, round stick running all the way through the gourd anchored the instrument's three strings, with each attached at different points on the neck. It lacked a lute's frets, but that was of little consequence to someone like him. \"I can't very well sing of your glorious exploits in battle when I don't know how to play the thing.\"\n\n\"Maybe if you were paying attention to the battle instead of the cow-girl's tits, your lute wouldn't have gotten smashed,\" snarled a man looking out from beneath the hood of a black cloak and wearing dark clothing that identified him as the party's thief. He held a small sausage in the campfire flames on the tip of a dagger. Raising the food up to his face, he inspected it with a frown. The thief appreciated the wizard's effort to make it feel like a real campfire, but the spell for warming their food just wasn't the same, even if he cast the illusion of a campfire over it. The sausage was cooked, but lacked the crispy outside a real fire offered. He shrugged and bit one end off. It was better than starting a flashfire out here on the savannah.\n\nThe bard replied with a dopey grin, \"Those were impressive, weren't they, Ravin? But she wasn't a cow. I think they call those water buffalo?\"\n\n\"Same difference,\" said a man wearing two short swords crossed on his back along with two daggers in sheaths on either hip. \"Hooves, horns, and gigantic tits. Specific names mean little.\"\n\n\"Either way, had you kept your eyes where they needed to be, that gnoll wouldn't have smashed your lute and forced you to buy that,\" said the last man in the group as he polished the faintly glowing breastplate in his lap. A similarly glowing shield hung on his back while a broadsword lay near his leg.\n\n\"I should've gone after her,\" said the bard, ignoring the party's criticism. \"I bet she would have been happy to show her 'appreciation' for being rescued.\" He accompanied his words with a few gyrations of his hips and a leering expression. A second later, he held the instrument away from his body and looked down at his crotch. Frowning, he said, \"I didn't think I liked the idea that much.\"\n\n\"You and me both,\" said the fighter with the crossed swords as he reached down and adjusted himself. The man with the armor in his lap reached beneath the breastplate to do the same.\n\n\"That would be our fault,\" came a female voice from the darkness surrounding the magical campfire.\n\nThe men jumped to their feet and were all but bristling with weapons in the blink of an eye. Every blade and even the wizard's wand pointed at the gazelle-woman calmly walking toward them with her hands up.\n\n\"What are you doing?!\" hissed another woman still outside the campfire's light.\n\nThe gazelle half-turned, \"It's okay, most of them do this at first. Just keep your hands where they can see them, and don't act threatening.\"\n\n\"You'll not take any of us as your 'husband,' harlot,\" spat the fighter as he brought his shield around and fitted it onto his arm while holding his sword at the ready.\n\n\"That's exactly the idea,\" said the gazelle. \"The ladies I'm with are looking for volunteers. We aren't taking anyone tonight, or ever again if all goes well. If none of you are interested in a long-term association, then maybe we can take care of the problem,\" she gestured at the bulge in the front of his pants, \"we created.\"\n\nThe men looked around at one another in confusion for a few seconds before the man with the shield addressed the wizard, \"Have you heard of monster girls approaching men like this before, Kolix?\"\n\nThe mage shook his head as he traced a spell in the air with the tip of his wand. Instead, the thief spoke up, \"In that town up north, I heard whispers of a few men taking monster girl wives. It didn't sound like these men were kidnapped like usual. They even visit the town every so often.\"\n\n\"That's my friend's doing,\" said the gazelle. \"Someone taught us a new way to get mates, and I'm trying to teach it to these girls.\"\n\nThe bard let his dagger drop and used it to point at his pants, \"And this?\"\n\n\"Just incentive to have some fun with us, even if you aren't interested in becoming a husband. It also keeps you from immediately trying to kill me when I introduce myself. Look around, none of you are going mad with lust, and once these women experience sex with a man not who still has control of himself, they will never try to capture a man that way again.\"\n\n\"She's probably lying,\" said the fighter with two swords.\n\n\"No, she's not, Taven,\" said the wizard. \"I cast a lie detection spell, and she hasn't lied yet. Even though she can't know if her last statement will be true, she believes it is.\"\n\n\"You're saying we should fuck these girls?\" asked the bard.\n\nKolix drew himself up and glared at the bard indignantly, \"I said nothing of the sort Astrik. I merely stated she is not lying about her proposal. I have a wife back home, thank you very much.\" He then visibly deflated as his brow furrowed and eyes began darting around, \"I have a ward set to detect and block monster girl pheromones. It should have warned us about you. Why didn't it activate?\"\n\n\"By what I've been told, the spell ignores small amounts of our scent, so it doesn't trigger from a monster girl a half-day's walk upwind. The little we use isn't enough to trip the ward,\" said the gazelle.\n\n\"You seem surprisingly knowledgeable about this particular ward,\" said the mage, suspicion creeping into his voice.\n\n\"I've been teaching monster girls our new method of attracting a mate for the better part of a year. You aren't the first magic-user I've met curious about this.\"\n\nThe bard sheathed his dagger and raised a hand, \"Sorry to interrupt, but... are we doing this?\" he said, pointing between himself and the gazelle.\n\n\"Yeah, really,\" said the woman behind the gazelle, impatience tinging her voice. \"I'm dripping down my leg from being this close to so many males.\"\n\nThe adventurers all turned toward the man with the shield, who in turn looked at the mage, \"You're sure your lie detection is working?\"\n\nKolix peered at the gazelle, \"Lie to me.\"\n\nSmiling, she pointed at the party leader. \"I don't want to ride his hard cock all night long.\"\n\n\"It's working,\" said the mage, \"it's definitely working. That was a very strong lie.\"\n\n\"Any objections?\" the man with the shield asked, looking around.\n\n\"I'm not fucking some animal,\" sneered Taven as he returned his swords to the sheaths on his back.\n\n\"As I said, I'm married,\" said Kolix.\n\nThe thief laughed, \"Not that that stops you from casting your illusions over the occasional whore to make her look like your wife.\"\n\n\"You mean his wife as she looked thirty years ago,\" the bard chimed in.\n\n\"In my mind, I am with my dear Aggie, and that's all that matters,\" the mage snapped back.\n\nThe party leader sighed, \"If there's no threat, then I don't see any reason not to. Go have fun,\" he said to the thief and bard, \"I'll keep the first watch so the other two can take second.\"\n\n\"Seriously, Holt? You're taking their watch so they can fuck around?\" Taven asked, his hands balling up in anger.\n\n\"Nothing is going to bother us tonight,\" said the gazelle. \"The rest of the pride's girls will guarantee your safety while these two are having their fun.\"\n\n\"I appreciate that, but I trust my party more than you or your friends,\" said Holt turning to the other fighter, \"but I'm letting them do this because of something the gazelle said earlier. If these women do this tonight, then they won't take men hostage anymore. That seems worth a night's sleep.\"\n\nThe bard punched the air with a whoop and started toward the gazelle-woman until the monster girl held up a finger. Stepping to the side, she presented the lioness still in the shadows and said, \"You aren't for me tonight, but for her. Remember, treat her nice, she's never done this before.\"\n\nAstrik stopped, \"She's a virgin?\"\n\nThe gazelle shook her head, \"No, but she's never had sex like this before, so make it good.\"\n\nMildly confused, he approached the other woman. The cat ears were definitely cute, as was the tail. He didn't particularly enjoy the way her eyes shimmered when the moonlight hit just right, it was a little eerie. The bard reached out and ran a finger up her arm making the lioness gasp. Her tightly muscled body shivered from the contact as he traced his way up to her shoulder.\n\nThe lioness's eyes darted between him and the gazelle, filled with apprehension. Her fear made him want to wrap his arms around her and tell her everything would be alright more than it made him want to push her down and fuck the hell out of her. The bard wondered why she seemed so nervous. Wasn't she complaining a few minutes ago about her juices dripping down her thigh?\n\nHe placed his hand on the side of her neck and ran his thumb across her jaw. Usually, this simple move was a good indicator for him how to proceed. If she turned away, but her eyes never left his then he was in for a challenge. If she leaned into his hand, then she wanted him to take the lead. His method wasn't foolproof but worked often enough he trusted it. Unfortunately for him, the lioness stood completely still.\n\nThis must have been what the gazelle meant, the woman's body was primed for sex, but she didn't know what to do or how to react. Glancing to the side, he saw the thief and another lioness waiting to see what he and the pride's leader were going to do. On the edge of his vision, the gazelle waved another lioness over to join her next to his party leader. All eyes were on him and the cat-girl in front of him.\n\nTurning back to the woman in front of him, Astrik slid an arm around her back as the hand on her neck slipped back and collected a handful of hair. As he pressed her body to his, the bard tilted her head backward and pressed his lips to hers. The lioness tensed up at the sudden movement, her entire body becoming stiff as a steel rod except for her tail which whipped back and forth through the grass behind her. As he kept kissing the lioness, she slowly relaxed into him.\n\nWith his lips still pressed tightly to hers, he let go of her body and began undoing the various buckles and clasps on his clothing. When Astrik broke the kiss to pull his shirt over his head, the woman reached out pulled his lips back to hers before his arms were free. Only a few seconds later, his pants and underwear dropped to settle around his ankles. He learned a long time ago boots that slipped off quickly were a necessity when bedding passionate women.\n\nThe lioness moaned as he wrapped his arms around her again. This time one of his hands dropped lower to get a firm grip on her ass. He was momentarily startled as his fingers drifted over the base of the cat's tail. He somehow forgot for a moment that this was a monster girl, not a human.\n\nLifting the lioness up, he found her heavier than she looked, likely because of her firm muscles. After coaxing the woman to wrap her legs around his waist, he slowly sank to his knees and laid her down, making a bed with the tall grasses around them.\n\nAstrik finally released the lioness's lips and pushed himself onto his knees. Her eyes glowed with the light of the moon as she reached down and with both hands and spread the lips of her sex. The virginal apprehension and nervousness had vanished, replaced by the burning desire of a woman who wanted him inside her, now. Taking an ankle in each hand, the bard held her legs apart as he slowly pressed forward.\n\nShe was having none of that. The lioness's torso rippled. Starting at her shoulders, the wave ended when her pussy slammed into his crotch, taking him to the hilt. While the woman dealt with the sudden rush of pleasure, the bard and noted, thankfully, she hadn't been kidding about being wet and began stroking into her with a nice steady rhythm.\n\n---\n\nThe lioness lifted her head to look at him, her face a mask of confusion even as the pleasurable feelings from his cock grew stronger. She kept expecting him to speed up, for his hips to become a blur as he pounded into her with mindless abandon.\n\nBut it never happened.\n\nHer head dropped to the grass below and she stared up into the starry sky while focusing on the sensations from her pussy.\n\nWide-eyed, she whispered, \"This is what Coovie was talking about.\"\n\nThe human stopped for a moment and shifted her hips upward. When his cock sank into her again, it glided across that wonderful spot on the front of her pussy, and she completely forgot about the gazelle.\n\n---\n\nAstrik considered himself a fair cocksman, able to hold his own in the bedroom, stable, kitchen, side of the road, or anywhere he could coax a ladyfriend out of her dress. He was entirely unprepared for discovering the lioness's sex was just as muscled and toned as the rest of her. After shifting to rub his cock against the top of her pussy, her sex clamped down on his prick as tight as any woman he'd been with. Certain he wouldn't be able to get back inside her if he slipped out, the bard pushed all the way inside her and switched to short, grinding thrusts.\n\nThe lioness reached up and pulled him down so they were face to face. \"Don't stop,\" she begged. \"Never stop. This feels so much better than I ever imagined.\"\n\n\"Loosen up just a little, and I can make it even better,\" he said. She gave him a look of disbelief, but a moment later, her pussy relaxed slightly. He began taking long, full strokes inside her still very tight sex, but instead of a steady rhythm, he started speeding up. In a pussy this tight and this wet, Astrik knew he wasn't going to last much longer.",
        "He felt the tightness in his groin and began pounding into the lioness as hard as he could. Her words of encouragement disappeared in a litany of whimpers, grunts, and moans. He didn't understand why confused expressions occasionally flitted across her face, but he was too close to cumming to care.\n\nDriving his cock deep inside the lioness, Astrik gritted his teeth and groaned as he began shooting his seed into her grasping sex. Though his body was in the midst of an orgasm, in his mind, the bard smiled. This wasn't his first time with a monster girl, and he knew what was about to happen.\n\nAs if on cue, the lioness slapped a hand over her mouth as her back arched. The woman's pussy clamped down hard enough to keep him from spurting any more cum inside her. A few seconds passed as the lioness moaned into her hand before she relaxed. Once the pressure abated, the remainder of his seed poured deep into the woman's sex.\n\nAs they recovered, the bard noticed he wasn't going soft. It seemed odd, but he wasn't complaining about staying buried inside the monster girl instead of slipping out. A quiet shuffling of grass beside them caught his and the lioness's attention.\n\n\"Was it as good as I said?\" asked the gazelle.\n\n\"That was amazing. You were right, Coovie. I could never go back to how we used to get men after this.\"\n\nThe bard chuckled, \"And you didn't even get the whole experience. A reputation as a good lover goes a long way toward finding someone to share my bed. I usually take things a lot slower than this.\n\nCoovie grinned, \"An unfortunate side effect of our mating scent. Are you staying with this one for the night, or should I send over one of the other girls?\" she asked the cat.\n\n\"Are you sure we can't keep at least one of them?\" the feline pouted.\n\nThe gazelle shook her head, \"Absolutely not, unless they choose to come with you on their own.\"\n\nThe lioness sighed, \"I should let one of the others experience this too, but I'm really enjoying just having him inside me. I'll call one of the other girls in a few minutes.\" Astrik could only grin when she put her hands on his hips and pulled him deeper into her sex.\n\n---\n\nCoovie nodded and left the couple alone. Returning to the campsite, she passed the thief and another of the pride. The woman bent over in front of him while the human gripped her long hair like reins and drove his cock into her from behind. The cat was clearly enjoying every moment.\n\nShe walked up to the human party's leader and ran her hand over the back of the lioness similarly bent over in front of him. Despite the cat-girl sliding back and forth on his cock, Holt stoically kept scanning the moonlit savannah. Coovie reached under the woman and began teasing her clit. The human grunted as the cat tightened around his prick.\n\n\"This is a big pride,\" she said. \"They could use you and your men's attention for the next few nights to take care of them all.\"\n\n\"We have business to the southeast. We can't stay in the area,\" he replied while urging the lioness to go faster.\n\nThe gazelle chuckled. \"Lion territories are enormous. If you're going southeast, you'll still be inside this pride's lands tomorrow night, and maybe the night after.\"\n\nThe stimulation from the cock inside her and the gazelle-woman's fingers overloaded the lioness's senses. Her knees buckled and she dropped to the ground, furiously rubbing her clit as she came. Coovie and the human watched as the cat-girl's body jerked and twitched from the intense orgasm coursing through her.\n\nAs the lioness's breathing returned to normal, Coovie bent down and ran her tongue along the side of the human's prick. \"It would also give me the chance to sit on your cock all night.\"\n\n---\n\nGripping one of the gazelle's antlers, Holt fed his prick into her mouth. As her lips and tongue went to work, he looked around at his campsite. Taven stood on the opposite side of the fire facing outward. He knew that because of past experiences with monster girls, the man would never fuck one of the lion-women. To the party leader's surprise, that didn't seem to apply to jerking off on one of them. Another of the pride's women lay at the fighter's feet with one hand between her legs while the other massaged her breasts. The entire time she murmured up at him, but the party leader couldn't make out her words.\n\nKovix opted for companionship over sex. On the old man's bedroll, the wizard lay on his side with his arms wrapped around his nightgown-clad wife. The only indication something was amiss came from the tufted tail that occasionally strayed outside of the illusion.\n\nHolt had watched as the gazelle, Coovie, coached both of the lionesses how to deal with his more reluctant party members. True to what she said earlier, Coovie drove home repeatedly to not touch either man unless specifically asked, especially Taven. The party leader found her knowledge, leadership, and confidence quite appealing.\n\nHe reluctantly pulled the gazelle off his prick and waved over another of the cat-girls who arrived a few moments after the last one collapsed at his feet. To his disappointment, the gazelle made it clear that she was last on the list of women needing his men's attention.\n\nThe new girl took up a similar position as the last, and he guided his cock into her dripping pussy as she slowly leaned back. Once buried to the hilt in the lioness, he looked over at the gazelle.\n\n\"I think I might enjoy that.\""
    ],
    "authorname": "BluDraygn",
    "tags": [
        "oral",
        "monstergirl",
        "magic",
        "fantasy",
        "trc",
        "moinster girl"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/trc-lord-of-the-glass-desert-ch-15"
}