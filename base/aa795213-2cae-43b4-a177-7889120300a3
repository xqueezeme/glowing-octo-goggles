{
    "title": "Play Testers Wanted Pt. 20",
    "pages": [
        "Play Testers Wanted: Pt. 20\n\nNote: Sorry for the delay. Some of the scenes did not want to cooperate. Trust that they have been punished for being naughty and back under control. I hope you enjoy it, feel free to vote and comment as you see fit.\n\nDay 1: Gun Shy\n\nI reached over and gently grabbed Kat's wrist, lifted it, and let go. Her arm flopped to the bed in a clear sign of exhaustion. I warned her I had a lot of pent-up energy. Kat, with a great effort, rolled onto her side and kissed my cheek.\n\n\"I suspended your Star Wars account,\" she whispered in my ear. \"We need to track the hack.\"\n\n\"Like I am going anywhere near a full dive anytime soon,\" I fired back.\n\n\"Oh, I will cancel your appearance that I scheduled,\" Kat replied nonchalantly. \"I will refund their donations.\"\n\n\"Charity?\" I asked, and she nodded. \"Fine, I don't have to enjoy myself.\"\n\n\"Just try and smile,\" Kat requested.\n\n\"Who is going to be there?\" I asked as I rolled her onto her other side to inspect the damage from earlier this evening. \"Let's see here.\"\n\n\"SSS, be gentle. My ass is still tender,\" Kat whimpered. \"Who? Well, I hired cosplayers to entertain the guests. There will be plenty of alcohol and eye candy. Oh, be careful. I told you I was sensitive.\" She growled as I lowered my face and kissed her boo-boo. \"That feels much better.\"\n\n\"Which charity are we talking about?\" I asked as I licked the tip of my index finger and traced the swollen red ring. \"You keep flinching.\"\n\n\"Someone else used to ignore my pleas and slide back in and pound me until I nearly blacked out,\" Kat explained and dutifully left Nick's name out. \"A children's hospital is the recipient of the funds.\"\n\n\"Kids and cosplayers, fine,\" I agreed. \"I will let you rest for now.\"\n\n\"And you wonder why the women flock to you,\" Kat snickered. \"No one else gets anywhere near my ass but you.\"\n\n\"I know,\" I chuckled. \"And what a fine butt you have.\"\n\n\"I am going to sleep,\" Kat yawned. \"I lust you.\"\n\n\"I will be in the gymnasium.\" I got up and threw on workout clothes. \"I still have excess energy to bleed off.\" Kat weakly pointed to the box propped up in the corner. It reminded me of a hard shell rifle case. I carried it to the foot of the bed and opened it. Inside the case was a perfect mockup of the Darksaber. The detail was incredible, and within the padded interior were several colored blades for the hilt. \"Thank you.\"\n\n\"I love you, Booker,\" Kat purred. \"Go break in your new toy.\"\n\n\"I love you too,\" I replied.\n\nIt took me five long minutes to reach the gym and assemble my Darksaber. I chose two purple blades for my first workout. Each end of the hilt had a socket that held the attachments and locked them into place. The balance was perfect, and it was late enough that I had the entire gym to myself. Surfer set up a great song list for my workout. I moved to the center of the sparring area, closed my eyes, I let the music pump me up. I launched into form eight, the most challenging of the lightsaber styles. My body exploded into movement as I let go of the emotions I bottled up. The rage and fear drove my arms and legs as I allowed myself to experience the memory of my time in the dev zone. I finished my first pass through the movements and fell back into old habits. I shifted to form one and judiciously performed those moves with clinical perfection.\n\n'Open your eyes, Booker,' Surfer urged. My eyes snapped open, and for the briefest of moments, I spied a silvery-green aura around the violet blades of the Darksaber.\n\n\"What in the hell was that?\" I asked. Surfer borrowed the gym's holographic emitter and manifested her traditional silver figure hovering on a mirror-bright board.\n\n\"Best guess, a bioorganic energy discharge,\" Surfer offered. \"Like bioluminescence, perhaps a yet undiscovered function of your severely augmented biology.\"\n\n\"Hmm?\" I grunted, confused. \"Left?\"\n\n\"Booker?\" Left chuckled.\n\n\"Viridian aura, it wouldn't have anything to do with the dream I had inside the dev zone?\" I asked.\n\n\"Wasn't there? Can you tell me more?\" Left laughed.\n\n\"Ghost lines,\" I said. \"The dream showed two scientists talking about new particles they discovered and a silvery-green glow. Of course, the one guy called them dragon lines and how his grandfather talked about them.\"\n\n\"I never dreamed this would happen,\" Left exclaimed. \"Things are going to get interesting from here on. Lift me above your head. Let me get a good whiff.\" I shrugged and passed the Darksaber into my off-hand and raised Left. I felt my fingers tingle, and when I looked up, Left was glowing with that same viridian aura I had seen earlier. It wasn't bright or impressive but noticeable all the same. Were the ghost lines waking up? \"Gone,\" Left whimpered. \"It will take time for them to manifest. We must be patient.\"\n\n\"Are you serious? What will happen then?\" I asked, but Left remained silent. \"Fine, we'll see how strong the lines become.\" My desire to work out tanked. The dream about the ghost lines appeared to be a message from the hacker and not just my brain imagining things. What else might be true? I disassembled my weapon and returned it to its case.\n\n\"Surfer, lock the doors and turn off all cameras within the gymnasium,\" I ordered.\n\n\"One moment,\" Surfer replied as she manifested in all her sterling glory. The locks engaged with a series of multiple clicks. The LED lights on the cameras went out as I took control of the gym. \"It is all yours,\" she said as she hovered nearby.\n\nI sat down and raised my right hand to eye level. Let's see if I can will this silvery-green energy to manifest. I focused on my fingers and imagined them shrouded in raw viridian potency. Nothing, so I tried again and only achieved holding my breath and feeling like I had to take a dump. Clearly, I was trying too hard. I closed my eyes and just let go. A flash of images and memory collided as one of Left's critical moments replayed in my head.\n\n\"Stop, you are trying too hard,\" the tall, muscular figure said. \"The power is all around you. Just let it in, fill you up, and then manifest it. Now, try again.\"\n\nI imagined I was a human sponge. My skin tingled as I dropped my guard and felt the icy rush of water saturate every cell in my body. I thought of the trillions of nanites lighting up as they drank in the power. Now, let it shine. I opened my eyes and frowned. The weakest of verdant auras surrounded my hand. I wiggled my fingers and attempted to be positive. \"Well, it is something, if unimpressive. Got to start somewhere, I suppose.\" I promised myself I would spend a little time each day practicing. \"Worst case, it makes for an interesting party trick.\"\n\nThe walk to my room was uneventful, and I discovered neither Kyanna nor Aoki in either of the connecting bedrooms. I opened my closet and lifted the saber case to the shelf above my shirts and pants hanging on the rod. On the floor was my backpack to carry my must-haves to the facility when I first arrived here. I sat down and tugged the pack towards me. Inside were my card decks for MTG, my dice bag, and my rollerblades. With all the excitement from playtesting, I completely forgot about them. \"Eh, why not,\" I laughed as I removed my shoes and slipped on the skates.\n\nI made my way to the elevator, down to the lobby, and out the front sliding doors. Three or four circles of the complex helped me regain a bit of muscle memory before I attacked the open road along the coast. The sheer delight of speeding along and watching the tide come in was something I never realized I missed. Moonlight glittered off the crests of the waves, and I remembered piloting the speeder bikes across the surface of Lehon with my friends. The fear I felt warred with the pleasure of gliding along the sidewalks and streets.\n\n\"Fuck it. I am having too much fun to get bent out of shape,\" I cursed. I leaned forward and picked up speed. The fear fell away as a small red dot flashed in the corner of my vision. \"Surfer? What is that?\"\n\n'I do not know. One moment while I run a diagnostic,' Surfer whispered via the implants just below my ears. 'Detecting unknown software. Numenor trademark. How in the hell did you get ahold of this?'\n\n\"Get ahold of what?\" I asked.\n\n'Project Bright Eyes isn't even listed to be stable or available for testing any longer,' Surfer informed me. 'This was a black op project for governmental security agents. Running a level one diagnostic on software stability.'\n\n\"I got it while I was in the dev zone,\" I told her. \"The AI that monitors that area told me to keep quiet about it. The moral implications are a bit vague for me.\"\n\n'Yes, that is why the Lady Shaw put it in mothballs,' Surfer explained. 'She returned their money and shut the project down. My last report on this indicated the program was nowhere near this complete. How is this possible? Project Bright Eyes is stable and finished. I must report this to Kat.' I nearly missed the shift from Lady Shaw to simply Kat. Had the two bonded at some point? That might explain her familiarity.\n\n\"Do so with my blessings,\" I said. \"I have nothing to hide. What is that red light indicating?\"\n\n'Oh, that, apparently a drone is following you,' Surfer declared.\n\n'Systems override, analyzing target, the drone is of unknown origin, manufacturer undesignated. Shall we capture it for study?' The same sexy female voice from within the game spoke now.\n\n\"Don't take it over. Just tie into its sensors and backtrack where it is transmitting to,\" I ordered. \"And me without a bodyguard.\"\n\n\"Easy peasy lemon squeezy,\" Bright Eyes purred. \"There is a van three miles behind you monitoring the drone's feed. I will display the van's interior security footage. One driver, one passenger, and three heavily armed men are in the rear of the vehicle.\n\n\"Is the drone armed?\" I asked.\n\n\"Not really, but it could serve as a blunt instrument,\" Bright Eyes suggested. \"It could penetrate the windshield and eliminate the driver. That might give you enough time to call in backup.\"\n\n\"If they pick up speed and attempt to intercept me,\" I directed reluctantly. \"Do it.\"\n\n\"By your command,\" Bright Eyes replied with a mirthless chuckle.\n\nFor a while there, I thought nothing would happen. I did my best to ignore the van and its occupants. I relaxed enough to enjoy my surroundings. Bright Eyes picked up multiple wifi signals and began cracking their logins to pass the time and get in some real-world experience. We were moving past an old-style Spanish mission with its fading white exterior and iconic bell tower. I half expected to hear gunslinger music or a Tarantino riff at any moment before gunmen opened fire or a sexy vampire attacked. \"MMM... Selma,\" I whimpered.\n\n\"Our Lady of Perpetual Innocense, my ass,\" Bright Eyes snorted. \"Why do college freshmen find it necessary to display their genitals in such an undignified way?\"\n\n\"Is their a dignified procedure that I missed?\" I asked, thinking the AI was joking. She wasn't.\n\n\"Take your pick, Chinese, Russian, Cambodian, or even Corsican. Tons to choose with just a word from you,\" Bright Eyes offered. My curiosity got the better of me.\n\n\"Oh hell, I don't know,\" I growled. \"Pick the one with the most intense expression.\"\n\n\"Using facial recognition,\" Bright Eyes laughed. \"Hmm? Ha! Gotcha!\" My upper right-hand corner field of vision showed the young lady in question. Her name was Laetitia Balandina, and she was a screamer. Her flawless skin had that Mediterranean olive complexion without a hint of tan lines or birthmarks. Laetitia had long black hair, blue-green eyes, and her looks were a nice blend of Latin and Greek. She was a heartbreaker for sure. \"She trimmed for her audience,\" Bright Eyes noticed. \"Perhaps I will pattern my avatar after her. Your vitals have spiked, but in a good way.\" The live stream had a thousand guys watching her use an impressive-looking toy. The dildo was thick and long, and despite Bright Eyes' commentary, Laetitia knew what she was doing. The ever-growing fund from contributors seemed earmarked for Laetitia to use the toy on her ass. I doubted she was that industrious. An icon began flashing on Laetitia's screen indicated that things were about to change. She got onto her hands and knees giving her audience a clear look at her butt. \"Good god,\" Bright Eyes nervously chuckled. \"Now, that is an ass.\" She took the words out of my mouth. \"You could bounce a piece of eight off those cheeks.\" Laetitia's audience donated enough to get her to switch targets. She slid the dildo from her slick sex and aimed it at her asshole.\n\n\"That's it, drive that bad boy,\" I grunted as an explosion behind me tore my attention away from the girl and to the flaming debris half a mile back. I spun on my skates to face where the smoldering van burned brightly in the distance. Flames licked the night sky, sending up incandescent sparks that blazed and then died seconds later. Bright Eyes brought the drone in for closer inspection. \"How did the van explode if the drone is here?\"\n\n\"Microwaves and fuel under pressure are not a good mix,\" Bright Eyes explained, her voice noticeably changed. The little shit had gotten enough sound bites from Laetitia to mimic her perfectly. Stay focused, I told myself. So, that is what the AI meant by not really. There were mentions of the military developing microwave weapons for crowd control. The drone's primary weapon must be a compact version that could subdue a single target with ease. The machine was sophisticated and yet bore no manufacturer's mark or logo. \"The van was closing the distance between it and you as the armed me inserted clips into their weapons. I acted on your behalf.\"\n\n\"And a good thing that you did,\" I praised Bright Eyes. \"We need to take the drone apart and examine its insides,\" I ordered.\n\n\"What about the girl?\" Bright Eyes asked. \"Your vitals were peaking. Surely you find her attractive.\"\n\n\"Yeah, but a threat to my life takes precedence,\" I said. \"We may need to find an independent contractor to examine this beast. Power it down and keep it that way until I get a chance to secure it. Make sure there is no GPS or signal of any kind coming from this guy.\" The drone fell into my outstretched hands. It was time to return to Numenor. I stood for a moment watching the rising moon as storm clouds darkened in the distance as a single bolt of lightning crossed the face of the moon and smashed into the ocean. The crashing waves and kiss of Seabreeze hinted at the oncoming storm.\n\n\"I have disabled its core processor and power supply. You should return to Numenor. It is a shielded facility. There is little chance of the drone reactivating within its walls.\"\n\nI raced the storm back to the facility as it strengthened and pursued me the entire way back. My head and back dripped from the strong breeze carrying the rain and a surprisingly bitter wind. The door slid shut behind just as the torrent pelted the glass and a blinding flash of lightning lit up the early morning sky. I crouched as I removed the rollerblades. The rain had made them nearly lethal, and it took all my skill and agility to keep from falling. I shivered as I waited for the elevator to arrive. Besides the wind and rain, the building was silent. The ding of the bell as the elevator opened startled me. I rode up to my floor with skates in one hand and the drone in the other. I ached for a hot shower and a few hours of sleep under warm covers. Surfer opened the door for me, and I set my burdens onto the sofa and stripped down. Like a dutiful guest, I dropped my clothes into the hamper, started a shower, and basked in its deliciously hot embrace.\n\n\"Surfer, inform Akira that our road trip is delayed and oh the attempt upon my life,\" I added the latter part as casually as possible. \"Any hint as to who it might be?\"\n\n\"I have consulted with Wraith, and he leaves little doubt that Maxwell Schmidt hired the assassins. Your clean energy facility has caused a stir among the fossil fuel industry and its investors. Clan Schmidt has been in decline for the last half-century. When Maxwell assumed the mantle of the family chief, he invested heavily in oil and natural gas. The ZPEM's will likely bankrupt him.\"\n\n\"Not my fault,\" I commented. \"Is this a common occurrence in the scheme of things?\" I asked, not wanting to use the word order or even hint at its existence.\n\n\"There are rules to place a contract on a fellow member,\" Surfer explained. \"With enough money or favors, a black decade can be sanctioned. If Schmidt mustered the fees, then tonight was just the first of ten legal attempts at your life.\"\n\n\"How do I find out?\" I asked as I lathered up my hair and wondered if a road trip was a good idea right now. \"And how long does this decade last?\"\n\n\"Until you defeat the other assassins or you reach Schmidt and either kill him or force him to recant the contract,\" Surfer explained. \"I have requested armor and weapons from the nearest Silent Shadows chapter house. Akira will deliver them as soon as possible. Sleep tight.\"\n\n\"Yeah, right,\" I mumbled.\n\nDay Two: Sodomy on the Orient Express\n\nHow I managed to sleep eluded me. Not only did I sleep, but my dreams made me think I had tapped into Left's early life before the ghost lines failed. The Farcaster War was at its height. The Duskwalker civil conflict raged across a hundred worlds and culminated upon the Earth. I fought on the left-handed side with the would-be empress Kadaena. She was a lover, goddess, and inspiration that burned cities to ash. Her mind seared the thoughts of billions as she waged war beyond the limited concept of mere humans. Kadaena pulled nuclear matter from the heart of a dying sapphire titan and boiled the homeworld of the resistance. Haven was no more. Kadaena reveled as the death cries echoed across lightyears to serenade her to sleep. They had to seal her away in a higher dimension so that the war could end. The united might of a million K'Ta'Viiri hurled her through time/space to a conceptual prison. To keep Kadaena contained and the prison secure, the galaxy forgot. Those same million Duskwalkers wiped the minds of every sentient they could reach. With her imprisonment, the ghost lines died, and with them the K'Ta'Viiri race.\n\nLeft fled the wroth of his fellow Duskwalkers and reduced his form to blend in with mere humans. You maimed yourself to keep from being destroyed. I held up my hand with its two opposable thumbs and between them four long delicate fingers. My eyes regarded the proper shape he had hidden from the beginning. The reflection in my mother's mirror revealed the bright violet eyes, slit cat-like pupils, and the symmetry only the K'Ta'Viiri may possess.\n\n\"Not alone,\" the voice whispered. \"You are not alone, Duskwalker.\"\n\nI woke covered in sweat and the fading viridian light leaving my room dim and painted with weak starlight. It took splashing water on my face to drive the last of the afterimages from my retina and thoughts.\n\n\"Someone has been keeping secrets,\" I said as I brought Left up to eye level. \"You were, or are, a Duskwalker. Which is it?\"\n\n\"Correction Booker, we are a Duskwalker,\" Left laughed as he winked at me from the palm of our shared limb. \"My DNA has crept into you while those clever nanites worked their magic. My superior genetics aided in your survival. You would have died if it wasn't for me.\"\n\n\"Thank you,\" I said with no hint of anger or regret. \"I owe my continued existence to you.\"\n\n\"I am thankful for your generosity and letting me remain,\" Left said without pride or malice. \"I am not the being I was in my youth.\"\n\n\"We all change,\" I said. \"Kadaena was something, eh.\"\n\n\"You are bold,\" Left snapped, and then his tone softened. \"Yes, she was my universe.\" A mental image of the would-be goddess blazed in our shared collective. How do you describe perfection? I recalled the mountain-sized deity I had encountered early on during the Disney princess storyline. I had gotten up close and personal with her. Left's hunger for this woman had diminished little over the millennia. If it were physical beauty, I understood his passion. Her charisma was not limited to physicality. Oh no, she was intelligent, cunning, and entirely without remorse. Kadaena was a Warmaster, tactician, and a psion of unfathomable power. I remembered the dream where she ripped the heart out of a colossal blue star and hurled it at a planet. Fuck the Death Star. Kadaena was a world-ending threat. I stood on my balcony and looked up.",
        "\"This doesn't feel real,\" I whispered. \"This is just crazy.\"\n\n\"I am sure the dinosaurs thought the same damn thing when that meteor slammed into the Earth and wiped them out,\" Left offered. \"For me, it is the opposite. The world feels so diminished since the ghost lines shut down. It was Kadaena's final gambit. My fellow K'Ta'Viiri knew they were doomed when they sealed her away. My race sacrificed themselves to save the galaxy.\"\n\nI focused, and the ghost line energy flickered around my digits. \"Left, what can I expect since I am now a member of your race.\"\n\n\"With such a low level of energy, you are severely limited,\" Left said after a moment of contemplation. \"There is enough to keep you alive. I would guess that your raw strength, eye-hand coordination, agility, and stamina are around that of an Olympic athlete.\"\n\nWe talked until dawn. The danger posed by the awakening of the ghost lines staggered the mind. If Kadaena tapped into that energy, the galaxy would burn, and no one could stop her. The Duskwalkers were effectively extinct or on an irrevocable downward spiral. I had more pressing matters, the black decade, and nine more assassins out there. The storm had only gotten worse, and the road trip could wait until after my appearance, right after lunch. Akira arrived with breakfast and promised to guard my body while playing host along with cosplayers. Eh, it could be worse.\n\n\"I brought your gear from the safe house,\" Akira said between bites of food. \"Your new gloves finally came in. It was a bitch finding a discreet crafter to fashion them for you. The integrated circuitry should tie in with your new upgrade just fine.\"\n\n\"New upgrade?\" I wondered if she meant Bright Eyes and if she did, how in the hell did she know?\n\n\"Wet Works,\" Akira munched on a bagel. \"Heightened sensory input and response system, I forget the official project name.\"\n\n\"Bright Eyes?\" I offered.\n\n\"Yep, that's it,\" she gleefully said, clapping her hands together. \"My nervous system nearly burned out when they attempted the first level integration. I got lucky. You, oh goodness, you are my fucking hero, and you not only survived the procedure but adapted to it. I am proud to serve you.\"\n\n\"Okay,\" I said, confused as all hell. Surfer almost became unstuck when she discovered that Bright Eyes wasn't just active but complete. Had Akira been a test subject for the alpha version of the software? It made sense. I was glad she survived.\n\n\"So modest too,\" Akira giggled. \"I have a listing of the guests for this afternoon. Do you want to read through it? Their actual identities are proprietary, but as you'll see, their fetishes and vulnerabilities aren't. The monikers are reminiscent of the board game Clue.\"\n\n\"Yeah, it might be fun,\" I agreed. Akira set my signet ring and Nick's watch on the table between us. \"Thank you for holding those for me.\" I slipped the ring on but hesitated with the timepiece. It had belonged to Nick. Was a copy of his mind lurking inside of it? My hand shook as I held the prototype of all the Numenor smartwatches. The loving care put into the case was evident, the internal guts had been removed and improved, yet it scared me to death.\n\n\"Scan complete,\" Surfer announced. \"The watch is empty of data crystals or ulterior programming. It needs a crystal or two.\"\n\n\"Shit, I almost forgot,\" Akira said. \"I brought the typical backups.\" She opened a disc-shaped metal case. I plucked them one by one and inserted them into the three available slots. \"The black one is Wraith, the silver one is Surfer, the red one is Magnus,\" Akira listed off the different AI crystals. \"You don't remember Magnus? He is the tactician and a culmination of the finest military minds from Marcus Antonius to Sun Tsu to Miyamoto Musashi, and even generals of the modern-day.\"\n\n\"Given my current situation, I will need all of them,\" I said. \"Now, let's go over the guest list.\" I reluctantly let the memory metal watchband close about my wrist. The smartwatch sealed itself and powered up after a short stability check. I got a green light from my HUD. When nothing happened, I relaxed. \"Back to business.\"\n\nWhile there were no names, the list contained a slew of megacorps and multinational institutions. These were the one percent of the world's elite. I suspected they were either the owners of said businesses or on the board of directors for them. This event did not feel like a charity but more of stroking the egos of the ultra-rich. The positive side is they could afford to fork over a shit ton of money for the less fortunate.\n\n\"Only a few are on the Order's radar,\" Wraith chimed in. \"So, as far as you are concerned, relax and have fun, Sir.\"\n\n\"Thank you, Wraith,\" I replied. \"Any other suggestions?\"\n\n\"If I may?\" Magus asked. Her voice was a silvery alto with deeply sensuous subtleties. \"I concur with Wraith. Your body is under the best possible care. For your psyche's sake, cut loose and enjoy yourself.\"\n\n\"I agree,\" Surfer added. \"But you won't be alone. Just look near the bottom.\"\n\n\"Those are the adult cosplayers Kat chose to entertain the guests, and she has someone special picked out for you,\" Akira grinned. \"I shan't spoil the surprise.\"\n\n\"Is there a theme to this little shindig?\" I asked.\n\n\"Yes, but that is also a secret. My part is simple. While you mingle and entertain the guests, I will guard your body,\" Akira sternly declared. \"No one will lay a finger on you.\"\n\nI spent the morning finding things to bleed off nervous energy. There were only so many situps and pushups one can do before you drag your bodyguard into it. Akira didn't seem to mind being the focus of that outlet.\n\n\"UNN, that's cold,\" Akira gasped as her bare breasts pressed against the glass door leading to the balcony. \"My poor nipples.\"\n\nI kissed my way from the base of her neck to her ear. \"You think anyone can see us?\" I asked as her body began to shake. \"Are you close again?\"\n\n\"Uh-huh,\" she whispered. \"Real close.\" A minute or so later, Akira cried out and laughed as my load pulsed inside of her.\n\n\"That was nine,\" I growled in her ear as I ground against her from behind.\n\n\"Ten,\" Akira gasped breathlessly. \"The last one was a multiple. Trust me. Aw shit, you need to get ready. It is nearly one o'clock.\"\n\nOne quick cat bath later, and I logged into the private server Kat had allocated for our use today. I did not get the bonus for best late arrival. That honor belonged to a cluster of female cosplayers dressed in tuxedo jackets, fishnet stockings, and bunny ears. Their male counterparts were already mingling and entertaining the ladies and gents alike.\n\nWhat happens when you mix sex, politics, and a full-dive fundraiser? Complications must arise. Not everyone likes to roleplay. Some folks are just too uptight to let go and get into the scenario. I just hoped I wasn't the only one trying to carry the group the entire time. We'll wait and see. There were definite groupings with the guests. After a moment, I saw the colored icons over their heads. I stood amidst the dark silver group. Next to us were the gold-ranked guests, and so on. I learned from Surfer that all of the guests had paid through the nose to meet and greet politicians for the upcoming election cycle. The cosplayers were there to keep the guests happy. Your donation level gave you access to a specific tier of talent and visitors since I was one of the VIP's Kat hand-selected the brightest and most talented artist to be my arm candy.\n\n\"Booker,\" Kat introduced me to my trophy cosplayer. \"This is Kalinka Fox, and she is a gifted model and eager companion for you to strut about with on the train. Kalinka, this is,\" Kat began, but the Moscow-born native knew me on sight.\n\n\"The whole world knows Booker,\" Kalinka purred in her accented English. \"It will be my honor to keep him company and amused. I am big fan.\" Kalinka was at least six inches shorter than my six-foot frame. Her sharp Slavic features possessed high cheekbones, cute button noses, and a small mouth with plump lips. Her avatar shared all of her real-world characteristics to the smallest detail.\n\n\"I am sure we will hit it off just fine,\" I replied. Kalinka took my arm and placed it around her waist. \"Don't worry. I'll protect you.\"\n\nThe setting changed as the event began. We stood on a railway line. The dark pink-red train awaited our boarding, and there were gasps of excitement seeing a perfect recreation of the legendary Orient Express. Our period costumes manifested at the same time the train appeared. Kat's speech was short, to the point, and inspiring.\n\n\"Each of you has been given a part to play. Use your HUD to read your name and occupation. How you filled out the questionnaire is the level of depth of your persona's importance in our little drama. Those with roleplaying experience will have more crucial parts. And, of course, those who want to savor the atmosphere can do so at their leisure. It should come as no surprise that Booker will play the part of a world-famous detective. Ladies and gentlemen, welcome aboard the Orient Express!\"\n\nEach color-coded passenger car matched the level of donation, Kalinka and I entered the platinum car as hosts and the draw for such a prestigious crowd of wealthy guests. I accepted a glass of champagne while I checked my HUD. There must be some mistake; I was the murderer, not the detective. This mystery would have one hell of a twist. To score, I needed to seduce the woman into anal sex. I remembered the bio sheet on every high-end client and their sexual predilections. They ranged from light bondage to choking to exhibitionism. I racked up points for each 'kill' and bonus if I used one of their fetishes before or during the act. There were other vague mechanics to earn extra points, but they were learn as you go. Experimentation was the key to success. There were multiple squeals of delight as the train shook as it began to lurch forward and pick up speed. I raised my glass high and toasted to my esteemed victims.\n\n\"Bottoms up, and heads down,\" I called out to the delight of everyone present.\n\n\"I've never done this before,\" Kalinka whispered in my ear.\n\n\"Well, you see, what you do is get on your knees,\" I began when she playfully gripped my arm.\n\n\"Not that silly,\" she purred. \"I meant all these rich people. It makes someone like me nervous.\"\n\n\"I've seen your impressive photo gallery. You have nothing to fear. They want you so bad they can taste it, so, make them work for it,\" I urged Kalinka. \"Not me, of course. You should surrender to me at the drop of a hat.\"\n\n\"Of course I will,\" Kalinka laughed. \"Thanks, I needed that.\"\n\n\"That's what she said,\" several men and women near us roared. They must have overheard Kalinka's last few words.\n\n\"It is going to be that kind of crowd,\" I chuckled. \"So, no shit, there I was,\" I began as I gently cupped Kalinka's firm round bottom.\n\nSurfer informed me that each car had a detective and guests willing to roleplay. However, the platinum car had the fewest imaginative people of all the carriages. That kept things simple for me. Pick out a few daring women, offer them their kink of choice, and see how things progressed. The 1930s wardrobes were exciting and gave the train a nostalgic air. Women's makeup highlighted eyes, lips, and cheekbones dramatically while the men wore suits, carried pocket watches and walking sticks. Hats were popular for either sex though many ladies preferred to show off their perfectly coifed hairstyles.\n\n\"You tell me if and when you feel uncomfortable,\" I whispered in Kalinka's ear. \"I don't want to cross any lines here.\"\n\n\"If I didn't want you to make love to me, I wouldn't be here,\" Kalinka whispered back. \"I have seen you racier videos, and trust me. I want to be here with you.\" I kissed the side of her neck to test the waters, and Kalinka whimpered and clung tight. \"Good opening salvo.\" She turned her head, and I kissed her lightly at first and then more passionately. Kalinka moaned as her arms went around my neck, and we stood there while the others watched our exchange. She broke the kiss gasping for air. \"If this is a hint of what is to come, damn, I can't wait.\"\n\n\"Can I cut in,\" a woman with a distinctly South African accent asked nicely?\n\n\"Please do. I don't want to hog Booker right now,\" Kalinka laughed and let the other woman take her spot. \"Later on, who's to say.\"\n\n\"I am Sapphire,\" the woman informed me. \"I can't believe I am standing next to you.\"\n\n\"Do you want a selfie or something else?\" I asked Sapphire.\n\n\"Bold, I need to be bold,\" Sapphire whispered. To reward her courage I slipped my arm around her waist, pulled her close, and kissed her. I reluctantly broke the kiss when her partner harumphed in my ear. \"Oh, this is my companion Star,\" Sapphire gasped. \"His kisses are like the first rains of spring.\" I didn't miss the connection between the two.\n\n\"How wonderful,\" Star said, her voice silvery and yet elusive.\n\n\"Now, all we need is a Ms. Black to complete the wordplay,\" I laughed as I took Star into my arms. \"You are not South African. I cannot place your accent.\"\n\n\"I am from Egypt,\" Star declared. \"Kiss me and see if you can make my toes curl.\" I slid my hand up and cupped the side of her face. Star leaned against it and ensnared my thumb between her lips. If that was a hint at her oral skills, things might get hot and heavy quicker than expected. I pulled my thumb from her mouth, and as I had with Kalinka, I began with a light kiss but soon, her hunger infected me. It took a hand on my arm to break the kiss.\n\n\"I am Ms. Black,\" the newcomer said with what I could only describe as an air of nobility. \"Stand back and see what a real woman can achieve with a mere kiss.\" She took control, and we stood as equals sharing an ever-deepening kiss until we both broke off and stared at the other. There was something different about Ms. Black. It went beyond her avatar. \"Unexpected and surprising,\" she gasped. \"I have tasted you, and I will not soon forget it.\" Ms. Black stepped away and returned to her tall Italian companion. The brief exchange was intense and shocking. The olive-skinned man looked at me once and raised an eyebrow before the pair blended into one of the larger groups.\n\n\"Triple name score,\" the AI informed everyone. \"Booker has unlocked Black Star Sapphire for a bonus award.\" A thumb-sized gemstone fell into my open palm. Left held it up for all to see. The jewel was a perfect cabochon that needed a setting, so I pocketed the stone and returned my attention to Kalinka. The other women had drifted back to their friends, leaving us alone.\n\n\"What do you make of Ms. Star?\" I asked. \"Her accent intrigues me.\"\n\n\"I was about to say the same thing,\" Kalinka replied. \"I have a large fan base, and yet I have never heard that one before. She said she was from Egypt, but I know for sure that she isn't a native. Star must just be living there.\"\n\n\"A real mystery,\" I offered. One of the servers passed by with a tray with glasses of champagne. I lifted two and offered one to Kalinka. \"Here's to an enigma.\"\n\nThe Woman in the Scarlet Dress:\n\nThe flash of red silk caught my attention. The rest of the world seemed to turn monochromatic, and only the slinky woman in red was real. The Asian beauty in the crimson Chinese style dress appeared from the rear of our car. The Qipao had black accents and a daring slit up one side that went to her hip. When she walked, I kept trying to see if she had on panties or not. Nope, it was smooth skin from ankle to waist. I knew my targets weren't the cosplayers, but the Ada Wong clone was killing it as she stalked the center aisle. Her name was HaneAme. She had a following of three million fans and growing. Between her and Kalinka, I planned on making one or both of them scream before this was over.\n\n\"You are Booker,\" Hane greeted me. \"I have seen your videos.\"\n\n\"Did you like them?\" I asked as Kalinka returned from a round of selfies with the wealthy guests. \"My poor manners, Kalinka, have you met HaneAme?\"\n\n\"We share interests,\" Kalinka replied coolly.\n\n\"Yes, I find Booker attractive as well,\" Hane added. \"Perhaps later, I have a photoshoot with a few guests.\" I watched the Taiwanese cosplayer walk away and tried to determine which side I preferred. Her ass was amazing.\n\n\"You want to fuck her too?\" Kalinka moaned in my ear. \"Are you sure you can handle the two of us?\"\n\n\"I have a few words for you,\" I said, my lips brushing her ear. \"Double Dragon.\"\n\n\"Challenge accepted,\" Kalinka growled happily. \"It seems the dear mega pastor requests my presence. This encounter won't take long. Have fun while I'm gone. I have points to earn.\"\n\nSpeaking of points to earn, I pulled down my HUD and cross-referenced which ladies from my files were in the platinum coach. I sipped my drink and compared the ladies present with the more exciting kinks they preferred. One stood out among the rest and seemed like a great ice breaker. My opener was a chancy gambit, but the entire car would get an eyeful or more if it worked. I pretended to look out over the available ladies when I purposefully locked my gaze on my target and then made a dismissive expression and moved on. Ms. White's avatar was a petite dishwater blonde with a noticeable dimple in her chin, bright blue eyes, and girl next door good looks. The dark blue dress made her eyes pop and set off her fair skin quite nicely.\n\n\"Oh hell no,\" Ms. White exclaimed loudly. She was tipsy and having none of my shenanigans. \"Don't you fucking dare!\" The woman got to her feet and placed hands on her curvy hips. \"I saw what you did. No. You will not dismiss me like that.\" Everyone was watching her lose her composure. \"Am I not good enough for you? Is that it?\" She stomped her foot and sneered. \"Oh my god, that is it. You don't think I rate your attention.\" I never said a word. I shrugged, and I might as well have slapped her instead. \"I'll fucking show you.\" She proclaimed as she unzipped the back of her dress. With a rolling of her shoulders, the garment slid to the floor and puddled there. \"See these tits, eh? They are perfect.\" Ms. White said as she ran her hands across them. The antique undergarment hid any details but hinted at a formidable rack. \"I got pierced nipples, and so is my clit, mister high and mighty.\"\n\n\"He doesn't look impressed, Ms. White,\" one of the other female guests joined in. \"I bet his cock wants a real woman.\"\n\n\"Screw you, Indigo girl,\" White fired back. \"I am all woman, and I'll show you.\" Indigo girl winked at me knowingly, and the show got hotter. Ms. White's file said she adored a public audience and allowed light choking and mild pain occasionally. With the aid of another woman, they unlaced the whalebone corset, and everyone watched as Ms. White's tits spilled out. They were a glorious sight to behold. The glint of gaslight on cold metal told the truth to the woman's claim. \"See, I told you.\" White made it clear she had nothing to hide as she tugged down the antiquated underwear which joined her dress on the floor.\n\nI made a face, and White went ballistic. She snarled as I gestured, and the message was clear. You want to impress me, get on your knees and crawl over here. When Ms. White hesitated, I turned to face an adorable Canadian woman and began openly flirting. The newcomer laughed and kissed my cheek. White whimpered as she dropped to her knees and started crawling. I whispered to the Canadian, and she nodded.\n\n\"You call that slithering? I don't. A real woman would prove her worth, right darling?\" The Canadian laughed cruelly. The sound that escaped Ms. White's lips was as much feral as it was sexual. I kept my back turned as the other woman described what was happening. Finally, White tugged on my pant leg to get my attention. I turned, and the rest of the guests watched the following exchange in silence. White looked up as I squatted, slid my fingers into her professionally coifed hair, and made a tight fist. I pushed her head down as her ass went up as high as it could go. A grey-haired gentleman raised an eyebrow, and I nodded. He approached Ms. White, cupped his hand, and smacked her bare ass so hard the echo sounded like a gunshot.",
        "\"Again,\" someone cried from the back. Ms. White shook as she neared climax. I nodded a second time, and another man walked up and soundly swatted the prone woman's ass. White's shout as she came was glorious to hear. I watched her quivering form as two well-defined handprints formed on either ass cheek.\n\n\"I am soaking wet,\" the Canadian whimpered. \"Say something.\" I shook my head and brought Mrs. White's head up slowly. I looked her in the eye and frowned.\n\n\"What do you want?\" White desperately gasped. \"Tell me damn it, and I will do anything you want.\" Ding. Her ass belonged to me. I gestured for her to continue. \"You want me to suck you off right here?\" I nodded. \"I love giving head, especially with an audience. Are you going to let me ride your cock?\" Again, I nodded and gestured a second time. \"More? What else could you, oh, you want my ass don't you?\" I smiled. \"Fine. Damn you. I will let you fuck my ass. No. Oh, you want me to do all the work. Okay.\" White agreed to my terms. \"Let's get this started. Come on, Lake, get down here with me and lend a hand or something.\"\n\nI touched Lake's arm and shook my head. True to form, the voyeuristic Lake marked that as her favorite act next to getting laid. \"Sorry, love, he is right. I like to watch. Maybe he'll let me join in later.\"\n\n\"This just gets better and better,\" White purred. \"Watch me set you free, and then you'll see these tits of mine in action.\"\n\nWhite leaned in close and pressed her face against the bulge in my pants. She breathed, and I felt her hot breath against my skin. With a bit of finagling, White worked the belt and unzipped me. The pants settled around my feet as she rubbed her face against my underwear until I was so hard the tip poked out the top. White licked the tip causing me to shiver at the electric contact.\n\n\"She's got your number,\" Lake groaned. \"Look how hard you are.\"\n\nWhite tugged my underwear off with her teeth, and then the show began. She spat in the palms of her hands and double fisted my erection. I let out a whimper when half my cock slid between her lips, and her cheeks caved in as she sucked me off. I will give her this. Ms. White knew how to tease and please a guy. When she finally trapped my dick between her tits, I was ready to blow but held on for a full minute before she clamped her lips around the tip and swallowed.\n\n\"You are still hard, fuck this. I am going in,\" Lake declared to me and the audience.\n\n\"I simply adore live sex shows,\" a woman nearby tittered. \"It was worth every penny to see this in the flesh, so to speak.\"\n\n\"Ooh, look, he is doing that thing,\" her partner gasped.\n\n\"The Double Dragon,\" the lady added exasperated. \"How many times do I have to tell you. Booker's signature move, and here we are to see it.\"\n\nLake's avatar was taller than White's by a good six inches. She had chestnut hair, green eyes, and well-balanced tits to ass ratio. She was nowhere near as curvy as White, but she wasn't tiny either. Her athletic frame was moderate in every way but her face. Lake was striking in her looks but not traffic-stopping. Whoever designed her had done one hell of a job--an excellent balance of fantasy and reality.\n\n\"I told you he could do that,\" a woman commented. \"He has wrecked more superheroes than an infinity stone.\"\n\nWhite began alternating using her tits and mouth as I did my best to remain casual. Sharing footage from a video game was one thing, but live streaming what looked to be quickly devolving into a full-blown orgy was another. People began pairing off in groups as small as two and as large as four. Puppy piles were everywhere. Lake knew her way around sucking a cock to her credit. If I had to choose her talent, it would be an edging master. Lake would tease until I got close and then stop. She repeated this process until I was painfully erect.\n\n\"It is time to mount this guy, instead of on my wall that bench over there. Come on, Mr. Quiet,\" Lake growled as she led me to the spot with her hand on my upper cock. \"That's it, now, assume the position.\" I was about to do as Lake ordered when a third woman appeared.\n\n\"Excuse me,\" a young lady said as she laid her hand on my shoulder. \"My partner got called away for business. My name is Stone. Can I join you?\" The petite blonde was already naked and erotically chewing her plump lower lip. I was about the answer when without warning, my HUD dropped, and Bright Eyes alerted me to an energy pulse within the platinum carriage. I laid my hand on Stone's arm and searched the train car. A flash of milky white hair alerted me to the newcomer. While everyone else dressed in period clothing, she wore an eclectic earthy robe from Southeast Asia. The dark cloth contrasted her creamy white skin and hair. Once I got a good look at her, I recognized Jarael instantly. She was the pattern for the Arkanian Offshoot I used on Tattooine. Who was this woman, and how did she manage to import so exotic an avatar?\n\n\"Can I watch?\" Jarael asked. I ticked off the characteristics of an Arkanian, and she possessed all that I could see. Blue eyes, lips, tongue, and hopefully, she had blue nipples, labia, and asshole that matched the rest. Those are the authentic marks of the species.\n\n\"Stone, Lake, um, White, do you mind?\" I asked, but they were too occupied to reply. \"Enjoy the show,\" I said. I was about to lift Stone into place when one of the servers approached me and held out her tray. \"What is this?\"\n\n\"A special toy for you to try, Sir,\" the server replied.\n\n\"It looks like a, oh, I get it,\" I laughed. \"White, get your ass up here.\" Ms. White grinned and spied the gleaming blue plug on the tray. Without a word, she faced away, bent over, and pulled her cheeks apart. \"This'll make the penetration easier.\" I picked up the toy, licked the business end, and placed it near the opening. The toy did the rest. It moved on its own and proceeded to bury itself to the proper depth without my assistance.\n\n\"It's vibrating,\" White moaned. \"Oh god, it is going to make this more interesting.\"\n\n\"Will the other ladies require a toy as well?\" The server asked. Lake and Stone bent over and offered their backsides for implantation. I plucked a toy for each of them from the tray. Just as before, the plug wiggled its way in and stopped.\n\n\"Weird,\" Stone groaned. \"But a good weird.\"\n\n\"Oh damn, I could get to like this,\" Lake admitted.\n\n\"If you require any restraints, gags, or other toys, just ask,\" the server said with a smile.\n\nLake's fingers slid into my hair and tugged firmly yet gently. \"Remember your place,\" Lake reminded me. \"Down, boy,\" she ordered. I lay on my back, and they did the rest. Stone, the newcomer, straddled my face, and I went to work on her. The rest is a bit of a mystery. White and Lake each took an erection, but I couldn't tell you who sat where.\n\nI lapped at Stone's already drenched sex to get things started. I used the serpent tongue technique to test how close she was to climaxing.\n\n\"Holy hell, how long is your tongue?\" Stone wailed. I cupped her ass cheeks as I undulated my tongue inside of her. White and Lake see-sawed on my cocks much to the delight of those not caught up in their satisfaction.\n\n\"Did I ever tell you about my pleasure tour of Southeast Asia?\" Lake asked. \"That albino girl reminded me of it. The clothing she is wearing is from that region.\"\n\n\"You always do this,\" White complained. \"We find a few well-hung men to fill in the gap, and then you start ranting about fucking someone else. Focus, we are sharing the Booker of full dive fame. The man with over two hundred million followers. Let that sink in.\"\n\n\"You are right,\" Lake agreed. \"His cock is kissing my womb.\"\n\n\"That's more like it,\" White crooned. \"I can't wait to feel it buried in my ass.\"\n\n\"You mean both inside you at the same time,\" Lake corrected her. \"He can DP us single-handedly. Let that sink in.\"\n\n\"Oh god, you are right,\" White whimpered. \"Getting close.\"\n\n\"Me too,\" Lake growled.\n\n\"I don't know if that will fit in my ass,\" Jarael commented to one of the politicians.\n\n\"I wish I could do that,\" the honored Senator from a southern state said. \"I'd never leave the house. Of course, that would mean finding a second mistress.\"\n\nThe trio above me swapped places after their first orgasm. Stone offered to be the first to get DP'd, and an anxious White conceded. She even held my erections as Stone got into position. \"Bottom one is in position,\" White called out like some NASA engineer. \"Upper cock is locked and ready. You may descend when ready.\" Stone pushed against me, and we both grunted as I filled her up slowly.\n\n\"I never get tired of this feeling,\" I moaned as Stone's ass touched my groin.\n\n\"Balls deep and ready for action,\" White laughed nervously. Stone began to move, and the audience moaned with her.\n\n\"Look at her expression,\" Indigo girl moaned. \"I want to feel like that.\" Two eager men took her up on her offer, and she accepted.\n\nI turned my head to look at the audience and spied a naked Jarael. She had shed her robe and held up a ring gag in one hand and one of the smart-plugs in the other. She was the real Jarael, down to her cerulean areolas and labia. Jarael set one foot on the opposing bench and made a show of pulling her ass cheek with one hand and inserting the toy with the other. \"I am soaked,\" Jarael declared as she pulled her sapphire labia apart. \"See. I am practically dripping.\"\n\n\"Unn! He just got thicker and longer,\" Stone howled. \"How?\"\n\n\"Booker is a shifter sweetheart,\" the knowledgeable woman near the front explained. \"He can do a lot of things that would surprise you. She is about to pop.\" Stone shrieked as she climaxed and lay atop me, gasping. \"Damn, now that was intense.\"\n\nWhite fulfilled her promise eagerly after watching Stone on top. Jarael helped White into position. White rocked her hips, letting her ass get used to the head of my cock inside of her. Ms. White smiled as her audience urged her to start moving.\n\n\"Well?\" I asked her.\n\n\"I've never had my ass violated before,\" White shared as she savored the sensation.\n\n\"It has now,\" Jarael reminded her. \"How does it feel?\"\n\n\"Good,\" White moaned.\n\n\"I wasn't talking to you,\" Jarael snapped and slipped into the role of disciplinarian. Her delicate fingers wrapped around White's throat. She squeezed gently and watched the other's eyes roll-up. Jarael let go, and White climaxed so hard she nearly pushed me out. \"Can you stand?\" With a bit of maneuvering, I got to my feet with White along for the ride. White cried out a second time when both cocks drove even deeper into her. \"Now, be a dear, and pound the hell out of her.\"\n\nThe other guests got into the spirit of the moment. Indigo girl's two partners impaled her standing up. She clung to the man in front of her while the one behind pounded her mercilessly. The sexual feeding frenzy took hold of nearly everyone.\n\n\"Real life is going to be disappointing after this,\" White whimpered.\n\n\"Enjoy it while it lasts,\" I said. We switched things up just before White climaxed so that I faced her with her butt resting on the bench. I wanted to see her expressions as I moved. It took a few minutes to coax her final orgasm from her, but it was worth it.\n\n\"Damn, that was intense,\" White gasped. \"You read me like an open book. It was worth losing my virginity to you.\"\n\n\"Regrets?\" I asked, and the hungry kiss removed any doubt on that matter. \"Good.\" Lake took a pass and noted how drained I looked.\n\n\"She is right. You looked parched,\" Jarael remarked as she handed me a large glass of water.\n\n\"I recognized you,\" I replied. \"You stand out in this crowd.\"\n\n\"I stand out in any crowd,\" Jarael stated confidently.\n\nI drank the water to rehydrate after the free-for-all. Others were catching their collective breaths as round one ended, and we prepped for the subsequent encounter. My HUD dinged, and I read the reward message. Fourway word bonus, Lake White Stone, congratulations triple name score. Backdoor and DP bonus for White Stone, quadruple sex score. Well done, Anal Assassin.\n\nKalinka and Hane returned, holding their clothing. The Russian sniffed the air and declared the strong scent of sex in the air. Hane sat next to Jarael and looked at her in the same way I had. \"Are you a guest?\" Hane asked Jarael.\n\n\"Sort of,\" Jarael replied.\n\n\"Poor thing,\" a woman whispered to her partner. I followed her gaze to Kalinka. \"Refugee who turned her life around.\" Kalinka plopped into my lap, facing away from me. \"Ooh, that lucky bitch!\" Kalinka set her neatly folded clothes next to me and then took Hane's and set them atop her own.\n\n\"You are all the talk,\" Kalinka purred in my ear as she rocked her hips. My upper cock slid between her ass cheeks as she moved slowly. \"I get stuck with the quote man of god while you devastate no less than three women. Can you go again, friend Booker and help me forget that misadventure?\"\n\nHaneAme wore an equally exasperated expression on her lovely Taiwanese features. \"What I do for money,\" she cursed. \"So, who is your new friend. Wait, I know you.\"\n\n\"Hane, this is Jarael. The beauty grinding in my lap is Kalinka,\" I moaned. \"They are also cosplayers.\"\n\n\"I never said I was a model or a cosplayer, but it is nice to meet both of you,\" Jarael replied.\n\n\"Give me a bit,\" I moaned. \"I need to catch my breath.\" Kalinka retained her seat but sat there content to be envied by the other females in the coach. \"If you aren't a cosplayer, then you must be a guest.\"\n\n\"Must I?\" Jarael replied. It reminded me of the woman who had stated that she was from Egypt. It left me pondering who was roleplaying Jarael and the Egyptian. Not that I minded, just intrigued. Jarael was deliberately mysterious.\n\n\"There are private rooms set aside to take photos with the cosplayers,\" Kalinka explained where she and Hane had been. \"Depending on the amount donated is how interesting that encounter will be. Sex is rarely on my list but damned if the pastor didn't make an offer, I couldn't refuse. I made one year's earnings while I was gone. Sadly, while he might be charismatic in front of his flock, his performance left much to be desired.\"\n\nSudden Revelations:\n\n\"The disappointment is real,\" Hane remarked. \"Too many over-eager fans thinking they own you.\"\n\n\"I have been lucky on that front,\" I replied. \"Of course, I don't do a lot of public appearances.\"\n\n\"Hot towel?\" A female server offered. Kalinka accepted one and gingerly washed off my naughty bits. \"Two! You must be that Booker fella all the girls are talking about.\"\n\n\"Yep, that's me,\" I admitted.\n\n\"Oh darling, here let me,\" the server took a second towel and knelt between my legs, and wiped me down slowly. I shivered when she gently lifted my lower cock so she could clean my balls. \"How's that?\"\n\n\"Lovely,\" I moaned. \"Can you leave one? For now, I feel a little exposed.\"\n\n\"Course Sugah,\" the server giggled and placed a fresh towel over my junk. \"Gotta run. Plenty of folks need me.\"\n\n\"I like her,\" Jarael commented. \"Ooh, speaking of fans.\" She gestured to a young man standing nearby. \"Here, sweetie, sit between us,\" Jarael offered as she and Hane moved apart.\n\n\"Oh, thank you,\" he said, blushing furiously. \"I don't know what to say.\"\n\n\"You aren't the only one that sticks out in a crowd,\" I said as the stranger sat down. He was the only person still fully dressed. \"Relax and ask away,\" I urged. \"What is on your mind?\"\n\n\"Thank you,\" he stammered as Hane ran an index finger along the side of his neck. \"My name is Turquoise. Since you are so well connected, I have to ask you. I mean, you have two hundred million followers. You must have heard about them.\"\n\n\"Them?\" Kalinka asked.\n\n\"They call themselves the Order,\" Turquoise spat out nervously. I willed myself not to react.\n\n\"Illuminati?\" I offered, and he shook his head. \"Who then?\"\n\n\"We need to go back ten thousand years,\" Turquoise began. \"Please let me get this out so that someone else knows. There have been many different branches of humanity. Some of them were close to us, while others were distinctly different. This evidence begins with one of those other tribes.\" He paused to gauge my reaction. \"Did you ever wonder why we began building cities? We started as hunter-gatherers, and then in a thousand years, we have mastered stone cutting and fairly advanced engineering. We began making cities for them, for the other tribe.\"\n\n\"Why?\" Hane asked. Turquoise turned to look at her, and his expression bordered on the manic.\n\n\"They were tired of the hunt,\" he whispered. \"Just as we hunted deer and elk, they stalked us as food. They gave us the skills to quarry, cut, and lay stones to make their lives easier. They built a corral for humanity and look at how well it works to this day. How many people disappear every year in the US? Hundreds of thousands vanish without a trace.\"\n\n\"The numbers are on your side so far,\" I said. \"What does this have to do with this group you mentioned?\"\n\n\"Some opportunistic cultists, the Order made a pact with the others. These traitors kept their fellow humans under control, and in exchange, they received knowledge and technology. They have been controlling things ever since. Think of them as landlords for an older and more advanced society. I know it sounds crazy,\" Turquoise said, his body trembling.\n\n\"Why me?\" I asked, wondering who this guy was and how to track him. I protected the Order and kept its secrets. Turquoise represented a threat.\n\n\"You have so many followers,\" Turquoise said, his eyes wide and his expression desperate. \"You must help me. Tell them. The truth needs to get out.\"\n\nJarael visibly tensed and seemed ready to spring if the man became violent. Who was she? Then, without warning, Turquoise logged out. He vanished from the simulation. If I contacted Wraith, I would make things worse. I just hoped one of the Silent Shadows monitored this feed and took action.\n\n\"Well, that was fucking weird,\" Kalinka remarked. \"Don't let it bother you. It happens all the time to me. Of course, I have to deal with would-be stalkers and just plain freaks. It is a part of being in this business.\"\n\n\"Absolutely,\" Hane agreed. \"A few of my whales believe they are in love with me. They show up at conventions, buy an autographed picture, and they make a connection that isn't there.\"\n\n\"Have you done a photo shoot yet?\" Kalinka asked.\n\n\"No, I'm just a playtester,\" I replied.\n\n\"Just, you heard what Turquoise said,\" Jarael argued. \"You have millions of followers. You are an influencer.\"\n\n\"He looks down in the face,\" Hane remarked. \"I know what will put a smile on your face.\" The Taiwanese scooted her butt to the edge of the bench, brought her knees to her chest, and pushed them apart as far as she was able. \"Tada.\"\n\n\"The towel moved,\" Jarael said. The pale woman reached between Hane's legs and lightly rubbed the other's clit. \"Let's see if we can get it to fall. It looks like a tent is forming.\"\n\n\"Something is rubbing against my butt,\" Kalinka got into the game. \"Let me help,\" she said as she rocked her hips ever so slightly. Both cocks were soon fully erect, and the towel hit the floor. \"Do you want to fuck me... us?\" She ground against me as she continued to tease. \"You said you've seen my work. Which character is your favorite? What gallery of mine did you like?\"\n\n\"Without a doubt, it would be Hermione,\" I replied. \"Maybe it was the wand between your breasts that I found enticing.\"\n\nHane shifted her position and knelt between my legs. Jarael moved beside her. \"You mean like this?\" Hane purred as she captured the lower erection with her tits. \"How does that feel?\" Jarael produced a tube of lube and applied it to both erections. \"Mmm, that's better.\"\n\n\"How does it feel,\" Jarael asked as Kalinka used both hands to stroke me, and Hane used her tits to tease me.\n\n\"Two different types of sensations at the same time,\" I explained. \"Kalinka's ass and hands-on one side and Hane's tits on the other. I like.\"",
        "\"This is getting good,\" Jarael purred in Hane's ear. \"They both have great tits, Booker.\"\n\n\"I know,\" I agreed as I cupped Kalinka's breasts with both hands. \"So firm, they feel great in my hands.\"\n\n\"Can I watch while you break this would-be cosplayer?\" Hane asked as she flickered her tongue over the tip of the lower erection.\n\n\"I will make you swallow those words slut,\" Kalinka growled playfully.\n\n\"Make me,\" HaneAme fired back. Jarael struck from behind. She grabbed either side of the Taiwanese's head and pushed it down. My lower erection slid easily between Hane's lips and halfway down her throat. Hane pretended to fight and produced an up and down motion.\n\n\"See, she can't even suck a cock properly,\" Kalinka snickered just before I lifted her hips and impaled her on my upper cock. \"So damn deep,\" the Russian wailed for all to hear.\n\n\"Don't fret, Booker, I got this,\" Jarael snickered as she slid her fingers into Hane's hair. \"And down, and up,\" she intoned as she helped the Asian deepthroat me. \"You have a talent for this. Now, this time with more feeling.\" Hane, with Jarael's help, had me gasping in just a few minutes. \"Tap my leg if you want to stop. Oh, I'd swallow if I were you.\"\n\n\"Mmm-Hmm,\" Hane moaned as she continued going down on me with Jarael's help.\n\n\"I haven't had this much fun since,\" the thought perished midsentence. \"Coming!\" I howled, and the dutiful Hane swallowed every last drop.\n\n\"Good girl,\" Jarael praised her. \"Damn, he is still hard.\" Jarael never hesitated. She took Hane's position, took aim, and eased the lower erection between her cobalt labia. \"Fuck me Duskw... Booker,\" Jarael ordered. I faltered when I heard the first syllable of what had to be Duskwalker. How the hell did she know? Due to my position, it left the ladies in charge. Kalinka spun around and faced me, making movement easier. Hane patiently watched the spectacle and my twin cocks at work.\n\n\"I can't wait to have both in me,\" Hane moaned.\n\n\"I am going to break you,\" I growled since I wanted to be in control and pound them until they screamed. \"I daydreamed about this.\" The words were factual enough, but they kept the panic away. Jarael wasn't just a guest. Somehow she knew about the K'Ta'Viiri. Did she know Left? Was she another Duskwalker in disguise? I pushed the questions away for now and focused on the ladies.\n\n\"Ooh, thicker than I am used to, a lot thicker,\" Jarael moaned as I slid deep into her. Kalinka's inverted position made things easier for all of us. Now, as the Russian rose, Jarael descended. It was a perfectly timed execution and painfully exquisite. I wanted to go faster, but logistics denied that. It became a slow burn I would remember for a long time. \"He's getting even thicker. Should we let him climax?\" Jarael asked as she clenched her internal muscles.\n\n\"I promised Dusk my ass,\" Kalinka declared to the onlookers and me. \"If he can go another round, then do it.\" I wanted to scream now that Kalinka was calling me Dusk in front of everyone. Damn it, Jarael!\n\n\"Aw god, his cock is kissing my womb,\" Jarael wailed.\n\n\"Think of all the new subscribers,\" Hane giggled. \"MMM, delicious.\"\n\nJarael surprised everyone by being the first to orgasm. Kalinka and I came at nearly the same instant a few minutes later. We took a short break before I went on the offensive. I rewarded Hane for her patience and had her kneel on the seat of my bench. \"Everyone got a clear view, good?\" I asked the crowd as I aimed. \"Now you see them,\" I growled.\n\n\"Unn! Fuck me,\" Hane cried out when I slid into her. \"I've never been DP'd before. This sensation is amazing.\"\n\n\"Ah, the memories,\" Jarael whimpered. I ground against Hane as I looked over my shoulder at Jarael. \"Oops, I did it again.\"\n\n\"We are going to talk,\" I promised. \"Hane, sweetie, can I take out my frustration on you?\"\n\n\"Yes! Please!\" Hane begged as I pulled back and slammed into her. \"More.\" That was the last coherent thing I got out of her until I came inside of her.\n\n\"Is she okay?\" I asked.\n\n\"We might have trouble getting that smile off her face,\" Kalinka chuckled. \"I promised you my... like this? Can you see us?\" She asked the assembled guests. \"Unn yeah, that's the ticket. I get double stuffed and lose my anal virginity all in one go.\" Kalinka lay on her back with her ass on the edge and her legs spread wide. \"I love it when they stare at me.\" Jarael helped me get lined up, and as I pushed forward, she whispered in my ear.\n\n\"Fuck her like you were going to die tomorrow.\"\n\nI did as she suggested. I began slowly until she adjusted to me being balls deep in her ass. When Kalinka's hand left my chest, and she nodded, I picked up speed.\n\n\"Hold on tight,\" I grunted as my hips pistoned back and forth.\n\n\"Where does he get the energy?\" A woman to my right asked.\n\n\"The benefits of youth,\" a man answered. \"When I was his age, I could fuck for an hour without rest. Of course, back then, anal sex was utterly taboo. Only real sluts took it up the ass.\"\n\n\"I must be a real slut then,\" Indigo girl giggled. \"Lying down or standing up, I'll take them on.\" Kalinka's eyes rolled up in her head as the noises she made got louder and louder. \"Oh, she's going to break any second now.\" The Russian howled as I climaxed inside of her. \"Huzzah, that was an orgasm of epic proportions.\"\n\nI leaned over Kalinka. Large droplets of sweat fell from my face and struck hers, and the server returned with chilled towels with perfect timing. I grudgingly pulled out of Kalinka, and she seemed equally reluctant to separate. Jarael dropped down and licked me clean without me asking. When she finished, she stood and kissed me.\n\n\"I guess you are done,\" she whispered, disappointed. \"Maybe... what are you, Unn? Your aim is better than I expected. How the hell are you still able to move?\"\n\n\"Curiosity,\" I grunted as her back hit the side of the train. Jarael's legs wrapped around me scissor fashion. I kissed her as I began thrusting up into her.\n\n\"Whoa,\" a man exclaimed. \"He wants her and bad.\"\n\n\"No kidding,\" a woman agreed. \"I wish my husband showed that kind of passion.\"\n\n\"Go Dusk,\" the crowd took up the chant as I pounded Jarael standing up. Anger mixed with hunger as I slowed down but drove my hips harder. Jarael broke the kiss so she could catch her breath. Her body was covered in sweat, causing her hair to clump behind her pointed ears.\n\n\"I am going to break you ghost elf,\" I snarled. \"You are going to scream by the time I come.\"\n\nJarael renewed the kiss as her nails raked my back. I felt her entire body quiver, and our audience didn't miss it either.\n\n\"She's close,\" Indigo girl called out.\n\n\"He's picking up speed,\" another woman exclaimed.\n\n\"He is shaking now too,\" a man hollered. \"This is going to be a photo finish.\"\n\nI remember that feeling of something bigger than my body trying to get out. When I came, I thrust so hard against Jarael I felt one of the sideboards making up the wall snap in two. Our mutual screams silenced those behind us for a few seconds before the roars and clapping began.\n\n\"That is why he has so many followers,\" a woman breathlessly stated. \"I wish I had put up the money to fuck him. It would be worth every damn dime.\"\n\n\"You okay?\" I asked Jarael. \"I lost control.\"\n\n\"Damn Booker, I may not be able to walk straight for a week,\" she replied before kissing me again. \"For a moment there, I thought we weren't going to do it. Thank you.\"\n\n\"I hate this part,\" I whimpered as I bent my knees until her feet touched the floor and then slowly withdrew from her.\n\n\"I feel empty,\" Jarael whispered. \"I think you impressed a few people today, me included.\" She and Kalinka knelt in front of me as the crowd watched and licked me clean again. Kalinka and Jarael shared soft words between the two of them, and they agreed on something. I would find out later what they said. Hane looked at the pair and smiled. All three of them were in on something; I just had to be patient.\n\n\"I need a shower and time to catch my breath,\" I said.\n\nThe trio followed me to the private room set aside for me by Kat. It had a huge shower and a comfy-looking couch. The four of us piled into the Victorian-style cubicle. The frosted glass walls bore hand-crafted designs from the period and gave us a sense of privacy. Even the taps were stainless steel and marble to complete the illusion. Six ceiling-mounted nozzles sent enough water so that none of us were standing in the cool air.\n\n\"Question and answer time,\" I said, and they seemed agreeable. \"Jarael, you are first.\" I pressed the built-in pump for body wash and began lathering her up with my hands. Inefficient but fun as hell.\n\n\"I am so sorry,\" Jarael apologized. \"I got caught up in the moment.\"\n\n\"Who are you?\" I asked as the anger won out. Left reached out and gripped the young woman by the throat. He did not squeeze, just held her where she stood. I opened the file Kat had given me of all the guests. Jarael was not listed. \"I asked you a fucking question, who are you?\"\n\n\"I am Jarael,\" she replied with a smile and twinkle in her eye.\n\n\"That is a fictional character in a game,\" I snapped.\n\n\"Correction,\" Jarael replied fearlessly. \"It is a fictional character in one world. But what about all the other worlds?\" Kalinka and Hane watched and listened silently.\n\n\"The damn ghost lines,\" I growled, and that seemed to surprise her genuinely. \"Yes, I know about them.\" I let go of her. \"I am sorry. You know someone like me,\" I said, trying to avoid repeating her mistake and moved past the resentment. Assassins were terrible enough, but now there might be another Duskwalker lurking in the shadows. It was too much too soon.\n\n\"Yes,\" she kept her answers short. \"She wants to meet you.\"\n\n\"I am not sure I can trust you,\" I admitted. \"My life has gotten complicated. I have things to clear up. Though I do like your tattoo.\" On her left butt cheek, there was a playing card symbol for clubs done in metallic green. In the middle of the clover-like design was a silver letter B.\n\n\"I hoped you would,\" Jarael smiled. \"The B stands for Booker.\" She seemed unperturbed by my anger and took everything in stride.\n\n\"Interesting. What does the club stand for?\" I asked, and her response surprised me.\n\n\"Well, getting a tattoo of a spade with a Q means you are a lady that prefers men of color. I figured the club represented the pounding you gave me tonight. I am your biggest fan,\" Jarael stated while biting her lower lip. \"Take your time Booker, and there is no need to rush things. You look exhausted. Here is my contact information when you are ready.\"\n\n\"I want to trust you,\" I said and frowned as I heard the business portion of this simulation start. Jarael rinsed off, kissed my cheek, and logged out. I turned to Kalinka. \"Your turn.\"\n\n\"Good,\" she replied. I repeated the process and slowly ran my hands over her body. \"I overheard something,\" I said to Kalinka. \"If you don't want to talk about it, I will respect that.\"\n\n\"Says the demigod that busted a load in my pussy and ass at the same time,\" Kalinka replied with words and a passionate kiss. \"Ask away.\"\n\n\"One of the other ladies mentioned you were a refugee,\" I said, trying to use the most sympathetic voice I could manage.\n\n\"Oh, that,\" Kalinka stated dismissively. \"Yeah, I was born in Moscow, but soon after, things went sour, and we fled to a tiny border town called Sarnath. You probably haven't heard of it. That place is ancient, older than Rome, and desolate. We survived by helping an ongoing archaeological dig funded by a private collector. My dad did not care as long as there was money for food and a roof over our heads. When I was strong enough, I helped dig too. The former copper mine is how they found the ruins. The other workers to me that the first opening happened by accident. A mining cart dislodged and crashed through a part of the wall revealing the staircase. The steps spiraled down fifty feet to a door. The spot where the mine car struck was already two hundred feet deep. There weren't any gold or jewels, though idols, stone tablets, pottery, and other things littered the strange chambers. The longer we dug, the larger the site seemed to become. A hand full of sections became a labyrinth in the end. If it weren't for the three-hour war and the event, I would still be there.\"\n\n\"I don't remember any mention of a war,\" I said as I lathered Hane's long dark hair.\n\n\"Oh yes,\" Hane whimpered as my fingertips massaged her scalp. \"They called it the Sino-Russo conflict. The Russians triggered a nuclear weapon, and all hell broke loose. I was just a kid when it happened.\"\n\n\"She's right, and the odd thing is that they never found any radioactivity afterward. The owner shut down the mine, and I ended up in America. The collector sponsored me for citizenship since I had cousins here. Things just worked out for me. I have always had a strong exhibitionist streak in me. Being a cosplayer and model came naturally.\"\n\n\"Same here,\" Hane agreed. \"It is a great time to be alive.\"\n\nI didn't ask, but why did an oligarch flip the bill for Kalinka to move to the US? Then turned around and funded her citizenship. It didn't make any sense. Why not just let her die or ship the workers somewhere inside Russia?\n\n\"Hey, listen,\" Kalinka said as she took her turn to have her hair washed. \"You don't have to agree, but um, if I leave you my contact info, would you like to see me, um us, in the real world? We can keep it as private as you want.\"\n\n\"Agreed,\" Hane said as she rinsed her long black mane. \"I like how well we fit together.\"\n\n\"Outside, I only have one, you know,\" I stated the obvious.\n\n\"I don't mind sharing,\" they said in a single voice before laughing.\n\n\"I'd like that,\" I admitted. \"My dance card is filling up.\"\n\nWe finished the train ride by relaxing, and for the first time, I gave up on the story and just enjoyed the remainder of my time with the cosplayers and the other guests. Sure I lost points, but who cared. I watched how religion, politics, and corruption melded to drive our society. When you know how something happens is one thing, but to see it laid bare is another. Surfer informed me of the single agent for the Order, and I observed him with a keen eye. The man kept a low profile until the opportune moment. At the end of the negotiation phase, he took out sealed envelopes and distributed them to only those who aligned with his interests. The countdown for the simulation to end appeared, and the AI announced the winners.\n\n\"Most deviant act performed in front of a live audience goes to Ms. Cinnamon,\" the computer declared. Cinnamon was aboard the silver coach, but we could watch the performance at our leisure later. \"Most backdoors kicked in by a single male performer should come as no surprise to those in the platinum car. Please congratulate our celebrity host, Booker, and he also earned the coveted title of most double penetrations by an individual male.\" The AI listed off best oral performer of any gender, loudest orgasm, and finished with the most points accrued just before the timer ran out.\n\nI logged out and found a vigilant Akira sitting nearby with her gauss pistol drawn. She holstered it and helped me to my feet.\n\n\"You have a guest and a fan, I think,\" Akira informed me once I was mobile and agreeable to meet my visitor.\n\n\"Booker,\" the smooth, sibilant voice of the Eternal Master cut through the shadows like a knife. \"Well done, well done indeed. I observed your performance with great interest.\"\n\n\"Master,\" I said as I bowed low. His arrival explained why Akira let someone get even remotely close to my body while in the simulation.\n\n\"You made what is usually a dry and boring affair quite lively,\" he continued. \"I want you to know that after discussing your situation with the other masters, we have concluded that you should receive Nick's full titles, rank, and responsibilities. Your newborn company is proof enough of your tenacity to rise above the petty needs of lesser men. I wish I could stay longer, but evil never rests.\" The Eternal Master halted for just a moment for a few final words. \"Oh, and good luck surviving the next nine attempts on your life. We must uphold tradition.\"\n\n\"I will observe the rituals,\" I said, and then he was gone. \"I need to hit the gun range.\"\n\n\"Follow me,\" Akira said. \"Your weapons await.\"\n\nAkira and I practiced in one of the sublevels of Numenor Tower. While I had trained with Aoki within the confines of the game, reality did not conform to game rules. I tried a variety of pistols and settled on an imported 9mm. Akira urged me to practice often, and when I was ready, she would let me try out a gauss weapon.\n\n\"Are you enjoying yourself?\" Kat chimed in while I cleaned and reloaded my pistol.\n\n\"Yes,\" I replied.\n\n\"You don't sound happy,\" she said. \"What is bothering you?\"\n\n\"The Orient Express was not a charity event,\" I stated. \"You fibbed.\"\n\n\"I needed you there,\" Kat said and then quickly added. \"I should have been honest with you and explained how important it was to Numenor.\"\n\n\"I understand,\" I said. \"Just keep it straightforward between us.\"\n\n\"It won't happen again,\" Kat apologized, and I let it go. We were family, after all, and no one was perfect.\n\nDay Three: The Storm Breaks\n\nThree days had passed since I awoke from my near-death experience within the dev zone. I sat atop Numenor Tower, strumming my guitar and kicking my legs in the air; the song drifted up from my memories of time spent with my dad. My eyes were closed as I spontaneously reworked the melody. The grittier tune appealed to me, and I mentally jotted down the changes for Surfer to keep for later finetuning. My fingers flew over the strings as she approached.\n\n\"Hello Kyanna,\" I said as I stopped playing and lay my hand across the instruments' strings, silencing them.\n\n\"Voodoo,\" Kyanna chuckled. \"How the hell did you know it was me?\"\n\n\"Do you want the truth or a fanciful lie?\" I asked.\n\n\"Either one will work for me,\" she admitted.\n\n\"Since all the genetic tinkering done to me by the late great Nick Shaw, I can hear the subtle pop of your left knee when you walk,\" I explained. \"You should have Kat treat that before it develops into arthritis or worse. Put it on my tab if you like.\"\n\n\"I might just do that,\" Kyanna replied as she sat next to me. \"Are you working on a new song?\"\n\n\"Oh no, that was one my dad loved since he was a kid,\" I explained as I played the opening riff. \"His family had a massive musical library for him to enjoy. His parents played 78's and 45's all the time on an ancient phonograph the size of a couch.\"\n\n\"78's? What is that?\" Kyanna asked, unfamiliar with that term.\n\n\"Ha, 78 RPM, they were the original vinyl records. The 45's were smaller and had a single song on each side--a little musical history for you. My dad grew up listening to show tunes, blues, and classic rock. I am feeling a bit nostalgic,\" I laughed. \"He couldn't play a musical instrument, but that never stopped him encouraging my desire to grow my art. After his death, it became a bit of a passion.\"\n\n\"I lost my mom in the Event,\" Kyanna blurted out. \"She was hit by a city bus that went out of control.\"\n\n\"I guess we all lost someone that day,\" I mused. If not for that terrible day, Nick would have killed billions, and for what? \"I am taking a break from the game.\"\n\n\"Perfectly understandable,\" Kyanna said and took my hand in hers. \"Don't leave us behind, okay. We love you.\" She said we with such passion it unnerved me. Most people are possessive of their partners, yet those closest to me appeared satisfied even if it meant sharing.\n\n\"I love you too,\" I said though the words came out hollow. \"I am emotionally exhausted.\" It was time I lead the assassins away from those I loved. \"I need fresh air and a break.\"\n\n\"Where are you going?\" She asked as she brought the back of my hand to her lips and kissed it.",
        "\"You remember the GPS coordinates we got on Lehon? I want to see if there is anything in the real world at that spot,\" I explained. \"Goofy, I know, but I am curious.\"\n\n\"Nah, I get it,\" Kyanna laughed. \"When are you leaving?\"\n\n\"Early tomorrow,\" I replied. \"Or later today, depending on if it is after midnight.\"\n\n\"That gives us,\" Kyanna paused, and I heard Kat and Aoki approach. \"What, ten hours to have our way with you.\"\n\n\"Tannhauser Gate sent some new toys for field-testing,\" Kat remarked lustfully. \"What do you say, boy toy?\"\n\n\"Alas, my secret is out,\" I laughed. \"Thank goodness I got eight hours of sleep.\"\n\n\"I never heard of Tannhauser,\" Aoki chimed in. \"Are they any good?\"\n\n\"Put it this way,\" Kat practically purred. \"Their last shipment got a ten out of ten reviews from me. They are as discreet as they are creative.\"\n\nEight hours later. The four of us were sprawled on the California king recuperating from hours of unfettered pleasure. Kyanna was the first to bring up one of the last gaming sessions, Lehon. She blamed herself for plugging in the sphere midflight and causing the time/space tear. Aoki reminded her that all of us had felt the Force echo on Malastare, and so blame was a foolish thing even to contemplate.\n\n\"Fate,\" Aoki purred as she ran her hands over her sweaty body. \"Damn, I needed that.\"\n\n\"We needed,\" Kat corrected her. \"My ass is going to be sore for a few days, but man, it was worth every inch.\"\n\n\"Uh-huh,\" Kyanna giggled. \"You are awful quiet.\"\n\n\"I have a confession to make,\" I began, and they all stared at me. \"It is believed that I am either an ass man or a titty lover. That is not the case,\" I said, and they leaned in expectantly. \"Truth is, the thing that gets me going is,\" I paused, and they glared back. \"A woman's expression when I am balls deep, and they have that look of surprise, or shock, or blissful agony. There, I said it.\"\n\n\"Blissful agony, that is the polite way of saying balls deep in a girl's ass,\" Kat laughed.\n\n\"A-yuh,\" Aoki agreed. \"I am still tender. SSSS!\"\n\n\"Naptime,\" Kyanna declared.\n\nThe girls snuggled together while I lay at their feet like the pet cat. I was not tired, though. Despite the exertion, I felt restless. Assassins. Duskwalkers. Ghost lines. I was Nick's heir to the Order, and a death mark hung over my head. I still felt haunted by the echo of a dead man. Ripples of his influence battered my psyche. Who was I? Identity is everything, and it felt as if, with each passing day, something new surfaced and kept my life in chaos. I closed my eyes and waited on Surfer's analysis of my BMI. Were there any residual traces of the tenacious Nick Shaw? I began the scan just before I was secured to the bed by Kat and Aoki. A timer ran in the corner of my vision. It was nearing zero rapidly. Surfer displayed bright green letters that read all clear.\n\n'There is no sign besides residual memory patterns of my former master,' Surfer declared confidently. 'I detect a spike in the rates of your hearts, levels of chemicals in your neocortex, and... you do not believe me.' Surfer's voice softened, and saddened by my reaction. 'You do not trust me.'\n\n'I don't trust Nick,' I replied. 'I trust you with my life.'\n\n'I could purge the memories, but the process could leave you with short-term loss covering the last week or more,' Surfer offered. 'I do not recommend it.'\n\n'You are the expert Surfer. I trust your judgment. It is time for a quick jog and a nice long shower afterward,' I remarked. Once I was sure the ladies had fallen asleep, I rolled off the foot of the bed, dressed, and headed out for a run. What had begun as a mile-long path escalated into a ten-mile jaunt. During the run, I felt Surfer's ever-present aura at the back of my head. I felt her anticipation like it was my own.\n\n\"How is the start-up going?\" I asked Surfer, and she was relieved to be of use as she informed me my company was not just up and running but performing very well despite several lawsuits from the coal and oil industries and Tesla Power Inc.\n\n\"The water reclamation project is doing well,\" Surfer announced. \"We purchased the processing patent for mass-producing graphene and several other inventions by an entrepreneur that owns none other than Tannhauser Gate. The young man is a certifiable genius.\"\n\n\"We should hire him and put him to work for us,\" I commented.\n\n\"Not going to happen,\" Surfer replied. \"While he owns the company, his mother and grandfather manage it for him. His genius comes with a price. The young man is autistic and would not function well outside his dockside workshop. I contacted him earlier in regards to employment, he refused.\"\n\n\"What's his name?\" I asked as I altered my route for the seashore.\n\n\"Kieren Longshadow,\" Surfer said. \"His mother is Irish, and his father is Lakota Sioux. You may have heard of his grandfather Two Ravens Longshadow. He is deep in black ops and tech support for the government. Longshadow sits on the board of three think tanks and has won every award attached to math or science a human can achieve. I have his file if you want to read it. You will see where Kieren's intellect evolved. Two Ravens helped raise Kieren, and the two are close. Follow the green dot. I marked the warehouse's GPS coordinates for you.\"\n\nThe outside of the building did not look any different from any of the other warehouses. What did stand out were the layers of security surrounding the perimeter and mounted to the top of the structure. This Kieren fellow took his privacy seriously. I touched the intercom button and asked to come in.\n\n\"You are alone, good,\" the voice on the other end said. \"Oh my god, it is you! Please, come in. Did I forget that you were coming today?\"\n\n\"Um, no, I was jogging and thought since I am taking a break from the game, I might stop by. I am sorry if I am intruding.\"\n\n\"NO, don't go, come in around the back,\" Kieren sounded as if he was on the verge of panic. The gate slid silently open, and I jogged to the rear of the building. The sound of running water caught my attention as I rounded the final corner. I stopped short when I saw the unusual shower set up and a naked Kieren lathering up his hair and body. \"I forgot to bathe again,\" he explained. \"I get caught up with my work, and time gets away from me. Take a look around. I will be out as soon as I get rid of the stink.\" I looked at the hexagonal design of the shower and found it interesting. Six stainless steel tubes extended from the concrete floor just outside the warehouse, and each of those cylinders possessed a flexible shower head. When he moved, the water tracked his movements keeping him covered.\n\n\"Why build the shower out here?\" I asked, and Kieren laughed.\n\n\"There was a drain already outside, so I figured why not,\" he explained. \"Besides, no one but family and friends visits me, and the dock rarely sees boats or shipping traffic since the new pier opened just south of here.\" He paused for a moment. \"Though, I have been pondering putting up a holographic shower curtain for modesty's sake. My sister blushes every time she visits and sees me naked. I am unsure why, but girls are a mystery.\"\n\n\"Um, have you ever dated anyone?\" I asked, and he laughed nervously. \"I'll take that as a no.\"\n\n\"Well, Coral has shown interest, but uh, I don't want to hurt her,\" Kieren declared. \"She is cute and has offered to show me the ropes, but I am different and, well, scared.\"\n\n\"Empathy is a two-edged sword,\" I replied as I turned to face the interior of the warehouse. \"Holy fucking shit!\" I cursed seeing the extent of his workshop and Kieren's genius on display. \"I thought Nick was gifted.\"\n\n\"Funny you should say that,\" Kieren chuckled. \"Many of my designs were inspired by Mr. Shaw.\" It felt weird hearing anyone call Nick mister. \"The hydrogen power plant is loosely based on one of his earlier papers on the subject. I am still working on the water purifier. On the bright side, I take the salt I remove from the seawater and sell it to help pay for other projects. My family takes care of the money aspect of my designs.\" A naked Kieren strolled past me and stood on a metal grate. High-speed fans below quickly dried him off before he dressed in clothing he had set out earlier. The shower shut off automatically, and the rods retracted into the ground.\n\n\"You work out regularly,\" I said, and he nodded.\n\n\"I teach several different martial arts styles to students. They repay me by wearing motion-capture suits for a game I am developing. It isn't a full dive like the one that made you famous, but I wanted to see if I could do it. I consider myself a bit of a polymath.\" His cheeks grew red, and he lowered his eyes to the ground.\n\n\"Hey, it is okay to brag,\" I told him, and when he looked up again, Kieren was smiling.\n\n\"That means a lot,\" he stammered. When I asked him where he learned the martial art forms, he informed me that he observed several dojos around the city. \"I have not only an eidetic memory, but I guess you could call it eidetic muscle memory. I see something, and after a bit of practice, my body remembers. I have memorized all the martial forms your characters utilize.\"\n\n\"Perhaps I can come back, and we could spar,\" I offered, and he began hyperventilating. \"Easy, relax, Kieren.\" I watched as he stood tall, rolled his shoulders, and took slow deep breaths. \"Better?\"\n\n\"Yes,\" Kieren replied. \"Would you like the full tour?\"\n\n\"Absolutely,\" I said.\n\n\"This is the heart of the building,\" Kieren said, patting the side of the hydrogen power plant. \"There are, of course, solar panels I designed and built on the roof. This setup eats a lot of power. That,\" he said, pointing to a large metal and glass sphere. \"Well, that is the brains of the warehouse. Meet Prometheus. Say hello.\"\n\n\"Hello, Booker,\" a synthesized voice replied. \"Don't be shy.\" I walked over to the ten-foot orb that reminded me of the nineteenth century's deep-sea diving helmets. A gelatin-looking substance filled the interior, and occasionally a spark raced through it, and parts of the mass changed color. \"Kieren calls it proto cerebral goo. It mimics the human brain with trillions of connections that allow me to process data with startling speed and creativity.\"\n\n\"I am dumbfounded,\" I admitted. \"This will revolutionize AI and computing altogether. Are you concerned about hackers?\"\n\n\"No,\" Prometheus replied. \"My quarantine zone is the first line of defense that keeps out unwanted intrusion by isolating all incoming data or streams. If something suspicious is detected, it is deleted or captured for further analysis.\"\n\nWe moved onto his motion capture theater, sculpting studio, the prototype for mass-producing graphene, and a dozen other projects in various stages of completion.\n\n\"I am a rapid shifting bipolar. When I get a rush of energy, I can be up for days at a time without sleep. Just as much as a downturn will cripple me for just as long,\" he revealed and blushed again. \"I told you I don't do well in social situations, sorry.\"\n\n\"Never apologize,\" I replied softly. \"Everyone is different. That is what makes us so interesting.\" The smell of oil paint drew me towards an area of the warehouse containing free-standing panels. Those panels held paintings Kieren had done of the same woman in different poses. In all of them, she was naked. \"Who is this hot little number?\"\n\n\"My sister Aislynn,\" he said shamelessly. \"She poses for me when she runs low on money.\"\n\n\"Well damn,\" I chuckled.\n\n\"Aislynn is quite the fellatioist, or so she often brags,\" Kieren said dismissively. \"No gag reflex and a predilection for well-endowed males and curvy females. Her words, not mine. Her addiction to sex worries me. I fear she may never settle down and make our mother happy.\"\n\n\"She will or won't,\" I replied. \"We all make choices and live by them.\"\n\n\"It was your company that purchased my patents for graphene, wasn't it?\" Kieren asked.\n\n\"Yep. I just began producing clean energy power cells,\" I added. \"It will help poor nations build up their infrastructure and support their citizens cheaply.\"\n\n\"You too,\" Kieren exclaimed. \"That is my goal as well. I am working on a project,\" he began and then stopped short. \"It is still in the testing phase. Don't think me rude.\"\n\n\"Secrets are also perfectly natural,\" I said, and he looked relieved.\n\n\"Can I ask you about your characters now?\" Kieren asked, fidgeting and eager to explore my VR career. \"Which one, to begin with, Ghostfire or Katria?\" He grinned when my mouth fell open. \"Prometheus figured it out. He is ever so clever.\"\n\n\"What do you want to know?\" I asked, and the floodgate opened.\n\nWe sat there going back and forth between strategies I had employed and the real-world applications of my creations within the game. The conversation was so intense we failed to notice the young woman that strolled into the warehouse. Coral Amberon was a flawless blend of her Latin mother and her African American dad. It was the striking contrast between her dark skin and bright green eyes that devastated the observer. She walked up behind Kieren, bent over, and kissed the top of his head. I did not miss the generous swell of cleavage when she did that.\n\n'Your hormones and blood pressure just spiked,' Surfer notified me.\n\n'Yeah, no shit, is she Kieren's girlfriend? Lucky kid,' I remarked silently.\n\n\"Oh, my bad, Booker, this is my friend and neighbor Coral,\" Kieren said. \"She lives on the other side of the pier.\"\n\n\"Not the Booker,\" Coral exclaimed as she plopped into Kieren's lap. \"I am a huge fan.\"\n\n\"Kieren and I were just talking about the game,\" I replied, desperately trying not to check her out and failing miserably. She couldn't be more than five feet tall, and damn was she stacked front and back. Keep it together.\n\n\"Scar and Coral come over to watch your matches when they are published,\" Kieren continued, oblivious to my brazen gaze. Coral, on the other hand, leaned back and let her tits push against her t-shirt. Nope, no bra and her nipples were poking against the shirt like crazy.\n\n\"Scar?\" I asked while Coral snuggled against Kieren. Tease. I lust you too, sweetheart.\n\n\"My brother,\" Coral purred. \"He got into a knife fight protecting Kieren. His face got cut up. He has a scar running just below his eye down to his jawline. Of course, Kieren sees it as a prestigious thing and has been generous to a fault. Kieren paid all of the medical bills, his tuition for a local trade school, and my education as a vocalist.\"\n\n\"Ooh, and Booker is a musician,\" Kieren eagerly declared. \"You two should hook up.\" I felt my jaw drop open a second time while Coral corrected him.\n\n\"A duet, not a hookup,\" Coral firmly stated. \"A hookup would be us having sex. You wouldn't want that would you?\" Kieren slowly shook his head while the daydream popped into my mind, eager to be fulfilled. I bet she could belt out a scream when I shot into her... \"Booker? Earth to Booker,\" Coral laughed. \"Naughty boy, you shouldn't be having those sorts of thoughts.\"\n\n\"Perhaps I should call Aislynn,\" Kieren offered. Coral remained silent as her thoughts seemed to follow a similar path that mine had.\n\n\"Your thoughts betray you,\" I said in my best Sith Lord voice. Kieren laughed, Coral did not, and I read the shame on her face. \"Sorry, that was in bad taste.\"\n\nThe conversation alternated between music and the game. Prometheus broke in, alerting Kieren that a limo had reached the fence and that it was two in the afternoon. We had talked for hours.\n\n\"My ride is here,\" I said and stood. \"It was great meeting you both. Here is my private email,\" I said as I gestured, and Surfer transmitted it to Prometheus. \"Drop me a line if you want to talk or practice. My guitar and I are always eager.\"\n\nI left them feeling a mix of arousal and guilt. Akira stood next to the car when I approached.\n\n\"You failed to check-in,\" Akira chastised me. \"Surfer registered a spike in your vitals. Oh, well, I see why that happened.\" I looked over my shoulder, and Coral was leaving the warehouse too. \"You sure know how to pick them. Should we offer her a lift home?\"\n\n\"It would break that kid's heart if something happened,\" I said, and though it pained me to pass up such a lovely young woman. My conscience kept reminding me I just had the company of no less than three beauties this morning.\n\n\"Want a lift?\" Akira asked, and Coral smiled. \"We have imported chocolate in the back.\"\n\n\"Ooh, I love chocolate melting in my mouth,\" Coral moaned. \"I better not. I will give Aislynn your info. She can take one for the team.\"\n\n\"Let's go,\" I said and sat in the front seat next to Akira.\n\n\"Please don't take this the wrong way,\" Akira began. \"You look like hell, sir.\"\n\n\"I feel like it,\" I agreed. \"Executive decision, we return to Numenor, pack for a long weekend, and just drive.\"\n\n\"Well damn, we can't go galavanting off in this thing,\" Akira stated. \"I will drop you off, pick up a less flashy vehicle and return as soon as I can.\"\n\n\"Yes!\" I exclaimed, feeling some of the stress evaporate.\n\nGPS or Bust: Day 3 1/2\n\n\"It will take time to bring a survey satellite over the area, sir,\" Surfer informed me as I washed off the sweat and funk from my run. \"Google Earth shows no structures at those GPS coordinates.\"\n\n\"Well, we'll find out for ourselves, won't we,\" I declared excitedly. \"I need this so bad.\"\n\n\"Time out of the game at last,\" Left exclaimed, startling me. \"Sorry, boss, I should have coughed or something.\"\n\n\"I forgot,\" I admitted. \"Reality seems a bit wonky lately.\"\n\n\"You have been through a lot over the last few weeks,\" Left said, his voice soft and reassuring. \"Take your time and enjoy the open road.\"\n\nI was drying off when I heard the sound of a zipper and Kat calling out from the bedroom. \"I packed your bag and a pair of hiking shoes in case you go off-road. There is a surprise for you as well.\" Kat held a backpack resting at the foot of the bed and a small jewelry box next to it. \"It is the latest in peripheral technology. We are advertising it at the next expo. I hope you like it.\"\n\nI picked up the box and lifted the lid. The contents were anything but what I expected. They patterned the sleek black crescent-shaped device after a Celtic torc or necklace, and it had dragon heads capping the two ends of the object. The memory metal pulled apart effortlessly as I settled it around my throat. Once the jewelry was in place, it linked with my BMI and could record from the four 10K cameras housed in each of the dragon's eyes. The surface of the necklace could display a host of different patterns, from Celtic knotwork to elven runes. I could also program other designs as they suited my fancy.\n\n\"It is unique, and there is only one Black Torc,\" Kat said. \"Just like you. It can house up to four AI's at any time, and it seems like someone has already taken up residence. The techs are still trying to track down the hacker, but no luck so far. Whoever did this is not using Numenor gear to do it. We will find them. You have my promise.\"\n\n'I am all settled in,' Bright Eyes announced. 'Should I tell her or you?'\n\n\"Bright Eyes says she is comfy in her new home,\" I notified Kat and watched the parade of emotions cross her face.\n\n\"I wasn't sure how I was going to bring that subject up,\" Kat replied. Her voice was neutral and calm, though her face was somewhere between panic and rage. \"How did you do it?\"\n\n\"The dev zone AI delivered Bright Eyes to me while the safety protocols were off in the werejaguar game setting,\" I explained. \"The AI said that it couldn't access the main server, and that was the best it could do. It did make me promise not to mention it to anyone.\"\n\n\"How?\" Kat ranted. \"Bright Eyes was nowhere near complete. I shut it down early on to halt the impact of that software falling into the wrong hands. The hacker did it. No. You were not in the Dream Lands long enough for even the latest generation of AI to perform that kind of task. Wait! Greg, you son of a bitch, did it hack the game?\"",
        "\"Who is Greg?\" I asked. Kat was having a crisis of logic. \"When you have eliminated the possible, whatever remains no matter how improbable must be the truth or something like that.\"\n\n\"The alien AI,\" Kat whispered. \"It is millennia ahead of anything we possess. Cronos must have pulled this off, but why?\"\n\n'Should I call you Cronos?' I asked the AI around my neck. 'Are you Greg's AI companion?'\n\n\"The question is,\" I began. \"Do you trust me?\" I asked, and Kat flinched as if I had bitch slapped her. I had a flashback to Surfer asking me the very same thing. I reached up to remove the torc, and Kat wailed and flung herself into my arms. \"I love you too.\"\n\nTears stained my shirt as I held the most powerful woman on the planet in my arms. With Numenor behind her, she could accomplish anything. I kissed the top of her head, and Kat's entire body shook as she wept. The fear of failure after Nick's death hung around her neck like a millstone. What could I say to encourage her?\n\n\"We are family,\" I pronounced. \"I am here for you.\" Kat shook as she cried. I remained silent and let her get it out of her system. Eventually, she grew still, and I kissed her cheek. When Kat looked up, she seemed to have shed years. The worry lines were gone. \"I need some time away. Shouldn't be more than a day or two, a week at the most, then I will return and finish the Disney Princess side of things.\"\n\n\"Have fun,\" Kat whispered. \"I need a nap after that little display. Good luck.\"\n\n'You did not tell her about the nine remaining assassination attempts,' Bright Eyes said. 'Why not?'\n\n'Kat has more than enough on her plate,' I replied. 'That would only cripple her.'\n\nI opened the pack to see which clothes and supplies Kat had packed for me. I approved of her choices and pulled the zipper shut. The mere thought of getting away filled me with energy, and I tapped my foot impatiently during the elevator ride to the lobby. A crowd of test players stood just outside the front doors. The gamers were gesturing and talking excitedly as I stepped out and saw the reason. Akira of the Silent Shadows stood next to a familiar-looking vehicle dressed in jeans, a dark blouse, and a killer smile.\n\n\"This,\" she said, clapping her hand against the passenger side door, \"is the NAC-100. NAC stands for Numenor Air Car. It is completely electric, autonomous, and is about as all-terrain as they come.\"\n\n\"It looks just like,\" I began, and Akira finished my thought.\n\n\"Just like Katria's design for a land speeder,\" she laughed. \"Numenor R&D send their regards. It is a prototype that needs field testing. A Z-PEM powers it, or Zero Point Energy Module, which I have it on a great authority you know a little bit about.\" Akira explained as she opened the door for me. \"Alright, guys, the show is over, skedaddle,\" Akira declared to the group, which reluctantly returned inside. \"I will show you how to pilot it on our way to wherever. Surfer was not noticeably clear on that point.\"\n\n\"Missouri for now. I will fill you in once we are on the road.\" I replied, and that was good enough for her."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "vr",
        "virtual reality",
        "foursome",
        "fffm",
        "anal",
        "double penetration",
        "dp",
        "oral",
        "cosplay"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-20"
}