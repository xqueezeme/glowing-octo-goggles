{
    "title": "A Gift Amongst Friends Ch. 08",
    "pages": [
        "I thought I was finished with this series, but I was surprised by the positive feedback it received. This chapter was originally going to be part of a new series that took place in the aftermath of AGAF. Now that Mandy has undergone such a drastic transformation, it hardly feels like the same story anymore. However, in the end, it probably makes more sense to continue her story under the same title. \n\nUnlike previous chapters in the series, this one takes place several weeks later. Although I hope each chapter is able to stand up as an enjoyable tale on its own, I strongly recommend starting at the beginning if you haven't already done so. It will just make so much more sense that way. \n\nAs always, feedback/votes are appreciated. My bio page has a recommended reading order for all of my stories, for any newcomers that are interested. \n\n********** \n\nMandy stared at her bedroom wall, focusing on a single point just to the right of her window. She tried not to look outside, although she could see the patio lights on at her neighbor's house. \n\nShe had gotten home from university just three weeks ago, and it was still strange being back in her own room. Things were certainly quieter here than on campus, and yet Mandy seemed to have a knack for finding excitement, whether she wanted it or not. \n\nDespite the patio lights, the remainder of the neighbor's house was dark. She could never admit it, but part of her hoped that he was there, watching her. Her neighbor, Arthur McCrae, had lived next door for as long as she could remember. He had watched her grow up, and as a child she used to play in his backyard. He had even been her math teacher when she in the third grade. Now, staring at the wall, she tried to push the thought from her mind. \n\nInstead, she focused on the sensation of the cock buried within her. On her hands and knees, she felt a deep thrust from behind as Nick grunted, filling her with his warm seed. \n\nShe remained motionless as his pumping subsided and he withdrew himself from her pussy. It did not take long before Tom took his place, slipping his shaft into her wet opening with ease. She tried to fight the oncoming orgasm, but as Tom grabbed her hips and began to fuck her, she knew it was futile. \n\n\"Don't stop,\" she cried. \"Fuck me harder.\" \n\n\"I will if you say it,\" Tom replied, slowing his thrusts. \n\n\"Please,\" Mandy whimpered. \n\n\"Say it,\" he repeated. \n\nMandy moaned. \"I'm a slut, and I want your cum inside me.\" \n\nTom's grip tightened, and he pulled her hips back forcefully, causing her to gasp. \"What are you?\" \n\nThe words escaped her between short breaths. \"I'm a slut...\" \n\n\"What are you?\" \n\nMandy looked up at Nick and his cell phone. \"A dirty slut.\" She did not even care that he was recording her. This is nothing that they haven't already recorded, she thought. \n\n\"Say it louder,\" Tom ordered. \n\n\"I'm a fucking slut!\" If Arthur is home, then he probably heard that. Luckily, her own house was empty aside from herself and the two boys. \n\nSatisfied with her complete submission, Tom pushed her down into her pillows and buried himself deep into her womanhood. \n\n\"Fuck!\" She screamed in ecstasy as her body shook with pleasure. She barely even noticed when another load of semen erupted inside her. \n\nMinutes later, the boys were dressed and gone, but Mandy did not move. \n\nShe could still hardly believe how her life had unfolded over the past month. Not so long ago, she had been a relatively conservative girl\u2014certainly not a virgin, but nothing like this. Now she had fucked more guys this month than she had throughout the rest of her life. However, she felt no shame or regret. \n\nEver since Alex found out about her secret life, things had changed. She had fucked him there in her dorm room, and even worse, she had allowed him to share the intimate photos of her and Sarah with his friends. As far as Mandy knew, it was just Nick and Tom that had seen them so far, but she certainly did not trust them to keep it a secret. \n\nThe moment Alex had left her dorm room, she knew she had gone too far. She had crossed a line she thought she would never cross, and she promised herself it would never happen again. \n\nBut it did. And after making the same promise, it happened again. \n\nOnce exams were finished and she was home for the summer, she convinced herself that it was over. However, she caved again with a couple of days of unpacking. There was something about Alex's complete indifference towards her that sparked her newfound desire to be objectified. \n\nAnd soon thereafter, Alex shared her with his friends. It was utterly humiliating the first time that she was asked to undress in front of Nick and Tom, but she did as she was told. The whole ordeal had gotten her so excited that, to this day, she still thought of it each night as she masturbated. \n\nIt did not take long before the boys had learned all of her dark fantasies and secrets. She had unwillingly told them everything about her love of being exposed, her love of being vulnerable, her bisexual curiosity, and everything that Jess had confided in her. \n\nThey took full advantage of her weakness, and now Mandy rarely went a day without seeing at least one of the three boys. \n\nBut her favorite was always Alex. \n\nNick and Tom were always eager to oblige her desire to be used, and she loved the way they talked down to her during sex. Every time that they called her a slut, it sent a shiver down her spine\u2014and made her resent her body's sexual response. \n\nHowever, Alex seemed constantly bored of Mandy from the moment they first fucked. He talked to her as though he was doing her a favor with his time, and that she should be grateful. It was the same shitty behavior she had seen from him throughout high school. It was one of the many reasons she had hated him for so many years. And now, ironically, she wanted desperately to keep him interested. \n\nI am such a fucking idiot, she told herself after every meeting with him. But logic and self-respect got lost in the wake of each fiery orgasm. After only a few days apart, a part of her actually looked forward to seeing him. \n\nNo... Don't you fucking dare show anything but hatred for him. He is blackmailing you. That's all this is. \n\nAfter several minutes, Mandy came back to reality and sat up in her bed. As she stood up, she could feel Tom and Nick's semen running down her thigh. Grabbing a pair of panties from the floor, she wiped the mess before it reached her knee. \n\nI should probably clean up before mom gets home. Mandy's mother had gone out with some friends for the night. Her parents had recently divorced before she moved away to university, and it was strange being home without her dad there. \n\nStanding up, she grabbed a shirt and pair of pajamas bottoms. Dressed, she headed out to the living room and watched television. Several minutes later, through the window she saw a pair of headlights pulling into Arthur's driveway. I guess he missed the show. \n\nLater that evening, she greeted her mother as she got home, and Mandy went to bed soon after. \n\nIn her dreams, she was back in the boys' dorm. Everything was always the same\u2014Sarah's face was buried between her legs. It used to be Kelly, but over time the female figure had become her best friend. Once it had even been Megan, but it was always one of the major figures in Mandy's newfound bisexuality. \n\nLaying back on the sofa, legs spread wide, Mandy stared back at a room full of her best friends and professors. She wanted to hide, to cover herself, to beg for forgiveness. Instead, she threw her head back and ran her fingers through Sarah's hair. \n\nSomeone was cupping her breasts and she could not be certain if it was her own hand or one from the crowd. \n\nAcross the room, Jess was bent over the table, getting fucked by a faceless stranger. In her dreams, Jess never looked Mandy in the eyes. I'm so sorry, Mandy thought. I let your secret out to the wrong people. \n\nSarah's tongue was burning within her, and just as she was about to orgasm, she woke, breathing heavily. In the dark, her hand found its way to her clit, and she finished what the dream had started before falling back asleep. \n\nThe next two days passed uneventfully. Each time Mandy saw Arthur in the driveway, she wondered what he would think if he learned what type of woman she had grown up to become. \n\nSaturday afternoon, as Mandy cleaned up the dishes from lunch, her mother came downstairs and recommended that they go see a movie. \n\n\"Yeah, sure thing, mom.\" It had been ages since the two of them had gone to the movies together. When her parents were together, it had frequently been way for the two to bond outside the house. Now that she was home from university, Mandy had been looking for a chance to spend some time with her mother. \n\nThe two girls decided on a thriller movie that was receiving strong reviews, and they made plans to see the early show after dinner. \n\nAt the theater, Mandy recognized a few people that she had gone to school with. As she waited in line for concessions, she thought of the story that Jess had told her. Mandy imagined one of her male friends confronting her here and now about the slutty things she had done. She imagined him threatening to reveal her secret unless she sucked him off in the washroom... \n\nOh god, she thought, shaking her head. What is wrong with me? Mom is just in the other room. \n\nShe took out her phone and began typing. \"Are we fucking tonight?\" Her messages to Alex were never flowery. In the beginning, he was the one that would contact her with a time and place to meet. Now, it seemed like she was usually the one to prompt him. \n\nPopcorn in hand, she returned to the theater in time for the coming attractions. As the movie started and the lights dimmed, her brain switched gears and for a couple of hours, she was her old self. \n\nAs she exited the cinema and got into the car, she checked her phone again to find a message waiting. \"No,\" Alex had responded. \"I'm busy.\" \n\nHe seems to be busy a lot lately. She hated herself for feeling a pang of jealousy. \n\nShe cooled her frustration before replying. \"Okay fine.\" \n\nAs her mother drove, she almost seemed to read Mandy's mind. \"Do you have any plans tonight with your friends?\" \n\n\"No, it looks like I'm staying in tonight.\" \n\n\"Oh okay,\" her mother replied. \"I think I am going out for a couple of drinks with Judy, so I hope you don't mind having the place to yourself again for the night.\" \n\n\"No, of course not, mom. Do you want me to pick you up later?\" \n\n\"No, that's okay. I don't want to keep you up if we are out late. I can take a cab.\" \n\n\"Alright, if you're sure. I don't mind.\" \n\nHer mother assured her it was fine, and soon after they got home, Judy arrived to pick her up. \n\n\"Have fun!\" Mandy said as her mother went out the door. She was a little jealous that her own mother had something planned for the evening while she was stuck at home. She looked at the clock. Only 9:37pm. I guess I can watch another movie or something. \n\nA loud noise outside got her attention, but she thought little of it. A few minutes later, she heard what sounded like laughter. \n\nGetting up, she moved over to the living room window overlooking the front yard. The street was empty. The sun had gone down, but there was still enough light to scan the immediate area. She could not find the source of the noise, but as she looked at the neighbor's yard, she noticed three additional cars parked in the driveway and on the side of the street. I guess Arthur has guests over, she thought. \n\nArthur was the same age as Mandy's parents, and they had even gone to school together. They shared many of the same friends, so Mandy knew many of his regular visitors. Some of them were fellow teachers, and some worked with her mother. \n\nThey were being particularly loud this evening, but it did not really bother her. It sounded like they were in his backyard, and she decided to step outside and say hello. Perhaps they would even quiet down a little on their own if they knew she was home. Still wearing the tank top and shorts that she wore to the movie, she put on her sandals and stepped out the patio door. \n\nHer backyard was not huge, but she walked unnoticed until she stepped up to the fence separating the yards. Standing on her tippy toes, she looked over. Sitting in the patio chairs, she saw Arthur and four other male figures. In the fading twilight, she recognized Douglas Matthews, her high school gym teacher, Garrett Richards, her high school principle, and two men, Paul and Ian, that worked at her mother's agency. \n\n\"Hi there, Mandy! Long time, no see.\" Paul was the first to notice her. \n\nMandy had known most of these men since she was young, and they greeted her happily as she looked over the fence. Soon, they were all asking her about what she was doing now. \n\nShe could tell from their slurred speech and from the number of empty bottles that they were clearly drinking. \n\n\"Mandy,\" Arthur said, \"You should come over and join us for a while. These guys haven't seen you in ages, and you're old enough now to have a beer with the guys.\" \n\nMandy let out a small laugh, thinking he was joking. \n\n\"No really. You're all alone over there, right? Come on over for a while. It'll be fine.\" The other guys agreed. \n\n\"Umm...\" she hesitated. \"Yeah, I guess I might come over for a bit.\" Is this really a good idea when they're all drunk? For a moment, she thought about this group of older, intoxicated guys. She knew what they could be like when they were drinking. \"But give me a few minutes,\" she continued. \"I just got home, and I could really use a shower first.\" \n\n\"Yeah, sure. We'll either be out here or inside.\" \n\nMandy smiled and turned back towards the house. Once inside, she considered going back to her movie. They're all half-drunk and wouldn't even notice if I never went over. She paused in front of the stairs, biting her lip. Then again, it is a group of five older guys and I'm a young woman, she thought. \n\nMandy was not narcissistic, but she was not stupid either\u2014she knew that men enjoyed her company, and her mother's coworkers had even flirted with her in the past. However, aside from Arthur, she had not seen her former teacher and principle since graduation. \n\nIt is kind of strange for them to see me now as a woman, finished high school. She had always been so quiet in her younger years. Always a straight 'A' student, she stayed out of trouble for the most part. \n\nBut now... \n\nMandy felt like she was floating as she moved up the stairs, towards her bedroom. She could still hear the guys through her open window as she entered the room. However, the night air went dead silent as reached down and grabbed her shirt, pulling it over her head and tossing it to the floor. I guess they can see me. So long as she stayed in the center her room, Arthur's backyard would offer a limited view from her waist up. \n\nStill acting oblivious, she unbuttoned and unzipped her shorts, pushing them to the floor and kicking them aside. She felt numb and she could hardly breathe, standing in front of these men in her underwear. It was not one of her fancier sets, but her breasts always looked a full size larger crammed into the pink material. Although she knew that they could not see her matching thong, it still felt sexy to be so exposed. \n\nTurning her back towards her hidden audience, she reached behind her back and unceremoniously unhooked the bra, letting it drop. It all had to look natural, like a woman quickly getting ready for a shower, unaware of the open window. \n\nTaking a deep breath, she hooked her thumbs into the waistband of her thong and slid it over her thighs. Even if they could not see it, she exaggerated her movements to make it obvious what she was doing. \n\nNaked, with her back to the window, she hesitated for a moment, realizing that she had no actual plan. She was only acting instinctively, and only now was she stopping to consider if this was a good idea. \n\nResigned to her fate, she turned, giving a brief glimpse of her breasts as she wheeled towards the door and proceeded to the washroom, out of sight. \n\nTurning on the water, she had to stop and sit for a moment. Her hands and legs were shaking so hard that she thought she might faint. She had known most of those men since she was a child, and now she had just flashed them as casually as she had done for the boys' dormitory just a few weeks earlier. \n\nCalming her nerves, she stepped under the water. I certainly can't go over there now, she thought. How could I possibly look them in the eyes? \n\nShe washed and shaved as quickly as possible, wishing desperately that she could sneak outside and hear what they were saying about her at this moment. Did they like what they saw? She had not even considered the possibility that these older men may not be interested in seeing their friends' and their neighbor's daughter undressed. \n\nNo, she decided. I have known these guys long enough to know better than that. They are quintessential dirty old men, making lewd comments and sexual jokes on a regular basis. They would not balk at the opportunity to see a naked young woman. \n\nWithin minutes, the water was off, and Mandy wrapped herself in a towel. She was not sure she could make the walk back to her room, but by now her body was accustomed to acting on its own. In a way, it made the whole experience easier to simply remove her own agency from the equation. \n\nBack in the center of her room, the towel hit the floor, and for a few seconds, she stood with her side towards the window. It was not a clear view of her breasts, but she knew that they would certainly get an eyeful, including some quick glimpses of her large pink nipples. \n\nTurning away from her audience, she stepped into another thong, red this time, and pulled it up. She wiggled her hips as she worked the undergarment into place. \n\nGrabbing the same yellow tank top from before, she put it on, deciding to go braless this time. Eyeing the khaki shorts, she bit her lip, thinking. No, I can do better than that. Instead she took a blue skirt from her closet and stepped into it. \n\nLooking at herself in the mirror, her nipples were subtly outlined in the material of her shirt, but she thought it looked like normal casualwear for the evening. The skirt fell only a few inches below her ass, much more appropriate for a nightclub than her neighbor's house. However, she liked the overall look, and considering the show they had hopefully just witnessed, she highly doubted that they would second guess her wardrobe. \n\nRealizing that she had no pockets to put her phone, nor a bra to stuff it in, she carried it by hand. \n\nMoments later, she was out in the backyard, but much to her surprise, as she peered over the fence, she found the neighbor's patio empty. \n\nShe hesitated, wondering if this was perhaps a second chance for her to turn back. \n\n\"Hey, Mandy! In here.\" The voice came from Arthur's kitchen window. There he stood, apparently waiting for her. \"Come on in.\" \n\nSlowly, she obliged. As she opened his patio door, she saw the group of men sitting around the kitchen table. They all greeted her again, though this time there seemed to be hesitation in their voices. As she pulled up a chair between Mr. Matthews and Mr. Richards, she casually peeked in the direction of the kitchen window. \n\nOh wow. The view of her bedroom window was pretty impressive from this angle. They might have seen a little more than I had anticipated. \n\nArthur offered Mandy a beer, and she graciously accepted, putting her phone down next to her glass. They immediately began catching up, her former teachers particularly interested in her university studies. ",
        "\"A Bachelor of Science? That's great,\" Mr. Richards, her former principle announced. \"I'm sure you're doing well. You were always an ace student, as I recall.\" \n\nMandy smiled. \"Yeah, I'm doing alright.\" Admittedly, her grades had begun to slip a bit in the final weeks of the recent semester. With her focus elsewhere, the exam period had been particularly difficult for her. However, she did not plan to go into that right now. \n\nInstead, she sipped at her beer, trying to read the minds of the men before her. They were all acting as if nothing was out of the ordinary, but something about their behavior was off. She caught Paul staring at her twice. Discreetly, she looked down at her chest and noticed her nipples poking against the fabric of her top. Oh god, this must be torture for them, she thought. They are all remembering what my tits look like. \n\nAfter a second beer, Arthur reached into the cupboard and pulled out a bottle of Tequila, followed by six shot glasses. \n\nThe other guys let out playful groans. \n\n\"Oh shit,\" Ian said. \"Arthur, if I come home piss drunk again tonight, Tiffany is going to kill you.\" \n\nBut despite their objections, they all took a glass. \n\nMandy hesitated. \"Oh... ummm... I don't know. I probably shouldn't. Tequila never ends well for me.\" \n\n\"You don't have to. It's up to you. I still have lots of beer,\" Arthur offered. Mandy was genuinely surprised by his indifference. It was so refreshing to drink with older guys who seemed to have little to no interest in peer pressure. \n\n\"Yeah, if I'm drinking Tequila, the night is about to get out of control,\" she joked. \n\n\"Oh? I guess we wouldn't want that. I'd have to explain to your mother,\" Arthur replied with a smile. \n\n\"No, she's gone out for the night. I just don't want to embarrass myself or do anything stupid.\" \n\nThey all laughed and poured themselves a drink. Mandy watched them down it, followed by a second. \n\n\"So, wait a minute... \" Paul said. \"Mandy, you sound like you're talking from experience.\" \n\n\"I'd have a hard time believing that,\" Mr. Matthews, her former gym teacher chimed in. \"You never seemed like the out of control type.\" \n\n\"Oh, I don't know about that,\" Arthur responded. \"I seem to recall you and Sarah running around here like mad hares when you were young.\" \n\nMandy burst out laughing. \"What?! We were like... seven! That doesn't count.\" \n\nThat seemed to diffuse the tension. As Arthur poured the next round of shots, she spoke up. \"Actually, what the hell. One or two shots won't kill me. I've had worse.\" She thanked him as she took the glass, and after her previous reluctance, she now felt self-conscious as she drank. \"Oh wow,\" she said, setting the glass down. \"That is much smoother than the stuff I've had before.\" \n\n\"Yeah,\" Arthur replied, \"It worth spending a bit extra for the good stuff. I can barely touch that cheap shit anymore.\" He seemed to stop for a moment, perhaps realizing that he had just swore in front of a former student. \"... Anyway, I doubt you'll find much of this in a dorm room.\" \n\nIt was true. Mandy and her friends typically bought whatever was cheapest, and it was nice to drink something better. She happily accepted another shot. \n\nPaul watched her closely as she took the second shot. \"Well, there you go. I guess you'll be doing something crazy any moment now.\" \n\nMandy laughed. \"Oh, just wait and see. I'm fine now, but I bet you'll find me in the morning asleep in the driveway.\" \n\nThe guys thought that was hilarious. After the third shot, Mandy was starting to feel the effects of the alcohol sneaking up on her. As she took her fourth shot, half of the liquid spilled onto her shirt. \n\n\"Oh, there it is,\" Ian joked. \"Arthur, you went and got Evelyn's daughter drunk. You should be ashamed of yourself.\" \n\n\"No, I'm okay.\" She really was nowhere near drunk and drank far more than this on a regular basis. The spill was a genuine accident, unrelated to the alcohol. \n\nThey did not seem to believe her, and Mr. Matthews spoke up. \"Maybe I'll get to see this 'out-of-control' Mandy, after all. I'm sure she'll be starting brawls in no time.\" \n\n\"I didn't mean that,\" she answered, despite his playful sarcasm. \"I just mean that... well, never mind.\" \n\nNow that really got their attention. \"What, are you going to start dancing naked or something?\" Paul asked. The other guys glared at him, seemingly unsure that the joke was appropriate. However, they all awkwardly laughed. \n\nMandy giggled. After all, as far as they were concerned, she was completely oblivious to what they had witnessed just a half hour earlier. \"No, I think it would take more shots for me to do that!\" \n\nThey all laughed, but Arthur quickly put another shot in front of her. \n\nAs they continued to joke, it became clear that the group really thought she was more drunk than she really was. \"I'm starting to think that you made up this crazy, drunken version of you,\" Ian teased. \n\nThey are pretty much daring me to do something stupid, she realized. For now, she would continue to tease them. \"No way, but I have to see you guys all again, and I don't need my parents hearing that I came over here and got drunk.\" \n\n\"Do you really think we would rat you out like that?\" Arthur grinned. \n\n\"And besides, you're already drunk,\" Mr. Matthews added. \n\n\"Ha!\" Mandy almost snorted. She was certainly starting to feel tipsy, but was still not that bad. However, she found it entertaining how they kept trying to convince her of her drunkenness. \"Oh, you'll know when I'm drunk!\" \n\n\"Oh?\" That piqued their interest. \"And how so?\" \n\n\"Because I'll start telling you stuff that I would never talk about sober.\" \n\nPaul took the bait. \"Like what?\" \n\nShe giggled. \"I don't know... like sex and stuff I guess.\" \n\n\"Well, now you need to tell us something. You can't just leave us hanging like that.\" \n\n\"No way!\" The combination of alcohol, adrenaline, and a captive male audience was a beginning to wear down her resistance. She was teasing them and loving every moment. \n\n\"Oh, come on.\" Arthur encouraged. \"Tell us something that you wouldn't tell us sober. Our lips are sealed.\" \n\nMandy just smiled and shook her head. \n\nMr. Richards, who had been mostly silent during this exchange, finally spoke up. \"You guys realize that she is just leading you on, right?\" He looked her in the eye and smirked. \"Maybe you do have a bit of a wild side, after all.\" \n\nMandy blushed. \"Sometimes.\" She was not used to people seeing through her so easily. Am I that easy to read? \n\n\"Okay,\" Paul said, determined, \"well, just tell us something and we will let it go.\" \n\nShe grinned widely. \"Well... what do you want to know?\" \n\n\"Something you would never tell us sober.\" \n\nShe was having so much fun. \"You'll need to be more specific than that.\" \n\n\"Okay well...\" He looked to the other guys as though he was seeking the courage to put a question out there on their behalf. \"...Umm... what is the craziest thing you've ever done?\" \n\nShe looked from Paul to Mr. Richards, and back again. It was a question she had expected, but she was not sure she could give the answer that she wanted. As she struggled to find the words, she could feel her face turning red. \"Well... I don't know if I should tell you that.\" \n\nThe guys all voiced their disapproval and assured her that her secret was safe with them. \n\n\"Umm... I\u2014\" She stuttered, unusually nervous considering everything she had done recently. \"I used to flash the neighbors at my dorm. I mean, I would pretend that it was an accident. I'd leave the curtains open and get changed as if I didn't know.\"  \n\nThe guys looked to one another, but said nothing. \n\nMandy continued. \"And I guess I probably did some crazier stuff than that, but I was pretty drunk.\" \n\nArthur poured another round of shots as Mr. Matthews finally spoke. \"Wow... wish I could be your neighbor.\" \n\nMandy and Arthur looked at each other for a half second as they laughed. She took a drink and stared out the window towards her own bedroom window. \"Well, accidents can happen I suppose.\" \n\n\"I guess that is true.\" \n\nMandy stood up and leaned over the table, towards the window. \"I never realized how well you could see my room from here.\" As she leaned forward, she could feel her skirt lifting, coming ever closer to the lower contours of her ass. \n\n\"Careful there, Mandy,\" Arthur warned, light-heartedly. \"Or Doug might take a look up your skirt.\" \n\nStill leaning forward, she looked from Mr. Matthews to Arthur. \"It's okay, I'm wearing panties.\" When I get home, I think I'll have to give them another show after all this teasing, she thought. \n\n\"Are you?\" Mr. Matthew shamelessly leaned to the side to get a better vantage point. \"It doesn't look like it.\" \n\n\"Yes!\" She cried with a laugh. Mandy loved that they were no longer even trying to be discreet with their flirting. Once she was back in her room, she would need to up the ante. Would it be too much if I masturbated for them? Is there such thing as too much after everything that I've\u2014 \n\nJust as she was about to sit down, she felt her skirt creeping up even farther. Startled, she turned her head to find Mr. Matthews holding the hem. She stared at him, dumbfounded. \n\n\"What? You said you were wearing panties. I just wanted to confirm.\" He pulled the back of the skirt up, so that it was at waist level. Her butt cheeks were now on display to the two men sitting beside her, the material of the thong nestled deeply between them. \n\nMandy squealed and knocked his hand away, flattening the skirt down into place. \"There, are you happy now?!\" She should have been mad, but she was not, and her voice sounded more amused than angry. \n\n\"Very.\" \n\nMandy quickly sat back down before he could think of pushing his luck again. \n\n\"So was she wearing any?\" Paul asked. \"We couldn't see over here.\" \n\n\"Not really,\" Mr. Matthew answered with a smirk. \n\n\"What?!\" Mandy was confused. \"Yes I was... I mean, yes I am. It's a thong.\" \n\n\"Well, it's your word against Doug's.\" \n\nIan spoke up, catching the direction that the conversation was going. \"I guess you're going to have to prove it.\" \n\n\"What?! No way!\" She could feel her nipples hardening beneath the thin material of her top. Oh shit, she thought as her body began to betray her. The alcohol was finally hitting her all at once. Beneath the bright kitchen lights, there was no way that they would not notice. \n\n\"Just a quick peek.\" \n\nShe hesitated, caught between the wants of her heart and her brain. They noticed her hesitation, and the other guys began to immediately cheer her on. So much for peer pressure, she thought. It suddenly dawned on her that perhaps she was drunk after all. It's not like I haven't already flashed them. Is this really that bad? Trying to feign cool indifference, she asked, \"What do I get if I do?\" \n\nIan laughed. \"The satisfaction of proving Doug wrong.\" \n\nThe silence that followed lasted for only a few seconds, but Mandy felt the weight of it on her shoulders. We all want the same thing, she realized. I don't know why I'm even trying to fight it. \n\nPushing her chair back, she stood and turned. With her back to the audience, she reached behind and took the bottom of her skirt in both hands. Before giving herself a chance to rethink her actions, she lifted the skirt. Even with her back to them, she could feel all of their eyes on her mostly exposed ass. \n\n\"There, see? Underwear. Doug is just a liar,\" she said, proud of her victory. Dropping the skirt, she turned back towards the men. It felt strange to refer to her former teacher by his first name. \n\nIan spoke again. \"I believe you, but they don't leave much to the imagination now, do they. What is the front like?\" \n\nWithout a word, Doug grabbed the skirt a second time and lifted it entirely, exposing her from the waist down. This time, the men were treated to a view of her panty-clad crotch. Although the thong provided ample coverage in the front compared to the rear, it was still startling to have nothing but a thin layer of red lace between this group of men and her most private region. \n\nAgain, she squealed and knocked the skirt from his hands. Again, she knew that she should have been angry, but she could not hold back from a fit of giggling. \n\nShe needed to cool down. The warm night, the alcohol, and the excitement were starting to get to her, and the more that she perspired, the more her tank top would cling to her skin. \"I'm going to the washroom,\" she announced. \"You guys are getting way too hands-on.\" The words would have sounded condemning if not for the huge grin across her face. \n\n\"Do you want us to stop?\" Paul asked. \n\nMandy did not answer, but merely looked back and stuck her tongue out at the group before exiting the kitchen into the living room. On her right was the stairs, and on her left was a small downstairs washroom. \n\nFinally alone, she splashed some cold water on her face and took a quick pee. After taking a moment to catch her breath, she stared at the mirror and wondered if she could go back out there. They've seen a whole new side of you tonight, she told her reflection. How are you going to proceed from here? \n\nTaking a deep breath, she slipped her hands under her skirt and took hold of her thong by the waistband. Slowly, she slipped it down her thighs until it passed her knees and dropped of its own accord. \n\nLeaving it on the floor where it landed, she left the washroom and took her seat in the kitchen. \n\n\"Mandy,\" Paul said immediately as she sat, \"we were having a debate while you were gone.\" \n\n\"Oh?\" \n\n\"Yeah. You proved you're wearing panties. But you never mentioned a bra.\" \n\nHoly fuck. Is this really happening? The words caught in her throat as she tried to speak. \"I... I'm not.\" \n\n\"That's what I said,\" Paul answered enthusiastically. \"Arthur didn't believe me\". He waited a moment before moving on to his obvious next question. \"Can you be a good sport and settle it for good?\" \n\n\"I'm not wearing one,\" she repeated, sheepishly. \n\n\"Yeah, I know. But can you prove Arthur wrong for me? I'd really appreciate it.\" \n\nShe could not believe how forward these guys had become in the last hour. \"How?\" At the very least, I'm going to make him say it. \n\n\"Well, I guess the most definitive way would be to give us a quick look.\" \n\n\"So... lift my shirt?\" \n\n\"I was actually going to suggest taking it off.\" \n\n\"No way! This is all you get.\" As she spoke, Mandy grabbed the bottom on her shirt with one hand. She slowly lifted it, revealing her toned midsection. Just as the shirt reached the bottom of her breasts, she stopped. The pale flesh of her young breasts peeked out from under the yellow material. With each breath, she could feel her globes pushing out from under their cover, trying to break free. \n\nWithin a split second, she brought her other arm up across her chest just as she gave the top a firm yank, spilling her ample chest. Looking down, her nipples were mostly covered, with her large pink areolas just barely protruding from the modest cover provided by the arm. \n\nAll eyes were locked on her, as every man in the room waited to see her next move. To their disappointment, she dropped the shirt and slipped it back over her body. \"There. No bra.\" \n\n\"That doesn't count,\" Paul argued. \"But that's okay. No need to do anything you don't want to do.\" \n\nSo now it's up to me, is it? \"Alright, well in that case...\" In a single gesture, she grabbed the shirt and gave it a lift, revealing her breasts for less than second before covering herself again. The guys let out a celebratory cry that reminded her of someone scoring a winning goal. It momentarily brought her back to her night in the boys' dormitory, with Kelly... \n\n\"Much better,\" Ian said, vocalizing the obvious consensus of the group. \n\n\"Good,\" Mandy said, trying to suppress her body's desires. \"Now, let's talk about something other than my boobs.\" \n\n\"I don't know if I can,\" Mr. Matthews admitted with a laugh. \n\nThey tried for a short while, but sexual themes and jokes kept slipping back into the conversation. The guys were interested in hearing about more of Mandy's experience at university. She finally relented, telling the story of the toga party and losing her gown in front of the large crowd. \n\n\"That must have been scary,\" Mr. Richards responded, \"being exposed in front of a bunch of horny college boys.\" \n\n\"A little, but it was all in good fun.\" \n\n\"I like your idea of fun,\" Ian said, looking her in the eyes with a smirk. \n\n\"Me too,\" she said, returning the gesture. \n\nHer heart was pounding, and she was not sure how much longer she could tease them like this before she came from the thrill alone. Biting her lower lip, she stood and leaned over the table again, looking out towards the window. She leaned farther this time, resting her elbows on the surface. \n\n\"I guess I should probably go soon,\" she lied. \"I think I might have left the TV on\u2014\" \n\nWith only a chuckle as warning, she felt the back of her skirt being pulled up again. \"Oh shit,\" Mr. Matthews muttered, seeing her bare ass exposed this time. \n\n\"What is it?\" The other guys asked, almost in unison. \n\nMr. Matthews and Mr. Richards grinned at one another and grabbed each side of the skirt, raising it. Mandy squealed again in response and pressed both hands across the front to hold it in place. They continued to playfully tug, lifting the back higher and putting more strain on the front. She worried that the material might rip, but she could only laugh as they wrestled. \n\nHer ass was now fully exposed to the two men behind her, and she tried to lean forward to keep a tight grip on her garment. Trying to maintain her footing, she spread her stance wider and locked her elbows to her sides. \n\n\"Nice try, guys!\" She bragged, as it finally seemed like they were easing their efforts. Suddenly, a hand slipped up between her thighs and came to rest over her bare crotch. Surprised, a gasp was the only sound she could muster. \n\nShe released the skirt and grabbed the invading hand. She intended to pull it away, but something stopped her. A realization sparked in the back of her mind. If you don't stop this, you are writing them a blank cheque to do as they please. \n\nAs she started to stand upright, another hand on her back held her steady. Her head raced with thoughts. Now is your last chance to say something. This is a line that you never even imagined crossing before\u2014your parents' friends. It's degrading, this and opens you up to all kinds of collateral damage that you haven't even considered. Stop it now. \n\nMandy loosened her grip and placed her hands flat on the table. Spreading her legs wider apart, the hand now explored her unhindered. A finger immediately slipped between the folds of her aroused lips and into her moist cunt. She drew a sharp breath and pushed her hips back. \n\n\"Oh, fuck,\" Arthur exclaimed from across the table as he stared at his young neighbor. \n\nMandy looked up at him, but coherent words refused to escape her lips. \n\n\"I knew she was getting flirty,\" Paul said in awe, \"but I had no idea she was so horny.\" \n\n\"Oh, you have no idea,\" Mr. Matthew announced from behind her. \"She is dripping wet back here.\" \n\nWell, at least I know whose hand is inside me now, she thought. His finger was now stretching her hungry opening and pushing deeper inside of her body. \n\nIan smiled at her but spoke to the remainder of the group. \"Who would have thought Travis' little girl would turn out to be such a friendly young woman? I wonder who she picked that up from.\" \n\nThey were talking about her as if she was not even there. However, even if she had wanted to defend herself, her attention was focused on the force building between her legs. She put her weight on the table, afraid that her knees would give way. ",
        "Mr. Matthews responded to her body tensing up by curling his finger with each push. Mandy cried out as an orgasm came crashing through her. Her pussy tightened around the assaulting finger, trying to hold him in place as he pulled out. \n\n\"Well, it looks like she wants it pretty bad,\" Mr. Richards spoke behind her. \"I can't say 'no' to a pussy like that.\" \n\nDefeated, Mandy waited for the inevitable. A pair of hands grabbed her by the hips, and she readied herself. Already well lubricated, his cock entered her in a single thrust, with little resistance. She tried to hold her breath, but a groan escaped her as he began to slowly fuck her. \n\nThe other guys were still seated, watching this unfold. This is who I am to them now, she thought. It doesn't matter what ever happens after this. I could be a doctor... a successful CEO... or even a politician, but to these men, I will always be this girl, bent over a kitchen table, getting fucked by a man twice my age as his best friends watch. To these men, I will always be who I am tonight. \n\n\"Here...\" He said. Mandy was pulled from the table as Mr. Richards sat in his chair. She followed, sitting back on his lap, facing towards the group. She could no longer bury her face in the table\u2014she was now forced to stare back at her audience. \n\nShe needed no coaxing to begin lifting her body and pushing herself back into his. With each push, she could feel his cock driving farther inside her. With his left hand, he reached around and pulled up the front of her skirt. With her legs spread wide over his, her shaven pussy was now finally on display, wrapped around his cock, and she could no longer fake modesty. \n\nArthur quietly got up from the table and left the room. Mandy was starting to think that he had gone to relieve himself when he returned with a camcorder. Turning it on, he pointed it at the scene before him. \"You don't mind, do you?\" \n\nStill unable to speak, she could only moan in short breaths as she shook her head no. \n\nMr. Richards' right hand slipped under her shirt and took a handful of her breast. He squeezed her and pinched her nipple between his finger and thumb, sending bolts of pleasure through her. Soon after, he lifted her shirt, spilling her large breasts out into view. There was no hiding them now, as his hands explored every inch of her exposed skin. \n\nMandy closed her eyes. She imagined she was back in her principal's office, shirt pushed up to her armpits, skirt bunched up around her waist, riding the principal at his desk. Mandy, the innocent, quiet girl that nobody second-guessed, was letting the schoolmaster use her body as he pleased. \n\nShe lifted her arms as Ian stepped forward and allowed her shirt to be removed. Now topless, she leaned back in Mr. Richards' lap, enjoying the sensation of her figure being groped by someone other than Alex and his friends. It always felt more thrilling for somebody to enjoy her body for the first time\u2014even when she was offering herself like a complete slut, it made her feel like a goddess to be pawed and fondled with such reverence. \n\n\"Is he going to cum in her?\" Arthur asked, recording the whole scene. \n\n\"You're fucking right I am,\" answered the voice behind her in between grunts. He grabbed her shoulders and pulled her down firmly. She could feel his cock pulsing as burst after burst of his seed erupted within her. \n\nOnce he was fully spent, she climbed off, somewhat unsteady from the combination of alcohol and adrenaline. Looking around the table at the other men, she knew she was far from finished here. \n\nIan and Paul were the next to step up, standing in front of her and behind her, respectively. She lost track of whose hand belonged to whom as they touched her body. They moved slowly, delicately, obviously still uncertain if their actions were appropriate. \n\nMandy decided to remove all doubt, wrapping her slender fingers around the bulge in Ian's pants. \"I bet you've wanted this for a while now, haven't you?\" She asked, unzipping him and taking his growing dick into her bare hands. She dropped to her knees and looked up at him with a grin. \"I certainly have.\" \n\nThe last part was not necessarily true, but she was now in the middle of a performance, and she had a character to maintain. \n\n\"Mmmm,\" Ian moaned as she wrapped her mouth around him, lingering for a moment to let him savor the sensation. \n\nBeside her, Paul was taking out his own cock, rubbing it until she took him in her free hand. This was not the first time she had pleasured two men at once. Only a few months ago, the thought of a threesome had been nothing more than an occasional guilty fantasy. Now it seemed like a common occurrence. \n\nStroking both men, she moved her mouth from one to the other, running her tongue around the head of each. She enjoyed giving head, as it gave her an opportunity to showcase her skill and sensuality. Nothing shows a man how horny you are like enthusiastically sucking his dick. \n\n\"Oh, man...\" Ian whispered between breaths. After a few short minutes, his cum filled Mandy's mouth, and she swallowed it hungrily, pulling every last drop from him before turning her attention fully towards Paul. \n\nPlacing his hands on the back of her head, he pulled her rhythmically, fucking her face. He stared down at his conquest. \"You grew up to be a nice little cocksucker, didn't you?\" \n\n\"Mmmhmm,\" she answered as best as she could. She wrapped her fingers around his balls and gently caressed them as he quickened the pace. \n\n\"Here it comes,\" he announced, taking a handful of her hair and pulling her head back. His other hands wrapped around his dick and stroked it violently. Mandy opened her mouth wide and looked up at him. The first shot of cum formed a trail across her face, landing in her hair. The next two were directed at her forehead, and she could feel it running down her face as she caught the remaining drops in her mouth. \n\n\"Oh god, yes!\" she exclaimed. \n\n\"Jesus Christ, Paul! Careful you don't get that shit all over my kitchen!\" Arthur joked, causing the men to all laugh. \n\nBarely able to open her eyes, Mandy felt a hand pull her back to her feet. She obliged, leaning forward over the table. \n\nAnother cock entered her pussy, pushing her body hard into the wooden surface. As she was fucked from behind, the semen on her face slowly trickled down towards her mouth. She was not even certain who was fucking her for several minutes, until she heard her former gym teacher's distinct voice. \"Mandy, this isn't the first time I've seen you naked.\" \n\n\"Mmm?\" She could not speak, only whimper as he thrusted himself into her. She assumed he was referring to the window, only an hour ago. \n\n\"That's right,\" he continued, slowing his pace. \"Last year, when you were trying out for the swim team. You were the last one out of the pool to go get showered. I made sure everyone else was gone, and I snuck in around the corner. It was just you and that friend of yours... what's her name?\" \n\n\"Sarah...\" Mandy answered, shocked. She wanted to be angry, but she was too lost in the moment to feel anything but lust. \n\n\"Yeah, Sarah.\" His pace seemed to quicken at the sound of her name. \"You two girls were the only ones left. You were both in the shower, and you didn't hear me, so I watched for a good thirty seconds. Fuck, if I had known what type of girl you are, I would have fucked you right then and there.\" \n\nWhat type of girl I am... \n\nMandy tried to remember the day in particular. She tried to remember a time that it was just her and Sarah in the shower. I would have been so much more innocent then. I would have freaked out if I knew that Mr. Matthews was watching. But now... \n\nThe thought of him hiding in the shadows, watching her and Sarah wash their naked, eighteen-year old bodies drove her crazy with passion. She pushed her body back to meet his thrusts. \"I knew you were there,\" she lied. \n\n\"Oh yeah? And you just let me watch?\" \n\n\"Mmmhmm. Did you enjoy it?\" \n\nShe jumped as she felt his finger tracing the crevice of her butt crack. It slid between her cheeks and circled her sphincter. The tickling sensation sent shivers through her body. \"Of course. Did Sarah know too?\" \n\nMandy gasped as the finger pushed gently, stretching the tight opening and entering her. She had done anal sex twice before, but never had anyone put something in her ass while her pussy was getting fucked. The additional stimulation was almost more than she could handle. She never wanted this moment to end, and her role play only pushed her further. \"Yes...\" \n\n\"Nice... Do you girls ever fool around?\" \n\n\"Mmmhmm.\" It was bending the truth, but Mandy was in another world now, blurring the line between fantasy and reality. Both she and Mr. Matthews wanted the same thing, and she was willing to do anything to achieve it. \n\nThe other guys made some comments about her revelation, but she could not hear them\u2014she was focused on the cock buried within her. Mr. Matthews pulled himself from her pussy and removed his finger, leaving Mandy whimpering for more. \"Turn around,\" he instructed. \n\nAs she turned to face him, he pulled her skirt down over her hips, dropping it to the floor. He pushed her back onto the table and grabbed each of her ankles, spreading her legs wide. Completely open and defenceless, he pressed the head of his dick against her ass. His finger had helped to loosen her up, but she still winced as he forced his manhood into her tight hole. \n\nIt took a few seconds for the discomfort to pass, and waves of pleasure shot through her body with each thrust. She moaned loudly. This is so dirty. My former gym teacher, who is apparently a creepy voyeur, is fucking me in the ass. I am giving them everything... everything that they want. \n\nHowever, there was still one thing that she had left to offer. Lying prone, she reached her arm back behind her head, fishing blindly. Finding the phone by touch, she unlocked it and opened up her picture gallery. \n\nStaring back at her was every erotic photo she had taken over the past two months. Everything, including the ones from her camera, were conveniently stored in one folder. On rare occasions, she had opened them on the bus or waiting in line, secretly hoping that somebody would notice them over her shoulder. Now, they were entirely at her disposal. \n\nSaying nothing, she offered the phone to the man inside her. Confused, he accepted, staring dumbfounded at the screen. His eyes shot wide as he realized what he was looking at. \n\n\"What is it?\" Paul asked. \n\n\"It's her and Sarah... naked.\" \n\nThe guys explored her photos diligently while Mr. Matthews continued to fuck Mandy with increased energy. They even snapped several more photos of her sprawled on her back, legs spread wide with a dick in her ass. \n\nShe came twice more before she could finally feel him tensing inside of her. Finally, he came, filling her last opening with his cum as he ogled her best friend's body on Mandy's phone. \n\nExhausted and unable to move, Mandy watched as Mr. Matthews pulled out and her neighbor stepped between her legs and looked over his prize. Here I am, she thought. All yours at last. \n\nHe wasted no time with foreplay, and Mandy moaned as he entered her tender womanhood. This was a man that she had known and trusted as long as she could remember. When they were younger, she and Sarah would joke about how handsome he was, and when they first learned about sex, they had childishly dared one another to sleep with him. \n\nShe was his friends' daughter, and now she was naked on his kitchen table, being served to him for his every want and desire. \n\nHer body bounced with each powerful thrust, and her breasts sprang wildly. She took her nipples between her forefingers and thumbs, twisting them softly, wanting him to watch her debase herself. I'm not sure if I can possibly debase myself any more than this. My face and thighs are dripping with semen. \n\nTwo of the other guys disappeared into the next room with Mandy's phone, but she barely took notice. Probably copying my gallery onto Arthur's computer, she figured. It's not like I could stop them if I wanted to. \n\nArthur placed her ankles on his shoulders, allowing him deeper entry into her enraptured body. She arched her back and let out a cry as she climaxed once again. Thank god mom isn't home. \n\nHer muscles tightened around Arthur's cock, and he grabbed her hips. He pulled her body firmly against his, and she could feel his warm cum coating her womb. \n\nExhaling, she waited for him to finish. Quietly, she lowered herself from the table and picked up her clothes. For the first time since all of this started, Mandy felt awkward and somewhat ashamed, getting dressed in silence while the men watched. \n\n\"Leaving already?\" Paul asked, stepping back into the room and placing her phone on the table. \n\n\"Yeah...\" She said meekly, staring at the floor in nothing but her socks and skirt. \"I should go home and get another shower.\" \n\n\"Just stay a bit longer,\" he assured her, putting an arm around her shoulder. \"Arthur's got a perfectly good shower here, don't you Art?\" \n\nSlowly, Mandy followed into the living room and towards the stairs. She felt her skirt being lowered to the ground as she approached the top. Leaving it behind, she stepped obediently into the bedroom. \"...Maybe just a little longer.\""
    ],
    "authorname": "Insufficient",
    "tags": [
        "coed",
        "tease",
        "self exposure",
        "neighbors",
        "submission",
        "humiliation",
        "older men",
        "group sex",
        "drunk slut",
        "photos"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-gift-amongst-friends-ch-08"
}