{
    "title": "Memories Of Our Babysitter Ch. 04",
    "pages": [
        "All persons engaged in sexual activity in this story, are over 18 years of age.\n\nIt is certainly worth reading the first three chapters first, to understand her character. However, you might be able to read this last chapter as a stand-alone story if you wish, although you will not understand how I got into this position. \n\nAs in previous chapters, this is the background to the time and place.\n\nThis story is based on real happenings that took place in the mid 1980's in the United Kingdom when the internet was barely an infant and not available to the majority of individuals. As for mobile phones, they were huge, solid, brick-like blocks weighing over two pounds and were owned by only the very wealthy. This meant that knowledge of sex was gleaned mostly by looking at adult magazines aka Playboy, Hustler and so on which were often bought by older brothers or sisters. Certain books like 'Tropic of Cancer' that were 'borrowed' from someone's father's collection also worked a treat. Hearing playground chat amongst more or less 'informed' friends, proved popular too. \n\nFinding out officially what 'sex' was all about was mainly limited to the teachings of the Biology teacher who, if he/she was confident, would talk you through the reproductive cycle of humans or if not, would tell you how frogs and newts reproduced (not very useful and definitely not very sexy!). Boys and girls were nowhere near as mature or knowledgeable about sex at age 18 compared to many of today's 14 or 15 year olds, thanks mainly to the multitude of internet 'information' that can now be accessed by anyone that can type 'sex' into a search engine.\n\nAll of this is to set the scene for you, to make you aware that in the late 1970s, early 1980s, unlike the present, many boys and girls at age 18 were considerably na\u00efve when it came to real sexual encounters and in the UK (as is now) anyone over the age of 18 could buy and consume alcohol.\n\n*\n\nCass had been back to babysit another few times since, and when she said 'Yes please' to the euphemism of 'would you like a drink before you go home?', (which she always did), I knew she wanted me to initiate some foreplay and help her expand her knowledge of sex. \n\nShe wanted to see and try things, that she had only heard her friends discussing, with someone she trusted, to find out how they really felt before she found herself in that situation with a future boyfriend. \n\nAfter being initially unsure, she sucked my cock, becoming very proficient and letting me cum in her mouth, eventually swallowing it all.\n\nI ate her out several times and her orgasms blew her mind.\n\nShe wanted to try different sexual positions, but she I found she liked the deep penetration ones best. \n\nWe attempted anal sex, but she found that too painful and we didn't pursue it, although inserting a well lubricated finger into her little rosebud just before she climaxed, always sent her over the edge.\n\nWhatever we did, she became really aroused and the evening always ended with euphoric fucking and usually cumming together. \n\nEven after all these occasions, due to her strict upbringing, she was still somewhat shy and liked me to initiate things. She was also still a bit reluctant to use words like 'cock', 'fuck', 'pussy,' 'cum,' 'masturbation', etc. unless she was really turned on, and latterly had started to use them to express herself just as her orgasm approached, which often triggered me too.\n\nI knew that in a few days she was going off to college some distance away, so she wouldn't be able to babysit. On the one hand I thought it might be for the best as, if we carried on, it was only a matter of time before someone found out and all hell would break loose. On the other hand, I had enjoyed our secret, we had fun, no one had got hurt, but I would miss the sexy evenings with this nubile young girl.\n\nIt was the Friday evening before she was leaving on Sunday, that my wife booked her to cover for us, and although I felt a tinge of sadness, I still felt anticipation for one last evening with her.\n\nI arrived home about a half hour earlier than normal, things had been quiet at work and I was told I could go early, which was a pleasant surprise.\n\nAs I opened the front door and stepped inside, I heard frantic whispering and some shuffling from the lounge, where I knew Cass would be. I assumed it was probably something on the TV she was watching, so I hung up my coat and washed my hands in the downstairs bathroom.\n\nOn entering the dimly lit lounge, my nostrils faintly picked up an unusual smell, but more of a surprise was that the TV wasn't on, but there were two people on the sofa. The sofa is further into the lounge and when you enter through the door, you are behind it, so I could only see the back of their heads from where I was standing. I could see Cass with her blond hair at one end, but I had no idea who the other person was.\n\nIn the few milliseconds I stood there, my guilty conscience kicked in and presented a doom scenario that it was her mother, who had discovered what had been going on, and had come with her to confront me. The second lightening thought was that she had a new boyfriend here with her, despite what she had said last time. \n\nAs those thoughts shot through my brain, my eyes became more used to the dimness and I realised the other person had a smallish head with long dark hair and was in fact another girl.\n\n\"Hi, Cass,\" I said, my heart still thumping with the adrenalin from my wrong reading of the scene, \"have the children been ok? I see you have a friend here?\" \n\n\"Yes, they are fine Pete, fast asleep. You are much earlier tonight; I didn't expect you yet. Oh, this is Natalie or Nat, she is my best friend and is keeping me company tonight, I hope you don't mind?\"\n\n\"Err no, of course not, I just ....emm, I mean, I wasn't expecting to see anyone else here, but hello Natalie, or should I call you Nat?\"\n\n\"Hello Mr Phillips, nice to meet you, I have heard a lot about you, and everyone calls me 'Nat' so that's fine.\"\n\n\"Call me Pete please, we are all adults here and I hope what you have heard is all good,\" I said laughingly, looking at Cass with a 'what have you been saying' sort of look.\n\nNat giggled, \"Oh yes, all good Mr...emm, sorry, Pete.\"\n\n\"I'll just go look in on the children,\" I said, and left the room to climb the stairs. The door to the lounge wasn't closed fully and I could hear the two girls whispering behind me, as I made my way up.\n\nOn re-entering the lounge, having seen all was well upstairs, I was feeling a little disappointed that Cass wasn't alone, so we wouldn't be having a 'last night' together as I had hoped, but more of a worry was wondering what she had told her friend. \n\n\"As you said Cass, they are sound asleep. Thank you for looking after them, and I hope you will soon settle-in at college. I am sure you will do really well.\" I said, stopping behind the sofa. \"Now that I am here a bit early, you can have an early night too.\"\n\n\"Well...emm..\" Cass started, \"as its early, I wondered if we might have a drink and chat a little before we have to go? We had a juice earlier, but I didn't like to take anything else without asking you first.\"\n\n\"Yea, that's.. uhmm... ok, I'll go and get us all a lager if that's what you would like, Cass? Nat?\"\n\nBoth girls nodded, so I went in search of three glasses of lager.\n\nWhile I was preparing the drinks, I had time to try to work out what was happening here. The shuffling and whispering when I got through the front door earlier; the whispering when I went upstairs, and now wanting to stay for 'a drink'. I was nervous that some bombshell or revelation was about to happen, she had never had a friend round with her before (with the exception of that stupid boyfriend the one time), so why now ....hmmm, I wasn't sure I liked the sound of it, but perhaps she just wanted to chat before she left for college at the weekend. \n\nReturning with the drinks I gave each of them their glass of cold lager. As it had been a warm day, I was only wearing shorts and tee shirt as I sat down in one of the armchairs facing them. I could now see them both face on; Cass with her usual nicely styled, blond hair, a tight green cropped top (must be all the fashion), and short blue denim skirt halfway up her thighs. Nat who I'd never seen before, had long, straight, dark hair, some of it running down her back and some flowing each side of her head, down to her breasts. These I noticed looked bigger than Cass', but then Nat was a slimmer girl, so maybe they just looked bigger on her. She too had a tight, no-sleeves, top on, but hers was black, and a little red miniskirt. They both had about the same amount of leg showing so I guessed they were probably about the same height.\n\nThey were both sipping their drinks slowly and there was a palpable silence that it seemed no one wanted to break. I thought I had better break the ice.\n\n\"Have you known each other long?\" I asked lamely.\n\n\"Oh yea,\" Cass said, \"we have known each other almost forever. We don't live far apart, and we have been friends since we first started school, so oh, how many years Nat?\"\n\n\"Must be nearly 14 years, it seems longer when you put a number to it,\" Nat replied.\n\n\"You must know each other really well then by now,\" \n\n\"I guess so,\" Cass said, looking at her friend, \"we tend to confide in each other about everything.\"\n\nI could almost see them communicating with their eyes. I realised that they had spent so much time together, that they almost knew what the other was thinking....scary.\n\nWhat had she said, 'we tend to confide in each other about everything'. Ohh, did that include her babysitting nights? Or what? I had the feeling that Nat knew everything, but what were they doing here tonight? I was trying to work this out when...\n\n\"In fact,\" Cass said, \"we are going to college together, even doing the same courses.\"\n\nHmmm, was that weird, or just two good friends with similar ideas of the future who had talked it all through? Cass had never mentioned her before. I thought I knew quite a lot about her after all we had done together, but I felt a bit like an outsider to what they must have shared over time.\n\n\"That sounds great,\" I said, trying to be nonchalant, \"so do you emm.. discuss everything?\" I asked pontedly, looking directly at Cass.\n\nNat swivelled her head to look at Cass, then at me, \"Pretty much everything yes.\" she said timidly, then had the decency to blush bright red. \n\n\"And when I came home, what was all the scuffling and whispering about that I heard. I thought it was the TV, but it wasn't on?\"\n\nThey looked at one another again, it was quite disconcerting.\n\n\"Well,\" Cass said, blushing wildly too, \"you know when I said I had tried some things, you know, to make me 'feel good'.\" Pausing, she let out a breath, \"the truth is...errmm.. me and Nat often stay at each other's houses, our parents are ok with that, and we share the same bedroom 'cos we are friends. You understand?\"\n\n\"Yes, I think I am beginning to, go on.\"\n\n\"For a while now, we like err... tried out a few things on each another, just like I told you, but not alone.\"\n\n\"I see,\" I murmured.\n\nNat butted in quietly, looking down into her glass, \"and after Cass had been babysitting here for a while, she seemed to know more stuff, so eventually I got her to tell me,\" then buried her nose in her glass and had a long drink.\n\nI understood now that Nat probably knew everything we had done, Cass hadn't kept our secret and I was very worried and getting angry.\n\n\"Cass, you said you wouldn't tell anyone because of what might happen if people found out.\" I said sternly, controlling my anger at being deceived.\n\n\"It's ok Pete,\" she said, picking up on my rising anger, \"Nat isn't just 'anyone', we are best friends, as I said, for almost all our lives, she won't say anything.\"\n\n\"She's right Mr....I mean Pete, I wouldn't want to get Cass or yourself into any trouble I promise.\" Nat said.\n\n\"You still haven't told me what all the activity was when I got home.\"\n\n\"To be honest Pete,\" Cass said, also now looking into her glass, \"we were fooling around a bit, not expecting you home so soon.\"\n\n\"Fooling around?\"\n\n\"Yes... you know, like touching and stuff.\"\n\nNow I could put it all together; the faint smell, it was their arousal, they had been touching each other, they had probably been masturbating each other, or at least doing it together. Wow. No wonder they were flustered when I got home early. I wondered if they were still turned-on.\n\nI waited to see if either of them was going to fill the silence that had descended.\n\n\"I am sorry Pete, I didn't mean to upset you,\" Cass eventually said.\n\n\"It was my fault,\" Nat chimed in, \"I pestered her to tell me, Cass got to find out stuff and I just wanted to know about things a bit better too.\"\n\nMy anger was diminishing, and my mind was whizzing with lots of impure thoughts. Here were now two young girls who liked finding out about sex, and we were almost talking about it.\n\n\"Nat, have you never fooled about with boys then?\" I asked.\n\nShe didn't look at me, \"Only kissing and a bit of over clothes stuff, I didn't know what to expect, so I didn't allow much and anyway, like Cass' my parents are also quite strict when it comes to boys.\"\n\n\"I see,\" I said, wondering if I should just send them home or were they both here for a reason?\n\nSuddenly Cass seemed to make up her mind, \"Pete, I'm just going to say this and then you can decide,\" she took a deep breath, \"would you show Nat your cock? Like me, before I was here with you, she has never got up close to one? There I've said it,\" she said, her face burning.\n\nNat put her drink down and covered her face with her hands to hide her embarrassment. \"Cass!!\" she said.\n\n\"Well you do don't you Nat, that's what you told me.\"\n\n\"I did , but...\"\n\n\"But what? I'm here, I trust Pete, we can just do as little as you want.\" Cass said.\n\n\"Hrrrm,\" I cleared my throat, \"I am here too you know girls.\"\n\n\"Yes, sorry Pete.\" \n\nI looked at Natalie, she was almost squirming with embarrassment. But not just embarrassment, I looked from one girl to the other, both of their nipples were now tenting their tops, obviously neither of them were wearing a bra, and whatever they had been doing earlier and then discussing it with me, had them aroused.\n\nMy cock had begun to react to the view and the conversation, and to the thoughts that were going through my head.\n\nCass was a sexy, shy girl in an English rose sort of way, and Nat was sexy too, but in a more 'Italian' way, with her dark hair, slim legs and tanned skin. I knew what Cass looked and felt like naked, but I was mentally undressing Nat and wondering what was under those clothes. The sensible part of my brain was telling me that I would never find out, she wouldn't be like Cass, she was too shy and timid to want to go further. Anyway, she was embarrassed Cass had said anything, so maybe it was just all girl talk.\n\n\"Wow, girls.\" I said, \"I don't make a habit of showing young girls my cock or anything else, me and you Cass... well.. things just sort of happened.\"\n\nIt looked like Cass was doing all the talking for them both, \"I know that Pete, but Nat was really up for it earlier, I think she is just shy now you are actually here, couldn't you just let her see? Please?\"\n\nMy cock had grown to full erection now as I looked again at Natalie and imagined running my hands over her breasts and sliding my hands up her short skirt. Stop it Pete! I thought, it's not going to happen. Think real. Think! This is a girl you don't know, what if she isn't even as discrete as Cass, and even she had told this friend. Despite my own arousal and hard cock, I was thinking this was a bad idea and I should not get myself into any more potential trouble.\n\nNat, always the quieter one, looked up and said, \"It's ok Pete, me and Cass were just chatting, and although she described things, I was just really curious.\"\n\n\"Pete, emmm, how about if I do this first?\" Cass said, and without warning, stood up, took hold of the bottom of her top and pulled it up over her head. She dropped it on the floor, revealing the firm breasts I already knew so well, topped with those large erect nipples. With hardly a pause, she flipped the button on her skirt, whipped down the zip and shimmied out of her skirt. She stood there now in just a pair of light green, lacy panties; the shadow of her pubic hair just visible through the sheer material.\n\n\"Cass what on earth are you doing? I asked slightly panicky, but with my eyes transfixed on her almost naked body, my cock twitching in my shorts. \"We are not alone,\" I added, flicking my gaze to Natalie briefly.\n\nCass said, \"I remember from an earlier time that sometimes it feels awkward if one person is dressed and the other isn't,\" she giggled self-consciously, \"so I thought that maybe you might not feel too much 'on show' if you weren't the only one showing something.\"\n\nI looked at Natalie, she didn't seem phased with Cass half naked, but was looking across at my bulge.\n\nMy cock was really hard now. I was still trying to decide what to do and Cass was pushing the buttons.\n\n\"Is this what you want to do Nat?\" I asked quietly,\" You don't have to.\"\n\nShe was playing with her long hair that hung over her breasts, wrapping it round one of her fingers, \"I wouldn't mind, if you don't.\" she said, \"I would sort of.....well....like to know more of what Cass knows,\" she finished, but that blush was back .\n\nSo, one girl is standing in just her panties, the other is asking to see my cock that is straining to get out, what is a guy to do? My logical brain shut down again! \n\nI got up out of the chair and walked over to stand in front of Natalie, my shorts pushed out in front by my erection. Cass had sat back down but was watching closely.\n\n\"Nat,\" I said, \"so that I am sure you are ok with this, if you want to, you are going to have to unzip me.\" \n\nShe looked at Cass who nodded almost imperceptibly.\n\nHer hand tentatively rose up and her small fingers gripped the zip fastener and pulled downwards, opening the front of my shorts. \n\n\"Now the button,\" I said.\n\nUsing both hands, she carefully undid the button. When she let go, my shorts fell to the floor leaving my cock tenting my boxers on a level with her eyes. She could see the shape of it through the material and just reached out a finger to touch it. \n\nWhen it jumped at her touch, she pulled back, \"Ohhh,\" she said, and looked up at me.\n\n\"It's ok, now take my boxers off.\"\n\nLooking back down, she put her hands on either side of the waistband and tugged. My cock was pulled down with them until suddenly, it broke free, and shot back up to vertical with a smack on my stomach.\n\n\"Shit,\" she said involuntarily, \"sorry...ohhh,.. it's much bigger than I thought it would be, bigger than things we tried. Goodness, Cass, did you actually manage to...you know... get...all of it...like ..in?\"\n\nIt seemed Natalie did have a voice after all.\n\nI looked at Cass, who, was slowly rubbing her finger between her legs over her panties, \"I didn't think I could either, but feel it Nat, it's different to those hard objects we experimented with.\" \n\nNat looked up at me, the tip of her tongue just protruding from her lips with concentration. I nodded and shuffled forwards. As Natalie's legs were in the way, without thinking she spread her knees to let me get closer, until the front of my legs were against the sofa and the inner side of her knees were against my legs\n\nShaking slightly, she tried to wrap her fingers right round my cock, but she couldn't make them meet. I instructed her, as I had Cass, to slide the skin back, so that the purple head came into view. As I expected, a few drops of pre-cum was collecting around the exit hole.\n\n\"That's pre-cum isn't it?\" she stated, \"Cass told me.\"",
        "\"Did she tell you what it tasted like?\"\n\n\"She did, but I don't know if I want to.\"\n\nCass said, \"You know some of our friends said they do it Nat. Just put a bit of his cock in your mouth and try it, I think Pete will like it,\" she grinned at me, continuing to slide her fingers back and forth between her legs.\n\n\"I'll try it,\" she said, not convinced.\n\nAs Natalie opened her mouth wide and put her lips over the head of my cock, I thought, God, this is getting better by the minute, this gorgeous girl is about to suck me and the other is slowly masturbating beside her. How far could I take it. Would Natalie let me touch her?\n\n\"Hmmmph,\" she muttered, her mouth full of my cock head.\n\nLetting it slide out, \"You were right it's an unusual taste, but not bad like I thought.\"\n\nShe put her mouth back over my cock and I felt her tongue exploring around it, finding the hole at the end, probing where the pre-cum was seeping from.\n\nSeeing that she was occupied with that, I reached forward and cupped her left breast with my hand, feeling the hard nipple in my palm.\n\nShe twitched a little, but didn't stop sucking my cock, so I ran my hand all over her firm tit and then across to the other one. If anything, her nipples got harder and I was able to tweak them through her top.\n\n\"Mmmm,\" she muttered, and took a little bit more of me into her stretched mouth, Cass closely watching this from the other end of the sofa, but now with her fingers inside her panties.\n\nI loved the picture of her sucking my cock, her long hair draped over her elfin like face and her big eyes occasionally looking up at me. She was the only one with all her clothes on and I wanted to see what her naked breasts were like and touch them. I knew though that to get her top off, she would have to stop sucking me, but I thought it might lead further and it was worth it.\n\nI moved my hands, one to each side of the bottom of her top and tugged upwards. She didn't immediately acquiesce. I think she was deciding whether to let me or not. She must have reasoned that with Cass only in panties and me half naked too, she was the odd one out, because she took my cock out of her mouth and lifted up her arms, allowing me to pull her top up and over her head, dropping it beside her onto the sofa.\n\nOh, what a sight, two beautiful round white breasts, although I am no expert, maybe about 34b. Her slim frame made them seem bigger than I think they were, but I was not disappointed. Her erect and long nipples sat perched on top with her long hair just grazing them. Her neck and cheeks were flushed, a lovely picture of shy youth sitting right in front of me. Before she had time for second thoughts, I moved both hands back to cup and lift both breasts, a thumb rotating each nipple. With surprising confidence, as I stood between her knees, a breast in each hand, she picked my cock up, pulled the foreskin back, put the head back in her mouth and returned to twirling her tongue around it, but now with more vigour. As I massaged her breasts, running my fingers round, scraping my palms over her nipple, she began to move her head forwards and back, her lips grazing the sensitive head and making my entire cock twitch.\n\nCass had just been watching, with the fingers of one hand working inside her panties, and the other stroking her left breast and pulling her nipple. Her face was also slightly flushed, but I think that was more to do with her state of arousal than shyness.\n\nNatalie was doing a good job on my cock and I knew that with the visual stimulus of the two girls and the sensations Natalie was giving me, I might soon cum, and I wanted to delay that for a while to see if she would go as far as Cass had. I realised that I was having my cock sucked and caressing the breasts of a girl who I hadn't even kissed yet and I wanted to feel her lips on mine.\n\nI pulled back slowly so that my cock slipped out of her mouth, even though she still had her hand wrapped round it, but as I knelt down onto the carpet, she was forced to let go. \n\nI was kneeling in between her legs, her knees either side of my waist and by lowering my head slightly, I put my mouth onto her right nipple and flicked it back and forth with my tongue while stroking her left breast with my hand.\n\n\"Oh Lord, ohhhhh,'\" Natalie uttered, her teeth on her bottom lip.\n\nI swapped over, doing the same to the other nipple eliciting more moans and little sob noises from her. Keeping one hand playing with her breast and nipple, I moved my head upwards licking from that nipple over her breast, up her neck, round her chin and onto her lips. I ran my tongue over each lip, then put mine on hers and nibbled hers with them. I could feel her breathing through her nose more rapidly than before, and with my hand still on her breast, felt her heartbeat had increased. I started to kiss her chastely, moving my lips on hers. Feeling her doing the same, I ran my tongue out and gently probed between her lips until after a moment or two, she opened her mouth and let me in.\n\nOnce I had overcome the initial reluctance, like Cass, she quickly got into it and was sucking and moving her tongue against mine like she had just won a prize. \n\nShe seemed to be really enjoying it now, her hands on my head holding my lips in hard contact with hers and tasting every part of my mouth. In turn I sucked her tongue and played in her mouth while running my hand from side to side, covering each breast in turn. I flashed a look sideways at Cass and saw she was watching and quietly smiling, one of her feet now on the sofa and the hand in her panties working lower down, so I was sure she had one finger or more inside herself now.\n\nNot wanting to break the spell, I continued to kiss Natalie, but taking my hand from her breast, I put one hand on the outside of each knee and slowly slid them up her thighs, my thumbs on top. As I had seen earlier, she was wearing a very short skirt, so I was more than halfway up her thighs before I came to it and stopped.\n\n\"Mmmmm\" , she whispered through the kiss, \"you can go further if you want.\"\n\nIt was my heartbeat that increased then. I was expecting her to say 'that's far enough' not the opposite, perhaps she and Cass had exchanged looks and communicated in some way without me knowing. Whatever the reason, I knew she wanted me to continue and that made me even more excited and aroused.\n\nUsing my fingers on each side, I lifted her skirt enough to let them slide further up her warm smooth thighs that beckoned me on upwards. Wow, I thought, she has longer, slimmer legs than Cass, but very inviting.\n\nMy thumbs eventually reached the point where her legs met her body, the heat there was very noticeable. I rotated my hands down more between her thighs and used my thumbs to touch her panties where they disappeared down between her legs. Her legs opened a little more, and I had more room to feel up and down. Her panties felt smooth, and as I moved down over her sex, they got wetter and wetter until, when I pushed them into her slightly, I am sure I could feel moisture being squeezed out.\n\nHer frantic kissing now, with her tongue filling my mouth, was making it difficult to breath properly and her heavy breathing down her nose was noisier than before. My cock was pushed up against the sofa and was painfully hard with anticipation of where this might go, now that she had let me get my hands as far as her pussy.\n\nEncouraged by her kissing, I found the join between leg and panties and pushed both thumbs one either side, under the elastic. I wasn't surprised to find a find a mat of trimmed pubic hair, nor that it was extremely damp. My thumbs were both just long enough to slide between the lips of her pussy. Moving them upwards in her slit, her labia opened up to let them through, then closed behind them like a vaginal zip fastener.\n\n\"Ummm... ahhh,\" she gurgled some words into my mouth, totally incomprehensible, but I understood enough to know she liked it.\n\nI kept moving them up and down, lubricated by her own juices, feeling the warm, soft skin on the inside of her lips. After letting her get used to this invasion for a while, my thumbs eventually came into contact with her clit, one each side, and as they touched it, she actually 'squeaked' out loud and involuntarily tried to slam her legs shut. But she couldn't, as I was between them, so instead I felt her grip the outside of my upper thighs almost painfully with her knees.\n\n\"Pete, oh, oh,\" she managed, a bit too loudly.\n\nCass had been sitting quietly watching us all this time while she fingered herself inside her panties. However, I knew from our past evenings together that Cass was a visual person. It turned her on to be able to see, as well as feel what was happening when I had shown her something new. Hearing Natalie cry out in pleasure and seeing my hands under her skirt, but not able to see what I was doing I think frustrated her. As I continued to work Natalie into a state of sensory overload by gently massaging her clit with alternate thumbs, Cass scooted over on the sofa, undid the button and lowered the zip on Natalie's little skirt.\n\n\"Nat,\" she said, \"let's take this off, shall we?\"\n\n\"Mmmm,\" was all the reply she got, as she was too busy trying to suck my tongue right into her mouth.\n\nI knew I would have to move if that was to happen, so rather than break contact altogether, as I pulled my hands from under her skirt, I moved back and sideways, then clamped my mouth onto the nearest delicious nipple. With her legs now able to close, I tugged at the hem of her skirt and she obligingly lifted her bottom to allow me to take it off down those long legs.\n\nI then gripped her panties and tried to repeat the procedure, but she wouldn't lift up for me.\n\nDamn I thought, she doesn't want to do more than this, I really wanted to see her fully naked.\n\n\"It's ok Nat,\" Cass cajoled her, \"you know you want to find out for yourself some of the things I told you, don't you?\"\n\n\"Well yes, but... I haven't been naked in front of any man since I started bathing myself.\"\n\n\"How about if I do the same Nat?\" Cass said, resting her hands on the side of her own panties.\n\nI continued to massage her thighs from the side, up to her panties and down to her knees, letting my hand go in-between her legs as much as possible.\n\n\"I...I'm not sure,\" she mumbled, clearly undecided although I sensed she was wavering.\n\nCass stood up and slid her panties down her legs and stepped out of them.\n\nMy cock twitched again., I ran my eyes up and down Cass' sexy body standing there totally naked, her damp, trimmed bush now on display, I half thought maybe I should just go and fuck her instead and Natalie could watch.\n\n\"Perhaps its too much for you,\" I said turning to look at Natalie.\n\nI don't know what made her decide, whether it was Cass being naked or the fear of perhaps missing out on something, but suddenly, she gripped her panties, lifted her bottom and slipped them off.\n\nPerhaps it was the just way I was looking at Natalie, I am sure there was lust in my eyes, but these two girls seemed to blush at everything, and Natalie certainly was now.\n\nShe too had a neatly trimmed bush, but hers was almost black matching her hair in contrast to Cass whose pubic hair was more a light brown. The thing I did notice more though, was that with no panties on and her legs closed, because her legs were slimmer, Natalie had what I find really sexy, a gap between her thighs at the top.\n\nCass obviously decided that we should all be totally naked, so she walked over to me and pulled my tee shirt over my head. I wanted to slip back between Natalie's legs so that I could see more of her pussy but felt some resistance when I shuffled on my knees back in front of her and tried to gently prise her legs apart. Cass could see what I was trying to do, and sitting back down right next to her friend, she put her hand down between Natalie's legs and once again, they exchanges some unspoken communication and Natalie opened her legs.\n\nI could see her swollen labia now, slightly open to show a faint pink interior and glistening with her arousal, some drops collecting at the bottom of her slit. I thought she would probably react better to me tasting her than attempting to push my cock straight into her, so as soon as I was once more pressed against the front of the sofa on my knees, between her legs, I pushed my arms under her thighs and pulled her bottom to the front of the cushion. She had a slightly scared look on her face as I manoeuvred her legs onto my shoulders, so I quickly leaned forward and pushed my tongue against her pussy lips, then let it slide between them licking from the bottom to the top, but leaving her clit alone. I almost laughed when not only Natalie, but also Cass took big breaths in and said, \"Ohhhhh,\" together. I could see that Cass had put a finger into herself and was slowly moving it in and out.\n\nNatalie was holding onto my arms, her nails digging into my skin as I lapped up and down, occasionally letting the tip of my tongue tease her opening as I passed. Her eyes were fluttering open and closed and she was once again biting her lower lip. I wanted to get her close, but not let her come yet, as I wanted her right on the edge so that she would want more. Gradually I got closer to her clit, then purposely flicked it with my tongue. Her heels dug into my back as she spasmed with the contact. Putting my mouth over her clit I sucked it in gently, realising that she had a bigger clit than Cass and I could more easily manipulate the nub between my lips. This sent her a bit wild, moaning and thrusting her pussy into my face.\n\n\"Pete! Oh Pete... No... No... Yes... Yes.'' She was vocal now but so far gone that she didn't really know what she wanted.\n\nI eased off, back to slowly letting my tongue just slide inside her pussy lips over her clit very gently and then repeating the stroke, letting her gradually calm down to a quieter enjoyment.\n\nCass meanwhile had been watching avidly and now had two fingers sliding wetly in and out of her pussy.\n\nEasing backwards and hoping that she wasn't going to get worried, I moved her legs under my arms and slowly pulled Natalie off the sofa onto my lap facing me, her legs now resting on my hips. I supported her back and pulled her close until I felt the underside of my cock in contact with her damp pubic hair and against her pussy. Looking down, it looked as though it was she who had the cock, the large mushroom head poking up through her hair.\n\n\"Wh...What's happening now?\" what are you doing?\" she asked, a little shakily.\n\nCass leaned over to see better and whispered in her ear, \"Can you feel his cock against you Nat? He is right up against your pussy with it. It feels good doesn't it, just as I told you?\"\n\n\"Oh Yeeeaaahhh,\" she replied, with a hiss of breath, \"it feels like he is nearly in me Cass,\" and looked down again at the head of my cock between her pussy lips.\n\nI started to rock slowly backwards and forward, holding Natalie against me, so that my cock moved against her labia, the purple head and ring of rolled back foreskin nudging her clit each time. She put her arms round me and picked up the rhythm, increasing the friction on all the parts of her pussy. Putting my lips on hers, I pushed my tongue into her mouth and was rewarded by an energetic response from hers.\n\nWe rocked slowly, locked together with our mouths and groins, deep grunts of pleasure coming from her. I looked over her shoulder at Cass who, with two wet fingers still moving in and out of her vagina, must be edging her climax. Then, as we locked eyes, she actually winked at me. Jesus!, she wanted to see Natalie with me, had she planned this all the time? It made sense now, getting her aroused before I got home, coaxing Natalie on. Wow, she wanted me to fuck her while she watched. As the realisation dawned on me, I knew that was what was going to happen, and for different reasons, they both probably wanted it.\n\nIf this was going to happen, I was sure Natalie was ready. She was so wet, and I could feel the tension in her body as she clung to me.\n\nIt was Cass who again who whispered in her ear, \"Nat, do you want to feel what its really like?\"\n\nWe stopped rocking.\n\n\"You mean...with it actually inside?\"\n\n\"Yes, like I told you,\" Cass replied. \"Just see how it feels for only a moment, if that's all you want to do,\" she added, \"we both went to the doctors remember, so there is no risk.\"\n\nCass was telling me that Natalie was safe on the contraceptive pill too... if she had been taking it regularly of course.\n\n\"I....I'd.. sort of like to,...but...I'm smaller than you Cass, it looks too thick.\"\n\n\"I thought that too, but it was ok after a moment.\" Cass continued to press her.\n\nI listened to this exchange, my cock pulsing against Natalie's pussy. I kept quiet waiting for Natalie to decide what she wanted but knowing now that Cass wanted to see it.\n\n\"Pete,\" she eventually said in my ear, \"could we just try, but you will stop if I say so, won't you?\"\n\n\"Of course Nat, but its ok if you don't want to,\" I said, rubbing her back, and making sure she had a choice, even though now I desperately wanted to put my cock inside this gorgeous dark haired girl.\n\n\"No, I do, but not too much ok?\n\n\"Don't worry Nat, I'll make sure you're ok,\" Cass said.\n\nI wondered what she meant by that.\n\nI slowly disentangled myself from Natalie, grabbed a loose cushion from the sofa and placed it on the carpet a short distance away. I turned Natalie round and eased her down until her head was on the cushion and she was lying flat on her back. Lying alongside her, I ran my hands over her breasts and nipples, down over her stomach and back up, covering all the area in between. I returned to kissing her and before long, our tongues were again dancing with each other and she was back to rapid breathing. I saw that Cass had laid down the other side of Natalie and was now teasing Natalie's nipple\n\nSliding my hand down to cover her mound, my middle finger slid between her labia and I stroked slowly up and down, while maintain our tongue to tongue combat. I gently pushed her legs apart without any resistance. With my finger slick, I felt lower down until I came to her entrance and eased my finger in. Then pushed until it was totally engulfed in her warm and very wet channel.\n\n\"Ummmmph...oooo...\" I heard, muffled by our mouths.\n\nGradually, I began to finger fuck Natalie's tight vagina, rotating my finger as I did so. Whatever objects she and Cass had used to stimulate themselves, couldn't have been very thick as she was very tight, and I was a bit concerned my cock might hurt her. When I felt my finger sliding more easily into her, I wiggled a second one to join it and felt Natalie catch her breath, but it was soon as slick with her secretions as the other one and together they slid in and out with less effort.\n\nCass was still stroking Natalie's breasts and watching my fingers moving in and out. \"Do you want to try now Nat?\" she said, her excitement at seeing me finger fucking her friend making her voice catch.\n\n\"Mmmm,\" Natalie mumbled.\n\nClimbing over her legs to lie between them, supported on my elbows and knees, I let my hard cock rest on her mound. She stopped kissing me and bit her bottom lip again, obviously a habit, but an endearing one.\n\nJust as I was lifting my hand to take hold of my cock, I felt with a little bit of shock, another hand take hold of it.\n\n\"I'll do it.\" Cass said.\n\n\"What do you mean?\" I blurted out. I had no idea this was what Cass wanted.\n\n\"I will make sure Nat's ok,\" she said, as if it explained everything.\n\nWith that, she slid down until her eyes were at a level with my cock, pulled my foreskin back and started to rub my cock up and down Natalie's slit, lubricating the head. I have had some sensations in my life, but feeling a young woman rubbing my cock up and down her friend's pussy was a new one for me and very sensual.",
        "Natalie squirmed a little as the head of my cock repeatedly hit her clit, and for me the sensations on that sensitive area were moving me closer to coming.\n\nOnce Cass was satisfied that it was sufficiently wet, she guided the head down until it was pushing against Natalie's entrance. I could feel the tip of my cockhead located into a slight depression between her outer labia and knew it would only take a push to be inside her. Almost unable to bear it, I held still, as Cass alternately pushed and pulled my cock only a few millimetres. Gradually as she moved my cock more, I felt Natalie's vagina easing open to accept me. The feeling was so overwhelming me that the next time Cass pushed me in, I moved my hips forward just a small amount and felt the satisfaction of the head slipping past the entrance and into her waiting warmth and wetness.\n\n\"Ohhh Christ, Shit, ohhhh,\" Natalie said, her breath whooshing out, \"just stay there, don't move, please. It's stretching me so much; I don't know if I can take more.\"\n\n\"Just let yourself get used to it for a moment,\" Cass said to her, and releasing my cock, began to rub her wet finger over Natalie's clit.\n\nI stayed as still as I could, waiting to see what was going to happen next, although I couldn't stop my cock from occasionally pulsing just inside Natalie.\n\n\"I don't have to go any further Nat if you don't want to,\" I told her, \"I can just move this small bit in and out if you just want to feel the sensations,\" I added.\n\nWhether it was Cass stroking her clit for her or her determination to just feel for herself what Cass had told her, I don't know, but after a long minute of me lying on top of her, with just the head of my cock buried inside her, she whispered, \"It's better now, let me try that Pete.\"\n\nSlowly I eased back until my cock was just touching her entrance, then slid back in and felt her vaginal muscles close around it again. Once, twice, three times, then more, just gentle, in out strokes, while Cass continued to stimulate her clit and watch in close-up my cock going in and out of her friend.\n\n\"Ohh....Mmmmmm,..huhhh, that's feeling ok now,\" she said.\n\nI could feel her legs trembling either side of mine and she had wrapped her arms round my back and was stroking them up and down my spine.\n\nI thought that once the initial stretching sensation of having something larger than she had tried before in her vagina faded a little, she might start to find the sensations more pleasurable. So, when I sensed her move her hips just fractionally up to meet me, I pushed forward the same amount and felt my cock penetrate a little further. She didn't cry out or ask me to stop, so taking it carefully, and letting her get used to the extra depth for a few moments each time, I was able to gradually push more of my cock inside her, until we were gently fucking with half my cock moving in and out.\n\nCass had removed her hand from Natalie's clit and was now just watching the scene in front of her and working her own pussy and clit in time to our thrusting. She too was quietly moaning with her own solo sensations.\n\nNatalie was so tight that even with her copious secretions that had coated my cock a slick white, it felt as though my cock was in a warm velvet glove and I was rapidly getting close to coming.\n\nMy breathing was matching hers now, rapid and ragged. She had her eyes closed and emitting little cries and moans. She had begun to make bigger movements of her hips up to meet me. Little by little I did the same. It wasn't frantic. I just let more of my cock find its way inside. She had bent her legs and her feet were flat on the carpet either side of me. \n\nWhen I gave the next thrust, I felt our bodies collide. I was up to my hilt in her, my balls against her bottom. I stopped. Her eyes flew open at the contact.\n\n\"Pete, ohh fuck, fuck, are you really all inside me, Pete?\"\n\n\"Yes, I am Nat,\" I said breathlessly, \"is that what you wanted to feel?\"\n\n\"Oh God, yes, but I didn't think I could. I never thought I would be big enough.\"\n\nI pulled back until my cock was only just inside her then, painfully slowly, in a very controlled way, pushed back until we connected again. She dug her nails into my back -- owww I thought, that will take some explaining. Once again, and then again, but gradually gaining speed, I started to fuck Natalie properly. She matched me, getting the rhythm just right, so that our pubic bones crushed against one another, only cushioned by her sparse pubic hair.\n\nShe was making all sorts of noises, panting and groaning, if Cass was a visual girl, Natalie was certainly a vocal one. I was so close and I felt Natalie was too. She just kept uttering, \"Yes Pete, don't stop, ohh yes, mmmmm...,\" over and over.\n\nI felt my balls tighten, my cock start to pulse, I hadn't even asked Natalie if I could cum in her, but it was too late. I pushed right into her one last time, as far as I could, and felt my cum erupt inside her, coating her cervix. Pulse after pulse. She must have felt it fill her, because as I held myself inside her, she dug her nails deeper into my back and almost howled as she reached her peak and her orgasm washed over her. Her already tight vagina squeezed and relaxed several times, milking anything that was still left in my cock.\n\nI guess it was only a second or two later that we heard another groan as Cass, who I admit I had momentarily forgotten in my euphoria, reached her own climax on the floor next to us. She had been masturbating while watching all that was happening, and seeing her friend being fucked and us both cumming had triggered her too.\n\nI looked down at Natalie, she was looking a bit dazed and was trying to slow her breathing down.\n\n\"Are you ok Nat?\" I asked her.\n\nShe smiled, \"I...I think...so..., Hell. I had no idea it might be that strong, phew, fuck,.. ooh.. sorry...my brain is all mush now,\" she said, \"and it's all your fault Cass.\"\n\nShe looked down to where my cum was starting to pool out of her vagina onto the carpet, \"Wow Pete, there is so much of it, I just thought there would be a few drops or something. I still can't believe I had all of your cock inside me, but I do feel a little sore.\"\n\n\"Nat, I'm sorry, I should have asked you if it was ok to cum inside you, but I got carried away, I am really sorry,\" I said, meaning it.\n\n\"It's nice of you to say Pete, but after Cass tried to tell me what it felt like, I wanted to feel it for myself, and it was so erotic. Don't worry, we have both been taking 'the pill' regularly, so it shouldn't be a problem.\"\n\nIt was late and Cass had already started to dress. \"We ought to think about getting home Nat.\"\n\nNatalie looked at her watch , \"Oh yea we should, I don't want any questions when I get in,\" she said, with a slight smirk, and began to do the same. \n\n\"Nat, would you like something to clean up with first,\" I asked.\n\n\"No,\" she said pulling her panties up her legs, \"it will be something to remember when I am in bed tonight, so these will do for now,\" she said with a cheeky grin.\n\nOnce they were both dressed, they made their way to the door, Natalie kissed me on the lips and whispered, \"Thanks Pete, I'll never forget tonight,\" and went out through the door.\n\nCass let her get outside then also kissed me on the lips, grinned, winked, and said, \"I hope you enjoyed that as much as I did Pete, if we are free, we might be able to babysit during the holidays.\"\n\nThen she turned and left...........\n\n \n"
    ],
    "authorname": "jasperspen",
    "tags": [
        "innocent",
        "mini-skirt",
        "threesome",
        "reluctance",
        "shy",
        "sitter",
        "virgin",
        "ffm",
        "young",
        "two women one man"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/memories-of-our-babysitter-ch-04"
}