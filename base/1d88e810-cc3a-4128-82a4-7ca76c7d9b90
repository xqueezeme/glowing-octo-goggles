{
    "title": "Claiming Treasure Ch. 41-45",
    "pages": [
        "Heather Rhodes' POV<br >Cascade Pack House, Alpha Office\n\n\"Baby, I need you to sit in the corner here and watch,\" Carson said to me. \"I don't know if we can trust them with the secret of your existence, and you'll appear to be a guard.\"\n\n\"Fine, if I have to,\" I replied. My wolf didn't like getting pushed to the side; she wanted recognition as his equal. \"What happens if we can't trust him?\"\n\n\"Then we fight his claim to take over as Alpha of the Denali Pack and find someone else to take over.\"\n\n\"Alpha, we have arrived,\" the driver said from out front.\n\nYesterday, the son of the late Denali Pack Alpha had called requesting our support of his leadership. Carson said he would have to speak to him in person first. We told him to fly to Seattle, and we would bring him to our Pack to discuss it. Interim Alpha Alan Robertson, who was seventeen years old, immediately accepted.\n\n\"Bring him up to our office.\" I didn't know if he would understand the snub we were giving him by doing this. Fellow Alphas were met at the stairs, while lower-ranking wolves were brought to the Alpha's office. When he arrived, he didn't appear to be upset by it. \"Alan, welcome to the Cascade Pack,\" Carson said as he came around the desk to shake his hand.\n\nHe shook it back, glancing at the corner where I was watching him intently. Carson didn't introduce me, so he looked back. He met Carson's eyes, but only held them for a few seconds before looking down. \"Thank you for seeing me, Alpha. On behalf of the Denali Pack, I apologize for the issues the former Alpha caused you.\"\n\n\"Issues is one way to say it,\" Carson said as he gestured to the chair. He sat behind the desk and looked at the young man. \"Invasion is another.\"\n\n\"My father always had his nose too far up Coffey's ass to see straight,\" he said. \"It will take a long time to heal from the damage he left behind.\"\n\n\"What do you mean?\"\n\n\"Denali is remote and isolated, and he used that against us. He would talk about the need for the Pack to be tough and independent, but that was a cover. In reality, he was afraid someone would push him aside. Vic Knightly was a good example. He was more respected than my father, even though my father refused to allow him to rise beyond Pack Warrior. My father encouraged him to leave by taking away his Warrior position.\"\n\nI thought about what an Alpha like that would fear. The biggest competition for an Alpha came from his offspring, and Alan was now reaching adulthood. \"How did he react when you shifted?\"\n\n\"He tried to kill me. When I shifted, my wolf and I both knew that our destiny was to rule and to rule soon. My wolf refused to submit to him, and that enraged him. He choked me out; if the Pack Healer hadn't grabbed me when he turned away, I would have died there on the front lawn. No one would interfere with his family.\" He looked out the window for a moment, collecting himself. \"He'd been beating me since I was ten, to 'toughen me up' as he said. My mother's wolf had been beaten into submission shortly after they were mated. She wouldn't ever do or say anything against him, for fear that he'd kill her the next time.\"\n\nWhat a loser. Hitting on a boy who hadn't shifted yet? Abusing his own mate? \"How can the bond even allow that?\"\n\n\"It shouldn't,\" he said. \"Your wolf has to be seriously fucked in the head to do that to your other half.\" He stood and grabbed two water bottles out of the fridge, handing one to the boy. \"What happened then?\"\n\nBrian took a drink and continued. \"He didn't allow me to train with the other warriors, and he wouldn't train me either. I think Alan knew that if I learned how to fight, I'd use it against him. Instead, he would keep me away from the rest of the Pack. I spent months doing patrols, hunting parties, explorations, anything he could do to keep me out of the way.\" He smiled a little. \"If he thought he was holding me down, he was wrong. I spent months in wolf form in the mountains, strengthening my body and sparring with every warrior in the Pack. I learned quickly and grew strong. I was waiting for one thing before I challenged him for the position,\" he said with a sigh.\n\n\"A mate.\"\n\n\"Yes. I did not find my mate in my Pack, and I was not allowed to travel. My father knew that with my true mate by my side, I'd be even stronger. He was planning to mate me to a Pack member, knowing a choice mate wouldn't be the same.\"\n\nI liked this boy. \"He does not seem to be like his father.\"\n\n\"How would you change things at your Pack?\"\n\n\"I would return us to the path Luna set us all on. I would encourage true mates. I would repair our facilities and finances, which are in poor shape. I will lead them towards a path that makes us respected not for our power, but our character and faith.\" He looked over at me. \"Luna Heather is proof that the Goddess is doing new things in our world. I wish to be a part of that movement and partake in the blessings that you have.\"\n\n\"Do you believe your Pack would support you, despite your age and heritage? The Council will treat this the same as a challenge since I have the lawful right to the Alpha position.\"\n\n\"I know they will. As you said, my father attacked and failed, and we all saw it happen. If you want Denali, it is yours, and I would serve as your Beta. If you do not, I am here to ask for the position.\"\n\n\"I agree with you, Heather. The prisoners said the same, they would gladly accept him as Alpha.\"\n\n\"What would we do with a Pack in Alaska, Carson? Better to have an ally than a long-distance responsibility that will drain our energy and finances.\"\n\n\"You are right.\" He stood up and went around the desk as Alan stood too. \"You have our support to become Alpha of Denali,\" he told him as he embraced him. \"I will inform the Council of our decision.\"\n\n\"Thank you, Alpha,\" he said with a smile, then looked at me. \"And thank you, Luna, for being the change we need as a people.\"\n\n\"What are we going to do with his warriors?\"\n\n\"We can't do anything about the dead.\" All of them were buried now, except one man who'd been decapitated by the cable on the road in the rental car. We left him with a staged accident scene and fire. Another car had been brought back to the rental company on a flatbed after crashing into a tree. The other vehicles they brought, they had been rented for a week. We had them parked out of sight. \"I'll send back the others with him in the rentals.\"\n\nI got up and stood by the door while I waited for them to catch up. When we went outside, I ran into the woods and relieved myself before following them to the cells. It made me feel good to see how his people reacted to seeing him, and their joy when they found out he was going to be Alpha.\n\nAn hour later, as they drove off, I rubbed my head against Carson's leg. \"I feel hopeful now,\" I told him. \"I just hope Carl and Angelina can handle Banff.\"\n\n\"Me too, baby. If it doesn't work, we may have to liquidate the Pack and disperse the members. They could be the biggest problem since Coral had to straighten out Bitterroot.\"\n\n\"How bad was that?\"\n\nHe just laughed. \"Come on. I need to show you a video called 'The Battle of the Coral Sees.' You'll get a new appreciation for your sister-in-law.\"\n\n\"You haven't even asked me to marry you! If you liked it, wouldn't you put a ring on it?\"\n\nHe knelt in front of me, picking up my paw as I sat down. This was it, I thought to myself. I had the man I love on bended knee, about to make a romantic marriage proposal! I looked at him with my head tilted and my tongue hanging out the side of my mouth while my tail whapped the grass behind me. Yeah, that's just like I dreamed it would happen as a little girl. \"Rings don't survive the shift, but we can tattoo the skin if you want,\" he said. \"I will give you a ring, just as I will give you everything you desire. I love you, Heather, and I do want to marry you as a human just as I mated you as a wolf. You are mine, I am yours, forever.\"\n\n\"I love you, Carson.\"\n\nCh. 42\n\nAlpha Rori King's POV<br >Arrowhead Pack House\n\n\"I thought you should know,\" she said.\n\n\"Thank you for telling me, Loralei. I'm sure the FBI is being thorough.\" I hung up the phone, silently fuming about what was going on. In the four days since the attack, the FBI was no closer to finding the identities of the missing men. They had learned the names of several of the men, and agents had served warrants on several homes in the Monogahela Pack. So far, Ron and Teri had been able to hold their new Pack together and keep the investigation from spreading further into their isolated mountain valley. \"It's just a matter of time,\" I said to Chase as he worked on our finances.\n\n\"They aren't going away quietly,\" he agreed. \"All those bodies and the television coverage, I didn't expect they would. What that hell were they thinking would happen when they come in, guns blazing, on the shores of a human-populated lake?\"\n\n\"I don't think they were thinking. It's a mess, though.\" I looked out the window at the lake, which was finally ice-free. \"That's the third call I've gotten this morning, warning me the FBI was poking around in my affairs. They were asking Loralei if there were any signs we were involved in drug trafficking or gang activity. Thank Luna that we have good relationships with our neighbors.\" Loralei owned the property next to our back entrance, which now had two burned-out homes torn down next to her. Her family had owned the property for decades, and she wasn't selling. The FBI talking to her again for background made sense, even though she wasn't home during the attack. I didn't like them pushing her about our activities.\n\n\"At least she likes us, and knows the bikers are good people from when she came over for the picnic,\" he said. With the biker parties and the multiple attacks, we had to reach out more. Saving our neighbors from the kidnapping helped, as did the beach parties we occasionally had where we invited them. \"I'll talk to my Mom, see if they can shut them down from above like they did with the Task Force.\"\n\nWe'd swept the office and Pack House for bugs, but we were watching surveillance teams near the entrance, and we believed the FBI was listening to our phones. If they had targeted us, they'd be going after our finances and backgrounds next. \"The deal we made with the Feds didn't include any future acts. If the Justice Department keeps poking around, we're all in trouble.\" Frank had made things clear when he briefed the Council; none of us would be able to withstand scrutiny for long.\n\n\"Not from here,\" I said.\n\n\"I'll use a burner once we get to town. I have to go visit our lawyer, and we need to pick up our meat order from the new supplier in Duluth.\" We went through a lot of meat and seafood. We had used a butcher shop in Two Harbors that delivered to the Pack House, but the owner backed out after the attack. He 'didn't want to get involved with anyone shady,' he said. The longer the FBI treated us like criminals, the more people would assume we were criminals. \"I love you, Rori.\"\n\n\"I love you too, baby. Stay safe.\" I kissed him goodbye and went back to work.\n\nAn hour later, I got an urgent send from Lance, one of our front gate guards. \"Alpha, we have a female rogue here requesting sanctuary and medical care for another rogue. The second is in her wolf form and is in bad shape.\"\n\n\"Define bad.\"\n\n\"Hit by a car, unconscious, blood on the nose.\"\n\nShit. \"Leave the other guard until I get you relived. Lance, you take them to the clinic and stay with them,\" I said. Picking up the phone, I called Possum, who had our babies over at her house for the morning. \"I need you at the clinic immediately,\" I said.\n\n\"The nannies are here for the toddlers, I'm on my way,\" she answered. As an Emergency Room nurse, she was the best option with Chase gone. My next call was to Oxbow Lake, where I asked them to get Doctor Olson here as soon as possible. I walked out the door just as Lance carried the wolf in behind Possum, who opened the door for them. I walked across the street while I called Chase. \"We've got a problem at the Clinic, how far out are you?\"\n\n\"We're loading the order now; maybe forty-five minutes?\"\n\n\"Hurry home.\" I hung up as I entered the Clinic, walking past a beat-up Honda Accord sedan. I could smell the blood and the scents of their wolves; rogues had a wild edge to their smell. A woman was pacing back and forth in the waiting room while my guard watched from the door. She didn't strike me as a threat; she looked to be in her fifties, which made her an old wolf. She was tall, almost six feet, and thinner than was healthy. She was poorly dressed, and her eyes spoke of a hard life.\n\nShe almost fell to the carpet when she felt my dominance in the room. She did step back and kneel to me with her neck bared in submission. \"Alpha, I'm sorry, I didn't know what else to do. Please don't kill me.\"\n\nMy heart broke for the old wolf, who was shaking in fear. \"It's all right,\" I said as I got down in front of her and pulled her to me in a hug. \"No one will hurt you here. You have my word.\"\n\nShe broke down in my arms, sobbing uncontrollably. \"She expected to die,\" I asked the guard.\n\n\"For most Packs, a rogue arriving without invitation is killed first and questioned later,\" he said. \"Your offer to take in rogues hasn't been out long, and it's not like we have them on a mailing list. She was willing to risk death to bring the young wolf to us.\"\n\n\"Thank you for bringing her here. I am Alpha Rori King, welcome to the Arrowhead Pack. That's Lance, one of the warriors here.\"\n\n\"Mabel Johnson,\" she said.\n\n\"Who is the wolf you brought in? Your daughter?\"\n\nShe shook her head as she tried to catch her breath; I helped her to the couch, where I held her hand as she recovered. \"I don't know who she is,\" she said. \"I found her by the road while I was out hunting. I couldn't leave her to die.\"\n\n\"Where?\"\n\n\"Near Ely. I've lived there for the past twenty years.\"\n\nShe was looking back at the treatment area, and since Possum couldn't link with me, she couldn't tell me how the young wolf was doing. \"Lance, go help Possum and give me an update. This wolf is not a danger to me.\"\n\nHe hesitated for a second; a pregnant female was vulnerable, and a rogue could be unpredictable. \"Yes, Alpha. I'll get the Security Center to send over another to replace me.\"\n\nI rolled my eyes, but he was right. \"Have them send over new clothes for a tall, thin woman and some food.\" Her clothes were bloodstained and ruined. Lance walked out of the room as I looked at Mabel. \"Mabel, were you part of a Pack at one time?\"\n\nShe nodded. \"Bitterroot.\"\n\nI let out a low growl at that; I'd heard enough stories out of that hellhole and had a bunch of Omegas in my Pack who had survived it. She started to cry at my reaction, and even let out a little urine in her fright. \"No, not you, but I know many who suffered there.\" I pulled her into my arms again and held her while she caught her breath. \"Does anyone know a Mabel Johnson from their time in Bitterroot?\"\n\nI got immediate yes answers from the older Bitterroot Omegas, with my housekeeper, Sally, among them. \"She died a long time ago, Alpha, back in the early fifties. Why would her name come up?\"\n\n\"Because she's crying in my arms right now in the clinic waiting room,\" I replied.\n\n\"OH MY LUNA I'll be right there,\" she said, quickly joined by a few of the others. They must have run to the Clinic since a half-dozen of my Pack came through the door less than a minute later, all screaming and crying as they gathered around a shocked and crying Mabel.\n\n\"Alpha told us you died,\" Sally said when they finally settled down. I took a chair, letting her friends join her on the couch.\n\n\"He tried,\" she said. \"I tried to escape, breaking the bond and running for the border. His border guard caught me. Alpha and his men raped me, beat me to within an inch of my life, then dumped me off Pack lands. It took days before I healed enough to get away from there.\"\n\n\"What happened then?\"\n\n\"I stole some clothes and hitchhiked to Phoenix. I took a new name and worked at anything I could do. Waitress, cook, home health care, housekeeping, anything I could find. When I had been in one place too long, and my lack of aging might raise questions, I'd move to another town and take another name.\"\n\n\"You've been rogue all this time?\"\n\nShe nodded. \"I've stayed at least a hundred miles from any Pack since that day.\"\n\n\"How did you avoid going feral,\" one of her friends asked. \"That's a long time to be alone.\"\n\n\"My wolf took what happened to me hard,\" she said. \"Even as an Omega in the Pack, you belonged to something. The way Alpha and the others turned on me, it changed her. She didn't want to see another Alpha again.\" Her face dropped as she realized what she said and looked at me; she quickly bared her neck. \"I'm so sorry, Alpha, I didn't mean you. My wolf likes you.\"\n\n\"It's all right, Mabel. My wolf didn't like Alphas either. There are still a few out there she doesn't like,\" I said as the girls laughed.\n\nDoc Olson walked through the door, barely glancing at me before he went down the hall to the treatment room. Two more women followed him, one with clothes, the other with a tray of food. The girls set their things on the table, and I introduced the girls before they returned to the Pack House. \"Sally, I'm sure Mabel would appreciate a shower and change of clothes before we eat,\" I said. \"Can you take her back and help her with that?\"\n\n\"Of course,\" she said. She helped Mabel up before grabbing the clothes and walking her down the hall. \"I'm so happy you're here, it's so different...\"\n\nThe door closed and I looked at the other girls. \"She's getting sanctuary, and if she wants, she will join our Pack,\" I told the relieved girls still in the room. \"I'd never turn one like her away.\"\n\n\"It's going to be a big adjustment, she's spent longer as a lone wolf than as a Pack wolf,\" Violet said.\n\n\"And I need you guys to help her settle. Find her a room in the Omega quarters; better yet, see if she wants to stay with Mabel or one of you for a while. Introduce her around and tell her how this Pack functions. She'll find it easier to accept from you than from Chase or me.\"\n\n\"Of course, Alpha,\" she said.\n\n\"We'll take good care of our friend. She was good to us in Bitterroot,\" another added.\n\n\"I'd expect no less.\" I got up and went back to the treatment room, telling Lance to return to his duties. The wolf was still out, a blood bag was hanging along with an IV, and Doc was shaving her side. \"How is she doing,\" I asked.\n\n\"Lacerated kidney, three broken ribs, broken left leg,\" he said as he swabbed her with Betadine. \"She's bleeding internally. I have to operate.\"\n\n\"Chase will be here in about twenty minutes. He'll come straight here.\"\n\n\"I can't wait for him,\" he said as he opened a surgical tray. \"Another thirty minutes and it would have been too late.\"\n\n\"How old do you think she is?\"\n\n\"Young. Not long from the first shift,\" Doc said. \"Gown up or get out, Alpha.\"\n\n\"I'll be in my office,\" I said. \"Thanks for coming, Doc.\" I walked back out, leaving the girls to wait for Mabel. I needed to talk to the Pack, and lunch was starting soon.\n\nCh. 43\n\nRori King's POV<br >Arrowhead Pack Alpha Office\n\nSally promised to take care of Mabel, the twins were down for their naps, and Chase was almost home and would go right to surgery, so I went to eat. The Pack House was busier than usual as we'd taken in dozens of new Pack members recently. The Pack greeted me warmly as I walked in, and I stopped at a few tables to see how everyone was doing.",
        "I could almost see some of the transfers pinching themselves to be sure it was real, as wide the gulf was between their old and new Packs. Our facilities were top-notch, and we had plenty of room. Warriors who had shared bunk rooms now had hotel-room size bedrooms to themselves. The pool was a big hit, as was the lake. I eventually sat at the head table, where Vic and Spider Monkey sat with Betas Rick and Teri, who transferred from Banff. Timur and Mykayla were at the end fo the table. \"Timur, how is she doing?\"\n\n\"She's sleeping better, and she tolerates me sitting by her,\" he said.\n\n\"It's going to be a long recovery. What does Mykayla's wolf say?\" Mykayla had grown up in slavery and was the victim of a sexual assault a few weeks ago. Timur killed her attacker; he was her mate and had years to wait before he could claim her.\n\n\"She doesn't trust her wolf enough to trust me as her beast does.\"\n\nThe meal went quickly, and I enjoyed the Philly cheesesteak and fries. I was almost done eating when I felt my phone vibrate. It was Brian Steele, my new IT Beta, who was back in Banff to pick up the pieces there. \"We got proof on Chair. Sent info to Frank. Call secure ASAP.\"\n\nHoly shit. I got up, apologizing as I wiped the grease off my fingers and went back to my office. We'd purchased satellite phones with voice scramblers as a way of defeating surveillance, with the Alphas in our alliance each having one. I took it off the shelf, powered it up, then called Alpha Carl in Banff. He answered on the second ring. \"Carl and Angelina,\" he said.\n\n\"Hi, it's Rori. I got a message from Brian about proof?\"\n\nHe laughed. \"Oh, you're going to love this. Our people were removing Chairman Coffey's furniture from his office this morning since we'll have a new Chairman soon. We found a false back in one drawer, and inside was a piece of paper with all of his accounts and passwords.\"\n\n\"No shit?\"\n\n\"Yeah. We have access to all of his private accounts, and they're cleared out, but we have the account history. One looks like a Council slush fund, and in there we found three wire transfers to a bank in the Cayman Islands. There were $100,000 payments in American dollars; one last week, another a week before Charles died. The day after his plane went down, another payment of $150,000.\"\n\nDamn. \"You gave the account info to the Feds?\"\n\n\"Yes, along with the passwords we found and an explanation. They know they belong to Jack Coffey. And there's more.\"\n\n\"What?\"\n\n\"Burner phones and handwritten notes with the guy's name and number. Frank said the phone number belongs to an independent assassin who works out of Detroit. He was already on the suspect list for the bombs. The Royal Canadian Mounted Police and the FBI are on this like a duck on a June bug.\"\n\nI just shook my head; Jack's arrogance lost him four Packs and his position, now he would lose his freedom. \"What are they doing with the information?\"\n\n\"Arrest warrants are being issued in both countries. If Jack pops his head up in Pack lands, we'll get him. If not, human law enforcement will.\"\n\n\"That's great news, Alpha Carl.\" It was a load off my shoulders. \"It's not over until it's over. How much money is he running around with?\"\n\n\"Millions that we know of, more we don't. Coffey had centuries to accumulate wealth. If he is smart, he'll lay low and enjoy a quiet life of luxury.\"\n\nI snorted. \"Coffey is too proud for that. He'll be pissed off, and he'll want to strike back. Pass the word; he's hired humans to do his dirty work before, and he could do it again.\"\n\n\"Yeah. Don't worry, Coffey won't sneak back in here.\" We said goodbye, and I updated Chase and my Betas of the events.\n\nJack Coffey's POV<br >Cabin near Winnipeg, Manitoba, Canada\n\nI grabbed my coffee and went to sit on the deck, watching the shadows move through the thick trees around my cabin. I'd been preparing my new identity for years; this was one of four properties under the new name. The others were near Calgary and Vancouver in Canada and Spokane, Washington, in the United States. Much of my private wealth had been transferred to my new identity or was in numbered offshore accounts. I was a rich man; I needed nothing from anyone.\n\nI could not STAND that I had my reputation and power taken from me by those upstart bitches and their brothers. The Nygaards had gone from one Pack to control of North America in less than two years, mostly because of Rori King.\n\nI needed to put that bitch in her place. Then I'd do the same for Colletta and her boy toy.\n\nI sipped from the mug as I worked through the possibilities. After the attack, I'd lost any chance of turning the majority of North American Packs in my favor. With my allies dead and their Packs run by Nygaard appointees, my side would never win a vote and never have power on the Council.\n\nI'd called a friend who had filled me in on what was going on. I had a Council arrest warrant out on me, and I couldn't risk going near any established Packs. I had to sit and watch my life's work destroyed, with the Nygaard's picks for Chair and Council were sure to get through.\n\nI thought about starting over with a Pack of my own, calling those still alive who were like-minded to me, but dismissed it. I'd never get recognition, and it would attract too much attention. What I needed was an ARMY that answered to me. Given enough warriors, I could take over Packs, defy the Council, and restore our kind to their destiny.\n\nIt would take decades to do build up enough warriors, but Frank Grimes and Heather Rhodes had shown me another way. Why depend on low birthrates and weak wolves to build your Pack when you can MAKE one? I could search the humans and find hard men, strong and skilled, who would make good warriors. Change them into wolves, bind them to me as their Alpha, and I could have an army in a month.\n\nAll I needed was the knowledge of how to do it.\n\nI didn't need Rori, Chase, or Carson for that. They weren't the experts. The DOCTORS were.\n\nThe Cascade Pack would be a difficult target; they were still on edge, and the Clinic was well inside their territory. Oxbow Lake was a different matter. Doctor Olson often traveled between Oxbow and Arrowhead, and that was a vulnerability I could exploit. Oxbow sent some of their people to help defend Arrowhead, and their borders were safe.\n\nIt would be relatively simple to kidnap the Doctor and force him to make my army for me.\n\nI tossed the remains of the coffee over the rail as I got up to go inside. It was time to pack for a trip to Minnesota.\n\nChase Nygaard's POV<br >Arrowhead Pack Clinic\n\nI tossed my bloody surgical gown in the hamper with my gloves, leaving me in my scrubs. Doctor Olson was already in the showers, while I had stayed behind to clean up. It had been touch and go for a while; our mystery girl had nearly died from internal bleeding and a collapsed lung. She was out of immediate danger now but needed close monitoring. She was young, perhaps newly shifted. I knew from watching Rori that a juvenile wolf didn't heal as quickly.\n\n\"We're done. The mystery girl is in recovery,\" I sent to Rori. \"Doc and Possum are heading home, so I'll stay here with her.\"\n\n\"I'll have some food sent to you. How long until she wakes?\"\n\n\"At least two hours, probably a lot longer.\"\n\nI could feel her nervousness through the link. \"Let us know when she's able to answer questions. I don't like this, Chase. A new wolf shouldn't be running around with no family and no help.\"\n\nOf course, it reminded her of her own time on the run. How much different would her life have been if her grandfather Charles had been able to bring her into his Pack? If she hadn't ended up in the mental hospital I was working at, Rori might still be out there, thinking she was crazy and hiding from her kind. \"We'll take care of her, love. I'm going to take a shower, and then I'll be in my office here at the Clinic.\"\n\n\"Sounds good. I have a Council videoconference soon. Carl and Ron will be recognized by the other Alphas over the Banff and Monongahela Packs. The other two will have to wait until next week since we are stepping aside in favor of hereditary claims.\"\n\n\"What about the Council vote?\"\n\n\"We have submitted our nominations, but there is a one week period for the candidates to talk to or meet with individual Alphas before a final vote. Two other names are in play, but we have the votes to get our slate through.\" The European Alphas were going to shit themselves when they find a female as Council Chair. Colletta was going to have a lot of fun with that old boy's club. I'd have worried, except I knew how strong Frank's wolf was. The first in-person meeting would have those Alphas rolling over and baring their necks.\n\nI called an Omega to finish the cleanup as I walked to the shower. Feeling better afterward, I dressed in scrubs again and went to see my patient. \"Who are you,\" I said to myself as I gave her a quick examination. Her vital signs were improving, and her breathing was much better now. She was off oxygen, and her gums were still pink, so her blood was well oxygenated.\n\n\"How is she doing, Alpha,\" Tonya said from the doorway.\n\n\"Better,\" I said. \"Thanks for coming over.\"\n\n\"It's not a problem at all. I left lunch in your office. If you need anything, I'll be in the surgical ward.\" She moved down the hall while I finished updating the chart, then I headed back to the office to eat and catch up on paperwork. I set my phone with alarms every thirty minutes to check on her, plus I had a monitor showing live video and audio in case there was a problem.\n\nThree hours later, I was through my medical license renewal paperwork, I had ordered replacement supplies, and set up my required continuing training courses for the next year. I heard a growl and looked up. My patient was starting to twitch her legs as her wolf woke up.\n\n\"She's waking,\" I sent to Rori. I got up and moved to her room. She was a striking wolf, with silver fur broken by white patches on the chest and legs. She was a foot taller than most females, which Doc agreed meant she was likely Beta rank or higher. Once she gained her weight back, she'd be even more impressive. I removed the IV drip, not wanting it to be attached if she panicked or shifted. I couldn't imagine what it would be like waking up injured in a strange place with strange people. She could do almost anything.\n\nI was sitting on the bed, petting her neck when Rori came in with another person I'd never seen. She stopped when she felt my wolf, her neck showing as she lowered her eyes. \"Alpha,\" she said.\n\n\"Welcome to the Arrowhead Pack, Mabel,\" I said without getting up. \"You found this girl?\"\n\n\"Yes, by the side of the road while I was out hunting,\" she said. \"I had to run home and get my car and pick her up, then drive here.\"\n\n\"That took two hours or so?\"\n\n\"Yes, sir,\" she answered. \"I don't know how long she was there before I caught her scent.\"\n\n\"It's a good thing you found her.\" Her back leg had started kicking, and she whined when she felt the pain of the break. We didn't cast the break, just set it in place and used a light wrap, since a shift would move everything again. \"Are there any other packless wolves near you?\"\n\n\"No, Alpha. An old Omega like me would move on if I sensed another wolf around.\" She was moving nervously from foot to foot. \"Relax. My mate is the dominant Alpha, and she already accepted you into the Pack if you want it. Your friends speak highly of you, as did your actions today.\"\n\nIt was like a balloon let out, as her posture changed. \"I would like that, Alpha. This Pack is so much different than the last one.\"\n\n\"Even Bitterroot is nothing like the Pack you left. We have a moment, why don't we bring you into the Pack while she wakes.\"\n\nShe swore an oath to us, and we accepted her, bringing her into the Pack link. The sudden presence of all those wolves in her head after so long alone brought her to her knees; Rori helped her sit in a chair while she got used to it.\n\nThe mystery girl started to whine, and I kept petting her neck. I was whispering encouragement to her when her eyes opened up, and she jerked away. She growled as she tried to stand up, but couldn't get there with her broken leg. She fell back with a whine as she bared her teeth at me. \"You're all right. You are in the clinic at the Arrowhead Pack, north of Duluth.\"\n\nShe was looking around as her eyes desperately looked around for a way out. She tried to stand again, but this time I kept my hand on her neck. Her wolf was strong, her dominance pushing back on mine. She had strong blood, Beta for sure, maybe even Alpha. \"You have a broken leg and broken ribs. Moving around is going to be painful, and you're safe here.\"\n\nShe tried to bite my hand, and I was having a tough time holding her down. Instead of calming, she was becoming more panicked. Rori took over holding her as I pulled off my scrubs and shifted into my wolf, jumping up onto the bed and taking her by the neck. My dominance rolled over the young wolf, who stilled in her grip and exposed her neck.\n\n\"I want to bring her into the Pack,\" Rori said.\n\n\"We don't know anything about her,\" I said.\n\n\"She's young and alone, that's enough.\"\n\nMy wolf forged the bond, and I felt her in my head. \"SHIFT,\" I Alpha-commanded her.\n\nHer eyes changed as her human came forward to replace the panicked wolf that had taken over. \"What? Who are you?\"\n\n\"I'm Alpha Rori King, and the wolf here is my mate, Alpha Chase,\" she sent us.\n\n\"What's an Alpha?\" She looked up as I let her go, my wolf sitting on the bed. \"You're like me?\"\n\n\"Yes, we are werewolves like you,\" I told her. \"We need you to shift to your human form so we can keep treating your injuries.\"\n\n\"Shift?\"\n\nRori figured it out. \"How long have you been stuck as a wolf?\"\n\n\"Thanksgiving weekend. Winter sucks, I almost froze to death a few times,\" she answered. Damn. She'd been stuck for MONTHS as a wolf, unable to change, and not knowing what she was.\n\nRori talked her through how to shift, and an emaciated young girl replaced the silver wolf on the bed. \"OW! FUCK THAT HURTS,\" she said.\n\nI shifted and dressed. \"I can help with that. I need to tape up your ribs and cast your leg while we talk.\" I turned and drew up a sedative, enough to take the edge off but not put her out again. \"What is your name?\"\n\n\"Shelly Lorilla,\" she said as she laid back. Rori had shifted and covered her with a sheet, leaving her leg uncovered for me. \"I never thought I'd have fingers and toes again.\"\n\n\"Is there someone we can call? Someone who might be looking for you?\"\n\n\"No one I'd want to find me,\" she said. \"It's a long story.\"\n\n\"We've got time,\" I said. \"Tell us how you ended up by the side of the road near Ely.\"\n\n\"Ely?\" I nodded. \"Damn. I'm a long way from home.\" I adjusted the bed until she was sitting up, and Mabel got her some water. \"You smell familiar,\" she said to the grey-haired woman.\n\n\"I'm Mabel, I found you by the road and brought you here,\" she said. \"How old are you, child?\"\n\n\"Fifteen, I'll be sixteen in May.\"\n\nThat was an early shift, which meant something forced her wolf to take over. \"Something happened to make her shift,\" I sent to the other two. \"This might hurt as I set it properly.\" I moved her lower leg until the bones aligned.\n\n\"My Mom is a drunk,\" she said. \"Dad was a one-night stand; they met at a bar in Denver. He said his name was Dan Forest.\" By Luna! Daniel Forrest was the Alpha of the Donner Pack in 2005; his mate had died without leaving him an heir, and he was the one who wanted Rori after the Arrowhead attack. I just shook my head as I realized he had an heir, but with a human female. \"All she told me about him was that Dan was a big, handsome man, but a dud fuck with a 'thumb-sized dick.' The phone number he left was fake, and he never called her. She never saw him again. By the time she figured out she was pregnant, it was too late to get an abortion, so here I am.\"\n\n\"She wasn't a good Mom for you, was she.\"\n\nShelley laughed. \"She wasn't a Mom at all. She bounced around from one boyfriend to another, shacking up with anyone she could trap between her legs. We'd stay until they got tired of her drinking and attitude, and she'd find another. We moved to Minnesota for the benefits. If I wasn't good for anything else, I could get her housing and welfare payments. I pretty much raised myself.\"\n\nI was making good progress on the cast as she talked. \"Where did you live last?\"\n\n\"Saint Cloud. I was a freshman in high school there.\" She'd moved almost two hundred and fifty miles north in five months, and I don't even know if she understood why.\n\n\"Did you like school,\" Rori asked. She didn't have much in the way of high school experience, having done most of it online.\n\n\"I did, and I was in all the activities. I played soccer, was in church youth groups, drama club, anything I could find to stay there. The longer I spent away from home, the better.\" Her stomach growled.\n\n\"I'll get some food brought over. How long since you've eaten,\" I asked.\n\n\"I caught a rabbit last week,\" she said.\n\nNo wonder she was so thin. Rabbits didn't have enough fat to keep the weight on a wolf, and she probably couldn't take down a deer on her own. \"We've already sent food over,\" the kitchen said after I asked. We talked more as she ate, and my heart broke for all the little wolf had gone through.\n\n\"What happened that made your wolf take over,\" I finally asked.\n\n\"Mom passed out during the poker party downstairs, and her boyfriend and his buddies were getting loud. I was trying to sleep, but it's hard when you can hear everything they say.\"\n\n\"I know exactly how she felt from when my wolf started coming forward,\" Rori said.\n\n\"They were drunk and horny, and I had developed early,\" she said as she gestured at her tits. They would have been much bigger before she lost all the weight over the winter. \"Todd had moved from leering at my body to touching me through my clothes to groping me when Mom wasn't around. It was only a matter of time, I guess. He was bragging to his buddies about how firm my boobs were, and that he was going to be 'tapping that every night.' His buddies decided they would 'break me in and make a woman out of me,' and started arguing about who got to fuck me where and in what order. I got up and locked the door to my bedroom, bracing it with a chair. Todd got pissed when I didn't let him in, and I heard him take off his belt. He would beat the crap out of me when I disobeyed him, and it was even worse when he'd been drinking.\"\n\n\"Someone needs his ass whooped,\" I said to Rori.\n\nRori held her hand as she gathered herself. \"The men started to break down the door, and that's when the pain hit. I screamed, it hurt so bad, and then I looked down. I had paws and fur, I was freaking out, but the voice said to trust her. I jumped out the window and ran off, never looking back.\"\n\nI'd sent her name to Beta Vic, and he broke into our conversation. \"Alphas, I've run her name through the system. There isn't a missing person report out for her.\"\n\nIt just got worse and worse. Mom didn't care about Shelly enough to know if she was alive. \"Thanks, Vic. It makes it easier if the humans aren't looking for her. Track down the Mom and figure out who this boyfriend was.\" My wolf already considered her family, and I didn't like people hurting my family.\n\n\"We've done some checking, and no one is looking for you.\" Her face fell, and I knew why. At some level, she still hoped her Mom would want her, and she didn't. \"You have a new home with us, among people that are just like you.\"\n\n\"Eat and rest,\" Rori said. \"Tomorrow will be a better day. I'm so glad we found each other, Shelly.\"",
        "She started crying, and Rori leaned down to hug her as she let it out. \"Careful of the ribs,\" I said. I finished her cast, then got the things I needed to support her ribs while she healed. Shelly was doing better, and Rori helped her sit up so I could tape them up. \"I need to keep you here in the Clinic for a day or two; we had to remove one of your kidneys, and your wounds need to heal.\n\n\"I can stay?\"\n\nHer wide eyes, hollow cheeks, and half-starved body were driving my protective instincts high. \"You're home now, Shelly. Get some rest.\" Marge picked up the dishes, and I gave her a stronger sedative so she would rest.\n\nRori stayed with her until she was in a deep sleep. \"She's the daughter of an Alpha,\" she said.\n\n\"Yes, and her wolf shows that. It's weird,\" I said. \"Alphas and Betas have impregnated humans many times before, but the resulting pups were always weak Omegas. Why is she the size and power of an Alpha?\"\n\nRori took my hand and led me out of the room, turning the light off and closing the door. \"Luna gives us our wolves. She must have a reason.\"\n\nI just shook my head. \"Daniel Forrest is an idiot. He was part of a group that almost wiped out Arrowhead, and a few years later, his heir to the Alpha position is born.\"\n\nRori shook her head as she leaned into me. \"It wouldn't have mattered. There is no way Daniel or his father would EVER accept a female as Alpha of their Pack.\" I pulled her into my office and sat her on my lap at my desk. \"She does have a blood claim to Donner Pack. Will that matter?\"\n\nI thought about it for a moment. \"The Alpha position went to Sawyer, who won it in a challenge. I suppose she could challenge him if she could get enough support from the Pack. They seem to love Sawyer and Ashley, so I doubt the Pack would back a challenge from an Alpha's daughter.\"\n\n\"She's better off here, and it will be years before she is old enough. By Luna, she's barely started high school, and she's missed most of her freshman year!\"\n\n\"Using her real name may raise flags.\"\n\n\"Her disappearing should have raised flags. I want Vic to figure out what's going on, and I want the people responsible for this clusterfuck to pay.\" She shook her head as she looked out the window. \"She's broken like I was.\"\n\n\"Not the same, but we're going to help her, baby. We'll be the family she needs.\"\n\nShe leaned into my chest. \"Yes, we will.\"\n\nCh. 44\n\nJack Coffey's POV<br >International Border\n\nThe direct route between Winnepeg and Two Harbors would cross into Warroad to the southeast, but this route crossed back and forth into Canada several times before it stayed in Minnesota. I was only going to do this once, so I kept going east until I got to Highway 53. My new American passport and driver's license didn't raise suspicions at the Fort Frances border crossing. From there, it was mostly south to Duluth, then back up to Two Harbors. With Superior National Forest and the Boundary Waters Canoe Area, there wasn't a fast route east-west in the Arrowhead region of Minnesota.\n\nI needed to go to Duluth anyway. I needed guns.\n\nMabel Johnson's POV<br >Arrowhead Pack House\n\nThe girls had brought me to the pool after dinner, telling me that was the social center of the Pack during the winter and the best place to meet everyone. I was in awe of their Pack House; Bitterroot had barracks by comparison when I was there, except for the quarters of the senior leadership. I was sitting in the hot tub and learning about the leadership here when Alpha Rori walked in with her nannies and toddlers. She waved as she sat in the kiddie area with another woman. \"That's Brenda, one of her nannies. Zoe is the other. The babies are Cheryl and Mark.\"\n\n\"The Alphas have twins? They are so YOUNG!\"\n\n\"She's twenty and is pregnant again. She's the Blessed One.\" No one had ever mentioned that story, so I got a quick history lesson. I didn't even know Arrowhead had disappeared for almost two decades before coming back. \"Wow.\"\n\n\"Our Alphas are the best,\" Tonya said.\n\n\"I have to ask her something, and I need to cool off,\" I told them. I was still a little nervous being naked in public after all my decades living among humans, but it was getting better. I walked over to the kiddie area and quietly asked Rori if I could talk to her.\n\n\"Of course, sit down,\" she said. I sat next to her in the shallow water.\n\nCheryl grabbed her toy boat and splashed her way over, plopping down on my leg with a squeal. \"Who are you,\" I said as she started moving the boat across the water.\n\n\"Share-el,\" she said. \"You play?\"\n\n\"I'll play,\" I said with a smile. I knew how valuable babies were in Werewolf society, and the children of an Alpha were the future of the Pack. It was a big thing seeing that Alpha Rori trusted me enough after only a few hours to hold her baby. \"I'm Mabel.\"\n\n\"May-Bell,\" she said. \"Boat.\"\n\n\"Go ahead and ask what you want,\" Rori sent me as Mark sat in her lap.\n\n\"I have my apartment back in Ely, and all my stuff,\" she said. \"It's not much, but I need it.\"\n\nShe nodded. \"Things are a little testy right now, with everything going on with the other Packs and the FBI. I'm fine with you going to get your things, but I want to send a few people with you. It's not about you; it's a Pack rule right now. No one leaves in a group of less than three, and a Warrior or higher has to go along.\"\n\n\"I don't want to bother anyone,\" I said.\n\n\"It's not a bother at all,\" she replied. \"We have a dozen people who joined in the past week, and some of them arrived with just their shirts on their backs. We're sending a few cars down to Duluth in the morning to get them clothes and gear. You could join them and get things for you and Shelly. Hell, she didn't even have a shirt on her back, and none of the other girls are close to her size.\" I could see why; Shelly was nearly six feet tall but skinny as a rail. Even after she gained some weight back, she would need to shop around for stuff that would fit well and look good.\n\n\"I don't know, Alpha. I don't have money for clothes, and I'm fine using whatever is extra around here.\"\n\nRori just laughed. \"Oh, Mabel, you're a breath of fresh air. Most of these people have lived their whole lives having everything provided for them, while you had to scrimp and save for what you needed.\" She handed off Mark and Cheryl to the nanny. \"Come on; we need to talk in my office.\"\n\n\"Yes, Alpha,\" I said. I quickly showered and pulled on some clean clothes out of the bins of Pack spares, then put on my walking shoes and sweater. I walked to the office, where I knocked on the door.\n\n\"Mabel, come in,\" she said. \"This is Beta Rick and Beta Teri, they came over from Banff earlier this week. They volunteered to assist you with your shopping, and with picking up your things.\"\n\n\"Oh,\" I said.\n\nRick and Teri smiled as they shook my hand and took in my scent. \"It's no trouble, we need to learn the area, and we both need to get new vehicles. We're picking ours up from a dealer in Duluth, but it would be better if you got one from Ely.\"\n\n\"New vehicle? I can't afford a car!\"\n\n\"We make a lot of purchases in cash, and it's best if that isn't all done in our back yard,\" Rori said. She reached into a drawer and pulled out a bundle of hundreds. \"There's ten thousand here, plus whatever you can get for your car. I had Roadkill take a look at your Honda when he parked it; he said you're lucky it got you here.\"\n\nThat was true. If the floor rusted any more, I'd be able to stop my car like Fred Flintstone. \"I'll pay you back.\"\n\n\"It's not like that. You haven't been here the whole time, but our Pack isn't broke, and we want our people to own stuff. The money is a gift, tax-free, and above board.\" She handed me a Visa card. \"Every new member gets this too; it's five thousand to get them started with clothing and stuff for their room. Here's another card for Shelly; get her enough clothing to tide her over until she can shop for herself.\" I had a stack of hundreds in one hand and two credit cards in the other. I couldn't remember the last time I had more than a hundred dollars after bills got paid. \"When we finish here, Teri will take you to the computer room to get your phone and laptop. They're pre-loaded with everything you need.\"\n\n\"It's too much, Alpha.\"\n\n\"It's nothing special; everyone gets this. Once you get settled in and get your Pack work assignment, you'll get paid for that. If you want to work out in the human world, you can do that too.\"\n\nBy the time I got back to my room, my head was spinning. At my last Pack, I shared a tiny basement room with three other Omegas. I worked for room and board alone. I stood at the window, looking out at the forest behind the Pack House, and wondering how I got so lucky.\n\nThe next morning, I stopped in to talk to Shelley about her tastes in clothes and got her sizes. Rick and Teri got in my beater, and we headed south with five other cars to Duluth. I went with the others to the mall while the couple went to pick up his car. Four hours later, their new Ford Escape was full of shopping bags.\n\nThe shopping didn't end there. Teri insisted we take advantage of the late-season sales and get some good winter coats and boots. The sporting goods stores had what she wanted, so we headed to Gander Outdoors in Hermantown.\n\nI ended up getting two for myself, a lighter one, and a heavy-duty parka. I found a cute spring jacket for Shelly and put that in the cart too. I was looking at boots when I recognized a smell as he walked by. Peering through the aisles, I saw a man walking towards the gun counter I wanted no part of. \"Rick, what is Jack Coffey doing here,\" I sent.\n\n\"WHAT?\"\n\n\"Heading back to the firearms area. I'd recognize that fucker's scent anywhere.\" He'd been to my old Pack a few times, and the memories weren't pleasant for me.\n\n\"Leave your cart and head to the front entrance NOW,\" my new Beta ordered. \"We're dialing 911.\"\n\n\"You're going to involve humans?\" Even as a rogue, I'd never have thought of bringing humans into werewolf affairs.\n\n\"That's what Alpha wants.\"\n\nI left the cart at the end of the aisle and walked quickly to get away from that vile man.\n\nSt. Louis County Sheriff Deputy Mark Brighton's POV<br >Duluth International Airport\n\n\"All units, requesting assistance. Federal fugitive Jack Coffey sighted at Gander Outdoors in Hermantown.\"\n\nHoly shit. We'd gotten a briefing on this asshole. The Feds in the US and Canada had a warrant out Coffey on suspicion of soliciting multiple counts of murder. I told Max to heel as I hurried out the door with him on his short leash. I hit the remote for the rear door, which opened as we approached, and let Max jump in. I pushed it shut then went around to the driver's side. I jumped back in my cruiser and pulled away from the curb at the airport. \"County 314 Kay-Nine, responding.\" I flipped on the lights and sirens as I pulled out of the baggage claim area and onto the road.\n\nMax was excited as always; he and I had been partners for three years now, and he was a great police dog. After his police dog training in Saint Paul, he got additional training in explosive detection. He and I spent a few hours a week at the airport doing random checks. He barked as I accelerate out the exit of the airport. \"Let's get some, Max,\" I said as we raced southeast on Highway 53.\n\nIt was less than five minutes until we arrived in the parking lot. Three cars from the Hermantown police were surrounding the exit, and I was the first Sheriff. This call would attract more cops than a new donut shop; I could hear the sirens coming from the direction of Duluth as I got out. \"Who's in charge,\" I asked as I moved towards the Hermantown cops.\n\n\"I am,\" Sargent Larry Andersen said. \"Suspect is inside at the gun counter. I sent an officer into their store security office, and they have him on camera.\"\n\nI looked around as more units rolled up, and men took cover behind their patrol cars with their rifles. \"What's the plan?\"\n\n\"Get a lot more people here. The FBI is on the way, twenty minutes out. We're supposed to clear people out and keep him here.\"\n\nIt made sense. \"All units, FBI has confirmed a facial recognition match on the surveillance photo to fugitive Jack Coffey. The suspect is wearing dark blue jeans, black boots, a red plaid shirt, and a Green Bay Packers leather jacket.\"\n\n\"Are you clearing the store?\"\n\n\"Quietly. I've asked store security and staff to start moving people towards the exits, starting in the firearms area.\"\n\n\"Anyone watching the back? My dog and I can cover it.\" If he spotted the cops, he'd head that way. The loading dock and emergency exits were a lot to keep an eye on.\n\n\"It's all yours, Deputy. I'll send help when I can spare it.\"\n\nI walked back to my cruiser and pulled out, driving around the RV's and boats on the side to the back of the store. I counted five doors and three loading docks, so I backed up my Explorer near the back fence and parked. I opened the tailgate and donned my tactical gear; knee and elbow pads, gloves, helmet, and a portable ballistic shield. I checked my M-16 rifle to make sure it was ready, then walked up and rested it on the driver's seat. I opened the back door and brought Max out on his leash and collar. He'd be on standby, as the back of the store was a lot of ground to cover.\n\n\"Suspect is moving towards the back of the building on the east side,\" the voice said.\n\n\"10-4, units responding to rear and side exits,\" another said.\n\nI released the flap on my pistol, held the leash tight, and waited.\n\nJack Coffey's POV<br >Gander Outdoors Store\n\nIt had only taken a few minutes to find what I wanted. A Remington 870 shotgun with a pistol grip, extended tubular magazine, and short barrel. \"That's great for home defense,\" the salesman said as he got the paperwork. \"I'll need your driver's license.\"\n\nI wasn't worried about the quality of my identification, the license was state issue, although my name was false. I was a reasonable match for the license photo since I'd dyed my hair to match. I'd carefully crafted it over the past twenty years, and this one had a Minnesota address. The background check would come back clean, and I'd walk out with the shotgun.\n\nIt was better for my purposes than a rifle or pistol. Buckshot couldn't be traced, as long as you didn't leave fingerprints on the ejected shells. At close range, it caused more damage than a wolf could heal. A shotgun had a big psychological impact I was counting on to persuade the Doc to cooperate. As I once saw in an interview with a dealer in South Africa as he explained it: \"Around here, some speak English, some speak Afrikaans, others Dutch, but EVERYONE,\" he racked the slide back and forward, \"EVERYONE speaks shotgun.\"\n\nNo one could mistake the threat behind that sound.\n\nI listened as he answered a page on the PA system on the phone behind the counter. \"Curt, that man is Jack Coffey, a dangerous fugitive. FBI is on the way, keep him calm and occupied until they are ready to take him down.\"\n\n\"I understand, I'll get to it after I help this gentleman,\" he said back. I looked around as I realized I was in trouble. A man in a store uniform was trying to move people towards the side of the store. I glanced towards the registers, and I could see uniformed officers near the entrance. I had to act quickly before more arrived.\n\nI got the sales clerk's attention. \"I'll be back in a few minutes, I need to use the bathroom,\" I said. Moving towards the boating area, I kept my senses sharp as I looked around the store.\n\nThe uniforms and the employees were all tracking me, the police reaching for pistols.\n\nThat BITCH! I'd picked up the stench of a Pack Omega on the way in, but I had dismissed the old she-wolf as a threat. I couldn't believe any werewolf would call the humans on me, but they must have. They probably figured the closest Pack could take care of me later.\n\nWell, this old wolf wasn't going to down easy. I looked out to the right, through the glass doors at the outdoor boat and RV section, and I could see two police cars blocking the main entrance road. Turning left, I barged through a door marked EMPLOYEE ONLY and started to run for the back doors.\n\n\"HALT! POLICE!\" I ignored the shouts from behind me as I ran through the hallway towards the emergency exit. Hitting the crash bar, I pushed through the door as the alarm sounded.\n\n\"FREEZE!\" The command came from the ten o'clock position, from a sheriff's car by the fence. I dove behind a dumpster, ignoring the man. \"COME OUT OR I'LL SEND IN THE DOG.\" I could hear more cars coming from each side, and I had seconds to make my decision. Pulling off my clothes, I shifted into my wolf and sprinted for the fence.\n\nThe dog was freaking out, but the cop had no idea what I was. The deputy had his pistol out as he hid behind his car door, waiting for the backup that was coming around the corner. I ran for the fence, skidding to a stop as I saw the problem. It was ten feet high and topped with barbed wire, too much for me to jump.\n\nEscape would mean going through the Sheriff's car.\n\nI turned and sprinted towards his car. His eyes got wide as he let the dog go; it took two steps before I crashed into it. My teeth tore into the dog's shoulder while his teeth caught my left ear. He whined as he went flying before landing heavily on his back; I was double his weight. The Deputy turned his pistol towards me as I rolled to my feet. I was on him before he could aim, my teeth ripping into his forearm and crunching bones. He screamed and dropped his gun, and I released him and ran to the front of the car.\n\nSix police cars skidded to a halt at the corners of the rear lot as I jumped on the hood, then to the roof. One leap had me clearing the fence, and I landed and rolled in the grass on the other side. I raced for the trees, hearing the shouts and gunshots behind me fading. \"WHERE THE FUCK DID HE GO,\" I heard someone yell.\n\n\"ALL I SAW WAS THE DOG,\" another said.\n\n\"SPREAD OUT AND FIND HIM,\" the first voice said.\n\nI crossed a road as the sirens continued, before finally stopping to gather myself a half-mile away. The good news? They didn't get me.\n\nBad news? I'd shifted around humans, leaving behind my wallet, keys, money, and car. I briefly considered looping around to get back to my car, but my keys were in my jeans, and there were cops everywhere. I'd have to do without.\n\nI kept moving, making my way out of town, using the creek bed to hide my scent. That Colletta bitch thought it would be a good idea to expose our true nature to humans? Well, she was getting her wish, and sooner than she thought. If I couldn't destroy their Packs, the humans would.\n\nCh. 45\n\nColletta Nygaard's POV<br >Detroit, Michigan FBI Office\n\nFrank was upstairs, dealing with the local Senior Agent and the Task Force staff, while I sat and read a book in the building cafeteria. He was an observer whose paperwork was signed by the FBI Director himself. His outsider status meant that no one trusted him, but no one wanted to get in his way either. He had been given access to the entire investigation but had no authority to direct the team. It was a frustrating dynamic for a man who used to run one of the busiest Drug Enforcement Agency offices in the country.\n\nThe information we had provided on Jack Coffey wasn't actionable for United States law enforcement; Jack was a Canadian citizen, and his last known location was in western Canada. The FBI was more interested in the man Jack had paid to set the bombs.\n\nA ghost nicknamed \"The Switch.\" Pay the man, and out go the lights. No one knew what he looked like or what his real name was, so the account information and phone number had given them new leads. The cell phone was a Detroit number, and it was not currently active.",
        "Still, they were working with the cellular carriers and now had data on when the phone was active and the towers the phone was pinging. Triggers were in place in case the phone popped up again, giving the FBI an immediate notification.\n\nFrank's frantic send brought me out of the trance that reading PenumbraMine's Tarnished Stars had placed me in. \"Get the car and meet me out front, we need to get back to Two Harbors immediately,\" he said. \"Jack Coffey has been spotted just outside Duluth by one of the new Arrowhead Pack members.\"\n\nI gathered my stuff and shoved my phone back in my purse. \"What the fuck is Coffey doing there,\" I asked. \"And how did he get across the border?\"\n\n\"It can't be good. I'm assuming he's there to go after Rori.\"\n\nI dumped my trash before refilling my Coke and heading out to the elevators. \"Have you called for our plane?\"\n\n\"Just got off the phone, they'll be ready when we get there. The Task Force has to go through channels, we'll be there an hour or two before they arrive.\"\n\nI reached the parking level and hurried to our rental. \"Have you talked to Rori or Chase?\"\n\n\"I can't do that around humans. Give them a call when you're in the car, then pick me up by the planters at the front entrance.\"\n\nI got in, started the car, and put the phone on speaker as I called Chase. I kept the mind-link open with Frank so he could listen in. \"Son? What's going on?\"\n\n\"It's a mess, Mom. Local police moved in on Coffey at a sporting goods store, but he got spooked and ran.\" He paused, and I heard some talking in the background. \"Mom, one of the St. Louis County Deputies got hurt behind the building. A big dog attacked his K-9 partner, then bit his arm before escaping over the fence. They can't find him, and they can't find Coffey either.\"\n\n\"Did anyone see him?\" I was pulling up on the exit from parking; I handed the attendant the ticket and twenty dollars.\n\n\"Coffey just disappeared into thin air.\"\n\n\"Those stores will have cameras everywhere. He shifted among humans?\"\n\nI couldn't believe THAT man was THAT stupid. Actually, I could. \"The Deputy, was he hurt bad?\"\n\n\"His right forearm must have been torn up pretty bad, and they had it immobilized and bandaged. The Sheriff hasn't released more details yet.\" He said this in a way that ensured we knew what it meant, while not saying anything over a phone that would incriminate our kind.\n\n\"We're heading to the airport now; the Task Force is heading for Duluth to follow up on his sighting in person. We should land in Two Harbors in three hours or so,\" I told him.\n\n\"That's fine, I can have a driver meet you there.\"\n\n\"Chase, are they going to catch this guy?\"\n\nHe let out a breath. \"He left his wallet and car behind, and no one knows if someone is helping him. He already broke through the initial police lines, and it's too late for roadblocks now. I think he's gone.\"\n\nFrank spoke up in my head. \"Tell Chase we have to save this cop or it's going to go bad for us.\"\n\n\"Chase, our community stands behind law enforcement and the Deputy who got hurt. We need to do everything we can to help him recover.\"\n\n\"Everything?\"\n\n\"Yes, whatever it takes.\" I saw Frank coming down the steps. \"Let me call you back in a bit,\" I said as I pulled up in front of the Government Building.\n\n\"I'll see what else I can learn. Bye, Mom.\" I hung up just as Frank got to the door and was pulling away as soon as he got in. \"What a shitstorm,\" I said. \"Shifting in a store? With all those cameras recording EVERYTHING? Is he trying to expose us?\"\n\n\"Colletta, the line between vindictive and stupid isn't all that wide. It doesn't matter why he did it. What matters is that we could have a dead cop, and a shifter caught in the act. It's hard to come up with a worse way for him to blow our cover.\"\n\nI made a turn and checked my phone; it showed thirty-two minutes to the airport. \"We need to clamp down on this, and HARD, before the video ends up on the five-o-clock news. We could have a full-scale panic on our hands.\"\n\n\"Call the Director now,\" Frank said.\n\nI looked at him, then nodded. A few seconds later, Hugh Patterson answered his private cellphone. \"I'm busy, Colletta,\" he said.\n\n\"This is an emergency, and I need you to be alone to talk,\" I said. \"It's about Duluth.\"\n\nI heard him order some people to leave before he picked the phone back up. \"I'm listening.\"\n\n\"Jack Coffey is like me,\" I said. \"When he escaped the local police, he left behind evidence of more than just his attack on the officer and his dog. The surveillance video and the things in his car are explosive.\"\n\nFrank joined in. \"Sir, we need you to push the FBI in as lead agency and keep the locals from learning too much. Tell them there might be bomb parts in the car, impound it and haul it off. Get the surveillance tapes and make sure there aren't any other copies, and push on the locals to keep things quiet.\"\n\n\"If I don't?\"\n\n\"Full-scale panic,\" I said. \"Something like this that catches everyone by surprise, where the highest levels of Government aren't ready, it could get ugly and quick.\"\n\n\"Mr. Director, seconds count here. I'm begging you, issue the orders, and we'll talk more soon.\"\n\nI could hear him tapping his fingers on his desk. \"Fine. I'll squash what I can, but it's going to get out. Too many people know, and they don't work for me.\"\n\n\"You're right, sir,\" I said. \"Frank is heading to Duluth, and I'll catch a flight to Washington. I think it's time we laid all our cards on the table. I need to meet with the President.\"\n\n\"Call me back,\" he said before he hung up.\n\n\"FUCK!\" I banged my hand on the steering wheel, hating that we didn't have a choice. \"I guess you are heading back alone,\" I said.\n\n\"It sucks, but I think you're doing the right thing,\" Frank said as he held my hand. \"Time for you to show everyone why you should be the next Council Chairman.\"\n\n\"I never asked for the job, Frank.\"\n\n\"Luna has a way of putting the right person in the right place at the right time. You're that person, Colletta. I'm convinced of it.\"\n\n\"I still feel like I showed up late to the meeting, and the others all assigned me the shit job.\" I thought of something. \"SHIT! Patterson will want me to shift to prove what I am, and I can't shift when I'm pregnant!\"\n\n\"You're not in this alone, love. Call Martin at the Adirondack Pack, have him meet you in Washington with Nehemiah Pensky. If the Doctor is going to be on the Council with you, he might as well go with you. Those two can shift while you explain things.\"\n\nHe was right; one of the things I loved about him was how calm he stayed in a crisis. \"You're right.\"\n\n\"I'll just sit back and enjoy that feeling, my love,\" he teased. I made the call.\n\nAlpha Alan Robertson's POV<br >Denali Pack House, Alaska\n\n\"Alpha, we just received a notification of an emergency Alpha videoconference. It's starting as soon as everyone is present,\" my secretary said.\n\nI looked up from the ledgers I'd been working with our Pack Accountant to understand. My father had kept a lot of things hidden, including money, and it was going to take months to uncover it all. \"Thank you.\"\n\nI called for my mother and my Beta to join me in the office as I logged on to the system. The laptop camera would only show me, but the audio would show on the wall monitor so the others could follow along. Beta Scott was first to arrive; he had gone rogue and was making his way towards Arrowhead when my father died at the Cascade Pack. He agreed to return after hearing I was taking over. We had spent a lot of time together on patrols, and I trusted him with my life. \"Alpha,\" he said. \"Any idea what is going on?\"\n\n\"I guess we'll find out soon,\" I said as I entered my ID and password into the system. I kept the microphone muted, seeing there were still eight or so Alphas not connected yet.\n\nScott stood as the door opened, and my mother walked in. She was looking better now, her wolf recovering slowly from the shock of losing her mate. She was eighty-seven years old but looked like she was in her early thirties, with long black hair cascading in gentle curls below her shoulders. \"Luna Kathryn,\" he said with a nod of his head. Since I was not mated, she remained the Pack's Luna.\n\nI stood and pulled a chair over next to me. \"Hello, Mom,\" I said as I kissed her cheek. I could feel her shiver as I helped her sit, and my wolf reached out to comfort hers. She was looking around, a little nervous; she dreaded a summons to here when my father lived.\n\nI needed to remodel this room soon to take away those bad memories for her. My father only brought her here for punishment or as a figurehead in discussions with other Alphas. Either way, something she did was wrong, so he'd beat her for it. \"I need you to watch and give me any advice you have,\" I said.\n\n\"If you think I can,\" she said quietly. \"I was never allowed to speak unless asked directly about something in meetings.\"\n\n\"You didn't sit through them without learning things, and I need your experience to help me appear like a stronger Alpha than I am,\" I said. \"As the youngest and newest, other Alphas might try and put me in my place. You know them, and you can help me push back.\"\n\nI held her hand as we watched the others appear. Mom had been Luna here for almost seven decades, ever since my father saw her in Banff and brought her home. She had lost the natural dominance of her Beta blood under my father's fists, but she remained a capable administrator and beloved Luna. I needed her by my side to stabilize the Pack and help me through my growing pains as Alpha. \"Nothing you say or do will get you hurt again, Mom.\"\n\nThe final Alpha appeared, and Alpha Rori started things out. \"We have a major problem on our hands, Alphas. Jack Coffey was spotted at a store near Duluth, Minnesota earlier this morning.\" There were wide eyes at this news, as they soon figured out Rori was probably his target. \"As you know, he has international warrants out for him for his hiring of an assassin to kill my Grandfather and my mate-sister. The police failed to arrest him.\"\n\n\"We'll send extra warriors, anyone you need,\" Alpha Steven March said. \"Coffey has to be stopped. I'm assuming he's coming after you?\"\n\n\"We don't know why he's in town, but it doesn't matter now. Coffey undressed and shifted to his wolf behind the store, then he attacked and bit a cop before running away. All of this was in broad daylight. The cop might have seen him, and for sure, he's going to show up on surveillance cameras doing it. Probably more than one, and maybe a dash camera. Our secret might be out within the hour if someone releases the recordings to the media,\" she said.\n\nThat set off a bunch of talking and shouting among the Alphas, which Rori let go for a bit before she smacked her hand on her desk and growled. \"There's nothing we as Alphas can do about this. Frank Grimes and Colletta Nygaard are working to minimize the damage with the human government and law enforcement. If they request anything from you, see that they get it immediately,\" she said.\n\n\"What does this mean for us,\" Alpha Martin Nemmers asked.\n\n\"For Europe and Russia, not much right away,\" Rori said. \"Colletta is going to be talking to American officials first, and she's flying to Washington now. She'll probably have to do the same with the Canadian government, given Coffey's ties to Canadian Packs. She will be requesting assistance in keeping this under wraps, and managing the fallout if it cannot be kept quiet.\"\n\n\"Will they help us?\"\n\n\"We won't know. Colletta's going to have to see how they react to finding out there are monsters in their midst. We're hopeful they will help if only to keep a full-scale panic from occurring.\" I could see how nervous Rori was about this.\n\n\"How much time do we have,\" Sawyer asked.\n\nRori shrugged. \"Minutes, hours, probably not more than a day or two. If this video is released, it will go viral in minutes. I don't know if we'll be able to get people to discount it.\"\n\n\"People know you can fake things,\" I said. \"We could work that angle, call it a publicity stunt.\"\n\n\"With a Ten Most Wanted fugitive at the center, an injured cop and an injured police dog? If it was one low-quality camera, maybe. If multiple cameras AND people saw it? Not a chance in hell,\" Rori replied. \"I recommend every Pack prepare as if a mob of angry humans with pitchforks is going to show up on their driveway soon. Keep the vulnerable close, up patrols, close up any physical barriers,\" she said.\n\nIt was a sensible precaution. Denali was so isolated that it wouldn't change much for us.\n\n\"There's one more thing,\" Rori said. \"When Jack escaped, he bit a Deputy Sheriff on the arm. He's at the hospital now getting stitched up.\"\n\n\"Oh fuck,\" Coral said. \"You can't hide that.\"\n\n\"Yeah. The first werewolf to reveal himself to humans didn't just pay people to bomb airplanes, but he will kill a cop,\" Sawyer said.\n\n\"There's only one way to stop it, and it's a long shot,\" Rori said. \"We've been able to successfully change two humans into werewolves IF we had their mate to claim them and pull their wolf out. We need to find the man's mate, if she exists, and quickly.\"\n\n\"Werewolves don't have human mates,\" Alpha Ulf Svenson said.\n\n\"We didn't think so, but Luna disagreed twice so far, and she's the Goddess, not us,\" Rori said. \"She has not given humans to us as fated mates, at least we don't think she has. Colletta was a widow, while Alpha Carson's true mate had rejected him and later died.\" She put up a photo of a Deputy Sheriff with his police dog, taken from the Sheriff's webpage. \"This is Deputy Mark Brighton and his dog Max. According to his social media accounts, he's thirty-two years old, divorced, no kids, and likes canoeing in the Boundary Waters and fishing. He'll be dead by tomorrow night if we do nothing, and his death will fall on our kind. Our only chance to save his life is to try what we did with Frank and Heather. We have to find if Luna has assigned him a mate. If she has, they need to find each other in time for us to explain everything and get him to agree to the change before he dies.\"\n\n\"That's impossible! There are HUNDREDS of potential mates around the world! What are the chances this random human among the billions is a second chance mate for any of our females?\" Alpha Joel Sigurdsson looked around. \"It's a needle in a haystack!\"\n\n\"There's only one way to find out for sure,\" Alpha Ivan Baronsky said. \"Every Alpha needs to immediately send any wolves who have lost their fated mates to Arrowhead.\"\n\nRori nodded. \"Yes, but not just the widows and rejected. Two isn't a representative sample,\" she said. \"I want every unmated she-wolf above the age of eighteen at Arrowhead by tomorrow morning at the latest. Fly them to Minneapolis-St. Paul or Duluth, and we'll pick them up.\" She thought for a moment. \"If you wish, send unmated males with them as escorts; at worst, we get a chance for them to find their mates. We will accommodate them all with Oxbow Lake's help, and I will guarantee their safety.\"\n\nSawyer leaned forward and spoke first. \"Rori, are you sure it's wise to have everyone descending on Arrowhead when you're the likely target of Jack Coffey AND maybe humans? Has the FBI even taken away the crime scene tape?\"\n\n\"Yesterday. Oh, I have another idea to help with security,\" Rori said with a smile. \"It's going to be one hell of a party.\"\n\nThe call ended shortly after, and Beta Scott had already called for all unmated Pack members above the age of eighteen to meet in the Pack House. \"Start making reservations,\" I told him. \"Prioritize the women first. Mom, you go pack.\"\n\nShe looked at me, and her jaw dropped. \"Why? I'm still recovering from the loss of my mate!\"\n\n\"You're unmated,\" I said. \"Go. Watch over the others, and make friends.\" She was shaking her head. \"It's not an option, Mom. I committed to sending everyone, and I meant it.\"\n\n\"Fine, but just to watch over my girls,\" she said. She walked out of the office to go pack.\n\nI looked out the window at the mountains. Change was coming, and right quick."
    ],
    "authorname": "partwolf",
    "tags": [
        "luna",
        "pack",
        "war",
        "werewolf",
        "werewolf drama",
        "drama"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/claiming-treasure-ch-41-45"
}