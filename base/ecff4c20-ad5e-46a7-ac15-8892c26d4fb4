{
    "title": "The Spark",
    "pages": [
        "After the Scour over three generations ago, the face of magic had changed completely. Most of the bloodline families had gone underground to escape. A few had stayed on the surface and hidden alone, spreading out to pretend to be normal and not a threat to mankind who saw them as monstrous. \n\nUnderground, there were dozens of the old families, but the four most powerful rose up to rule over the rest of us. Some of us had more by way of the Spark than others did and more Spark in our bloodline to pass on. \n\nMy family, we were on the bottom. My parents had not shown a personal Spark with no ability of their own. It was in their bloodline and that meant they carried it, but had no abilities of their own and they were therefore useless to the powerful families. \n\nUnderground, there were tiers. The four great families lived near the surface, under them were the 'gentry' as they were referred to. Sparkers with moderate abilities who were kept close to the 'royalty' in case someone emerged with an exceptional ability. They were immediately brought up and blended into one of the royal families through marriage, whether they were willing or not.\n\nIt was well known that someone who disappeared suddenly had surfaced an exceptional Spark and was above now, living a better life. Some dreaded it, some lived with the hope they would be next. \n\nMy sister was one of the latter. We had lived on the lowest level for so long, in what was now commonly referred to as Dante's seventh level. There was level 1, the 4 'royal' families, level 2, the gentry which consisted of about six families. Level 3 was the wealthier and more well to do families with above average Spark. Level 4 were the crafters and engineers with decent Spark. Level 5 were the wealthier Sparkers who had shown declining or lower Spark. Level 6 was the working class with low Spark and level 7, my family's level, was poor with no Spark showing for over two decades.\n\nIt was it's own sort of hell, I supposed, but it was also all I knew, all I had ever had. I had heard stories and rumors about the decadence of the upper levels, but I never took them seriously. They couldn't be that much better if we were still all hiding underground. \n\nMy sister on the other hand, talked about it constantly. She wanted the life they had above. She dreamed of it, fantasized about it. She worked every charm she had, gaining favor, getting the best clothes available to us, clothes that showed off her figure. She wore make-up, as if looks would sway anyone in our world. She was beautiful, I would give her that, but everyone knew that in our world, that didn't mean much. Our parents would have passed for nulls in the above world and here, that meant we were the lowest of the low. \n\nStill, she was convinced that she was meant for larger things. And if she was, that meant I was too. That was how it worked. If one sibling showed promise, the others were snapped up quickly in the hopes that they too would show promise.\n\nShe was coming up on her 20th birthday, the day she would go to the third level and see the Seer. The Spark, if it was going to surface, would surface by the birthday of the 20th year. She was beside herself with excitement and worry. Saying goodbye and worrying that she would be returning all at the same time. I didn't know why she was upsetting herself over it, it wasn't like Mom and I wouldn't both be going with her to watch the Seer touch her. Hell, she already had me carrying her bag for her, full of her most treasured things, just in case. I didn't mind, not really, though the walk back down to our home was going to suck with her crying the whole time. \n\nI myself had just turned nineteen the week before and the day had passed with zero fanfare. There could be none while Leona was so focused on her own impending 20th birthday. I wasn't worried about it, I worked through the day as if it was a normal day and also pretended not to know that I overheard my mother speaking to my boss about my sister's hand in marriage tomorrow, after we came home with her. In return, he would give my mom and I both a raise. That was the way of things down here. In a year, she would find a similar arrangement for my hand. \n\nI followed her and my mother quietly, listening to her talking to the guide, asking questions about the above and how large of a Spark would be required to get to the top level. I only shook my head. Why did she get her hopes up so high? She was only going to be let down when she had to marry Geoff tomorrow. \n\nThe trek up to the third level was longer than I had imagined it would be and I was actually sore and tired when we finally arrived outside of the Seer's hall. We weren't the only ones there. It happened to actually be Leona's birthday, but there were others here who had had a birthday in the last week from the third level and below. The first and second level never had to travel to see the Seer, the Seer was brought to them, and not just on Sunday. That was only for those of us from below. \n\nI stood in line with my small family, watching the others curiously. I realized for the first time the huge difference between the levels. It wasn't just the clothing and quality of clothing, it was their weight. Some of these people never went without a meal, or even went light on a meal. Some were tall, as if they had room to grow more and they were less pale as if they had access to sun lamps and therefore electricity. I saw several of the men in line looking at Leona with interest and even a few who looked me over, which surprised me. I didn't dress like my sister or wear makeup or try at all. I hadn't even brushed my hair, just twisted it up quickly to get it out of my way. I was wearing my work uniform, knowing I was going to be hard pressed to make it back for my shift.\n\nLeona was smiling under the appraisal, flourishing with the attention. I could see the way it made her shine, she was in her element. If personality alone could get her to the top, she would be there.\n\nI stood and watched as one after one, the families went in to see the Seer. They almost all came out looking dejected or disappointed. One young man came out looking pleased, but not overly excited.\n\nThe young man behind me spoke up as I watched. \"You know, if they get flagged for up top, they don't come back out, right?\" he said. \n\nI turned, looking at him. \"Hello Arik, I didn't know you were twenty already.\"\n\n\"Hello Hailene. Yesterday.\"\n\n\"I know. Have you met my sister? I am pretty sure I know this ritual and what happens better than anyone else on the 7th level.\"\n\n\"She is a little over the top about it, isn't she? I guess that means I won't be seeing her at the factory for a week or so.\"\n\n\"Probably never. Mom promised her to Geoff so she will probably start working at the mill with us instead.\"\n\n\"Pay is better. Geoff, huh? Yikes. That is going to upset her. How old is he?\"\n\n\"Not that old, his first wife passed on darklung.\"\n\n\"Yeah, I guess I heard that. How long till you are twenty?\"\n\n\"A year.\"\n\n\"You have a plan? Someone in mind?\" \n\nI looked back at Arik. He looked... hopeful. I looked him over again. He was a solid enough boy, his head not too high in the clouds. A hard worker, smart, pleasant. He was even pleasant to look at. I gave him a small smile. \"It will be my mothers choice of course, but I am sure with the right encouragement I can let her know if I have a preference.\"\n\nHis smile brightened his entire face. \n\nI felt a little awkward then as I stood there. What did you even say to someone after that while stuck in a slow line with them? He didn't seem to have the same issue at all. He stepped up closer and caught my mother's attention, saying hello to her and engaging both of us in conversation. \n\nAfter that, the time passed quickly as we talked and he had my mother and I both smiling. Even Leona joined us and smiled with us.\n\nHer turn finally came and Leona was smiling radiantly as we went in. The Seer wasn't nearly as old as I assumed she would be. She was younger than my mother and she looked bored and put upon as she sat on her pile of cushions. More cushions that I had seen in one place. \n\nThe Seer looked my sister over, then finally lifted a hand and Leona went rushing forward to take the seer's extended hand excitedly.\n\nI'm not sure what I was expecting, but nothing really happened. The Seer touched her hand for a moment, her eyes distant, then released her. The Seer turned to one of the guards next to her and made a motion and the man stepped up and took Leona by the arm and pulled her away roughly through a back door and Leona looked back at us in confusion. \n\nI blinked and started to look at my mother, but I was grabbed from behind by another hand and dragged through the same door as I tried to pull away and look back at the large man dragging me. I was shoved into a small room with Leona who looked terrified now as the door was shut and we were left alone.\n\nWhat the hell was happening?!?\n\n\"I... I did it!\" Leona cried, suddenly ecstatic. \"Hai! WE did it! I have a Spark! We are going up, Hai! We are going up!!!\"\n\nI blinked again, then sat down hard on my ass. \n\nWhat?!?\n\nShe laughed joyously and took her bag from me, pulling out her mirror. \"Oh, Hai, look at you! You are a mess! I will fix your hair! You can't go up like that!\" she said, going to her knees behind me. I let her brush out my hair, too stunned to even think of doing anything about it. She had the Spark? Did I have a Spark too? How much Spark? What level? How were we supposed to start all over again somewhere else? Would she be married into a family? What would happen to me? It would be a whole year before I would know if I had a Spark or what it was?!\n\nLeona wasn't worried at all as she chattered endlessly and fixed my hair. She adjusted her make-up, then tried to do mine, but I shook my head and scooted back to the wall, feeling sick. I realized I didn't really want this. This was Leona's dream, not mine. I liked the idea of going back down and having a nice, quiet life with Arik. I was terrified.\n\nLeona was not, she smiled and paced and checked the mirror every twenty minutes. She lectured me on how to act, what to say and do and what not to say and do. I hardly heard her though, my world had been upended. I was not prepared for this, not at all.\n\nIt was three full hours at least before the door was opened and the two guards came in and took hold of us, dragging us back out to the hall with the Seer. There were also other people there, older people along with young men. There were nine families there it looked like, with nine young men. I was held back as Leona was brought forward for the families to look at. \n\nThe seer moved closer. \"Her firstborn will be born with the gift of transformation into a hooved creature.\"\n\nThat seemed to put the backs up on a few of the families, but seemed to be fine with the others. Some wanted her to have the Spark, others were fine with the child having it. I was stunned. Transformation was a decent sized Spark!\n\n\"There is no way to tell what the sibling may have?\" an older woman asked, stepping forward to look at me.\n\n\"I might check to see, at the behest of one of the great families, should they choose to pay for the trouble,\" the Seer said irritably. \"I am at my limit this day. If you are passing, you may go.\"\n\nSix of the nine families left, which surprised me. I wondered who was left? What level they were from? Were any of them from the four great families?\n\n\"The bidding begins at 500 shards,\" the Seer said without preamble.\n\nWhat? Bidding? What the hell was happening?\n\nAn older man with white hair lifted a finger.\n\n\"Six?\" the Seer asked.\n\nAn older woman with black hair and oddly slanted eyes lifted her chin.\n\n\"Seven?\"\n\nThe man from the last family nodded.\n\nThe white haired man left with his family. \n\nIt was between the two families until it finally ended at 2800 shards, which seemed like an impossible number to me. I was paid a single shard every two weeks. \n\nThe black haired lady with the oddly slanted eyes stepped forward and looked Leona over as the other family left and the young man that was with her looked down at Leona with a scowl. \n\n\"Test the other now,\" the woman demanded.\n\n\"I told you, I am done today. I may be convinced in two days for the right price.\"\n\nThe woman scowled at her, but made a motion and the older man who was with her paid the Seer, then stepped out to call in four large men. Two of them took hold of Leona, who looked horrified, and the other two took hold of me.\n\n\"I can walk!\" Leona said quickly. \"I am well versed on how to behave, I swear it! Let me show you how hard I have worked to be worthy of this!\" she pleaded.\n\nThe woman looked her over again, then made a motion to the men. They let her go and Leona stepped up and bowed her head to the woman.\n\n\"I am Leona and this is my sister Hailene. I have always known I was destined to come up and I worked hard for the day it happened. I am very pleased to be a part of your family in whatever way you desire!\"\n\n\"We shall see,\" the woman snapped, then looked back at me. \"And her?\"\n\n\"I am sure she will also behave!\" Leona said quickly.\n\nI shook my head. \"Look, I am positive I don't have a Spark. My kids won't either. I will just go back down, ok?\"\n\n\"What?\" Leona shrieked. \"Hai! Of course you want to go up!\"\n\n\"Silence!\" the woman snapped. \"Bring her,\" she snarled to the men holding me. \"Seer, I wish you to be at our hall tomorrow, before noon.\"\n\n\"I will come on Tuesday, when and if I feel like it,\" the Seer snapped. \n\nI was guessing the woman definitely wasn't one of the four great families, or the Seer wouldn't be treating her this way.\n\nThe woman spun and left, leaving everyone to follow her. Outside of the hall, there was a large box and eight large men standing around it. The woman got into the box and the older man and younger man followed. One of the guards led Leona in and the two holding me pushed me in. It was full of cushions and it was snug with the five of us, but there was no getting out as the panel was shut and the box was lifted by the men outside and it started moving.\n\nLeona settled near the young man, looking at him hopefully as the older man turned a light orb up in the ceiling of the traveling box. I sat where I was near the panel, between the older man and Leona.\n\n\"Repeat your names,\" the woman snapped.\n\n\"I am Leona and this is my sister Hailene. Travis. Leona and Hailene Travis.\"\n\n\"This is my third son, Itsuki. You will wed Saturday next and bear him a child immediately, do you understand?\" she asked Leona angrily.\n\n\"Yes of course!\" Leona said breathlessly, looking Itsuki over. He looked angry as he glared at the far wall. \"Hi,\" Leona said to him. \"It's lovely to meet you.\"\n\nThe boy looked at his mother. \"I will do this thing for you, but I will not like it. She is no Belinde and I will not ever care for her as I do Belinde!\"\n\n\"Enough! You will do as I say to keep the line strong. Belinde is less than middling in the Spark and her family may soon fall. I will not hear of this again!\"\n\nItsuki turned away again, his cheeks red with anger. Leona blushed and looked unsure for the first time. She looked at Itsuki. \"I will be good to you! And I know how to please a man, keep him happy. I have read all the books!\"\n\nItsuki turned to her, sneering. \"Do you think sex is all there is? I love Belinde! I will never have that with you, mole.\"\n\nI blanched. 'Mole' was a derogatory term for those of us from the 7th level. \"Fuck him Leona! Fuck these grasping assholes, all they care about is power. You are too good for him by far. Too good for all of them.\"\n\n\"Hailene! Be quiet!\" Leona pleaded.\n\n\"You will be punished!\" the older woman snapped at me. \n\n\"Do your worst you old bitch! As if being stuck here with you and your stuck up family isn't punishment enough. You people suck.\"\n\n\"Hailene shut up!\" Leona wailed. \"She doesn't mean it! She is just upset, she is shy and doesn't like to leave home unless she has to! And that wasn't what I meant, Itsuke! I know how to treat you well, be a good wife and support you lovingly and faithfully. I know how to be genteel and graceful and speak as I should.\"\n\n\"Are you dense?\" Itsuke asked. \"I love someone else. I will never like you. I will bed you... with the lights off, but the moment you are pregnant I won't touch you again, and after you have the baby we are going back to the Seer. If you are of no more use, I will dispose of you and take my Belinde.\"\n\nLeona paled and I sat up. \"You people are monsters! What right do you have to treat a life so casually? As if we aren't even people unless you have a use for us and we can be a benefit to you?!?\"\n\n\"Shut up!\" the older man bellowed, speaking finally. \"No more words for the rest of the journey.\"\n\n\"Or what?\" I snapped.\n\n\"Simion!\" he yelled and the box stopped. The panel opened and one of the large guards looked in. \"Take that one there and hang her from the back.\"\n\nThe guard pulled me out of the box roughly and grabbed an ankle, dropping me to hang upside down. Him and another guard tied my ankles to two hooks on the top of the back of the box and I was left hanging upside down as they lifted the box and started walking again. I glared angrily until all the blood rushing to my head started giving me a headache and making me dizzy. I grabbed at one of the poles the guards were using to carry the box and pulled myself up slightly, enough that my head wasn't swimming as they moved.\n\nA hand shot out and I flinched, expecting it to shove me back down. Instead, it held me up more, so I didn't have to strain so hard to hold myself up. I looked and it was Simion. He didn't look at me as he stared straight ahead, but I still felt a small affection for him. I bet he was like me, from the lower levels being forced to serve these people just because he was large and strong. After several long minutes, he shifted, his large hand pushing me up higher as he moved closer to the box. I was almost sitting up now against his chest with my head on his shoulder and one arm around my waist as his other hand held the pole.\n\n\"Thanks,\" I whispered.\n\n\"I do not want my feet puked on,\" he answered, just as quietly.\n\n\"Kitsume finds out, she'll see you on the pole,\" the man next to him whispered.\n\n\"Dask can't see, he's the only one who would speak out,\" Simion answered.\n\n\"What level are we going to?\" I asked.\n\n\"Your level is not taught to recognise the higher families?\" Simion asked.\n\n\"No, what use would we have of that information?\"\n\n\"Second level, higher tier,\" Simion answered.\n\n\"Why are you helping me?\" I asked.\n\nThe other man snorted. \"If the Seer says you have no Spark, you will be offered your choice of one of us. Usually. If you don't upset her so much she kills you first. He hopes to be chosen.\"\n\nI could only sigh. Of course. No one does something for nothing. Still, he was being nice. \n\nOnce we seemed to be getting close as we climbed up and up and up, he eased me back down before they stopped and lowered the box. \n\n\"Bring her,\" the woman snapped as she got out of the box and headed into the huge hall, followed by her family and Leona who had red rimmed eyes. Simion untied me and took me inside, following close behind the others. \n\nThe hall was lavish with rooms set off to the sides. Rooms with cushions and carpets and low tables that seemed to have no purpose save for lounging in them, and there were plenty of people lounging in them. They all watched curiously as we passed through, some getting up to watch or follow. There were a lot of children as well, almost all of them following and laughing.\n\nOnce we reached one of the far rooms in the hall, the woman pushed open a heavy wooden door and went in, everyone following her in except the followers and children. There were already other people there and it looked like a meeting room of some sort. The two men who stood were obviously Itsuke's older brothers and the women with them were their wives. There was another younger man as well. He looked of age, but he was alone as he stood, looking all of us over. ",
        "\"This is Leona, Itsuke's betrothed,\" the woman snapped. \"She will bear a child with the transformation Spark.\"\n\n\"Her?\" One of the older boys asked, gesturing to me, Simion's hand still on my shoulder.\n\n\"Her younger sister. We shall see about her later. Simion, put her in one of the servants rooms until the Seer can test her.\"\n\nSimion immediately turned me and led me out of the room to a side hallway that was smaller and darker. \"Here,\" he said softly, opening a door. \"It is near the guard barracks. I can check on you. I will see you are brought food.\"\n\n\"Thank you, Simion,\" I said softly.\n\nHe gave a small nod and left, pulling the door shut and barring it from the outside. The servants room was larger and nicer than the bedroom my sister and I shared. There was a real cushion on the floor, larger than the one my sister and I shared and I layed on it, feeling a little resentful that these people had so much that they took for granted up here. It was thick and plush and soft and my shoulder didn't dig into the hard ground because it was too thin. \n\nHe was as good as his word, a woman brought me food in less than twenty minutes and I was shocked at the food on the plate, as well as the very clean tasting water in the cup. There was real meat and vegetables in some sort of soup in the bowl. It was delicious and I ate every bit of it, licking the bowl when I was finished.\n\nSimion checked on me that night, just looking in and looking me over before closing the door. He did the same in the morning, looking me over as the same women brought me in more food. That night when he looked in, he asked me if I was doing alright.\n\n\"Bored. How is Leona? Are they being nicer to her?\"\n\n\"She was fitted for clothes and she seems happy.\"\n\n\"Has she asked about me?\"\n\nHe blushed and I knew that was a no. I shrugged and he gave a small nod in my direction before closing the door.\n\nTuesday morning, the woman brought more food, but Simion didn't check on me. I wondered if it was because I had asked about Leona and he didn't want to answer more questions.\n\nHe finally came in the middle of the day and I stood up expectantly when he walked in looking focused. I saw the other guard in the doorway and understood his cold look as he took my arm and pulled me out of the room. He led me back to the meeting room and I saw the Seer first, sitting on a large cushion, looking put upon and perturbed. \n\n\"I won't touch her until you pay the agreed upon price,\" the Seer snapped. \"One crate of fresh fruit.\"\n\n\"I do not have it now, you will have to wait. I have two cases of canned stew and the fruit will be brought as soon as it arrives,\" the older woman said. I didn't see Leona anywhere, though Itsuke was there.\n\n\"No, Kitsume. The Stew, a case of canned fruits and a case of canned vegetables, as well as the fresh fruit when it comes.\"\n\n\"One case of a mixed variety of canned fruits and vegetables plus the stew and fruit.\"\n\n\"No tomatoes.\"\n\n\"No tomatoes,\" Kitsume agreed.\n\n\"Fine, bring her closer and release her,\" the Seer demanded of Simion.\n\nSimion brought me closer and released me, but I stepped back. Simion pushed me closer, a hand on my back.\n\n\"You must not be touching her when I touch her!\" the Seer said angrily.\n\n\"Be still, girl,\" Simion demanded, removing his hand, but keeping it close, just in case.\n\nThe Seer snatched my hand and I froze in shock as I felt a jolt of... something run through me. The Seer scowled, staring at nothing and looking inward for a long moment, then finally released my hand as she shook her head in confusion.\n\nI stepped back, against Simion's hand, feeling drained and tired now.\n\nThe Seer turned to Kitsume. \"She has the Spark and it is strong. Another box of fresh fruit for more information.\"\n\nKitsume sat up, her eyes greedy as she looked me over, but I was too tired to care. My knees gave out and I started to sit on the floor, but Simion caught me and picked me up, holding me on his arm.\n\n\"Done,\" Kitsume snapped, stepping closer eagerly.\n\n\"She is very strong. Strong enough you will have to trade her up. I would need two full weeks to recharge fully to know what, but I will vouch to any family that her Spark is the highest level.\"\n\nKitsume smiled grimly as she looked at me and my heart sank with that look. My head dropped to Simion's shoulder.\n\n\"What is wrong with her?\" Kitsume demanded.\n\n\"I pulled from her to try and test her ability, but it is not developed in her yet. She may sleep through until tomorrow and she will need a large breakfast when she wakes. I am here now though and I will not make another trip. To whom do you wish me to testify?\"\n\n\"You swear she is powerful?\" Kitsume demanded.\n\n\"I said it was so.\"\n\n\"Then there is only one, isn't there?\" Kitsume answered, smiling wickedly.\n\nThe Seer nodded. \"I will go now, but you must make the announcement that there will be no Seer service for two more Sundays. Send my payment with your men.\"\n\nI drifted off as they kept talking, too tired to stay awake another second.\n\nI woke to jostling in the morning, still ridiculously tired as I was pushed down the hall by the same woman who had been bringing me food. She took my clothes off of me and shoved me into a tub of hot water, then started scrubbing me with soap. She was not even trying to be gentle, just fast. \n\nShe fed me breakfast while another woman measured me and fitted undergarments to me, then a dress that was made of a very soft fabric. The neckline was too low by far, but I wasn't given a say as I was ushered into another room where my hair was trimmed, fussed over and styled.\n\nFinally, Simion came and looked me over from the door. He looked sad and I gave him a sad smile. \"I would have picked you,\" I said softly to the older gentle giant.\n\nHe led me to the meeting room and Kitsume was there pacing, along with her husband. \"Took you long enough! Simion, ready the palanquin. Girl, don't you give us any issues!\" she snapped.\n\n\"You are trading me to a higher house as I understand it?\" I asked softly.\n\n\"Yes. You will behave yourself!\"\n\nI gave a nod. \"If I do as you ask and stay docile and quiet, I want a promise from you.\"\n\n\"What?\" she asked angrily.\n\n\"You will never harm Leona or allow harm to come to her, even if she shows no Spark after her child. Allow her a nice life with Simion or one of the other guards.\"\n\nKitsume gave a curt nod. \"That is reasonable enough.\"\n\nI nodded, but I felt sick. I was afraid of what was about to happen. If the second level people were this awful and grasping, what would the first level people be like? Beyond insufferable. \n\nI was led down the hall again and out the front doors to the travel box and shown in. I was alone with Kitsume and her husband this time and as the box began moving, it hit me what the Seer had said. I had Spark. I had Spark and I was going to be powerful. So much had happened that I hadn't processed it until now. I felt stunned as I sat there thinking. What would my Spark be? What was the most powerful Spark there was? Coercion was the one that had set the Nulls on us. Morphing was powerful. Telekinesis was middling, but it could be powerful if it was strong enough. Mendel Faust had almost convinced the Nulls if they didn't lay off he would pull the earth out of its orbit if they didn't stop. He had been assassinated, but it was said he could have done it. Teleportation was strong. Seeing was strong. Even as weak as the Seer was who had touched me got pretty much anything she wanted. She lived in luxury, even if she wasn't on the first level. As the only Seer, she could name her price on anything and everything. Transformation was better than middling, but not strong. It did guarantee a strong line since it was inherent. Flight was also middling since it wasn't very useful in the long run. \n\nMy mind reeled with the possibilities as I sat there in stunned silence. \n\n\"Girl, when we arrive, you will be silent,\" the man said finally. \"You will keep your eyes down and you will not speak out or be rude, do you understand?\"\n\n\"Yes, I have an agreement with Kitsume,\" I said with a nod. \"I won't ruin your deal or whatever it is you are planning.\"\n\nHe gave a nod, eyeing his wife.\n\nI went back into my own introspection, but seconds later we stopped and I looked around in surprise. Had that been fast, or had I been lost in thought for that long? I didn't know.\n\nThe panel opened and Simion helped me out. Two guards stood outside the enormous hall and escorted us into the bright, open and very white hall. It was opulent. I was sure that was the word. There were people in the large rooms, wealth on display everywhere. There was fresh fruit on the tables in the large rooms and plush chairs instead of cushions.\n\nIt was a sickening display of wealth.\n\nI was led to a nearby room as the people looked me over from a distance and when I went in, there were a full two dozen people in the room sitting in plush chairs long enough to sit three and four people. A man and woman stood and came towards us.\n\n\"Kitsume, Suijin, it is good to see you both in such good health. This is her then? Well! I was expecting much... less. She is quite lovely for where she is from, isn't she?\"\n\n\"We had to clean her up quite a bit, but no, she is not so bad as the other moles,\" Kitsume said.\n\nI scowled, but said nothing as I kept my eyes down.\n\n\"What is your name, girl?\" the woman asked. She sounded pleasant, almost nice even.\n\n\"Hailene Travis.\"\n\n\"Hailene. A lovely name. My name is Emily and this is Mikkael. Allorra said you had an extraordinary Spark, especially for where you are from. You must be happy to be given this opportunity to rise so high.\"\n\nI looked up then, my eyes flashing. \"I did not have my sights set so high, actually. I would have been fine to stay where I was. It was my sister who lived with her head in the higher levels. I am more practical. I dislike being uncertain and alone, not knowing what my fate will be. Being at the mercy of other people who have no care for me save for the power I might bring them.\"\n\nThe beautiful woman grew spots of pink on her cheeks. \"You are forthright, aren't you? It is true, Hailene, that we want strength in our line, but we do offer much in return for it, do we not? I think you will find your stay here with us less than onerous. Ian? Come and meet Hailene.\"\n\nA young man approached, eyeing me with pink cheeks. He was pleasant enough looking, but he looked unhappy as he looked me over. \"Heilene,\" he offered, bowing his head slightly.\n\n\"Ian,\" I returned, nodding slightly, copying his cool demeanor.\n\n\"Ian is my second son. Bennett, my first son is gone at the moment. Teleportation is in very high demand right now and he does love going topside. Ian can transform into any winged creature. Do you have any inkling what your Spark may be?\"\n\n\"None. I have never given it much thought. My mother said my great grandfather could phase, but that is the only Spark I know of in my line since my father died before I was born.\"\n\n\"I see,\" she said simply. She turned to Kitsume. \"Well. Shall we begin negotiations?\"\n\n\"Yes,\" Kitsume said eagerly. \"I wish for two of your line with lesser Spark to be sent to my hall immediately to wed two of my own line and I wish two of my own line who have stronger Sparks to be sent there to Wed into your line. Further, I want a two year transferal of one youth between our lines.\"\n\n\"One of each now and one every four years for twelve years,\" Emily countered. \n\n\"She has a huge Spark! Allorra said so! She is worth two now for both of us and one each every two years for twenty years!\"\n\n\"One each now and one every three years for fifteen years, my final offer,\" Emily said, shaking her head.\n\n\"The Chastain line would offer a better deal!\"\n\n\"The Chastain line has a smaller family and could not honor a better deal,\" Emily scoffed. \"And if you wish to threaten in such a way, you may go. Remember where all of your supplies come from and remember yourself! Do not rise above!\"\n\nKitsume bowed her head deferentially. \"Apologies. It will be as you say. I will send my youngest to you tomorrow and I can bring yours home with me now in trade for the girl.\"\n\nEmily nodded, then turned with a small nod to her husband. She put a hand on my arm and led me away to one of the long chairs that was empty, then sat me down. Mikkael left with Kitsume and Suijin. \n\n\"Hailene. Let us first get one thing out of the way. I have two sons and I wish a strong line for both of them, but neither of them are ideal matches for you. Bennett is never home, ever and he has no wish to be tied down. Any mention of it and he disappears for weeks. And Ian... he stays home and works for the family here, but...\" she trailed off, looking around the room as if searching for the right word.\n\n\"I have a lover,\" Ian said, sitting across from us in a smaller chair.\n\nEmily blushed.\n\n\"I cannot marry him, of course, but I have no interest in women and you can see how it might be difficult for me to further the family line.\"\n\n\"I see,\" I said with a nod. \"So you are saying a cousin or nephew then, perhaps?\" I asked Emily.\n\n\"No,\" she said, blushing even more now. \"No. When Allorra came to us yesterday, Mikkael and I made a hard decision. We had thought to let Ian live as he wished, but now we will ask him to try and... alter his lifestyle. He thinks he has a way it may work.\"\n\n\"I see,\" I said again, looking at Ian and feeling my own face turning red.\n\nIan was also blushing furiously and looking incredibly uncomfortable.\n\nI swallowed hard. \"Alright. I have agreed to do as I must. Kitsume has my sister and has promised not to harm her as long as I play my part in this.\"\n\n\"I am sorry,\" Emily said softly. \"That is a horrible position to be in, but we will try and make the accommodation as painless for you as possible. We hope that you may even find your life here enjoyable.\"\n\nI looked at her, wondering if she were serious. \"You are much nicer than I thought you would be,\" I said finally.\n\nShe gave me a pleased smile. \"Thank you! I hope to be a good mother to you, Hailene. If you and Ian can find a good compromise. I will not force this on him, but he has agreed to try.\"\n\n\"It may help that she isn't a complete troll,\" Ian said with a joking smile. Not a happy smile, a smile that said he was trying to lighten the mood even if he still wasn't comfortable with it. \"Hailene? Why don't you come with me and you can meet Paul?\" he asked, standing and holding a hand out to me. \n\nI glanced at Emily who gave me an encouraging smile, then took Ian's hand. I let him lead me down the halls, through the people and children who were watching and smiling and calling hello's. He took me to another large room where a tall young man was pacing. He looked at us when we came in, the anxiety plain on his face as his eyes went to me. \n\nI suddenly felt an affection for the man and his nervousness as he looked at me. He was just as afraid as I was in all of this. I gave him a smile and stepped up, holding my hand out. \"Hailene,\" I said warmly.\n\n\"Paul,\" he answered with a nervous smile. \n\n\"You got a nicer greeting than I did,\" Ian said, moving to the side to pour liquid from a glass bottle into three glass cups. \n\nThe liquid was brown and smelled horrible as he handed me a glass. \"I repeated your tone back to you,\" I said as I sat down in the seat Paul gestured to. \n\n\"I suppose you did,\" he answered, sitting next to Paul. They both drank the liquid and looked at me expectantly. \n\nI took a drink, then coughed as it burned going down. \"That is horrible! Why would you drink that! Are you trying to kill me?\"\n\nIan laughed and Paul hid a shy smile. \"It is whiskey. Is there no whiskey below?\"\n\n\"I don't think so! Why would you willingly drink that?\"\n\n\"No one gets drunk below?\" Ian asked curiously.\n\n\"Never heard of that either, is that like whiskey?\"\n\n\"Drunk isn't a thing or drink, it is a state you're brought to when you drink whiskey. You drink whiskey to get drunk. It makes you... less nervous, more bold. It's liquid courage. And it makes you happier.\"\n\n\"Oh. It just makes my stomach burn.\"\n\n\"It takes a minute or two to hit your system. How old are you, Hailene?\"\n\n\"Nineteen.\"\n\n\"When will you be twenty?\"\n\n\"In about a year. Leona and I are one year and three days apart.\"\n\n\"Is she as pretty as you?\" Paul asked.\n\n\"She is beautiful. I'm not pretty at all, she is stunning though.\"\n\nPaul laughed like I had made a joke.\n\nIan poured more drinks all around. \"Alright Hailene, Paul and I talked about this and we thought the best way to try it is with all three of us.\"\n\n\"Umm. I mean, I have never... been with a man before, but from what I understand, that's not really how it works,\" I answered warily.\n\nHe gave me a tight smile. \"I mean, I want Paul to lay down on his back and you to lay on his chest with your back to me. Ass up, pardon me for being crass. That way I can look at him as I... do as I must. Does that make sense? Not that you aren't you know, beautiful and all... it's just...\"\n\n\"You don't have to explain. If that is what is needed, then that is what we will try. I have never been with a man, so I may need a little instruction.\"\n\n\"I have never been with a girl,\" he said, blushing and looking away.\n\n\"Right,\" I said, my own face burning. \"I guess we both get to figure it out then.\"\n\n\"Well, at least it won't be awkward at all!\" Paul said, jokingly.\n\nI did laugh then, grinning at Paul. \"So, I guess, after we say the vows we try this?\" I asked.\n\nIan looked at me, his head snapping to me in confusion. \"Oh! Um... I thought I was clear on that. There will be no vows until I find out if I can even do what I have to. I mean, if I can't make myself... perform as I must, then there is no use for me to marry you. It would be a waste. You know? So we have to try first, see if I can even do it, and also make sure it's not too much of a big deal for you.\"\n\n\"As I understand it, you are the only one who really has to be able to... umm... perform.\"\n\n\"Well, yeah, but I mean, if it's too awful for you to have to be with two men like that, no one is going to force that on you.\"\n\n\"Oh... that is very thoughtful, but I will be frank. As I have already said, my sister's life depends on me doing as I must here. You have all been very kind and I appreciate that, but if Kitsume discovers that I have not worked out for all of you, then my sister will be... disposed of the moment she has her first child. That was what the Seer saw, that her child would be born with a transformation Spark. Once she is no longer of use to them, they will get rid of her to make way for the one their son really wants. So I will do what I must, no matter how hard it might be. Perhaps... a little more liquid courage wouldn't be amiss though,\" I said breathlessly, swallowing down more of the burning, awful drink. \n\nIan nodded, looking down, but Paul looked angry. \"It is criminal the way the second level treats people! They should be set down!\"\n\n\"Hush, my love,\" Ian said gently, putting a hand over Paul's. \"They should, but now is not the time for politics. Hailene... do you wish more time to talk or would now be a fine time to try?\"\n\n\"Oh... I suppose the sooner it is done the less time I will have to fret about it,\" I said breathlessly. Not that I could be more terrified than I already was. I was trying to be professional and polite about everything, but my heart was hammering in my chest. I stood, looking at the two men with wide eyes. At least they were both attractive and not monstrously huge. That might help. \n\nThey both stood as well and I could see how tightly they were gripping each other's hands. It calmed me to see that they were both as terrified as I was. I led the way to the open door to the bedroom and set my empty glass down on the way. I turned off to the side, facing away from them as I began pulling off my dress. I didn't want them to see my tears. ",
        "\"Say when you are ready?\" I asked shakily, still staring at the wall as I hugged myself.\n\n\"I am ready,\" Paul said quietly.\n\nI turned to the bed and Paul was laying on his back with a thin blanket up to his waist. I hurried to him, avoiding looking at Ian who was standing at the edge of the bed, looking up at the ceiling. I climbed up quickly, having to use Paul's proffered hand to help pull me up. Swallowing hard, I laid down on Paul, my head on his chest and my hands gripping his arms. He patted my back comfortingly. \n\n\"Lovie?\" Paul asked and Ian turned to look down at him. Ian got in the bed next to us, shaking from head to toe. He kissed Paul several times, then put his hand on my back and stroked my back gently as he continued to kiss Paul. Paul had one hand in Ians hair, the other in mine, stroking gently as if to calm me. Ians hand went down to my backside and I tensed slightly, squeezing my eyes shut.\n\nI could do this. They were nice men, nice people, I could try. \n\nIan moved over the top of me and I could feel the weight of his cock pressing against my backside as he held himself up. He wasn't hard, not completely, but he was trying to get there as he pushed his hips against me, grinding his cock into my ass as he kissed Paul more passionately. \n\nIt wasn't happening. We were all too afraid. The ridiculousness of how hard we were trying, still so nervous and virtual strangers hit me and I giggled. I giggled and couldn't stop and Ian pulled back and looked down at me confused. Paul let out a laugh, then Ian smiled and after a moment, we were all laughing so hard we had tears in our eyes.\n\n\"So that was a horrible idea,\" Ian said finally. They were both on their backs now and I was budged in between them on my side. \n\n\"Tell me how you two met,\" I said softly. I had an idea.\n\nWe talked, all of us, for several hours, just getting to know each other and get comfortable. Ian had food brought in and we had more drinks. Liquid courage. I had more than they did, because apparently if men had too much, they couldn't perform as they should.\n\nFinally, I felt bold enough to try out my plan. I got up, moving back from both of them. \n\n\"Ian, move to the middle of the bed and sit up a little more,\" I said, patting the bed and tossing a cushion against the wall. He did as I asked and I pulled Paul to sit up. \"Put a leg on either side of him, Paul. I've heard tell of a way to please a man by taking him in your mouth, I am sure you both know of this trick, yeah?\"\n\n\"Sucking cock? Of course,\" Ian said, confused. \n\n\"Yes! Ian, show me on Paul, show me how you suck cock. Lean up Paul and let him suck your cock. I want to watch.\"\n\nI moved back to watch and the boys hesitated only a moment before Paul leaned up, his hand on the wall as the other moved down to slide fingers into Ian's hair. I watched as Ian took Paul's thickening cock into his mouth and pulled on it with his lips, licking and sucking eagerly as Paul's eyes closed. I could also see Ian's cock thickening and twitching. \n\nMoving softly and slowly, I eased down and took hold of Ian's cock, then put my mouth around it like he had down to Pauls. He let out a moan around Paul's cock and I felt him moving harder and faster as his cock grew in my mouth. I sucked and pulled like I had seen him do until he was hard, then I moved to straddle him. \n\nThis was the part I was most afraid of, I heard it hurt the first time, but I didn't give myself time to think about it. I guided him to my slit and eased myself down and his wet cock. There was a snap and a sharp pain, but it was gone in seconds and I took him into me. I eased down until I was full of him, then I took hold of Paul's hips to steady myself as I began riding him, up and down slowly. He groaned again, going at Paul's cock eagerly and I tried to match his speed. \n\n\"Lovie!\" Paul yelled hoarsely, then groaned as Ian slowed on his cock. \n\nPaul moved to lay down and I was half afraid it would be over now, but Ian sat up, panting, his eyes wild as he took hold of me and flipped me to my back. He thrust his hips hard, pounding into me as I gasped in shock at his ferocity and need. He had one hand laced through Pauls fingers, but the other was planted over my shoulder so I wouldn't move up the bed as he rammed into me. \n\nI let out a small cry of pain, then bit my lip, trying to stay quiet and let him do as he must. He moved back, taking hold of my hips and rising up slightly to ram harder as he tilted his head up with his eyes closed. I let out another wail and Paul leaned over me, stroking my hair and kissing my temple gently. \n\nWhen Ian plunged into me and held himself there with a loud roar, it scared me enough to make me whimper and Paul hugged me close to his chest as Ian's cock throbbed inside me and he squirted hot fluid into me. He looked exultant as he dropped down to hover over me, panting. \n\nHe was smirking slightly as he leaned in and kissed Paul, then shocked me by moving lower and kissing me on the lips. \n\nMy first kiss. \n\nHe rolled to his back on the other side of me and tried to catch his breath, then half laughed, a satisfied laugh. \"How did you know that was what I liked?\" he asked me.\n\n\"What?\" I asked.\n\n\"To take him in my mouth? How did you know it was what I liked to do?\"\n\n\"I didn't. I just thought it would distract you, and if I tried to make it feel the same, you could imagine it was him.\"\n\n\"Mm. You are clever. I would not have thought to ask you to do that, but I am pleased you were willing. That was more pleasant than I imagined and not so hard at all. Oh! Hailene there is blood! Are you hurt?\"\n\n\"It was my first time,\" I said softly.\n\n\"That is normal then?\"\n\n\"Yeah.\"\n\n\"I hope it wasn't too bad. Come, we can all clean up.\"\n\nHe pulled me up and held my hand as he led me down the hall in nothing but out skin. He held Paul's hand in his other hand and Ians sudden change in demeanor made me smile. He was giddy now, happy and much less reserved and nervous. He took us to a room with four, deep marble basins full of water. Steam rose from all of them. \n\nThere were people in the basins and I hid behind Ian as he led Paul and I to an empty basin.\n\n\"You seem pleased,\" Emily said, standing from another basin and climbing into our with us.\n\nI was horrified. No one wore a stitch of clothes and no one seemed to care at all.\n\n\"It was not so hard as we imagined,\" Ian said happily, handing me a cloth and soap.\n\n\"So I shall set a date?\" Emily asked with an excited smile. \n\n\"I think... perhaps after we have managed it on three separate occasions. I do not want it to be a one time occurrence that cannot be repeated,\" Ian answered.\n\n\"Of course, you are right,\" Emily nodded. \"Hailene, you are well? It was not too... taxing on you?\"\n\n\"No, they were both gentlemen,\" I lied with a smile. I still hurt from Ian's rough handling.\n\nShe smiled, doubly pleased. \n\nThe hot water seemed to be soothing my tension and my aches and I began feeling drowsy as the others sat and talked. \n\nIt was Paul who jostled me as I began nodding off. \"We should get her to bed, I think it has been a long and taxing day on her,\" he said softly to Ian.\n\nI sat up and noted there were more people in the basin with us. I blushed furiously as the two men stood and Ian pulled me out along with them. This was really normal for them?!?\n\nPaul wrapped me in a small, fluffy blanket and I stared at it a moment, then watched them as they used similar blankets to soak up all the water off of their skin as they wiped it along their limbs. I did the same, but stayed hidden in it as I did. They tossed theirs in a pile, but I kept hold of mine and took Paul's proffered hand.\n\nThey led me back to Ians huge rooms and back to the bedroom. His bedroom was larger than the small space my whole family lived in. It hit me then that mom was alone now. She wouldn't be able to afford rent on her pay alone, she was going to have to find a new place to stay, or get married again. She was alone. I felt tears well up as Ian tugged the small blanket away and helped me up into his huge bed. \n\n\"Are you well?\" Paul asked, alarmed as he looked at my face.\n\n\"Yes, sorry! It's just... my mother is alone now and I was thinking about her. By now she has either moved into one of the singles halls or gotten married.\"\n\n\"Never be sorry for worrying over your family,\" Paul said softly, stroking my hair back. \n\nHe laid down on his back and Ian put an arm around me, moving me in close to Paul, sandwiching me tight between them as we both laid our heads on Paul's arms and shoulder. I had never slept next to anyone but Leona, but it was warm and comfortable and I was exhausted. I fell asleep quickly.\n\nPaul woke me in the morning, leaning over me to kiss Ian. Ian mumbled something and pulled me in tight against him as Paul got dressed quietly and left the room.\n\n\"Where is he going?' I asked softly.\n\n\"He has duties to see to in the mornings,\" Ian said sleepily. \"Mmm, you are so small. Easy to spoon. I have never had that,\" he said, curling more tightly around me. I felt his cock pressing against me, hard and ready and it shocked me to my core. \n\nHe turned me, facing him and leaned in, kissing me, forcing my mouth open as he reached down to touch me between my legs. I was stunned as I lay there, not knowing what to do. I tried to kiss him back, but I was mostly frozen in place as his fingers explored my slit, then he eased a finger into me and I gasped. \n\n\"Is that what you like?\" he asked in a whisper, thrusting his finger into me roughly. \n\nI didn't answer, unsure what to say. I didn't like it, not at all. It felt rough and intrusive and I was still sore. He rolled me to my stomach and shoved my legs wide with his knee as he mounted me from behind and held my wrist above my head. He reached down to guide his cock into me with his other hand, then rammed in roughly with a grunt, then took my other wrist and held it above my head. \n\nHe began thrusting, slow and hard, grunting and growling as he took me. I felt tears well up again, feeling like this wasn't right, this wasn't how it was supposed to be. I also knew Paul wouldn't like this and that upset me even more. It wasn't just the pain of his cock invading me, it was the pain in my heart that he wasn't who I thought he was. \n\nHis pace quickened and he was thrusting like a savage animal, roaring as he rammed. I cried out before I could help myself and he sounded exultant as he doubled his efforts to pull another from me. He let go of one wrist and reached under me to squeeze one of my breasts painfully. I cried out again and he shoved in hard, coming side of me with a fiercely triumphant cry.\n\nI broke down sobbing and he rolled off of me, breathing heavily. \"That was amazing,\" he said, panting. \"I think... I think maybe I might like girls too. I liked that a lot. More than I ever imagined I might.\"\n\nI said nothing as I faced away from him, trying to dry my eyes and get control of myself.\n\n\"Mmm. I will send for breakfast and some clothes for you. You will have to wear your dress from yesterday until they come, ok?\" he asked, leaning over me and kissing my shoulder.\n\n\"K,\" I answered, not trusting my voice for more than a single syllable.\n\nHe got up and got dressed and I eased out of bed, trying not to show how much pain I was in. I didn't think he realized how much he had hurt me. Maybe I should say something? Maybe he hadn't meant to hurt me so much? No, it had excited him when I screamed and he had tried to make me scream again. He liked that he was causing me pain. He just didn't think I would mind it. Maybe he thought I enjoyed it?\n\n\"I will go ahead and send for clothes, but let's go eat with the others. I have a brush right there you can use.\"\n\n\"Thanks,\" I said softly, trying not to hobble to the dresser with the brush on it.\n\nHe walked far too quickly down the hall and held my chair at one of four huge tables. His mother was smiling as I looked around at all of the people. These were all family members? There were so many!\n\n\"Hailene, you are well?\" Emily asked from across the table.\n\n\"Yeah,\" I smiled. \"Didn't sleep well,\" I lied. \"Not used to it here yet and I was thinking of home.\"\n\n\"Oh, of course. I can have Melany prepare something for you this evening to help you sleep. She is not family but she has a small Spark of Seeing. She can tell when a woman is with child and if the Spark is present. That is all, but it is very nice to know. She also knows the mixing of herbs and such to help with many things, and the birthing of babies.\"\n\nI smiled, trying to find a comfortable way to sit. Everyone talked through breakfast and I stared at all of the food. I tried a piece of fruit for the first time in my life and was not disappointed. \n\nAfter breakfast, everyone began dispersing and I stood when Ian did. \"Hailene, I will see to your clothes and then I have a few things to do. Do you want me to have someone show you back to my rooms?\"\n\nI smiled. \"May I look around a bit? Explore a little? Walk?\" I needed to walk off my soreness and pain, plus I didn't want to be closed up in another room again.\n\n\"Of course! If you get lost, ask anyone how to get back to my rooms.\"\n\nGet lost? How large was this place?!? \"Thanks,\" I said, turning and taking off down the hall. I turned down a side hall, then another side hall, then another. I didn't know where I was going, but I did know I wanted away from all of the people who looked like they wanted to sit me down and talk to me. They were all very nice, but I didn't want to explain to thirty different people what life was like on the 7th level over and over again.\n\nI turned down a smaller hall and remembered that there were halls like this in Kitsume's home and they were for servants. Was this where the servants lived? How did they hire servants, I wondered. As I went further down, I could smell food being prepared and I heard the sounds of people talking and pots banging. I peeked into a huge kitchen and a lot of people bustling around and talking happily as they worked. \n\nI eased back and stood there a while, looking down another hall. I saw a man come out of a room and he had a box of something, carrying it to the kitchens. He never looked at me at all. A storeroom, I was guessing. No one would find me in a storeroom, I would be safe from being tracked down to talk.\n\nI slipped in and stared at the huge room full of metal shelves. They held boxes and bins and crates. More food than I had ever seen in my life. I went back and back and back and the light got more and more dim as I went. I made it to the end and sat down on a pile of sacks that looked like they were used to carry loose things. I curled up, trying to think, trying to work out what I should say to Ian.\n\n\"Trying to hide from someone?\" a male voice asked from across the back wall, in the opposite corner.\n\nI sat up. \"Oh! No, sorry. I just needed a little space from all of the talking...\" I said breathlessly. I realized he wasn't going to tell on me. A servant, probably trying to avoid duties. I sat back.\n\n\"You don't like talking?\"\n\n\"Not really used to it. So many questions and expectant faces and retelling the same thing over and over again.\"\n\n\"Most people like the attention.\"\n\n\"I suppose I am not most people. It is a bit overwhelming to me.\"\n\n\"I understand, I feel the same way. Too many people, too much talking. It makes me anxious.\"\n\n\"Why work here then? Don't you have a choice in that?\"\n\nThe man moved closer and I could see him now. He was an older man, closer to thirty, tall and strong. Kistume would have had him as a guard if she had found him first. He sat down near me. \"Servants don't always get to choose,\" he said softly. \"Where they work. Some are born into it, others are sold into it. Some are... forced into it when they are born without the Spark in the lower families. It is better to have a child in service to the higher families than it is to send them below.\"\n\n\"I see. I had assumed the servants were hired.\"\n\n\"Servants aren't mistreated by any means. They are well cared for, fed well, have nice rooms, plenty of free time and leisure opportunities. They fare much better than those below, to be sure. How old are you?\"\n\n\"Nineteen.\"\n\n\"So young. From below?\"\n\n\"Yes. My sister showed Spark and I was taken and sold to the family here. They are very nice, but it wasn't really my choice.\"\n\n\"Your own Spark must be strong.\"\n\n\"The Seer said it would be.\"\n\n\"You are very lucky.\"\n\n\"So it would seem. Do you have the Spark yourself? I guess you wouldn't be a servant if you did,\" I said dismissing it quickly, embarrassed that I had probably embarrassed him. \n\n\"You say that like maybe you don't feel like it was lucky.\"\n\n\"My sister was obsessed with coming to the upper levels, having the Spark. I never was. I was fine where I was. I will miss it. Miss my family and friends.\"\n\n\"I see. A new place is hard, I guess. With no friends.\"\n\n\"And only here for my power and what I can do for them,\" I agreed dismally. Immediately I knew I had probably said too much and he might tell. \"But they are nice here. A lot nicer than the second level where my sister went. They have been good to me. Still. I wouldn't be here if I weren't going to come into a large Spark. Using people is what they do, even if they are nicer about it here.\"\n\n\"I suppose you are right. Most people don't see it that way, they want to get up to a better place.\"\n\n\"I was fine where I was. There's more up here, but I wasn't really wanting below.\"\n\n\"How far down?\"\n\n\"Seventh.\"\n\n\"Wow! That's a long way to come. Most would have been more than excited to get out of there.\"\n\n\"Like I said, I have family and friends there. What good is a Spark if it is someone else's to use and not my own.\"\n\n\"You put a lot into perspective. What's your name?\"\n\n\"Hailene Travis. Yours?\"\n\n\"Most call me Hank.\"\n\n\"Most?\"\n\n\"Nickname, not my given name. I hate my given name.\"\n\n\"I see. Are you going to get in trouble for being back here?\"\n\n\"Nah. Someone is probably looking for me, but I mostly do my own thing. As long as I do my job I am mostly left alone. I'm like you. Too many people isn't really my thing. How long until you are twenty?\"\n\n\"Just under a year.\"\n\n\"Emily have you married off yet?\"\n\n\"Not yet. She is trying to see if Ian can... stomach me.\"\n\nHe snorted. \"How does Paul feel about that?\"\n\n\"He is very nice and accommodating.\"\n\n\"Yeah. Accommodating. That is the right word for Paul. He accommodates too much if you ask me. Watch Ian. He may seem nice and act nice, but he has a dark streak a mile wide. Say it won't work for you if you have to, Emily will see you with someone else.\"\n\n\"I don't think that will work,\" I said fearfully, sitting up.\n\n\"No? Why not?\"\n\n\"Because I don't think he has any issue being with me at all. He... he has done so twice now. Once with Paul and once without.\"\n\nHank leaned back, looking thoughtful. \"Did he hurt you?\"\n\nI pressed my lips together, refusing to answer. \n\nHank looked at me, studying my face in the dim light. \"Have you been to Melany? Has his seed caught?\"\n\n\"What? No. It is too soon for that.\"\n\n\"It's Spark, she would know. She is attuned to birthing babies and feeling them. She's felt a life flutter as early as an hour later. Come on, I will take you to her. We can see.\"\n\n\"What's the point?\"\n\n\"If it hasn't caught yet, you can pick another,\" he said with a shrug. \"Emily would let you as long as you aren't already seeded.\"\n\nI stood up, feeling both hopeful and terrified. Hank took my hand and I had a brief fond memory for Simion and how he hoped to have me. I realized I was thinking of this man the same way. He seemed nice like Simion. He had to know that while Emily might let me marry a close cousin or nephew, it would never be a servant.\n\nHe knocked on a door at the end of the servants hall, then hardly waited before going in. \"Hello Melany, you remember me, right?\" he asked quickly. \"Hank?\"",
        "Melany blinked at him as if confused, trying to remember. She gave a nod, her old eyes going from him to me. \"She need checked?\" she asked.\n\n\"Yes, but not for mine. For Ian Lancaster.\"\n\nMelany gave a nod and held her old, gnarled hand out. I stepped up and took it and Melanay grunted. \"No. No seed has took hold. She does hold a great deal of pain there though, someone's been rough with her.\"\n\nI yanked my hand back, blushing. \n\n\"Thank you, Melany. Can... you not speak of this to anyone?\"\n\n\"Of course. Perhaps you will bring me more of those soft peaches in a tin?\"\n\nHank grinned. \"Of course, you need only send word when you are out and I will bring more.\"\n\nHe pulled me out of her room and down another hall. He slowed once we were away from her room. \"Do you wish to marry Ian?\" he asked.\n\n\"I do not have much choice. Kitsume has my sister and she will hurt her if I do not do as I am asked to here.\"\n\n\"Emily will let you marry another if you say Ian doesn't suit you.\"\n\n\"Will she? Are you sure?\"\n\n\"Yes. You need only say it.\"\n\n\"What if she gets upset?\"\n\n\"She won't. Emily is very understanding and she knows that not everyone can put up with Ians mood swings.\"\n\n\"You sound like you know her well.\"\n\n\"You live somewhere long enough, you know everyone well. I grew up here.\"\n\n\"Why are you being so nice? You have no stake in this.\"\n\n\"You really aren't used to people doing something for nothing?\" he asked, then blushed. \"I suppose I am not really doing it for nothing.\"\n\n\"You know she won't let me marry anyone... who isn't high up on her family tree, right?\" I asked softly.\n\nHe gave me a grin then and he looked more boyish than the serious man from the storeroom. \"Am I that transparent?\" he asked.\n\n\"No, but it was the only possible explanation.\"\n\nHe laughed and nodded. \"Fair enough. But I also happen to know that her nephew Andrew is a nice kid. And his nephew Adrian is a good guy too, if a little homely. If you don't mind that.\"\n\n\"I don't. As long as they wouldn't hurt me.\"\n\nHe grinned again, flashing me a smile. He was handsome for an older man, and very nice. \n\nHe led me down a larger hall and caught another servant coming out of a room. \"Helen! Can you ask Emily to go to her rooms, please? I need to speak to her privately.\"\n\n\"Of course,\" she answered, then turned to hurry away. \n\nHe took me down a larger hall to a huge room. He sat me in a plush chair, then went to stand near a table with drinks. \"Would you like something?\" he asked.\n\n\"No thank you,\" I answered anxiously. It was fine for him to say she wouldn't be upset, but people showed a different face to servants than they did to people like me. They wanted to be seen as nice, but what if I made her angry? I was sick with worry as I sat there.\n\n\"Be easy, Hailene,\" he said softly.\n\nI tried to give him a smile, but I knew it was more like a grimace.\n\nEmily came in, followed by her husband and she smiled at Hank and went to him, hugging him close. \"Where have you been! You have been gone for weeks! You shouldn't worry your mother so!\"\n\nI jumped up warily, looking at Hank. She had another son? Had he been toying with me this whole time? Getting me to say awful things about his family and then bringing me to tell them?\n\n\"I see you have met Hailene!\"\n\n\"I have. She is very different from other girls, isn't she?\"\n\n\"She is, it would seem,\" Emily answered, smiling brightly. \"Can I take that to mean that Ian will not need to try and... conform?\"\n\n\"If that is her wish,\" Hank said with a nod in my direction.\n\nI shook my head, confused. \"Is this a game? Were you toying with me? Pretending to be my friend and then ambushing me like this?\" I asked angrily.\n\nHe laughed. \"No, Hailene. My name is Bennett, I told you I hated my given name. Above they know me as Hank. I think you assumed I was a servant because of where I was, but that is where I teleport deliveries of food to. I never said I was a servant. Don't be upset, I wasn't out to fool you. I had no idea who you were or why you were there. So, if you think I might be a better match than my brother...?\"\n\n\"Her Spark is unknown,\" Emily said quickly.\n\n\"I know, mother. It is something I have never cared about anyway, you know that.\" he looked back down to me and I looked up at him, trying to read his face. \n\n\"I was told you were gone all the time,\" I said softly, buying time.\n\n\"A personal choice, one I could change if I wished. If I had a reason to stay home.\"\n\n\"You do not know if I would be a good enough reason,\" I said, blushing.\n\nHe grinned and moved closer. \"I am usually a good judge of character. You are enough like me that I think we are a well suited pair.\"\n\n\"And all the things I said about being used?\"\n\n\"A talk for another time, but I am aware of your feelings. I am starting to feel like you would rather not match to me?\"\n\nI shook my head quickly. \"I didn't say that! I'm just... confused. I... yes. Of course I will pair with you, Bennett.\"\n\nHe winced. \"Hank. Bennett is such a prigs name and it doesn't suit me at all. I am glad, Hailene. Mother, you may see to the arrangements then,\" he said softly. \"Hailene, would you like to walk with me back to the formal room? I am trapped here now, at least for a while and everyone is going to want to corner me. I may as well get it all out to everyone at once so they don't all corner me individually.\"\n\nI smiled at that. I felt the same way. I gave him a nod and he led me out, Emily beaming happily and Mikkael grinning. I saw then, that Bennett looked a lot like his father. Ian looked like his mother and that was why I did not see the similarity between the brothers. \n\nWe followed Emily into one of the large halls, full of people sitting around and laughing and talking. She stepped up onto a platform that looked like it was there specifically to make announcements from and everyone immediately went quiet, looking to her.\n\n\"Bennett has finally agreed to settle himself and pair with Hailene. There will be a wedding soon!\"\n\nThere were cheers and yells and I looked around in shock. Below, a wedding was a simple thing, the couple stepping up to the magistrate with their close kin behind them and the magistrate saying a few words. A paper was signed and that was it. Usually you went to work once it was over. Leona had always talked about how weddings were grand affairs above, but I hadn't believed her until now.\n\nBennett moved closer and put his arm around me, resting his hand on my shoulder lightly. He led me to one of the long chairs and sat down next to me. People sat close to us immediately, including Emily and Mikkael after Emily spoke to a servant who took off at a trot. Emily sat next to me and took my hand in both of hers, beaming at me happily. I understood it immediately. I had brought her wayward son home to her.\n\nPeople talked at us and to us and around us. There were so many conversations happening, I felt completely lost as I sat wide eyed, one hand trapped in his mother's hand, the other trapped in his. \n\nAfter half an hour, my anxiety had reached a panic inducing level and I was almost ready to excuse myself and run.\n\nIan came running into the room, his face red and panting as if he had been running. His eyes went to me and Bennett on the couch and his mother stood up.\n\n\"No! Mother, you asked me to take her and marry her!\"\n\n\"But now you don't have to?\" Emily said in confusion.\n\n\"I want her! I didn't know I would, but I do! I want to marry her! Tell them, Hailene! We were together this morning and Paul didn't even need to be there! I told you I could be with you, that I wanted to be with you! I sent off to have your wedding dress started and I was going to make the announcement myself at dinner!\"\n\nEmily put a hand to her heart as Bennett stood up, pulling me up with him. \"What about Paul?\" Bennett asked softly.\n\n\"What about Paul? I can't marry Paul and he will still stay close to me! Hailene, tell them!\"\n\nI looked around, alarmed at all of the faces looking to me. \"It is true, he did say this morning that he thought he must like girls too,\" I conceded.\n\n\"See?\" Ian demanded of his mother. \n\nI looked up at Bennett fearfully and he patted my hand. \"So we both want Hailene. Then the choice is hers.\"\n\nAgain, a hundred eyes were on me and I felt panic taking over. \"Bennett,\" I whispered, hiding my face from Ian.\n\n\"Hailene!?!\" Ian said in shock. \"After last night? After this morning? Everything was so perfect! Wasn't it? Is it Paul?\"\n\n\"No,\" I answered quickly, shaking my head, tears starting to fall. \n\n\"Ian, she has made her choice,\" Bennett said calmly, pulling me tight against him and rubbing my back gently.\n\n\"Hailene! I was willing to change everything for you!\" Ian said angrily. \"And it may not even matter. We have been together twice! She may already be seeded!\"\n\n\"She isn't,\" Bennett said quickly. \"I already took her to Melany, before I brought her to see mother.\"\n\n\"WHY?\" Ian demanded. \"Why now? Why would you come home now and ruin this for me? You can have any girl in the world that you want, but you take the one girl that I am actually attracted to! The one girl I could actually have a family with!\"\n\n\"Ian, that is enough!\" Mikkael said gruffly. \"The girl has made her choice.\"\n\n\"We share a similar temperament,\" Bennett answered his brother. \"We met and spoke, she is like me. I do not want just any girl, I want a girl who is like me. Who would be fine staying out of the social circles and just being in each other's company. She isn't grasping and clawing and cloying, she isn't blinded by the opulence around her. That is what I have been waiting for, someone who can actually love and not someone who wants my power and family name.\"\n\n\"I want love as well!\"\n\n\"Paul adores you. No one loves you more than Paul does.\"\n\n\"I know he does, I mean a girl I could love and have kids with!\"\n\n\"Enough!\" Mikkael said again, swiping his hand through the air. \"Ian, to my office, now. Bennett, take Hailene to your mother's study. Emily, speak to the girl.\"\n\nBennett led me away as the room buzzed with whispers. Emily hurried ahead of us and led us into another room, smaller with a more formal setting. Bennett sat me down, patted my hand, then left me alone with Emily.\n\nEmily gave me a smile that looked apologetic. \"I am so sorry sweetheart,\" she said softly. \"I know this is all just a mess, isn't it? I just wanted to speak to you alone and ask you to think this through carefully with no pressure from anyone. No one will coerce you or be upset, you may choose any way you wish.\"\n\n\"But I cannot choose to just go home?\" I asked softly.\n\nShe looked shocked that I had asked that. \"Well... no, sweetheart. I'm sorry. Is that truly what you wish? Did you have a man you loved below?\"\n\n\"No. Just my mother and friends. She is alone now, my mom. It's fine. I know I have to stay here and do my duty. I choose Bennett. He is right when he says we have similar temperaments I think. Neither of us like crowds or people much. I am sorry to say that, but it is the truth.\"\n\n\"I see. I do hope you find happiness here, Hailene. I have been hoping Bennett would find someone and settle down. I wouldn't even have cared if she had a lesser Spark, so long as he were happy and home. He will see you happy I think. It does very much surprise me about Ian though. You must have made quite an impression for him to cause such a scene?\"\n\nI didn't know what to say, I could only blush as I looked around the room in horror. \n\n\"At any rate, you have made your choice and I am pleased. I hope you will be happy as well, Hailene, truly. Come. I will let Bennett take you and show you to your new rooms.\"\n\nI followed her out and Bennett was waiting in the hall, leaning on the wall. He grinned at me when I came out and stood, offering me his hand. Like he already knew I had chosen him.\n\nI took his hand and he led me away, but not far as he pushed into rooms that were smaller and less ornate than Ians had been. Simple even. He led me to a chair, then brought me a glass of water. He sat next to me, facing me and looking down at me a moment before reaching out and stroking my hair back away from my face.\n\n\"I guess I lucked out in more ways than one,\" he said finally. \"You are a lovely little thing, aren't you?\"\n\nI felt my face heat as I looked down. \"May I ask how old you are?\" I asked, the only question I could think of to change the subject.\n\nHe barked a short laugh. \"Twenty eight. Late to pair up, I know. Not for lack of my mother trying, I promise you that. Does my age bother you?\"\n\n\"No! No, I just wondered.\"\n\n\"Anything to change the subject? Do you dislike that you are beautiful?\"\n\n\"I'm not. My sister is pretty, I am just different than what you are used to.\"\n\n\"You don't really believe that, do you? You are beautiful, Hailene. Accept the compliment and accept that you are truly a lovely creature.\"\n\n\"I am more than a face.\"\n\n\"Of course you are. More than a beautiful face, a lovely body and an exceptional Spark. I know that. But it is still nice to look at you, My Petite Beauty. May I kiss you, Hailene?\"\n\nI looked up at him then, surprised. \"I... um... Those close to me call me Hai.\"\n\nHe chuckled, then slid his fingertips over my cheek. He leaned closer, taking hold of my shoulder and gently laying me back on the long chair. He leaned in and kissed me softly, a sweet, gentle kiss and I sighed in a happy sort of relief. \n\nThat should have been my first kiss. \n\nI opened my eyes and looked up at him, his eyes looking over my face as he gave me an amused smile. \"I know my brother did not, but I will wait until we are wed to take you to my bed. As it should be. But still, I would like to kiss you as I please. May I?\"\n\nI nodded slightly and he smiled again.\n\n\"I must also confide... I know it is not allowed down here, to take another to your bed unless you are wed or planning to wed, until after you have been touched and tested for Spark. It is normal to come to your marriage bed not having been with another, but I have been with other women. Up top. Nulls all. More than a few. Does that bother you?\"\n\n\"No? Should it? I have been with your brother. Twice.\"\n\n\"How badly did he hurt you?\"\n\n\"He was just very rough, he wasn't trying to actually really hurt me,\" I began, then remembered the way he had squeezed my breast painfully, trying to hurt me. I cleared my throat. \"I am fine.\"\n\nHe gave me a sad nod. \"Once a month or so, Paul leaves him. He always comes back, always. We don't know why. Ian means well most of the time, but sometimes the dark overshadows the light.\"\n\n\"The healers cannot help him?\"\n\n\"No, it is a malady of the mind. Up top they have medicine, chemicals that can help with that sort of thing, but unless I take him up to see how much of what to give him, it wouldn't help.\"\n\n\"Do they still fear us up there?\"\n\n\"They do not remember us up there. At all. References of us are chalked up to superstitions and folk tales. Allegory.\"\n\n\"But it wasn't even that long ago!\"\n\n\"For us. For them, it was many generations back. The Spark extends our lives, so we remember more than they do. They live short lives and forget quickly. A single year down here is the same as twelve above.\"\n\n\"Is that really true?!?\"\n\n\"It is. I can see someone above and go back a few months later and they will have aged that many years. Have kids, family. It is a strange thing.\"\n\n\"I cannot imagine! What a short life they must live? How do they do it?\"\n\n\"They know no other way, they are reckless and wild, destroying things above as if they have no care for who comes after. For a while, the above held a fascination for me, but lately I like it less and less. Still, I must go above often. Will that bother you? My cousins are not as strong as I am, their Spark weaker. They can only do so much. If we are to stay in trade and power, I still have to go above often. I will not linger or stay away anymore. I will stay home as often as I am able. Will that be enough for you?\"\n\n\"Of course. I will be fine. Soon enough I will have my own job to do, whatever it is.\"\n\n\"So you will. I will try to be home as often as I can, doing my work and not lingering. Hailene...\" he began gently, then leaned in and kissed me again.\n\nIt was still soft and sweet and tender. Affectionate... loving even. I felt warm to my toes and I knew. I knew in my heart he was a good person, a good man. He was like me and enjoyed his peace and solitude. I smiled up at him when he pulled back, my heart feeling full and happy. I had not felt this way with Ian, only nervous and determined to do as I must no matter what. \n\nI realized then that I had felt something akin to this before. With Arik as we waited on the Seer and with Simion. I had felt they were both good men, honorable and kind and I had felt a kinship to them. Things I had not felt about other people. \n\n\"You look as though something has come to mind, My Petite Beauty.\"\n\n\"Why do you call me that rather than my name?\" I asked curiously.\n\nHe smiled. \"It is a habit from above. So many names all the time, changing rapidly, it is hard to remember. They use pet names and nicknames often, so I picked up the habit. It suits you as well. Hailene is a lovely name and it suits you, I am sorry if I have given offense.\"\n\n\"No, I simply wondered. I do think I prefer my name, or Hai to those who are close to me.\"\n\n\"My mother has taken quite a fancy to you, did you know that?\"\n\n\"I think I do, actually,\" I said thoughtfully. \"I can almost feel how much she likes me. More than her usual kindness. I don't know why.\"\n\n\"You were willing to try. With Ian I mean. You could have refused, gotten upset, but you didn't. You actually tried and didn't make a fuss at all. You would have gone through with it.\"\n\n\"I didn't really have a choice. Kitsume has my sister and if I don't comply, she will end her once she has a child born with the Spark. She admitted as much.\"\n\n\"Not just that,\" Bennett said sadly. \"You are sweet and gentle in nature, just like her. She can see that. Anyone can see that. And you brought her son home to her.\"\n\n\"Yes, I felt that as well. She was very pleased that you would be coming home. She cares for you a lot, doesn't she?\"\n\n\"Of course, I am her son,\" he laughed. \"I know it's hard on her, having two sons who would not and could not marry a girl and settle down. Give her grandchildren. But now that I have you and Ian has apparently decided he also likes girls now, maybe she will get her wish soon enough.\"\n\n\"Are the other great families as nice as all of you, or are the others like Kitsume's family?\"\n\n\"The Ishikawa's have always been... cold. Angry. Reaching higher and higher, wanting more and more. The other families up here are nice enough, but there are political undercurrents, always. So long as one is in power, the others strive to take their place. It is the same on the second level. And the third, I suppose. The politics and maneuverings are one of the things I hate about this place.\"\n\n\"There are no politics and on the seventh level,\" I said with a sigh. \"It sounds pretty awful. I never understood why my sister wanted up here so badly, the only thing that is better so far is the fruit. I don't care about anything else, it's just a bunch of mean people clawing their way past each other to reach the top, not caring whose backs they step on to get there. Trading people like property, using them as pawns. Killing people when they are no longer useful. It's disgusting.\"\n\n\"I am sorry you were dragged into it. The upside is that once your Spark presents, if it is as powerful as the Seer says it is, you will be in power. You can make changes. Big decisions. Everything. You can do anything you want.\"\n\n\"Is that really how it works? You are powerful, can you make changes?\"\n\n\"I am up fairly high on the board, yes. The twelve highest make up the board. The way I am told the Seer talked, you will be up high as well. Maybe as high as me even. At least high enough to be on the board for sure.\"",
        "\"What can I change?\"\n\n\"Many things. Another time my mother will be happy to sit you down and explain rules and politics and how things work, but just now I do not wish to go into it. Tell me more about you.\"\n\nWe talked. We talked the whole evening and into the night and he held me as we slept right there on the long, cushioned chair he told me was called a sofa. We stayed in his rooms the next day as well and people came to us. I was fitted for clothes and his mother came to see us and tell us about the wedding she was planning for that Sunday. Other people came to his rooms, his family and friends. Not too many, not an overwhelming amount, but enough to know he had good friends and family who had missed him and wanted to meet me and talk to us.\n\nThursday morning came and he got up, kissing me awake. I opened my eyes, smiling as he let go of my hand. \"I have to leave this morning, Hailene,\" he said softly. \"I will be back this afternoon, sooner if I can get things back as quickly as I would like to. Mother said she would come and check on you around noon, ok?\"\n\n\"Ok,\" I answered, pulling him down for another kiss. He grinned and hugged me before letting go of me and disappearing. I sat up, blinking. He hadn't done that in front of me before! I let out a shocked laugh, looking around. That was kind of amazing! Maybe my own Spark would be teleporting and I could go with him to the surface. See all the things he had told me about. \n\nI got up, yawning and went to the small table where there was always fresh fruit and water, grabbing something to eat before going to the smaller couch with the book I had been reading. Reading in his arms was better, but if I had to keep myself occupied until he got home, this was the best way I could think of. \n\nI read all morning until there was a knock at the door. I sat up, knowing it was too early for his mom, there was still almost an hour before noon. Ian opened the door and stepped in, looking me over as he shut the door.\n\n\"Hi,\" he said, walking across the room.\n\n\"Hi,\" I answered nervously, setting my book down. I had a very bad feeling.\n\n\"I wanted to come talk to you,\" he said, sitting down next to me.\n\n\"About?\" I asked, starting to stand as if I was going to go get a drink.\n\nHe caught my arm and held me on the sofa. \"I was thinking. Bennett took you to see Melany too soon. You and I had just been together, there was no way she could see it yet. If... say... I were to argue that point and take you to see her again later today... after he got home. There would still be time to seed you. And we could be together.\"\n\nI tugged on my arm, feelings rushing through me that I didn't understand. \"You don't even want me Ian! You just want someone besides Paul to toy with and hurt! See how far you can push until you can tip them over the edge and how quickly you can real them back in! It's all a game to you, isn't it? You enjoy hurting people! Not just Paul, but others too!\"\n\n\"You shut your mouth!\" he said angrily. \"You don't know anything about me! Bennett doesn't know me either, I don't care what he's been telling you, it's all lies!\" \n\nHe jerked me around on the sofa, shoving me to my back and yanking the skirts of my dress up.\n\n\"Stop!\" I screamed, clawing at his face. \n\nHe laughed and jerked me off the sofa to the floor, rolling me to my stomach. \"I like it this way better anyway,\" he said roughly, pinning me down to the hard floor. \n\n\"Please stop! I will tell Bennett!\"\n\n\"So what? It will be too late then, won't it? Stop fighting!\" he said angrily, shoving my legs apart with his knee. He ripped my underclothes away, tearing them off. I could hear and feel the seams of my dress ripping as I struggled and he held me down, shoving my skirts up my back.\n\n\"Ian PLEASE!\" I screamed, trying to turn or roll, kick or hit him. \n\nHe grabbed a handful of my hair and bounced my face off the floor and I screamed in pain this time as my teeth cut into my lips and my nose exploded in agony.\n\n\"I said stop fighting and shut up!\" he yelled.\n\nI went limp, sobbing as he shoved his pants down, his other hand on the back of my neck. He leaned over me, looking at my face with glazed eyes as he shoved into me. I cried out in pain and his excitement rose to a fever pitch. His free hand took a fistful of my hair and yanked my head back hard so he could see my face better as he rammed into me as hard as he could. His breathing was ragged as he watched me beg and scream for him to stop, he wasn't hearing my words or pleas at all, just watching the pain I was in and getting some sort of high off of it.\n\n\"I am going to keep you, Hailene,\" he whispered. \"You are going to be my new toy. No one else's.\"\n\n\"NOOOO!\" I screamed again, my heart hurting more than anything else. I wanted Bennett! Not this monster!\n\n\"IAN!\" Emily's yell of horror froze Ian where he was as he looked up at the door.\n\n\"Get out!\" he finally managed as she stood there with her hands over her mouth. \"She is MINE! I am making her mine!\"\n\n\"Help me!\" I pleaded desperately, reaching for her.\n\n\"Ian let her go!\" Emily cried, coming in. \"Denny, get Mikkael, now! Josep, come and help me!\"\n\nOne of the men with her took off at a run, the other came in and looked down at Ian grimly. \"If I use my Spark on him, she's liable to get some throwback,\" Josep said to Emily.\n\n\"Ian, get off of her!\" Emily said again, moving closer. \n\n\"Get out! I want her! She was mine first!\"\n\n\"Josep, haul him off of her!\" Emily said, anguished. \n\nThe hulking Josep bent over Ian and pulled him back, but Ian kept hold of my hair, pulling me with them. I screamed, trying to pull away and Emily hugged me against her and tried to pry Ians fingers out of my hair.\n\n\"Let her go!\" she yelled, crying now.\n\n\"Mrs Lancaster, let him go,\" Jesep commanded. Emily let Ians hand go, then Ian jerked and screamed a high pitched scream as his body went rigid. His hand released my hair and I fell into Emily's arms and we both went to the floor sobbing. \n\nShe held me against her, not even caring that I was getting blood all over her beautiful silk dress. \n\nJosep pulled Ian back to the back wall and dropped him on the ground as Ian writhed and mewled in pain. \n\nMikkael came running in with Denny, and more guards behind them. As soon as Emily saw Mikkael, she sobbed harder and Mikkael came to both of us, going to his knees and pulling us both into a hug.\n\n\"What has happened?\" he demanded, his voice sounding lost and full of despair. \"What did he do?!?\"\n\n\"He hurt her! He hurt her and he was... he was... trying to seed her before the wedding!\" Emily managed through hiccoughing sobs. \n\nMikkael gave his son a grim look, then gave a nod to the guards. \"See him locked in his rooms. No one is allowed in or out. No one. Not even Paul. Have Dane teleport meals to him, two a day, no more. Bread and meat, that is all. Servants fare. Do you understand?\"\n\n\"Yes sir,\" Denny said quickly. The four men lifted the still whimpering Ian and carried him out of the room.\n\n\"Liam, get Anita and Solinda. Tell Anita these rooms will need to be cleaned and tell Solinda that our Hailene will need healing. Find Solinda first. Once you find them and tell them, get Charlie, tell him to find Bennett. After that, get Harmony and tell her our Hailene will need a new dress right away. Go now, please hurry!\" Emily said to one of the remaining men.\n\nWhen the man left, she hugged me closer and I could feel her heartache like a physical pain. She already loved me as a daughter and her heart hurt for what she knew she must do to Ian. her heart hurt for how devastated she knew Bennet would be. I shared her pain and cried harder as she hugged me against her chest. Mikkael felt lost and helpless, not knowing what he could do to help and I felt his anguish as well. \n\nWe were all still huddled on the floor when an older woman came hurrying in with another tall guard. She went to her knees in front of me and took my face in her hands.\n\nShe was focused, but also horrified at what she saw. She had helped others before, after Ian had his hands on them. Paul mostly, but girls too. Girls always got it the worst from Ian. Before they had all been servants, I was the first girl he had hurt who had the Spark. \n\nI felt a coolness flow through her fingertips and the pain in my mouth and nose receded, washing away as if it had never been. \n\n\"Thank you,\" I managed, my voice hitching and choking up.\n\n\"You'll be just fine now, girl,\" she said gently. \"I am Solinde.\"\n\n\"I know. How come you never told anyone about the others? All the people he has hurt? All the girls?\"\n\nSolinde went pale, her eyes darting to Emily and Mikkael, but I knew the answer as I asked it.\n\n\"He threatened you. Told you that you would get worse when he found out the first girl came to you. Said he would kill you?\"\n\nSolinde gave a bare nod of her head, still pale.\n\n\"We will speak of this later,\" Mikkael said gently to Solinde. The woman gave another nod, then got up and hurried out. \"Do you think you can get up now, Hailene?\" Mikkael asked softly. \"Move to the couch where you can be cleaned up more easily?\"\n\n\"Yes, thank you,\" I said as he helped me up. He had an undercurrent of excitement coursing through him now and I could feel the same from Emily. Both of them were near to bursting with it.\n\nEmily sat with me, holding my hand as Mikkael paced behind us. \n\n\"Are you alright?\" Emily asked gently. \"Did... did he...?\"\n\n\"No,\" I answered quickly, knowing what she was going to ask.\n\n\"She will still need to see Melany,\" Mikkael said absently. \"Just to be certain.\"\n\nAnother woman came in with a pail and rags and she went straight to the blood on the floor and began cleaning it up. I knew from looking at her, young and pretty, that she was one that Ian had gotten his hands on. I hid my face in Emily's shoulder, feeling so lost and full of despair. I wanted my own mother.\n\nHarmony came in with a dress in her arms and I already knew her. She had fitted me and brought me other dresses to wear as she finished them. She immediately came to me and hugged me and I felt her affection and heartache for me as well, and her heartache for Bennett who would be upset and enraged both. She led me back to the room and helped me clean the blood off of my face and neck and out of my hair, then she helped me change out of the ripped and bloody dress. \n\nI was still shaking and numb as she led me back out to Emily and Emily immediately came to me and hugged me again, stroking my hair back. She held me at arms length to look me over. \n\nSeconds later, Bennett appeared a few feet away, staggering slightly as he spun around, then spotted me and his mother and rushed to us. \"What is it? What's wrong?!? Charlie said it was an emergency? You are so pale! What happened?\" he cried. His stress and worry was so much that I was actually feeling sick from it!\n\n\"It was Ian,\" Mikkael said, coming around to us. \"I have him locked in his room now, but... he thought to seed her against her will so that he would have rights to her.\"\n\n\"He... raped her?!? I'm going to kill him!\"\n\nRage rolled off of him, even as his concern for me shot up as he took me in his arms and held me tight against him. \n\n\"Are you ok? Are You hurt?\" he asked anxiously.\n\n\"Solinde healed her,\" Emily said quickly. \"And the blood has all been cleaned up, so has she, she has a new dress on and she's all clean.\"\n\nBennett stared at the blood still on his mother's dress, then looked back to me, his eyes welling with tears. \"I'm going to kill him,\" he said, his voice choked with pain.\n\n\"He will face trial...\" Mikkael began, but Bennett disappeared, gone.\n\n\"No!\" Emily cried. \"Guards, go now! Stop him!\"\n\nThey took off at a sprint and Mikkael was right behind them. Emily took my hand and pulled me after them, also running.\n\n\"Go! I will catch up!\" I said, pulling away. Her legs were longer. She let go and ran. I stopped, then spun the other way and ran to the main hall, then to the entrance of the huge wing. I shot out the front door and looked around at the crowded square. I had no idea how to go down to the lower levels, so I stopped a man and asked.\n\nHe gestured, annoyed, to a large door with guards on it and I ran to it. \"Open it,\" I commanded with as much authority as I could muster. They didn't question, they were there to keep lower levels from coming up, not to keep anyone from going down. \n\nI ran down the curving, slightly sloping ramp and I knew I wouldn't last long. It had taken an eternity to get up to the first level from the seventh level. Still, I ran as long as I could and I was panting and out of breath when I made it to the third level. Even going downhill, it was exhausting. Still, I went as fast as I could walk, hoping I would make it home before they came to find me.\n\nIt was the small hours of the morning before I finally made it to the seventh level and once I reached our house, I froze. She wouldn't be there. She would be in a singles hall now. Still, I knocked. \n\nThe man who answered looked tired and annoyed, then stood up straight when he saw my dress.\n\n\"The woman who lived here, do you know where she went?\"\n\n\"Singles hall,\" he shrugged.\n\n\"Which one?\"\n\n\"Closest one I reckon.\"\n\nI sighed and turned, yelling thanks as I took off towards the closest one. I didn't have to knock, the front doors to the singles halls were open and I hurried down the narrow corridor looking in the stalls as I went. I finally found her about halfway down, asleep on a thin cushion. \n\nI threw myself on the cushion next to her and hugged her, breaking down all over again. She sat up, confused, then hugged me and held me. \"Hailene! What are you doing here? Look at you! What has happened?\" She was so confused and so incredibly happy to see me, but she was also afraid. Had I been cast down? Had I run away? Was I going to be punished for being here?\n\n\"I needed you mama,\" I sobbed. \n\n\"Oh, my Hailene,\" she said soothingly, kissing my forehead. \"I know that was never a life you wanted! But it must be better, isn't it?\"\n\n\"No. Yes. Some. But some of the people are so horrible!\"\n\n\"Shhh now, my little one,\" she said gently, rocking me. \"Tell me what is wrong. What happened?\"\n\n\"No. No, I just want you to hold me!\"\n\n\"Oh, my Hailene, that bad?\"\n\n\"It's so different up there mama, the people... some are just monsters.\"\n\n\"Is... Is Leona alright?\" she asked hesitantly.\n\n\"Yes, Leona is fine,\" I answered. I would make sure she was. \"She was placed all the way up in level two! Her babes will be born with the Spark.\"\n\n\"And you, my little one?\" she asked, pulling my face back to look at me.\n\n\"Level one,\" I whispered.\n\nShe nodded, smiling. \"I always knew you were the one born with the Spark,\" she whispered. She had always known. She had known since the day I was born, I had felt different to her. I could feel all of that in her. \"Your husband... is he why you ran?\" she asked softly.\n\n\"No mama, I'm not married yet, but he is a good man. It wasn't him, not at all. And his mother and father are wonderful people too, his mother has been so kind to me. But I have caused a divide between the brothers and one of them, he is not very nice at all. They were fighting when I left and I am afraid.\"\n\n\"Shh, my little one,\" she whispered, rocking me. She held me close and I hugged her tight and got all of my tears out until it was morning and other women were getting up and getting ready for their shifts.\n\n\"Here! She's here!\" Mikkael yelled, appearing at the mouth of my mother's stall. Bennett came running up, skidding to a halt as he grabbed the wall to swing into the stall.\n\n\"Hailene!\" he wailed, going to his knees and reaching for me. His hands stopped short, fluttering slightly as if he were afraid of rejection. I lunged into his arms, hugging him and burying my face in his neck. He stood up, holding me as he did.\n\nI finally lifted my face. \"Mama, this is Bennett and his father Mikkael. This is my mother, Rhonda. Bennett is the man I am intended to marry.\"\n\n\"Hailene!\" Emily cried, catching up to her husband and son. She hurried to me and put a hand on my shoulder as she looked up at me in Bennett's arms.\n\n\"Mama, this is Emily, Emily this is my mother, Rhonda.\"\n\nMy mom bent low, bowing to them as they looked at my mother with unease. \n\n\"It's lovely to meet you,\" Emily said lightly, but there was something... other in her voice.\n\n\"Very pleased,\" Mikkael said politely.\n\nBennett looked around, and I felt anger welling up in him and that made me nervous. What was wrong? Was he angry I came? No... it was something else. Outrage.\n\n\"People should not have to live like this!\" he said angrily, looking around. \"It is dark and dirty and crowded and they all look so malnourished and hopeless! No one said it was this bad down here!\"\n\n\"I told you what it was like down here,\" I said softly.\n\n\"But it didn't sound this bad!\"\n\n\"It was never bad in her eyes,\" my mother said softly. \"She has never seen it the way others have. She never wanted out like others did.\"\n\n\"We have to do something,\" Bennett growled, outrage oozing out of him.\n\n\"Of course,\" Emily said softly, also looking around. \"We will, but we can do nothing just this moment. Sweetheart, take us home?\"\n\nEmily took Mikkael's hand and put her other hand on Bennett and before I could ask to hug my mom again, we were back in the main hall of their quarter of the 1st level.\n\nThere were people everywhere and the entire place was a flurry of activity and I turned, hiding my face in Bennetts neck sleepily. I sighed, wishing I could have said goodbye.\n\n\"Hailene,\" Bennet said softly. \"You have not slept, have you?\"\n\n\"No.\"\n\nI felt how concerned he was, how upset he was.\n\n\"Did you really kill him?\" I asked.\n\nHe felt shocked to his core. \"No! Of course not. No, but I may have beat him bloody a little before they stopped me. Did you really think I would do that?\"\n\n\"You said you would and you were so angry!\"\n\n\"Shhh, my Hailene. You are exhausted. I am taking you to bed to rest. Denny, please get Melany and have her make something to ease Hailene's distress.\" He turned from everyone and walked me back to his rooms and I just laid against him feeling empty and gutted. He felt stressed and worried, anxious. \n\nHe set me out on his bed and untied my laces on the back of my dress, then laid me down and pulled off my shoes. He moved next to me on the bed and pulled a blanket up to my chin and I could still feel how stressed and worried he was. \n\n\"Hailene, my Petite Beauty, you look so lost. Please look at me?\"\n\nI looked at him and reached up to stroke his cheek. \"I will be alright, I am just exhausted. Sorry I left like I did, I just needed to see my mama.\"\n\n\"Don't even mention it, Hailene! Of course you needed familiar arms. I shouldn't have left you the way I did, my anger was the wrong reaction. I should have stayed with you, you needed me and I left you. I'm sorry.\"\n\n\"No, your anger wasn't misplaced. I'm just tired, I promise I will be fine after I sleep a little.\"\n\n\"Hailene,\" he said brokenly, \"my heart is breaking for you.\"\n\n\"I know, but truly, I will be fine. I am ok. It was a long night and I have not slept at all and neither have you. We should both sleep. I am sorry I was so much trouble.\"\n\n\"You weren't, do not speak of it again. You were not at all.\" It wasn't the complete truth, he had been sick with worry. Afraid that I had run away from him and I was trying to hide from him and his family. He had been afraid they might have to bring me back against my will and he hadn't wanted to have to do that, the relief when I came to him and he understood that I had just needed my mother had been enough to put him to his knees if he hadn't already been there.\n\nMelany came in, carrying a small vial of amber liquid. \"Here you are, young lady,\" she said gently. \"And I was told to test you again? Is that right, Bennett?\"",
        "\"Yes,\" he said sadly. \n\nI saw Emily hovering in the doorway, watching worriedly and expectantly as Melany handed me the small bottle, then wrapped both of her hands over mine. She felt worried at first, then relieved, then suddenly excited and elated. She let me go, schooling her expression, but I could still feel how excited she was and how badly she wanted to get Emily alone to talk to her and fear crept through me. Was I pregnant? Was that what she was so excited about? No, I was sure it wasn't. It was something else entirely, something about me.\n\nI sat up, ready to follow her out, but Bennett caught my shoulder as Melany and Emily left. \"Drink it, My Petite Beauty,\" he said gently. \"Lay down and rest.\"\n\nI sighed, but did as he asked. I was too tired to go and follow them anyway. I would find out soon enough. I laid down after he took the empty vial from me and he pulled me close and held me as I drifted off.\n\nI woke briefly after a couple of hours as he was easing out of the bed, seeing Emily leaning over him and waking him. I went right back to sleep, but remembered it the moment I woke later, alone in the room.\n\nYawning, I got up, still so tired I could probably sleep the rest of the day, but now it was nagging at me. What were they hiding from me? I stopped the first person I found in the hall and asked them to help lace my dress up the back, then went in search of Bennett and his parents.\n\nI found them in his father's office, along with several other members of the family who were high ranking. They all went quiet when I walked in, looking at me in surprise and wariness. They all felt wary too, and unease seemed to wash over me.\n\nBennett hurried to me. \"Hailene! You still look so tired, what's wrong?\" he asked, taking my arm and leading me to a sofa to sit with me. He felt tense, so incredibly tense and anxious now. He loved me as much as ever, but he also felt full to bursting with a fear that something bad might happen soon.\n\n\"What is happening?\" I asked, looking around.\n\n\"We are discussing Ian and the trial,\" Bennett's cousin, Julia said with a smile. She was lying. An outright lie right to my face.\n\nI looked at Bennett. \"Is that what you are talking about?\" I asked him, looking him in the eye.\n\nHe looked down, blushing. \"We are discussing family business,\" he said softly, talking around the truth but not lying. \"Now that you are here, we can discuss more though. Unless you need to rest some more?\"\n\n\"No, I'm fine, I want to know what is going on.\"\n\nHe nodded and turned to his parents across the room who looked a little spooked. \"Very well,\" Mikkael said with a smile at me. \"I am glad you seem to be feeling better Hailene.\" Not a lie, but still a cover for something. \"We will talk about the trial for Ian and what should be done.\"\n\n\"Is a trial necessary?\" Emily asked softly. \"So public and... humiliating? I saw him myself. I wish to move on to sentencing with no trial. There is no need to drag this out and hurt Hailene even more than she has already been hurt. Or me.\"\n\nMikkael nodded. \"I had hoped you would feel that way. Hailene, does that suit you?\"\n\nI gave them a small nod.\n\n\"Bennett?\" Mikkael asked.\n\n\"That is fine, but make sure his punishment is more harsh than confined to his rooms,\" Bennett said darkly, hugging me closer. Anger was surging up in him, hot and overwhelming. If he had his wish, he would teleport him above, to the other side of the world where he could never find his way back.\n\n\"Then we will discuss punishment,\" Mikkael said, pacing.\n\nSuggestions were thrown out and I sat looking at everyone. No one was actually thinking about punishments at all save for Bennett and Emily and Emily was mostly fretful that the chosen punishment would make it so she could never see her son again. He wasn't a good man, but he was still her son and she wanted him close enough to go to.\n\nI stood. \"Some of these are harsh, and after what he did to me, and what has come to light about what he has done to others, he perhaps deserves harsh. But I would like to also remind everyone that he has a sickness of the mind. If I could make a suggestion, I think he should be removed from his luxury and put into a servants room. A cot, a place to wash, a cupboard for clothes and a few small things. Allow no guests save a visit through a small window made in the door. Food and items like books might be passed through the same door or teleported in. Further, I think it would benefit everyone if Bennett or one of the others who could teleport were to bring down books about maladies of the mind and someone were to read them and become well versed in that area. Bennett says there are doctors above who specialize in nothing but. I think we could benefit from a similar system. I know there are some few who are born with lesser Spark, or one that is not as beneficial. Perhaps they could be induced to learn things like this and provide a valuable service besides just Spark within the family line. I have no wish to see him physically harmed or impaired, or humiliated publicly. Instead let us learn to help him.\"\n\nEmily stood. \"I agree and think that is just. What he did is unforgivable, but seeing to a solution is a better answer than simply punishing.\"\n\n\"For how long?\" Mikkael asked.\n\n\"Until a Seer can touch him and know he will never do it again and knows he is healed,\" I answered.\n\nEmily gave me another nod. \"I agree with this solution.\"\n\n\"Servants fare as far as food,\" Bennett said, standing next to me and putting a hand around my shoulders. He thought his brother was getting off far too lightly. \"And no other creature comforts beside books and things that can better him. No wine or alcohol at all, or any other concoctions that can alter his state of mind. Let him have a clear mind to consider why he is there.\"\n\nI gave him a nod, as did his mother. \n\nI felt him hesitate and reconsider before he spoke again, then he forced himself to say the words. \"And Paul is not allowed to go and see him.\"\n\n\"What?\" Emily asked. \"Why not?\"\n\nBennett's face reddened, but I knew what he wanted to articulate but not sat in front of his mother who probably wasn't aware. I spoke up. \"He abused Paul, quite a lot. Paul would do anything for him, he would bully him into it if Paul hesitated. He would bring him anything Ian wished, no matter what it was. Ian is bad for Paul and Paul is far too good to Ian. I agree with this, for Paul's sake especially. Let him move on and find a better partner.\"\n\nEmily gave a nod, but she was horrified. She also felt more pressure knowing she would be the only one going to see Ian and she was hoping he wouldn't try and coerce her into breaking the rules for him. She wasn't sure she was strong enough to see him in pain and not do something about it. \n\nI looked at her. \"If it is easier, take Mikkael with you,\" I said softly.\n\nShe looked at me wide eyed, then nodded slightly, looking spooked and feeling very wary. A zing of excitement seemed to course through the room as everyone looked at each other.\n\nI turned and looked up at Bennett. \"Is there more to speak about? I am hungry.\"\n\n\"It is dinnertime!\" Emily said brusquely. \"Everyone! Let's go out to the dining hall and sit and eat. We will speak no more of this after we prepare a room and see it done. Come Hailene, sit by me at dinner? You and Bennet can switch places this once.\"\n\nI let her lead me out, but her mind was racing as she chattered absently. What was wrong with her? What was wrong with all of them?\n\nThe dining hall was already full, we were coming late to the table, but no one seemed to mind or notice, like it was a normal thing for people to arrive early or late. \n\n\"Elliott!\" Emily said happily to a new face at the main table. \"You are finally home! Hailene, this is my nephew Elliott. He is the only family who is gone even more than Bennett is topside! He can teleport as well and is second only to Bennett in teleportation Spark. Elliott, this is Hailene, Bennett's soon to be wife come Sunday.\"\n\nThe man stood, smiling as he reached across the table to take my hand. \"She is stunning, Bennett! Someone finally caught your eye, huh? It's lovely to meet you, Hailene!\"\n\nMy hand touched his for a split second before I jerked away with a gasp and threw myself backwards. \"No! No! You kill them! You kill so many of them! Just girls! So young, only eighteen and nineteen! They were so afraid! You TORTURE them! You slice their stomachs open and shove their intestines down their throats so they choke on themselves in excruciating pain! You are a MONSTER!\" I wailed, breaking into sobs. The words tumbled from my mouth with no way to stop them.\n\n\"She is insane!\" Elliott said in shock, looking around. \"Cousin, what is wrong with your wife?\"\n\nEveryone was staring at Elliott like he had sprouted horns. He looked around a moment, then licked his lips nervously and disappeared. Gone.\n\n\"They were so young!\" I said again, shaking my head, the words just falling out. \"So scared! And they hurt so much! All because they were allowed freedom and he wasn't, he was forced to live below like a creature in the dirt. He hates them, all of them. He kills as often as he can in new and different places. Always a young girl. He likes to see their terror. He won't stop. He won't ever stop. He has to be stopped!\" I wailed, then fell into Bennetts arms as I sobbed. When had he come to the floor next to me? I couldn't remember. \n\nHe felt terrified and amazed and angry, all at the same time. Terrified that his close kin had turned out to be monsters two days in a row, terrified there were more lurking around me who might hurt me. Amazed at what had just happened, at me. Angry that Elliott had slipped away so quickly and no one had thought to take him in hand.\n\nIt hit me then, why everyone was being so wary around me. What had just happened. I had touched Elliott and seen everything. I had been feeling things from people for days, ever since the Seer had touched me, but it had felt so slow and natural, I hadn't even noticed. \n\nThey had noticed. They had seen it and they knew. They knew I was a Seer. A Seer who could feel them without touching them.\n\nI looked up at Bennett, knowing why no one had said anything. Knowing why he was so nervous and afraid, wanting Sunday to come and go. \"I know I don't have to marry you on Sunday,\" I said softly. \"I know my Spark presented early, from the Seers touch and my own stress. I know that my Spark is more than yours and your family wants to tie me to you before I realize that I have a choice now. Bennett... it doesn't change anything. I still choose you.\"\n\nHe let out a half sob of relief as he pulled me in close in a hug so tight I could hardly breathe. His relief was overwhelming, his love poured into me and I was caught up in his tears of joy.\n\nHe finally loosened his grip enough to bend down and kiss me, then he stood with me, smiling. Everyone was frozen into place, watching us. They had not heard me, I was too far away.\n\n\"Denny, gather every cousin who can teleport and every guard with the ability to take out Elliott. Pair them up and go and hunt down Elliott. Bring him back here. They should be able to trace his Spark with their own,\" Bennett said loudly. \"Mom, dad, summon the council.\"\n\n\"Bennett, are you sure?\" Mikkael asked anxiously, glancing at me in Bennett's arms. \n\n\"Yes. Summon them immediately, no moves to hold. I am calling an emergency summit.\"\n\n\"Son...\" Mikkael began.\n\n\"Are you questioning my right to call a summit?\" Bennett asked softly, dangerously.\n\nMikkael did not answer, instead he turned and left as Emily's cheeks turned pink. Bennett was embarrassed as well. He had never had to pull rank on his father before.\n\nBennett hurried me to his rooms and helped me twist up my hair and laid out the nicest dress that had been brought for me. He hesitated a moment, looking me over and I knew he wished he could stay and help me. Touch my bare skin. See me. I couldn't place the feeling radiating off of him, but it was close to need.\n\nI turned and looked down, gesturing to the laces along the back of my dress. He undid them, then hesitated until I shrugged out of the dress and let it fall in a puddle around my feet. I picked up the other dress and he helped me pull it in, his fingertips lingering and gently gliding over bare skin. I could feel how torn he was. He wanted to turn me and kiss me and lay me in the bed, but he also knew we were in a hurry. He couldn't call an emergency summit of the council and then be late for it. I pulled the dress on and moved my long hair so he could lace up the back. He was trembling as he did and I was starting to feel the need he felt. The need to feel his hands on my skin and his lips on mine. My pulse sped up, my heart racing and thumping as he moved closer...\n\nI shook my head and tried to stop it, stop letting his feelings in. I needed to learn how to control this! I couldn't let what everyone else was feeling take over my own feelings, how did I shut it off?\n\nI turned as soon as he tied off the laces and rushed out the door, my face too hot, knowing he would be able to see what I had been thinking if he saw me. He caught up quickly and took my hand, leading me out front to the large doors to the square.\n\n\"There is a round pavilion within the plaza,\" he said softly as we walked. \"It is where the council meets. There are twelve at the table, but more will come in and sit to watch, only those high in Spark who may some day take a seat. They will sit in the chairs around the outside of the room. When we go in, you will stay with me as I sit down at the table, ok?\"\n\n\"Ok,\" I answered, picking up on his nervousness.\n\nHe brought me into the bright room and it was already mostly full, the table having only two seats open. Bennett and his mother took the two open seats, next to Mikkael. I stayed next to Bennett and everyone at the table stared at me, and then Bennett, all of them going wary and some of them angry.\n\n\"Bennett Lancaster, you called this summit,\" a man said, standing. He was short with a pinched face and he looked furious. He was furious. \n\n\"I did,\" Bennet said, leaning on his elbow casually. \"The counsel hierarchy has just changed.\"\n\n\"She's still a child!\" a woman spat, standing up next to the short man.\n\n\"Do you deny that you can sense her Spark?\" Emily asked.\n\n\"Since when has age had a bearing?\" another woman asked, leaning forward.\n\n\"We should have been warned!\" the man said indignantly.\n\n\"She is not the only reason we are here,\" Bennett said calmly. \"Johanna, please take a seat on the wall. This is Hailene, first among us now,\" Bennett said, standing and holding the chair for me to sit in. Everyone moved down to fill the seat that the angry woman had vacated.\n\nThe woman still hovered. \"What is her Spark? Is it even useful?\"\n\n\"Come to her and she will tell you,\" Bennett said, sitting next to me. \n\nThe woman marched up to me angrily and stopped, crossing her arms as she looked down at me haughtily. I reached out and touched her, trying to get past all of the indignant anger rolling off of her.\n\nI felt myself smiling. \"It's a girl! A beautiful girl and she will have the spark as strong as you!\"\n\nThe woman jerked back, clutching her belly. She wasn't even showing yet.\n\n\"You are worried that Bryon is cheating on you, you have seen all the signs but you are afraid to ask. Afraid if you ask it will be over, but you would rather pretend it wasn't happening than have it be over.\"\n\nThe pinch faced man stood up. \"Johanna! I would never cheat on you! You're pregnant?\"\n\n\"I only just found out this week!\" Johanna said feebly. \"So why do you keep staying out so late and why haven't you been coming to our bed as often? She's a Seer! She is a strong Seer! Let her touch you!\"\n\n\"Johanna!\" he said in exasperation, then came around to me and held out his arm.\n\n\"He isn't cheating on you with a woman, but he is sneaking out. His mother lives on the third level and she is dying. He is too sad to share a bed with you, he doesn't want you to know he isn't as strong as you think he is.\"\n\n\"Bryon!\" she cried, running to him and hugging him.\n\n\"Well...\" a woman across the table said lightly. \"That answers that then, doesn't it? What else did you wish to address, Bennett... I mean, Hailene? Since you are first among us now.\"\n\nI blinked and looked around in shock. I was what? And Bennett had been first? And he had no resentment at all! Of course he didn't, he hated being a part of this as much as I hated the thought of it.\n\nBennett sat up. \"I want to address the state of the lower levels.\"\n\nThere were more arguments than I imagined there would be about making the quality of living better down below. It infuriated me how much they argued about giving up a few things to make sure those below had more.\n\n\"Things have been working well for generations!\" A man yelled angrily. \"We get one single Mole up here with a Spark and suddenly you want to change everything! We shouldn't have to give up anything we have worked so hard for!\"\n\n\"YOU haven't worked hard!\" I yelled. \"YOU are a sack of puss living in decadence on the backs of those you have brought in to make your family stronger! People from lower levels who work and toil to make things for people up here! You have a stong Spark, yes, but how useless is it? How useless are you? You sit and make decisions for people who do the real work and you have never lifted a finger in your entire life! All you do is connive and backstab and try to raise your head higher than those around you! All of you! There are two people sitting at this table who are actually useful! The rest of you sit around and ACT important because you have a power you were BORN with! That woman there has worked, if not very hard, healing those around her who are important enough to heal. Even though she is strong and could do more, she refuses to go down a single level to help those who might need more than curing a little bump or bruise! And Bennett actually works like a machine, keeping his family and those they trade with in supplies, even if it is only supplies for the upper levels and very...\"\n\n\"That is enough from you!\" A tall older man yelled. \"You will not come up here and demand change based on your narrow world view!\"\n\n\"I WILL! Do you know why I will? Because your servants live better than entire families do on the seventh level! I have been in a servants room and it was bigger than my entire home that my whole family lived in! My sister and I shared a cushion that was smaller than a servants cot and my mother slept on the ground! We ate two small meals a day of a watery meal that we tried to spread out between us! The three of us subsisted in an entire week on what one of you people eat in one meal! Just because you are all greedy and think we are less than animals below! We deserve to live in filth, with no food, no light, no decent clothing, unless one of you arrogant assholes thinks you may GAIN something from us? I am not asking you. I am telling you. It will end. People deserve respect, they deserve food, they deserve not to die at the age of 25 to blacklung because no healers could be bothered.\"\n\n\"She is right,\" Bennett said, standing next to me. Emily stood next to him, then Mikkael, though his face was red and he was feeling unsure. \"Things need to change. I saw how bad it is for myself. It's crowded and everyone is so sickly and it's dark and dirty. I wouldn't let our worst criminals live down there. We have the ability to clean it up, to make it better. To make all of it better and we need to.\"\n\n\"Or what? And what can she even do, really? Tell people their fortunes? Tell us each other's secrets? It's not as if her Spark is useful!\" The tall man across from me said angrily.\n\n\"Oh, no,\" I said quietly. \"That is not all I can do.\" \n\nI circled the table and he took a nervous step back, but I laid hands on him and drained his Spark away completely.",
        "The woman next to him screamed and everyone moved away from me quickly. Not Bennett. He came around to me and put a hand on me as the man wept on the floor.\n\n\"I can give this to whomever I like,\" I said softly. \"I can drain the Spark from the useless and give it to anyone. Did you know we each have in ingrained, inborn ability, even those of us below? I can find those with useful talents and give them the Spark. Take it from the useless people like you. Let us see then how quickly you wish to change the system.\"\n\nI turned and walked towards the door, then paused. I turned back around, looking at all of them. \"You,\" I said, pointing to a nearby man. \"Bring me my sister. She is on the second level with Kitsume and her family. You will know her when you see her. Bring her to me. Also, a guard named Simion.\"\n\nI turned and left after the man gave me a terrified nod.\n\nBennett followed close behind me back to their hall and Emily and Mikkael were close behind him. I sat down, feeling sad now and leaned on Bennett. Emily sat next to me and took hold of my hand, stroking my hair. \n\n\"I knew you were special. You were the change we needed here,\" she said softly. \n\nI gave her a tired smile, then something occurred to me. I looked at her sadly, then turned to Mikkael. \"Please bring me Ian.\"\n\nMikkael looked grim, but he nodded.\n\nThe terrified man returned first and I stood, smiling at Leona as she followed the man, Simion behind her. Kitsume and her husband were behind them and I smiled grimly. I had sort of hoped they would come as well. \n\nI hugged Leona and I knew she was terrified. Kitsume had threatened her with her one single friend's life, a servant.\n\nI held her at arms length and looked her over. \"Kitsume is not going to hurt Anna,\" I said softly and was gratified to see Kitsume's eyes bug out. I felt for Leona's talent and sighed. Transformation. I should have known. Still, for her I would do this. I filled her with enough Spark that she would be able to transform and I saw Kitsume and her husband's eyes go wide.\n\nI turned to them and smiled warmly and held my hands out to them. They rushed to me and I could feel the greed and hope pouring out of them even before I touched them. I blocked out what they were feeling and ripped away their Spark as quickly as I could and they staggered to their knees, gasping. Kitsume let out a horrified wail. \n\nI went to Simion and touched him, feeling for his talent. I smiled happily and filled him with as much Spark as he could hold. \"Bennett can show you how to teleport and tell you how to help with what we are about to do for the lower levels.\"\n\nBennett stepped up and held a hand out to Simion, shaking his hand. \"Bennett Lancaster.\"\n\n\"Simion?\" he answered breathlessly.\n\nI looked at Bennett. \"I am serious about this. I will give the Spark to anyone with a useful ability and drain it from everyone who cannot or will not help.\"\n\n\"I understand,\" he said softly, \"and you are right to do it.\"\n\n\"But?\"\n\n\"Both not my parents?\"\n\n\"I think they are both willing to help, inasmuch as they can and they have always been good people. They can help organize and direct. I will put your mother in charge of gathering together those with no useful spark to clean up, starting with the seventh level and then up. I will speak to her about how things will be reorganized and redone. There will be no more tiers, every level will be equal. We will have enough teleporters to make sure there is enough for everyone and those with Spark will work for all and not just one family.\"\n\nBennett smiled. \"Hailene? Marry me? Not Sunday, right now? I will send Dane for your mother and your sister is right here. Marry me right now?\"\n\nI smiled up at him, then nodded.\n\n\"Hai?\" Leona asked softly.\n\nI turned to my sister. \"Sorry Lee, this is Bennett. Bennett, my sister Leona. And Simion was a guard with Kitsume's family who was nice to me and took care of me. Lee. You are not pregnant and I intend to take your husbands Spark.\"\n\n\"He isn't my husband! They decided he didn't need to marry me to get me with child,\" she said, red faced. \n\nI nodded. \"If you wish to wed, then there are some good men here.\"\n\n\"Hailene!\" Ian panted, guards holding him and dragging him in as if he had fought them. \"Hailene, I am sorry! I shouldn't have touched you, I'm sorry!\"\n\nI turned to Ian. They hadn't told him what was about to happen to him, he was beside himself with anguish over what he had done. For now. His mood was like quicksilver, flashing and changing. I went to him and touched his hand softly, draining his Spark and he looked confused for a moment, then panicked as he struggled. It was too late. I stepped back and nodded at the guards. \n\n\"That is your Spark?\" Leona asked wondrously. \"To give and take Spark?\"\n\n\"It is, but I can also See. Lee, would you stand with me as I wed?\"\n\nLeona grinned, her eyes shining. \n\nI turned back to Bennett and I felt my heart go warm all over again. His eyes were so full of love and I could feel it coming off of him. His fierce pride and his adoration. \n\n\"Tomorrow is soon enough to change the world,\" I said softly, going to him. \"The rest of tonight is for us.\""
    ],
    "authorname": "gabthewriter",
    "tags": [
        "class warfare",
        "fantasy",
        "magic",
        "non-con",
        "nonconsent",
        "reluctance",
        "romance"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-spark-6"
}