{
    "title": "Sapphic Serenity Ch. 06",
    "pages": [
        "Disclaimer and Author's Note: All characters portrayed in sexual activity are eighteen years of age or older. This story was a request from a reader and dedicated to them. They know who they are and I hope you all enjoy it. Feedback is welcome, flames will be laughed at, I promise. \n\nChapter 6 - Sharing Is Caring \n\nMorning kissed my face gently through my window and I stretched languidly. My body still felt like last night's sex, which was not unpleasant but rather used and fulfilled. I massaged my breasts to help myself wake up and giggled as I replayed the events of the previous night in my head. The wonderful sex where he fucked me and I fucked him or we fucked one another, the filming of the debauched events and how sticky and violated my poor sheets were. \n\nAnd then seeing mom fucking Claudio... \n\nWhen our eyes met and she kept my gaze with hers until after she'd cum with her lover. It was an amazing and wonderful gift. My mom was so perfect... \n\nThe aroma of strong coffee tickled my nose. Then the lovely smell of eggs, pancakes and bacon. Mom was making breakfast. Normally I'd just head downstairs naked or in my underwear, but it occurred to me that Claudio was probably still here and a little modesty might be in order. I slung on some panties and a bra, covering up with my plush robe, tying it shut and heading out of my room. \n\n\"Morning, mom!\" I said happily as I bounced down the stairs and into the kitchen, passing the living room and vaguely seeing a figure seated on the couch, doubtless Claudio, waiting while mom made breakfast. \n\n\"Good morning, darling!\" she said cheerfully, turning to smile at me from her place at the range. She was also wearing a plush robe, concealing but hinting at her incredible figure. She leaned back against the counter and turned the water in the sink on to make noise. Knowing why she'd done this, I came up to her and pressed my body to hers, melting into the open-mouthed kiss we now shared. Our arms wrapped around one another and robes parted just enough to let our legs rub and panties press together. \n\nWe couldn't be seen from the living room. \n\nWe sighed through the kiss, tongues tangling, relieved to be in one another's arms again, though we'd been apart for less than a day, each with our own lover. This, right here, this just felt right and complete. Hands clasped and fondled as we expressed our delight to see one another. Finally we stood back a little and breathed, with mom fanning her face for a second. \n\n\"Whew...\" she said quietly, smiling. \"A few more seconds of that and I'd have just taken you right on the dining table, company or no.\" \n\n\"Don't know whether I'm disappointed or not,\" I replied, patting her ass through her robe. She giggled and shut off the water, the noise of which had concealed our intimacy. \"Sorry I'm late getting up. It was a busy night.\" \n\n\"I'm sure,\" she said, smirking. \"I've no doubt that he kept you busy. So how was... what is his name, anyway?\" \n\nI paused and frowned at her question before going scarlet. \"Oh shit. I still don't know...\" \n\nMom leaned against the counter, unable to contain her mirth, her giggling on the verge of becoming outright laughter. I put my hand over my mouth as the magnitude of my shamelessness crashed over me like a tsunami. \"Oh my God, mom. I'm such an unbelievable slut.\" \n\n\"Maybe,\" she said, managing to right herself and smirking at me, her eyes dancing with amusement. \"But don't worry, I've done that a few times myself, even recently. You're my slut and I love you in all your slut glory.\" \n\nNow it was my turn to lean against the counter and I buried my red face in my hands, trying to conceal my embarrassment. She turned back to the range and the coffee-maker, pouring me a large cup of extra-strong French roast. \"This'll make you forget. Go sit and keep our guest company while I make breakfast.\" \n\nI nodded and made my way toward the living room, my mom calling out behind me. \"Claudio, do you remember my daughter, Bronwen?\" \n\n\"But of course,\" he said, standing and nodding his head as I entered the room. \"A lovely young woman, you are very fortunate, bella.\" \n\n\"Oh, trust me, I know,\" she said agreeably. \"She'll be joining us for breakfast, okay?\" \n\n\"Most certainly,\" he replied, gesturing for me to sit. \"Please...\" I sat opposite him on the couch, my legs tucked underneath me. I sipped at my coffee and smiled at him pleasantly. \n\n\"Mom says today's your last day here and now you're heading back home?\" I asked, admiring his handsome Mediterranean features. He had olive skin, dark eyes and curly dark hair. \"Are you from the south of Italy?\" \n\nHe smiled charmingly. \"You see my dark skin. Di si, my father was Sicilian, from Palermo. My mother, Saints rest her, was from Firenze and lighter than father and I. I grew up in Firenze.\" \n\n\"I've always wanted to visit Florence,\" I mused, taking another sip of my coffee. \"Well, Tuscany in general, but I've been told Florence is the prettiest city in Italy.\" \n\n\"You've been told correctly.\" Claudio confirmed, smiling. \"Many people say Venice or Rome, but these, while charming, are mostly overpriced tourist traps now. It's difficult to get true, good Italian food in the capital.\" \n\nI giggled at the thought. \"That'd be like not being able to get a greasy burger downtown here, it sounds silly.\" \n\n\"Forse, but nonetheless true, I lament,\" he said, drinking some of his coffee. \"Your mother has said you two might visit Europe this year since you have taken off from school.\" \n\n\"That's our plan,\" I agreed, nodding. \"Lots of universities have offered to take me, even give me scholarships, but I'm not sure what I want to do yet.\" \n\nHe laughed. \"Be careful coming to Europe, then, lest you become enchanted of our ancient universities and ateliers. Did you know that the University of Bolgona is the oldest extant university in the western world?\" \n\n\"Really?\" I wondered. \"I thought Oxford was.\" \n\nHe laughed again. \"The Inglese, they would have you think that, but Bologna was chartered in 1088, Oxford not until 1096.\" \n\nI smirked. \"Well, eight years is eight years when it comes to records.\" \n\n\"So what did I miss?\" mom asked as she swished into the room and sat in a chair near Claudio. She mimicked me and kept her legs tucked under herself, which exposed her lower leg but also turned her torso so that her robe, which was still tied, opened a little bit up top, giving a hint of what lay beneath. \n\n\"Claudio was just graciously warning me of the enticements of the universities of Europe,\" I replied, smiling over my mug. \"He said that if we intend to go visit the Old World this year, I should be aware of this.\" \n\n\"Did he tell you he is from Florence?\" mom asked. \n\n\"Yes indeed he did. If we do go, it would be nice to have a friendly guide.\" \n\n\"Oh, ladies, do not give me such credit,\" he said humbly. \"I am just a fitness instructor, not a tour guide or historian.\" \n\n\"Still, it would be nice to know someone in the region,\" mom pointed out. \"Keep us from getting taken advantage of, wouldn't you agree?\" \n\n\"Certainly,\" Claudio answered. \"As you wish. Should you visit Firenze, I will make sure you have a reputable hotel and honest guides. I give you my word.\" \n\n\"Bene,\" mom said cheerfully. \"Alright, everyone, breakfast is served. Follow me.\" \n\nWe went to the dining room and Claudio sat between us. Mom served us a lovely meal, complete with more coffee and mimosas as a finish. We sat around, chatting happily and drinking coffee. It was mom's intention to drive Claudio to the airport later this afternoon, since he had no particular plans before then, and knowing mom, she wasn't finished with him yet. \n\nMom and I swiftly put the plates and debris away and then we retired to the living room again, where we talked some more. \n\n\"I was initially surprised to not see you last night, but your mother said you were... occupied with a date of your own?\" Claudio mentioned. \n\nI nodded. \"We went to my room and stayed there so we were out of the grownups' way,\" I laughed. \"I'm pretty good at keeping my company busy.\" \n\n\"A lucky young man, then.\" Claudio responded. \"No doubt you get this from your mother, who is a gracious and lovely host in every conceivable way.\" \n\nMom made a show of blushing. \"Oh, stop,\" she said, fanning herself. \"I'm pretty sure that my lovely daughter is already a better lover than I am.\" \n\n\"Mom!\" I giggled, blushing. \n\n\"Well, why don't we let Claudio decide?\" she suggested in a very reasonable voice. \"I would certainly trust to his judgment, now that I know his quality between the sheets.\" \n\nI raised an eyebrow at her, but she seemed to be quite serious. It suddenly occurred to me that mom was still very horny and wasn't about to leave me stranded, even if it meant that Claudio found out about she and I. I decided mother knew best and went all-in. \n\n\"So what do you say, sir?\" I purred, looking at Claudio and letting one of my long legs slide down to the floor, exposing my supple skin. \"Would you be the honourable judge?\" \n\nTo his credit, Claudio smiled. \"I am not worthy, but I happily acquiesce to your suggestion.\" \n\nWithout hesitation, I now stood up and undid my robe, letting it fall away and revealing my body. He drank in the sight of me, clearly pleased with what he saw. I approached him slowly, kneeling down in front of him and gently parting his legs. I reached in and undid the belt of his robe and spread the garment. He was well-toned, with a swimmer's build and an admirable six pack of abs. My hand gently came to rest on the front of the boxers he was wearing and I felt an appreciable cock beneath. I gave him a light squeeze and then began to pull his shorts down slowly. He lifted his hips to accommodate and soon I had them off and tossed them to the side. \n\nHe was already thickening and getting aroused as I took his shaft in my hand. I leaned in and planted gentle kisses along its length before taking the head in my mouth. I hummed gently and went down the shaft, relaxing my throat and getting down to the base of his cock. I could feel his hands in my hair, caressing as I pleasured him. It thrilled me to think that this cock had recently been in my mom's pussy and was now in my mouth. \n\n\"Isn't she an absolute pleasure, Claudio?\" mom asked from the chair she sat in. I looked at her sideways, noting that she had parted her legs slightly and one hands had slipped down beneath her panties, her fingers playing over her pussy as she watched. \n\nClaudio murmured his agreement as I began to bob up and down slowly along his cock. My finger and thumb made a ring around his girth and squeezed gently as I sucked on him, just like mom had instructed me. He got hard quickly, a decent size too. He was circumcised, which I always consider a plus. I knelt between his legs, my head moving up and down on him while he and my mom watched intently. \n\nMy pussy was getting wet again and I rubbed at it with one hand, teasing myself, knowing I'd soon fuck this man and feel his cock inside me. It was exciting to think that he'd just been with my mother the night before, deep inside her, cumming in her. Claudio's head fell back against the back of the couch as he let me do my thing, just enjoying the sensation. I looked sideways at mom and winked. She understood what I intended and quietly shed her robe, now clad in just her lingerie. She got off her chair and crawled up beside me, her dark eyes fairly glinting with desire. \n\nI moved aside slightly and she leaned in, her tongue now sliding along the side of Claudio's shaft while my mouth teased the throbbing head. He shuddered and looked down in confusion for a moment before closing his eyes again, enjoying the double treat. We teased and licked his cock together, our tongues touching and tangling around his length. We kissed around the head, moaning and humming in unison to drive him wild. \n\n\"Mmmm, would you like to taste her, Claudio?\" mom asked, smiling up slyly at him. \"Find out how much she tastes like me?\" \n\nHe simply nodded, apparently beyond words. While mom took over sucking his cock, I slowly moved him into a lying position on the couch. Once he was prostrate, I moved over his head, placing my hips just above his face. I was still wearing my panties, but they were rather wet with my excitement, since I had been teasing myself while giving him oral. \n\nI lowered myself down and he kissed and nibbled at my panties and my pussy beneath. It felt nice and warm, sending tingles through me. He gently grasped my thighs while I put one hand on the back of the couch. I watched mom suck his dick in fascination. Though I was now sexually comfortable with her, I hadn't seen her this up close and personal with a man before, at least, not in a long time, since I used to spy on her and dad as a kid. \n\nI pulled aside the sticky fabric of my panties and he snaked his tongue along my pussylips. I lowered myself down a little more, allowing him to push inside my wet cunt. He wiggled and probed inside me, clearly deft at pleasuring a woman with his mouth. He sucked gently on my clit and made me moan. He reached up and helped me strip off my panties entirely before pulling me down onto his mouth, beginning to devour me hungrily. \n\nI shuddered and bit my lip, grinding down onto him with a dreadful eagerness. I laid down his body and worked with my mom on his cock. We took turns sucking on it while the other licked at the shaft or kissed his sac gently, fondling it. Our hands both took hold of the shaft and pumped it while we kissed hungrily, swallowing one another's tongues. \n\n\"Are you ready to fuck my baby, Claudio?\" mom purred, squeezing his cock. He moaned his response and she helped me clamber down his body, facing his feet and kneeling on either side of his hips. She took hold of his manhood and teased it against my slick lips and pulsing clit. It was an exquisite torture as I keened in desperate need. I wanted him inside me. \n\nFinally, she held his cock in place, bracing the head against my greedy hole. I pushed down on it, taking him inside in one long stroke. He filled me and I took a deep breath as I reached the bottom. Mom smiled up at me approvingly and petted my pussy. I nodded and began to move up and down, letting mom watch closely as his Claudio's cock penetrated me. \n\nHis hands reached up to cup my breasts from behind, massaging them or pinching the nipples. I shuddered and ground on him, letting him know that it felt great. He was slightly thicker than my lover last night had been, their lengths more or less comparable. I loved the stretch he was giving me, the way his cock curved ever so slightly to the left and rubbed along a sensitive part inside me. \n\nMom was leaning in and kissing at my clit and his cock as it slithered in and out of me, causing Claudio and I to groan. She would use her thumbs to gently pull my lips apart so she could see him clearly while providing me with yet another delicious sting from the stretch. She flicked my clit with her deft tongue or nibbled on it with her lips. Her fingernails would sometimes scrape gently along my upper thighs, making me want to cry out loud at her gentle torture. \n\nClaudio lifted his hips slightly, pushing deeper inside me. I pushed down hard in response, wanting as much of him inside me as I could manage. Mom just about made me screech when she managed to wiggle a finger inside my cunt, just in front of his cock. It must have felt good for him too, because he groaned loudly at the increased pressure. She stroked the finger along my upper wall, pressing the fingerpad up and poking below the thin skin over my puss. \n\n\"Claudio!\" I rasped as I squirmed up and down on him. \"My mother... please, fuck my mom...\" \n\nHe moaned his agreement and I pulled myself off him and squirmed backwards until I was straddling his face again. Mom stood and positioned herself over his cock and then sank down, taking him all the way in. She sighed in bliss and began undulating her hips. I shuddered and gasped as he ate my pussy, lashing it with his tongue. \n\nI leaned forward and pressed my lips against mom's. We kissed each other hungrily and sloppily, faces glistening with one another's desire. She fondled and squeezed my tits as she fucked Claudio, the three of us writhing and squirming together heatedly. She pinched and tugged on my nipples while I pulled on her lower lip with my teeth. \n\n\"Mommy...\" I murmured through our kiss. \n\n\"Mmmmm, baby,\" she moaned back. \"Feels good?\" \n\nMom now slowly stood and pulled me up, removing me from Claudio's mouth. She helped him stand and then laid back on the couch, her legs spread wide. She opened her arms and beckoned me to them. I crawled on top of her, nestling my body into hers, our breasts squashing together and pussies kissing. I spread my legs wide like her and she smiled up at Claudio. \n\n\"Picked a target, lover...\" she cooed. \n\nClaudio knelt between our legs while we kissed and fondled one another. Mom moaned into my mouth as he pushed inside her. I could feel his cock beneath me while he fucked her, sliding in and out of her slippery tightness. I squirmed myself down onto her, our pussylips mingling as his hard shaft pleasured her. Our tongues wrestled and teased, hands squeezing and caressing. \n\nI gasped as Claudio pulled out of mom and slid inside me without warning. Mom pressed her hips up, increasing the pressure. I attacked her mouth fiercely with mine, driven to knew heights of bliss as I was pinned between them. God, why would anyone ever want to do anything except fuck? \n\nClaudio's hips were thumping against us, his hands gripping my ass cheeks, thumbs spreading my cheeks and teasing my tight little knot. My whole body was shaking. My pussy slithered and mingled with mom's, our clits dueling, breasts rubbed and squashed, mouths kissed in hunger and all the while, Claudio kept fucking us in turn. \n\nClaudio was a considerate enough lover to let mom and I cum first, and we certainly did. Pinned to each other, writhing and grinding, we screamed into one another's mouths as we came. My fingers gripped mom's breasts so tight I almost scratched her. Mom's nails raked along my back as she shuddered beneath me. We bathed our hips and Claudio's in our sticky ecstasy. \n\nMom then gently moved Claudio away and allowed me to get off of her. We knelt together in front of him and began kissing and swallowing his cock greedily while our bodies pressed to one another. Tongues frolicked and trailed along his length or lips wrapped around his glistening, throbbing pole, dainty hands massaging the length. \n\n\"Mmmmm, time to cum, lover,\" mom cooed, looking up at him, her hand twisting gently around the base of his shaft while my mouth bobbed back and forth on him. \"Give my baby and I everything you've got.\" \n\nOne of Claudio's hands moved to the back of each of our heads to steady himself and he moaned loudly, his hips shuddering. He came hard, his pearly essence shooting mom and I directly in the face before she pointed his cock down at our tits, which we squirmed together as he baptized us. We pumped and sucked him dry, causing him to sit back wearily on the couch before we turned our attention to one another, kissing in a cum-hungry frenzy. We licked one another's faces clean, then our sticky tits, barely able to control ourselves. \n\nWe rested for a while, mom and I tangled on the floor while Claudio was spread out on the couch. We slowly got to our knees and gently kissed our Italian guest all over. Mom suggested a quick soak in the hot tub to see if that rejuvenated us. We took him by the hand and led him outside. He looked around at our backyard, expressing appreciation for the privacy it offered. Mom giggled and confirmed that it did indeed give us plenty of opportunity to be naughty without worry. ",
        "We slipped into the hot tub, with mom and I on either side of Claudio. We snuggled to him, caressing and fondling his body while he put his arms around us. We kissed his chest or one another, just enjoying the time to relax before mom took my hand and placed it on his cock beneath the water. She smiled at me wickedly while we began to massage him, causing his member to swell and slowly come back to life. Mom now slipped under the water and between his legs, taking him inside her mouth. \n\nI leaned in and kissed him while she sucked on his cock, my hands tracing over his smooth, defined chest. I bit at his shoulders and trapezius while mom broke the surface to take a breath before going under again. Soon he was hard and ready to go, which was fortunate, since mom and I were feeling a deep and burning need in our pussies for more fucking. \n\nMy sex drive had always been high, but since mom and I had begun fucking it was completely out of control. Sex was all I seemed to be able to think about, especially with her. Everything made me tingle and thinking of her for more than three seconds caused me to get damp and my nipples would grow hard. I'm suspecting the same was true of mom. \n\nMom now crawled out of the jacuzzi and laid on the side with her legs dangling in the water. She spread them wide, exposing her pussy. I dutifully knelt on the seating ledge, burying my face in her sweet slit while pushing my behind in the air. Claudio got behind me and took hold of my hips, teasing his cockhead against my pliant lips. I moaned in desire and then sighed as he finally slid inside me. He pushed in and out, slowly at first, but picking up speed to give me a good, steady fucking. I groaned into mom's cunt as I licked her, smothering her clit with my tongue. She went rigid for a moment as hissed as I slid my long middle finger into her tight ass. \n\n\"Ohhhhh, baby,\" she moaned, squirming her hips. \"You make mommy feel so good...\" \n\nI ground back against Claudio's cock as he fucked me, my tongue slithering around inside my mother. We all writhed against one another, a snaking chain of pleasure in the water. My breasts bumped against the edge of the pool. I buzzed my lips against mom's clit, causing her to gasp and shudder. \n\n\"Claudio,\" I panted as I worked myself against him. \"We should... totally double fuck my mom...\" \n\nHe nodded and I disengaged myself from him, hopping out of the tub and wiggling inside to get one of the strap-ons. I retrieved the one I thought would be best and headed back out, noticing that Claudio was keeping mom busy by fucking her. She sat on the edge of the whirlpool while he stood between her legs, pushing in and out. Mom looked like she was in heaven. \n\nI stepped into the water and fastened the toy around my waist. I watched mom and Claudio go at it for a moment before getting her attention. \"Okay, mom,\" I said, smirking. \"Where do you want me?\" \n\n\"I want Claudio in my ass,\" she panted, her fingers flexing on her shoulders as she spread her legs wider while he fucked her. \"And you in front of me...\" \n\nClaudio stopped fucking her long enough for her to stand up and he then sat on the edge of the whirlpool, his cock standing out proudly and his feet in the water. Mom then settled back against him, slowly guiding his tool inside her ass. She groaned as she slid down onto him, hooking her legs around his thighs, spreading herself wide for me, presenting herself shamelessly. \n\nI knelt in front of her for several seconds, lapping at her cunt to make sure it was good and wet, but also to watch as Claudio's cock slid in and out of her ass. It was wonderful to watch, but finally I stood and nestled myself between their legs. I teased the blunt head of the strap-on against her lips, sliding it up and down for several seconds before pushing it in. Mom groaned loudly as my hips met hers, our breasts squashing together. We wrapped our arms around one another and kissed greedily as I began to pump back and forth inside her, knowing she was already pinned to Claudio and not going anywhere. \n\nMom grunted and gasped and moaned as we fucked her, not attempting at all to match rhythms with one another and keeping her from settling into a comfortable pace. We were going to wreck her together, leave her a trembling mess of pleasure. It thrilled me to think that at some point mom would want revenge. \n\nOur tongues tangled and our tits squirmed as I fucked her, feeling each and every rib along the fake cock's length as it slid in and out of her tight tunnel. I couldn't feel it, but I knew Claudio's cock was invading her ass and stretching her, causing her to keen loudly. Stuck between us, she could do nothing but surrender to the overwhelming pleasure. \n\nAt least I thought so. \n\nMom had been flopping almost like a rag doll between us, her eyes closed as she rode along, but then they snapped open and she looked at me, her eyes flashing with unreal desire. I had no idea where that had come from. She took my cheeks in her hands and kissed me savagely, her tongue plunging into my mouth. \n\n\"Yes, baby, fuck mommy,\" she hissed as she began grinding back against us both, squirming her pussy into me even as she rode up and down on Claudio with a vengeance. \"Fuck me hard, darling, make me fucking scream...\" \n\nI may have been stunned by her eagerness, but I did as I was told, pumping back and forth inside her cunt harder than before. I leaned in and began kissing and biting that spot on her neck and she gasped and shuddered, driven wild by my eagerness to please her. She wrapped her legs around me and began grinding madly, taking me as deep inside as she could. Claudio groaned as the angle of his cock in her ass changed suddenly, squeezing him tighter. He pumped harder, driving deeper inside her. \n\nMom grappled onto me, holding me tight until only my hips could move, pumping back and forth like a piston. She squirmed against me like a fiend, her fingernails moving over my skin. She panted in my ear, biting at it in her eagerness. Her hot breath drove me wild, making me fuck her harder. \n\n\"Mommy's gonna cum, baby,\" she moaned. \"She's gonna cum for you and Claudio! Oh God..\" \n\nShe stiffened and threw her head back, a strangled cry coming from her throat as she tried not to scream so loudly that people in town could hear her. Her hips bucked furiously, even as Claudio pulled her down tight against his lap and I pushed in as far as I could. He groaned in her ear as he began filling her tight ass with his cum. Mom's pussy squeezed so tight that she almost popped the dildo out of herself. She was in such pleasure that she was almost weeping, seemingly, still clutching me to her desperately. \n\nFinally, though, she went limp, her head resting on my shoulder. She hardly seemed to be moving and if it weren't for her heartbeat jackhamering against my breast, I'd have thought we killed her. Claudio seemed spent as well, resting against her back, his head turned to the side and his eyes closed. He was still deep inside her ass, which twitched and squeezed, milking the rest of his cum from him. We stood and sat still for some time, just breathing heavily. Even I was spent and I hadn't cum. \n\nMy God, was I wet, though. \n\nI finally pulled slowly back, letting Claudio gently take my mom's weight and rest her back against himself, still impaled on his cock. Mom shivered as I pulled the dildo out of her, her head still flopped to one side and her eyes closed. I smirked, knowing I'd truly take her over the edge. I couldn't wait for her to reciprocate at some point. \n\n\"Bella, you seem tired,\" Claudio said to her, causing me to giggle. \"Will you live to see me to the airport?\" \n\nMom drew a deep breath. \"Not if I do that again before we leave,\" she said finally. \"Holy shit, you two nearly killed me.\" \n\nShe steadied herself against her Italian lover's thighs and planted her feet in the water. Slowly, carefully, she eased herself off his cock, moaning as she did so. He popped out of her and she hissed and giggled, squeezing her knees as she kept her balance. She sighed and stood up, her arms out to the sides as she wobbled a little. \n\n\"If I keep cumming like that, I'm gonna be in a wheelchair before I turn thirty-five,\" she muttered. \"How's that for a story?\" She turned and leaned against the side of the pool, taking more deep breaths. I sidled up behind her and hugged her close, moving my hips back and forth a little so the top side of the strap-on slid along her pussylips. \n\n\"You little minx, you nearly killed mommy,\" she purred as she wiggled back against me, smirking. \"Trying to inherit our fortune early?\" \n\n\"I'm pretty sure you're more than slutty enough to take anything I can throw at you,\" I replied, fondling her tits. \"I just hope I'm up to the payback when it comes.\" \n\n\"I hope so too, baby,\" she agreed. She smiled at Claudio. \"So, my Italian stallion, is my daughter not a treat?\" \n\n\"She is wonderful, just like you, tesora,\" he replied, nodding. \"She is, how would I say it... un donnaccia magnifica.\" \n\nI blushed and giggled. \"He just said I'm a wonderful slut, mommy.\" \n\n\"Yes he did, baby, and that's a compliment, for sure.\" she agreed, turning me around and taking me gently by the shoulders. She lead me into Claudio's arms and I nestled back against him, my ass against his cock. Mom pressed herself into me and we kissed lovingly. I'd say it was fairly obvious that Claudio had no problem with our incestuous relationship. Heaven knows, he was certainly benefiting from it. \n\n\"I don't know about you two, but I'm pretty spent at the moment,\" mom said finally, looking at us both but standing close enough to me that our nipples were just kissing. \"Shall we retire inside and drink mimosas?\" \n\nThis met with approval from Claudio and I, so we stepped out of the jacuzzi and toweled ourselves off before heading indoors. Claudio put his robe back on upon entering, so mom and I did likewise, not wanting to make him uncomfortable. We sat at in the living room and sipped our drinks, discussing his plans once he returned to Florence. He had been a fitness instructor back home as well and planned to carry on as such. \n\n\"Guess we'll have to visit whatever gym you're working at when we visit,\" mom said, smiling slyly. \"You'll make sure we get private instruction, right?\" \n\nClaudio laughed. \"But of course, bella. I would shut down the whole gym if necessary, to spend some alone time with my favourite American girls.\" \n\nWe whiled away some more time with idle chatter before mom made lunch, which we were all very ready for, given how much energy we'd expended that morning together. After that, Claudio mentioned that he wanted to visit the duty-free shop at the airport before boarding, so mom insisted that we head out early so he had all the time he needed. He agreed readily and we excused ourselves to go and get dressed for the trip. \n\nUpstairs, we were kissing greedily as we pushed one another up against mom's bedroom wall, swallowing each other's tongues. Hands roved and wandered freely, our previous exertions that morning forgotten now that we were alone. Fingers teased pussylips and clits while we squirmed our boobs together. \n\n\"Mmmm, I wish we had time to fuck, mommy,\" I whispered as we slid our fingers inside one another. \"God, I want to fuck...\" \n\n\"Me too, baby, but it wouldn't be polite to leave Claudio out and I think he's still pretty tired,\" she murmured through our heated kiss. \"So here's the deal. We quietly make one another come right now, to banish the demons and then we head out. Who knows, maybe Claudio will have recovered by the time we're at the airport and he can fuck us some place private, right?\" \n\nI nodded and we simply took one another by the hips and pressed our pussies together, squirming them around, lips mingling wetly as clits pulsed and kissed. Looking into one another's eyes, we girl-fucked one another until we shivered and sighed into one another's mouths, bathing each other's cunts in our cum. We kissed lovingly for several more seconds before cleaning one another off and beginning to dress. We didn't feel the need to be fancy, I simply wore my fashionably ripped jeans and tight shirt from the night before, while mom put on a leather skirt and a nice blouse. Our hair went up in ponytails and simple shoes on the feet. We looked simple but sexy. \n\nClaudio was sitting and waiting patiently for us when we came downstairs. He smiled warmly and hugged us both, thanking us for the most memorable night and day of his time in this country. We took several pictures together before mom hopped into the minivan and I followed with Claudio in his leased vehicle. We drove into town and dropped that off before we joined mom in our van. \n\nThe airport was nearly an hour away in the city so mom and I took turns sitting in the back with Claudio. I smirked as I saw mom with her head in his lap, sucking his cock for the first leg of our journey. I did likewise when it was my turn back there and moaned as I kept him in my mouth. I was tempted to fuck him, but mom hadn't so I resisted for now. \n\nWe made it to the airport and headed to the duty-free shop, where Claudio browsed intently for some time, picking up souvenirs and other items he seemed to think would be hard to procure back home. Once he was done, we procured his ticket and got his luggage squared away, which left us about half an hour before he would be called to board. \n\n\"So ladies,\" he said, smiling. \"I am at your disposal for a half hour. What do you plan to do with me?\" \n\nMom already seemed to have this figured out and we took him to a little-used family bathroom and changeroom in a desolate hallway of the terminal. She locked the door behind us and we almost attacked him as we removed his clothes. Mom kissed him deeply while I sucked his cock to hardness again. Mom and I shed our clothes quickly and I steadied his throbbing tool while mom backed herself onto it, taking him deep inside. They tried to not moan loudly as they fucked, with me kneeling between their legs and licking at her pussy and his cock as it slid in and out of her. \n\nMom and I switched positions then and Claudio fucked me hard, gripping my hips as he did me. Mom made me gasp as she flicked my clit and pressed her finger against my pussylips and Claudio's throbbing cock as it slid in and out of me. Finally, though, he stiffened and grunted as he began to cum, shooting inside me as I squeezed him tight with my own orgasm. He pulled out and mom grabbed hold of his tool, sucking it willfully until he was empty. She then stood and pressed herself against me and kissing me, letting me taste his pearly essence while she let his cockhead just inside herself. \n\nWe cleaned ourselves up and exited the changeroom, trying to look normal, mom and I failing miserably because we could not stop blushing and giggling. We used our cellphones to take lots of pictures together by his gate before his flight was called. Many kisses were exchanged and we promised to come see him when we took our trip to Europe. He smiled that charming Italian smile one last time and waived to us before he was gone. We stood there dutifully for several moments before I turned and looked at mom, who was watching the gate with distant eyes. \n\n\"You okay?\" I asked, giving her hand a squeeze. \n\nShe turned her head and looked at me, her eyebrow raised. \"Yes, why wouldn't I be?\" \n\n\"I dunno, I just wanted to make sure you weren't upset when he left.\" I explained somewhat uncertainly. \n\nMom laughed. \"Darling, Claudio was a charming man and a great piece of meat for us, but hardly my type,\" she said cheerfully. \"We'd have killed him if he stayed another day and tried to sate our sexual appetites.\" \n\n\"Well, that's probably true.\" I admitted. \n\n\"I'm not sure any man out there will make me happy until I find another one like your father,\" she mused as we turned and began walking. \"And even if I don't, I don't intend to just settle. It'll take more than a pretty smile and a sexy accent to sweep me off my feet. I'm not some desperate cougar.\" \n\nI laughed finally. \"I never should have doubted you, mom. You're still the sexiest woman I've ever known.\" \n\n\"Damn right,\" she said emphatically. \"And horny as hell, too. We need to get back home so we can fuck one another to unconscious.\" \n\nClaudio was gone and we were back on our favourite mission. \n\n*** \n\nMom and I hissed and panted in the dim light of the bedroom, churning and grinding our pussies together rapidly, squeezing one another's tits until we were drenched with sweat and shuddering as we fought to hold on, prolonging our walk on the knife's edge of desperate need and unreal pleasure. Mom was kneeling over me, our legs scissored as we writhed. I was holding a massager with a bulbous vibrating head to our slippery pussylips, the constant buzz causing us both to moan. Clits bumped and lips mingled wetly. \n\n\"Fuck, mom!\" I gasped, staring up at her, my eyes glazed with lust. \"Grind your cunt into me!\" \n\n\"Gonna fuck you until we cum, baby!\" she hissed, her eyes flashing with desire. She was holding one of my legs up in the air, bracing herself against it, driving me wild by grazing her fingernails along my skin or nipping and biting at my calf and ankle. We squirmed and writhed in strong circles against one another, slick with sweat from our heated lovemaking. \n\nI pressed the buzzing head harder against us and we both moaned in response, feeling the relentless tidal wave of our mutual orgasm racing toward us. We both strained, arching our hips and craning our necks as we fought those last fews seconds. \n\nWe both cried out, loudly. We bucked and mashed into one another, pussies boiling over with mingled cum. Mom threw my leg aside and almost slammed herself down onto me, kissing me greedily as we humped and fucked like crazed people. We growled and moaned as we kissed, biting each other's lips and tongues hungrily. We kept fucking, hips pistoning, pussies slapping together. The obscene sucking and squelching noises were music to our ears. My body was flooded with warm, tingling pleasure like no other, like only my mom could seem to give me. \n\nWe finally laid still, panting and sighing, bodies glued to one another. We'd already cum together five times since returning home from the airport, pretty much attacking one another once we were out of the car. We had kissed and fondled our way up the steps to the front door (confident no one could see us) and tumbled into the house, tearing the clothes off one another. We had our first orgasm together on the stairs up to the second floor, not content to wait until we reached the bedroom. We'd had another one in the hallway, pinning each other down in a 69 and tonguing and fingering one another into a frenzy. \n\nThree more orgasms followed those two, before this last one that seemed to finally wear us out. I feebly put one arm around the small of my mother's back, a semblance of a hug. It was all I had in me. I felt like a wet, used dishrag. My bones were jelly and I couldn't do a damn thing. \n\nFinally, with considerable effort, mom rolled off me and lay on her back next to me, gazing at the ceiling. Both our bodies were practically steaming from the prolonged fucking. She let out a loud sigh, still not moving. \n\n\"Does it bother you that sex with anyone else just seems to be a warm-up to the two of us fucking?\" she asked finally. \n\n\"No,\" I said, meaning it. \"You?\" \n\n\"Nope,\" she replied. \"Kinda love it. I don't care one bit that it's incest, baby. You make me horny like no one has since your dad. It's good to have that kind of desire in yourself again, to have someone make your pussy that wet and to cum that fucking hard with them.\" \n\nI nodded. \"I'm on board with you there and it doesn't bother me at all that it's you. This couldn't feel more natural to me. I don't give a fuck what anyone says. None of their damn business, right?\" ",
        "\"I'm glad Claudio was cool with it,\" she mentioned. \"I'd've really been upset if I'd had to keep myself away from you while he was here.\" \n\n\"Yeah,\" I agreed. \"Even when I was fucking whatever-his-name-is, I kept thinking about how much I wanted to get back on you and fuck the living shit out of you, to hear you screaming my name.\" \n\nMom giggled and gave my hand a squeeze. \"You really should find out his name, in case you want him to fuck you again. Do you?\" \n\nI nodded again. \"Yeah, it was a good time.\" \n\nI turned and looked at her. \"If he was open to the idea of the two of us, would you want to fuck him with me?\" \n\nShe smiled. \"Some young meat for your mom's aching pussy? And with you? Of course, baby, I'm sure that would be amazing. We'll blow his mind like nothing else in this world.\" \n\nI sighed happily. \"We'll have to do that at some point. There's so much cock out there for us to fuck. And getting to share it with you is the best thing I could ask for. I hope this never ends.\" \n\nShe smiled at me lovingly. \"Well, when you marry a man, maybe we'll share him too, we'll see.\" \n\nI paused as I pondered her words. \"D'you... if dad were alive still, do you think that... y'know, the three of us...\" \n\nShe considered. \"Actually I have no idea, baby,\" she said. \"I mean, your dad was a really big perv and all, and knowing you like I do, you would have loved fucking that enormous cock of his... it's difficult to say.\" \n\n\"Well, I'm just going to tell myself he would.\" I said, putting my hands behind my head in satisfaction as I smiled at the ceiling. \"Because if I'm good enough for my daddy and my mommy, then I'm good enough for anybody!\" \n\nMom laughed cheerfully and pulled me to her for a loving kiss that wouldn't end for close to an hour. \n\n*** \n\nAuthor's Notes: Just a reminded, like the notes at the end of the last chapter- this will indeed remain and incest story about Bronwen and her mom, but others will be involved on occasion, so you can prepare yourselves accordingly. \n\nPeople who read my stories will notice that I reference Florence occasionally. It's the place in Italy I spent the most time in when visiting that fair land. Apparently I got the origin of polenta wrong in another story, but I'd obviously been misled by a dishonest Florentine who told me this bit of trivia. Even I can't know everything. \n\nI'm really enjoying writing this story and I hope you're enjoying reading it. This whole mom-daughter kink is really fun to write. Lesbian incest is a thing of mine, seemingly. I will doubtless find other combinations to indulge. \n\nKeep your stick on the ice! \n\n- Management"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "incest",
        "mom",
        "daughter",
        "bisexuality",
        "menage a trois"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/sapphic-serenity-ch-06"
}