{
    "title": "Learning the Smuggler's Blues",
    "pages": [
        "This story is one of the Tales from The Shack, and is posted In LW to keep it with the others. This works fine as a standalone, though it precedes \"Gun Gun Teddy Bear.\" I typically don't write graphic sex into this story line and that remains true here. Special thanks to sbrooks103x and PCB for editing and beta reading, and to Luedon for Australian slang assistance. Any remaining errors are entirely mine - probably added after their assistance. Thanks to everyone for the encouragement and support. \n\nLearning the Smuggler's Blues: Hi, I'm Wendy, Fly Me \n\n\"So. Just what am I supposed to do with you, Sergeant?\" \n\nI stood rigidly at attention and didn't even really consider responding. It was clearly a rhetorical question. Nobody had actually wanted to hear what I had to say anyway. I was pretty certain some Colonel who I'd never even seen before didn't want to hear it. I was also almost convinced I'd been sent over to him because every other Field Grade officer in the Division had worn themselves out berating me. \n\nThe grim, bald Colonel looked up at the tall, lanky, white-haired Sergeant Major half-standing and half leaning against the peeling office wall. \"What do you think Sergeant Major?\" \n\nThe Sergeant Major looked down at the papers in his hands. \"Let's see... Article 118, Attempted Murder, two counts... Article 128, Assault, multiple counts... Article 120, attempted Sexual Assault, two counts... Article 89, Disrespect... at least eight counts.\" He flipped the paper over. \"The list goes on, it's pretty impressive. We can pretty much state that you have effectively ended your career progression permanently at three and a half years in service.\" \n\nThe Colonel closed his eyes for a second. Probably hoping I'd simply fall dead before he opened his eyes back up. I'd been getting a lot of that lately. \n\n\"Do you feel any remorse for this at all?\" \n\nThat was a real question, but I had to be honest. \"Sir. No, Sir.\" \n\n\"Major General Faulkner just wants all of this to go away. More specifically, he wants you to go away. So he's asked me to be your zookeeper for the rest of your time in the Army. You work for me, do what I tell you to do. You will never set one foot on main Post again and will adhere to the...\" He paused, looking down at the papers in front of him. \"...no less than nine protective orders levied against you. A couple more are pending, so let's just assume they will be in effect as well. You will then leave the Army at your scheduled ETS date. The charges go away. Other than a particularly nasty General Letter of Reprimand, you escape the consequences of your actions. Do you understand, Sergeant?\" \n\nIt was a far better outcome than I'd been expecting. \"Sir. Yes, Sir.\" \n\nThe Colonel suddenly smiled - a tiny smile, but weirdly out of character. \"At ease, Sergeant.\" \n\nI shifted my position and relaxed a hair. Just a hair. I caught a glimpse of the Sergeant Major struggling not to laugh. \n\nHe just had to ask. \"You hospitalized your husband and your Company Commander with a fish? How the hell do you give concussions, break arms and fracture ribs with a fish?\" \n\n\"It was a frozen fish, Sergeant Major, I'd just come home from the Commissary when I caught them.\" \n\n\"And the attempted forceful-Sodomy-with-a-foreign-object charges?\" \n\n\"Same fish, Sergeant Major.\" \n\n\"Maybe it was a good thing the MPs arrived when they did.\" \n\n\"I needed just a couple more minutes, Sergeant Major.\" \n\nThe Colonel was trying not to laugh now. \"Were you not aware that your Company Commander was Senator Shirling's daughter?\" \n\n\"I was aware, Sir. She very much made a point of mentioning that to everyone. But that fact was not my main concern. The fact that she was screwing my husband in my own bed, was.\" \n\n\"A point you made to nearly every officer in your chain of command, the Chaplain and a couple of MPs. Apparently violently at times.\" He flipped a page over. \"Which accounts for most of the protective orders.\" \n\n\"Sir, they kept asking me to be reasonable about this. My response seems perfectly reasonable to me, given the provocation.\" \n\n\"Ironically, that fact that she is the Senator's daughter is saving you a great deal of heartache. While the Senator would actually like to have you keelhauled, he is in the middle of an election campaign and his daughter's proclivities towards this kind of thing have caused him some problems before.\" \n\nThe Sergeant Major's jester-like grin widened further. \"Keelhauling is much more of a Navy tradition anyway.\" \n\nThe Colonel nodded sagely. \"Damn straight. The official story on your husband and the Good Senator's daughter's injuries will be that they are the result of hand to hand combat training.\" \n\nI tried to swallow my temper. \"Rob is my soon to be ex-husband. And that was not just her hand. Sir.\" \n\n\"And you, Sergeant, are not a proctologist. Be glad that they haven't charged you with practicing medicine without a license.\" \n\n\"Sir. Yes, Sir.\" \n\n\"Dismissed, Sergeant.\" \n\nI did my best to snap to attention and salute properly. This was pretty much the first discussion I'd had with an officer in the last month that didn't involve words like \"confinement\" and \"dishonorable discharge.\" \n\nI started to turn and froze. \"Sir? Dismissed to where?\" \n\nAs far as I could tell, there was no unit here; the Brigade driver had dropped me off at an old hanger on an out-of-use runway, with an office that the Colonel had obviously co-opted for the discussion. It was in a remote part of the training ranges, far from main base. \n\nHe glanced over at the Sergeant Major. \"I was wondering when you were going to ask that. Actually, this is your new office right here. Welcome to the 16th Training and Readiness Group. The Sergeant Major will give you the tour. She's all yours, Pogo.\" \n\nI watched, stunned, as he got up and walked out past me. \n\nI looked back over at the Sergeant Major. \"What am I doing here, Sergeant Major?\" \n\n\"Your job, Sergeant. You're a Cargo Handler, you load and unload planes. You'll be doing that and a bit of Transportation Management Coordinator stuff.\" He walked out of the office into the main hanger as I trailed behind him. \"Computer and phone lines should be in already, the geeks will be bringing a couple computers by tomorrow and get them set up in your office. Phone in the office is already hooked up, contact list is on it. The guys will be bringing the forklifts, pallets, dollies and all that crap over on Friday morning.\" \n\nA horn sounded outside the hanger. \"That will be your stuff from your barracks room. I had your room mate pack it all up.\" \n\nI'd been rather hastily kicked out of my own house after \"the incident,\" and stuck in a temporary barracks room. \n\nHe gestured towards the back of the hanger. \"Your new quarters are back there. Bedroom, kitchenette and bathroom. Sometimes we need lift on short notice in the middle of the night, so it's best to have you here.\" \n\n\"Is this some kind of solitary confinement thing?\" \n\n\"You have a problem with it?\" His easy demeanor dropped and his focus sharpened rather suddenly. His affable nature suddenly seemed to be a mask for something much more dangerous, a cold predator of some kind. A tiny, rather terrified, voice in the back of my head warned me that a dishonorable discharge and confinement might just be the least of my worries if I crossed him. \n\n\"No, Sergeant Major. My roommate snored. Loudly. I just want to know where I stand.\" \n\nHe relaxed a bit. \"You're not a prisoner. Follow the rules Colonel Howard laid out and everything will be fine. We're busy as hell, that's why we're bringing this airfield on line. You'll be busting your ass here, probably do three times the work of anyone else in your specialty. But you'll be treated fairly and get anything you need to do your job. You take care of the unit, we'll take care of you.\" \n\nThe horn honked again and he nodded toward the hanger door. \"You might want to go ahead and let them in.\" \n\nI walked over and threw the switch to open the door. It made an odd grinding noise, but slowly opened to let in a grey crew cab F150. When it stopped, mountains of testosterone and muscle poured out. Actually it was three guys in khaki cargo pants, desert boots and an array of somewhat suggestive bar t-shirts, but it was pretty much the same thing. \n\nA big blonde guy with a close cropped beard slid out of the driver's seat, an even bigger redheaded guy with a full brush of a beard and huge slabs of muscle, slid out on the passenger side, while a slender dark-haired clean shaven guy came out of the back. \n\nThe big blonde guy nodded toward the Sergeant Major, then looked over at me. \n\n\"Alright Sergeant, where do you want it?\" \n\nI pointed towards the back room. \"I'll be living in there.\" \n\nThe guy with the dark hair slid towards me. Damn, he was good looking, in that sort of tall, dark and smoldering, Italian way. His voice sounded like liquid sex. \"Hello, I'm...\" \n\n\"Hollywood.\" The Sergeant Major glared at him. \"What part of 'NO' do you not understand?\" Even though he didn't raise his voice one bit, I could suddenly hear cold sharp steel in it. \n\nThe appropriately-named Hollywood stiffened. \"Got it, Sergeant Major.\" \n\nThe blonde guy rolled his eyes. \"Get the bags out of the back seat. Dumbass.\" \n\nHollywood gave a brilliant apologetic smile, then winked and turned back to the truck. \n\nThe blonde guy walked over. \"I'm Kurt. You already met Hollywood. The big guy over there is Amos.\" \n\nThe red haired guy grumbled something. Hollywood grinned. \"Don't mind old Amos here, raised in a swamp, speaks more alligator than English.\" \n\nAmos shook his head and lifted a chair one-handed out of the back of the truck like it was a scrap of paper. \n\nI looked at them and a light dawned. \"I'm guessing I'm the lowest ranking person here, aren't I?\" \n\nThe Sergeant Major grinned like a jackal. \"Lowest ranking person in the unit, actually. Glad you picked up on that. Still, this hanger is yours; you're the only one with loadmaster certification, so your word here is law.\" As he said that, he made sure the three guys were listening. \n\nAll three locked eyes with him and each gave a single curt nod. For all the bullshit and quasi-civilian clothes, they were obviously disciplined as hell. \n\nIt took them about ten minutes to unload the truck and carry everything into the back room. Some time in that ten minutes the Sergeant Major disappeared. \n\nAs soon as they finished, Kurt looked at me. \"Interested in lunch?\" \n\n\"Yes... what the hell do I call you?\" \n\n\"Just call me Kurt. Outside the Compound, the ready room, this hanger and a couple other places, we go by first name or nicknames for security reasons. Same reason we usually dress like civilian range maintenance crews out here. If they're in civilian clothes, the Colonel goes by 'Howard', the Sergeant Major goes by 'Pogo', just remember who they really are. You'll want to go get into civilian clothes to go eat.\" \n\nI got the feeling making them wait was a bad idea, so I jumped into jeans and a t-shirt and ran back out to the truck. Amos and Hollywood were sitting in the back, leaving the \"shotgun\" seat for me. \n\nLunch was at a local barbeque joint and I got to watch in horror as Amos consumed what looked like an entire hog on a bun while the rest of us ate normal meals. \n\nAfter Kurt finished, he pushed his plate away and leaned back. \"You're probably starting to realize that you aren't in Kansas anymore.\" \n\n\"Yeah, I'm under that impression.\" \n\n\"We conduct special, short notice training events for units all over the world.\" \n\nI furiously rubbed my forehead and all three stared at me. \"Sorry. I'm just trying to scrub the word 'STUPID' off my forehead.\" \n\nAmos gave a low rumbling chuckle and Hollywood smirked. \n\nKurt shrugged, but smiled a little. \"Okay, but you don't need to know the details.\" \n\n\"I get it. I don't have the 'need-to-know,' but I'm not an idiot.\" \n\n\"Sergeant Major wanted me to make sure you know the rules. Mission first. All the feel-good shit stops at the door.\" \n\n\"I kind of picked up on that.\" \n\n\"No slacking on PT, and you'll start working on weapons training and qualification as soon as I can set up a schedule.\" \n\n\"I just qualified two months ago.\" \n\n\"Yeah. That doesn't wash here. Hollywood will train you on rifles, I'll train you on handguns and shotguns. You'll burn more ammo in a month here than you've burned in your whole life.\" \n\n\"You know, I'm just a Cargo Handler.\" \n\n\"Doesn't matter. Unit rules. Speaking of which, there are six operational teams; standard red, amber, green rotation. Right now, Team One, that's mine, and Team Two are on Amber, so that's why we're helping you out.\" \n\nHe watched Amos finish the last of his plate. \"You have a car?\" \n\n\"I used to. My 'husband' took our car. I can't go get it, it's on main post.\" \n\n\"Is your name on the title?\" \n\n\"Both our names are on it.\" \n\n\"You got keys to it?\" \n\nI fumbled in my purse and handed them to him. He had me write down the make, model and license plate for it. He handed my note and keys to Amos without a word. Then we loaded up and headed back. Kurt stopped at a grocery store so I could pick up some food to eat at the hangar. \n\nWhen we got back to the hangar, Kurt got out of the truck with me. \n\n\"A couple more things. The Colonel doesn't tolerate any bullshit drama inside the unit. You're off limits to the guys, they are off limits to you. Even after your divorce is final.\" \n\n\"Not exactly my priority.\" \n\n\"I'm sure it isn't right now. Things change. But you are on permanent 'little sister' status.\" A smile ticked at the corner of his mouth. \"But it'd be funny as hell to see Hollywood get a frozen trout shoved up his ass.\" \n\n\"It was a black sea bass.\" \n\n\"Ouch.\" He winced. \"Lots more spines and fins.\" \n\n\"They're a lot bigger, too.\" I couldn't help smile a little at that. \n\nAfter they left, I went back in to my new room and began to set it up, wondering what I'd gotten myself into. \n\n### \n\nI got up early the next morning to go running along the tarmac and runway; Kurt had been pretty straightforward about the PT thing and I was under the impression that the Colonel and the Sergeant Major were pretty serious bastards. \n\nAs I finished and came up to the hangar, I found my car was parked outside, windows down and keys on the seat. Rob's keys were there too. I smirked, picturing Rob coming face to face, or rather face to over-muscled chest with Amos. Served the asshole right. \n\nWhen Kurt brought the rest of his team to deliver the equipment, they were staggeringly efficient - and it was also very obvious that the Colonel's warning had gone out to everyone. I may not be Miss America, but I usually get a least a few glances from guys, and Kurt's team was basically a tidal wave of male hormones. The forklift got more eye contact than I did. \n\nThe next few weeks were chaos as I settled into my new job. I didn't have much time to worry about anything but the job. We started operations almost immediately. Flights in and out were managed by three Air Force Combat Controllers, who invariably showed up on jet black dirt bikes in time to set up, and made a point of not asking questions. I just handled the cargo and passengers, most of which went in and out of the Pacific region. I got the impression that there were other, equally secretive units that handled Europe and Africa, although nobody ever really explained it to me. \n\nMost of my smaller shipments included \"contact on receipt\" instructions to carriers, receiving cargo handlers and warehouse managers. Except the contact information wasn't me and I didn't give them their final instructions. \n\nIt did seem like asking questions was a bad idea, especially when Kurt's team suddenly flew out and I noticed that none of the names on the manifest matched the real names, and none of the passports were American. \n\nIt just got weirder from there. I tried not to think about it a whole lot, and spent my free time either exercising or watching old movies. I really started to get into the old black and white movies. I must have watched \"Double Indemnity\" a hundred times. Barbara Stanwyk was epic. \n\nOne morning, Hollywood was waiting, sitting on the hood of a blue SUV, when I finished my run. \n\n\"Morning, Wendy, today's a good day. It's a range day, and range days are always good days.\" He was acting like a completely different person - he'd completely turned off the \"ladies man\" vibe. The mere idea of getting out on the firing range had him totally focused. \n\nI learned quickly that it wasn't an act for my benefit. He was totally different out on a range. The idea of going to the range with him had made me a little nervous - Hollywood was a walking, talking sexual harassment complaint waiting to happen - if he hadn't been so damn good looking, anyway. And it was just the two of us on an empty range, every morning for weeks. \n\nI didn't know it, but I didn't need to worry. \n\nFor all his obviously wolfish tendencies, if a Playboy Playmate walked up to him holding an M40 or M82, he probably wouldn't even notice if she was naked. I'd been taught the basics of how to use rifles, but Hollywood taught me to be part of one. It was an obsession for him. He re-taught me everything about rifles over the next several weeks. Breath control, cheek weld, fingertip placement, grip - or, as he put it, the grip of no-grip. The fact that muscles will tire and shake, but bones never do. And on and on. \n\nThe Sergeant Major just showed up one day, about the time I was beginning to think the smell of gunpowder was going to be permanently burned into my nose. We'd finished shooting and were packing up. We'd given the rifles a rough cleaning, but Hollywood preferred to do the thorough cleaning himself. \n\nHe walked over, looking at Hollywood. \n\n\"Well?\" \n\n\"She's okay. Doesn't have the knack to be great, but if she added another thirty pounds or so to stabilize her skinny ass, she'd be pretty decent with another year of practice.\" \n\nThe Sergeant Major glanced over at me. \"I knew a female counter-sniper in Sarajevo; not bad, but when she was pregnant with her second kid, maybe seven months in and later, she got really, really good. She said it was that built-in sandbag. She was the terror of Sniper Alley for a while, the Serbs hated her, called her 'Mother Death.'\" He stared off into space for a second. \"I think she and her husband own a couple restaurants now. They have three or four kids.\" He blinked. \"Anyway, I don't need you to be a sniper. Just don't want you to be helpless. On Monday, you start learning about Monsters.\" \n\nHe turned and walked off without another word. Hollywood continued packing up. \n\n\"What did he mean by 'monsters?'\" \n\n\"Close combat specialists. Handguns, submachine guns, shotguns. That'll be Kurt, mostly.\" \n\nHollywood gave me directions to a battered old structure that turned out to be a combination indoor range and shoot house. When I walked in, I realized the range was in far better shape than it looked from the outside. \n\nKurt was standing next to a table with handguns lined up on it. \"We're going to cover shotgun and handgun basics. The Sergeant Major wants me to make sure you can defend yourself.\" \n\nI'd thought the rifle range had been a lot of shooting, but Kurt seemed determined to have me fire every handgun and shotgun known to man until my head was ringing despite the \"Mickey Mouse ears.\" After a couple weeks, I started to feel naked if I wasn't holding a handgun. Every single handgun run started with a draw, and Kurt made me draw over and over until it was smooth and clean. I used back and belly draws for every gun, and ankle draws if the gun was even remotely small enough to work that way. \n\nThen the real fun began. Kurt set up the shoot house and I had to walk through it, over and over, until I took down every target fast enough for him. ",
        "He even had me use the \"team-standard\" weapon until it was second nature. The strange metallic cough of the MP5SD echoed in my dreams for weeks. \n\nI'd probably have gotten pretty cocky about my skills, but Kurt gave me a demonstration that cut that short. Even using a revolver, his shots sounded like a machine gun. He never hesitated, never seemed to have to aim, and never missed. I couldn't even say I'd really seen him draw, despite watching him every second. \n\nI just stared at him after he called \"clear.\" \n\nHe gave a self-deprecating smile. \"Sorry. Look, you're doing pretty good for someone just picking it up, and you'll get better with more practice. But some of us are wired differently, our nerves fire faster, our situational awareness is a lot better. It's just the way we are.\" \n\nI shrugged, trying to hide my disappointment. \"So when are you going to put good guys in the shoot house?\" \n\nHe shook his head. \"If you get sucked into something, there are no good guys, just shoot anything remotely threatening until you run out of targets or ammo.\" \n\nHe pulled a locked case out of his truck and opened it. \n\n\"This is the gun Pogo wants you to use.\" \n\nI stared at an odd little revolver with almost no barrel. \"Where's the hammer?\" \n\n\"Inside the shroud, this a Smith &amp; Wesson Model 38 Airweight Bodyguard. It's made for concealed carry, the hammer is shrouded so it won't catch on clothes or anything else. It's tough and reliable. Not much good for shooting at any distance, but the Sergeant Major and Colonel are concerned with close in self-defense for you.\" \n\n\"Kind of small.\" \n\n\"It won't feel like it. Snub guns like this make a lot of noise, a lot of flame and they kick like hell. And you're going to use some special ammo that will make it worse. Opens up like a flower and does massive damage. You'll keep drawing from belly, back and ankle holster.\" \n\nHe was right, the damn thing kicked like a mule and roared like a dragon, even though he started me with low powered loads and worked me up slowly. My hands hurt, my wrists hurt, and my shoulders ached. I spent weeks and weeks listening to Kurt bark, \"Draw, Fire,\" over and over until I was hearing it in my sleep. I swear I woke up trying to draw the pistol whenever there was a loud noise outside the hanger. At some point, I stopped really noticing the wrenching kick and the deafening blast, and the aches and pains disappeared. It wasn't long after that Kurt somewhat grudgingly declared me \"trained.\" \n\nAfter that, I settled into a dull existence for a while, with one very uncomfortable extra duty. I was appointed the \"Spouse Liaison.\" I was supposed to work with the wives; give them support when they needed it, help them with other issues. Unfortunately, they hated me. At least it felt like it. The unit was stressful enough for wives; I never had the answers they wanted. I couldn't even help with normal administrative stuff, since I couldn't go on Main post. Neither the Colonel nor Sergeant Major were married, so Kurt's wife, Katie, was kind of in the lead of all the wives. I was always convinced she was just about half a heartbeat from just slapping me whenever I couldn't answer a question. I got the impression she wasn't really a bad person, just tired of bullshit, and I couldn't really give her anything but bullshit. \n\nI hated going to the Spouse Support Group meetings, trying to help when I rarely could, and pretending I couldn't hear them refer to me as \"The Wendy\" in that condescending and disgusted tone. \n\nThe only one that gave me any slack was Amos' wife, Veronica - \"Ronni.\" She was a pear-shaped blonde with dark brown roots and enough loud, obnoxious \"Southern Redneck Girl\" attitude for a hundred hours of beer commercials. She didn't give a \"hot holy damn\" what anybody thought of her except Amos. They flat out adored each other. I saw them out in town once at the mall; they were holding hands and watching their four kids pick out ice cream. If she wasn't holding his hand, his hand was on her ass - and if it wasn't she reached over and put it there. Unfortunately, she rarely bothered to put in an appearance at the Spouse Support Group so I usually only saw her at the monthly unit barbeques where everybody but her pretty much ignored me. I always felt like a tag-along little sister with the guys and the wives always managed to make it clear I wasn't welcome in their little circle. Except Ronni. \n\nShe always sat and talked to me for at least a few minutes; it was pretty much the only part of the barbeques I liked. \n\nOne time she saw me looking at the wives. \"Don't worry about them none, Wendy. They don' mean anything by it.\" She stared at them for a moment, with a touch of sadness. \"They're just all in the same lifeboat, clinging to each other 'cause they don't know what else to do.\" \n\nShe cocked her head a bit, studying them, then went on. \"The guys... our guys... we know what's going on, probably a lot more than anyone wants us to know. Especially us. They're the best of the best, but that doesn't mean they're bulletproof. Sometimes there are 'training accidents' and they get hurt, end up in the hospital. Sometimes they don't come home at all. It happens. We pretend we don't know, they pretend we can't read their medal racks and count the purple hearts.\" She paused. \"But the other wives, they got it wrong. They let their fear take over and steal their time with their man.\" \n\nShe suddenly focused on me. \"You can't let that happen. You gotta hold on tight, take every moment. You gotta do whatever you can. Be what you should be.\" A sudden smile lit her face. Her voice shifted oddly, from the crackle of redneck bonfires and beer, to the sound of money, magnolias, and cotillions. \"Maybe you change. Maybe you were born with a silver spoon in your mouth and raised a debutante, but the only man for you is a swamp-born Cajun who'd never fit in your world. Maybe you change to fit in his.\" \n\nShe lifted her glass of beer in a toast to me, as refined as any Duchess ever could, took a gentle sip, winked at me and walked off with practiced grace and elegance. \n\nI was still sitting open-mouth staring after her when she walked up behind Amos, gave him a brutal slap across his butt, took a slug of her beer and then offered the rest to him. \n\n### \n\nI'd probably have continued that way until I got out except for Senator Shirling. My divorce was proceeding as planned and I'd pretty much pushed Captain Brandi Shirling's husband-poaching ass into a dark corner of my memory. I'd seen her over and over on the television during the campaign. She wasn't allowed to be in uniform in her Daddy's campaign ads, but it was amazing how often Daddy's Little Angel with her giant silicone tits and collagen-filled lips ended up doing television interviews about patriotism, honor and integrity. Her arm spent the entire campaign season in a sling. That was total bullshit. I'd done it; I knew it wasn't that bad. Her arm had only been fractured, not shattered. I could feel steam coming out of my ears every time she gave her little self-deprecating smile and explained that her arm had been broken in training and that \"The harder you sweat in training, the less you bleed in war.\" \n\nShe made me want to hurl. Disgusting bitch. It did make me smile to see her wince when she sat her fat ass down on a chair during one interview. She'd remember me for a long time. \n\nStill, I decided to put it all behind me. She stayed on main Post, I stayed at my hanger. After meeting Amos, Rob mostly kept his head down and signed papers whenever they were sent to him. But the one person who didn't play along was Daddy Shirling. I'd stopped worrying about him because he'd made it clear he didn't want trouble. He had a campaign to win, after all. \n\nI'd just finished reviewing cargo manifests on a Saturday afternoon, when Pogo, in civilian clothes, pulled up with Team Three. \n\n\"Pack up Wendy! Time to go.\" \n\nThe team brushed past me and began throwing my stuff into pelican cases with abandon. \"Go where?\" \n\nPogo flipped the contents of a drawer from my nightstand, including my battery-operated-boyfriend into a container without so much as blinking. \"Anywhere you can oversee the cargo. Outside the United States. Where can you do that from?\" \n\n\"Thailand. The majority of our stuff goes through there.\" \n\nHe nodded. \"That will work. We have a safe house near U-Tapao\" He suddenly glanced back at the container where he'd thrown my vibrator, then obviously decided not to say anything. \"We need to get you out of here. You're going into exile on the next thing burning.\" \n\nThat didn't sound good at all. \"Exile? What did I do?\" \n\n\"Nothing new. Senator Shirling appears to have suddenly remembered you exist now that the campaign is over. He isn't a 'forgive and forget' kind of guy. The Senator informed General Faulkner that he wants to see you brought up on Courts Martial charges as quickly as possible.\" \n\n\"Oh shit.\" The words \"dishonorable discharge\" and \"sentenced to confinement\" suddenly loomed very large in my mind. I started helping stuff things into the cases as fast as I could. \n\n\"'Oh shit' is right. That asshole is talking 20 years, and he's on the damned Armed Services Committee. Colonel Howard told General Faulkner that you're on covert assignment and are currently out of contact, mission end date undetermined.\" He tossed me a passport. \"Had the Documents guys make that up for you along with a dozen other ones. We'll get you the rest in Thailand.\" \n\nI felt a wave of hopelessness. \"I have to come back sooner or later.\" \n\n\"You've still got eighteen months, we can pretty much keep you out of his hands for that whole time. A lot can happen in eighteen months, the Senator could get distracted.\" \n\nLess than forty hours later, I was sitting in a go-go bar in the red light district of Soi Cowboy in Bangkok, overly conscious of the weight of my .38 in the belly holster. \n\nI was getting a drink before heading back to the hotel, with a schedule to head south to Pattaya the next day. Most of our cargo into Asia was initially in and out through U-Tapao, a civil-military airport near there. It usually got trucked up to Bangkok or other airports and cross loaded to smaller, civilian carriers. Pogo had told me the bar was popular with the pilots and owners of the small cargo carriers we usually used, and thought it was a good idea for me to get an idea of what kind of people we dealt with. I figured he was testing me to see if I could handle myself. Go-go bars aren't usually places single women hang out. \n\nIt was kind of a rush though. It was so unreal; I could feel the little revolver against my stomach every time I moved. I was going to have to get used to that. Pogo had made that clear when he'd given me an official Thai military license to carry it. \n\nA scruffy looking guy wearing a loud-red-and-white tourist-style aloha shirt, with two buttons missing, over his slightly faded blue T-shirt sat on the next stool over. A crunched, used-to-be-white straw trilby hat with a frayed brim sat on the bar next to him. He'd probably shaved couple days ago and looked a little soft, like the Bangkok heat had melted him around the edges just a bit. I got a vague impression of a well-worn teddy bear. \n\nHe glanced me over, but it was pretty benign. \"New here?\" I'm sure someone with more experience would have some idea where he was from in Australia, but I couldn't. His accent had obviously been softened by years living outside Australia. \n\n\"First time. My boss thought it'd be a good idea for me to drop by here.\" \n\n\"Strange fella, your boss. This is the pilot's bar. Tourist bars are down that way...\" he pointed up the street, \"... and the military bars are down that way.\" He gestured the other way. \n\n\"I manage cargo, so I'm probably in the right place. Had to come out here to manage things a bit more directly.\" \n\nHe nodded slowly. \"Makes sense then. I'm 'Chip' Woodley. My real name is Mel, but nobody calls me that. Except my mum.\" \n\n\"Wendy.\" \n\nHe reached across and shook my hand somberly, then called for a couple more drinks, and I was a bit surprised that his was just a Coca-Cola. \n\n\"I'm flying tomorrow. Woodley Air. I usually carry, uh, pharmaceuticals, I have a crate of my own, an old AN-24.\" \n\nI smiled, but it was totally plastic. Less than six hours in country and I was drinking with a drug runner. I reflected that I'd actually, somehow, someway, gotten worse at picking guys. \n\nHe took my silence as a queue to keep talking. \"At least it's interesting here. Jack over there...\" he nodded towards a tall, good looking guy down the bar. \"...flies a Squirrel helicopter for Lao Green Mountain Development. Good guy, but a bit of a root rat, so watch your knickers.\" \n\nHe glanced around, then nodded towards a central table where two tall slender Asian men in stylish suits sat with a half dozen mostly undressed women. \"The Chopsticks over there who have decided to grace us with their presence are David and Jonathan Huang. They're not really regulars, they just show up here about every six months or so and throw a lot of money around. Both of them are right bastards. Hong Kong Chinese twins, illegitimate sons of a British Duke or Earl or something. Stay clear of them, they're an evil pair of budgies.\" \n\n\"Budgies?\" \n\n\"They're smugglers. We've got a few of them around here. Jack and I call them budgies - it's a bit of an in-joke. Down in Oz we call men's Speedos swim trunks 'budgie smugglers' because it looks like...\" he trailed off weakly and looked embarrassed. \n\n\"I got it.\" I fought to keep from smiling too wide. Maybe it was my rum and coke, but his embarrassment was kind of cute. \n\nHe fumbled on for a second before getting his rhythm back. \"Bad characters, the both of them. They're pretty much royalty in the 'discreet transportation' business.\" He smiled. \"They don't think anyone can tell them apart, but David has a scar under his left eye where he got cut a couple years ago in a car accident in Malaysia. The women are there for Jonathan, David has a taste for the kathoey.\" \n\n\"Kat-what?\" \n\n\"kathoey. Lady boys. They're the prettier ones.\" \n\nI stared. Seriously, I couldn't tell. \"Wow.\" \n\nHe laughed. \"It's kind of a thing here. The word kathoey is a little rude, they usually call themselves phuying, but everyone else uses kathoey. The surgeons do a pretty good job with the ti... boobs, breasts, I mean.\" He flushed red again; it really was awkwardly cute. \n\nI eyed the brothers cautiously. We moved a number of shipments all over Asia through a company named Huang Brothers at fairly high prices. \n\n\"Smugglers?\" \n\nHe shrugged. \"Yes. They have an air freight business, but they also have contacts in every custom house in Asia. I heard them say they pay their 'cousins' about 2500 Hong Kong dollars per shipment to clear them through customs, then they charge the customers about four times that.\" \n\nThat certainly explained some surcharges I'd been seeing. \n\nHe moved on to other bar patrons; pilots, company owners, and some shiftless types. We talked for almost two more hours, eating skewers of grilled chicken with really tasty peanut sauce. At least I hoped it was chicken. It was good anyway. Even if it hadn't been, I learned more about what was actually going on with my cargo than I'd ever dreamed. \n\nMy \"contact on receipt\" shipments were nearly all being carried by shadowy people at best. Mercenaries, smugglers and worse. Their delivery points were a list of every unstable place in the region. Not that I hadn't expected something of the sort, but I'd been doing my job blindfolded. \n\nHe finally asked where I was going to be working. \n\n\"My... company maintains a suite in a hotel here because we have people pass through all the time, but apparently, I have an office between Pattaya and U-Tapao, so I head down to Pattaya tomorrow.\" \n\nHe looked a little puzzled, but shrugged. \"Pattaya is a bit of zoo.\" He glanced around. \"Kind of like this. But if you're in town for a few hours, hit Wee Andy's, at bottom of Soi 2, on the beach road end. His Missus makes great food.\" \n\nI ended up heading back to my hotel a little later than I'd planned, and I really shocked myself when I told Chip it was nice meeting him and I'd had a good time. Shocked because I meant it. If he'd have been in a different line of work, I'd have tried to stay in touch with him somehow. A girl has to have some standards and not dating drug smugglers was probably a good start. He did tell the truth about Wee Andy's Missus and her cooking, though. \n\n### \n\nIt was three weeks before Pogo and Howard passed through the safe house. Until they got there, I was the only one staying in the safe house, although a couple of local guards and a driver were permanently on call. I managed some shipments, using the equipment at the house. I also learned a lot. I traveled to the U-Tapao airfield and watched our shipments get re-palleted and relabeled. None of it stayed in Thailand. \n\nI spent some evenings in Pattaya to get out of the safe house. I managed to learn a few words in Thai, mostly names of food. Much to my eternal regret, I learned that the insanity of the go-go clubs on the ground floor isn't even close to the insanity on the upper floors. After wandering upstairs at the Marilynn A-Go-Go, I mostly stuck to restaurants and the occasional beer bar. I also spent a considerable amount of time re-thinking how anatomy and physics worked and trying to figure out how to clean my brain with bleach and steel wool. \n\nI was also pondering the meaning of what I'd learned from Chip, so when Howard and Pogo arrived, I simply sat down and brought it up. \n\n\"When am I going to be allowed to really do my job?\" \n\nNeither man looked particularly surprised by that. Howard fixed me with his ice-chip eyes. \"Explain.\" \n\nIn for a penny, in for a pound. \"I've been doing the simple stuff. Moving the shipments to where they really start going places. We're moving a helluva lot more than just small team stuff, and I knew that. Somebody else is managing the final leg of the shipments. It's damn slow and not being managed right. We're losing time and money, and probably shipments. I can fix that.\" \n\nPogo glanced over at Howard. \"Told you she'd figure it out. Just a little quicker than I expected.\" Then back to me. \"You sure you want involved in this?\" \n\n\"I already am. I signed those manifests on the back end. If something goes wrong, my name is already on it.\" \n\nHoward nodded slowly. \"The military gear in CONEXes is mostly ours, it's all mission specific. When the op is fully sanctioned and overt, we use the Mil-Air. When it isn't...\" He shrugged. \"We use small carriers, using cover identities. That isn't that often. But since we already move stuff covertly, there are other agencies using us to move cargo, and to protect it if necessary.\" \n\n\"CIA?\" \n\n\"Sometimes. Sometimes other organizations. There are more of them than you think. Most of them have very narrow mission sets, and they don't have our capabilities. It helps pay the bills, and we get a lot of favors in return.\" \n\n\"I'm not even sure how to ask this. I'm sure there isn't a book or anything, that'd be insanely stupid. But do we have some kind of directory with a listing of the smugglers and mercenary pilots?\" \n\nThe two exchanged glances, Pogo grinned like a crocodile, then Howard gave a grimace. \"Give her the damn book, Pogo.\" \n\nIt wasn't quite as stupid as it sounded, the book Pogo gave me was only part of a three part code; each part of the code was useless without the other two. We also had a program that allowed us to schedule flights, cargo, and passengers as if the schedules were coming from the Royal Thai National Intelligence Agency. I didn't know if it was a hacking program, or some kind of quid-pro-quo agreement with the Thai government. I really, really didn't want to know. ",
        "The only instructions I got from Howard was to \"clean it up by any means necessary,\" and not to screw it up. \n\nClearly Howard was willing to let me take on whatever duties I was willing to. \n\nAfter they left, I had the keys to the kingdom. I knew what was being shipped, through who and to where. The more I learned the more I realized how serious it was. Secrets on secrets on secrets. I remembered an old saw about secrets - \"they could kill you for knowing that.\" \n\nThese secrets were important enough that they really could, and I had no doubt Howard and Pogo would if they thought I was a risk. \n\nWhenever one of the teams was passing through, the safe house buzzed with activity. The guys were great to be around - I liked Kurt's team best, but they were all amazing - it was like having a bunch of big brothers in the house. \n\nThe single guys, like Hollywood, spent a lot of time in Pattaya, staying there in the hotels with bar girls they'd \"bar-fined.\" The married guys, like Kurt and Amos, followed Howard's rules to the letter. \n\nKurt and Amos actually laughed when I commented that the married guys only rarely went into Pattaya and never stayed the night. \n\nAmos chuckled in a tone so deep I could feel it through my boots rather than hear it. \"Ronni would go full Jerry Springer if I ever touched any of that. And then there's Needles.\" \n\nKurt gave a wry grin. \"Even if the Colonel wasn't a hard-ass about it, it wouldn't be worth it. Hollywood can double wrap it if he wants, but it isn't worth the risk. We had a damn good medic, Needles. He left right before you came over to us. The Colonel recruited him from an ODA - a Special Forces Alpha team. His wife divorced him, left him for a lawyer she'd been seeing for years whenever he was gone. He had no idea anything was wrong, she moved away with the kids, and got their heads all turned around about him so they wouldn't even talk to him anymore. Needles kind of came apart. He pretty much kept to himself out here, but one night he headed into Pattaya alone, just to get a drink.\" He took a sip of his beer. \n\nAmos picked up the story. \"I rode up with the driver the next morning to see if there were any new kinds of beer for the house. We swung by the Twins to pick up some of the guys who stayed overnight. So I'm waiting by the front desk when Needles comes out of the elevator with a girl. She was beautiful, an absolute hammer. Probably the only girl in Thailand with a real ass.\" He paused looking like he knew he should be embarrassed by that, but wasn't sure why. That made me grin - they were just treating me like one of the guys. \"...anyway, Needles looks embarrassed as hell, and he has a kind of sick smile on his face. She's just bouncy as a puppy. He sees me, starts to shuffle away from her. She grabs him, gives him a big kiss and then flounces out the door. After that, he just walked around like a zombie for weeks.\" \n\nKurt closed his eyes and shook his head. \"It took us a month to get the story out of him. It was a really slow night, Needles was pretty much the only guy in the bar and Ratana - that was the girl's name - was bored out of her skull. So she sees him moping in the corner and sits down to talk, got the whole story of his divorce out of him, even though her English isn't all that great. She paid off her own bar fine and took him to the hotel. She decided she was going to put a smile on his face if it took her all night. So the next morning, she finally asks him what he does for a living and he tells her he's a paramedic. \n\n\"She asks him. 'What's that?' \n\n\"So Needles tells her: 'It's kind of like a doctor.' \n\n\"She squealed and held both arms out to him: 'Oh! Can you test me for AIDS?'\" \n\nAt that point both Kurt and Amos began laughing softly, but it built quickly until they were roaring with laughter. \n\nI was horrified. \"Did she have AIDS?\" \n\nKurt shook his head. \"We caught up to Ratana, she was fine. She was actually a good kid. Ended up marrying a high ranking Thai Foreign Service officer. I think he's an ambassador now. But Needles was practically a hermit after that.\" \n\n\"Whatever happened to him?\" \n\n\"His divorce had him more screwed up than anyone thought. He was hooked on valium and oxy, finally got caught. The Colonel let him retire; lost the paperwork, 'accidently' screwed up the chain of custody on the evidence. Needles had always done right by the team, so the Colonel did right by him. Made him go into a rehab program first though.\" \n\nThe teams weren't around near often enough though, and I spent a lot of time watching old movies they brought in for me. Twice-weekly trips to Bangkok to manage our shipments there and drop by Soi Cowboy were pretty much the norm. I managed to run into Chip on a regular basis and let him catch me up on business gossip. I justified the fact that I was hanging out with a drug smuggler by telling myself he was a \"source.\" \n\nIt became sort of a regular thing. Chip was a great remedy to the regular overdoses of muscle and masculinity that surged through the safe house. Lord knew I liked having the teams pass through, but the sheer testosterone overload was mind-numbing. The bills for steak and beer when they came through were enormous. Chip's easy-going attitude was almost soothing. I found out he'd been Flight Lieutenant in the Australian Air Force before he'd cashed in an inheritance for his AN-24. He wasn't weak, he was just much more normal than \"my\" guys. \n\nI started building on the gossip to get a handle on what was really going on. \n\nI called in one of the favors the unit was owed from one of the \"three letter agencies,\" and had the travel itineraries of all our principal connections tracked and relayed to me - the information arrived in an anonymous daily email on the single heavily encrypted computer in the house. I started tracking our shipments more carefully and managed to fix a lot of accidental inefficiencies in our system. \n\nI noticed a pattern in the Huang brothers' shipments. Every sixty days or so, a shipment would suddenly become hung up in customs, costing us several thousand dollars extra in \"special fees\" to get them moving again. I hadn't seen it before because I didn't have all the information. \n\nI wanted to talk to Howard and Pogo about it, but they didn't drop by before the next \"hang up\" in Macau happened. And my morning email showed the Huang brothers were both in Macau as well. I hesitated, but I remembered Howard's instructions - \"by any means necessary.\" I sent a note outlining my plans, grabbed a stack of travel cash out of the safe. With a certain nervous trepidation, I took five gold Krugerrands from the \"don't touch this\" emergency cash. \n\nI was on the next flight to Macau. Some of the stories I'd heard in Bangkok had been about the \"Eight Golden Lotus\" the Huang brothers-owned nightclub in Macao. I decided that would be where I would start. \n\nIt was an early morning flight so I spent much of the day resting at the hotel and trying to convince myself I was doing the right thing. Wendy O'Connell, Sergeant, US Army, Cargo Handler, was preparing to have it out with a pair of international smugglers, who, according to all the rumors, were \"murderous bastards.\" \n\nI put off actually going to the club until late, telling myself I was waiting until I was sure they were there. Eventually I had to choose between going or putting it off until the next day, when I couldn't be sure they'd be there since I didn't have access to my secure email. \n\nI eventually put on the understated black skirt suit I'd had made on a whim in Bangkok, grabbed my fake Hermes crocodile bag with my little stack of gold coins and called the front desk for a limousine to the club. I hesitated a bit, but slid my noisy little gun in its pancake holster onto the back of my skirt at the small of my back. I certainly didn't plan on shooting the Huang brothers in their own club, but I felt undressed without my gun now. \n\nOnce we reached the club, I slid out of the limo, telling the driver to wait. I knew I'd be out soon, or not at all. \n\nWhile my impression of the Huang brothers had been one of fine silk suits and expensive Italian shoes, \"The Eight Golden Lotus\" was anything but tasteful; it'd have stood out as obnoxious and crass in Las Vegas. It had to cover half a city block and had more brilliant pink neon and gold leaf than I thought could legally be in the same country, much less on and in one building. \n\nI paused at the bottom of the broad staircase before heading up, trying to channel Rita Hayworth's \"The Lady from Shanghai\" and Barbara Stanwyck in \"Double Indemnity.\" Then I set my jaw and headed up the stairs. \n\nThe club was all flashing lights, with a group of professionally bored-looking, Chinese \"Robert Palmer Girls\" playing \"Addicted to Love\" on the main stage, backing up a guy who was actually doing a pretty convincing imitation, though with a slight Russian accent. \n\nFrom the stories and gossip I'd collected in Bangkok, I knew the brothers had a slightly raised room to the rear of the club, so I began to work my way through the massive crowd to get there. I could see the room, with double doors standing open to allow the brothers to look down on their little kingdom. Then I noticed something very disturbing - Pogo had appeared on my right side without a word, without eye contact, but keeping in perfect pace with me. He must have gotten my note. I wondered if he was waiting for me to succeed or fail. \n\nI caught a glimpse of Kurt coming up on my other side. I wasn't sure how I felt about that; I didn't want him to see me screw up. \n\nI finally spotted the brothers' table and watched as a supplicant who'd been seated across from the pair of them left, leaving his empty chair. \n\nPerfect timing. I swept up the steps, pausing to touch their personal waitress on the shoulder. \"A Cuba Libre, if you please.\" Then I slid into the chair. The tiny scar under David's eye was obvious in the light. \n\n\"Jonathon. David.\" I nodded to each in turn with a slightly plastic smile. \n\nThey were obviously shocked and had no idea who I was. \n\nI paused for a long moment, glancing down at my nails, essentially ignoring the brothers for a few seconds. It's what Barbara Stanwyk would've done. \"I do apologize. I just feel like we've been working together so long we know each other. I'm Wendy.\" \n\nI saw confusion rather than recognition. Of course. David's mouth worked a bit, but nothing came out. \n\n\"You're holding one of my employers' shipments for ransom here in Macau, as you've done on a regular basis. They no longer find it amusing. It would really be best for everyone if it were released immediately.\" \n\nA flash of anger crossed Jonathon's face and he started to turn to one of his bodyguards to snarl something. Anticipating it, the bodyguard began to reach into his jacket. \n\nEverybody froze quite suddenly. Nobody was even breathing. The bodyguard was trying not to even blink, the muzzle of Pogo's gun stuck firmly in his ear. Kurt had produced an automatic in either hand, one pointed at David's head, one at Jonathon's. Pogo and Kurt were stone faced, impassive as statues. They'd moved so quickly that their movements weren't even a blur. Even having seen Kurt and the other team Monsters at the range, it was unbelievable. I couldn't imagine what it must have seemed like to everyone else. \n\nMy heart was pounding, but I forced myself to relax. What would Barbara Stanwyk do? \n\nI opened my purse, pulled out my compact and checked my makeup in its mirror, pretending to touch up the lipstick on the corner of my lip. \n\n\"My heavens. Isn't this exciting.\" I made it a statement, rather than a question, carefully keeping an air of detached disinterest in my voice. \n\nI closed the compact and slid it into my purse. \"Excitement is bad for business. However entertaining it might be.\" \n\nI gave a slight, dismissive wave of my hand. Kurt and Pogo made their weapons disappear. The threat wasn't gone, though, now that everyone knew that the Huang's bodyguards were completely out of their league. \n\nA moment later, while they all calmed down, the waitress returned with my drink, utterly oblivious as she placed my drink in front of me. \n\nI took a slow sip. \"Excellent.\" I casually dropped one of the gold Krugerrands onto her tray. \n\nJonathon wore down first. \"Who are you and who do you work for?\" \n\n\"I'm Wendy and I do whatever needs to be done to keep my employers happy. Jonathon, to your second question; wise men do not ask questions they do not really want to know the answer to.\" \n\nHe resigned himself. \"What do you want?\" \n\n\"It's not about what I want. It's about what my employers want. They want their shipments to be trouble free. Your cousin can easily do that for his normal fee.\" \n\nBoth of them nodded. Very slowly. \n\nI gave them a fake-warm smile. \"See? We're friends now. Almost family. I think a little gesture on your part would be nice. Maybe a family discount. Say, ten percent?\" I took another sip of my drink. \n\nThey both nodded again, obviously numb. \n\nI let my smile slip just a bit. \"Then we're agreed. No more games. My employers have a very limited supply of patience.\" Raising one eyebrow, I glanced around. \"I'd hate to lose a club that can actually make a decent Cuba Libre.\" \n\nI cocked my head just a bit, nodded once, then stood up and stalked, maybe just a bit imperiously, out of the Eight Golden Lotus. I didn't look back, even though I could feel every eye on me. I trusted Pogo and Kurt to get me out of there alive. \n\nThe limo was waiting, but the driver was gone. Pogo politely opened the back door for me while Kurt went around and got into the driver's seat. \n\nPogo slid into the seat opposite me. As Kurt pulled away, I waited for Pogo to rip into me for taking the chance I did. Instead, his jester's grin spread across his face. \n\n\"That was perfect. Where the hell did you come up with that shtick?\" \n\nI almost gasped in relief. \"Old detective movies. I know it's cheesy...\" \n\n\"But it worked. And it worked well. I never even thought of it. Instead of hiding, just be something nobody wants to look at. Right now, they're trying to figure out if you work for the Triads, the Russian Mafia, the Chechens, the Yakuza or...\" He paused. \n\nI cut in. \"...or somebody worse.\" \n\nHe chuckled. \"...or somebody worse. Like us. Your note said there are other organizations that need straightened out?\" \n\n\"Kuala Lumpur, Taipei, Djakarta, Kabukicho, Vladivostok, a few more.\" \n\n\"I think, maybe 'The Wendy' needs to introduce herself to the community.\" \n\nOver the next several months, we did the tour, timing the visits for maximum impact. I mostly bounced in and out of Bangkok, popping over to see Chip when I could. He was reliable as clockwork. That struck me as a little bizarre. A drug smuggler with a steady schedule. \n\nPogo and Howard swapped out my 'bodyguards' to give the impression of a huge organization. Howard even went on a couple of my \"Friendship visits.\" \n\nHe chuckled all the way to the airport afterwards, commenting that I had a flair for the dramatic that was perfect. He actually insisted that I use operational funds to buy a full wardrobe of black skirt suits in silk, fine wool, and cashmere, with shoes to match, and a couple real Hermes alligator bags. He didn't want me to be caught out because of a cheap imitation. I just figured it was a sacrifice I had to make for my country. \n\nThe rumors spread through the underworld like wildfire. To add to the effect, a sumo doorman in Kabukicho - the giant red light district in Tokyo - found himself dragged through the street by his queue of hair as if he were a toddler; Amos felt - or at least pretended to feel - that the doorman hadn't shown enough respect when I arrived. I deliberately ignored the whole thing, acting as if it were beneath my notice. By the time I reached Russia and stepped in the front door of the Club Troika in Vlad, an obviously terrified white-blonde waitress was already waiting wide-eyed with my Cuba Libre. She'd been sent over as soon as I'd been sighted at the curb. To say the negotiations went smoothly was a massive understatement. \n\nThat's how I was reborn as \"The Wendy\" again. This time, though, instead of contempt, the name inspired fear and respect. I had to admit to myself that I loved it; the drama, the infamous reputation, most of all, the respect of the guys in the unit. Instead of being the \"little sister,\" I was an equal. Maybe not a gunman, like them, but still an equal. \n\nThere was one unpleasant side effect I hadn't anticipated. \n\nAfter several months, I dropped by the bar to say \"hi\" to Chip, but I only caught a glimpse of his crumpled hat as he slipped out the door at the back. At first I assumed I it was a weird happenstance, but it happened two more times and I realized he was avoiding me. \n\nI had a sick feeling I knew what was going on. Chip was too wired into the rumor mills to miss it forever, but it took me a few weeks back at the safe house and a kick in the gut to decide what to do. \n\nNone of the teams were in, so I was pretty much by myself when a formal looking envelope arrived in the dispatch bag for me. It was my final divorce decree. In a lot of ways it didn't mean anything. I hadn't seen Rob since the day I'd caught him with Captain Silicone. I'd sort of vaguely heard that he'd been transferred to Fort Benning at some point. Probably Daddy Shirling's efforts to keep the whole mess quiet. Still, it hurt a lot, like I'd done something wrong. \n\nMaybe under other circumstances, I'd have cried it out on a girlfriends shoulder. If Kurt's team had been in, they'd have poured rum and coke into me until I couldn't see straight, then have Amos and me singing the Team version of \"Family Tradition\" on the Karaoke machine. All twenty versus, even the three original, printable, ones. That's what they'd done when I was upset at being stranded in the safe house alone over Christmas. It actually worked pretty damn well. \n\nBut they weren't in and I didn't have any girlfriends to speak of. So instead, I convinced myself that I needed to check on cargo in Bangkok. Never mind the fact that there wasn't actually anything worth checking on coming down the chute. \n\nI didn't even try to lie to myself very convincingly. \n\nI got into the bar early, wearing a sundress for a change, and found a table in the corner to lie in wait for my prey. Of course that lasted about five minutes before Jack wandered over. It was probably the dress that really caught his attention.  \n\n\"You're Chip's friend, eh?\" \n\nI nodded. \"You know where he's at? Is he in town?\" \n\n\"He's about somewhere, probably come in a little later.\" Jack pulled the other chair our and sat down. \"I'll keep ya company till he gets here.\" \n\nJack spent the next twenty minutes telling me stories about his adventures across Asia, framed to make him manly and heroic. Maybe, before Rob, before hanging out with the guys on the teams, I'd have been more impressed, maybe it would have worked better. As it was, he didn't have Hollywood's smoky charm, and he simply didn't measure up against the guys on the teams. \n\nHe droned on and on until I stopped listening completely. Chip had come in and was drifting our way. He couldn't quite see me in the dark, and he seemed fixed on talking to Jack. Right up until he stepped to the table and saw me sitting there. \n\nI was going to grab his arm, but he stepped back too quickly, like he'd seen a cobra on the floor. \n\nHe looked over at Jack, a muscle twitching in his jaw. \"You're playing with fire there, Mate.\" \n\nJack held up his hand. \"I wasn't moving in on her, Chip. Just keeping her company.\" \n\nTotal bullshit, of course. Guys like Jack were always on the prowl and they were too shallow to care if they hurt a friend. If they actually had any friends. ",
        "Chip looked at me then back at Jack, I could see anger. \"That's not what I meant, Jack. That's \"The Wendy\" we've all been hearing about.\" He said it just a little too loudly and heads swiveled to look. \n\n\"Bloody Hell.\" Jack's chair hit the ground as he stood up and backed away, hand up defensively. \"Didn't know.\" \n\nChip spun on his heel and all but sprinted towards the back door. \n\nIgnoring Jack's sputtered apologies, I headed after Chip. The Wendy's reputation was working in my favor - Chip had to fight his way through the crowd, but they parted like the Red Sea for me as whispers of \"The Wendy\" raced through the mob. \n\nI could have grabbed his shirt before he got out the door, but I let him get into the alley before I did. I wanted privacy. \n\n\"Chip.\" \n\nHe froze and held his hands up a bit, then slowly turned to face me as I relaxed my grip. \"What do you want?\" \n\n\"Chip, it's me.\" \n\n\"I know it's you, I just didn't know what you were. It took me a while to put it together, then I had to convince myself it was you. Hell, here I was warning you about the Huang brothers and I should have been warning them about you.\" \n\nI scowled at him. \"Just what do you think I am?\" \n\n\"Who the fuck knows? Why don't you tell me? Triads? Russians? I've heard rumors you're Irish Provo wanted for a bunch of murders, doing mercenary work for... someone. Heard rumors you're the daughter of an American Mafia Don. All anybody knows for sure is that you're sure as fuck connected and dangerous as hell.\" He looked up and down the alley. \"And you have a shit ton of bodyguards that come out of nowhere.\" \n\n\"They're not here. I'm not working Chip. I've had a shitty week and I'm just trying to relax.\" I looked back at the door to the club and rolled my eyes. \"And that's sure as hell not going to happen here tonight.\" \n\nHe had a twitch of smile that disappeared almost instantly. \"I'm not apologizing. I don't like being used.\" \n\nI almost denied using him, but caught myself. \"I get that. I wasn't planning on actually liking you.\" \n\nMy honesty brought him up short. \"I don't want to be in the middle of this, I stay out of the bad shit. That's how people get killed.\" \n\nI stared at him. \"Chip, you smuggle drugs. I don't think you're on any kind of high moral ground here.\" \n\n\"Pharmaceuticals, Wendy. I move expired pharmaceuticals to places, people, that can't afford anything better. They still work, the big drug companies put expiration dates on a lot of stuff just so people can't store it up. What I'm doing may not be technically legal but it isn't heroin.\" \n\nThat caught me totally off guard. \"You make money doing that?\" \n\nHis mouth twisted. \"Not much, but it's a living.\" \n\n\"Really? Moving meds to people who can't afford better doesn't exactly sound lucrative. Sounds like a pretty shitty business plan.\" \n\nHe started to argue, then slumped a bit. \"Yeah. It's pretty much shit. I'm barely making it. Anything serious goes wrong with the plane and it's all over. But nobody else wants the cargo or the route, so I'm not likely to get killed over it, and it's still a decent thing to do.\" \n\n\"Sorry about misunderstanding what you do.\" I gestured down the alley to the blazing neon lights of the main drag. \"Our surroundings kind of point in a different direction. This isn't Mother Theresa Boulevard. Although I think that some of the girls at the Lucky Seven dress as nuns on Saturdays.\" \n\nHe gave a twisted half smile. \"You make it all sound so sleazy.\" \n\nI couldn't stop a giggle. \"It IS sleazy, Chip. Really, really, really, tremendously, unbelievably sleazy.\" \n\nHe threw his hands up. \"That's depressing. True, but depressing.\" \n\n\"Sounds like you could use a drink.\" \n\nHe glanced at the door. \"Not in there. If you go back in there now the place will be empty in ten seconds.\" \n\n\"That's kind of your fault you know. I've got to find a different place to hang out now. Probably have to find a place in Patpong or Nana Plaza, I'm sure the story is all over here now.\" \n\nHe shrugged, looking a little sheepish. \"Why would I drink with you anyway?\" \n\n\"Because you're my friend.\" \n\nHe started to object, but stopped. He couldn't deny we were friends. \n\nI grabbed his hand and started dragging him down the alley. \"There's a bar in the Imperial.\" \n\n\"The Bangkok Imperial?\" \n\nI nodded. \n\n\"They won't let anyone in there unless they're with a guest. Even if they did let us in, I couldn't afford a glass of water there.\" When I didn't say anything and only raised one eyebrow, his voice trailed off and he closed his eyes. \"Shit. That's where you're staying isn't it?\" \n\n\"There are some perks to being a femme fatale.\" \n\nThe doorman did give him a jaundiced look - the Imperial was snooty enough that even the hookers had to be properly dressed and well behaved. We weren't seated at the bar for thirty seconds before one of the staff brought Chip a burgundy loaner jacket and took his hat and aloha shirt. \n\nAfter a few drinks, Chip realized I was still the same Wendy he knew and he relaxed a bit, but was still a touch concerned. \n\n\"Seriously Wendy, How much trouble am I in?\" \n\n\"None. Not with me anyway. The other stuff is just business.\" \n\n\"Can I ask what the business is?\" \n\n\"Just getting cargo where it needs to go.\" I could see curiosity in his eyes. \"That's all, Chip. You don't want to know more.\" \n\nHe did, but he'd been on the fringes of the smuggling world long enough to know a serious warning when he heard one. He changed the subject. \"You don't suppose any of these lot know where my hat and shirt's gone off to? Hate to lose it.\" \n\nI poked his ribs. \"Knowing the staff here, they may have taken them to have a proper burial. That'd cut your wardrobe in half.\" \n\n\"I'd take offense at that if it wasn't true.\" \n\nI waved the bartender over. He had that perfectly calm mannerism you only see in the most experienced hotel staff. \"Yes, Madame?\" \n\n\"May I ask where Mr. Woodley's overshirt and hat have gone off to?\" \n\nHe didn't miss a beat or change expression at all. \"They've been... properly treated... and delivered to your room, of course.\" \n\n\"Thank you.\" The bartender walked off while I tried desperately not to bust out in laughter. \n\nI looked at Chip, trying to keep from losing it. \"He... he thinks you're a...\" The shock on his face was too much; I doubled over trying not to fall off the stool, laughing almost hysterically. \"Chip Woodley, International Gigolo.\" \n\nFortunately, Chip started to laugh right along with me. \"He thinks you're paying me so you can take me up to your hotel room and have your way with me? So wait, that makes me...\" \n\n\"Julia Roberts.\"I really did damn near fall off the stool at that point, only Chip's steadying hand kept me up. It was very late, and we were the only ones left at the bar, but the staff still managed to radiate disapproval at my lack of decorum without saying or doing anything. \n\nHe managed to get me back upright. \"Maybe we should get out of here. I'm not sure I want to see what would happen if they try to throw you out. If half the rumors are true, your giant bodyguards will appear in a flash of lightning and kill everyone.\" \n\nI tried to stop giggling, but it wasn't succeeding particularly well. \"Only one of them is actually giant. And they don't make any noise when they show up.\" \n\nI managed to get on my feet and grabbed his hand. \"C'mon, let's go get your shirt.\" \n\n\"And hat. I'm not leaving without my hat.\" \n\nWe padded through the extra lush carpet in the Colonial-style pink marble halls until we got to a waiting elevator. I stabbed the top floor button. \n\nChip shook his head. \"The penthouse? Of course.\" \n\n\"Perks, Chip, perks.\" \n\nOf course he never had a chance of getting out of the suite that night. The staff of the hotel obviously had it figured out before I admitted it to myself. \n\n### \n\nThe next morning, we were sitting at the little breakfast table with coffee and breakfast, in robes so thick and fluffy I wasn't even sure they were legal in most countries. \n\nChip sipped the outrageously good coffee that room service had delivered. \"I wasn't expecting that.\" He smiled, a real smile. \"I'm not sorry it happened though.\" \n\n\"Me either. But you'll probably regret it. Not only do you have to do the 'Walk of Shame' out of the hotel, but I think the staff ruined your outfit.\" I pointed up at the cleaned and pressed aloha shirt. \"They even put on all new buttons.\" \n\nChip shook his head mournfully. \"Bloody embarrassing. They have no respect for tradition. And my poor hat.\" The hat, perched on the shelf above the shirt, had been blocked and cleaned to the point where it was nearly blindingly white. Even the frayed edges had been skillfully repaired. \n\nI smiled. I couldn't help it, I'd been smiling from ear to ear all morning. \"I've got one more night in Bangkok.\" \n\n\"Let me take you out for dinner.\" He looked around the opulent room. \"Maybe someplace a bit more in my price range. You ever eat at the Royal Dragon?\" \n\n\"Is that the one where the waiters wear roller skates?\" \n\n\"Supposed to be the largest restaurant in the world.\" \n\n\"I haven't been there.\" \n\nThat evening I ended up sitting in a giant walkway-filled restaurant, eating all kinds of strange seafood, wearing Chip's hat and aloha shirt. I didn't have to drag him back to my hotel, it was more of a race. \n\nThat became our thing whenever we were both in town. The Royal Dragon for Dinner followed by breakfast in my room at the Imperial. I couldn't go back to the bars or go-go clubs on Soi Cowboy, so we kind of formalized our schedule a bit. I thought the only problems with it were how close my \"end term service\" was getting and how likely it was that Daddy Shirling was still gunning for me. Of course I completely missed the real danger. \n\n### \n\nChip had been right. It's dangerous to be caught in the middle. \n\nI was only a month from being \"out\" of the Army, and really starting to worry about what to do when I got a report from the Bangkok police. An Australian in a red flowered shirt and white hat had been dragged out of a bar on Soi Cowboy by Chinese gunmen the night before. \n\nI frantically pulled up the morning email that told me where all the smugglers were at. The Huang brothers were in Macau, and one of their planes had left Bangkok just a few minutes before, headed there with a single stop on the way. \n\nI was lucky in one thing: a Thai military flight to Macao was lifting out of U-Tapao in just two hours, and, unlike the Huang brother's plane, it was on a direct route. That would get it there less than thirty minutes after their plane. I might just make it. I used our program to put myself on the manifest as VIP cargo. \n\nKurt's team was in, but nobody had a chance to stop me as I rushed out the door of the safe house. I grabbed my gun, cash, and a stack of kruggerands. \n\nThe flight to Macao was surreal. The Thai flight crew was professional and experienced enough to have a complete lack of curiosity as to why a farang would be on the flight under National Intelligence authority. Smart men. They could probably sense my rage and barely-suppressed-panic, even though I was carefully trying to maintain my \"femme fatale\" cool. \n\nI stopped on the way out of the airport to call back to the safehouse. I expected Kurt to answer, but the line clicked over and it was Pogo. \n\n\"I'm in Macao.\" \n\n\"We figured that. Kurt found the reports right after you left the house.\" His voice was clipped. Maybe angry. The idea of Pogo or Howard actually angry was beyond terrifying. \n\n\"This was my fault, I got careless. It's my fault he's in danger. I don't have a choice.\" \n\n\"We all have choices, Wendy. It's not about having choices, it's all about consequences. There are consequences for everything. Is your... 'friend' worth those consequences?\" \n\nI stood for a second, trying to say something, say anything; but there really was nothing to say. \"I'm sorry.\" I hung up. \n\nAn airport limousine took me directly to the Huang brothers' club. Everything I'd ever heard, every story, every rumor made it clear that there was only one place the Huang brothers could be. The Eight Golden Lotus looked sad and cheap in broad daylight; a scattering of trash at the curb seemed to be appropriate garnish. \n\nThe single doorman stared at me wide-eyed as I strode up the steps. He looked at me, then down at several spots of blood on the doorsill. \n\nWhen you are out of options, bluff. I gave him a steady stare. \"Run.\" \n\nIn the back of my mind, I heard Ronni's words about becoming what you need to be. Maybe I wasn't bluffing after all. \n\nHe didn't have to be told twice. I opened the door and walked into the mostly empty club. A few scattered workers were preparing the place, cleaning the bar, polishing tables. Not paying much attention. I headed straight for the back room. I was almost to it before chaos erupted. One of the bartenders had seen me and was yelling frantically into a telephone; the girls immediately ran for the door with a more than a little panic. \n\nI saw one of the bartenders pulling a shotgun out just as I pushed my way into the door of the Huang's private room. \n\nMy stomach lurched when I saw the familiar red-and-white shirt on the figure slumped in the chair up against the table. One hand was strapped flat down on a cutting board and two fingers from it were laying in the middle of the table. There was a large pool of blood and a piece of my mind tried to distract me by questioning whether they just planned to change out the table or if they had a way of cleaning it all up. \n\nJonathon stood over him, pinning the arm still with one hand, clutching a bloody cleaver with the other. David had been trying to slap the unfortunate man awake. Both stared at me in shock. \n\nEven more so when I started laughing. \n\n\"You grabbed the wrong man.\" \n\nJack's eyes were swollen shut, and his nose was obviously broken. But it was definitely Jack, not Chip. A wave of relief swept over me. \n\nJonathon raised the cleaver a bit. \"If you move, he dies.\" \n\n\"Oh, Jonathon, I really do mean you grabbed the wrong man. This one isn't mine. Go ahead, kill him.\" \n\nA buzzing sound started behind me and David smiled a sick, sneering smile as the buzzing suddenly cut off. \"Our men are here. And if he's the wrong man maybe we should discuss...\" \n\nI looked at him, thinking through my options, I could try to take Jack and leave, but that wouldn't solve anything. \"It doesn't matter, David. You may have actually taken the wrong man, but you meant to take my man.\" \n\nI think Jonathon actually understood first, but it didn't matter. In the back of my head I could hear Kurt bark \"draw,\" and burned-in reflex took over. \n\nThe little revolver was only a few inches from Jonathon's chin when it went off, kicking his head back a little with a spray of gore. David was reaching for me, and scrambling for something under his coat, but whatever it was didn't matter. The table was in his way, and my gun roared again, blasting up through the roof of his mouth as he tried to yell something. \n\nI spun towards the door and snapped the lock. \n\nJack managed to open one eye a bit, the deafening sound of the pistol doing what David's slaps hadn't. \n\n\"You here to rescue me?\" \n\n\"No. I was here to rescue Chip.\" \n\nHis voice was slurred and thick. \"Stupid joke. Told Chip if he could land a piece like you I was going to try the same bait. Ran off with 'is hat and shirt. Stupid fucking joke.\" He laughed weakly while I used the cleaver to cut the blood soaked leather straps from the cutting board. \n\nHe managed to pull himself to sitting, then pulled the shirt off and wadded it up around his hand. \n\nI stared at him coldly. \"You're paying to have that shirt cleaned. I like that shirt.\" \n\nHe looked at me in disbelief, then nodded slowly. \"Now what?\" \n\nI paused, thinking. I had three bullets and they probably had a small army out in the club now. I wondered if I just pushed their bodies out the door, what would happen. \n\nA sudden storm of gunfire started; normal at first, but the normal gunshots were quickly overwhelmed by a familiar, oddly metallic stuttering. It didn't last long. The only sounds I could hear were my heartbeat and Jack's ragged breathing. \n\nJack started forward, but I stopped him. \"Stay here.\" He watched incredulously as I put the revolver back in its holster and opened the door slowly. \n\nI stepped out with my heart in my throat, holding my hands up and open, just a bit. \"Clear.\" \n\nTwelve of Kurt's team were fanned out across the club, fully awake, fully alive, fully aware. Every possible avenue of approach always covered by at least one set of eyes. The blunt muzzles of their MP5SDs never quite stopped moving, questing for targets as if the guns themselves were alive like hungry wolves. I didn't count the bodies on the floor of the club, but there seemed to be a lot of them. \n\nMy question of how they'd gotten here so quickly was answered by a single forlorn figure in a tattered Australian military flight suit. Looking at me for answers, answers to questions he didn't even know how to ask. \n\n\"Chip. I thought they'd gotten you.\" \n\nI stepped over a body and wrapped my arms around him. He hugged me back then leaned back and looked at me. \"You've got something on you.\" He pointed to the side of his face. \n\n\"Oh, that's Jonathon. Maybe a little David, but mostly Jonathon.\" \n\nHe turned a bit green, but tried to smile. \"Bit possessive, are you?\" \n\n\"I'm not big on sharing. It's been a problem before.\" \n\n\"I'll remember that.\" \n\n\"You'd better.\" \n\nKurt suddenly loomed over us. \"You made a choice here, Wendy. We broke a bunch of rules; pulled a lot of strings, cashed in a lot of favors, to get to Chip and to have him get us here in time. We can plead ignorance and say we didn't understand what was going on. Howard will buy that from us, even if he doesn't really believe us. You can't. I don't think you want to be here when the bosses get here.\" \n\nKurt shook his head and looked at me. \"There's a van downstairs, take it back to the airport. Go somewhere, anywhere. We'll get the other guy back to Thailand.\" \n\nI narrowed my eyes at him. \"Alive, okay? He's an idiot, but if it wasn't for him, they'd probably have grabbed Chip.\" \n\nKurt smiled and shrugged. \"He'll be okay. Maybe a bit shaken up. Just to make sure he keeps his mouth shut.\" \n\n\"Yeah, he probably needs that.\" \n\nChip sighed. \"Where do we go?\" \n\n\"I have some ideas.\" \n\nI started for the door and a low rumbling voice caught my attention. \"Make sure you take the suitcase, boss lady.\" Amos gave me a wink. \n\nAs we stepped out the door I could see Hollywood on one knee scanning up and down the street, holding a scoped rifle that looked like it might be a heavily modified M25, if I was remembering right. I could see three bodies crumpled in the street. He glanced up. \"You're a lucky man, Chip. Take care of her.\" \n\nChip looked at the sniper rifle, then down the street at the bodies. \"I will, Mate.\" \n\nWe scurried down the steps, to a white van. Chip hopped in the driver's seat while I climbed in, hitting my foot on a suitcase jammed between the seats. \"Drive fast, Chip. We really, really, need to get out of here.\" \n\n\"Who are they, Wendy? The Triads?\" \n\n\"Worse.\" \n\n\"The Russians?\" \n\n\"Worse.\" \n\n\"Christ. What could be worse?\" \n\n\"Chip, you really don't want to know. Drive faster.\" \n\nI pulled the suitcase up into my lap. It was so heavy it took both hands. I flipped it open and looked inside. \n\nIt must have been all the operational cash from the safe house, along with every last Krugerrand. \n\n\"Drive faster, Chip. Seriously. Drive. Faster.\" \n\n### \n\nSix Months Later \n\nPochentong Airfield, outside Phnom Penh, Cambodia. \n\nIt was my own fault I didn't hear them come in, I had all three fans on high. Our office air conditioner had died again, so the fan was necessary to prevent suffocation in the mid-day heat. ",
        "The guest chair scraping as it was pulled out in front of my desk was my first warning. \n\n\"They grow up so quickly, don't they, Pogo?\" \n\n\"They never call. They never write. Sad, isn't it, Colonel?\" \n\nI looked up slowly with a sinking feeling in my stomach. Howard was seated in the chair across my desk and the tall, lean form of Pogo rested lazily against the doorframe. \n\nMaybe I could convince them to just kill me and leave Chip alone. \"Chip doesn't know anything. I've never told him anything.\" \n\nHoward studied me with his cold blue eyes. \"Didn't figure you would.\" \n\nWell, at least that was something, I squared my shoulders. \"What can C&amp;W Shipping do for you?\" \n\nPogo chuckled and talked directly to Howard. \"I believe the word you used was 'chutzpah,' wasn't it?\" \n\nHoward nodded, still studying me. \"Only word for it. It's something you're born with. You either have it or you don't.\" \n\nI waited. Either they were toying with me or not, I was pretty sure I wouldn't have a chance of getting my revolver out of my desk. Pogo was too damn fast, and I was pretty sure Howard was faster than I was too. \n\nHoward put a folder on my desk. \"Your discharge papers. You've been out for months.\" \n\nI opened them and stared at the papers. \"This is real?\" \n\nPogo smiled his too-wide smile. \"You even got a Meritorious Service Medal, pretty good for a terminal Buck Sergeant. Obviously nobody in the Division would sign it, but we have connections at SOCOM. Couldn't do anything about a Good Conduct Medal though, what with the General Letter of Reprimand in your file.\" \n\nI smiled. I'm sure it was a bit crazed looking. \"I don't mind. That was worth losing a Good Conduct Medal over.\" \n\n\"We also have your stuff in the truck outside. Even all your suits and shoes.\" Pogo looked thoughtful. \"That's a lot of shoes.\" \n\nHoward gave a grim smile. \"Now, on to business.\" \n\n\"Business?\" \n\n\"Business. We, and some of our... brethren, are running into problems moving shipments efficiently lately.\" \n\n\"Really?\" I tried not to grin. They still needed me. I was sure he could see my interest though. \n\nHoward nodded sagely. \"Really. Since the unfortunate demise of the Huang brothers, there's been infighting in their organization, and that has had side effects. Nobody has managed to take it over because all their chief lieutenants are quite dead.\" \n\n\"How can I help you with that?\" \n\n\"The Huang brothers' companies have, of course legally fallen into the hands of their nearest relative.\" \n\n\"Maybe you're speaking to the wrong person. You should be talking to him.\" \n\n\"Her. Seems they had a sister.\" He slid another folder to me and waited while I opened it. \n\nA passport. I opened it. Wendy Huang, a British national, born in Hong Kong. My own picture stared back at me. \n\nPogo looked up at the ceiling. \"Educated at Vassar with a Master's in Business Administration. She has a reputation for being rather ruthless. Rumor has it she shot her brothers in the middle of their own nightclub, then had her bodyguards shoot all their lieutenants.\" \n\n\"I don't look Chinese.\" \n\n\"Half Chinese. Do you really think anyone wants to look that close?\" \n\nI squeezed my eyes shut for a second. \"At least that would take care of the Senator Shirling issue. I could visit the states.\" \n\nHoward tossed another folder on the desk. \"I forgot about that. The good senator is trying desperately to keep his daughter out of any further news stories.\" Pogo was laughing softly. \n\nI flipped the folder open and stared at the front page of the Sun newspaper from a month or so before. \n\nBIPARTISAN SPIRIT! SENATOR'S DAUGHTER REACHES ACROSS THE AISLE! \n\nBrandi Shirling was on the front page, with her naughty bits blurred, obviously wearing nothing but thigh high boots and a strap-on that looked like it doubled as a door breaching ram. A man older than her father was tied up naked on the bed. Head down, butt up. \n\n\"Is that...? \" \n\n\"Yes, that's Dennis Velman, the Democrat challenger to Senator Shirling in the last election.\" \n\nI snickered. \"I guess he's getting used to being screwed over by the Shirlings.\" \n\nHoward stared at the picture for a bit. \"She is being asked to quietly resign her commission 'for the good of the Army.' Needless to say, the good Senator has lost interest in pursuing anything that could cause any further press interest in his daughter at this juncture.\" \n\n\"I'd guess not. And the camera does add thirty pounds, doesn't it?\" \n\n\"Isn't that supposed to be ten?\" \n\n\"Maybe she just got fat. How did this happen?\" \n\n\"It's a long story, but Pogo has contacts.\" \n\nWe just sat for a few moments. \n\nHoward finally sat back. \"So we have an agreement? You take over the Huang network for us and keep it running for us.\" \n\nI summoned my inner femme fatale. \"For the right price, of course.\" \n\nPogo looked amused. \"That's only fair, but I'd think, given that you disappeared with nearly half a million dollars in operational cash, that you'd offer us a family discount. Say ten percent?\" \n\nI couldn't stop the grin that time. \n\n### \n\nPost Production Notes: \n\nThe MP5SD is a silenced 9mm submachine gun used by spec ops all over the world. \n\nThe M25 is a essentially a sniper version of the venerable M14. \n\nWendy's Smith and Wesson Model 38 Airweight Bodyguard is a nod to fictional counter-spy Matt Helm. \"The Toughest Spy to Ever Crush a Kidney with a Crowbar.\" \n\nThe \"Needles story\" is very much a true story. It happened to our Team Medic. Scared the living hell out him. He fortunately did not pick up any diseases, but we gave him a pretty rough time about it for a damn long time."
    ],
    "authorname": "Todd172",
    "tags": [
        "the shack",
        "violent",
        "wendy",
        "pogo",
        "kurt",
        "thailand",
        "smugglers"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/learning-the-smugglers-blues"
}