{
    "title": "Breakfasts with Tiffany",
    "pages": [
        "Gilbert unlocked the door to the apartment and walked in. It was Saturday morning, so he expected to be alone. His younger roommates spent every weekend visiting with their families. He had kissed his family goodbye six years ago, and never looked back. Well, almost never, he thought as he strode through the living room and into the kitchen. He opened the refrigerator and noted with annoyance that there were only two beers left. His roommates had once again left him hanging.\n\nJason and Kevin weren't quite old enough to buy beer, but they didn't let that stop them from drinking most of his. A note sat on the counter next to the refrigerator. The note didn't catch Gilbert's attention so much as the fifty-dollar-bill on top of it. He chuckled as he read, \n\n\"IT WASN'T US! \n\nHad some friends over and they drank your beer.\n\nSo Sorry!\n\n-Kev\"\n\nHey, if they were willing to cough up fifty bucks for nine dollars worth of beer, that wasn't going to bother Gilbert. It did mean he had to go back outside and delay his normal weekend routine, but since he was still dressed he headed out the front door and made a quick trip to the store for beer and snacks. He knew everyone that worked at the corner store across the street from his apartment complex. He chatted with the manager as his beer, chips and pretzels were rung up.\n\nGilbert lived for his weekends alone. He and his hippy parents had their differences, which had eventually led to him telling them off and leaving to join the military. Even though he had been out of the Corps for two years, he still kept his hair cut short. Not high-and-tight short, but he would never be comfortable with his hair growing over his ears again.\n\nThe one thing he did miss about home, though, was the comfort of casual nudity he had growing up. Now that he was out of the service, he embraced the opportunity. Every weekend, his younger roommates would drive three hours to their hometown to stay with their families. Gilbert took advantage of their absence to simply relax naked in his apartment.\n\nOccasionally he would prioritize sex over relaxation. He had no shortage of opportunities to date now that he was in college full time. He had his G.I. Bill to pay his tuition, fees, books, and rent. A part time job gave him \"beer money.\" Wednesday and Friday nights he worked security at a fairly popular dance club, and that provided not only income, but additional occasions to hook up. Last night had been a prime example of that. Sitting naked on a towel on his living room couch, Gilbert popped open a beer and took a nice slow sip as he let his mind replay those events.\n\nTwo drunk guys had gotten into a fight in the club. They had been tossed unceremoniously. That had not been an issue. When the club closed and their girlfriends realized they had no ride home, Gilbert had gallantly offered to give them a ride. They were drunk and horny and extremely grateful. Both were very attractive young ladies. They hadn't had to pay for a single drink all night.\n\nBack at their apartment, the girls invited him inside for \"coffee.\" They didn't actually have any coffee, but they did have eager cocksucking mouths. They also had wet little pussies that badly needed to be fucked. He also discovered a pair of tight, horny assholes that were in dire need of a good, thorough stretching. He had just the tool for the job.\n\nOne girl went to shower, as soon as they were inside. The other pushed him onto the couch, fished out his thick dick and licked and sucked him eagerly. By the time her friend emerged from the bathroom, Gilbert was at full mast and his hand gently guided her head up and down in his lap. She slowly revealed his hard cock to her friend as her lips withdrew.\n\nBoth girls had dyed their hair blonde. They had done a good job of it; if not for the tiny patch of dark pubic hair revealed when the freshly showered blonde dropped her towel, Gilbert would not have known. After she had gotten a nice mouthful of his erection, she led him into her bedroom. She crawled up onto the bed, looking saucily over her shoulder. Gilbert quickly slid to his knees behind her.\n\nShe was watching him in her bedroom mirror as he took her snug pussy. The girl had a very expressive face. He enjoyed seeing her wildly horny expressions in the mirror. Especially captivating were her wide-open eyes looking right into his as he took her. It was almost as much of a turn on as the visual stimulation of his cock opening her up while she knelt on the bed in front of him.\n\nShe gasped and came on him for the second time when he started teasing her throbbing little sphincter. This little sweetheart nodded eagerly at him and handed him a bottle of something called \"Pro Anal Lube.\" Gilbert had to hand it to her, once he had applied a little of the stuff to her tight little rubbery ring and his throbbing cock head, she did indeed take it like a pro.\n\nHer helplessly turned on expression in the mirror, and her wildly swinging breasts, just added to the insanely erotic sight of her back door gobbling up his dick. The gripping heat of her horny ass was too much. He exploded inside her after only three strokes once he had worked his full length into that sweet bottom. The girl went into a spasm as her own climax was triggered. Her eyes rolled up into her head, and then she passed out cold. Gilbert was a bit concerned, until the other girl spoke softly from the doorway.\n\n\"It's okay,\" she said, \"she passes out sometimes, if she's been drinking. But only when she has a really intense orgasm.\"\n\nGilbert had turned in surprise when he first heard her. He nodded when she finished. She looked at his cum-covered cock and licked her lips.\n\n\"Did you save any for me?\" she asked.\n\nHe had indeed. Unlike her friend passed out in the other bedroom, this one was insatiable. It wasn't that he was keeping score or anything, but Gilbert was certain of at least five intense orgasms that her molten pussy had around his invading dick. This darling girl was very tight. He almost believed her when he first penetrated her snug ass and she gasped, \"Oh! No! What are you doing? Nobody's ever done that to me!\"\n\nIt didn't stop him, of course. It merely made him savor her tightness more. If it was indeed her first time taking it in her ass, she certainly took a liking to it. As he was coming into her clutching butt for a second time, Gilbert made a mental note that he needed to secure a supply of this \"Pro Anal Lube.\" The stuff was downright magical.\n\nGilbert kissed the second girl tenderly before he left. He didn't leave his number or anything. These two had boyfriends who were obviously trouble. If they sorted that out and wanted more of him, they knew where to find him.\n\nAfter finishing his reflection and his beer, Gilbert ambled into the bathroom for a relaxing shower. He dried himself off completely and hung the towel up to dry. He was on his way to the kitchen to make himself a late breakfast when he realized his solitude had been invaded. A pretty young woman was standing in the living room. Her eyes were wide when she saw his naked body strolling by.\n\nGilbert managed to remain calm. Obviously, this wasn't a burglar. His expression was stoic as he turned to face her. He smiled thinly, once he made eye contact, but he made no effort to cover his nakedness or apologize for it. He recognized that it was Tiffany, Kevin's girlfriend, who was standing there. Even though he was the one who was naked, she was the one who was embarrassed. \n\n\"Hey, Tiffany,\" he said evenly, \"What can I do for you?\"\n\nInvoluntarily, she looked at his thick dick before forcing her eyes back up to his face. She was blushing furiously when she finally managed to stutter out, \"Oh, uh, uh, Gilbert! I was just dropping by to, um, that is, I didn't think anyone would be here.\" She shook her head, pulling an annoyed face and closing her eyes. She took in a big breath and blew it out. \"That didn't come out right. I was trying to, um...I was thinking...\"\n\nGilbert thought to himself, \"This could take a while.\" Out loud, he said, \"Look, Tiffany, you're obviously uncomfortable with this. I'll put something on and be right back.\"\n\nSo much for a nice relaxing Saturday.\n\nGilbert pulled on some baggy shorts and an oversized t-shirt. It took two minutes. Tiffany was still standing exactly where she was when she first saw him. Gilbert motioned her to have a seat, and joined her on the couch.\n\n\"Okay, Tiffany, just so you know, I usually like to chill out naked on Saturdays and Sundays when Kevin and Jason are at their folks' places. My parents were always nudists, so it's very comfortable for me. Now that we've got that out of the way, what brings you here today?\"\n\n\"Well, I'm sorry to intrude, Gilbert. Do you know my roommates?\"\n\nGilbert shook his head. Hell, he barely knew Tiffany.\n\n\"Well,\" she continued, \"I have two roommates. One of them, Tanya, likes to have her family come visit on weekends. They all use the pool, barbecue on our patio, that sort of thing. But it's like eight or nine people all show up every weekend. I just thought...I thought nobody was here and I could get away from that noise and relax. I'm sorry to have bothered you.\" Her voice had trailed off quietly at the end.\n\nShe stood to leave, but Gilbert felt sorry for her. Tiffany looked so sad and desperate. He could certainly relate; his relaxing weekends were what kept him on an even keel through the insanity of his busy weeks.\n\n\"Hey, Tiffany,\" he said softly, \"I don't have to be naked this weekend.\" He shot her a genuine smile then, and she smiled weakly back at him. \"I was about to make some breakfast,\" he continued, \"Have you eaten?\"\n\nTiffany was enormously relieved. The tension visibly flowed out of her and she said brightly, \"All I've had was a quick cup of coffee. Would you like me to help you cook something?\"\n\nThey relaxed together and made some eggs and French toast. Fresh coffee washed it down. Once again, Tiffany started to thank him and leave, but Gilbert beat her to the punch.\n\n\"How long would you have hung out if I hadn't been here?\" he asked.\n\nTiffany hadn't really thought about it. She took a moment before answering, \"I would probably have stayed until tomorrow night. I would have slept over, and been glad for the peace and quiet.\"\n\n\"Does Kevin even know you're here?\" Gilbert asked.\n\n\"No,\" Tiffany looked a little nervous about that. She didn't want to be seen as untrustworthy. Kevin had given her a key, after all.\n\n\"Maybe you should call and let him know that you're here,\" Gilbert prompted, \"just so there isn't some unpleasant accusation later on. Let him know that I'm here, and that I'm cool with you hanging out as long as you want.\" \n\nTiffany was both relieved and intrigued. It was a smart suggestion, and one she hadn't thought of at all. She had perhaps seen Gilbert around the apartment a dozen times before today, and he simply hadn't been all that friendly. She pulled out her phone and called Kevin.\n\n\"Hey, babe,\" she said when he answered. She explained the situation at her apartment, and mentioned dropping by Kevin's place. She didn't mention that Gilbert had been naked, but did say that he was there and was \"cool with me hanging out, as long as that's okay with you.\"\n\nKevin was fine with it, although a little surprised. Gilbert always came across as a little gruff with his younger roommates\u2014even though he was only four years older. While Tiffany was on the phone, Gilbert cleaned up after breakfast. As he was putting away the butter, a bit of it got on his thumb. He idly rubbed it between his thumb and index finger before washing it off. It reminded him of the lube from earlier and he mumbled, \"Oh, yeah. I need to write that down so I don't forget.\"\n\nHe grabbed a post-it note and scribbled \"Pro Anal Lube\" on it, stuffing it into his shorts pocket. After he had finished the dishes and Tiffany had finished her phone call, they relaxed on the couch and tried to find something interesting on television. Instead, they found themselves bonding as they rejected awful show after offal show. Seriously, how did these network executives still have jobs after they put all this crap on the air?\n\nRather than watching television, they somehow wound up having a really stimulating discussion about economic theory. As ludicrous as the idea would have seemed, it arose out of a class Gilbert was taking and that Tiffany and Kevin had taken the previous semester. None of them would have taken the class if it wasn't a required course. Gilbert had to admit he was enjoying the class and learning more than he had expected.\n\n\"Kevin hated that class,\" Tiffany giggled, \"We took it together. I wound up doing most of the work on my own to carry our little group project. He had no interest whatsoever in talking about that class.\"\n\nGilbert was aware of what Kevin's interest in the lovely young lady was. A couple of late weeknights he had heard them going at it through the apartment walls. To be honest, if he were her boyfriend, he wouldn't be sitting on the couch discussing economics either\u2014pleasant though that had turned out to be.\n\nNoon rolled around, and an alarm went off on Gilbert's phone. He grinned as he turned it off.\n\n\"Do you have to be somewhere?\" Tiffany asked.\n\n\"Nah, that's my 'beer o'clock' alarm.\"\n\nTiffany had to choke back a laugh. \"You have an alarm for that?\"\n\n\"I try not to drink before noon. Some bullshit study said that people who drink before noon are much more likely to end up alcoholics. So I avoid that.\" Gilbert's grin said that this was a running joke. He did get up to grab a beer, though.\n\n\"Would you like one?\" he called from the refrigerator.\n\n\"Um, sure, I guess,\" Tiffany answered. She wasn't a big fan of beer, but thought it would be rude to turn down the offer.\n\nGilbert shook his head at her. \"If you don't like beer, I can get you something else. You don't have to do anything you don't want to do with me, Tiffany. I'm not the one trying to get into your pants.\" He waggled his eyebrows to let her know he was trying to be funny.\n\nTiffany had to really think. She honestly couldn't recall any alcoholic beverage she had ever consumed that she really liked. \"I think there was a wine cooler that wasn't awful,\" she finally said, \"but I couldn't tell you what it was.\"\n\n\"Be right back,\" Gilbert walked back across the street and cleared it with the manager, pulling together a mixed six-pack of various wine coolers. A couple of young female customers commented that two of those were not very good, so he took their recommendations for replacements. It took all of ten minutes.\n\nWhen he came back to the apartment, Gilbert thought he heard moans of a sexual nature coming from inside. He stopped and put his ear to the door. The unmistakable sound of porn came softly through the door. He grinned and imagined how Tiffany's face would look, before he decided against embarrassing her for a second time today. He dropped his keys loudly, then picked them up and took his time unlocking and opening the door.\n\nTiffany had time to turn off the video player and to rearrange her shorts so that it wasn't obvious that she had been playing with herself. Gilbert presented the beverage offering with a flourish.\n\n\"I'll be right back,\" he said, before he ducked into his bedroom and returned with a small notebook and a mechanical pencil. \"We'll take notes on these wine coolers. We'll figure which ones you can stand, and which ones never to buy again.\"\n\nShe had three of them over the course of the afternoon. The third one, one of the ones that the young women at the store had recommended, was the only one to make the cut. Gilbert went to the kitchen to get another beer and another wine cooler for her. He was unaware that his receipt and the post-it note dropped out of his pocket. He came back with the two beverages and Tiffany was red-faced as she handed the two pieces of paper to him.\n\n\"You dropped these,\" she managed to say. She couldn't bring her eyes up to meet his.\n\nWhen Gilbert saw the post-it note, he barked out a laugh before apologizing. \"Wow, I am so sorry about that. I had a...hmm. I can't think how to put this without it being more embarrassing. I just jotted that down so I wouldn't forget to check on it.\"\n\nHe was a little buzzed from the beer, so he figured he would check on it now so he could get rid of the post-it entirely. In his bedroom, he opened his laptop. The search results were not promising. Evidently, the product was one that a company called Adam and Eve used to carry, but no longer did.\n\n\"That's a damned shame,\" Gilbert said softly.\n\n\"What's a damned shame?\" Tiffany asked. She was standing in the doorway to his bedroom, with her fourth wine cooler in hand.\n\nGilbert turned the search screen toward her. \"They don't make the stuff anymore. I only found out about it last night. I was hoping to buy some of it.\"\n\nTiffany made a sour face after a big slug of the wine cooler. \"Ugh. This is the worst one by far.\"\n\n\"Just dump it out, then. I'll make another run before they close and get you more of that one you liked.\"\n\nHe hopped up, looking at his watch. He had another couple of hours before the store stopped selling alcohol.\n\n\"Tell you what, come here.\" He led her to the kitchen, and handed her the other 'recommended' wine cooler. He took the open one from her and took a sip before dumping the rest down the drain. It was pretty bad.\n\n\"Try this one before I go. Two female customers recommended this brand, and the other one that you liked. Tell me if I should get you three of each, or just six of that other one.\"\n\nTiffany took a sip, and lit up. \"Oh, wow! This is the best one of all. Get me more of this, please.\"\n\nGilbert nodded and left. It took no time at all to make the purchase and return. When he got back, Tiffany was on her phone.\n\n\"I'm ordering pizza. What do you like on yours?\"\n\n\"What are you having on yours?\" he asked.\n\n\"I was getting pepperoni and sausage.\"\n\n\"That will work for me.\"\n\nThe pizza arrived a half hour later and Tiffany paid for it. They munched on pizza and chatted for another hour. Gilbert had consumed a six pack of beer over the afternoon and evening. Tiffany had also had six drinks. She was really starting to feel them. She started slurring a bit, and Gilbert gently took her drink from her. \n\n\"It sounds like you've had enough for today,\" he said softly to her, \"I think it's time for bed.\"\n\nHer eyes shot open wide. At her reaction, he calmly continued, \"Please don't make a mess in Kevin's room tonight. I would rather we don't have to spend all day tomorrow cleaning up in there.\"\n\nHe walked Tiffany to Kevin's bedroom, and she slumped into the bed. Gilbert turned off the light, closed the door, and then went to his own room. He was asleep immediately.\n\nThe next morning, he woke up to the sound of rather loud snoring. At some point in the night, Tiffany had gone to the bathroom, and she had left the bedroom door ajar when she went back to bed. Gilbert rose from his bed with a sigh and went to close that door. He stopped in the doorway.\n\nTiffany had taken off her clothes. She was mostly under the covers of Kevin's bed, but her gorgeous bottom was sticking out from beneath the covers, pointed right at the doorway. Her lightly-fuzzy little peach and pale pink, wrinkled sphincter both looked delectable. Gilbert could easily imagine how tight those inviting orifices would feel wrapped around his thickening cock.\n\nHe shook his head as he closed the door. A large glass of ice water helped him calm down immensely. He was pleased to see that Tiffany hadn't made a mess in the bathroom as he showered. He got out and was toweling his back when she walked right in.\n\n\"Oh, sorry!\" she got out, \"I really have to pee.\"\n\nGilbert nodded and walked past her to finish drying in his room.\n\nHe lay back down on his bed to relax for a bit, once he was dry. His arms were crossed behind his head and he stretched out his shoulders and back. He heard a soft knock on his door, and sighed before answering.",
        "\"I'm still naked in here, but you can come in if you want to,\" he said. \n\nThere was a slight pause, and then the door opened. Tiffany saw that he was indeed naked.\n\n\"You really don't care if I see you naked?\" she asked softly.\n\nHe shrugged. \"I'm not trying to parade around naked to make you uncomfortable,\" he said, \"I would be relaxing like this anyway if you weren't here.\"\n\nHe saw her expression. She looked like she was going to offer to leave again. Maybe that would be the best thing, he thought. He was a little surprised at her candor when she finally did speak.\n\n\"Look, Gilbert, you have been just awesome. I really want to tell you to go ahead and be comfortable, but I have to tell you, I will probably stare at your dick if you do that.\"\n\nHis cock thickened a bit at the thought of her staring at it. He glanced over at her, and she was staring at it now.\n\n\"Maybe that would be okay next weekend,\" Gilbert said, \"I'll throw on some shorts for today.\"\n\nHe did that, foregoing a shirt. Tiffany surprised him again, opting to lounge around in one of Kevin's oversized t-shirts. They had a nice breakfast again, and then found they could both relax and enjoy a steady diet of the show 'How It's Made' on the Science Channel. He realized when he got up from the couch that she was wearing a thong underneath the shirt. He was fairly certain she wasn't wearing a bra. Without that constraint, her breasts were significantly larger under that shirt than he had suspected.\n\nIt did give him a little bit of a thrill, seeing her like this, but he refused to dwell on it. Instead, they relaxed together. It was not the same as his naked weekends had been, but it was still nice. Neither of them drank like they had the day before. As the sun set, Tiffany got dressed to go back to her apartment. She gave Gilbert a kiss on the cheek before she left.\n\n\"Gilbert, this weekend was absolutely awesome. Thank you so much. I really needed this.\"\n\n\"You know, I really had a good time with you as well. We should do this again,\" Gilbert's smile was genuine.\n\nThroughout the next week, Gilbert did see Tiffany visiting her boyfriend a couple of times. He was really busy with his classes, homework, and work. By the time he got off work at three o'clock Saturday morning, he was bushed. He got out of the shower and zonked out naked in his bed. The intoxicating smell of coffee and bacon woke him up a few hours later.\n\nGilbert stumbled out of bed. He had to use the bathroom, but he did peek into the kitchen and called out, \"Smells delicious!\" before relieving himself. He washed his hands and face, and took a few minutes to shave before walking out of the bathroom. He was about to offer to get dressed again, but he saw that Tiffany was bent slightly at the waist. All she was wearing, evidently, was a t-shirt today.\n\nGilbert admired her exposed bottom for a minute, then shrugged and walked into the kitchen. \"Good morning, Tiffany. How are you today?\" he said as he poured a cup of coffee. She jumped a bit when he said it. She hadn't heard him come out of the bathroom, and he was standing right behind her. Tiffany coughed out, \"I'm okay,\" as she surreptitiously looked over his muscular backside.\n\nGilbert turned and sipped his coffee. He saw that everything was almost ready for them to eat. He set the mug down and got plates and glasses from the cabinet. Tiffany could not help but stare in fascination at Gilbert's cock. Unlike the last time she had seen him, he was hard now. He could feel her stare as they started eating breakfast. He sighed.\n\n\"Sorry, Tiffany, it's just my 'morning wood.' It will go away after I eat.\"\n\nShe looked up with a little blush at being caught staring. \"It wasn't like that last weekend. Is it usually so big?\"\n\nHe shrugged. \"Last weekend, I was just coming home after getting laid. I had cum three times. This guy,\" he touched his dick lightly, \"was completely worn out by the time you saw me.\"\n\n\"Oh,\" Tiffany's mind ran through that information. \"She had that 'Pro Anal Lube,' then?\"\n\n\"One of them did. I have to say, it worked really well.\"\n\nTiffany regarded him closely through narrowed eyes. He didn't seem to be joking, or messing with her. \"So, you had sex with two women last weekend, right before we hung out?\"\n\n\"Yeah. They were stranded at the club where I work after their boyfriends got themselves kicked out. They needed a ride home, and I offered them a ride,\" his eyes were alight as he recalled that night, \"They were very appreciative.\"\n\n\"Wait, are you saying you just met these two girls, they invited you back to their place, and you...you fucked one of them in her ass?\" Tiffany's face was incredulous.\n\n\"No, actually I fucked both of them in the ass. It was quite a morning.\" Gilbert's still-hard dick throbbed at that memory.\n\nTiffany stared at him. Her mouth was slightly open. She snapped it shut when she realized how she must look. Then she shook her head ruefully and went back to eating breakfast. As he had predicted, Gilbert's dick softened once he had eaten. Tiffany still thought it looked pretty big. It was certainly thicker than any of her boyfriends had been. It was also clearly thicker than her trusty vibrator. She couldn't help but imagine how that would feel inside her.\n\nThey finished breakfast and cleaned up afterward together. Tiffany marveled at the easy confidence with which Gilbert carried himself. He was completely naked, but seemed oblivious to his nudity as he washed and dried dishes. He carried on talking to her in a perfectly normal tone of voice. She was at least partially dressed, but she was far more nervous. She couldn't seem to stop staring at his exposed body, even after the dishes were done and they were once again seated in front of the television.\n\nHer constant staring was making Gilbert a bit uncomfortable. By uncomfortable, of course, it meant that he was beginning to get another erection from the attention. Also, he could smell Tiffany's aroused pussy. She was obviously very juicy under that shirt. Gilbert sighed and got up from the couch. He returned with a bath towel wrapped around his waist. He carried a second one, folded in half.\n\n\"Sorry, Tiffany, but could you stand up for a second?\" he said it softly, and his expression was still calm.\n\nTiffany stood without comment, although her eyes were questioning. He put the towel in her spot. \"Thanks,\" he said.\n\nHe sat back down, and she sat on the towel. It took a couple of minutes for her to puzzle out the reason for the towel. She blushed slightly, but decided not to mention it. They sat and didn't say anything for a while after that.\n\nEventually, they realized they were watching a rerun of a show that hadn't been that good in the first place. Gilbert offered Tiffany the remote. \"This is rubbish,\" he said. His voice had a low, gravelly texture to it that made her pussy wet just hearing it. \"Would you like to find something for us to watch?\"\n\nTiffany made a game effort, but it was tough. She wound up settling for Food Network. It was the least of the evils on at that time. Gilbert's noon alarm went off. Tiffany giggled and said, \"Yay! Beer o'clock!\"\n\nGilbert laughed, but it was cut short when Tiffany got up from the couch to fetch their drinks. Her sexy ass and glistening pussy were exposed a couple feet from his face before she stood upright. They both sighed heavily after that first refreshing sip, which caused them to look at each other and share a smile. Tiffany had been a bit hung over the previous Sunday, so she paced herself better this time. Gilbert drank three beers in rapid succession, then switched back to drinking coffee. He was nice and mellow.\n\nHe did have to go to the bathroom, though. When he returned, he was wrapping the towel back around his waist. Tiffany bit her lip, but then decided to ask anyway.\n\n\"Gilbert, would you mind sitting on top of your towel?\" She didn't have to say, \"I'd like to see your dick,\" they both understood it was what she was really asking.\n\n\"Um...I don't think it's a good idea.\" He looked at her. \"You are a very attractive woman. When you stare at my dick like that, I can't help but get turned on. It's kind of the opposite of relaxing for me.\"\n\n\"Oh,\" she said. She was obviously disappointed. \"I'm sorry. I guess I like looking at it a little too much.\" She sipped the last of her second wine cooler until it was gone.\n\nShe rose and disposed of her empty, then got a third. When she got back, she was pleased to see that Gilbert had changed his mind. He was sitting on top of the towel. His cock was limp between his muscular thighs.\n\n\"I was thinking about it and realized,\" he said when he caught her gaze, \"I've had three beers. I'm not getting hard anytime soon.\"\n\nHe sipped his coffee and turned his attention to the television. Tiffany sat and took a sip of her drink. It really was quite good. \"Thanks for this, Gilbert,\" she said softly to him. He smiled at her, and she leaned her head on his muscular shoulder. It was comfortable for both of them, and became even more relaxing when he wrapped his arm around her shoulder and gently rubbed her upper arm.\n\nThey sat like that, watching various foodie shows for a couple of hours. Eventually, though, she did have to use the restroom. Tiffany excused herself with a sigh, sorry to leave the warmth of that embrace. After she had relieved her bladder and washed her hands, she felt a little shiver as she pulled the t-shirt over her head. She looked into the bathroom mirror. Her nipples stood hard with arousal, straining out from her impressive breasts. She reached down between her thighs and moaned when she felt how soaking wet she was.\n\nIt was too much, she realized. As much as she wanted to share in the nudist experience, she looked too damned horny in that mirror. She pulled the shirt back over her head and made her way back to the living room. Gilbert was no longer on the couch when she got there. He was starting some dinner in the kitchen. He had thrown on a blue apron as he cooked something that smelled amazing.\n\nGilbert turned and smiled at her as she approached. \"This is the downside to watching Food Network,\" he said, \"I went from pleasantly relaxing to starving during that last show.\"\n\nNeither of them could recall the name of this dish. One of the contestants on Iron Chef had whipped it up, and Gilbert had done a fair job of replicating it in his kitchen. The conversation was pleasant, the food was delicious, and the company was very attractive. They each had a small scoop of ice cream for dessert, and Gilbert made a fresh pot of coffee.\n\nAfter dinner, they carefully set the hot mugs on the coffee table and relaxed back into the couch. There was a movie coming on that they both wanted to watch. It wasn't new, just something neither had seen that was coming on to a network for the first time. The downside was that there were commercials. The upside of commercials was that they had opportunities to talk throughout the movie without interrupting it.\n\nHalfway through the movie, Gilbert had to go to the bathroom again. Tiffany got them fresh coffees while he was doing that. Gilbert looked like he was going to ask her something, but the movie started up again. At the next commercial break, Tiffany prompted him.\n\n\"You looked like you were going to ask me something during that last commercial break,\" she said, looking up at him.\n\nGilbert thought about it for a second. He remembered, but wasn't sure he should ask.\n\n\"I don't want to embarrass you,\" he finally said.\n\n\"That's okay,\" she responded, \"I'm a grown woman. If I think it's too embarrassing, I won't answer you. Does that sound fair?\"\n\nHe grinned, \"Alright, last Saturday, when I came back with your wine coolers, I thought I heard porn through the door.\" She was embarrassed, but nodded. Gilbert continued, \"So, was that your plan originally? You were going to come over here to watch some porn in privacy?\"\n\nTiffany sighed. \"That was my plan, yes. I brought the DVD and my vibrator in my purse. At my apartment it was so loud I couldn't hear the movie over all of Tanya's relatives. I knew Kev and Jason were out of town, and I thought you worked on weekends.\"\n\nGilbert was careful not to picture this gorgeous, half-naked woman in his arm...doing that. Instead he asked, \"Did you still want to do that? I could clear out and let you have the room.\" She shook her head vigorously in response, causing her bra-less breasts to wobble enticingly in her shirt. He grinned, \"Maybe after the movie, then?\"\n\nShe grinned back. \"I didn't bring the DVD or the vibrator this time. Plus,\" she ran her nails up his thigh, \"I've got an actual hot naked guy right here. Why should I watch porn?\"\n\nHer touch on his naked skin definitely crossed a boundary. Gilbert took a sip from his coffee. \"Maybe you can do that next weekend, then,\" he finally said.\n\nAt the next commercial break, it was Tiffany's turn. \"Look, Gilbert, I have to know. What you were telling me about last Friday night...that really happened? You had anal sex with two women you just met?\"\n\nGilbert shrugged. \"Yeah, but it wasn't just anal; that was the last part with both of them. Why?\"\n\n\"I was thinking you must really be into that\u2014anal sex, that is. It's something I've never done, so I was curious,\" she answered honestly. \"Kevin has hinted a few times that he'd like to try it, but he's never done it before either. From what I've read, it's something you need to be careful about trying, or it will hurt like hell.\"\n\nGilbert nodded as she laid it all out. \"That is correct,\" he said when she stopped. \"The preparation part...it's not sexy, but if you don't prepare properly it will hurt. Also, if you actually tear something down there, it can take a really long time to heal.\"\n\nShe looked into his eyes intensely, then down at his mostly-soft cock. \"Talking about this doesn't turn you on?\" she asked, \"I have to tell you, it's gotten me seriously wet.\"\n\nThe movie came back on, sparing Gilbert having to answer. He did have her wet pussy on his mind after she mentioned it. That started getting a rise out of him. Tiffany noticed and was a little distracted by it. Neither of them had the excuse of alcohol anymore; that was out of their systems by the time the movie ended. They sat on the couch when the next movie started. It was already well after midnight, but neither wanted to be the one to end their comfortable and gently arousing embrace.\n\nIn the end, it was Tiffany's full bladder that decided the issue. She reluctantly leaned forward and stepped out of Gilbert's warm arm. \"Sorry,\" she mumbled, \"but I really have to pee.\" Gilbert couldn't help himself. As soon as the bathroom door closed behind her, he picked up the towel she had been sitting on. He inhaled the pungent aroma of her aroused pussy from the damp towel.\n\nIt was late. He really needed to go to bed before they did something they would regret. He picked up his own towel and headed toward his bedroom. Tiffany emerged from the bathroom and they appraised each other in the hallway.\n\n\"I think I should turn in,\" Gilbert spoke up first. \"Thank you for another lovely Saturday.\"\n\nTiffany smiled and rose on her tiptoes to give him a hug. Her arms wrapped around his neck. Her shirt rose up, presenting her fuzzy little pubic patch to the base of his erect shaft. Her eyes opened wide when she felt that. Gilbert hugged her briefly, the towels in his hands making it a little awkward. He smiled as he released her and felt her eyes on his cock once again as he turned in to his room.\n\nHe flipped on the lights and tossed the towels into his laundry hamper. He would need to wash some clothes tomorrow, he thought. He turned back around and Tiffany was just inside his bedroom door. Her eyes went from his torso, to his bed, then down to his erection before making their way back to his face. She was clearly turned on, her hard nipples pressing impressively against the fabric of her shirt.\n\nGilbert was torn. Clearly this ripe young vision of sexuality was his for the taking if he wanted her. And he really wanted her. Despite the clich\u00e9, though, he really did have a sense of honor. Kevin was an alright kid, and he didn't want to hurt him. Also, if he took Tiffany now, the relaxed flirting and conversations would be gone. Worse still, she might be torn by guilt and regret afterward; she might never come back to visit him.\n\nHe walked over and enfolded her in a tight hug. His erection pressed firmly into her belly, so there was no missing his arousal. He growled softly into her ear.\n\n\"Tiffany, you really need to go now. I love hanging out with you, sharing breakfast and talking to you. I love the flirting that we have going on.\" He leaned back and looked into her lust-filled eyes. He sighed, \"But I need you to go. If you wound up in my bed with no panties, I would have no choice but to fuck you. That would probably ruin what we have going on here.\"\n\nIt took all of Tiffany's self control to back away. Her knees were weak and shaky. She wanted so badly to kiss him. She wanted to jump right into his bed and let the fucking begin. However, she knew that he was right. Once that started, everything else would most likely end. She would spend her weekends sneaking around to have sex with her boyfriend's roommate.\n\nShe lay naked in Kevin's bed torturing herself with her thoughts over the next hour. She had masturbated to try to clear her mind of the lust that was clouding her thinking. Twice. It was still overwhelming. Finally, she got out of the bed and padded naked to Gilbert's bedroom. She laughed softly when she found that he had locked his door. It was, once again, a smart move that hadn't even crossed her mind. Tiffany was surprised to find that she was happy about this as she went back to her boyfriend's room and lay back down.\n\nWith the temptation taken away, she was able to think clearly. What she and Gilbert had now was special. Oh, he was still going to fuck her. It would be amazing, and she could hardly wait. In the meantime, though, they were going to have so much fun enjoying the journey there together.\n\nThe next morning, it was Tiffany's turn to be awakened by the promise of heaven wafting in from the kitchen. She emerged to see Gilbert once again wearing his blue apron and a smile as he cooked for them. He heard her bare feet on the kitchen tile and turned to smile at her. He had the proverbial deer-in-headlights look as he was finally faced with her fully nude form. The old Seinfeld line ran through his head immediately, \"They're real, and they're spectacular!\"\n\n\"Wow!\" was all he managed to get out. He gave her a big grin and went back to tending the omelets. All through breakfast, they couldn't help but check each other out.\n\nThey flirted a bit more than they had before, and her nipples and his dick were erect all day long. The feeling of Gilbert's arm over her naked shoulders, rubbing her bare arm, was far more arousing than Tiffany expected. She was sure she was absolutely drenching the towel under her bottom. Gilbert's nostrils flared as he smelled her aroused pussy all morning. He kept licking his lips, imagining how delicious she must taste.\n\nBeer o'clock rolled around again, and they each had a pair of beverages. The cool alcoholic liquid helped calm their fevered arousal. They found a new shared interest in one of those home makeover shows. They also made a game of adding running commentary through the show.\n\nThey started laughing uncontrollably after Tiffany had used a deep male voice to make a mocking comment about the classic crown molding of a room, and then the host of the show said almost the exact same thing. Tiffany spilled a bit of her wine cooler at that, and Gilbert hopped up and used his towel to dry the little spot on the couch and her leg. She reflexively spread her legs when he rubbed her thigh with the soft towel.",
        "Gilbert stood back up. He couldn't help but look at her gorgeous little pussy, spread open invitingly. A little smile played across his lips as he took in the beautiful sight.\n\n\"What's so funny?\" she asked. She could tell he was looking at her exposed pussy. It was turning her on something fierce.\n\nGilbert smiled at her, looking her in the eye as he softly answered, \"It looks like I missed a really, really wet spot, there.\"\n\nTiffany looked up at him. He looked so sexy smiling in front of her like that. His dick was completely erect again. It would be so easy to just lean forward for a taste, she thought. She also realized that the sun was setting. She sighed loudly, letting Gilbert get away. She finished her drink and took the empty bottle to the kitchen.\n\nGilbert's eyes followed her swaying butt all the way there. He had growled softly and taken two steps toward her before he even realized he was doing it. He grinned to himself and stopped, draining the last of his beer before walking over to drop it in the trash.\n\n\"You know,\" he said, \"I feel bad about not recycling these cans and bottles. However, I had a friend who did save up his empties for recycling. He got pulled over and got a thousand-dollar ticket for driving with an open container in his car\u2014even though all of the open containers were in trash bags.\" He shook his head at that memory.\n\nTiffany had a slightly shocked expression when he looked back up at her. \"Seriously?\" she asked.\n\n\"Why would I make that up?\" Gilbert responded with a shrug.\n\nThe shrug made his erection bob up and down in front of him. The glistening drop of pre-cum made Tiffany lick her lips. She just had to know how that tasted. Gilbert just stood frozen in astonishment as she casually walked over and ran her index finger up the slit. She popped her finger into her mouth and closed her eyes with a sigh. It was every bit as tasty as she had hoped.\n\nWhen her eyes opened, Gilbert had an annoyed look on his face. \"I can't believe you just did that! You didn't even ask.\"\n\nTiffany managed to hold back\u2014she had almost apologized automatically, but she caught the playful gleam entering Gilbert's eye. He was trying hard to keep the annoyed look on his face, but it was crumbling. She couldn't help as she watched him struggle not to smile. She started to giggle.\n\nHis eyebrows shot up. \"How dare you, madam!\" he said melodramatically. And then, he found her weak spot. He tickled her exposed ribs.\n\nTiffany shrieked as she tried to fight him off. She was terribly ticklish, and her helpless laughter only encouraged Gilbert's nimble fingers to continue their assault on her sensitive flesh. Her breasts shook enticingly with her laughter, and they wobbled crazily as she dashed into the dining room to escape him. He chased her twice around the table before she ran down the hall and dove into his bed, hiding beneath the covers.\n\nGilbert pulled up and once again admired her sexy backside peeking out from beneath the sheet. His cock throbbed at the sight of that wet pussy, exposed and ready to be taken. They just didn't have time. Kevin or Jason could come back at any moment.\n\nGilbert slid one thick finger into her sopping-wet opening, forcing a gasp from under the sheet. He then yanked the sheet off of the horny woman so she could watch him pop his finger into his mouth and savor her juices. The taste was delectable; pure, sweet honey on his tongue. When Gilbert released his finger from his mouth, he reached to pull Tiffany to her feet. He growled in her ear.\n\n\"Now we're even,\" the hunger in his voice made her legs weak. He smacked her lightly on her sexy bottom and then guided her back toward Kevin's room. \"You'd better get dressed. Kevin could walk in that door at any minute now.\"\n\nAs it happened, Gilbert barely had time to get dressed and remove the potentially incriminating towels from the living room before both roommates returned. Kevin was delighted to find his girlfriend, clad only in one of his t-shirts, waiting for him in his room. She was all over him. In his own room, Gilbert smiled as he heard them moaning in shared pleasure. He was dismayed and saddened when those sounds ended after a mere six minutes.\n\n\"That's a damned shame,\" he said softly.\n\nAfter Tiffany had gone, Gilbert actually sat down for a beer with his roommates. It was the first time he had ever done so. The three of them just relaxed and talked, mostly about school. After a second round, Gilbert got a serious expression.\n\n\"Look, guys, I just want you to know I have no problem if you want to drink here in the apartment. I'm fine if your girlfriends want to come over and drink with you\u2014as long as they stay over. I am a little concerned about some of your friends coming over, though,\" he made sure they were paying attention before continuing.\n\n\"I'm just a couple years older than you are. Pretty soon you'll be able to buy your own alcohol. Right now, there are some underage people coming over and getting drunk. If they get into an accident, or get arrested for a DUI, then I would be the one going to jail for contributing to the delinquency of a minor. That I am not cool with.\" He had poked his index finger into the tabletop for emphasis.\n\nJason and Kevin both nodded. Jason cleared his throat and said, \"Alright, we will make sure that doesn't happen.\" Both of them could easily envision some of their younger, deadbeat friends\u2014the ones who helped themselves to Gilbert's beer and never paid\u2014getting pulled over. It took no imagination at all to see one of them throwing Gilbert under the bus.\n\nKevin smiled as he posed a question he had been afraid to ask. \"So, Gilbert, you're a bouncer at that nightclub, and you're an ex-marine, right?\" Gilbert nodded. \"Do you think you could throw someone off the balcony and into the pool from here?\" he continued. The pool was a good thirty meters from the balcony.\n\nGilbert looked thoughtful for a moment. \"That would depend on how much they weigh, I guess.\"\n\nThere was a moment of silence. When Gilbert grinned and took a sip of his beer, the younger men exploded with laughter. This guy was all right.\n\nThat week, Gilbert never saw Tiffany. She was only able to find time to visit with her boyfriend on Wednesday night, when Gilbert was working at the club. For a Wednesday night, the place was packed. It was good for business, but it meant that he was on his toes all night long. At one point, the police came to escort an especially drunk and rowdy young man off the premises. Gilbert didn't get home until almost four in the morning, and he had a class at nine. He groaned as he set his alarm and collapsed into bed. He hadn't even noticed Tiffany's car in the parking lot.\n\nWhen the club closed Saturday morning, Gilbert was once again the knight in shining armor, driving three drunken young women back to their sorority house. They were absolutely trashed. He was relieved that none of them vomited in his car. Once he had escorted them to their door, he politely declined the invitation to come inside. He flashed them a winning smile, wishing them a good night's sleep before getting in his car and driving home.\n\nThe club manager really did value Gilbert, and was aware that he sometimes gave drunken patrons a ride home. He would slip Gilbert some \"gas money\" whenever he noticed it happening, and this had been no exception. Gilbert was a little surprised when he reached into his pocket and found that the club manager had slipped him a pair of hundred-dollar bills. Business has been good, Gilbert reflected as he walked up the stairs to his apartment.\n\nBecause he was distracted, he once again missed that Tiffany's car was in the parking lot.\n\nHe was absolutely exhausted. He stumbled into the bathroom, emptied his pockets onto the bathroom counter, and left his clothes in a rumpled pile on the bathroom floor. The hot water of the shower was incredibly soothing, washing away the smell of the bar and relaxing his muscles. Gilbert stood beneath the healing spray of water for an extra five minutes after he had washed and rinsed, just relaxing.\n\nFinally he turned off the water and dried himself. He gathered his clothes, keys, and the rest of the small pile from next to the sink and walked into his room. When he turned on the bedroom light, he froze. Tiffany was asleep in his bed.\n\nThis time, it was her head and shoulder that were exposed, lying on the pillow and facing away from him. He quietly slid his clothes into the hamper and set everything else on top of his dresser. He lifted the sheet and he was actually relieved to see that Tiffany still wore her thong. He was just too exhausted to try anything, but if she had not been wearing that tiny garment, he would have felt obligated to do something.\n\nHe turned off the bedroom light and snuggled up behind her, gently wrapping his arm around her waist. He loved the smell of her hair and the softness of her skin against him. Oblivion dropped on him like a cartoon anvil, and he was out.\n\nTiffany had also had a long and tiring week. She had missed even seeing her new friend all week long. Kevin had given her some grief for not spending more time with him, but there honestly wasn't anything she could do about it. She went out of her way to stay overnight once, but that was probably a mistake. She was so tired she could scarcely keep her eyes open, and after he perfunctorily filled her with a load of his cum, she was asleep.\n\nHer phone was in her purse, and she was so tired she didn't hear it. She overslept her alarm Thursday morning, and missed an hour of lecture for one class. It probably wouldn't impact the A she was going to get in the class, but it really irritated her. That bad mood persisted through the day. Kevin really got on her nerves at lunch, and she was able to avoid him for the rest of that day and Friday without being obvious.\n\nFriday night, she did feel a little guilty. She called Kevin as she drove to his apartment. When he answered, he was already on the road and close to his parents' house. Jason was driving the two of them this weekend, and made sure to say 'hi.' Tiffany apologized for being so busy, and promised to make it up to him. Even as the words came out of her mouth, she wondered. Why was she always the one apologizing?\n\nShe pulled in to the parking lot in front of her boyfriend's apartment and turned off her car. She sat there for a while. \"What am I doing here?\" she wondered silently. She wasn't really happy with Kevin anymore. It was Gilbert who filled her fantasies now. She had driven here to keep her boyfriend happy just so she would have an excuse to see Gilbert again. She had only spent two weekends with him, but those weekends had been almost magical.\n\nShe realized two things with a start. She had begun touching her eager little pussy through her panties as soon as she was thinking about Gilbert. Also, she had now been sitting in her car in the parking lot for a half hour. She opened her glove box and pulled out the DVD she had put there early in the week. She stuffed it into her purse and got out of the car, making her way up to the apartment. By the time she had opened the door, she was determined to enjoy this weekend with Gilbert before she made any decision about Kevin.\n\nA naughty thrill shot through her body as she stripped off her clothes in Gilbert's bedroom. She showered and washed her hair. She rubbed her throbbing clit in the shower and came quickly. She took her time in the shower, knowing she had the place to herself for the next several hours. She soaped her butt hole and slid a finger inside it, giving her body an illicit shiver.\n\nOver the last two weeks, she found herself touching that forbidden hole more and more often. She had to admit, at least to her self, that it gave her far more pleasure than she ever would have suspected. In those honest moments of introspection, she knew that she was looking forward to having Gilbert open her asshole. A second soapy finger joined the first as she imagined the look on his face as he explored her ass. She just knew he would make it pleasurable for her as he prepared her...as he lubricated her ass...so that he could fuck it.\n\nWith her soapy fingers buried deep inside her clutching asshole, she came again in the shower. She rinsed the soap from her body and dried thoroughly. She looked at her face in the mirror dreamily as she brushed out her hair. Back in Gilbert's bedroom, she started to slide naked between the sheets. She stopped and debated with herself for several minutes. Finally, she slid her thong up her thighs and then got into bed. She was sound asleep three hours before Gilbert arrived home.\n\nShe did not wake up when Gilbert joined her in the bed. As she felt his warm body press up against her and the welcome arm wrap around her, she smiled in her sleep.\n\nGilbert had very dark curtains in his bedroom. They helped him fall asleep on those occasions when it was still light outside, like when his schedule allowed him to grab an hour or two of naptime, or those mornings after he got off work but could sleep in past sunrise. Enough dim light did get in to the room that Tiffany was able to see clearly when she woke up.\n\nShe felt so comfortable lying in Gilbert's bed. The warmth of his body wrapped around her as it was just made her feel safe and at ease. His throbbing cock pressed against her crotch from behind made her feel sexy and desirable. She felt his slow breathing against the back of her neck and it gave her goose bumps. She carefully rolled away from him, resting her head in her hand so she could watch him as he slept.\n\nOver his shoulder, she could see the digital clock on his desk. It was a quarter past nine. She had fallen asleep a little before midnight and was well rested. She had no idea what time he had gotten home, but suspected he had not gotten more than six hours of sleep. Deprived of her body in his arm, he rolled onto his back and began to snore softly. Tiffany slid beneath the sheet, treating herself to a nice close-up view of that lovely hard cock. Only her suddenly urgent need to relieve her bladder kept her from molesting Gilbert in his sleep.\n\nShe padded silently from the room, closing the door softly behind her. She went to the bathroom. As she washed her hands afterward she realized she needed to fix her disheveled hair. She took her time doing so, and by the time she emerged from the bathroom she had enough self control that she steered past Gilbert's bedroom door and went to the kitchen to fix a fresh pot of coffee.\n\nWhile the coffee brewed, Tiffany got a dry bath towel and put it on the couch. As she slid off her panties, she considered the towel. It was another example of the way Gilbert's mind worked. Putting a towel on the couch was a clever move; it was thoughtful and sensible. It was also something that she would not have come up with on her own. She would have left a fragrant puddle on the couch, and struggled to clean it up later.\n\nThis sort of thing was at complete odds with her preconceived notions of what it would be like to date a Marine. This guy was thoughtful, clever, sensitive and funny. She smiled as she thought about that, about him, walking to the kitchen to get a cup of coffee.\n\nShe turned the television on, making sure to turn the volume down to let Gilbert sleep. She slowly sipped her way through two cups of coffee while idly flipping through the channels. She had to admit, this naked solitude was relaxing. She had almost forgotten she was even naked until she made the mistake of resting the third hot mug of coffee on her thigh. She wasn't scalded, but it did hurt a bit and brought her attention to her nudity.\n\nThat, in turn, made her think of the naked, sexy man in the next room. It was now after ten thirty. If she was nice about how she did it, perhaps she should wake him up. A sexy smile played across her lips as she quietly opened the bedroom door. She was once again moist with anticipation.\n\nHe was still asleep, but looked like he was waiting for her. He had pushed the sheet to the side in his sleep and now lay on his back with his legs slightly spread. Unlike her lightly furred bush, he was completely smooth below his navel. Her mouth was watering as she slid up from the foot of the bed on her belly. The thick head of that tasty cock filled her wet mouth like never before.\n\nShe softly sucked him, savoring the manly taste that enveloped her taste buds. She was rewarded with more of his sweet pre-cum and soft, sensual moans from his throat. She felt her own liquid arousal as she enjoyed the taste of that spongy mouthful. After several minutes, Gilbert's eyes slowly opened and met hers. He smiled down at the lovely face between his legs.\n\n\"Good morning,\" he said softly. His soft voice still carried that manly, gravelly tone that sent shivers all through her body. Her nipples stiffened against his thighs.\n\nShe released him from her mouth softly, smiling up at him. She held his hard, saliva-slicked cock in her little hand as she said, \"Good morning to you. I was really hungry, and I found this delicious sausage. I hope you don't mind, I just had to help myself to it.\"\n\nShe sucked him back in a bit more insistently. Gilbert groaned at the lusty sight. He allowed himself to enjoy two more minutes of that beautiful blowjob before he pulled her up for a kiss. It was a far gentler kiss than she was expecting. His lips pulled softly on hers, and his strong arms pulled her heaving chest to his in a loving embrace. He released her and she sat up on his lap, feeling his hard cock pressed against the crack of her ass.\n\n\"Did you bring me anything to eat for breakfast, Tiffany?\" he asked with a smile.\n\nShe thought quickly. \"Well, I do have this little muffin for you,\" she said, \"but it is awfully moist.\"\n\nHe reached for her hips and easily pulled her forward, bringing that muffin right to his mouth. His eyes met hers as he said, \"My favorite.\" Then his mouth began devouring her moist opening. His technique was by far the most exquisite that she had ever experienced, and it wasn't even close. She had a tremendous climax almost immediately, and in less than a minute it was followed by another that was even more intense.\n\nAs amazing as his talented mouth and tongue were, the searing look in his eyes raised her desire to a fever pitch. His strong hands gripped and kneaded her bottom at the same time, thrusting her onto his invading tongue and giving him unprecedented access to her juicy interior. She was reduced to a gasping, shaking, orgasmic puppet in his hands. When he had finally had his fill of her tasty nectar, he pushed her by her hips so that she was sitting on his chest.\n\nHis mouth was covered in her juices, and his talented tongue snaked about gathering it up. That looked intensely erotic to her as well. She couldn't wait any longer. She slid down his muscular torso and reached behind her to guide that throbbing cock into her needy pussy. She was shocked when he stopped her. His eyes were filled with determination as he looked up at her. Tiffany had always taken quiet pride in her lithe, muscular legs. They were no match for his strong arms as he seized her buttocks and pulled her away from her goal.\n\n\"Tiffany,\" he breathed, \"we can't do this.\"\n\nShe growled in frustration and tried to fight him off. Her frantic efforts were useless; he was just too strong. Finally she lost her composure and yelled, \"Why not?!? Please! Let me have it!\"\n\nGilbert sighed and rolled her off of his torso. He rose from the bed and smiled down at her sadly. \"Oh, I really, really want to let you have it.\" There was enough strained lust in his face, and his raging erection also gave credence to his words. \"Right now, though, I have to use the bathroom. After that, we definitely need to talk before we start acting like animals in heat.\"",
        "He walked out of the room. Tiffany fumed in his bed. Dammit, she was an animal in heat! She listened to him urinating in the next room, and somehow that calmed her down. He hadn't been lying about having to go. He wasn't toying with her or trying to be mean. She got up from the bed and paced back and forth. She then spied the small pile on his dresser. Keys, cell phone, wallet...and two hundred dollars in cash?\n\nHad he gotten laid before he came home\u2014and been paid for it? It would have seemed a completely ludicrous idea if it was anyone else, but with Gilbert it was just possible. She was standing in front of his dresser holding the two crumpled bills when he came back into the room. She turned to him, wide-eyed.\n\n\"Did someone...pay you to have sex with them?\" her voice was tinged with hurt disbelief as she asked.\n\nGilbert looked at her and chuckled softly as he took her in his arms. \"No,\" he whispered in her ear, \"I haven't had sex with anyone in the last two weeks until this morning. My manager gave me that money for giving some really drunk patrons a ride home before I came back here.\"\n\nThat answer shook Tiffany. She hadn't really thought about it, but they had already had sex. She hadn't been filled with his cock the way she wanted, but his tongue had certainly had its way with her.\n\nShe had already cheated on Kevin.\n\nHer face was troubled as she slid from Gilbert's arms and sat on the bed. He sat next to her and rubbed her back, letting her think without saying anything. Finally, in a very soft voice, she spoke.\n\n\"I don't know what I'm doing with Kevin anymore.\" She turned and looked into Gilbert's eyes. \"I might even have broken up with him this week, but then I wouldn't have gotten to see you.\"\n\nGilbert let that sink in, and turned it around in his mind a bit before he spoke. \"If you and I hadn't been spending these past weekends together, would you feel the same way? Would you have been so eager to break up with Kevin after one rough week?\"\n\n\"No, I guess not,\" she replied. She didn't have to give that much thought.\n\n\"How long have the two of you been together?\" Gilbert asked.\n\n\"Almost a year,\" she responded, \"We started dating right after the Thanksgiving break last year.\"\n\nHe nodded, \"I presume you guys are in an exclusive relationship, right? Kevin would not be alright with walking in and finding us naked together.\"\n\nTiffany nodded glumly. \"Yeah.\"\n\n\"Look, Tiffany, I really like you. I think you are sexy as hell. But, we barely know each other.\" She looked a bit hurt at that, but his compassionate expression told her he wasn't finished. \"If you weren't dating Kevin, if we had met at school or somewhere, I would be eager to get you naked in my bed.\"\n\nHe smiled softly as he realized that she was already naked and in his bed. She saw his eyes take in her breasts and smiled back.\n\n\"You know what I mean,\" he said, \"we wouldn't be sitting here talking right now.\"\n\nTiffany shivered at the thought. Why couldn't she have met Gilbert first? However, he still wasn't finished.\n\n\"Here's the thing, though. If we had hooked up and I brought you back to my apartment, we would never have gotten to the point of having these weekends together. I haven't been seeing anyone seriously since I started school here. You're beautiful and sexy and smart, but I would have probably only had you over once.\"\n\nHe mulled that over for a bit, realizing it made him sound really shallow. And like a horny jerk. He frowned and shook his head, \"That didn't come out right at all. I think what I meant to say was, if you hadn't been Kevin's girlfriend, we would not have had the chance to be 'just friends' for the time we've hung out. Does that make sense?\"\n\nFor once, Tiffany really felt like he was the one who was uncomfortable. She couldn't help but savor it. She grinned as she said \"Nope. That makes no sense at all.\"\n\nGilbert took a moment to figure out she was messing with him. He had already opened his mouth when he saw her grin and realized she had 'got' him.\n\n\"I'll tell you what,\" she went on, \"You can think about it while you fix me some breakfast.\"\n\n\"Yes ma'am,\" Gilbert breathed, leaning in to kiss her before heading to the kitchen.\n\nTiffany flopped back onto the bed. She was still just impossibly turned on, but somehow she felt more in control than ever after that last exchange. For once, she felt like she was his equal and not the na\u00efve, self-conscious one in their relationship.\n\nGilbert had time to really think deeply about what he should say while he scrambled the eggs, mixed pancake batter, and then cooked breakfast. If he truly explained everything, it meant opening up to Tiffany about a lot of personal, emotional baggage. He wasn't sure he wanted to do that\u2014wasn't sure he even owed it to her.\n\nHe could just give her what she obviously wanted. They could have some amazing sex. He looked at her naked body and it took no imagination at all to picture how sweet it would be to take her. If they were careful about it, they might never get caught. He sighed at that. His sense of honor wouldn't allow for it. He would have to open up and share, after breakfast.\n\nTiffany could tell that he was edgy as he mechanically consumed his breakfast. The food was good, as always, but neither of them really enjoyed eating. They were both far too tense. She was a little afraid of what he might say after they had cleaned up the dishes.\n\nThey sat across from each other at the dining room table. Gilbert looked grim as he started to speak.\n\n\"I told you that my parents were nudists, and that they were hippies, right? Well, they also had an 'open marriage.' They were just fine with having people over and having sex with them. Since they were always that way, I didn't think too much of it. The real downside for me of growing up in a nudist household like that was that I had zero fashion sense. It wasn't until junior high that I realized I was dressed like a total dork.\n\n\"In the grand scheme of things, it wasn't that big a deal. I got picked on by other kids, but I was so laid back it just didn't bother me that much. Later on, when I got interested in girls, it was a bigger deal. By then, though, I was figuring out what to wear to school to fit in. My mom was fine with me picking out my own clothes. I started dating in high school like all the other kids. I just didn't bring any girls home. I couldn't really figure out how to explain to 'normal' girls that we were naked all the time at our house.\n\n\"Finally, I was dating this girl, Lindsay. I had asked her to the senior prom, and she said 'yes.' My mom was really excited for me. She talked with Lindsay's mom on the phone, and rented a tuxedo for me that would go with Lindsay's prom dress. Lindsay's mom dropped her off at our house just after noon the day of prom. I had finally managed to tell Lindsay that my parents were nudists, and she seemed all right with it. She came in and she just looked amazing in that dress. She looked like a princess from a movie. My dad had her sit next to him on the couch while my mom took me back to my room to help me put on my tuxedo.\n\n\"It seemed to take a really long time for me to get ready. My mom kept cooing about how handsome I looked. She kept nit-picking the outfit, the tie, the little flower thingy. After a good half hour, we finally went back into the living room...\n\n\"And there, right on the couch, my dad was fucking the shit out of Lindsay. Her breasts were out of her top, bouncing around like crazy, and the bottom half of the dress was sitting crumpled on the floor. She was groaning out loud, bouncing up and down on his lap.\n\n\"As you can imagine, I was shocked. I had only seen Lindsay's breasts once before that. Oh, wait, it gets worse. I walked around the couch, and not only is my dad fucking her, he's fucking her in the ass. His cum is already drooling out of her pussy. He was gripping her hips and just pounding his dick up into her. All I could do was watch helplessly while my dad just helped himself to my eighteen-year-old girlfriend.\n\n\"He started grunting and I realized he was putting another load of cum up my girlfriend's perfect little ass. She was moaning and shaking the whole time. My mom was standing naked next to me and she said some shit like, 'Oh, that is so beautiful.' Then my dad said, 'You sure brought home a winner, this girl is amazing!'\" Gilbert just shook his head at the memory. Tiffany could scarcely breathe. She was unbelievably aroused as she pictured that scene.\n\n\"I was so pissed off at my parents after that,\" Gilbert went on. \"I had always thought there were limits, but that day I realized they were like wild animals. They let their lust control them, and didn't care who they hurt. That was hands-down the worst day of my life, and I wouldn't wish that day on anyone. I joined the Marines so I could learn to discipline my self. I wanted to have that sense of honor that my parents didn't.\"\n\nHe looked into Tiffany's eyes, \"That's why, even though I think it would be amazing to have sex with you, I just can't. I have loved these weekends we have shared. I enjoy being with you, flirting with you, imagining what it would be like if we were lovers. But-\"\n\nTiffany stood up and rushed to him, cutting him off. She slid into his lap facing him and kissed him passionately. When she finally let him breathe, her voice was as intense as the look in her eyes, \"You are not your dad, Gilbert. You have been a sexy gentleman to me the entire time I've known you. What I do find infuriating is that you clearly have no problem fucking other women who have boyfriends. So, I understand why you don't think this is a good idea, but you're not being fair to me.\"\n\nHer pussy was drenched as it slid up the shaft of his cock. Gilbert's eyes shot open when he realized that his story had turned her on. As his cock was engulfed by her eager pussy, all he could think was, \"Dad would just love this girl.\"\n\nTiffany moaned as he took her hard nipple into his hot mouth. She bucked up and down as his hard cock filled her, even better than she had imagined. She was spread open wide to accommodate his girth. It took longer for her to work her way down his welcome invader than it did for her to reach a toe-curling orgasm once it was sheathed inside her.\n\nGilbert was deeply torn. He had a certain amount of self-loathing; he had let this get out of hand when he felt he should have stopped her. At the same time, Tiffany's sweet little pussy was everything he had dreamed. She was eagerly squeezing him, so tight around his shaft. When she finished her first climax, he slid his hands around her and seized her soft buttocks. He stood up carefully, and she wrapped her legs around him. As he walked them to the bedroom, his cock moved around delightfully inside of her.\n\nTiffany was consumed with pleasure as this strong man took her in his bed. She looked up at him and shook as he opened her thighs wide. He was deliberate as he entered her, taking his time to slowly work his iron shaft into her snug interior. He used long, slow strokes to fuck her. She had felt like his equal less than an hour ago, but now he was clearly the one in charge. He was masterful in pleasuring her body. His big dick just owned her pussy, and she loved it. His mouth took her breasts, her neck, her earlobes and her own gasping mouth.\n\nHis hands gently turned her over after she had lost track of her orgasms. He pulled her hips up from the bed and his mouth devoured her drenched pussy from behind. She came again, powerfully, as his tongue drove inside her spasming channel and lapped up her juices.\n\nTiffany gasped out loud and looked over her shoulder as she felt that tongue licking around her tender little butthole. Surely, he wasn't planning to lick her there, she thought.\n\nOf course, he was. Not only that, but his snake-like tongue was soon invading her ass. She could not believe how much intense, perverse pleasure her tender bottom was experiencing. Thousands of nerve endings in and around her virgin rosebud were being thoroughly stimulated like never before. She gasped loudly when he slid up behind her and started teasing her wet, opened sphincter with the throbbing tip of his cock. He leaned over her back and whispered hotly into her ear, \"Not yet, Tiffany, but you know it won't be long.\"\n\nShe could only quiver again at that thought. Three weeks ago, she would have been terrified at the prospect. That big, fat dick opening her asshole? There was no way she would have believed how much she desired it now.\n\nHis strong hands seized her hips and then he was plundering her eager pussy again. He was still maddeningly in control, holding back from just pounding her. Her juices were flowing down her thighs continuously, soaking the bed linens beneath her knees. His clean-shaven balls were smacking audibly against her sensitive clit when it wasn't being stroked by the wide, invading shaft. She had never imagined it could be like this.\n\nHe teased her winking asshole again, this time with a saliva-coated thumb. She felt his cock get even harder inside her as his thumb began to slowly work its way inside her clutching backside. \"He's watching everything,\" she realized, \"He can see his cock spreading my pussy wide open. He is getting turned on looking at his thumb fucking my ass!\"\n\nShe had already climaxed so intensely, so many times that she couldn't keep track of which was the most powerful. When he groaned \"I'm going to cum, Tiffany,\" and she felt him swelling inside her stretched little pussy, it had to rank right up there. She could distinctly feel each rope of his semen as it shot out of him and splattered the depths of her. Her cervix was drowning in his cum. He held still inside of her, panting into her ear as he lay across her back. The two of them slowly collapsed forward onto the bed.\n\nTheir combined juices began to flow out of her, around his softening shaft. They were christening his bed with their cum.\n\nAfter lunch, Gilbert got dressed. Tiffany looked at him curiously. \"I have got to do laundry,\" Gilbert explained. \"There's no sense in you going with me, just relax here. I'll be back in a couple hours.\" He stripped the cum-soaked sheets from his bed and tossed them into his full hamper. He gave her a deep, probing kiss before he headed out the door.\n\nWhile he was gone, Tiffany showered. She was amazed at the volume of cum that drained out of her well-used pussy. Her teasing, soapy touch at her asshole made her legs so weak that she nearly collapsed in the shower. She couldn't help but picture Gilbert's young girlfriend, having her ass filled with a thrusting hard cock. Tiffany couldn't wait to be that girl\u2014Gilbert's eager little butt-slut.\n\nGilbert really had needed to do laundry. He had been far too busy the past week to take care of it. Additionally, though, the laundromat that he frequented was just a few doors down from an adult video store. He had investigated the place, briefly, several months earlier while his laundry was in the washers. He knew that they carried a variety of adult toys. As soon as his clothes were in two washers, he sauntered down to the seedy porn shop.\n\nBehind the counter was an attractive middle-aged woman. She looked him over with more than passing interest when he walked up to the counter and smiled at her. Most guys who came in looked like some sort of clich\u00e9 of the sneaking pervert. They avoided eye contact and sort of skulked around the store.\n\nGilbert walked right up and put out his hand, taking hers in a comfortable squeeze when she offered it. \"Hi there,\" he said, \"I hope you can help me with something.\"\n\nCrystal, the woman behind the counter, also hoped she could help him with something. When he mentioned \"Pro Anal Lube,\" she felt her sphincter pucker up delightfully. She could picture this virile young man pounding her eager ass. She had to think about it for a while, but she did remember the product.\n\n\"We used to carry a bit of the stuff,\" Crystal explained, \"I'm pretty sure it was a silicon-based lubricant we carried for anal sex.\" She turned and pulled a series of black bottles from behind her, setting them on the counter. \"This is the 'next generation' of that type of lube.\"\n\nGilbert looked them over. There was a numbing version, a warming version, and one specifically for anal. He picked up the last one. \"I will buy this, um...\"\n\n\"I'm Crystal,\" she said.\n\n\"Crystal. I'll go ahead and pay for this, but I would like to open it before I go. If it's not the same at all, I'll be looking to get something else instead. Is that alright?\"\n\nIn her head, Crystal was cursing the luck she was having. Normally, on a Saturday afternoon, the place was dead. Today, there were six other customers in the store, counting the three back in the video booths. Otherwise, she would have closed the store to let him get the full demonstration. She would love for him to use the slippery lube on her cock-hungry ass right then and there. Despite his short haircut, she was fairly sure he was straight. Many of her customers who came in looking for anal lube weren't.\n\nGilbert could plainly read the lust all over Crystal's face as she nodded. \"That will be fine,\" she said, \"We have a satisfaction guarantee on everything in the store.\"\n\nThere was, of course, a tamper seal. He removed that plastic seal and popped open the cap. The gel was incredibly slippery on his fingers. His eyes lit up as he rubbed the lubricant between his thumb and two fingers. He looked up at Crystal, who offered him a tissue to wipe off the slippery stuff.\n\n\"Thank you so much, Crystal. This is exactly what I was looking for.\" She started to look a little desperate as she rang up his purchase. Gilbert leaned forward and softly said, \"Crystal, I use this laundromat every other week. I'm kind of with someone right now, but would you mind if I visit you again next time I do laundry?\"\n\n\"That would be great!\" she replied. Her eyes gleamed as she smiled at the attractive younger man. She watched his fit backside as he walked out the door. It took a few minutes for her to curse herself silently again. Damn it, she should have gotten his phone number!\n\nGilbert took the bag with his newly acquired lubricant to his car. He stashed it in the glove box, and then snagged his Calculus text book from the back seat. He sat and gave himself a headache with the complicated mathematics while his clothes were washed and dried. He had picked that course for a reason, though. It did take his mind off of Tiffany until he was returning to the apartment with his clean clothes; he wasn't sitting in the laundromat with a raging boner while he waited on his laundry.\n\nBack at the apartment, Gilbert smiled at Tiffany as he sauntered past with his hamper full of clean clothes. In his room, he pulled the generic-looking bag from atop the clean clothes and set it on his dresser. Tiffany came in and helped him make the bed, and then she lay on the bed and watched him as he folded his clothes. His motions were like a laundry-folding machine\n\nHe was very efficient and folded each piece to a consistent size before putting it away. His 'work clothes' were white tuxedo shirts which he hung in the closet with the suits. As he worked, he hummed and smiled. He looked at the sexy naked woman lying on his bed. When all the clothes were folded and put away, he undressed and turned to face her.\n\n\"Hey, there,\" he said, looking into her eyes. Once again, his voice sent a thrill through her.\n\n\"Hi,\" Tiffany replied softly.\n\n\"I got something at the laundromat,\" he said, pulling the little black bottle from the bag.\n\nHer eyes shot open when she read the label.\n\n\"What kind of laundromat carries that?!?\"\n\n\"Oh, it's a full-service laundromat,\" he quipped. He grinned to let her know he was joking.\n\nThat sexy grin and the black bottle of lubricant in his hand also announced his intentions. He didn't have to say, \"I'm done holding out. I'm going to turn you virgin asshole into my favorite plaything.\" She knew it was about to happen.",
        "Tiffany could scarcely believe she was doing it as she rolled onto her hands and knees in the bed, turning to present her freshly-washed bottom for his inspection. Her pink sphincter was on fire with its urgent need. It needed to be opened; it wanted desperately to be used for his pleasure. Her asshole needed to be fucked.\n\nGilbert bent and held her hips open wide, as his tongue lapped from her clitoris all the way up to her sphincter. Her juices were absolutely delicious, lubricating his tongue so that it slid easily into her butthole. He tasted the faint residue of soap deep inside her bowels. His eyebrows rose at that. Tiffany had clearly been preparing her ass for him while he had been out.\n\nHe stood and slid his throbbing cock into her waiting pussy. It was still very snug, but she was so horny, was so saturated with her juices, that it took only a minute for him to be balls-deep inside her. Tiffany began pushing her butt toward him, eager to be taken again. Then, she heard that magical little sound for the first time. That soft \"pop\" of the bottle of lube being opened.\n\nGilbert had told her previously that the actual preparation of an asshole before anal sex was necessary, but not sexy. She had to disagree strongly; his lubricated fingers working over her eager little backdoor felt incredibly sexy. It even felt to her like the hard cock buried in her pussy got harder and thicker as he watched her little rubbery ring open up for him.\n\nTiffany felt incredible. She was so vulnerable in that position, yet she was so turned on, so ready for him to use her for their mutual pleasure. His slippery fingers were now deep inside her ass. Her muscular little ring was opening up nicely around those thick fingers. The hard cock in her pussy was beginning to slowly fuck her.\n\nShe was torn by indecision. She wanted to look at his face, to see his lust as he took her from behind. However, with her face buried in the sheets, every sensation seemed magnified. It was as if she could feel every nerve ending in both of her holes as she was opened up by his insistent digits. She shook in an amazing orgasm when he added a third lubricated finger into her ass. His cock was now driving in and out of her pussy vigorously, and the juicy sounds it made with each stroke only fueled their building desire.\n\nGilbert believed Tiffany. He was sure this was an asshole that had never been properly filled with a thrusting cock. To his experienced eye, her lubricated sphincter was downright eager to be fucked. It was spread open around his three fingers, and the lubricant had been worked into her evenly.\n\nIt was time.\n\nGilbert slowly withdrew his pulsing shaft from her pussy with a soft slurping sound. He also took his slippery fingers out of her bottom. He slid those fingers over the straining head of his cock, hoping to make his fingers less slick. Tiffany's juicy pussy had already saturated his shaft. He wound up wiping his hand on the freshly cleaned sheets before he reached for her hips.\n\nTiffany had groaned as she felt him withdrawing. Her asshole twitched as it anticipated what would come next. She felt him grab her hips and sucked in a breath of surprise as he rolled her gently onto her back. Gilbert's face was not contorted with lust as she had expected, but instead a tender smile met her gaze. He looked so handsome, so loving, as he opened her legs wide.\n\nTiffany had never imagined that losing her anal virginity would be like this. It was completely lacking in the perversion, in the pain that she had expected. Instead, her well-prepared and lubricated little sphincter was opening up and being filled wonderfully. She gasped as she felt the thick head of that cock slide deep inside her, causing Gilbert to stop.\n\n\"Are you alright?\" he asked softly.\n\n\"Better than alright!\" she gasped out, \"It feels amazing!\"\n\nIf she had a complaint, it would be that Gilbert was taking it too slowly. Intellectually, she could appreciate that he was being careful and taking his time. However, at that moment her itchy, horny little ass just wanted to be fucked. It wanted to be pounded, filled, and owned.\n\n\"Gilbert!\" she gasped out, \"Please, give it to me now! I need you to fuck my ass hard!\"\n\nHe nodded, and his cock throbbed in anticipation. Still, he worked his way up to it carefully. They had all night, and he didn't want to ruin the rest of it by rushing now.\n\nIt took another seven minutes before her ass was getting its wish.\n\nOnce they were there, though, Gilbert took her sweet ass with fervor. Her tight, gripping muscles were heavenly around his thrusting shaft. All too soon, he felt his balls clenching up.\n\n\"Tiffany,\" he hissed through clenched teeth, \"I'm going to cum. I\u2014oh, God, I'm cumming!\"\n\nTiffany howled in her own orgasm as she felt him explode inside her. Her sphincter closed around the base of his shaft like a natural cock-ring, keeping him hard as her hungry ass gobbled up his cum. As soon as her shaking had stopped, they kissed passionately again. Once again, his hard cock was pistoning into her eager bottom.\n\nThey did take a break to have dinner. As soon as they had cleared away the dishes, Tiffany bent over the dining room table and spread her legs. She was soon grunting and moaning as her ass was filled with hard cock and a fifth load of cum.\n\nIronically, Gilbert had been so careful to prepare Tiffany's ass that it was his own overworked gluteus muscles that were in searing agony from the vigorous workout. Tiffany's sexy bottom was merely tender and sensitive, and couldn't seem to get enough of him. After it had gotten dark outside, she was still riding him hard, driving her wanton ass down onto his flagging erection.\n\nWhen Gilbert's cock finally reached the end of its endurance, they showered together. They had barely settled into the bed afterwards before they were sound asleep. It was the best night's sleep either of them could recall ever having.\n\nThey finally awoke an hour before noon on Sunday. As would be the case every weekend from that day forward, the morning started with a thorough pounding of Tiffany's inviting asshole. That was followed by a lovely breakfast. After all, they weren't savages."
    ],
    "authorname": "LexxRuthless",
    "tags": [
        "anal",
        "big dick",
        "first time anal",
        "roommates",
        "room mates",
        "college student",
        "nudist"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/breakfasts-with-tiffany"
}