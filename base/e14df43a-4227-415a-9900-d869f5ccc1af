{
    "title": "Flesh and Heroes",
    "pages": [
        "Dear Readers,\n\nThis is the fourth installment in the 'Flesh And' series. While it works as a stand alone story, I suggest you read 'Flesh and Thieves', 'Flesh and Cat Burglars', and 'Flesh and Robber Barons' before this one, so you can see the progress of the relationship and get the stories in order. Your choice. \n\nThe Flesh And series is a little more fast and furious than my usual romances, but I hope you'll like the change of pace.\n\nWhen I wrote Flesh and Thieves, I expected it to be a one-time short piece. Just an escape from hard work on the 159 page-long Marcy's Playground. \n\nBut fans asked for F and T to become a series, and I always listen to my readers. So now it's an ongoing set of stories. Some are shorter, with more sex, and some are longer, with more action.\n\nEffie and Mr. Big are assassins, thieves, protectors, con artists, and lovers. Always on the side of the good, thwarting evil, and melting ice caps with their smoldering looks and body heat in the process.\n\nOr, maybe it's just late and I'm punchy.\n\nEnjoy!\n\n- MJ \n\n*\n\nI'm groggy. \"Mmmn, I was having a dream that I was having sex in a limo.\"\n\nRich laughter. \"Was it good sex?\"\n\nI wake up all the way and look over next to me. Large, warm body. Very large. Mr. Big.\n\n\"Yeah. The best.\"\n\n\"Then it wasn't a dream,\" he says and rolls on top of me. He looks at his watch. \"No time for a repeat.\"\n\n\"Damn.\"\n\nHe gives a quick, sweet kiss. \"Time to get up, Effie.\"\n\nI remember his name is T. Right. Okay. \"And I'm in Switzerland. Bern.\"\n\n\"All night long, babe.\"\n\nHe hops up. One quick move, way too graceful for a guy that's bigger than most cargo ships. \n\n\"You get the shower first. Women take longer than men.\"\n\nI narrow my eyes at him.\n\n\"If we shower together we'll never make the ball on time, Cinderella.\"\n\nWhatever.\n\nI shower quickly and walk out of the bathroom with just a yellow towel wrapped around my waist and nothing else, to throw him.\n\n\"Oh. Yikes!\" he says. \"I guess I could spare ten minutes, beautiful.\"\n\n\"Nuht-ah,\" I say. \"I have to dry my hair. I'll do it out here. Bathroom's yours.\"\n\n\"Let's get this job over with in a hurry. Tomorrow I'll knock over a jewelry store and get you rubies of your own. We'll put them between those beautiful breasts of yours, and I'll ravish you.\"\n\nI smile. He can steal, kill, fuck, and he knows how to give a compliment.\n\nLife is good.\n\nI point toward the bathroom. He picks up a small black toiletry bag and goes in.\n\nHe spends maybe five minutes in the shower. I hear the shower go off. I hear the bathroom door open.\n\nI smell him, but, as usual, I don't hear his footsteps. I have my back to him. I'm bent way over, blow-drying my hair. So actually, I don't have my back to him; I have my ass to him. I'm still wearing just the towel.\n\nT comes up behind me and fits his crotch to my ass, holding my hips firmly. \"I don't need ten minutes,\" he says, his voice so low it warps. \"Five. Two.\"\n\nI laugh. \n\nHe picks me up, throwing me high in the air and catching me cradled to his chest. He nips my shoulder. The blow-dryer bounces to floor, forgotten.\n\n\"One,\" he says. His voice is husky. T kisses me, and I melt into him.\n\n\"Later,\" I whisper.\n\n\"Aw, fuck, Effie.\"\n\nHe puts me down, sliding me against every part of his body, including his hard erection.\n\nI pick up the blow-dryer and turn it off. My hair is dry enough to start styling. T looks at his watch again.\n\n\"Okay, T-dog,\" I say. \"Back off. I need some time to make myself beautiful.\"\n\n\"You're already beautiful.\"\n\n\"Okay, rich-looking and beautiful.\"\n\n\"Got it,\" he says.\n\nHe grabs his garment bag and retreats back to the bathroom.\n\nI throw my suitcase on the bed, and literally have the first hot flash of my life. The flashback is so strong, I actually feel his cock in my mouth. I'm full all over; the masculinity of him pressing in everywhere, scorching my body inside and out. His hands are gliding over my hips, my ass, slamming me into him.\n\nI take a deep breath, dragging air into my throat, desperate to slow my frantic heart, which is beating 200 beats per minute.\n\nHe's in the bathroom, right now, naked. Changing into some fancy suit. I look over at the door.\n\nMaybe I should have taken him up on that five-minute offer.\n\nAlthough, we've already done it twice today.\n\nWe have a job to do.\n\nI have to focus. My life could depend on it. Our lives could depend on it. In my business there are no bad thieves, protectors, con artists, and assassins. But there are plenty of dead ones.\n\nThose thoughts sober me right up, and I open my suitcase take out my dress.\n\nI have a quick, grim picture pop into my head. I see myself, wearing a version of my evening dress. In the vision, it's candy-apple red, although that's not the color it is in reality. The dress bleeds, smearing blood on T, and all the guests around him.\n\nSo, so not good.\n\nI shiver.\n\nI shake my head to clear it.\n\nNerves.\n\nAlthough I've never had nerves before.\n\nMy dress is burgundy-colored, with a plunging neckline, covered in sparkles. It's almost ankle-length, but it has a very high slit up the left side, so I can easily reach my firearm, which I stow in my garter.\n\nI have a black push-up bra that I wear under this dress, and it has a tight underwire. It's a good thing, because it creates, in that magical little spot\u2014the small slice of space between my cleavage and the roughly triangular-shaped area between the lower curves of my breast and the tight metal of the wire\u2014a secure hidden pocket, which I'm going to need. I have to have somewhere very accessible to drop the ruby necklace.\n\nI'll be wearing a necklace of my own. It looks like tiny South American flute-pipes. It's tranquilizer darts. I don't plan on using them. But a girl should always have jewelry, right?\n\nI put on a tiny feminine watch with small sapphires on it. It has a little compartment in it that can fit a poison pill. I don't have one. Maybe next time.\n\nMr. Big comes out. I have to stop thinking of him as Mr. Big. Fuck someone once, the nickname is okay. But after three times, I really should start calling him T in my mind. But Mr. Big just seems so right.\n\nHe's wearing a tux.\n\nI give him a loud wolf whistle.\n\n\"Yeah, you should talk, baby. You look like a million bucks.\"\n\n\"Wait until I get my hair and make-up done.\"\n\nHe comes over and kisses me. \"Do I have to?\"\n\nI laugh. I could get used to this. Oh boy, could I get used to this.\n\nT pulls away from me and starts arming up. The tuxedo must be custom made for him because he is putting a lot of weaponry in there, and it never changes the smooth lines of his silhouette.\n\n\"You look totally hot. You are totally hot. Sure you don't want to hide a machete in there somewhere too?\"\n\n\"I thought about it,\" he says. \"But I really prefer my bare hands anyway.\"\n\n\"So do I.\"\n\nHe smiles at me.\n\nT looks at his watch again.\n\nI go to the mirror and start on my make-up. I'm pretty quick with it. I put my hair up in a fancy chignon. I put in sparkly hair sticks. They're sharpened to lethal points. I don't plan on using them. But always good to be prepared, right? They also make good lock picks. Fun for all.\n\nI spritz a light spray of perfume in front of me and walk into it. I step into black sparkly flats. No high heels on a job.\n\n\"Ready.\"\n\n\"You look incredible.\"\n\n\"All in a day's work.\"\n\n\"Allons!\"\n\nI have no idea what the fuck that means. I don't speak French. My first guess is 'Let's go!'. My second guess is, 'What the hell, we're professionals, let's kick some ass.'.\n\nT takes my hand, and we go downstairs and out the door. It's chilly. A light dusting of snow is falling. I should have brought a scarf or some kind of wrap.\n\nThere's a limo waiting for us. I'm relieved, VERY relieved, that it's not the same limo driver.\n\nThe drive to the mansion is short. No hanky panky. Ah well, maybe on the way back.\n\nI wait for the limo driver to open the door and help me out of the car. I'm careful not to flash too much leg (or my gun) as I'm getting out.\n\nThe snow's falling down heavier now.\n\nT offers me his elbow.\n\nWith the sparkling golden lights from the house, the snow transformed the landscape into a fairyland. I'm a princess going to a ball with a prince.\n\nA princess with a gun.\n\nHe leans down. \"You're the prettiest woman here,\" he says.\n\n\"We're not even in the door yet,\" I say.\n\n\"I don't have to be inside to know you're the most amazing woman of all.\"\n\nI'm sure my smile is more dazzling than all the jewels in the palace.\n\nT hands his invitation to a liveried servant at the door, and we're in. I look around. The place has more gold than Fort Knox. I mean this is like being inside a gold curlicue. Gold moldings. Gold stairway to the left. Gold vein in the marble floor. Gold fountain right in front of us.\n\n\"I'm going to go blind,\" I whisper. \"Where are my sunglasses?\"\n\nT laughs.\n\n\"I'm going to scrape some of this off and put it in my bra,\" I whisper. \"We won't have to take another job for the rest of our lives.\"\n\n\"Where's the fun in that?\" T whispers back.\n\n\"Let's find our marks,\" I say.\n\nWe enter the main ballroom, and before we get ten steps, a portly man in a black and white suit including top hat, tails, and a grey and red vest steps in front of us. He reminds me a little of the Penguin from the Batman movies.\n\n\"Lord Centrell,\" T says.\n\n\"Mr. O'Brian.\"\n\nHuh. Mr. O'Brian. Interesting.\n\nI think the Penguin will usher us over to his daughter, but he just glances in her direction. She's walking down the gilded stairway. Mr. Penguin gets out of our way. T nods graciously to him, and we position ourselves so we will be right by her as she makes her grand entry.\n\nShe's beautiful. Her haughty expression is condescending. I want to wipe it off her face.\n\nI stand on tiptoe. I have to pull T's head down toward mine to get my lips close enough to whisper in his ear. \"Think we can convince her to ditch the party for a threesome? We're supposed to keep her close, right?\"\n\nI feel the huge movement of T's cheek as he smiles. \"I think we'd have to earn about 15 million more a year to be on her radar.\"\n\n\"Doable,\" I say, not realizing that might be a double entendre.\n\nT smiles again.\n\nCountess Centrell is only a few feet away from us, but from her expression, she's looking for what she deems to be the important people, so she doesn't see us.\n\n\"Let's split up,\" T says.\n\nI nod. He slips away, and I fade into the background. \n\nThere must be seventy-five people in this place, not including the wait staff circulating. I look toward the doors. There's a long line of guests waiting to come in. I don't like this one bit.\n\nThe main ballroom is huge.\n\nI look at my watch. Ten minutes after nine p.m. Fuck. I'm thinking that everyone is going to start arriving in a minute, and there will be three hundred people packed in this room any second.\n\nI hate crowds. There's only one thing I hate worse than crowds. Working in crowds.\n\nI search out T. Mr. O'Brian is chatting up the fair Ms. Centrell. She looks enchanted.\n\nBitch.\n\nI sigh. Oh well.\n\nI guarantee you she didn't have a rock your socks off limo ride with him today. She can keep her gold fountains, thank you very much. I'll take hot limo sex over palatial home any day.\n\nI scan the crowd.\n\nI've got a bad, bad feeling about this.\n\nMore and more people pour in.\n\nSigh.\n\nThe music stops. Ut-oh. It reminds me of a joke. People are in a small village in South America. There's constant native drums. A guy says, 'This is awful, there's drums playing all the time.'\n\nThe guide says, 'You don't want the drums to stop.'\n\n'Why? What happens when the drums stop?'\n\n'Bass solo.'\n\nSure enough, when the music stops, something worse happens. Political speeches.\n\nGod help me.\n\nT never told me how much I'm getting paid for this job. It can't possibly be enough. Luckily I know the physical compensation is going to be damn good. That gets my head back in the game. \n\nI see T through the crowd.\n\nHello motivation.\n\nI repress my smile, but just barely.\n\nI see the other princess, Countess whatzerhername. Ranton. She's wearing the most ostentatious silver dress I've ever seen. Strangely, it kind of looks good on her. She's got a hell of a body. I guess if you're really rich you can afford whatever it takes to make Barbie dolls envious.\n\nI try to tune into the speeches. \n\nOkay. Not.\n\nI grab a little canap\u00e9 thing off a passing silver tray. Ummmm. Yummy. Better than pigs-in-blanket. I'll tell you that.\n\nOkay. Focus.\n\nPrickling at the back of my neck. Not good.\n\nI look around.\n\nGeez. Being short is not working to my advantage. The place is packed. All these rich people look the same. If there is someone here with more evil intention than putting down everyone else to make themselves look good, I can't see it.\n\nMercifully, the speeches are over.\n\nThe music starts again. I'm hungry. Are they going to serve dinner at this shindig? I bet they are. Bonus.\n\nT winds his way through the crowd toward me.\n\n\"Acquisition time,\" he whispers.\n\nI nod. \"Roger that,\" I whisper back.\n\nHe disappears into the crowd.\n\nHow can a guy who's about six foot six and two hundred and thirty pounds blend?\n\nI carefully push through the crowd looking for brighter-than-the moon silver and do my 'I'm invisible' thing until I'm behind Ranton.\n\nI see T.\n\nHe walks into her. He knocks her over and catches her, and it's even more dramatic than when he did it to me in practice. He spills her drink.\n\n\"Hey!\" she yells.\n\n\"I'm so sorry. I didn't see you. Although how I could have missed you...\"\n\nShe's a goner.\n\nI can't see her expression, because I'm behind her, but he looks spellbound. He holds her off balance for what seems like a long second in time, an eternity maybe, and raises her back until she's fully standing so slow it's like time actually bends around them.\n\nT's eyes dilate. From where I am I can see how his lips are slightly parted. His chest heaves. His hands slowly caress her sides. He tucks a stray hair behind her neck.\n\n\"What's your name?\" he rasps. He sounds like he can hardly breathe. One hand is on her low back as if to steady her. One hand gently touches the back of her neck. \n\nThen her necklace is off. He's holding it out to me.\n\nQuickly I take it, and drop it down the front of my dress.\n\n\"Monique Ranton,\" she says.\n\n\"Miles Spencer O'Brian,\" T says with the hint of the sexiest highlander accent I've ever heard.\n\nShit. Here's where I need to get the fake necklace back on her.\n\nT's eyes smolder like he would give the world to able to sit at her feet.\n\n\"Ranton,\" he whispers. His hands are moving, distraction. I take the fake necklace out of my small purse and put it around her, trusting that whatever he's doing it will make what I'm doing feel like a caress. \"That's a name of Dukes and Duchesses, isn't it?\"\n\nShe nods. With shaking fingers I work the clasp.\n\nI hear T. \"I would give a million dollars to be worthy of you.\" He lifts her hand and kisses her knuckles.\n\nGot it. I start to glide away. \n\n\"Trust me,\" T says, \"Bumping into you is the highlight of my evening, if not the decade.\"\n\nI'm farther away, but I think I hear T say, \"Fair lady,\" and the Countess say, \"Oh my.\"\n\nI go straight to the ladies room to do a minute of deep breathing. \n\nI come out after only a few seconds. After all, I'm still on the job. \n\nI see T for a second, and he gives me a quick smile before he turns his attention to an older looking couple.\n\nThe hard part of the job is over. The rest should be a piece of cake.\n\nThere's a bad feeling in the pit of my stomach. I feel worse, not better. And it's not about stealing the necklace, because we're returning it to the rightful owner, Monique's aunt.\n\nSo why do I feel so jumpy? I look around the room.\n\nBlah, blah, blah. Rich people.\n\nI look up to the balcony. T's third man is up there. I look for a guy with very shrewd eyes, but they're all dressed to put the gross national product of smaller nations to shame, and they all have the same expressions. They're all watching the people on the floor. So, I can't tell.\n\nI want to get out of here. And I mean I want to get out of here, badly.\n\nI look for T. It takes a minute to spot him. He's talking to Countess Centrell. Okay. Then he's got her by the arm, and he's hauling her toward the back of the house, fast. To the untrained eye he might look like a suitor trying to get her alone. To me he looks like there is some serious danger he's trying to drag her away from.\n\nRanton sees T with his hand on her cousin. Her eyes narrow, and she heads toward them.\n\nOh shit.\n\nI head toward Ranton, as fast as I can. She gets to T and Centrell a step ahead of me. \n\n\"I saw him first.\"\n\nT looks over her at me.\n\n\"Too bad. He wants to talk to me.\"\n\nI remember a saying. Money doesn't breed class.\n\nI grab Ranton's arm.\n\n\"What?\" she says and spins toward me.\n\nA well-dressed woman of about sixty joins us. T firmly puts Centrell's elbow in the woman's hand.\n\n\"Get out the back doors,\" he points. \"NOW!\" he hisses. His command leaves no room for argument. I drag my charge, and the older woman drags her countess, and we haul ass through the crowd toward the back of the house.\n\nT heads in the other direction, toward the front of the ballroom.\n\nRanton is not helping me. She's pulling back, wondering what's going on. She's taller than me, more curvaceous. But I'm stronger and more determined. I saw the look on T's face. \n\nWe're moving fast, cutting a swath through people, no longer caring about being polite.\n\nI'm glad I memorized the blueprints.\n\nIn through the study. Out through double doors.\n\nHustling.\n\nWe would be running, but both countesses are wearing high heels. Just a few feet through a courtyard.\n\nSnowmobiles.\n\nI hike up my dress practically to my waist and hop on one. The old lady jumps on the other.\n\nShe's the third man?\n\nThe countesses stare at us.\n\n\"GET ON!\" the lady says in a voice that brooks no argument. Still both girls stare at us.\n\nI take out my gun and point it at Ranton. \"Get on, or I'll shoot you. I'm not kidding.\"\n\nStill it takes them a second. I point it at Centrell. \"I'm in a bit of a rush here, ladies.\"\n\nRanton gets on behind me, Centrell behind Ms. Mystery.\n\n\"What about T?\" I ask.\n\n\"He's on his own. He can take care of himself.\" She turns on her engine, guns it, and speeds off.\n\nI turn my key, gun my engine and head for the tree line. There's just the lightest dusting of snow. We're sliding on grass. It's slick and fast. When I reach the border of the trees I stop for a second. \n\nI think T had expected only one countess to come with us, so two snowmobiles could have accompanied four people.\n\nI twist and look over my shoulder.\n\nPart of the palace explodes.\n\n\"Holy shit!\" Both Ranton and I say at once.\n\nI gun it and zoom out of there. I hear another explosion, even bigger this time.\n\nOh shit, T. That's what freaked him out. Someone looking crazy. \n\nSomeone he didn't have time to stop.\n\nOh God, oh God, oh God.\n\nHe got out. Surely he got out.\n\nFocus.\n\nThe trees got denser, and I swerved in and out. I don't even know where I'm going.\n\nBreathe.\n\nShit.\n\nI've got a girl with a fake necklace behind me. Shit, shit, shit.\n\nClusterfuck.\n\nOkay. Okay.\n\nSubconsciously I've been following the tracks of Ms. Mystery. She's leading me in a circuitous route. At first this makes me suspicious, but after a second I realize it's smart.\n\nThen we're in a back alley. \n\nThen circling around a house.\n\nAnd then, oh.\n\nIt's T's rental house.\n\nShe stops.\n\nI stop.\n\nRanton yells in my ear. \"I demand to know where we are! My father will kill you for kidnapping. Oh my God. My father!\"\n\nI ignore her.\n\nA limo pulls up.",
        "T jumps out.\n\n\"Ladies,\" he says politely.\n\nHe kisses Ms. Mystery on the cheek.\n\n\"Hi, Mom,\" he says.\n\nMom????\n\n\"Hello, dear,\" she says and pats his cheek. \"You clean up nice.\"\n\nHe takes out his keys, opens the door, deactivates the alarm. He ushers us in. His phone rings. \"Yes, Lord Centrell. She's safe with me. So is your niece.\"\n\nI imagine I can hear his sigh of relief.\n\n\"No, no, I think it's better they stay with us, at least for the night.\"\n\nT does a lot of nodding, and 'ah-huh, uh-huh, uh-huh'ing, and then hangs up. \n\n\"Michele, Monique, meet Susan, my mum.\" He gestures. \"Ladies, meet my esteemed associate, and lovely girlfriend, Effie.\" T gestures to me.\n\n\"Girlfriend?!!\" both countesses say. \n\n\"I'm not dead, or blind,\" T says. \"You ladies are spellbinding, but Effie captured my heart from the get go.\"\n\nAw.\n\n\"What happened at the house?\" Michele asks.\n\n\"Is my family okay?\" Monique asks.\n\nT shrugs. \"Honestly, I'm not sure. Your dad paid me to take care of the two of you.\"\n\nThe girls look at each other.\n\n\"For now, we're going to assume everyone in your family is okay.\"\n\n\"Who's hungry?\" T's mom asks. \"We didn't get a chance to have dinner. Anyone who interrupts dinner? Very uncivilized.\"\n\n\"Hell of a party,\" I say. \"Went out with a bang.\"\n\nThe girls look at us. Apparently they didn't think we were very funny.\n\n\"Opa!\" T says.\n\nThey smile at that.\n\n\"You know what we need?\" T asks. \"Alcohol. Let's go in the kitchen.\" \n\nT ushers us in the kitchen. He poured us good shots of vodka, and we all knocked them back. I got an immediate buzz.\n\n\"Food,\" I say.\n\n\"I'm on it,\" T says.\n\nHe starts pulling things out of the freezer.\n\nI remember the necklace in my bra that surely cost more than my house. \n\n\"If you'll excuse me for a moment, I'm going to go change.\"\n\nThey all nod, and I hot-foot it upstairs to the bedroom. It's a relief to get out of my dress and bra. There's a small safe in the closet, but I don't know the combination. I put the necklace in the fake bottom compartment of my suitcase. It won't help if someone tries to steal the whole suitcase, but under the circumstances, it's the best I can do.\n\nI put on a more comfortable bra, jeans, and pink sweatshirt. I take my hair down and carefully put my hair sticks away. I draw a brush through my hair and fluff it up a little. Check my make-up. I leave my dart necklace on, just in case. Those girls looked feisty. \n\nI go back down toward the kitchen. The food smells good. As I'm walking in, everyone is speaking French.\n\nMental sigh.\n\nConversation completely stops when I enter the kitchen.\n\nT fixes me a plate.\n\n\"What is this?\" I ask.\n\n\"Schnitzel and spatzel,\" he says.\n\n\"Okay, right,\" I say.\n\n\"I also have chocolate.\"\n\n\"Bring it on.\"\n\nI eat everything on my plate. Pretty good.\n\nThe Bobbsey twins don't stop talking. The more they talk, the less horny I become. I left my ball gags at home.\n\nI smile at T. Maybe he knows what I'm thinking. You do become pretty good at mind reading in our business.\n\nWe finish dinner. It's probably around midnight. I think there's probably no TV in this place. Europe. Rental house. What do I know? Maybe it's hidden in a cabinet.\n\nT shows the cousins to their rooms, which are thankfully downstairs, but they're in no mood to retire. They had expected to party, and midnight it not early for them.\n\nI am suddenly hit with terrible jet lag. Everything crashes at once. The drop of adrenaline. The relief that T is okay. The drop from the tension about working the switch of the necklace. The heavy food digesting in my stomach bringing all my energy to my center instead of my brain.\n\n\"I'm so tired. Did I party? I feel like I partied.\"\n\nEveryone looks at me. I remember the limo ride.\n\n\"I pre-partied,\" I say.\n\nT smiles.\n\n\"Everyone, I must bid you a fair adieu.\" See? I do know some French. \"I'm afraid I've turned into a pumpkin.\" Hey, I am Cinderella after all. How strong was that vodka? \n\nI turn to T's mom. \"It was nice meeting you.\"\n\n\"I'm sure we'll talk more later, dear.\"\n\nYikes.\n\nShe takes my hand in both of hers and pats it.\n\n\"I'm staying at a hotel just down the block. I'm sure I'll see you in the morning. Great job.\"\n\nI nod.\n\nT sees his mom out the door and resets the alarm. He comes back to me and whisks me off my feet. He looks over his shoulder at the countesses. \"Ladies, I'll be back down in a minute.\"\n\nHe carries me up to our bedroom. I open the door; he shuts it behind us with his foot.\n\nT is gentle when he tucks me in.\n\n\"No threesomes without me,\" I say.\n\nHe laughs. \"Never.\"\n\nI smile.\n\nT leans down over me, as if to kiss my cheek, and my temperature spikes. \"Where's the necklace?\" he whispers in my ear.\n\n\"It's in my suitcase,\" I whisper back.\n\nHis tongue darts out and takes a quick taste of the sensitive skin behind my ear, and I shiver.\n\nAlmost faster than I can track, he jumps off the bed, and opens my suitcase. He finds and opens the hidden panel in about two seconds flat. I smile. Ya gotta love a professional. Efficiency is definitely sexy.\n\nT puts the necklace in the safe. He comes back to the bed and leans over me. His face is glowing with excitement, lust, and maybe... love.\n\n\"I'm horny,\" I say, \"but I don't think I'm up to a third time today. Not after intercontinental travel, escaping a building exploding, and my first time tasting schnitzel.\"\n\n\"Ah well,\" T says. \"There's always tomorrow.\" \n\n*\n\n Dear Reader,\n\nIf this story pleased you, then please be so kind as to honor me with a high five. I'm begging you! Mr. Big and Effie are begging you. We're shameless. It's terrible. It's only a mouse click away. The power is under your clever little fingers.\n\nI've never been to Switzerland. Or ridden a snowmobile. Or stolen a necklace. I may have done some other things in the story however. :) I was referring to schnitzel, what did you think I meant?\n\nIf you liked the story, drop me a note. Tell me what you liked and why, and how you feel. I love to hear from readers. (PG comments only please.) I read every note, and welcome corrections, suggestions, and positive feedback, and am always looking to make new connections with authors and readers. \n\nYou can leave a public comment or use the contact tab on my author page to get in touch with me. If you'd like to leave your first name and last initial, feel free to do so. I really want to know what you think. It just takes a minute.\n\nI look forward to hearing from you.\n\nThanks, sincerely;\n\nMJ "
    ],
    "authorname": "MJRoberts",
    "tags": [
        "erotica",
        "erotic short story",
        "blow job",
        "adventure",
        "best short story",
        "thieves",
        "thief",
        "romance",
        "action",
        "humor"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/flesh-and-heroes"
}