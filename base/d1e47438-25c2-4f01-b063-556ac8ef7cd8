{
    "title": "There and Back Again Ch. 017",
    "pages": [
        "Chapter Seventeen: Vicious Circle\n\nI was getting a bit sick of the disorientation following one of my 'transitions', overall, but this was definitely the worst. I opened my eyes and let out an involuntary shriek. Not only was I completely clueless as to where I was, but as I watched in dismay, the headless corpse of what I assumed was once a person fell towards me, almost in slow motion, and landed right on me. Blood flowed freely from the stump that was once a neck, and I quickly closed my mouth, turning my head to avoid an even more unpleasant experience.\n\nI heard a voice hiss out \"Leliana?\"\n\n\"Wasn't me,\" came the whispered reply.\n\n\"Wynne?\"\n\n\"Don't look at me, child.\"\n\n\"Alistair. It's me. Sierra. And...\" I gulped a breath through my mouth, squeezing my eyes shut as well. \"...I think I'm going to throw up.\"\n\n\"Sierra? Sweet Andraste's ass, what are you doing here? And where exactly are you?\"\n\n\"Under the corpse you just dropped on me. At least, it looks like your work. I don't think Aedan or Sten would be so messy.\"\n\n\"Are you seriously complaining about my killing hygiene?\"\n\n\"If you were lying here being dripped on by God knows what, you would too. I'll make you a deal. Get this body off me and I promise never to mention it again. After I throw up that is.\" I felt something shift, and with a soft grunt the weight lifted and the incredulous face of Alistair looked down at me. Before I could move, Prince practically leaped on me, bathing my face with his tongue. I strongly suspected all he was doing was smearing the gore around, but on the floor as I was, I had limited ability to remove the offending mutt from his self-appointed task. Aedan finally called Prince off, and once the dog-breath cleared, Leliana was also hovering over me. \n\n\"Heya. I am so glad you're all here. A little help?\" I smiled up at my friends.\n\nI held out my hand; ignoring it completely, Alistair plucked me off the ground the way I might pick up an infant and set me on my feet. I was suddenly so happy to see them that I grabbed Leliana and Alistair both into a three-way hug that left Leliana and I giggling and Alistair sputtering. I turned and bounced over to Aedan and hugged him as well. When I looked over to Sten, his eyes narrowed and his hands shifted on the pommel of Asala, and I decided against taking my life in my hands, though I flashed him a big smile.\n\n\"What was that about?\" I heard Alistair mutter to Leliana. She shrugged, and he muttered some more.\n\n\"You look...really disgusting, Sierra dear.\" Aedan grinned, and I flicked some gore off at him vindictively.\n\n\"Don't make me puke on your boots. Wait. Wynne is here? Ah. Circle Tower then.\"\n\n\"Sierra, you still haven't explained how you got here.\"\n\n\"I thought it was sort of obvious, Aedan. I popped out in Redcliffe, had a fun little day at home, and then popped back in here. Apparently your Maker has a sense of humour, at least - I can't imagine less helpful circumstances to pop in or out in. I disappeared right in front of Teagan and Jowan.\" Groans of disgust in stereo. I almost laughed. \"I can't even guess how Morrigan is attempting to explain that. Fortunately she was there too, not Theron. He's not so quick thinking, that one...\" I grimaced, and Aedan raised his eyebrows. I shook my head, trying to communicate 'later'. He nodded.\n\n\"So, uh, back to Wynne.\" I walked over to the older mage, who'd been standing and watching the proceedings with confusion. I wiped my hand, uselessly, on my filthy jeans, before looking down at the sticky appendage. \"I'd offer to shake your hand, but...I don't think you'd appreciate me for it. Hi, Wynne, I'm Sierra. Nice to meet you. \"\n\nI have to give Wynne credit - she looked baffled, but managed a polite smile and a head bob, murmuring greetings. I turned back to the group.\n\n\"I take it you haven't warned her about me?\" They all shook their heads. \"Right. I suppose later would be a better time to discuss this. Sorry, Wynne, I promise to explain my...unorthodox entrance, once we're done here. But I seriously want a bath. And some new clothes. Anyone at least see a washstand in the last few rooms you cleared?\"\n\nWe did manage to find a washstand, and I wiped my face and hands thoroughly, then briefly rinsed my hair. We decided to wait to find me new clothes.\n\n\"So where are we, anyway?\" I looked around, trying to recognise anything familiar in the rooms and hallways, but everything looked so different from the game that I gave up.\n\n\"I think we've cleared the second floor completely now. Heading up to the third.\"\n\n\"Oh goody. I just love demons.\" I sighed. \"Well, since it seems I'm stuck coming with you, anyone got a spare dagger?\"\n\nWe did indeed find me a spare dagger on the body of one of the blood mages killed before I arrived. I decided against taking a sword from one of the slain templars, given that Wayne had told me I was still barely able to keep from impaling myself. Aedan and Alistair laughed as I briefly described my attempts at training while we searched bodies. Well, they searched bodies, and I again I contemplated throwing up. Killing darkspawn was one thing, but these had been people at some point. Leliana and Wynne tried to be sympathetic. \n\nSten kept giving me very odd looks when he thought I wasn't looking. Finally I couldn't keep in the giggle from knowing exactly what he was thinking.\n\n\"Sten.\"\n\n\"Yes?\"\n\n\"I know what you're wondering. Yes, I am a woman. Yes, I am trying to learn to fight. I know you don't approve, and given my skill level I'm not sure I disagree with you about me personally, but since it seems I don't have any choice about ending up in danger, I thought I should at least try not to be a burden, and perhaps try to be able to defend myself.\" He looked thoughtful. \"Even among the Qunari. Let's say a woman was alone, for whatever reason, and she was attacked. By bandits or the like. Even if she was a merchant or a farmer, wouldn't you expect her to fight to try to defend herself? Or would you expect her to stand still and let herself be cut down?\"\n\n\"No Qunari would die without a fight.\"\n\n\"Right. So this is like that. I just...know in advance that I'm going to get into these situations. So it seemed prudent to try to prepare for them if possible.\"\n\n\"I can accept that.\" Thanks for the ringing endorsement, Sten. \"Thank you for explaining it to me.\"\n\n\"I'm not saying I agree with your opinion on all women, Sten. Some women fight very well. Look at Leliana! So don't go thinking I approve of your misogyny.\" If they didn't understand the word, they must have figured it out from the context \u2013 no one said anything.\n\nI rolled my eyes as Aedan stifled a laugh. I know where you sleep, buddy.\n\nFinally (sort of) prepared, I followed the rest of the group up the stairs to the third floor. There were a couple of empty rooms, before we entered what looked like a large mess hall, with long rows of tables filling the centre of the room. There were several large statues, and I vaguely recognised them from the game. Corpses littered the floor - many of them templars, a few obviously mages.\n\n\"Uh, guys?\" I held out a hand to stop everyone from going too far across the room. \"These corpses aren't going to stay dead for long.\"\n\nWynne looked confused. \"What are you talking about, child? Believe me, they are dead. I would feel it if they still had life force left.\"\n\nAedan looked at me, brushing hair out of his handsome face. \"More - what did you call them in Redcliffe? Zombies?\" I nodded. \"Sadly, Wynne, Sierra is always right about this sort of thing. And the lack of life force doesn't mean they can't be reanimated. Right. Circle formation around Sierra, everyone. Let's all stay really close together.\" I was suddenly standing uncomfortably close to five nervous, sweaty people, and one rather pungent dog. Note to self: I need to invent antiperspirant in Thedas. And doggy biscuits. I put a hand on Alistair's shoulder, and Leliana and Aedan, behind me, did the same to me. We inched forward in a tight circle, making it about halfway across the room before the clattering sounds of armoured beings getting up off the floor confirmed my prediction. Wynne gasped beside me. Sometime I'd like to be wrong. Just to mix it up a little.\n\nThe undead started charging towards us, fortunately lacking any coordination, just trying to swarm us as fast as they could come. Alistair stepped away from my hand, bashing a couple down with his enormous shield. Leliana's bow twanged, and Sten roared as he raised his enormous sword and swept through a group in front of him. I heard Wynne chanting, and an area of ground in front of her started rocking and quaking, throwing the undead to the ground. I only caught brief glimpses of Aedan as he danced through the swarm, daggers flashing. I kept my dagger in hand, my posture loose as Wayne had taught me, ready to dodge or grab or stab any opponent who came close, but none did. Before I was able to even understand what all had occurred, the fight was over.\n\n\"Remind me never to piss you guys off,\" I muttered, and everyone laughed.\n\nWe quickly took all the money, poultices, and Lyrium potions we could find from the bodies around us, and gathered ourselves to move to the next room. Wynne walked up beside me, shooting me an apologetic look.\n\n\"I'm sorry I doubted you. I hope sometime you'll explain how you know these things?\" I nodded, smiling.\n\n\"I promise. As soon as abominations and demons stop trying to kill us.\"\n\nWe moved slowly from room to room, clearing out possessed and enthralled templars and a few demons. We gained a good-sized stash of potions and poultices, which I offered to carry in a scavenged bag. If anyone had to be encumbered, it should be me, and I'd have time to fish through and hand people what they needed without prolonging the fights.\n\nWe cleared the rest of the third floor without much trouble. Approaching the door leading to the stairs up, I asked Aedan for my notes and quickly consulted what I'd copied there from the wiki.\n\n\"Okay, so, a desire demon with a charmed templar - she's tough to kill, and she'll animate some corpses. No point chatting with her, unless letting a demon escape works for you.\" I looked around and everyone shook their heads. \"And a pretty powerful blood mage with a bunch more templars. Then we're going to run into a sloth demon. We're all going to end up asleep, in the Fade, facing a nightmare. Once you no longer believe in your nightmare, you should be able to escape. We fight the sloth demon in the Fade, and then we can finally wake up.\" I gave Aedan back the book - in case I disappeared, he needed it, not me.\n\nOn the fourth floor, the fights went just as I'd predicted. The desire demon didn't even get a chance to talk before Alistair drained its mana and the rest just cut it down. I did end up being attacked by a templar, but something about being charmed must have slowed it (or perhaps he was just crappy at his job in the first place), because I dropped my pack, dodged his clumsy swing, grabbed his wrist and threw him just as I had thrown Theron, and slit his throat before anyone had to come to my rescue. The four who had seen me try to train with a sword laughed and pounded me on the back, congratulating me. Aedan looked fiercely proud, and I gave my brother a wan smile, before finally following through on the vomit that had been threatening since I'd arrived.\n\nWynne surreptitiously healed my shoulder where Alistair had thumped me a little too enthusiastically. We shared a fond eye roll in his direction as I thanked her quietly.\n\nFinally we came to the door I'd been dreading - the sloth demon lay behind. Reminding everyone to try to remember they were in the Fade, we stepped into the room, Aedan exchanged a few words with the demon, and we all fell asleep.\n\n********\n\nI woke in hospital. Cursing my timing, I wondered when I would be able to get back to my friends. I'd forgotten to remind them to grab the Litany of Adralla. Hopefully Aedan got to talk to Niall in the Fade. And I was sort of hoping to get to meet Irving! Oh, Maker, if it's you doing this, don't make me pop back in at Redcliffe, please! I don't want to talk to Theron right now.\n\nI took my usual personal inventory. No tubes. Hospital gown. I went to sit up, but realised my hand was stuck somehow in the bed. Looking down, I realised it wasn't stuck, exactly - it was restrained. I was tied to the damn bed! Investigating further, I realised that both hands and both feet were on short tethers, leather cuffs around wrists and ankles. I was in a private room, for the first time. I must have been thrashing or seizing or something while I was out. I spent a minute searching for the nurse call bell, to no avail. \n\nLeft with no other option, I opened my mouth and shouted. At first no one came, so after waiting a couple of minutes I shouted again, and again. I finally heard someone crack the door, and I strained to lift my head and see who'd come in.\n\nAll I could see at first was the back of someone in a long doctor's coat. He was bent over, carrying a food tray, but as he straightened, I could see that it wasn't my usual doctor. He had sandy hair, and as he turned I gave a little strangled scream. It was Alistair. Or at least his identical twin. Same strong jaw, same hairdo, same mischievous smile.\n\n\"Good morning, Sierra.\" He didn't have a British accent, it occurred to me. And then I wondered why he should. Weird thought.\n\n\"Alistair?\"\n\n\"Oh dear, a bad day then.\" Alistair sighed. \"I was so hoping to be able to let you out of those restraints today too.\" He set down the tray, coming to stand by the bed as I stared at him in shock. \"It seems we will have to start at the beginning again, then.\n\n\"My name is Dr. Markus. You are in the hospital, on the psychiatry ward. You've been here for three months.\"\n\n\"This isn't funny, Alistair. What the hell is going on?\"\n\n\"This really is a setback! I am not Alistair, Sierra. Please, try to remember. Your brother, Aedan, and your husband Theron brought you in because you were getting so confused. You kept thinking you were somewhere else, that each of your family and friends were someone else. You couldn't tell what was real anymore.\"\n\n\"Theron...?\" The Alistair clone gave a hopeful smile.\n\n\"You remember him? Wonderful. Here. I think maybe we need to have another group meeting. Why don't you just relax, and I'll call everyone to come visit. Maybe that will help you remember even more.\" Before I could object, Alistair left, and I felt...hazy. I must have been medicated. I fell asleep.\n\nWhen I woke again, I was still in my hospital gown, still tied to the bed. Someone was shaking me, and I opened my eyes to see Aedan, a concerned look on his face. He kissed my cheek and I relaxed slightly. I looked around, and realised that Leliana was there, holding Aedan's free hand, as were Theron and the Alistair clone-doctor. \n\nLeliana let out a soft cry and pushed Aedan out of the way to hug me. \"Sierra! How are you feeling, sweetheart?\" She sounded weird, somehow, though I couldn't place it. Her accent was vaguely Southern Belle, and her voice was a bit hoarse, kind of gravelly. She backed away as I just looked at her in shock, and Theron approached the side of the bed instead.\n\n\"Hi, honey. How are you?\" He put his hand on my abdomen, and it clenched in fear. I had no idea what I was afraid of, but that casual touch made me want to vomit in disgust. His eyes had that possessive look in them, as he leaned in obviously intending to kiss me, but seeing the look of abject terror on my face, settled with gently kissing my forehead instead. I'd hated that look since... when? I couldn't remember the first time I noticed that expression. As he walked away, heading for the chair at the foot of the bed, his hand trailed down from my stomach, to my hip, and down my thigh. My skin just crawled, and I had to bite my lip to stop from screaming. \n\nI looked over at Ali...Dr. Markus, unsure why but truly feeling like only he might be able to give me the reassurance I needed, might be able to explain. His face was carefully neutral, none of the laughing, silly expressions that I remembered from...wait, who was Alistair again? I couldn't keep any train of thought for more than a few seconds, and I wondered again what meds I'd been given.\n\nThe group launched into a big intervention session. Reminding me of details I'd obviously forgotten from our lives, telling me how much they loved me, missed me. I felt guilty for not remembering - yes, of course, Aedan and Leliana have a son. How could I have forgotten little Oren? And Theron and I had been trying to conceive. I smiled, thinking about a sweet little child of our own, but looked up to see that possessive glint in his eye again, and the enjoyment faded. Why was I so afraid of my own husband? I concentrated on that emotion for a minute - it was the only one that felt real. Dr. Markus seemed to realise my mind had wandered, and started talking about how devoted Theron was to me, how he visited every day, even when I'd been too sedated to wake up, even when I screamed at him to go away. I latched on to that - this had not been my only time to feel disturbed by his presence? And if he loved me so much, why would he treat me like a whore? That thought shocked me - when had my sweet husband ever treated me like a whore? But I thought I could remember...it was gone. Damn drugs! Messing with my head.\n\nFocus. I needed focus. I tuned out the doctor, my brother, my husband. Starting with the fear, I tried to slowly rewind my way back - that look on his face, feeling like a whore...I remembered a campfire. Sitting near a campfire in dawn's early light, him looking at me like I was prey...\n\n\"Theron, do you remember that camping trip? Where did we go, again? I can't remember.\"\n\n\"Camping, honey? We've never been camping. Are you thinking of someone else?\" He was a bad liar, normally. I think that might have been the thing that clinched it. He was lying to me, I could see his handsome face by firelight in my mind, disappointment as I turned him down...He shouldn't be able to look me in the face and tell me we've never been camping. Unless he wasn't really Theron...\n\nThe fucking Fade! I can't believe I forgot. I'm in the fucking Fade!\n\nI wished I had my hands free so I could face-palm. Now that I could see through the illusion, the rest of my memories came flooding back. Thedas. Redcliffe. Theron...I guess I couldn't call it an attack, though it's how I felt about it. The Circle tower. Aedan and Alistair and Leliana and Wynne, trapped somewhere else in the Fade! I had to get to them.\n\nIgnoring my supposed family and supposed doctor, I struggled partially upright, wrenching my arms in the leather cuffs. If I know it's illusion, can't I just will them off? Apparently not. I wondered briefly which of them was the demon. Alistair made the most sense, he'd been around the most, but it could have been any of them. It's a good thing demons don't really understand human emotions. If they'd picked anyone other than Theron to play the role of my husband, I might not have seen through it. But muscle memory apparently remained, even in the Fade, and my muscles remembered wanting to slap the crap out of Theron.\n\nThey were talking at me, louder and louder as I ignored them. I kept struggling with my bindings, closing my eyes and trying to will myself to freedom. It wasn't working. Tired from the effort, wrists and ankles sore from pulling, I flopped back onto the bed, trying to think of another option. At some point I even started humming to myself to block out their voices. If I'd been able to reach I would have stuck my fingers in my ears. I finally had enough, and I let out a horrendous scream. They all stopped cold, staring at me in shock.",
        "\"Fuck off, all of you. I know what this is. I'm in the Fade. So you might as well change to demon form, stop trying to convince me. I know you're not real. I'm never going to let you in, never going to listen. So get rid of the doctor's coat and concerned facial expressions and treat me like the actual prisoner I am, or go away so I don't have to listen to you, until the real Aedan gets here.\"\n\n\"What made you think it would be Aedan that got here first to rescue you?\" I looked up, surprised, at the voice that rang out in the room. British accent. Perfect chiselled face. Teasing grin. Amour covered in dripping...God knows what. \"Anyone got any cheese? I'm hungry.\" I'd never been so happy to see anyone in my life. \n\nThe fake Dr. Alistair and the rest of my 'family', swivelled to face this new threat. Real Alistair tossed a dagger from his belt onto the bed, and I cut myself free of my bonds faster than those around me could blink. Jumping up, unnoticed by the demons, I maneuvered myself into position, grabbed Theron from behind, and drew the dagger across his throat in one, smooth, vicious arc. A hideous noise screeched from his exposed windpipe, and then his body slumped to the ground, changing as it fell to a large, purple, vaguely humanoid corpse. Pride demon. Huh. I wondered how sloth got a pride demon as a pet.\n\nAlistair grinned at me, raising his own sword in salute before attacking his own clone. We both assumed it would just be an animate creature, but as Alistair managed to get a surprise hit in and decapitate it, the body changed just like demon-Theron's had, only becoming a ghastly, naked, purple-ish woman. Desire demon. Two demons? What the hell?\n\nAlistair and I both turned on the false Leliana and Aedan now. Leliana just faded out of existence, and I assumed she must have been a construct of one of the demons we had killed. Fake Aedan, obviously a demon, still looked quite corporeal, although from the expression on his face he wished he wasn't.\n\n\"Wait! Just listen to me. None of this was my idea! I got dragged into this when it,\" demon-Aedan pointed at the headless desire demon, \"wasn't able to contain her. She kept almost getting away. It pulled in that, and then me. I have no desire to be here. Just let me go, back into the Fade, and I'll leave you all alone. I'm no threat to you!\"\n\nAlistair and I exchanged a look. While demon-Aedan hadn't actually done anything to me that I could remember, there was clearly a lot about the Fade that I didn't remember, if three demons had been required to subdue me. And regardless, it was a demon. I don't like demons. I shook my head, ever so slightly, and Alistair, understanding, sliced once with his sword and cleanly killed the demon wearing Aedan's appearance. I didn't recognise the demon shape this time - green, slightly glowing - but being surrounded by the three corpses was evidence enough of what it was, if not which variety.\n\nI turned to Alistair, and he just held out his arms. I fell into them, not crying but desperately needing real human contact. I hate the fucking Fade. After a minute, I pulled back. Now that the demons were dead I tried again and was able to summon myself a set of light armour, like I trained with in Redcliffe, as well as another wickedly sharp dagger. I offered Alistair his back, pommel first, and he took it with a smile.\n\n\"Thanks, Alistair.\"\n\n\"Any time, Sierra. Listen, you don't have to, but...sometime, will you explain all this? I didn't really understand most of what I saw.\"\n\nI reluctantly agreed. He had saved me; I owed him that at least. \"How was yours? Goldanna?\"\n\nHe nodded, almost laughing. \"No matter how they tried I knew I didn't really have a sister. I just couldn't buy into it. Once I remembered, the demon showed itself and I killed it. From the looks of this, you'd have done the same if there weren't three demons keeping you under.\"\n\nI smiled, glad that I'd made escaping the Fade even a little easier for him. I squelched the urge to hug him again. Don't get used to it, Sierra. He's not for you. Even in the Fade.\n\n\"So...how do we get out of here?\"\n\n\"I don't know. When I defeated the demon, my...uh...nightmare just sort of...dissolved. Maybe this will just take a bit longer since there were three demons here?\"\n\nA new voice joined the conversation. \"Three demons? That's weird. Everyone else just had one.\"\n\nAlistair and I turned to see Aedan, followed by Sten, and Wynne and Leliana, who both looked somewhat subdued and red-faced. Aedan gave me his patented cross-eyed, tongue stuck out facial expression, and I giggled and launched myself into a hug. Prince jumped around and licked me happily, and I laughed, giddy.\n\n\"Apparently I gave mine a hard time and he called some friends.\"\n\n\"I'm not in the least surprised, my dear.\" Aedan gave me a fond look and I giggled. \"And Alistair, you escaped on your own? Well done.\"\n\nAlistair blushed. Poor guy. Blushes more than me.\n\nAedan had us all grasp hands, and then close our eyes. I suppressed a minor fan-girl freak-out when I realised I was holding hands with Alistair. I heard him talking, too quietly to hear, and barely heard Wynne mutter a response. I felt wind on my face for a moment before it stopped. I opened my eyes and found myself, still holding hands, on an island of sorts. It was grassy but dotted with huge rocks, and maybe fifty feet across. Past the edge of the island was just...nothing. Creepy. I giggled as Alistair said it at the same time that I thought it. Standing in the middle of a flat clearing was the sloth demon. \n\nAedan chatted with it for a moment, while it promised us whatever we desired. In my head I could hear insidious whispers, promising me things it hurt to even want. Love, family. Alistair. I wanted to believe, so badly...\n\n\"No!\" I shouted, and rushed across the island towards the demon. I broke the spell that had settled on all of us, the seductive heady rush of promises. I heard Aedan swear at me, but didn't stop as I ran full speed at the source of the offending whispers. As I charged, Aedan, and then Alistair and the rest of the group stirred, readied their weapons and followed.\n\nI got lucky - the demon didn't expect us to break free so easily, not without some more conversation at least, and I managed to get a slash in as I dove past, sticky black blood squirting out to coat my hand before it transformed into an ogre. I skidded to a stop just as I heard the gong I knew indicated Alistair had bashed the thing with his shield. Turning, I looked for an opening, but given the way I knew ogres could kick, I chose discretion and waited. Sure enough, between Leliana's arrows, Wynne's spells, and Alistair's, Sten's, and Aedan's slashes, the ogre form faded away leaving a rage demon in its wake.\n\nAedan was suddenly wreathed in flame himself, screaming at everyone to back away, and his burning-man form deflected the worst of the damage. Wynne cast some sort of ice spell, and suddenly the thing burst into a dazzling array of sticky, translucent pink crystals as Sten's Asala shattered it. Abomination form was next, and I finally got my chance to sprint back into the fray. I knew, even as I approached, that I should have stayed back, but I was really, really angry. You don't get to mess with my head and get away with it. I stabbed my dagger deep into the abomination's back, distracting it enough that Aedan shredded its neck with his own daggers.\n\nThe abomination gave way to a shade. Alistair actually threw himself between the shade and I, and while he held its attention, Aedan was able to slip behind and disable the thing before I got reoriented. As the shade in turn transformed into an arcane horror, I felt Alistair's hand clamp on my upper arm just before the shockwave he'd used on me the day we first met rumbled across the creature, slamming it to the ground. The only reason I was still standing was Alistair holding me up, but I knew I'd have a hand-print shaped bruise on my arm. Somehow, just through fighting together all this time, Aedan and Sten had realised what he was about to do, and had gotten out of the way.\n\nThe demon finally stayed down, and all six of us stopped to pant for a bit. Niall popped into existence, reminding us about the Litany of Adralla, before saying reluctant good-byes to Aedan and Wynne. The next thing I knew, I was awake, picking my very dirty self up off the ground. Niall was indeed dead, and Wynne closed his eyes and crossed his arms on his chest before picking the Litany up and joining us."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-17"
}