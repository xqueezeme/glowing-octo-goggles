{
    "title": "Surefoot 05: Secrets & Lies Ch. 03",
    "pages": [
        "USS Surefoot, Alpha Squad Quarters:\n\n\"Friends?\"\n\nSasha, Giles and the others were dressing silently in the main room, most feeling like they had hardly slept. Kitirik, however, appeared awake and alert. Sasha wondered how much sleep his people actually needed - then realised just then how little she knew about his race, or his planet. \"What is it, Kit?\"\n\n\"I know we have work ahead of us... but I wish to apologise, and to explain myself.\"\n\nSasha rubbed her eyes. \"Are you sure this is the time-\"\n\n\"We have time,\" Eydiir replied cryptically, ignoring Sasha's look and focusing on Kit. \"Go on. This is long overdue.\"\n\nKit nodded, turning to the others. \"Friend Jonas, I am sorry for yelling at you as I had. When you kept insisting I could be a warrior.\"\n\nJonas blinked, glancing at the others. \"I'm sorry about that, Kit, I didn't know it would upset you like that.\"\n\n\"No, you didn't. So you should not apologise. I, however, knew what it meant to me. As I have told you, the Qarari are comprised of one female gender but five male genders, each genetically and socially distinct, and serving a separate function within our society: Warriors, Workers, Chancellors, Seekers and Creators.\n\nI was born a Warrior, born with armour plating and reinforced muscle and fangs and claws. I was raised by Warriors. I was trained to be a Warrior. And such is our society that the notion that I would want to be anything other than a Warrior would be... unthinkable.\n\nBut I thought it. I never felt comfortable within my own skin. I did not want to be a Warrior. I wanted to be a Seeker: one who sought answers, through the sciences or medicine. It was a revelation to learn about physics, biology, chemistry... how our lives, our Universe was put together, and held together. It was... joyous.\"\n\nHis expression sobered. \"It was a joy my family, my community, did not share. I asked why it was wrong to feel, to want, as I did. In response, they sent me to a re-education facility.\" He trembled now. \"They were... very thorough in demonstrating how wrong I was, that our Behest made us what we were, and to challenge that was to challenge everything about our society. And no one wants to do that, do they?\"\n\nHe looked up at them again. \"I hid how I felt, acted as they expected, believing I would never have a chance to be who I really was. I was.... miserable.\n\nThen Starfleet, the Federation, came to our world. I was assigned to escort and monitor a Starfleet officer during his stay. But I did more than that. I talked to him. I opened up to him. And he gave me an opportunity to leave, to leave my world and my life and start fresh, and true to myself. I claimed Asylum. The captain of the vessel sponsored my application to Starfleet Academy.\"\n\nTears welled in his eyes. \"When I read the application form for the Academy, and saw the question that asked me what I considered my gender to be... what I saw myself as, not what my people or my faith or my government saw me as... I cried. It was the first time that my belief seemed to matter to others.\n\nI underwent corrective genetic surgery to change my gender to that of Seeker. It has not been... easy. There have been ongoing medical complications; I was the first Qarari the doctors had ever performed such a technique upon. But I am managing to adapt.\"\n\nSasha looked to Eydiir. \"That's why you seemed to know what was troubling Kit, isn't it? And that's also why you didn't tell us.\"\n\nThe Capellan woman nodded. \"Medical confidentiality.\"\n\nSasha looked back at Kit again. \"Why didn't you tell us any of this sooner?\"\n\nHe swallowed. \"I had grown... comfortable, in being seen solely as a Seeker of Knowledge, a Starfleet Academy Science Specialist. And all my friends saw me this way. I did not want to be reminded of what I was.\"\n\nJonas had paled. \"And that's why you reacted like you did when I kept calling you a Warrior?\"\n\nKit nodded. \"My Seeker's body is weaker than my Warrior's, but I still remember much of my military training. It returned when that rude Nausicaan attacked.\" Now his tears flowed, as he made an effort to wipe them away. \"I feared revealing my secret to my friends would make them see me in a different way. You will not see what I am. You will only see... what I was.\"\n\nSasha drew forward and hugged him. \"You know what I see? A friend.\"\n\nThe others drew closer, Giles patting him on the back. \"A friend who tells really bad jokes.\"\n\n\"And leaves his shed skin around,\" Neraxis added, joining in.\n\n\"And likes to hug,\" Jonas offered, grinning. \"A lot.\"\n\n\"Anything but a warrior,\" Eydiir finished. \"We promise you.\"\n\nSasha pulled back. \"Now come on, we have to get to the bridge and get our assignments. We can eat later.\" As the others nodded and continued dressing, she smiled around at the others - and noticed Giles was looking sad. She wanted to stop and ask him why, but there was no time.\n\n*\n\nAlpha Squad arrived on the bridge, reporting to Commander T'Varik first in the briefing room. \"Alpha Squad, you should be made aware that no more of the Malurian children have died since you were last on duty.\"\n\nSasha looked to the others, nodding. \"That's good to hear. I just wish we could have done something for those who already died.\"\n\n\"Agreed.\" T'Varik breathed in before continuing. \"But you should also keep in mind that without your superlative efforts in uncovering the trafficking operation, alerting Captain Hrelle and assisting in the capture of the traffickers, none of the children were likely to have survived to reach their destination.\n\nThe Captain has placed notes of commendation in the records of all the Surefoot crew for their efforts during this emergency. But I have personally nominated the members of Alpha Squad for the Starfleet Medal of Commendation for their particular efforts.\"\n\nSasha looked at the others again, shocked but pleased. \"Thank you, Commander.\"\n\n\"It is not guaranteed that my nomination will be approved. However, if it is, then it will be your second such award, Sasha. I trust you will not be jaded by the experience.\"\n\nSasha grinned. \"No, Ma'am.\"\n\nMore serious now, the Vulcan added, \"If I might offer some advice to all of you: in years to come, life might lead you into doubt, disillusionment, dissatisfaction. If this happens, look back on your efforts here. Remember what you did. Starfleet is not just about exploration or defence. It is about saving lives. I am very proud of you.\"\n\n\"Proud?\" Sasha teased. \"I thought Vulcans had no emotion?\"\n\n\"Yet another cultural misinterpretation. The emotions are present, merely employed at controlled moments such as this.\" Then she lifted a PADD from the adjacent desk. \"However, there is a more distasteful matter to be dealt with. Normally I would wait until this current emergency is resolved, but I wish to take advantage of the imminent arrival of the USS Impala. Cadets, be advised that you are now participating in an ongoing formal disciplinary hearing involving a fellow cadet, against whom a number of allegations have been raised by multiple sources.\"\n\nThe six cadets looked to each other, allowing Sasha to ask, \"Commander, who is this about?\"\n\n\"Beta Squad Leader Jared Miro.\"\n\n*\n\nDeck 4, Brig:\n\nHrelle said nothing as he stood behind the invisible force field separating him from the single prisoner in the cell. He remained still as a statue as watched her lying there on the bunk, waiting for her to open her eyes.\n\nFinally he grew tired of waiting, and muttered, \"Captain.\"\n\nVera Wallachek jolted up, eyes wide... and slipping on a mask of distress. \"Esek? Thank God you finally came!\" She rose to her feet and stood in front of him. \"There's been some terrible mistake! I have no knowledge of what my First Mate was up to-\"\n\n\"Captain-\" he repeated.\n\n\"Whatever lies he's been telling, I can assure you-\"\n\nSwifter than she expected, he slapped his open palm against the force field, making it spark and growl in protest, and making her step back instinctively.\n\nHis face remained as taut as his voice. \"You were positively identified. We showed the Malurian children photos of the crew. You were the Pretty Red Hair Lady who gave them sleepy candy and let them watch Fat Cat and Lil' Kitten. Then they woke up in a tomb. Where they all would have died if not for my crew's actions.\"\n\nShe stood there a moment longer... and he could visibly see the pretence of innocence slip from her like a discarded cloak. \"Please... let me explain... come in here...\"\n\nHe growled. \"Oh, that wouldn't be safe for you. Not in the least.\"\n\nWallachek's expression shifted once more, from contrition to defiant anger. \"How dare you judge me? You think I wanted to take the Bel-Zon's money?\"\n\n\"The Bel-Zon?\" That made him react. The Bel-Zon were back in business? He had heard that with the capture and execution of many of their leaders, the criminal organisation had fallen apart.\n\n\"Yes! You think I wanted to do what I did? I'm not a monster!\"\n\nHis eyes narrowed. \"You could have fooled me.\"\n\nHer face twisted into a scowl. \"Screw you! Standing there, living your comfortable Starfleet life! Do you know what it feels like to have a business teetering on the edge of bankruptcy? To work hard for years, to scrimp and save, to have people depend on you for their livelihoods, and to have all your dreams scuppered by a malfunctioning warp core or a solar storm?\"\n\n\"No,\" he finally admitted, his voice dead. \"I don't know what that feels like.\n\nI *do* know what it feels like to be a slave. I know what it feels like to be seen, not as an individual with rights and dreams, but as a commodity, a piece of property. I know what it feels like to be locked away in a container for weeks, lying in my own filth, starving, choking. I know what it feels like to be made to do terrible, terrible things to avoid punishment, knowing I might still receive punishment anyway.\n\nI know what it feels like to be raped.\n\nI know what it feel like to be tortured.\n\nI know what it feels like to have hope bled and beaten and burned from me. I know what it feels like to think I will never see my family and friends and old life ever again.\n\nI know what it feels like to want to be dead more than to be alive.\n\nI know what those children felt like. What you put them through.\n\nBut you're right, I don't know what it feels like to have business difficulties. And maybe that's far worse than what I went through, or what those children went through. So maybe you should use that as your defence at your trial. You might get lucky.\"\n\nHe started to turn away, but stopped and offered a final, \"But if you *do* get lucky, and someday get freed, do something smart for once: go away. Go far, far away. Because if by chance we ever run into each other in this life, I swear by the Great Mother Herself... I'll rip your throat out.\"\n\nHe departed.\n\n*\n\n\"Captain's Log, Stardate 54868.9: The USS Impala has arrived, and I must complement Captain Arrington's crew for their speed and efficiency in taking over, their larger ship and complement better able to manage the Malurian refugees and the crew of the Beholder... as well as the bodies of both. They will also equip the freighter with a skeleton crew to pilot it to Starbase 154. We have also provided our collected data and individual accounts of the incidents, for the investigation and trials, and instructed the cadets that they might be called upon for further testimonials in the future.\n\nI don't know if I can trust Captain Wallachek's assertion that the slaver operation was the work of the original Bel-Zon organisation, or a newer incarnation. Maybe it doesn't matter. I killed to protect my cadets, from whatever threat. But it wasn't easy. And with that in mind, I've made an appointment with Dr Ling to have some long-overdue medical issues dealt with.\n\nAnd I'm also going to have to deal with Lucille Arrington when she gets here. Our last encounter was strained, to say the least, and I suspect it will be again. And the subject of our imminent brouhaha now will be the same as it was then...\"\n\nAs if on cue, the door chime snapped Hrelle out of his monologue. \"Enter.\"\n\nGiles stepped inside, standing to attention and looking tense. \"Cadet Giles Arrington reporting as ordered, Sir.\"\n\n\"At ease, Giles.\" Hrelle leaned forward. \"I know Alpha Squad's been working without a decent break.\" He pushed forward a plate of sandwiches. \"There's ham and cheese, or roast beef-\"\n\n\"Sir...\" Giles swallowed, his face red. \"I wish to tender my resignation, effective immediately.\"\n\nHrelle blinked. \"There's no need for that, Cadet. If you don't want a sandwich, just say so.\"\n\n\"Sir... I need to report that I was ordered to spy on you, using a secret communications device supplied by my father.\"\n\n\"I know.\"\n\nGiles blinked, finally breaking the tension in his face and body to ask, \"You do? How?\"\n\nHrelle leaned back in his chair, folding his hands on his belly. \"Occasionally I like to surprise the Galaxy with flashes of competence on my part. Yes, I know. I also know you didn't want to do it. And in fact you haven't really done anything to fulfil those orders. You know, if I had set you this task, I'd give you a pitiful rating.\"\n\nLooking thoroughly confused, Giles glanced around, as if hoping to find the answers he sought on the surrounding shelves. \"Sir- why haven't you had me arrested?\"\n\nHe shrugged. \"Well, I could say we've been too busy lately. But really, I wanted to see if you would do the right thing. And you did, by saying what you did just now.\" He rose to join Giles on the floor. \"I've been reading some of the testimony from the freighter crew. Those that aren't claiming ignorance are claiming they were only following orders - as if that was a genuine excuse. They liked to think they could hide behind the defence of not having a choice.\n\nBut they did. We all do, when faced with the prospect of doing something wrong.\" His gaze lowered. \"Not that I've always been a model of integrity. But maybe that makes me better qualified to judge others... and to forgive you.\"\n\nGiles' own eyes dropped. \"Thank you, Sir. I, ah, spoke to my father hours ago. I told him I wasn't going to do this anymore. I, ah, also told him I was resigning.\"\n\nHrelle nodded. \"No doubt he's informed your Aunt Lucille. She'll come collecting you. Look at me, Giles.\"\n\nHe did.\n\n\"Do you really want to resign?\"\n\nGiles paled - and shook his head. \"No, Sir.\"\n\n\"Well then, it's a good thing that only your direct superiors can accept your resignation, then. Now all we have to do is convince your Aunt that she can't have everything she wants in life. Fortunately, I have experience in that department.\"\n\n*\n\nDeck 1, Corridor:\n\n\"Squad Leader Jared Miro, report to the Briefing Room immediately.\"\n\nJared had just left Deck 4, helping to return all the blankets and sleeping mats back to the replicators for recycling, and had been looking forward to grabbing a meal in the mess hall before collapsing into his bed, when he heard the summons from T'Varik, and quickened his pace.\n\nHe wondered what it was about. Perhaps a commendation for his hard work? He had heard rumours that the little bitch Sasha and her squad had received some, just for getting lucky and discovering the Malurians. It wasn't fair! Had the Vulcan not been playing favourites in assigning that task to Hrelle's daughter, it could have been him!\n\nHe entered - almost immediately skidding to a halt at the numbers of people here: T'Varik, Counselor Shall, Lt Velkovsky, Sasha, Neraxis and Eydiir from Alpha Squad; and Rina Chaudri, Soolamea and Thykrill from his own squad; and Yeager from Gamma Squad.\n\nAll women.\n\nHe looked to T'Varik, who was standing as formally as ever. \"Squad Leader Jared Miro, you have been summoned to respond to a number of allegations raised against you. As per Starfleet Academy Regulations 144.6, you are not required to answer at this time, but your lack of response may be taken into account during any subsequent hearings.\"\n\nAnxious and on edge now, he focused on her rather than the sea of faces staring accusingly at him. \"Commander, what is going on?\"\n\n\"Mr Miro, you have made a number of statements regarding sexual relations you are alleged to have had with members of this crew, specifically Counselor Kami Shall, Chief Helmsman Lt. Velkovsky, Squad Leader Sasha Hrelle, and Cadets Thykrill, Soolamea, Chaudri, and Yeager. Is this true?\"\n\nJared felt his face burning now, and he was trembling despite his efforts to appear cool. They couldn't do anything to him. They couldn't. \"I... I don't think it's appropriate to discuss private matters like that in public.\"\n\nThat declaration produced a raised eyebrow from the Vulcan. \"You appear to have had a profound change of attitude regarding discretion, Mr Miro. I will ask again: are you maintaining that sex took place between yourself and the aforementioned women?\"\n\nHe swallowed again, looking to Thykrill, the Andorian Security Specialist on his own squad - and the only one he had managed to win over during his time onboard. She had been a virgin, and not very good, and since that one time he had tried to keep her at a distance. He looked to her pleadingly now. But the girl only offered him a murderous scowl.\n\n\"Well, Mr Miro?\"\n\nHe looked back at T'Varik again, deciding he had no choice but to stand his ground. They couldn't prove anything, and none of them would be willing to take this any further and face public embarrassment. \"Yes, Commander. I do.\"\n\n\"I see. You should know that we have run a number of neurological scans on some of your alleged partners. These scans indicate that they are genuine in not remembering having sex with you. The logical conclusion is that you have employed some form of memory-alteration device or technique on them to make them forget. \n\nThis constitutes rape.\n\nJared Miro, you are under arrest for multiple counts of sexual assault and coercion. Security, take him into custody.\"\n\nJared wasn't sure he had heard properly. By the time he saw Neraxis approach, carrying electronic manacles, he was shaking. \"N-No- No, wait-\"\n\nNeraxis reached for him. He pulled back - but the Bolian was bigger and faster, easily grasping his arm, twisting it behind him, then kicking him in the back of one of his knees to force him face down onto the floor, securing his wrists behind him. \"Wait, please, you can't- I WAS LYING!\"\n\n\"Would you elaborate on that please, Mr Miro?\"\n\nJared's heart felt like it was about to burst from his chest, and not just because of Neraxis' weight pinning him down. He forced the breath to stay in him long enough to repeat, \"I- I was lying! I was lying! I didn't- I didn't have sex with them!\"\n\n\"With any of them?\" T'Varik asked.\n\nHe gasped, his head spinning. Then Thykrill spoke up, sounding disgusted as she glared at him. \"Not quite. *I* had sex with him. But don't worry, none of you missed much.\"\n\n\"I'll rephrase my question: with the exception of Cadet Thykrill, did you have sex with any of the aforementioned women?\"\n\nHe shook his head. \"N-No...\"\n\n\"Thank you, Mr Miro. Ms Nemm, help him back to his feet and uncuff him.\"\n\nNeraxis complied, though she did so by lifting up by the scruff of his uniform over his rear end, making his underwear bunch up painfully. He caught his breath, still gasping, \"I'm- I'm sorry! I won't do it again!\"\n\n\"That much is certain.\" T'Varik continued. \"On Stardate 35260.14, I placed a note on your permanent record for lying to a superior officer. At the time you were warned of the consequences of a repeat offence - such as you've just committed now.\n\nEffectively immediately, you are expelled from Starfleet Academy. You will be taken back to your quarters to collect your belongings, and then you will be transported to the Impala, who will arrange for your eventual return to Argelius.\"\n\nHe shook his head. This wasn't happening! \"But- But it was just talk-\"",
        "\"No, it wasn't. Though no physical activity took place, your lies and their unwanted, explicit nature demonstrate both sexual harassment and a profound disrespect towards your fellow crewmembers.\"\n\nBeside her, Kami had her arms folded over her chest. \"Jared, we spoke about this on more than one occasion during our sessions. Perhaps we were too busy having imaginary sex in my office for you to take onboard my warnings. As Ship's Counselor I'm supporting Commander T'Varik's decision.\"\n\nJared felt like his stomach had plummeted into his boots. He focused on Sasha, standing nearby, and let his anger grow. \"You set them up to do all this, didn't you, you little bitch? I want to see the Captain!\"\n\n\"Captain Hrelle has other matters to deal with, but he respects my authority and decision.\"\n\n\"And given that you refer to his daughter as both a sweet little ride and a bitch,\" Kami added, \"Meeting him... might not be for the best.\"\n\n\"Mr Miro,\" T'Varik concluded, \"I hope this experience is a learning opportunity for you. Regardless of your cultural proclivities towards licentiousness, in a working environment you must look upon your colleagues as colleagues, not trophies. Perhaps you will learn from this.\"\n\nJared told her what she could do with her advice as he was led out.\n\n\"Or perhaps not,\" T'Varik revised.\n\n*\n\nDeck 1, Captain's Office:\n\nThe door chime sounded. Hrelle sat behind his desk, looking up at Giles and Kami, standing nearby. The boy looked nervous. Hrelle nodded to him. \"It'll be okay.\" Louder now, he announced, \"Enter.\"\n\nT'Varik escorted Captain Lucille Arrington inside. The woman was as tall, blonde and arrogant as Hrelle remembered from months ago, when she had secretly delivered the high-tech communicator to Giles. The woman nodded to the boy before following protocol and approaching the desk. \"Captain Hrelle.\"\n\nHe nodded back. \"Captain Arrington. Welcome back onboard the Surefoot. And how are you?\"\n\nShe sneered. \"Cut the crap, Hrelle. I've got the Malurians eating ice cream and watching Fat Cat and Lil' Kitten, and the freighter crew facing the next twenty years sleeping with one eye open waiting for some other prisoner to knife them - and personally I won't lose any sleep if they did.\" Somehow she grew even more arrogant, a feat Hrelle didn't think possible. \"How lucky for you, that you just happen to stumble upon a slave trafficking operation in your sector of space.\"\n\n\"Luckier for the slaves,\" Hrelle replied deadpan. \"And it was Giles' squad who uncovered it. I only sit around, look pretty and let others do the real work. Bit like yourself, I expect - except for the pretty part, of course.\"\n\n\"Very funny.\" She looked at Giles now. \"Let's go, you're coming with me.\"\n\nGiles tensed, but T'Varik responded. \"Cadet Arrington is under my direct authority. He is not going anywhere.\"\n\n\"He's not a cadet any more. He resigned.\"\n\nThe Vulcan straightened further. \"Assuming that was the case, how would you be aware of that and not I?\"\n\nArrington scowled at her. \"I can't discuss that.\"\n\n\"Can't? Or won't?\"\n\nKami set a reassuring hand on Giles' arm. \"Captain Arrington, if there's some confusion regarding Giles, why not ask him yourself?\"\n\nArrington looked to the Counselor, and then to Giles. \"Well, boy?\"\n\nGiles tensed, clearly hating the attention, but finally replied, \"No. I haven't resigned.\"\n\n\"There,\" Hrelle concluded, reaching to a corner of his desk and producing a small gold box. \"Now that that matter is settled, here's a little Christmas present.\"\n\n\"Christmas?\"\n\n\"Of course; it's Christmas Eve on Earth right now, or close enough. Giles was telling me your family still celebrates it.\" He pushed it a little closer to her. \"That's for you, and your brother, and your father, and anyone else who might like it. Hope you like the colour.\"\n\nArrington frowned at it, as if that could make the box lid lift itself. Then she reached out and did it with her hand. She took out the communicator, and then dropped it on his desk as if it were on fire. She glared at Hrelle. \"How did you get that?\"\n\n\"I turned it over to him,\" Giles declared. \"And I told them where I got it from, and why I had it.\"\n\nHis aunt turned back to him, shocked. \"How could you do that? You had orders!\"\n\n\"Who gave orders to conduct a covert surveillance of Captain Hrelle?\" T'Varik asked.\n\n\"None of your damn business!\" Arrington never took her eyes off of Giles. \"I don't believe this! You betrayed your own family?\"\n\nHis face screwed up with anger. \"Oh yes, because that's what what this is about, isn't it? What the family wants? I thought it was all about finding out the truth about Captain Hrelle, for the good of Starfleet?\"\n\n\"Not if this was an unsanctioned operation,\" T'Varik opined. \"Involving unauthorised use of Starfleet Intelligence equipment.\"\n\nArrington turned back to the Vulcan. \"You have no proof of that!\"\n\n\"On the contrary, Captain, I gathered sufficient evidence from the device to confirm its origins, as well as details on the transmissions made. I believe a strong case can be made to Starfleet Command.\"\n\n\"Assuming we want to do that,\" Hrelle pointed out, lifting up the communicator and setting it on a shelf behind him. \"But that would cause a mountain-high level of hassle. Investigations, enquiries, diversions from our mission, disruptions to the cadets-\"\n\n\"Scandal,\" Kami added, \"On many fronts. There'll be bodies strewn everywhere. Metaphorically, of course.\"\n\n\"Or... we could just call a truce between your family and mine,\" Hrelle offered. \"We are supposed to all be on the same side, after all.\"\n\nT'Varik's hands folded behind her. \"I am not sanguine about allowing criminal activity to go unreported. However, my primary responsibility is towards my cadets, and any investigation arising from this would have an adverse effect on them.\"\n\nHrelle rose and walked around from behind his desk, joining them. \"Well, Lucille? Have we got a deal?\"\n\nShe glowered at him. \"You think you've got it all worked out, haven't you, Hrelle? You think you're so damn clever.\" But then she turned on Giles. \"But it's you that's proven to be the surprise, young man. The surprise. And the disappointment. You betrayed us.\"\n\n\"Yes,\" the boy admitted, looking upset but still standing his ground against his aunt. \"Because my conscience wouldn't let me continue with this. It was wrong. It was nothing more than a personal vendetta from my grandfather that he nurtured in Dad and you and my brother and everyone else. I only wish I'd had the courage to say something from the start.\"\n\nArrington paled. \"Giles... This isn't you saying that, it's them. It's him!\" She glared at Hrelle. \"I want to speak with my nephew alone.\"\n\n\"As Academy Liaison to the cadets I most certainly will not permit that,\" T'Varik declared. \"You have proven yourself to be entirely untrustworthy.\"\n\n\"And you have nothing to say to me that I wouldn't want my superiors to hear anyway,\" Giles confirmed.\n\nArrington's eyes widened. \"You're gonna break your father's heart with this behaviour! This is a disgrace. You're a disgrace!\"\n\nKami stepped forward, half shielding Giles, her teeth bared. \"Oh, I've had it with you, bitch.\"\n\nT'Varik drew closer from the other side. \"As have I. I will not permit you to speak to him in this manner.\"\n\n\"You and Dad and my brother and everyone else in our family wanted me to report on Captain Hrelle,\" Giles reminded his aunt, his temper rising. \"Well, here's my report: I've lived with him, talked with him, eaten with him, worked with him. And I can tell you without hesitation that he's not a coward, he's not a traitor, and he's not a criminal! He's one of the finest men I could serve under, the finest I could learn from! I'm proud to be here!\"\n\nArrington was turning red. \"You're talking like he's your father!\"\n\n\"I WISH HE WAS!\"\n\nArrington raised her hand to slap Giles' face.\n\nHrelle caught her by the wrist before she could connect.\n\nShe faced him, fury in her features. \"Let go of me. Now!\"\n\nHe didn't move - except for tightening his grip, until her arm trembled... and the fury in her eyes began to get replaced by fear. \"I- I said let go-\"\n\n\"Captain,\" T'Varik started, drawing up to him.\n\n\"Esek,\" Kami warned, on his other side.\n\nHe ignored them both, tightening further as he spoke to Arrington through clenched, bared teeth. \"Before you think of doing something like that again, Lucille, I want you to go back to your ship and visit your morgue. Visit it, and take a good, long look at the bodies I put there. Not the bodies of the children, but the last bastards who tried to assault a member of my crew. Look at what I did to them, with my bare hands. And don't think for a cold moment that I wouldn't send you there too if I had to.\" He finally released her. \"My crew. My cubs. Don't ever raise a hand to any of them again.\" He took a step back from the now-frightened woman. \"Commander, escort her back to the transporter room.\"\n\n\"Aye, Sir.\"\n\nHe stayed still, until he heard his door slide shut. Then he turned around. Kami looked concerned; Giles shocked. He focused on the latter. \"Are you okay, Giles?\"\n\nThe young man nodded, shakily. \"I'm- I'm sorry, Captain-\"\n\n\"Sorry? For what?\"\n\n\"That you- that you had to do that-\"\n\nHe drew closer and rested a hand on Giles' shoulder. \"You don't have to apologise. Especially not for that.\"\n\n\"But what if she charges you with assault?\"\n\nKami nudged him reassuringly. \"No offence, Giles, but I am beginning to doubt if your family does anything by the book. Especially if she had to explain her own part in that, and with us as witnesses.\"\n\nGiles nodded, swallowing, his brow furrowed. \"Well... this'll be the first time I won't mind missing the family Christmas reunion...\"\n\nHe looked up, trying to stay resolute.\n\nAnd failing.\n\nHrelle drew him into a hug, murmuring reassurances as he looked at Kami.\n\nWhen he pulled back, Giles caught his breath. \"Sorry, Captain-\"\n\n\"You don't have to apologise for that, either.\" He drew back. \"You know, I have a Christmas present for you, too.\"\n\nGiles forced himself to calm down. \"Me?\"\n\nHrelle returned to his desk and retrieved two small badges: squares with a single white circle inside each. \"Unlike the communicator, these you get to keep.\"\n\nGiles stared at them. \"Squad Leader insignia?\"\n\nHrelle nodded. \"Jared Miro is leaving the ship, and Starfleet. Beta Squad need a new leader, and you're the most qualified.\" The Captain reached up and fitted the insignia on Giles' collar. \"T'Varik has already sent for a replacement Flight Specialist for Alpha Squad; until they arrive, you may be pulling double duty until then.\"\n\nKami smiled. \"They look good on you.\"\n\nGiles looked stunned by the news. \"I-I don't know what to say... except thank you.\"\n\n\"That'll do,\" Hrelle chuckled.\n\nGiles smiled - but then it softened. \"I won't be with Alpha Squad anymore...\"\n\n\"You don't have to sever your ties with your friends, you know,\" the Captain reminded him.\n\n\"And if you're thinking about one particular friend,\" Kami added teasingly, \"Keep in mind that, unlike when she was your Squad Leader, there won't be any hierarchical conflict now should you and Sasha choose to... well...\" She looked to Hrelle. \"Unless you want to play Papa Bear and forbid it.\"\n\nHe stared back derisively. \"Of course not. Sasha and Giles are mature individuals. I trust them both. They have nothing but my support.\" He smiled as he clasped the boy's shoulders and squeezed. \"But if you break her heart... I'll have yours for breakfast.\"\n\nGiles laughed - but then stopped, not entirely certain how serious he was.\n\n*\n\nDeck 1, Mess Hall:\n\nIt was the most number of crew ever assembled in the one room. And with the obvious exception of Commander T'Varik, they all looked as tired as he felt, even the experienced crew. He decided to not dawdle. \"You've all done exceptionally well the last couple of days. Because of your efforts, the surviving Malurian children will be reunited with their families, and the Federation will assist their colony to eventually return to their homeworld to join the others. Thank you.\n\nAnd because it's Christmas Eve, a Terran holiday where a fat, furry man delivers gifts to good little children - I have left all of of you an extra week's worth of replicator credits in your accounts.\" He let them cheer that before warning, \"Try not to spend it all on booze, we only have so many detoxicants onboard. \n\nI also want to congratulate Giles Arrington for his promotion to Beta Squad Leader.\"\n\nHe paused for the applause and the back slapping on a grinning, blushing Giles which followed. \"From his arrival onboard the Surefoot, he's talked incessantly about his leadership potential. Well, now he has the chance to prove it. He certainly can't be worse than the asshole who preceded him.\"\n\nThe room erupted in laughter, except of course from T'Varik.\n\n\"We will have a celebration for him. At a later date. For now, though, the ship is powering down for the night. We're staying put, and all systems are going on standby, with a skeleton crew headed by our esteemed First Officer. The rest of us are ordered to bed for the next twelve hours. Preferably your own, but if you can't manage that, try to get some sleep in there somewhere.\" After more laughter, he finished with, \"Dismissed.\"\n\nAs Hrelle and Kami departed, the group milled about some, a few queuing up at the replicators to grab a snack before returning to their quarters. Alpha Squad congregated around Giles, Eydiir straightening up. \"I'm pleased for you, Squad Leader.\"\n\n\"Thanks, Eydiir.\"\n\n\"And gladsome that you are achieving it now than earlier, when you were more a braying ass.\"\n\nGiles gave her a sarcastic thumbs up.\n\nNeraxis slapped him on the back a third time. \"Pretty Boy Makes Good! Hope you don't turn into another Miro!\"\n\n\"No chance,\" he assured her, looking at Sasha. \"I learned from the best.\"\n\n\"We're gonna miss you on the Squad though, Giles,\" Jonas lamented, though he continued to try and be supportive.\n\n\"Indeed, Respected Squad Leader,\" Kitirik agreed, looking more relaxed now since his confession than Giles had ever seen him before. \"It will be strange to have someone new in our group. I do not think I will like it.\"\n\n\"It's the nature of our life, Kit,\" Sasha told him. \"Promotions, transfers, dismissals... And remember, Giles is only going to be in the next quarters, stinking them out with his socks and underwear instead of us.\"\n\n\"They're like roses compared to yours,\" he informed her. \"Yours need force fields around them for health and safety reasons.\"\n\n\"Look at those two,\" Neraxis quipped. \"The way they talk, you wouldn't think they were Bumpers.\"\n\n\"We're not Bumpers,\" Sasha denied, flushed.\n\n\"Bumpers, Friend Neraxis?\" Kit asked.\n\n\"Yeah: Bump, Bump, Bump!\" She slapped the side of her fist into the palm of her other hand for emphasis.\n\nKit frowned - but then his eyes widened. \"Ahh! Coitus!\"\n\n\"No,\" Giles added, looking just as embarrassed as Sasha. \"We're just friends, and colleagues. That's all.\"\n\n\"Of course,\" Eydiir agreed - though the look she shot Jonas, Neraxis and Kit, in full view of the Squad Leaders, told another story.\n\n*\n\nDeck 1, Captain's Quarters, 2230 Hours:\n\n\"Captain, that subspace link has been established.\"\n\nHrelle scratched under his muzzle and prepared himself. \"Patch it through.\"\n\nThe desk monitor lit up, to reveal a pale, middle-aged Terran in a Starfleet Admiral's uniform, his blonde hair and chin reminiscent of his son. He focused on suppressing his initial rise of anger. \"Merry Christmas, Bill.\"\n\n\"That's Admiral Arrington to you... Captain. And you have some nerve calling me, after what you've done to my son.\"\n\nHrelle forced himself to stay calm; the reason for his call was too important. \"Admiral, your son is the reason I'm contacting you.\"\n\n\"Why? You want to gloat over your victory?\"\n\n\"Bill!\" Hrelle snapped, regaining his composure once more when he saw the other man stop. \"Admiral, since you've obviously already spoken with Lucille, you know I've agreed not to report you about that communicator. Now I'm trying to reach a further accommodation between us.\"\n\nArrington. \"Fat chance.\"\n\n\"As I suspected. But like I said, I'm not here about us. The way Lucille went on before she returned to the Impala, she made it sound as if his whole family was going to cut him out of their lives, as punishment for siding with me.\n\nI'm asking you... not to let that happen.\"\n\n\"Oh? And why the hell would that matter to you?\"\n\nHrelle leaned forward, folding his hands together to keep them still. \"When I was Giles' age, I was being groomed by my clan to take over the family business on Cait. But I didn't want that. I wanted to be in Starfleet. I wanted that more than anything else. My father and aunts and uncles wouldn't listen to me. They threatened what we call R'Nesikith: a formal severing of one's ties to their clan. It's usually only done in the most serious of circumstances.\n\nFamily is very important to my people. But I was young, and thought that nothing was more important than what I wanted. So I left. And my father ensured no one in my clan stayed in contact with me. Only my mother's mother defied him when she was still alive.\" He smiled. \"She had balls of pure duranium.\n\nI went on with my life, denying for the longest time how much their absence in my life hurt me. Not having them there when I graduated, when I got my first command, when I married.\" He paused. \"And when I escaped from slavery, and desperately needed their emotional support. I tried to get back in touch with them, many times. There was never any response. Their absence remains an ache that has never gone away.\"\n\n\"That's such a sad story, Hrelle-\"\n\n\"Bill... Giles is a remarkable, gifted young man-\"\n\n\"Who chose to betray his family-\"\n\n\"Who chose to listen to his conscience and not participate in an illegal operation. He didn't betray his family, he stood up to them. Did you know Lucille tried to strike him?\"\n\nThat made the man react, with genuine surprise. \"You're lying.\"\n\n\"Ask her yourself. He didn't back down. He has courage, the type of courage we need in Starfleet. He can have an amazing future ahead of him. Can we at least put aside this feud and agree on that, if nothing else?\"\n\nArrington looked ready to argue further, but frowned and replied, \"Yes. We can. For him, if nothing else. I'll... consider what you've said. And... thank you for saving his life. Arrington out.\"\n\nThe screen went blank. Sitting opposite him, Kami smiled. \"That was very decent of you. It couldn't have been easy, contacting him like that.\"\n\nHe shrugged. \"I owed it to Giles.\"\n\n\"But what if Arrington changes his mind and cuts the boy off from his family?\"\n\nHrelle rubbed at his eyes. \"Then Giles will do what I had to do: make his own. And he's got a good start already here, with all of us.\" He looked at her again. \"What's with that frown?\"\n\n\"You told me you and your clan stopped communicating. You never mentioned they imposed the R'Nesikith on you! Great Mother, that is medieval! Who does that nowadays, especially over an argument about career?\"\n\n\"My former family, obviously. I don't want to talk about it tonight. I don't want to do anything now but sleep.\"\n\nKami regarded him for a moment, before slowly rising and stretching her limbs, her tail swishing languidly behind her. \"I'd better let you get to bed, then.\"\n\n\"You don't have to.\"\n\nShe stopped and looked at him over her shoulder, shaking back her mane. \"Excuse me?\"\n\nHe paused for a moment, before rising to his own feet. \"You can stay. We can have a sleepover.\"\n\nShe grunted. \"First T'Varik, and now you.\"\n\nHe smiled. \"You and T'Varik slept together? Tell me more.\"\n\n\"There's nothing to tell, horncat. And there'll be nothing to tell between us, either.\"\n",
        "\"I know. When I said sleepover, I mean sleep. It's been a long, exhausting couple of days, and right now I could barely raise a smile let alone anything else. And I'd love your company.\" He drew closer. \"But if you think it might be too hard for you-\"\n\n\"I can't believe you said that.\" But she regarded him some more before nodding. \"Okay. But I'm warning you, Captain, the first sign of any rise of interest from below the belt and...\"\n\nThey didn't make an effort to display themselves to each as they undressed; neither did they turn their backs or offer any human-type coyness. Hrelle switched off the lights; the environment of his quarters was more baffled than others, to allow him total darkness and silence and let his enhanced senses rest.\n\nThey climbed into bed, feeling their heat, their fur, drinking in their scents. Her back was to him, her tail brushing teasingly against his groin.\n\n\"Watch yourself down there.\"\n\nShe chuckled. \"Sorry. It has a mind of its own.\"\n\n\"That's usually my excuse.\"\n\nKami's breath slowed. \"Are you okay, Esek?\"\n\nHe didn't respond immediately. \"Sasha and Giles and the others were almost killed, doing what should have been an ordinary, boring task. I carried the bodies of dead children in my arms, unable to help them. The Bel-Zon might be active again. We uncovered a terrible crime, something I thought had been banished in the past. My past. And I killed. And I just feel numb to it all. I wonder if a part of me died some time ago to leave me numb.\" \n\n\"No. It's that part of you that's talking right now, you know.\"\n\nHe shuddered. \"I don't know what the future will bring any more.\"\n\nShe shifted in place, looking over her shoulder at him in the dark. \"When did you ever know?\"\n\nHe grunted. \"You got me there.\"\n\nKami settled down again. \"You and I will work all this out together - later. For now, put an arm around me.\"\n\nHe complied. She reached up and started stroking his palm.\n\n\"What are you doing?\"\n\n\"Seeing if this will make you purr and rub up against me.\"\n\n\"No, but I've got something else you can stroke.\"\n\nShe stopped stroking, and tightened his hold on her. \"Good night, Fat Cat.\"\n\nHe sighed, contented. \"Good night, Lil' Kitten...\"\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... GREY MATTERS"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fan fiction",
        "space",
        "caitians",
        "science fiction",
        "alien11111",
        "fanfic"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-secrets-and-lies-ch-06"
}