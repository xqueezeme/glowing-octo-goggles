{
    "title": "Point Hollow Ch. 02",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nThis story is dedicated to the memory of Dame Agatha Christie, and is partially inspired by her Poirot novel 'The Hollow'.\n\nPart 9 - Turf Wars \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted Bettina from in front of the State Office Building in Courthouse Square at 7:00am, Friday, April 29th. \"Channel Two News has learned that two of the six missing students have been found! They are identified as Annemarie Reynolds and Sherry Kim, both University students. They were found by the FBI yesterday, and they are in the Intensive Care Unit at University Hospital with serious injuries. Neither the FBI nor TCPD would give a statement on those injuries nor what happened to the women, only that they were found several miles north of the State Line. The other four students are still missing.\"\n\n\"In other headline news, the SBI Narcotics Task Force arrested several members of the 8th Street Gang in the City!\" Bettina said. \"The large bust of drugs and cash was made by NTF Director Richard Ferrell and his highly trained, professional agents. In a statement, NTF Director Ferrell gave credit to SBI Agent Leonard 'Sergeant' Sharples for his excellent leadership and work in bringing down the gang, as well as two at-large fugitives that were conducting a drug operation with the gang. Those two men are being returned to State Prison.\"\n\nBettina went on: \"City officials have exploded in anger, as the State Constitution and many laws give them exclusive jurisdiction over the City's territory. Mayor Lucian Phelps has already directed the City Attorney to sue the SBI as well as to obtain warrants for the arrest of Agents Ferrell and Sharples.\"\n\n\"In a related story,\" Bettina said, \"SBI Director Jack Lewis, who is running for Governor, gave a speech yesterday in Midtown. He reiterated his earlier comments that the SBI Narcotics Task Force has jurisdiction over all of the State, including the City, and that all local law enforcement entities are required to work with the NTF or get out of their way. Director Lewis said that the State is sovereign, not County Sheriffs, and that he, Director Lewis, would be enforcing the authority of the NTF more and more going forward.\"\n\n\"Reached for comment, Director Lewis issued a statement earlier this morning praising his NTF team, and he also said the SBI will be continuing its drug interdiction work as well as flexing its muscle and its authority over other counties in the State.\"\n\n\"Asked for a comment, Governor Val Jared's campaign office issued a statement saying that if the SBI murdered any more U.S. Marines or innocent, law-abiding citizens, then Lewis himself would be held legally responsible.\"\n\nAs we watched in MCD, I could see what was going on. I called Cindy to my office and told her to make certain preparations...\n\n* * * * * * * * * * * * * * * *\n\n\"Sir, the Media is setting up in the front yard.\" the Duty Desk Sergeant called in to me at 7:45am. \"KSTD, KXTC, KSB, KCTY... all setting up mobile feeds.\" I thanked him and told him to expect visitors.\n\nRight at 8:00am, SBI-NTF Director Richard 'Dick' Ferrell strode up the front steps of Town & County Police Headquarters. Behind him was SBI Agent Leonard 'Sergeant' Sharples and eight armed and armored SBI 'SWAT'-style agents. As he came to the front door, he had a smirk on his face that was about to become a grin.\n\nHe entered the lobby with his gang and strode up to the Duty Desk. \"This is a warrant for the SBI to take control of all drug evidence collected at the Point Hollow property. Bring me that evidence right now.\" The armored SBI Agents were tense, their guns pointed at the floor but ready to swing into action.\n\n\"I'll have to notify my superiors of this.\" said the Duty Desk Sergeant. He suddenly found Ferrell's gun pointed right at his head.\n\n\"I said bring me that evidence NOW, you fucking shit eater!\" Ferrell snarled. \"Send that punk next to you and get it, or I'll haul your ass into jail for disobeying SBI orders!\n\nThe Duty Desk Sergeant responded by whipping out his gun and levelling it between Ferrell's eyes. \"You don't give me orders, shithead.\" the Sergeant said. Only now did Ferrell see that the man had his armored vest on under his shirt... as did the other Duty Desk Officer, who had also drawn his weapon. Tension mounted in the room... and then went sky-high.\n\nThe TCPD's eight-man SWAT team poured out of Interrogation-A, the hallway to the Press Room, and the hallway leading to Booking. Their arms were pointed at the SBI team... and the TCPD guys the tactical advantage. Sixteen more TCPD officers, heavily armored, also poured into the hall, guns at the ready to exterminate SBI pestilence.\n\nAnd then it suddenly grew silent. From Interrogation-A strode a tall, broad-shouldered redheaded man, armor on under his shirt and over the shirt but under his trenchcoat. And that was not a red crowbar he was holding... it was a shotgun.\n\nI strode silently up to the Duty Desk. Ferrell turned to me and thrust the warrant at me, hitting me in the chest. \"This is a warrant, you fucking cocksucker. The law is on my side here. You follow this warrant, or my men will shoot every one of your officers dead to get that evidence.\n\nHaaawwwwwwwwwwwk! came the loud sound from my throat. Everyone watched.\n\nPtui. My spittle hit Ferrell right in the face. The SBI agents raised their guns, but found my team's guns in their earholes. \n\n\"We're not leaving,\" said Ferrell, wiping my spit off the bridge of his nose, \"until we have that drug evidence. The Media is outside, watching us. You'll have to murder us to get us out of here.\"\n\n\"That can be arranged.\" I said, speaking for the first time, and quietly. \"Gentlemen, get ready to shoot to kill every SBI Agent in this building, except the Reservists, of course. One... two...\"\n\n\"Hold on, hold on.\" said a voice. It was Sheriff Daniel Allgood, right on cue. \"ADA Patterson, will you serve the papers, please.\"\n\n\"Yes, Sheriff.\" said Paulina, who then raised her voice and said: \"The SBI warrant was illegally obtained, and outside this jurisdiction. Judge Folsom has issued an order canceling it.\"\n\n\"And Judge Leahy reinstated it on appeal, you nigger bitch.\" snarled Ferrell.\n\n\"Don't kill him, Mr. Crowbar.\" begged Chief Moynahan, who had come up with the Sheriff and Paulina. I had thrust my shotgun under Ferrell's chin at what he'd called Paulina. And yes, I was about to pull the trigger... I was still considering it, too, yes I was...\n\n\"And then,\" Paulina said, \"the FBI went to Federal Court, claiming jurisdiction because of the kidnapped students and crossing State Lines. The Federal Judge has granted the FBI's writ, and it's their jurisdiction, not the SBI's. You have no standing, Ferrell... or should I say 'Cracker' Ferrell. Here's your 'cease and desist' order.\"\n\nThe writ was passed up to the Duty Desk Sergeant, then to me. I thrust it at Ferrell, hitting him in the chest with it. Hard.\n\n\"Sergeant Hewitt,\" said Chief Moynahan to the SWAT Team leader, \"get these pieces of SBI dog excrement out of my Police Station. Crowbar, my office please... after a medicinal cup of coffee, of course.\n\n* * * * * * * * * * * * * * * *\n\n\"Your officers love the bravado.\" said Moynahan as Daniel and I sat in the chairs in front of his desk. \"I just hope you don't get someone killed, Mr. Crowbar. Especially yourself.\"\n\n\"A Marine has already been murdered by the SBI, Chief.\" I said. \"And that was their mistake while trying to murder Chief Griswold. The SBI has drawn blood, they're on the wrong side of the law, and this power play by Jack Lewis and Dick Ferrell are what's going to get people killed. If I ever see Ferrell again in this County, he's a dead man, and it will be by my hand. If you want my badge, sir, I'll hand it to you now. But I'm not tolerating those bastards anymore.\"\n\n\"I understand.\" said the Chief. \"But their killing that Marine, and you pursuing them like the pitbull you are for that crime... that's about the only thing keeping the Media from waging war against you. They hate your guts, Mr. Crowbar, and they are looking to take you down. One of these days, they're going to take Ferrell's side... just because he's wrong and they like taking the wrong side at all times.\"\n\n\"Has anyone called the Governor about this?\"\n\n\"Yes.\" said a voice. It was Chief Griswold coming into the office that was once his. \"I told him the whole story, at least what I got from Captain Ross and the Duty Desk Sergeant. Jared is livid, about this, and about the City incident last night.\"\n\n\"What happened last night?\" asked Daniel.\n\nI said \"The SBI made a raid on a drug gang in the City... where the SBI is not supposed to go. The State Constitution and many laws give the City semi-sovereignty over things like law enforcement; they're almost like their own State over there. But what's worse is that when they arrested the gang, Ferrell made a point to expose an undercover City Police officer, yelled the man's name to the gang, told them the man had a wife and daughter.\"\n\n\"Jesus Christ.\" muttered Moynahan.\n\n\"The FBI and Federal Marshals have taken the exposed City cop and his family into Witness Protection.\" I said. \"And that exposure alone is enough to kill Ferrell. I should've pulled the trigger when I had the chance.\" I was angry that I'd let that opportunity slip away.\n\n\"No, you should not have.\" said Chief Griswold. \"You have a much bigger, more evil man to put down first. And then you can clean up the trash.\"\n\n\"Now Grizz, don't go giving the man ideas.\" said Moynahan.\n\n\"Sean, Jack Lewis and those bastards meant to kill me.\" Griswold said. \"I'm not forgetting that... nor forgiving it.\"\n\n\"Gentlemen,\" said Sheriff Allgood. \"I know emotions are running high right now. But we've got to scale this back. The Council, or half of it, are going to be all over Don for this. Thomas Cook got exposed for that contract situation, and he's already gotten word that Police Department assets gave John Colby the information. Cook is filing an ethics complaint with the State over Colby not charging for some of your success parties at his restaurant.\"\n\nAllgood continued: \"Cook is out for blood, your blood, Don, and he's going to make as much of a stink as possible. The Press, especially KSTD after you banned them from Headquarters, is eager to pick up the chant against you. I want you to take down the bad guys, Don, but you've got too much incoming fire, and it's going to interfere with your mission and the Police Force's mission.\"\n\nChief Griswold said \"And the Governor can only do so much, now that he's running against Lewis. The Democrats in the Legislature have threatened to impeach Jared if he suspends Lewis, and it would be bad politically, anyway.\"\n\n\"So, Don,\" said Daniel, \"We've got to calm the waters. And to do that, we've got to get you out of the hole that's just been dug for you. And when you 're in a hole, stop digging.\"\n\n\"All, right, I'll get the SBI thing calmed down, at least the part here. I get the feeling the Media will be happily reporting what is about to happen in the City, anyway. Would you please excuse me?\"\n\n\"By all means.\" said Moynahan.\n\nAs I left the anteroom and went into the hall, Cindy came out of MCD, obviously having been waiting for me. \"So, what's the story?\"\n\n\"First,\" I said, \"I have to put out a fire. Come on in and watch.\"\n\n* * * * * * * * * * * * * * * *\n\nAt 10:00am, SBI Inspector Britt Maxwell appeared at the podium of her Press Office in Westphalia. \"I have a brief announcement to make, and will be taking no questions afterward. Last night, the SBI's Narcotics Task Force violated the State Constitution and numerous laws by entering the jurisdiction of the City without authorization and making a drug interdiction. They were not working with City Law Enforcement, nor the FBI, nor did they have the City's permission or consent to operate within the City's jurisdiction as required.\"\n\n\"As a result,\" Britt continued, \"I have suspended NTF Director Richard Ferrell, without pay, pending a full investigation of his illegal actions. I have asked the FBI to participate in this investigation as part of their overall investigation into SBI corruption. I am also investigating the allegations that Agent Ferrell intentionally exposed a City Police Officer as an undercover agent, which has threatened the lives of the Officer and his family. The City Attorney has issued an arrest warrant for Ferrell in connection with that exposure.\"\n\n\"Furthermore,\" said Inspector Maxwell, \"the State Narcotics Task Force is suspended, per a 'cease and desist' order by State Superior Court Judge Rodney K. Watts. SBI Agents assigned to the NTF are to be reassigned to other positions and assignments in the SBI for now. That is all.\"\n\nWith that, Inspector Maxwell walked off the stage and out of the room, declining to answer the screams of \"Did Governor Jared put you up to this?\" by the rabid reporters.\n\n* * * * * * * * * * * * * * * *\n\nI was talking to my wife Laura as I treated her to lunch at the Cattleman's Club. A good lunch at this really good restaurant with the most beautiful woman in the world (in my considered opinion) was what I needed to lift my spirits.\n\n\"So,\" I said as we waited for our food orders to arrive, \"tell me about Dr. Mickelson and Dr. Ellman.\"\n\nLaura replied \"Well, when Dr. Mickelson was much younger, he published a breakthrough paper on human and animal genetic strains over the course of centuries. Then he published a few papers on the effects of nuclear and other radiation upon genetics, though they were mostly follow-ons to earlier work. He was hired into the Gregor Mendel Chair for that, but Biology is one of the more lagging fields at the University; most pre-med students go into Chemistry now.\"\n\n\"Anyway,\" Laura continued, \"he's done all right, but the past couple of years he's been applying for grants for strange stuff, such as crop circles, cattle mutations, all that stuff concerning aliens. He's gotten some small grants for radiation effects on soils and crops, but not a whole lot.\"\n\n\"As to Ben Ellman,\" said Laura, \"he's struggling to get a professorship. There have been some rumors of scandal, involving trading sex for good grades. None of the women have ever turned on him, but one girl had to plead the Fifth in order to not be compelled to testify when he was under investigation at one of the Schools in North Carolina.\"\n\n\"So why even hire him?\" I asked.\n\n\"I don't run the Biology Department, Darling.\" Laura said. \"But he's being watched, and there's been no hint of scandal while he's been here. He's probably as decent a Basic Biology teacher as anyone, so all's well and good... except that the door to a professorship isn't opening for him...\"\n\n* * * * * * * * * * * * * * * *\n\n\"It would be a very, very good idea if you are not seen in the City again.\" said Jack Lewis to Dick Ferrell. \"The SBI won't honor the City's warrant for your arrest, and we're saying you're indemnified by State Law. We're working to get a judge to slap the City back, and hard, but if you're seen up there, they'll put you in jail and light your ass on fire.\"\n\n\"Yes sir.\" said Ferrell. \"What about Inspector Bitch, though? Right now I'm out of work.\"\n\n\"The Union is grieving your suspension.\" said Lewis. \"We're going to use that to at least get you half-pay. So don't sweat that. By the way, I heard the Iron Crowbar spit in your face. Now that is going around, and it's going to hurt your reputation. As bad if not worse than that time Muscone beat the shit out of you.\"\n\n\"What am I supposed to do about that?\" snarled Ferrell. \"I would've shot the bastard, but then all of my men would've been wiped out in there.\"\n\n\"Yes, they would've.\" said Lewis. \"But I'd suggest you do something about that, do something to restore your reputation.\" Ferrell just nodded. Lewis was pleased at the spark of hatred he saw in the other man's eyes. \"Okay, go home, get some rest. I'll update you on the situation in a few days.\"\n\nAs Ferrell left, he saw Sergeant Sharples in the hallway.\n\n\"How bad is it, sir?\" asked Sharples.\n\n\"It's bad.\" said Ferrell. \"Sharples, the time for games is over. The Iron Crowbar is responsible for what has happened to us.\" He leaned close to Sharples and whispered \"Do him in.\"\n\nSharples nodded and gave a thumbs-up sign. He would get the job done.\n\nPart 10 - Twists And Turns \n\n\"Well, if they don't find the other four soon,\" I said, \"they'll be dead of dehydration and exposure... if they're not dead already.\"\n\nWe were meeting in the main Conference Room. Present were: Sheriff Allgood, Chief Moynahan, myself, Commander Harlow, Captain Ross, and Lieutenants Croyle and Masters. It was 1:30pm, Friday, April 29th.\n\n\"Do we have anything new?\" asked the Sheriff.\n\n\"Yes sir.\" said Wes 'Coldiron' Masters. \"The DNA tests came back, confirming all the identities from samples in the sleeping bags and Ms. Reynolds's blue panties. I also managed to get some information on the place two of them were found, though the FBI tried hard to keep it back. The vomit and blood was Danny Cantrell's. No DNA from the other three: Slake, Jenkins and Stone... well, let me rephrase that... it's likely Stone's semen was one of several workups found in the rape kits of Reynolds and Kim, but no other outward DNA signs. The FBI also doesn't know if those three were even at that cabin. And no further sign of Cantrell, either.\"\n\n\"The doctors brought Annemarie and Sherry out of sedation.\" I said. \"They both had bad reactions. Annemarie calmed down, but Sherry was screaming and fighting to get out of the bed, and they had to sedate her again. Annemarie couldn't remember anything, but was also agitated, so they mildly sedated her so her body could rest and heal. The doctors will try again over the weekend.\"\n\n\"Let me add this.\" I said, \"Toxicology reports I obtained said that both women were drugged, probably during their ordeal. The drugs were a mixture of muscle relaxers, probably to prevent them from fighting back as they were raped, and also some strong hallucinogens.\"\n\n\"Might be why Sherry was reacting so strongly when she was brought out of sedation.\" Cindy said. \"What about alcohol?\"\n\nI brought up the reports on my laptop computer. \"Annemarie had a reading of 0.04, not very high. Sherry had no alcohol, according to this report.\" I said. \"And adding to the theme of the FBI's sudden desire to not share stuff with us... all of you obviously know that my Hospital source is my own wife, whose own counsel she keeps on what she tells me. She also said the FBI tried to bully the Hospital staff into silence, and she snapped their heads back on it.\"\n\n\"How could she do that? Especially to the FBI?\" asked Lt. Masters. I just smiled.\n\n\"She's the wrong person to cross.\" I said.\n\n\"Okay guys,\" said Sheriff Daniel Allgood, \"I want you guys to take this weekend off like you normally would, and get some rest. It's very likely the missing persons are out of our County and State, and it's the FBI's case. So chill out, start working out for the Police Boxing Matches, and whatever else you do to relax.\"\n\n\"If anyone is just starting to work out for the Boxing Matches,\" Teresa said, \"they're going to get destroyed.\"",
        "\"Especially by this Blonde with the Blue Crowbar.\" I added.\n\n\"Heh heh heh heh.\" chuckled the Chief. \"I, for one, cannot wait to see the Matches for the first time. Okay guys, I do agree with the Sheriff. You guys have been working your butts off for the last several months. Take a breather.\"\n\n* * * * * * * * * * * * * * * *\n\nSaturday, April 30th, 10:30pm. Cindy and I drove up in my Police SUV to the crime scene in Hamilton County, just south of Coltrane County. We'd been called in by SBI Reserve Director Conlan, and on the way down the Governor had called to speak with us.\n\nWe were deputized into the SBI Reserve. As we got to the farmhouse, we were stopped by State Troopers Smith and Jones, whom we'd met in the Fake Badges case.\n\n\"Sir, ma'am,\" said Trooper Smith, \"we've been ordered by our Post Commander to be your escort and bodyguard while you are here.\"\n\n\"Good!\" I said jovially. \"Glad to have you with us.\" We parked where the Troopers directed us, then got out, making sure to have our crowbars in our hands and very visible.\n\nThere was a large number of State Patrol Troopers on hand, and I had a good idea of why. We walked down to the crime scene, where the Hamilton County Sheriff greeted us warmly. The man next to him was not warm at all: he was SBI NTF Director Richard 'Dick' Ferrell. It was easy to deduce that Ferrell and the Sheriff were antagonistic towards each other.\n\n\"Why is Ferrell here?\" whispered Cindy to me. \"Wasn't he suspended?\"\n\n\"The Union grieved it.\" I said. \"The hearing is not until Monday morning.\" We walked on up to the Sheriff.\n\n\"Good to see you, Commander.\" said the Sheriff. \"We've got a real problem here. This SBI asshole and his toy soldiers have been throwing their weight around. The Governor himself had to call down and tell them to back off.\"\n\n\"No doubt Ferrell is an asshole.\" I said. \"If he gives you trouble, you just spit in his face. Isn't that right, Crowbar 2?\"\n\n\"As long as I'm there to finish Ferrell off.\" Cindy replied. \"So what's going on, Sheriff?\"\n\n\"Come this way.\" said the Sheriff. We followed him, my Trooper bodyguards making sure Ferrell got nowhere near me nor Cindy as he followed us down... with his own State Trooper bodyguard.\n\n\"We had a pursuit onto the grounds of this farmhouse.\" said the Hamilton County Sheriff. \"Guy named Scrawny Haskins. He's cousin to your boy Dirty Lennie up in your County.\"\n\n\"I know him well.\" I said. \"I can smell Lennie from a mile away.\"\n\n\"Scrawny ain't much better.\" said the Sheriff. \"Anyway he was pursued onto these grounds. Then these SBI pukes came in.\"\n\n\"You better start showing the SBI more respect, Sheriff.\" said Ferrell. \n\n\"Or what?\" I thundered, turning and facing Ferrell. \"What are you going to do, Ferrell?\" My State Trooper bodyguard had moved quickly forward, as had Ferrell's. Still, I did not yield, continuing to confront Ferrell. \"Thing is, Ferrell, you can't back up your words. You talk like a big boy, but in truth you're just a pansy begging to get fucked up the ass.\"\n\n\"Watch your mouth, Troy.\" said Ferrell.\n\n\"Again: or what?\" I said. \"If you want a piece of me, let's settle it right here and now. One of us doesn't leave alive. Let's see if you can back up your big mouth, Ferrell...\" I readied with the red crowbar, aching to use it...\n\nFerrell was finally figuring out it might be a good idea to shut his trap. By now we were surrounded by a large number of State Troopers, SBI agents, and local Police Officers and Deputies. And all except the SBI agents were itching to see Ferrell get physically beaten down... and they knew I would do it.\n\n\"Why don't we go investigate the crime scene?\" said SBI Agent Ted Ruble, trying to break up the showdown. SBI Agent Chow was behind him. But I wasn't ready to let Ferrell off the hook yet.\n\n\"Come on, Iron Crowbar.\" said Cindy, also ready to move along. \"Everyone here knows Ferrell is a coward. Let's just treat him as the unimportant piece of dog shit that he is. Not even worth the time or effort of swinging your crowbar at him. Not even worth wasting spit on him.\" There was chuckling at that, and I 'allowed' myself to be 'persuaded' to continue along the gravel road with the Sheriff.\n\n\"As I was saying,\" said the Sheriff, \"the SBI pukes came in. One of them circled around behind where Scrawny had run to, back behind the farmhouse here. There was an exchange of gunfire, and Scrawny ended up dead.\"\n\nWe went around the farmhouse, which was lighted brilliantly by the lightbars of the many LEO vehicles. Going around back, we went towards a copse of trees. A man in his thirties but looking much older and more emaciated, wearing a dirty t-shirt and jeans, was lying face-down on the ground, dead.\n\nSitting to one side, surrounded by State Troopers... was SBI Agent Leonard 'Sergeant' Sharples.\n\n* * * * * * * * * * * * * * * *\n\n\"I'm telling you, Commander, it was a good shoot.\" said Sharples, his voice whiney. \"I circled around to catch him, yelled at him to freeze, he fired at me and I fired back.\"\n\nI had ascertained that a couple of Hamilton County Sheriff's Deputies had heard Sharples shout \"FREEZE!\", that two shots were heard, and that drug packets had been found on Scrawny's body.\n\n\"So what happened,\" said the Sheriff as I examined the body and both Scrawny's and Sharples's weapons, \"is that Scrawny here would sell drugs to the truckers at the Love's Truck Stop at the exit ramp to the Midtown-University Highway. Well, our guys got a tip, we saw him at the truck stop, but he made a run for it in a beat up car. Went to this farmhouse, just a mile and a half down the road to town. We began converging, but found that SBI cars were already pulling in.\"\n\n\"That asshole Ferrell came in and said this was their bust, and for us to stand down and let them handle it.\" said the Sheriff. \"Well, I don't cotton to those bastards just coming in and giving me orders, just as you don't. While we were arguing, that fat SBI agent yelled that he saw Scrawny, and they gave chase. I called in the State Troopers, and then we heard the shots.\"\n\n\"I see.\" I said. \"Thanks for telling me. Now I need to talk to a couple of SBI Agents, and you are authorized to keep Ferrell away with the use of deadly force, if necessary.\" I went over to Agents Ruble and Chow, and asked them to step with me away from the gaggle.\"\n\n\"Okay, Agent Chow.\" I said. \"I think I'm a good judge of characters, and I think you are a competent and honest law enforcement officer. I also think you are ex-military, and I'm favoring you having been a Green Beret over a Navy SEAL.\"\n\n\"Good Lord!\" gasped Ruble.\n\n\"Fifth Group.\" said Chow, showing no emotion. \"You must've read my record.\"\n\n\"Uh, no, actually I did not.\" I said. \"Anyway, Agent Ruble, if you wish to get back in my good graces...\"\n\n\"Who the fuck are you to be saying that?\" snarled Ruble.\n\n\"Are you seriously asking that question?\" asked Cindy. Ruble glared at her, then relented.\n\n\"What I need to know, gentlemen,\" I said, \"is why the SBI is making this massive show of force to bring down a really low-class lowlife. C'mon, what's the story here?\"\n\n\"Sir,\" said Chow in his quiet, even voice, \"we were told it was a gang. Eight people at least, big haul of drugs into here for delivery to a truck at the truck stop.\"\n\n\"That's right.\" said Ruble. \"We were expecting a big haul, and when we heard on the radio that a guy was running from the locals, Ferrell told us to haul ass and get to him before the locals did.\"\n\n\"Did Ferrell tell you to take the guy alive or dead?\" I asked.\n\n\"He didn't give any special orders like that.\" said Chow. \"We try to take anyone alive, unless they're a deadly threat to us or innocents.\"\n\n\"One more question.\" I said. \"Did either of you actually see Scrawny run behind the farmhouse?\"\n\n\"I didn't.\" said Chow. \"But I wasn't one of the first to arrive.\"\n\n\"I was with Chow.\" said Ruble. \"I never saw the guy until after the gunshots. Scrawny was dead and Sharples was right there.\"\n\n\"All right, thanks guys.\" I said. I saw that Cindy was getting agitated, that she wanted to ask questions. I just whispered to her to let it ride and to watch our backs, then we went back to the rest of the group.\n\n\"Okay, so why am I here?\" I asked the Sheriff. He drew me to one side where we could not be heard.\"\n\n\"I called the Governor and asked for you.\" he said quietly. \"There's something really wrong here, Commander. Scrawny, he has never... ever... been arrested with a gun in his possession, on his person or in his car. He's been on probation whenever he's not in jail; searches of his house have never produced so much as a cap gun. Yet he was found dead tonight with a gun in his hand. And second... the SBI showing up at all. Of course they didn't say a word to us that they were coming. But I have yet to hear a reason why they're here, what led them to come here, what led them to go after Scrawny and get in front of us to do so.\"\n\n\"I hear you.\" I said. \"There is definitely something wrong here. I take it the Governor sent the State Troopers?\"\n\n\"Oh yes.\" said the Sheriff. \"The Governor said he'd send State Troopers here to keep the peace, and you'd be here to investigate this crime.\"\n\n\"Have y'all searched the farmhouse?\" I asked the Sheriff.\n\n\"Yeah, it's empty.\" said the Sheriff. \"We searched attic to basement, and we'll do it again in daylight. But nothing's there, and it looks like no one has been in there in years. No marks in the dust on the floor, anything like that.\"\n\n\"All right.\" I said. \"I'm sure you'll secure the scene and search the grounds at first light, but I doubt you'll find much. Unless someone has something to prove otherwise, then this'll be considered a 'good shoot' by Sharples. But kick the SBI out of your county, now; you have the prerogative to do that as the duly elected Sheriff. If Ferrell refuses, let me know; I'll arrest him, and if he resists arrest... the sun will rise upon his dead body.\"\n\n* * * * * * * * * * * * * * * *\n\nA State Patrol vehicle was behind us, escorting Cindy and me back to our County, seeing as they were from our County, too. As we drove, Cindy took out her anti-bugging device and turned it on.\n\n\"What did you think of that, Crowbar 2?\" I asked, knowing she wanted to talk.\n\n\"Lots of what you like to call 'strangenesses'.\" said Cindy. \"I know the SBI is trying to muscle in on locals. I don't understand that, as they are going to alienate a lot of people in both political parties and cost Lewis the election. But this one, I really don't understand. Either they got bad intel, or something is going on that does not pass the smell test.\"\n\n\"I totally agree.\" I said. \"What did you think... of that farm property?\"\n\n\"Abandoned... nothing there...\" Cindy said. Then it struck her. \"Oh... it's like Point Hollow. You think there was a drug ring there?\"\n\n\"They may find something, but likely they won't.\" I said. \"It looked more to me like---\"\n\n*BRING!* *BRING!* *BRING!*\n\nIt was Cindy's personal cellphone. She had to turn off the bug-killer so that the phone would transmit, and she did as she answered the phone. \"Oh, hi Tommy... yes... oh really?... yes, I'll be sure to tell Commander Troy... okay, you too... yes, tell my father hello for me... bye.\"\n\nShe turned to me. \"That was Tommy, my father's assistant at The Vision.\" she said. \"There is a road that runs near The Vision's southern property line. Just a two-lane farm road, but asphalt-paved and in good condition. Bells Ferry Road.\"\n\n\"Ah, yes, I know it.\" I said. \"Runs into Rivers County and to the State Line, over the bridge that goes over the river there.\"\n\n\"Yep.\" said Cindy. \"The Vision monitors the road, as my father is a cautious man...\"\n\n\"I'd say 'paranoid',\" I joked, \"except that, like Chief Griswold says, 'it ain't paranoia if they really are out to get you.\"\n\n\"Like uncle, like nephew.\" Cindy retorted neatly. \"Anyway, Tommy said that two 18-wheeler big-rig trucks were going down that road at a pretty fast rate of speed, and my father wanted you and me to know.\"\n\n\"Hmm, interesting.\" I said. \"What do you make of that?\"\n\n\"If we were close enough,\" Cindy said, \"I'd say we should go after them.\"\n\n\"Well, we're not close enough.\" I said. \"But why would you go after them?\"\n\n\"I think they're gun-smuggling trucks.\" Cindy said. \"And they're too scared to go into the Iron Crowbar's home County. They're working their way around.\"\n\n\"I'd say you're right about the trucks.\" I replied. \"But their fear is not of me... it's the guy who might waylay those trucks, kill the drivers and anyone else on the trucks, then steal the guns. The Consultant would love a haul like that.\"\n\n\"Except he can attack them anywhere.\" Cindy said. \"You are bound to your jurisdiction, and they are avoiding that jurisdiction.\"\n\n\"True.\" I said. \"Yet someone felt the need to take us out of our jurisdiction tonight, out of the way... and we're just not quite in time to go after those trucks as they pass by your father's place...\"\n\nCindy turned to me with a gasp. \"You mean... this whole SBI thing... was just to get us out of the way?\"\n\n\"I think that's some of it.\" I said. \"I figured this was a distraction when I first got the call.\"\n\n\"That's a large conspiracy, lots of people involved.\" Cindy said.\n\n\"Not really.\" I said. \"Just needs a few high-level leaders to send in the SBI, then to call you and me into it. Most of those involved, maybe even Ferrell, have no idea of the big picture.\"\n\n\"So why did you take the bait?\" Cindy asked.\n\n\"Well,\" I said, \"I thought I might get an opportunity to beat Ferrell's head in. But they sent State Troopers to keep us separated. And I wanted to see that crime scene, too.\"\n\n\"And let the gun-runners go.\" Cindy said.\n\n\"Let me just ask you this, mon ami.\" I said. \"Whose side do you think the gun-runners are on?\"\n\nThat silenced my cousin and partner until we were at my home, the Mountain Nest, having a very late night snack with Laura and the redoubtable Bowser and Buddy, followed by Cindy staying the night in the guest room...\n\nPart 11 - Honor Roll \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded MILF reporterette from in front of Police Headquarters at 7:00am, Monday, May 2d. \"Channel Two News has learned that the FBI has found three of the four remaining missing students!\n\n\"Although details are sketchy, at some point this weekend Jason Stone, Natalie Jenkins, and Jeff Slake were found, all alive, between the towns of Rome and Apple Grove, a couple of States over from here. They were taken to a local hospital in Rome, where they are recovering. Danny Cantrell is still missing, and the FBI continues to search for him.\"\n\n\"And in local news, the Public Service Department's various branches will be honoring and promoting their personnel today.\" Bettina continued. \"Channel Two News has learned that Lieutenant Tanya Perlman will be given a special honor as her formal medical retirement from the Town & County Police Department takes place...\"\n\n* * * * * * * * * * * * * * * *\n\nCindy was looking at me as the newscast continued. \"Don... are you all right?\"\n\nWe were sitting in my office instead of in MCD, and we were in our formal uniforms. And I was one pissed off Police Commander.\n\n\"No, I am not all right.\" I said. \"The FBI found those three on Saturday. No one, including anyone on Jack Muscone's team, has said one word to me about it. Considering that these students were last seen in this County and were found in my boyhood home county, I am really failing to understand the lack of communication.\"\n\n\"Did you talk to Agent Muscone about it?\" Cindy asked.\n\n\"I tried calling him all day yesterday.\" I said. \"Not one call was answered; all went to voicemail, and I have yet to hear back from him. I called Clark Webster, who didn't return my call but texted me that he'd get back to me as soon as possible... which seems to not have been any time up to right now.\"\n\n\"Well, Martin is here for his last day, and Sandra will be at the ceremonies.\" Cindy said. \"Why don't you ask them about it?\"\n\nI exhaled, a sigh of release. \"I don't need to ask them. But I won't be forgetting this. Anyway, Tanya will be here soon, and I don't want to be pissed off on her last day. It's going to be special.\"\n\n\"That's right. It is.\" said Commander Della Harlow as she came into my office after knocking on the door. \"Would you like to see the medal?\"\n\n\"Sure.\" I said. After the merger, the Council had set up all the medals. The Star of Gallantry was like a Bronze Star, and expected to be one of the highest awards. But above it was the Sheriff's Medal, Police Medal, Fire Medal, etc. Above that was the Distinguished Service Medal, Distinguished Fire and Police Crosses, and the Medal of Valor on top. \n\nThe Fire Department put a medal between the Distinguished Service Medal and the Fire Medal, called the Conspicuous Service Medal. After complaints from the rest of the Public Safety branches, particularly the Police Force, a new medal was created. \n\nDella opened the box, showing us the medal formally called the Public Safety Legion of Excellence. The drape was a red field with gray edges (denoting Public Safety Department) and thin white lines between the gray and red, then a gray stripe bordered in white down the middle. The medal beneath looked a lot like the Medal of Valor, like our badges but upside down, but did not have the enameled green of the wreath and gold wreath of the middle circle; it was more plain and unadorned but for the Great Seal of the Town & County Public Safety Department.\n\nThe Legion of Excellence had never been awarded. The Council had balked at awarding Lt. Perlman the Distinguished Service Award, and one angry Police Commander had railed that the Police Medal or Sheriff's Medal was not enough. But it was when Chief Griswold (literally) took my crowbar out of my hands and went into the Council's private meeting that something got accomplished...\n\n* * * * * * * * * * * * * * * *\n\nThe applause was long and loud when Lt. Perlman wheeled herself into MCD at 7:45am. She had been to Headquarters before, and cleaned out her office... saying 'good riddance' when she left that all-too-small space for the last time.\n\nNow she was being served coffee and doughnuts as everyone chatted about the upcoming ceremonies and how baby Pete was doing. There would be gifts and cakes later on.\n\nAs the 8:30am time neared, Tanya said \"Before we go out, I just want to say one thing to Lt. Masters.\" She turned to face him and said \"These are great people, 'Coldiron'. You're lucky to have them working for you, and I know they'll be even better with you teaching them. Just take care of them for me, okay?\"\n\n\"You know I will.\" said 'Coldiron' solemnly. \"And I have you to thank for making them into the great Detectives they are.\"\n\n\"And to all of you guys,\" Tanya said, trying to not get emotional, \"you really have been a Dream Team for any Police leader to have. I know you'll give Lt. Masters your best, just as you've given me. Keep on keepin' on, and keep the frickin' Iron Crowbar out of trouble, okay?\" The room burst into cheering at that one as I laughed out loud...\n\n* * * * * * * * * * * * * * * *\n\nThe medals portion of the ceremonies was not too long. Martin Nash received a Public Service Achievement Medal from the Sheriff. Lt. Masters was not actually being promoted, so his Police Commendation Medal was the way to recognize his service as leader of the Uniformed Officers. They gave him a strong ovation as Chief Moynahan announced his position change.\n\nAnd after a number of Certificates of Achievements and some Achievement Medals, Detective Joanne Cummings Warner was brought up. First, she was awarded a Public Service Commendation Medal by Sheriff Allgood. The Council again had balked at a full Star of Gallantry, and the Sheriff had gotten 'miffed'. He could unilaterally upgrade a Police Commendation Medal to a Public Service one, and he did so to spite the Council.",
        "And then came the medal I least like to give out: the Purple Order. Not because it's undeserved; quite the opposite. But it means someone got hurt, or killed, in the line of duty. I draped the purple-and-silver ribbon around Joanne's neck, the enameled Purple star and wreath hanging from it. She was loudly applauded.\n\nLast, but certainly not least, was Lieutenant Perlman. I draped a Purple Order around her neck. The Council had fought bitterly about this award, some saying her wounds were not in the line of duty. Then John Colby went off on them, saying she'd wrapped a baby in her armor vest, then faced and shot at the perps who invaded her home, and if that wasn't a Police action, what was? And then the discussion ended... when Chief Griswold reminded the Council that he would be giving me back my crowbar within moments...\n\nAfter the Purple Order award, Chief Moynahan read the proclamation as I pinned the Legion of Excellence Medal on Tanya's jacket, the first awarding of this medal in Town & County history.\n\nAs Tanya wheeled herself back into the group of officers in the bleachers, I scanned the crowd. If Jack Muscone was here, he was hiding himself very well.\n\n* * * * * * * * * * * * * * * *\n\nThe promotions were the big items of the day. There were a couple of promotions to Sergeant among the Uniformed officers, and a few pay grade increases, as this was the 'supplemental' awards, not the big ones of February 1st and August 1st. Then came the 'surprise' announcements.\n\nFirst was the promotion to full Captain of Susan Weston, as she filled the role of Captain of Administration. Cmdr. Della Harlow had pushed for her. Cindy had grumbled to me about it, and I wasn't exactly thrilled about it. But, as I told Cindy, it was Della's choice to make, really. I reminded Cindy how I had pushed to make someone a Police Captain, and I could hardly refuse Harlow's action. Besides, Weston was a good administrator. And she'd be out of my hair as she'd no longer be a Precinct Captain.\n\nI noticed the applause was particularly loud from the Third Precinct Officers, and I wondered if they were truly happy for their former leader... or if this was applause that she was gone and now reassigned.\n\nAnd speaking of that now-open Third Precinct Captain slot, there had been a number of people that had emailed to the Chief, Cmdr. Harlow, and myself their interest in the position. Lt. Scott Peterson, the Public Relations Officer, had applied, even though he was in a full Captain's position now. Several Sergeants applied, though it'd be a leap for one of them to get it.\n\nTeresa Croyle had been offered the position, but to no one's surprise (and to Cindy Ross's great relief) she turned it down flat. And then Chief Moynahan came up with a good idea:\n\n\"We're going to punt, Mr. Crowbar.\" he had said. \"We're going to kick the can down the road, and give a deserving Policeman a promotion.\" And so Sergeant Bob 'Brick' Briscoe, from the 'Disappearing Act' case, who had been talking retirement, was promoted to Lieutenant and then brevetted a Precinct Captain. He was going to retire at the end of they year, so this would be a 'holding pattern' until we developed some talented people to take the role.\n\nThe Union had agreed to not file a grievance, as there had been an agreement to not brevet to the PCpt. position, but the Chief and I said that Briscoe would be able to retire a legitimate PCpt. or even a full Captain. And we would honor that agreement months later.\n\nI did notice as the announcement was made, and the Chief and Briscoe's wife pinned his gold Precinct Captain bars on his shoulders, that Lt. Peterson looked very unhappy at this turn of events...\n\n* * * * * * * * * * * * * * * *\n\nI'd asked Tanya where Jack Muscone was. She said he was out of Town, and had asked Sandra to come in his place, especially as it was also Martin's last day.\n\nThe farewell party was in MCD, complete with both serious and gag gifts for Tanya and Martin. She and Martin both got framed pictures of the MCD group taken on the last Orange Order Day. Many of the Crime Lab people also came by to send Tanya off.\n\nAnd then... it was that time. Chief Moynahan came to the door and asked if Tanya and Martin would step into his office for a moment.\n\nOnce inside, Chief Moynahan said \"I haven't been here very long, but I have been here long enough to say that I have enjoyed working with both of you, and I'm honored to have worked with you. I know you will do very well in your new jobs, and if you ever need some friends to shoot the bull with, feel free to drop in on us any time.\"\n\nThey thanked the Chief, then Tanya said \"Where is Commander Troy? Or has he got something up his sleeve?\"\n\n\"The party never stops with the Iron Crowbar in the House.\" said the Chief.\n\n\"If I did nothing else here,\" Tanya said with that cherubic grin of hers, \"at least I have the honor of knowing I was the one that named him that.\"\n\n\"Heh heh heh heh.\" laughed the Chief. \"Yes, I heard you were the one that started all the trouble. Okay, Martin, would you mind driving Tanya to the Duty Desk, where you'll both be signing out for the last time?\"\n\n\"Yes sir. I'd be glad to.\" said Martin.\n\n\"I'll get the door.\" said Moynahan. He got up, shook hands with Nash, gave Tanya a warm hug, then opened the door. Tanya gasped when she saw it.\n\nThere was a double line of people, a gauntlet much like the one that had formed to honor Chief Griswold on his last walk out of the building. This one led the long way around the building, as many more officers were inside (some had been in the parking lot for Griswold's exit). \n\nAs Nash pushed Tanya into the line, another difference became apparent: instead of being at attention or being formal, everyone reached out to shake Tanya's hands or pat her on the shoulder as she went by. She returned all the well wishes, shook or held hands, trying not to cry too much. That ended when Christina Cho, in a rare show of emotion, bent over and hugged Tanya, a hug that lasted a moment as both women shed tears.\n\nFinally, as the cordon wound around the halls to the front Duty Desk, Tanya finally saw him. The Iron Crowbar himself had taken the Duty Desk Station, to personally sign her out.\n\nFirst Martin Nash came up. He handed me his TCPD badge and signed out on the sheet on the clipboard. I then held up an FBI badge, which most didn't know was already Martin's, and that I had picked his pocket to acquire. I handed it to him and shook his hand. The Police Officers in the lobby, including Sergeant Rudistan and his team, and Chief Griswold at the front door, applauded, and shook his hand as he left. Martin went ahead and left the building, waiting outside for Tanya.\n\nThen came one of the hardest moments of my life. Tanya wheeled up and signed out on the sheet. Then she took her TCPD badge off her uniform jacket and placed it in my hand... pressing it into my hand with both of hers as our eyes locked. I fully understood. Then she handed me her gun. I handed her her 'Retired' badge in its plastic sleeve, then handed her back her gun... pressing it into her hand with both of mine, our eyes locked. She fully understood.\n\n\"Good luck and Godspeed, Lieutenant.\" I said, then raised my hand to my eyebrow in a formal salute. Tanya returned the salute in the utter silence of the hallway, and I could see she was trying to not break down. I was having to work at it, also.\n\n\"I'll be back, Iron Crowbar.\" she whispered. Then she wheeled towards the front door, hugging other Officers along the way. At the door, Chief Griswold gave her a hug, then escorted her out to the parking lot.\n\nPart 12 - Puzzle Pieces \n\nEarly in the afternoon of Monday May 2d, I finally got my first reports about the three found students. Detective Teddy Parker greatly impressed me by digging out the information. I did not ask for his sources. Cindy was in my office, listening in as Parker gave his report:\n\n\"The three of them, Slake, Jenkins, and Stone, were found in your boyhood county, near the town of Rome on the north-south highway. They were found by the side of the road that leads towards Apple Grove. Tests showed them to have drugs in their system similar to Reynolds and Kim. Hallucinogenic drugs. They don't remember anything. They all were dehydrated, but must've had some water and food at some time because they were in relatively okay condition. Jenkins was sexually assaulted several times, but apparently not as violently as Kim was.\"\n\n\"And that reminds me, sir.\" continued Parker. \"Annemarie Reynolds had a good bit of the hallucinogens in her system, like the other three recently found. But Kim had less in her system. Significantly less.\"\n\n\"Have you had any chance to talk to those girls in University Hospital?\" I asked.\n\n\"No sir.\" said Parker. \"Dr. Fredricson, your wife of course, has been very helpful to us. Annemarie was able to talk with us a bit. She said she was having sex with Stone in the Hollow. She remembered having an orgasm, then hearing a sound like a scream... and then she doesn't remember anything else from that point on until she woke up in the Hospital. Kim... every time they wake her up, she goes into hysterics. Dr. Fredricson thinks she remembers a lot more than Reynolds, because she had less drugs in her system.\"\n\n\"That's good work, Parker.\" I said. \"Really good work gathering this information. Let me ask this: have you talked more with friends of these six people?\"\n\n\"Theo and I talked with as many as we could find.\" Parker said. \"And while I'm not saying anyone was uncooperative, no one had very much to tell us, or had much they were willing to tell. Jason Stone was popular, a BMOC. Annemarie Reynolds was hot and she knew it, but nobody hated her that we could find. Natalie Jenkins was one of those with friends due to her politics. She and Councilwoman Malinda Adams are or would be very good friends if they met.\"\n\n\"I understand.\" I said. Cindy was nodding. \"What were her political causes?\" I asked.\n\n\"Women's rights.\" said Parker. \"But that's the standard clich\u00e9 these days. She was more into LGBT issues, but lately had begun organizing a movement to legalize marijuana in this State.\"\n\n\"Do tell.\" I said. \"Okay, keep going with the rest of the students.\"\n\nParker continued: \"Slake was the kind of guy that girls thought was a bit perverted, but he didn't get into fights or anything, and nobody said anything bad about him. Sherry Kim was close to the Asian exchange students. The Asian girls tend to form groups, mostly to keep guys off them. They can be hard to penetrate--- er, that might not be the right word, sir.\"\n\nI laughed, and Cindy suppressed a snicker as I said \"That was a good pun, though, Parker. Keep up that sense of humor. So... what about Cantrell?\"\n\n\"He's... well, he's the outcast, the loner type. Has no real friends. Would hang around with the computer programmers, but they didn't care for him, took no notice of him. Neither did the chemistry majors. He's... sir, this may not be a fair comparison, but he reminds me of that Jimmy Tolson guy from that disappearing couple case... everyone hated him, didn't want him around or ignored him.\"\n\n\"It's a fair comparison.\" I said. \"Remembering someone or something from the past could well be a clue to a current or future case. That's why I suggest to you guys to read old cases and keep up with our current ones. Nothing new under the sun, Mr. Parker.\"\n\n\"Yes sir.\" said Parker. \"Anyway, he was always trying to find ways to be noticed. He'd try to play the intellectual, the know-it-all, and of course even I know that turns off women faster than a loud fart. He tried all he could to get Sherry to like him: flowers, took her to dinner, even changed his major to be with her more. Her friends said, as they did before, that she basically tolerated him, let him buy her dinners for the free food, and she studied with him some. But she didn't let him so much as kiss her.\"\n\n\"How did these six people like each other?\" I asked.\n\n\"Seemingly well, sir. For the most part, anyway.\" said Parker, perhaps surprised at my question. \"Stone and Reynolds were dating, or at least having sex regularly. Jenkins and Slake may have been dating, and we know Cantrell has a crush on Kim. Jenkins may have been Reynolds's 'wingman', or 'wing-woman' I should say, on social occasions, and of course they're both interested in marijuana legalization. Other than that, this was a group sort of put together by circumstances... that being the sample collecting.\"\n\n\"Good, very good.\" I said. \"That is a very important question to answer in order to solve this case, by the way. So... Parker: based upon the data you have now... what do you think happened out there?\" Parker paused, and I said \"No wrong answers here, Teddy. Just let your mind work. Think out loud.\"\n\n\"Yes sir.\" said Parker. \"I... well, based on that drug lab you and the FBI found, it looks to me like these guys came across a drug gang. They were kidnapped, taken up to that cabin, and at least some of the girls were raped while Danny Cantrell was beaten up. The others were then taken away by vehicle, then eventually let go. Not sure why, but that's what it looks like.\"\n\n\"Not bad.\" I said. \"Captain, care to take a shot?\"\n\n\"On the face of it,\" Cindy said, \"it looks like what Teddy said: drug gang kidnapped them, drugged them, took them away. I would make this guess, though: knowing Danny's crush on Sherry Kim, and his wanting to be the guy in the spotlight, he might have tried to play hero and tried to save her from the perps, telling them to leave her alone and such stuff. So they beat the shit out of him, and they made him watch as they raped her as brutally as they could, for his viewing benefit as much as anything else.\"\n\n\"I like that theory.\" I said. \"It would fit why his blood and vomit are at that scene, and why Sherry was injured more than Annemarie. May even explain the lack of drugs: they wanted him to know she was feeling more pain.\"\n\n\"I'm not sure the two women were raped right at the same time.\" said Cindy. \"Annemarie's ordeal could've come later, or with other perps.\"\n\n\"DNA will tell us that.\" I said.\n\n\"There's still a ton of questions, though.\" Cindy said. \"How did the perps get them to that cabin? Did our students walk up that way and were captured up there? If they did, then how were the other students taken out of there? I dunno, some of this stuff doesn't make a lot of sense.\"\n\n\"Well, let's come back to the first squares, to the basics.\" I said. \"Here are the questions I would ask, and you guys can work on answering them for me while I work on another matter.\"\n\nI started: \"I've asked this before, and the answer is imperative: what were the arrangements to pick up these six people and bring them back to the University Campus? There had to be something... they couldn't just take those samples and not bring them in.\"\n\nI continued: \"And as I said, I would also really like to know why these six people were on this trip. There are some connections, but I'm not really seeing this particular group as a group. And I'm not understanding the tent arrangements, either. So... who put this little party together, and for what reason.. besides sample collecting?\"\n\nI went on: \"I'd really like to know more of what happened during their time out there. All of their cellphone were found at the camp. If we get a chance to talk to the recently found students, we might get more information. I really want to see the picture on the jigsaw puzzle box... then we can start putting the actual jigsaw together---\"\n\n*BRING!* *BRING!* *BRING!*\n\nIt was my Police cellphone. I answered it, took the message, then said \"Yes sir, I'll be right over.\" Hanging up, I said \"That was Campus Police Commissioner Dexter Robinson. He'd like for you and I, Captain, to go see him...\"\n\n* * * * * * * * * * * * * * * *\n\n\"It's been way too long since I've seen you, young man.\" said Campus Police Commissioner and Provost Marshal Dexter Robinson as Cindy and I came into his office. \"You too, young lady.\"\n\n\"I hope you're doing well, Commissioner. I said as we both shook hands with Robinson before we all sat down.\n\n\"Oh, it's not too bad these days.\" said Robinson. \"Kids are too scared of the Iron Crowbar across the street there, to get into any real trouble, these days. We may be the only University in this country that can say that, too.\"\n\n\"So how can we help you, sir?\" I asked. \"Is it the missing students' case?\"\n\n\"No, no,\" said Robinson, \"that's clearing up a bit. They've found five of the six, and alive. The three that were found a couple of States over are going to be transferred to University Hospital here in the next day or two. We'll be sure to let you know, so you can interview them.\"\n\n\"I appreciate that.\" I said.\n\n\"What I called you about,\" said Robinson, \"is that I've got a couple of friends of yours that wanted to meet with you and talk with you... without really being seen or arousing suspicion. Ostensibly, my daughter is visiting me, her father.\" With that, a side door opened, and in walked City Police Detective Robin Ventura, Robinson's daughter, and her partner Detective Thomas 'Sapper' Warren.\n\nWe all shook hands and then sat down around the table that was in the office. The Commissioner excused himself, leaving us to talk. Per a previous conversation with Cindy, it was my bug-killer in operation for this one.\n\n\"We wanted to share some stuff with you about that SBI raid into the City.\" said Ventura. \"We're starting to find out that there was a lot more going on that originally met the eye.\"\n\n\"We're treating this as a crime by the SBI.\" said Warren. \"The judges have given us every warrant we could possibly want, and then some. They want to stick it to the SBI as badly as we do.\"\n\n\"So we're not the only ones with bad blood with the SBI.\" I said, somewhat whimsically.\n\n\"No sir, you are not.\" Robin Ventura said emphatically. \"Especially Sapper and I... as we're both black.\" That got my ears perked up and my eyebrows raised.\n\n\"We can talk about that later. Here's the story of that raid.\" said Ventura. \"You know Agent Sharples, formerly of your own Police Force. He got a couple of black guys, 'Chubby' and 'Skinnydip', to make a drug buy from the 8th Street Gang, which is mostly Latino. He'd promised them immunity, would get them off some petty charges that Skinnydip was being charged with, and such.\"\n\n\"So they made the buy, and in comes the SBI... in tremendous force.\" Ventura continued. \"They arrested the 8th Street Gang, but also arrested the two black guys, who really are no more than vermin on the streets. Set them up all the way, it looks like.\" \n\n\"He's done things like that before.\" I said, of Sharples. \"What's new and different here?\"\n\n\"Not much, really.\" said Ventura. \"Except the SBI's Narcotics Task Force Director, Dick Ferrell, was actually on the scene. He personally outed our mole in the 8th Street Gang. We've lost a good man and a huge asset, but at least he's alive and okay. We've gotten his family in Witness Protection. He's no longer in this State or any State touching ours.\"\n\n\"Good.\" I said. \"That really was a dirty thing to do.\"\n\n\"And since the SBI raid was illegal,\" said 'Sapper' Warren, \"the 8th Street guys are fighting the charges, and are being released at their arraignments. If the SBI had let it be a joint operation, they'd be in jail awaiting trial, but it was all for nothing. So it's a damn good thing we got Vasco out of the State.\"\n\n\"No doubt.\" I said.\n\n\"Here's where it gets good, I.C.\" said 'Sapper' Warren. \"First, since you busted Captain Wexler, our Drug Units have had some good successes. They were able to slip moles into several gangs as Wexler's favorites suddenly found they had competition. Gangs were bidding up for good members, like a hiring spree, if you know what I mean. Some of those are still in place, some we've taken out as a precaution.\"",
        "\"Okay, that's good.\" I said. \"Now... why don't you tell Captain Ross about what you've learned about the SBI operation in Hamilton County.\" The two City Police Detectives just looked at each other, then back at me.\n\n\"Damn, you can read minds, I.C.\" whispered Sapper.\n\n\"Naw, Captain Ross is the psychic one.\" I said, teasing my partner. \"I've been researching all of this myself, and came across your guys looking into it. We're on the same paths. So what did you guys come up with?\"\n\nRobin Ventura said \"That SBI operation in Hamilton County was one of the strangest ones ever seen. They were putting out a story they were chasing a gang, but they turned up with one single low-life... kind of like our black guys in this 8th Street bust. Not a single one of the local LEOs saw this guy alive at the farmhouse. Not one. They saw him at the truck stop, chased his car there, and then none of them saw him until his dead body is found.\"\n\n\"And guess who was right there... Agent Sharples.\" I replied.\n\n\"You got it, sir.\" said Ventura. \"But there's even more to it. There is absolutely no SBI communications about this. They're bad about putting stuff into emails that can be hacked, but on this occasion, there was nothing at all. We have some, shall we say, 'friends' close to the top SBI leadership, and we got word that SBI Director Lewis did not even know about that NTF raid into the City ahead of time, nor did he know about the Hamilton County raid. It's all Ferrell.\"\n\n\"What about Gaston?\" I asked. \"Or Conlan?\"\n\n\"Conlan is kept so far out of the loop that he's in danger of not being called a planet anymore.\" said Robin, making an astronomy joke. \"Lewis is looking for ways to get him fired. Gaston is as corrupt as Lewis, but our friends don't think he knew about these last two raids.\"\n\n\"This is great stuff, guys.\" I said. \"I shall find ways to pay you back.\"\n\n\"Sir, this is just part payment for you busting Wexler.\" said Sapper. \"We still got a long way to go to make that slate clean.\"\n\n\"All part of good cooperation between honest law enforcement agencies, my friends.\" I said. \"But do me one favor... get your 'friends' to check and see if there is any danger to SBI Inspector Britt Maxwell. If something 'wet' happens to her... that would be bad.\"\n\n* * * * * * * * * * * * * * * *\n\nIt was late afternoon, almost evening, as I came up to Cemetery Hill. A small contingent of Police Honor Guardsmen carried the casket with the mortal remains of Scrawny Haskins to his final resting place in the Indigent section of the cemetery. There was only one other attendee... Dirty Lennie, Scrawny's cousin.\n\n\"My condolences, Lennie.\" I said as I came up to him.\n\n\"I appreciate you doing this for Scrawny.\" said Lennie. \"I don't understand why, but I'll say thank you on behalf of his dead mother.\"\n\n\"He was murdered in cold blood.\" I said. \"He did not deserve what he got. And Lennie... if you want to thank me, and maybe save your own life... I need your help with something...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "crime drama",
        "police drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/point-hollow-ch-02"
}