{
    "title": "Born to Be Ch. 05",
    "pages": [
        "A.N. Back for some black on white! :D  \n\nIf you want more stories by me look at my profile! All you need to know is there :) \n\nJUST A FUN FACT also, this is not the final chapter, not at aaaaaaaaaaaaall, there's maaaaaany more to come. You'll see why I say that at the end lol, just again letting you know ahead of time, no reason to worry.  \n\nThe Following Contains: Tall strong black lady making a little white boy her bitch. x3 crossdressing femboy and pegging. Still one of my only futa-less stories. \n\nEnjoy it! :) \n\n***** \n\nSelena really knew how to kick Ashley's booty into gear when it came down to it. Only a few days ago had he come home with an ensemble of girly outfits to start trying on around Selena, and already she had him preparing to wear them in the outside world while they went on a date. \n\nThe boy stood now, in the cute underwear he had chosen for this evening, a nice white bra which accentuated his flat chest and gave him the appearance of having tiny A-cup titties under his shirt. And a matching white thong, snugly enclosed around his crotch keeping his boyhood as small as possible and cradling his boy pussy so tenderly. \n\nBut the underwear was easy to decide on. It was something only Selena would see so he only had to worry about impressing her. And she did love him in a nice tight thong, so he felt that he was covered in that department. \n\nOnly when it came to deciding on the outfit he'd wear that all eyes would be seeing this evening. That's when he had a little more trouble. It was a Friday night dinner date with Selena, Vanessa, and a few other of her friends from work. Mainly to get him out there so that he could start meeting new people. He'd been in the city for about a week now and hadn't really gotten to know anyone aside from his girlfriend and his co-worker. \n\nSo this was not particularly a romantic evening with just the two of them, but it wasn't exactly a casual gathering either. The place they were going to was a four-star restaurant with fine table service, open bar and dancing. So it could be considered as formal, but did he really want to break out a high class dress and appear overdressed for something that was supposed to be casual? \n\nHe huffed, blowing a lock of brown hair up over his forehead, it grew a little bit longer every day. Something Selena constantly reminded him about, and how much she loved it. She kept tugging on it whenever they had a quiet moment just to sit down between them. It drove Ashley insane, but he also liked it. Quite a bit actually, especially the teasing about how she couldn't wait for her handle bars to fully grow... \n\nAshley shivered a bit at the thought and focused up. He laid his possible choices for his evening attire out in front of him. Ranging from flirty, to sexy, to classy, and stood over the three outfits with his hands on his hips. Contemplating each with a bare foot tapping on the floor. \n\nThere were so many things that he had to factor in to what he would wear, just on how much he wanted to impress Selena with how comfortable he could be in these outfits now that he'd been wearing them for several days now. Even if that wasn't entirely true...But! He also didn't want to upstage any of her friends by trying to look all sexy and flirty! \n\nAnd God help him if somehow, they discovered he wasn't actually a girl... \n\n\"Urrrrg...\" Ashley groaned bringing a finger under his chin. \"Do I do a skirt? Or...the strapless? No! Nonono, I don't wanna look like a hooker!\" Ashley's dilemma resumed, he had one outfit consisting of a cute top with a waist high pinkish-cream colored skirt, another was a long strapless blue dress that glittered a bit around the breast area. And the final outfit was a tank top and jeans...classy. \"Gosh how to girls do this?\" Before he never worried about outfits, never, of course he made sure he looked good, but now...it was like every outfit while cute in its own right...had some type of drawback to it. Some...thing! That made him shake his head and throw it aside. \n\nMaybe he had gotten too many girly outfits, now he couldn't decide which one to wear and it was driving him crazy! \n\nIt was just dinner after all, and nothing extremely fancy. Just a cozy little place with some friends, maybe a little dancing and an evening together to wind down in. Why was he panicking so much over this? \n\n\"Okay...come on Ashley...be a man and-...err...I mean...ugh...\" He groaned, \"What has my life become?\" He asked no one in particular as he spun around and threw himself dramatically onto the bed. His light body bounced a little from the soft mattress and he stared up into the ceiling. You think having been dressing all girly like for the past several days would have better prepared him for this, but you'd be wrong. \n\nHis confidence had definitely grown a bit, the more he wore them, the more comfortable they became, both literally and figuratively. Girls had some really comfy things to wear, but too many options apparently. \n\nAshley's head turned to look at one of the options at his side, the strapless dress, then turned his head to look the other direction, the flirty shirt and skirt combo. The jeans and tank top was something he only considered in a last minute act of desperation, he didn't actually plan on wearing them, so he laid on them for now. \n\nEven so, the split decision he had to make was more than enough. As much as he tried to talk it down, this evening was very important. Aside from the yoga clothes outing, he had made very few public appearances deliberately posing as a girl. This was pretty much a make or break moment for this...fetish, he and Selena had. \n\nIt either worked and he could pose as a female with the rest of the world being none the wiser, or he'd blow it and feel an insurmountable amount of humiliation. \n\nSo his mind drifted to the safer of the two options, the shirt and skirt. If he was caught, with the skirt at least he could take it off and pass the thong off as a speedo. It was a long shot, but at least if the jig was up, he had hope of recovering. If he wore the dress though, it was all one piece, there was no escaping from that. \n\nHe shrugged a shoulder, it was a lame way to finally make a decision, but it was better than not making a decision at all. Plus, since this wasn't a one on one date, perhaps it was best that he dressed to impress not just his girlfriend, but the acquaintances she was bringing along. \n\nAshley sat up off the bed and spun on his heel to look between the outfits again, \"Sorry strapless, but maybe another time.\" He picked up the garment, along with the casual attire and returned them to the space Selena had cleared for him in the closet. \n\nHis furniture had still not arrived yet at his apartment, and all his essential belongings had been retrieved from there and brought here while he and Selena bunked together. Although the promise from his moving company that his furniture was on the way did little to deter Selena from constantly teasing Ashley about just moving in with her forever and ever and ever. \n\nHe actually rolled his eyes as he hung the clothes back up, she could be so silly sometimes. Although...to be truthful, these last few days of living together had been amazing. They didn't bicker over anything, the cuddles at night were sooooo comfy to fall asleep to. They both loved the same kind of movies and shows on tv, and they worked together now so they could car pool easily. \n\nMore than once, Ashley actually contemplated taking her up on that offer... \n\nBut no, he steeled his resolve for now, he had yet to prove to the world that he could be fine on his own. And if not to the world, to prove it to himself! That's what his move was for, to show he could be his own person, self-sustaining, and didn't need anyone to rely on. \n\nOnly that motivation was drifting further and further from his mind with every passing moment he spent with Selena. His hands trailed down the smooth, silky material of the dress as he thought about it, she was so good to him. She provided everything for him, she cared for him, so pretty, so strong, so protecting... \n\nAnd how could he forget...the sex was fucking AMAZING. \n\nIf you had told Ashley a month ago that he would have some of the greatest orgasms in his life via only anal stimulation, he would have looked at you like you had a thousand heads and laughed. But it was the truth, anal sex was so good...soooo gooooood... \n\nHe shook his head, bringing himself out of his day dream about Selena's BBC and exited the closet. The date was in less than an hour, so if he wanted to be ready for it, he needed to get dressed now. \n\nMeanwhile Selena paced steadily back and forth downstairs, jingling her keys between her hands as she impatiently waited for Ashley to get ready to go. She forgot that making Ashley into her girlfriend would come with the drawbacks of girly tendencies. Namely, taking freaking forever to get ready. \n\nThis almost made Selena chuckle, but she also felt a nice swell of pride, and happiness in her heart at the thought of it. \n\nHer and Ashley had come so far in such a short time, further than she had ever gotten with any of her previous exes. Maybe that's why she liked Ashley so much, he responded to her in ways that no other boy had. Whenever she revealed her hand about what she wanted when it came to the bedroom, her previous suitors had cut and run. Almost all of them actually...one or two stayed for the strap-on aspect for a while, but were never willing to go beyond that for her. None of them seeming to understand that it was something that she needed. It's just who she was, IS. She didn't want a girlfriend who was a girl...she wanted a boyfriend who liked to dress up as a girlfriend. \n\nAnd contrary to what you may find on the internet, it's actually much harder to find someone who liked that kind of stuff in actuality. The fit ebony woman had her fair share of heartbreaks with men who weren't able to fulfill her desires, even when she was willing to forgo them for as long as they needed. So many guys just didn't even want to try for her. \n\nFor a long time Selena thought she may actually be alone. Not just for a short time but for the long run, she thought it might just be the way her life goes. Her dream fantasy of having a boy who liked to act like a girl, take it up the butt, and play wifey for her may only be that. Just a fantasy. \n\nPeople probably would've called her crazy, Hell even Vanessa called her crazy. She was a freaking BABE! Tall, long legs, nice feminine muscles, epic tits and an ass you could suffocate in with a smile on your face. She could've had anyone right? \n\nWrong...very wrong. \n\nVanilla relationships just...didn't work. It always felt like something was missing with Selena, like she had fun in some of them, but she knew she would never be all in with any of her previous boyfriends. It was just the way she worked, something in her brain wired her to be this way and for the longest time, she dreaded that it might be a curse that forced her to be single for the rest of her life. \n\nBut then...there was Ashley...he came along. \n\nThe one 'he' who seemed perfect in every way. The he who liked to be called she, who wore pretty dresses for her despite how taboo it was. Despite if it made him blush with nervousness, he did it for her. He was willing to push his limits and go beyond the comfort zone just so that Selena was happy. \n\nIt was like a gift from God had fallen right into her office the moment he first walked in. Even now as she leaned against her front door she felt butterflies in her stomach. Usually she was the one to make him swoon, but this was one of the rare times it was the other way around. When she laid eyes on him for the first time her breath was taken away, she could feel her cheeks getting warm as she thought about it. \n\nShe wanted him like mad. When he left her office she went straight home and beautified herself as best she could, breaking out the best perfume, makeup and everything. It had been so long since she had drooled over a boy like this, and it only got better when they got to the bedroom. \n\nLook how far they came, she was waiting for him to pick out his girly outfit for their date tonight. Selena's smile grew even more at the thought, technically their second date, but she still felt as floaty as she did on the first one. Ready to seduce the fuck out of the boy she was falling for... \n\nFalling for... \n\nThat thought actually gave Selena pause, so much had happened in so little time but...what Selena actually falling in L word with him? \n\nHer eyes went to the floor and she thought about it, was it too soon to think like that? Hell no! People have fallen in love at first sight before and lived happily ever after, so what was one week when it was actual love they were dealing with? \n\nBut it could be just that she was over excited about how she was finally getting what she wanted out of a boy. So her brain and heart were telling her to just lay all her cards on the table so that she didn't lose him! Then again though...what if that wasn't true? What if she did just genuinely have strong feelings for him that could be constituted as...love? \n\n\"Coming!\" Selena's head shot up out of her daze as she heard the voice of the subject of her thoughts. Immediately pushing herself off the wall and straightening herself out. Her attire consisted of sleek black slacks and a hot white top which accentuated her cleavage extremely nicely. Black high heel shoes that made her height even more intimidating than it already was. \n\nShe grabbed up her purse and called out, \"Let's go babe, girls are gonna be waiting!\" And then, she saw him. \n\nSlowly, he descended the steps, wearing his own pair of high heel shoes, only his were like sandals, with his feet showing and straps going around the ankles and between his toes. The skirt and top he ended up choosing hugging his petite body and growing longer hair framing his face beautifully as it now reached below his shoulders. \n\nHer breath hitched and all previous thoughts about her possibly not being in love were out the window. If that boy descending the steps was the subject of her affection, then damn it she was going to own it! \n\n\"Okay...I'm ready.\" Ashley pulled the skirt up around his waist a little more, nerves setting in more than he had anticipated they would as he descended the stairs. Selena had given him over an hour to get ready and the fact that about eighty-five percent of that time was choosing whether or not to wear this outfit was unspeakably embarrassing. So Ashley just decided to keep that bit to himself as his heels clicked on the wood floor. \n\nAlmost wobbling as he was still getting use to the elevated feeling and the arched position of his feet while he wore them. \n\nSelena smiled, stepping away from the door. \"Nervous honey?\" \n\n\"Well...yeah.\" He replied matter-of-factly, \"I've never gone out in public in a friggin skirt before.\" He comically slapped the sides of the fabric making it bounce up and drift back down revealing the white thong he wore beneath. Only for a split second, but that was all Selena needed to get a vivid image of what their evening was going to be like. \n\nShe sighed, \"Oh come on babyyy...\" She started with a pout and approached her 'girlfriend' for tonight. \"You look sexy, and cute, and fuckable, and everyone's gonna be jealous! Pluuuus!\" Suddenly she ducked down and swooped her arms under Ashley's tiny body. \n\n\"Whaa!\" He squealed in surprise as she suddenly swept him off his feet and picked him up bridal style. \"Selena?\" \n\n\"You've got me to take care of you.\" She grinned wickedly as she held the petite boy like a blushing bride. \"Let's go! Off to adventure!\" She chanted, practically dancing over to the door with him in her arms. Reaching down and supporting him with her forearm to turn the doorknob and exit the house. \n\nAshley groaned, \"You are absolutely insane.\" He would've squirmed, or whined about being let down. But this wasn't the first time Selena had picked him up and hauled him around like a doll. She did it both inside and outside of the bedroom to both show off how weightless he was in her strong arms, and also he figured just to show off just a teeny bit. \n\nHe could've complained but truthfully, it wasn't a bad feeling. Being lifted into someone's arms, under their protection and in their comforting grasp. Plus...he liked the idea that his weight was so little in her hold that she could easily manhandle him however she wanted and wouldn't break a sweat. \n\nIt was sexy...Ashley couldn't deny that. So rather than kick and whine and ask for freedom, he allowed his ebony Goddess to carry him like a trophy wife to the car, she even managed to open the car door and set him down inside without releasing him from this hold. After which she ran over to her side and got in the car as well, eager to drive off to the location of their planned date night! \n\nSaid location, was a nice cozy four star bar and grill. The glowing sign above the main entrance read, 'LoJo Diner.' Selena revealed that this name was actually the first initials of the owners mixed together, Louis and John. A couple married for fifty plus years and owners of the restaurant for almost the same amount of time. \n\nNo wonder it was such a nice place, it had been going strong and in the same family for literally a generation. \n\nIt was well lit by dangling glass lights in the ceiling, multiple polished wood tables and booths lined the walls and corners of the establishment along with a long ninety degree angle bar with dozens of stools to sit on in front of it. Soft music played to a steady rhythm as the couple entered and Ashley scanned about. Clinging onto Selena's hand the entire time for dear life. \n\nIn the center of the room was a shiny wooden floor that a few stragglers of people were actually dancing on currently. Not many, a couple or two and just a few other randoms enjoying the tunes. Behind the bar was a long rectangular window that you could see into which lead to the kitchen, and an array of delicious scents wafted from there of freshly cooked meats, steaming veggies, hot foods that could make a vegans mouth water. \n\nAt the entrance, the two were greeted by a hostess dressed in a simple yet sweet button up blouse with the title of the restaurant stitched over the left breast pocket. \n\nShe welcomed them with a smile, \"Hi welcome to LoJo's! Table for two?\" \n\nSelena returned the smile and approached, \"No actually, reservation for Mills please? Party of six?\" \n\nThe hostess looked down at the podium by her, and started swiping along what looked to be an integrated tablet of sorts. Meanwhile Ashley continued to do his best to just cower behind Selena, glancing about the restaurant to see how many eyes he had to deal with tonight. \n\nHe was fully gussied up! Selena and Vanessa had helped teach him some basics of makeup and the like, his nails were freshly painted, there was a little extra blush added to his cheeks along with some eyeliner to accentuate his eyelashes. And a light layer of lip gloss coated his pretty pink lips to make them shiny, he even wore the sweet perfume he got as well. Full on disguise! And tonight was the ultimate field test to see if it worked. \n\nGlancing about the restaurant, it looked as if there were maybe thirty...thirty-five people attending tonight? It was hard to get an exact head count at the rate that Ashley's brain was going. \"Okay...okay keep it cool. Act like a girl...act girly...no one will know! And I don't even recognize any of these people anyway! No one here knows me, I'm not even from this town it'll be fi-OH GOD THAT PERSON LOOKED AT ME!\" Ashley mentally panicked as he saw a man in a cowboy hat just glance by his direction. ",
        "That was all, just a passing sweep of the eyes, but it was enough for Ashley to practically dive into Selena's armpit and try to hide his face from the world. Letting out a barely audible distressed squeal as he did so. \n\nSelena didn't react to this openly, she just gave his hand a little reassuring squeeze to try and help calm him down. Not drawing any further attention to him by turning and asking him to calm down or talk him up or anything, just giving him a subtle little sign that she's here and he's okay. \n\nAshley tried to take a few breaths and relax, it was just tough to considering everything. He just needed to get through the night, that was all it took, if he could manage to make it through this one outing, then he felt like he might be able to do it again. Maybe! Just as long as everything went smoothly and nobody pointed and laughed at him when they found out he was a boy dressed as a girl... \n\nMeanwhile, Selena gave the appropriate information required to allow them to join the dinner party reservation and the hostess smiled again, \"Very well! Right this way ladies!\" She said happily. \n\n\"Ladies...\" Ashley felt his insides tremble... \n\nThe pair was then led through the greeting area and around the dance floor, Selena had a booth reserved for them and the hostess took them to the center right side of the open restaurant. \n\nIt wasn't hard to recognize the first face that hopped up with enthusiasm at the sight of the two of them. \"Hi guys!\" Vanessa stood and waved at the two, showing off her own attire. An off-white cocktail dress that was cut off at mid-thigh showing off her shapely legs and hugged her gorgeous curvy figure. She also wore a pair of high heels on her feet the matching color of her dress. \n\nThe hostess giggled and gestured to the table, \"Ehhm...well here's your table miss.\" As if it wasn't obvious enough. \n\nSelena gave her a smile and a shrug anyway, \"Thank you, and hey there you!\" You she said approaching her best friend with opened arms. Vanessa slid out of the booth and quickly closed the distance between them, opening her own arms as well and embracing the taller woman in a tight hug. \n\n\"God, gonna keep us waiting all night girl?\" The smaller Latina teased as they pulled back from each other. Planting a quick kiss on their cheeks before parting fully. \n\n\"Oh I was ready an hour ago, I was waiting on a certain someone though to decide what she wanted to wear.\" Selena did a comical head roll and allowed her eyes to fall upon the small 'girl' at her back. Still somewhat cowering behind her larger form a bit, but emerging slightly at the familiar face of Vanessa. \n\nHe gave an embarrassed half-wave, \"Hi.\" \n\nVanessa grinned, \"Oh my Gosh Ashley! You look so good!\" She said and nearly tackled the young boy in a hug. \n\n\"Ayyyee!\" He yelped in surprise from the sudden assault, but the surprise attack actually served to break down his frightened little kitten demeanor a bit. Especially since it was a pretty girl with very large breasts squishing into his chest that was the one hugging him. \"Ahehehe...it's nice to see you too Vanessa.\" He said quietly, wrapping his arms around her to return the hug. \"You look great.\" \n\nShe pulled away from him and looked Ashley up and down, inspecting the boy from head to toe in his date night attire. \"Nice choice hun, I was worried you were gonna show up in something boring. I'm glad you're learning to show off what you got.\" She winked, thankfully though since some blush was already applied to Ashley's cheeks, nobody could see the natural one that threatened to turn then pink. \"Well come on! Let's introduce you!\" \n\nSelena nodded at that, \"Yeah, I want you to meet some of my other friends. That way you don't have to think I only hang around with this wack job every day of my life.\" She playfully elbowed her shorter friend and reached for Ashley's arm to tug him over to the table in the booth. There were three other women already sitting in the small U seat surrounding the table. All of them looked to be in a similar age group of mid-to-late twenties. And all were...if Ashley was being honest...pretty freaking hot! She went down the line from left to right, with all the girls eagerly sitting up to introduce themselves to the new lady joining girls night. \"First up, we have Carly right here, my long time friend and stationary bike instructor.\" \n\nThis woman had short raven black hair and high cheekbones, very light, crystal blue eyes dressed in a blue tank top and white mini-skirt. She wasn't bulky of build, but seemed very lean, hence the stationary bike instructor part Ashley guessed. She waved and held her hand out to greet him, \"Hi Ashley, it's nice to meet you!\" She spoke in a sweet alto voice. \n\nAshley felt some anxiety threaten to build up as she extended her hand for a handshake. Because Vanessa knew that Ashley was a boy, claiming that her and Selena shared everything because they were best friends, and Ashley did believe that. However, did things get shared with these other women too? \n\nDid all of them know that he was in disguise as a girl? Crossdressing to satiate the burning fetish both he and his girlfriend had hard-ons for? \n\nHe didn't know, but he was sure Selena would tell him soon or things would just have a way of revealing themselves as they did with Vanessa. \n\nUntil then though, he played it off, swallowing the lump of nerves his his neck and extended his hand to shake Carly's, \"It's nice to meet you too.\" He did make an effort at first to make his voice go a little bit higher...but he decided to drop that almost immediately after trying it. Based on the noticeably perturbed look Vanessa and Selena gave him hearing him talk that way. \n\nHis own voice was effeminate enough, and it would do for now. \n\nThe following two girls were introduced as, Amy and Jess, a blonde and another raven haired woman. Both it turns out knew Selena from before work, but still worked in some form at Lunar Lifters. Selena as it turns out, loves to hire people she's friends with, calling the phrase, 'never mix business and pleasure' bullshit. Amy handled a lot of paperwork and billing clients while Jess, short for Jessica, worked in their advertising branch. They both also wore dresses for this evening, but not on the sexy scale that Ashley was considering. Both appeared to be in cocktail dresses, low cut but of different colors. Red on Amy, and green on Jess. \n\nVanessa and Selena both took seats at opposite ends of the booth, but as Ashley went to sit down, he noticed that there was little to no room left available for him. Maybe he could fit on the edge if they all squeezed in, Lord knew he was tiny enough. But it didn't look like they planned to. \n\nHe looked to Selena with a bit of an awkward waddle in his stance as he didn't know what to do, but Selena just cocked a brow and asked, \"Come on babe, take a seat.\" And she patted her lap. \n\n\"You know...I don't blame her as much for doing it...as I blame myself for not anticipating it...\" Ashley rolled his eyes, of course she'd want him on her lap. And he wasn't exactly in any position to protest, nor did he have any real desire to. He'd sat on her lap before, during a movie/show binge or when they cuddled in a spooning position at night, that was practically sitting on her lap too. So it wasn't anything he hadn't been getting use to. \n\nAfter an exaggerated eye roll, he flattened out his skirt and shimmied his way into the booth. Selen leaning back in the chair to give him all the space he needed and then looping her arm around his waist to hook him into her lap. His plump bottom plopping onto her strong thighs, and her arm remained around him like an unbreakable seatbelt. Clearly intent on not letting him get away any time soon. \n\n\"Ooooooouuu!\" Vanessa teased like a nine-year old. \"Look at the loooooove biiiirds.\" \n\n\"You silencio or you're covering the whole tip!\" Selena retorted while Ashley's head tried to dip into his shirt like a turtle. \n\n\"Love birds...love?\" Ashley thought for a moment, hearing that term. \n\nThankfully though he didn't have to dwell on it for too long as the woman Carly leaned forward again, \"So Ashley! Tell us about you! Selena's been so secretive aside from saying you're the best thing that's ever happened to her.\" She smiled brightly. \n\n\"Wow, going right for it huh?\" Selena replied, \"Not even any small talk just going straight for the interrogation?\" \n\n\"Yup!\" Vanessa added, \"You can't expect to keep your pretty new girlfriend locked away forever, we wanna knoooow eeeeeeverythiiing.\" She leaned her elbows on the table, clearly playing dumb since she already most likely knew everything. \n\nBut this did help reassure Ashley that the other three women were unaware that he was a boy. So that was the positive of the situation, however the negative was that all eyes were currently on him, waiting eagerly for him to spill the beans and tell them about himself. Or as he was posing...herself. \n\n\"Uhhm...w-well...I uhh...\" Ashley stammered a bit, glancing around the dance floor to see if anybody else was watching him. His hands coming up to tug on a few strands of his brunette hair. \n\nSelena's hand went to his thigh, \"Hey don't worry about them, you don't have to tell them jack shit.\" She blatantly stated to their faces, earning a few fake shocked expressions from them, feigning offense. \"All they need to know is you make me the happiest girl in the world, and if that's not good enough they can suck mah dick!\" She finished off with maturely. \n\nThat caused the four girls to erupt into a giggle fit, even Ashley's shy demeanor softened at Selena's blunt and sexual humor. Ashley probably got a few extra giggles out of it though, knowing full well that he has sucked a couple of her said dicks in his time. \n\n\"Ohhh come ooon though.\" The blonde Amy spoke up, \"Tell us sooomething. It's been years since this chick got into a relationship.\" She gestured to Selena, \"Tell us the secret! What caused you to steal the heart of the unmovable Selena Mills?\" \n\nSelena wanted to face palm, she really needed to expand her circle of friends. \"You guys couldn't have asked, what do you do for a living? Where'd you go to school or anything like that?\" \n\nFour nopes came almost in perfect unison at that. \n\nAshley thought about it for a second, feeling a little more relaxed now that he was pretty sure they hadn't seen through his disguise. He looked over his shoulder at Selena, who gave him a bit of a head shake, trying to inform him he didn't have to tell the girls anything if he wasn't comfortable with it. \n\nSo instead of buckling under pressure or shriveling into a nervous pile of train wreck, he did the only thing he could think of. Default to Selena's style of humor, \"I sucked her dick?\" \n\nThere was a pause at that, before suddenly the girls burst out into another fit of laughter, the three newcomers clearly oblivious to the seriousness that statement carried while Selena and Vanessa knew the truth. \n\nIt was actually kind of exciting to watch those three girls laugh off his response to their inquiry, while he, and the other two girls just quietly snickered at the dirty little secret his words held. Selena was actually even a bit surprised at his words. Never had she heard something so naughty escape Ashley's lips outside the bedroom. \n\nPerhaps this new attire was emboldening him a bit as it was feminizing him. Either way, she liked where this night was going, and she liked his comment about sucking her dick even more. Already she was cycling through her armory of dildos in her head that she would be rewarding him with tonight... \n\nAfter the little introductions between them, the first waitress finally arrived and took orders from the group. They continued to chat for a while until the drinks arrived first, Vanessa got a Shirley Temple and the other girls ordered some fruity looking alcoholic beverages as well. Ashley however had to settle for a soda since he was not legal to drink yet, Selena got one too so that he wouldn't feel too left out. \n\nEventually the meals arrived as well after a good long while of conversation between the group of girls and one...other girl. \n\nAshley was counting his lucky stars that he hadn't been found out, everyone seemed to buy his disguise and never once did anyone give him a funny or questioning look. As time went on and he talked more about himself, he grew more and more comfortable in his skin. \n\nLeaning forward on the table and interacting in the conversation more, leaning into Selena's touches and shimmying to make himself comfortable in her lap rather than tucking into the crevices of her body to try and shield himself from the world. He told the girls about how they met, the job interview and the problem with his furniture sort of forcing them into a roommate situation that has so far worked out swimmingly on all accounts. \n\nAnd they in return talked about their own lives, what Selena was like throughout the time they've known her and how she's been pretty much the same since childhood. \n\nSelena didn't talk all that much though. She spent most of her time after introductions just hugging Ashley from behind, letting him know that she was here for him if he got overwhelmed or needed anything from her. And just watched him talk, getting acquainted with the girls and...from the looks of it, having a little fun. \n\nThey talked about how they've always wanted Selena to grab a cutie and she seemed to finally get the cutest one of all. Earning a sweet as candy giggle from Ashley, his little laugh making her heart sing. She loved watching him like this, watching the smile grow on his face. The worry from earlier about this outing in girly clothes just melting away as he held the conversation. Even among the little teases, and hints Vanessa threw in every now and again. About how she needed to find the 'boy version' of Ashley for herself, still made the boy in question laugh. \n\nMore than anything, this was the important part to Selena. Ensuring that Ashley would have fun, that he could dress like a sexy girl and keep up the charade with Selena to fuel their perverted nature, but it didn't have to be sexual one hundred percent of the time. They could just sit down with some friends and have dinner together like any other normal couple in the world. \n\nIt was working out, and both Ashley and Selena's worries were slowly drifting away. \n\nThe food was excellent as well, It was a bar and grill restaurant so they mostly served nice, thick, hearty foods. Juicy steaks, burgers and fries, ribs and the like, but for Ashley, he managed to hold back on the desire to eat a big fatty meal and ordered a nice chicken salad. While of course his girlfriend got a prime rib dinner. The others getting practically variations of each others meals, some light, some not and Vanessa was the star of the show getting a big double cheeseburger with curly fries. \n\n\"You go girl!\" Ashley thought, that was something he was pleasantly surprised to see. You'd think that Selena and the others working in a fitness center would be more picky about their diets, but actually no! They all ate full meals here tonight, Ashley's was actually probably the lightest one. But then again he was also the smallest by at least several inches, the poor boys eyes were bigger than his stomach. \n\nBut that was something he appreciated even more in girls, when they didn't try to act like they didn't eat much to maintain a figure. He loved seeing Selena cut big portions off of that cooked medium rib off and stick them into her mouth, chewing mightily and happily at the flavor. A girl who eats is a girl he could cook big meals for! And Ashley did oh so love to cook... \n\nThroughout the meal also, Selena and Ashley couldn't help but make some subtle displays of affection in front of the others, playfully stealing from each others plates and occasionally offering up their forks with a bite of food on the end to feed to each other. Earning either cute 'awws' of adoration from the trio, or bad porn music noises from Vanessa. \n\n\"Bow chicka bow wowww...\" She teased after Ashley bit off a bite of meat from Selena's fork. \n\n\"I am about to chuck my plate at you bitch.\" Selena playfully threatened, only getting a maniacal laugh from the Latina in return. \n\nAshley was mostly unaffected by Vanessa's taunting now, far too wrapped up in the beauty cradling him from behind to care anymore. The same applied for Selena, Vanessa could be screaming at them with a megaphone to get a room and she could zone her out completely just by staring into Ashley's baby blues. She definitely planned to take him out on as many one on one dates as she could, visiting with friends and helping Ashley meet people was fun and all, but she couldn't wait to be alone with him again. \n\n\"God...this boy has got me weak...\" She thought looking over his profile. He was so beautiful, so pretty and sweet, innocent and loving. She just wanted to wrap him up in her arms and never EVER let him was thinking about it briefly earlier, but now...she couldn't get that L word out of her head. \n\nEvery time she looked at him her heart sang, it was like she had never felt this way before! Nothing in the world mattered except the vision on her lap and the soft beat of the music in the atmosphere. \n\nMusic! The idea hit her right then like a lightbulb going off. They had almost completely finished their meals at this point, and she wanted to get a little alone time with Ashley. Not necessarily for anything dirty. Just for the two of them to get away from the peanut gallery, and the dance floor was only a few steps away. \n\nWhat better way for the two to have fun and let loose like they're the only two people in the world? \n\n\"Ashley?\" Selena nudged him on the shoulder with her chin. \n\n\"Mm?\" He mumbled back, sipping the straw on his soda. \n\nShe chuckled at first, then asked him, \"Would you like to dance?\" \n\nThe straw made loud suction noises of the last few drops of soda being pulled up it as Ashley looked back at Selena. \"What?\" \n\n\"Do you wanna go dance?\" She asked again. \n\nThis time though, the question seemed to take it's time settling into Ashleys head, processing through his brain for a moment, and then really sinking in after that steady step-by-step process. \"D-dance?\" He stammered, looking over to the dance floor, doing a quick head count of how many people were currently on it, then whipping his hair back around to look at Selena again. \"Right...right now?\" \n\nShe nodded, \"Yeah now? Why not?\" She tilted her head with an excited smile. \n\n\"Uuhh...\" Ashley hesitated, he knew that dancing was a part of the theme tonight considering the location. But he had been having such a good time so far that he actually had forgotten about it. He wasn't against dancing, not at all, he just hadn't had much practice outside of the Just Dance game series. Plus he was hoping to have more time to mentally prepare himself before taking his shoes to the dance floor. \"I...umm...\" \n\nSelena gave a quick eye roll hearing him stutter like he always did when he was nervous. Then decided to take the initiative. \"Oh come on, don't knock it till you try it!\" She said, scooting over in her seat so that she was making her way off the booth seat. \n\nAshley hopped in her lap as she did this and quickly translated what she was planning to do. \"Wait, Selena uhh...I don't...I haven't danced very much.\" He admitted quickly as she shifted her butt off the seat causing Ashley to plop down onto it. But he wasn't going to be there for long if Selena had her way. \n\nShe stood over him and leaned down close, \"Honey, every time I've suggested we try something, it ends up being pretty fucking amazing right?\" She gave a little wink, clearly hinting at their butt stuff escapades. ",
        "That made Ashley's natural blush manage to stand out against the make up, \"W-well...yes...\" \n\n\"Then let's try something else now.\" Selena smiled wide, reaching down and going for his arms. \n\n\"Selenaaaa...\" Ashley gave a half-hearted attempt to lean away, not really trying to escape her though, he could already feel the ghost of a smile starting to tug at his lips. \n\n\"Trust me baby! This'll be fun!\" Selena called to Ashley no longer whispering, grabbing his wrists and tugging him out of the booth. \"Daaaaance with meeeeee!\" \n\n\"Selenaaaa!\" Ashley whined louder this time and pulled futilely against her unstoppable strength. She brought him to the dance floor with little to no effort at all. Giving a last second look over his shoulder at the other girls as if to ask them for help. However it was clear none of them had any intention of standing up to Selena. Vanessa even gave a flirty little wave as Ashley was pulled away. \n\nOf course, not that Ashley would want them to interfere regardless. He was technically resisting her tugs, but not really. He could never say no to that beautiful face, even if it meant getting forced on the dance floor. \n\nShe pulled him right into the center of the dance area, the epitome of two total opposites, one tiny, pale, frail and bashful, compared to the other, tall, large, thick, and confident. \n\nAlready, Selena was swinging her hips, still holding Ashley's hand and snapped her finger to the beat of the music. \"Come on baby girl, let's make everyone in here jealous of us!\" She shook her head a few times, letting her curtain of black locks to swing about a little. Her shiny white teeth managing to sparkle through them still. \n\nAt first, Ashley just stood there and watched her move, enamoured with how into the beat she was getting so quickly. Her grin was infectious, and it made him want to clap along with her swivels and swift twists. \n\nHe was just starting to rock to the music as well when he caught out of the corner of his eye, a pair of eyes staring at him. At first it seemed like nothing, but as he looked away, his gaze fell onto another person watching him at a distant table. A man and a woman, both were looking over subtly moving their heads to the music as well. \n\nNow of course they could just be looking over at the enthusiastic amazon Goddess of a woman dancing on the floor with her tiny friend. But Ashley's anxiety wouldn't allow it to be that easy, it naturally assumed they were staring just directly at him. Judging him, seeing straight through his disguise. \n\nIn the booth there was safety, Selena covered him up and they were secluded, but out here now on the dance floor. Everyone was watching...everyone. He was sure of it, he could just feel eyes all over him and he felt his nerves bubbling up inside his body to a nearly unbearable point. \n\n\"S...Selena...\" He mumbled, loud enough to make it over the volume of the music, but also quiet enough so that he wasn't heard by anybody else but her. \"They're...staring at me...\" He said quickly, feeling his arms come around his tiny frame to hug himself. The exposing nature of his skirt making him feel so naked and embarrassed in this moment. \n\nSelena stopped dancing the moment she heard the little tremble in his voice, and she cleared her hair out of her eyes in order to take a look at what Ashley was talking about. \n\nOf course there were some people looking over here, but not necessarily directly at them, just in this sort of direction. There were plenty of people on the dance floor, and surely some of those eyes were on Ashley and herself. But she saw no judgement in any of them, no disgust or suspicion, or anything like that. That was all Ashley's brain trying to fill in the blanks with little fearful thoughts to kill his fun. \n\nWell Hell no, she wasn't going to have that. Not tonight, not tomorrow, not ever. Not on her watch. \n\n\"Just look at me honey.\" Selena said, stepping forward and keeping the distance between them as minimal as possible. \"Eyes on me. Don't think about anything else.\" \n\nHe looked up at her, \"But...people are...\" \n\nSelena cut him off, \"Don't even pay attention to them, it's just you and me here sweetie. You're all I care about right now, so my eyes are only on you and that's all that matters.\" She said placing one hand on Ashley's slender waist. \"Keep your eyes just on me Ashley. Nothing else around us, just the two of us...alone in the world.\" \n\nAshley nodded at her words and did his best to follow her command, keeping his eyes fixed on Selena and the movements of her body. The music playing wasn't that fast paced, or loud and obnoxious like most club tunes, he didn't know the song but it kept just the right amount of beats for Selena to twirl him around, swing her hips and encourage him to move his own in tandem. Lifting their arms to the rhythm. \n\nHe watched her moves, her lips mouthed the words 'watch me' and so he did. How she just closed her eyes and swung her hair back and forth. Losing all care for the world in that moment and just dancing to the sound. It made Ashley smile so wide seeing it, \"God...she's so beautiful...\" He thought, feeling his own small frame begin to rock and twist to the sound of the music. \n\nSelena reopened her eyes and spotted Ashley beginning to move, trying to mime her movements to the best of his ability. \"There ya go baby, now you're getting it.\" \n\nHis eyes nervously darted down to her feet to watch them step, then back up to her face. Holding onto her hand with a death grip and hoping to the high Heavens he didn't stumble in his heels or step on her. \n\nNot that his under one-hundred pound frame would probably do anything at all to her of course, but he still wasn't going to risk it. \n\n\"Is...is this right?\" He asked, \"I don't look stupid?\" \n\nSelena nearly barked out a harsh laugh when she heard that and immediately shook her head, \"Absolutely not baby! You look fucking beautiful.\" \n\nAshley looked away bashfully at that, but then turned back to her after a few more moments of shyness. Staring up at his gorgeous. tall, ebony girlfriend. Absolutely perfect in every way, how she smiled at him and held his body close to hers to guide him in how they moved. Pushing him back for a second but holding onto one hand so she may pull him back in with a cute twirl of his body. His skirt swishing briefly around him as he felt his back touch against her front, then spun around once more to be face to face with her again. \n\nThe worry and shame of being watched like this, the possibility of being detected and laughed at was quickly blowing away in the wind. As the beat picked up, so did their movements, not to a crazy speed, but fast enough that after a minute or so of the song, the couple was beginning to pant. \n\nBoth wearing goofy smiles on their faces and giggling every time the bumped into each other or did a silly extra twirl that didn't necessarily fit in with the song. They didn't care, they were having fun, like Selena said, it was only the two of them in the world right now. Tearing up that dance floor and falling into each other's arms each time. \n\nAmidst the dancing, the swirling and twirling, Ashley continued to appreciate every feature of Selena's face. Taking in the angle of her cheek bones as they lifted ever so slightly with her smile, the majestic glow to her hair with every toss over her shoulder. The touch of her strong hands along his body, bringing him comfort and stability, safety and protection. \n\nAs they bumped into each other again, it sounded as if the song was beginning to round down, and Ashley was too wrapped up in appreciating his girlfriend's beauty to anticipate the sudden sweeping dance move she threw at him. \n\n\"Eeee!\" He squealed as Selena quite literally dipped him over the dance floor as the song wrapped up. Holding him by the small of his back while he held onto her shoulders, the two of them erupting into a giggle fit from the motion, and from the taboo nature of the situation, the secret that the two of them shared, no one else knew. And it was nobody's business, it was only the two of them in the world. \n\nAshley grinned up at Selena, and she down at him, his hair dangling down above the floor hers dripping by his face. The lights on the ceiling illuminated her face from behind her head, giving her practically a glowing aura over her beauty. Like an Angel descending from Heaven to lift him out of the world and bring him to paradise. \n\nHe had always looked over her incredibly fondly, knowing he cared for her a lot. But in this moment, he looked at her...differently. The feelings he had for her seemed to only be getting stronger by the second. He never knew it was possible to fall so fast and so hard for somebody. His hand carefully released her shoulder and went to her face, cupping her cheek and carefully running thumb over it. \n\nSelena's smile softened at the touch and she tilted her head, both of them were breathing heavily, staring into each other's soul in this moment of realization for Ashley. \n\nIt was obvious for him because he had never felt this way about anyone before. He'd never had a girlfriend; he never had many serious crushes or anything even remotely close to what he had now. But what he was feeling, how he was falling for this Goddess of a woman, there was only one word he knew that could describe it. His heart swelling, his breath hard, a little layer of sweat on his face. Some would call it silly to be feeling this way so soon into their relationship, but he didn't care. Everybody had the capacity to fall in love quickly, and that's what he was doing right now. \n\nAshley leaned up from his dipped position and pressed his lips to Selena's. Initiating the kiss in full view of everyone who could see, he didn't care about who may be watching anymore. All that mattered to him was that he was with her, and he wanted her to know that. \n\nShe was actually surprised by her girlfriend's boldness, it caught her off guard but not in an unpleasant way. Quite the opposite actually, she smiled into the kiss after her surprised expression quickly melted away and the couple closed their eyes. Gently melding into each other as the noise of their surroundings faded to just a dull distant memory. \n\n\"Wooohoooo! You go girls!\" They both heard Vanessa's voice encouraging them from the distance. She had her hands cupped over her face and hooted at the two, spurring on their show of affection. \"Give it to her good!\" \n\nWordlessly, both Selena and Ashley released one hand from their passionate embrace and pointed them at her. Lifting their middle fingers and flipping her a double birds, the Latina woman cackling proudly at this, feeling like she had trained Ashley well in the ways of the female before sitting back normally in her booth to resume gossip with the other girls. \n\nAfter nearly an eternity, of lips softly smacking, tongues gently rolling against each other, the pair parted from their kiss, but remained in their dipped over position/ Ashley weighed nothing to her, so she could hold him like this all day. \n\nSelena stared down at him with a fondness one could only dream of having with someone, \"Enjoy the dance?\" She whispered. Ashley nodded happily, \"Me too, and I'm not one for agreeing with Vanessa too often buuut...\" Her eyelids drooped looking over him. Taking in the girly outfit he wore and the easy access skirt covering only a third of his legs. \"When do you want me to give it to you good?\" She teased. \n\nThis earned another giddy giggle from Ashley whose arms stroked along Selena's back. His own eyes actually drifting over her form as well, \"Hmm...depends.\" He replied coyly. \n\n\"Oh? Depends on what baby?\" She questioned. \n\nAshley grinned, \"On how soon we can get the Hell out of here.\" \n\nNeedless to say, the couple were out of there. And out of there faaaaaaast. Selena rushed Ashley off the dance floor and slapped the money for the dinner down on the table, not before demanding that Vanessa covers the tip herself though, then wishing her other friends good night quickly and dashing over to the front exit. Ashley tried to give a quick goodbye as well, but it was very rushed, the two of them were obviously eager to get home to enjoy the rest of their night together. \n\nThey both actually ran through the parking lot, both of their high heels clicking loudly on the pavement with each step. The smaller of the two's feet were actually starting to hurt though, high heels apparently, while sexy, held a certain air of challenge to them. In that they required good coordination between the brain and the feet to walk around in and not fall on your face. And also that after prolonged wear, especially with lots of movement like the couple had done, they started to make your feet ache. \n\nSomething Ashley committed to memory if he ever planned on wearing them again. Which...he was. It may be a little silly to think this way, but the pain was definitely worth the gain in his opinion. He caught Selena looking at his feet in those heels multiple times, he was pretty damn sure she had a foot fetish as well and just hadn't told him about it yet. But either way, if she liked them, he would absolutely wear them again. \n\nPlus, tonight hadn't been nearly as bad as he was afraid it was going to be. Nobody actually looked at him funny now that he was reflecting on it. Sure a couple of people glanced in his direction throughout the night, but no funny looks, no double takes or long awkward stares. He believed that they pulled it off, that he successfully masqueraded as a girl, and the entire restaurant was none the wiser. \n\nSo if their outings were always this successful, then he'd happily be up for dressing like this again. Maybe even in the sexy dress he considered for tonight... \n\nLord knew the skirt and the tight top was super comfortable on his skin, maybe the dress would feel even better. Maybe he'd even go super teasing with Selena and wear no underwear at all with it on... \n\n\"Wow...\" Ashley thought as they hurried to Selena's car, just look at him. At the start of the night he was tucking himself under Selena's arm like a frightened little pocket book puppy. And now he was planning on wearing a strapless, form fitting dress with no panties on! \n\nIt's amazing what someone is willing to do for somebody that they... \n\n\"Come on!\" Selena tugged his arm to the car door and flung it open, practically policewoman style shoving his head into the passenger seat to get him inside more quickly and slammed the door behind him. Then nearly did a barrel roll over the hood of the car in order to get to the other side and hopped in herself. \"Let's gogogogogo!\" Selena spoke quickly, getting some more laughter out of Ashley from her excitability. Clearly eager to get into his pants... \n\nErr...up his skirt? This was still gonna take some getting used to... \n\nSelena nearly broke every traffic law in the book in order to speed home, but Ashley didn't care, he was eager too. Very much, he couldn't recall the last time he was so eager for something in his life. \n\nMaybe when he was a child and eager to see what Santa brought him on Christmas morning? But even then, that didn't feel like it even came close to the idea of being with this woman again. \n\nKnowing how he felt in his heart, he knew that he was in this. He wanted to be with her for the long run, and the kinky dressing up, the gender play, the anal sex, all of it was worth it. He was crazy about her, and he believed that she felt the same way about him. Otherwise why would she be driving like a maniac to get him back home and into her bed. \n\nIt was a great feeling...the L word. A very great feeling indeed... \n\nIn record breaking time, the couple made it from the restaurant to Selena's residence, and despite her excitement, she still remained gentlemanly about getting out of the car first, and insisting that she walk all the way around to his side so she could open the door for him. Ashley wanted to shake his head and roll his eyes at the gesture, but he couldn't tonight. Not when he was feeling the way he felt, everything she did for him made his heart swoon. He wanted her in every way, she was so kind to him, so sweet, so gentle. She gave him everything he wanted, and everything he didn't know he needed. \n\nSo he gratefully thanked her for the assistance and stepped out of the car, high heels no longer on his little feet. Having taken them off on the car ride home, he followed his girlfriend up to the front door. Bare skin on the pavement, but feeling like they were walking on clouds. It felt like after they had spent their first night together, this realization just injecting such a floaty sensation of delight within him. \n\nAshley was happy, so happy with her. \n\nShe unlocked the door and opened it, stepping aside to allow Ashley to enter the home first, which he did with a spring in his step. \"See now that wasn't so bad was it?\" Selena asked while she closed and locked the door behind them.   \n\nAshley's legs were still pretty wobbly and he had to carry his shoes in his hands. Walking on his delicate bare feet into the home. \"Haaah...yeah...you were right Selena. I was just paranoid.\" He admitted doing one more half-hearted twirl. \"That was so much fun.\" \n\n\"Mhmmm.\" His Amazon girlfriend followed after him. \"Told you we'd make them all jealous.\" Ashley nodded, \"I counted eight boys and six girls staring at you on the dance floor tonight. Either wanting to be you, or wanting to be inside you.\" She joked. \n\n\"Selenaaaaa...\" Ashley did his trademark whine. To excited and loopy from said elation to really come up with a retort. His red face clearly pleased with the knowledge that he was the star of the show. \"Well, I didn't notice them, like you told me, I kept my eyes just on you. I only have eyes for you...\" He released the heels from his fingers and allowed them to clatter to the floor. \n\nShe watched the shoes hit the floor with a cocked brow, \"Oh?\" \n\nHe nodded, teeth chewing his bottom lip, \"Mhm...In fact I've got my eyes on you right now...\" Coyly Ashley backed away from Selena, interlocking his fingers behind his back and stepping over towards the stairs. \"I like what I see...\" \n\nSelena felt a smirk coming on, watching the way Ashley moved his body towards the staircase. Subtly swaying his hips with every backstep, managing to cross one leg over the other, keeping his hands behind him. Enticing her to follow after him, which she did eagerly, but slowly. Savoring this moment of cat and mouse they were having. \n\n\"Well...I like what I see on you too baby girl...buuut...I think I wanna see some more...\" The two started to play the flirtatious game. The foreplay before they even got to the bedroom. \n\nThe feminine boy grinned, \"Take a good look then.\" He gave her a little twirl, swishing his skirt with his momentum and showing off the tight white thong with pink lining he wore. Cradling his already hard little clitty beneath it. He felt his member grow rigid the moment he kissed her on the dance floor, and it hadn't gone don since. \n\n\"Nnf...\" Selena bit her own lip, loving the spin he gave her, and loving the view of his underwear even more. \"I like your choice of panties baby...I think I wanna see them off though.\" She added. \n\nAshley shrugged, \"Fine by me.\" And he unclasped his hands from his back and lifted them up under the sides of his skirt. The fabric pulling up just high enough to show his bare thighs as his fingers found their way to the waistband of the thong. He then pinched it, and pulled the material down his legs without taking his skirt off, shimmying his hips to help get them over his shapely bottom, then letting them drop after they made it to his knees. Selena watched the display with half-lidded eyes, they were already beginning to feel the heavy weight of lust baring down on them. Especially when Ashley stepped out of the thong with one foot and used the other to teasingly kick the under garment over to Selena. The innocent looking white little cloth landing perfectly at her feet. \"Now you see them off. What are you gonna do about it?\" ",
        "She blinked back up to Ashley, feeling a powerful pulsation in her chest at this boldness he was displaying. Such a girly, flirtatious attitude that seemed to hit all of her sweet spots. Even now he put his hands back behind him and continued to step to the stairs, eyes on her the whole time with a knowing grin. \n\n\"Ohh...you're asking for trouble baby girl...\" Selena warned him, but it seemed like Ashley was taking it as more of a promise rather than a threat. \n\nHe just continued to smile and leaned forward, \"Maybe I am...maybe you should come punish me Daddy...\" \n\nThat did it. \n\nEven Ashley could see the visible change in Selena's demeanor when he talked like that. Like he struck a forest coated in gasoline with a bolt of lightning. Igniting a wild fire that would be unable to be stopped no matter how much anyone tried. \n\nShe took in a deep breath as her core shuddered, and narrowed her gaze. Ashley giggled like a naughty school girl and didn't take any chances waiting. He immediately turned tail and bolted up the stairs, knowing full well that a tyrant of epic lustful proportions was going to be barreling after him. \n\nAnd that is exactly what happened, it was nearly instant, the moment he made the one-eighty and ran, Selena burst into a sprint as well. Chasing after her naughty girlfriend with a fiendish vigor, he struck all the right nerves with that last statement, and she was going to punish him...appropriately. \n\n\"You're in trouble baby! I'm gonna teach you a lesson!\" Selena growled in pursuit of him. Her long legs skipping two steps at a time after she cleared the kitchen floor in a nanosecond. Slurring threats and rapey growls the whole way. \n\nWhile Ashley's much smaller legs stood no chance of outrunning her, he knew this, and yet he didn't care. The chase was part of the thrill, enticing the beast to come after you, wanting to be caught and ravished by it. It made him feel so naughty, so girly, so horny. \n\n\"Ahh!\" He squealed high pitched, trying to flee as fast as he could, hoping that his slight head start would allow him to at least make it to the bedroom before she managed to grab him. And he did actually make it to the door! But he was lifted inside by the wall of muscle crashing into him and bear hugging his petite frame from behind. \"Eeeee! Nooo!\" He laughed, playfully kicking his legs as if he didn't want her to catch him, but the smile was evidence enough. This was meant to be, she was meant to have him in her clutches. And now she reaped the spoils of her victim. \n\n\"Yyyess!\" She growled, practically hurling Ashley onto the bed in front of the door, not even bothering to shut it behind her. His tiny body bouncing high from the distance and force of the throw. Immediately Selena was on the bed as well, looking to be in absolute predator mode as she leaped onto the foot of the bed and crawled up over him. \n\nHe tried to backpedal to the pillows but she was over him before his hair even touched them. Slamming her weight down on top of him and mashing their lips together hungrily. \n\nThe clothes practically flew off the two of them like nothing, grabby hands desperately clawing at each other to strip them down to nothing but the skin. Mouths slamming into each other over and over, tongues lashing, teeth bumping, bodies grinding. It was the heat of passion that spurred them on, the feverish desire for each other that had them saying to Hell with anymore foreplay! \n\nThis time though, it was actually Ashley who managed to crawl away for just long enough to reach his hand into the nightstand, here Selena kept the harness and big black dildo from their previous uses, and the bottle of lube. Playfully tossing the items at her naked body, and eagerly propping his own nude form up onto all fours. \n\nSelena hurriedly did her best to shove the harness up her legs, sticking her feet through the straps and yanking on them like she was late for work and trying to get dressed in a hurry. She clipped everything into place and tightened it securely around her waist, then nearly tore the cap off the bottle of lubricant to dump a very unceremonious amount all over the black fake cock. \n\nAll the while, Ashley only continued to tease and titillate her further by wiggling his bottom back and forth, \"Come ooooon Daddyyy...I want you noooow...hurry uuuup.\" He whined, shaking his butt back and forth, then actually bouncing it up and down. Unintentionally twerking it for her, his booty was more than bubbly enough to clap for her, and Selena's eyes practically turned into throbbing hearts at the view. \n\n\"Fuuuck baby...you're gonna be the death of me.\" She said back, squeezing out even more of the cool, slippery fluid onto Ashley's ass crack. Then literally throwing the bottle off of the bed, no longer having use for it. Her voluptuous body approaching him from behind, ebony skin such a beautiful polar opposite to Ashley's creamy white form. One was chiseled and tough, the other was smooth and delicate. Two sides of the coin that made a perfect fit. \n\nAshley smirked at the comment, \"Well then at least you'll die with a happy face.\" \n\nSMACK \n\n\"Ahh!\" Ashley yelped as Selena spanked his ass, then crawled forward on her knees to situate her shiny with lube dildo right in between his bountiful butt cheeks. Sandwiching the fake cock meat between his plush pillows and rubbing it back and forth a few times. \n\n\"Then time to make me happy baby...\" She retorted before pulling her hips back, pointing the dildo straight for his eager star... \n\nThe boy gripped the comforter hard, his knuckles cracking from the force of his grip and he took the blanket in between his teeth as well. He knew he was gonna be in for some rough lovin tonight... \n\nFirst the tip pressed into his entrance with a light push, dipping just a half an inch inside, testing the waters with pressure and opening him up before Selena then sank her cock deeeeeeeeeep into Ashley. His hole quickly swallowing one inch after the next. She watched the experience as it passed in less than three seconds, drilling the dildo all the way inside his slippery hole until it vanished into his tight, clutching boy pussy. \n\n\"Ughrrrrghhh!\" Ashley groaned, squeezing the blanket in his teeth for a moment, knuckles going white for the initial penetration. It was always the most intense part, feeling something so big just push aaaaall the way inside. And in one swift move too! It was crazy how good it felt, it hurt just a teeny tiny bit and only for a moment before it faded into that dull ache he knew would become pleasant soon enough. \"Aaaaahhhaaaaa...\" He breathed hotly, releasing the comforter from his jaw. \n\nSelena's hips were flush against Ashley's tushy, the fake balls of the dildo cradling his much smaller cherry nuts in what could almost be seen as a comforting embrace. She gave him a moment to adjust then whispered, \"Are you okay?\" \n\nHe reacted instantly, nodding his head fast, \"Yeah! Yeah I'm okay...do it...I want you...fuck me Daddy...\" \n\nThat was more than enough reassurance for her to begin, \"Very well baby, hold on tight...\" Her large hands gripped him by the hips, thumbs settling into his love handles before withdrawing her fake dick out of his ass. \n\n\"Aaaawwwwoooohhhhh...\" He groaned as her cock pulled out all of his insides with it as she went. The muscles clutching her as if they were afraid they'd never see it again and were unwilling to let her leave. Thankfully though, this was not the case, her cock was going to be returning. \n\nAgain...and again...and again...and again... \n\nJust as soon as she pulled out, she jammed it back in. Her hips clapping his jiggly booty with each forward thrust. They clapped from the impact of skin on skin and the couple settled into a quick, deep pace with each other. At this point, they had sex so much, there was really no adjustment period needed for their activities anymore. Ashley was fully accustomed to taking it up the butt on a regular basis. \n\nAnd his prostate was extremely grateful for such a thing as well. Selena's cock punched it with just the right amount of force with each hump into him. Ashley had been hard since the restaurant, but now he was leaking. A long string of precum danced and swirled out of his little clit as it bounced each time she shoved in. The balls jostling up his tiny sack and making his entire inadequate boyhood dance with desire and lust. \n\n\"Ohh...my...God...aaahh...Daddyyy..aaaah!\" Ashley moaned in delight, pushing himself up fully, so that his arms were all the way straightened below him and he was able to look over his shoulder at her. \n\nShe was kneeling proudly behind him, knowing smirk on her face as her hips rocked. Pumping her cock into his bottom for all it was worth, and seeing his flushed little face look back at her with such desire, only served for her to pick up the pace even more... \n\nHer hips pounded into Ashley's rear, the dildo ripping out of his anal ring and stretching it with its sweet girth. The boys face wrinkled up in a crumpled expression of ecstasy and intense bliss. One of his hands coming off the mattress and bracing on the headboard in front of him while the other reached behind him in order to take hold of his ass cheek and spread it wider for Selena to go deeper His moans growing into a cacophonous song of joy that played better than the music from their date in Selena's ears. \n\nShe panted through an open-mouthed smile and railed into her boy toy's pussy. Relishing every clap, every bounce of his bottom and every sweet little squeak and squeal of pleasure from his throat. She flicked her hair back over her shoulder and pulled Ashley back onto her to meet up with her thrusts. \"That's right baby girl...nnnf...you like Daddies cock?\" \n\nAshley nodded rapidly, \"Aaaahhh! Yeesss! I love it! I love it Daddy!\" His head curling up as his back arched, incredible ripples of pleasure pulsating through him. It was amazing what she could do to him, they had only just started doing it, but it already felt like he was going to cum. The battering of her balls against his definitely didn't help in his struggle to last long. \n\nBut then he thought about it...everything they've done has pointed to Selena being the 'Man' of the relationship. It was her job to please the 'Woman' and make her cum first. So who cares if he didn't last? It wasn't like he needed to prove his stamina to please her, he could just relax and let her cock take him away to cloud nine. His toes curling behind him and his fingers squeezing his supple booty flesh. Eyes still squeezed shut and teeth gnashing his lip, his prostate singing with joy as his pleasure button was pushed a hundred times over. \n\n\"Ooooouuu yeah...fuck I love it when you call me Daddy...uuugh!\" Selena felt her own arousal bubbling up in her abdomen, not about to cum yet, but loving the way the dildo rubbed her clit. This was perfect, she never wanted anything else, just to have Ashley over and over like this. If she could get that, she could die happy. Never asking for anything else throughout the rest of her days. She just wanted to be with him like this, as dirty and perverted as it may seem, it's what she wanted. \"Uggghh...fuck...do you wanna cum sweetie? Ah...\" \n\nMore aggressive nodding from Ashley, \"Yes! Yes! I wanna cum Daddy! Please...oh God! Can I cum Daddy?\" He asked, feeling the fuse running short, time was ticking before it would be too late and he'd burst. \n\nAnd it grew shorter as Selena slapped his rear again with a sharp clap. \"Beg me bitch.\" \n\n\"FUCK! Ah please! Pleasepleaseplease! Please Daddy please can I cum!? Please? PLEASE OH FUCK!\" Ashley's voice arched as he heard Selena's deep chesty chuckle hearing him beg for mercy. \"Oh God I can't hold it Daddy! Please can I cum please?\" Even he surprised himself with how much he could reeeeeally want something so bad. Literally BEGGING for it, who knew prostate stimulation could turn him into such a slut for Daddy dick. \n\n\"Go ahead baby...let it out...\" She gave him permission, reaching forward to suddenly grab both of Ashley's wrists and pull them backwards behind him. Forcing his upper torso to arch as she held his limbs like handle bars and suddenly upped the speed of her hammering to a ludicrous level. \"Not like you could ever hold it anyway baby girl...\" She whispered among the loud echoing claps of Ashley's ass. \n\n\"OHHHH FUUUUUUUCK!\" Ashley actually screamed as Selena's hips smashed into his rear, \"AAAHH HAAAH HAAAA! FUCKIMCUMMING!\" He screamed as his tiny prick began to leak out it's pitiful gooey load. \"OOOOOHHHH! FFFFFFFFFFFUUUUUGHCKKK!\" His voice broke in a high arch as his body tensed up, bouncing and jerking forward and back while Selena railed him. His long brown locks swinging and swishing, matting to his sweaty forehead and face like he was getting the crap kicked out of him. Only he was getting the cum fucked out of him instead. \n\nSelena just grinned and enjoyed the spasms of his tiny body while they lasted, his little legs kicking futilely behind him, as if he was trying to wriggle his way free and crawl away, but she wasn't allowing it. His tight anal muscles squeezing and gripping the false cock so tightly she was worried it might accidentally pop out. Thankfully this wasn't the case though and she managed to keep fucking her little rag doll of a boy toy all the way through his orgasm. \n\nThe sticky fluid leaked out of his pulsing clit, staining the blankets below him with drops of white fluid, making such a little mess below him and some of the slippery strands of spunk flicking up onto his little chest and tiny tits from the bouncing. Selena growled in approval, slowing down her speedy thrusts, \"Nnnnf...yeeeeeah baby...aah...\" She pulled his arms back one more time as she sheathed her cock sooooo deep inside him, her tip definitely touched his tummy, before letting them go. \n\nAshley weakly falling forward, face first into the blanket and nearly making a mess of himself in his own cum. He panted harshly and weakly just laid there with limp arms for a few moments, \"S...sshiiiiit...haaaah...\" He managed to eek out in his moment of post bliss, every muscle in his body tingling with delight. \n\n\"Oh? What? You think we're done here baby?\" Selena suddenly said behind him, her cock still hilted balls deep in his ass. \n\n\"H-huh?\" Ashley slowly peaked open one eye and glance up at her Goddess like visage. She had both hands on her hips, still on both knees behind him, with a devious grin on her face. Devilish thoughts on the mind as she looked over her worn out bottom. \n\n\"We're just getting started baby girl...Daddies not done with you yet...\" Her hands came down a second time, only this time they didn't go for his wrists, she brought them under his waist, hooking them around his thighs and pulling back. \n\nThe boy's eyes went wide and he yelped as it felt like her cock somehow managed to go even deeper inside of him, \"AahhAAHH!\" He was lifted off of the bed, entirely! His body's weight being supported on Selena's pelvis as she leaned back to hold his tiny frame up. Selena had seen this position on way too many triple X tiny teen porn sites, where the girl is so small that she's held up completely on her lover's waist. Usually with her arms out in front of her doing a silly 'Superman' pose. \n\nThankfully, Ashley wasn't putting his arms out like that, but the added pressure of his body weight on the dildo pressed it almost completely flat over her dripping wet pussy. And she knew she was already excited enough from the previous round, she was gonna make herself cum in round two. And force another climax out of him as well while she did it. \"Like I said! Better hold on tight my pretty little bitch! NNF!\" She grunted as her hips resumed their bucking pace from before. Going a little bit slower from the extra effort she had to put in to work his entire body on hers, but no less hard and deep inside. \n\n\"OH...MY...GOD! AAAAHH!\" Ashley instantly started screaming again, letting loose numerous howls of sudden pleasure as his prostate, having already been milked, was suddenly forced back into action by another flurry of blows to the tiny gland. \"SELEE-SELENAAAAA!\" \n\nHe wailed like a pornstar and moaned his head off, amazed at how she had such control over him. The same way she did in the shower, bending and contorting his body to her pleasure, he loved it. His mind turned to a mushy putty that she could squeeze and mold into whatever she wanted. \n\nThe smile on her face grew wicked and wild, loving his tiny little girly form bouncing and his head shaking with crazy amounts of surprise pleasure. He clearly wasn't expecting the second wave of rutting into him, even less so being hauled up off the mattress and just used like a fleshlight! \n\nBut God was it sexy... \n\nHe felt like he was gonna cum again...already! And his clit wasn't even hard anymore, at least not really. It was semi with thicker strands of precum squirting out of it every dozen or so thrusts, but it still felt like he was on the verge of cumming. Or did he already cum again? It was hard to tell, time sort of blended together when you're on the end of a magic cock. \n\nSelena turned her own head to the ceiling and grumbled low, \"Rrrrghhh...uuugh fuck...\" Her voice a gravelly whisper as her pussy melted. Leaking her honey out all over the bud of the dildo, her clit on fire and ready to explode in delight. Her hands gripping Ashley so tightly, she was worried she might end up bruising him, so before she did she decided to make a last minute change to position before she blew. Savagely grunted and growling powerfully while Ashley cried out, ending up babbling praises to her, begging his Daddy to never stop. \"Uggh...uurrrrrrgggg...that's it bitch ugh! You want Daddy to cum now? Huh? Tell me you want your Daddy to cum bitch. SAY IT!\" She hauled him up closer so that his back was now to her chest. He could feel her busty, ebony breasts bouncing into his back as she did this, her dark nipples just as hard as his tiny pink ones. \n\n\"AAAGGHYYEESSSS!\" He cried out, \"PLEEEASE DADDDYYYYY! CUM! PLEASE CUM FOR MEEEE!\" He looked on the verge of tears, his body completely giving in to the mind melting pleasure. Eyes beginning to roll back as his head bobbed from the constant movement. \n\nShe turned his head to face her and smashed her lips to his again, rocking her hips into him another few times before her thrusts reached a fever pitch and her arms bear hugged him from behind. His legs curling to wrap around her back at this reverse angle, he could feel her back muscles tensing up as his legs did. \n\nThey were cumming together. \n\nSelena groaned loud and low into Ashley's throat and forced him to swallow her pleasure while he cried out back. Another pitiful little spurt of his lust erupting from his weak little cock, trying it's best to shoot out everything it had left, as little as it may be. Their two bodies tensed up in the height of their desire, crushing into each other, their shadows in the dim light melting into one form. \n\nHolding onto each other's bodies for not one...not two...not even three minutes. But five whole minutes of just holding each other in this tensed, amped up state. Riding the high for the first half of it, then slowly coming down to a calmer state of mind between the both of them, and softly molding into each other. \n\nShe didn't pull out, keeping her cock buried inside of Ashley as she walked their bodies forward, holding their lips locked onto each other as well in a very long, slow kiss. There were several white stains on the bed that Ashley had left all over in the center, but Selena didn't care about cleanup right now. She just wanted to hold him, to curl up with her Ashley and stay like that for as long as she could. \n\nSo she crawled forward, using her legs to push the blankets down and away from them so they could lay without getting more messy than they already were. Then set him down onto his side with her right at his back, Ashley the little spoon, and Selena the big one. ",
        "Only after their heads touched the pillows did they finally break apart from the kiss, one last soft click of their wet lips sounding off as they slowly opened their eyes to look at each other. \n\nAnd again, Ashley found himself looking up at this Amazonian angel, the feint light from the windows illuminating her dark curtain of hair. Brown eyes sparkling so gorgeously in the light. She was the best thing that had ever happened to him, mind blowing sex, a roof, comfort, protection, stability, and... \n\nThat L word...he could feel it. In her eyes looking down on him now, he knew it in his heart. There was no way he could feel so strongly about her and not feel the same coming from her after everything. \n\nHis hand drifted up weakly off the bed, and came up to her face, slowly trailing along it like it had in the restaurant. Feeling over her defined cheekbone, tracing her sweaty skin down to her jaw. Selena's hand came up and did the same thing, coming up to Ashley's face and cupping his cheek. \n\nNo one ever made Selena this happy before, Ashley was everything she had ever dreamed of. And she couldn't bare the thought of losing him, maybe this was a stupid idea but...she needed to do it. \n\nShe needed to let him know how she felt. She didn't care that it had only been a week, she didn't care that her desires were strange and the world would look at her like she was crazy if she was open about it. All that mattered to her was that she and Ashley were compatible, but not just in a sexual sense. Emotionally too, he was so sweet to her, so kind, accepting, caring and... \n\nThat L word...she knew it had to be true. In this moment of silence they shared, there was only one thing she wanted more than to kiss him again. And that was to say it...to say it out loud and leave herself out in the open and vulnerable to him. This was the moment, make or break, she knew it and her heart raced with nerves at the thought of it. But she couldn't wait anymore, it needed to be said. \n\n\"Ashley...\" She started...taking one last breath before going for it. \"I want you to know...I-\" \n\n\"I love you.\" Ashley cut her off. \n\nThen silence fell between them, the room grew so still as the boy said it first. Selena's heart, pitter pattering in her chest halted for nearly a full three beats before it started pumping again. Only it was accompanied by a battalion of butterflies fluttering around it. \n\n\"He...he does love me...\" Selena thought, feeling her eyes begin to get glassy. To hear him say it, it made everything just feel right in the world, like everything she had done in her life had led her to this point, and she could die happy now. Although she didn't plan on dying any time soon...no she wanted to spend a great many, many years...with her new lover. \n\n\"I love you...\" Ashley repeated the three words, his own heart beating out of his chest as he watched those glistening brown orbs begin to sparkle a little brighter. Selena was almost crying, and at first, his anxiety wanted to tell him he fucked up. Thankfully though, her smile widened at his words, and a choke came from her that was half a giggle and half a soft cry. Tears of joy beginning to spill down from her eyes. \n\n\"I...I love you too Ashley.\" She managed to squeak the words out, and his expression also changed from worry to elation upon hearing it. \n\nThe gap between the couple was closed once again, and their lips joined in one more of what was to be thousands, if not millions more kisses between the two lovers. \n\nIt was a miracle that they found each other, and an even greater one that they discovered what they would mean to each other. \n\nTheir relationship, and their love was something written in the stars, something people called soul mates. Something that they knew was special and would last longer than a single lifetime. \n\nThe two of them were made for each other, it was destiny. \n\nIt was what they were Born To Be. \n\nTogether. \n\n***** \n\nA.N. Now you see my concern XD I title dropped the story, lmao.  \n\nThere's so many more chapters of these too to come, and I hope you all stick around to read them :)  \n\nThank you for your time, and I'll see you all in the next one!  \n\nNext Chapter: A Couple's Wager "
    ],
    "authorname": "DamienDeath20",
    "tags": [
        "amazon",
        "anal",
        "black on white",
        "crossdressing",
        "femboy",
        "interracial",
        "pegging",
        "romance",
        "size difference",
        "strap-on"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/born-to-be-ch-05"
}