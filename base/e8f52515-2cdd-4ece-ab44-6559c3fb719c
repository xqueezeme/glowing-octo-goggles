{
    "title": "On My Way Home Ch. 02",
    "pages": [
        "I hadn't planned on a second chapter, but the response to the story was so positive to that I thought I'd try it. Let me know what you think -- particularly if you'd like a Chapter 3 - via comments and votes. \n\nAs in the previous chapter, all characters are 18 or over. \n\n***** \n\nI woke to my find my cock was being gently and affectionately squeezed. \n\nI looked rather blearily around the room. It looked like the power was back -- the clock of the old DVD player was flashing. The room was cool, but the fire was just starting to blaze up again -- somebody, probably Eleanor, had put some more logs on it. \n\n\"Hello,\" whispered a voice. \"I'm sorry to wake you up.\" \n\nI looked over. Jen was there, looking a little nervous even as her hand continued to work away at me. It was having the desired effect, I noticed. \n\n\"That's all right,\" I whispered back. \"Where are the others? And why are we whispering?\" \n\n\"Eleanor told me to let you sleep. She said you must be very tired. She's getting some breakfast and feeding the cats. Kaz has gone for a shower. She said she's all sticky, though I don't know why she'd want to wash everything off. I really like it.\" \n\nI digested this. \n\nShe gazed down at my groin. \n\n\"And, I know it's a bit greedy, but I thought, well, I've kind of got you all to myself. Just for a few minutes. Do you mind?\" \n\nI lay back and contemplated the ceiling. \n\n\"No. I don't mind at all.\" \n\nShe leaned over and kissed me lightly on the mouth. I slipped my arm around and pulled her closer, and her kiss became firmer and more passionate. I ran both hands down her back and stroked her hips and the top of her buttocks. She made a kind of appreciative purring noise at the back of her throat and wriggled on top of me. \n\nShe broke the kiss. \"It's so nice, not having to share you. I know I'm not as pretty as Eleanor, or as sexy as Kaz, but you still like me, don't you?\" \n\n\"Jen... you're completely lovely and perfect. Don't ever worry on that score.\" \n\n\"Thank you,\" she said, and kissed me again. \"Do you think you could... you know, just for a minute or two?\" \n\nI feigned ignorance. \"Do what, exactly?\" \n\n\"You know! Put it in me! Just until they come back. They're going to be cross but I don't care. Please?\" \n\n\"Push yourself up a little,\" I said to her softly. When she did so I reached down and took hold of my cock, now completely erect. \"Now... lower yourself down... that's it.\" \n\nShe moaned as the tip probed her entrance, and then gasped as she pushed down more firmly and I slid fully into her. \n\n\"Oh... god, yes. That is just... so nice. Is it nice for you, too? It must be.\" \n\n\"It's perfect,\" I said, a little breathlessly. \"And this is my favourite position, as it happens.\" \n\n\"Like this? Me on top of you?\" \n\n\"Yes... I like to be able to pull you close to my chest, feel those lovely breasts of yours squashed against me. And I like to be able to hold you tight, and then push upwards into you, and fuck you as hard or as slow as I want...\" \n\nShe sighed as I demonstrated. \n\n\"Yes. I like that. Fuck me as hard as you want.\" \n\nFor several minutes I did just that. She seemed to disappear inside herself for a while, lost in her own pleasure. Her tight slit provided a delicious, desperate friction that I knew I wouldn't be able to resist for long. \n\n\"You can come in me,\" she murmured. \"I worked it out, while you were still asleep. It's quite safe. I'd like to feel it.\" \n\n\"Are you sure?\" \n\n\"Yes. But not yet, please. Keep fucking me. I'm so close. So... close.\" \n\n\"Jennifer! What are you doing!\" Eleanor was back, holding a tray with tea things and looking very disapproving. Behind her, Kaz smirked. \n\n\"Sorry Lennie... couldn't help myself... it's so lovely... god I'm going to come...\" \n\nEleanor came into the room and set the tea things down on the table. Kaz came over to us and gave Jen a hearty smack on the backside. \n\n\"You,\" she said, \"are a cock hog.\" \n\n\"Sorry Kaz... oh fuck... do that again... I'm so close...\" \n\nKaz considered, then decided to be kind. She gave Jen another loving wallop and the younger girl howled with relief as her orgasm overtook her. The feeling of having that pulsating, sweaty, sexy bundle trembling on top of me was too much, and I came too, shooting several ropes of come into that tight, welcoming passage. \n\n\"Honestly Jen,\" said Eleanor severely. \"I just can't turn my back on you for a second. I told you to let him sleep!\" \n\n\"Sorry Lennie... god, my head is spinning.\" \n\nShe rolled off and collapsed onto the mattress beside me, still gasping for air. With a brisk efficiency Kaz knelt down and began to suck me clean. She was only wearing a t-shirt with nothing underneath it and her shaven pussy peeped out cheerfully at me as she did so. \n\n\"Mmm,\" she said. \"Andy and Jen flavour.\" \n\nEleanor sighed. \"I can't believe we've become so... debauched!\" \n\n\"Yeah right,\" said Kaz, pausing in her task. \"Like you weren't in the kitchen earlier wondering how long we could keep him for and whether we could get your mum to stay away for another night.\" \n\nEleanor blushed. \n\n\"I was just... speculating on how nice it would be. But obviously Andy... may need to be on his way. The snow stopped ages ago and it looks like they've cleared most of the road.\" \n\n\"I'd bet he'd like to stay her forever,\" said Kaz. \"Wouldn't you, Andy? Your own personal house of devoted sex slaves?\" \n\n\"I would be... delighted to stay here for as long as you'd, er, have me,\" I agreed. \"But I should probably show my face at work this morning.\" \n\nEleanor looked wistful. \"Yes, and I'm afraid Mummy's texted me to say she's going to be back around lunchtime, so we'd better make sure you're safely out of the way in plenty of good time.\" \n\nJen propped herself up on one arm, and looked at us all very seriously. \n\n\"But we have to do this again! We can't just... not ever see Andy anymore.\" \n\n\"You are a total slut,\" said Kaz, stroking her hair. Her other hand was still firmly grasping my cock, but she seemed to think it was clean enough now. \n\n\"I know! I didn't realise until last night. I mean, I thought I might be, given how I just think about sex all the time. But now I can actually do it, it's even better. And we're like a little... secret sex club. How cool is that?\" \n\n\"Very cool,\" said Kaz. \"Even your sister thinks so, really.\" \n\nEleanor busied herself pouring the tea. \"Yes... it's certainly been... very nice.\" \n\nKaz scoffed and Jen yelped indignantly. \"Very nice? Lennie!\" \n\n\"Of course I'd like to see Andy again,\" said Eleanor. \"But he's busy... and it might not be easy to arrange.\" \n\nJen thought about this. \"He could marry Mummy.\" \n\n\"No!\" \n\n\"Why not? Then he could sneak into our rooms at night whenever we wanted him.\" \n\n\"Because... he'd belong to Mummy then. And that would be mean, and I don't want to go behind her back. Besides, he might not want to marry her. And she's seeing that bookshop owner.\" \n\n\"She said she wasn't!\" \n\n\"She is really. She just doesn't want us nosing around.\" \n\n\"Well, can't he marry you then, Lennie? You don't mind sharing, do you?\" \n\n\"Jen, you are being completely silly. Andy doesn't want to marry any of us, nor does he need to. If he'd like to see us again, I'm sure we can arrange something.\" \n\nShe passed me a cup of tea. I needed it. \n\nAs I sipped my drink, I regarded the three girls who were apparently quite open to the idea of being my own harem. Eleanor was stirring her tea and looking thoughtful. She was wearing a dressing gown that was a little too big for her, and it made her look very young and vulnerable. Kaz was munching a biscuit with the same animal intensity that she seemed to apply to everything. And Jennifer... Jen was grumpily prodding the fire with a poker. \n\n\"Do you have any other papers you need to deliver?\" Jen asked suddenly. \n\nI shook my head. \"Not really.\" \n\n\"Couldn't you make some up? And then you'd have to come and see us.\" \n\n\"But Jen,\" said Eleanor. \"Mum would be here.\" \n\n\"Well, we'd get him to bring them when she wasn't here.\" \n\nEleanor was patient. \"Then he doesn't need to pretend to bring any papers, does he?\" \n\nJen scowled. \"Oh yeah. I guess not.\" \n\n\"Look,\" I said. \"I'm flattered that you'd like to continue seeing me. And I'd love it too. We'd have to be very careful though. And I'd quite understand if you decided you'd rather... see boys nearer your own age.\" \n\n\"Oh - bollocks to that!\" said Kaz. Even Eleanor looked at me a little scornfully. Jen rolled her eyes. \n\n\"We'll have to work something out then,\" I said. \"But I should really get myself showered and cleaned up. I'll have to wear the same clothes and hope my boss doesn't notice.\" \n\n\"Do you think you could give me a lift home?\" asked Kaz. \"It's on your way, if you're heading back to town.\" \n\nJen looked at her suspiciously. \"You're not planning anything, are you Kaz?\" \n\n\"You're a fine one to talk!\" \n\nJen grumbled. \"I just think we should do everything fairly.\" \n\n\"Come on,\" said Eleanor. \"I'll show you where the shower is.\" \n\n** \n\nEleanor also found me a razor. It was a small ladies razor but it did the job. I hummed to myself under the hot water. I supposed I should feel wretched, exploiting these girls, but I thought I could reasonably claim they were willing participants and indeed, the primary instigators. \n\nAs I carefully scraped away the last of the stubble from my chin the shower door opened and Eleanor slipped in to join me. \n\n\"Do you mind?\" she whispered. \"I may not see you for a long time.\" \n\n\"I really hope you do,\" I said. \n\nShe smiled and put her arms around my neck. I kissed her deeply and fondly. I guessed I wasn't supposed to have favourites, but Eleanor was really special. \n\nSomehow, my cock found the energy to harden once again. She put her hand down between my legs and stroked it. I ran my hands down her sides and squeezed her buttocks tenderly, our mouths still locked together. I heard her make a soft, contented noise in her throat. \n\n\"You don't need to do anything,\" she whispered. \"It's just nice to be with you, like this.\" \n\nI moved a hand around to the front of her and ran my fingers over her pussy. The hot water streamed down us both. Even with that, when I slipped a finger inside her it still felt almost shockingly hot. \n\n\"Oh yes, just stroke me like that...\" \n\nI gently played with her, my fingers probing and teasing, my other arm holding her close, our mouths still engaging and exploring. \n\n\"I know you've just been with Jen, and you must be so tired... but could I have you inside me again, just for a moment? I think... that'd be all I need.\" \n\nI turned her around and pushed myself up against her, my cock finding its way through the gap in her legs. She arched herself up, reached down, and eased me into her. \n\n\"Oh... that's so lovely...!\" \n\nShe came almost immediately. I slowly and rhythmically pushed in and out of her, just a smooth rocking motion, as she trembled and gasped. Then, when she was calmer, I switched the water off, eased myself out of her, and turned her around to face me. \n\n\"You're a wonderful girl,\" I told her. \"I'm so glad I've met you, Lennie.\" \n\n\"Call me Eleanor, please, Andy. I like it when you call me that.\" \n\n\"I'll see you soon, Eleanor.\" \n\nShe looked down at me. \"Do you want me to... do anything for you?\" \n\nI laughed. \"I need a bit more recovery time, I think. But thank you.\" \n\nWe kissed again, and then she left me to get dressed. \n\nWhen I went downstairs Jen was looking rather gloomy. Eleanor had made me a large coffee in a sealable cup that she said I could take with me. \n\nI went outside and spent ten minutes clearing snow away from the car and defrosting the windows, my heater running full blast. The driveway was slippery but beyond that it looked like the roads had indeed been gritted and cleared. It was safe to drive, I decided, not without a tinge of regret. \n\nKaz was waiting by the door when I came back in, a small bag packed and ready. I kissed the other two girls goodbye -- both of them gave me long, lingering hugs, and Jen patted my groin mournfully, as if she was bidding farewell to a favourite toy being sent off to the charity shop. \n\nWe got into the car and I made my way carefully down the drive, some fourteen hours after I'd first driven along it at the start of my wonderfully exciting and unexpected night. \n\nEleanor and Jen waved at us until we were out of sight. I turned to Kaz once we reached the road. \n\n\"Which way, madam?\" \n\nShe smiled. \"Up here another couple of miles, then we turn left. I'll shout out when we get there.\" \n\nWe rode in a companionable silence for a while and I focused mostly on my driving. The roads were still icy in places and the snow was banked high on either side where presumably the snow ploughs had pushed it. \n\nThen she spoke. \n\n\"Have you ever done anything like that before?\" \n\n\"God... no. Not even in my wildest dreams, frankly. I've never been with two girls before, let alone three like you.\" \n\nI looked at her. \"What about you?\" \n\n\"No... not with boys. With girls, when I was younger, we tried a threesome once. It was a bit... complicated. It actually requires more concentration than you think, doesn't it?\" \n\n\"It really does. So... not a success?\" \n\n\"Mmm, not really. I mean, I'm glad we tried it. But the problem was, one of the girls was VERY bi, and one wasn't quite sure, so the first girl was really going for it and kinda impatient, and the other girl needed... a bit more encouragement. And, believe it or not, I was kind of the one in between, trying to keep everybody happy.\" \n\n\"I think you'd probably do that very well, Kaz,\" I said. \n\nShe looked at me, curious and perhaps a little defensive. \"You don't think I'm just a bossy slut? After last night?\" \n\n\"No, I'd never think that. You were... wonderful and sexy and rather sweet, in a very naughty way. And I shall always be thankful you were there.\" \n\nShe seemed pleased with that. \"Yes, I don't think Eleanor would have done anything. Jen... she might have done. She surprised me.\" \n\nI nodded. Kaz still seemed to be probing at something. \n\n\"You were much rougher with me, than with the other two.\" \n\nI was immediately contrite. \"Kaz, I'm so sorry. I thought... well, I guess I was kind of just in the moment. Did I hurt you?\" \n\n\"God no... I really enjoyed it. And I know I'd been a real tease, so it was entirely what I deserved. And I did come, really hard. I'm going to be thinking about that for ages.\" \n\nI reached over and squeezed her knee. A slightly vulnerable Kaz. Who would have guessed it? \n\n\"You're a chameleon,\" I said. \n\nShe looked at me quizzically. \n\n\"You're the one in a social group who fills the gap. Eleanor and Jen, they need somebody louder and outgoing, so that's what you are. And with those other girls, they needed somebody between the two extremes, so that's what you became for them.\" \n\nShe made a face. \"Makes me sound like a real loser.\" \n\n\"No, not at all. People like you are really rare and special.\" \n\n\"Really?\" She looked at me suspiciously, concerned that perhaps I was teasing her. \n\n\"Absolutely. You know why you can do that? Because you're sensitive. Even without realising it, you can pick up the... dynamic in any group, and adjust yourself so that the group works.\" \n\n\"But... doesn't that mean... I'm never myself?\" \n\n\"Maybe a little. But I think if you're aware of it, you'll be fine.\" \n\nShe thought about this for a moment. \"Shit, turn left here!\" she said, suddenly. \"Almost forgot I was supposed to be directing you.\" \n\nI squeezed on the brakes and just made the turning, though the driver behind was rightly cross with us. Kaz directed me to the driveway of a large white house, rather grand, certainly a step up from where Eleanor and Jen lived with their mother. \n\n\"Should I... let you out here?\" I asked slightly nervously. I didn't want to have to explain her parents why I was dropping their teenage daughter off first thing in the morning. \n\n\"You can drive in,\" she said. \"They won't be there.\" \n\n\"You sure?\" \n\nShe nodded. \"See the car tracks in the snow? They're both gone by seven-thirty in the morning. Mum is back around six thirty, dad around eight. Like clockwork.\" \n\nThere was a ruefulness about the way she said this that made me think she wasn't thrilled about the arrangement, but I felt I'd done enough amateur psychology for one morning. \n\n\"Brothers and sisters?\" \n\n\"No. Just me.\" \n\nI parked the car in their drive, got out, and got her bag out of the boot for her. She took it, then looked at me. \n\n\"Will you come in, just for a while? I hate going into the house on my own.\" \n\nI hesitated, and looked at my phone to confirm the time. The honest truth was, nobody would notice if I was thirty minutes or so late. We had business all over the region, nobody really knew where anybody was at any one time, and as long as the work got done, there were no problems. \n\n\"Just for a few minutes,\" I said. \n\n\"Sure.\" She smiled shyly at me. \"Thanks. And I can find you a different tie to wear, if you want. My dad has thousands. He won't miss one.\" \n\nShe led the way into the house, taking quite a time to over several impressive locks and then deactivating the burglar alarm. The house was even more impressive on the inside, luxuriously and tastefully furnished. It was also rather impersonal. It felt like somebody's idea of what a nice upmarket house should look like, perhaps staged for a magazine shoot. It didn't feel like a home. \n\n\"We have a coffee machine that could fly to Mars,\" she said. \"Come see.\" \n\nThere was an indeed an impressively large, metallic contraption on the counter in the kitchen. It looked deeply intimidating to me but Kaz confidently produced some mugs and milk and prodded some buttons and a deep, rich aroma was soon spreading around the room. I thought of Eleanor's battered coffee cup of watery instant coffee, cooling in my car, and felt vaguely disloyal. But... no question, Kaz's parents had the edge when it came to hot drinks. \n\nWhile I was sipping cautiously Kaz gestured to me. \"I want to show my room,\" she said. I could just picture Jen looking at her suspiciously, but she seemed distracted rather than predatory. I thought she probably just didn't want to be left on her own. \n\nI followed her up the staircase, also a grand affair with a small alcove half-way up with a little chair decoratively perched in it. In case you were so tired by the climb, I imagined. Kaz's room was at one end of a corridor, a large, open, airy room with its own en-suite bathroom but still very much the bedroom of a young girl. Mainly white d\u00e9cor with bursts of pink in places, including the curtains and pillow cases. Some boy band posters, a large dressing table with an alarming number of tubs and bottles, and there were several piles of clothes in one corner. \n\nShe turned and looked at me and wrinkled her nose. \"I keep meaning to redecorate,\" she said. \"But somehow it never seems that important.\" \n\n\"It's a nice room, Kaz,\" I said. I wasn't quite sure what she wanted me to say. I was remembering Eleanor's room last night, which had been smaller and more intimate. I had been excited being in there and I confess I was excited about being in Kaz's room now. Girl's bedrooms, at least to boys like me who had never spent as much time in them as we'd have liked when we were younger, always seem attractively off-limits. \n\n\"It's OK, I guess.\" She put her bag down off to one side and pulled some clothes off a chair. \"Sit down there. You can drink your coffee while I get changed. Maybe if I'm quick you can take me into town? I don't really want to stay here today, I don't think.\" \n\n\"Sure,\" I said. I reflected that Jen would definitely be suspicious now. I sat myself down and stretched out. \n\nKaz smiled at me and took off her jumper and t shirt. Underneath it she wore a white lacy bra with a flower motif. I looked out of the window and pretended to be interested in the distant horizon. ",
        "\"You can look,\" she said. \"I'll be a bit offended if you don't, to be honest.\" \n\nI gallantly returned my gaze to her as she wandered around the room. Occasionally she would glance at me, a shy little grin just visible. Then she located the item she was looking for and held it up - a small black skirt. \n\n\"What do you think?\" \n\nI shook my head. \"No way it'll fit me. Might look hot on you though.\" \n\nShe laughed. Then, her grin getting a little wider, she undid her jeans and started to slide them off. Her long legs emerged and I noticed that her white underwear matched her bra. She saw me looking. \n\n\"Complete lottery that they match,\" she said. \"I just threw some clean stuff into a bag last night. Good job I didn't bring my granny knickers.\" \n\n\"I'm sure you look nice even in granny knickers,\" I said. \n\n\"Yeah? Wanna bet? I'd put them on and model them for you, but you'd never want to touch me again.\" \n\n\"I can't imagine that ever happening, Kaz.\" \n\nShe made a face. \"Hope not.\" Then she hesitated. \"This is going to sound a bit silly, but... could I ask you a favour?\" \n\n\"Of course.\" \n\n\"Could you call me by my name? Not Kaz? Like you did with Lennie... calling her Eleanor?\" \n\n\"Of course - I'd be happy to. What are you? A Karen? Caroline?\" \n\n\"I'm a Kathryn, actually. With a K. I was a Kat for a while, but somehow I ended up as a Kaz.\" \n\n\"You're very beautiful, Kathryn,\" I said, and was surprised and touched to see her blush. \n\n\"Thanks.\" She picked up the black skirt and seemed to regard it for a moment, still standing there in just her underwear. Her phone buzzed in her bag. She retrieved it and stared at the screen, then laughed. \n\n\"It's from Jen,\" she said. \"Wanna see it?\" \n\n\"Sure.\" Though I had a hunch before I even looked at the screen. \n\nDont u dare fuck him!! \n\nI laughed too. It was quite flattering, how quickly she'd become so possessive. \n\nThen, as I was holding it, it buzzed again. A second message from Jen. \n\nOK u can if u want to but u have to tell me everything after xxx \n\nI nodded thoughtfully. I held it up so she can read it. She also nodded slowly, and looked at me. \n\nThe phone buzzed for a third time. \n\nLennie says its ok too u lucky cow!! Call me after pls! xx \n\n\"Even Eleanor says it's OK,\" said Kaz. Kathryn, I corrected myself. \"Though... you probably have no time. Or the energy. And probably... being in my bedroom freaks you out a little.\" \n\nI didn't say anything. \n\nShe came towards me and reached out and stroked my groin with the tips of her fingers. I reached up and put my hands around her face, framing her. I kissed her. \n\n\"Mmm,\" she said. \"It would seem you're OK with the idea. So, what do you say, Andy? Got time to screw a horny girl... in her own bedroom... while her parents are out?\" \n\nI didn't really. But how often does a chance like that come along? \n\nYou should always be open to new experiences. \n\n** \n\nI knew what she wanted. She wanted the softer, more loving, caring experience, and I was happy to give it to her. Somewhat selfishly, I was glad to be able to love her more slowly, making more use of my fingers and tongue than I'd been able to the previous night. \n\nFor her part she was much more passive and deeply affectionate, wanting to kiss me every time there was an opportunity to do so. Her mouth was welcoming and delicious and tasted faintly of apples. \n\nShe came twice, the first time with her fingers grasping my hair as I teased her clit with my tongue, one finger ever so slowly sliding in and out of her, grazing the top of her sweet wet passage. The second time was when I was buried deep inside her, missionary style, her mouth hungrily locked to mine, her hips grinding against me as she strained and reached for the friction she needed to take herself over the edge. \n\nShe clung to me breathlessly for several minutes after that, sweating and flushed and lovely. I could feel her muscles spasming gently against me as the final waves of her orgasm faded away. \n\nShe kissed me again, a more leisurely, relaxed kiss this time. \n\n\"You didn't come,\" she said. \n\nI shook my head. \"I don't need to. It's been... quite a night for me. And quite a morning.\" \n\n\"That Jen,\" she murmured. \"I can't believe she got to you first. So greedy.\" \n\nShe propped herself up on one arm and looked at me. I had just made love to Kathryn, but now a trace of the old Kaz was in her eyes. \n\n\"But I do like a challenge,\" she said. \n\n\"Kaz... Kathryn... I really do need to get to the office.\" \n\n\"Five minutes,\" she said. \"I bet you you'll be coming in my mouth in five minutes.\" \n\nShe wriggled out from underneath me and rolled me onto my back. My cock was still semi-hard, but I knew there was no way I could come again. \n\nNow I started to worry that this would upset her. I knew girls could suffer from performance anxiety just as much as men, and I didn't want her to think that her body and her efforts -- the whole package -- didn't please me very much indeed. It is much harder for men to fake their appreciation. \n\nI should have remembered that she was a chameleon, sensitive to the vibes coming from others. \n\n\"Don't worry,\" she said. \"It'll happen.\" \n\nThen she kissed me once more, reached over to the side of the bed, and took a long drink from my still warm mug of coffee. She swirled it round, swallowed most but not all of it, and then took my cock into her almost unbearably hot mouth. \n\nI gasped. Maybe... just maybe... she was right. \n\nShe was. \n\n** \n\nI got a faintly disapproving stare from the senior partner when I made it into the office, but he was the kind not to hold a grudge and I thought I'd probably be all right. The practice needed younger blood and I was good at my job. I could have worked in a bigger firm and made more money, but I could see the potential with a smaller firm like this. In a few years old Mr Bishop would retire, and I would be in a position to buy him out. And then I had some major plans for expansion and for belatedly taking the practice into the 21<sup>st</sup> century. \n\nI spent the next few days catching up on my work. I got fairly regular texts from Jen, usually quite excitable and with the occasional horribly indiscreet picture that I had to hastily delete, though not without a sense of reluctance. I also had one from Eleanor, just a nice portrait shot of her, with a few kisses underneath it. That one I saved. \n\n** \n\nI was out getting myself a lunchtime sandwich when I ran into them again. I heard my name being called as I came out of the shop, and looked around to see Eleanor and Jen standing there with their mother. Based on their shopping bags they'd just been to the supermarket. \n\n\"Mr Collins! How nice to see you!\" Linda, their mother, moved her bags into one hand so she could shake mine with the other. I smiled at her and then glanced in what I hoped was a friendly, innocent way at the two girls. \n\n\"You've met Lennie and Jen, haven't you? When you kindly dropped the papers off.\" \n\n\"Yes... that's right. I did see them for... a short time. Nice to see you all again.\" \n\nBehind her mother, Jen made big eyes and blew me a kiss. Eleanor prodded her, going slightly pink. \n\n\"I really must thank you for everything you did for us. You really were a big help.\" \n\nJen nodded vigorously at this and mouthed the words \"so big\" at me with an expression of mock-awe on her face. Then she rummaged in a shopping bag. What was she up to? \n\nI tried to focus on Linda. \"Not at all... I'm glad everything looks like it's finally been sorted. And of course, I'd be delighted to do... anything I can for you in the future.\" \n\nEven Eleanor couldn't resist that. She looked at me, unseen by her mother, and raised her eyebrows questioningly with an amused expression. The implication was clear that she could think of several things I could do for them. \n\nJen had found what she was looking for. A six-inch long bread roll, which she now pulled out of the pack and began to nibble at suggestively. She ran her tongue down it and looked at me coyly. \n\n\"Jen!\" Eleanor's face had progressed from pink to bright red. \n\n\"Sorry... but I'm so... hungry!\" \n\n\"Put it back, Jennifer,\" said her mother. \"I don't want Mr Collins to think I've raised a pair of animals.\" She turned back to me. \"Sorry... sometimes it's like they have no self-control.\" \n\n\"Mum!\" Eleanor was quietly indignant. \"It's Jen, not me!\" \n\nJen frowned, then shrugged her agreement. She looked at me and winked. She conveyed a lot with that single wink. \n\nTheir mother sighed. \"Sorry darling. You're right. I didn't mean to embarrass you. Behave yourself, Jennifer. Well... We must be going. Nice to you again.\" \n\n\"You too,\" I said. I smiled at her and she smiled back before striding away. Jen took the opportunity to lean forward and quickly whisper in my ear. \n\n\"I really want you to suck your cock again! We HAVE to arrange something!\" Then she scurried off after her mother. \n\nEleanor looked at me, then looked around. Then, very daringly, and very sweetly, she kissed me on the lips. A short but oh-so-pleasant kiss. \n\n\"Soon,\" she said. \"Please?\" \n\nI nodded, and watched as she hastily followed the others. \n\n** \n\nA week passed. Work was busy but the girls were never far from my thoughts. My bachelor flat felt rather lonely when I returned there each evening. Sometimes they would text me but that just made us all feel more frustrated. We discussed them possibly coming to see me in my place but there was no way they could have stayed overnight without alerting parental suspicions. It was starting to look like the best option was for them to come to my place for just a few hours one evening before going back home. \n\nBut then a much better option presented itself. \n\nAlthough Jen and Eleanor weren't wild about their mother's new boyfriend - the Bookshop Owner - we all agreed later that we owed him a lot and should probably get all our books from his shop from then on. \n\nThis is why: \n\nMummy is going away with her new boyfriend for a long weekend next week. She says it's for work but we saw her messages. Pleased for her. Anyway, we will be alone at the house from Friday to Sunday night. A whole weekend! Kaz away Friday night but joining us Saturday morning. Please? Eleanor xxx \n\nFor the avoidance of doubt, Jen also sent me a message: \n\nCome fuck us Andy PLEASE PLEASE PLEASE I'm so HORNY!! xxxxx \n\nAnd Kaz weighed in with a single picture, of her lying on her bed in just her panties, one finger in her mouth. The caption said: \n\nCan't wait. Kathryn xxx \n\nAnd nor indeed could I. \n\n** \n\nOn that Friday I tried to make sure that nothing would prevent me from getting away early. I knew that Eleanor and Jen's mother was leaving around 4pm. With luck, I could be out of the office on the stroke of 5pm and with them about twenty-five minutes later. \n\nOf course, at quarter to five my phone rang and Mrs Daniels was on the line, wanting to run through the provisions of her will for a fifth or possibly sixth time. She'd been having a think about her charitable bequests and had decided that the local hospice deserved a little more than the local cat shelter. What did I think? \n\nI managed to keep the conversation down to just twenty minutes but felt vaguely guilty when I eventually hurried her off the phone and hung up. I made some notes to look into it properly on Monday and make her some more considered recommendations. Then I took a deep breath, straightened my tie in the office bathroom mirror, and headed off to their house once more. \n\n** \n\nThere was no snow that night. The night was clear and cold, with stars glistening in the darkening sky. I hummed to myself as I drove. I had no idea what the future held for the four of us, nor even how much longer we could continue seeing each other, but I felt a real affection and yes... even love for the girls that I don't think was entirely down to my sexual self-interest. \n\nBut... I'm probably not the best judge. Certainly my groin was radiating a cheerful, selfish heat as I pulled cautiously into their drive and checked their mother's car wasn't there. \n\nEven as I switched the engine off the front door opened and Jen emerged like a bullet from a gun, galloping over the driveway towards me. I stepped out of the car and was thrown backwards by her momentum as she launched herself into my arms, lips glued to mine. Then, our mouths still locked, she jumped up and wrapped her legs around me. I almost fell over, which wouldn't have been the most elegant and suave start to the weekend -- but it was a wonderful welcome. \n\n\"Jen! At least let him get inside the house! Thank goodness we don't have any neighbours!\" Eleanor stood in the doorway, the light behind her. She was wearing a long flowing skirt and the outline of her slim, lovely legs was clearly visible through the thin material. \n\nHer sister reluctantly relinquished her grip and tugged me towards the house. \n\n\"I should get my bag,\" I said. \n\n\"Get it later!\" said Jen. \"Just... come on! Please!\" \n\nShe dragged me by the hand towards the house. At the door she stopped obediently and looked at her older sister. Eleanor smiled at me and put her arms around my neck. \n\n\"Hello Andy,\" she said. \n\n\"Hello Eleanor.\" I kissed her on the mouth. She seemed to melt into me, pressing the length of her body into mine. Her lips opened slightly and our tongues tasted each other. She was unbelievably delicious. \n\n\"Oh COME ON!\" said Jen. \"Please can we get him inside?\" \n\nEleanor finally pulled away. \"Yes,\" she said. \"But remember what we talked about, Jen.\" She looked at me. \"We thought we'd ease you into the weekend. You have been working hard all week, after all.\" \n\n\"And we don't want you to pull any muscles!\" chimed in Jen. \n\nI laughed, and she looked a little put out. \"Well -- we don't!\" \n\n\"I can't wait to see what you've got in store,\" I said. \n\n** \n\nWhat they had in store was a steaming hot bath, supplemented by various aromatic oils and illuminated by candlelight from half a dozen small tea light candles. Jen helped me take my jacket off and Eleanor, looking slightly self-conscious, kneeled in front of me and undid my shoes and took off my socks. Then, with a more confident smirk, she undid my belt, unzipped my fly, and pulled my trousers down. \n\n\"No playing!\" said Jen firmly, who was now unbuttoning my shirt, her arms reaching around from behind me. I could feel her hard nipples pushing into my back. I noticed that she wasn't above slipping a hand inside my shirt and running her fingers across my chest though. \n\nEleanor slid my boxer shorts down and regarded my semi-hard member with a fond hunger. She touched it once with a single finger - making me gasp - then got to her feet again. She kissed me again, leaning her body against mine. Behind me, Jen snuggled up close against my back, and we stood for a while like that in a kind of delicious sandwich. \n\nEleanor was the one who broke it first. \n\n\"Have your bath. While it's still hot.\" \n\n\"I wish we could all fit in it,\" said Jen regretfully. \"But it's just too small.\" \n\n\"We have plenty of time,\" said Eleanor. \"Go and get Andy his beer, Jen.\" \n\nJen nodded, reached her hand down and gave my now extremely hard cock a friendly tug, then hurried out of the bathroom. \n\nAs soon as she saw her sister was safely out of the room, Eleanor dropped back to her knees and looked up at me. Her eyes sparkled with mischief. \n\n\"I don't see why I should always be the good one,\" she said, and took me into her mouth. \n\nShe sucked me with a gentle enthusiasm for about thirty seconds until we heard Jen pounding back up the stairs. By the time Jen came back into the bathroom Eleanor was putting out a towel and a robe for me, the picture of innocence. \n\nJen carefully arranged my beer on a small table next to the bath, then stepped away. \n\n\"Don't be too long,\" she said. \n\n\"He can take as long as he wants,\" said Eleanor. \"We have the whole weekend.\" \n\nShe looked at me. \"Come and find us,\" she said. \"When you're ready.\" \n\nThen she led her sister out of the room, closing the door behind them. \n\n** \n\nI allowed myself about fifteen minutes of soaking. I closed my eyes and sipped my beer and reflected a little smugly on the two days and nights ahead. I wondered quite what the arrangements would be. I had no doubt that Jen, in particular, would be monitoring everything with a jealous eye to ensure that neither of the other two girls received more attention than she did. But I also knew that the disputes, if any, would be affectionate and playful and resolved easily. \n\nI decided I'd had a long enough soak and eased myself out of the water. I towelled myself dry. They'd left me a robe to put on. I debated putting on some boxers underneath it, but thought that would be against the spirit of the weekend. Jen would have them off inside thirty seconds anyway. \n\nI opened the door and padded along the corridor. There was an envelope with my name on it at the top of the stairs. I picked it up, opened it, and extracted a small card. \n\nOn the card was written: \n\nWe drew lots to see who you spent time with first. An hour with Lennie, then an hour with me. Then maybe we all sleep together downstairs like last time? Depends how you're feeling. J xxx (and E of course!) \n\nThey had both signed it with hearts and kisses. \n\nI remembered where Eleanor's room was and made my way to it. I tapped on it. I heard a soft voice tell me to come in and I pushed the door open. \n\nEleanor lay in her small single bed, blankets up to her nose. \n\n\"Hello Andy,\" she said. \n\n\"Hello Eleanor,\" I said. \n\n\"I can't believe you're really here again,\" she said. \"Sometimes I thought it was like a dream, that night we were all together.\" \n\n\"Yes. I know what you mean. Same for me.\" \n\nShe smiled at me, then rather shyly drew back the blankets. She was naked beneath them, and her body was ripe and young and glorious. I felt my cock transitioning almost instantly from semi-hard to rock hard. \n\n\"Please get into bed with me,\" she said. \"It'll be a bit of a squeeze, but I don't think that'll matter.\" \n\nI shrugged off the robe and walked around to the side of the bed. She gazed with quite open curiosity and hunger at my cock. She reached out a hand and gave it a loving stroke. \n\n\"We're really going to do this. We're going to make love in my bed. Fuck, I mean. In my bed.\" \n\n\"We can make love... or we can fuck... or we can do a bit of both,\" I said. \n\nShe continued her stroking of my cock. \n\n\"I think...\" she began, and then broke off, blushing. \"I mean... it's funny, you develop this kind of personality, don't you, that people think you should always be. And I know the other two, they'd think I'd be asking you to make love to me, gentle and tender and lots of sighing and kissing.\" \n\nShe looked at me earnestly. \"And I'd love that too, I really would.\" \n\n\"But...?\" \n\n\"But... and I hope this doesn't shock you... to start with... tonight... god, I'm so embarrassed!\" \n\nI pushed her gently to the far side of the bed so I could slide in beside her. Her eyes widened and her breathing deepened as my body pressed against hers. \n\n\"Don't ever be embarrassed,\" I said. \"Not with me, Eleanor. Tell me what you want.\" \n\n\"Well... I think I want you to... really use me. A bit like you did with Kaz. I loved watching that, I really did.\" \n\nI smiled. Kaz had been fucked hard and had later wanted me to make love to her gently. And Eleanor had been more lovingly treated and now she wanted what Kaz had enjoyed. And what was wrong with that? \n\n\"Why are you smiling?\" \n\n\"Nothing,\" I said. \"I would love that too, if you're sure.\" \n\n\"Yes... I am.\" \n\n\"You want me to fuck you hard?\" My voice was low but firm. My eyes held hers. \n\n\"Yes... please, Andy.\" ",
        "\"Really use your body for my own pleasure?\" \n\n\"Yes...\" Her voice almost a whisper. She ran her tongue over her lips. \n\n\"Are you wet, Eleanor?\" \n\n\"God... yes... You have no idea.\" \n\n\"Your pussy is all wet for me?\" \n\n\"God yes... please Andy... don't tease me too much.\" \n\n\"Put some on me. Get your fingers wet and rub it on me.\" \n\nShe reached down and moaned as she touched herself. Then it was my turn to groan as I felt her hand envelop my cock, smearing her juices onto me. \n\n\"That's good,\" I said. \"That's good, Eleanor. Now I can fuck you.\" \n\n\"Please Andy, yes, I want you to fuck me.\" \n\nSo, with no real foreplay, no oral, no kissing -- at least not until I was encased deep inside her lovely wet passage -- my first sex of that weekend was a surprisingly hard, aggressive fuck with Eleanor. \n\nI don't think I have ever enjoyed sex more than that. Because although the rutting was animal and harsh and seemingly impersonal, I always knew that the girl who lay underneath me was really special and that this was what she wanted. And yes, it was wondrous to have exclusive use of that delicious body and to pound it and punish it and torment it. I lost count of the number of times she came, although Eleanor told me later she thought it was four or five -- she was a little hazy herself. \n\nWhen I realised that I was close to coming myself I was surprised to find that she was now face down in her pillows, sweat covering her back. I had no memory of us even changing positions. \n\n\"God Eleanor,\" I said. \"I'm going to come. Can I come inside you?\" \n\n\"Yes... if you want... but could you come on me, please? I'd love that. Come on me, Andy. Cover me with your come.\" \n\nI looked at her and saw that her eyes were almost beseeching. My beautiful Eleanor, flushed and aroused. \n\nI thrust several more times until I knew that my orgasm was inevitable. Then, with a great sense of reluctance that almost felt like a sadness, I pulled out of her. She turned beneath me and took a firm hold of my cock, milking me so I shot ropes of come onto her stomach. The first few spattered so far up her that they reached her breasts. \n\nEleanor moaned and shuddered and came one final time herself as she rubbed come all over swollen pussy lips. \"Oh, fuck yes Andy... god you make me want to be such a slut!\" \n\nI collapsed onto her, feeling the wetness that coated both our panting stomachs. Her arms went around me and she held me close. \n\nA minute or so later I rolled off her with a delicious peeling sensation. She laughed as she saw what a state she was in. \n\n\"God,\" she said. \"I really am a slut now, aren't I?\" \n\n\"You're perfect,\" I said. \"Absolutely perfect.\" \n\n\"Mmm.\" She snuggled up close to me. \"I'm so pleased I got you first.\" \n\nI stroked her shoulders. \"Me too. But don't tell Jen.\" \n\n\"No. I won't. And she'll have her fun too.\" She paused. \"In fact, you need to make it extra, extra good for her, please.\" \n\nThere was a slight hint of embarrassment in these last words, and I looked at her curiously. \n\n\"I'll do my best. Any... particular reason?\" \n\n\"Well... those lots we drew. To see who had you first tonight?\" \n\nMy mouth fell open. \"You didn't!\" \n\n\"I did. I wrote my name on both pieces of paper. I'm such a terrible person, aren't I? Poor Jen is much too trusting sometimes.\" \n\nShe somehow managed to look both embarrassed and deeply smug at the same time. I kissed her. \"That's one of the most flattering things anybody's ever done for me. Thank you.\" \n\n\"I feel very guilty about it now. Well, a bit guilty. I'd still do it again. But I expect you to make up for it to Jen for me, OK? I want to hear her screaming her head off.\" \n\n\"When I tell her what you've done, she'll certainly scream her head off.\" \n\nEleanor punched me gently on the arm. \"I know you won't tell her!\" \n\n\"I won't. Scout's honour.\" \n\nShe nestled back into me. \"Mmm... this bit is almost as nice. For me anyway. Just cuddling like this, feeling your body against mine. I love the feeling of having just come really hard. Honestly, if you were here every night I don't think I'd ever want to do anything else.\" \n\nWe lay like that for about fifteen or twenty minutes, just dozing and chatting and enjoying the feeling of each other's bodies. Then there came a tentative and perhaps slightly irritable tapping on the door. \n\n\"The hour's nearly up! And I know you finished screwing ages ago! That bed is so noisy!\" \n\n** \n\nI left Eleanor warm and content in her bed and joined Jen on the landing, closing the door behind me. \n\nJen was wearing a man's shirt that was long on her, just reaching below the tops of her thighs. She saw me looking at her and shrugged apologetically. \n\n\"You wouldn't believe how long I've spent thinking about what I should wear for you. Bikinis, sexy nighties... I even went online looking for sexy underwear, but it's so expensive and... well, I wasn't sure you'd even like it.\" \n\n\"You look great, Jen,\" I said. \"Better than great. You're totally gorgeous. Thank you.\" \n\nShe beamed at me. \"And, it's not going to stay on long anyway, is it?\" \n\n\"Not long at all. Let me have a quick shower, OK?\" \n\n\"Very, VERY quick, please. I don't really mind smelling Eleanor on you, you know. It's kind of nice, in a way.\" \n\nI reached out and touched Jen's face and stroked it. What a find these two sisters were. \n\nAfter my shower I made my way to Jen's room. As I might have predicted, her room was messier and more chaotic than her older sister's. I suspected some last-minute, rather ineffective attempts tidying up might have gone on, as there were piles of clothes pushed almost out of sight behind chairs and a table. \n\nJen was lying on her bed, her shirt unbuttoned now and her puffy teen breasts spilling out of them. She watched as I walked across the room towards her. She was just about to speak when I held up and hand to hush her. Then I dragged a finger slowly across her lips. Her tongue came out and tasted me. \n\nThen, not saying a word, I slipped the shirt from her shoulders and helped her out of it. I directed her to swing her legs over the side of the bed, and then lie back. I knelt between her legs and began to gently lick her damp pussy. \n\n\"Oh fuck yes Andy!\" \n\nShe began to squirm and writhe almost immediately and I held her legs firmly with my hands so she couldn't inadvertently escape from my attentions. I lapped and teased and stroked and did all I could to try and send her as wild as I could. Partly this was for my own selfish reasons -- it gave me a few more minutes of recovery time after my exertions -- but partly this was also me following Eleanor's instructions. Eleanor had asked me to make it as good as I could for her little sister, and this was the best way I knew how. \n\nJen came for the first time after about five minutes, a gentle, soft orgasm which had her whimpering with pleasure. But I knew there could be better and more, and I redoubled my efforts, alternating soft licks and kisses with more aggressive, firmer use of my tongue and fingers. About ten minutes later she came again, this time with a long, heart-felt howl of pleasure that would surely have alarmed any neighbours had there been any. \n\nI pictured Eleanor smiling to herself on hearing it. \n\nHer orgasm lingered on, her hand clutching my head, trying to hold it still even as she raised her hips and ground her soaking wet slit against my face. I waited patiently, knowing that for these few seconds at least anything I did would detract, not add to, what she was experiencing. \n\n\"Oh fuck Andy... oh fuck... I had no fucking idea! FUCK!\" \n\nShe pulled my head up so she could look at me, her eyes wide with wonder. \n\n\"Fuck! That was... like... my biggest one ever!\" \n\nI kissed her and she kissed me back hungrily, smearing her own juices over her face. \n\n\"Please can we fuck now though? Please!\" \n\nI nodded and lay back on the bed. I was rock hard for her now, and ready to try and work her with my cock as best I could in the same way I'd tried with my tongue. I wondered if Jen also wanted something a little different. Kaz had wanted things gentler the second time, Eleanor had wanted things harder and more brutal. What would Jen want? \n\nIt turned out what Jen wanted was exactly the same as the first time. She leapt on me and impaled herself on my cock, plunging me deep inside her with hardly a pause for breath. Then, her mouth glued to mine, she began to ride me energetically and enthusiastically, almost indifferent to my own efforts. \n\nJust as before with Jen, I decided all I could do was lie back and enjoy her. She was young and aroused, full of life and energy and she wanted to use my cock for as hard and as long as she could. She needed my body but, for the moment at least, not a huge amount of active participation from me. I found I could enhance her pleasure by pinching her nipples, gently at first, until she panted at me that I should do it harder. When she finally came -- another long-drawn out wail - she collapsed on top of me, as sweaty and breathless as if she'd run a marathon. \n\n\"Fuck,\" she murmured into my shoulder. \"Fuck fuck fuck.\" \n\nThere didn't seem to be much I could add to that summary, so I kept quiet and stroked her back until she recovered. \n\nShe finally lifted her head and looked at me again. \"FUCK!\" \n\n\"I hope you came?\" I asked politely. \"I wasn't sure.\" \n\n\"FUCK OFF!\" she groaned. \"God, I think I broke my poor pussy. Is that possible?\" \n\n\"I think it could probably do with a short break,\" I said. I was still deep inside her, quite hard but wilting ever so slightly. \n\n\"I don't want to take your cock out though. I feel if I take your cock out I might cry.\" \n\n\"Well,\" I said, putting my arms around her and pulling her close to my chest. \"Your problem is, if you leave it there, I'm going to want to fuck you.\" \n\nI began to gently rock my hips beneath her, easing in and out of her very slowly. She moaned. \n\n\"And I know your poor pussy has been through a lot... but I just want to fuck it, Jen.\" \n\n\"Yes... just gently... oh god sex is so nice...\" \n\nI fucked her gently as I held her to me, pleased to be back in control and able to enjoy her young body. Jen just murmured to herself as I did so, almost imperceptibly at first but then with increasing volume and enthusiasm. \n\n\"Tell me when you're going to come,\" she said. \"I want to taste you. Like before.\" \n\n\"Soon... very soon.\" \n\n\"Come for me Andy... I want you to come in my mouth. You can come in my cunt if you want, but I want it in my mouth if you can please... Come for me Andy!\" \n\n\"Yes... I'm coming now!\" \n\nShe slipped off me and almost with a single movement seemed to slide down me and take my cock in her eager mouth. I exploded into her, relishing the wetness and heat. Jen swallowed and slurped eagerly, working me with one hand while I could feel her fingering herself with the other. \n\n\"Oh fuucccckkk!\" I said. \n\nThat still seemed to summarise things quite well. \n\n** \n\nAfterwards, as we lay in bed together, we heard Eleanor come out of her room and make her way downstairs. \n\nJen peered at me woozily. \"You ready for both of us?\" \n\n\"I'm not sure,\" I said, with some honesty. \"Perhaps we could just watch some TV, or something? Maybe play Monopoly?\" \n\n\"Uh-uh. You're here to be used as sex object all weekend, Mister. May as well get used to the idea. And you've got Kaz to contend with tomorrow, don't forget.\" \n\nI hadn't forgotten. Though at that precise moment, I wasn't sure I would ever be able to get an erection again. \n\nJen looked at me, then spoke in a soft , conspiratory undertone. \"I was going to cheat about you. You won't tell Eleanor, will you?\" \n\n\"What do you mean, going to cheat?\" \n\n\"I wanted you second. I thought maybe you'd be too excited at first. Come too quickly. Kaz told me that the second time is nearly always the best, because the man could go for longer. So, when Lennie told me to pick one of the pieces of paper with our names on, I was going to say it was her even if it said it was me. But, as it turned out, I didn't have to cheat because it did say Eleanor. Wasn't that lucky?\" \n\nI kissed her on the head. \"Yes... that was very lucky indeed. And no, I won't tell her.\" \n\n\"Come on. I'm hungry. Lennie is going to do pizza.\" \n\nJen bounded off the bed and pulled on a robe. I watched her, thinking of the night to come, of Lennie downstairs, and Kaz still to join us tomorrow for the rest of the weekend. \n\n\"You just going to lie there?\" \n\n\"Be right with you,\" I said. \n\nI got up and looked out of the window. The moon illuminated the fields beyond their house. Everything looked white and clean and perfect. It was all very beautiful. \n\nThen I drew the curtains, turned, and followed Jen out of her room and down the stairs."
    ],
    "authorname": "AnnasFriend",
    "tags": [
        "sisters",
        "teens",
        "younger girl",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/on-my-way-home-ch-02"
}