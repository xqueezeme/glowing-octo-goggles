{
    "title": "My Little Ventrue Pt. 02 Ch. 11",
    "pages": [
        "Author's Note: Second edit pass complete! Check out my bio for details.\n\n~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~\n\n~~Julias~~\n\n\"Natasha is here! Lucas has her held hostage! Everything is\u2014\"\n\nMore gunfire, and the line went dead after a single, static snap.\n\n\"Shit shit shit shit shit.\"\n\nHe wasted no time. He jumped out of bed and got dressed while he walked toward his office. Office was a strong word, it was just a room with a computer, and all the weapons he preferred up on the walls. A pistol, a small shotgun, another pistol, a large knife, a small sword, all slipped into various places on his body once he started putting on his belt, vest holster, and suit jacket over top the small armory.\n\nHold on Jack, I'm coming.\n\nHe started dialing his phone when Beatrice grabbed it from him.\n\n\"The fuck are you doing?\" she said.\n\nHe almost echoed the words. \"Summoning the Invictus! I'm going to save my childe.\"\n\nBeatrice kept the phone at bay when he reached for it. \"Fuck man, you're a fucking Invictus triumvirate! If you get between the Ordo Dracul and the Lancea et Sanctum, shit is going to get ugly.\"\n\n\"Ugly? You have got t\u2014\"\n\n\"Lucas is there for the Prince, and no one's going to agree to fight a war because of the death of one young neonate.\"\n\nThe urge to smash her face into the wall hit him with enough force to surprise him. He had to blink a few times and shake his head to dislodge the compulsion.\n\n\"Natasha is there too! She might die as well. And since when did you care about any of this?\"\n\nHer eyes dropped, and she handed him back the phone. \"I don't want a war. I wasn't here for the last one but I bet a lot of Kindred will die if there's another. Just let those two fight each other and the strongest one will come out on top.\"\n\nWas she serious? He glared hard enough to crucify her, and she looked away like a guilty child. He didn't buy it. Beatrice enjoyed violence; maybe not to the level of a war, but she was always one of the first ready to throw a fist.\n\n\"And if Jack gets killed in the process?\"\n\nShe winced. \"Hey I don't want the kid to die either.\"\n\nHis grinded his teeth down inside his mouth until he could practically feel them falling apart. \"I have to do something. How the fuck are they even managing an attack? The sheriff is there.\"\n\nBeatrice tilted her head to the side and started to pick her teeth with her claws. She leaned against the wall, wearing absolutely nothing, and let her eyes roll upward in thought.\n\n\"I...\"\n\n\"I what?\" he said. Bitterness was in his voice, and he didn't care. She was the one stopping him from interfering, and that meant his childe could die. Worse, she was right. If Jack did die, it was doubtful the Invictus would go to war with the judges over it, even if he was a childe of one of the triumvirate. \n\n\"I... guess it might be because of Natasha.\"\n\n\"What, Natasha? Why? Why is she even at the tower?\"\n\nShe was hesitating, he could see it all over her. Why didn't she want to tell him. Even with him staring at her, she started to walk back into the master bedroom. He followed after her, and glared at her while she got dressed. She was stalling.\n\n\"Look, this is exactly what I was worried about. Shit is\u2014\"\n\n\"The fuck. About. Natasha?\"\n\nEnough games. He tried to keep calm, to be polite, kind, to try and understand it from her perspective, but his patience was tightened to nothing but a wire strand. Jack was in danger. Right the fuck now, Jack was in danger and everything was between him and doing something about it.\n\n\"Maria and Lucas are old flames, yeah? And Natasha works for Maria.\"\n\n\"Mhmm.\" He folded his arms across his chest and leaned against the door frame. There was that little kernel of Ventrue inside him that wanted to reach out and force her to tell him everything, force her to obey. He wouldn't do that, he wasn't Viktor, and he loved her. But holy fuck every bit of him was being torn in half.\n\n\"Natasha is the sheriff's childe.\"\n\nGlass shattered in his mind. \"Natasha....\"\n\nTiny, skinny, little Natasha. She was fast, and she had great Mehket eyes. Secrets and shadows were her world, and Julias knew she was always a step above the typical Mehket her age in that regard. But in a fight, she was only as useful as the gun she was carrying. Her stuttering, her shy demeanor, her inability to even look someone in the eye, it always threw him.\n\nBut then, there was the sheriff, the most quiet man Julias had ever known. It fit so well, it made him nauseous that he never pieced it together. It hurt that she never told him; they'd worked together for decades. Questions and questions and more damn questions ate at him.\n\nAnd then, how did Beatrice know? He'd have to ask her, later, when everything stopped burning to cinders around him.\n\n\"You... you think....\"\n\n\"Yeah, I do,\" Beatrice said. \"I haven't seen Daniel much, but he... he had that somber look in his eyes, you know? Like you used to all the time.\" She walked up to him, wearing the dress she was last night, and poked him in the forehead with a claw. \"In that sad way that just begs for someone to come along and fill it. Someone who could have their heart strings tugged at easily, if you knew where to tug.\"\n\nThat stung, but she was right, and he knew it. Just like that, he was the one getting a lecture.\n\nThen she put her hand on his. \"So I'm thinking Lucas is holding her hostage and forcing the sheriff to stand down while he deals with the Prince.\"\n\n\"I can't believe he has her! He can't just take an Invictus hostage, not unless he wanted to risk war with the Invict\u2014\"\n\nMaria. That bitch. The fucking stupid, vain, twisted bitch. She gave Lucas permission to use Natasha, she must have!\n\nHe turned around and headed down the main stairs.\n\n\"Julias? Hey! Where you going?\"\n\n\"I am going to the Elysium tower. Alone.\"\n\n\"Without the Invictus? Are you fucking insane?\" The Nosferatu jumped straight over him and landed between him and the door of his mansion. \"You could get killed!\"\n\nHe tried to push past her, but the damn Nosferatu put her claws against his chest and pushed him back. He was bigger than her, tougher, but she was much stronger, and pushing him back was easy for the little monster.\n\n\"Get out of my way Beatrice.\"\n\n\"No.\" She backed herself against the huge door, and put herself dead center between its two sides. \"Lucas is there to kill the Prince. You heard the gunfire! Jack could already be dead!\"\n\n\"Get out of my way.\" He approached her and tried to push her aside, with strength this time, but the Nosferatu twisted his grip away and pushed him back like he weighed nothing.\n\n\"Come on Julias! You're going to get killed, and I don't want that!\"\n\nHe tried again, grabbed her wrist, put one hand against her shoulder, and put his weight into a throw. She struggled against him, lighter than him, but she got a foot behind his and pushed him backward hard enough that he flew backward ten feet. The monster wasn't going anywhere.\n\n\"Damn it Beatrice, I have to help him!\" He yelled at her from the floor, but didn't bother to get up. She'd just knock him down again.\n\n\"What about me? Huh? What the fuck about me? You're going to get killed and I'll be alone....\"\n\n\"I\u2014\"\n\nShe stomped forward and slammed a clawed foot into the floor in front of him. \"No! No you don't just throw yourself into the middle of shit like you have a death wish.\" Then she kicked him in the boot, hard, hard enough to send him back a bit and send a spike of pain up his limb. \"I thought... you wouldn't... cause I'm....\"\n\nHe was down on his ass, glaring up at the Nosferatu trying to stop him from dying. If a Ventrue's weakness was hubris, a Nosferatu's was loneliness. The look in her eyes was heartbreaking, gut wrenching, and every part of him wanted to get up and hold her. God he wanted to hold her, stroke her hair and promise her he wouldn't leave her like it was some sixties movie.\n\nBut he had to save Jack.\n\n\"...Ok.\"\n\n\"Ok?\"\n\n\"Yes, ok. I won't Rambo in there.\" He held out a hand to her.\n\n\"Fucking good.\" She reached down and plucked him up with enough force to almost yank the shoulder from his socket.\n\nHe looked at her, looked down, looked at her some more, and he could feel his face range from sorrow to fury, back and forth as he struggled with it. He could feel Jack pulling at him, like some invisible thread that caught his throat and was pulling him toward his childe. It was as mindless and powerful as a mother's idiot urge to sacrifice herself to save her child even when it was hopeless.\n\nBut Beatrice was glaring up at him, and when she put her claws on his shoulders, her snake eyes penetrated him like knives. Her expressions mirrored his own, half angry and half terrified.\n\n\"I have to do something though, anything,\" he said.\n\n\"Then just ask.\"\n\nHe blinked. \"What?\"\n\n\"Just. Ask.\" She stepped in closer, lowered her hands to his sides, and hugged him. Actually hugged him, complete with her face pressed against his chest and her body close to his. \"I can help, you stupid fucking cunt fuckhead.\"\n\n\"I di\u2014\"\n\n\"Yeah I know what you didn't want to do, fuckwad. But fuck you and your white knight bullshit.\" Even as she tore into him, she kept her face buried into the jacket of his suit, like a little girl holding her teddy.\n\nHe really was fucking stupid. It was only a year ago when he was alone, with no childe and no love, and that's how it had been for decades. Now this woman was hugging him, holding him, squeezing him like he'd vanish in a puff of smoke if she loosened her grip. He didn't know what to do, all he could think to do was protect the new things he'd been given.\n\n\"Hey,\" he said, and he raised his arms to hug the creature buried against his chest. \"You're right.\"\n\n\"Yeah.\"\n\nHe laughed. \"Yeah. It's just been me for a while since I've had anyone. And now....\"\n\nShe pulled her head away, looked up at him, and clicked her teeth side to side. \"And now you've got a girl and a kid. Yeah, I get it. But do I look like a fucking trophy wife?\"\n\n\"No, no you most definitely do not.\"\n\n\"Hey! Calling me ugly?\" He should have seen that coming. One moment she was frowning at him, the next she was punching him, but then she smiled. \"So, you going to ask?\"\n\n\"... will you help me save Jack?\"\n\n\"Of course I'll help you save your childe you stupid god damn fuckhead.\"\n\n~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\n\"Julias! Get help, get fucking help! Here! Now!\"\n\n\"What's going on?\"\n\n\"Natasha is here! Lucas has her held hostage! Everything is-\"\n\nThe phone exploded in his hand.\n\nHe didn't see who shot the smartphone, but whoever they were they were was one fucking crack shot. And worse still, the other Kindred started unloading bullets upon bullets upon bullets toward Antoinette at the same time. He wanted to jump in there and do something, but dozens of robed Kindred swarmed across the lobby toward them both.\n\nThe mob started to march forward, and with them came more and more bullets. The marble pillars of the lobby chipped and tore apart, and the walls around Jack showered him in chipped rock and metal. The gunfire was no longer just pointed at Antoinette, but him as well. He'd survived getting his body nearly cut in half once, but it was a very close call. He wouldn't be able to survive what Antoinette could, what Viktor could. So he did the only thing he could do as more robed Kindred approached him: he backed away, down the stairway and out of the lobby.\n\nBelow him was the underground network of the Prince's facilities. Black marble walls, a stairway, multiple floors, and deep rooms filled with all sorts of luxuries. But there was no escape from down there. Secure to a fault. Still, it was either that, or deal with the two Kindred who were now at the top of the stairs. They wouldn't kill him, like they wouldn't kill Natasha, unless they had to.\n\nBut that didn't mean they wouldn't put twenty bullets into his feet just to make sure he didn't interfere. And he really wanted to interfere. He could hear the gunfire, he could hear the odd sound of bullets colliding with ash with his vampire ears, and he could hear the screams of terror of Kindred. He'd only seen Antoinette kill two of them before he was forced back into the stairway, but the sheer speed and brutal strength of it was sickening.\n\nThis time, he got a clear view of the brutality when his lover attacked the two approaching Kindred from behind. It was almost comical when both her hands appeared through the Kindred's robes, out through the chest straight through the center. Her hands were flat; she used the tips of her fingers like some sort of blade so she could jam her hands through their bodies.\n\nThat wasn't enough to kill a Kindred though, and Jack had to look away when the Prince swung her hands outward to either side of her with such force, the two Kindred ripped in half.\n\nIt only took a couple seconds, but both Kindred had just enough time to start screaming before their bodies fell to ash. One of them didn't fully turn to ash, but instead turned into a husk of withered skin and bone. A young Kindred, like him.\n\n\"Jack!\" Antoinette said. \"You must\u2014\"\n\nA bullet tore through her face. One moment, Antoinette was standing at the top of the stairs, looking down at him, and the next she was missing a large chunk of her cheek and some teeth. The flesh ripped open, and her teeth provided just enough impact resistance that the bullet continued forward and ripped one half-side of her lips to bits. The pieces of her flesh splattered outward, and turned into tiny flashes of cinder, then ash in a single second.\n\nBefore Jack could even say anything, she was diving forward and out of the line of fire. She scooped him up with enough force that he could feel a rib break, but he was too shocked to even react. All he could do was blink as she carted them down the stairway and into the first level of her underground facilities.\n\n\"If only I had listened to Tony,\" she said. Her voice was quiet hisses between clenched, ruined teeth. \"His network had many escape routes. Mine has none; I did not think them worth the risk of invasion.\" She got around a corner and put her back to it, Jack still held to her chest. \"I never thought someone would risk a kamikaze assault through my front door.\"\n\nHe tried to speak, but instead he just gazed at the sight of her shredded face. It was healing before his very eyes, pale flesh reaching out with the thick, dark blood of Kindred and weaving strands of skin and bone. He could actually see her teeth reforming -- not regrowing, reforming -- in her mouth.\n\nShe set him down, and pushed him further behind the wall with her hand to his chest. \"Stay down.\"\n\n\"I\u2014\" As if they were waiting for him to speak, gunfire started tearing into the wall corner they were hiding behind. Bits of black marble chipped away in small explosions of impact again and again and again until the air was filled with dust and rock.\n\nHe looked around, panic creeping up his legs. Hiding wasn't an option, not really. They'd find them eventually and there was no escape route. They could hide until the police showed up? That would only lead to a mountain of dead police. They could fight? But then he was useless, and whatever that lightning did to Antoinette had gutted her ability to enchant.\n\nFuck he really wished he had a gun.\n\n\"Prince,\" a voice called out. \"Come out and die with honor.\"\n\nAntoinette scoffed. \"There is no honor in death, worthless boy. Daniel should never have spared a zealot such as you.\"\n\n~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~\n\n~~Damien~~\n\nHe gritted his teeth until his jaw cracked. \"Spare me? I was just one of many fledglings, innocent and weak. I had assumed I simply escaped your notice as you slaughtered the priests we looked up to!\"\n\nHe crept further along the wall, sword in his right hand, pistol in his left. The ridiculous weapon combination worked well for a Kindred who could handle the recoil with one hand, and he had spent fifty years mastering it. All for this moment.\n\nThe Prince stuck her head out from around the wall, just enough to take a peak, and he wasted no time taking a shot. He was fast, faster than any Mehket his age should be; fifty years of constant vigilance saw to that.\n\nBut she still managed to dodge it. She was an ancient creature, filled with oceans of vitae, and with far more experience than he and the entire mob he brought with him combined.\n\nIt was a good thing the mob were going to be his shield, to give him the moment to strike when it presented itself. With a low sigh, he sneaked a peak at his fellow Kindred. Some were still with Lucas in the building's lobby, but many had joined him down the stairway into the snake's tunnels. Thirty robed vampires.\n\nThirty meat shields.\n\nHe went silent, absolutely silent, like only a Mehket or Nosferatu could, and approached the corner of the wall. The others though, he motioned for them to approach with no such subtlety, but out in the middle of the hallway the stair had opened up into. He could drink in the strange sights of the Ordo Dracul architecture later; the long, coiling dragons carved into the black marble with white streaks could wait.\n\nThree of his mob jumped around the corner, all with pistols at the ready, but they did not fire.\n\nDamien frowned and stuck his head around the corner. Nothing. Just a long, empty hallway that went on for some distance, with several doors along its sides.\n\nHe could keep going down the stairway, or turn around and go in the other direction of the hallway, but it was a fool's hope that they would connect behind the hallway the Prince had fled down. He stepped into the only option left and walked down the hallway with slow, testing steps. His army did the same.\n\n\"I see where Tony learned to love tunnels,\" he said.\n\n\"Tony learned much from me.\" Her voice carried in the hallway, and despite his ears he could not pinpoint it. There were vents, no doubt for the ghouls the Prince pampered to breathe. Perhaps she was using those to send her voice? That meant the snake was hiding in one of the rooms. He grinned. The hell he would unleash upon her once he found her would be all the sweeter if she was trapped like a rat.\n\nThe first door, he had one of his Nosferatu kick open, but inside laid only ornamental things. Paintings, drawings, and old, occult objects he did not understand. He grunted, and moved on.\n\n\"Tony was a vile snake,\" he said to the air.\n\n\"Agreed.\" Again her voice echoed off the walls. It had to be coming from down the hallway, but beyond that he could not tell.\n\n\"Don't act like you're so above him. He was your childe, and like you said, he learned much from you.\"\n\nThe robes around him nodded and hummed agreement. He could see the fear and worry in their eyes, but also that powerful righteousness of a child of the Lancea et Sanctum. He tried to take pride in that, but found only bile.\n\n\"Tony is dead, and I have only regret for his actions.\"\n\n\"Bullshit! Do you regret when he killed priest Marken? Or Bishop Vance?\"\n\nSilence.\n\n\"That's right, your anarchist childe killed Sanctified! But his acts pale in comparison to what you, your sheriff, and that fool Garry Tones did.\"\n\nMore silence. His anger was starting to creep up into his fingers now, up into his skull until it blinded him. He was very much aware he was letting his fury force him to speak, instead of controlling his tongue, but he no longer cared.\n\n\"Speak, demon! You killed so many of us! Servants of God!\"\n\nThe mob at his side hollered and grunted and cheered, but instead of joining them, Damien only managed a quiet groan. They hadn't been there, none of the Kindred at his side were old enough to have been present for the purge, and their enthusiasm for this snake hunt saddened him. A lust for violence was in them just as much as any belief in their God, but they had no reason to be so enraptured in the hunt, not like him. They were just thugs following Lucas's orders, with an ache to fill their cravings for brutality.",
        "They were his shield for God?\n\nAgain the voice whispered through the hallway. \"You act as if Lucas is innocent. Your sire is a monster.\"\n\n\"Lies!\" This time it was his fellows who called out to the dark hallway.\n\nDamien didn't say anything. Natasha, now Antoinette, they both said the same thing. All Damien could remember from so long ago was a caring family of priests and Bishops, the great Lucas and his mighty word.\n\nNot now, later. He could rebuild the shattered pieces of that serene painting later.\n\nAnother door. The muscle at his side tore this one open as well, with Nosferatu strength and claws and mutations working through metal and marble. A host of his bodyguards stayed out in the hallway with guns at the ready, but those that followed him into the room came to a stunned stop just as quickly as Damien did.\n\nThe room was massive, circular, like a stadium built into the earth. The floor was covered in white lines in what could only be described as a complex weave of mathematical patterns. Circles upon circles upon circles drawn in joined spirals at perfect angles, with every trigonometric math pattern he recognized, and many he did not, connecting into a tapestry of language. The walls of the room were painted with the same white dragons that were found in much of the Prince's inner domain, and the ceiling held a hanging chandelier of twinkling crystal dangling below blue flames.\n\n\"What... is this?\" one of the Kindred asked. The Nosferatu approached the blue-lit room, got to a knee, and put his claws against the floor within the circle.\n\nEveryone jumped back when the floor rippled, like water.\n\n\"What insanity is\u2014\"\n\n\"A Wyrm's Nest.\" Damien put his hand onto the Kindred's shoulder and pulled them back. \"I am sure the serpent studies this, and attempts to circumvent God's curse. Let us begone.\"\n\n\"What's a\u2014\"\n\n\"Do not ask.\" He ushered the few Kindred who followed him back out into the hallway. What power the Prince harnessed there, he would let Lucas handle it. The Ordo Dracul held more secrets than any covenant, and their twisted, hidden ways were beyond him.\n\n\"You built your tower upon a Wyrm's Nest, snake? How arrogant do you presume to be?\" he said to the walls.\n\nThe voice mixed a whisper with a chuckle. \"Tony did the same.\"\n\nThey all stopped. \"W-what?\"\n\nNo answer. Tony's nest was built on a Wyrm's Nest?\n\n\"Bishop Damien, what does she mean?\" A woman, Gangrel, came up to him and stared at him with scared eyes. \n\nDamien shook his head. \"Focus. She deceives, like the snake in the garden. Focus.\" He pointed ahead, and they all started to march again.\n\nDeep and deeper still the hall went into the earth, much as any of Tony's tunnels did. Despite the loud march of his army's boots, no words or actions from the Prince came. Eerie silence was all that awaited them. But after a time, the hallway came to a stop, and a single door remained at its end.\n\nDamien motioned with his fingers, and again his mindless muscle tore the metal apart. Or rather, tried. The deformed Kindred wrap his claws around the handle of the rather flat and unceremonious door, but it did not budge.\n\nConsidering a Nosferatu or Daeva, even young ones, had the strength to throw a person like a baseball, this did indeed surprise Damien. \"Zed, Karla, Casey, Mark.\"\n\nTwo Daevas, another Nosferatu, and a Gangrel stepped up and joined their brother. Hands, claws, and animal ferocity join in. The Gangrel Zed, in particular, managed to morph his hands into monstrous claws that that were just as strong as the dark metal they were trying to tear apart. With five sets of Kindred muscle, devoted and faithful, prying at the door, it finally began to bend. Metal and marble screeched in pain, specs and sparks tore at its structure, and the dark hallway of black was opened up to a cast light from the room that waited them.\n\nIt was like watching a group of monsters peel open a particularly stubborn can of sardines.\n\nBut with time, the door opened. Damien held his sword at the ready with one hand, gun in the other, and watched with careful eyes. She was in there, in this room. He could feel her. He could smell her. The light that crept around the corners of the peeled and bent door beckoned him like a beacon. She was right in there.\n\nAnd once the door was open, it was the others who rushed past him to secure the room. His shields, Lucas had said. His brainwashed, sad, pathetic, idiot shields. His new friends. More of them were going to die, in the very room they were rushing into. Don't think about it, don't worry about it. Focus.\n\nBefore them was a large room with all the amenities any kine could hope for. Again it was black marble, but the color of the bed, the furniture in the corners, the desks and dressers and the fancy sink, all of it had the tone of life. Now that he was in the room, he could smell it too, the smell of flesh and blood.\n\nThe Prince's ghouls were in here. He couldn't see them, but he could smell them, and he could almost hear the sound of heartbeats. This was their room.\n\n\"Her two ghouls are here. Find them. Kill one, and hold the other hostage,\" Damien said. That would bring her out of hiding, and enrage her. A foe blinded by anger was an easy kill. He knew that all too well, and was doing all he could to keep his own rage from boiling over.\n\n\"You got it, Bish\u2014\"\n\nA fist collided with Zed's face so fast, the Kindred was left a headless corpse one moment, then a pile of ash and burning robe the next.\n\n~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~\n\n~~Antoinette~~\n\nJack and the girls were in the bathroom of the ghouls' room. To think that all that stood between the death of those closest to her was just a flimsy bit of metal without even a lock, made her whole body vibrate with rage. She would not have this, could not have this.\n\nThe door to Ashley and Julee's bedroom was strong, but it was not the vault door of her room. She could have tried to run past the mob and hid in her room when they had first attacked, but to do so would have doomed her ghouls and potentially her sheriff. This whole ordeal made it painfully obvious that she should have listened to her childe Tony, and used connected tunnels with more modern defenses, something that could be used to counter-attack. A giant vault door was useless for protecting those you cared about.\n\nShe was not in the bathroom. She was above the entrance to the bedroom, back to the wall and nails sunk into the marble, just beneath the high ceiling. The cost to repair all this damage was just icing on the cake for her hatred.\n\nThe sound of a group of Kindred peeling open the huge door was a screeching announcement of the inevitable.\n\nThey poured into the room, arrogant and bloated with defiance. Robes upon robes, guns of varying sizes, and every blood clan of the Kindred flowed into the bedroom of her ghouls like locusts. Once they were all inside, contained and within arm's reach, she would slaughter them. Patience. She did everything in her power to suppress her presence the way Daniel taught her, but she was no Mehket or Nosferatu; they would find her above the doorway sooner or later. All they had to do was look up.\n\nThen Damien walked in last, her target. The other robes were pressed too close together, too many knives and swords at the ready, for her to jump into the middle of the swarm without losing her head. Just step away from the crowd, little Mehket, and I will clean up the mistake Daniel made fifty years ago sparing your worthless second life.\n\n\"Her two ghouls are here. Find them. Kill one, and hold the other hostage.\"\n\nA flash of red drenched her eyes. Rage so thick it blinded her, coated everything blood red, and had her body tremble with anticipation. Kill them. She was going to kill every last one of them. She would not let them kill her precious ones, not again, not this time.\n\nOne of them was turning around. He was going to see her.\n\n\"You got it Bish\u2014\"\n\nHer fist found this one's face. One moment she was on the wall, and the next she was on the floor, on her feet and hands. She landed with enough force that her claws dug into the floor, and she skidded along it from the inertia. Her fingernails left trails of ruined marble where they scratched through the floor. She had already turned around when realization dawned on everyone's faces.\n\nTo her, it was slow motion, a dance of ages. The Kindred she had killed was crumbling beside her, his head was rolling on the floor already, and in the moment he burst into the smallest spark of flames in second death, she pounced. Thirty robes entered the room, twenty-nine remained.\n\n\"Kill her!\" \n\nThe bishop. Damien. His face seemed determined, yet morose, and split with bitter anger, but it was no matter. He was going to die along with the rest of them.\n\nThe nearest Kindred had a knife, long and shining; it even had a cross carved into its blade. There was just a flicker of awareness in this enemy Daeva's mind that they were not going to survive, just a blink of sadness, but Antoinette did not care. What sympathy she may have had was buried in centuries of shell and concrete, well beyond the reach of this poor fool, even as her hand snapped out with a whip crack and her fingers sank into his skull. She did not bother to hold eye contact as she drove her other hand into their chest, and ripped their head off.\n\nBullets. A swarm of shards of metal fell upon her, each with their own crack of lightning and resounding thunder. She was fast though, and she did not stop moving just to kill one Kindred; that was done in a flowing motion of momentum.\n\nOne bullet managed to clip her shoulder. She could feel the metal tear through her pale flesh and into withered, dry insides, but her vitae was quick to repair and close the hole. It did not matter, she could barely feel it with all her focus on the kill, and she kept pushing forward into the crowd of confused and panicking vampires. Another clipped her leg; again she ignored it. Once she was close to the sea of robes, the bullets stopped, and they had no choice but to engage her in melee.\n\nA Nosferatu with a classically deformed face came at her, and she reached out to grab their jaw. But with all the impatience and lack-of-skill of a brawler, the Nosferatu did not try to engage in combat so much as throw himself at her. The weight of their large body was enough to hinder her forward movement, and then it only got worse when a large Gangrel jumped in beside Antoinette and reached out with her protean claws.\n\nShe would have none of it. It took both hands to keep the Nosferatu from pushing her over, and she dug both sets of her fingers into their hair and scalp before driving their face downward and into her rising knee. The pressure was enough to crush his nose and force her knee into their skull, like crushing a pumpkin with a mallet. The Gangrel got his claws onto Antoinette, but they were not strong enough to stop her from demolishing their friend's skull.\n\nBut now she had animal claws, huge and powerful, wrapped around her arms while two more Kindred stepped into the chaos and slashed at her with short swords.\n\nShe slammed her foot down onto the one holding her, straight into the middle of their own foot with her bare heel. There was a satisfying crunch sound from how the bones in the foot arch snapped, and the scream that followed signaled the Gangrel's grip loosening. She slammed her elbow back, hard enough to split the Kindred's chest open and break the bones of the sternum; not enough to kill a vampire but enough that they were out of the equation.\n\nThe two Kindred taking swings at her with their weapons found her arms were free, and she stepped into their swings to get her fingers around their hands, with the grips of the weapons trapped in their palms. Then she squeezed. Fingers snapped, wrists twisted, and twisted even more when she yanked her hands back with enough force to send both Kindred flying backward. The force was enough to rip their hands from their wrists, and their mangled digits fell apart into ash within her grasp.\n\nThere was a third one with a sword. She hadn't noticed; so many robes, they all blended together like a cloud of fabrics. This woman got her sword straight into Antoinette's side, deep into her waist and intestines. The sensation of smooth metal passing through insides was cold fire. Idiot girl was young and didn't understand how to kill a Kindred. Antoinette backhanded her with a closed fist, which sent the unlucky assailant spinning down onto the floor, only to have the Prince step onto her skull and slam her foot down to pop her head with explosive force.\n\n\"Get her, get her!\"\n\nAntoinette turned to face the crowd, and she smiled at the sight of fear in their eyes as she plucked the foot of metal from her side like an annoying splinter.\n\nBut then two of them pulled out shotguns. A stab wound was nothing. A bullet wound was only slightly more inconvenient. A shotgun turning your torso into splatter art was another thing entirely. She put all her energy into a side leap, but the sea of robes had already started to circle her. Her body collided with several Kindred, and then everything became chaos.\n\nLimbs piled over limbs. With robes in the way, everything became a mess of cloth, but it was alright as long as she felt flesh where her hands and feet were. She sank her claws into something, someone, and ripped whatever it was off of the body that held it. No time to know who or what, just tear and rip until she heard the screams of pain.\n\nDuring all this chaos, Damien was watching. She managed glimpses of him between the Kindred as they swarmed her, but if he did not want to join the madness, that was fine. She would kill him last if she had to.\n\nA few seconds of killing later, her hand found someone's face, and she sank her elder claws into their eyes before slamming their head into the marble floor with more than enough force to crack bone. She used the momentum to push herself into a stand, half-covered in robes and ashes, but rising from the mess of limbs only earned the remaining Kindred a free shot at her with their weapons.\n\nShe tried to jump up and out of the way, but one of the injured at her feet grabbed her ankle. There was only enough time for her to curse. \"Salaud!\" \n\nBullets tore into her like paper. She was no elder Gangrel or Ventrue, she had no way to prevent the bullets from cutting into her and rending flesh from bone. The several Kindred that were near her were firing pistols as fast as their fingers let them, and another who had somehow acquired a fully automatic rifle was holding down the trigger. Even Kindred strength could not keep their panicked shots from firing wide, but from so close, all that meant was many of the bullets aimed for her chest hit her arms, her legs, and her face.\n\nShe reached down, plucked up the injured Kindred who had grabbed her leg, and held their body in front of her. Just a second, just a moment to force her vitae into her wounds to close them. \n\nShe had to keep going, kill them all, slaughter them, anything to stop them from taking what she held dear. Hers! They were hers, she coveted them, held them to her and took care of them, Jack and Ashley and Julee and even Daniel. Hers. She had to save them.\n\nThe Kindred shield in her arms fell apart into ash and sizzling robes. Their comrades had destroyed their body with such ceaseless gunfire, that the young Kindred simply died. She pushed through the ash and pounced at the one of the assault rifle, even taking yet another array of bullets into her stomach as she did. Her suit was nothing but tatters, and much of her bone and insides were exposed.\n\nIt did not matter, she could not stop.\n\nShe swung her hand out toward the Kindred's neck in a slicing motion, but she came up shallow. Her strength was more than enough to make her fingers and fingernails cut through flesh, but only the first half of the vampire's neck was cut open. They fell to the floor and held their ripped open neck in their hands where vitae started to drip out. They were young, and would not last.\n\nSome Kindred were trying to help each other, to cover up wounds that were so massive that dark Kindred blood was pooling out onto the increasing pile of robes of ash and cinder. She would kill them later, but more Kindred circled her, and what few bullets they managed to land on her moving form were no longer healing quickly.\n\nWhen the bullets stopped, another vampire came at her, this one with a fire axe. The approaching Ventrue looked both determined and terrified at once, but Antoinette could only feel the violent need of the beast within her chest. She stepped in toward the axe swing, caught the idiot Ventrue by the throat, and sidestepped the axe before shifting around behind the Ventrue to keep a wall of flesh between her and any more potential bullets. Her grip was enough to crush the girl's throat.\n\nThe chaos only got worse. One of the Kindred with the gun ran at her -- panicked reasoning no doubt - and another with a sword came toward the side she kept her new flesh shield. She snapped out with her right leg, cracked the one in front of her in the temple with her bare foot, and sent the Kindred spinning sideways through the air with a broken neck. Antoinette went with the momentum of her leg, spun around, threw the one she was clutching by the neck behind her -- her finger nails tore the assailant's neck to shreds -- and brought the foot down into a sweeping kick. The Mehket running at her fell, only for Antoinette to run over his body and use it as a step. She made sure to crush the fool child's skull into a splattering mess of bone and ash, and used the force to vault herself into the crowd that stood between her and Damien.\n\nThey were all just young Kindred. None of them were even over thirty-years embraced, not even ancillae, let alone elders. None of them were a threat, not really, not with this meager assault of nothing but guns and claws and knives. They had no speed, no strength, none of them had even attempted a true discipline against her. The bullet holes, the stab wounds, they would heal, and she could heal faster once these puerile infidels were exterminated. These cockroaches, these 'judges' needed to die.\n\nShe bolted for Damien; if she could kill him then maybe the others would crumble under the loss of their Bishop. But the circling robes caught onto her plan like a hive-mind of ants, and overwhelmed her from the front.\n\nThe first one got her fingers in his eye sockets. The second she grabbed by the throat, but a shotgun shell clipped her wrist and tore it open before she could squeeze. With the bone of her arm exposed, the muscle simply wasn't there to constrict, and the Kindred she had caught managed to pull away.\n\nBut she landed a kick hard enough into their side that they bent into a pretzel.\n\nShe ripped her fingers out of the other's skull, with flesh and ash clinging to her fingernails, and punched outward into the one with the shotgun when she triple-stepped toward them. Her whole body was a blur of force and velocity, and the punch crushed the vampire's jaw inward into an explosion of bone shards and teeth.\n\nMovement. A blur, like her. She twisted, turned, did everything she could to pull back from her hasty movement, but it was too slow. The shade of dark was just enough to flicker, like a crack of black lightning between the robes that flowed around her, and just a glint of metal.\n\nIt past her and came to a hard stop, landed with a grace not dissimilar to Daniel, and turned around to face her with sword in hand. Damien.\n\nAntoinette looked in front of her, down, and blinked at the sight of her arm falling onto the floor. She did not feel it, she barely even noticed it, but from the center of her bicep down, her arm was gone. Thick, dark vampire blood came out of the smoothly cut flesh in slow drops.",
        "Pain arrived a couple seconds later, a tidal wave of mind-splitting agony. Move. Do not stop. Her other hand was starting to replace and regrow the shredded wrist, but where once it would have been almost instantaneous, now it was taking time. The oceans of blood in her were dwindling more and more, and each bullet that found her made it that much harder. It did not matter. Move.\n\nTwo more Kindred, seeing an opportunity no doubt, rushed toward her. Balancing with only one arm was beyond difficult, but she spun around and kicked outward with sheer brutality into the closer one's chest. Elegance was gone, all that was left was the frenzy of the beast inside her. She even bared her fangs and hissed -- how disgustingly juvenile of her -- as she sent the Kindred back with a crushed rib cage.\n\nShe tried to switch feet on the return and do the same to the other Kindred with follow-up kick, but with only the one arm, the balance was flawed and the spin was slow.\n\nDamien must have seen it. The boy was fast, so fast for one only fifty-years embraced. He came at her again with the same speed she used, but she was broken, bleeding, tired and blinded with pain and rage. She could not withdraw her leg fast enough.\n\nThis time, she fell onto the floor with a thud. For a second, she felt embarrassed at having fallen over; so unbecoming the Prince of Dolareido. But when she looked out across the floor, and saw that her leg was there, separated from her, it seemed silly to be embarrassed.\n\nShe looked over her shoulder at her removed arm; it had fallen to ash. When she looked back at her removed leg, it too fell to ash. She looked down at herself, and the realization crept up her spine with a sickening chill.\n\nShe was a mess of bone, holes, vampire blood, her suit was ruined and left in tatters, and her hair was awful. With only one arm and one leg left, she could not even get off the floor. Failure rested in her guts like acid, and joined the new layers of visceral pain. She could not stop herself from grimacing.\n\nDamien walked over to her, stood over her, and glared with a sickening mess of anger, exhilaration, sadness, disgust, and chaos on his face. \"You underestimated me.\"\n\n\"... I did.\" It was true. The young man matched her speed and struck at just the right times. So much like Daniel.\n\nDamien growled. \"Say it, snake. Say it again, say that Lucas is a monster. Say it!\"\n\nShe coughed on the vampire blood in her guts until it was on her tongue. What did he want? Why was he doing this? The robed figures around her were as confused as she was.\n\nPart of her wanted to cry. She could not save her lover, could not save her ghouls, could not even save Daniel. She had grown complacent and weak in the half-century of peace, had let weeds grow around her city and in her tower. But then, even if she had known, she felt she would have done it again. How else would she have met that fool boy Jack she loved so much?\n\nShe coughed on a chuckle. Love. How droll. The idea was such a faded thing, crumpled and worn, and only now was she taking it out of the garbage, straightening it, flattening it out, and holding it under the light to see if she could still see what it once said. It was\u2014\n\nA boot to the face woke her from slipping into torpor.\n\n\"I said say it!\"\n\n\"... you already know, stupid child.\" She raised her only arm, winced at the pain, and gazed at the mess of torn open muscle, skin, and chipped bone. \"And... to a stupid child I beg. Do not hurt my loved ones.\" Jack and her ghouls had no way out of the bathroom they were hiding in. They were at the mob's mercy.\n\nHer pleas earned another kick to the face. Kindred kick hard; she felt the bone in her cheek crack, but more pain was meaningless on top of her ruined form.\n\n\"What do you know of loved ones!\" Damien stood over her and kicked her again, and again, this time in the chest. His boots were more than enough to crack her ribs. \"You slaughtered my loved ones!\"\n\nThe other Kindred had backed off, and were looking at each other in bewilderment. They must have never seen this side of Damien. Hate could change anyone at a whim, after all.\n\nShe no longer had the strength to even block his kicks. All her power, all her strength and speed, whittled away by hundreds of bullets, a damn Theban sorcery, and the conviction of this deluded fool. All her effort for peace, intelligence, awareness, all her trials and tribulations to grow Dolareido so Kindred could exercise some wisdom, all gone.\n\nHer head turned back toward him, and she glared. \"The Bishops, the priests, and Lucas himself, they all manipulated you. Under their thumb, your peers were fodder for a war and pawns in the Archbishop's ploy to rule my city with massacre.\" She scoffed with the little bit of energy she had left, and let her head drift to the side with surrender. It was far more information than the idiot man deserved, but with her second death only moments away, she could not resist one last insult for his master. \"Now end it. I have lost.\"\n\n\"No!\"\n\nOh no. No, Jack please. Get out, get out while they circle her!\n\nBut her wishes were useless. Jack, the tiny boy, shorter than all the robes he forced through, found his way to her, and even pushed aside the other Kindred to get to her. All of them were older than him, stronger than him, and armed to the teeth. He could die, and she could not do a thing to stop it.\n\nShe could hear the faint sobs of her ghouls in the bathroom. Everything was crumbling.\n\n\"You won't touch her.\" Jack slammed his boot down beside her, and stood between her and the swordsman.\n\nThe mob laughed, but Antoinette could see it on Damien's face. No laughter, no joy, no glee or passion there. Just anger and misery.\n\n\"Jack... please....\" She reached out with her useless, ruined limb, but she could no longer even squeeze his ankle. \"Go....\"\n\n\"Listen to her, Terry.\" Damien pointed his sword at Jack, and stepped close enough that the tip of the blade touched against the boy's chest. \"I have no quarrel with the Invictus or you. Begone.\"\n\n\"Fuck you. You aren't touching her.\"\n\nThis was not happening. Damien, showing honor, gave Jack an out, and the boy threw it away without hesitation at some fool notion of saving her. If she could, she would be tearing Jack a new orifice.\n\nThe other Kindred stepped closer still, like circling sharks, but Jack did not back down.\n\nDamien was practically vibrating with anger. \"How dare you. This snake ki\u2014\"\n\n\"Shut up!\" Jack brushed the sword aside. His words alone had everyone stunned, and his arrogance had them looking at each other bewildered. \"You aren't touching her. The fuck do I care what a brainwashed cultist says?\"\n\nAntoinette went rigid when Damien slashed. Jack stumbled back a single step, and half-turned just enough so she could see the massive slash that cut him from shoulder to hip. Jack, take the hint, please. Leave!\n\nJack fell to a knee, holding the huge wound, coughing and choking on small drops of dark Kindred blood.\n\n\"You try my patience, child!\" Damien stepped closer and stared down at Jack. \"Now get out of the way.\"\n\nPlease Jack. She reached out, and managed to only lightly tough the boy's leg with her ruined, only arm. Please, go. \"Just... go... please....\"\n\nBut he didn't listen. He stood back up, trembling, but on his feet nonetheless, and stared right back at Damien.\n\n\"Fuck off.\"\n\nAntoinette coughed on her own blood, straining with all her might to grab Jack's leg and push against him. The boy would not budge.\n\n\"Bishop Damien, we don't want a war with the Invictus. Let's just put him out and deal with the Prince.\"\n\n\"You may be ri\u2014\"\n\nJack punched Damien, hard. The young man summoned some strength and put a knuckle into the other man's face hard enough to make a cracking sound.\n\nThe silence that filled the room was colossal. \n\nDamien stumbled back, rubbed at his jaw, and glared daggers into the boy. But Jack stood his ground all the more. He was a trembling mess, Antoinette could see that, but he did not move. Her last shield before death.\n\n\"You're a brainwashed zealot. You're worse than scum.\" Jack spat Kindred blood at Damien's feet. \"You're a tool, someone else's tool at that. Can't think for yourself, can't think at all, can't\u2014\"\n\nAntoinette tried to cry out, but nothing came. She had nothing left, not even for when Damien's sword stuck through Jack's chest and out his back.\n\nJack looked down, and she was sure purely out of reflex, he grabbed the sword that was skewering him, but Damien gave his gun to a nearby Kindred, and used the now free hand to reach out and grab Jack by the shoulder. He kept the sword buried through Jack's chest.\n\n\"I do not think the Invictus will go to war over a single fledgling,\" Damien said. Antoinette could hear the venom drip from his tongue. \"You die with your snake mistress.\"\n\nJack, please.... run.\n\nJack raised his head from the blade, reached out with his hands, took Damien's shoulders, and pulled him in closer. Before she could see what madness would befall her love, the black of torpor pulled her under.\n\nBut she heard it.\n\n\"... look into my eyes.\"\n\n~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~\n\n~~Natasha~~\n\nShe had never felt so useless in her whole damn unlife.\n\nShe was on her feet at least, but Lucas had her neck in his fingers, and every so often the Elder gave her neck a bit of a squeeze to remind her. He may have been weakened with his long torpor, but that didn't mean anything compared to her. He could pop her head off like a cork with a moment's effort.\n\nAnd there was still at least a dozen other Kindred around. They all had their guns pointed at her sire, and they kept taking quick glances at her to make sure she didn't try anything. Not that she could with her hands bound behind her.\n\n\"So, sheriff, what will you do once your Prince is dead?\" Lucas said.\n\nGod he spoke just like a preaching zealot.\n\nDaniel didn't move though. He just sat there at the other end of the tower lobby, kneeling, head hanging, and eyes raised just enough that Natasha could see them. He looked so broken.\n\n\"I imagine you have delusions of revenge, or justice, or some other ridiculous notion.\" Lucas tightened his grip, and raised Natasha up so her legs were dangling. She didn't need to breathe, but that didn't mean his fingers digging into her neck didn't hurt. \"But know that I will keep your childe hostage. If you force me, I will stake her and leave her buried deep underneath the city where only I know.\"\n\nNo response. Her sire was a statue. He wasn't even holding his sword anymore; it was just discarded metal at his side. \n\nIt made no sense. They hadn't spoken in years, and even when she was just a fledgling, they could never connect. Not after she was embraced. Not after losing her life.\n\nIt made her sick. After leaving him, joining the Invictus, and just cutting the man out of her life, he was rendered broken and useless just by her capture. Her weakness, his liability, was going to get the Prince killed. Her self-loathing approached new heights.\n\nShe managed to look around at the robed figures. None of them were as old as her, and she was sure she could take any of them in a proper fight, if she had her sword and her gun. Any of them except Lucas. Think, think, don't stop thinking. Find a way out. Put that Mehket brain to use.\n\nHer thoughts came to a grinding stop when Damien stepped out from the doorway that lead downstairs. He was covered in ashes.\n\n\"Damien! My childe, my prodigy, you live! Is the snake defeated?\" Lucas lowered her and let her rest her feet on the floor, but his grip did not waver.\n\nDamien was hunched over, tattered and worn, with bullet holes and cuts and gashes through his robes. He walked with a limp, and the sword in his free hand was a mess of Kindred blood that was fading to ash. When he came into full view, the cultists around her cheered, and Lucas's grip tightened with what was probably pure joy.\n\nThe Bishop was dragging the Prince by her hair. He'd won....\n\nDaniel's head raised, and he stared at the body of the Prince. She wasn't dead yet, or there'd be nothing but ash, but Natasha was shocked at how Antoinette was still alive. She was missing an arm, a leg, and much of her flesh was missing. She was practically naked, as her clothes had suffered far more bullet holes than Damien. Why did Damien have any bullet wounds? Did the Prince have guns hidden away? Did she even use guns?\n\nDamien came closer, his head lowered, his fingers wrapped into Antoinette's ruined hair. Natasha could see ribs, torn open pale flesh that exposed the cold and withered organs of a vampire. She could even see where a sword had cut clean through the bone of her arm below the shoulder, and the leg at the thigh, with enough speed that the cut went through clean. Damien's work, no doubt.\n\nA part of her was relieved. It was over. They'd won. But the relief washed away the next second; she'd be a hostage until Daniel either died or left the city, or maybe Lucas would let her go once he had the entire city under his thumb and all the powers of his age returned to him.\n\nEither way, it was not a city she wanted to be a part of. Christ, if she could just get away, right here, right now, Daniel would be free to slaughter them all. Poor Daniel. The man was looking at the ruined body of his oldest friend, and he looked even more broken. His eyes were shattered.\n\n\"Come closer my dear friend! I am most surprised you have managed to capture the Prince alive. And I see that you are alone. Most tragic, that so many of your brothers and sisters perished.\" Lucas raised Natasha again, but it was just so he could gesture with both his hands and preach to his group. \"But rejoice my children! We have won! Only Garry remains an enemy, and that young fool will be no match without the Prince or the sheriff's aid.\"\n\nDamien stepped in closer.\n\nLucas kept talking. He went on and on about the future, about building a new regime, about serving God as the damned children they were, about Longinus and monsters and their eternal duty. The Kindred around Natasha cheered more, and they raised their guns in the air, their swords and knives. They even jumped a few times. The Archbishop just couldn't shut up though, and went on about a future in God's plan. He walked over to Antoinette and put a foot on her torso to stand victorious while he gave the final words of some idiotic speech Natasha eventually tuned out. Disgusting.\n\nBut Damien only stepped in closer. Natasha didn't look at the mob, she looked at Damien. His eyes were still downcast, and the more she stared at him, the more she couldn't understand what he was doing. The Prince fought with her hands, so why were their bullet holes in Damien's robes?\n\nDamien got so close, he could have reached out and touched Lucas. He finally let go of the Prince's hair, and just stood there. Natasha tried to glare at him, but his eyes were barren. No anger or turmoil or any of the depression she had seen when she was his prisoner in the altar room. None of that inner conflict that she had tried and failed to appeal to. She could tell the Bishop was not in agreement with Lucas's plans before just from the frustration on his face, but now, his face was void of anything. Like a doll.\n\n\"Bishop Damien, you shall be handsomely rewarded. You all shall be! This was the first step in our new church. The Lancea et Sanctum shall turn this city into a monument to\u2014\"\n\nNatasha fell to the floor.\n\nShe sat there, on her ass, blinking in confusion and looking around in panic. Lucas was no longer holding her, no one was holding her hostage, no one was pointing any shotguns at her or running at her to try and cut her head off. No one was doing anything. Everyone was just standing there, looking at Lucas and Damien.\n\nA loud thunk made Natasha squeak. She looked beside her, and for just one fleeting moment, Lucas looked back at her.\n\nHis head rolled back and forth on the floor a couple of inches, eyes locked on Natasha, a shocked expression burned into his face. And then, he fell into ash.\n\nAnother thunk earned yet another squeak from her. Damien had fallen to his knees with no grace, and dropped his sword beside him. The blade clinked a few times on the floor, and in the dead silence of the lobby, it was like resounding thunder. For a single second, he looked identical to Daniel, a broken man with their weapon beside them, useless. His sword, however, was covered in a fresh coat of vampire blood.\n\nThe Kindred around Natasha freaked. They screamed in horror, looked at each other, screamed some more, and pointed their weapons at the sheriff, at her, at Damien who had just betrayed them.\n\n\"D-Damien killed the Archbishop!\"\n\n\"Fuck! We\u2014\"\n\n\"N-no one move!\" One of them said. A Ventrue, Natasha could see. Ever the first to try and control a situation. The Ventrue pointed their gun at Natasha. \"Move and we'll ki\u2014\"\n\nNatasha screamed. The Ventrue split down the center, from the tip of his head to the crotch. The cut was so fast, so clean, that the Kindred just fell apart like two sticks that were leaning against each other. A shade, a shadow, just a split moment of an image of Daniel was there, and then he was gone.\n\nThe next Kindred to die was the one closest to her. A side swipe of the sheriff's sword cut through their waist, and then into the waist of the Kindred that was next to them. No one had even realized what had killed the first Kindred before the next two died. No one but her; they didn't have her eyes.\n\nShe couldn't use her hands, but she pushed herself across the floor, away from the panicking mess of robes. Another one of them fell apart, and again it was the closest one to her. Kindred blood splattered everywhere. Some of it turned to ash quickly, some of it took its time to fade, some of it even turned into light embers. But it was everywhere.\n\nNow the Kindred knew what was happening. The sheriff was attacking, and they couldn't even see him. Natasha could, just barely, using her Mehket eyes to spot the fast movement of her sire. Even then she could only pierce his cloak of night and speed for that moment he stopped to cut one of the robed figures into nothing but limbs.\n\n\"R-run! Ge\u2014\" This one lost the top half of their head, between the teeth. Daniel had put his blade between their teeth and pushed through their spine, below the skull. What few Kindred remained, screaming and hollering in terror, unloaded all their guns at their now dead friend. Bullets and shotgun shots ripped them apart, but Daniel was just a dark blur, already gone.\n\nNatasha couldn't watch anymore. It was slaughter. She rolled over onto her knees, got up, and sprinted for the other end of the lobby where there was a stairway down to the Prince's basement.\n\nJack! The boy was peaking his head out from behind the wall where the doorway to the stairs was, and once Natasha got close to him, she ducked herself around the corner to hide.\n\nJack managed a smile at her. He looked exhausted. Worse, he too was cut up. There was a hole in the back of his suit, and when she had passed him she saw his front had been slashed open.\n\nBut the kid didn't sit down or take a breather. It looked like he was watching Daniel's slaughter, but when Natasha traced his line of sight, he was in fact staring at Damien and Antoinette.\n\nThe boy was dominating Damien.\n\n\"Madame... Vola....\" he said with a heavy voice.\n\nHer jaw dropped. This kid, not even a year embraced, was dominating Damien? That's how the Bishop got all the bullet wounds; he'd been forced to kill his own.\n\n\"... Master T-t-terry. I'm glad t-to see you live.\"\n\nJulias's childe, he definitely was. And it was scary. Julias was a very strong Kindred for his age. But this little boy in front of her was far stronger than any young neonate had any right to be.\n\nFinally, the screaming stopped. Natasha poked her head out like Jack, and the beast in her gut at last relaxed. Daniel was standing there, sword at his side, surrounded by nothing but the robes of the second dead Kindred. Before him was Damien, still on his knees, but something was different.",
        "The Bishop was trembling.\n\nJack collapsed against the wall and fell onto his ass, hands between his legs, and a smile on his face. Exhausted. Natasha looked past Jack toward the Bishop, and her heart sank.\n\nDamien had reached out for Lucas's robes. He was holding the fabric in his hands, clutching the dirty and ruined fabric to his chest, and sobbing. Daniel stood over him, sword drawn, ready to strike, but Damien didn't seem to care. He just held the robes to his chest and rocked back and forth on his knees. His wails were loud, screams of pain, filled with tears and cries. They tore into Natasha's ears, and she couldn't even raise her bound hands to cover them.\n\n\"Wait!\" Natasha said. She got up again, but stayed by Jack. \"Wait... don't... k-k... kill him.\"\n\n\"I spared him once. I won't spare him again.\" Daniel threw his gaze at her, and Natasha stepped back. The ice there hit her hard, and the fact the man was covered head to toe in more Kindred ashes.\n\n\"P-please. Please he... he d-doesn't....\"\n\nThe front doors swung open. \"What the hell?\"\n\nEveryone turned to face the front entrance. Julias was there, Beatrice too, and they both walked in looking ready to fight. Julias was decked head to toe in weaponry, and had a shotgun at hand. Beatrice, upon seeing the mess before her though, shifted to stay behind Julias.\n\nJack reached out for Natasha and braced himself using her shoulder. \"Julias... awesome. If you don't mind, could you... yeah.\"\n\nThe boy started to fall, and Natasha turned to catch him. Her hands were still tied though, and the poor boy collapsed into torpor. "
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "blood",
        "sex",
        "vampire sex",
        "violence",
        "vampire romance",
        "vampire novella",
        "vampire drama",
        "vampire",
        "supernatural romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-02-ch-11"
}