{
    "title": "Jen & Me Ch. 3: The Wife Gets Involved",
    "pages": [
        "After my initial conquest of Jen (documented in \"Jen and Me: Sis-in-Law Rewards\") things were a little awkward between us. That first weekend had been fantastic, and the sex was raw and uninhibited, but where did it go from there? We had said all along we were just doing this as friends, but there's something about screwing your sister-in-law five times in a period of less than 24 hours that changes the relationship a bit.\n\nAfter the scene with Marisa (\"Jen and Me: Descent into Narcissism\") it was clear that we were crossing some kind of boundary, and were more than just friends. I must say however that Dr. Barton is a genius, and once the swelling and black eyes went away her nose was perfect. \n\nWe weren't just balling indiscriminately. We did stick to the rules, and we always found some excuse, some bet or little incentive, to find our way back to the sack. It might be a new weight goal, a personal best in the gym, or even a sports bet. But we often limited the activity according to the bet, and were amazingly good at staying within the boundaries of the game. \n\nCheryl was a little pissed at me. I told her I'd given Jenny the money for her nose job, as a reward for working so hard to get me into shape. Little did I know that Cheryl also had always wanted a nose job. She got one as a Christmas present. And she got her teeth whitened. And she got the LASIK eye surgery. Dr. Barton and friends are doing all right off of us, about $26K spent, but worth it.\n\nThe sex between Cheryl and I was still improving. My wife had reached her initial goal for weight loss, but made a new goal, and had moved up to running from walking. She was training for her first 10K and had conned her best friend Denise into training with her, after bullying her into losing the 20 lbs. she'd put on after her first kid.\n\nOur improved fitness, energy level, and stamina had us in the best shape we'd ever been in for both of us. And it was reflected in our frequent sexual bouts and occasional weekend marathons. Cheryl was the happiest she'd been since I'd met her. When our sex had been (much) less frequent, she was often unhappy, worried that it was because of her, and perhaps I didn't love her. Sex restored her confidence and a high level of demonstrative affection had even made her a little wilder and more adventurous than ever before. She wanted to have sex outdoors (still away from any likely viewers) and was encouraging some role-playing in the bedroom. We even had our first (!) light bondage session - after eight years of marriage.\n\nDid I mention that life was good?\n\nMy one concern was developing with Jenny. She'd completely stopped dating, and after about 6 months of occasional sex, we were finding excuses to hop in the sack together almost once a week. \n\nNot only that, but we were becoming more than 'fuck-friends'. Once I'd started hanging out with the bigger body-builders in the gym I was privy to the frequent discussions of sex that was going on. These guys were more open about it than anyone I'd ever known, including during my frat days in college. A lot of the guys had 'fuck-friends'. These were typically girls they'd dated, and when they ended the relationship, a lot of the girls were willing to still let these guys screw the hell out of them, sometimes just showing up on their doors for dinner and sex. My guess was the girls were hoping that somehow the guys would come back to them for good. For the guys, it was convenient hot sex, without any of the relationship BS.\n\nJen and I were going the other way. We had started with uncomplicated, wild sex. One of the reasons I was comfortable continuing the relationship was because I figured there was no risk of serious involvement. It wasn't like Jen was going to try to steal me away from her sister. And a good-looking girl like her should have no trouble finding a man.\n\nBut she wasn't trying. Since I'd started working out with her, she'd only had a handful of dates, none in the last six months, and had sex only once in well over a year - present company excluded - and that a pretty miserable event. She was stilling going out on occasions with her work and school friends, but she was turning away the guys without giving them a chance. She and Marisa went out at least once a week. Marisa was trying to get back into the dating scene, but they were both hopelessly picky.\n\nIn the meantime, our sex was now ending up in cuddling sessions, long talks and lots of kissing and sensitive actions. Often during our home 'workouts' I'd find myself in the missionary position, relaxed, screwing away almost like old married couples, and discussing our days and goals, and even dreams. \n\nMarisa came over twice (I benched 320!), and we had some nice sessions together, but no anal for either of them, and I left the little blue pill out of the equation. I guess I was enough for both of them without it. The last time out, Jenny was acting a bit jealous over the attention I gave Marisa (she shouldn't have bet on Maryland). I tried hard to make it up to her once Marisa had left.\n\nIt was March. Spring was in the air. I was afraid she was falling for me. \n\nThe Friday after Cheryl's first 10k, Jen was especially gabby in bed after paying off a bet (whether I could be on time for the gym for an entire week). We were entwined in a figure four, with my cock still inside her, semi-hard, and I was contemplating another quick fuck, while absent-mindedly running my hand back and forth across her ass.\n\n\"Don't remind me,\" Jen sighed, relaxed and resting with her eyes closed after I'd brought her to climax three separate times before finishing myself.\n\n\"What?\" I asked, puzzled by her comment.\n\n\"My scrawny, bony ass. That's what.\"\n\n\"Jen, you have a nice ass, it's tight and sweet.\"\n\n\"How is it you and Cheryl, and everyone else I know can completely change everything about their bodies, and after three years I still have this bony ass. Cheryl got all the curves and I'm stuck with this stick of figure.\" \n\nI had no idea where this was coming from. We had never really discussed her figure much since her new breasts, except for the one time I've already documented. Mostly it just involved me telling her how delicious she was.\n\n\"Jen, if you want to get a round butt, you've got to tailor your workout to it. The workout you're doing now will do the opposite if anything. Endless cycling and light dumbbell work won't do jack for your glutes.\"\n\nWhereas I'm a voracious reader, and study everything I delve into, Jen avoids books and reading outside of school. Once I picked up bodybuilding and working out, I read dozens of books, and researched everything online. \n\n\"Let me work out a plan for you, I'll do a little research, and Monday we'll start a program that will have your pants filling out in back, and the guys pants filling out in front.\" During our discussion the inevitable had happened, and I was screwing her in a quite leisurely fashion. I was still stroking her sweet ass, occasionally teasing her tight little butthole with my finger.\n\n\"If you can get me a round bubble-butt, I'll give you something.\" Jen answered warmly, grinding back on my insistent cock.\n\n\"And that would be...\" I prompted her.\n\n\"I'll let you fuck my new round ass. You can pound that huge cock up my butt. I know you want to. You can be my first. Ooh, you like that do you? The idea of spreading my tight tiny hole and shoving that big fat prick of yours up my ass so far you'll bring tears to my eyes. I saw what you did to Marisa, you can do that and more to me.\" She was teasing me relentlessly, pulling my cock out of her pussy with her hand and rubbing the head around her asshole, actually pressing back against it, almost taking the entire head in her ass, before returning it to her pussy.\n\nThere was nothing relaxing about the way I was fucking her now, slamming my cock in and out, my thumb embedded deep up her ass. \n\n\"Yeah, I'd love to fuck this sweet little virgin hole. And your pretty little butthole is so sweet and cute.\"\n\n\"Bullshit, you just want to screw any ass.\" She gasped out while bouncing off the headboard.\n\n\"No, really. It's tight, just a little light brown at the edges, and so smooth up your sweet little crack. It's the prettiest butthole I've seen.\"\n\n\"I bet you say that to all the girls you fuck ragged.\" \n\nI had to roll her onto her knees, ass way up high, head down in the pillow. \"I just have to see the prize I'll be claiming before too long,\" I told her as I screwed her pussy with long, deliberate strokes. I was holding her cheeks apart, teasing her asshole mercilessly, with one thumb, then a finger, and finally two fingers. The sight was too much for me, and I finally exploded, pulling out and spraying my cum across her ass. I held her hole open allowing several jets of cum to splash right in her ass, and to drip down inside. \n\n\"Damn,\" she exclaimed breathlessly, \"that's quite a response. You DO want to fuck my virgin ass bad, don't you?\"\n\n\"Be ready to workout on Monday, baby, 'cause I guarantee you, this ass will be mine by spring.\"\n\nI'd worry about the increasing closeness, and lack of boyfriend on her part, AFTER I'd had my way with that tempting little brown eye.\n\n* * * *\n\nThat Monday, Jen and I met at the gym extra early. I had asked her to wear a bodysuit and no shorts so we could see the muscles we'd be working on. We had the place pretty much to ourselves except for Jack the manager, and I took her straight to the free weight area.\n\n\"There's no mystery to working glutes. If you're looking for a nice round 'bubble butt' you'll first need to add some more muscle back there. Turn sideways to the mirror - yeah, like that, and clench your butt. See, the muscle is mostly at the bottom, and notice the hard indentation here on the sides. We can fix that.\"\n\nDuring the discussion, I had turned her back and forth in front of the mirror, and was pressing on her butt cheeks, to emphasize the areas we were discussing.\n\n\"Come over to the squat rack. This is the basic exercise for building glutes and quads. It is the ultimate full-body exercise. But in your case, one little change can really build the glutes.\" I was placing two forty-five-pound plates on each side of the Olympic bar. \"Now I'm going to squat with these weights, and I want you to place your hands on my glutes and feel where the muscles are tightest. I'm using pretty light weight for me, so I can do the exercise real slow and under control.\"\n\nJen edged up to just behind me, and placed her hands on my cheeks, about 1/2 way to the side. \"Like that?\"\n\n\"Perfect.\" I replied. \"Now, I'm going to take the weight off the machine, see where the tension is?\"\n\n\"Yeah,\" she answered, \"It's almost like you're clenching your butt.\"\n\n\"Right. Now I'm going to lower this, a few inches, then stop, then a few more inches, then stop, all the way to a full squat. Feel where the tension is, feel the glutes, quads, lower back, all over my legs. It is important you understand where the muscles are being worked.\"\n\nI slowly lowered the weight. She ran her hands all over my legs and ass even up between my legs and around my waist. She made continuous comments about where the tension was, which areas were really hard, etc. She was not gentle, probing and pushing to see just where the feel was. \n\nI noticed Jack would occasionally glance our way, other than him, we had the place to ourselves. \n\nFrom the bottom I raised the weight again, and she continued her touching. I don't know if she noticed Jack observing us, but she certainly didn't act like it.\n\n\"Wow! That is soooo cool, feeling your hard muscles work.\" Softly she added, \"You know this is getting me hot.\"\n\nSquats and dead lifts were a core part of my own regimen and my butt had always been solid. In my new beefed up and ripped condition, my ass in tight jeans got a fairly high level of attention from the ladies. Yeah, I was a little proud. \n\n\"Me too, believe me. But this is training and serious. This is going to be the secret to giving you an unbelievable ass.\" I had racked the weight for a second. A 15 second, single rep squat is hard work. \"Now I'm going to do a few more. Feel the glutes in particular. These will be at normal speed.\" I dropped and did three more.\n\n\"Ok, I can see where the work is. My turn.\"\n\n\"Oh, no, not yet. Time for the 'secret sauce'. I'm going to do a subtle change and I want you to feel the difference.\" This time I spread my feet a little further apart, just a hair more than shoulder width, and moved my feet back about four inches, which resulted in my upper body having a slight lean forward. Just before I started, I concentrated and clenching my abs and glutes throughout the workout.\n\n\"Ready? Here I go.\" I did three straight slow paced squats that way.\n\n\"Ohmigod! Your ass was like a rock throughout the entire exercise! I could feel the upper glutes stretching and tensing under my hands. What did you do?\"\n\nI explained the concept and let her know it was her turn. I stripped the bar down to about 80 lbs., and positioned her feet. Then I guided her through a single squat, stopping her when her thighs were parallel to the ground. She then powered the bar back up.\n\n\"Good. That is the basic exercise. The slight lean will work the glutes more than the other muscles. Now two more secrets. Start the exercise with your abs and glutes tensed, and at the bottom, hold it for about two seconds, and squeeze your ass really hard as you push back up.\"\n\nI held my hands on her ass, to feel that the muscles were doing as expected. She was such a good student; she did it perfectly. \n\n\"Ok, now we'll let you feel some weight. I want to find out just how much weight you can squat.\" I loaded the bar with 120 lbs. Combined with the weight of the bar it was close to 160 lbs. She managed it, but it was clearly difficult. \"That's great, can you take any more?\"\n\n\"Maybe, a little,\" she admitted.\n\nI added ten more pounds and gave her a two-minute rest. With just a little help she managed two. \"Great. That tells me that your normal workout should start with 80 lbs. for fifteen reps, and ending with 120 for six to eight. If you can do more than eight reps, the next workout we add five lbs. across the board.\"\n\n\"Ok, give me five good reps,\" I had stripped the bar down to 100. I fondled her ass through each one on the pretext of checking her form. I gave her a little help on the last one. She was grunting hard, high intensity, and her legs were shaking a bit as we racked the bar. \"Great.\" I told her.\n\nTwo people had finally come in, so I thought we should move onto something a little less titillating.\n\n\"Ok, that is going to do 80% of the work for us. But each Monday and Thursday you are going to do this exercise routine that will have your ass in shape in nothing flat.\" I took her to the side and showed her a wide-leg dead lift and dumbbell lunges. In each case I walked her through the exercise, and had her feel for the muscles doing the work. I had a logbook I had printed for her, and showed her the exercise progression. Three sets of squats, followed by two sets of dead lifts, then three sets of lunges, in each case higher weights and lower reps to build the muscle.\n\n\"No biking, except for our weekend outings for a while, we're going to put you on the elliptical glider with a steep incline to work the glutes. We'll start every workout with thirty minutes of that.\" I showed her how the Precor machine worked, and how to use the setting I wanted.\n\n\"You are going to finish with an ab workout.\"\n\n\"But my abs are great,\" she interrupted, \"I do hundreds of crunches already.\"\n\n\"You have gorgeous abs, and by staying so slim, they really show nicely. But I think you are working almost exclusively the upper abs, and if you follow this routine, you'll work the lower abs and side obliques, that will really give you some definition.\" I took her to the ab workout room, and showed her V crunches and twisting crunches, doing more lifting of the legs than back. We took turns doing the exercises, with more feeling of the muscles involved. I was touching her lower abs, and let my hands wander lower to rub her crotch. She was soaked through.\n\n\"I am so hot; your hands all over me are driving me crazy.\" Jen reached forward and grabbed my obvious hard-on through my shorts. I leaned back and she lowered the top of my shorts, taking my hard cock between her talented lips. I was looking through the mirror into the main room to see if anyone was headed our way.\n\n\"I bet you can't do ten more crunches.\" I told her. \n\n\"You're right, you win, I'm yours, thirty minutes.\" She said after pulling my cock from her mouth. \n\nIt felt like cheating, but I was too hot and horny to care. \"Meet me in the sauna, we should have it to ourselves for a while, no one here looks like they're even 1/2 done with their workout.\" The wet sauna was located between the locker rooms, and accessible from the showers in each.\n\nI took off for the men's changing room, stopped by my locker to dispose of my clothes and grab a towel. Jen was getting there just as I did. She went straight for my towel and within seconds was gobbling down my semi-hard cock. I placed a cup of water on the hot rocks, looked down to see her stroking my hardening cock and talking to it. \n\n\"Get hard, damn you, and fuck me good. Fuck me now.\" Without even acknowledging me, the lowly host of the appendage in question, she turned around, placed one leg on a sauna bench, and slipped my cock into her extremely wet pussy.\n\n\"God! I needed that. Now fuck me.\" She was leaning over, both hands resting on the sauna bench.\n\nNot needing any encouragement, I gave her long hard strokes of my cock, as I dumped another cup of water on the rocks. I wanted to steam up the room, in case anyone finished early and took a shower. Hopefully the steam would hide some of the action.\n\nLooking over my shoulder into the men's shower, I saw Jack, the morning manager, standing against the glass, watching the action. He was obviously enthralled, watching me plow this hot babe in the middle of the gym at 6:30 in the morning. I pressed one finger to my lips, shushing him, and started to really hammer away at her, giving him an eyeful. I could see he was stroking his own cock, which was sticking out the leg of his shorts.\n\nJenny on the other hand was talking a mile a minute. \"Damn, you got me so hot in there, touching me so openly with all those people around, feeling my ass, brushing my twat. I almost came when you put your hand between my legs on that last squat. And the sit-ups, I could see right up the leg of your shorts. Your cock was so hard. God, fuck me, yeah, harder, ohhhhhhh, yeah. God I'm there, I'm there, don't slow down, oh yeah, oh yeahhhhhhh, oh SHIIIIT, FUUUUUCKKK.\" She was shaking hard as she came, and just as she was finishing, I knew it was getting close to time for me.\n\nI fucked her fast and hard, for another minute. For fun I took a cup of the water and poured it all over her back, watching the water run down the crack of her ass. \n\n\"Oh, do that again,\" she sighed - so I did. \n\n\"I gotta come in your hot mouth,\" I told her, turning her so Jack would be getting a great side view, making sure I turned her away from him. She eagerly turned, and sucked me down. Within about fifteen seconds she was doing her Linda Lovelace imitation and swallowing me to the root. I looked over to see Jack whacking his meat at about 100 miles an hour. He was big; he looked longer than me, if not as wide. Something I would file away for possible future use. \n\n\"I'm there,\" I warned her.\n\nShe pulled her head off my cock, and starting stroking my cock, while licking the head and holding it at the edge of her mouth. \"Good, I want a full facial, come for me hard.\" She was stroking hard and fast, just as she knew I liked it. \n\nI looked over to see Jack heading to the shower, leaving a large white pool dripping down the sauna glass door. ",
        "\"Ohhhh, yesssss,\" I hissed as I loosed my first stream of cum on her chin. She was leaning her head back as I loosed several long sticky streams of cum all over her face. Her eyes were closed, good thing, because one stream stretched from her hairline, right down her left eye to her mouth. She finally took my sensitive cock head gently between her lips and cleaned me. Cum was dripping down her cheeks and she was giggling as she finished sucking me off.\n\n\"I hope no one catches me hopping into the shower,\" she laughed, and without another word, headed into the girl's shower.\n\nI turned to take my shower. Entering the tiled area, steam was billowing out of one stall, where I could see Jack was cleaning up. I took the shower stall across from him.\n\nI knew Jack moderately well. Jack was attending college nearby, working on his MBA. He was the guy who took my first application to join the gym, and showed me around. Most of the time he worked the late shift, but I guess he had swapped with Michelle to have this morning.\n\nOnce I had started seriously working with the weights, he had worked with me on occasion, working on form and appropriate workout set combinations. He was in great shape, could move heavy weights, but he didn't have the mass of a bodybuilder. School was keeping him busy, and he was too poor for supplements, but had told me he'd be trying for his ACE certification as a trainer in the summer. Mid school-year the summer looked to be a long ways off.\n\n\"Dude, I hope you don't mind my saying so, but your girlfriend is REALLY hot. I wasn't spying on you, I was just checking the sauna temperature, since I had only turned it on fifteen minutes earlier\".\n\n\"No problem, that was pretty crazy of us, but it's hard for me to turn her down. She's not my girlfriend though, just a good friend and workout buddy.\"\n\n\"Shit! Are you kidding me? Man how come I can't find a workout buddy like that.\" He sounded anguished.\n\n\"Hell Jack, you remember what I looked like a year ago, damn I was over 300 lbs. Jen has been my trainer and motivator, just to get me in here. Plus she added some 'personal' motivation to help me achieve my goals. I'm in the best shape of my life, and I owe it to her dragging my fat ass in here in the first place.\"\n\n\"Yeah, man, a mouth and ass like that could sure motivate me. And did you see her tits? Awesome. I mean, uh, well of course you saw 'em.\" I think he only just understood how openly he was talking about a woman I was screwing.\n\n\"You know,\" I confided in him, \"she's looking for a boyfriend. She could certainly do worse than you, and you do have school and gym in common.\"\n\n\"She's going to school?\" he asked incredulously.\n\n\"Sure, studying digital art and some comp-sci stuff.\" \n\n\"Wow. Could you, like, set us up? I'd love to take her out.\" he was almost begging.\n\n\"Let me talk to her about dating and see if she's ready. If so, I'll give you the lowdown that should give you the inside track. But you'll have to ask her yourself.\" I had stepped out of the shower, and was drying off. I figured Jack must be getting waterlogged. \n\n* * * *\n\nThe next evening I called Jen to set up our next workout, wanting to give her a specialized upper-body workout. She was almost crying into the phone. \n\n\"Oh, Steve. My ass hurts so badly, I can barely sit. What have you done to me?\"\n\n\"Come on, you know it's what you wanted. The first few times it's gonna hurt. I'll set you up with some stuff that should help the recovery.\" I figured some supplements like L-glutamine and creatine would help in the recovery phase.\n\n\"Could you come over and help me? I swear I'm miserable. At least massage some ointment into my butt.\"\n\n\"Ok, let me tell Cheryl I'm headed out, and I'll be over in a bit.\"\n\nI went downstairs to tell Cheryl I was gonna stop by GNC to get some supplements and take 'em over to Jen. I reached the bottom of the stairs and she was waiting for me.\n\n\"What's going on between you and Jenny? And don't give me any shit.\" She was livid.\n\n\"What are you talking about?\" I answered, puzzled, and frankly a little worried.\n\n\"You just had to screw her ass, just 'cause I won't let you do it, didn't you? Tell me the truth! Is that how she paid you for her nose-job?\" She was almost yelling.\n\nPuzzled at first, I realized she must have overheard our conversation.\n\nI laughed in relief, \"Is that what you think you heard?\"\n\n\"I know what I heard, and I can't believe you did that. You bastard.\" \n\n\"Cheryl, I gave Jenny a new high-intensity weight-lifting workout that exercises the butt muscles. She wants a round butt, instead of the skinny little butt she has now. She overdid it, and now she's sore.\"\n\n\"Oh really,\" she snapped.\n\n\"Seriously, I was just coming down to tell you I was headed to GNC to get her some supplements that should help with the soreness. You remember how sore I would be after doing a new workout.\" It looked like I might be dodging a bullet here.\n\n\"Then why are you gonna rub her butt, if nothing\u2019s going on? How many butts do you rub?\" She was still steamed, but it looked like she might believe this.\n\n\"Come on baby, calm down.\" I was guiding her to the living room. \"Listen, why would I want her scrawny little butt, when you are so hot. You know I like a little meat on my bones.\" There was more than a bit of truth to this. I went more for the voluptuous types typically, and Cheryl knew it.\n\n\"So are you going over there to rub her butt?\" She was still sticking to the subject.\n\n\"Jen and I have used Ben-Gay, and other ointments on sore muscles before. When I first started doing the heavy delt workouts and could barely move my arms, remember? She massaged my shoulders before and after workouts for two weeks with ointments - that didn't seem to bother you.\"\n\n\"Shoulders aren't the same as her butt. Are you going to rub her tits too?\" Now she was just being petulant.\n\n\"Cheryl. Jenny and I have been working out for almost a year. You can thank her that our sex life is so good - she's the one that got me into the gym, nagging me. As my workout buddy, we take each other's measurements every month, with calipers to check bodyfat. You know we do that half-nude, stripped to our underwear. We've become good friends, but there is almost no sexual tension between us. If I massage her butt, it's to take the soreness out of the muscles. If I massage YOUR butt, it means I intend to lay some pipe, and pretty damn soon.\"\n\nShe giggled a bit at that, but strangely the laugh turned into almost hysterical weeping. \n\n\"Cheryl, I didn't screw your sisters butt.\" I said this vehemently, and honestly.\n\n\"Oh, I believe you. I almost wish you had. You know, she hasn't been on a date in probably 4-5 months. She's only been going out with Marisa, and now I think Marisa is moving in with her.\" she was still sobbing.\n\n\"So?\"\n\n\"So, Marisa is bi; I think Jenny is turning gay.\"\n\n\"Come on, Cheryl, why would you think that. And why would you think Marisa is bi?\"\n\n\"Jenny told me Marisa was bi, ever since college. And as for Jenny, well for one, she's only dating women - you talk to her almost every day, when was the last time she dated a guy?\" \n\n\"I'm not sure, late summer I think. I guess that didn't work out too well. Going out with Marisa doesn't mean she's dating her, come on, Marisa's married.\" The divorce wasn't quite final yet.\n\n\"She used to talk about guys all the time, guys from work, guys from school. Now she never does. Does she ever talk to you about guys from school or work?\" She asked me.\n\n\"No, I guess not. But she never did talk to me about that stuff.\"\n\n\"Well, I know last year she said she was ready to give up on men, and now it looks like she has. Can't you find a guy for her? She's had nothing but miserable lovers and bad experiences for the last 4 years. She needs someone like you. Some guy who can give her what she needs. Don't you know anybody?\" she asked, clinging to my arm. Her spare hand was working down to my crotch.\n\n\"Well, I don't know. Let me talk to her and see if she is looking to be dating. I haven't heard any mention of Marisa moving in either.\" I was purposefully hesitant here, thinking this whole thing may work out. I love serendipity.\n\n\"One of those young engineers that work for you then. They would love her, can't you set her up with them?\" \n\n\"Come on, Cheryl. We've tried that, I've brought her to work parties, and she doesn't want to have anything to do with those 'geeks' as she puts it. She is so damn picky.\"\n\n\"Steve, we've got to help her.\" Cheryl was opening my pants, and pulling out my hardening cock. Stroking it, she looked up to me, \"If you can get her laid really good, maybe she'll rethink this. You've got to help me.\" She stopped talking to take my cock in her mouth and work it up and down. \"If you do this I'll do anything you want, ANYTHING.\"\n\n\"Well, I'll try, but we don't talk about that kind of stuff much. I don't even know what kind of guys she likes.\" It was getting hard to talk. Cheryl's mouth may not be quite as talented as Jenny\u2019s, but who was I to nit-pick.\n\nShe pulled up again, \"Well, we know she thinks you're cute. She's often told me how lucky I must be, now that you're such a hunk. When you're rubbing her butt, see if you can get her turned on.\"\n\n\"Oh, come on, Cheryl.\" I said, exasperated. \"You don't want me to do that. What would I do if she did get excited? And besides, she's got such a skinny butt, almost like a boys.\" \n\n\"Oh, I don't know. Come on, you've said before that you think she's pretty. Please, do something, think of me when you're rubbing her butt, and of the things I'll let you do if we can just get her a boyfriend.\" She went back down on me, aggressively, sucking hard.\n\n\"I don't know...\"\n\nShe stopped for just a second. And then she dropped a bombshell. \"Maybe I can work out something with Denise spending the night, if you do this. If you can get Jen a boyfriend. Get her laid good.\" \n\nCheryl knew that I had always considered Denise the best looking and sweetest of her girlfriends. Denise had married some over-protective loser, and had a kind of dead-end life. She'd let herself go for a while, and put on some weight, but Cheryl had told me that Denise had been inspired by our weight loss and new-found fitness, and had lost some weight herself. Almost 20 lbs., and the running was starting to tighten up her body.\n\nGod, she is offering me a threesome, if I would screw her sister and get her a boyfriend. There is a God in heaven.\n\nThe offer of Denise, the upcoming ass rubbing for Jenny, and Cheryl's talented mouth and hands were too much for my control, and I let loose in her mouth suddenly, with almost no warning. Cheryl sucked me dry, not losing a drop, then tucked my softening dick back into my underwear.\n\n\"Oh, so the Denise thing did the job, hunh? You know, since you've gotten so buff, I've been telling her about our sex and she's just dripping over the idea of how good our sex life is. You get Jenny laid, I don't care how you do it, I don't care if you have to do it. You get her laid, you get Marisa out of the picture, and I'll get Denise to come down for a weekend, and see what we can't work out.\"\n\n\"I don't know, Cheryl. I'll do what I can. But if I do get Jenny laid, and manage to get her hooked up, you and I are going to have some seriously hot fun together. If you get Denise for me, I'm sure that somehow we can find a fantasy of yours to fulfill.\" I stood up buttoning my pants. \n\n\u201cHow do you know we won\u2019t be fulfilling a fantasy of mine as well?\u201d Cheryl joked.\n\n\"You better stop teasing me, or I\u2019ll never get out of here. I better go over there now, and see what I can do for her. I'll try to find out about this Marisa thing. But no promises.\"\n\n\"Just try, Steve.\" She pleaded, \"Jenny's just confused, help her, please?\"\n\n* * * *\n\nThis was certainly a side of Cheryl I'd never seen before. The last thing I would have expected from her was encouragement with her sister OR an offer for a threesome with Denise. I knew she'd once gone down on a guy with a friend, but that was the closest to a threesome that she'd ever been involved in as far as I knew. \n\nI loaded up with a few supplies from my gym bag, and after a quick stop at GNC to get the supplements, I hauled ass over to Jen's place. She only lived about 5 miles away, so it didn't take long.\n\nWhen I got to her place, I knocked and she yelled, \"It's open.\"\n\nI walked in, and she was lying on her stomach, watching TV, with an ice pack on her butt. \"You've crippled me. I may never walk again,\u201d she pouted.\n\n\"Ok, enough of the melodramatics, I've got some stuff for you to take. First of all, you know you shouldn't have ice on there, you need heat. Have you taken any painkillers yet?\"\n\n\"Nothing,\" she whimpered.\n\n\"Ok, take these pills. Just some plain old boring Advil for the pain, and some glutamine to help with the muscle rebuilding. Each day before you exercise, you take 2 glutamine tablets, then afterwards, mix this powder with 12 oz of water, and drink it along with 2 more glutamine tablets. On days you don't work out, take the powder in water in the morning, and 2 glutamine tablets just before you go to bed.\"\n\n\"What's in the powder?\" \n\n\"Spanish-fly, of course. Really, it's a creatine compound, for added strength and recovery, as well as a variety of amino acids for muscle recovery and added energy.\"\n\n\"Ok, but my ass still is killing me.\"\n\n\"Well,\" I said, \"let me see if I can fix that.\" I removed the ice pack from her butt, and said, \"Let's move you to your room, where I will give you a full back massage, with special emphasis on your sorest areas. You've worked hard lately, and you deserve it. I've got some ointment here we can rub into your sore muscles. \"\n\nI reached down and scooped her in my arms, still belly down, and carried her into the bedroom, where I placed her on the mattress on the floor. \"Let's get this stuff off you,\" I explained, as I started removing her slacks and top. She wiggled a little by way of help, and was soon naked.\n\nI started a thorough massage, working my way down from her neck and shoulders to the small of her back. When I got to her butt, I was much gentler, and slowly, easily started rubbing her ass cheeks. I took some of the Atomic Balm I had brought, and started working a small amount into each of her cheeks.\n\n\"Oh, that feels nice and cool,\" she purred.\n\n\"Not for long,\" I warned, as I got up to wash my hands.\n\n\"And where are you going?\" she asked as I headed out the bedroom door.\n\n\"Just to wash my hands, wouldn't want to get that on any sensitive areas by accident.\" I headed to the kitchen, and used liberal amounts of water and soap to rid all traces of the fiery substance.\n\n\"What is that stuff? It's really getting warm.\" she called out to me.\n\n\"It's call Atomic Balm. It's for sore muscles. It gives a deep penetrating heat that should help.\" I answered as I reentered the room.\n\n\"God, my ass is on fire, I think you used way too much, it's really burning.\" She was wriggling under the intense warmth permeating her ass cheeks.\n\n\"I used only about 1/2 a normal amount, it'll stop getting hotter around now, and provide a nice constant warmth for about the next 1/2 hour. When I played football we got the real treatment. It was torture. When we wanted to really get even with an asshole, a little of that worked into their jockstrap would really do the job.\" I laughed, remembering some worthy recipients of that treatment once upon a time.\n\nI laid a light towel across her butt, to avoid any spreading of the ointment, and resumed the massaging. I was working from the small of her back, down to the top of her thighs. She parted her legs a bit, and I lay down between them, massaging her sore butt through the towel, and planting kisses across that sensitive area where her rear meets her legs.\n\n\"Hey, no funny stuff. Did I say you could have me?\" She closed her legs tight.\n\n\"You're right, I'm sorry. I just got a little heated up.\" I went back to massaging her legs.\n\n\"You know, I just remembered that I did promise you thirty minutes yesterday, but you only used about five in the shower, so I guess you have another twenty-five coming.\" She spread her legs again, and I accepted the invitation, kissing her ass and legs within a hairbreadth of her hot pussy.\n\n\"Wow - that stuff is getting me hot, five minutes ago sex was the furthest thing from my mind, now my ass pain is down to a dull roar, and the fire in pussy is starting to match that in my cheeks.\" She was still wriggling under my ministrations, making an effort to point her pouty nether-lips in the way of my kisses and oral attention.\n\n\"You know where Cheryl thinks I am?\" I finally relented, and brushed my lips across the edge of her swollen pussy lips.\n\n\"Mmmmm, Where?\"\n\n\"Here, rubbing your ass, trying to get you turned on.\" I told her.\n\n\"Right. No really, what excuse did you use.\"\n\n\"Is Marisa moving in with you?\" I answered.\n\nShe raised up a little, onto her elbows and looked back at me. \"Maybe. How did you know?\"\n\nSo I told her about the fears her family had, and about my role in 'bringing her back from the darkside.' It gave us both a chuckle, the irony of it not at all lost. \n\n\"Well, with her divorce, she does need a place to stay. And we do get along really well. But I wasn't sure. I think she expects to share you with me, and I'm not sure I want that. But at least it would give her a place to start, and maybe you could help me find someone for her. But I wouldn't want you screwing Marisa behind my back. If you two do anything, I want to be there.\"\n\n\"Well, of course for you I'd make that sacrifice.\" I was still rubbing her butt cheeks, more thoroughly, still through the towel, and giving a little oral attention to her moist pussy. \n\n\"You sure you can handle this?\" she asked, jokingly.\n\n\"What, seduce my sister-in-law, rescue the lost Marisa from the desperate path of Sapphos, and then satisfy my wife and her best friend for a weekend?\" I retorted. \"It's a tough job but somebody's got to do it.\" I was shedding my pants now, my raging hard-on demanding attention. I took two pillows and placed them under her hips, then entered her from behind, gently, while massaging her shoulders and back. \n\n\"Aaah, that's nice. I guess you can tell Cheryl it worked. You've seduced me - you brazen bastard.\" \n\n\"No way! You are too resistant, too loyal to your sister, and just not that interested. It's going to take a lot of hard work to seduce you, and finally find you a man of your own. I think Cheryl and her friends will really have to encourage me.\" We both laughed at that one. \n\nWe got quiet for a moment, and the sex got a little more immediate on my part, picking up the pace a bit. \n\n\"How come you aren't dating now?\" I ventured, \"And don't tell me you're not getting any offers.\"\n\n\"I don't know. Too busy with school, work, and the gym, I guess. And I AM getting some great sex, it would be a shame to mess that up.\"\n\n\"Please don't say that our occasional times together are interfering; I don't want that. I want you to have what I have - happiness, companionship, love, family. You know I don't sleep with anyone but you and Cheryl - I do love her very much, but I love you for bringing back the joy to my life. You have made my life with Cheryl so much better, just by restoring my fitness and sex drive.\"\n\n\"Don't forget Marisa, I think you've had at least some sexual contact there,\" she reminded me.\n\nI was so comfortable with Jen by now we commonly had these conversations during our sex. We could talk about anything, and never lose a stroke. I had worked my knees under her legs a bit and was sitting a bit more upright. I had returned to massaging her butt cheeks, while I long-stroked her.\n\n\"Oh, that's nice, right there,\" she responded to my latest adjustment. \"I don't know Steve, dating is such a pain, and things are going so well with us now, I don't want to fuck things up either.\"",
        "\"Well, I'll help you in anyway I can. Hey, maybe we'll get lucky and find a decent, well-hung, funny, charming guy that wouldn't mind sharing, or forming a four-way with you, me and Marisa.\" The sensation was perfect and unconsciously I had picked up the pace quite a bit. It was getting harder to concentrate on the conversation.\n\n\"Right. Like that'll happen. Like I haven't tried to get a guy in the past.\" She certainly sounded pessimistic.\n\n\"Just tell me you'll consider any dating opportunities before dismissing them out-of-hand.\" I was really going to town now.\n\nJen was starting to grunt with each pounding stroke into her pussy, she was unusually quiet, just repeating \"Oh, yeah,\" every half-dozen strokes.\n\n\"Shit baby, I can just imagine your ass getting rounder and more full with each session, until I'll be here, driving my hard cock into your virgin ass, holding a big round delicious cheek in each hand.\" \n\n\"Oh, yeah, show me you like it, lover, give it to me.\" She growled.\n\n\"Fuck yeah I'll give it to you. I love fucking your sweet pussy, and can hardly wait to plow your tight little ass. Fuck, you are such a sweet fuck. Yeah. Yeah. Yeah.\" Each of the last statements accentuated with an all out, full force assault on her dripping cunt.\n\n\"Fuck me, Fuck me, fuck my ass, like that, oh yeah...\" she was gasping.\n\nI could only guess that she was imagining what it might be like when I did win the right to fuck her ass. I looked down as this sweet lonely girl, who certainly deserved better than being the once in a while fuck toy of her brother-in-law, and resolved to really do my best to get her in a decent relationship. If that included occasional carnal visits from yours truly, all the better, but if it ended what we had, so be it.\n\nThen the pace was finally too much. \"Oh shit baby, I'm coming, ohh yeah, God your pussy is hot, ooooooohh.\" I unloaded deep in her, then pulled out and tossed aside the towel, figuring by now the ointment would be fully absorbed, and I massaged and kissed her butt-cheeks. \"Poor sweet cheeks, trust me it'll be worth it.\"\n\nShe was quiet for a bit, as I lavished attention on her ass and returned to some gentle massaging of her sore cheeks.\n\nFinally she spoke, rolling over on her side. \"Ok, I'll keep my options open. I think Marisa might want to move in this weekend. If she does, can you help?\"\n\n\"Of course,\" I replied, indignant. \"You don't even have to ask. We'll meet at the gym tomorrow evening, Ok? Well I better be going, and break the bad news to Cheryl, that a) I couldn't seduce you, b) you're mad at me for trying, and c) Marisa is probably moving in.\"\n\n\"You will keep trying though, won't you? Please don't give up on me.\" Kidding aside there was a hint of desperate truth sneaking in at the edge of her comment.\n\n\"I'll never give up on you, I can guarantee that.\" I wasn't even sure what she meant by that, but I was going to do my best to make this a happily-ever-after scenario.\n\n* * * *\n\nCheryl met me just inside the door in her nightshirt. \"Well, what happened?\" I wasn't in the door 5 seconds before Cheryl wanted the lowdown on what I'd accomplished in the hour and a half I'd been gone.\n\n\"She told me to leave, she's pissed at me for hitting on her, Marisa is moving in, maybe this week, and she claims she's not given up on dating, just doesn't have the 'time for it' right now.\" I answered. \"I can't call the visit an overwhelming success.\"\n\n\"So, what did you do, you know, did you try anything?\" There was no effort to sound nonchalant; she wanted the full scoop.\n\nTime for my story.\n\n\"I tried to keep it casual, I got her to lie down on the bed, with just an oversized t-shirt on, and her underwear.\"\n\n\"Sort of like what I'm wearing,\" she interrupted. \n\n\"Yeah, and I told her that I was going to rub some ointment on her sore butt, so I'd have to remove her underwear.\"\n\n\"And,\" she encouraged me.\n\n\"So she said ok, and I pulled them off,\" I continued.\n\n\"Show me how you did it.\" She was really agitated, I think she was getting really turned on by the thought of me trying to seduce her baby sister.\n\n\"Cheryl, I still have some lotion on my hands, maybe it'd be better if I washed up before I touched you. Get this in the wrong place and you'll be really unhappy.\"\n\n\"Ok clean up, take off those silly clothes, and meet me in bed. I want to know every detail.\" She sounded a bit aggravated with me, and she started walking around turning off everything, as I headed upstairs.\n\nThank God for quick thinking. I hadn't cleaned up after doing Jen and was sure that there was a good chance Cheryl might notice I'd just finished fucking someone. I quickly stripped, did a quick wash-up with a facecloth, then applied a little Ben-Gay from the medicine cabinet to my hips. Now I was clean, and the menthol smell should cover any other evidence. I finished by scrubbing my hands, and walked into the bedroom to find Cheryl in the center of the bed, on her stomach. \n\n\"Ok, show me.\" She was relentless.\n\n\"I tried to be casual, yet sensual,\" I explained, \"so I carefully rolled the bottom of her shirt back, exposing her butt,\" I demonstrated by performing the same on Cheryl. \"I then reached down, like this and smoothly pulled them off.\"\n\n\"Did she help?\"\n\n\"Yeah, pretty much like you are, she lifted her hips up and spread her legs a bit as I started, then almost closed them to make the panties easy to remove.\"\n\n\"What kind were they?\" Cheryl asked a lot of questions.\n\n\"Plain white.\"\n\n\"Oh. Too bad, just as I feared. Ok, then what.\"\n\n\"First I placed a small towel across her ass, for a little modesty. Then I pushed her legs together, and straddled them...\" I started.\n\nShe interrupted again. \"Don't just tell me, show me.\"\n\nSo I demonstrated massaging her lower back, under the edge of the shirt, working my hands up her back, and down to the top of her butt, then back up. I started massaging her shoulders, explaining that Jen's shirt started to bind so I convinced her to remove that too. \"She told me to go ahead, so I got up walked around her like this, and pulled the shirt completely off.\" I told her as I removed her shirt. \n\n\"Bra?\"\n\n\"No.\"\n\n\"Did you see her fun-bags?\"\n\n\"No she just lifted enough for me to get it off.\"\n\n\"So...she was laying naked, wearing only a towel, waiting for you.\" She whispered, pensively.\n\n\"Exactly,\" I answered, repositioning myself. I explained how I massaged her neck and shoulders, down her back, across her lower back, and finally started to really start to pay attention to her ass. Cheryl had always loved my massages, and was thoroughly enjoying this one. Cheryl's ass was pretty much everything Jen was looking for (and maybe a little more.) After seven years of marriage, her ass and thighs were one of the places where her weight had started to settle, but her dieting and fitness-walking of the last year had gotten her back to nearly the state where she had been when we met. With the running, it was starting to really firm up.\n\nAfter working on her cheeks for a few moments, I moved to one side and started working my way down one leg, explaining my intention of getting her to open her legs. \"As I massaged her inner thighs, she finally spread her legs about a foot apart.\"\n\n\"Like this?\"\n\n\"A little less. Yeah, like that.\" I worked all the way down to her calf and foot, finally massaging her foot. \n\n\"How was she responding?\"\n\n\"She was pretty quiet, almost half asleep, occasionally saying \"Mmmmm\" or \"that's nice\", always very softly. I then worked my way back up that leg, all the way up her inner thigh, running my fingers within a hair of her, well, you know.\"\n\n\"Say it.\"\n\n\"Well, up to the edge of her pussy. Then I straddled that leg, and resumed massaging her butt cheeks under the towel, before I started working my way down her other leg. During my massaging I kept pulling her leg a little more open, until she was opening up a bit more. This time when I massaged her calf and foot, I bent her knee up, like this and massaged her foot, and gently kissed her instep. She just said, mmmmm, which I took as a good sign. Then I slid her knee open even a bit more as I placed her leg back down, and kneeled between her legs as I massaged both legs back up to her little butt. Like this.\" I demonstrated.\n\n\"Oh, that feels nice. So you could see between her legs?\" \n\n\"Oh yeah, but she wasn't nearly as wet as you are now.\" I gently stroked her moist pussy.\n\n\"Did you do that?\" she exclaimed.\n\n\"No, ...\" I started.\n\n\"Then don't do it now. What did you do?\" \n\nSo I demonstrated by lying down between her legs, hands kneading her cheeks, arms across the back of her thighs. I then placed a soft kiss on the inside of one thigh.\n\n\"Oh that's so naughty. I can feel your hot breath caressing my pussy hairs.\" she murmured.\n\n\"Yeah, on the second kiss, Jenny just sighed a bit and opened up even wider and I could feel the last vestiges of tenseness leave her legs. I let my massaging wander a bit more, up to her lower back, and then down across her cheeks, to between her legs. I pushed the towel away, letting it fall off to one side and continued the massaging. I used my thumbs to gently rub the edge of her pussy, finally opening it a bit and softly blowing on it, like this.\" I finished with her lips separated just a bit and directing my breath across her wet opening. \"She was starting to get wet. She shaves down there, and it was pretty obvious.\"\n\n\"Oh,\" she was breathing hard now, \"I can't believe you had your fingers in Jenny's pussy. What happened?\"\n\n\"Well, it might have been too early, but I reached out with my tongue and tenderly licked the length of her pussy.\"\n\n\"Ooooohhhh,\" Cheryl moaned clearly close to coming.\n\n\"Jenny finally spoke, saying \"Steve...\" in a sort of cautious way. I licked her again, mmmmmm, more deeply, my tongue spreading the lips of her pussy. I was massaging her cheeks again, so I couldn't be faulted for not doing my job. Again, she said my name, \"Steve...\" but nothing more.\"\n\n\"God, you were licking my sisters pussy...ooooohhhh\", she moaned.\n\n\"Things looked good, so I started really working on her, licking, mmmmm, sucking one lip, mmmmmmmmmm, then the other, mmmmmmm.\" Here I stopped speaking letting the actions explain themselves. After about a minute I stopped.\n\n\"God, don't stop!\" she cried.\n\nIgnoring her cry I continued my story, \"After a couple of minutes of this, Jenny finally said, \"We shouldn't,\" but since she didn't tell me to stop, I just slowed down a bit and continued placing kisses around her cheeks, thighs, and pussy.\" I continued with my actions matching my words. \n\n\"It was then that Jenny rolled on her side to look down at me, and once again repeated my name, \"Steve...that's really naughty.\" I grabbed her hips and with a twist encouraged her to continue rolling over onto her back. She did, opening her legs for me, closing her eyes, and placing her hands on her new big breasts,\" I guided Cheryl through these movements, placing her hands on her own breasts, \"and massaging them.\"\n\n\"I went down on her, licking her pussy, diddling her clit with my tongue, sucking on it, even working a finger deep into her pussy.\" I lathered Cheryl's cunt, until it seemed she was about to come again. I then continued the narrative. When I stopped she moaned long and loud, and then started breathing really heavy.\n\n\"Throughout this Jenny would moan little moans, and murmur, \"We shouldn't\", \"Ohhhh, Steve\", and even an occasional, \"Don't\". But she was really enjoying it so I finally slipped 2 fingers in her and really worked on her clit, with my other hand reaching up and squeezing her tit, twisting her nipple, and just really rubbing it. Then I ate her hard, like this.\" With both hands in place, I decided to finally let Cheryl come. I used my mouth and tongue on her pussy and clit until she finally came hard. I kept at her bringing out a second orgasm, which had her crying out \"Jenny.\" I then brought her down slow, finally resting with my cheek on her thigh, and one hand gently rubbing above her pussy.\n\n\"After Jenny finally was breathing normal, she sat up, and said, \"Steve, I can't believe you did that!\" \"It was nice,\" I told her. \"It was wrong!\" she snapped. I apologized and told her I was sorry, but seeing her beautiful naked body under my hands just overwhelmed me, and the sweet scent of her gorgeous pussy just pushed me over the edge and I lost control. \"We can't do anything like that, you are married to my sister!\" she told me. \n\nAt this point Cheryl was lying back, 2 pillows under her head, and raptly listening to me tell the story.\n\n\"I couldn't tell her I had your approval, so I just said, I know, I'm sorry. I then told her if she'd lay back down I'd put the liniment on her and no funny stuff. \"Remember,\" I said, \"nothing serious happened, just a little affection between good friends, Ok?\" \"Ok,\" she responded, hesitantly letting me turn her over, \"just friends. And no funny business.\" And I started massaging her lower back and butt cheeks again.\"\n\nI explained how I rubbed some of the Atomic Balm into Jenny's cheeks, then went to wash most of it off my hands, while it did its work. I told Cheryl that I came back into the room and told Jenny that I had to open my pants because I was really uncomfortable, I had a raging hard-on - which I'm sure she could see. \n\n\"Jenny said, \"Ok, but no funny business.\" So I opened my belt and the top of my pants. In the kitchen I had carefully put the head through the leg opening so my cock was stuck and pointing straight sideways. \"Jenny, I'm stuck, and I'm afraid to touch myself, in case I have any of that on my hands still. It's really hard to get it off. Could you help me? Please?\" She looked at me a moment, stared at my erection in my shorts for a few moments, then finally relented. \"Ok, but just friends.\" And with that she got up on her knees, and reached in and pulled out my cock, which stood at full attention.\"\n\n\"Stop.\" Cheryl interrupted. I had stopped acting out the story ever since she had come. \"Show me.\" \n\nWe both got in position as I had described, even though I was naked. \n\n\"She held it in her hand. Then to my surprise she bent down and kissed the wet head, which was covered in precum.\" Cheryl did as I described. All the action up until now, combined with the story I was making up, had me almost as hard as in the story.\n\n\"She then placed her mouth over the head, and took me deep into her mouth. She closed her eyes, and started sucking me off, stroking with her one hand, cupping my balls within my underwear with the other. She was sucking me deep, then she opened her eyes and looked up at me. She was so pretty then, naked, my cock filling her pretty young mouth, those big green eyes looking into mine. Suddenly her eyes got big, and she stopped. \"What am I doing? What are we doing?\" she asked rhetorically. \"Please don't stop, baby\" I replied, placing my hand behind her head. I pulled her head back to my cock, and she opened wide letting me fuck her face.\"\n\nCheryl was eagerly gobbling me down. I had my hands on each side of her head and was driving deep to the back of her mouth. Her hands were clenching my ass. She was occasionally choking a bit from my onslaught, when I pushed in too far. I finally slowed down and let her dictate the pace while I continued.\n\n\"Suddenly, Jenny pulled away, and said \"No! We can't do this.\" \"Jen, you are so beautiful, so hot, you are driving me insane,\" I told her, \"Watching your mouth engulf my cock, watching my hard dick fucking your sweet face, you're big green eyes looking up at me, it's one of the sexiest things I've ever seen.\"\n\nDespite the action of the story, Cheryl continued her oral attention.\n\n\"\"Steve, you are married to my SISTER!\" she told me, throwing herself back on the bed. \"God what have I done?\" she asked out loud. With my pants and underwear halfway down my legs, I crawled across her body, looking down into her anguished face. When I stopped, my dick was pressed up between her legs, the head probing for her entrance. \"Jen, it's ok,\" I murmured, softly kissing her face. I was tentatively pushing with my hips hoping that I might happen on the mouth of her pussy. She was wiggling underneath my probing, I believe trying to help. \"This is just one good friend helping another friend. You know I love you, and I know you love me.\" I coaxed her. \"As friends,\" she answered softly. \"Friends.\"\"\n\nCheryl had moved back on the bad and guided my cock into her hot pussy. With one hand she made sure it found it's way and soon I was pumping away, sometimes matching the rhythm of the story, other times, just screwing away.\n\n\"Well, I could feel that my explorations had hit pay dirt. The head of my cock was definitely lodged in Jenny's pussy. I started to give it short little pushes, finally feeling the head totally engulfed with her sweet, very tight hole. \"Best of friends.\" I urged, as I grasped her shoulders and slowly drove the entire length of my cock into her hot, tight cunt, only stopping when I was completely sheathed. Her eyes opened wide, and she gasped as I filled her. I don't think she was used to such a thick cock, and I was huge from all the foreplay. She ground her pelvis against me. I reached down with my face to hers, and placing my mouth on hers started exploring her mouth with my tongue. Within moments I was fucking her hard, and she was sucking my tongue deep into her mouth. Her head pulled away, \"NOOOOO! We can't DO this!\" she cried, and pushed me away. I tried to keep my dick in her as I leaned back, but she twisted underneath me. She was gasping for air, flushed. \"You better go now.\" she finally told me. \"Jenny, look at the condition I'm in,\" I pleaded, indicating my cock. \"Steve, go home. Go home and screw your wife.\" I stood up, and pulled my pants up, tucking my poor cock away.\"\n\nActually, I was fucking away at Cheryl's pussy, with a smooth rhythm using full long strokes. It was a good pace and her face was strongly flushed, as she was once again brought to the crest by the idea of me screwing her sister, combined with the actuality of receiving a pretty thorough fucking herself.\n\n\"You poor thing, you really tried,\" Cheryl gasped in between strokes.\n\n\"Once I had redressed, I sat next to her where she was curled up on the bed. I gently stroked her hair and shoulder. I didn't know what to say, so I told her I loved her again, and told her I was sorry, but she was so beautiful, that when she was naked and so close, I just lost control. \"Oh, Steve. I loved it. It was so nice. I came so hard on your tongue, the first time a man has made me come in years. And your cock inside me was just incredible. But she's my sister,\" she answered softly. \"I know,\" I told her. Then I leaned over, gave her a kiss on the cheek, reached down and cupped her breast, giving it a little squeeze, stood up and left.\" \n\nMy pace had slowed down to a nice and easy 3/4 penetration. I pulled out and rolled over letting Cheryl climb on top. \n\n\"Well,\" she started, \"I guess she still likes men. Did you enjoy eating her pussy?\"\n\n\"Once I started really massaging her and rubbing her ass, I did get turned on. And as I was eating her, I couldn't help but think of you and Denise, with me eating one of your pussies while the other went down on me. I hadn't tasted another pussy in over 9 years, it was nice.\" Cheryl was rocking back and forth a little faster now. \n\n\"How was her mouth? Tell me.\" She panted.\n\n\"She was nice. She didn't have any great technique, but she's so pretty, seeing my cock disappearing into that sweet face was a huge turn-on. I was very close to blowing my load in her throat when she stopped. You should have seen her, eyes closed, just enjoying sucking my cock. She easily took the width, which surprised me. No, I wouldn't mind a blowjob from her. God that was hot! And when she looked into my eyes, her mouth stretched wide by my demanding cock, I wish you could have seen that.\"",
        "\"Mmmmmm\", she replied. \"Me too. Tell me about fucking her. You fucked her, fucked my little sister, tell me.\" She demanded.\n\nI pulled Cheryl down on top of me, and grasped her ass, as I started fucking up into her, fucking harder now, feeling the end approaching. \n\n\"It was incredible. Her hard, tight little body underneath me, her hot pussy pushing up to meet my every stroke. Kissing her, feeling her passion, filling that tight pussy, so tight.\" I was squeezing Cheryl's ass cheeks hard in my hands, raising and lifting her, fucking her hard and fast. \n\n\"When I first entered her, it felt like I was huge, and took forever to reach bottom. Then when I was fucking her hard, feeling her little body completely enveloped by me, almost immediately I could feel her coming, her almost virginal pussy clutching and pulsing around my invading cock. I felt so, so... powerful. I was going to fuck her forever. Fuck her tight pussy. Jenny's pussy. Fuck. Fuck her, Fuck Jenny, Fuck Jenny, FUUUUUUUCK.\" I was exploding in Cheryl imagining it was Jenny's young tight virginal pussy. A mythical Jenny that only existed in this story. \n\nI was almost unaware of Cheryl, who was hunched over biting my shoulder and clearly coming as well. \n\nAfter a bit of silence as we both came back to earth, I was stroking her back and hair, telling her how incredible it was with her. \n\nCheryl sat up and had tears in her eyes. She hit my shoulder with a clenched fist. Then a few moments later she hit me again. Then she was pounding on my chest with both hands. \"You fucked my SISTER,\" she shouted at me. \"You ate her pussy, you fucked her face, and you fucked her pussy. You FUCKED her.\"\n\nI didn't say anything, knowing that logic wouldn't work here. This was women's territory, and I was lost. \n\nShe collapsed on me. My cock was still in her, and irrationally, was getting hard again. \n\n\"You fucked my sister, Steve. You fucked little Jenny.\" She was whispering now, clutching me. I was holding her tightly to me with one arm, as I held an ass cheek with the other and I started to grind little strokes up into her pussy.\n\n\"You did it, you fucked her. You ate her; you fucked her. And you loved every minute of it.\" She was no longer talking to me. She was talking to herself. \n\nI was fully erect again, and was fucking up into her slow and steady. \"Because I love you,\" I told her, \"and because I love Jenny.\" I was thinking how I might best broach the question of whether I'd earned a weekend with Denise. \n\n\"Now what?\" she asked me, kissing my neck and shoulder. \n\n\"Call her, tell her I confessed all.\" I improvised. \n\n\"What?\" she asked, incredulous.\n\n\"Call her. Tell her it's not her fault. Tell her we had a deal, since before we were married, that we could each have one affair, no, one every three years, as long as we were open about it and the other approved. Tell her I have three coming, and if I want Jenny to be one that's ok. Tell her you want it to be her, someone you don't have to be jealous about, or worry about stealing me.\"\n\nI was on a roll. \"Tell her she's earned it since it's due to her that I'm in such good shape and our sex is so hot. Ask her to please do this.\" God, sometimes I was inspired.\n\nI was screwing her steady, when I paused to grab the phone and passed it to her.\n\n\"Now?\" she gasped.\n\n\"Now.\"\n\n\"You're ...serious,\" she answered, between strokes.\n\n\"Only if you are, about Jenny.\" I replied, slowing the pace.\n\nA few seconds later she had caught her breath. \"How about tomorrow?\" \n\n\"She's probably beating herself up over this, call her now, it would be the kind thing to do.\" I encouraged.\n\nShe sat upright, slowly rocking back and forth on my cock, and called her sister. It had been a long evening and was now after eleven. \n\nAs soon as she had Jenny on the phone she was talking a mile a minute. She told her I had confessed. She then proceeded to describe most of what I'd told her. She said it was Ok, that we had an agreement, that I was entitled to several affairs, and she wanted to share me with Jen. She then asked her about my lovemaking, did she like it, wasn't I great, how did I taste. Then I heard Cheryl say yes, he is right now. The discussion was certainly getting me hot, and I was fucking Cheryl pretty hard by this point while she was hunched over me. When she said she wished that Jenny were with us in the room now, too, I almost shot my wad on the spot. Then she told Jenny that she was going to invite Denise down for a weekend, and she'd like Jenny to be there too - they could all three do me, and use up two of my three markers. She was quiet for a bit as Jenny spoke. She then asked me to stop a second, and then she turned on the speakerphone, and got on her hand and knees. \n\n\"Ok,\" she said out loud.\n\nFrom the phone Jenny's voice rang out. \"Steve, I do want you to sleep with me. I wish I were there right now. Put your dick in her Steve, if I was there I'd help. Cheryl, how does that big dick feel inside you?\"\n\nI did as she asked.\n\n\"Oh god, in this position he penetrates so deep, and feels so big.\"\n\n\"Oh I know, I didn't think I could take him, he filled me so tight.\" Jenny said. She continued, \"I am so horny thinking about you two, I have a big dildo in me and I'm about to work this vibrator into my butt. I wish it could be you, Steve.\"\n\n\"Jenny, you are so sweet. I\u2019m sorry for the way I came on to you.\" I improvised.\n\nCheryl moaned, \"Ohhh, god he feels good.\"\n\n\"Steve, put your finger in her butt, I would put a vibrator there if I was with you, and then I'd lick your cock every time you pulled out of her.\" \n\nI licked my thumb and slipped it up Cheryl's butt. It went in easily.\n\n\"Oh fuck, fuck, that's nice.\" Cheryl gasped.\n\n\"Wouldn't you like his cock in your ass, maybe with Denise licking your pussy?\" Jenny egged Cheryl on.\n\n\"Oooooh, I've never, not there. He's so thick...\" Cheryl confessed.\n\n\"Steve, please fuck her ass for me, please.\" Jenny wheedled. \"Describe it for me, Cheryl, tell me all about it. I've never done it either, do it for me, please?\"\n\nThings on our end were quiet, as I continued to pound away at Cheryl's pussy, hardly daring to breathe. \n\n\"Please,\" came over the phone, half moan, half beg.\n\n\"Cheryl?\" I asked.\n\n\"Yessss, fuck my ass with your big fat cock. Fuck me hard. Jenny you listen while he fucks my virgin ass with his great big cock.\" Cheryl grunted spitting the words out between clenched teeth. She whispered, \"I did tell you 'anything'.\"\n\nI got up from the bed and retrieved a jar of Vaseline from the bathroom. Cheryl had been talking softly to Jenny and moaned loudly as I remounted her, continuing my assault on her pussy, while I prepared.\n\n\"OOooh! He's got his finger in my ass and he's working it around. Did you hear that? Did you hear him slathering Vaseline on my tight little asshole? OOooow, ow, gentle, lover, is that two fingers now?\"\n\n\"That's two and you are about ready I think. Jenny, you should see this. I've got her butt opened up so nicely, and the view of my cock going in and out while two fingers pump her ass - it's amazing.\" I couldn't believe this was happening.\n\n\"Do it Steve, you fucked both our mouths and pussies today, now fuck her tight ass.\"\n\n\"Come on Steve, don't leave me waiting. You've wanted to fuck my ass for 10 years; do it. Fuck my ass, Steve.\" Cheryl was wiggling her butt, her head pressed down into the pillow.\"\n\n\"Fuck her Steve, fuck her like you'd fuck me if I was there. God I'd lick your ass Steve, while Denise licked Cheryl's pussy. You like that wouldn't you Cheryl, sweet little good-girl Denise, her face shoved into your pussy, seeing Steve split your ass wide open.\"\n\n\"He's starting. I can feel the big head pushing against my tiny hole. GAAAAAAAWWD! Oh, stop- AAAAAHHHH, owwww, oh Jen, he's ripping me apart, owwww, he's sticking a baseball bat up my ass - stop it doesn't fit! JEN!\"\n\n\"Slowly Steve, let her get used to it - slowly.\"\n\n\"Jenny, it looks so incredible, she screamed when the head popped in, I only have about 2 inches in her. Her ass is stretched so tight.\"\n\n\"Cheryl, how is it?\" Jenny asked.\n\n\"Ohhh, Jesus that hurt. He's not tearing my ass open, I guess it's ok, it feels odd, oooowwww, slowly, SLOWLY.\"\n\nI was now pushing for more penetration, short strokes, insistently squeezing in a quarter of an inch at a time. Cheryl was huffing and moaning but I was more than half way in. \"Jenny, I'm half in. She's taking it.\"\n\n\"Fuck, fuck, fuck - he's so damn big in my ass. It's like I'm trying to take a dump, and it's stuck. OOOOOOOOOWWWWWWWW, FUCK - STOP!\"\n\nI had felt the resistance ease up and pushed most of my cock in. Only about an inch remained outside.\n\n\"You did it baby, you took the whole thing,\" I told her.\n\n\"It's in?\" asked Jenny.\n\n\"The whole thing? That beast is in my ass?\" asked Cheryl.\n\n\"All of it. Now I'm going to fuck you.\"\n\n\"Slowly, Steve, please.\" Cheryl pleaded.\n\n\"Fuck her\" Jenny hissed, \"Fuck her butt-hole.\"\n\nI started fucking her with about two inches, and I could feel as her tight hole finally loosened up enough for more vigorous action. Holding her butt cheeks, I was soon fucking her with my entire cock, long strokes, that actually did bottom out. I was stretching her ass all out of shape; I was so excited. \n\nCheryl was babbling now, \"That's it fuck me, all of it uuuunhhh, fuck, uuuunh, I'm taking it all, up the ass. God, ohh, yeah. Yeah. Like that. You like my tight ass. My tight, tight ass. Who's tight now - FUCK, uuuunh, ooh yeah...\"\n\n\"Tell me, Steve,\" Jenny spoke out.\n\n\"She's got it all. I'm fucking her with everything I got. All the way out, and all the way back in. It's amazing. She is so tight, I'm gonna come soon.\"\n\n\"If I was there, I'd make you pull out and come in my mouth.\" Jenny said.\n\n\"God Cheryl! Your ass is so sweet! You're sister is listening to me ream your ass for the first time. I'm going to come, feel me getting even bigger? You are going to take my cum way deep inside your ass, tell me if you can feel it, Ohhh, I'm there, I'm there - AAAAHHhhhh\", I dumped my load of spunk driven in to the hilt.\n\n\"Oh my god, I felt every spurt, it burns deep inside me! God that was the most intense feeling!\" Cheryl blurted out.\n\n\"God, I came so hard here you couldn't believe it!\" Jenny confessed. \"Thanks so much for sharing that with me.\"\n\n\"That was incredible,\" I gasped as I collapsed onto my side. \n\n\"You know, Jenny, I'm going to want to watch you try to take him up your ass.\" Cheryl told her. \"Turn about's fair play.\"\n\n\"I know, and when he does, I want you there too. Goodnight now, I love you both.\" \n\n\"Night, sis,\" Cheryl managed.\n\n\"Night Jen, we love you too.\" I hung up the phone."
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "workout buddy",
        "anal",
        "wife anal",
        "sister-in-law",
        "phone sex",
        "massage",
        "angry sex",
        "exercise"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/jen-and-me-ch-3-the-wife-gets-involved"
}