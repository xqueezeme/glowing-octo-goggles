{
    "title": "The Runesmith Chronicles Ch. 15",
    "pages": [
        "Welcome back!\n\nA lot of people have been waiting for this chapter :D 'nuff said\n\nAs always Votes and feedback are greatly appreciated!\n\nI also update my bio with my current projects each time I release a new chapter :) \n\nCheers!\n\nBlu\n\n***\n\nKal, Ikuno, Bea and one of Aradelle's vines approached the spectral wolf's remains in hopes of finding any kind of information. Two long black streaks of decayed plant matter starting just beyond the edge of Aradelle's clearing led them to where it had met its end. It was easy to see, however, that any hope of evidence pertaining to who sent it and why it was looking for Ikuno had dissolved into a bubbling, smoking pool of sickly yellow blood laced with black streaks.\n\n\"Any ideas?\" asked Kal\n\nIkuno stared at the bile-colored pool in front of them, \"Unfortunately no, I never had any desire to get to know any necromancers. Most of them are a vile sort, unpleasant personalities and always reeking of death and decay, well most of them anyway.\" She turned to Aradelle's vine and the blue orb it was holding, \"You said that it was able to speak?\" the vine nodded, \"To say that I didn't like necromancers doesn't mean I didn't have dealings with them over the years. I've seen plenty of these and never ran across, or even heard of, one with the ability to talk. From what little I've read on necromancy giving a raised creature any more than basic functions requires an active connection to the caster.\"\n\nShe waved at the puddle, \"That would be foolish for one of these necro-wolves, they're considered disposable. Set them on their target and walk away. If they are destroyed first in most cases their death will kill the mark anyways. If they take enough damage they are often designed to explode and cover their mark in acid. Aradelle got extremely lucky that one of her ancestors had experience with one.\"\n\n\"Do you think it could have actually killed you?\" asked Kal\n\n\"The acid is magically strong, I would have had only seconds to wash it off if it had cornered me in my cave,\" she gave him a look of genuine concern. \"No, I don't think I would have, at least not with the spells I have now.\"\n\nKal was feeling a bit shaken, though he didn't show it for the sake of Aradelle and Bea. Since he met the oni she had been this indomitable force in his life. Knowledgeable, powerful, strong, wise, and able to stare down three Knights of the Lion's Shield with a grin, yet here she was admitting that one of these spectral wolves could have killed her. He was so accustomed to thinking of her as physically invulnerable that he was having a hard time accepting this small dose of reality.\n\n\"Quit looking so worried, Kal. That's only a worst-case scenario. If I had any warning I'd just tap it with this,\" she said summoning her iron club to her hand. \"One touch is all it takes. After that, it's just a corpse of a dire wolf.\"\n\nBea took a step back from the large spiked weapon, \"What on earth is that?\"\n\n\"Something that creatures that are sustained by magic and wizards alike are wise to be scared of,\" said Ikuno as she bent down and barely touched the puddle with one of the spikes near the end of the club. The yellow color of the puddle turned to a reddish brown and almost instantly stopped smoking. \"It absorbs magic,\" she told Bea standing back up and inspecting the spike for damage.\n\nAradelle's vine popped up beside Ikuno, looking agitatedly between the club and Ikuno, the oni laughed when she figured out what the vine was getting at. \"I never needed to summon it while you were around,\" she said almost mimicking Aradelle's own words from a few days earlier.\n\nThe vine managed to do a convincing representation of rolling its eye.\n\n\"Is there any way to track it back to who sent it?\" asked Kal trying to steer the conversation back to the current issue.\n\nBea answered first, \"Aradelle asked me to fly up to look around before you two got here and see if my eyes could pick anything up. There was a streak of coldness that ran north a ways but that faded and disappeared after a minute or so of following it.\"\n\n\"Creatures like that absorb energy and magic from their environment to sustain them. The trail faded as the living creatures it stole energy from recovered,\" explained Ikuno. \"Directly north of here is one of the major trading roads in the area. Unfortunately, it's trail running in that direction doesn't tell us much.\"\n\n\"What about using magic to track it back?\" asked Kal.\n\nIkuno sent the iron club airborne with a flick of her wrist where it vanished with a small flash. She then looked down at the puddled remains of the wolf and shook her head, \"Unless you think you can learn some divination spells in the next few minutes, we're out of luck there.\"\n\nKal thought for a moment, \"What about something more physical? Like heightening your sense of smell?\"\n\nIkuno gave him a questioning look and said, \"I know that you think that I act like a bitch in heat all the time, but that's a little harsh, Kal.\"\n\n\"Wait! No! That's not what I...,\" Kal stopped and turned red as Bea and Ikuno started laughing at him, even Aradelle's vine was doing a good pantomime of someone having fits of laughter.\n\nThey eventually concluded there were no solid solutions for discovering the identity of the person hunting Ikuno. Realizing this, the trio made their way back to Aradelle's flower before saying goodbye to the alarune and going their separate ways.\n\nAbout halfway back to meet Gerda at the base of the mountain, Kal suddenly stopped in the middle of the trail.\n\n\"Wait a second!\" he said looking at Ikuno, \"How was 'Dell able to hear us?!\"\n\n---\n\nPerra. Was. Frustrated.\n\nLittle more than a week had gone by and Kal had been spending a large amount of time with Ikuno since the attack on Aradelle. When he was home, however, the sexual tension between them had reached a fever pitch. Perra had been taking almost cruel advantage of the side effect from his compatibility spell. Something that she would honestly feel bad about if it weren't for Kal giving just as good as he got. Far too often she had gotten him all riled up only to have him turn it around on her and later end up off by herself taking care of her urges.\n\nToday that all changed, she had seriously considered sneaking into Kal's room and jumping his bones to start off her birthday on a good note. Kal's mother had wanted to make breakfast as her gift to the birthday girl but Perra insisted she take care of it. As the morning dragged on and she had breakfast cooking with no sign of him, she decided to chance peeking into his room.\n\nIt was empty.\n\nWorse yet, his pack was gone meaning he was planning on being out most of the day. Perra raged internally at his absence, at least she thought it was internally, Kal's mother did her best to hide her smile as the girl stomped back over to the kitchen area.\n\n---\n\nKal had been less than honest with Perra about his time away from the farm. Yes, he had been at Ikuno's but the issue of the necro-wolf was largely dead at this point with no potential leads. Instead, Kal had been learning about geomancy with a very specific project in mind.\n\nHe had also been working on two new runes, specifically for the journey he was taking with Gerda. The first was placed on a roughly triangular hard leather mask that sealed tightly over his nose and mouth. The tanner in Telsin made it for him and the poor man had been totally confused as to why he wanted a mask that he could breathe out of but not in. On the inside and outside of the mask were runes that when powered took air from around the outer rune, cleaned it, then expelled it from the inner rune where he could breathe it in. The straps around his head were annoying and uncomfortable but the apparatus was necessary for what he had planned.\n\nSadly, Kal couldn't take credit for the runes or the facemask as they had been in his runesmithing tome, along with a different rune for the outside which was meant to take air from water. The author explained that he never figured out a way get similar effects from using runes on his skin. However, Kal did manage to use his ability to see magic to make small improvements, when he was done even smells were filtered out leaving only pure air coming from the inner rune. \n\nThe second rune was for fire and flame resistance. Ikuno had been on him about learning and getting this one onto a bracer ever since she had mentioned visiting the salamander girl living off to the east. Similar to his haste rune, he took a particular interest in this one. Mostly because it introduced him to a new concept:\n\n\"'The initial ring contains a limiting glyph for the power extended to the outer rings,'\" Kal read from the book as he sat in Ikuno's library. \"'It is set as such due to magical energy requirements increasing by an order of magnitude beyond this point. Theoretically, complete immunity to all types of thermal interaction would be achievable through the use of this particular rune. However, as currently set, the rune will afford protection to nearly any type of flame or thermal source, up to, but not including, draconic and magmatic.'\"\n\nKal put the book on the table and ran his hands over his face. \"Why must reading these descriptions be so dull,\" he complained to the air around him.\n\nIkuno looked up from the book she was reading, \"You haven't met any other wizards yet, you'll realize quickly that they can be a bunch of pompous asses. With the time and effort most of them have devoted to their craft, it's difficult to blame them. I believe that they intentionally make their texts borderline incomprehensible. Partly as a means of demonstrating their knowledge of the subject and partly to keep people from 'casually' studying magic. I think you forget sometimes that you are decades younger than the author's intended audience.\"\n\n\"You're right, I do,\" Kal chuckled, \"'Other wizards'... It feels so strange when you or the townspeople call me a 'wizard'. Sure, I can use magic, but I don't feel much like someone who has earned that title. Then again, I still feel strange when people I've known my whole life call me 'Master Kal'.\"\n\nIkuno returned to her book, \"They've only been doing it for a few months. Give it time and soon enough you'll get all indignant when someone forgets to.\"\n\n\"Ugh, I hope not,\" he said looking back at his own book. \"This limiting glyph on the innermost ring is interesting. I'm certain that I could use that in other things as well. Like that facemask I just made, right now it just pours out clean air. I wonder if I could make it pulse, so it only does it in time with my breathing.\"\n\n\"What if you end up running or lifting with it on,\" Ikuno said without looking up. \"Also, if you are exerting yourself is it still going to produce enough air to keep you from passing out? Hopefully, I don't need to remind you that your mask is a deathtrap if you lose consciousness.\"\n\n\"Hmm... Good points all. I may need to come back to that later. When I was flipping through some of the later chapters I think I saw something about a glyph that will lock a rune when it's activated and remain on until dispelled. I have some other things I need to learn in between before I get to that point.\"\n\nKal returned to his book again, A few moments later he let out a small whoop and started streaming ink from the inkwell into the air in front of him.\n\n\"Found something interesting I take it?\" asked Ikuno.\n\n\"Very,\" Kal responded as the ink flowed into the sigils and glyphs he wanted. \"The author also added a resistance glyph. Assuming I'm understanding his jargon correctly, if I make the fire resistance rune while replacing the limiting glyph with the one for resistance I will be able to push the rune further if I need to.\"\n\nHe looked up at Ikuno, \"Compared to dragon's breath, how hot is that Fire Wall spell of yours?\" he asked with a grin.\n\nIkuno hung her head and groaned, \"You're going to be the death of me, boy.\"\n\n---\n\nGerda and Kal phased through a wall into a tiny cavern, Kal immediately summoned a small light source.\n\nGerda sniffed about for a moment, \"The air is bad in here, keep the mask on.\"\n\nWhen contacting her sisters, the eldest one, named Marble, had known of a device that allowed humans to understand golems easier. Creating one had been surprisingly simple since all it turned out to be was a small pebble with a hole through it attached to a large hook. The pebble rested just inside the ear canal while the hook looped around the back of the ear and held it in place. Though the golem still spoke slowly it was still a vast improvement from the translation spell. When Kal asked Ikuno if she was going to remove the pearl in his mouth now, she laughed and told him that the spell was not specifically for golems and that he could speak and understand almost any living language. Kal was decidedly shocked by this news, as was Perra when he informed her later.\n\nKal nodded at Gerda's assessment, the air was already making his eyes sting slightly. He had a hard time holding back a smile at the role reversal from when they first met. With the mask, his speech was too muffled for Gerda to understand and now she was the one able to speak clearly.\n\n\"The stones you want are there,\" she said pointing at an angle towards the ceiling. \"I'll go get some and be back, then take you somewhere else. Yellow gas in here, it burns human's eyes. Can't stay here long.\"\n\nKal didn't know what 'yellow gas' was but he nodded vigorously as the golem girl walked back into the wall.\n\nShe came back in just a few minutes holding two large white crystals in one arm. With the other, she grabbed his hand and pulled him through the wall as they made their way to somewhere more suitable for the next part. Kal really didn't get to see exactly what she was holding, the stinging had gotten worse to the point he had to close his eyes and keep them shut.\n\nMinutes later, and far enough down that the earth was starting to warm up, they came out into another cavern roughly the size of the one they first met in. Kal again summoned a light as Gerda set the crystals down and began making a familiar swirling motion over a small area of the floor. Acting like she was grasping something large on both sides, she pulled upwards and a column of stone rose up to about waist level from the floor. She then passed a hand back and forth just above the surface, leaving the stone table perfectly smooth in its wake. Finally, Gerda picked up the two large white crystals, each about the size of one of Kal's small stew pots, inspected each one carefully with her ruby eye, then placed one of them on the table.\n\nShe turned and looked at Kal, \"You can take the mask off, the air is good here. It comes in over there,\" she pointed at a crack in one wall, \"and leaves there,\" she said pointing at a similar small crack in the ceiling. Patting the top of the table she said, \"Good place to work on gems. I'm going to eat.\" She held up the other crystal then walked a few steps away and began making the swirling motion that tied her actions to the rock in front of her. Looking at her other hand with the crystal in it she stopped, placed the crystal down, then repeated the process of making the table but smaller and only high enough to make a stool to sit on. Picking the crystal up she took a large bite out of one side and crunched away at the mineral noisily, a dreamy look of contentment on her face.\n\nKal slowly took off his breathing mask, getting a strong whiff of sulfur, and watched all of this with a mix of curiosity and amusement. Comparing the flows of magic between Gerda and the stone to when he moved a bunch of dirt to plant Eludora was night and day. He had to make multiple rounds over the top of a rune in order to attach it to a plot of soft dirt that had been prepared beforehand with a magic circle, all prior to moving. Gerda could have likely done one circular motion with her hand before 'lifting' and had the same effect on the much tougher stone. It amazed him how easy she made it look.\n\nKal had been worried when he saw that she had chosen such large deposits. He didn't want to insult her but he only needed a small piece to make the gem he wanted. When he saw how much she was enjoying eating the white mineral he didn't think leftover rocks would be an issue. For a moment curiosity got the better of him and he lifted up the crystal, taking a small lick. It tasted like dirt.\n\nShaking his head and wondering what he had been expecting he dug through his pack and pulled out the parchment that had the instructions for shaping the mineral into a moonstone.\n\n---\n\nThree hours and five failed attempts later he finally had a small oval moonstone that matched his desired dimensions exactly. Kal looked over at Gerda. She had gotten rid of the stool once she was done eating the other crystal and instead made a bed to lay on. He chuckled when he realized that the bed she made was an exact stone replica of Ikuno's, even down to the headboard.\n\nKal wrapped the completed moonstone in a piece of linen and placed it in his pack then went over to the napping rock golem. Lying down next to Gerda he draped one arm over her, putting a hand on her belly then sliding it up to cup one of her breasts. She had explained that golems only bother with covering up their breasts and sex when among surface dwellers. Like her rock armor, it took active concentration, even though it was just a tiny amount, to maintain her bikini. That meant when she fell asleep she reverted to being nude again, as she had now.\n\nGerda hummed happily for a moment before pebbles formed beneath Kal's hand breaking contact with her skin.\n\nKal sighed, \"You are learning how to tease me all too well from Ikuno.\"\n\nWith much grinding and scraping on the stone bed, Gerda rolled over to face him, \"I'm not teasing. Right now you want, not need. If you need, I will take care of you. If you only want, save it for Perra.\" Gerda's hips made a tiny circular motion, almost unnoticeable but enough to let Kal know she was wishing he was 'in need' right now.\n\nKal sighed again, \"You're right, I'm just wanting you right now. But we still have an amethyst to get.\"\n\nGerda smiled and offered him her large rocky hand. After slipping the facemask back on from where it had been hanging around his neck, a mildly annoying task while laying on his side, he presented his own. Stone from her hand grew around his and a moment later they both sunk down into the bed leaving the chamber empty.\n\n---\n\nPerra stepped into the quiet of the inn's dining room and threw back the hood of her cloak. This early in the morning there was little going on other than a few travelers having a late breakfast. To her surprise, Kahrin was behind the counter instead of the innkeeper, Master Ellis.\n\nKahrin smiled wide at the sight of her, \"What can I do for ye Lady Perra?\"\n\n\"Where's Master Ellis?\" Perra asked.\n\n\"He's feelin' a wee bit under the weather t'day so me n' Bren are lookin' after things for 'im,\" Bren grunted from his seat next to the door. \"How can I help ye?\"\n\nPerra fidgeted for a moment before producing two silver pieces and sliding them across the counter, \"I was wondering if I could have a bit of your time.\"\n\n\"Why Lady Perra, I didn'a have a clue ye were inclined towards the soft touch of a woman. Not that ye'd be the first ta be interested in payin' for me time,\" Kahrin said looking positively scandalized.\n\nPerra sputtered for a moment in embarrassment before nearly yelling, \"Not for that!\" she looked around the dining room for a moment, all of the current customers were out of earshot, then continued in a quieter tone, \"I just need some advice, Kahrin. Today is my birthday.\"\n\nKahrin squealed like a little girl and ran around the counter throwing her arms around the surprised young woman, \"Yer so lucky lass! I'm guessin' ye two haven't gone for a tumble yet then?\"",
        "\"No,\" Perra grumbled, \"he was gone when I woke up this morning.\"\n\n\"Pfft, don't ye worry none,\" said the barmaid waving off her concerns, \"Master Kal is a good man. He won't be missin' out on somethin' as important as yer birthday.\" Kahrin continued in a stage whisper, \"Which is a right good thing for ye too lass. The only man I've had better n' Master Kal is the big lout sittin' in that chair over there.\"\n\nHaving easily heard everything the barmaid just said, Bren chuckled, a deep bass rumbling that seemed to emanate more from his chest than his mouth. Perra swore she could feel the man's laughter through the floorboards. Her eyes momentarily flicked to his crotch and she looked back at Kahrin with eyes like saucers. It was that big and it wasn't even hard!\n\nThe barmaid chuckled at the girl's expression, \"Ye needn't worry lass. It takes a special kinda woman ta take that monster. Master Kal's a good size ta fit nicely without ye needin' ta stretch yerself aforehand.\"\n\nPerra guessed that Kal hadn't mentioned his enchanted cock to Kahrin during his time with her. She also steeled herself against jealous thoughts welling from the barmaid's casual chatter about her night with Kal but to her astonishment, they never came. Then again, the older woman had been true to her word and completely stopped chasing after him after their time together.\n\nKahrin called out to the other barmaid who was working the tables while Kahrin manned the bar, \"Ada! Keep an eye on things here I've some business with Lady Perra for awhile.\"\n\nThe young blonde barmaid's face wore a look of confusion, \"Wot ya mean? People'l be comin' in for dinnah in a few hours.\"\n\nKahrin smiled, \"Not that kind o' business, the young Lady just wishes ta talk. Come get me if'n ye needs ta.\"\n\nAda nodded and made her way to the bar as Kahrin threw an arm around Perra's shoulders leading her towards her room at the back of the inn. \"If'n you were wantin' ta know yer way around a cock, ye came to the right woman. I've got just the things in me room for showin' ye exactly what ta do, an' what not ta do.\"\n\n---\n\nThe heat in the cavern that Gerda took him too next was blistering, forcing him to put significantly more power into the fire resistance rune until he was comfortable. He was less worried about the heat right now than the air, the rune on the front of his mask was so bright he could almost use it as a light source. With how the paired runes worked he had to guess the need for extra power was because there was so little breathable air in this subterranean furnace of a room. Gerda's form shimmered in the heat of his floating light source. The golem was both uncaring and unaffected by the lack of air or high temperature. Thankfully there was none of the 'yellow gas' in the air that made his eyes sting here.\n\nKal had wanted to collect everything on his own with Gerda acting as transport between. When she explained that the mineral that moonstones were made of didn't appear in caverns like this, he had to concede letting her help. With the amethyst, he was determined to do most of the work but already he was becoming thankful for the golem's presence. They walked up to a sphere made of rock that was taller than him, Gerda walked ahead and stepped into it. Her feet poked out the bottom as she walked around inspecting the inside. After a minute or so she stepped out the side of the sphere and pointed.\n\n\"Hit it here,\" she said.\n\nKal donned the other piece of gear he had made for him, specifically for this but he figured would be useful in other situations as well. A pair of fingerless leather gloves with a thick steel plate attached to the two middle fingers that ran across the front of his fist when he balled up his hand. For good measure, he had another plate attached to the tops of the gloves as well, in case he needed to backhand something big and mean. In actuality, it had been the blacksmith's idea and he had talked Kal into it, even etching some fancy designs on the back to make them look more valuable.\n\nWhen he showed them to Ikuno later and explained their use she gave them a passing approval before looking at Kal and asking, \"Why don't you just bring along a big hammer?\" Seeing Kal's face fall, she laughed and tossed the gauntlet back to him before going on a good-natured rant about 'men and their toys' and 'missing the obvious'.\n\nOnce the gauntlets were secure on his hands he approached the spot Gerda had indicated. Rearing back, his strength rune shone as he punched through the outer shell of the sphere burying his arm up to the shoulder. Judging by the sigh he heard from the golem standing behind him, he wasn't supposed to do that.\n\n\"Too much too fast, Kal,\" she said in an exasperated tone, \"Crack it like an egg, don't punch it like an enemy.\"\n\nKal was glad she couldn't see him red-faced with embarrassment as he cautiously pulled his arm out of the hole. Following her advice, he made softer hits that made thin cracks that ran up and down from his original opening. When Gerda gave the go-ahead, he gripped each side of the hole and pulled apart. The large sphere broke cleanly in two along the crack and each half went rocking away from him. Inside the rocky outer later was a thicker shell of smoky purple with occasional white layers interspersed. The real treasure was on the innermost layer, large purplish-blue crystals, some nearly the size of his fist, jutted out from the inner surface.\n\nKal stared with wonder at the trove of gems before him. Gerda walked through rock and gem alike to inspect some of the larger crystals with her ruby eye. She pointed out a couple of perfect and near perfect amethysts that were big enough to suit his needs before stepping out of the half sphere. She then reached in and broke off a couple of the lower grade gems and popped them in her mouth like candy. As he watched her happily crunch away at the precious stones Kal had to wonder if her softer curves could be likened to those of a human with a sweet tooth.\n\nKal was able to quickly wrench or twist the gems Gerda had marked out of the whiter layer holding them in place. Then, on a whim, he collected all of the rest of the larger gems and placed them in a separate pouch, in case they might be of some use later. He turned to let Gerda know he was ready only to find her standing behind him glaring.\n\nShe pointed at the pouch he had just filled, \"Want, not need,\" she said and held out her hand. Kal was indignant at first but relented after careful consideration. He was already richer than anyone in the area, having these huge gems would be largely pointless, no one in the area or even the traveling merchants would ever be able to pay him for such a thing. As he handed them over Gerda inspected where they had been broken off and put them back in their original places, reattaching them with a little bit of geomancy.\n\nAs he went to hand her the last one he pulled his hand back and looked at the gem in confusion.\n\nLooking up at Gerda he said, \"I think I need this one for something.\" Not understanding a word he said because of the leather mask, but gathering that he felt he needed to keep one of them. She swiped the amethyst out of his hand and replaced it inside the geode before breaking off another one of the same size and handing it to him.\n\n\"Better quality, almost perfect,\" she said as he put it in his pouch. Then taking his hand they walked into the wall and headed back to the cave with his worktable.\n\n---\n\nPerra had to give Kahrin credit, she was certainly thorough. In two hours, she learned more about the penis and the man attached to it, Kahrin's words not hers, than she had in all her previous years combined. The young woman tried to ignore the slight feeling of roughness in her throat as she walked to the Apothecary. Perra also tried her best to ignore that the reason for that rough feeling had been in the barmaid's ass and pussy at one time or another. Kahrin had been very detailed in the girl's instruction.\n\nShe walked into the apothecary's store and waited patiently for the only other customer to leave. When it was her turn and she was alone the herbalist she suddenly became so nervous she nearly tripped in the couple of steps up to the counter.\n\n\"How can I help ya, Lady Perra,\" he said with a big smile. \"An' how's Master Kal's mum doing these days? I don't hear much about her since da young Master became a healer.\"\n\n\"Sh.. sh.. She's doing fine, Master Jurien,\" stuttered Perra before turning bright red in embarrassment. \"I'm here for some gondas weed and mint.\"\n\n\"Oho! Got your sights set on the young wizard do you? Not that I blame ya Lady Perra, he was a good lad long before he started learnin' magic.\" He leaned down and whispered over the counter, \"Though if yer lookin' ta tie him down, gondas weed might not be da way ta go about it.\" The apothecary stood back up and chuckled as Perra's mouth opened and closed in an attempt to form a reply. \"Nina!\" He yelled towards the leather curtain that led to the back of the store.\n\n\"What love?\" came the voice of his wife.\n\n\"Lady Perra is here fer some gondas weed an' mint,\" he called back. Perra wanted to curl up into a ball and die from embarrassment.\n\n\"First time, right?\"\n\n\"Aye.\"\n\n\"Send her back, then.\"\n\nThe herbalist jerked his thumb towards the doorway, \"Be on with ya now, I'll have your things put together when da wife's done with ya.\"\n\nThe curtain opened up into a short hallway with a well-lit room at the end. Inside was where Lady Nina created all of the potions, elixirs, and salves her husband sold. Along the back wall was an unusually long fireplace sporting an iron bar with each end set into one side of the stone mantle. Above the low burning fire were four small cauldrons simmering away. Nina sniffed and stirred each one in turn, occasionally adding various ingredients as she felt they were needed.\n\n\"Have a seat, have a seat,\" said Nina waving to an empty chair as Perra walked in. \"Pay my husband's teasing no mind, he'd have sent ya straight back here without a word if'n someone else had been there ta hear.\" After checking the last little cauldron, she pulled another chair over and had a seat in front of Perra. \"Is it true this is your first time with gondas weed?\"\n\nPerra nodded, \"Yes, ma'am\"\n\n\"Enough with the 'ma'am' nonsense back here, call me Nina. It's not often a first timer gets mint along with it is the reason I'm askin'\"\n\n\"Kahrin from the inn suggested it.\"\n\n\"Kahrin? Hah! Should've known, the girl seems to have a bit of a soft spot for ya. Almost as much of a soft spot as Jurien has for her bottom. Blasted barmaid hasn't paid for her supplies in ages.\" At Perra's questioning look, Nina explained, \"Jurien's too big to take me in the rear, I love the man but it hurts too much. Wouldn't be a problem but it's something he's a bit smitten with. When I was younger I'd suffer through it but as years passed I just couldn't do it anymore. He's a good man, didn't complain once.\n\nWhen Kahrin moved here and started getting a reputation I had Jurien send her back here for a talk when she was picking up her herbs. I thought the man had died and gone to heaven when he came back and saw her bent over with her arse oiled and waiting for him. Rightly emptied his balls in her backdoor he did. Later on, I heard she started takin' women clients as well. After that she was more than happy to let me join in, the woman's got the tongue of an angel.\" Nina ended her tale and blushed a little, \"I suppose you didn't need to know all that.\"\n\nPerra glanced towards the front of the store, \"You weren't wanting me to...\"\n\nNina was aghast, \"Oh no! Heavens no! I didn't mean for you to think that! I bring all the young girls back here to talk their first time getting gondas weed. Which I should probably be getting into instead of talking about my husband's fascination with Kahrin's arse.\n\n\"First, if a man's seed even touches your cunt you can end up with a baby, for that reason even if he's taking you in the arse eat your gondas weed beforehand. Second, never take it during your monthlies, the cramps you'll have the next few hours will be very painful. Third...\"\n\n---\n\nSometime later Perra pushed the leather curtain aside and came back out into the shopfront. After once again waiting for Master Jurien to get done with another customer she stepped up to the counter. The apothecary slid two small oiled leather pouches across the counter at her, one with a mint leaf stamped into the front.\n\n\"Put yer money away Lady Perra,\" he said as Perra reached for her money pouch, \"it's already been paid for by your barmaid friend.\"\n\nPerra looked around the store, \"Was she here while I was talking with Lady Nina?\"\n\n\"Nay, she came by a few months ago after Master Kal saved her kin, asked me to have these made up for ya and paid for it then.\" He leaned down and tapped his ear shooting a look at the curtain to the back, \"She paid with coin mind you, only coin.\"\n\nPerra squeaked out a thank you before grabbing the two pouches and running out the door, followed by the man's amused laughter.\n\n---\n\nPieces of moonstone crystal and shattered pieces of amethyst littered the ground around the table Kal was using. Gerda had long ago grown bored of watching Kal attempt to shape the amethyst and was napping on the stone bed. Kal, on the other hand, was pacing in frustration, holding one of the purple gems in his hand.\n\nHe watched closely as he poured energy into the gem, unlike the magic crystals the impurities that gave the jewel it's vibrant color were making the energy slowly dissipate into the air around him instead of holding onto it. He could get enough magic in the gem easily enough, however, it seemed that once he started shaping the gem something overloaded, making the jewel shatter. Once again the crystal he was holding turned to dust with a sharp crack that stung his hand.\n\nSighing in defeat he went over and tapped Gerda on the shoulder. \"Gerda, I need your help,\" he said when she rolled back to look at him.\n\nGerda nodded and got up, walking over and picking up a gem the size of the tip of his pinkie. Handing it to Kal she waved a finger back and forth over it saying, \"stretch it, only this way.\"\n\nKal concentrated on the shaping spell and to his amazement, the amethyst started to lengthen. \"How...?\" he said looking up at the golem.\n\nGerda cut him off, \"Now stretch this way,\" she said waving her finger at a slight angle from the last one. Again, the jewel started to lengthen.\n\n\"Now stretch this way,\" her finger now moved perpendicular to the first time. Kal felt a bit of resistance and the crystal in his hand once again shattered into dust.\n\nKal shook his head, \"I still don't understand, why will it work the first two ways and not the last?\"\n\nGerda went back to the table and picked up an untouched amethyst. Holding it up to the Kal's light she said, \"Gems move in certain directions.\" Over the jewel, she indicated three directions, in line with the six-sided pyramid the amethyst had naturally formed, then a last one downward. \"Only one direction at a time. Move two at once, it breaks. Move in the wrong direction, it breaks.\" She handed the crystal back to him.\n\n\"Thank you, Gerda, I think I get it,\" he said staring at the purple gem. Gerda kissed him on the cheek and returned to her bed as Kal stepped back over to his table.\n\n---\n\nAround an hour later, Kal again tapped Gerda on the shoulder, this time holding up a thin oval-shaped amethyst with the moonstone set in the middle.\n\nGerda smiled as he placed it in her hands then gave him a questioning look, \"Sides are straight. You said you wanted smooth.\"\n\nKal shrugged, \"It's the best I could do for now I think I could have gotten them smoother with time, but I don't know how long we've been here or how long before we need to go home. Not to mention, we still have the magic crystal to get,\" he said flipping the gem over and showing the small indentation in the back where a magic crystal would eventually go.\n\nGerda looked up and through the rock above them, \"You're right, no time.\" Taking the jewel from Kal she focused intently on it with her red crystalline eye. As Kal watched tiny darts of magic ran through the amethyst along the three main axes he had used to shape it. The major difference being that hundreds of them seemed to be running through at any given time. As the sides of the gem became more rounded Kal began to notice that, true to what Gerda had said earlier, at no point was a place in the crystal being pulled two different directions at once, though it was difficult to tell with the flurry of magical activity surrounding the amethyst. Eventually, Gerda handed him back the moonstone perfectly surrounded on all sides by shimmering purple-blue gemstone. Instead of making it smooth, Gerda had instead put thousands of tiny facets along the surface that glimmered and reflected the light. To Kal, it looked far better then what he had been trying to make.\n\n\"Now for the hard part,\" said Gerda frowning, \"Mana golems are nasty things, but the only place to find perfect magic crystals.\"\n\n---\n\nKal didn't think he had seen Ikuno quite as excited as when Gerda had mentioned mana golems and the chambers filled with magic crystals they guarded. Gerda had explained that mana golems were not like her and her sisters but pure magical constructs made out of crystal with a vaguely humanoid form. To her knowledge they were effectively indestructible, reforming damaged parts in seconds. They were also deadly, using a similar ability to form crystalline javelins and hurl them at intruders with enough force to bury the brittle crystal deep into the wall. To make matters worse the caves they were found in only occurred in the deepest parts of the earth just above the point that even Gerda and her sisters couldn't go because of the heat.\n\nGerda had scouted out the crystal cave days earlier. The plan they had come up with was to enter a good way from where the golem seemed to rest and spend most of its time. Gerda would grab as many crystals as she could while Kal protected them with his shield. Then they would beat a hasty retreat before the mana golem could attack them. Gerda's phasing magic allowed Kal to breathe while he was traveling through rock, but Gerda informed him that there was no air in the cavern that his mask could filter. This meant they would only have a little over a minute to work since Kal would have to hold his breath until they were safely out of the cavern.\n\nGerda found a small cave system with breathable air just above the mana golem's cave where they made their final preparations before diving into the rock below.\n\nKal did his best not to be stunned as they entered the cavern. The small spot Gerda had picked was one of the few he could see that wasn't completely covered with the magical growths. The cavern itself was huge, the light as he summoned his shield bounced and reflected among the forest of crystalline facets making it look like stars twinkling everywhere the light didn't touch.\n\nGerda immediately got to work digging up two clusters of nearby gems then going to work on another single crystal that was as big as a newborn baby. She grew rocks out of her body that would fuse with the ones she left attached to the crystals, allowing her to wear the pilfered minerals and leaving her hands free.\n\nReaching over and touching a large crystal next to him he drew power from it to expand the shield when he saw movement. Between the fire resistance rune and the enlarged shield, he was certain that he was using more magic right now than even when he had drained Ikuno from her magic overload. He felt a sudden lurch and suddenly the crystal he was touching began drawing massive amounts of magic from him. Kal jerked his hand off the crystal but one of his two he had brought along and tucked under his vambraces was already depleted, between Fire resistance and his shield the other was going fast. Kal shrunk his shield down to normal size to reduce his power requirements and tapped Gerda letting her know they needed to go soon.",
        "In the distance, Kal saw a large area of the magic crystals start to glow as the mana golem stood up. Its legs took up a full three-quarters of its height and turned into a strange downward pointed triangular body with arms that were nearly as long as its legs hanging from the shoulders. An image of a face flickered in front of a small nodule that stuck up from the body where a neck would be. Instead of charging as Kal thought it might, it just raised a hand and one of the magic javelins Gerda had told them about began to form in its hand.\n\nKal tapped Gerda again more urgently this time. She attached the last of the clusters to her body and stood up just in time to see the crystalline spear crash through Kal's shield and bite deeply into the right side of his chest. Gerda's rock hand quickly grew to giant proportions and wrapped around the back of Kal's head since both of his hands were now holding the large crystal spike sticking out of him. She threw herself backwards and into the wall as the mana golem launched a second javelin. She felt the impact through the stone and felt the agony through her bond as the spear penetrated enough to slice into Kal's leg even while he was phased with Gerda. The golem girl froze in panic for a moment until she got the strong impression to take him back to the caves they had done their preparations in.\n\nKal activated the healing rune and took care of his leg as they jetted upward. He tried tugging the spear out, but something was holding it inside him and he was forced to endure until they came out into the open air of the cave.\n\nKal let out a yell of pain he had been holding in since the crystal pole had first pierced his skin. Gerda had made sure that the far end was resting on the floor before making them both solid again. She quickly came around to his front to see how she could help.\n\n\"Cracked rib. The tip is barbed. Can't go through, will hit shoulder bone. Will have to come back out, lots of damage that way,\" she said, her flat tone not reflecting the worry on her face.\n\nKal gave her a determined look, \"Out,\" he whispered.\n\nGerda grasped the javelin and put one hand on his chest, looking closely with her ruby eye she tried to line up the barbs with the entry wound. She then met his eyes and gave him a sincere look of apology.\n\nKal nodded.\n\nPain blossomed in his chest at the same time the healing rune flared on his bracer, the pain-deadening part of the rune was likely the only thing that kept him from passing out. He felt his rib line back up and fuse together as the tissues around it mended. He dropped to his knees and coughed up all of the blood that had collected in his lungs from the wound. He was actually pleased with how little there was.\n\nStill holding the spear Gerda suddenly whipped around and looked down the cave, a moment later Kal heard what drew her attention. Hundreds of legs clicking across the stone, drawn by the smell of blood.\n\nGerda turned back, \"Giant centipede, we must go.\"\n\nWith the healing rune still shining bright, Kal quickly stood and took the spear from her before grabbing her hand and nodding. They sunk into the stone just as the centipede's huge antennae and mandibles came into sight.\n\n---\n\nIkuno was outside to greet them as Kal and Gerda stepped out of the mountain. She was taken aback by the blood-tipped spear Kal was holding and the various clusters of crystals Gerda was sporting from her body. She raised an eyebrow at Kal's torn and blood-stained shirt.\n\n\"I felt you get hurt,\" said Ikuno, \"From the looks of things you are okay now?\"\n\n\"Yes, I'm fine,\" he replied looking up at the tip of the spear. \"believe it or not this thing hurt worse coming out than it did going in.\"\n\nIkuno's eyes widened in astonishment as Gerda began detaching crystals from her body and setting them in the grass. \"Are those...?\"\n\n\"Yes, they are. Gerda managed to get quite a few more then I expected before the mana golem turned me into a pincushion with this thing.\" Kal looked down at his torn trousers, \"He also managed to get my leg when we were already in the rock. That may explain why golems don't like going near them. On top of that my shield only slowed this thing down, good thing too or I might have ended up nailed to the wall, or worse it could have gone through me and into Gerda. Putting it lightly I don't ever want to go back there again.\"\n\nIkuno was only half listening as she bent down and inspected one of the smaller bundles of crystals, Gerda doing the same with the last one she detached. \"What kind of quality are these, Gerda?\"\n\n\"These are all perfect to near-perfect. Some just need cutting.\"\n\nThe oni whistled, \"You really have no clue what you brought back do you?\" Seeing Gerda and Kal's blank faces she continued, \"This many near-perfect crystals could get you enough gold to buy yourself a small kingdom if you found the right bunch of wizards. Then again they'd probably just try to kill you and take them instead.\" She nodded towards the crystal spear, \"What about that?\"\n\nKal handed it to the golem who peered closely at it with her magical eye, \"Cracked at the tip. The rest is flawless. We can use this for the pendant. It just needs to be cut.\"\n\n\"Wait... how do we cut these?\" asked Kal\n\n\"Diamond,\" said Gerda like it was plainly obvious.\n\n\"Sorry I'm, fresh out,\" Kal deadpanned. \"Besides if we had one you might end up eating it... Wait a minute you could bite through it!\"\n\nGerda's face screwed up, \"Wouldn't eat a diamond. Hard to find and no taste. Like chewing on hard air.\" Gerda looked at the spear in her hands, \"True, but why use diamond or teeth? Has same grain direction as amethyst. Push one side pull the other,\" she said holding it up for him.\n\nKal looked closely at the crack that was already in the crystal javelin and picked a line right next to it. After taking a moment to tie his will to the crystal, instead of moving both sides Kal moved only the side with the crack in it, keeping the other still. With a ringing snap, the head of the spear fell into the grass leaving behind an almost perfect angled oval facet on the end of the handle.\n\nIkuno chuckled from behind him, \"from lifting dirt to shearing gems, you've come a long way in a short time.\"\n\n\"Sorry Ikuno but I have to disagree with you there,\" said Kal producing the moonstone and amethyst jewel wrapped in linen. He looked up at her, \"just watch.\"\n\nHolding out the jewel, Kal looked at Gerda, \"The sun is going down and I need to be home so I can celebrate Perra's birthday with her. I can't afford to make a mistake right now and break this by accident. Would you please finish it up for me?\" he asked.\n\n\"It'll cost you,\" she said smiling as her eyes dropped to his groin before meeting his again.\n\n\"A debt I will pay happily, and with loads of interest, just not tonight.\"\n\nIkuno snorted, \"As many loads as he can manage,\" she said bursting into laughter\n\nSmiling, Gerda set down the pole of the spear and took the jewel from him. With her other hand, she snapped off one of the barbs from the spear point, ignoring Kal's dried blood on it. Holding it up between two fingers the outer layers of crystal appeared to just fall off of their own accord. She then pressed the shaped crystal into the slot Kal had formed earlier in the back of the jewel. Within a few seconds, the edges of the amethyst had grown over holding the crystal in place permanently.\n\nIkuno looked suitably stunned at how fast and precise Gerda had been as she slowly handed over the silver chain and pendant the setting would be attached to. A moment later, Perra's necklace was completed.\n\nKal wrapped Perra's birthday gift back up in the linen and placed it in a pouch before starting to make ready to leave.\n\n\"Where the hell do you think you're going?\" asked Ikuno.\n\n\"Home,\" said Kal looking dumbfounded. Hadn't he just said that?\n\n\"Like hell you are,\" she said walking over to the mouth of her cave and grabbing two baskets with their soaps and towels laid across the top. \"You've damn near been to hell and back, as far as I can tell, and you certainly smell like it. Since you never officially rescinded your 'servitude' I'm ordering you to march up to the pool and wash off, no girl of mine is going to get a stinky cock on her first time if I can help it.\"\n\nKal stared in shock at the oni. Perra had always been insistent that she did belong to Ikuno in accordance with the Knight Balthus's decree for saving her life, twice. Until now, Ikuno had never acknowledged any kind of guardianship over the young woman.\n\n\"Your girl?!\" he said in surprise. Then Kal gave the oni a lecherous grin and waggled his eyebrows, \"So, does this mean if she joins us in bed I'll get to see some hot mother-daughter action?\"\n\nIkuno's cheeks turned dark purple as she threw a lazy kick in his direction that Kal easily danced away from, laughing. \"You bastard! Off to the shower with you! Or I'll toss you in without warming up the water first!\"\n\n---\n\nPerra. Was... despondent...\n\nShe blamed herself for her current mood. While doing her errands in the village she had come back to the farm three times today just to check and see if Kal was home yet, each time returning to town more disappointed than the last. With the sun touching the treetops if he wasn't home now then he wouldn't be until morning. She wrapped Bonn's reigns around the porch rail figuring she had enough sunlight to put him back in the barn if Kal wasn't here yet again. Stepping in the front door she looked off to her right and let out a shuddering sigh as tears welled up in her eyes, his cloak was still gone.\n\n\"That'll be enough of that, young woman,\" came from Kal's mother sitting in the middle of the room.\n\nPerra turned to look at her, \"But...\" she didn't get any further when she saw her pack sitting in the older woman's lap. She looked at the woman in confusion.\n\n\"I made a night bag up for you, Kal asked me to have you meet him at the inn,\" said Kal's mother with a kindly smile. \"Go, I imagine he's waiting for you.\"\n\nPerra's face went from elation to concern, \"What about...\"\n\n\"What about nothing, young lady. Kal fed me and took care of my needs, I'll be fine for a night by myself. Off with you.\"\n\nPerra walked over and wrapped Kal's mother in a big hug, giving her a kiss on the cheek before taking her pack and bouncing out the door with a happy wave over her shoulder.\n\n---\n\nPerra left Bonn with the town stablemaster and walked through the front door of the inn only to be met by a raucous cheer from its patrons. She froze in embarrassment when she noticed that most of them were raising their tankards of ale in her direction. In the midst of them all was Kal, sitting there with a huge grin on his face.\n\nKahrin came from around the back of the bar and shuttled the panic-stricken girl over to Kal and unceremoniously plopped her down in his lap. Raising her hand for silence she said, \"Yer man here has been tellin' tall tales to the boys here that he went ta the bottom o' the earth ta get a right proper gift for yer birthday, Lady Perra. Care ta set the record straight?\"\n\nPerra's eyes widened as she turned to look at him. The laughter bubbling behind his smile was plain as he took a sip from his tankard. She studied his face carefully and could find no trace of deception in his features.\n\nStill wide-eyed she turned back to Kahrin, \"I.. I think he's telling the truth,\" she said, barely able to believe her own words.\n\nThe crowd was silent in shock until someone further back yelled, \"Bollocks!\"\n\n\"Quiet you!\" yelled Kahrin. Then more softly said, \"that's not the look o' a woman who thinks she's lyin'.\"\n\n\"I'm not lying,\" Kal piped in, \"Though I didn't mention before that I had some help,\" the crowd took on a questioning tone, \"who or what that was will have to stay a secret, I'm afraid. What you should be asking instead, is 'what did he bring back?'\" Kal reached into a pouch and pulled out a something wrapped in a piece of linen, as he held it out a chain fell out of one side. Picking it up by the chain he pulled the cloth away and a collective gasp ran through the crowd as the pendant slowly spun.\n\nOne of the nearer patrons whispered, \"Bloody hell, if ya told me ya went ta the depths of hell fer that I'd believe ya now.\"\n\nKal had learned early on that magic crystals only lit up when energy moved through them, a fully charged crystal was indistinguishable from a depleted one when not being used or charged. He also knew that flawless crystals naturally absorbed magic from the world around them. Combined with how the amethyst constantly dissipated magic there was a constant flow running through the crystal making it faintly light up the purple-blue gem around it and the moonstone in front.\n\nKal took the chain on both hands and pulled it over Perra's head with Kahrin stepping up and lifting the hair out of the way for the stunned girl.\n\n\"For those of you with sticky fingers!\" Kal called out, \"I hate to disappoint you but Lady Perra here is the only one able to touch this particular jewel.\" He placed his hand over the pendant and activated the rune etched into the inside of the metal plate it was attached to. From that point on only she could wear it until the time she decided to give it away, the rune forever powered by the tiny flawless crystal.\n\nKahrin stepped back and said, \"There's a sayin' for times like these back in the land I was born in:\n\nL\u00e1 breithe shona duit!\n\nB'fh\u00e9idir go bhfuil saol fada agat, cro\u00ed sl\u00e1inti\u00fail, b\u00e9al fliuch, b'fh\u00e9idir gurb \u00e9 an chuid is m\u00f3 is mian leat a gheobhaidh t\u00fa!\n\nHappy birthday!\n\nMaybe you have a long life, a healthy heart, a wet mouth, and may the most you want be the least you get!\n\nHappy Birthday, Lady Perra!\"\n\nThe crowd erupted in applause, cheers, and well wishes for the young woman.\n\n---\n\nLater on, Kal and Perra had moved off to the side of the dining room. Perra refused to give up her seat on his lap even as they moved away from the general din. Most of the inn's patrons had said their peace and ogled Perra's necklace before eventually returning to their cups. Perra kissed Kal lightly on the neck and whispered in his ear, \"You've given me my gift now it's time to claim yours. Take me to bed.\"\n\n\"That's not fair Perra,\" he said standing up with her in his arms, \"How is a pretty trinket supposed to compare to a gift like that?\"\n\n\"Pretty trinket my arse, Kal, this belongs around the neck of a queen. Not me.\"\n\nThey ignored the catcalls and hoots coming from the dining room behind them as Kal walked up the stairs to the second floor and over to the room that he had purchased for the night.\n\n\"I guess that queen is out of luck then because it's yours now, not even I could take it away.\"\n\nHe opened the door and laid her on the bed, one of the inn's staff had come up a short while ago and lit some candles placing them about the room. He then pulled a chair over to the middle of the room and placed a stone upon it.\n\n\"What's that?\" Perra asked.\n\n\"A gift from Ikuno, it keeps the sound from getting out.\"\n\nPerra got a mischievous smile on her face, \"Put it away.\"\n\nKal gave her a questioning look.\n\n\"Let them hear,\" she said still smiling, \"now it's up to you to give them something to hear.\"\n\n\"Challenge accepted,\" Kal said deactivating the stone and putting it away.\n\nKal walked over to the bed and pulled Perra up on her feet then turned her away from him. Wrapping his arms around her he just held her for a few minutes as she relaxed in his arms. Bringing a hand up he pushed her hair to the side and started kissing the back of her neck, getting a contented sigh from the young woman.\n\nShe let out a small gasp and he reached around and untied the laces holding the front of her dress together. Her breathing quickened as he slowly pushed it off her shoulders, the entire dress falling to her feet and leaving her standing in just her shift. Kal ran his hands down her back to her hips then back up her sides before moving over to undo the knot holding the shift in place. When Perra felt it loosen she spun around and pressed herself to his chest, her breath coming in quick gasps that were a mixture of arousal and fear of the unknown.\n\n\"Scared?\" he asked.\n\nPerra nodded.\n\n\"Don't be, I have you,\" he said lifting her chin and kissing her as he pulled her close. His tongue tapped at her lips, begging entrance, she let him in and soon their tongues were swirling around one another.\n\nHis hand came up and pushed her shift off one shoulder, she pulled her arm out of the sleeve and it immediately went around his back holding his body tight to hers. He ran his fingers through her hair as the other hand came up and slid the shift off her other shoulder, her arm again going around him and pressing the only piece of cloth still covering her between them.\n\nKal removed his cloak and boots without letting the fabric drop. He even managed to pull his shirt over his head with just a quick break in the kiss, however, the fabric of the shift slipped as he was undoing his belt, exposing one of her breasts which she quickly mashed into his chest with a squeak of surprise into Kal's mouth. He slowly undid his belt the rest of the way and pulled it through the loops tossing it over where it landed with a clatter somewhere in the vicinity of his shirt. Using one arm to hold Kal tightly, Perra began tugging at the waist of his pants, pulling them downward with one hand. Ignoring that this would be easier if he undid the front fastener he worked on the other side until his trousers finally dropped to the floor where he stepped out of them and kicked them off to the side.\n\nNow that he was completely undressed Kal put his hands on her hips and pushed away. Perra whined from anxiety but allowed the shift to drop to his hands which Kal quickly let fall to the floor. She then pressed into his body even harder and mashed her lips to his as her heartbeat raced and her breathing sped up even more. Kal broke the kiss and held her just as tightly with one hand while the other explored her back, sides, and arms. As Perra got her breathing under control she became aware of Kal's hardened cock pressed up against her belly, it felt huge squeezed in between them.\n\nKal lifted Perra a couple inches off the floor and laid her down on the bed, with his body just over hers he had her flip over onto her belly. Reaching down next to one of the bed's legs he searched around for a moment before finding a small bottle of oil he had hidden earlier when he paid for the room. Straddling her legs, he dripped some of the oil on her back and began working it in with his hands feeling the tension in the young woman slowly fade. While the massage did wonders for her anxiety over what was to come, it did nothing for her arousal. Possibly making it more acute since it was no longer contending with fear for her attention.\n\nFinishing with her back and arms Kal hopped off the bed. Skipping over her rear, he went to work on her legs. By the time he had worked his way from foot to thigh on the second leg Perra was making small mewling sounds and was certain that there was a wet spot beneath her sex. Kal drizzled some oil over her rear to warn her of his next target. As his hands pressed into the soft flesh he made certain to pay extra attention to the flesh where her thigh and bottom met, stimulating the lips of her pussy by moving the area around them. Kal was also enjoying the view as he spread her cheeks apart and got nice long glimpses of her pucker as well as the lips and opening of her sex.\n\nPerra was panting and Kal could see where her hair was stuck to her face from sweating. Starting at the back of her neck he ran an oiled hand down her spine across her lower back and into the gap between her asscheeks. Perra jumped but didn't complain as his fingers glided over her anus and proceeded further down, sliding over both of her pussy lips until his fingertips brushed across her clit. A few lazy circles around her pearl sent Perra screaming into the pillow as her legs shook then snapped together on his arm. Kal lightly brushed his other hand up and down the young woman's legs as she rode out her orgasm.",
        "After a few seconds, she relaxed into the bed and let Kal's hand go, turning her head to the side so she could catch her breath.\n\nKal leaned over and nibbled at her ear for a moment before asking, \"Ready to turn over?\"\n\nPerra gasped and tensed up at the idea, but only for a moment before realizing that there wasn't much left for him to see. During his massage he had slowly spread her legs apart, so he had likely seen all of her important bits. She thought for a moment about what was holding her back and came to the conclusion she was scared of disappointing him, compared to the other women in his life she was normal, plain, boring. Her thoughts flickered to her necklace, no matter how boring she was he wouldn't have gone to the trouble of making something like that for someone he didn't care about. She decided it was time to face reality and steeled herself for his look of disappointment as she nodded.\n\nPerra was more than a little surprised at the rapt look on Kal's face as she turned over. She didn't understand how unique she was in Kal's eyes, or that she had turned into a truly beautiful young woman during her time living with him. All of the other women he had been with were older then Kal. The closest being Kahrin who was in her mid to late twenties and he assumed Bea was in the same range. Perra's natural beauty combined with her being younger than him and a human, his body was having an intense reaction to seeing her lying nude on the bed. Perra allowed herself a tiny smile at the look of genuine appreciation on his face.\n\nKal steadied himself for a moment fighting the desire to throw himself on the woman and ravish her. The sensible part of his brain would never let it happen, but the urge was there. Taking the bottle, he dripped it over her torso making sure that a couple drops fell directly on her hard nipples. Kal started massaging her tummy and slowly made his way upward. He tried to give equal massage time from neck to waist, but his hands seemed to gravitate towards her breasts and their darker colored tips. He was constantly finding himself running his hands over them and brushing across her nipples with his fingers. Perra was amazed at how much better Kal's rough fingers felt on the sensitive skin than her own.\n\nGiving in to his urges a little bit Kal bent over and took one of the hard nubbins in his mouth. Perra gasped, her back arching slightly as one hand came up to the back of his head and pressed his face into the oil-slickened breast. Her other hand started making its way towards her clit until Kal's larger hand blocked her. After gently pulling it's hood back he began teasing her swollen clit with the lightest of touches and brushes. Each touch was like a shock to Perra's body and the girl let out a long moan full of desire. As Kal switched to the other breast she knew another climax was soon on its way. Perra saw a way to put her free hand to use out the corner of her eye and reached over grabbing the base of Kal's cock.\n\nEverything stopped for a moment before Kal's hand, which had been making a poor attempt at continuing the massage, came back and grabbed her wrist to hold it in place. His head came up and he gave her a pleading look.\n\n\"Don't, I'm close,\" he gasped fighting back the urge to come.\n\nPerra couldn't hide her surprise, and delight, that she had turned him on so much, \"I thought the girls would have...\"\n\nKal shook his head smiling, \"Not for the past week, they got together and decided to wait for you. I did too.\"\n\nPerra actually felt bad for a moment, she had assumed that he had an outlet for her incessant teasing over the last seven days. With a look of determination, she decided to shove her nervousness off to the side and put her lessons with Kahrin earlier to good use. Kal's eyes widened in shock as Perra leaned over and took the head of his cock in her mouth while pressing against the resistance of his hand to squeeze and stroke the base. Kal's hand left her wrist and went to the back of her head as Kahrin had told her to expect, but he never pushed her down onto his prick. Perra rolled her lips back and forth across the sensitive base of the head as her freed hand stroked more of the shaft.\n\nKal had just enough sense left to start making little circles around her clit before his orgasm swept into him.\n\n\"Perra, I'm...\" was as far as he got before he started filling the teen's mouth with his seed. The first couple of spurts had just hit her tongue when the combination Kal's fingers vibrating her clit, along with her already being close, and the excitement of making a man cum for the first time all came together to send Perra over the edge a second time. She let out a muffled shriek as she came with his cock still in her mouth while fighting against the desire to clench her teeth.\n\nKal had closed his eyes as he came and looked down as his orgasm abated. Seeing his cock buried in Perra's mouth with a tiny bit of his cum dripping out one side while her body shook from her own climax was so arousing Kal wondered if he would need to worry about going soft at all. As she started to come down she took one long final suck before lightly swabbing the head with her tongue. Remembering one of her last lessons from earlier, Perra laid back in the bed then locked eyes with Kal before closing her eyes and swallowing down the contents of her mouth with a smile. Flushing red with her own brazenness she brought a finger up and wiped what had escaped earlier off her chin and sucked it off while looking up at him. Part of her wanted to run and hide in embarrassment that she could act like some wanton whore but that was quickly slapped down by the rush of power she felt over this man as he stared at her with barely contained lust and made even more exciting when she saw his cock, that had been going soft, twitch and start to rise again.\n\nPerra then tried another of Kahrin's tricks: beg. She spread her legs just a tiny bit and looked up into Kal's eyes then slid a hand down, nudging his out of the way she used two fingers to barely open her lips and said, \"Please?\"\n\nPart of Kal wondered how he seemed to have lost control of this whole encounter. All the other parts were so aroused by the girl's actions they didn't give a damn and told the first part to shut the fuck up.\n\nKal was more than hard enough to take Perra right now but he had come in with a plan, and he intended to stick to it as much as he could. He kissed his way up from her ankle lifting her leg up then laying it over to the side with the knee bent as he made his way up her inner thigh. Giving her pussy a long swipe with his tongue from bottom to top that made Perra squeal he then did the same with the other leg, so she was completely opened up in front of him.\n\nPerra was panting again as he bent down and began running his tongue up and over the lips of her sex. Kal worked the girl up to fever pitch nibbling and toying with her lips, probing inside her with his tongue, and occasionally coming up and taking small swipes at her clit. As she got closer to cumming he secretly oiled up his cock. When she was on the very edge he moved up her body and kissed her, his cock brushing against her opening. She gasped into his mouth at the contact then one of her hands slid down between them so her fingers were on her clit.\n\nPerra nodded and her fingers flew over her pearl as Kal slowly pushed inside. She felt the sting of losing her virginity only a moment before her world exploded from the feeling of being completely filled. Perra's arms wrapped around Kal's back and neck as she mashed their lips together with bruising force, screaming into his mouth with the intensity of her orgasm. Kal lowered his weight down onto her hoping to keep her from accidentally hurting herself. Unwittingly that made him push even deeper into her pussy making the head of his cock brush up against her cervix and setting her off a second time.\n\nBy the time Perra let Kal go his lips felt they were twice their normal size and he was sure he had claw marks on his back from her fingernails. Kal cautiously pulled out and slid back in checking for any signs of pain, Perra didn't even wince.\n\nHer eyes fluttered as she opened them then looked up at Kal smiling, \"More, please.\"\n\nKal began sliding in and out of Perra's tight welcoming sex, \"As you wish.\"\n\n---\n\nFar away in Ikuno's cave the blue oni tossed and turned in her sleep.\n\nIkuno walked along a barren stretch of land, dry and cracked by the heat. A red sun, though high in the sky, offered little light and less warmth as it had to get through thick billowing gray clouds that stretched all the way to the ground in every direction. Clay snapped and shattered beneath her feet as she attempted to inspect her surroundings.\n\nShe felt a presence coming closer and spun to face it, summoning her iron club.\n\nAnd woke up in her bed.\n\nIkuno looked over next to her at the iron club in her hand, summoned while she was asleep.\n\nSomething was very wrong.\n\n---\n\nBack on the astral plane two eyes with glowing green irises appeared in the gray mists and looked about, frantically searching for something that was supposed to have been there."
    ],
    "authorname": "BluDraygn",
    "tags": [
        "trc",
        "monster girl",
        "first",
        "fantasy",
        "magic",
        "oral",
        "monstergirl",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-runesmith-chronicles-ch-15"
}