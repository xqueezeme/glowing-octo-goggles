{
    "title": "Joel and Carrie Ch. 02",
    "pages": [
        "\"I can't believe we're actually doing it!\" Tina said nervously as I drove us to Carrie's house.\n\n\"My parents better not find out,\" Robbie said with a shake of his head.\n\n\"Will you two relax!\" I laughed. \"We've all already been accepted at the colleges we want to go to next year. What can they really do if they find out?\"\n\n\"My parents? Do you remember the junior prom?\" Robbie asked rhetorically. His parents were tough. Robbie missed his junior prom because he got a C on a test. Spanish no less!\n\n\"Okay, maybe you have a point,\" I said. \"But we've never done this before and as long as we're careful you won't get caught. Besides, I promise it will be a great time.\"\n\n\"Where exactly are we going?\" he asked.\n\n\"And why did you make us bring bathing suits?\" Tina put in. \"You should have seen how hard it was to sneak past my mother and pull it out of the summer storage chest in the attic!\"\n\n\"We're visiting a friend,\" I smiled. I made the decision not to tell them about Carrie until they saw her for themselves. I wanted to watch their expressions.\n\n\"Who?\" Tina asked. She was always the impatient one in our group.\n\n\"You'll know soon enough,\" I replied. \"But that reminds me. You two have to make a promise.\"\n\n\"I don't like the sound of this,\" Robbie said.\n\n\"Oh will you loosen up!\" I snapped. \"We've been best friends for years. Do you really think I'd make you promise something that would be bad?\"\n\n\"Depends,\" Robbie answered. \"I still remember third grade, when...\"\n\n\"If you bring up Tonya McGill again, I swear I'll pull this car over and...\"\n\n\"Will you two please stop it!\" Tina snapped, interrupting us both. \"Joel, just tell us what you want us to promise.\"\n\n\"It's simple really,\" I sighed. \"You can never tell anyone what happens today or who we're going to visit.\"\n\n\"What exactly is going to happen?\" Robbie asked.\n\n\"Nothing more than you want to,\" I replied cryptically. Seeing the expressions on both their faces I sighed and added, \"Oh come on! Worse case we'll have a day of fun, drinking and hanging out in a hot tub.\"\n\n\"That sounds like fun,\" Robbie finally said.\n\n\"I like the part about the hot tub,\" Tina smiled. \"At least we now know why we're carrying these bathing suits.\"\n\n\"So do you guys promise?\" I asked them again.\n\n\"Sure,\" Robbie shrugged.\n\n\"Just as long as we're not going to do anything stupid like sneak into someone's house while they're away,\" Tina added.\n\n\"You won't be forced to do anything you don't want to,\" I replied. She finally nodded in agreement.\n\n\"How's your pop been about the suspension?\" Robbie asked, changing the subject. I smiled and sighed to myself. They'd agreed. One hurdle down, one big one to go!\n\n\"The first day was bad, but he's been too busy to even notice me since,\" I replied. I caught myself glancing at my friends as the conversation continued.\n\nRobbie was thinly built. He had dark hair and blue eyes, much like Tara, only he wasn't nearly as pretty. I hid my grin as the thought past through my head. Don't get me wrong. I guess Robbie was a good-looking guy in his way. He just wasn't one of the beautiful people. Truthfully, neither was I.\n\nTina on the other hand could definitely be one if she made the effort. She had a very hot body that she seemed to do her best to hide. Her breasts were on the large side and her ass made my mouth water. Just the thought of getting my hands on it was giving me a hard on!\n\nHer long, strawberry blond hair went well with her pale skin and high cheekbones. All she needed to do was take off her glasses, wear some make up and dump the frumpy clothes and she'd be a real knockout. Tina noticed me looking at her via the rearview mirror and gave me an odd look. My expression must have been telegraphing my thoughts based on her reaction.\n\n\"So Robbie, have your parents finally agreed to let you go to school at the same college as Tina?\" I asked quickly, trying to distract Tina.\n\n\"They aren't thrilled,\" Robbie sighed, and then looked at Tina and quickly added, \"It's not that they don't like you. It's just that we've been dating for years and they think I should be free for some new experiences in college.\"\n\n\"What do you think?\" Tina asked, her tone sending off all kinds of warning messages. Thankfully, Robbie picked up on them.\n\n\"Whatever you tell me to dear,\" he joked. Tina rolled her eyes and I burst out laughing.\n\n\"Smart man!\" I said.\n\n\"Really, Robbie,\" she insisted. \"What do you think about your parents point?\"\n\n\"Truthfully,\" Robbie sighed, knowing she wasn't going to let the issue drop. \"I can see where they're coming from, but I can't picture my life without you in it and frankly, I don't want to.\" It was the right answer.\n\n\"I love you,\" Tina said after a moment's hesitation, grabbing hold of his hand.\n\n\"I love you too,\" Robbie said, squeezing tight. I smiled to myself. They were my two best friends in the whole world and I was happy they had each other. Of course, that didn't stop me from teasing them, especially when they tried to sneak a quick kiss. They knew me better than to try that in front of me.\n\n\"I think I'm going to puke,\" I said, making barf noises.\n\n\"Oh, will you please grow up!\" Tina snapped.\n\n\"He's just jealous,\" Robbie put in.\n\n\"No argument there,\" I laughed. \"You are one lucky dog to get someone like Tina.\"\n\n\"That's right,\" Robbie grinned. \"And you just remember that she's mine. Hands off!\"\n\n\"We're here,\" I said, ignoring his comment. I fully intended to do a bit more than touch Tina before today was over, not that Robbie would mind. He'd have Carrie to play with while I was busy with his girl.\n\n\"Where?\" Tina asked. I smiled and pulled in front of Carrie's house. It was very nice. I didn't know what her parents did for a living, but money certainly wasn't an issue.\n\n\"Didn't I already say I wasn't going to sneak into someone's house?\" Tina asked.\n\n\"We're not going to sneak,\" I replied, shutting the car and getting out. \"We've been invited.\"\n\n\"By who?\" Robbie asked as he exited the car.\n\n\"You'll see soon enough,\" I replied. \"Let's hurry up before the neighbors notice us.\"\n\n\"I knew we were sneaking in somewhere!\" Tina cried as she slammed her door shut.\n\n\"We're not sneaking!\" I said in exasperation. \"But the three of you are going to be in trouble for cutting if we're caught.\"\n\n\"And that's not sneaking?\" Tina asked. I bit my tongue and shook my head refusing to continue such a silly conversation. I led the way to the front door and rang the bell. Carrie promptly answered.\n\n\"Hello!\" she smiled.\n\n\"You guys know my girlfriend Carrie,\" I said with a grin.\n\n\"Your girlfriend?\" Robbie asked in amazement. Even Tina was speechless for a moment.\n\n\"Come on in,\" Carrie added. I kissed her before moving past. She was dressed pretty conservatively.\n\n\"I liked the classy look,\" I said.\n\n\"Thanks,\" Carrie said, surprising me with a blush. \"I thought you might. That's why I dressed this way.\"\n\n\"Now I'm going to barf,\" Tina said with a smirk as all four of us moved into the house.\n\n\"Nice place,\" I said to Carrie. She nodded, but was distracted by Robbie's expression.\n\n\"Are you okay?\" she asked him.\n\n\"He'll be fine,\" Tina said with a shake of her head. \"Or at least he will if he knows what's good for him.\"\n\n\"Sorry,\" Robbie said, snapping out of his funk.\n\n\"No problem,\" Carrie shrugged. \"Why don't we go hang out in my father's game room? There's a pool table.\"\n\n\"Sounds good to me,\" Tina said, taking Robbie by the hand. \"Lead the way.\"\n\nCarrie directed us down a set of steps. The game room was huge. The ceiling was surprisingly high considering we were in the basement. There was a pool table there as Carrie promised, but there was also a bar, a card table and a large-screened television.\n\n\n\"There's beer on tap and wine in the refrigerator,\" Carrie said, pointing to the bar.\n\n\"I've died and gone to heaven!\" Robbie nearly crowed as he looked around the room. Carrie laughed.\n\n\"Forgive him,\" Tina sighed. \"He's just a little boy at heart.\"\n\n\"Aren't they all?\" Carrie smirked, with a gesture around the room. \"Look at what my father built.\"\n\n\"Let's play,\" Robbie said, moving to set up the table.\n\n\"Sure,\" Carrie said. \"You and Tina against Joel and me?\"\n\n\"Okay,\" Tina replied.\n\n\"I hope you're good at pool,\" Robbie grinned. \"Because Joel sucks!\" I grimaced, but didn't comment. It was true. I was a horrible pool player.\n\n\"You can tell us how you two became a couple while we play,\" Tina added.\n\n\"What is everyone drinking?\" I asked. They told me and went to the bar. I got the drinks and listened while Carrie told them that she stopped over two nights ago to apologize for her part in my getting into a fight. I noticed she never mentioned Tara or Jill. I guess it made sense.\n\n\"And yesterday I cut school and we hung out,\" Carrie was saying as I handed out the drinks.\n\n\"Did you do anything interesting?\" Tina asked. Carrie smiled sexily.\n\n\"Oh, we found some stuff to keep us busy.\"\n\n\"You lucky shit!\" Robbie snapped, earning him a punch in the arm from Tina.\n\n\"Let's play,\" I said. A half hour later we were just finishing up our second game.\n\n\"We win again,\" Carrie said as she sunk the eight ball. I smiled.\n\n\"What are you grinning at?\" Robbie griped. \"You haven't sunk a single ball!\"\n\n\"Yes, but I haven't scratched either.\"\n\n\"That is a step up for him,\" Tina said with a shake of her head.\n\n\"Why don't you two play a game,\" Carrie said. \"Joel can help me make a batch of Bloody Marys.\"\n\nThey nodded and Robbie started racking the balls. Carrie and I went behind the bar. She handed me a can of tomato juice and an opener. I watched Tina bend over her cue stick to break as I open the can.\n\n\"She does have a nice ass,\" Carrie said lowly. I blushed and nodded. Carrie smiled and added, \"So, do you still want to go through with this?\"\n\n\"Do you?\" I asked in reply.\n\n\"They're both cute enough,\" she smiled. \"But they're your friends, so it's your decision.\" I looked one more time at Tina's ass and then turned back to Carrie. I gave her body a quick look as well before meeting her eyes and smiling.\n\n\"I guess so,\" I said. \"If we don't then the odds are I won't be able to get my hands on you today either.\"\n\n\"I would think you could use the break after yesterday.\"\n\n\"Not hardly,\" I laughed. \"I want you so badly it almost hurts!\"\n\n\"Good!\" Carrie said. \"In that case, just leave everything to me.\"\n\n\"What's your plan?\" I asked.\n\n\"Wait and see,\" she smirked. For a moment I felt bad for what I did to Tina and Robbie early. Now I was the one stuck guessing at what was going to happen. In retaliation I got behind Carrie and rubbed my crotch against her ass.\n\n\"Later,\" Carrie promised, reaching behind her and squeezing my cock through my pants. I looked past her at Tina and Robbie. They were oblivious so I took a moment to cup Carrie's breasts and kiss her neck. Carrie smiled as I moved away. She shook her head and added, \"Naughty! Naughty!\" We finished making the drinks quickly.\n\n\"Let's play cards,\" Carrie said once Robbie and Tina finished their game.\n\n\"Strip poker?\" I asked.\n\n\"See,\" Carrie said to Tina. \"They really are all just little boys.\"\n\n\"Hey!\" I cried. Tina and Carrie laughed. I smiled to myself as we sat down. Carrie was a smart one. She knew that Tina was the key. Robbie was a guy. He'd jump at the chance to get his hands on Carrie.\n\n\"Well, are we playing strip poker or not?\" Robbie asked, seeming to prove my point.\n\n\"Pervert!\" Tina snapped.\n\n\"Not right now,\" Carrie answered, leaving the possibility open. Tina looked at her oddly. Carrie met her gaze and smiled. It was friendly, but it also held a sexual tension that Carrie seemed to be able to turn on and off at will. I was surprise to see Tina look away first and blush slightly. I could tell that Carrie was getting her.\n\n'You little minx!' I thought to myself, not sure if I meant Carrie or Tina. I could feel my cock stir slightly. It was early yet, but things were looking good!\n\n\"Let's play the guys against the girls,\" Carrie said. \"The winners get to choose what we do next.\"\n\n\"Sounds good to me,\" I shrugged. Tina and Robbie agreed readily enough. We drank the Bloody Marys as we played. I made another batch when it was time. They were a bit stronger. It wasn't long before all of us were feeling no pain. We weren't really drunk. It was more of a pleasant buzz.\n\nThe game went back and forth for quite a while. I thought Robbie and I had the ladies at one point, but they fought back valiantly. It was still pretty even until I threw a couple of hands. It wasn't that I was bored or anything. I just wanted to take the next step. Besides, I figured that it would be smarter to let the girls win since Carrie was the one with the plan. It wasn't long before the ladies were victorious.\n\n\"So, what are we doing next?\" I asked after Carrie and Tina were done celebrating. Carrie moved next to Tina and whispered something in her ear. I noticed that she kept finding excuses to touch Tina. Tina listened intently and then nodded.\n\n\"We've decided to play Truth or Dare,\" Carrie said.\n\n\"And we're the ones who are acting like kids?\" I asked.\n\n\"That depends if you chicken out and take the dare,\" Tina giggled.\n\n\"Not me,\" I said. \"I'm taking truth no matter what.\"\n\n\"Me too!\" Robbie swore.\n\n\"We'll see,\" Carrie said. \"Tina, you can go first.\"\n\n\"Thanks,\" Tina smiled, and then turned to me and asked without preamble, \"What were you thinking back in the car when I caught you staring at me in the rearview mirror?\"\n\n\"Wow!\" I said. \"This is going to be a tough game.\"\n\n\"Stop stalling,\" Carrie said with a smirk.\n\n\"Go ahead,\" Robbie said. \"Just keep it clean. That's my girlfriend you were staring at.\"\n\n\"And you haven't been ogling his since the first moment we arrived?\" Tina asked pointedly.\n\n\"She's got you there!\" I laughed.\n\n\"Just answer the question,\" Robbie grumbled.\n\n\"Okay,\" I said, forcing myself to stop laughing. I looked at Tina and answered her question, \"I was thinking that you'd be one of the hottest girls in the school if you got a pair of contacts and wore a little makeup.\"\n\n\"Sure! These freckles do wonders for my sex appeal,\" Tina said with a roll of her eyes.\n\n\"Actually, they do add to it a little,\" I added. \"Tina, don't you think it's time that you just accept the fact that you're beautiful?\"\n\n\"I've been telling you that for years,\" Robbie added.\n\n\"You're biased,\" she said. \"So is Joel.\"\n\n\"Well I'm not,\" Carrie said, smiling warmly. \"And I say they're both correct.\"\n\n\"But...\"\n\n\"No buts,\" Carrie said confidently. \"It's the simple truth. I wouldn't say so if it weren't.\"\n\n\"Thanks,\" Tina said hesitantly.\n\n\"I'm not going to lose you over this realization?\" Robbie half joked. \"If you finally accept that you're beautiful, maybe you'll decide you can do better?\"\n\n\"At least someone better looking,\" I teased.\n\n\"I could never find anyone better,\" Tina answered seriously. \"Besides, I think you're handsome.\"\n\n\"Better get your glasses checked,\" I added.\n\n\"Fuck you!\" Robbie snapped at me.\n\n\"Even if you weren't handsome,\" Tina continued, this time smiling slightly. \"I'd stay with you anyway. With women it's not always about how handsome a guy is. Look at Joel and Carrie.\"\n\n\"Ouch!\" I cried. \"That hurt!\"\n\n\"I don't want to hear it!\" Tina laughed. \"You've got Carrie for a girlfriend. You'll get no pity from me!\"\n\n\"Amen to that!\" Robbie put in.\n\n\"My turn for a question,\" Carrie said, putting and end to that question and the conversation that followed. I thought she might have been a little embarrassed again, but if so she was hiding it well. \"Tina, what I want to know is if you've ever thought about Joel as anything other than a friend.\"\n\n\"Sure,\" Tina answered. \"I had a crush on him in eighth grade.\"\n\n\"You did?\" I asked in surprise.\n\n\"Of course she did,\" Robbie sighed. \"I tried to tell you back then, but you wouldn't listen.\"\n\n\"And now it's too late,\" Tina grinned. \"I'm Robbie's girl.\"\n\n\"Speaking of which,\" Carrie interjected. \"Robbie, it's your turn for a question.\"\n\n\"That's easy,\" Robbie grinned. \"Carrie, what do you see in this bum?\"\n\n\"I first fell for him because he was kind. He didn't take advantage of me when I was drunk and hurting. You don't meet very many guys with morals these days.\"\n\n\"Joel? Moral?\" Robbie asked in disbelief.\n\n\"Dick!\" I snapped at him, but I was laughing.\n\n\"It doesn't hurt that he's one hell of a lover,\" Carrie added.\n\n\"Is he really that good?\" Tina asked, looking at me oddly. Carrie nodded.\n\n\"Having second thoughts?\" I asked.\n\n\"Now who's a dick?\" Tina asked with a shake of her head.\n\n\"Whatever,\" I said. \"It's finally my turn for a question.\"\n\n\"Nope,\" Carrie said. \"Let's go use the hot tub.\"\n\n\"Hey!\" I said, disappointed momentarily.\n\n\"Don't worry,\" she said. \"We'll continue the game there.\"\n\n\"In that case, let's go,\" I said as I stood. The others quickly followed.\n\nWe padded through the house carrying our suits. The hot tub was in Carrie's parent's bathroom on the top floor. It was already half filled. Carrie put more hot water in as we all went to separate rooms to change. I returned to find Robbie and Carrie waiting. Robbie eyes were locked on Carrie.\n\n\"Robbie, you better not let Tina see you drooling like that,\" I said with a shake of my head. Carrie was actually wearing the string bikini again. I didn't think she'd do it. I guess I should have known better. Carrie was many thing, but shy was not one of them.\n\n\"I can't help it!\" he groaned.\n\n\"Help what?\" Tina said as she entered wearing a tasteful one piece. She took one look at Carrie and cried, \"Holy shit!\"\n\n\"Carrie, maybe you should get in the water before they both faint,\" I smiled.\n\n\"Okay,\" she said with a shrug and climbed into the tub. I joined her.\n\n\"Are you two coming?\" I asked. Robbie hesitated, but Tina was in the tub a split second later.\n\n\"Come on Robbie,\" she said.\n\n\"I don't know,\" Robbie said uncomfortable.\n\n\"Oh come on!\" I added. \"You've been staring at Carrie all day. Now there's just a little more to see. I don't mind and obviously, neither does she.\"\n\n\"You call that a little more?\" Tina snorted. \"I'd have to strip for you to see as much of me as he'll see of Carrie!\"\n\n\"Hey, I wouldn't mind,\" I grinned.\n\n\"Some friend you are!\" Robbie snapped, surprising me. He sounded truly mad for the first time. I decided to let the ladies handle getting him into the tub. I just seemed to be pissing him off.\n\n\"Come on Robbie,\" Carrie said, letting her body float up slightly. Her breasts peaked from beneath the water. \"Fair is fair.\"\n\n\"My God! You are such a slut!\" Tina said, but then she started giggling. The alcohol and her own innate horniness were having their affect. \"Come on Robbie! It's no big deal!\"\n\nRobbie hesitated a moment longer before finally shrugging and climbing into the tub. He sat next to Tina. I was so close to Carrie that our legs were touching. She looked at me, smiled and started rubbing my cock through my bathing suit. I returned the favor.\n\n\"Joel, it's your turn to ask a question,\" Carrie stated as if nothing unusual was happening. I took a sip of my drink and smiled.\n\n\"Tina,\" I smiled. She smiled nervously back. \"Have you ever thought about being with another woman?\"\n\n\"I've changed my mind,\" Tina said as she blushed badly. \"I'll take a dare!\" I grinned. That was answer enough.\n\n\"Chicken!\" Robbie said. Carrie just looked into Tina's eyes. Robbie's girlfriend blushed an even deeper shade of red.\n\n\"Are you sure?\" I asked.\n\n\"Yes!\" she said quickly.\n\n\"Fine, here's your dare,\" I began.\n\n\"Nothing too crazy, please?\" Tina said. She sounded really frightened. I quickly decided to change the dare I had in mind. She wasn't ready for Carrie yet. My new girlfriend would eat poor Tina alive.\n\n\"Okay,\" I said. \"You and Carrie have to switch seats for the next five minutes.\"",
        "\"You want me to let her near my Robbie?\" Tina asked in concern.\n\n\"Tina, I'd be more worried about yourself if we switch seats,\" Carrie laughed. \"Do you realize that he's got his fingers between my legs as we speak?\"\n\n'Oh wow!' I thought. 'It's now or never!' Carrie was pushing harder than I would, but it was her show.\n\n\"He does not!\" Robbie cried.\n\n\"Sure I do,\" I shrugged. \"But she started it.\"\n\n\"This is getting a little too crazy for me!\" Robbie said, not quite surprising me. I looked at Carrie and she nodded once. I gotten it all confused. I thought Tina was going to be the one to convince, but I guess I should have known better. Robbie was a guy, but he also wasn't nearly as daring as his girlfriend.\n\n\"You can leave at any time,\" Carrie said, giving Robbie her best seductive smile.\n\n\"But before you go, remember what your parents wanted you to do,\" I put in.\n\n\"What are you talking about?\" Robbie asked in confusion.\n\n\"On the way over you said that your parents weren't thrilled that you and Tina were going to the same college. They wanted you to experience new things,\" I said, talking quickly.\n\n\"They didn't mean this!\" Robbie snapped.\n\n\"Maybe not,\" I agreed. \"But you said that you couldn't picture your life without Tina.\"\n\n\"Sure,\" he said, his confusion still plain to see.\n\n\"Well, this gives you the chance to stay with Tina and experience some new things,\" I said, and then grinning added, \"And let me tell you, Carrie can show you quite a lot of things you never imagined!\"\n\n\"Absolutely not!\" Robbie cried. I sighed to myself. So close and yet so far!\n\n\"Why don't you ask Tina how she feels,\" Carrie put in calmly, surprising everyone, most obviously Tina.\n\n\"What's that supposed to mean?\" Robbie asked.\n\n\"Ask her,\" Carrie said, pointing to Tina who was looking back and forth between Robbie and me.\n\n\"Tina, how do you feel about this?\" Robbie asked. I could almost hear the lump in his throat.\n\n\"I love you so much! I want to spend the rest of my life with you,\" Tina said carefully.\n\n\"Tina,\" Carrie said softly. \"Tell him the rest.\"\n\n\"I...\" Tina began, but then suddenly froze.\n\n\"It's okay,\" Carrie said, smiling warmly. \"Robbie loves you just as much as you love him. He isn't going to run away because you've been honest with him. He's a real man.\"\n\n\"Well,\" Tina said so softly that I almost didn't hear her. \"I am curious about what it would feel like to be with someone else.\"\n\n\"You are?\" Robbie asked in surprise.\n\n\"Of course she is,\" Carrie smiled. \"She's only human.\"\n\n\"But...\" Robbie began. I cut him off.\n\n\"Come on!\" I said. \"You can't tell me you haven't wondered what Carrie's like in bed!\"\n\n\"Well...\" Robbie said with a blush.\n\n\"Do you think that it's fair for you to fantasize about me and expect Tina not to fantasize about Joel?\" Carrie asked. We were tag teaming him, but it was necessary if we were going to get Robbie to do what I knew he'd love.\n\n\"But he's our best friend!\" Robbie cried.\n\n\"Yes, I am,\" I said with a smile. \"And I always will be. I'm not talking about anything other than what your parents wanted. You'll gain some new experiences with Carrie.\"\n\n\"And in return Tina gains some with Joel,\" Carrie said. \"I promise, you'll both enjoy it immensely.\"\n\n\"Shit!\" Robbie cried. \"I'm so confused.\"\n\n\"Robbie,\" Tina said, biting her bottom lip and looking between the three of us. \"Let's do it.\"\n\n\"What?\"\n\n\"Let's do it,\" Tina said carefully. \"We may not get a chance like this ever again. Don't you want to try it once with someone else?\"\n\n\"Tina, I don't want to lose you!\" Robbie cried.\n\n\"You won't, I promise,\" Tina said. \"But I don't want you always wondering what it would have been like if we took Joel and Carrie up on their offer. And truthfully, I don't want to wonder about it either.\"\n\n\"Oh fuck!\" Robbie said in confusion. Carrie stood in the hot tub with her dark blue eyes smiling seductively. She slowly moved toward Robbie with the water falling from her tanned body, leaving her dripping in a string bikini that hid almost nothing. She drew all three sets of eyes to her. At that moment she looked the part of a golden blond succubus.\n\nRobbie sat there mesmerized. Tina made room for her without a word. Carrie sat down in Tina's spot and slowly moved her lips toward Robbie's. He actually squeaked just before they kissed. Carrie took one of his hands in hers and lifted it to her breasts. She rubbed it against them until he started doing it himself. I saw Carrie slip a hand under the water and Robbie's eyes suddenly grew big.\n\n\"Come here,\" I said softly to Tina. She wasn't wearing her glasses and her face was flushed in excitement. She looked a little stunned despite her decision to have some fun as she slowly made her way over. Tina was nowhere near as seductive as Carrie at the moment, but then again her almost innocent look of desire was enticing in its own way. I smiled when she finally reached me and took her into my arms.\n\nShe was stiff at first, but Tina quickly started responding to my kisses. It wasn't long before I started kissing my way down her neck. She enjoyed the attention until I undid the top of her suit. She stiffened visibly.\n\n\"Relax,\" I whispered in her ear. \"I've wanted to do this for years. So have you.\"\n\n\"I know!\" Tina moaned. \"But Robbie...\"\n\n\"Is about to enjoy my girlfriend's mouth,\" I interjected.\n\n\"What?\" Tina asked, my words not really sinking in. I took her chin and gently directed her face back toward Robbie and Carrie. Robbie was up on the ledge. Carrie already had his bathing suit off. His long thin cock was sticking straight up. Carrie took the head into her mouth as we watched.\n\n\"Oh yeah!\" Robbie cried. He knew that Tina and I were watching him. \"Tina you have to ask her what's she's doing! It feels amazing!\"\n\n\"I will,\" Tina said, smiling suddenly. \"Later!\" She then turned back toward me and pulled the top of her bathing suit down. Her breasts were only a little larger than Carrie's, but her areola's were a huge. Their breasts weren't shaped the same either. Tina's were pointier and more to the sides. I leaned forward and sucked one nipple in.\n\n\"Yes!\" Tina gasped. I continued to suck first one nipple and then the other for a while. Tina's hand wrapped around my cock and she moaned into my ear. \"You're thicker than Robbie!\"\n\n\"He is,\" Carrie said from the other side of the tub. \"But they're about the same length. I love the feel of Robbie's cock down my throat! You should try Joel's!\"\n\n\"I will!\" Tina panted as she yanked my bathing suit off. My cock popped up and slapped my stomach despite the fact that it was still submerged in the hot tub. Tina didn't hesitate. She dipped her head under the water and started sucking my cock.\n\n\"Oh wow!\" I moaned when she didn't quickly come up for air. \"She can sure hold her breath a long time!\"\n\n\"That's what happens when you date a swimmer,\" Robbie laughed. \"She does this thing with the tip of her tongue...\"\n\n\"I know!\" I interjected with a groan. \"I can feel it! You better fuck Carrie for everything your worth! Because I'm going to do the same to Tina!\"\n\n\"That is most definitely a deal!\" Robbie gasped. Whatever his reservations before, they were gone for the time being. Tina popped out of the water gasping for air.\n\n\"Come with me!\" I said, pulling her from the water. I took a towel and quickly dried both of us. \"We'll be back in a little while. You two enjoy yourselves.\"\n\nCarrie waved as she continued to suck Robbie. He was too busy groaning to respond. I figured he had less than a minute before he lost it. I led Tina out of Carrie's parent's master bedroom and down the hall. I found Carrie's room and pulled Tina into it.\n\n\"What now?\" she asked provocatively. I pulled her into a kiss. She seemed much more relaxed now that we were alone.\n\n\"Anything you want,\" I said once we broke apart.\n\n\"Anything?\" she asked as she lay on the bed and gazed at me sexily. I would never have guessed Tina could be this way. Robbie was a lucky bastard too!\n\n\"Sure,\" I promised, moving to the bed and getting between her legs.\n\n\"Good!\" she grinned. \"First I want to feel your cock fill my pussy! I've never had anyone other than Robbie.\"\n\n\"In a little while,\" I grinned, delaying the fulfillment of my promise.\n\n\"Hey!\" she cried, but then fell silent when I leaned over and kissed her pussy through her thin thatch of strawberry blond hair. A few moments later her pale skinned legs fell wide open.\n\n\"Robbie's never done this to me before!\" she gasped.\n\n\"Don't worry,\" I smiled. \"I'm sure Carrie is teaching him how right now.\"\n\n\"I hope so!\" Tina groaned. I stopped talking and focused on her pussy. Tina didn't take very long to come the first time, or the second for that matter. I was enjoying myself immensely.\n\n\"Think you ready for me?\" I asked as I sat up.\n\n\"Please hurry!\" she groaned. \"I want you in me!\" I moved until my cock was at the entrance of her pussy. I started pushing in slowly, but Tina was impatient. She grabbed my ass and pulled me deep. \"Yes!\"\n\nMy face was covered in her juices, but that didn't seem to bother Tina at all. She kissed me and thrust her tongue into my mouth. I reached between us and squeezed her breasts. Tina groaned.\n\n\"You're one hot bitch!\" I said in amazement.\n\n\"Your long, fat cock is driving me crazy!\" Tina cried. \"Fuck me! Fuck me please!\"\n\nI started serious pounding into Tina and she loved every minute of it! So did I! She wrapped her legs around me and came once more. I finally was ready.\n\n\"I'm going to cum soon!\" I groaned. \"Do you want me to cum in you or on you?\"\n\nTina pushed me away and rolled over. She wrapped my cock between her tits and started stroking me.\n\n\"This is Robbie's favorite way to cum!\"\n\n\"I can see why!\" I grunted.\n\n\"I like it too,\" Tina admitted. \"I like how a cock feels sliding between my breasts. I also like how it looks when cum sprays from the tip. I especially like how it tastes! I'm wondering if yours will taste the same.\"\n\n\"Let's find out!\" I cried and picked up the pace. Tina grinned and opened her mouth wide. It wasn't long before my orgasm hit. I sprayed my cum into her mouth and all over her face! Tina just kept smiling and swallowing. I was still looking at her when I was finally done.\n\n\"What's wrong?\" she asked.\n\n\"Absolutely nothing,\" I shrugged. \"I just can't believe you're as wild as you are. I would never have guessed.\"\n\n\"Neither would Robbie,\" Tina sighed. \"But I pretty much lost control when you led me in here.\"\n\n\"Is that a bad thing?\" I asked.\n\n\"Not unless Robbie reacts badly.\"\n\n\"He seemed perfectly happy when we left,\" I smiled. Tina nodded, but continued to look nervous, so I offered, \"Why don't we go see what they're up to?\"\n\n\"I'd like that,\" Tina smiled. I stood and took her hand. We walked back down the hall to the master bedroom.\n\n\"Oh yes Robbie!\" we heard Carrie cry. \"That's much better!\" Tina and I looked at each other before walking into the room. Robbie was lying on the bed and Carrie had her knees on either side of his head. She had his face buried in her pussy.\n\n\"I told you Carrie would show him how to pleasure a woman with his tongue,\" I said softly.\n\n\"I want to try that!\" Tina cried, causing Carrie to look up. She waved with one hand while the other directed Robbie's head.\n\n\"Here or back in the other room?\" I asked.\n\n\"Why don't you two come back a little later,\" Carrie said. \"We're not ready for you yet.\"\n\n\"There's your answer!\" Tina giggled, obviously feeling better about Robbie. She pulled me as quickly as she could back to Carrie's room. A few moments later I was lying on the bed with Tina riding my face. She was too excited to sit still so I grabbed her thighs and held her while my tongue drove deep into her pussy.\n\n\"Oh Joel!\" she cried. \"I'm going to cum again!\" I flicked her clit with my tongue and she was off again. Tina flopped next to me when she was done. I sat up and smiled down at her.\n\n\"Any other things you'd like to try?\" I asked.\n\n\"Tell me one of your favorites,\" Tina replied with a content smile.\n\n\"Roll over onto your stomach and I'll show you.\"\n\n\"Um, okay,\" Tina said tentatively. I smiled when I saw her white ass sticking up in the air. Her legs were only slightly spread, but her pale skin and strawberry blond thatch made my mouth water. I leaned forward once more and kissed her pussy, only this time it was from behind. She gasped slightly and cried, \"That still feels so nice!\"\n\n\"I'm glad you like it,\" I grinned. \"But just how much are you willing to try?\"\n\n\"What do you mean?\"\n\n\"Only this,\" I said, shifting my tongue to her ass.\n\n\"Hey!\" she cried, but she didn't push me away. In fact, after a couple of second she spread her legs wider.\n\n\"I knew you'd like it!\" I said knowingly. Tina was like Tara and Carrie. She liked getting her ass eaten. The perverseness of it appealed to her.\n\n\"It so sick!\" she groaned. \"But it feels so good!\"\n\n\"Has Robbie ever done this to you before?\" I asked, already knowing the answer, but wanting to here her say it.\n\n\"No,\" she admitted. \"But he did fuck my ass once.\"\n\n\"Really?\" I asked, honestly surprised.\n\n\"Well, sort of,\" she said, \"Only he didn't know it. He was really drunk and his cock slipped down past my pussy. He pushed into my ass before I could stop him.\"\n\n\"And then?\" I prompted.\n\n\"And then I didn't want him to stop,\" she sighed. \"But he passed out before we were done.\"\n\n\"Why didn't you ask him to do it another time?\" I asked.\n\n\"Too scared, I guess,\" she said. \"It is pretty sick.\"\n\n\"No it's not,\" I said with a shake of my head. \"I think it's wonderful.\"\n\n\"So then, you plan on fucking my ass?\" she asked.\n\n\"Of course!\" I grinned, after all, I'd been planned on doing just that since Carrie and I agreed to seduce my friends.\n\n\"Alright!\" she cried, leaving herself wide open to me.\n\nI reached between Tina's legs and inserted two fingers into her pussy from behind. She cried out as I fucked her with them. I continued to lick her ass the entire time. Afterward, I used two fingers from my other hand to get her ass ready.\n\n\"Joel! I can't wait any longer!\" Tina cried. \"Do it now! Fuck my ass! Stuff me full!\"\n\nI moved up and lined up her asshole with my cock. Tina grunted and groaned as I pushed deep into her bottom. Her strawberry blond hair fell in front of her face and she didn't bother to move it. Her head thrashed from side to side as I started pumping in and out of her.\n\n\"Your ass is so tight!\" I gasped. Tina squeezed with her ass muscled, causing me to groan.\n\n\"Too tight for you?\" Tina teased. In answer, I rammed into her harder. She gasped, relaxed her muscles and added, \"Maybe not!\"\n\n\"I love watching you pale ass shake with each thrust!\" I growled. \"Now reach under yourself and start playing with your pussy!\"\n\n\"I can't do that!\" Tina gasped, looking at me over her shoulder. Her hair was still in her eyes, but I knew she could see me. I pushed all the way in and stopped moving.\n\n\"Tina, my cock is buried deep in you ass,\" I smiled. \"What's playing with your own pussy compared to that?\"\n\n\"I can't!\" she cried.\n\n\"Sure you can,\" I insisted. \"Here, I'll help you.\" I took Tina's hand in my own and directed them both to her pussy from underneath. I'd barely started directing her fingers before she took over.\n\n\"You're making me such a slut!\" she cried. I heard her fingers making squishing sounds as she finger fucked her own pussy.\n\n\"Not making,\" I said, starting to fuck her ass once more. \"Just discovering how much of a slut you really are!\"\n\n\"I can't wait to show Robbie just how nasty I can be!\" she grunted as she neared another orgasm.\n\n\"Don't be surprised if he's not a little more nasty himself. Carrie is one perverted bitch!\"\n\n\"I hope so!\" Tina cried as she thrust her fingers deep and came once again. I held her hips and slammed in and out of her ass for about another few seconds before cumming. Tina cried out and rolled right into another orgasm. This girl seemed to have orgasms a dime a dozen when properly stimulated. The lucky bitch!\n\n\"Now what?\" Tina asked as we both lay there sweating and breathing heavy.\n\n\"You're insatiable!\" I laughed.\n\n\"Well,\" she said, blushing. \"I'm not sure how this is all going to affect Robbie in the end. He may never want to do this again and I don't want to miss out on anything!\"\n\n\"Just how adventurous are you willing to be?\" I asked.\n\n\"Why do you ask?\"\n\n\"How would you like to try a little girl on girl action?\" I asked, holding my breath. Tina looked at me in shock.\n\n\"Are you serious?\"\n\n\"Most definitely,\" I replied. \"In fact, Carrie mentioned to me how she'd love a chance at you.\"\n\n\"What about Robbie?\"\n\n\"Oh, I'm sure Carrie would like a chance at you both. I can just picture her licking you while Robbie fucks her from behind,\" I smiled. \"I've already promised Carrie that she'd have two dicks at the same time before the days is out.\"\n\n\"Two cocks at the same time!\" Tina cried.\n\n\"Sound interesting?\" I asked, rhetorically.\n\n\"Let's go!\" Tina said, standing and pulling me after her. I laughed as we once again trekked down the hall.\n\n\"Harder Robbie! Harder!\" we could hear Carrie crying out as we neared. \"Fuck my ass for all your worth! Make it hurt!\"\n\n\"So much for me showing Robbie the joys of anal sex,\" Tina said, but she was smiling. We walked into the room to see Carrie laying on her back with her legs over Robbie's shoulders as he slammed in and out of my girlfriend's ass.\n\n\"Having fun?\" Tina asked as we neared the bed. Robbie froze.\n\n\"Tina! I'm so sorry! I know this is so perverted, but Carrie likes it so much!\" he cried.\n\n\"Do you like it?\" Tina asked as she climbed onto the bed.\n\n\"Yes!\" Robbie admitted with a groan, sounding a little mortified.\n\n\"Good!\" Tina grinned. \"Because so do I.\"\n\n\"Really?\" he asked in amazement.\n\n\"I've got a load of Joel's cum in my ass to prove it.\"\n\n\"Can I have some?\" Carrie asked. Tina smiled.\n\n\"I thought you'd never ask!\" Tina straddled Carrie's head and sank her pussy and ass down on my girlfriend's mouth. Tina sighed happily a moment later. Carrie was obviously using her tongue to good affect.\n\n\"Robbie,\" I said as I climbed onto the bed as well. \"I'm sure Carrie would love for you to finish what you started.\" There was a moan of agreement from Carrie and Robbie started fucking Carrie ass once more.\n\nInstead of lying down, I stood on the bed and held onto the wall. Tina had her eyes closed as she enjoyed what Carrie was doing, but they snapped open when my cock slapped her in the forehead. I grinned and she laughed briefly before taking my cock into her mouth.\n\n\"Oh fuck Tina! That looks so hot!\" Robbie cried as he picked up the pace. This made Carrie moan under him. Tina made eye contact with her boyfriend and let her tongue travel to my balls as she used one hand to stroke my cock. \"You are such a slut!\"\n\n\"Yes, I am,\" Tina said calmly, never losing eye contact with Robbie. \"But I'm your slut, ready to do whatever you ask.\" I moaned and she wasn't even talking to me! Poor Robbie started slamming into Carrie's ass with everything he had.\n\nTina went back to licking my balls. She made sure Robbie was watching before slipping her tongue lower to my ass. I didn't mind at all. It felt pretty good. I took over stroking my cock as Tina focused my balls and ass.\n\n\"How does that feel?\" Robbie gasped out.\n\n\"Great!\" I groaned. \"I'm sure Tina or Carrie will show you later.\"\n\n\"Oh fuck! I'm going to cum!\" Robbie cried.\n\n\"Go ahead,\" I told him. \"Fill my girl's ass with your cum!\"\n\n\"Yes!\" Robbie yelled as he came. Tina took one look at his face while he had his orgasm and joined him.\n\nThey were both spent moments later and I pushed them away from Carrie. She was in a lust filled daze. Her body was sweat covered and her face was drenched in Tina's cum. Carrie's legs fell open and I could see Robbie's cum dripping out of her ass. I climbed between her legs and pushed my cock deep into her pussy. Her eyes snapped into focus.",
        "\"Having fun?\" I grinned.\n\n\"Shut up and fuck me with that fat cock of yours!\" she nearly growled. \"I need to cum so badly!\" I pulled out and left only the head of my dick in her.\n\n\"That's not a very nice way to ask for my help,\" I teased.\n\n\"You bastard!\"\n\n\"Hey,\" I grinned. \"If you want my help, you're going to have to ask for it nicely.\" Carrie looked up at me and suddenly started laughing. I pushed half in and then pulled out. She gasped and grew serious again.\n\n\"Oh please Joel!\" she said, her eyes still smiling. \"Please take that big fat cock of your and fuck me until I cum! Please! I'm begging you!\" Okay, maybe it was a little over the top, but the lady was begging.\n\n\"That's better,\" I said and then slammed deep. She gasped. \"Now I'm going to work on getting you to beg me to stop!\"\n\n\"It will never happen!\" Carrie growled defiantly. I fucked her for the next twenty minutes making her cum more than once, but each time she did, all she would say was, \"Again!\"\n\n\"Joel,\" she said as she neared another orgasm. \"I'm not begging or anything, but I wouldn't mind a rest after this time. Besides, I'd really like to feel you fill me with your cum.\"\n\n\"Good!\" I groaned. \"Because there is nothing in this world that's going to stop me from cumming in you. Right...about...now!\"\n\n\"Oh yes!\" Carrie cried as my cum filled her pussy. \"I love you so much!\"\n\n\"I love you too!\" I cried. \"Now cum for me!\"\n\nCarrie grunted and dug her nails into my back as she came. She thrashed under me. I was too busy finishing up my own orgasm to care about the pain her nails caused. It took a while for both of us to do much more than shuddered and pant.\n\n\"Where are Tina and Robbie?\" I wondered aloud. They were no longer in the room.\n\n\"Probably wherever you and Tina were earlier,\" Carrie answered. \"They'll be back once they're both sure that the other is okay.\" We lay together recuperating. I was just about ready to go again when the front door bell rang.\n\n\"Who could that be?\" I asked.\n\n\"Um, I think I know,\" Carrie said tentatively.\n\n\"Who?\"\n\n\"Alex, Jill's brother,\" Carrie replied. \"I hope you don't mind, but I sort of invited him and his girlfriend over last night. If it's a problem, I just won't answer the door.\" I hesitated a moment before answering.\n\n\"I don't think you should,\" I said, surprising Carrie.\n\n\"Oh, okay,\" she said, looking let down.\n\n\"Carrie, I'm not your boss,\" I found myself saying. I didn't want to disappoint her. \"You don't have to listen to me.\"\n\n\"No, but you are my boyfriend,\" Carrie shrugged. \"I don't want to do anything you're not comfortable with. I just thought Alex and Kanzi would be fun. That's all.\"\n\n\"Do they know about you, Tara and Alex's sister Jill?\" I asked.\n\n\"No,\" Carrie said. \"Alex is home from college with his new girlfriend for a long weekend. I saw him when I dropped Jill off last night and told him I'd be playing hooky with some friends today, and that if he and Kanzi wanted to relax they could come by.\"\n\n\n\"Hey!\" Robbie said as he and Tina came in. \"There is a black couple at the door.\"\n\n\"We know,\" Carrie said. \"They're friends.\"\n\n\"Carrie planned on trying to seduce them if you two didn't work out,\" I said bluntly. Instead of being angry or mortified like I feared, they both looked interested.\n\n\"Really?\" Tina asked. I nodded.\n\n\"They are a pretty hot couple,\" Robbie put in.\n\n\"Are you two interested?\" I asked. \"I told Carrie not to answer the door because I thought you guys wouldn't be into it.\"\n\n\"That's why you said no?\" Carrie asked.\n\n\"Of course,\" I shrugged. \"I already told you I'm willing to try anything.\" Carrie smiled warmly.\n\n\"He's a well built black guy. I bet he has a huge cock!\" Tina said, causing the three of us to laugh.\n\n\"Probably,\" I said.\n\n\"Robbie, can we please? Can we try and seduce them?\" Tina asked hopefully.\n\n\"Well, why not?\" Robbie shrugged. \"If we can have some fun with Joel and Carrie without it ruining our relationship, what's one more couple? Besides, I've never been with a black girl before either.\"\n\n\"Nice ass?\" I asked.\n\n\"Big and fat!\" Robbie laughed. \"She got a whole Nubian goddess thing going on! You'd have to see it to believe it!\"\n\n\"Carrie?\" I asked.\n\n\"I was the one who invited them,\" she said as her eyes flashed in lust.\n\n\"You know, it's not a certainty that we will be able to seduce them,\" I laughed.\n\n\"Are you kidding?\" Robbie said. \"If Carrie has another one of those string bikini's for Tina to borrow they'll never have a chance.\"\n\n\"I have something that will look great on her,\" Carrie grinned.\n\n\"In that case, I'll go stop them from leaving,\" I said, pulling on my suit. \"The three of you change the sheets, make the bed and put on your bathing suits. Ladies, be sure to wear cover-ups to start with. I'll meet you all in the game room and then we'll see what happens.\"\n\n\"This better work out,\" Tina said, grabbing my arm and pulling me into a kiss. \"I'm still not done with you and Robbie still has plans for Carrie.\" I looked over and saw my girlfriend kissing my best friend.\n\n\"Just make sure he doesn't try to implement them right now,\" I laughed. \"I'm going to look silly if you three take too long to come down.\"\n\n\"We'll be right there,\" Carrie said, breaking away from Robbie, but not without first giving his cock one more squeeze. Robbie moaned and reached for her. Carrie slapped his hand away. I shook my head and ran for the front door. The anticipation was almost more than I could bear. "
    ],
    "authorname": "JoeDreamer",
    "tags": [
        "group",
        "anal",
        "2f1m",
        "2f2m"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/joel-and-carrie-ch-02"
}