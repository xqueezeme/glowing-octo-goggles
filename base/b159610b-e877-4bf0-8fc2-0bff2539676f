{
    "title": "My Side Slut, April Pt. 02",
    "pages": [
        "This is the second in a series of stories about April. Please read the first instalment for context for this story. All the characters are over 18. \n\nI love feedback and love your messages and comments. Please feel free to let me know what you think, and enjoy!\n\nChapter Two:\n\nMy Slut and I See a Band\n\nThe next day, of course I felt terrible. The guilt washed over me as soon as I opened my eyes. The night before I had, for the first time in our marriage, cheated on my wife. \n\nI had had no doubts the previous evening. When, April, my employee, grabbed my cock and begged me to make her my slut, it had felt so good. So right. When I slammed into her again and again, cumming into her 20 year old pussy, her large tits bouncing with my thrusts, I knew that this was where I was supposed to be. She was being used the way she needed to be. \n\nWe had fucked again after that first, desperate encounter. She sucked my cock, still wet with her pussy juices, taking me deep into her mouth making me hard again minutes after having shot my load into her. I bent her over the back of the couch and slammed into her from behind and cumming into her one more time. \n\nThen I had told her we had to leave. I was supposed to teach her how to close the store and, distracted, I did my best. Then we left. Her walking to her nearby apartment and me driving to the loft condo I lived in with my wife. \n\nThe light of day, when I opened my eyes, made me realize how wrong it was. Wrong and ridiculous. I was content in my marriage. Sure, my wife worked long hours as a lawyer and we did not spend as much time together as we might have liked, but we were happy. \n\nWe had a decent sex life. I was 41 and she was 39, we had no kids and lived a comfortable existence with plenty of savings, trips and everything we could want. \n\nI had my record store, Sublime Vinyl, and owned the building it was in. My job was selling what I loved to people who loved it too. There was no way that I would throw it all away over some mid-life crisis. \n\nI knew that, as difficult as it might be, I had to end things with April. She was an amazing fuck with a perfect young body and a pussy oh so tight but it just was not worth it. \n\nI knew that April was opening the store so I would arrive around 11 and then let her know I was done. I could not imagine that she would be that upset. She could have any man she wanted. She did not need an old creep like me. \n\n+++++\n\nApril was with a customer when I walked in. Just seeing her made me want to change my mind. \n\nHer auburn hair was pulled into two braids that hung down her back, just behind her ears. Her face was a cute as ever, with plump lips, green eyes and, when she was smiling, two dimples on round cheeks. \n\nShe was wearing denim overalls, with only one of the straps connected, the other hanging loose, giving a great view of one of her breasts. The overalls were cut into short shorts, showing off her nice, creamy white legs and a bit of her ass cheeks that hung out below. Under them her shirt was a white tee-shirt and, again, she was obviously not wearing a bra. The exposed breast showed a hard nipple pressed against the fabric. \n\nShe smiled at me over the shoulder of the customer, a middle aged man who couldn't take his eyes off of her chest, and I couldn't help but smile back. \n\nI shook my head and made my way back to my office that was above the store room. I had to be strong. I had to cut things off with April. \n\nI put her out of my mind and went to work. After an hour had passed I called the register desk and Pete, one of my other employees answered. I knew that he had just started and April would be off shift soon. I asked him to send her back before she left. I needed to have the conversation as soon as possible. \n\nShe came in shortly after that. \n\nShe was grinning and my resolve was very weak. My mind flashed back to the last time she came in my office, when she caught me jerking off under my desk. \n\n\"Hi, Mr. Hawthorn,\" she said, brightly. \"How can I help you today?\" She walked towards me and I cleared my throat. \n\n\"Oh,\" I said watching her breast sway slightly with each step. \"I...I meant to tell you...about last night...\"\n\n\"Oh,\" she said, reaching my desk. \"Yeah. Last night was amazing. Thank you for fucking me. I'd so glad that you decided to let me be your slut.\"\n\nShe placed both hands on my desk then put one knee up, pulling herself up onto the surface. She pushed my laptop aside. \n\n\"What are you doing?\" I asked, alarmed. My cock instantly filled and strained against the jeans I was wearing. \"I mean...we can't.\"\n\nShe reached to her shoulder and released the one strap that was attached. The bib fell forward and both breasts were free to swing from her chest as she crawled across my desk towards me. \n\n\"Is this about your wife?\" She asked. \"I told you I don't care about that. I'm not interested. As long as you use me, I'm fine.\"\n\nI stood up, my desk chair rolling away behind me. I wanted to back away but the office was not large so there was nowhere for me to go. The lump in my pants was level with her face. She reached forward and gripped it. \n\n\"So hard,\" she giggled. \"Just for me! I'm a lucky slut.\"\n\nI was about to try to move her hand away but her fingers were quick and nimble. She unzipped my fly and popped the button and reached into the boxer briefs before I could respond, pulling my hard cock out. \n\n\"Jesus, April,\" I said. \"Hold on...\"\n\nShe rolled over onto her back. I could see her breasts fall to the sides a bit making wonderful pools on either side of her chest. She gripped the hem of her tee shirt and yanked it up freeing them. Her hard pink nipples were pointed at the ceiling above us, begging to be played with. \n\n\"If I laid like this,\" she said looking up at me and stroking my cock, \"you can really fuck my face. Get really deep into my throat. Will you do that for me? Please?\"\n\nI swallowed past the lump in my throat. Looking down at the girl offering her mouth to me I forgot everything I had intended to say. All of my arguments about how this was wrong and that we wouldn't be doing this left my mind. \n\nI let her tug me forward by my cock, the swollen purple head sliding in and out from under the foreskin as she stroked me. I sighed as the tip touched her plump lips then groaned as she wrapped them around me. \n\n\"C'mon, Mr. Hawthorn,\" she said, words lightly muffled by my cock head. \"Fuck your slut's face.\"\n\nHer hands came up and gripped my ass, pulling me forward, pushing more of me into her sucking mouth. Her tongue worked the top of my shaft. \n\nHalf-heartedly I pulled back, watching my veiny cock slide most of the way out but I let her pull me back, deeper this time. I felt myself slide deep until I touched the back of her throat. \n\nI began sliding myself in and out of her mouth slowly, savoring the wet heat of her. I watched as she pushed one hand into her overall bottoms and began to rub herself. The other hand stayed on my ass encouraging me. \n\n\"Meetuh Aworn,\" she said mouth full of cock. \"Uck ma ace!\"\n\nMy hands, as if powered by some other master than myself reached out and gripped her breasts, fingers digging into the soft flesh, her nipples between my thumb and the flesh below my pointer finger. \n\nI began to stroke faster, pushing myself deeper each time. She let her head fall back, unsupported by the desk, opening her throat wider to accommodate my thick cock. \n\nEach forward thrust I got deeper, pushing into her throat. She gagged around my cock each time, and spit and drool began dripping down her face as it leaked out around my rod. Her eyes were watering and her black eyeliner began to run, smearing around her eyes. \n\nThe glugging, gagging sound of me fucking her was accompanied by her throat clenching and gripping my cock as her throat tried to push my invading shaft. It felt amazing and I couldn't help but fuck her face harder, deeper. \n\nHer gagging was punctuated with moans and when I pulled back to let her breath, gasping breaths around my cock head that I never left the hot cavern of her mouth, she begged for more. \n\n\"Please,\" she whined. \"Fuck my face. Fuck this slut face. I neeeeed it!\" Her hand in her shorts rubbed herself furiously. I pinched her nipples and she groaned and then, cutting off the sound I would slam my cock back into her throat and fuck her once more. Her large breasts bounced as the force of my thrusts shook her body. \n\nI watched, fascinated as her throat bulged each time I forced my cock into it. I held myself deep as she gagged, cutting off her air, gripping the side of her head, holding her there until she was slapping my thigh, needing air. I held her a moment longer before I allowed her a brief breath before slamming forward again. \n\nIt did not take long for me to reach my crest. This was the deepest and hardest I had ever fucked a face and it was more that I could take. I briefly considered warning her but I was carried away with the moment. \n\nFinally, as my balls tightened and I felt myself start to cum I gripped her face and shoved as deep as I could, releasing a hot gout of spunk directly into her throat, holding her there as she gagged. \n\nFinally I pulled back, letting my still hard cock flop out of her mouth. A thick cord of cum connected the head of my cock to her lips for a moment before it broke and dropped doen onto her cheek. She was coughing, and some cum that I hadn't forced down her throat leaked out from between her lips. \n\n\"Thank you, Mr. Hawthorn,\" she said, voice hoarse. \"Thank you. Can I cum, please? I'm so wet and close.\"\n\nI placed my hand on her stomach below her amazing tits and slid it down, under her shorts and over her own hand. She continued to rub her pussy as I pushed two fingers into her. She was not lying. She was sopping wet and my fingers slid easily in and out of her as, under my palm, her own fingers rubbed her clit. \n\nShe was moaning now, no words, just noises of need. My cock, still hard lay against her face, twitching and dribbling the last of my cum, smearing it on her cheek and chin. \n\n\"Cum for me, slut,\" I said. She seemed to want permission so I gladly gave it. \"You can cum now.\"\n\nThat was enough and she began gasping for breath, hips bucking against my fingers and hers. \n\n\"Oh fuck, oh fuck, oh fuck, oh fuck!\" She cried as she finally came. I held my fingers in her, holding her in place as her legs quivered and her cunt clamped down on my digits. As the climax waned I slowed my strokes, easing her down. \n\nFinally I fell back into my chair, my cock now mostly soft, flopping against my thigh. My fingers slipped out of her and she whined, feeling their absence. We were both gasping for breath and I looked down into her eyes, her still lying on her back. \n\n\"Fuck, April,\" I said, catching my breath and coming back to my senses. \"Jesus. We can't keep doing this.\"\n\nShe rolled onto her back and pushed her self up on her elbows. \n\n\"Why not, Mr. Hawthorn?\" She asked, pouting. \"Didn't you like it?\"\n\n\"Of course I liked it,\" I said, frustrated, beginning to get angry. \"Who wouldn't? But we can't! I'm married. You are my employee. It's wrong.\"\n\n\"But...\" she seemed to be actually upset. \"I'm your slut, Mr. Hawthorn. This is what I'm for! I'm yours to use. I don't care about your fucking wife!\"\n\n\"April,\" I said firmly, pushing my cock back into my jeans. \"I mean it. This is done. This was the last time.\"\n\nShe sat up, still on my desk. She made no move to pull her top down, her tits still on display for me. I wanted so much to lean forward and pull one of the pink nipples into my mouth but I held out. \n\nShe looked me in the eyes for a long moment. I could see the glistening sheen of my cum on her cheek and chin. Her makeup was smudged. She looked so fuckable. \n\n\"Ok.\" She said and moved back and got off of my desk. \n\n\"Ok, what,\" I asked. \n\n\"Ok, we are done,\" she said finally. \n\n\"Yeah?,\" I asked, not quite believing her. \"Just like that?\"\n\n\"Mr. Hawthorn,\" she said, voice level but I could hear some anger beneath it. \"I told you that I would do anything for you. If you told me to get on all fours right now so you could fuck my ass...I'd be on all fours. Anything you tell me to do...I'll do it. You tell me to stop sucking your cock, fine. I'll stop. You don't want to fuck me anymore...we stop.\"\n\nShe pulled her top down over her tips and re-attached one strap of her overalls. \n\n\"I'm still your slut, Mr. Hawthorn. I'm not going to fuck some other guy. I guess I'll just play with myself. Make myself cum thinking about you. About your cock.\"\n\nShe started walking towards the door and I watched her, at a loss for words. She stopped and turned back towards me. \n\n\"Unless you tell me I can't cum, Mr. Hawthorn. If you did that I'd play with myself and stop just short, needing release but...waiting for you. It's up to you. I am yours after all.\"\n\nThen she left the room. I sighed and leaned back in my chair. I shook my head. As amazing as she was, as amazing as her body was, how great it felt to fuck her, she had given me an out. I was free if I wanted to be. I could avoid her and, eventually, she would move on to some other guy. I did not, if I was being honest, like the idea that she would move on but that was not reasonable. \n\nI watched her leave after her shift and felt some relief that her temptation was gone. I worked for several hours, getting through things I needed to do then left in the early evening. \n\n+++++\n\nAfter having a quick bite to eat I felt a lot of pent up energy. I was not interested in watching anything that was available on any of the many streaming services. I tried to read but kept putting down the book and wandering away from it, unable to concentrate on the words. I considered jerking off but after the face fuck earlier I did not feel a great need for release. \n\nI called my wife, Kelsey. I knew that she would be working late but, feeling guilty about the night before and that afternoon's encounters with April, I needed to hear her voice. \n\n\"Hey babe,\" she answered. \"How's your evening going?\"\n\n\"Ah,\" I said, reminded just by talking to her, how much I loved my wife, \"it's ok. Missing you.\"\n\n\"I know. This week sucks,\" she said. \"I'm sorry. Hopefully I can clear this work up in a couple of days so we can hang out.\"\n\nI knew she meant this but also knew that I had heard this many times before. She was a partner in a big firm. There was always a new, big case that would occupy her time. This had never really been a problem. I liked being alone. It was just that this week, with April, things were more difficult. \n\n\"Sure,\" I said. \"That would be nice. We can go to that new, small plate place up the street. Pay a ton of cash for bitefulls of food.\"\n\n\"That sounds great,\" she said, and then to someone else in the room, \"ya! I got that. Give me a minute!\"\n\n\"You are busy,\" I said. \"I'll let you go.\"\n\n\"Thanks babe. Love you, see you later if you are up.\"\n\n\"Love you too.\"\n\nFinally I pulled on my jean jacket that is covered in band patches, and headed out my door. I knew that a local punk band was playing a show that night at one of the bars I frequented. I thought that being out in some loud, pounding music surrounded by strangers might just be the ticket. \n\n+++++\n\nI often went to shows on my own. Kelsey also loved live music but her schedule rarely allowed her to enjoy them. I used to go with friends but as we all aged they got married, had kids, and moved out to the suburbs. They were less available and, frankly, a lot less fun. \n\nSo I started to go on my own. This was, I found, a very different but still very enjoyable experience. The outings transformed from social things, with the main focus being on the people with you to focus on the band and the show. If I needed to talk to someone I would chat with the bar staff or, occasionally some other show goer would start up a conversation. \n\nThe bar had a short line outside but I walked to the front and nodded at the bouncer. I was a regular here and they never made me wait outside. I dropped five bucks into the cover pay jar and five more to the girl working the door. \n\n\"Thanks, Jake,\" she said smiling up at me. She might know my name but I had no idea what hers was. She was, however, pretty cute. She had been working the door at shows for about a year. Her hair regularly changed color. Right now it was green and cut short in a boyish cut that looked good on her slightly elven looking face. She was wearing frayed jean shorts and her top was an old band tee that she had cut the arms off in deep open holes that went almost down to her hips. I could see the sides of her bra. It looked like a sheer black and was holding a pair of tits that looked like maybe a c cup. \n\nNormally I would pass her by and not think too much more about her. She was young and pretty and I was a 41 year old man. My encounters with April, however, had me wondering if I was more attractive to younger girls than I thought. \n\nI smiled at her and held her gaze for just a moment before moving on. She did not look away until I did. Interesting. \n\nI shook my head and headed towards the bar to buy a beer. I was trying not to fuck a young girl, not pick up a new one, I reminded myself. \n\nI got my drink, talked for a few minutes with the bartender, a conversation shouted over the pretty terrible opening band. Then I sat at the bar, looking over the crowd waiting for the headliner. \n\nThat was when I spotted April. \n\nShe was alone, it looked like, but there were several men, boys really, circling her. They would approach, offering a drink sometimes and she would shake her head, say something and they would move away, still keeping their eyes on her. I have to say that the fact that she turned them away made me happy in a selfish way. \n\nI could not blame the boys for approaching her. She looked fucking hot. Her hair was pulled back in a ponytail, her face was made up, with bright orange eyeshadow, her lips a deeper hue of the same color. She was wearing a button up plaid shirt with the top buttons undone, showing off her impressive cleavage. She had on a short skirt and combat boots. \n\nI was annoyed to see her. I mean could it be possible that she was following me? I hoped it was not the case. That would be taking her interest in me to a level I was not comfortable with. If she followed me here then she knew where I lived. \n\nI considered going up to her, asking her what the hell she thought she was doing here but refrained. What if, I thought, she caused a scene? I did not need that. I also considered leaving before she spotted me. I did not want to do that either. I had come here to see a band and it would piss me off to have come out for nothing. I sat at the bar, drinking, watching her. She did not look at me so I thought, maybe, she had not noticed me there.\n\nA beer later the band I had come out to see took the stage. They were a young group with a decent following. Their live shows were unpolished but had a raw power to them that got the crowd moving. As they launched into the first screaming song I stood up and moved to the outer edge of the crowd, nodding my head to the music, tattooed arms crossed over my chest. \n\nWhen I was young and wild I would be deep in the pit at live shows, elbows up, smashing into the others there. I would look back at the older dudes at the periphery of the crowd and scoff. Did they not, I asked myself, not like the music? I know better now. The pit is a young person's game. I was there to enjoy the show, not the energy of the crowd. \n\nWhen I moved up I lost sight of April and I occasionally looked around to see if I could spot her but there was a decent turn out and she was lost in the throng. Since she was only 5'4 I supposed that was not too hard for her to do. \n\nAfter about four or five quick songs, all screamed vocals, thrashing guitars and heavy drums, I felt someone back into me. That was to be expected but as I moved back a bit to give whoever it was room, they moved with me. I glanced down and saw April's auburn hair. ",
        "She was pressed against me, and because it was her, and I could not help but react to her, my cock began to respond at once, rising, straining against my jeans, into her ass that she was pressing against me. \n\nI leaned forward and shouted in her ear so that she, but probably no one else in the loud club, could hear me. \n\n\"What are you doing here?\"\n\nShe glanced up at me and smiled, her adorable dimples forming. \n\n\"I'm seeing a show! Just like you Mr. Hawthorn!\"\n\nShe was grinding her ass against my hardon, moving up and down in time to the song's beat. \n\n\"What are you doing?\" I asked, a stupid question that I asked anyway. \n\n\"Dancing! Don't you like the song?\"\n\nIt actually was a really good song but I had stopped caring about that. The feeling of her firm ass on my cock was amazing. The skirt she was wearing had ridden up. I glanced around and, seeing that no one seemed to be noticing what was happening with me, lifted it quickly. I saw that she was not wearing any panties. My jeans clad cock was nestled between the globes of her ass as she ground against me. \n\n\"Jesus,\" I said into her ear. \"I thought we were going to stop!\"\n\n\"Stop what?\" She asked. \"Dancing? I didn't know that dancing was off the table. What else do you want me to stop doing, Mr. Hawthorn?\"\n\nI shook my head and, unable to resist her, gripped her hips and pulled her against me. I could see her smirk as she ground against me. \n\n\"It feels like you like dancing, Mr. Hawthorn,\" she said. At that moment she was not wrong. \n\nI looked over her shoulder and was greeted with a lovely sight. With the top buttons undone I could see the upper reaches of her breasts. Her nipples were hard and pushed little tents against the flannel of her shirt that I watched sway with the music. I could not help myself and I gripped one of her tits in my hand, feeling the hard nub, squeezing it for a moment making her gasp before releasing it. No one around us seemed to notice. \n\nShe reached behind her and her fingers found my cock, squeezing it making me grunt with pleasure. Then I felt her fingers on my button and zipper. \n\n\"Wait, no,\" I said, but she was too quick, releasing my seven and a half inch cock from my jeans. She quickly pushed it down and backed up, nestling my between her upper thighs, laying along her slit. \n\nHer sex was hot against the top of my cock, and her juices coated it. She was already very wet. Her skirt covered us and I held her against me, hiding our actions. \n\nShe squeezed her legs together, trapping me against her pussy and began to rock back and forth, sliding me along her wet cunt. The feeling was magical and I was lost in the moment. \n\nWe rocked like that for another song. The longer the band played the more people were crowding around us and soon we were surrounded by other people. This situation was new to me but deep down I relished the fact that my cock was secretly out and stroking along the sex of a young girl. \n\nWe were starting to get jostled by that time as more and more people joined the crowd. I wasn't going to complain. April had my cock locked between her legs and it was not going anywhere. Each time someone bumped into us it only pushed me harder against her. \n\nEventually someone knocked into April's shoulder and she was pulled a bit away from me. I gripped her hip and pulled her back to both keep hiding my bare cock and to keep myself rubbing against her. April, however was clever and pushed her hand between her legs and as I pulled her back she pushed up on the bottom of my cock. \n\nThe head pushed along her rubbing quickly against the star of her asshole then up into her wet and waiting cunt. She groaned as I sank partway into her and I grunted in response. \n\nHer pussy gripped my shaft as it penetrated her there in the crowd. I felt her shudder against me and I caught my breath, looking around to see if anyone noticed. Everyone else seemed to be focused on the band so I merely pulled on her hips, while bending my knees slightly for a better angle getting myself deeper. \n\nWe still could not thrust against one another the way that we both wanted but our small movements were enough to have me gritting my teeth and breathing heavier. Looking over her shoulder I watched the red flush of lust creep across her chest. I was moving her slightly back and forth, my cock partway burried in her, in time to the throbbing baseline of the song. \n\n\"Fuck,\" I grunted into her ear. \"You really are a slut aren't you?\"\n\nThose words made her moan and push against me, needing me deeper. \n\n\"Yes, Mr. Hawthorn,\" she gasped. \"Your slut!\"\n\n\"I need to fuck you properly. Right now,\" I said. And I did. I was hard as a rock and these slight movements might be making my insane with lust but they weren't going to let me cum. \n\n\"Yes, please,\" she said. \"Whatever you want.\"\n\nHer hands went back between us and shoved my cock back in my pants, but she didn't bother doing my pants back up, nor did I. She took my hand and I led her through the crowd towards the back of the bar. There was a door that led to the back alley there and as I passed him I nodded quickly to the bouncer who stood there and let people out to smoke. \n\nWe quickly walked down the alley to just past a dumpster and I pushed her against the brick wall, kissing her hard. I tongues found each other and swirled, our spit mixing. \n\nThe dumpster did not stink of rotting food but it smelled far less than pleasant and there was trash around our feet. This was not the most romantic place I had ever kissed a woman, but romance had nothing to do with what we were doing. I was lost in need of her and her body. \n\nI pushed my hand between her legs as our tongues entwined and curled my fingers into her wet and waiting pussy. She moaned into my mouth as I began to stroke them in and out, rubbing her clit with my thumb. \n\nShe had already reached into my pants and pulled out my cock, tugging on it, smearing my pre-cum over the swollen head. \n\n\"Will you fuck your slut?\" She begged me. \"Please fill me up.\"\n\nI only grunted, slipped my fingers out of her and let her line me up against her opening. I thrust with my hips and sank completely into her with one thrust. Her pussy was as tight as I remembered it being last night but her juices lubricated us so there was no resistance. \n\nI moaned as I finally sank fully into her, lifting her by her thighs and pinning her back against the wall and began to slam into her. Our bodies slapped against one another and she began to squeak, \"oh, oh, oh,\" with each thrust. \n\nI did not notice the group that exited the bar behind us and walked down the alley our way until I heard a laugh behind us. \n\nI didn't pull out of April but spun my head to look back and see a group of young people. One of them had a lit joint and I supposed that they had come down the alley to smoke it. I recognized the girl with green hair from the door among them. \n\nApril took my head in her hands and turned it back towards her, kissing me against, wrapping her legs around my bare ass. \n\n\"Don't stop,\" she begged. \"Keep fucking me please!\"\n\nOne of the group, a young guy laughed. \n\n\"Give it to her dude,\" he called out. \"C'mon guys. Let's leave them to it.\" \n\nHe led the group away but I could hear a feminine voice say, \"No. I want to watch.\"\n\nThere was more laughter that faded away as they left. I continued to slam into April, lost in list and need and not caring that I had an audience. It made it better, actually. \n\n\"Mr Hawthorn,\" April giggled breathlessly. \"Someone is looking.\"\n\nI looked over my shoulder, not stopping my fucking and saw that the green haired girl was standing there. Her lips were parted slightly and she licked them. \n\n\"Come here,\" April said, releasing one of my shoulders and beconning the girl with that hand. \"Come here.\"\n\nThe girl approached taking slow steps towards us, eyes locked on my ass as I continued to thrust into April. \n\nShe stepped up beside me and April reached out and put her arm around the girl and pulled her back against the wall so they were side to side. \n\n\"What your name,\" April asked, looking into the girl's eyes. I never slowed my fucking. \n\n\"Julia,\" the girl said, biting her lower lip, cheeks flushed. \n\n\"Julia,\" April said. \"This is Mr. Hawthorn. I'm his slut. Aren't I, baby?\"\n\n\"You,\" I thrust into her making her moan as my pelvis hit hers, \"are,\" thrust, \"my,\" thrust, \"slut!\"\n\nJulia's top was still the tee that had been cut to hang open on the sides. April gripped the shirt and pulled it to the side revealing her c cup breast, covered with a sheer black fabric. I could see the nipple through it and it was obviously hard. \n\nApril pushed the bra cup to the side and under the breast freeing it. Julia gasped as the cool night air hit her exposed flesh. April ran her fingers over the nipple tugging on it. \n\n\"Isn't she cute, Mr. Hawthorn,\" April said between gasps. \"Have a taste.\"\n\nI tilted my head forward towards her chest and Julia arched her back, pushing her nipple between my lips. I sucked and flicked my tongue across the nub, causing the girl to moan quietly. \n\nI pushed my hand down Julia's front, grabbing the button of her jean shorts and yanked them open. She was wearing panties and I pushed my hand inside. She leaned back against the wall and spread her thighs, allowing me access. My fingers ran over the small tuft of silky hair there and then over her clit. I pushed them between her lips which were still dry but found wet heat between them. I dipped my middle finger into her and she groaned as I stroked it out, smearing her juices over her sex. The entire time I continued to thrust in and out of April. \n\n\"Are you a slut too, Julia?\" April moaned. \n\nJulia nodded, biting her lip. \n\n\"Say it,\" I rasped. \"Tell us.\"\n\n\"I'm a slut,\" Julia said, moaning as I pushed a second finger into her, timing my hand's movements with those of my hips. I was fucking one girl with my cock and the other with my fingers.\n\n\"Yeah you are,\" April said and turned her head pulling Julia's face to hers and kissing her passionately, tongues in each other's mouths. \n\nThe added stimulation of the second girl was driving me crazy. Julia, without prompting, pushed her hand between us and began to rub April's clit as I fucked her. April was beyond speaking at this point. She was gasping the word 'fuck' over and over again. I knew from our previous experiences that she was about to cum. \n\nI sped my cock in April's cunt and fingers in Julia's pussy, pushing April towards her climax, rewarded with a shriek as she finally came. \n\nHer pussy clamped down on my thrusting cock and I pushed myself as deep as I could, pinning her there against the wall. Her legs that were wrapped around me were shaking, quivering against my bare ass. \n\n\"Good,\" I grunted. \"Good slut!\"\n\nApril's pussy was spasming around my cock and it was too much. I pulled back and slammed into her again, driving her round ass against the wall again and again. My fingers in Julia pulled her back and forth by her sex as I fucked out my own orgasm. \n\nI felt my balls tighten and groaned as I slammed forward one more time, pushing as deep into April as I could get, releasing my seed into her. I pulled back and drove forward again, and again, using her cunt to milk out my full climax. \n\nJulia squeaker covering her mouth as she began to cum watching me release into the girl I had pinned against the wall. I felt a flood of juices across my hand as she came. \n\n\"Yes, Mr. Hawthorn,\" April gasped. \"Fill me up! Give me your cum!\"\n\nFinally, gasping for air I fell forward, my forehead falling on April's shoulder. My eyes were closed as my cock twitched inside of her releasing the last of my cum. My fingers slowly stroked in and out of Julia. \n\nFinally I let April's legs drop, stepping away from her. My cock glistened with our mixed juices in the alley light. I was finally getting my breathing under control and I looked at the two of them. They had wrapped their arms around one another. They both had flushed cheeks and were looking at me. \n\n\"Julia,\" April said. \"If Mr. Hawthorn gives us permission, would you like to come to my place and eat his cum out of my pussy?\"\n\nJulia nodded enthusiastically and looked at me. \n\n\"Are you going to come too?\" she asked eyes on my cock. \n\n\"I think he has to go home to his wife,\" April said, stroking Julia's hair. \n\nI glanced at my watch and cursed. There was little I wanted more than to go with these two young girls and fuck them both all night but April was right. If Kelsey was not home now she soon would be. I would need a shower as soon as possible to wash the smell of this sex off of me. \n\n\"I do,\" I said, regretfully. \"I do need to go home.\"\n\n\"Can I take Julia home to play with?\" April asked, smiling her dimples at me. \"Please?\"\n\nI smiled back. \n\n\"You can,\" I said. \"But I am going to want some photos.\"\n\nApril nodded. \n\n\"Videos too,\" she said. \n\n\"Perfect,\" I said. \n\n\"Well, I am your slut,\" she grinned at me. \"Aren't I a good one?\"\n\n\"Yes,\" I said. \"You are a very, very good slut.\"\n\nAnd then I put my cock away and left. \n\nTo be continued....\n\n \n"
    ],
    "authorname": "JK1979",
    "tags": [
        "20 year old",
        "adultery",
        "cheating",
        "deep throat",
        "face fuck",
        "ffm",
        "older man younger woman",
        "public",
        "public sex",
        "slut"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/my-side-slut-april-pt-02"
}