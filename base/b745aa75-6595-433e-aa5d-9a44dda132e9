{
    "title": "Rose Ch. 64-67",
    "pages": [
        "Ella's POV\n\nPrevious Day\n\nI watched Jacob and Kelsey leave, a pit forming in my stomach. I had been watching Rose, she didn't think it was a good idea and it wasn't. \"Rose, you're not even asking this of Gunny. It's a horrible idea.\"\n\n\"Why? Isn't it good for the Pack to have more children?\"\n\n\"Yes, but not this way. Mated pairs are sacred, and something like this would end up driving us apart. There's no way you don't regret it, you aren't jealous of her and her child, and that isn't good for the Pack.\"\n\nI could see she was relieved. \"So she doesn't get a child?\"\n\n\"She can, but not with a mated male's sperm. I know her cat wants what it does, but things are different here than in the world she knows. The best thing would be for her to find her mate, then if she has brothers or relatives willing to donate they would both be tied to the baby.\"\n\n\"She doesn't have a mate, though.\"\n\nI nodded. \"True, and that's why it is better if the donor isn't in the Pack. What if she met her mate next week, and baby daddy is a mated member of our Pack? Not good. No, the best thing is to find a volunteer, someone who isn't from around here. I'd prefer someone who didn't have a mate at all.\" I thought for a minute, a candidate came through. \"Let me take care of it, you forget this even happened. Gunny only has eyes for you, trust him.\"\n\n\"All right.\" She went downstairs to check on things while I pulled my phone out. I flipped to the right contact and pressed talk. A few rings later, a deep male voice answered. \"Joe Miller.\"\n\n\"Hello Beta Joe, it's Alpha Ella from the Belden Pack.\"\n\n\"Hello Alpha, what can I do for you?\"\n\nI paused for a second. \"Joe, there is a new female cat shifter with my Pack who is about to go into heat. She's a lesbian, but she wants a child.\"\n\nThe line went quiet. \"I'm not screwing just anyone, Ella. I can't even think about anyone other than my Daria. I'd be with her already if I hadn't made that promise to Alpha Renee.\"\n\n\"I know. Joe, her cat wants a strong male to sire her offspring, it's how their instincts work. You're one of the strongest Betas I know, hell you could easily be an Alpha. After losing your mate, this is a chance to keep your line going. She would raise them alone, or if you want, she will let you be involved as much as you are comfortable.\"\n\n\"I'm a wolf, you know.\"\n\n\"True, so is my Craig. It is a tossup whether the children will look more cat or wolf, and they will take some characteristics of each.\" There was silence on the line. \"Just think about it.\"\n\n\"I don't have to, Ella. I don't have much left to give, my wolf wants to give up and just go into the woods and waste away. I need something good in my life, and maybe helping this woman will help me too. What do you need from me?\"\n\n\"Go to your Pack Doctor, she knows how to collect the sample and freeze it for later use. It would be best if we had multiple samples ready, just to make sure.\"\n\n\"And she would want me as the baby daddy?\"\n\n\"I think so, I haven't talked to her yet.\"\n\n\"I'm coming, then. I'm not going to father a child with a woman I've never met. It's all right if I come, right?\"\n\n\"Absolutely, Joe, you're always welcome in our house. Pack for a week or more, make a vacation out of it.\" I smiled a little, sometimes when a wolf was depressed a change of scenery could help. \"Do you need me to call Alpha Merino and clear it with him?\"\n\n\"No, I'll get that. It's not like I'm doing a lot here anyway. I can't even sleep in my room, not with her scent around. I'll see you late tonight.\" He hung up, and I set the phone down. Such drama, so many changes and new people in the Pack. There were many times I just wanted to go back to my island and play with the kids in the surf, and not deal with all this stuff.\n\nMy phone rang, it was an overseas number. \"Ella Anderson, may I help you?\"\n\n\"Yes Madam, this is Marcos Jiminez, Deputy Minister of Environmental Affairs. I have some good news for you, the American military cleanup has ended and all chemical munitions have been removed from your island.\"\n\n\"So, we can move back?\"\n\n\"There is still a formal turnover, but in two weeks the ban on civilian occupancy will be removed and you can return.\"\n\n\"Thank you, that is EXCELLENT news! I have so missed my home.\"\n\n\"You are quite welcome.\" He gave me some more information and his phone number, then hung up after wishing us luck. I opened the Pack bond. \"Everyone, I have good news. The Island cleanup is complete, we will be able to return in two weeks. We will have a Pack meeting this weekend to discuss the move and what happens here in Santa Fe.\"\n\nI went to find Al and Marge, I would need them first. They were in the back, watching over the children, and they were thrilled at the news. \"I can't wait to go boar hunting again,\" Al said. \"They will have overrun the island in our absence.\"\n\n\"I'm looking forward to the parties on the beach,\" Marge said. \"Less cleanup.\"\n\n\"Actually, I want you guys to head down there as soon as possible,\" I said. \"I'll charter aircraft for most of us to arrive, but I need people there first. The island staff, those that still want to work there, we need to track them down and offer them jobs again. Interview and hire replacements for anyone that moved on. I want to make sure we have new bedding, mattresses, clothing, check the boats that are in storage on the mainland... there's so much prep to do.\"\n\n\"We can take care of it, Alpha.\" They looked at each other, eyes full of excitement. \"We'll arrange for food deliveries, fuel, and other supplies.\"\n\n\"I expect we'll be a larger Pack soon, and we'll need more space. I want you to talk with some contractors down there about prefabricated housing, something that could be put on a barge and brought out, then set in place on a poured foundation. I've got a few ideas, many will be on the south end near the hotel, but I also want some on the more remote beaches. Guest houses, retreats for couples, you get the idea. See what they can do for us and email us details.\" Some of the places we had found were amazing, to have a cabin there would be great.\n\n\"We'll take care of everything, Ella, you just worry about up here.\"\n\n\"I've got the kids, you guys go find a flight and get packed.\" They ran back in the house while I looked over the playing children. Yep... this was much better.\n\nCraig returned from his latest mission just before dinner, and I filled him in on everything that was going on. By the time Jacob and Kelsey returned with their bloody bats, we were having dessert. \"Go clean up and then we need to talk to you, Kelsey,\" I said.\n\nI had already talked to Rose, and she was staying out of it. Craig and I met with Kelsey alone in our office. \"Kelsey, what you did with Rose today, it wasn't cool and it wasn't a good idea,\" I said. \"I know you don't know how Packs work, but asking a mated male to father a child to another woman, that won't end well.\"\n\n\"I'm sorry, I just wanted the strongest male cat around.\"\n\n\"My mate is the strongest one around, but you didn't ask for him.\"\n\nShe looked at me a little weird. \"He's a wolf...\"\n\n\"He's also my mate and father of my children. Wolves and panthers can have children, they will be majority one or the other, we can't figure out why yet. They do get some shared characteristics.\"\n\nCraig nodded. \"We also would choose to use a relative, or a person outside the pack for the donor in your case.\"\n\n\"So, I thought about who we knew that would be strong enough a male to satisfy your cat, but not cause problems later. I came up with this man.\" I showed her a video on my phone of Joe working out and sparring at the Gila Pack. Her eyes widened and her pupils darkened, her cat was interested. \"He is coming tonight to meet with you. He lost his mate a few months ago, she was killed shortly after they met. He wants to meet you before he decides if he will do it.\"\n\nShe didn't take her eyes off the video. \"He looks worthy,\" she said softly.\n\nLater that night, her cat confirmed it. By morning, her heat was starting to come on and she was locked in the basement cell; we had handcuffed Charlie to his mate Patricia, figuring that was enough to keep him under control. Every six hours or so, Joe would generate and she would inject, until hopefully she was pregnant.\n\nStill, it would be better if she came with us to the island, I didn't want her bad start with Rose to become a bigger problem than it already was.\n\nAl and Marge had found a flight out at eight in the morning, and I wanted to get out for a bit. Craig promised we could do some shopping, so we took the big SUV and brought Jacob and Melanie as security. They got off just fine, and I bought some more maternity clothes for the warm weather. We stopped for food on the way home, I craved Italian so that's what we did.\n\nWe were finishing dessert when I heard people starting to scream, to yell, to point at the television. \"PRESIDENT ATTACKED IN ROSE GARDEN,\" the caption said. On the screen, it was replaying the attack in slow motion, the drones coming into view and crashing into his head and four others. Unlike the other four, the one that hit the President didn't explode, but it did knock him down.\n\nThe others were obviously dead.\n\nCraig grabbed my arm, pulling me out of the restaurant. People were going to lose their shit, and he didn't want to be around them when they did.\n\nCh. 65\n\n\"Was it Enrique,\" Jacob asked as we left the restaurant.\n\n\"Link ONLY,\" Craig commanded. We were close enough for him to reach the Pack. \"Attention everyone, there has been an attack on the President. We don't know who or how, but we have to assume the worst. I want everyone to remain inside except armed patrols. Open the safe room and keep the pregnant women and children close by, make sure the supplies are ready to go.\"\n\n\"Already in motion, Alpha,\" Rose replied. \"We are monitoring the situation here in the security room. So far no unusual activity, we are on lockdown protocol. I have ordered patrols to be doubled, and all of the visiting cat shifters are being brought to the house. We have video links to the houses we have the humans staying at, no unusual activity, and no communications in or out.\"\n\n\"Good job. We are fifteen minutes out. Pack meeting in the living room when we arrive for all over ten years old.   And Rose, if any of our people out on jobs contact us, have them return home immediately.\"  I didn't have anything else to add, I was happy our Pack responded so well. If this attack was going to be an excuse for someone to try and take us out, we would be ready.\n\nI turned the radio on. \"...are sketchy, but it appears miniature drones were involved in the attacks. Video shows five drones in a simultaneous attack, going for the foreheads of the victims. In one still we have seen, the damaged drone can be seen on the ground next to where the President was standing. Reporters stated that there were small explosions on contact, and the four victims had severe head wounds, apparently killed instantly. As of now, no word on the condition of President Kemper; Secret Service was seen dragging him inside, and an ambulance left minutes later; we have reporters on their way to the hospital. Reports from the press conference are that Attorney General Bradley Smallridge, Homeland Security Chief General Louis LaGrange, Senator Howard Mendes and Drug Enforcement Senior Agent Nomar Mendico were killed instantly; the bodies remained on the scene, covered in sheets, as the reporters were herded out of the Rose Garden.\"\n\n\"Fuck me,\" Craig said, \"I know Lisa and Enrique were working on something, but I never expected this.\"\n\n\"I know, but it has to be them. The four killed were all on the list.\"\n\n\"Pentagon officials have stated the military is at DEFCON TWO, the highest condition short of war, based on standing orders for an attack on the Commander in Chief. We also have reports that Capitol Police are establishing a blockade on a ten-block area around the White House, apparently hoping to trap those responsible inside. All Federal buildings have been placed on lockdown protocol, and Metro trains and buses have been stopped in the DC Metro area.\"\n\n\"Alpha, just to be safe,\" Melanie said as she reached into the hidden compartment in the door and removed two pistols with extra magazines and handed them back. \"No threat yet, but a lot of people are standing around, crowds gathering.\"\n\n\"Probably in shock,\" I said. \"You are right, can't be too careful. Don't stop for anyone, Jacob, get us home.\"\n\nWe were all relieved when we sped through the gates of our home, they immediately closed behind us. We pulled into the garage and waited until the door closed before we got out, having stowed the firearms back in the hidden compartments. Rose was at the door to the house. \"No changes to status, adults are watching the coverage in the living room, the younger children and the cat shifters not in the Pack yet are in the theater room watching a movie,\" she said. \"Patrols and electronic surveillance show no threats.\"\n\n\"Good job,\" I told her as I pulled her into a hug.\n\n\"Mabel is overseeing the children downstairs, her and everyone on guard duty Carl said he will link to with what is said. They are ready for you.\" The five of us went through the kitchen, each grabbing a bottle of water from the table as we passed. The television was muted as soon as we walked in, Fox News live coverage on the screen. Craig and I walked in front of the screen as the others took seats; teens on the floor, and it looked like every chair in the house was packed into the room.\n\n\"Let us know if something important happens on the coverage as we talk,\" Craig said and the Pack members all nodded. \"What I say here goes no farther than this room, it is Pack business only. Understood?\" All of them responded with \"Yes, Alpha.\"\n\n\"First off,\" I said, \"The events in Washington today. We don't know for sure who is responsible, but the people killed were not good people. The President has helped us in the past, and we should all be praying for him to be safe.\"\n\n\"There is bound to be a reaction to this, one the Cartel might seek to exploit,\" Craig continued. \"Blaming Werewolves for the attack is easy, and we have found there are groups of people that are waiting for an excuse to hurt us. I have ordered the lockdown because of this danger, not because we have done anything wrong. I have no idea how long it will be in effect, and I know how much you have been restricted already. Your safety is more important than your fun.\"\n\n\"Can we still use the pool at least,\" one of the kids asked.\n\n\"Yes, we will schedule times and guards to that can happen. The landscaping hides the area, so that is also where you are free to shift. Any place visible from outside our territory, you must be in human form, two-person teams and visibly armed,\" Craig said.\n\n\"What about supplies?\"\n\n\"Four-man armed escorts, we'll keep those to a minimum. Search protocols for deliveries continue as we established after the bombing, nothing gets past the gate without inspection. I want trucks parked just inside the gate to prevent a car from ramming through. Also, I need everyone to be careful about what they do in their communications outside the Pack. I won't censor, but refrain from discussing anything related to the attack on the President, our security measures, the people who are here or the Cartels. As you know, anything on the phone or over the computer can be intercepted. If you have questions, contact Josh.\"\n\nAll of the sudden the room erupted in cheers and yells. I turned, the television showed President Kemper walking out of an ambulance, giving a thumbs-up to the cameras being held well back. He had a bandage over his right eye and blood on his face, but he was able to walk to the waiting wheelchair on his own power. \"Thank Luna,\" I said along with many others.\n\nWhen the room calmed down, it was time to move on to the next topic. \"As you know, we received word yesterday that in about two weeks, our island in Panama will be cleared for our return. Al and Marge left this morning, they will be starting the preparations for our return.\" There were claps and cheers at this. \"We will not be leaving this house, though. We knew this day would be coming, and we also knew we had a Alpha pair waiting to have their own Pack. Rose and Gunny will be staying here, creating their own Pack, and so each family must choose. We will not place any restrictions on your choice, we want you to go where you are most comfortable living and the Pack members you want as your family.\"\n\n\"We will remain closely allied, welcomed on each other's lands, and we will keep the same allies here such as the Gila, Johnson and El Paso packs,\" Rose said. \"Face it, things are starting to get a little crowded around here as more of us get pregnant,\" she said to laughs. \"We have already decided that we will all get together at each other's Packs once a year. This location will host a gathering during Spring Break.\"\n\n\"And we will have everyone who wants to come down to the island over Christmas Vacation, even if people have to stay in tents this year,\" I said. \"The Johnson Pack is hosting over the Fourth of July, the Gila Pack claimed Memorial Day weekend, and El Paso is taking Labor Day weekend. We decided to do this because it helps build the strong ties with the Packs, plus it gives the unmated a chance to meet others. If your mate isn't in one of these Packs, you can still attend Wolfstock over the summer. We want all of you to be able to see your friends and family.\"\n\n\"You have until tomorrow at dinner to make your choices if you are an adult, children go with their parents obviously. For those who do not already have passports, we will organize photos and get them expedited. We will organize a charter flight into Panama City, from there a smaller plane will have to shuttle us to the island. The need to organize all this is the reason why the timing is so short.\"\n\n\"What about school,\" Tina Harris asked.\n\n\"If you are staying here, homeschooling will continue until we are convinced returning to public schools is safe again,\" I said. \"At the island, we will establish our own school.\"\n\n\"Now, those going to the island are not going to be able to bring much with them, just two suitcases and a carry-on,\" I said. \"Of course, with the weather down there you don't need much more than summer things. Shipping to the island is expensive, so it makes more sense to buy down there. We will organize a shipping container, anything you want to send can be packed into that and it should make it to the island in a few months.\"\n\n\"Will this change our plans with buying houses, with expanding our Pack boundaries,\" Jacob asked.\n\n\"I don't think so,\" Rose said. \"We're going to expand, even with the split we will need more housing in a few years due to people joining and younger people coming of age. I still want to expand the wild areas under our control for Pack runs, and I'd like to own this neighborhood, so we can secure multiple houses instead of just this one. Our finances are good, even after the split, so we have the money to continue thanks to Josh, Carl and Enrique.\" There were laughs at that, we all knew that we had more money than we could shake a stick at. None of us would want for anything.\n\n\"One question then,\" Josh said. \"If the Belden Pack stays with Alphas Craig and Ella, what does the Pack here get named?\"\n\nI smirked, knowing what was coming as Rose opened her mouth. \"What else could it be, other than the Guns and Roses pack?\" The room exploded in laughter and the meeting ended.\n\nCh. 66\n\nPresident Henry 'Hank' Kemper's POV\n\nOne moment I'm giving a speech, the next thing I know something smacks my head and I hear multiple bangs, like gunshots. The Secret Service agents react as they were trained; before I can fall back on my ass, I'm caught, surrounded and dragged out of the Rose Garden. \"ARCHER IS HIT, MEDICAL PROTOCOL NOW,\" I hear as we are pulled through the doors into the Oval Office. My arms are in the grip of several men, I try to get my feet underneath me but they are moving so fast, I think I leave scuff marks on the Presidential seal as they rush me through the room.",
        "\"Goddamn it, boys, I'm all right, sit me down,\" I said, but that didn't even slow them down. I may be the President of the United States, but right now I'm more like a hooker. Not the kind on a street corner, the ones in Rugby like my roommate Josh played at Navy. The hooker hangs from the shoulders of much bigger guys on the front of the scrum, his feet free to hook the ball and push it back through the mass of big guys to where our team could get it. That was me, surrounded by big guys with guns, helpless to even stand.\n\nI finally get them to loosen up as we hit the hallway, although I've got an arm over the shoulder of a man on each side, two guys in front blocking, Uzis out and yelling for people to clear the hell out of the way, and two more behind me. I get my feet under me and start to run with them to the elevator. When the door closes, they relax just a minute. \"Sir, you've suffered a head injury, we're taking you to George Washington,\" Mark said. He was the lead agent for this shift, and I had worked with him for years.\n\n\"I'm all right,\" I said just as the door opened to the motor pool. A gurney was waiting, and I was damn near tossed onto it and strapped down, seconds later I was in the back of the ambulance. Mark climbed in with me as the paramedics started to hook up their instruments.\n\n\"Mr. President, can you follow my finger please?\" The paramedic, a good-looking woman in her thirties, had wiped the blood off my face with a towel while the other was holding a pad to my forehead. I focused on it, moving my eyes with it. She checked my pupils with a small flashlight, and asked me a few basic questions like my name and what day it was. The motorcade was moving quickly, it wasn't just me who was hopped up on adrenaline. This was the first assassination attempt since Reagan, and most of these agents weren't even alive then.\n\n\"I'm fine, it's just a cut. I've had worse playing soccer,\" I said. It was true, my senior year at the Academy, I was playing goalie and ran out to stop a breakaway, knocking the ball away just as the forward kicked for it. I took a cleat to the left eyebrow, splitting it open, a gash a good three inches long. I took my shirt off, holding it to the cut as I walked to the Naval Academy medical clinic, laughing at the ambulance rushing to the field for me. Enough blood, someone calls, right? \"You took a good shot to the forehead, Mr. President. Did you lose consciousness?\"\n\n\"No, it just startled me, knocked me back. Mark, what was it?\" I looked over at a man I considered a friend, he and I didn't always agree, but he kept me safe.\n\n\"Some kind of drone,\" he said. \"Our men and FBI are investigating, but we're waiting on the Bomb Squad to get a good look,\" he said.\n\n\"Bomb squad? Those weren't gunshots?\" It sounded like firecrackers going off.\n\n\"No sir. The drones had some kind of explosive.\"\n\n\"Who else was hit?\"\n\nHe hesitated, he didn't want to say. \"Sir, we had four others who were hit, all were killed instantly. It wasn't gunpowder, it smelled like plastique, that is why we're waiting.\"\n\nFour others.... Holy shit, I thought. One thing to try and kill me, but to target four others at the same time? Why not just use a bigger drone and take us all out? The ambulance took a hard right, tires squealing as the paramedics and Mark held on. \"Who is dead, Mark.\"\n\n\"We don't use names over the radio, sir.\" I stared at him. \"I saw the Attorney General and Homeland Security drop, and Senator Mendes as we went by,\" he finally said. \"I don't know the fourth. They were gone, sir, I saw gray matter on the ground, there's no coming back from that.\" He paused, listening to something on his earpiece. \"Two minutes out, sir.\"\n\n\"I'm not being wheeled in on a gurney,\" I told them. \"Get a wheelchair ready, I'll give you that, but no gurney.\"\n\n\"Sir, it's protocol, we don't know...\"\n\n\"You don't know, the COUNTRY doesn't know, Mark. All they know is that someone tried to kill their President, and that person DID kill four others. We can't have a panic. If I can calm things by stepping down from the ambulance and sitting in the wheelchair, dammit, that's what I'm going to do.\" He stared me down, but I was a stubborn old bastard and I wasn't going to appear weak. \"Mark, I'll even let you hold my hand, but I'm walking out of this ambulance.\"\n\n\"People might talk, sir,\" he said as we cracked up. \"Is there a medical reason for him not to stand up?\"\n\n\"I'd rather he didn't, but if he can stand without getting dizzy a few steps won't hurt,\" the paramedic said.\n\n\"It's settled then,\" I said as the ambulance slowed to turn into the emergency entrance. Mark made a call, and before the doors were opened, a wheelchair had been brought out. \"How do I look,\" I asked them.\n\n\"Like you got your ass kicked, Mr. President,\" the paramedic said with a smile. She unbuckled the straps and the two of them helped me sit, then after they were sure I wasn't going to pass out, he helped me to my feet. Mark was right behind me, two Secret Service agents and a group of medical personnel were waiting for me. I stepped down, the agents keeping hands on me the whole time. I did smile and shoot a quick 'thumbs up' to the waiting cameras before sitting in the wheelchair and being taken inside.\n\nAn hour later, with the lidocaine starting to wear off and twenty-two stiches in my forehead, I was thanking everyone at the hospital and posing for a quick photo. I wanted to address the nation from there, but the Secret Service was nervous; the attack on White House grounds, still a crime scene and potentially vulnerable, made it so I couldn't return right away. Instead of going to the limousine, Marine One was waiting on the roof, and F-16 fighter jets were flying cover. \"Where are we headed,\" I asked Jerry, his team had relieved Mark's so they could debrief and give statements.\n\n\"Pentagon, Situation Room,\" he replied as we went up the elevator to the roof.\n\n\"Roger,\" I gestured to my press secretary, \"Set up an address tonight, eight PM. Have the writers work on a speech, I want something that will calm fears, talk about how we will find and capture the people involved, you know the drill.\"\n\n\"Yes sir,\" he said. \"I'll have options ready in a few hours.\"\n\n\"Good, we don't know yet who is behind it, so options are good. One with terrorism, one a straight assassination attempt, one non-state actor, and one an act of war. I should know more soon.\" He stayed on the elevator as we exited, he would head back to the White House which was in full crisis mode. \"Where is my family?\"\n\n\"We moved them to Camp David right after the attack, Mr. President. Tammy is pissed because we didn't bring her to the hospital, but we couldn't risk it. Your son is secure in Colorado Springs.\" My son Scott was in his junior year at the Air Force Academy, a settle way to get back at me for all the times I took him to Navy football games as a boy. It was a place where Secret Service protection wasn't quite as tight. \"He wasn't happy when we rushed him out of his class and stuffed him in a limo, but he's safe on the grounds. We locked down the base and let him move around again, he just has a couple shadows now.\"\n\nI waved to the cameras, yelling at them that I was fine, and loaded up for the short trip. We landed at the Pentagon, and a few minutes later I was in the Situation Room with most of my Cabinet, my senior White House staff, and the Joint Chiefs. \"Sit down, gentlemen,\" I said as I sat at the head of the table. \"So, the question of the day is who did this,\" I said. \"Chuck, you're acting Homeland Security director?\"\n\n\"Yes, Mr. President. As of now, we only know of one person behind it. Forensics is still looking at the drones, but we did get a hit on the fingerprint we found on yours. DEA Agent Frank Jennings; his body was found in his car, shot in the head at close range in a park about an hour southwest of here. We are putting every resource into this, sir, we'll find them.\"\n\nThe CIA Director was next. \"Sir, we have nothing solid on any foreign involvement, many agencies are offering support. There were no indications of leadership going to ground early. We are focusing on the usual bad actors.\"\n\n\"Military is the same. We are seeing the normal buildups in response per our change in DEFCON to two, but nothing started before the attack.\" The Chairman of the Joint Chiefs of Staff, a Marine 4-star General, leaned forward. \"Sir, we request permission to stand down to DEFCON Three.\"\n\n\"Granted,\" I said. \"Dust off strike plans for the usual subjects, if we get evidence they were involved I want options ready to go,\" I said.\n\nThe meeting continued on for a half hour before an FBI Assistant Director rushed into the room. \"Sir, we got a tip and it panned out,\" the man said excitedly. \"Agent Jennings was receiving payouts for years, the payments were from a bank linked to the Zeta Cartel in Mexico,\" he said. \"We started looking at other payments from that account, and it's a gold mine. Both Attorney General Smallridge and Homeland Security Chief LaGrange have been receiving payoffs for years, totaling in the millions.\"\n\nI asked the question we all had. \"So why did the Zetas kill their own?\"\n\n\"Well, they also have been getting paid off by the Pacific cartel. In the last few weeks, they have received over a million dollars each, just as the DEA and Customs have focused on shutting down the Zeta's smuggling routes in the Caribbean. Senator Mendez, he announced his retirement last week, he's been on their payroll for years as well. And DEA Agent Mendico, he made a huge bust on a Zeta route last week, it turns out he was getting paid by the Gulf Cartel as well as the Zetas.\"\n\n\"So they took out those they didn't trust, and tried to get me.\"\n\n\"Yes sir, the drone that struck you failed to detonate. It was a small shaped charge, capable of punching a hole right through a skull. The drone had facial recognition capability and artificial intelligence, very sophisticated.\"\n\n\"Capable of being used by a Cartel?\" I looked over at my CIA and FBI representatives.\n\n\"Yes sir,\" the CIA director said. \"Especially the Zetas, they are the most technologically advanced of all Cartels.\"\n\nI looked at the clock. \"In four hours, I am going to be addressing the nation. I want strike plans ready in an hour, General, I want every known Zeta asset in Mexico targeted until we are down to bombing their outhouses. Director Jones, I want the FBI and DEA experts on the Cartel to focus on identifying Zetas and assets in the States. Lock the agents and analysts in a room, no communications with anyone outside the room until after my speech tonight. I don't know who we can trust; if they've bought those four, they have more. Treasury, I want you to get after these accounts, get them seized and trace who has been getting paid off. And nobody here talks to the press, no one mentions the Cartels. Get moving.\"\n\nThey stood as I got to my feet and walked into a smaller room with my Chief of Staff and Secretary of State. \"How is the international reaction to the attempt,\" I started.\n\n\"Better than I expected, countries are expressing outrage and offering support, or just denying they had anything to do with it,\" the Secretary said.\n\n\"Good. We're going to piss Mexico off something fierce, I need your help preventing war from erupting. I'm not going to ask permission for the bombings first.\"\n\n\"Sir, that's... they won't like that at all, sir, it will take relations back decades.\"\n\n\"I know, but if I tell anyone in their government it will get back to them. The level of corruption there is staggering, you know that.\" He sighed and nodded his head.\n\nI turned to my Chief of Staff. \"I don't want anything leaking out about a Cartel involvement. For now, have it leaked that the killer has been identified and is believed to have committed suicide. Paint him as eccentric, technologically gifted, maybe has a grudge against his leadership. I don't want anything about corruption or drugs until I start my speech tonight.\"\n\n\"Yes sir, I'll get on it.\"\n\nBy six PM, I was meeting with the Joint Chiefs in the Situation Room again. The strike plan was simple in thought, but wide ranging in scope. B-52's loaded with dozens of cruise missiles were circling a hundred miles off the east coast of Mexico, while the Navy had two cruisers and a submarine off the west coast. Stealth bombers loaded with GPS-targeted bombs were flying over western Texas. Targets had been selected and reviewed; I approved them and gave them the go at 1830. A few minutes later, I was on Marine One, returning to the White House.\n\nPrecisely at eight PM, the cameras were rolling in the Oval Office as I went live to the nation. I looked a little foolish with the large bandage on my forehead, but such was life. \"My fellow Americans, this morning a brazen attack on your President and his Staff, along with a sitting Senator, resulted in the deaths of four fellow citizens. I wear the evidence of the attack tonight, saved only by a faulty detonator that kept me from being killed on live television. I mourn the loss of those four men, just as I thank the Lord that my life has been spared. As you have heard, my injuries were minor.\"\n\nI paused, this was as far as we had gone with releasing the speech to the press. \"Like all of you, I want the people who perpetrated this attack to face justice. Evidence uncovered has identified those responsible; it was not the attack of a madman, a terrorist or a foreign state. Rather, it was a brutal drug cartel, seeking to eliminate opposition to their criminal activities. They should have studied history, though. They have awakened a sleeping giant, and filled him with a terrible resolve.\"\n\nThe television screen that had been placed behind me was turned on, the feed was live drone video of a compound. \"This is the Mexican headquarters of the Los Zetas cartel, a brutal criminal enterprise formed by the very soldiers and law enforcement agents intended to fight them.\" The screen exploded in lights as cruise missiles slammed into the buildings, reducing them to rubble in a matter of seconds. \"All over Mexico, this is the fate of the Zetas. The full might and power of the United States is descending upon them, there is no place they can hide, no safety to be found. They present a Clear and Present Danger to the National Security of the United States, and we will deal with them quickly and decisively.\"\n\nI watched as the display cycled through targets, showing the destruction taking place within a single minute of time. \"We will spare no expense, leave no stone unturned in this investigation. The Cartels have functioned with impunity for far too long, their activities unchecked by corrupted governments. This ends tonight.\"\n\nThere was one last explosion. \"May God protect our brave men in uniform, our law enforcement and our judiciary through this fight, and may God Bless the United States of America.\"\n\nI walked out of the White House to Marine One for the flight to Camp David, to finally rejoin my family.\n\nCh. 67\n\nCamp David wasn't the relaxing time I was hoping for.\n\nThe doctors wanted me to take it easy and continued to monitor me for signs of concussions. My wife Tammy was just happy I was all right; the whole thing had shaken her to the core. She knew I was alive, my staff had updated her, and I had called her directly, but still... she couldn't get over that it was only a faulty device that kept her from being a widow. We didn't get much sleep that first night.\n\nI had periodic updates through the night and the next morning on the results of the strikes against the Zetas. I also had some rather animated phone calls with the President of Mexico, who was both outraged and thankful. Outraged that I had attacked his territory without telling him, and thankful that I had done what he was unable to- take out the leadership of the most dangerous drug cartel in his land. To ease tensions, I agreed to two things, both of which he took credit for in his speech to his nation that night. One was to immediately stop all military efforts within Mexican territory; that was all right, the initial salvo was huge and devastating. The other was to offer reparations to any innocents killed or property damaged. It was a small price to pay. We couldn't afford to have the Mexican people see the President as weak, the Cartels already controlled too much and if he fell, the country would fall into chaos.\n\nThe response of other nations was heartening; the brazen attempt to assassinate a state leader and his senior staff sent shock waves through the Americas. Offers of support and intelligence poured in to the CIA and FBI.\n\nMy biggest worry was that if the Zetas had penetrated so high in my Administration, who else out there had not betrayed them? Who could I trust?\n\nThe next day my Doctor and my wife ganged up on me, forcing my Chief of Staff to clear my schedule for a nap. My senior military, CIA and Justice leadership came to brief me as needed. It became clear that although we hadn't eradicated the Zetas, we had nearly decapitated them.\n\nNow I wanted to starve them and grind them down. Treasury and the DEA were making progress on the lifeblood of the Cartels, the money laundering and transfers. It would be the biggest investigation in US history.\n\nBy midnight, I was in that zone where I wanted desperately to sleep but my brain was still going too fast. I walked out of the bedroom quietly, leaving behind my lightly snoring wife, and went to the bar in my office. Taking some ice out of the mini-fridge, I put a few in a tumbler and poured a good quantity of Bailey's Irish Cream over it, mixing in some extra Two Gingers scotch whiskey. The Secret Service left me alone in my cabin, but as soon as I unlocked the door to the patio, an agent was opening it for me. \"Good evening, Mr. President,\" he said as he closed it behind me.\n\n\"Good evening, Theo.\" I knew every man in my detail, not just their names but their families. I knew now more than ever how difficult their job was, and I appreciated it. \"Beautiful night, eh?\"\n\n\"Yes sir, I love those cool nights after the first hard frost. It knocks the bugs down.\" I moved over to the chair overlooking the woods, while he moved to a place near the edge of the patio. \"Archer is on the back patio,\" he said into his microphone. I could hear, but not see, other agents moving into position around the back.\n\nI sat there for at least half an hour, just enjoying the night and my drink, when I saw movement out of the corner of my eye. An alarm was called out, and Theo rushed over to me just as a large wolf entered the clearing. As the agents were responding with Uzis out, I saw the wolf change into a woman, a beautiful woman, wearing only an ID badge on a necklace. \"Mr. President, it's Lisa Giovanni,\" she said as the Secret Service converged on her.\n\nThe agents stopped, recognizing her as she was the White House Counsel. \"It's all right boys. Escort her over here, and someone grab her a shirt from inside.\" I laughed a little, Lisa sure knew how to make an entrance. The agents got over their shock and walked with her, while another agent came out from the room holding a pair of shorts and a sweatshirt.\n\n\"Thanks, guys,\" she said as she pulled them on. \"Sorry about not calling, but I was in the neighborhood and I thought I'd drop by.\"\n\n\"You're a werewolf,\" I stated, feeling like Captain Obvious. \"Is this... recent?\"\n\n\"Yes, while I was on the run from being framed for murder and being targeted myself, I found my mate. He's the Alpha of a pack, and he mated and changed me.\"\n\n\"Congratulations,\" I said, knowing that a mating was stronger than a marriage, it was a life bond. \"Are you happy?\"\n\n\"Very happy, Mr. President. I'm afraid this isn't a social call, could you call any senior staff you have here? I need to talk to all of you.\"\n\nI nodded. \"You're still part of that staff, Lisa. You're still my lawyer.\" I had an assistant send out the call, fifteen minutes and we would meet in the conference room that functioned as my situation room here at Camp David. \"Are you planning to return to work, Lisa?\"",
        "\"I'm sorry sir, I brought my resignation letter with me,\" she replied. \"So much is going on, I have responsibilities now as a mate and as Alpha female of a Pack I've barely met. I'm also just learning how to be a wolf. I don't think it would be a good idea to return, and after we've talked tonight you'll know why.\"\n\nI stared at her for a moment. \"You know something about the assassinations.\"\n\nShe nodded. \"You were the only innocent among the targets, Mr. President. The Packs haven't trusted the Government; it was shaky after the peace deal, but the Scrabble Killer investigation ruined any progress. They don't want to be a part of the process, but that doesn't mean there aren't areas where we can help each other. Common goals, common enemies.\"\n\n\"Do you speak for yourself or others?\"\n\n\"The Alpha Council and over two dozen Packs met a few days ago and asked me to approach you directly, sir. There aren't many we trust, but you have earned that.\"\n\nI looked into her eyes, they were the same as before, yet different. They had a brightness, almost a glow, that they didn't have before. Whether it was her wolf or her happiness, I didn't know, but I trusted her and right now that was enough. \"Thank you for coming, Lisa. I've missed having you around. Now, come on, the cart awaits.\" We walked around the cabin to where the Presidential golf cart waited. He got in the driver's side, nodding for me to ride shotgun, while two agents took their posts where the golf bags would normally sit. A minute later, we stopped outside the administration building. \"They're all waiting for you, Mr. President,\" his Chief of Staff said as we got out. \"Good to see you again, counsel.\"\n\n\"Thank you. It's good to see you all again,\" Lisa replied.\n\nWe moved into the room, them all standing until I sat at the head of the table. Lisa was escorted to the other end. I looked around, a few had managed to put suits on, but most of the people were in casual clothes, my Press Secretary was in his pajamas. \"Thank you all for coming. Miss... I'm sorry, Mrs. Giovanni, the floor is yours.\"\n\n\"Thank you, Mr. President.\" She had two small scandiscs in front of her at the table, she handed one to the Air Force technician who was controlling the audio/visual equipment in the room. \"Bring up the file marked interview on the screen, play it when I tell you,\" she said. \"For those who haven't heard, I was targeted for assassination and framed for a murder I didn't commit. When I fled for safety, I found myself with a pack of Werewolves, and there I found my mate. I accepted him, made the change, and am now a Pack Alpha Female of the Thurmont Pack.\"\n\nThere was murmuring in the room. \"Here,\" I asked. Thurmont was the small down at the base of the mountain where Marine One would land, from there a motorcade went up to Camp David.\n\n\"Yes, Mr. President. Our Pack actually borders this retreat.\" I could see the Secret Service agents talking into their arms, thinking it was a threat. \"The Pack has been there as long as this retreat has been here. They aren't a threat, they just wanted to make sure I got to you all safely. Now, as I was saying earlier, dozens of Alphas and the Alpha Council sent me here because we didn't know who we could trust.\" I watched as she pulled a piece of note paper off of the stand in front of me, and quickly wrote down something. Folding it in half, she had it passed down to the FBI Deputy Director who was sitting a few chairs to her right. He opened it up, his eyes widened, and he got up and talked to the Secret Service senior agent in the room. While we were all looking around in confusion, the two suddenly grabbed two men, a Deputy Director of the Customs and Border Patrol, and the CIA Branch Chief for Central America, and pulled them out of their chairs and to the ground. In seconds, the two men were handcuffed and protesting loudly.\n\n\"You can't do this!\" The CIA man struggled as he was pulled to his feet, but the Secret Service quickly escorted the two men out.\n\n\"Both of those men are paid operatives of the Zetas, and having them here would endanger the President, and the country. And yes, I have proof of this.\" She paused and looked directly at me. \"Mr. President, the Packs were approached recently by a man who had been a high-level Zeta Cartel operative in the United States. He was responsible for smuggling operations and intelligence.\"\n\n\"You have Charlie Stillwater in custody?\" The DEA representative was leaning forward and almost ready to come out of his seat. \"He's the highest-ranking Zeta leader in the states, he's number one on our most-wanted list,\" he explained as he sat back.\n\nLisa nodded. \"We do. He came to us because he is a mountain lion shifter, and the Zetas were holding his sister and mother captive to force him to help them. We broke them and others out of a Zeta safe house, but his story is better told by him.\" She nodded to the video tech, and the screen came to life with a conference room. I recognized several of the Alphas and their mates in the room, and Charlie was easy to figure out because he was handcuffed.\n\nI listened as he laid out what he had done, and what the Zetas had planned. I was shocked, along with everyone, to hear that the Scrabble killer was just the beginning of a campaign to restart the Were Wars, this time for them to be wiped out. I was sick to my stomach at the thought, too many good people on both sides had been lost. I did not want to see the peace treaty I fought hard for destroyed in the name of greed. When the video stopped, I wasn't the only one with a headache.\n\nLisa handed the second scandisk to the FBI director. \"On that disk is evidence Charlie provided us in exchange for saving his family. Zeta agents, how contacts were managed, records of payouts, account numbers, and services rendered. The four men killed by the drones are in there, many more are as well. You have rats in your house, Mr. President, you need to clean it. Quickly and quietly.\"\n\nThe FBI agent had the file open on his laptop. His face turned ashen as he read through the names, the acting Attorney General at his left, the Chairman of the Joint Chiefs at his right. \"She's right, sir. The penetration is staggering.\"\n\n\"I have a suggestion, Mr. President,\" Lisa said. \"The Alphas were worried about the list getting out and people escaping. We recommend you use agencies not compromised to perform the arrests, coordinated to happen at the same time. Marshal's Service, local police or Sheriff's, FBI from other jurisdictions, even military.\"\n\n\"Do it,\" I said to the FBI director. \"Is that all for them,\" I asked her.\n\n\"Yes sir. I have a few other things to discuss with you personally.\"\n\n\"Very well. Here's what I want,\" I said as I stood, my hands flat on the table. \"By dinnertime tonight I want everyone on that list in jail. Keep your mouths shut, no leaks, no mistakes.\" I walked out as they all stood, Lisa and the Secret Service following me. I went right back to the golf cart. \"What else is there, Lisa?\"\n\nShe handed me a third Scandisk. \"On this is a copy of my resignation letter. The second is a Presidential pardon, names already filled in.\"\n\nI laughed so hard people started looking at me. \"My God, Lisa, you don't disappoint. These are getting to be fairly routine.\"\n\n\"Yes sir, and this is broader and contains more people than the previous ones. When we learned of the actions of the Zetas in the killing of Pack members, we didn't seek justice through channels we knew we couldn't trust. There were people directly involved, and we wanted Pack justice.\"\n\n\"You killed them.\" I had seen evidence of how Pack justice was handled.\n\n\"We got justice,\" I said. \"I'm a werewolf now, this is how we work.\" I waited for her to continue. \"The people and the evidence against them are listed, along with victim statements from those we rescued. The list of agents is separated between those who voluntarily cooperated and those who were blackmailed or extorted. Our way is not to punish those who were acting to protect their family; we would ask that you do the same. Most of those people are on the pardon list.\"\n\n\"That seems reasonable,\" I said.\n\n\"Charlie Stillwater is on that list as well. There are also some overseas bank accounts that our hackers were able to liberate,\" I said. \"We included them and the access codes, so your people can trace evidence. The paperwork you can sign will absolve us of various banking, tax and money laundering crimes that may have been broken.\"\n\n\"Hackers? Not Josh Spencer again?\"\n\nShe laughed. \"Not just him, but also Enrique Mendez and Carl Smith. They were very busy young men,\" she said with a laugh, \"and all have found their mates now. Josh is mates with Rose Conspeill's daughter Charlotte, and Carl is mates with Josh's sister Jane. The Packs are all benefiting from the money they stole, and the Cartels don't have it. It's a win-win.\"\n\n\"It's a lot cheaper and more effective than what I have, Lisa. I have no problem with that.\" I looked at her, she wasn't done yet. \"What else did you guys do?\"\n\n\"We knew we couldn't take the Cartels in a war, they are too violent and we would take heavy losses,\" she said. \"So, we used our hacking and intelligence skills and started a war between them. The attacks on Zeta assets, we left evidence pointing to the Pacific or Gulf cartels; we also fed intelligence on the Zetas to the same. It was working pretty well, right up until the Zetas decided to attack you.\"\n\n\"Did you pay off the Zeta's agents? Was it you who got my staffers killed?\"\n\n\"No sir, that was all them,\" she said. \"What we DID do was let the other Cartels know some of the people the Zetas had on their payroll, and how to contact them. We hinted that they could be swayed over to their side for the right money. They took the cash, Mr. President. They didn't care where it came from.\"\n\n\"I understand.\" I drove us back to my cabin in silence, turning to her when we arrived. \"Give me a few days to clean things up, then come back to the White House. You can pick up the pardons and the other paperwork, say goodbye to everyone and clean out your desk.\"\n\n\"Thank you, Mr. President.\"\n\nShe turned towards the woods, but I couldn't look away. \"Lisa, can I see your shift?\"\n\n\"Of course, sir. I've lost a lot of my modesty in the last week.\" She dropped the oversize shorts, then tossed the sweatshirt by her side. The shift was fast and smooth, and in a moment the big grey and black wolf was back in her place.\n\nShe trotted to me, licking my hand as I petted her head and neck. \"Your wolf is beautiful, Lisa. Safe travels.\"\n\nShe ran off as I turned for the door, stopping when I saw my Tammy standing there wide-eyed. \"Hank, what the hell are you doing out here in the middle of the night with a naked woman?\" "
    ],
    "authorname": "partwolf",
    "tags": [
        "drama",
        "supernatural",
        "romance",
        "wolf pack",
        "wolf mate",
        "were romance",
        "werewolf romance",
        "anthro",
        "werewolf drama"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/rose-ch-64-67"
}