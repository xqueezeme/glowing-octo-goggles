{
    "title": "My Hero",
    "pages": [
        "This story was to be part of Randi's water themed invitational, but due to a death in the family I had to put it on hold. By the time I came up for air, it was too late to finish it in time for the invitational. I've struggled with this story, and it's only been with the help of two special friends that helped me get this started again. My thanks to Girlinthemoon for her honest opinion and, as always, the editors who take the time to make my tangled words into such a wonderful story. Please enjoy your read.\n\n*****\n\n\"Ladies and Gentleman, please fasten your seat belts. We have started our descent and will be landing at London Heathrow Airport in ten minutes.\" \n\nI'd become a veteran of this particular trip and had already anticipated the announcement. I usually took the later flight, but Cheryl would be getting married today and that threw my usual plans. The woman sitting next to me was sticking her camera against the window taking aerial shots; I smiled and left her to it.\n\nClosing my eyes for a few minutes helped the time go faster for some reason. It also brought back the reason I was doing this. \n\n*******\n\nCheryl was smart, very smart. After all, she had to be since she had Professor at the beginning of her name; she even had a couple of Bachelor of something or others tucked in there as well. Yep, she was smart. She even gave me a list of advanced degrees in her chosen field. It was something I always found funny, to be honest; after all her field was Mathematics and yet it was always left to me to balance her checkbook every month.\n\nAs for me, the only word at the beginning of my name was Mister. \n\nI found out later in life that wasn't enough, but I'm getting ahead of myself here. So, Cheryl got tenure, the youngest to ever do that and in record time, as well, and me? Well, I still held on tenaciously to the title of Mister. I heaped night classes onto my resume and became a graphic designer. The other important fact in my life was that because Cheryl wanted the security of tenure so much, she was willing to sacrifice as much as she dared to get it.\n\nThe time she was dedicating to this left me with time on my hands. Even my wife understood the term 'idle hands', so she suggested I find a hobby, just to keep me occupied, hence the night courses. When she finally got tenure we went out and celebrated, and we both figured out that was the night Libby was conceived. Cheryl was furious but she was also Catholic-minded about pregnancies, and I believe to this day that Cheryl's mindset was the only reason Libby came into this world and lodged herself firmly in my heart. \n\nAs soon as maternity leave was up, Cheryl was out of the house and back at work. I once again changed jobs so I could work from home and converted one of the spare rooms into my office and, yes, was a stay-at-home dad. I watched out for Libby as she crawled all over the house, peed on most things and tried to stick her nose and fingers into everything. \n\nJust how the hell can children the age of dribble and gurgle manage to get themselves out of diapers that are almost nailed to their bodies? They do, and she did, all over the house. For some reason, she sure seemed to be marking her territory. \n\nOver the years Cheryl's ambition grew, and at such a subtle pace I didn't even notice it until she had all her ducks in a row. Oh, she was patient and it took a while, but when she was ready, it was swift and very, very surgical.\n\n*******\n\nLibby was at her grandparents for the night and I was wondering if I was actually going to get lucky that night. That, in itself, would have been really lucky since it had been almost three months since Cheryl and I had been that intimate. She sat me down and word by word pulled our marriage down around my ankles.\n\nCheryl's ambition was now being held back; family wasn't in her plans even at the beginning, and judging by the amount of time she actually spent with her own daughter I would have agreed with her on that point. It was then she pulled out a brown envelope and asked me to read her proposal and get a lawyer. I was still reading it when I heard a movement by the door. When I looked over, my soon-to-be ex-wife was carrying a case out the front door.\n\nShe wanted nothing other than what she had already pulled out of the bank, which was everything, and that included Libby's small but steadily growing college fund. When I followed her to the door a man was standing outside, almost anticipating me following Cheryl. The man approached me asking if I was Martin Henderson. When I said yes, he then proceeded to hand me an envelope uttering the words out of boredom and yet still stripping me of everything. \n\nI had been served.\n\nThat gave Cheryl the time she needed to get into her car and leave. Feeling I had to have some of my own vengeance that evening, I went to Cheryl's folks house and removed Libby from their care. I didn't need to ask if they knew, just the look in her father's eyes was enough for me. We still don't speak.\n\nThe lawyer she hired did his job well, and once again Cheryl got what she alone wanted, although I did spot her irritation when she was told that since I was getting custody of Libby, it was going to cost her in child support payment. In the end, even my lawyer told me it would be cheaper to settle. I couldn't think how it was cheaper when she walked away with every cent we placed in the bank. \n\nI wasn't intent on knowing why, even though she went to great length to tell me: I was stifling her career and being married to nothing more than a graphic designer was like throwing an anchor overboard and waiting for it to catch on the sea bed.\n\nShe put down irreconcilable differences and I went with it thinking that protected Libby from all this. My folks stepped up to the plate and helped. When they mentioned Cheryl's folks, the look I gave them reminded them not to push their luck. Now, not tethered by a family, of course Cheryl put more hours into her job and that, in itself, got her noticed more by the dean.\n\nMy folks sat me down and asked for a clear-the-air talk. My reply centered on one thing: if they mentioned Cheryl's folks the air wouldn't remain clear for long. Once the rules were established we talked freely, and I once again knew why I loved my folks so much. Cheryl signed over her rights to the house, although I made sure the ink was dry on that agreement before I sold up, and Libby and I moved back in with my folks. I simply understood their reasoning: sometimes you have to take a step back, so you can move forward.\n\nCheryl had visitation rights, something she used sparingly, at best, and I suspected only when her own folks pressured her to since Libby told me that she was at grandma's house most of the time.\n\nWe moved back into my folks' house, and every day I watched the love they had for each other. I looked back at my life with Cheryl and wondered what the fuck happened. It took my dad sitting me down and giving me that, \"What are you going to do now?\" speech that made me realize that I had hit bottom. Cheryl had taken everything SHE wanted. It was clear to all of us that day that Libby really wasn't one of those things. I wondered how much all this was affecting an eight-year-old. \n\nIn effect, all I could do was hit life's reset button, and that's what I did. Well, my Dad and I got totally shit-faced first. Since I had no life other than with my own family, I also found that, since I could do the hours, time zones meant nothing to me and I was establishing a reputation from the East to the West coast. In the end my mom (bless her), practically ordered me out of the basement office and told me to get a real one and with staff to take the crap she had to put up with.\n\nI found a space; Bennett's Funeral Directors was leasing a room. It was cheap because no one wanted it; I did. Since all my work was done over the phone or web, I didn't care where my office was. I even hired Mr. Bennett's daughter, Toni, to work an hour a day and all Saturday morning putting files away and making and answering calls, if needed. My only question during her interview was, \"Could you make Navy coffee?\" She sure passed that test.\n\nToni was also damn smart, and I encouraged that. We talked freely with each other and that's when she told me that, as her parents' only child, she would take over from her father. Toni didn't want that and, although I didn't encourage her, she did have a knack, not to mention a damn good eye, for design, so much so that I pulled her dad aside one afternoon while Toni was at school and showed him some of her work. He did no more than get up and leave. That's when my thoughts turned to regret rather than hope and wondered if I was going to be moving offices real soon.\n\nA half hour later, Mr. Bennett came back and had his wife with him. He asked me to show his wife their daughter's work again; I was happy to. Both were waiting for their daughter when she returned from school. In effect they ambushed her, scolded her for not allowing them to see her work and then group-hugged her to death. By the end of that meeting, Toni's college major was changed to graphic design.\n\nFeeling that my life had finally turned a corner, I actually sat back in my chair and smiled.\n\nThen my cell rang.\n\n*******\n\nThe dust had all settled on my office move when Cheryl told me she was taking up a new position and that it would look good on her resume at a later date. She was taking up a position at Oxford University, in England. Her goodbye to her daughter was a weekend with her at a spa. Libby told me when she got back that her mother spent more time on the phone than talking to her own daughter.\n\nJust who was this person and when did she steal the body of the woman I fell in love with? \n\nEighteen months into her absence, she phoned me. Cheryl wanted to set up some sort of schedule so Libby could come and visit. I laughed and put the phone down. Knowing it was useless trying to enlist the help of her own folks, she rang mine. In the end I simply asked Libby what she wanted. She kept her thoughts to herself for three days, and then called a family meeting. For a, now, ten-year-old, she spoke so eloquently that I couldn't deny her even if I had wanted to.\n\nSo, for two years, Libby and I became frequent flyers. Most of the time Cheryl would collect her at Heathrow airport, I would spend a day or two in London sightseeing and then return home. On a few occasions I would have to hire a car, drive up to Oxford and drop her off at her rooms; it seems that's a posh English way of saying her office.\n\nWhen Cheryl made the announcement that she was getting married, I tried ever so hard to work out if I was all that bothered. In the end, she had made her choices, just as Libby and I had made ours. I just wondered if the poor schmuck she was going to marry was another stepping stone in her career. What brought me up short was Cheryl wanting Libby at the wedding. When I asked my daughter if she wanted to go, she was really happy.\n\nIt seems she had met the schmuck and thought he was nice. Well, that was news to me: the her meeting the schmuck and not telling me part, that is.\n\n*******\n\nThe landing and the engines in full reverse opened my eyes and brought me back to the present. I kept out of the way as the contents of the plane seemed to explode out of the door and into the terminal. Customs quickly noticed my lack of luggage and that made me an oddity that was far too tempting for them. They waved me over and asked why I didn't have any luggage. I had been pulled to one side over luggage before and came to the correct conclusion: people traveling light through an airport had suspected-drugs-trafficker signs pointed at them.\n\nAs I explained, I emptied my pockets onto the table between us. \"This trip is going to be a killer, sir. My daughter is at her mother's wedding. I'm to pick her up after the party and we're back here to catch the overnight back to the States.\"\n\nI then handed him my return ticket and that of my daughter. I just couldn't resist pulling a picture of her out of my wallet as he looked over the tickets. It still didn't stop him from passing it over the machine in front of him for a closer check. He had a smile as his screen finished putting what felt like my life history of travel in front of him, so I knew he believed me. I wished him well and joined the others from my plane, who had collected their luggage were now in the process of walking past me.\n\nThe drive up to Oxford was the quickest I've ever done; not one traffic jam or road works the whole way. The trouble with that, of course, was, that although I knew I would be early, I was over an hour and a half early and there was NO WAY I was going to join Cheryl and the schmuck at the reception.\n\n*******\n\nThe sign was shiny and very new: Welcome to the Oxford White Water Centre.\n\nIt was five minutes from where the party was being held and fifteen from where Cheryl lived. I thought it was ideal and since I've never seen one of these up close before, it would surely be educational. The trouble was that I missed the entrance and so quickly pulled into a pub parking lot instead. I was sure they wouldn't mind; it was a really hot day and, judging by the amount of cars already there, they would be too busy to notice my rental in the corner.\n\nThe day was stunning, watching families as they walked the gravel paths around the white water centre. They explained what was going on to their children, and it helped me understand, as well. Sports had never been my thing; geeks like me prefer things that don't move, like computer terminals and tablets. \n\nBreaking from the path, I sat on a picnic bench, glad I had bought sunglasses. That was a contradiction when you think that this was England and it always rained, but instinct made me bring them and I was glad I did. Seven people in a round rubber raft came down the man-made rapids. The woman making most of the noise and barking all of the orders was clearly one of the centre's instructors. The whole crew looked absolutely soaked, even in their wetsuits, and each and every one of them smiled all the way past me.\n\nTwo lone canoeists came next. They jammed their paddles into the water, forcing themselves against the rushing water in an effort to circle a colored pole dangling above them and then race onto the next pole or obstacle before disappearing around the bend in the course. The pause in activity made me wonder if that was that. The bossy woman and her six-person crew came around again some minutes later. I'm not sure who was the wettest, the rapids, or each and every one of them, but those smiles suggested an enthusiasm for the fun they were clearly having.\n\nOnly one of the two canoeists came down this time. If he was trying to perfect something, I failed to see what. The total concentration and skill he had with that paddle in his hands impressed the hell out of me. Just as the guy went on to attack another of the pole's dangling from a wire across the rapids, a young woman came into view on the bank across from me. At first, she confused me until I saw a duplicate of her farther down the course, so I figured them both to be part of some sort of safety team.  \n\nThe jacket version of her wet suit was open showing a swimming costume. She wore shorts and her feet were covered in some sort of rubber shoes. The belt she wore held a pouch firmly to the small of her back, rope peeked out of both ends of the pouch. I smiled and promised myself to research all the proper names for these things since I could enjoy watching this sport, from the safety of a sports bar or home, of course.\n\nThere seemed to be that lull again. The young woman looked up the rapids and nothing came down. She waited a moment and then seemed to decide to talk to her friend farther down the path. As her back turned another canoeist came into view. This one was as fast as the first one and followed an identical path from the first canoeist. Both my mind's eye and memory followed this one down the rapids but something was wrong.\n\nWhen this canoeist got past the fourth permanent obstruction that helped cause the white water, the rear of the canoe clipped it, sending the canoe sideways into the next obstruction. In the canoeist's haste to correct the mistake, the bottom of the canoe hit another obstruction just below the surface causing the canoeist to capsize. \n\nAlthough it all happened much more quickly than I could explain it, the end result became both inevitable and just as frightening. \n\nThe paddle came first, the canoe still upside down came next, and now red had started to mix with the white water. Something was wrong. The safety woman was too far away to notice. Me standing and shouting over the noise of the rapids loud enough to draw her attention to all this happening wasn't going to work.\n\nThe canoeist needed help, that was a given. I pulled my jacket off, mindful of my passport and plane tickets inside. I rolled it up and forced it under the table on which I was sat. My shoes followed, and I dove in. FUCK this bitching water was cold, no wonder everyone wore wetsuits. The canoe hit another one of the permanent obstructions, causing it to spin and move, thankfully, towards me as it did. I was having my own problems swimming against such fast water, and the current bounced me off of one of the permanent structures a couple of times. \n\nI did get the feeling that this wasn't one of my best ideas, as the torrent of water tried so hard to show me who was the boss here. I made a grab for the canoe and with my other hand made sure the canoeist was still inside before pulling hard, turning the whole thing upright. The sigh of relief did little to help our predicament, so bracing my feet against the structure the water forced me against, I pushed us both away from the strong current and towards the bank.\n\nEven I knew I needed to get both of us out of this before I became as big a victim as she was. Yes, unless they had a lot of hippies who like white water canoeing, this was a woman. Away from the centre of the course, the water became calmer. As I grabbed hold of the banking, the water was almost still. Although I was going as fast as I could, wet clothes sure do slow you down. Being polite wasn't high on my list when it came to people not breathing and also bleeding.\n\nPulling her out of the canoe took a tug or two, I let the canoe go after that and pulled her further up the bank. I needed to get her breathing before doing anything about the bleeding. The life preserver came off first; the wetsuit thankfully zipped at the front and not the back. I then set about first aid and mentally thanked my college for having a mandatory first aid class. \n\nThe two safety girls must have noticed the empty canoe when it passed them because they came running. The one I had seen before ran further up the course, dove in. Since my concentration was on this woman in front of me I didn't notice the safety girl again until she was by my side. The other one ran up the hill towards the main building to alert everyone.\n\n\"Oh my God, I'm in so much trouble,\" were the only words out of her mouth as she knelt beside me.\n\nThe woman on the ground coughed and a jet of water left her mouth by a good six inches before gravity claimed it and covered her face.\n\n\"Just shut up and help me pull her over.\"\n\nWhen the safety woman calmed a bit more, we both pulled the canoeist into the recovery position, checked her pulse once more before I stood and walked towards the bench and pulled my coat and shoes free.\n\n\"What are you doing? You can't leave.\"\n\n\"Yes, I can and am. Me being here will create too many questions you don't want. You saved her and I'm not here.\"\n\nA loud klaxon sounded from the building at the top of the hill, enveloping the whole course in its call. The water started to calm and slowly the water level dropped around the course. I made it past the gates as an ambulance drove in. My rental was waiting to join the traffic as two police cars tore into the White Water Centre.",
        "*******\n\nIt felt like a comedy sketch when I knocked on Cheryl's door. She opened it and looked me up and down. Then she looked up at the bright sunshine before looking at me again.\n\n\"I'm kinda tight for time so could you make this quick, Cheryl? Yes, I'm wet. I got caught in one of those thunderstorms that seems to sneak around this country.\"\n\nShe smirked. I had taken her steam away and spoilt her fun. Her body leaned back into the house and she called Libby. My daughter bounded up to the door and came to a screeching stop, her eyes like saucers. \n\n\"You're wet,\" was my daughter's only statement.\n\nThe smirk was once again on Cheryl's lips as our own daughter took on the mantle of inquisitor. I held out my hand and Libby placed her suitcase into it.\n\n\"I was having a splashing contest with the ducks in the pond, the ducks won.\"\n\n\"What pond? Mom and Derek took me to the nearest park that had a pond and that's four miles from here.\"\n\nCheryl's smirk just got bigger as she watched her daughter win that one. I walked to the car as Libby said goodbye to her mom and joined me in the car. She did her best all the way from Oxford to Heathrow to get an answer as to why I was wet. The only way I could think of to deflect her questions would have been to ask her about the wedding. I would much rather stay wet.\n\nThe car heating dried me to a point, now the smell came and Libby moved closer to the open window. I couldn't blame her; the good thing about airports is they sell everything in Duty Free. I took my new clothes, wash kit and towel up to the First Class lounge with us and, while Libby watched the television, I had a shower and put on some nice warm and dry clothes once again. The bin in the men's bathroom was full when I left there. We were on the plane less than an hour later and wheels up soon after. \n\nJet lag slowed down the inquisition for a couple of days, but Libby tipped off Mom and she took over. Everyone seemed to know something was up and I wasn't about to explain myself. Hell, even Toni got in on it.\n\n\"Ducks, huh?\"\n\nI gave her that 'not you as well' look. It didn't faze her in the least.\n\n\"Yep, big white ones.\"\n\nShe giggled. She sure had a sweet giggle. I enjoyed her company and didn't look forward to losing her when she went away to college.\n\n\"Sorry to burst your bubble, boss, but them things are called swans.\"\n\nShrugging my shoulders, I replied, \"No wonder it wasn't a fair fight.\"\n\nThe day's work took over after that, so no mention of anything that lived, breathed or swam in anything water-related was mentioned. Being the only one in when I got home I turned on the TV, lowered the sound and guy-flicked across the channels. Some woman was standing with a microphone in her hand; the camera had the Oxford White Water Centre sign in the background. Just as my mind thought, \"What the fuck?\" the front door closed so I switched over to sports and watched yesterday's game with Libby sitting right alongside me. \n\nI had meant to check the news channel later when Libby went to bed but I got involved in a conversation with my folks and it slipped my mind. Three days of peace reigned, mostly due to catching up for the time I had off getting Libby back. \n\n*******\n\nToni and I were in the office. We had one of the designs up on the big screen and I was overlapping foreground onto the main picture. The door to the office opened behind me and Toni looked up and gasped. I was still concentrating on what I was doing, that is, until Toni spoke.\n\n\"Em... Boss... Melody Carlson has just walked into the office.\"\n\nMy concentration was still on the screen so all I could manage was, \"That's nice.\"\n\nIt still took a moment longer before my brow creased in confusion. \"Who's Melody Carlson?\"\n\n\"That would be me,\" came the voice from the open door.\n\nI turned towards the voice and looked at her, I'm sure \"Wow!\" was invented solely for her use. The only thought that managed to pull itself from the many stirring around in my head was that she would look stunning if she would only smile. Then facts and figures slowly came from the far recesses of my mind. \n\nOur paths had crossed a couple of years back in a minor way. I was sub-contracted onto one of her companies during a promotion push for one of the perfumes her company made. I dealt with the company and never with her, but that didn't stop me finding out about her in the interest of curiosity and self-preservation. \n\nMelody Carlson, founder and owner of Carlson's Cosmetics, two failed marriages and a cosmetics business that grossed the equivalent of a small country's expenditure. Her make-up was worn by most of the stars of screen and stage, who publicly swore by it. Not bad for a woman who was, in fact, only two years older than I. \n\nWhen I found my voice, I asked the obvious. \"What can I do for you, Ms. Carlson?\"\n\nMelody looked around the office, her eyes stopped at my desk and the picture of my daughter on it. She walked over, placed her ass on the corner and sat. Leaning over and picking up the framed picture, she looked at it for a moment before placing it back onto the desk. It was the only time I saw her smile that day. She was cute as a button, as well. \n\nHer features hardened when she once again looked at me. \"I sat by my daughter's hospital bedside, plotting ways to kill you. But that would have been too quick, so then I plotted ways to ruin you first and then kill you.\"\n\nWow, if ever there was an example of the term 'pause for effect' I believe Melody Carlson had mastered it. The gasp from Toni reminded me that she was still there; it reminded Ms. Carlson as well. \n\n\"I can clearly see you're a parent, Mr. Henderson, a part of me wishes to thank you for saving my daughter. The other part still stands in dismay at the fact that once you had, you failed to look after her until REAL help had arrived.\" \n\nThe anger within her looked real to me; she also seemed to think she had a point to prove, so I let her continue.\n\n\"Only my first husband caused me to have such thoughts and I've dealt with him. You, on the other hand, I can't deal with. I'm in your debt Mr. Henderson and that alone makes my skin crawl.\"\n\nI saw Toni move from beside me and grabbed her arm, but that wasn't enough. The need to attack Ms. Carlson was sure strong in her and I had to grab her by the waist and lift her off her feet to stop her attacking our guest. Melody stood and slowly headed for the door. She paused before she joined her friend that stood in the hallway. \n\n\"A car will be here for you at six. Don't run away this time, Mr. Henderson, or I may have to come to your home and get you myself.\"\n\nMelody Carlson left; her friend who had waited in the corridor followed behind her. It was only then that I could let Toni go. It was her youth that still made her want to strike out. She was feisty now, and she was sure going to be hell on wheels all through college, that was for sure.\n\nAs I was watching Melody Carlson climb into the back of a car from my office window, Toni reminded me that it was time for explanations. \n\n\"Why? Just explain to me why.\"\n\n*******\n\nShe was still clenching and un-clenching her hands. Her body clearly wanted her to calm; her mind still refused to listen. I had pieced most of it together, but how to explain all this to Toni? She followed me back to my desk; her breathing was calmer now as I typed words into Google. \n\nToni sat and read the story that the Oxford local paper had; the national papers had a few more details but not much else: police reports, witness statements and a few 'un-named sources' added to the mystery of the unknown hero. \n\nDaniela Carlson was at the Oxford White Water Centre with her coach; they were putting finishing touches to her training before the next weekend's inter-University competition. She was on her timed run when her canoe clipped one of the permanent structures. The speed she was going, along with the current, caused her to spin and lose control.\n\nHer canoe capsized and she struck another obstacle on the way down the course, causing unconsciousness and the subsequent concussion. An unknown member of the public witnessed everything and jumped in to save her. He was still giving her mouth to mouth when the safety team arrived. In the ensuing chaos the unknown man disappeared. A member of the safety team gave a brief description of the man and said that he spoke with an American or Canadian accent.\n\nToni typed in a few more words into the computer but she couldn't glean anything else from Google or even the English national papers who, in their own desperation, had offered a reward for information leading to the discovery of this unknown man. \n\nToni looked at me, the gleam in her eyes a dead giveaway. \"So, what's it worth for me not to pick up that phone for the reward?\" \n\n\"My sincere gratitude, and if you didn't, then the loss of the job you love, not to mention your father putting you across his knee for betraying a confidence if you did.\"\n\nShe smiled at that thought; she may have been seventeen, but she could still see that happening. Toni glanced once again at the screen. She read the newspaper report one more time and then her face seemed to harden slightly. When she had finished, she turned to look at me. My own mind had already predicted her next question. Perhaps I worked with this young lady too much because I seemed to understand her thought process.\n\nHer voice was so soft, even for her, when she asked, \"Why did you leave?\" \n\nToni leaned her elbows onto her legs as she watched me sit on the same spot Melody Carlson had only just vacated. I thought for a while on how to answer her. In the end, the brutal honesty of my answer came out.\n\nGoing in after the canoeist was a given. When the she hadn't made any attempt to right herself along with her canoe, I just knew something was horribly wrong, I thought I was going to have a heart attack when I dived in. The water was so cold that I was fighting for my own breath as well as going after the capsized canoe and its occupant. By the time I had pulled her from her canoe and further away from the white water, her face was covered in blood from the nasty cut just above her left eye. \n\nGetting her breathing was my priority; the cut could wait for now. When the woman from the safety team joined us and her only response was the worry about being in trouble over this, it caused me to get a little pissed at her. When the canoeist couched up water I breathed the biggest sigh of relief in my life. The pulse in her neck was getting stronger and she was going to live.\n\nThe wound on her head still needed to be addressed but I was sure something in the little medical box on the safety woman's belt could deal with that until real medical help would arrive. I had done all I could.\n\nTo anyone watching all this I'm sure what I did next would seem just a little heartless, but I had done my bit; the canoeist would live and I still had my daughter to get back to London and onto a plane. Even if I had stayed, what would it have accomplished, other than getting shit from Cheryl and missing my plane home?\n\nToni seemed to ponder my reasoning for a while. Her youth may have made her stay in the same situation, but all I was being was practical. I didn't know this woman; she was in a difficult situation and I had pulled her away from that situation. \n\nOther than answer questions from the police and miss my plane, not to mention getting reams of crap from Cheryl, because I missed my pick up time for our daughter and thrown her own plans into chaos because she was due to leave for her honeymoon not long after I picked Libby up. What was there to gain?\n\nI got a hug from Toni that afternoon. She was close to tears about something but left before I could ask her if she was okay. Google got worn out for the next hour; I had the name of the woman I pulled from the White Water Centre. A few minutes more yielded some history. Ordinarily, I wouldn't have given much thought to this. It was over and done with. \n\nUnfortunately, Melody Carlson had strode into my life and into my face, and with it that small curiosity reached out from the humdrum of my life. Daniela Carlson had once again become real in my life. I even found a picture of her that the graphic designer in me went to work on. \n\n*******\n\nIt was the knock on my office door that caused me to pause and look up. The same woman that was with Melody Carlson was now standing in the doorway rather than in the hall. I pushed a pen drive into my computer and downloaded the image I was working on and closed it down. She stood to one side while I locked the office door and let me go first down the corridor. The journey itself took almost an hour. The Chesterton Country Club was the other side of the city from me, and as we drove up the driveway I was well impressed.\n\nShe parked in a spot that had a sign saying 'Reserved'. I got out when she did and followed her through endless corridors and then a lift, only to stop at a door that had 'Private' nailed proudly in big letters at head height so no one could miss it. She knocked once and then entered. Once she ushered me in, she then went outside again, closing the door when she did.\n\n\"Ah, my hero.\"\n\nA young woman's head peeked around a high-backed chair that was placed to look out the window and onto the manicured lawns. Daniela Carlson rose from the chair and walked towards me, her arms out and ready to give me a hug. We embraced and I had to admit she looked better this way than soaking wet and covered in blood. Her mother came into the room from some door behind me.\n\n\"Daniela, dear, there is no need to hug him to death.\"\n\nI heard the sigh in my ear a second before she moved away and held out her hand. I took it in mine and we shook on it. The Steri Strips held the damaged skin together above her eye and the lack of cover over them made me think that opening that much to air would help it heal faster. The black eyes had also faded, but sure left me thinking about how that would have looked a few days ago. It was possibly the only reminder of what had happened to her.\n\n\"You're hard to find; most of England is still looking for you.\"\n\nFeeling at a loss to say anything, I just shrugged my shoulders. Daniela pointed to a couch. She even held me by my arm until I sat down. She turned the chair she had been sitting on to face me.\n\n\"Well, I've always been here.\"\n\nDaniela laughed. \"Yes, and when Mom found that out she was so pissed. She'd spent thousands of dollars tracking you down and you actually live across the city from us.\"\n\n\"I didn't know you owned the country club.\"\n\n\"Oh, Mom doesn't want anyone to know. Uncle David runs it for her and she comes here to unwind; she plays golf. Do you play golf, Mr. Henderson? Or can I call you Martin, since we have French kissed already?\"\n\nI blushed.\n\nThe warning sounds of, \"Daniela,\" came from across the other side of the room. \n\nDaniela leaned around me to look at her mother. \"You're right, Mom, he is so cute.\" \n\nI didn't get a chance to blush this time, the voice of Melody Carlson cut right across the room. \"DANIELA LOUISE CARLSON, that's enough.\"\n\nThe feisty young lady in front of me raised her good eyebrow, leaned in and pretended to whisper. \"Oh, she's mad. Mom only calls me by that many names when I'm in trouble.\"\n\nThe shadow came first; I felt her presence soon after. \"I think it's time you should leave, Mr. Henderson. My daughter is obviously still concussed and requires her medication, not to mention putting across someone's knee.\"\n\nI tried oh so hard to hide my smile. Daniela noticed and winked at me. We stood, and I hugged her once again before pulling the pen drive from my pocket and handing it to her, telling her it was a gift from me. I wished this young lady a speedy recovery and left.\n\nThe same woman who collected me was still waiting outside. The trip home was both thoughtful and comical, if nothing else. I suppose I was too busy being a guy: to me, meeting Melody and Daniela Carlson at the country club and even the hug from Daniela was the end to all this. How stupid was I? \n\n*******\n\nMy meeting with Brendan took longer than even I had anticipated. Martin Brendan was one of my very first clients and he was looking to bring his company's image up to date. I flew out to see him a week after my meeting with the Carlson ladies. It was as I left his office to return to my hotel that I turned my cell back on; it rang almost immediately. The recorded message was from Toni asking me to call her back.\n\nToni didn't even bother with the formalities; she recognized my number on the screen of the office phone and picked up before the third ring.\n\n\"There's a woman here, claims to be a lawyer, and she won't leave without seeing you.\"\n\nMy first thoughts were concern for Toni; I dumped any other thoughts.\n\n\"Phone down to your father and have him come up and keep you company. Then phone the police and state that the woman in the office is refusing to leave despite you asking her to do so. Also, while you're at it, tell them your age and that you're alone in the office with this woman.\"\n\nThe pause was longer this time, even for Toni. \"Is this warranted?\"\n\nI didn't bother with yes, I went straight to, \"Hell yes.\" \n\nThe woman lawyer must have been listening to Toni's portion of the conversation, more so when she phoned down to her father, and had a change of heart. She stood while Toni still had the phone in her hand, dropped her card onto the table and walked out without saying a word.\n\nI even phoned back twice more that afternoon, and Toni started to get annoyed with me that she had to stop working to answer the damn phone. I got the message after that and left her alone. I still woke three times that night and checked my cell before going back to sleep.\n\nMy easy nature took a hit when I entered the main hall of the airport; I had mentally christened her the silent woman, since she hadn't said a word to me when she chauffeured me to the country club and back again. The damn woman was waiting for me at the barrier; she held up a sign with my name on it as I carried my overnight bag towards the exit of the airport. Feeling just a bit pissed, I walked up to her. I was about to speak when she lowered the sign and handed me an envelope. Instinctively I took it and then she turned and walked away. \n\nIt all had that air of waiting for someone to finish those last few eventful seconds of my life with the words, \"You've been served\". With the envelope in my hand, my only thought was that I have yet to hear this woman actually speak. I dropped the envelope into the trash on the way to collect my car. \n\n*******\n\nMy first stop was the office. Toni beat me there from school by twenty minutes and had the coffee pot on the go as I walked in. She couldn't add anything other than what she had told me on the phone. The lawyer's card hit the trash without even reading it. In my mind things were getting out of control. I left Toni working on her project and went home. Libby wasn't due back for another hour; she was at a friend's three houses down from us.\n\nI sat my folks down and told them what happened when I was in England. I didn't want to but I just couldn't risk them finding out from someone else first. Their questions wandered all over before they asked the one they had really wanted to ask. Why did I walk away?\n\nMy answers were always the same. I'm sure to someone on the outside looking in, my action could be seen as callous but I truly believed I could do no more for the young lady I had just pulled out of the water. Her pulse was strong; we had both placed her into the recovery position and the safety girl and I both knew that help would soon be on its way. I still had Libby to collect from her mother's and to get down to London in time for our return flight.",
        "Just then Libby came flying in through the back door. \"Who does the limo belong to?\"\n\nWe all looked at the tornado that came in through the back door, each of us as confused as the other, when the front door bell rang. Libby was still the only one of us standing and I suspect the light bulb moment I saw in her eyes made her move to the front of the house and answer the door before I could get there. \n\nMelody Carlson looked just as stunning in casual wear as she did in power suits. The smile was for Libby; she saved the daggers look for me. It took the hand on my shoulder to remind me I was staring.\n\nMom's voice was just above a whisper. \"She's nice, even though she hates you at the moment, and perhaps that's something you need to work on. She's a mother first, so stop assuming she's ever going to understand your reasoning in all this until you sit her down and explain yourself.\" The pause was only for Mom to take a breath. \"She's also our guest, so play nice, son.\" \n\nSo, I played nice. I invited her in, and once we entered Mom's domain, Mom took over. Once Melody had sat on the couch, Libby sat next to her. Libby's cute smile came back then, but faltered when Melody handed her the same envelope that I had tossed and asked her to give that to me, please.\n\nThis time I had no choice but to open it. Four tickets spilled out and my daughter caught the one that escaped my grasp. She made sure she read it before handing it back to me.\n\n\"It's the white water prelims, Dad.\"\n\nMs. Carlson preempted any questions. \"My daughter wanted to hand these to you personally but you were away and so she left them for me to give to you. I couldn't be at the airport for your arrival so I sent Mandy with them. She watched you drop them in the trash-can and rescued them.\"\n\nThat daggers look slotted right in with the end of her statement. Melody looked at my daughter before continuing. \n\n\"Daniela wants you all there; you will be my guests. She still has to do all the work, so she may not have much time to spend with any of us if she's going to make the qualifiers for the Olympic trials.\" \n\nThe questions gushed from my daughter: the when, and, of course, the how are we going to get there were answered easily by Melody Carlson. It felt like we now had a few days with a daughter on speed to contend with before we left for the event. She had been there an hour and none of us noticed until she stood and said that she needed to get going.\n\nWhile I watched Melody get into the car driven by the woman I now knew as Mandy, Libby rushed over to the house computer and spent the next hour doing her own research. When she found the rest of us sitting at the kitchen table talking amongst ourselves, she could recite Daniela Carlson's age, her canoe stats and every contest she had won since taking the sport seriously. She also proudly announced that she even knew how long it would take by commercial airline to get to this weekend's event.\n\nFor the next three days my folks and I learned the sporting history of Daniela Carlson via my own daughter. It left me realizing that the daughter had the same drive to succeed as her own mother: that was for sure. \n\n*******\n\nI had a stunned daughter on my hands when she walked onto the private jet. My only thought was that her information was wrong; this toy got to its destination before the commercial flight would have. Mandy collected us all from the airport, drove us to our hotel and it also seems my judgment of Mandy was short of a few details. It took my mom to spot it first. \n\nMom had watched Mandy ever since she picked us up, she told me later that she had noticed that Mandy watched lips and very rarely made eye contact until the person had stopped talking. Acting on a hunch she started to use sign language with Mandy; Mandy's face lit up right about then.\n\nThe rest of us walked to the car, stunned as Mandy and Mom talked together in their silent language. I guess we have our community college to thank for that. Mom always told me as I grew up that learning is the key to everything. In Mom's case, she took ASL or American Sign Language, classes. When she was growing up, one of the children on her block was deaf; she always regretted not getting to know him because she was simply too young and didn't know how.\n\nWith Dad doing all the hours he could at work and Mom pregnant with me, she decided that it wasn't too late to correct one mistake in her life. She took ASL classes. I'd seen her use it at the Mall, even at the garage once when she fueled up the car and the cashier was struggling with one of the customers wanting something.\n\nI asked her about it once; she told me that it was like a bike, it gets rusty sometimes, but something will always happen to remind her how to ride it. I love my mom.\n\nWe were left alone in our hotel that evening. In one of those moments, Dad took Libby for an after dinner walk to explore the hotel. It was then Mom turned to me with the same look I seemed to be getting a lot from women of late.\n\n\"Mandy said to thank you for saving her friend and to tell you that you're such a dumb ass.\" \n\nGreat, even the hired help had an opinion. \n\nWhen I looked at Mom, waiting for her to at least expand on that, she didn't. We managed to get Libby to bed a couple of hours later and my folks and I sat around talking generalities until bed time.\n\n*******\n\nBy ten the next morning we were fed, rested and on our way to the event. Mandy handed each of us a pass to hang around our necks. The letters 'V.I.P' claimed the top half and names of each of us were printed underneath. She got the car onto the private parking area and we walked over to one of the marquees positioned to the side of the course. A few tables and chairs were at one end and a huge screen was at the other, showing a feed of the white water course.\n\nI just stopped and stared at the huge picture that was to one side of the television screen. I knew the picture well; I had worked on it and handed it to Daniela in the form of a pen drive. Since I had some dealings with the newspaper company that printed it, I had phoned my contact there and asked if I could buy the copyright for the photo. When my curiosity over who Daniela Carlson was satisfied, my graphics mind went to work on the photo, and now I was looking at the end result.\n\nThinking back, I didn't get a chance to enlarge the picture on which I worked, Mandy came for me before I could project this very picture onto the big screen. Daniela was beautiful without any help from people like me; just seeing that picture as big as it was proved that all people like me could do was bring into the light what she's hidden in the shadows for so long. A truly lovely woman with a fierce will to succeed. \n\nMy friend at the paper and I bartered and came to an agreement. The original showed Daniela on one of the white water courses, and although it looked good, my graphic design mind and skills made it look ever so slightly better. Adding slightly more spray to strategic areas before I turned my attention to Daniela's features, the tricky part, I had set about heightening her cheekbones and squaring her jaw line ever so slightly to give her a more determined look.\n\nIt didn't look too bad on my computer screen but they had the picture seriously enlarged, placed on canvas and it looked true to life. My attention was on the picture, which was why I didn't notice her until she spoke.\n\nMelody's pride in her daughter burst forth when she said. \"When you left, she opened her laptop and downloaded what was on that pen drive you gave her. She burst into tears and showed me this. I have the original to compare it by and I keep coming back to this one. So far, I've had to have six of these done and my daughter even has this as the background on her business cards. Thank you for this.\"\n\nLooking at Melody Carlson was easy to do. I wondered if keeping the smile on her face was going to be just as easy.\n\n\"Does that mean I'm out of the doghouse for now?\"\n\nI got punched on the arm, my first ever physical contact with this woman, and I would carry the bruise for days to come.\n\nBeing the curious type, I just had to ask, \"Why does your daughter have business cards?\"\n\nThat smile came back and paused for a while before a touch of sadness replaced it.\n\n\"When Daniela decided that this was what she wanted, I also insisted that an education had to be attached to it. One of the best slalom instructors in this sport lives in England, Oxford in fact, so we enrolled her into the University and onto their business management course. It also seems that each of the students had to create and have printed their own business cards.\"\n\nA klaxon sounded and interrupted our conversation. The television screen showed water slowly being added and speeding up around the course, and within a few minutes, the course was a torrent of white water. A lone figure filled the door to the marquee. My daughter may have been a few feet from me but I still heard her gasp as she recognized the woman coming in.\n\nDaniela scanned the room and then smiled when she spotted everyone there. Libby came and stood close while Daniela hugged her mother before turning her attention once again on me and the munchkin in front of me. Both young ladies looked at each other and shared a smile before Daniela got down on one knee to be closer in height to my daughter. \n\n\"Hi, I guess you know who I am, so I'm going to throw a guess out there and say you're Libby.\"\n\nIt took me prodding Libby before she found her voice again. That's when the dam broke and those two set off on a conversation that even I had trouble keeping up with. It ended with a hug between them before Daniela stood and looked once again at me.\n\n\"I snuck out to check if you had arrived yet. I'm glad you came. Stay and watch and I promise I won't mess it up this time,\"\n\nWith that she leaned in, kissed my cheek and dashed out the door once again. With her wet suit on, but open, I didn't notice while she stood in front of us, but when she left and the top of her wet suit came in view, the words 'My Hero' were printed onto her suit in the space between her shoulder blades. It still took me looking at Melody Carlson before she answered that un-asked question on my lips. \n\n\"Don't go thinking it's hero worship; she originally just wanted to thank you and as publicly as possible without splashing your face over the papers. She talked to one of her sponsors and that's who put that on her wet suit. Daniela even talked them into possibly making it a line in their product, and I'm led to believe they are crunching the numbers on that as we speak.\"\n\nThe look of alarm was clear even to her; she smiled that all-knowing smile and then added to her statement,\n\n\"You have until after the Olympics to get used to the idea, both her wet suit sponsor and Daniela aren't going to change anything until then. Plus, they promised to look closer at the idea if she wins a medal. You may have to get used to seeing some of the top athletes wear that across their suits as well.\" \n\nShe heard me sigh; she even watched me roll my eyes before she smiled again. That's when she placed her arm into mine and turned me towards the table at the far end of the marquee for a coffee.\n\n\"Oh stop it! In fact, I will even add, get used to it. She knows your name now, so there's no escape and, judging by the conversation she had with Libby, I get the feeling those two are going to be really tight from now on.\"\n\nThat's when I admitted I phased out about a third of the way through our combined daughters' conversation. She laughed and promised to add that small titbit of information into a conversation she would have with her own daughter really soon. I admit, I spent the next however long enjoying my time with Melody Carlson, right up until I heard Libby give out a scream and tell us that Daniela was next down the course. That's when we joined my folks over by the big screen.\n\nThe commentator was giving everyone out there some background on Daniela. Whoever was with him suddenly talked over the top of him. \"Look at her back; you have got to see this.\" \n\nJust then Daniela was given the green light, the programs director must have been listening to both the commentators because he purposely kept the same camera on her as she passed the camera's position, the words 'My Hero' showed just above her own life-preserver.\n\nWhen I looked at Melody she had that same smile. \"Oh, didn't I tell you. The same sponsor had her life-preserver adapted slightly so it doesn't cover it up.\"\n\nShe feigned innocence, but I didn't buy it for one second. The feeling of a hand going into mine caused me to look down at my daughter. She had that same smile while her eyes showed genuine pride. \n\nI gave her a hug and heard a muffled, \"You're my hero as well, Daddy.\"\n\nEvery time I didn't believe I could love my Libby anymore than I did, she went and did something like that and proved me wrong. We all continued to watch Daniela's journey down the rapids as she dug her paddle into the white foaming water so she could claw her canoe back the way she had come to attack the pole dangling just above the water. \n\nEvery now and then Libby would comment about her position on the course or how many poles were left, her eye was obviously on the time as well because as Daniela passed the finish line my daughter let out such a screech that we all looked towards her, shocked. When she realized what she had done, my daughter did look a bit shamefaced.\n\n\"Sorry Daddy, but she has just set a record for this course, and on her first attempt as well.\"\n\nThe look of pride didn't go amiss when I cast a glance at Melody either. \n\n\"And you know this how?\" was my only question.\n\nThe pride in my daughter just glowed right on back at me, when she explained that while she was doing her own research on Daniela, she did manage to dig up the White Water Centre's own records on the course. \n\nI think I had just found Daniela Carlson's number one fan.\n\n*******\n\nTwo more canoeists made an attempt at keeping up with Daniela that morning before one fell foul of missing a pole and incurred a penalty, the other taking a swipe at the manmade obstacle before turning over her canoe. The smarter ones down the running order ran their own race against the clock rather than Daniela, after that.\n\nSome light snacks found their way onto the tables at the other end of the marquee. Ordering Libby to eat was unusual for us, but since her attention for most of that morning was on the huge screen, it was easy for us all to understand why. \n\nDaniela made another brief appearance just as we all sat to eat; she grabbed a plate and grabbed nibbles and an orange juice from the main table before joining my daughter at her table. Both went into a huddle before Libby let out a shriek and leapt onto Daniela, wrapping her arms around her and nodding her head into Daniela's neck. It was only when she had calmed my daughter that both came to me.\n\n\"My coach says I have to focus on this event; even with all of you here I have to focus. That being said, with your permission I want to take Libby out on the warm up pond for a paddle around when the event is over.\"\n\nIt's hard to deny two young ladies with such a plea in their eyes; I just got a nod of my head out before they both did a happy dance. Daniela then quickly looked at her watch, gasped and then said she had to leave, we all got a quick hug and she practically ran out of the marquee 'My Hero' still sitting proud across her shoulders. A minute or so later, the klaxon sounded once again and Libby took up her position in front of the big screen along with my folks. \n\nMelody came and handed me a bottle of water before sitting next to me, looking a little lost. Perhaps I was imagining it, so I asked. \"If you don't have other plans, would you like to join my family and me at dinner tonight?\" \n\nIt was fun watching the shock and then decision making part of her brain take over her features that afternoon. \n\nThis time I added a smile when I said. \"Or does your skin still crawl around me?\"\n\nShe went the cutest shade of pink right about then. \n\n\"As a mother I still can't understand your thought process when you walked away from my daughter, but so many people tell me I'm being an over-protective mother.\" She seemed to withdraw into herself for a moment and then nodded her head before looking at me and saying. \"Thank you, I will join you for dinner.\"\n\nWe talked some more about that day as we both cast glances at the screen and who was on the course. I understood her anger; as a father I would more than likely have felt the same, but Daniela was alive and breathing when I left to collect my own daughter. \n\nMelody again challenged my own thought process when she said. \"As a parent you must understand how I felt.\" \n\nI couldn't deny her statement, and she seemed to relish the victory she seemed to feel from it. That was when I turned the whole conversation on its head when I asked her what would have happened if I hadn't been there? Melody seemed to think about that, and then wince as her eyes filled up before her hand dropped into her bag for a tissue. \n\nMelody Carlson actually chilled out after that, and we joined the rest of my family in front of the screen again when Daniela did another run at the course. The clock said she was two tenths of a second off the new course record. Since she was the one that broke it in the first place, I don't think she was too worried about it.\n\nWhen the klaxon sounded once again to announce the end of the day's events, word came down that Daniela was staying with the other competitors that night. I can only assume her coach must have meant it when he told her to stay focused, and being with other canoeists for the night would do just that. \n\nMandy came in a few minutes later and talked to Melody, both sets of hands frantically signing for a moment before she turned to me.\n\n\"My daughter has been given an hour before she has to join the rest of the competitors; she sent Mandy for Libby, she needs to get kitted out before she can join her at the warm up pond.\"\n\nIt was fun to watch Libby practically drag Mandy out of the Marquee, although she gave Mandy her hand back when she realized that she didn't know where she was going and had to let Mandy lead. Melody made a call, and when she put her cell away we followed her and for the next thirty minutes we watched both Daniela and Libby in a two person canoe going around the warm up pool; from the safety of some large room in the main building with very plush seats that overlooked the pool.\n\n*******\n\nWe had been back at the hotel for an hour. I let Mom, Dad and Libby get showered and changed while taking myself out of the way and for a walk around the grounds. The hotel pool was deserted but for a lone Mom holding on to a baby while introducing her to water. I watched with interest and a smile, my Mom had done the same with Libby all those years ago while Cheryl was off on one of those 'must have' courses.\n\n\"Typical guy, always getting in the way.\"\n\nHer voice startled me out of my revelry; Melody was sitting in a chair at the edge of the pool, and true to her opinion of us guys, I had stopped to watch the activities of the young mother and her child while blocking her own view. She pointed to the chair next to her and smiled.\n\n\"Sit, it's the only way to get you out of the way.\" Her smile did let me know her comment was in humor.\n\nWe watched the young mother for a few minutes before either of us said anything. Finally the young woman held her daughter close to her chest and carefully went up the steps to get out of the pool.\n\n\"Daniela was seven months old when I did that to her; she's never been far away from water since then.\"\n\nI told Melody that I had to get Mom to do that for Libby. I was terrified I would drop her. Melody laughed; it was so cute hearing that. She asked why her own mother hadn't introduced our daughter to water, and I paused for a moment. ",
        "The young mother exited the pool and wrapped her child in a towel before wrapping herself in one. That pause was still with us as we watched the mother lay her child down and gather her things before scooping her bundle back into her arms and heading towards us and the hotel complex behind. We both waved at the young mother and thanked her for the memory it inspired in us both; she blushed at the compliment, smiled and continued to carry her daughter back into the hotel.\n\nA hand held mine and instinctively I looked down at it and then at Melody, the smile and questioning look was soon put into words. \"You didn't answer the question.\"\n\nI once again looked out at the pool and recounted my time with Cheryl. The way she burst into tears when she found out she was pregnant and it was, \"All your fault\". How she returned to work as soon as the paint was dry in my home office, and her excuses that she had three months of catching up to do because she was ordered to rest when she had a bleed and her doctor told her the last three months were bed rest.\n\nFor some unknown reason, I didn't stop there. The rest of our life together just followed, including the evening I was served and the evening of realization that I truly didn't know the woman I shared my heart and a bed with for all those years.\n\nMelody was sitting up and watching me by the time I had finished, being so deep in this conversation I couldn't with any accuracy tell you when she had moved. Although her face was as expressionless as always, I did see what I thought was pain in her eyes. My smiling and the shrugging of my shoulders may have helped some, because after all, I still held onto the greatest prize of all from my marriage, my wonderful daughter Libby. \n\nIt was Melody that suggested we adjourn and meet again at dinner. I agreed and walked her to the elevators. She looked confused when I didn't enter, so I explained that I was going to the hotel shop, which was my original destination before the diversion to the hotel's pool. Even as I walked around the shop my mind still couldn't come up with a reason why I had wandered into the pool area in the first place.\n\n*******\n\nDinner was actually fun. Melody took centre stage and kept us all amused, Libby asked some questions about Daniela growing up, as well as her interest in canoeing. She answered them \u2014 I thought honestly \u2014 while my folks just sat and watched the interaction. My daughter holding onto Melody's hand wasn't missed by anyone, either. We had our coffees by the bar so the hotel staff could use the table again.\n\nWhen Libby tried to disguise a yawn, we all knew it was bedtime for that young lady. My folks took her with them and told Melody and I to sit and finish our drinks. Mom's smirk was ignored, but Dad's wink warmed my cheeks.\n\nShe waited until they disappeared around the corner before saying. \"Are your folks trying to fix us up?\"\n\nThe nod of my head came first, the blush rapidly followed, interspersed, of course, with Melody giggling like a ten-year-old. Right about then would have been a good time for the ground to swallow me up. When I again looked at the woman across from me, she had a very thoughtful look about her.\n\n\"Do you even know how old I am?\"\n\nI wasn't stupid; my momma taught me well. \"You're a woman, that means your twenty-one, plus taxes.\"\n\nThe stunned look was real cute on her, her smile came next and for the first time since we had met I heard her really laugh.\n\n\"My God, I'm going to have to watch myself around you, aren't I? That was smooth, real smooth.\"\n\nWhat came next from Melody Carlson was a brief history of her life, both married and alone with Daniela. Her pride shone through as her achievements within the cosmetics industry grew, but her eyes shone the brightest as she shared some of her life with Daniela by her side. It was when she got the phone call from her office about Daniela's accident that the sadness returned, but at least she didn't look on me as the bad guy anymore.\n\n\"Your turn.\" \n\nHer statement tore through my thoughts. I felt it only fair, so I spoke of Cheryl and her ambition. The long evenings alone waiting for her to come home, even the graphic design evening classes, and business management. Also the day she proudly rushed into the house waving the sheet of paper that was to become the match that lit the fuse, it was the confirmation of her tenure.\n\nCheryl's hours away from me seemed to increase, and looking back on it all, the slow resentment that I didn't hold the type of job befitting a professor's husband. The week away to celebrate her tenure and two months later, the screaming banshee that was my wife telling me she was pregnant and it was all my fault. From then on, on the rare occasions we did make love, she insisted that I wear a condom. \n\nLooking back at those incidents as I explained them to Melody, those subtle moves to detach herself from our marriage came more clearly into focus. That fateful evening when I was served choked me up, even after all this time. It was the tightness in my hand that made me realize that somewhere in the drifting thoughts of my life, Melody had once again placed her hand in mine.\n\n\"Fuck, you're just as damaged as I was.\" With that she stood, her hand still in mine. \"Get up and follow me.\"\n\nWe made it to the elevator before I had collected my thoughts enough to ask where we were going.\n\nHer answer was just as swift, almost as if she had anticipated my question. \"Well my mind's set, so let's just say that the rest of this evening is about choices.\"\n\nHer grip on my hand was such that I could have retrieved it, but the warmth of her palm gave off a feeling that I wouldn't, even in the middle of an earthquake. We made it to Melody's room before my mind realized where we were headed. We were inside her room before she let go of my hand and turned to look at me.\n\nShe sucked in oxygen, and as she did her face did something that made me pay attention, she blushed. \"Okay, a quick and unrehearsed speech time. I've not had sex with anything but my hands and plastic boyfriend for over two years now. In the time I've known you, you have wrung every emotion I could ever have out of me. You've driven me to the point that I'm saying this once, and once only, before my courage can't hold up my ego any longer.\"\n\nAlthough I had seen this multi-tasking thing many times, I truly believed the Melody Carlson had perfected it into a fine art. Her eyes held me rooted to my spot in front of her as her fingers deftly unzipped as well as popped buttons, and as that last word left her lips Melody Carlson's final piece of clothing slipped down her legs and rested amongst the small bundle already there. I eventually looked up to meet her eyes, but it sure took me awhile.\n\n\"They say that what's under your nose is the thing you have been looking for all that time. You've told me what that bitch of an ex did to you; I'm not her. You can tell me now that I've made a huge mistake and leave. Or take me to bed and prove you're the man I've been looking for.\" \n\nMelody's whole body shook before her finger pointed to the bed. \"To reciprocate, I'm going to show you I'm the woman you've needed in your life.\"\n\nAt first her arms dropped to her sides, the smile grew in her when she sees the total look of shock on my face. I may have been in shock, but that didn't make me dead, Melody was NAKED and standing in front of me.\n\nThe three paces that divided us soon became the distance of an outstretched hand; the one Melody had placed on my chest. \"Only a naked Martin gets to come any closer.\"\n\nMy hands dealt with my own shirt buttons while Melody pulled my belt loose and with real deft hands my pants and underwear hit the floor almost a soon as my shirt.\n\nMelody's eyes never left my growing erection, her hand wrapped itself around it and a sigh left her lips. \"It's been awhile, but that's worth the wait.\"\n\nHer eyes lifted and locked on mine. \"It's beautiful.\" \n\nI held Melody in my arms and we kissed, her own arms went around my neck and held me as our kiss built and fed our hunger for each other. Her fingers gently moved the few inches up and down the distance between the base of my skull and shoulders. We had kissed many times between getting naked, but this. This was something she had held back, until now. \n\nThis was from her soul to her lips, and now connected to me, my own soul felt the pure honesty of her kiss and reciprocated as all males of the species do, my erection just got a little harder, the slight movement of her lips on mine also told me that she had just smiled. Melody's body trembled when my own hands enjoyed the small of her back and then both hands found a home on the cheeks of her ass.\n\nShe stopped kissing me so she could sigh, and as my hands held tight to her ass she could clearly feel my hard-on pressed against her. My own body gently swayed from side to side, causing a rubbing motion across her pubic bone. In retaliation Melody moved her leg to straddle one of mine and her hot and moist pussy slowly moved a few inches up and down my leg.\n\nShe smiled, her face glowed and her eyes seemed to try to posses me; she didn't need to try, she already did own me and if my body could have placed anymore blood into my erection, I'm sure it would have. Grabbing her ass cheeks and pulling her closer was perhaps the only way I could prove it, and her smile just got a little bigger.\n\nHer hand on my cheek broke my growing carnal thoughts. \"We need a bed, because I get the feeling you want to go exploring. It just so happens there is one behind us; want to try it out?\" \n\nThat did mean, of course, that I had to let Melody go, not something I was keen on, to be honest. I wasn't sure if it was intentional, but when she bent down to pull the covers off the bed and left me with the sight of that exquisite ass and oh so beautiful pussy. Her lips came into view as she bent down further and all I wanted to do was bury myself inside her and never come out.\n\n\"Just don't drool on the rug, will yuh?\" She giggled. \"I can feel you looking at me and it's a feeling I could get used to.\"\n\nMy hands held her hips then, and for just the briefest of seconds her body stiffened as the tip of my cock connected with the moistness of her pussy lips. All poor Melody could do was fall forward onto the bed, I followed her and bit her ass.\n\n\"Ouch, you fucking bastard, that...\"\n\nShe never did finish her statement. My tongue running up and down her pussy lips may have had something to do with that part, though. The sigh replaced the rant she must have been going for; a moan soon followed it as I went to work on her pussy lips with my tongue and lips. She sure tasted good, and I made sure that I went to that well often that night.\n\nI think her orgasm caught us both by surprise, my hands still holding her hips were the only thing keeping her on her knees, her body slumped forward when I eased my hold on her and let her body take her. The teeth marks on her ass cheek had reddened now and I did feel guilty, not even realizing that I had bitten her so hard. Kissing it better made her jump and cut the remnants of her orgasm short.\n\nMelody's hand rubbed the spot; her hand covered the mark I had left.\n\n\"I know I have a cute butt, doesn't mean you can take chunks out of it. You're just messing with the contours.\" She giggled just then. \"And remember, payback is a bitch, so you just watch yourself, mister.\" \n\nMelody spun around, placing herself on her back and looking up at me from the bed, her arms came out, and as I looked down at her, with that cutest smile ever, my heart just missed a beat. I lay across her, taking care not to place too much of my weight over her upper body and kissed her. She wrapped her fingers into my hair and gently held me as we kissed. When I came up for air and looked deep into those lidded eyes of hers, I felt like a school kid again, reciting one of those old teases.\n\n'I love Melody Carlson,' and when my own hand gently touched her cheek and felt its warmth, her eyes and my heart told me she was reciting that same school tease.\n\nAs I kissed my way down her neck and her head turned upwards, gasping as she did, a slow moan had escaped her lips by the time I got to her shoulders. Melody placed her hand on the back of my head, as my own hands held one, then the other of her breasts. When my mouth connected to her nipple her hand was still with me, my other hand cupping her breast. Even on her back it still felt so full, and as my thumb traveled at will over her nipple, it showed its own appreciation. \n\nMy lips sucked her nipple once again into my mouth as far as it would go, then my tongue would do a full circle on her ever growing crinkled flesh, before slowly letting it out of my mouth. The gentle moans of appreciation sure let me know where her thoughts were, when her hand relaxed its position on the back of my head and I looked up at her, other than biting her bottom lip occasionally, she sure was smiling a lot. \n\nI loved the taste of her, her smell was intoxicating, and as I kissed my way down her body again, the way her stomach would clench. The flush and sheen that coated her skin, the ragged breathing betrayed her, and every time her own orgasm steadily built once again within her body. Yes I loved Melody Carlson, and I just wanted to spend a lifetime watching her body freely do all these things.\n\nWhen my lips touched her mound, her heels instinctively dug into the bed and I had to grab her hips. Another slow moan escaped before she said. \"Oh fuck, I'm on my second orgasm and he's not even stuck it in me yet. Were the fuck have you been these last two years?\"\n\nIt was really hard trying not to laugh at her comment with my tongue circling her clit. Her other leg moved further apart and that soaked pussy just stared right back at me. If I wasn't before, that moment sealed my fate, I would do anything for her, and I was almost sure she knew it. From that moment on, my life would be centered on looking at that pussy, and shoving my tongue, fingers and cock into it, and as many times as her body would allow.\n\nMelody Carlson was a beautiful woman; the Gods gave her that body and I would spend a lifetime trying to map it out and from every angle possible. Her ex was an ass; how the hell could he walk away from all that? Her pussy was in full view, from the trimmed pubic patch of hair and onto her outer lips; they were darker than the rest of her. A steady trickle of liquid slowly moved from her pussy and around her anus before disappearing between the crack of her ass. Melody's wide open legs cleared the view of her inner pink lips.\n\nSensing that I had stopped, she pulled her elbows to her and lifted herself onto them. When I managed the almost impossible and tore my gaze away from her pussy to look at her, I felt my cheeks burn as she smiled at me. \n\n\"I call it a pussy, I can loan it out to you anytime you want, but you have to realize that I have to carry it around, for safe keeping, you understand.\"\n\nShaking my head may have confused her a little. \"That's not a pussy. Well, it is, but I would have to add 'a thing of beauty' to your statement as well.\"\n\nHer arms moved and Melody rested once again on the bed. \"You can play with it if you want. I'll just lie here, read a book, perhaps.\"\n\nShe never did get any further with the sarcasm bit. \n\nHer erotic smell had long ago nailed itself to my brain and in turn, my eyes just stared for just a moment longer before my fingers eased her lips open. The slow moan that followed proved to me she would be having trouble reading that book. My tongue replaced my fingers. Melody's moan became more guttural as her whole body tensed and then relaxed to the sound of a deep sigh leaving her lips. While the tip on my tongue explored, her hips would grind down hard onto my face.\n\n\"Don't you stop. Don't you fucking dare stop.\"\n\nA hand held my head in place while Melody moved her hips and both my tongue and my senses feasted on her sopping pussy. In an effort to drain every sensation from our joining, Melody ground her hips hard into my face. The heat forewarned me, her fingers curled in my hair and pulled me tighter to her and then her body went ever so stiff. Her body then became a rag doll as she bucked and screamed through her orgasm.\n\nMy tongue lapped at her pussy, my senses telling me they wanted more of this woman. Finally Melody let go of my hair and gently pushed my head, she never saw me smile, but she watched as I lifted my body over hers. Melody's hand held onto my erection and we kissed as I slid into her, the smile was nailed to her lips when we finished kissing. I felt her legs move and her ankles lock behind me.\n\nWe made love then; we knew we would. I was lost to this woman, and as another kiss was broken and my seed emptied into her, Melody used a finger to brush away a hair from the side of my face. Her eyes showed me what I was showing her, I loved Melody Carlson and she loved me right back.\n\nI held onto her as that tell-tale breathing pattern stole her from me, I must have joined her minutes later. It was that wet, all too real dream woke me to the love of my life bringing my erection back to life, before she straddled my body and lowered herself down on me. I swapped my orgasm for her orgasm this time and was again rewarded with that smile that fueled my heart. \n\nIt was still dark when I woke to the sounds of her sleeping, she woke to the feeling of my tongue and fingers buried in her pussy. She did manage to maneuver out from underneath with the whispered promise of not running away. When she came back from the bathroom, she straddled my face and the number sixty-nine took on a whole new mathematical meaning.\n\nThe sun came up as we both admitted that even our bodies couldn't do this anymore without the aid of sleep and breakfast, although we both couldn't figure out in what order. \n\n*******\n\nOur relationship suffered the woes of one of us being more successful than the other. Melody still had an empire to run and I still had a daughter to bring up and a design company to run. We talked daily when she wasn't there, and although I never admitted it to anyone, I was miserable when she wasn't there.\n\nWe both knew our relationship wouldn't make any groundbreaking changes until one of us (me it seems) admitted to the other our love, and not just the sweaty between the sheets kind. Still fun, but doesn't count. In between all this, Daniela would swoop in and drag my daughter away to the local river courses and lakes. Hell, when they weren't paddling over the water they were swimming at the country club; both my parents and I noticed the change in upper body strength developing in Libby over the months.\n\nOne thing that did become established was the weekends off, I stopped work on a Friday evening and Melody would jet in from whatever part of the country she was, I would pick her up at the airport and she would talk shop right up until we pulled up at my folk's house. Work was a distance memory after that. \n\nIn total, it took me six months to come to my senses, I spoke to my folks and Libby and talked about making my relationship with Melody more serious, even going so far as to check out rings. \n\nIt was only going to be Melody this weekend; Daniela was at some seminar thing hosted by our country's Olympic Committee. It seemed the governing body had changed a couple of rules relating to Daniela's sport so she went to get a better handle on not only the wording, but meaning. The Governing body even sent a couple of people to attend and liaise with our own Committee.\n\nThursday afternoon got me answering the phone to Melody; it was unusual since she usually phoned in the evening. The call consisted of her telling me that she couldn't make this weekend, I never got to reply, since the phone went dead after that. It was Libby that told me Daniela had phoned my daughter on Sunday from the country club. On the face of it, nothing to bother myself about, and yet the way Melody informed me of her change of plan and no explanation before she put the phone down on me, caused me to maybe take a step back.",
        "The next weekend it all came out. It seems that Daniela was 'smitten' with one of the Governing Body's representatives. One thing led to another and both ended up in his room for the evening and most of the night. The glare Melody gave Daniela throughout this confession gave me the impression that there was more than she was willing to admit to until Libby was in bed.\n\nAs we all sat around the kitchen table later that evening the real truth spilled out, Daniela had only just turned twenty-one, he was forty-five and right up until he got a call from his wife in the early hours of the morning, she believed he was single. With the train wreck approaching, Daniela got the hell out of his room and tried to keep as far away from him as possible for the next couple of days.\n\nIt seems his ego was one of \"I drop the women I bed, not the other way around.\" Melody flew in, pulled Daniela out of there and holed up at the country club until both Governing body people went back home. Daniela went back to the country club that evening and I got showered with love from Melody, not to mention make up for missed sex.\n\nAs I sat at my desk on Monday I replayed in my mind what both Daniela and Melody had told me, it left me with a few questions to which I didn't think I would like the answers. I picked up the phone and asked to talk to my newspaper friend. Turning up at his office the next day also got me a few pictures and some unsubstantiated facts about Mr. Ernst Brunner.\n\nHe was a rising star within the ranks of the Olympic Governing Body, rumor had him on the committee within the next five years and untouchable if past history was anything to go by. My friend smelled a story judging by the information and follow up questions I was asking, since I had nothing but a bad feeling and concern for the young lady that I loved like a daughter. My friend was happy with the drink at the bar around the corner from the newspaper and a promise from me that if anything turned into a story, he would be the first to hear about it. \n\n*******\n\nThe next few months were anything but peaceful, the build up to the Games had commenced, although Melody and I talked about what might happen we couldn't plan for much. Once the Games started Daniela would be isolated from us and with her team down at the course. The only advantage we had was that all the water events that Daniela had were on a site built two years before the Olympics over seventy miles away from the main Olympic complex. \n\nDaniela wanted us all there, even for the opening ceremony. We wanted to keep Libby out of the loop on the sordid details, but doing that would mean lying to her and none of us wanted that, so the day before Daniela was due to leave for the meet up with the team she sat Libby down at the kitchen table and told her everything, or rather as much as a young lady her age could grasp.\n\nThe all night activities were kept off the table. Libby didn't need them since she was already berating Daniela for even kissing a man older than her dad. Daniela, for her part, took it all on the chin, agreed with her sister and told her that it might well be a decision that would haunt her for some years to come. They cried and hugged after an hour, and I had both my girls back from then on. \n\nWe stayed for the opening ceremony and then moved to the white water centre. Melody and her people had been busy, and she had no doubt paid well over the odds on a rented house two miles from the centre. My parents and Libby stayed at the house whilst Melody and I were in the hotel a block away. My folks took the opportunity to see the sights and shop; they had to drag Libby out one afternoon since all she wanted to do was stay at the house and watch the training and then the start of the white water events.\n\nMelody and I watched everything and since we both knew what Mr. Brunner looked like, we watched out for him as well. It was just as we both started to relax and feel that we could finally just enjoy and watch the events and not have to worry anymore, that we got that fateful phone call.\n\n*******\n\nDaniela was distraught, Mr. Ernst Brunner, it seems, had placed himself amongst the Olympic representative for this sites events and although they fidgeted, he held firm, and judging by the look on Melody's face she was set to explode, as well. The Olympic rep, or rather Mr. Brunner, again stated the rules verbatim, the committee looked on Daniela's jacket as advertising and for the Olympics, only those who had paid to advertize could do so, and since Daniela's wetsuit wasn't an officially sanctioned one, then she either changed it for another one or she would be in breach.\n\nWe argued that she had this same jacket on through our countries qualification events and all the rounds so far and no one had made the point they just had. His colleagues looked at him for direction and all he did was sidestep her statement with a shrug of his shoulders, it gave us an inkling into how this conversation was going to end, as well. Our country's governing body had backed the Olympic committee; they had no choice they said. It still left Melody propping up Daniela, who was in tears, and this confrontation proceeding along the lines of destroying one woman's hopes. \n\nIt seems 'My Hero' was advertising. Damned if I could figure that one, but when you have some stuffed shirt so called 'know it all' with what seemed like his own agenda telling you so, then it seems you're not allowed to argue the point. Daniela looked on that jacket and it's meaning as her lucky charm, she just hadn't stopped winning since she had it and now, with the final race for the medals in two days, we had Daniela stripped of her lucky charm. \n\nThe Olympic people with Mr. Ernst Brunner left, I think, to him, his job done. Melody held onto her daughter and I looked out the window of her apartment waiting for divine inspiration to slap me across the back of the head. When nothing happened I went for a walk, not a clue in what direction or even how far, but I was most certainly outside a park. The sun had already started to head towards ending the day, there were still a few people with camera's in hand hoping to spot someone famous.\n\nMy wandering seemed to take me towards a cheerful group in the park across the road. A group of guys were using some of the equipment that was built into the park, some did press-ups amongst themselves while others lifted their body weight on a bar, hell I was impressed and was exhausted just watching them. There were young ladies standing, watching and occasionally giggling. \n\nThe guys just continued to show off their muscles, even taking vests off and showing bronzed bodies and tattoos that graced their arms and torsos, as well. Nothing like feeling just a little inferior when you have a specimen like that standing next to you. They were all happy to pose for photos with the ladies, and that's when that slap across the back of the head finally got me. \n\nI quickly called Melody and told her that I had a solution, and to let Daniela know I had this covered. I closed my phone before the barrage of questions started. At first, talking to the beefcakes got me a bunch of guys looking very suspiciously at me. I guess they don't often get men asking them about where they got their tattoos done. I felt incredibly lucky that most of these guys were locals.\n\nThe taxi driver became my best buddy when I handed him twice the already inflated cab fare and asked him to wait right next to the tattoo shop. The person I needed to talk to was reluctant at first, but as I explained in more detail, he eventually picked up his cell and talked to someone else. A few nods and finishing with \"I'll tell him.\" He put his cell down and told me to wait by my cab.\n\nMy taxi driver smiled even more when I fed his pocket again. It took another hour before she turned up, I took one look and seriously thought I had got this all wrong. She was dressed all in black, her nose was pierced and I couldn't count the number of piercings her ears had. I'd never seen a Goth up close before and looking at this five foot Pixie with the attitude sure made me realize why. \n\n\"You Henderson?\"\n\nOther than nod my head, I was at a loss, my own fault I suppose for not thinking all this through more thoroughly.\n\n\"Well?\" came her next response. \n\nThat's when I shook my head and pulled my cell out and showed her the picture I had, she glanced, and I swear that's all she did.\n\n\"Five hundred, four now, and the rest when I'm done.\"\n\nI thought my wits were returning and said. \"You haven't even looked long enough at the picture, how can I know you're as good as they say?\"\n\nShe sighed, and started to speak to me like I was the village idiot here.\n\n\"My cousin does canoeing; he was using the complex before it became the Olympic venue. I talked to him and he told me the background to all this. Your Daniela Carlson's lucky charm, rumor in the village is that the Olympic people have told Daniela to surrender her wet suit or be taken out of the finals.\"\n\nShe smiled, and the perfect white teeth and shinning eyes proved something to me; she knew she had me over a barrel.\n\n\"And that's where I come in. I have what you want and can get the job done, so are we going to get this done or am I going home to watch the event on TV?\" \n\nI opened the taxi door for her, she placed her cosmetics box on her lap and held it tight to her body. Her hand came out and I handed her four hundred; she didn't even count it, just placed it into her pocket and looked directly in front of her.\n\nBoth girls were fit to burst when I got back; the only thing stopping Melody from using her charms was the little pixie standing next to me. I thought I would start with the dramatic and be ready to duck if things started flying my way.\n\n\"You have to give up your jacket; I'm not letting you come all this way and have the Olympic people steal it from you right at the end.\" \n\nBoth girls opened their mouths to talk, I held up my hand to stop them.\n\n\"I think you should let this little lady here tattoo it to your back.\"\n\nMy little Gothic friend moved to a table and placed her cosmetics box onto it. Daniela stood there totally stunned while Melody sure made up for her daughter inability to speak. She started very low key for her, the \"are you out of you fucking mind\" was a given considering what I had just asked. It was then that Daniela grabbed her mothers arm.\n\n\"He's up to something; he's got that smirk on his face again, the one that makes you apologize when you know you got it all wrong.\" \n\nPulling the handbrake up mid-rant wasn't easy for Melody, but she listened to her daughter and watched me a little closer. Her eyes narrowed when she also saw me smirking.\n\n\"Okay talk, I also have a feeling I'm going to spend tonight making up for this aren't I?\"\n\nI nodded and Daniela giggled. \"Told you so, he's my hero.\"\n\nLeaving my Gothic friend to unpack, I told both my girls about my walk in the park and that light bulb moment, tracking my friend down took a while, but word amongst the muscle men at the park was that she was the best in the business around there. It was also then that Daniela took a real long look at Lucy and her question to my new friend sealed the deal.\n\n\"You're not a tattooist are you?\"\n\n\"Nope, I work with Henna. I prefer to call myself a body artist.\"\n\nDaniela went over to talk to Lucy, while Melody walked up to me and pushed me in the chest, I stumbled backwards and fell onto the couch behind me, she was on my lap before the second bounce. \n\n\"I hate you when you do this to me; you know that, don't you?\"\n\nShe then proceeded to nibble on my ear and I shuddered, Melody knew my weaknesses and I was going to suffer through her apology; that was for sure. I held my love close to me and explained as best I could while she worked her magic on me. We couldn't stop the Olympic people doing what they were doing, but Daniela had come too far for her to walk away. Rumor was that the bookies had all but closed the books on Daniela taking the gold, and short of doing something really stupid she knew it as well.\n\nThen the Olympic people took away her jacket, advertising my ass, but they were the governing body and this close to the race taking on city hall wasn't wise and bad for Daniela's concentration. With a Henna 'My Hero' on her back her mental state would ease, Henna only took a couple of hours to sink into the skin and lasted the best part of a week to ten days, and above all, no drugs involved.\n\nBy the time I had finished and got a deposit on the night via a kiss from Melody, I felt truly blessed that I was with those girls, and then I looked over at what was happening across the room.\n\n\"Whoa there! At least let me get out of the room before you take your clothes off.\"\n\nMelody looked and giggled as Daniela walked over to Lucy with her T-shirt and bra over her arm. Lucy looked her up and down and wolf whistled before pointing to the towel on the floor at her feet.\n\n\"Nice tits girl; if I ever finish with my girlfriend I may have to look you up.\"\n\n\"Enough, I'm out of here.\" I held my hands over my ears and headed for the door, to the muffled sound of three women laughing.\n\n*******\n\nWhen I was asked to come back, Daniela was still face down on the floor of her room; she watched me look around for her mom and Lucy.\n\n\"Mom's taken Lucy home, I wanted to talk to you alone and I promise not to get up. I'm under orders anyway, for the next hour that is, after that, how you answer my questions will dictate my next move.\"\n\nI sat on the floor next to her to make life easier for her; she smiled when she realized what I was doing.\n\n\"You just can't help yourself can you? You've been looking after me for almost a year now. At first it freaked mom out, but now she just knows that it's your nature.\"\n\nHer smile got just a little brighter and her eyes held that mischief within them.\n\n\"She loves you; I know you are made for her, as well, and all three of us are waiting for you to do something about it.\"\n\nDaniela looked at my hand, hers moved to hold mine.\n\n\"Ask her, I know she's just waiting for you to do that, so put her out of her misery.\"\n\nHer features became just a little more serious and for just a second, coldness crept down my spine.\n\n\"You've saved my life twice, Martin, Marry Mom so that Libby can be my real sister. Because if you save my life one more time, I may have to marry you myself.\"\n\nThis time I laughed, then something about her made me stop. Daniela smiled one more time as her finger pointed towards her back, the Henna looked good, I understood it would look even better when we peeled the ink off to expose the true tattoo.\n\n\"You got me this, Martin, and I'm going to use it to stick my manicured middle finger up at the Olympic people. That's your gift from me and Libby, your gift to us is to make us sisters and I mean officially sisters, because I want the whole nine yards of adoption, as well.\"\n\nA tear trickled down her cheek and I choked. I hate seeing people in pain, and when it's one of my girls, it's even worse. It had only been the last couple of months that the term 'my girls' just felt so right; feeling that warm fuzzy moment reminded me why. When it became just Libby and me, my instinct was to shut down any and all emotions and concentrate on keeping my daughter sane.\n\nThen came Daniela, and hot on her heels came Melody and I was now being forced, in this very room with a half naked woman on the floor, to admit to those very feelings. Daniela recognized the smile and held my hand even tighter, if that was at all possible.\n\n\"Atta boy. So when are you going to ask Mom?\" \n\n\"One thing at a time, Daniela; let's get you and these games done and us all back home before I get on one knee and ask your mom to marry me.\"\n\nThe voice from the shadows startled both of us. \"It will be a yes from me when you do.\"\n\nMelody just seemed to glide across the room and fall on top of me, the kissing was frantic.\n\n\"Like eeww, if you're going to get all sweaty, can you at least do that in your own hotel and not on my floor next to me? Healthy girl here, who hasn't had sex in awhile and is as frustrated as hell.\"\n\nWe all giggled, even more so when Daniela and I caught Melody trying to straighten her clothes. I was sent back to the hotel, Melody stayed to keep Daniela company until it was time to pick Lucy up and help remove the Henna paste. With this time table, poor Daniela wasn't going to be getting much sleep that night. Thankfully, the morning was a practice session. The organizers had put it into the schedule in case the preliminaries got held up in any way, and leaked over to another day.\n\n*******\n\nI woke with Melody wrapped around me; she woke when I tried oh so hard to get out of bed and let her rest. I was on the phone ordering coffee and some breakfast as she passed me; the shower started running seconds into my order. She came to the table wrapped in one of the hotel's robes.\n\nShe was smiling when she said, \"You're staring again.\"\n\nMelody knew why and her cheeks turned a healthy pink color. She was just so damn beautiful; I only got to see her natural beauty in moments like those. Going out into the big wide world without makeup on is a deadly sin, more so if you just happen to own the largest cosmetics company in the US, or so I was led to believe. On one of our now many intimate moments, I even confessed that given a choice I would prefer to see her walk around all day naked. \n\nWhen she finished laughing, and whilst rubbing the growing bruise on my arm, her reply was that if she did that, she couldn't see herself getting much work done. Reluctantly, I agreed with her, but she did humor me when time and opportunity allowed and I sure got to see her naked a lot. She also reminded me that was also when she got to see me hard a lot. \n\nI was still eating my toast when the door to our room sort of exploded. Poor Melody dropped her coffee on the table; it was left to me to clear that up while she answered the very loud banging on the door. Daniela bounded into our hotel room, her whole body just glowed.\n\n\"It worked, and I have you to thank.\"\n\nWhat little space that there was between us simply evaporated as Daniela wrapped her arms around me and hugged me ever so tightly.\n\n\"Once again you have given me my life back. I'm not going to let you down, that medal's ours.\"\n\nThe kiss on the cheek was unexpected but always welcome before the human tornado hugged her mom before running out of the hotel room to get to practice on time. Melody was still holding the door open as her hand gently touched her cheek. She was still looking out the open door when I wrapped my arms around her; I felt her whole body shudder. \n\nHer voice was only just the level of a whisper when she said. \"I'm sorry.\"\n\nJust as suddenly she twisted her body to face me, her arms around me as heart breaking sobs poured from her soul. As I held this woman tight to me, I was so afraid. Kicking the door shut, I lifted her tight to me and put her back to bed. We were still in the same position an hour later when exhaustion finally claimed this woman.\n\nIt took so long for Melody's breathing to take on the slow steady pace that sleep demands, her body heat increased to the point I was about to pull the covers off, only for her body heat to dissipate and the feeling that I may need to look for another cover. All the time my mind sought the answer to just one question, what was she being sorry about? \n\n********\n\nWhen Melody woke, we only had just enough time to shower and get to the white water centre. Even then, the practice had already started. The same question would occasionally seep to the front of my thoughts, but I knew Melody to leave well enough alone.  \n\nWhen she was ready we would speak again; she shared in my call to Mom and Libby, and her spirits seemed to lift for the duration of the call.",
        "Melody stood when she spotted Daniela at the start line; two of the other competitors watched her take on the course and glanced at each other when her time came back. The team's trainer pulled her off the course and kept her in the warm up pond for the next hour. I guess she had made her point.\n\n\"Please, walk with me.\"\n\nWhen I looked, Melody had her hand out towards me. Instinctively my hand clasped hers and we wandered the grounds of the complex, we grabbed a coffee each from one of the kiosks and continued to wander with no real destination in mind. \n\n\"When my husband cheated on us, I hated men. My business is female dominant; it helps, of course, that it's a cosmetics company, but I surrounded myself with women so I didn't have to deal with men.\"\n\nShe moved her coffee to her other hand so her warm hand could hold mine again. \n\n\"I often wonder were we would be now if it was left to that girl to rescue Daniela, but she didn't and you did: a man did.\"\n\nHer tightening of her hand made me stop walking and she placed herself in front of me, her eyes bore deep into my soul.\n\n\"Daniela calls you 'my hero'. She's not alone when she calls you that. You didn't only save my daughter.\" Her voice turned to a whisper. \"You saved me, as well.\"\n\nHer eyes went a little moist. \"This isn't a threat, it's a promise. I'm going to sit on my hands and wait for you to ask me that question. It may kill me to do it, but it's a lesson in patience that I need to learn. Next year is a leap year, that's when I get to ask you. So please take notice, at one minute past midnight at the start of the New Year, I will ask you, if you haven't already put a ring on my finger.\" \n\nKnowing what I did about this woman, a lot of things had changed in her in a year. I suppose my own thought process came to a screeching halt right about then and I smiled. \n\nMelody caught me and asked. \"What's so funny?\"\n\n\"I suppose I'm going to have to thank Cheryl, now.\"\n\nIt took Melody a second and then she burst out laughing; her arms came around me and held me tight to her until she managed to get that image out of her thoughts.\n\n\"I'll let you do that, but don't expect me to thank my ex, in return.\"\n\nTelling her that I would actually pay to see that happen stayed locked in my thoughts.\n\nDaniela phoned her mom late that afternoon; we knew we wouldn't see her that evening so we both wished her good luck and I just knew I would have one of the Carlson women up all night worrying.\n\n*******\n\nThe hotel had converted their biggest conference room to a media room to show the white-water finals. Melody wanted to go to the centre and watch it from there, but she knew that she could become a distraction and told Daniela that over the phone that evening. Daniela understood and told her mother that she would see us all later. I'm sure they both spent the rest of the evening wondering if they had both made a terrible mistake.\n\nDaniela had to focus. This was the culmination of so much work: a true blood, sweat and tears year if ever there was one. The papers had published her history that morning, and it flattered her. Many knew the reason for 'My Hero' on her wetsuit, and the newspapers brought everyone in on the open secret. The papers also noticed the lack of it on her wetsuit yesterday. \n\nOne of the papers used an 'unnamed source'. Whoever it was got it spot-on. The paper did try to keep an open mind, but it was a shame the writer of this article wasn't at the meeting when Mr. Ernst Brunner and his cronies from the Olympic committee came and demanded the removal of her wetsuit jacket there and then from the final event. I wasn't sure if he would still be amongst the ranks of being impartial.\n\nThe room hushed as the first of the competitors started her journey down the course. Her time was really good and automatically put her in first place, for the time being. Two others made their own attempt: one fell foul on connecting with a pole and the other came in a full second behind the leader. \n\nIt was Libby who spotted her self-adopted sister first; the commentator wasn't more than a couple of seconds behind. He passed on commenting on Daniela, in favor of his guest speaker in his commentator's box, and again the 'My Hero' jacket got a mention. Libby looked at me and smiled, I suspected that both girls had been on the phone to each other this morning and a few secrets changed hands. Judging by the look from my daughter, I think she knew how we got around the committee's demands to derail Daniela. \n\nThe camera zoomed in to Daniela's features; her concentration was total. She gripped her paddle once more before the buzzer went off, after that, not even the commentator could be heard as Libby gave her own commentary to everyone in that room. In the end, even the manager of the hotel turned the sound down so we could all hear Libby as Daniela dug her paddle into the white-water.\n\nLibby knew the name of everything on the course and we all let her run with this; hell, I doubt I could have stopped her without a riot on my hands. Everybody in that room was torn between watching Daniela dig into the course and make it her own, and listening to my daughter's commentary as she, herself, mentally rode that same canoe with her sister. A hand went into mine and held on tight. Melody watched Libby, whose own eyes were totally locked on the big screen through tears of joy and pride, the same feelings that held me to the spot.\n\nMy daughter's voice grew in confidence just as Daniela bossed the slalom course. With one final push Daniela exerted every muscle in her body as she dug her paddle into the water in that one final concerted effort. I'm sure that Melody was watching the scene that unfolded on the big screen. As for me, I watched Libby as she rode the course through her sister's eyes that very moment. Everyday I was proud of my daughter; that day, she wrote a whole page of pride across my heart and that day will never leave my heart for so many reasons. \n\nWhen Daniela broke the sensor to record her time the whole room erupted; the loudest of them all was Libby. As the current pushed her canoe along, all Daniela could do was slump forward and try so hard to pull air into her tired young body. The crowd's noise gave Daniela a clue that she had done something special. She pulled her torso upright and focused on the time as her canoe passed it, finally registering her score. \n\nThere were still another three competitors left to run the course, but they had to pull off a miracle since Daniela Carlson had just broken the record she herself set days before. Daniela's fist clenched as she raised her arm above her head, an act of pure willpower. The crowd shouted encouragement to her, their cheers making more noise than ever before. The cameras continued to follow her canoe, even though the next competitor was ready to start. The Olympic people held her back. They didn't want to but it was plain to see the television people were still focused on Daniela and the celebrations around the course.\n\nThe sound went back up on the hotels big screen and Melody and I went and rescued Libby, a few people still around her congratulating her on a fine, even if slightly biased commentary. \n\nMelody swept Libby into her arms and swung her around. \"That was beautiful; I watched in awe and you held everyone in this room in your hand.\" \n\nIt was fun watching my daughter, as the realization of what she had done finally hit her and she went the cutest shade of pink. Our hotel was too far from the white-water centre to make it in time for the handing over of the medals, so we watched from the conference room. To add insult to the proceedings, Mr. Brunner was the man giving the medals out, along with one guy I had met only once and told me he liked to stay in the background.\n\nI paid attention; he was the man who ran the centre and he stood right next to Kurt Brunner. My instincts kicked in, this wasn't going to have a happy ending and I suspected he knew it wasn't, which is why he was now in the public eye and standing with the same man who seemed to want to scupper Daniela's dream.\n\nMelody and I watched Daniela closely as she accepted her gold medal from Brunner. The camera person must have sensed something, because he zoomed in closer at the group, as Daniela's eyes went cold and the smile left her lips. The camera angle given to the television companies only gave the back of the head of the official. Daniela's eyes read pure hatred and I just said a silent prayer as I hoped that she would hold it all together just a little longer. \n\nThe man in charge of the centre took a step forward and placed his arm on the official; they exchanged glares but nothing else. The group moved away and the winners turned to the face the raising of the flags.\n\nOur national anthem rang out across the course and Melody gripped my hand just a little tighter. As the last bar on our anthem floated across the course Daniela's hand went to her jacket and her zip came down, her jacket was shrugged off her shoulders and the woman behind Daniela spotted it first, her hand went to her mouth, as her eyes widened in surprise. \n\nAs the camera zoomed back in, I turned to Melody. \"Get the car; we're going to need to get her out of there.\"\n\nBy the time I had scooped up Libby, Daniela was, I thought, already destroying her career. Her wetsuit jacket never left the podium. The team manager, sensing something wrong, sent two of the male canoe team out to collect Daniela and she walked back into the centre with a couple of her team members either side of her. The same cameraman had a superb position and continued to hold the image of three of the team heading back into the centre, with Daniela in the middle displaying 'My Hero' in henna between her shoulder blades for all to see. \n\nEvery screen around the course showed that tattoo to the world. What Daniela didn't see through her tears, was that every member of the public stood and applauded her, as every step towards the complex building, we thought her own fate now sealed with the Olympic committee.\n\n*******\n\nTo say all hell broke loose would have been a mild understatement. It turned into a full on fight between the Olympic committee and our own governing body, with the news papers acting like a boy pocking a stick into the side of the growling bear.\n\n'My Hero' was never an advertisement and our governing body took the Olympic people to task at circumventing the canoe team management at the time to go directly to Daniela and demand it be removed a day before the finals. While all the name calling went on between the governing bodies, the television crew went over ever scrap of film they took of the event, even the stuff that eventually hit the electronic cutting room floor.\n\nOne of the cameras at the event only had the back of Daniela's head so at the time it was deemed not usable stuff. The director let it run and even got himself a promotion off the back of that one decision. Although they only had the back of Daniela's head, Mr. Kurt Brunner's face was in full view. They hired someone to lip read what he said as she stood on the podium and broke the story a few days later.\n\nKurt Brunner had done some research of his own; he knew that the girls either side of Daniela didn't speak any English and was hell bent on revenge. The ego of the man knew very few bounds that day, and as he placed the Gold medal over her head he leaned in thinking only Daniela could hear. In doing so, he gave the camera across the course a clear view as he told Daniela that she had won this one, but he was going to insist on her getting a drugs test at every event she was competing in.\n\nHe even smiled when he let go and said. \"Remember, mud sticks, eventually.\" \n\nWhen the news people led with this story and even had the lip reader authenticate it, the Olympic Palace in Lausanne Switzerland started to pull up the drawbridge; it stopped just long enough to allow the head of the organization to throw Mr. Kurt Brunner under the nearest bus. \n\nOur people stomped on him as they banged on the door of the headquarters. They wanted a written apology for the shabby way Daniela was treated, and not only verbal, but a written statement. Her medal stood, since she had done no wrong, but not one person stood in front of any camera and gave Daniela an official apology. Away from the cameras, one apology was handed to our governing body to hand on to Daniela; she politely declined to accept it.\n\nIn Daniela's mind, it was the Olympic committee's own Kurt Brunner that started it all; it shouldn't be down to our own governing body to do the committee's dirty work. Off the record, the governing body agreed with her, and to this day are still trying to get Daniela back on the team.\n\n*******\n\nFor two years Daniela kept a dignified silence; while the coaches and governing body kept all channels open to Daniela, they wanted to include her in the world championships and even the next games. Daniela went back to Oxford to finish her studies, she took part in a few inter-college slalom competitions but that was it. She knows she hurt herself when she refused to speak out; it left only one side of the story and, as we all know, when you only hear one side of any story, you can't help but judge from that.\n\nI got on one knee in front of both our daughters and my folks at a barbecue at my folks place a month after the Olympics. Melody followed me to the ground and said yes before I even had a chance to start my speech. Neither of us could see the point in waiting, so we tied the knot six months later in England so Daniela could fit us in between her exams.\n\nThe book 'My Hero' came out a year after she finished her studies in Oxford, and the Olympic people have been doing damage control ever since. If there is anything more powerful than an Olympic organization, it's a woman seeking revenge.\n\nDaniela's roommate was a very nice lady called Chelsea Morgan who was at Oxford studying English Language and Literature. Between Chelsea and her course professor, they sat Daniela down and got the whole story from the one person who, up until that point, had remained tight-lipped.\n\n'My Hero' held on to the best sellers list for all of six months, and refused to drop below the top twenty for over a year after that. It was also at Daniela's insistence that the book cover was the picture I gave her on the pen drive. It seems the book hurt them more than they thought it could.\n\nDaniela was asked to try out for the next Olympics. She respectfully declined, citing time constraints with her new job. When Melody found herself pregnant, Daniela insisted that because of her mothers age, she step down and rest through the whole pregnancy. By the time Angela Beth Henderson was born, Melody was so much into mother mode that she just left Daniela to continue to run the company.\n\nAnother promise I kept was to Daniela: three months after she finished her exams at Oxford we started the adoption process. The judge told us that it's more common than you would think. He did hold out for an autographed photo from Daniela Colson before he would officially change her name though. He told us it was for his grand-daughter; we all nodded that all knowing nod."
    ],
    "authorname": "markelly",
    "tags": [
        "water",
        "canoe",
        "accident",
        "cold",
        "head wound",
        "meeting",
        "competition",
        "tattoo",
        "henna",
        "adoption"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/my-hero-15"
}