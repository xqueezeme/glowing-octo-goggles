{
    "title": "The Sultanah Ch. 14",
    "pages": [
        "Dear Reader, thank you so much for reading this story. It has taken nearly a year of my writing life to get the whole thing finished. This is Chapter 14 of 14 chapters and the total is over 250,000 words. It is my Dirk Diggler/Jack Horner act of hubris: my attempt to write an erotic adventure story that pulls you in with a story you want to read, even when there isn't any sex going on (though there is a lot of sex. Crazy, weird, fun sex). It is the most ambitious piece of erotic fiction I have ever attempted. So I hope you enjoy it.\n\nWith that said, this book is not for everyone. It will be too long for many people (no shame in that, it is a big time investment). Some of the sex scenes are intense and include themes like hermaphroditism, non-consensual activity, incest, etc. For some people, that will likely be the appeal. In fact, while this story is definitely not for everyone, I think for a select group of people this story will essentially have everything you could ever ask for. So if that is you, congratulations, you found that thing you have been searching for. You can skip ahead to the sex and I won't be offended, but I think this story is more than the sum of its parts. If you read this whole story, you will not be disappointed. \n\nIn Chapter 1, our main character, Princess Varis, finds that her father has died and that, by virtue of the fact that she is a hermaphrodite and can father a child, she is now the Sultanah. In Chapter 2, Varis unearthed a conspiracy to destroy her Empire led by Rahip, the Cardinal of the \"New Religion\" and later she received her coronation. In Chapter 3, Varis humiliated the New Religion and raised the morale of her besieged people. In Chapter 4, Varis lifted the siege through a daring midnight raid. In Chapter 5, Varis survived an assassination attempt and visited her harem. In Chapter 6, Varis faced a challenge to her authority and seduced a noblewoman to maintain it. In Chapter 7, Varis defeats the raiders and comforts a peasant girl. In Chapter 8, Varis is briefly engaged and kills her fianc\u00e9 for betraying her. In Chapter 9, Varis slept with a member of the harem, her half-sister, while her aunt watched. In Chapter 10, Varis wed her sister and consummated the marriage. In Chapter 11, Varis sleeps with two new hermaphrodite members of the harem. Chapter 12, Varis performs a sexual ceremony with three surprising women. In Chapter 13, Kardes and Arkadas are murdered and Varis gets revenge on Hain's daughter.\n\nSome recurring characters you might want by name are Varis (the Sultanah and narrator), Cin (the head priestess of Gunes), Arkadas (Varis' friend and servant), Kardes (Varis' older sister), Nislani (Varis' younger sister), Rahip (a Cardinal of the 'new religion'), Duke Hain (an important lord opposing Varis), Lord Sadik (a minor lord who has spoken in support of Varis); King Sican (the leader of Dusman, a rival kingdom), Prince Lider (Sican's son); King K\u00f6yl\u00fc (the leader of Temsilci, a rival kingdom); Agiz and Got (Subordinate Sun Priestesses); Saygili (Varis' guard); Soyguncu (a pickpocket and spy for Varis); Tutuklu (the head concubine of the harem); Kukla (a noblewoman); Mader\u015fahi (the leader of Anaerki, an ally). Further, Gunes is the name of the Sun God, Tanri is the name of the 'new god.' The city where the story is set is \u015eehir in the country of \u00dclke and the Empire of B\u00fct\u00fcn D\u00fcnya. If you need more...reread the earlier chapters.\n\nPlease, please, please, please, please tell me what you think after you read this. I put an embarrassing amount of work into this and I want to know what you think. Especially if it is good things.\n\n*****\n\nChapter 14: Renewal\n\nI didn't hear the door open; I was completely oblivious to the world around me. It was the morning after the failed coup attempt and I had awoken feeling totally unsettled. I was thinking a lot about Arkadas, Kardes, Got, and Agiz. I was even thinking about Saygili and Cin, who had been injured on my behalf. I didn't know what I felt about it anymore. I was so numb. I just knew, despite the fact that I had just woken up, that I was tired. So, unbelievably tired. All of my joints seemed to ache and my head was foggy. Without really planning anything, I had gotten up from my bed naked and started writing. I didn't even know what I would be writing, but the words started to come. And the more I wrote, the more defeated I felt. My head was practically laying on the desk when the door opened.\n\n\"Varis...\" a small voice said. Nonetheless, I was so completely on edge and so engrossed in my writing that my shoulders jumped and I turned quickly in my chair. For a moment I had an image of the throne room the night before, the doors busting open and the traitors piling in. But I relaxed as I saw Nislani standing just a few feet away from me. She was wearing her nightgown and her hair was slightly messy. I wondered briefly where she'd slept. She hadn't come in. Thank Gunes.\n\n\"Hello Nislani,\" I said flatly. Then I turned and began writing again. It was like I'd never left. There was a long silence where the only noise was my pen moving across the paper. I could sense that Nislani did not move. She just looked at the back of my head.\n\n\"I am sorry,\" she said eventually and I barely heard it. There was another paused, \"About Arkadas...and Kardes...\" even as she spoke the names I could hear tears well in her eyes. I set down my pen and turned to her. My sister was crying, her head drooped and her shoulders slouched. She shook her head.\n\n\"You don't need to apologize,\" I said, still sounding unnecessarily cold. I was surprised by the sound of my voice. I hadn't intended any anger at Nislani. I realized that whatever emotion I used to call hate and attach to Nislani was nothing of the sort. A minor emotion by comparison to real hate. I knew that now. Nonetheless, I let the cold words hang. Part of me wanted to comfort her, she looked so pitiful. But I lacked the will to do it. I lacked the warm feelings necessary to comfort someone else.\n\n\"But I do...\" she said, looking up behind red eyes, \"I have so much to apologize for...\"\n\n\"Not for Kardes and Arkadas,\" I responded, \"Or anything else that happened last night. Anything you have to apologize for pales in comparison to that anyway.\"\n\n\"That isn't true,\" she said, \"That isn't true at all and you know it.\"\n\n\"Well what is it then?\" I asked sharply. I felt so very weary. Nislani, for the first time in her life, did not respond to my anger. She grew quiet for a moment and then spoke.\n\n\"I need to apologize for being childish,\" she said.\n\n\"You are only 18, that happens,\" I said, hoping that was the end of it.\n\n\"No! Not like that. I have behaved like a spoiled brat...well forever. But in a way that I cannot justify since you became the Sultanah. I don't know if I was jealous of you or...what. But I was wrong. And I am sorry.\"\n\n\"Why now? Why are you apologizing? Because you feel bad that my lover and our sister have died?\" I asked, sounding more annoyed than angry. Nislani shook her head vehemently. I wanted to tell her not to bother to explain, that I didn't really care. But I lacked the will to speak. I just sat, defeated, while my sister struggled to explain her un-relatable feelings.\n\n\"No, not that at all! Well, yes it is. But not like you think. I am not apologizing because I feel bad. But the fact that they...died. It change the way I thought about everything. I don't know...I know there has been a war going on. I mean I saw it. But it...didn't feel real before. I just...I didn't recognize it,\" she was clearly struggling with her explanation. I found it wanting.\n\n\"You know our father and our brothers were killed in this war,\" I replied sharply.\n\n\"I am sure I cried far more tears for Father and our brothers than you ever did,\" Nislani stated without malice, \"It was not that. They were men. That is what men do. They fight in wars and sometimes die. It was horrible, but it was expected. This with Kardes and Arkadas...they were women. And gentle. And sweet. And they killed them,\" she was crying again now.\n\n\"Nislani...\" I said, trying to calm her, but she raised her hand and continued.\n\n\"I didn't understand the stakes Varis. I really didn't. I just thought you were using your throne to lord over me because you could. Like we were playing games. It seems so stupid now. What a small part of all this I was, but I felt so much like...Like I was in the center. Now I know. You were hard on me and you were mean. But most of the time, in the last few months, you had to be. The margin for error was so small. You were balancing so many lives...I am so sorry I didn't help. This is as much my fault as anyone else.\"\n\nPerhaps in another time or another place, I would have felt vindicated. I don't know. She had just admitted to me all of the things that I had accused her of or at least suspected. But my empty feeling stayed with me. I kept looking at her and I shrugged my shoulders. What did any of this matter anyway?\n\n\"Well don't worry about it,\" I said, \"It is all over now anyway.\" Nislani's brow furrowed and she tilted her head to the side.\n\n\"What do you mean? Because the collaborationist are all dead? But Dusman is still out there. Surgun and Temsilci too...\" Nislani's brow was furrowed and she tilted her head to the side. \n\n\"Not like that,\" I said, \"I cannot do this Nislani. I tried. I am not cut out for it. This will take care of it.\" As I spoke I lifted up the paper I had been writing on. It felt so heavy in my hands. I hadn't even admitted to myself yet what I was writing. I had just let the words pour out of me and onto the page. But I felt strangely light when I said those words to my sister.\n\n\"What is it?\" she asked, sounding nervous. I looked at it for a long while and then sighed.\n\n\"It is the end of all of this,\" I said. Nislani took a few steps closer to me and shrugged.\n\n\"I don't know what that means Varis, what does it say?\" She replied. I sighed again and looked at the paper. Well, I was going to need to explain it a lot anyway, I might as well do it now. After all, it concerned Nislani.\n\n\"It is a letter to King Sican. I apologize in it for attacking his troops. I lament the war. I ask for forgiveness. I beg for a truce. I offer to annul our marriage. I offer your hand to Lider in marriage. I further offer to resign as Sultanah so that Lider can now take his throne,\" I said coldly. Nislani's jaw dropped.\n\n\"No!\" she said, sounding surprised and angry at the same time. I shrugged and nodded. It was absolutely true. That, more or less, was what I had been working on since I woke up that morning. I guess I had come to the same realization that Nislani had. This was not a game. I was not dealing with domestic, womanly issues and gossipy tiffs. I was in the middle of a war. I was a leader in that war. And my mistakes reverberated throughout society. Every mistake I made cost lives. Other people's lives. Kardes and Arkadas for sure, but they had simply brought the issue home to me. But scores of others had died as a result of my actions. And what was I doing? Simply flailing around, doing whatever felt right in the moment. I had no idea what I was doing and I was hardly in a position to take responsibility for my actions. \n\nThese ideas seemed to have come fully formed in my mind when I awoke and it was only a matter of automatically putting them to paper. I didn't even feel bad about it. No, when I woke up my self-hatred and guilt may have been gone and but I hadn't forgiven myself for what had happened. I had simply stopped feeling anything about. I accepted that there was nothing I could do that my mistakes were inevitable. But only because I recognized my limitations as a leader and as a woman. And I resolved that no one else would die to vindicate my pride and my ego. I would take the full brunt of dishonor on myself. I would quit. I would let the men have their sphere and I would return, chastened, to mine. \n\n\"You can't do that!\" Nislani said, she almost seemed like she would say more, but held up.\n\n\"Nislani, I can't not do it!\" I said, sounding desperate. For the first time that morning, I was really feeling something. I didn't really understand why I felt so strongly about this, but I followed my emotions. I knew that I would find my reasons there.\n\n\"After you've been through so much...why quit now?\" she asked, sounding more angry than incredulous. I began to speak then, the words pouring out of me without thought. The motivation for my abdication came out of me easily, as though I had not avoided thinking about it all morning.\n\n\"What am I becoming Nislani?\" I asked, but did not stop to hear her response, \"You don't understand the evil that is taking root in me, that is corrupting me from the inside. You don't know the things I've done. I have killed people Nislani! I had ordered actions that have resulted in still greater deaths. And I don't feel anything about it. I caused my friend...my sister...to die. I did that with my actions, and I cannot even make myself feel anything about it. Last night...I can't even describe what I did last night. Or what I tried to do. I tried to...crush a woman's soul, to extinguish it. I felt...good about it. But these are not games, I am not play acting. There are consequences that I cannot even fathom to the actions I take. And I can do it, I know that I can. But, who am I Nislani? Are these things that I can live with as a person? Everything I do, I do from necessity. This is what it takes to be on the throne. This is what the Sultanah does. Is that what I want? Can Varis survive this? I don't think so anymore, I am eating up the part of me that exists outside of this office. Burning it up to become... What? Miserable. I need it stop.\" Nislani looked at me in stony silence and then responded as though she had not even heard my concern. \n\n\"You have no right to abandon your throne. It belongs to our family and you are the only one who can sit in it!\"\n\n\"I don't belong in it any more than any other person, it is a man's chair and I am a woman. I have tried to do what men do, but I don't have the stomach for it. Or I don't have the stomach for the fact that I have the stomach for it. I am going to stop before I kill someone else,\" I explained, I could feel tears coming to my eyes as well. I was surprised. I didn't know I could feel anything, not even frustration. It was so much bitterer to say all of this aloud. I shook my head. It had all been an illusion. It was like being with Kozla the night before. The power had seemed so present, so awe inspiring in the moment when I was acting as Sultanah, but once the pleasure faded I was left feeling empty. Powerless.\n\n\"Well of course you've failed if you definition of success is 'acting like a man,' Varis. Regardless of what is between your legs, you are a woman. And you will succeed by acting like a woman.\"\n\n\"Succeed like I have to this point? With a trail of blood and the bodies of loved ones in my wake?\" I asked.\n\n\"If necessary, yes,\" Nislani said, \"That is what you must do. Just like I must be by your side,\" she said, moving slightly closer to me. I felt so frustrated, it was as if she was purposefully not listening to me.\n\n\"Nislani, no one on Earth wants me in that throne. It is not right. I don't know how to do it!\"\n\n\"That is a lie!' Nislani shot back, \"Think of all you have achieved! You seized the throne, you established your church, you drove off our invaders, you gained control of the government, you protected the countryside, you made allies, you ensured the continuation of our dynasty, and you resisted a coup. A man didn't do those things. Father could not have. And you didn't do them as any man would. You did them as Varis would do it. As a woman would do it.\"\n\n\"No!\" I shot back, \"There is a difference between the Sultanah and Varis. I was playing a role as the Sultanah, but I am just Varis...\"\n\n\"You are the Sultanah, Varis. There has never been another Sultanah. Those two things are one in the same.\"\n\n\"Arkadas understood. She knew the real me. She was the only one. She knew that the public Sultanah and the private Varis were different. And the private me, that is the only one that is real,\" I explained, \"I just want to go back to that.\" The frustration was building now. I knew I sounded childish and petulant now. The things I said...they sounded absurd and inconsequential. But I could feel the truth of them anyway. I was split in two and I always had been. There were Varis, the girl who loved her friend and had romantic dreams about her future. And there was the Sultanh, the man who ran the country with an iron fist. These were two separate sides of me and one of them was an Act. And I was tired of maintaining the fiction. It was breaking down. Or collapsing into the fiction and losing my real self.\n\n\"Arkadas is dead. If she was the only one who knew the 'real you' then the 'real you' is dead as well,\" Nislani said, her voice not sounding as heartless as her words, \"You are the Sultanah and your achievements are your own. And you have no right to stop now.\"\n\n\"I just don't want this anymore...\" I said.\n\n\"Did you ever?\" she asked. But before I could respond, \"And what about what I want? I do not want to marry Lider. I do not want our marriage annulled.\"\n\n\"That is not what you said when our father's body was still warm,\" I said cruelly. I saw Nislani's eyes grow dark and she moved closer to me. I knew I had provoked her. I wanted it. I wanted to get us fighting, I was tired of her harangue. I had made up my mind, I was quitting. If she would just fight me and get pissed and leave, maybe she would realize it was for the best. Nislani's hands were balled in fists and she leaned down towards. Me I was ready for her to hit me. I wanted it. And then I felt it.\n\nA kiss. I didn't expect that. Not in the slightest. I was suddenly thrown; I didn't know how to react. Nislani took advantage of my confusion. Her lips parted and her tongue played across mine. Instinctively, my lips opened and our tongues poured together between our mouths. Nislani's hand rose and caressed my cheek gently as she kissed me. She placed her remaining hand on my knees so she could lean down towards me, closer. But for a brief moment, she broke the kiss and pulled back. My eyes fluttered open and I saw Nislani looking at me with round, innocent eyes. I looked back.\n\n\"I love you Varis,\" she said, her voice sounding even and calm. My mouth opened and then closed. She continued, \"I love you as my sister. I love you as my Sultanah. And I love you as my wife. I am sorry I didn't recognize it before.\" And then her eyes closed and she leaned in to kiss me. I felt her words, and more importantly the feelings behind those words, wash over me. For a moment, they took my thoughts away. Words came anyway.\n\n\"I love you too,\" I said, feeling the honesty in that expression. I hadn't expected to say that either. I didn't even know I meant it. Everything that had been happening before seemed to fade into the past. Nislani had diffused the frustration, changed it all around. \n\nNislani smiled as her lips pressed once again into mine. Our lips parted and my tongue explored the wet, warm cavern of her mouth. I felt her teeth and her gums and the taste of her saliva. Her tongue met mine and the soft bumps of our taste buds moved together. There was a wet sound of our tongue moving together and I felt the defeated feeling inside of me recede, slightly. After a long minute, Nislani once again broke our kiss. But she stayed close, her lips still almost touching mine and our eyes close together.\n\n\"It wasn't only Kardes and Arkadas,\" Nislani said, and her eyes dropped for a moment, \"I mean that was the final straw, but it was something else. Something else that brought me here this morning,\" She whispered.\n\n\"What?\" I asked, more confused than ever. Without speaking, Nislani reached down to my side and took my hand. She lifted it and then gingerly placed it against the fabric covering her stomach. She looked up at me, he eyes once again shining with tears. Somehow, I still did not know what she was going to say.",
        "\"I am pregnant Varis,\" she said and still it did not register with me, \"Yesterday, before...everything. I went to Cin because I had been getting sick. In the mornings. She inspected me. She says it is going to be a girl. But like you Varis. A girl like you, another Gunes.\" Now, suddenly the meaning of my sister's words came to me. My jaw literally dropped and my heart fluttered.\n\n\"Pregnant?\" I asked. Nislani smiled and then nodded. She had said that I had secured the future for the dynasty. I guess I didn't think of what that meant. \n\n\"How?\" I asked dumbly. All of my previous thoughts were sort of wiped away. I felt a sort of vibration inside of my chest and all of my frustrations felt like they were rapidly slipping out of me, replaced by something else. My previous concerns seemed so abstract. Suddenly, there was this very real, very present thing. A child. I didn't even know what to think about it. But I felt my lips curling up at the corners. A child!\n\n\"It had to be our wedding night. That was the only time. My only time,\" she said and then shrugged. I laughed a little. Nislani laughed as well. Now her sudden urge to 'grow up' made a lot more sense. Even if nothing else in the world made sense. Me. A sire? I looked at Nislani, saw her glowing and smiling.\n\n\"I really do love you Nislani,\" I said again and I saw her smile grow wider.\n\n\"I love you too, Sultanah,\" she said in response. And then she kissed me once on the lips, just very briefly. Before I could respond or react to her use of my abdicated title, I felt her kissing me again. She lifted my chin up so she could kiss the underside and then trail down my throat to my chest. Her kisses were small and light and they tickled me as she moved. Soon, Nislani's lips were trailing down the top of my left breast and her lips were sinking into my flesh. Her long, straight hair trailed over my body, tickling my skin. I had nearly forgotten that I was naked, it felt so natural now.\n\nIn a moment, her lips came to rest on my left nipple. I felt it pop gingerly into Nislani's mouth. Her eyes were still open and she looked up at me coyly while she began to gently suck on my nipple, swirling her tongue around on me and tasting me. I felt my nipple grow harder in Nislani's mouth. I moaned and arched my back. Nislani smiled around my nipple and flicked her tongue against it. But she didn't want to wait there.\n\nShe continued to kiss down my body, planting another kiss on my nipple before moving down to the underside of my breast. She acted more slowly now, but was always moving. I could hear my own breath rasping through my nose and I felt like I could see my heart beating through my chest. For some reason, it felt like the first time. Perhaps it was because this was the first time we had chosen to do something like this.\n\nShe moved down across my stomach, placing a kiss above my bellybutton. She kept her eyes on my face as she worked her way down my body, but she seemed to know exactly where her body was lying. My cock had grown hard in response to Nislani's careful attentions but she avoided touching it. She leaned around to the side in order to kiss her way down my body, my cock stuck up hard, but just inches from rubbing her shoulder. Nonetheless, her long hair brushed across my cock and tickled it while she moved.  \n\nI felt it twitch with excitement. Nislani kissed down stomach from my bellybutton, down towards my aching cock. She shifted her head slightly to the left and moved to the side of my cock. She continued to kiss down between my legs. Eventually, I felt her cheek brush again my balls and the shaft of my cock as she kissed the spot where my thigh met my torso. I moaned loudly, but stayed seated immobile in my chair with my legs spread.\n\nNow Nislani settled more easily between my legs on the floor. She was kneeling now; my cock was at her eye level. Carefully, she began to kiss to her right, moving closer towards the center of my body. I groaned loudly and squeezed on the arms of my chair as I felt her lips press into my scrotum. My balls moved against her lips, but she was persistent, planting her lips against me until her face was centered against my cock, her lips in my scrotum and her nose against my shaft. She looked up at me sharply and smiled. I nodded.\n\nSlowly, Nislani began to kiss up the length of my shaft, moving her soft, full lips just the slightest amount each time. Carefully she climbed the length of my cock, her kisses tickling me and making my body tremble. My cock ached worse than it had the previous night and I moaned so loudly I wondered if the guard was worried. Eventually, Nislani's lips climbed to the tip of my cock. A small drop of clear seed had formed at the opening and a thin string of it connected to Nislani's lips after she kissed me there. \n\nNislani looked at me for a moment, with her lips against my cock. She raised her eyebrows and then she stuck her tongue out slightly. The hard, wet bead of her tongue pressed against my cock and I groaned from the hot sensation. Then, in a rapid motion, Nislani dropped her head, letting her tongue press wetly down the length of my cock. Her tongue skittered down the vein at the base of my cock, pressing into it and massaging me. Nislani's tongue felt so good and her actions so fast and surprising, I did not know how to react. I grunted and squeezed harder on my chair.\n\nOnce again, Nislani's lips were against my scrotum and she tucked her tongue back into her mouth. Now she started to kiss again. She began to kiss down. I felt her nose slide down my wet shaft as she began to kiss down lower and lower. For the first time, her hands became involved and I felt her gingerly take my scrotum between her thumb and her fingers and pull up. She pulled gently and there was no pain. I felt my heavy, full balls lift up from my body. I felt a coolness as my wet cunny was exposed to the air. Nislani continued kiss down my scrotum, lifting it higher so that she could get every last spec of my flesh.\n\nNow Nislani came to my cunny. I took a deep breath, unsure of what would happen. My cunny ached and I could feel the wetness on it. I realized then that I often had this sensation when I was making love, this need for attention for my cunny. But I rarely heeded it. It did not seem proper. Only long ago with my priestesses and in the limited, fantasy experience with my new hermaphrodite harem-members had I ever indulged it at all. But it had been there all along. I needed it worse now than ever before.\n\nWhether Nislani knew that or not, I could not say. But she did not hesitate. As her lips slipped from my scrotum, they pressed directly against my cunny. I groaned loudly as I felt Nislani's lips press against mine. I was so wet that Nislani's mouth just sort of sank into me. I heard her groaned and I felt her tongue stick out slightly, to take me. It was warm and dense against my cunny lips. Nislani groaned at the taste and her tongue moved around slightly more. Then she continued kissing me. Down and down her lips moved across my cunny, coating her lips in my thick, clear juices. I moaned on my chair, holding on for dear life.\n\nEventually, Nislani reached the bottom of my cunny, planting one last kiss on the small patch of flesh separating my cunny from my asshole. Then, just as she had done with my cock, her tongue poked just the slightest bit, hard, out of her mouth. She tickled the little spec of flesh for a moment and then ran her tongue up the length of my cunny. She let her tongue go out a little farther this time and it sank into my aching slit. I gasped at the sensation. My body closed around her tongue, trying to squeeze it and I could feel the bumps on her tongue as she slid it up through me. But she moved very quickly and I couldn't hold her in place. \n\nHer tongue kept zipping up and soon it was passed my cunny and move up over my scrotum. Then it started to move up my shaft with the same speed, somehow maintain a delicate and delicious balance of moisture and friction. While she was moving up the last inch or two of my cock, Nislani's hands suddenly became involved. Her left hand rose quickly, wrapping around the base of my cock, so far down that her fingers and hands were sunk slightly into my scrotum. Her other hand reached underneath of my heavy balls and I felt her fingers tickling the sopping opening of my warm cunny. In a moment, her lips were against the tip of my cock and she looked up at me intently. She stopped moving.\n\n\"You are both of these things, Varis,\" she said, barely above a whisper. Her breath felt cool against the wet tip of my cock. I didn't at first, know what she meant. But then, in one rapid movement, she removed all doubt. Her head rose up and her mouth opened. She pushed down quickly and I felt the tip of my cock slip into Nislani's warm mouth. Not just the tip, she moved quickly and I felt the bottom of my cock dragging across Nislani's thick, delicate tongue and the tip of my cock pressing against the rough roof of her mouth. In a moment, most of my cock was buried in Nislani's mouth and her lips were pressing against her fingers wrapped around my cock.\n\nBut that wasn't all. Nislani's other hand had jumped into action at the same instant. Her fingers had been playing around at the wet opening of my cunny for several seconds before and she had coated her fingers in my sticky juices. Now, they were properly lubricated and as Nislani began to attack my cock, her fingers began to probe my cunny. Nislani was not gentle, she was going for full effect. Just as my cock plunged into her throat, three of her wet fingers charged into my cunny. I nearly screamed at the unfamiliar sensation, but I instantly fell in love with it. I could feel Nislani's digits twisting and shaking inside of me and she began to work them in and out of my cunny.\n\nThere was really no role for me to act even if I had wanted to, which I did not. I was completely mesmerized by Nislani's actions. All of it was so unbearably intense. I just sat in my chair, dumbfounded and enjoyed the sensations as I felt them.\n\nNislani had moved her hand off of my cock, no longer needing to hold me in place. Now my cock had slipped all the way into my wife's throat and she was gagging around it. But she did not pull the cock out. She let it stay there while her throat expanded and contracted around my flesh. She stuck her tongue out slightly, driving the cock deeper into her throat and allowing her to rub her tongue against my scrotum. She was making a moaning noise in her throat and it sent wonderful vibrations through my cock, reverberating through my whole body.\n\nIf anything, Nislani's actions lower down were even more intense. Nislani clearly had more experience with her own cunny that with cock (though she was doing an excellent job with my cock) and despite the fact that I had no clitoris (I guess I had a cock instead), she knew exactly what to do. Her fingers hooked inside of me rubbing forcefully and gently on the ridged flesh inside of my cunny. She essentially made a 'come hither' motion with her fingers, rubbing the most sensitive spot inside of my cunny. Occasionally, she would twist her fingers inside of me, giving me a strange twirling sensation that made my head weak, before returning to her steady motions. My cunny had never had this kind of attention before, I could barely understand what was happening.\n\nIn fact, my entire experience was absolute, lovely, confusion. I was completely immobile on the chair, just staring down at Nislani while she did her work. My nipples ached and I wanted to reach up and pinch my breasts, to feel them, but I lacked the will to act. Instead, I just felt my nipples grow harder and harder and ache in the cool air of my room. My breasts jiggled slightly, giving some relief, as I was breathing desperately, trying keep my head. I heard myself moan on occasion but mostly the room was filled with the slurping sound of Nislani's mouth and the wet noise of her hand moving into my cunny. The room was filled with the scent of cunny, my own familiar scent mixed with the scent of Nislani, which I remembered vividly form my wedding night.\n\nAfter a brief period of time gaining her bearings, Nislani slipped into a steady rhythm. For the most part, she would bounce my cock in and out of her mouth with a steady back and forth, letting it go into her throat and then slip backwards, over her tongue, between her teeth, and out of her mouth, before shoving it back into her body. Her eyes were watering from choking but she never slowed. At the same time this action was going on, Nislani's fingers were moving inside of my wet cunny, rubbing my insides gently and making me drip with desire. Her fingers moved to the same pace as her throat as it coasted over my cock. \n\nThen, every tenth beat or so, Nislani would change this up. She would shove my cock hard down into her throat, deeper than usual. Rather than pulling it out immediately like she did most of the time, she would simply allow my cock to stay buried in her throat. She would gag and her throat would contract tightly around my hard cock. She would rub her tongue wildly against the bottom of my cock, pressing the vein along the bottom with gentle pressure. At the same time, she would begin to spin her hand left and right inside of my aching cunny. She put all three of her fingers together and then just rotated her wrist back and forth rapidly. The ridges of her fingers moved against my cunny walls, stimulating them and making my eyes roll back in my head. Then, after a couple of beats, she would move back to her earlier actions.\n\nNislani's attentions were so powerful and so pleasurable that I knew that I could not go on for long. My muscles had begun tensing even before she had settled into her rhythm. I had been expecting an orgasm for some time. Nonetheless, when it finally came, there was still something incredibly surprising about it.\n\nI heard myself groan incredibly loudly and I threw my head back. My hands squeezed tight on the armrests of my chair. I felt every inch of my body grow rigid and I clenched my teeth. I didn't breath out anymore, just sucked more and more air into my aching lungs through my gritted teeth. Finally, I felt the tension become absolutely unbearable, I heard a loud sigh from deep in my throat, and suddenly I burst the through the barrier, deep into the other side.\n\nFrom the very first instant, I knew something was different. Something felt different. I felt the sudden burst of warmth at the center of my body and I felt the dot of pleasure in the center, so intense that it felt almost like pain. And I felt that dot explode, expanding out across me and shooting through ever nerve in my body, coating every part of me that could feel anything in a sensation of pure physical pleasure. \n\nBut it was subtly different in a way I could not explain. Not that I wanted to, the pleasure was so great I just wanted to savor it. But, somewhere deep in my mind I came to understand one aspect of the different. My cock was buried in my sister's throat, and it felt lovely, but I did not feel it expanding or contracting in her throat. I did not feel my seed pouring out of my body and entering hers. As the pleasure I felt slowly began to subside, my cock remained hard, it remained desperate for attention. I realized what had happened. My cunny had produced the orgasm. My cock had not been involved. It was the first time in my life I had truly cum as a woman. But as I made this realization, my orgasm subsided completely and I collapsed back against my chair, panting and smiling.\n\nNislani knew that something had happened, even though her mouth was not filled with seed. Slowly and carefully she stopped her actions. Her fingers slipped out of my cunny, which was now wetter than it had ever been in my life, almost dripping onto the floor. At the same time, she pulled her head back, slipping my cock out of her throat. It glistened with saliva and still sat \n\n\"What happened?\" she asked after a moment, I saw that she was panting too. I smiled and waved my hand.\n\n\"I came Nislani, wasn't it obvious?\" I asked. Nislani's eyes furrowed and she sat back on her ass on the floor, breathing and thinking.\n\n\"Really?\" she asked, \"I didn't feel anything,\" as she spoke, she rubbed her throat. I laughed at her for a moment and then shook my head.\n\n\"Not there,\" I said and then I pointed down low, between my legs and beneath my cock, \"There,\" I said. Nislani smiled brightly.\n\n\"You see! I knew it!\" she said, \"You are special Varis. For 21 years every tried to make you into a woman and it wasn't quite right. Then for almost a year they tried to make you into a man and that was even less right. You are what you are Varis. You are both completely and fully. And it is beautiful,\" she said. Her eyes were red and her face was covered in saliva, but she looked totally innocent and beautiful. I had never had my younger sister admire me before. It felt nice.\n\n\"Thank you Nislani,\" I said. Nislani had caught her breath now and she rose up to a standing position in front of me (I noted that her hard nipples were pointing through her thin shirt and I knew my cock was definitely not yet satisfied). She leaned in towards me rapidly and I felt her arms wrap around the back of my neck. Her breasts pressed into my own and her thighs pushed into my knees.\n\n\"Don't give up on your family, that's how you thank me,\" she said sweetly into my ear. I smiled at this and I felt her hand, accidentally, graze my hard cock. I groaned a little and then turned my head and whispered into her ear.\n\n\"Oh Nislani, I am not even close to done yet.\" And with that I rose very quickly onto my feet. Nislani yelled out in surprise and started to stumble backwards. She kept her arms around my neck and I now wrapped my arms around her waist. As she began to stumble backwards, I began to rush forward into her. I held her up slightly as she stumbled backwards and she made an additional surprised noise. After a few feet of running, the backs of her legs pushed against the mattress on the bed and she tilted backward onto the bed with another yelp. I was so closely wrapped up in her that I fell forward on top of her, my hard cock pressing into her thigh.\n\nWe were now lying on top of one another on the bed, only my legs below my knees and Nislani's feet dangling over the sides. Instinctively, Nislani spread her legs on the bed and I sunk down between them. My cock pressed down into the mattress and my breasts sat heavily against Nislani's stomach. My head was leaning against Nislani's breasts. I could feel the soft sensation of her skin and I could sense her heart fluttering in her chest.\n\nOut of the corner of my eye I caught a glimpse of Nislani's hard nipple poking through her shirt. I felt mouth grow wet and I lick my lips. Without speaking, I lifted my hands up and found the fabric of Nislani's shirt on either side of her body. Without taking my weight off of my wife, I began to pull the fabric up. I felt it slide between our bodies, tickling my nipples as it moved. Nislani sensed what I was doing and after she grabbed the fabric as well, pulling it up and then throwing it off over her hand. She dropped her hands back down, landing on my hair. The smell of Nislani's cunny became more intense now, it was no longer caged in her nightshirt. I breathed it in a moaned.\n\nBut now Nislani's cute, hard nipples were totally exposed and it reminded me of why I had been removing her shirt in the first place. I turned my head slightly, move my face into Nislani's body. She continued to move her hands through my hair as I centered my mouth over Nislani's nipple. I was so desperate to taste her that my mouth was overflowing. A thin line of drool dripped down from my lips and landed on Nislani's nipple. She moaned as the liquid warmed and then slowly cooled her skin. I looked up at her. Nislani raised her eyebrows and smiled, not in the least disgusted. ",
        "I dropped my head now, letting Nislani's nipple push past my lips and enter into my mouth. The instant I felt her hard, dense skin coated in my saliva enter my mouth, I moved my tongue against it, flicking it and swirling around it. Nislani cooed and arched her back, pressing her silky breast against my face, warming my chin, and driving her nipple more deeply into my mouth. I sucked on her nipple harder, drawing it into me even more forcefully. Nislani gasped.\n\nI wanted to give her more and I quickly moved my hand up towards her free breast. My hand slid along her side, up her stomach, and over the underside of her breast. Nislani squealed as my soft hands moved over the tops of her breasts. Her other nipple was just as hard as the one that was in my mouth and Nislani's body shook as I touched it. Rather than grasp her breast (as I wanted to do), I held my hand palm down over her nipple, letting it just barely graze my skin. I circled my palm around slowly, letting Nislani's hard nipple trace against it. Nislani moaned and arched her back further, trying to push her nipple hard against my palm. I moved my hand back, keeping the teasing distance and trying not to grind my cock too hard into the mattress. I sucked harder on her nipple to compensate for my teasing.\n\nAfter several minutes of playing with Nislani's breasts, it was clear that she could not take any more. She was writhing wildly on the bed and her hands had sunk deeply into my hair. She was pulling on it slightly. The scent of her cunny had grown so intense that it made the whole room feel hotter, more humid. Every time I breathed it in my body trembled. In fact, it was affecting me more than my touch was affecting Nislani. My tongue was moving more feverishly over her breast, sucking harder. My palm was closer to her breast now, grazing the soft, weighty flesh. We both needed more, but Nislani was the one who finally put a point on it.\n\n\"Fuck me Varis. Fuck me Sultanah,\" She groaned closely into my ear, \"I love you and I want you so bad.\" I didn't realize that I had been waiting for these words, but it was clear to me now that I was. With the word 'bad' still ringing in my ears I began to move. With reluctance, I let Nislani's nipple pop from my mouth and I moved both of my hands onto the bed next to her head. Using my arms, I pulled myself up so that my head was no longer level with Nislani's chest. My hair glided across Nislani's breasts, neck, and face as I rose up higher. She moaned at the sensation. In a moment, I felt my hips slide into place between Nislani's. \n\nAs if she was afraid that I would somehow try to leave her, Nislani's legs reached around my, locking around my back. My breast mashed against Nislani's and I could feel my own saliva wet against my skin as her nipples dug into me. My hair was now forming a cone around Nislani's face and we felt totally alone together now. We looked into each other's eyes and I know that I cannot describe what we felt. But we both knew we were feeling the same thing. The heat of our bodies mixed together and I could sense the closeness of all of Nislani's most intimate parts. \n\nGazing at her innocent beauty, I was suddenly struck by a surprising thought. \"Nislani, I am so proud that you are my wife. I don't know what I would have done without you today,\" I said, my voice sounding ragged but honest. I saw a tear well in Nislani's eye and it rolled down her cheek.\n\n\"I am your wife Varis, and I love you. It is my job to support you when you cannot go on. Just as you would do for me. Have done for me, really. Even if I didn't know it,\" she said. My heart ached for her and I closed my eyes again, leaning in towards her. I felt her chin bend backwards and, after a moment, my lips contacted hers, ever so gently. Just the barest whisper of a touch at first. And then we pressed further, our lips coming together. And then splitting, our tongues finding each other wet in the middle. \n\nWe kissed now with absolute abandon, our motions coming desperate and wild. I felt Nislani's tongue probing all throughout my mouth. I felt it flitter across my lips, my teeth, and my gums. I felt our tongues press hard together and I taste Nislani's sweet saliva in my mouth. She was panting now and her hips were grinding up. I heard her moaning slightly and I knew what she needed.\n\n\"Fuck me Varis...Fuck me,\" she chanted for a moment before her mouth plunged against mine again. I loved the feeling of teasing Nislani but I couldn't hold out any longer. I needed it now as much as she did. With a quick movement of my hips, I felt my cock slide against the sopping wet opening of Nislani's cunny. My sister gasped and her arms wrapped tightly around the back of my neck. Now she was completely draped around me and I could feel her heart thundering against my chest.\n\n\"Put it in now, Varis, please!\" she moaned now. I guess I had just been waiting to hear that and I rapidly thrust my hips forward, driving them into Nislani's body. My cock had been perfectly lined up and Nislani's cunny was so unbelievably wet that there was no doubt what would happen, despite my rapid movement. I felt Nislani's body split open and I felt my cock press inside of her. The walls of her wet cunny closed around me, her tissue squeezed and massaged me as I passed inside. But it happened so quickly, in an instant, I was buried as deep as I could go inside of Nislani's cunny. Nislani grunted and threw her head back onto the bed, her mouth open.\n\nI decided to give her no respite. While she was still soaking in the sensation of having my cock drive hard into her cunny, I pulled it back out, only to slide it back in again. I did not slam into her; I did not force myself at her. Instead, my cock slid out in a steady motion and then slipped back inside of her on the same beat. I did not move particularly slowly, but I did not move too fast either, I achieved a delicate balance. I saw Nislani's eyes flash open and she looked at me lewdly. It was clear I struck the correct chord.\n\nPerhaps part of it was how closely Nislani had pulled me into her body. As I rocked my hips, thrusting my cock in and out of her body, I could feel the hard nub of her clit pressing against my lower stomach. Each movement I made reverberated through her clitoris, sending pleasure throughout her body. She moaned and groaned as I manipulated her body. She was getting twice the attention she would have expected as my cock massaged her insides and my stomach pleasured her clit.\n\nWe stayed that way for some time; I was surprised by both of our stamina. My cock ached so badly and Nislani's cunny was so wet that I figured it would be over in no time. But we continued to move together, my cock slipping in and out of Nislani's cunny while her body engulfed me. Our breasts were pressed together, our nipples teasing one another. My hair still encapsulated our faces and we kissed often, though perhaps more often, we simply gazed into each other's eyes, feeling this power of our connection. Maybe that is what kept us going, neither one of us wanted to break the lock we had on one another at that moment. It felt right, more right than any sexual experience I had ever had. I am sure Nislani felt the same, even if she was considerably less experienced.\n\nMaybe it was this lack of experience that sent her over the edge first. Maybe it was simply that I had experienced an orgasm already and she was building towards one for a long time. Whatever it was, after a particularly deep thrust, I felt Nislani's body go rigid underneath of me. I saw her eyes close and her mouth opened. She began to squeeze me tighter with her arms and legs, so tight I could barely breathe. She pulled my cock into her further and she would not let me pull out. I heard a low groaning sound coming from deep in her throat and I could feel her body trembling. Finally, I heard her sigh loudly and I felt her cunny contracting around my swollen cock.\n\nThat was more than I could bear. As her cunny milked my cock hard and without relent, I felt the tension rising inside of me as well. Now it was my turn to freeze on top of Nislani's body. My toes curled off the edge of the bed and I thrust my hips hard into her. I made a croaking sound and then a loud screech. But the tension didn't break. Not as I expected. It kept building and my eyes slammed shut and my teeth gritted so hard that my head began to swim. My throat locked up and I couldn't even scream. I couldn't breathe. I became aware of the depth and breadth of my tension, nearly a year's worth of built up angst that was transferred into my muscles and joints and held there as my body pressed against my wife. My mind went blank, consumed entirely by the desire, no the need, for relief. I believe that for a brief moment, I must have lost my mind. Everything inside of me broke.\n\nAnd then, just when it seemed that there was nothing left, when everything was darkest, a pinpoint of light appeared in my center. I perceived it in an animal sort of way, but only for the briefest moment. Because after that time, it exploded. Not like a normal orgasm. I did not feel an emanation of pleasure pouring in waves over me. I didn't notice seed pouring from my cock. Instead, I...I became pleasure. Everything had become tension and insanity and then, in an instant, it all flipped around. It became the opposite. I cannot say it any clearer than that and to this day I cannot even really fathom or recreate the notion of that feeling. But I was converted in a moment into pure energy and that energy was the force of pleasure. I touched the face of God and became like a god. The only image I kept in my mind was that of my dream, so long ago. The dream of a flaming missile piercing my eye, melting me down into nothing, only to build me up again with fire for an eye and an arrow for a backbone. It had been a premonition, and it was happening now.\n\nSlowly, my mind began to return to me. I know became aware of the normal, still pleasurable, orgasm feelings. The sense of pleasuring rippling through my body (though already beginning to decline), the sensation of my seed pouring into my sister's tight cunny. Even the feel of my body, and Nislani's, on the bed. I could feel that again too. As the last of my seed entered and overwhelmed Nislani's cunny, I became aware that I was unbearably tired. I sighed deeply, felt lightheaded, and then collapsed onto my side next to Nislani. Still wrapped around me, she rolled with me as my cock popped out of her body and we lay panting on the bed. I felt cooled as my sweat settled on my body. \n\nEventually, Nislani's body loosened its grip on mine, though she stayed lying across my body, her hand fiddling in my hair and her head resting on my bare breast. She sighed contentedly and I could feel a wet spot on the bed where my excess seed dribbled out of her body. My breathing became slower and I simply lay with wife and with no thoughts. Just a sensation of contentment. A peace I had not felt in...ever.\n\nIt could not last forever and I suppose I would not want it to, it was better just being a brief period of time. Slowly, my troubles began to return to me. The fraught political situation. My lost friends and lovers. Those things were still fresh and raw. I still felt shame, sadness, and anger. But I felt different about them as well. The problems were just as enormous as before, just as daunting. \n\nBut somehow, I felt differently about myself. I no longer felt like my problems had engulfed me, like I was no longer up to the task. Maybe I had just felt so terribly alone and didn't see any way out of it. Nislani had showed me differently. Or I had seen something I hadn't understood before. \n\nSlowly, I began to recognize the source of my new-found equilibrium. I considered myself, and I no longer felt the division inside of me. There was no longer Varis and the Sultanah. I could not discern the spot where they were separated. But, unlike my fear, I did not feel the absence of either half. I felt like they had been fused together as one, a complete whole. And I knew both halves were still there because, deep inside of me, I could feel the spot where they'd melded together. I felt the key that connected the seemingly irreconcilable parts of myself. \n\nMy family. Always abstract, theoretical before. It was so real to me now. I could feel the weight of the blood in my veins.\n\nNislani, of course, was a major part of that. She was a member of my dynasty. She was my sister. She was my wife. And finally, the emotions I felt for her connected, both to my role as a private woman and to my role as a Sultanah. She was my support, both politically and privately, a source of refuge and pleasure. She knew how to protect me here, in our sanctuary, and treat me like the woman I was and, at the same time, defend and protect me in the field of politics, where men held sway. She could keep these two halves together in one person, just as she pleasured both halves of my sexuality on our bed.\n\nAnd, perhaps more importantly, my child. That was the key, the connection between the private Varis and the public Sultanah. She would be my child and the source of my private love and joy. But she would be an heir and the receptacle of the Hanedan blood. And I felt the importance of both of my child's roles and the need to protect them both. I recognized that they were inextricably linked and that, it proved that my two halves were linked as well. I recognized that her existence showed the duality of her role, and mine as well. Mother and Sultanah in one. Woman and man. This child seemed to represent some unrecognized harmony within these roles. It tied my two halves together in a way I couldn't understand. I didn't really know how to express it. I could barely contain the idea as it was, but I could feel its truth.\n\nWhatever uncertainty or crisis of faith had conquered me before, I had moved past it now, re-forged as I was by the crisis. My problems had hardened me rather than broken me. My back was arrow straight and my eye was flame. I knew what I was going to do instantly, as though the plan was already fully formed in my mind and I simply uncovered it now. Maybe I had been working on it subconsciously. All I knew was that everything became clear to me.\n\nI gently extricated myself from my sister's grasp. She let me go easily, not protesting. She likely knew that I had business to attend to and did not want to stop me. She was there to support me now. I felt it and leaned on it. I would repay her in kind when the opportunity came. I rose from the bed after a while and went to my desk. I looked at all the papers, the failed attempts at letters scattered about. I picked up the one that I describe to Nislani, the final draft of my abdication.\n\n\"Are you going to get rid of it?\" she asked. I turned towards the bed and saw that she was lying on her side looking towards me. The covers were wrapped around her waist but her breasts were exposed, lying seductively against one another and draped in her long hair. She was smiling contentedly, her face unlined and beautiful. I looked at the papers again.\n\n\"No,\" I said and Nislani looked at me surprised.\n\n\"I thought...\" Nislani began, almost rising and sounding alarmed. \n\n\"I know what you think. But I am not done writing this letter. And when I am done, I have more writing to go,\" I said, \"Correspondence is woman's work, after all,\" I smiled at Nislani easily and she furrowed her brow. But I ignored her. She needed rest, after all, she was carrying my child. I turned back to my desk and got back to work.\n\n* * * * *\n\n\"I think I see them, yes you can see the vanguard's banner in the distance,\" Cin said. She was lifting her hand to her face to shield her eyes from the sun. Her hand was heavily bandaged, but it still looked strange. It would be stranger still when the bandage came off in a few days. She'd been wearing it for four weeks. Four weeks since the failed coup and so much had changed.\n\nFor one thing, King Sican and the legions of Dusman were once again camped in front of my walls. Closer, in fact, than they had been at the end of last summer, when they had killed my father. My soldiers were, once again, manning the walls. There were more of us now, though not nearly as many as I would have liked. More importantly, they were not all were as loyal as I might have liked, having pressed the former retainers of the Collaborationist lords into my legions. I looked to my left, towards the Duke's gate. I saw their rotten heads still on display there and smiled. It gave me strength. I would need it.\n\nNot that there was any indication of that now. Despite the presence of Sican and his army, the atmosphere was far different than it had been during the previous siege. And well that it should be. After all, Dusman was here upon my invitation. I had sent the letter I had read to Nislani after all. Everything I had written remained intact, expanded even. I apologized, I claimed ignorance as a woman, I lamented my weakness and my foolhardiness, I begged for aid, and I offered my sister's cunny to Lider. And a payoff as well. The imperial jewels as the price for my 'pardon.' I had caved entirely, just as a woman should. It is what my enemies had been expecting of me from the beginning.\n\nOf course, I had added more than that as well. I had explained to King Sican that I had found papers in Duke Hain's possession after the failed coup that indicated he was in league with King K\u00f6yl\u00fc of Temsilci, the King's most powerful rival and erstwhile ally. This much was true, documents to that effect were found. Similar documents were found regarding King Sican himself. That did not make it into the letter. Instead, I gave a date for the wedding and asked King Sican to arrive a week in advance. He had come three days ago and was waiting for the proper day. I had not received him yet, but I could see him strutting confidently in camp.\n\nThe people of \u015eehir did not understand what was happening. They heard rumors of the letter and there were surprisingly accurate accounts of the content floating through the streets. Soyguncu had heard it on lips all over town. The entire city seemed in mourning and there were bitter lamentations about the fall of the Empire and the inevitable sack that would follow. More than anything else, there was disillusionment with me. The people had placed all their trust in the Sultanah. She had led so bravely, and now she had simply given up.\n\nAnd they would have been right. I had been so close to that ultimate betrayal, that night with Nislani. But that seemed like so long ago now, four weeks later. It hardly made sense anymore. I was like I had been a different person, mad with grief. The grief was still there, but I drew strength from it. I understood the stakes better now. My shame and my anger were a part of my growth as the Sultanah. It was my final lesson, the final welding of my person into a whole. I understood that now. The people were wrong, of course, I had no intention of quitting now.\n\n\"Yes, I see them as well,\" I said. I could see Gunes' sun, the sun that had chosen me for my current task, blinking off of the shields of the vanguard. This was the fruit of my second letter.\n\nThis letter was largely the same as the first. The same apologizes, self-deprecation, and defeat. It included the same offer of payment and the discovery of Duke Hain's treachery, this time naming King Sican and Dusman. It event included an offer of Nislani's hand to a prince of the recipient's choice. That recipient was King K\u00f6yl\u00fc of Temsilci. I had given him an exact day to arrive for the wedding. That day was today. And it appeared that he was just on time.\n\nI should note that both letters contained something else. A warning. I explained to King Sican that King K\u00f6yl\u00fc's aggression was the impetus that had finally shown me that I was not equal to the task of government. I begged King Sican to come to rescue me and, in exchange, I would give him everything he wanted. He would be my champion. I said that my spies indicated King K\u00f6yl\u00fc would be attempting a siege soon, in contravention of his alliance with King Sican. I begged King Sican to come armed and ready, in case King K\u00f6yl\u00fc's army was to arrive before the wedding had occurred. Lo and Behold, my warning appeared prescient. Of course, the letter to King K\u00f6yl\u00fc had contained nearly identical information. Two knights in shining armor, but only one damsel in distress.",
        "\"I must admit,\" Cin said, \"this is clever, even by your high standards.\" I smiled. It felt good to have Cin back by my side, though I had noticed a change in her as well. She had, of course, conducted the ritual mourning that any Sun Priestess must abide by when her partners died. But, I got the sense that Cin truly mourned for Agiz and Got, that she was not simply going through the motions. She had returned to me, but I still felt the grief and melancholy on her, thick as my own.\n\nThis led me to a somewhat shocking realization. All this time, I had relied so heavily on Cin. She was my primary advisor, the person that I expected to have all the answers. But she had no foreseen all the dangers that lay ahead. And she had been brought low by the same forces that had nearly swallowed me up. I wondered to what extent Cin had come to the same conclusion that I had, that we were not playing a game and that we were meddling in forces far beyond our control? It felt to me that Cin had grown up in some ways, even if she had never seemed particularly childish before. But there was a hardness about her now that had not been there before and I felt it as a reflection of my own rising callousness. \n\nAnd I was growing more callous. I could sense that now. I no longer felt the need to protect the \"womanly\" parts of myself, to try to ensure that I maintained some semblance of \"soft\" feelings. I knew that part of me was in no danger, that it was locked deep inside of me where I could find it. Where Nislani could find it. Where my child would be able to find it. If anything, the callousness I cultivated on the outside served to better protect that half of myself. I embraced the nature of being Sultanah and with it my own sense of cunning and ruthlessness. \n\n\"It is going to be a tight thing no matter what,\" I said, gazing out at the field ahead of me.\n\n\"Yes, I have foreseen much of today, but much of it is still cloudy. But beyond prophecy, I have a good feeling.\"\n\n\"It appears that the letters placed them in the right frame of mind,\" I said and looked over at Cin. She smiled bitterly and I could sense word 'revenge' throbbing behind her smile.\n\n\"You have dangled a damsel in distress. Two really counting Nislani. How can chivalrous gentleman refuse? Throw in a chance to humiliate a rival and there is really nothing better. It was a trap they were born to fall into,\" Cin explained. Her reference to my wife made me think of her briefly, hiding deep in the depths of the palace, waiting nervously for the results of the day's action. I thought of our child and hoped that everything would go off as I planned. But I shut those feelings out. There was no time for them now.\n\nThe plan itself was the fruit of months of preparation. The girl who ran through the narrow streets to ring a bell all those nights ago could never have even suggested a portion of this plan. But I had learned so much in so short a time. I had learned to trust in Gunes, to rely on myself, to value my friends, to control the government, to consider my dynasty, to believe in my people, to enjoy my role, and, most importantly now, to punish my enemies. And I learned how to do all of that as a woman. And all of that would come into play now.\n\n\"They expect a woman and so I gave that to them to rely upon. They wanted to believe so badly that I could not handle it that they took any excuse to believe it. How easy to turn boys against one another over a pretty girl, like this city. Why fight so hard to be considered a man when being a woman can be so much easier?\" I asked. Cin laughed coldly. But at that moment, we heard a voice down below. A scout had come running up to the walls of the castle. His face was red and he was out of breath. He was one of Sican't men.\n\n\"Lady Varis!\" the man said, careful not to refer to me as Sultanah, \"Your reports were correct, the enemy has arrived on the field.\"\n\n\"Oh dear!\" I said, \"Whatever shall we do!\" I tried to sound as though I was on the verge of panic.\n\n\"King Sican is hardly afraid my lady and I advise you to follow his lead,\" he said.\n\n\"He is so brave, I will rely on him greatly,\" I said and Cin suppressed a smile.\n\n\"He is drawing his men up into formation and will repel the attack. He asks that you provide your legions for his use. Your Colonel Saygili may lead your troops, but he needs them,\" the soldier replied. Saygili had been demoted when he was inducted into the Dusman army. He didn't complain. He was one of the few people, and perhaps the only man, who knew all that would follow his induction.\n\n\"Of course, of course, I should have thought. No I shouldn't have, it is not my place. Thank Tanri for King Sican,\" I said and Cin sighed now, concealing a laugh, \"I will collect them immediately.\" With that I made a signal with my hands. Soldiers at the palace had been waiting for that mark. As I did so, they unfurled a giant banner that fell down over the sides of the palace, covering several floors in thick fabric. A giant field of yellow with a fiery yellow sun planted in the center. \n\nKing Sican had been told that this was my signal for my legions to assemble and prepare to fight. King K\u00f6yl\u00fc believed that it was a signal to my legion to prepare to sally forth, to attack King Sican who was besieging my city. My legions, already assembled inside of the Duke's gate, stood silent and waited for a different signal. \n\nRegardless, the soldier clipped a quick salute and then immediately ran back towards his camp. King Sican was out in the camp now, looking calm as he roused his troops and moved them into position facing away from my walls, to protect \u015eehir from invasion. I saw his son as well, Lider running around, somewhat panicked and trying copy his father's cool. On the other side, I saw the legions of Temsilci rapidly filing into the valley outside of my city. They wanted to get the jump on Sican, to strike before the Dusman army, which was slightly larger, could get into position (though even Temsilci's army was several times larger than my own). Just as I had hoped. The armies moved quickly, expertly. They were clearly better trained than my own legions, though the gap was shrinking.\n\nI am no military historian and I feel no need to recount in minute detail The Battle of \u015eehir. If you require all of the back and forth of the battle and to feel like your hands are in other men's guts, I commend you to the history written by Tarih\u00e7i or the famous play by Yazar. I believe a rough sketch will suffice for our purposes.\n\nThe armies moved quickly into place. They both wanted to strike before the other gained an advantage. Further they were both fired by the supposed betrayal perpetrated by the other. Sican had prepared some shallow trenches for his men (not really expecting an assault) and his men filed into these. King K\u00f6yl\u00fc was no put off by this maneuver, despite the differences in numbers. In fact, he opted to counter it with a rather unimaginative frontal assault. He simply moved his men in place in a line and then pounced on Sican's center.\n\nIt was mid-afternoon when the battle started and there was still a great deal of time before dark. The evenly matched armies ensured that this was butchery. Twelve times, King K\u00f6yl\u00fc's forces charged into the trenches held by their enemies, hacking into them and trying to dislodge them, to make a breach in the line. Each time King Sican's forces pushes them back with great losses. Sometimes the Dusman lines wavered or even cracked. But the trenches were then filled with new troops and the enemy was repulsed. The more vicious the fighting, the angrier the participants became, fueling still more vicious fighting. Soon, it had spiraled out of all proportion to rationality and scores of men fell dead as the price began to outweigh the prize.\n\nAfter Temsilci's eleventh assault, the scout who had spoken to me before, returned to the ground below the Duke's gate. Cin and I had watched the battle develop directly below us with mounting horror. We did not speak, but simply watching thousands upon thousands of men hack themselves to death before our eyes. I felt pity for the individual men involved. But, like me, they were trapped by their fates. I had made the best I could with mine, I hoped they could say the same.\n\nRegardless, the scout arrived, drenched in blood with his left arm hanging limp at his side, \"Lady Varis, King Sican begs to ask the location of your legions. The fighting, as you can see, has been hot. We are holding on, but they are giving us everything they have. Your men could turn the tide!\"\n\n\"Oh yes, of course!\" I said fluttering my hands in front of my face, \"I just...I am so scared. There is so much blood.\"\n\n\"Please my lady!\" the man begged.\n\n\"Of course, of course, I will have it done!\" I said. The man saluted and then quickly rushed down to the battle. I looked at my men, standing solemnly and listening to the sounds of battle. I could also see townspeople in the streets, listening to the carnage with confused and terrified faces. It would be some time before everything became clear. Even for me. Nonetheless, I said nothing to my soldiers. They waited.\n\nTemsilci's soldiers came again, one more attempt to break through Dusman's lines. Soldiers on both sides were exhausted and bloody. There were no reserves left. They had thrown everything they had at one another. Temilsci's soldiers made a small breach in the Dusman lines. King Sican himself saw the breach and bravely rushed into it, striking down common soldiers and willing his men to victory. Heartened by the display, Sican's soldiers rallied, plugging the gap and throwing Temsilci's soldiers back. However, this time, rather than allowing Temsilci to retire in good order, Sican pushed the action. He rose out of the trench and began to pursue his enemies. His men followed his lead, driving Temsilci back.\n\nKing K\u00f6yl\u00fc's men, exhausted by the battle and responding to a rumor (later proven true) that the King himself had died in the assault, crumbled into a mass. They dropped their weapons, turned tail, and ran. Armor and weaponry fell by the wayside as Temsilci's army ceased to exist. Exhausted, King Sican and his men broke off their assault, they cheered and laughed, the battle won. Horns began to sound as Temsilci's men made their way rapidly back to the woods in the distance.\n\n\"There you bitch!\" I heard a voice say, I looked down and saw that King Sican had moved his way back through the camp and come down near the wall itself. He was standing just a few hundred feet from me, looking directly at me, \"You were too cowardly to fight. The Empire missed its last chance at a victory! Tomorrow, my son marries your slut and we end this thing!\" I placed a shocked look on my face. But I loved every moment of it, I drank in his hatred and used it to fuel my fire.\n\n\"How dare you speak to me in such a manner,\" I said, making it sound good. Cin also placed a shocked look on her face.\n\n\"What will you do about it? You are afraid to lift a finger!\" he said. My eyes darted up towards the woods where the Temsilci army was retreating. I strained in the distance and, after a moment, I saw what I prayed I would see. I smiled and then carefully placed my hand out in front of me, lifting my finger and pointing towards the woods.\n\n\"Are you sure about that?\" I asked, my voice coming out icy cold, no longer a little girl's voice. It was Sulatnah Varis' voice, in all its commanding terror. Sican furrowed his brow and then turned around quickly. He could hear a murmur from his troops. He looked back at me once angrily and then dashed off towards the front again. When he got there, he saw what I saw. The soldiers of Temsilci, streaming back towards his lines. But not in an orderly army as before. They were running, as they had once been running in the other directions. Their arms were flailing, their eyes panicked, they were unarmed. Behind them, were the recipients of my third and final letter.\n\nThe horsewomen of Anaerki had come pounding out of the woods even before the Temsilci army had reached the shadows of the trees. They had been waiting for this moment since morning, hiding away from the road that Temsilci had arrived upon, but otherwise fanning out. I had told them to be here. I told them that two great armies would fight each other to exhaustion and then, when one side faltered and their advantage in numbers was least effective, they were to burst from the trees and create havoc. I saw Mader\u015fahi in the front of the pack, her daughter K\u0131z right next to her. Both were armed and brought death with them from the shadows. It spread out along the width of the plain, shepherding all of the Temsilci soldiers in one direction, back towards my walls. It seemed I had learned the importance of alliances as well.\n\nIn a few moments, the disordered soldiers of Temsilci crashed into the Dusman lines once again. No longer attacking, simply in a blind panic and attempting to escape from the armed, fresh riders. Dusman's troops had become slightly disorganized by their victory. Now the return of Temsilci's troops deepened that chaos. The Dusman soldiers attempted to kill some of the fleeing Temsilci troops, but many were unsure of what to do. Soon, rather than two armies, there was one large, disorganized mass. King Sican began to scream at his soldiers and even those of Temsilci, trying to get them to form into new lines to repulse the mounted troops. But the Anaerkis were hot on the Temsilci heels. In just a few moments, they would crash into Dusman's disordered lines.\n\nI turned my head and looked down at my legions massed at the Duke's gate. I saw Saygili in the front, looking up at me. My soldiers were in ordered lines. They knew what to expect. Saygili looked up at me and nodded. I turned to Cin, \"Now.\" I said calmly. Cin relayed a message to the men in the gatehouse. They cut the line and the door to the gate collapsed. \n\n\"Forward!\" I heard Saygili's voice cry and I watched as my legions poured forth from the city, into the enemy's rear. With our allies, we surrounded our disorganized foe, despite their still apparent advantage in number. \n\nWhat remained was not a battle. It was a slaughter. The Anaerkis smashed into the enemy mass, sending them reeling in confusion and pushing them directly into the organized ranks of my legions as they poured out of the city. Panic infected the Dusman soldiers and they melted into confusion. The ground was soon red with their blood. The sights I witnessed that day went beyond all legend and myth in terms of carnage. Bodies were rent apart like rag dolls and the screams of the slaughtered filled the air like the chorus of Hell. I kept my eyes focused on it, felt my lips curl in a snarl. I felt only one thing as I watched the carnage. Pleasure. \n\nAnaerki lost two women in the attack. My legions lost four men. A handful were wounded, only one greatly enough to earn a pension. The enemy armies had ceased to exist as fighting forces.\n\n* * * * *\n\nNot an hour later, having climbed down from the tower, I was walking with Cin through the shattered remains of the Dusman camp. My soldiers and the horsewomen of Anaerki were still rounding up stragglers and killing any that resisted. I felt totally and completely safe walking on the battlefield without armor, trodding on ground where men had just minutes before been fighting and dying. Cin and I did not speak. We simply looked at the butchery. And smiled. Everything had worked out according to plan. Better, in fact, as I was about to learn.\n\n\"Sultanah,\" a small voice said to one side. I turned quickly and saw Soyguncu standing just a few yards away. She had been out on the field during the course of the battle and she was covered in blood. I knew that she had not been directly involved in the fighting, but even acting as a scout and spy had brought her in contact with untold amounts of death. Her skin looked pale and her eyes were slightly wild. It seemed she was ready to make her contribution to the bloodbath, if I was willing. To that end, there were two men on their knees on either side of her, she had knives at their throats, \"I protected these two, I figured you would want them.\" She said, her voice shaky with emotion. I looked at the dirty men at Soyguncu's side. A feeling of warmth filled my heart and I smiled more broadly.\n\n\"Traitor Hain, False Prophet Rahip. It is a rare pleasure,\" I said, my voice sounding thick, almost velvety. Four weary eyes rose and glared at me. Both men had, apparently, been involved in the fighting. I assumed Hain was more closely involved in the action. His face was coated in blood and his expensive armor was in tatters. I was not sure which army he had fought for, but it didn't matter now. Rahip was simply covered in dirt and shit. He looked even more like a corpse than the last time I had seen him. I was not even sure if he was actually aware of what was happening around him. Nor did I particularly care.\n\n\"You filthy bitch,\" Hain said. Soyguncu moved silently, slicing off part of the Duke's ear. He screamed in pain and writhed on the ground. Soyguncu smiled. I laughed.\n\n\"It seems you will never learn manners,\" I said coldly, \"That is what got you in trouble last time.\"\n\n\"I told K\u00f6yl\u00fc not to trust you letter,\" he hissed, not responded to my gibe, \"I told him that you were slippery as an eel and clever as a rat. I knew this was a trap.\"\n\n\"And yet, dumb as a rock, you walked right into it,\" I said.\n\n\"I would never miss my opportunity to end you, you whore! I would die a thousand times to kill you once,\" he said, more defiant than ever. Our games and plots were clearly at an end. Everything was out here in public now, there was no more room for maneuvering. Hain, it seemed, recognized that he was totally lost, at last. I felt oddly cold about it.\n\n\"I do not need a thousand revenges,\" I said, \"just one.\"\n\n\"Be done with it,\" Duke Hain said in a tired voice, \"I have no money for a ransom. Kill me now and end this charade,\" he said. I smiled at him now and considered my options. \n\nAs I thought about it, about the events of the day and then further, back into the past, I felt so strange. These two men, especially Hain, had been such an important part in my evolution to the Sultanah. They were my initial adversaries. The furnace that heated my metal and burned out my impurities. The final coup, their last attempt to violently pull me from this world, had been the impetus for my final transformation, the communion of my spirit with that of the Sultanah. But now, seeing them covered in mud and shit...they seemed so small. Next to the size of my ambitions, they were nothing. Compared to me, they were less than nothing. They had been tools, a means to an end. They had served their purpose in making me capable of rebuilding the Empire. Now there were such...little things. Broken items to be cast aside. So far beneath my notice that I suddenly felt embarrassed speaking to them. Killing them would almost feel petty, like holding a grudge against an animal. Suddenly, I knew what I needed to do to maintain my dignity.\n\n\"No...\" I said, \"No, I do not think that is appropriate. I would not want your death on my conscience. Rahip was once a man of some sort of god. And Traitor Hain, how could I look your daughter in the eye while I fuck her, knowing that I put her father to death?\" I asked. Hain's eyes grew wide with rage and he began to rise. Soyguncu's knife bit into his throat and he sank again.\n\n\"You lie!\"\n\n\"I suppose I do. I often can't see your daughter's eyes, the way I fuck her,\" I shot back. Then, before Hain had a chance to respond again, I spoke quickly, \"gouge out their eyes in the old imperial fashion,\" I told Soyguncu. Then I looked at my enemies again, saw the despair in their temporary eyes, \"And...cut off their cocks too. Only a Sultanah really needs one of those. Make sure you burn the wound so they don't bleed out, I want them wandering the world. Hang their bloody cocks around their necks.\" I grabbed two guards and sent them over to Soyguncu, to help her with her now squealing charges. I didn't bother to look. ",
        "I felt the weight of my decision and the flame inside of me was stoked higher. I suddenly felt the true depths of my power and the extent of my destiny. After shoving these two, inconsequential items into the past with other childish things, I could suddenly see the distances ahead of me. I felt no fear, only joy in the tasks ahead and excitement that I could start so soon. The day's business was still far from finished. \n\n* * * * *\n\nIt was dusk and Cin, Saygili, Mader\u015fahi and I were walking through the battlefield together. It smelled of blood and shit and we could hear the screams of the wounded. The towns people were out, picking the pockets of the dead and searching for valuables. Some soldiers were with them, but Saygili generally kept discipline intact. I didn't really care, I had more important matters at hand. I ignored the gore and misery and headed towards the living prisoners. There were many. No one alive had escaped. As I walked, Saygili debriefed me on the results of the battle.\n\n\"Nearly half the lords of Temsilci were killed in the battle. Not half of the ones present. Half of them total,\" Saygili explained, \"Dusman faired better, a third of those present died. But we have taken over half the total prisoner. There were around 20,000 common prisoners.\"\n\n\"Take me to the nobles,\" I said coolly. We picked our way through the dead until we came to a circle of horsewomen. They had dismounted but we found them using their horses as a fence. There were almost five hundred noblemen in the circle. They looked exhausted. Angry. The circle of horses parted and my small party crossed through the lines and entered. \n\nWe just happened to enter near the spot where King Sican himself sat with his hands above his head. His cool features were coated in blood and he looked near exhaustion. However, he still appeared formidable and I could sense his hate emanating off of him. I already knew that his son had fallen in battle. As he saw me, he rose quickly.\n\n\"You deceitful bitch!\" he began. I suppose that I could have pointed out his hypocrisy, or note that he was hardly in a place to call names, or simply protest that I deserved greater respect. But I did not have time for that. My realization regarding the nature of my fate had cast the \"King\" in an entirely new light as well. Besides, there were optics to consider.\n\n\"Mader\u015fahi, kill him now,\" I said.\n\n\"Wha...\" King Sican began but a sword sliced through his throat instantly and he dropped a corpse on the ground. I didn't even look at him again. He was beneath notice. Although his men noticed. Eyes grew wide and a hushed conversation passed back and forth between the assembled armies. No one killed Kings. Now one killed the most powerful King in the known world. Men looked at me as though I had lost my mind. But everything came naturally to me now, I knew exactly what I was doing.\n\n\"That was a rather large ransom you decided to forego,\" Saygili said with awe, looking at the corpse. He was, of course, correct.\n\n\"Some messages are more important than money,\" I said. Then I spoke louder, so that all of the lords and the horsewomen, my legions, and even the captured common soldiers beyond in the field could hear me more clearly, \"The region known as Dusman has been in rebellion from the Empire for centuries. This man, the Outlaw Sican, has claimed to be the 'King.' As he openly professed his treason, there was no need for trial. B\u00fct\u00fcn D\u00fcnya does not recognize underkings and so the outlaw was killed.\" This point had come home to me so clearly when I had seen Sican arrive a few days before. I could not conceive of why the Empire had ever tacitly offered legitimacy to the descended of raiders and pirates. I decided that I would revoke that legitimacy, as was my right as the only true Empress in the known world. However, there was more than just this. I had other rights to the other men standing and sitting around me.\n\n\"Further, I do not have the troops necessary to taken prisoners at this time. To the common soldiers. You have been misled in your treason. By rights, as soldiers, you belong in my legions. Join me now and accept your full pardon and a role ensuring the continued glory of our empire. The legions today are reborn. Your presence in the army will ensure the safety of your families at home,\" This was for practical, rather than magnanimous reasons. Of course, I truly believe that the common soldiers surrounding me were simply doing what they had been told. And I felt for them in their awkward position. But I would have disposed of them easily if I believed it was in my best interest. As things stood, I had large ambitions and insufficient means to make them a reality. By offering a chance to serve to my enemies, I bound them to me in gratitude and would swell the ranks of my own army.\n\n\"To the so-called vassals of the Outlaw Sican. Your treason was as great as his. I cannot trust you. Whatever land you held for him is forfeit and belongs to me. I will appoint governors and maintain ownership on my own terms. These will not be feudal territories. The true Empire is reborn this day. You are lucky that you get to die on such a momentous day. I feel for you no personal animosity. Nonetheless, good bye,\" And with that, I snapped my fingers. The Anaerkis did not hesitate. The Lords were unarmed but still attempted to run and fight. They were exhausted and overwhelmed, the struggle did not last very long. Hemmed in and panicked again, they died like their king. \n\nI have thought about that moment many times. Wondering often why I was not, as I suspected I would be, haunted by my actions. I ordered the death of the rebel nobles in cold blood. Perhaps it was a crime. I know I lost even more money on ransoms for those men all together than on Sican himself. I honestly could not hold 500 prisoners, not with the plans that I had. But such transactional consideration would be cold comfort for a \"moral\" woman, for the private woman I once was. \n\nMaybe it all boils down to this: I was the Sultanah, the actions that would be moral for a normal person were no longer moral for me. Sometimes, in defense of a monarchy, in defense of absolute power, personal immorality is a virtue. It had taken me a long time to learn that, it was the final lesson necessary to make me fit not just for my throne, but for re-conquest. And I had taken that lesson to heart and applied it well. Time and time again I was asked to do what I believed was both right for my Empire and wrong for my soul. I always chose duty over self. And I was always, in the long run, successful. If a Sultanah's actions can be judge by results rather than by some arbitrary moral standard, my decision was a success. All 20,000 commons joined the legions\n\n* * * * *\n\nThe rest of the campaign developed quickly. Without even waiting for a night's sleep, I quickly organized all of my new troops into legions under trusted subordinates. Saygili remained in overall control. I appointed Loyalist lords to other posts. From this point forward, appointment to official government posts, not the possession of private honors, would be the mark of distinction, as it was in the old days before the Empire began to crumble.\n\nThe heads of society in Dusman and Temsilci had been decapitated in the Battle of \u015eehir. More importantly, my legions moved faster than the news. Within a few days march, we had arrived outside of the capital of Dusman. There were few soldiers guarding the walls (which were not nearly as formidable as \u015eehir) and none of the important nobles were left to lead them anyway. We assaulted the walls easily, carrying them within an afternoon. All minor lords found were put to the sword. The commons were pressed again into service. Actually, they joined willingly, seeing their mates and knowing there was a chance for plunder in far off lands. They had no loyalty to any false King who became rich on their toil and they would follow whoever led them properly. We left Dusman with more soldiers than we'd arrived with. And we went straight for Temsilci. Again we arrived before the new and captured the capital there as well, even more easily. Again, the legions blossomed. \n\nFinally, news reached Surgun and they sued for peace. I reluctantly agreed, knowing that it would take time to consolidate my gains. I did not recognize Surgun and their 'king' referred to me as 'Sultanah and Empress,' in my letter. I would deal with him later. In the meantime, I took the land for myself and gave the riches to my allies, the Anaerki. In a lightning campaign, the Empire was back, ballooning to several times its size. I felt little elation in the conquests. Instead, I felt a deep, calm satisfaction. I was putting things to right and I could feel the rays of Gunes support shining down on me, approving everything I'd done.\n\n* * * * *\n\nJust a few short months later I was standing in palace, preparing to walk out onto my balcony. Through the curtains, I could hear the people in the streets below, I could sense their excitement. They had come from all over the empire, from the farthest reaches of the old 'kingdoms' of Temsilci and Dusman to show their affection and submission. I was excited as well. After all, I held my first born child in my hands. Ili\u015fki had been born just a few days earlier and she was as beautiful as her mother, who was on her way to a full recovery from a harrowing pregnancy (Nislani was nothing if not dramatic). An heir to the Hanedan dynasty. And today was the day when I would introduce her to her adoring subjects. She was, as Cin predicted, a woman just like me. And one day she would be their Sultanah. And the Sultanah of more lands not yet re-conquered.\n\nBeyond the curtain, I could hear Cin speaking to the crowd, \"All rise for Varis, Sultanah of \u00dclke and first of her name since the founding of the Hanedan dynasty, Emperor of B\u00fct\u00fcn D\u00fcnya, Lord-Mayor of \u015eehir, Conqueror of Dusman and Temsilci, restorer of Imperial dignity, living representative of Gunes on Earth, Defender of the Faith, and scourge of the Earth!\" A smiled crossed my lips as I pushed through the curtains, holding my daughter. I did not smile from joy. That was no longer a public emotion that I was capable of feeling. It was something else, something that would surely terrify my enemies. I smiled because every word of Cin's address was true. And I wasn't nearly done yet. \n\nThe End\n\nSo that is it. I appreciate everyone who read the story (or will read the story in the future). I hope that it kept your interest through all this time and was more than just a quick porn story (but I also hope it was still hot). I am unlikely to return to Varis' life, or even to \u015eehir. That was a ton of work and I think I have said everything I wanted to say. But I still want to know what you think about this story (either this chapter or the whole thing). I am going to keep writing for you, so I want to know what works and what doesn't. And if someone comes up with a truly excellent idea for a sequel or a side-story, I am totally willing to re-think my decision.\n\nTo the people who asked about the inspiration for this story, it was simply a desire to write about a medieval fantasy world in a Near Eastern locale. I guess a lot of it is very loosely-based on what happened to the Byzantine Empire (Eastern Roman Empire), except there was no revival there. Also, good eye to the person who cracked the code on the names. English words translated on Google into Turkish (and then sometimes scrambled up a bit to ensure code wasn't broken for really important names).\n\n*****\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. Especially on a massive project like this, it took a year to write and could take longer to edit. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks.\n\nYKN"
    ],
    "authorname": "YKN4949",
    "tags": [
        "epic",
        "medieval",
        "serial",
        "tranny of female",
        "shemale on female",
        "oral",
        "incest",
        "sisters",
        "hermaphrodite",
        "sister-sister"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-sultanah-ch-14"
}