{
    "title": "It's In The Wrong Catagory",
    "pages": [
        "I heard the chime, a soft bong that let me know I was needed at the door. It was Friday night, and we had a good crowd. I caught my bartenders' eye and motioned towards the door. It usually took two of us to keep up on the weekend, but this wouldn't take long.\n\nIt was probably an invited guest, arriving late. I'd verify they were on the list, let them into the foyer, and get the member to escort them in. No one was allowed in unless escorted by a member. If they weren't on the list, I'd get verification before they could enter.\n\nThere were two men, about my age, just under thirty, waiting at the door. Even if they were invited, they would not be allowed in because they wore jeans and tees. Jeans were not allowed, collared shirts and slacks only.\n\nYou never knew, though. One of our wealthiest members owned two construction companies, one of them specializing in laying water pipe. He'd show up covered from head to toe with mud, slip into the locker room, shower and don clothes he kept there before going to the bar.\n\n\"Good evening gentlemen. May I help you?\" I asked, politely.\n\n\"We need a word with Jerry Stone. Bring him to the door!\"\n\nI didn't like his attitude, but he had asked for me. Maybe they were looking for work, we were subbing out some golf course improvements.\n\nI held out my hand.\n\n\"That would be me, I'm Jerry Stone, and you...\"\n\nThat's all I got out before the taller one caught me completely by surprise with a right cross. Before I could react the shorter, heavier man gave me a shot, knocking me down.\n\nEver notice you think of the oddest things while under duress? I was thinking how far I'd come from the biker bars I started out at, where I perceived everyone as a threat, to the the country club I worked at now, with its' civility and refinement.\n\nThey had me down, going at it pretty good, when I got lucky.\n\nThe chief of police in our midsized town and an assistant district attorney, an ex cop himself, were just entering.\n\nThe chief let out a yell, and they shoved them off me. I came up mad as hell, ready to mix it up, but by then the chief had them both under the small revolver he discreetly carried at all times, a requirement for his job. His service weapon was a Glock, but he didn't think it was a good idea to advertise he was armed, so he kept the revolver in his pocket, a Smith & Wesson .327. I've fired one, and for their size they pack a hell of a punch.\n\n\"What the hell is wrong with you?\" I was almost shouting. \"Who are you?\"\n\n\"You know who we are, motherfucker, we're the husband of the two wives you been bangin'\"\n\nI was really pissed now.\n\n\"Listen, dip...um, idiot, I've never seen you before, or your wives, as far as I know.. I don't date married women. It leads to stupid sh....stuff like this happening.\"\n\nThe ADA was grinning.\n\n\"Thanks for sparing our delicate ears Jerry, but these guys really are dipshits. Wanna press assault charges? I can could come up with some pretty good witnesses.\"\n\nI looked them over. They both looked like they were gonna shit in their pants, thinking about what could happen.\n\nThe Chief grinned.\n\n\"Yeah. Aggravated assault. Felony trespassing. That would stick because they specifically came here to do you harm. We could probably figure out a few more, if we think about it.\"\n\nThe shorter one looked really scared. The taller one still looked pissed.\n\n\"We wouldn't be here if this asshole hadn't fucked our wives. It's his fault.\"\n\n\"You're making it real tempting to press charges. What makes you think I'm screwing your wives? I'll give you one chance to tell your story, but not out here in front of the members.\"\n\nI turned to the Chief and ADA.\n\n\"Will you accompany and our 'guests' here to the office? I'd really like to straighten this out.\"\n\nI turned to the two.\n\n\"You won't mind giving us a few minutes of your time, would you? I'd like to settle this now, before you decide to to hide in the dark waiting for me.\"\n\nThe tone of my voice let them know it wasn't a request. The chief made them give him their ID first, and then we went into my office.\n\n\"Talk. Why do you think it's me fooling with your spouses?\"\n\n\"Because the stupid bitches told us,\" snarled the tall one.\n\n\"In those exact words? Jerry Stone is having sex with me?\"\n\nThe short one spoke up.\n\n\"Yeah, pretty much. Even told us where you were.\"\n\n\"Really? Anyway you can get them to come and verify that?\"\n\n\"Damn straight. The stupid bitches are in the car waiting on us.\"\n\nThey described the car, and the ADA walked outside and invited them in. They came in timidly. One had a pretty good bruise on her cheek, the other had bruises on her arms, looked like someone had gripped her a little too tightly. They weren't ugly, or beautiful, just average. If they hadn't been bruised and scared to death, they might have been a lot prettier.\n\nOne looked around, confused.\n\n\"Ladies, do I know you?\" I asked gently, trying to put them at ease.\n\n\"I've never seen you before, mister. Where's Jerry? This man said he was in here,\" she said, pointing at the attorney.\"\n\n\"How about you?\" I asked the other. \"Do I look familiar to you?\"\n\n\"Nope. What the hell is going on here?\"\n\nI pulled out my wallet, showed her my license.\n\n\"You're Jerry Stone? Are there two of you here?\"\n\n\"Sorry ladies, I'm the only one here with this name.\"\n\nThe men started to look even more pissed. The tall one, obviously the brains of the outfit, snapped at his wife.\n\n\"Bitch, you better not be lying to me.\"\n\nHe was apparently trying to dumb himself into jail.\n\n\"I swear, I don't know this guy,\" his wife wailed.\n\nThe Chief had heard enough.\n\n\"Boys, apologize to this man, and promise him he'll never see you again, and he might not press charges. I've got your ID, think I'll call Sheriff Costner, let him know about your little adventure.\"\n\nHe pulled out his phone, took a few pictures of the bruises.\n\n\"I'm sure he'll drop by tomorrow, check on these ladies. If he finds any more bruises, he won't be a happy man. His mother was battered by his dad, and he doesn't have much tolerance for this sort of thing. Make peace or spend the night away from each other. Understand?\"\n\nThey nodded, looking ashamed. I let them go, it wasn't worth the hassle of going to court.After warning them I wouldn't be so forgiving if I saw them again, I let them go.\n\nWe walked them to the door, and I wondered how the women could be seduced by the same guy. He either had a line of shit a mile long, or they were really dumb. I suspected a mixture of both.\n\nJust as we hit the foyer a man came in, headed towards the bar. He just barely noticed us, but one of the women stopped.\n\n\"Jerry?\"\n\nHe looked over and went pale.\n\nBoth girls were clamoring his, er, my name. He whirled and ran back out the door. The men, the women, and the Chief charged out after him. The ADA looked at me and grinned.\n\n\"Mystery solved, huh?\"\n\nI just sighed, walked back into the bar, and made a phone call.\n\n.................................................\n\nI never started out wanting to be a bartender, it just kind of happened. My parents had six kids. Mom stayed home to raise us, and Dad worked every hour he could get in the paper factory. There wasn't a lot left over for extras, and none for higher education. My uncle owned a bar and grill, a real dive, but he poured an honest drink, the kitchen was clean, and the food good and reasonably priced.\n\nHe gave me my first job, bussing tables and washing dishes. I went from that to short order cook, and when I got old enough, bar tending. On the way I got lessons in all kinds of things. Like how to spot trouble.\n\nIt's hardly ever the loud ones that start anything. It was the quiet ones you had to watch. Something might upset them, and they'd stay off by themselves, going into 'drinkin' and thinkin' mode, as my uncle was fond of saying. Then they would get the magic drink in them, and explode.\n\nI learned that in my county if someone started trouble, you didn't call the cops, you handled it yourself. Call them too often, and they close you down for being a nuisance. Also, when you're working, there's no such thing as a fair fight. You want to minimize the impact on the crowd before they might decide to join in. So you jump them hard and fast, and make them hurt. Do it once or twice and they learn to behave, or you bar them.\n\nI got a few bumps and bruises, so I learned how to fight, rough and tumble at first, but I got tired of getting hit, so I took a few lessons. I didn't want a belt, I just wanted to be able to defend myself.\n\nWhen I was twenty my uncle shot and killed a guy who had stabbed him. He didn't go to jail, but the church ladies rose up, and he had to close the place down.\n\nOver the years I worked at better places, going to school part time. Even went to bartending class and tried to keep a straight face long enough to get a certificate. I was almost through my last year, soon I'd have my degree in hospitality management.\n\nI'd been in this job three years, going from bar tender to assistant manager to manager. I was also in charge of the restaurant. I worked ten and twelve hour days a lot, but I never complained. I was hoping for overall club manager in a few years, and in a place like Briarwood Country Club, that came with a near six figure salary.\n\nI could work these hours because I didn't have much of a home life. I'd never married. The divorce rate for bar tenders is astronomical, among the highest per profession in the country\n\nI was serious about one girl, and she developed the habit of coming in while I worked so we could spend my breaks together. She was young, bored, pretty, and the wolves closed in, talking her up and feeding her alcohol, until one night she went missing. I walked outside and found her on the backseat of some asshole's car, panties dangling off her ankle.\n\nI beat the shit out of him, dumped her, and went to work at a better place. She tried to apologize, and I truly believed it, but the damage was done.\n\nMy uncle felt a little bad for me, then he laughed.\n\n\"What did you expect? Letting her hang around was like taking your prize hen to a weasel convention.\" \n\n................................................\n\nOne universal truth I'd learn in this profession, there's always somebody who wants to fuck the bar tender, from socialites to bar flies to out and out sluts.\n\nIt didn't take me long to figure out this was job suicide. If you pissed off the right husband or boyfriend, or wife or daughter, you were out the door.\n\nI learned to define the balance, lightly flirting with wives and girlfriends while still keeping a distance. And I never once came close to crossing the line, either to an inferred offer or a direct one. It was pretty hard sometimes, the ladies had their own cards and were actually there a lot more than their men, who were off working to maintain their lifestyle.\n\nThe benefit was they learned they could trust me, so they often sought my opinion on different things. This was especially valuable if they wanted my opinion on gifts. Since I knew their husbands as well, and men often talk about things they don't think the wives would be interested in, I had an edge.\n\nOne husband loved fishing, so his wife surprised him with a fishing trip to a luxury mountain resort, where he could chase trout during the day while she tanned by the pool, shopped, and visited the spa. And in the evenings they enjoyed each other, thanks to my friend in the lingerie business. I had a friend that tended bar at the club there, and let him know I'd appreciate it if he took good care of them. He was happy to agree, knowing he'd call in the favor someday.\n\nI did the same for the men. Pretty soon they figured it out, and they would tell me directly what they would like, so I could pass it on to the spouse. Some were unusual, but most were simple.\n\nOnce I was asked by a wife if she could trust me.\n\n\"On most anything that isn't too immoral or illegal. A good bar tender can keep secrets better than a priest.\"\n\nIt satisfied her, and she told me of a sexual fantasy she wanted to play out with her husband. Seemed she was fascinated by being bound to a bed, giving her husband free access to do anything he wanted with her. She wanted to give it a try, but was afraid to tell her husband.\n\nIt took awhile to finesse him to the point, and a little help from my lingerie contact for the proper equipment. She dressed her, bound her down to the bed in the hotel room she'd rented, and left right before he was supposed to arrive. I had the keycard.\n\nI stopped him at one drink.\n\n\"You've had enough to drink, Mr. Reynolds. Your wife wants you to follow these instructions to the letter. She wants you to be open and understanding, and give her this birthday gift. Enjoy your night, sir.\"\n\nI didn't see them for three weeks, and worried that I had alienated a member, when she came in glowing, wearing a sliver choker with a sizable diamond in the middle. She told her friends he had gotten it for her birthday.\n\nLater she caught me alone.\n\n\"You know this is my collar, right? It's all in fun, of course, but I can never thank you enough, and my husband wanted you to have this as a token of appreciation.\"\n\nFive hundred dollar bills, wrapped inside a pair of very tiny, very moist panties. She giggled.\n\n\"I wrapped it myself. Make sure we get the most intimate table tonight, will you dear?\"\n\nI gravely thanked him for the tip later, after he'd been at the table for half an hour and had his wife practically dancing on her seat. \n\nHe grinned, held his hand out to his wife, and she licked his fingers while he thanked me for my service. I was promoted to assistant manager two months later. He was a major backer.\n\n................................................\n\nEvery bar tender worth a damn has a book. It takes years to make a good one, but once you do, it's worth it's weight in gold. If requested, I could give you the name of the best mechanic or plumber in town, discreet doctor or divorce lawyer, and talk them into expedient service. My friend the lingerie dealer was in it, as were bar tenders in three states. I also had an understanding with a bookie and several escort agencies. \n\nThere again, a fine line had to be walked. If a guy developed a gambling problem and it caused trouble with his wife or financial hardship, guess who got the blame. Same with escorts, if the wife got wind of it, so long job. So I put in fail safes. The bookie would only let the guy have two bets unresolved at any one time, and the women were very discrete. It didn't help either of their businesses to get unwanted publicity. None of these people gave me money, I didn't gamble, and I could pretty much get laid anytime I wanted free. But if I needed a favor, they were there. \n\nMost of the time I tried to steer them to other members if they were in a suitable field. Many of our members owned their own companies, and it was a quid pro quo type of arrangement.\n\n...............................................\n\nI got the idea from a friend. His wife hated football, as she made sure she and her friends had something planned to amuse them.\n\nWe always had a big blowout, rented the biggest television we could find, set up the ballroom as a temporary bar. I had the kitchen fix large snack platters to help absorb alcohol. Even then, many wives and girlfriends end up coming to take them home.\n\nI talked to a few of the key women, introduced them to my lingerie connection, and they were off to the races.\n\nWhile the men watched football, the women were in a smaller meeting room, treated to the latest in lingerie fashions, the newest 'toys', she even had a couple more friends help, one a hairdresser, one a makeup artist. They picked three women at random, different sizes, features, and ages, and gave them a full makeover, then brought them out, complete with lingerie to flatter their shape and age. The kitchen supplied more refined snacks, and I had another friend, the wife of a local vintner, to supply wines.\n\nIt was a roaring success. The men actually had to wait on the women after the game. We kept a close eye, and had three cabs on standby.\n\nThe women insisted I come in at the end of the night, to thank me. As they were leaving, four waited until they were last, giggling.\n\n\"We love Aubrey,\" one gushed, \"she has the cutest things. Look.\"\n\nShe opened her coat, revealing a french maid uniform, very flattering on her. The next had a nurse's uniform in pvc, the next had on an almost transparent teddy, and the last had on a very nice lavender garter, and nothing else.\n\nThe whole thing was unexpected, and I flamed red at the end, which they thought adorable. It became an annual event, to the point we had to move it to a larger room.\n\n.................................................\n\nI went to college on line when I could, actually attended classes Wednesday mornings, and Thursday nights. I made a few friends, but didn't have time to establish a relationship. It was college after all, so I did hook up a few times, widely spaced.\n\nThere was one woman I really liked. We had an accounting class together Wednesday, and a business class on Thursday. We met sometimes in the library, studying together.\n\nShe was a little older than me, thirty one. I could tell she was from money, her clothes, her jewelry, her car, but she was sweet to everybody, even went out to pizza and beer with us on occasion. She paid her share, and never flashed her wealth.\n\nHer smile could melt icecaps, sweet and caring one second, devilish and flirting the next. And she was smoking hot, knew it, but never pushed it. She shot the college boys down gently unless they pushed it, then they got a taste of the bitch. I thought she'd make a hell of a bar tender.\n\nI was walking out of the library one night as it was closing, when I saw her sitting on a bench, shoulders slumped. I walked over to say hi, and she looked up, tears still trickling down her cheeks. Not physical pain tears, but of raw emotion.\n\n\"Mind if I sit?\"\n\nShe nodded, fishing for tissue in her purse. I had always carried a handkerchief, a legacy from my uncle. He might be in jeans and a ragged tee, but his monogrammed handkerchief was always clean and available. I gave her mine.\n\n\"Who carries these anymore?\" she said, dabbing at her cheeks.\n\n\"Only old school gentlemen, in case they find a distressed maiden in need.\"\n\nIt made her smile. She tried to give it back, but I told her to hold on to it. She sat, twisting it in her hands.\n\n\"Want to talk about it? Besides providing handkerchiefs, I have a pretty soft shoulder, and very large ears. No personal agenda, I promise.\"\n\nShe actually giggled before the frown returned.\n\n\"I think you're the only man I've ever seen that I actually believe when you say that. And yes, I'd like to talk, it might help. But not here, will you buy a sad girl a cup of coffee?\"\n\nI knew instantly what she was talking about, a little mom and pop place just off campus. It was clean, cheap, and close, making it dear to the college students. The owners were well liked, and known for their intolerance of drunks and loudmouths. It was quiet, with widely spaced booths. If it was late and they didn't need the table, they'd let you sit and study.\n\nWe walked over, got a coffee, a piece of pie, apple for me, cherry for her. She took a few sips, ate half her pie, sat back and sighed.\n\n\"You know I'm married, right?\"\n\nI nodded, only a blind man could miss the rock on her finger.\n\n\"Seven years. I really loved him, you know? Thought I had a forever man, happily ever after. Seems not.\"\n\n\"How long has he been cheating on you?\"\n\nShe seemed surprised at my plain speaking.\n\n\"How did you know? And what makes you think it was him?\"\n\nI shrugged.\n\n\"Easy, in my line of work you can usually spot good guys and bad, and you're definitely one of the good. You seem to have money, so I don't think that's the issue. You don't have bruises and you don't act mentally abused, so it has to be cheating. Why do I think it's not you? Because if it was you wouldn't be sitting on a bench in the dark crying. You'd be out living the wild life. So it has to be him.\"",
        "Her eyes had widened.\n\n\"Are you a psychologist, or detective?\"\n\nMy turn to laugh.\n\n\"No, professional bar tender.\"\n\nThe sad tale spilled out. He was a guest lecturer in a business class when she was attending college full time. She caught his eye, and he asked her out. He was almost ten years older, handsome, flattering, attentive. She fell head over heels, they married nine months later. He paid attention, showered her with little gifts, she was very happy.\n\nAbout four years in he started changing, neglecting her, becoming distant. She called him on it, he apologized, promised to do better, and did for about six months. She started wanting to have a family, and he talked her into waiting, saying the time wasn't right. The last year had been bad, he traveled on business every other weekend, for a new business they had started, leaving Thursday and not returning until late Saturday.\n\nHe seemed happier after he started traveling, but was still cool towards her. Finally she took some of his money, had him investigated.\n\nHe was of course, having affairs. She had gotten confirmation of her fears.\n\n\"He doesn't have a steady girlfriend, it seems to be casual hook ups, four that I know of, who knows what the total is? He'd been traveling for about six months before I decided to check on him.\"\n\n\"I was scared to death. Found a doctor a few towns over, had a full exam. I came back clean, thank goodness, but it was scary.\"\n\n\"We haven't had relations, I can't call it making love, since I found out. Sadly, it doesn't seem to bother him much.\"\n\nCuriosity got the better of me.\n\n\"What are your plans? Are you going to confront him? Try to make it work?\"\n\nShe shook her head firmly.\n\n\"No. He's toast, he just doesn't know it yet. It will be pretty soon, though. It's one of the reasons I came back to school. He thinks I'm taking a full course load, telling him the classes I needed were mostly taught in the evening makes it easier to stay away from him. I just need a few more hours to get my accounting degree, and I intend to use it to help make sure he doesn't try cheating me in the settlement. He always joked that the only thing he could ever love more than me was money.\"\n\n\"I've already found some duplex apartments and a couple business buildings we own that he's never told me about. I've got a good team digging. I'll know everything when it's time for the showdown.\"\n\nShe sighed.\n\n\"Don't get the idea I'm a gold digger. I brought money into the marriage that has helped him quite a bit, it's one of the main reasons there was no prenuptial agreement. So if he loves sluts and money more than me, I'm going to hit him where it hurts.\"\n\nI could see her logic, sort of.\n\n\"Why drag it out? You're obviously not going to keep him. Why beat a dead horse? You're beautiful, admittedly well off, and still young enough to find someone to start the family you want. I bet you'd be a heck of a mom, with a Mercedes instead of a minivan. Walk away. Find happiness.\"\n\nShe smiled for the first time that night.\n\n\"So I'm beautiful? Great mother material? I might take you up on the finding someone better plan. You're not married, are you?\"\n\nI blushed and she laughed out loud.\n\n\"You're way out of my league. I'd be a male Cinderella. It would be something to dream about. A rich, beautiful wife who has to be smoking hot in other areas, and you know what I mean. You're the unattainable dream, baby.\"\n\nShe was still giggling, but she punched my arm and got serious.\n\n\"Don't sell yourself short. I've seen the way the little coeds look at you. And Vivian[one of my few hookups]gave you a pretty good report. But, my next one will be for love. And lust, of course.\n\nIt was getting a little deep for me. I looked at my watch.\n\n\"Time we went home, I've got a long day tomorrow. I'm glad you decided to trust me, and I'll never tell. Not my business, really. If I were to presume to offer you advice, I'd tell you it's time to make yourself happy.\"\n\nI pulled her chair back.\n\n\"Rescuing damsels in distress, holding doors, chairs, carrying handkerchiefs, are you a time traveler? Men like you don't exist in this century.\"\n\n\"Call me old fashioned. I respect everyone right up until the time I find out they're not respectable, and good manners are ageless. Good night, Marie.\"\n\nI walked her to her car, and she surprised me by giving me a full kiss on the lips. I was stunned.\n\nShe drew back smiling.\n\n\"I just wanted to make sure you're real. Goodnight, Jerry.\"\n\nI watched the tail lights of her Cadillac ATS fade in the distance, got int my truck, and went home to my empty bed.\n\n.................................................\n\nAfter that night, Marie and I would have coffee almost every Thursday, often with friends. She was bubbly and engaging in a group, but when it was just us, she'd often be pensive and sad.\n\nI found out by accident her birthday was the next Thursday, and we planned a little surprise party.\n\nShe thought we were going for coffee, but when she got there she was ambushed. Seven of us dragged her down to a little jazz bar that one of our friends had discovered, and we partied. Not hard, not out of control, but we had a good time. I think she danced with every man in the bar. It ended way too soon. I'll always remember how her body melded into mine during one of the slow dances.\n\nI walked her back to her car. She held my hand, and when I opened the door she gave me a quick peck on the cheek.\n\n\"Here. I almost forgot. Happy Birthday, Marie.\"\n\nIt was a dozen vintage ladies hankies, soft little squares with embroidery around the edges. I'd had them monogrammed with her initials.\n\n\"In case I'm not around when you need one.\"\n\nShe burst into tears and threw herself into my arms. I hugged her, gently patting her back until she calmed down.\n\n\"Sorry,\" she said, between hiccups, \"it's one of the nicest gifts I've ever received.\"\n\nShe grimaced, a feeble attempt at a smile.\n\n\"Know what my husband got me? A sapphire and diamond necklace. Expensive, I'm sure, but the card was signed by his assistant. I gave him a big kiss, told him I'd always loved emeralds, how did he know? He gave me a big smile, told me he was a lot more attentive than I thought, and then told me he had to be out of town this weekend.\"\n\n\"Dump him, Marie. Do it now. Don't torture yourself any longer.\"\n\n\"I'm almost there. Another three weeks to a month should wrap it up. Can I call you if I need moral support?\"\n\n\"Absolutely.\" \n\nI knew she'd never call.\n\n.................................................\n\nI was wrong.\n\nShe called the next Tuesday.\n\n\"Can I ask a favor?\"\n\n\"Sure.\"\n\n\"I want to go to the home and garden show next Wednesday afternoon. That's your day off, right?\"\n\nI wondered where this was going.\n\n\"You know it is.\"\n\nI could hear the eagerness in her voice.\n\n\"Will you go with me? You drive a truck, right? If I decide to get something, you could haul it for me. Please?\"\n\nI thought for a minute.\n\n\"I don't know, Marie. This sounds suspiciously like a date. You know my rule.\"\n\nI had given her some of my background, told he a lot of what I'd seen in my years behind a bar. She knew my stand on dating married women.\n\n\"THIS IS NOT A DATE. It's one friend helping another out. Please?\"\n\nI shouldn't have, but I agreed to escort her. She met me in the parking lot.\n\nWe had a ball, especially in the landscaping area. I found she loved outdoor living spaces, loved cooking outside. We looked at a few preplanned outdoor kitchens. She oohed and ahhed. There was one I really liked a lot. The rep, sensing a sale, put on a full court press.\n\nHe was smart enough to know women are the driving force behind most household purchases, so he went after Marie.\n\n\"Can't you just see yourself entertaining, your husband manning the grill while you mingle and chat? He looks pretty handy, you get a big discount if he can do most of the work.\"\n\nShe smiled, rubbing my arm.\n\n\"He's VERY handy, but not around tools, if you get my drift. I'd rather conserve his energy for other activities.\"\n\nBoth the rep and I blushed. She got all the information and brochures, promised we'd think about it. We were there so long it was dark when we came out.\n\nShe was happy all the way to the parking lot.\n\n\"Wanna grab some dinner?\"\n\nI surprised her by refusing.\n\n\"I'd love to, but I'm not going to. Think about your reputation, Marie. You can explain it away at school as study partners and friends. You can explain away today as asking me to haul stuff for you in my truck. But a dinner? Not a good idea.\"\n\nShe groaned.\n\n\"The first man I'm attracted to in a long time, and he has to ruin it by thinking of me and being noble. I think I'd like you a little better if you weren't quite so honorable.\"\n\n\"No you wouldn't. If I wasn't I'd be just another sleaze out trying to seduce and use a troubled married woman. We'd both think less of me, of both of us. I could never do that.\"\n\nI looked around, it was dark, no one was near, so I grabbed her, kissing her urgently. She responded with passion. Thirty seconds later I realized what we were doing and pulled back. Both of us were gasping for air.\n\n\"What was that for?\" she said, when she got her breathing under control.\n\n\"That, Sweet Marie, was me letting you know that whatever I say, I've been attracted to you since the day we met. And it was also to verify what I had long suspected. You are one hot woman. Goodnight.\"\n\nAs I sat in my truck waiting to follow her out, I was pretty sure she was crying. I thought I saw flashes of white from my gift.\n\nI watched her tail lights fade as I turned off, going home and sleeping badly.\n\n..................................................\n\nApparently my little action in the parking lot had made an impression on Marie. I'd been casually flirting with a woman in one of the classes I didn't share with Marie, and she asked me out. It had been a while so I agreed.\n\nWe spent a pleasant evening, and a pleasurable morning. It was just for fun, at least on my part. I think she liked it, she made it plain she'd like a repeat. We made tentative plans for the next weekend.\n\nMarie found out from a guy in both classes. I didn't see it first hand, but she hunted the woman down and had a little 'talk'. The next day when I talked to Gail, the girl I'd been out with, she chewed me out.\n\n\"You're an asshole! Why were you dating me if you were in a committed relationship? Your girlfriend chewed me out pretty hard.\"\n\n\"This girlfriend got a name?\"\n\n\"You know damn well it was Marie. I wouldn't be too hopeful about getting any from her for a while, and you damn sure won't be getting it from me. You and your psychotic girlfriend need to leave me alone from now on.\"\n\nI apologized to her as I left. She gave me a parting shot.\n\n\"I wouldn't try this again, if I were you. She's put the word out. Date you and it could be very bad.\"\n\nNow I knew why she had rushed off the night before. The next Thursday I cornered her before class.\n\n\"Pizza place, right after class. You're like Lucille Ball, you 'got some 'splainin' to do.\"\n\nI got there early and ordered, knowing what she liked. She slid into the booth with her head down.\n\n\"Wanna tell me about your conversation with Gail?\"\n\nShe finally looked up.\n\n\"She's not right for you, and she's way too young. You need to stay away from women like her!\"\n\n\"Marie, even it what you say is true, shouldn't that be my decision to make? What do you have to gain from your actions.\"\n\nHer eyes flashed.\n\n\"If I have to tell you that, you're the dumbest man in the world. You need a woman close to your own age, one with with experience in the real world, someone who can compliment you in public and destroy you in private.\"\n\nYou mean someone like you.\"\n\nShe rolled her eyes like she was talking to an idiot.\n\n\"No, not someone like me. Me.\"\n\nI had suspected that, but now that it was out in the open I didn't know exactly how to deal with it.\n\n\"Marie, I...\"\n\n\"Stop talking. It'll just wind up pissing me off. Listen to me. I'm attracted to you. After that kiss the other night and your statement, I know you want me. Don't over think this. I promise you, as soon as I'm out of the situation I'm in, I'm coming after you. That's why I got rid of Gail. I don't need you distracted, you need to stay focused on me. Understand?\"\n\n\"Yes, but...\"\n\n\"No buts,\" she said, firmly, walking out the door.\n\nI had the pizza boxed to go, went home, and over thought it.\n\n................................................\n\n\"Almost done!\" she told me three weeks later. \"I've got a team of forensic accountants, supposedly the best to be had, going over our financials. It's easy when I have access and most of the passwords. There were a few things blocked, bu they've managed to get in. I was surprised, but not as much as he's going to be. I just need to decide how hard I want to come down on him.\"\n\n\"You want my opinion?\"\n\nShe nodded, seeming eager to hear what had to say.\n\n\"Do it quietly, keep it as low key as possible. I don't know what your business is, so think about how this would impact it. Remember, if you try burning him, the heat might blow back, and cost you in the long run.\"\n\nShe ruffled my hair.\n\n\"I'll say it again, you're way to honorable. Most people would advise me to go nuclear. There again, I may have to ramp it up if he refuses to cooperate, or tries to get ugly. But once again, I will yield to your logic.\" \n\n\"That being said, as an almost free woman whose soon to be ex is out of town, can I interest you in a drink somewhere?\"\n\n\"Marie...\"\n\nShe stuck her tongue out.\n\n\"What are going to hide behind when I'm officially single? I'm going to pursue you, relentlessly. Understand?\"\n\nI was a little stunned. There was a spark between us that couldn't be denied, but I wasn't in her league, and I told her so.\n\n\"We'll see,\" she said. \"And if you're worried about money, I'll let you pay every time we go out. I'm not that high maintenance, hon.\"\n\nI was getting uncomfortable, she saw, and relented. I walked her out to her car, parked for some reason all the way in back. She looked around, saw no one, and practically tackled me, her tongue so far down my throat she could have told you what I had for lunch.\n\nShe was rubbing all over me, and when we finally broke apart she grinned and rubbed my erection through my pants.\n\n\"You might have morals, but you're human, and part of you likes the idea of us together.\"\n\n................................................\n\nI got the shock of my life when she walked in the bar a week later, on the arm of her husband. Suddenly a lot of things made sense. I remember the odd look she gave me when I told her where I worked.\n\nMost everyone in the country club didn't care much for him. He was a self serving, ingratiating asshole, quick to work every angle. Oh, he was good looking, fit, with graying hair that gave him that distinguished executive look, but acted like he was still in college when he'd had a few.\n\nHe was tolerated, had a little clique that loved him that included two powerful board members. He was always flirty but respectful with the ladies. My guess is he didn't want to make waves, since he had only been a member less than a year. Keeping up appearances and such.\n\nI'd never seen Marie in anything but jeans and simple sun dresses, which she looked damn good in I have to say. Black hair in an elaborate swirl, understated makeup that made her liquid brown eyes stand out, lipstick and liner that drew you to her perfectly shaped lips that seemed to demand to be kissed. The standard little black dress that showed a little cleavage and a good bit of leg, finished off with four inch heels.\n\nIt was the first time I'd ever seem her there. I didn't think he was married. I'd never seen him with a wedding ring on. I noticed he had one on tonight.\n\nHe introduced her around. He seemed proud, but proud in a 'look what I've got' way, not 'this is the love of my life'. I had his drink ready by the time he got to the bar. she made a point of perching on the corner stool beside my service access.\n\n\"And what would you like, ma'am?\"\n\nI was proud of my professional demeanor.\n\nShe gave me that smile, because his back was turned.\n\n\"Oh, I'm not much of a drinker. Why don't you give me what you'd drink if you were off duty.\"\n\n\"Coming right up.\"\n\nI handed her a double shot of straight rye, water on the side. She took a sip, nodding.\n\n\"Smooth, not too heavy. I was afraid you were going to come up with some fruity concoction with an outlandish name. This is much better.\"\n\nShe turned to her husband.\n\n\"He's very good, Winslow. Don't you agree?\"\n\nHe was busy talking to one of his cronies. He waved his hand dismissively.\n\n\"Yes, Jerry is more than adequate. Look honey, I need to step outside, business, you understand? Jerry will take good care of you, won't you, Jerry?\"\n\n\"As if she was my own, sir.\" I said with a bland expression. Marie choked slightly on her drink.\n\n\"Good, good. Be right back, honey.\"\n\nI looked at her when he walked off.\n\n.................................................\n\n\"Don't look at me like that,\" she said as soon as no one was near. \"I didn't know where we were going until we got here. This is the first time I've ever been here with him.\"\n\nShe giggled.\n\n\"Besides, maybe it's a good thing, getting to observe you in your natural habitat. Get some insights that will help me in your seduction.\"\n\nLuckily I had to walk away then. When I got back, Mrs. Everly was beside her and they were talking like long lost sisters.\n\n\"Ah, there you are. May I have a refill, please? Evelyn, would you like another?\"\n\n\"I believe I would,\" she said, \"Jerry, dear, could you get Aubrey to give me a call? It's Toms' birthday in two weeks, and I want to make it special.\"\n\n\"Consider it done, I'll have her call tomorrow afternoon.\"\n\nI smiled. Mrs. Everly was in her mid sixties, but had gotten a bit of work done, and looked damn good for her age. She was the one in the nurses uniform at the lingerie party. Tom had shaken my hand the next week, thanking me.\n\n\"She's hotter than she's been in years, and said she owed it to you and some woman named Aubrey.\"\n\nShe turned to Marie.\n\n\"Marie, you must come by more often. I'll introduce you to the ladies that actually run the place. Don't tell the husbands though, wouldn't do to shatter their illusions. And if you need anything, anything at all, tell Jerry here. I'm not kidding. Pretty much anything, he can get or have done for you. Well, almost everything. He hasn't delivered that Chippendale dancer yet.\"\n\n\"Ah, Mrs. Everly, I'm still looking for the perfect one. You're worthy of the very best.\"\n\nShe giggled and patted my hand. Marie was grinning.\n\n\"I may do that, Evelyn. Come more often, I mean. And I may take the offer up on Jerry. I can think of a few things I'd like him to do for me.\"\n\nI had to walk off.\n\nWinnie the Pooh, as I had mentally nicknamed her husband, finally showed up, had one more drink, and they left. She made a point of shaking my hand, thanking me for my services, present and future. I was sure she put a little extra sway in her hips as she walked out the door, knowing I was watching.\n\nMrs. Everly was also watching.\n\n\"She seems sweet. Don't you think so, Jerry?\"\n\n\"I concur, Mrs. Everly, I'm sure she's very sweet.\"\n\n\"Don't care much for her husband, though.\"\n\nI said nothing, but agreed wholeheartedly.\n\n..............................................\n\n\"Two weeks, then boom. Three weeks, Jerry, and the chase is on.\"\n\nShe was in a very good mood. I liked watching her smile. It was like the air after a big rain. Every thing was sharper, cleaner, more in focus, prettier because of it.\n\nAnd then I had a moral slip, and we made love. \n\nIt was stupid, but then aren't most accidents? I had stepped outside to talk to a local farmer. With the slow food movement firmly entrenched, I was always working with the chef to bring things to the menu.",
        "This particular farmer specialized in heirloom and unusual produce, and was having trouble finding a market for some of the odder stuff until he met us. This particular day he was delivering African horned melons, also known as jelly melons, or less flattering as snot melons.\n\nThey were cylindrical little fruit, mottled orange and yellow with spikes covering them. Pretty sharp spikes. The flesh was light green and kind of slimy looking, hence the nickname.\n\nI had tasted them and found them almost flavorless. They had just been named a new super food, and Aaron, our chef, had concocted a salad with them as the center piece. The ladies loved it.\n\nI had walked outside to look at some bananas he had managed to grow, tiny pink little things with a lot of flavor. He'd raised a dozen trees, just for fun, and he was giving the harvest away to friends and customers. I was helping him carry in his delivery, mostly because I enjoyed talking to him and wanted to get out in the sun.\n\nWe were right beside the cart path. He was drunk, reaching for another beer, and ran all over me. I guess I should be glad it was a golf cart and not a car.\n\nAfter a trip to the E.R., I had a brace on my knee, four stitches in my arm, and a killer headache. I was also out of work for two weeks, no negotiation.\n\nI did hobble in the next day, working in the office for two hours, reaching into my book for temporary help, going over the schedule with the chef and assistant bar manager, getting ready for my 'vacation', when the club manager and the chairman walked into my office.\n\n\"Jerry, how do you feel?\"\n\nThere seemed to be genuine concern in his voice. He was a good man, rising from nothing and building a successful business. He had been chairman for quite a while, and the club was his third passion, following his late wife, then his business. Despite his age, women young enough to be his daughter seemed attracted to him.\n\n\"It's the money, Jerry.\" he said late one afternoon when we were practically alone in the bar and he was in a mellow mood. \"Put enough zeros behind a number and it makes you ridiculously handsome. I enjoy them, but it's never going anywhere. My late wife set the bar too high and I haven't found any one else who can come close.\"\n\n\"Sore,\" I said, coming back to the present, grinning. \"The doctor says I can come back in two weeks, on a limited basis.\"\n\n\"We just want you to know, the club will take care of all your expenses, and your salary. Anything else you need, let us know.\"\n\nHe paused, hesitant.\n\n\"What do you want to do about Bob?\"\n\nBob was the guy who ran over me. I knew they were worried about possible legal ramifications. I bore him no ill will, I know it was an accident, and he was a decent guy, when he was sober.\n\n\"One month suspension. What if it had been a guest, or some service guy, or even a member? The club would be in deep shit. And when he gets back, he doesn't drive a cart, for at least three months. That's my suggestion.\"\n\nBoth of them breathed a sigh of relief.\n\n\"Done. Thanks, Jerry. And Don wants to apologize to you. He really does feel bad about what happened.\"\n\n\"Tell him we'll talk when his suspension is over.\"\n\nWe talked a few more things over, I returned to my apartment, where a pain pill was waiting with my name on it. I was in a pleasant fuzzy fog almost instantly.\n\n................................................\n\nThe pounding on the door was insistent. I listened to it for what seemed like forever before I finally dragged myself off the couch.\n\nMarie almost knocked me down rushing in.\n\n\"How bad are you hurt? They should shoot that dumbass!\"\n\nI shook my head, trying to clear it. Tried to talk but it came out slurred.\n\n\"Poor baby. Let me help you to bed.\"\n\nShe led me into the bedroom and sat me on the bed. She took my shirt off, helped me down to my boxers, sliding the loose exercise pants off slowly to avoid hurting me. She tucked me in, ruffling my hair and giving me a quiet kiss.\n\nI passed out. Later I half woke, feeling warm soft flesh pressed against me. It felt so good I just hugged harder and went back to sleep.\n\nLater still I felt something warm and wet around my erection. It was such a pleasant experience I just lay there. I remember disappointment when the feeling stopped, then an even more pleasant feeling when something even warmer and wetter wrapped around me.\n\nI opened my eyes to see Marie carefully riding me, her eyes closed in bliss. I was sure it was a dream, she was surrounded by a golden glow, smiling. It was probably the meds, but I felt tears trickle down my cheeks, I was so happy. I imagined her kissing my tear stained cheek when I faded out.\n\n..................................................\n\nMy eyes flew open, trying to process why I felt so good. Looking over, I saw a pair of beautiful brown eyes. And an even more beautiful smile.\n\n\"Good morning, lover. Feeling better?\"\n\nBefore I could answer she was out of bed. I heard the shower running, then she walked out wearing my robe.\n\n\"Do you need help? I'd be happy to assist you. I'll make sure EVERYTHING is squeaky clean.\"\n\nShe actually did help me into the shower, but there was no playing. Afterwards she helped me into a pair of running shorts and my brace.\n\nShe rattled around the kitchen, making coffee. She sat our cups down, and sat, grinning.\n\n\"How did you know I was hurt?\"\n\n\"Evelyn told me. She called, inviting me to an impromptu lingerie party. I told her I'd love to. She seems really nice. I mentioned you, and she told me again how well she thought of you, and wasn't it a shame that you'd gotten hurt. I got off the phone as quickly as I could. I had to see you, make sure you were all right.\"\n\n\"How did you know where I lived?\"\n\nShe blushed a bit.\n\n\"I had the private detective I hired for Winslow help me. It took him thirty minutes. I didn't know what else to do, I had no one to ask.\"\n\nShe looked around the kitchen nervously.\n\n\"Say it,\" I said, prompting her.\n\n\"I'm so sorry you got hurt. I knew you were alone, and I just had to come. I felt like you needed me. And yes, I used your weakened physical and mental state to take advantage of you. If you're waiting for an apology, don't waste your time, because it's not coming. I'd do it again. In fact, I want to do it again, often, and as long as you will let me. So there!\"\n\nI kept my eyes devoid of emotion until she looked miserable. Then I smiled, kissed her cheek, and told her maybe I'd take her up on that offer, AFTER she was legally free.\n\nShe practically danced around the kitchen, chattering a mile a minute. I just sipped my coffee, smiling.\n\nShe left late that afternoon. She wanted to play, but the pain was coming back, and I still didn't feel right about it, so nothing else happened.\n\nShe had packed an overnight bag[just in case, she said]and made a point of taking another shower, leaving the door open. She came out with a towel wrapped around her head and nothing else.\n\nI admired her body, the high firm breasts, the surprisingly full bush. She saw me and laughed.\n\n\"I prefer being clean shaven, but when I found out he was cheating, I let it go, knowing he hates hair. Just another way to keep him away from me.\"\n\n\"Winnie the Pooh is an idiot. How in the world could any one cheat on you? Not just your body or mind, but the whole package? I'll never understand.\"\n\nShe sat down beside me, still nude, giggling over the nickname.\n\n\"I've thought about it, a lot. Even talked to a shrink. She said it was probably a power thing for him, having a beautiful and rich wife, while bedding practically anything that said yes. Said it had something to do with his beginnings, usually. I'll never know and frankly just don't care any longer. The fact that he never pressed me after I cut him off was an indication that he never considered sex vital to our relationship.\"\n\nShe looked at her watch. \n\n\"Gotta go. I have a meeting with the accountants and my lawyer, putting the finishing touches on the paperwork. I'll call you later. You better answer.\"\n\nShe gave me a tremendous kiss, and sailed out.\n\n................................................\n\nI sat and thought, consumed by doubts. I had to admit I had feelings for her. But, was I just a rebound, filling a need until she got her balance back? Could I take the chance? Plus, she had actively pursued me while she was still married. Could that be a pattern? Did I want to find out?\n\nI passed out with a pain pill. Four hours later I woke. I had four missed calls from her. The last message said to call her whenever I got the message, he wasn't home.\n\nI shouldn't have, but I called. She was bubbly, talking about how well the meetings went. We were on the phone an hour before I told her I had to go, the meds were kicking in again.\n\n\"Bye honey, I lo....er I'll talk to you tomorrow.\"\n\nAfter ten days, I went back to work, mostly paperwork, staying off the knee as much as possible. I had been back two days when I got jumped. I hobbled back into the office, knowing my knee would give me hell tomorrow, wondering if I could get an appointment with my doctor.\n\nI called Marie, gave her the whole story, telling her if she needed it, both the Chief and the ADA could testify.\n\n\"That tears it. In a way it's a good thing, giving me more to strengthen my position. I'll see if I can get a process server and an off duty cop to be here when he comes home. I'm not going to stay and fight with him, nothing he can say would matter in the least. I'll get an extended stay suite for a few weeks while they hash out the paperwork. Can I count on your support?\"\n\n\"Always, but for now, just from afar. It will be better this way.\"\n\nShe didn't like that, not at all, but she had to respect it.\n\nThree weeks later she walked into the bar. She had become fast friends with most of the ladies, and they would sing her praises to me.\n\nEvelyn brought her up one day, after her tennis match.\n\n\"She seems to be such a sweet girl. You should take a look at her when this is all over. She's quite a looker, well off, and she seems to like you.\"\n\n\"Mrs. Everly! What an inappropriate thing to say. I don't know if you know this, but I'm going to college part time. I'll get my degree in three months. Miss Marie was in a couple of my classes, and we became friends. Of course, that was before I knew about her unhappy marriage, or that they were members here. She's all you say and more. Much more. But she's way out of my reach, and I would never embarrass her by trying to prove otherwise.\"\n\nShe eyed me for a few seconds before bursting into laughter.\n\n\"Jerry dear, I've always thought you were pretty sharp, for a man, but that statement just disproved that. If she likes you, and you're attracted to her, you need to do something about it. People fall in love all the time outside their social and economic levels. It's life. You love who you love. Think I was born to money? I was the fourth daughter of a Pennsylvania coal miner, we were dirt poor.\"\n\n\"I went to college on a scholarship, met Hal, and never looked back. Oh, I had misgivings, and my mother in law never really liked me, but we've been together thirty three years. The money is nice, but I would have married him if he were a coal miner like my father.\"\n\n\"I think I know you better than you think, Jerry. My father and husband are cut from the same cloth. Her marriage was over before you even met her, so there's no guilt in having feelings for her. I admire your sense of honor, but it's misplaced here. I have to go now, dear. Think about what I've said.\"\n\nI did. It got worse. Mrs. Everly told her friends, and they waged a campaign, throwing us together constantly, timing it when I was available. \n\nMarie thought it was funny.\n\n\"Come on, honey. Everybody in the universe thinks you and I together is a good idea but you. I know, I can see it in your eyes, deep down you do too. Ease off on your sense of propriety and let it happen. And don't fall back on my marriage being in the way.\"\n\n\"Not only have I filed for divorce, but I'm legally separated until it goes through. I didn't have to do that, I did it hoping to appease your pride.\"\n\n.................................................\n\nI thought about it, a lot. Maybe everyone was right, maybe I was a fool. Then something happened to make me think I was too late.\n\nIt was a dinner dance, a once a month affair at the club. Marie had asked me twice to accompany her, but I was concerned about the repercussions for me professionally. Even if I came as her guest, I was still an employee, and some would frown on it. I told her my reasons, but she was still upset.\n\nI was at my usual station, observing, keeping the waitresses and staff on their toes, when she walked in.\n\nWith a date.\n\nShe came straight over to me.\n\n\"Good evening, Jerry. This is my date for the evening, Don Thompson. You might recognize the name, his family owns Thompson Manufacturing. I told him you were the best at what you do, and that you would take good care of us.\"\n\nSo, she had replaced me. With a more handsome man from money. Like seeking like, I suppose.\n\nHer eyes were searching my face. Years of training paid off, because I didn't bat an eye, keeping my expression bland.\n\n\"Thank you for your confidence, MRS. Martin. The club will do everything possible to make sure you and your guest enjoy yourself. I fear I'm not physically up to speed just yet,\" I indicated the cane I still had to use when my knee started aching, \"but I'll have Suzanne attend to you personally. Please excuse me.\"\n\nI hobbled over to Suzanne, the new bar tender I had hired, to ask her to keep an eye on them. She looked at me funny, she had been here long enough to hear the rumors, but followed her orders.\n\nI stayed for a few more minutes, watching them twirl slowly around in a waltz, before going into my office and shutting the door. I stayed in for forty five minutes, before circulating, making sure everything was flowing smoothly, before making an exit, pleading pain.\n\nI was off the next day, but the next I was ambushed as soon as I walked in.\n\nMrs. Everly, Mrs. Jones, Mrs. Simpson, the Big Three in terms of member wives. Two husbands had seats on the board. The other headed our charities, doing fundraisers for sending disadvantaged youths to community college and beyond.\n\n\"Office, now!\" snapped Mrs. Everly.\n\nWondering what was going on, I ushered them in, got them seated, and sat at my desk.\n\n\"How may I help you fine ladies this morning?\" I said, pleasantly.\n\n\"You can stop being a dumbass!\" snapped Mrs. Simpson.\n\n\"What?\"\n\nMrs. Everly put a calming hand on her arm.\n\n\"What she means, dear, is that you've seriously upset a member. We're here to stop it from getting any worse.\"\n\nShe paused while I reflected.\n\n\"I can't recall ever offending a member in all the time I've been here, excepting the few times when I had to stop serving alcohol to someone. Who is he, and what did I do to offend him? I'll do everything in my power to make it right.\"\n\n\"That's the spirit, Jerry. I knew we could count on you. And the offended member is a woman. Marie Martin.\"\n\nI suddenly got a really bad feeling about all of this.\n\n\"What is my offense against Mrs. Martin? Looking back, I can't recall one single instance of disrespect or slight to her.\"\n\nMrs Jones chimed in.\n\n\"Get off it, Jerry. Everyone with eyes and ears knows she's in love with you, and you feel the same way if you'll just admit it. She started crying halfway through the dance last weekend. Her date got fed up and left her. Her friends, including us, got her home. She just went out with him to make you jealous, move you along.\"\n\n\"Now, we expect you two to kiss and make up. Soon. If she continues to be unhappy, that would make us unhappy, and we would make our husbands unhappy. It's a trickle down effect with you standing at the bottom of the hill. Get my meaning?\"\n\nThey all looked at me expectantly. I sat back, thinking for a moment, before I spoke.\n\n\"let me get this straight. Despite the job I've done or my years of service to this place, my future here come down to dating a member. The carrot or the stick, right? Marie is the carrot, my future is the stick. Have I assessed the situation correctly?\"\n\nThey all had the decency to look uncomfortable and a little embarrassed.\n\n\"We're just trying to help two people we like get together, dear, please don't try to read anything else into it. You'd be really good for each other, we'd get a happy member and get to keep a person we hold in far more regard as just an employee.\"\n\nI thanked the ladies gravely, promising to bring the problem to a quick resolution. They left, happily chattering.\n\nSuzanne said it was like a bomb went off in the building when they realized I was gone and Chairman got my letter of resignation.\n\n............................................\n\nI disappeared for a week, using my contacts to stay off the grid, working my way through two resorts and an upscale bar three states away, while I calmed down.\n\nThe ladies should have talked to my parents.\n\n\"He's the least pushable person I've ever seen. Won't stand for it, even if it's for his own good.\" My mom was heard to say that often.\n\nMy dad just said I should get a job teaching mules to be stubborn, I'd make a very good living.\n\nI stopped by on the way back. It was Sunday, and my extended family, at least the ones who could make it, often ate with my parents, bringing dishes and putting finishing touches on at the house.\n\nEverything went quiet when I walked in the door.\n\n\"What?\" I said, before everyone began chattering again.\n\n\"We're just surprised to see you, that's all. I'm surprised you still remember where we live.\"\n\nI hugged her, spinning her around before setting her down.\n\n\"Way to shame me, Mom, but you know my schedule, it's hard to get home, especially on the weekend. Good news, maybe, I may have something a little more steady in the future.\"\n\nWe ate, I entertained them with tales from the bar and the foolish things rich people do until midafternoon.\n\nMom caught me out on the porch, sitting down beside me on the swing.\n\n\"What's going on, son?\"\n\n\"I have no idea what you're talking about, Mom.\"\n\nShe reached over, gripping my hand.\n\n\"You're girlfriend came by two days ago, looking for you. Marie seems like a really nice person. She was tore up bad, what did you two fight about?\"\n\nShe knew me well. If she hadn't been holding my hand I would have been up and pacing.\n\n\"She's not my girlfriend, Mom. And we haven't had a fight, even if she was.\"\n\nShe smoother her dress, letting me calm down.\n\n\"Well, something sure set her off. She's looked all over for you, said she needed to apologize to you. Not my business of course, but I think she loves you. And, I still need one more to make my dozen.\"\n\nShe knew that would make me laugh. She always said she wanted a dozen grandchildren, and the last one had appeared two years ago, number eleven.\n\n\"I'll call her when I get home. I promise.\"\n\n\"See you do. I'm getting on up there, I'd like to see you settled with a good woman before I go.\"\n\nI kissed her cheek.\n\n\"You're sixty one Mom, and healthier than I am. You'll outlive us all.\"\n\nI said my goodbyes, and was home by midnight.\n\n...............................................\n\nI was home for an hour, had just gotten in bed, when someone began pounding on my door. Marie.\n\nWhen I opened it she jumped into my arms, nearly knocking me down. Crying and talking, I just let her go until she calmed down.\n\n\"Where have you been?! You have any idea how many people have been looking for you? Never mind, I need to tell you something before you throw me out.\"\n\nI waited.\n\n\"I only went out with that guy to make you jealous. He's nothing to me. I cried when you put on your act and then left. He got so disgusted with me he left me at the dance, alone. Apparently money doesn't teach you manners.\"",
        "\"And I had no idea what Evelyn and her friends were going to do. When you resigned it kind of hit the fan, suffice to say there's a few wives on very short leashes at the club right now. You still have your job, they refused to accept the resignation. The Chairman told me he expected a call as soon as you're back. Boy did he give me hell for a while.\"\n\nI wondered why it would matter to the chairman what she did, but let it go.\n\n\"Marie, I...\" I had to stop, she wouldn't shut up. Finally I roared at her.\n\n\"MARIE! BE QUIET!\"\n\nShe stopped immediately, but before I could start she started again, tears falling.\n\n\"This is where you tell me we'll never be together. I get it, I just.....\"\n\nIn exasperation, I figured the only way to shut her up was to occupy her mouth with other things, so I started kissing her. Hard. It took her a second to catch on, then she returned them, even harder. I was pretty sure our lips were going to be bruised. When we broke she looked at me with glistening eyes.\n\n\"Is that what it takes to stop you talking?\"\n\n\"If it is, I'll never shut up. I'm gonna talk and talk and t.........\"\n\nI gave her a little tongue to play with for a few minutes. When we broke I saw the beginnings of a smile. She opened her mouth but I put my fingers on her lips.\n\n\"Enough, or next time I spank you. My turn to talk, all right?\"\n\nShe sniggered.\n\n\"That's not much of a threat, but okay, I'm all ears.\"\n\n\"I was about to tell you the other night that I want us to go out, be seen, see if we can take this anywhere. Then you showed up with a date and then the ladies at the club tried to blackmail me and I just lost it and.....\"\n\nThat was all I got out when I had a tongue jammed into my mouth. After a while, we let our tongues and fingers do the talking.\n\nClothes came off slowly, with care, then ripped with haste. She was smooth as a baby, I stroked her lightly while she moaned and giggled.\n\n\"I shaved it the day after I had him served, for you, ooh baby, yes, right there. Oh, that's so good honey, keep it up.\"\n\nI stopped cold. She looked at me in surprise.\n\n\"Are you going to talk when we make love?\"\n\nShe gripped my erection.\n\n\"No baby, I'm not. I intend to scream.\"\n\nAnd she did, for most of the night. I made hardly any noise at all, because it was so intense it took my breath away. My knee ached like hell, but I didn't care.\n\nI woke to her rustling around in the kitchen. She was naked, except for an apron. I wrapped myself around her from behind. She tilted her head back for a kiss, and we were just getting into it when the doorbell rang. I grabbed a robe and she ran into the bedroom.\n\nIt was the chairman. Well, this would be interesting.\n\nHe didn't wait for an invitation, walked right past me. \n\n\"Do I get the offer of coffee?\"\n\nI finally got over my surprise.\n\n\"Of course, sir. Cream, sugar?\"\n\n\"Black'll do. Where the hell have you been? Your assistant is an idiot who can't handle pressure. Your Suzanne is a treasure, if it hadn't been for her and the chef the place would have collapsed.\"\n\n\"Didn't you get my email?\"\n\n\"Oh, that joke. We had a good laugh before tearing it up. Think your knee will be up to returning in a couple of days? I think that's about as long as Suzanne can hold out before she snaps and kills him.\"\n\nJust as I thought it couldn't get any more surreal, Marie came out of the bedroom, wearing a tee shirt and nothing else. She walked up and kissed the chairman on the cheek before grabbing a cup.\n\n\"Hi, Daddy. Talked sense into your future son in law yet?\"\n\nI know I looked like a deer caught in headlights. Marie pounded the table laughing while the Chairman grinned.\n\n\"I wish I'd have remembered to bring my phone out with me. You should see your face.\"\n\nThe Chairman finally laughed.\n\n\"Call me John. After all, if things work out we'll be seeing a lot more of each other. And Marie, remember your lesson. I know he's a little slow, but he'll get around to asking you soon, I'm sure. Now, I have to go to work, and you need to clean up the mess you caused when you left. And if anybody asks, you were off having therapy on your knee. I'll see you at the club, tonight.\"\n\nHe patted me on the back, leaning in so she couldn't hear.\n\n\"Ask her soon. She's made herself a fool over you, help her regain her dignity.\"\n\n\"I'll get right on that. I promise,\" I said softly, so she couldn't hear.\n\nShe was eying us suspiciously, wondering what we were saying.\n\nWe showered together, played a little,tried showering together again, gave up and made love, before showering again, separately. I don't think I was ever as clean in my life.\n\n.................................................\n\nSuzanne and Aaron did everything but roll out a red carpet in front of me as I walked in, they were so happy to see me back. Micheal, the assistant manager, almost kissed me.\n\n\"I've discovered something about myself. I'm not a leader. When you get better, can I go back to being a regular bar tender, please?\"\n\nI assured him he'd have a place with us, and got down to business.\n\nI worked steadily until nearly seven, when Marie walked in.\n\nShe gave me a big kiss in front of everyone. No one seemed surprised, and many were grinning.\n\n\"Dinner break, love. Have to keep your strength up, for rehab and such.\"\n\nI followed without argument into the dining room. She had preordered. I looked at her.\n\n\"Aaron knows what you like. I'm just maximizing us time.\"\n\nWe talked about trivial things for a bit, enjoying the meal. Over coffee, we got serious.\n\n\"All right, spill. Why didn't you tell me who your dad was?\"\n\n\"You were already sensitive about money and position. I can imagine your reaction when I said, 'by the way, my dad is the Chairman of the Board' where you work.\"\n\n\"Now, let's talk about more pleasant things, like something you might want to ask me, maybe.\"\n\nI smiled at her hopeful face.\n\n\"In good time, my beauty. First there's that pesky little divorce to finish.\"\n\nShe frowned.\n\n\"Can you believe the asshole wants counseling? What does he hope to gain? Never mind, I'll answer myself. A better split. He nearly had a heart attack when we showed him how much of what he'd hidden from me we'd found, including the offshore account and the exact amount on deposit.\"\n\n\"My lawyer says to let it play out. If he see's we're not in a hurry. he may cave and come to terms sooner. It would be best not to let it leak we're seriously involved. Kind of hard to keep that a secret, now.\"\n\nI looked to see what she was staring at. The Big Three, barreling down on us at full speed. I stood, graciously offering them a seat. To my surprise they declined.\n\n\"We're just here to apologize. What we did was wrong, something our husbands reinforced strongly. We should never had interfered. Forgive a few old ladies who were trying to help love along a little faster?\"\n\nI looked at them strongly.\n\n\"No.\" They looked at me in shock. I tried to savor the moment before I couldn't help it and smiled.\n\n\"I can't forgive someone who gave me a kick in the butt that sent me in the right direction. I owe you. And thank you. Thank you a lot.\"\n\nThey started smiling, decided they did want to chat, and sat. After a few more minutes I looked at my watch and rose.\n\n\"Ladies, as much as I enjoy the company I'm in, I have to go back to work. I hope the remainder of your evening is pleasant.\"\n\nThey insisted I kiss each one on the cheek, except Marie, who pulled me into a full kiss.\n\nThe older ladies giggled when she told me she'd see me at home.\n\n\"Thank goodness this is resolved. Now ladies, I'll leave you to spend a little time planning my future with no regard or input from me, because it's really working well so far. Don't you agree, Marie?\"\n\nThe whole table glowed red and I walked off. I felt like whistling. \n\nMarie thought I was far enough away not to hear them.\n\n\"So, Aunt Evelyn, what's on your mind?\"\n\n\"Why wedding plans, dear. What else.\"\n\nI was halfway across the room when I heard that. I turned, to see Marie with her hand to her mouth while the others laughed. I smiled at her and she relaxed. \n\nGoing back to work, I wondered if I ever had any chance at all once she decided she wanted me. Probably not.\n\n................................................\n\nThe divorce finally came through, five months later. He fought it, forced counseling. When he had exhausted every option and even his lawyer told him he was wasting time, he started to bargain.\n\nSeemed they owned three car dealerships. He had one when they married, and with her money they invested in two more. That was what led to his traveling.\n\nIn the end, he got to keep his original dealership, all the apartments, office buildings, their old home, and his not so hidden bank account.\n\nShe got the Ford/Hyundai dealership, and the Buick/Honda/Subaru dealership, along with a few investments and a little cash. By a little I mean a lot.\n\nThe day it was final I went with her to court. Surprisingly, he attended also. He kept looking over at us, while Marie kept giving me little public displays of attention. He was about to explode by the time we left the courtroom.\n\nCharging up to us in the hall, he was practically screaming.\n\n\"YOU BITCH!The bar tender? You're kidding, right? The FUCKING BAR TENDER! You probably ratted me out! I'm gonna fucking kill your gold digging ass.\"\n\nI pushed a shocked Marie away from me, taking the scene in. The baliff and a deputy sheriff in the hall were too far away to reach him. His lawyer was there, but there was no way he was getting between us. \n\nI let him come, sidestepped his lunge, pushing him off balance, smiling when he crashed head first into the wall. He jumped up to find me standing over him, ready. I hit him in the gut, hard.\n\nAs he lay there gasping, the cops got there, tasers drawn. He just didn't understand the concept of quit while you're losing, cussed me again, and knocked the aging baliff down trying to get to me. By then a state trooper was there, and he was tasered so much he lit up like a Christmas tree. He was still convulsing while they handcuffed him.\n\nI declined to press charges, but the DA went after him for assaulting the baliff and creating a disturbance. He got three weekends in jail and two hundred hours of community service. I'll see him every once in a while in an orange vest, picking up trash on the side of the road. I always blow and wave.\n\n.................................................\n\nHer father came to see me.\n\n\"I hear there's to be a wedding in late June. True?\"\n\n\"Yes,\" I smiled. \"I'd ask you for her hand, but I'm afraid it's to late, she already Mom for mine.\"\n\n\"Good. I've always liked you, Jerry. You did a good job, in ways I would have never thought of. You'd make a master politician. You would have made a terrific club manager. Too bad, really?\"\n\nI was stunned.\n\n\"What exactly are we talking about here?\"\n\nHe seemed surprised.\n\n\"Why, your resignation, of course. Can't have my son in law working here, it would be a conflict of interest. Wouldn't do at all.\"\n\n\"So, if I marry your daughter, I have to resign?\"\n\n\"Afraid so.\"\n\nI slumped down. This had been my dream for a long time. Silly maybe, but my dream nonetheless. I shook myself. No job would ever be worth Marie.\n\n\"Good thing I'm marrying money, I suppose.\"\n\nHe stopped smiling.\n\n\"Let me get this straight, I will never allow my daughter to have a husband she has to keep up.\"\n\nHe paused, gauging my reaction.\n\n\"Besides, you have a job. With me. I have to keep an eye on the gold digger she married.\"\n\nI looked up in surprise. He had a huge smile on his face.\n\n\"I've watched you, Jerry, as you worked your way up. You never slacked, took on more than your share, continually found ways to make this club better. You paid for and earned your diploma without help. You're probably the most moral man I know, and underneath your calm exterior is a core of iron. You set goals, establish a timeline, and accomplished every thing you set out to do. You can be proud of yourself, son. I know I am.\"\n\nHe leaned forward, until we were almost nose to nose.\n\n\"I built a good business, Jerry. A lot of people depend on me for their livelihood. It's a big responsibility.\"\n\n\"That being said, I want you to learn the business. I'll work you harder than anyone else, start you pretty low down the totem pole, make you earn every promotion. And when you're ready, I'll turn it over to you, in trust to my grandchildren, and retire, knowing there's a steady hand at the helm. Can you handle that?\"\n\nI laughed as I shook his hand.\n\n\"I don't know, but I'm sure I'll find out.\"\n\n................................................\n\nSo it came to pass that on a sunny Saturday afternoon in June, Marie Patterson[she had taken back her maiden name] became Mrs. Jerry Stone, in front of most every member of the country club, my family and friends. Mom was especially happy. She had been recruited by Evelyn to help with mother of the bride duties, and just before she came out to walk down the aisle, she shared a secret with both of them.\n\n\"I know it's my day, Mom,\" she said to my mother, \"but I want to give you a gift.\"\n\nShe handed her a envelope, with an invitation inside. Mom still has it. A birth announcement.\n\n\"Mr. and Mrs. Jerry Stone take great pleasure in announcing the birth of their son/daughter on or about December 15, Constance Evelyn[my mom and her aunt] or John Edward[her dad and mine]Stone. Her parents are pleased to say her nickname will be 'twelve'.\" \n\nMom and Evelyn cried through the whole service.\n\nThe pregnancy was a mutual decision, if you count Marie going off birth control and not telling me the day I gave her a ring.\n\nShe had told me the night before the wedding.\n\n\"We both agreed we wanted children. I'm close to the danger zone in age, and I want at least two, so they'll have to be close together. We just can't afford to waste time.\"\n\nSo I was extremely happy for two reasons as I watched her float down the aisle.\n\n................................................\n\nConnie was followed by Johnny sixteen months later. Marie declared the factory closed, and had her tubes tied.\n\nJohn worked me like a dog, giving me every dirty job, but I never complained, and forbid Marie to. Seven years later we held a big retirement party at the club, and the next week I watched as my name was put on the door marked 'president'.\n\nMom loved telling everyone she had a bakers' dozen when it came to grandchildren. She really hit it off with Evelyn, and after Dad died three years ago she seemed to spend more and more time at our house, hanging out with her at the club while Marie and I worked.\n\nWe had bought some acreage and built Marie her 'kid friendly' dream house. I came home four years later to see heavy equipment parked at the far edge of the property, and Marie and Mom were talking to a guy in a hard hat. I wandered over.\n\n\"What are we building?\"\n\nMarie didn't even look up from the plans she was holding.\n\n\"A mother in law cottage.\"\n\n\"For who?\"\n\nShe looked up from the papers with an exasperated expression while Mom pretended not to laugh.\n\n\"My mother in law.\"\n\n................................................\n\nMarie was CEO of her own company, and had added a third dealership, in direct competition with her ex. Winnie the Pooh didn't have a very good life after they divorced. They threw him out of Briarwood for his little stunt of using my name in his affairs, leading to the confrontation.\n\nHe joined another club three towns over. He learned a little from his mistakes, and wife number two and three signed prenupts, but still made out when his infidelity was exposed. Marie tells me he's living with a woman seventeen years his senior.\n\nShe's very wealthy, but refuses to marry him, and keeps him on a very short leash.\n\n................................................\n\nI know what people say about me. I married money. Slept my way to the top. That I'm henpecked. I'm sure if Marie heard anything like that she'd straighten them out pretty quick.\n\n\"He's the sweetest man in the world, and goes along with what I say because it makes me happy and he really doesn't care. But when he says no, no means no, and I respect that.\"\n\nSometimes she rubs her bottom unconsciously, I've actually followed through on the spanking promise a few times. There's something decidedly erotic about having a CEO draped across your lap, her bare bottom red, snuffling and promising to be a good girl. Of course, I make sure I rub lotion on it later, and that always lead to what Marie calls hierarchy sex. Sometimes I think she pushes me deliberately, especially if she's stressed.\n\nAnyway, they don't say it to my face. Everyone who knows me, everyone that matters, knows the truth. Screw everyone else.\n\nI prefer to think I married the woman of my dreams, and all the rest is just side benefits.\n\nI have to go to the club now. Ive been elected a to the board of directors. I know, my father in law is still the chairman, nepotism rules. \n\nHe's confided to me he will be leaving it soon. He finally found someone he says is the equal to his late wife. I'm pretty sure I'm going to like my new mother in law, I've known her for as long as I can remember. Marie laughs and says we're in the unique situation. My mom will also be my mother in law, and her step mom will be hers.\n\n.................................................\n\nAs always, thanks for reading. Comments, public and private, are always welcome.\n\nSorry about the title, I couldn't resist.\n\nQ"
    ],
    "authorname": "qhml1",
    "tags": [],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/its-in-the-wrong-catagory"
}