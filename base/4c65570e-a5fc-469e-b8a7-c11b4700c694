{
    "title": "Masturbating for Alex's Friends",
    "pages": [
        "My wife Alex and I have a pretty good time in bed, although she is usually quite conservative. I often masturbate for her which sometimes ends in me just coming and sometimes leads to other things. A lot of that depends on how much time she has in the morning since it usually starts with me watching her in the shower. One morning a couple of months ago when I was shaving, she commented that I was a real exhibitionist and would probably jack off for anybody. I said there was probably no one else that would like to watch me since I am a fifty year old that is about 30 pounds too heavy with a pretty small penis. \n\n\"Don't be so sure,\" she said, \"it's a turn on for me to watch you play with yourself, so other women might like it too. Their husbands probably do it in secret like you used to. So would you let someone else watch you?\"\n\n\"I guess I never thought about. I probably would if you were there so I wouldn't feel like I was cheating on you.\"\n\n\"By the looks of your hard-on this kind of excites you. I don't have time this morning so you better take care of that yourself.\" With that she sat on the ledge surrounding the whirlpool to put on her lotion. She made sure she took plenty of time putting lotion on her nipples and seemed to pinch them a bit while lingering there. She also gave me a very good view of her pussy as she lifted one leg at a time to spread her lotion. I wasted no time in starting to masturbate myself while taking in the view. Alex is 48 and just recently went on a vacation to her sisters. She tanned before she left, so she has that all-over tan. She is a few pounds on the heavy side, but looks very good for her age. Her 34B boobs have very sensitive nipples that were standing at attention. Her pussy hairs are black with some wisps of grey. She doesn't trim at all which is fine with me. She held out the bottle of lotion to give me a squirt to help me along.\n\n\"You'd better finish before I blow my hair dry or you will be late for work,\" she said as she moved to the sink and started drying her hair. I started stroking in earnest as she went about getting ready for work. It didn't take long before I reached for the Kleenex and started coming. When I was finished, Alex leaned into me and gave me a passionate kiss. \"You had better be ready when I get home tonight, because I know what I'll be thinking about all day. Now get in the shower.\" When I got out of the shower she was dressed and ready to head off to work.\n\nSunday afternoon a couple of months later:\n\nMy wife comes from a large family with five boys and five girls. This past week her sister Jane flew in for a visit with the family. Another sister, Tara made the 4 hour drive to be here for the week as well. Her husband and two of her grown children had been here but left this morning. Being a teacher, the midsummer vacation left her in no rush to get home. Jane was flying out Monday afternoon. Since our kids are grown and away from home, we have the most room to house the visiting relatives so they stayed with us. My wife had taken the week off and wasn't returning until Tuesday either so there had been plenty of partying all week. With all the company, sex had not been part of the celebrations. The weekend before all the relatives arrived, Alex had her visit from her monthly friend so it had been three weeks since my last orgasm and I was getting rather horny. It was going to be nice to get the house to ourselves again.\n\nI was catching up on some yard work on a rather warm afternoon, while the gals were in the house working on some kind of bead bracelets that a friend of my wife's (Stephanie) did for a hobby. Another friend of my wife's (Bev) had also joined them. Steph and Bev did not know each other or my wife's sisters before today, so they were getting acquainted over several bottles of wine while making their bracelets.\n\nI grabbed a bottle of beer when I was finished mowing and headed for the shower. I had just finished my shower when my wife came in to pee. After wiping, she stood up but stepped out of her shorts and panties as she leaned into me looking for a kiss.\n\n\"You got any plans for the rest of the afternoon?\" she said as she guided my hand to her pussy, which was very wet.\n\n\"Just bending you over the counter for an afternoon quickie,\" I said as I started finger fucking her.\n\nShe scooted up on the counter and said, \"Eat me.\" I quickly dove into her pussy since she normally isn't that wild about oral sex. I tasted her juices before moving to her clit and resumed my attack with my fingers on her G-spot.\n\n\"I am going to come right away,\" Alex moaned as I continued my assault. \"Faster, faster,\" she groaned as she started climaxing on my lips and fingers. Her juices were leaking onto the counter as she pushed my head away from her pussy and removed my fingers.\n\n\"I needed that. The conversation was getting a little steamy out there.\"\n\n\"Bend over the counter so I can fuck you.\"\n\n\"I have another idea,\" she said as she hopped off the counter, trapping my cock between her legs right up against her wet pussy. \"Why don't you just jack off for the gals in the kitchen?\" she said as she moved her hips back and forth on my prick. \"I bet they would enjoy that. That's what we've been talking about.\"\n\n\"You're serious?\"\n\n\"I want you to and they want you to. The only question is if you want to?\"\n\n\"Will they get naked for me?\"\n\n\"We didn't discuss that, but do you need that?\"\n\n\"I don't need it, but it would only be fair.\"\n\n\"Let's go ask them, but is it a deal breaker?\"\n\nI looked down at my hard cock. \"Does it look like I'm going to turn this down?\"\n\n\"Why don't you wash up and use some Listerine them slip on some running shorts. I'll meet you in the kitchen and we can talk about your proposal.\"\n\nI cleaned myself up and rinsed the pussy taste from my mouth. I was actually shaking in anticipation or nervousness; I'm not sure which. My cock was actually softening so I think it was nervousness. I slipped on a t-shirt and some running shorts and thought about what I was about to do. I was sure I would have a great time performing for the girls once I got started. The thing I was thinking about was interacting with them in the future with their husbands around. Would they share the experience with their spouse? I headed to the kitchen.\n\nThey were gathered around the island drinking their wine when I walked into the kitchen. There was some obvious nervous tension as I approached the group. Alex walked up to me and gave me a nice long kiss which got me going again. Luckily I could move up against the kitchen counter. \n\nLet me tell you a little about each of the gals.\n\nJane is Alex's oldest sister at 53. She is about 5'9\" tall and carries a little extra weight but I wouldn't even call her chubby. Her boobs are probably in that 36B area and she has a few extra pounds on her butt. I think she had a little wildness in her when she first left high school and moved from a small farm area to a large city. She has short brown hair and is a lot of fun.\n\nMy wife's other sister is 51 and a couple of inches shorter. She has medium length brown hair and is built a lot like my wife. She is usually pretty fun to be around but can be a little bitchy at times.\n\nBev's husband can be a real pain in the butt, but Alex and Bev have become good friends over the years. Our kids went to school together and we met through school activities. She is pretty short at around 5'3\" and a little chunky but not fat. She has nice tits that are probably 38C. She has medium length brown hair and is my age at 50.\n\nSteph is the youngster of the crowd at about 35. She is a very petite blond haired sweetheart. My wife works with her husband and they have become very close friends. She has almost no boobs. They have to be A cups and she is very skinny so I can't guess her bust size.\n\n\"Show time?\" Alex asked.\n\n\"I think it's only fair that I get a little show too.\"\n\n\"What are you suggesting?\" asked Jane, the oldest sister.\n\n\"I'll do my thing if you guys are willing to get naked for me.\"\n\n\"I don't think so,\" said Bev.\n\n\"I may flash you a little if we were alone, but not with everyone around,\" quipped Steph. \n\n\"So do you want a private show?\"\n\n\"That would be more comfortable,\" said Tara.\n\n\"So you go down stairs and get yourself comfortable. We will decide how we are going to do the rest,\" Alex said. \"Make sure you take some lube with you.\"\n\nI went to our room and grabbed my bottle of lubricant that I sometimes use for the occasion and went down stairs. I sat on the couch waiting for further instructions. Alex came down a few minutes later with her glass of wine, some envelopes and a baking timer in her hands. She set that stuff on the end table and went to the bathroom to get a couple of towels. She put one on the recliner and threw me the other one.\n\n\"Move the recliner in front of the couch so we will have a good view. Here is how this is going to work. Each of the girls has on shorts, a shirt, a bra, and panties. They drew numbers to determine what order they will come down here. One envelope has shirt; one has shirt and shorts; one has shirt, shorts, and bra; and the other has everything. That is what they have to take off. They will choose the envelope when they get down here. We can not tell anyone about this episode and they promised they would not tell anyone, including their spouse. When they are finished taking off the required clothes, they will set the timer for 15 minutes. At the end of the 15 minutes, they will get dressed and come up stairs. You can cover yourself with the towel until your next show is ready. When the last one is finished we will all come down here to watch you finish it off. Can you make it last for over an hour?\"\n\n\"I will probably have to stop on occasion, but I'll make it last. When I do come, it may hit the ceiling.\"\n\n\"It's going to be a long hour for me up there thinking about what you are doing and getting horny.\" With that she started stripping as I stood and watched. \"Get undressed and start the timer. You have 15 minutes to make me come as many times as you can.\"\n\nShe turned on the stereo, grabbed the towel and put it on the couch, then lay down with her legs spread. I quickly stripped and knelt beside the couch and kissed her passionately. I pinched her nipples as her tongue jammed down my throat. I could smell her arousal as I moved my mouth to her tits and my hand to her pussy. She was absolutely soaking. I jammed two fingers to the hilt and she started coming right away. I continued my assault on her nipples and pussy as I rubbed her clit with my thumb causing her to come again. Normally I like to tease her to her orgasm, but time was limited. I attempted to move down to eat her pussy, but she grabbed my head and said, \"Can you fuck me hard for a couple of minutes without coming?\"\n\nShe didn't have to ask twice. I crawled between her legs and rammed myself to the hilt. I had never felt her this wet before. I pumped hard and fast until she came two times, before I withdrew as I felt myself getting close. From there I moved to her sopping pussy where I sucked on her clit until she came again. I moved up her body, kissing her nipples before giving her a passionate kiss. This is something she had never let me do after eating her. I could tell that the taste of her was arousing to her as well. The timer started going off just when she seemed to be heating up again.\n\n\"We'll continue this later if you are up to it. You are OK with this aren't you?\"\n\n\"I am so horny, I would do anything right now. Are you sure it's OK with you?\"\n\n\"I don't think I have ever come so often in 15 minutes. This is really exciting, so let's just enjoy the moment and see where it takes us. I love you,\" she said as she kissed me before starting to get dressed. She slipped her shirt on without bothering to put her bra back on. \"You better clean up a little and get ready for contestant number one. I'll put my bra on the pool table. See if you can get any of the others to leave theirs.\" \n\nI sat in the recliner and draped the towel across my crotch, waiting for my first voyeur. The first one down the stairs was Bev. I'm not sure who was the most nervous, but she was at least dressed for now. She sat down on the couch across from me.\n\n\"It sounded like you got a little warm up from your wife,\" she laughed breaking the tension.\n\n\"She almost ruined the whole show for everyone else, but I stopped just in time. So are you ready to choose your envelope?\"\n\n\"Ready or not,\" she said as she took one of the middle envelopes and handed it to me. \"You can open it, but I may need to verify it.\"\n\nI tore the envelope open and pulled out the slip of paper and read it, \"Everything.\"\n\nThere was this look of fear in her eyes as she said, \"No way. You're lying to me.\" I reached to her handing her the slip of paper. \"Shit. The first one to pick and I get this.\"\n\n\"Here, you can sit on this when you finish undressing,\" I said as I handed her the towel covering my crotch. Her eyes went right to my stiff cock as I reached for the lube and squirted some into my hand and gently stroked myself. This seemed to put her at ease a little bit and she pulled her sleeveless shirt over her head. Next she undid her shorts and let them slide down her legs. She turned her back to me and slipped off her bra before stepping out of her panties. \"I guess you can start the timer now,\" I said. This forced her to turn towards me for the first time. Her nice tits swayed as she reached down to start the timer. The nipples were extended revealing her horniness.\n\nShe was beet red as she sat on the couch crossing her legs and arms.\n\n\"If you are going to cover up so am I, and that's not why we're here.\"\n\nShe moved her arms away from her breasts and uncrossed her legs, keeping them close together. I could see her brown pussy hair at the V of her thighs. She was staring at my hand as I gently stroked myself. I realized this was going to be a long enjoyable hour of exhibitionism. I also realized this was probably going to be my only opportunity to ever see Bev's pussy. \n\n\"Spread your legs a little for me.\" She moved her legs apart a little but I couldn't really see much. I scooted forward on the couch, moving closer to her.\n\n\"Put your feet up on the couch and spread your lips apart for me.\" She did as I asked almost as if she was in a trance. I had to quit stroking for fear of coming as she exposed herself to me. Her clit poked out and it was the biggest I had seen in person. It was the size of my pointer finger about a half inch long.\n\n\"That is a lovely clit,\" I said as I leaned closer. Rub it for me. She closed her eyes and leaned her head back as she flicked her finger over her button.\n\n\"This is supposed to be you masturbating not me,\" she said as she withdrew her finger.\n\n\"But doesn't it feel good?\"\n\n\"Yes, but this is about you. I'll jump Gary when I get home.\"\n\nShe put her feet back on the floor, but kept her legs spread for my gaze. I stood up and moved to the couch as I continued to masturbate. This put my prick at eye level with her.\n\n\"Take a good look,\" I said as I withdrew my hand giving her a full view of my prick. I shook it up and down then sideways a few tomes as she stared openly at it.\n\n\"We are almost out of time,\" I said as I resumed my seat in the recliner. \"Why don't you stand up and turn around for me?\" She did as I asked and I got a good view of her ass. \"Come stand beside my chair.\" Again she did as I asked. \"I can smell your pussy. Put a finger in and give me a taste.\" Just then the timer went off.\n\n\"Times up,\" She said as she moved away. She bent over to pick up her clothes before coming back over to me putting one leg up on the arm of the recliner. She reached down and slipped a finger into her pussy. As she withdrew her finger her juice made a web like string from her finger to her pussy. I quickly leaned over, taking her finger in my mouth and sucked it clean.\n\n\"Mmm that is sweet.\"\n\n\"Thanks for the show. As you can see, I enjoyed myself.\" With that she reached down and slipped on her panties followed by her shorts.\n\n\"Leave your bra on the pool table by Alex's. I want to see how many I can collect.\n\n\"I guess you've seen more than my covered boobs anyway,\" she said as she smiled and pulled on her shirt. \"I'll go get the next one,\" she smiled as she handed me the towel she had been sitting on.\n\nI covered myself up as I waited for the next woman to come down the stairs. I knew I probably wasn't going to see any more pussy but this was fun.\n\nMy sister-in-law, Tara, was the next one down the stairs. She looked at the two bras lying on the pool table as she passed it. \"Are you taking up a collection?\"\n\n\"Yep, my goal is five.\"\n\n\"We'll have to see about that. So, how do we start things off? Are you moving that towel or am I?\n\n\"Go ahead.\"\n\nShe grabbed one end of the towel and slowly slid it off my lap. The friction on my dick head brought back all of the erection that had started to fade with the break in the action. As the end of the towel reached my cock, it sprang forward.\n\n\"I see you're ready to go.\"\n\n\"You just need to pick an envelope and get some clothes off.\"\n\n\"Here goes,\" she said as she handed me an envelope.\n\n\"Shirt and shorts,\" I read and handed the slip of paper to her for verification.\n\nShe quickly removed her t-shirt and unbuttoned her shorts before dropping them to her feet. She sat on the couch and I applied some more lubrication and started masturbating. She watched intently as I slowly stroked my dick. Her nipples hardened and poked against the confines of her bra.\n\n\"It looks like your nipples are a little excited. Is your pussy getting wet too.\"\n\n\"It started getting wet when we started talking about this a couple of hours ago.\"\n\n\"Spread your legs for me so I can look at your panties to see if they are wet.\" She opened her legs and lifted one of her feet to the couch. There was a definite wet spot on her white panties. A few strands of her auburn pubic hair poked out the side of her panties.\n\n\"Pinch your nipples for me,\" I said. She didn't move her hands, but continued to stare at my hand moving up and down slowly.\n\nI slid to the floor onto my knees right in front of the couch. I inhaled deeply about a foot away from her pussy.\n\n\"That smells lovely,\" I said as I got to my feet with my dick just inches from her face. I moved my hand away, bouncing my cock in front of her eyes.\n\n\"Now pinch your nipples for me.\"\n\nShe moved her hand to her left tit and gently stroked her nipple.\n\n\"Flick it hard.\"\n\n\"Mmm,\" she murmured as she kind of snapped her nipple a couple of times. \"That feels good. Stroke your cock for me,\" She said as she continued to manipulate her nipples. \n\nI slowly stroked myself as I watched her play with her nipples through her bra.\n\n\"Take it off,\" I said.\n\n\"Sorry this is as far as I go. Now sit down and play with yourself. You only have a couple of minutes left.\"\n\n\"Come over and stand beside the chair,\" I said as I gently stroked myself.\n\nShe stood beside the chair and I reached my arm around her and gave her butt a pat. She reached behind her and removed my hand.\n\n\"You smell so hot. Put a finger in your pussy and give me a taste.\" She reached down her panties and played with herself for a couple of seconds before teasing me with her wet finger.\n\n\"Say please.\"\n\n\"Please, please, pretty please,\" I uttered before she slipped her finger into my mouth. The timer sounded, and I was through half of my show leading up to the grand finale.\n\nTara picked up her shorts and slipped them on. She then picked up the towel and placed it on my lap, giving my prick a little squeeze. She picked up her shirt and started walking towards the stairs. She stopped at the pool table and reached behind her to undo her bra. She threw it on the table and put on her shirt.",
        "\"Three down and two to go. See you in half an hour.\"\n\nWho would be next?\n\nTiny Steph was my next audience. She had a big grin on her face, and I was sure I\n\nwould enjoy the next 15 minutes.\n\n\"How are you holding up?\" She said as she sat on the couch.\n\n\"I'm holding it and it's up,\" I joked, drawing a giggle from her little girl body. \"Did you see my bra collection on the pool table?\"\n\n\"I did. Are you looking for more additions?\"\n\n\"My goal is five.\"\n\n\"I can make it four.\"\n\n\"So what's left in the envelope?\"\n\n\"I'm not allowed to tell.\"\n\nI guess we better pick one then,\" she said as she handed me one of the two remaining envelopes.\n\nI opened it and slowly read, \"Shirt, shorts, bra.\"\n\n\"I guess you'll get your bra right at the beginning.\"\n\nShe slowly unbuttoned her sleeveless blouse as I slowly slid the towel off my lap. When it was unbuttoned she continued to her shorts, unsnapping and unzipping them. She turned around and pushed her shorts down, bending all the way over as she stepped out of them. She wore a pair of skimpy panties over her very tiny ass. She looked back at me as she was bent over and smiled. She then walked over to the pool table and slipped off her shirt then her bra with her back to me. She held her shirt over her tits as she came back to my chair. She looked at my hand stroking my cock and mimicked my movements as she rubbed her tits up and down through her shirt. She had one of her tiny boobs in each hand as she rubbed her nipples. Her pussy was very close to the chair and I could smell her sex. She smelled awesome. We continued our stroking until I had to quit before I came all over the place.\n\n\"Why did you quit?\" she snickered at me. \"It was just getting fun.\" She then tossed her blouse on the end table revealing her tiny tits with eraser ends that were about a quarter inch long and hard as a rock.\n\n\"The show would have been over if I hadn't quit.\"\n\n\"Is this going to work?\" she said as she sat on the arm of the recliner and swung her legs to rest between my legs.\n\n\"That will work just fine,\" I said as I slowly played with my prick. \"You can still play with your titties. The nipples look like they need a little attention.\"\n\n\"I don't have much for titties, but my nipples are really sensitive,\" she said as she started playing with them. She was looking at my cock as she pinched her nipples and let out a slow groan.\n\n\"Can you make yourself come just by pinching your nipples?\"\n\n\"I might have to rub my clit a little, but I really need to come.\"\n\n\"Finger yourself and give me a taste.\"\n\nShe slid a hand down into her panties and rubbed on her clit furiously. I could tell she was getting very close as she really pinched hard on her nipples. She was still focusing on my cock as I moved my hand away to keep from coming. She started to lean back and I moved my arm around her so she would fall. This allowed me to get a feel of one of her tits as I pinched her nipple. This sent her over the edge and she closed her eyes and pressed her hips tightly together. I continued to rub her nipple between my fingers until she gently pushed my hand away.\n\n\"You better get back to your show,\" she said as she slid one of her feet up over my throbbing member. She brought it back down, pushing my dick forward. As her foot slid off the front it sprang back up with a force that almost had me coming. She withdrew her hand form her panties and presented me with her slick finger. I eagerly sucked all her juices off before she stood up and moved to the couch. She lay on her side on the couch with her top leg bent at the knee opening herself for me. Her panties were soaking and I almost shot my load without even touching myself.\n\n\"If I even think about jerking off, I will come. You are so damn sexy. Is Dan going to get laid tonight when you get home?\"\n\n\"I'm calling ahead to make sure he has the kids in bed so I can fuck his brains out when I walk in the door.\" Just then the alarm sounded ending our session. \"I'll see you in 15 minutes,\" she said as she slipped on her shorts and shirt. \"That was fun, and I feel much better.\"\n\nI covered myself waiting for the final voyeur, my sister-in-law. Jane is my wife's oldest sister, but I have always had the hots for her. We visited them for a couple of weeks in Georgia shortly after we were married. There were a couple of days when her husband was at work and the girls were out shopping that I nosed around the house a little bit. Out in the garage I found a box with some porn and some letters. Although there weren't any pictures of her as I had hoped, there were a couple of letters from an apparent contact they had made through a swap magazine. I don't know if they ever matched up, but the letters indicated they were certainly interested in the scene. I have never told my wife about this, but it has always been in the back of my mind. Her husband is in his sixties and has had a couple of heart attacks, so I'm not sure how active her sex life has been.\n\n\"I see where all the bras are now,\" Jane said as she passed the pool table. \"It looks like the 60's upstairs with all the swinging boobs.\n\n\"I only need one more to reach my goal.\"\n\n\"We'll have to see about that. So where is my envelope? Nobody would tell what their consequences were so I'm still in suspense.\"\n\n\"How about we not open it and you can just take my word for it.\"\n\n\"I have a feeling that wouldn't be fair,\" she said as she picked up the envelope and took the sheet of paper from it. \"I guess I am the winner.\"\n\n\"Or the loser. You can still leave your bra when you leave.\"\n\nShe took off her t-shirt, revealing her white bra that didn't show any nipple as it was a little too thick. She then reached for the timer as I removed the towel. My prick had started to lose some of its rigidity during the intermission, but it was hardening as she focused her stare. I poured some lube onto my hand and began my stimulation. I know this was my last show before I could actually come. For the most part I just looked her in the eyes as I stroked myself. She stared intently at my hand as it moved up and down.\n\n\"Are you wet?\" I asked.\n\n\"Very,\" she said.\n\n\"Everyone else has dipped a finger in and given me a taste.\"\n\n\"If I dip a finger in I may not be able to take it out.\"\n\n\"So leave it in and make yourself come.\"\n\n\"That will probably happen when I go to bed tonight.\"\n\n\"Do you do that often?\"\n\n\"It's been pretty frequent since Rob's heart attacks. He can't use Viagra and things don't pop up like they used to. He has bought me a few toys in the past couple of years that help, and he enjoys watching me masturbate.\" The alarm started to beep and I quit stroking.\n\nAs Jane got up and picked up her shirt I pleaded with her, \"One little taste to compare with the others?\" She unsnapped her jeans and pushed her hand into her crotch. She held it to my mouth as I savored the aroma and taste. As she approached the pool table she reached behind her and undid her bra. She laid it on the table and slipped her t-shirt back on. \"See you in a couple of minutes.\"\n\nI could here the girls giggling and pouring more wine and it seemed like forever before I heard the footsteps on the stairs. I had not bothered to cover myself as they had all seem the merchandise.\n\n\"We have a plan,\" my wife said as they made their way into the room. \"move the recliner to the center of the room and we will stand around you. We will then take turns flashing our boobs for 3 seconds at a time. The one slashing when you come is the winner. We don't know what she wins, but she is the winner. Now move your chair.\" I got up to move the recliners and was lent a hand by a couple of the ladies. They picked their spots by drawing numbers and we were ready to go. Tera was at the foot of the chair and was the first to flash. Steph was on my right side at the end of the chair. Alex was near my head on the right. Across from her was her sister Jane. Bev was across from Steph. They counted in unison, \"One thousand one, one thousand two, one thousand three,\" followed by a very brief pause. Tera pulled up her shirt and turned red as the counting started. I stroked with their count, holding on very loosely to make it last. Steph flicked her nipples as she exposed herself. It seemed like each time around the women would get a little bolder. I had not seen either Tera's or Jane's boobs the first go around so I was more intrigued with their first showing. \n\nThe women started edging me on telling me to shoot my load. I was really holding back as much as I could because I didn't want this to end. As Tera started around for the sixth time, I knew I was close. Steph lifted her shirt and pinched hard on her nipples as the counting continued. Alex moved behind the recliner and dropped her bare tit into my mouth and I knew it was over. On the count of three I came like I've never come before. My semen shot into the air like I was a teenager. Over an hour of pent up ejaculate spewed out jet after jet. Immediately my cock became super sensitive to my touch and I quit stroking, letting it ooze out.\n\n\"I guess the winner gets to fuck you tonight,\" Alex said as she pulled her tits out of my face.\n\n\"I don't think I'll get it up for a week.\"\n\n\"I'm not worried about that. I have a couple of sisters that could help me out if I need it\"\n\nI was totally spent and had come all over my stomach. Jane reached for the towel and started wiping myself off. I squeezed the last of my come from my cock and looked at the aroused faces gathered around the chair.\n\n\"I am going to take a shower. There's room for two if anyone wants to join.\"\n\n\"I'm going home to take care of something,\" Steph said.\n\n\"Me too,\" said Bev.\n\nI stood and gave them both a hug and headed up to the shower. \n\nI grabbed a beer and took a nice long shower and felt great. I put on my robe and went to the kitchen to find Alex and her two sisters sitting at the counter munching on some snacks that were going to serve as dinner this evening. All three had changed into oversized t-shirts that served as their pj's. My observant eyes did not detect a bra in the bunch.\n\n\"Let's take the snacks downstairs and watch a movie,\" my wife said as I went to the fridge for another beer.\n\n\"That probably won't stack up to the entertainment we had this afternoon unless you have some pretty hot porn hid away somewhere,\" Jane commented.\n\n\"I think just a chick flick will have to do for tonight,\" Alex said with a smile.\n\nWe headed down stairs with Alex and I on the sofa, Tara on the love seat, and Jane in the recliner.\n\n\"So which one of the girls had to strip all the way for you?\" Alex asked.\n\n\"That will have to be our secret.\"\n\n\"Well, we know it wasn't one of us so it's down to the other two and you got to see everyone's boobs,\" Tara said.\n\n\"Actually, Bev had to strip all the way, but Steph put on the best show. She actually got herself off and sat on the armrest. It was really hard to hold back from coming even without hardly touching myself. Did the girls tell me they all gave me a little taste?\"\n\n\"Yes, was there a winner?\" Alex snickered.\n\n\"You of course.\"\n\n\"What a suck up,\" Jane said.\n\n\"He can sure suck it up. I found that out earlier today,\" Alex said. \"And hopefully I'll find it out later tonight again. Now let's watch the before I get too horny to keep my hands off of you.\"\n\n\"Don't let me stop you if you think you can get me hard again.\"\n\nSoon after the movie started, Alex slid her hand under my robe and started playing with my cock. Even though I had only come about an hour before, there was some stirring as she played with me. I reached around and started playing with her nipples and she let out a sigh.\n\n\"Are you two at it again?\" Tara said.\n\n\"Do you want us to go upstairs?\" I asked.\n\n\"Heck no. We want to watch,\" she said.\n\nI reached for the remote as I stood up and shut off the movie. I left the girls and went upstairs. I grabbed the vibrator from the nightstand drawer and put my robe on the floor as I moved the covers back and crawled in. I new it would be more comfortable up here for all of us. I started stroking my cock as I called to the girls.\n\n\"The party is up here now.\"\n\nIt wasn't long before the three sisters entered the bedroom with smiles on their faces.\n\n\"I've been naked all day so it's time to join the party.\"\n\nMy wife quickly removed her t-shirt and slipped her panties off before joining mw on the bed. Her sisters looked at each other before they lifted their shirts over their heads. Jane quickly followed with her panties, but Tara sat on the edge of the bed with her panties on.\n\n\"Maybe later,\" she said.\n\nI was about half hard when Alex started kissing me and grinding herself all over me. She was very hot and was not going to wait. She climbed on top of me and worked my prick into her sopping pussy. I wasn't fully erect but she managed to get it in which was like putting a marshmallow into a piggy bank. She worked her pussy muscles around and I was soon fully erect Tara kind of leaned over and had a great view of us from between my legs. I couldn't tell for sure, but I think she was playing with her pussy through her panties. \n\nJane on the other hand was past being at all shy. She laid on her side with her top leg lifted giving herself access to her pussy. I reached for the vibrator on the other side of us and handed it to her. She immediately turned it on and started rubbing her clit. I slowly moved my hand to the inside of her thigh, making my way toward her pussy. I inserted first one then two of my fingers as she worked her clit and my wife rode my cock. In a matter of seconds both of the sisters were coming hard. I could feel the juices running down my balls as Alex slowed her movements. She sat straight up moving me deeper inside of her as she grinned at me. Jane moved my hand away from her pussy as she shut off the vibrator. I moved my slippery hand to my wife's tit and rubbed her nipple as she climbed off me and moved her wet nipple to my mouth allowing me to taste her sister.\n\n\"Who's next?\" Alex asked. \"He is going to stay hard a lot longer than I can handle tonight.\"\n\n\"Are you serious?\" Jane asked.\n\n\"Go for it if he's game, and his prick tells me he's all for it.\"\n\n\"I think Tara has to lose those panties and have herself a good come.\"\n\nAlex and Jane both agreed as they knelt on the bed moving toward their sister. Since she was kind of leaning on one elbow to start with, it was easy for them to push her onto her back. Jane grabbed her panties and started tugging, not getting much resistance. She threw the panties toward me and I immediately brought them to my face smelling the soaked crotch. I got on my knees and handed the vibrator to Jane as I leaned down and took a nipple into my mouth. At the same time, Jane turned on the vibrator and ran it over Tara's clit. After about 30 seconds of us working her that way, Jane plunged the piece of plastic into her sopping pussy. This set Tara off into a wild orgasm that I thought would never end. She had tears running from her eyes as she went totally limp. I leaned over and gave my wife a long passionate kiss.\n\n\"Are you sure you want me to fuck your sisters.\"\n\n\"Yes, I'm sure.\"\n\nI turned to Jane and said, \"I want to eat your pussy.\"\n\nShe scooted up to the middle of the bed with her legs spread. I wasted no time getting between her legs and feasting on her dripping slit until she had a powerful orgasm. I then slid up her body and sucked her nipples as my penis rubbed against her upper thighs. She reached down and guided me between her lips. Other than my wife this was the first woman I had fucked in 28 years. She wasn't as tight as Alex but she had good muscle control. We went slowly at first before she was begging me to fuck her harder. She had two very good orgasms before she asked me for a break. I wasn't on the edge of coming, but it wouldn't have taken much longer. I rolled off her and looked at her two sisters who had been watching our session. Alex looked at my cock as I lay on my back.\n\n\"I'll get you a washcloth and clean you up a little bit.\"\n\n\"I could use one too,\" Jane replied.\n\n\"I'll just get four.\"\n\nAs she returned with the washcloths she was wiping her pussy clean and tossed her used one in a clothes basket in the corner of the bedroom. She gave one to each of her sisters before using the other one on me to wipe up all the pussy juice.\n\n\"Do you need a break or are you ready for more?\" She asked as she absently stroked my hard on. Tara was lying on her side with her top leg bent giving me a good view of her slit. I rolled away from my wife and started kissing my way up Tara's leg. I was soon sucking on her clit and had her close to coming in no time. In the mean time, Jane had started gently sucking on my hard on. After five minutes of this I rolled on my back and guided Tara onto my crotch. She tentatively eased her way onto me. I was sure this was the first cock she had had since she was married 26 years ago. It wasn't long before she leaned down to kiss her juices from my lips and ride me to her first orgasm. Ales guided her to a sitting position and straddled my face with her pussy. The sisters were rubbing their tits together as one rode my cock and the other rubbed her pussy and asshole on my face. I reached out a hand and started fingering Jane as she knelt beside us and hugged her two sisters. In a matter of minutes we were all coming again. We all collapsed on the bed for a few minutes before Tara and Jane headed downstairs to their room and Alex and I drifted to sleep.\n\nI used a vacation day on Monday to send the sisters off in style. "
    ],
    "authorname": "Canary2",
    "tags": [],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/masturbating-for-alexs-friends"
}