{
    "title": "The Mountain Ch. 08",
    "pages": [
        "I have so very much learned my lesson about posting things that aren't finished. My plan is to rewrite this story, but I don't want to leave it unresolved for those who have cared enough to follow it for all this time. This chapter contains a ton of info dump of stuff that probably should have been mentioned earlier. Write and learn! *shrugs*\n\nI know it seems like I haven't been writing at all-but I've actually written two entire novel-length (50k+) works in the same universe as \"The Mountain.\" (It's super easy to write things you're not stressed about finishing!) I plan to post at least one of them here when I'm done with edits. \n\nFor now, here is chapter eight of what will be ten or eleven chapters total. There will be significant changes in the eventual rewrite (and because of that I very much welcome your comments and ideas!) But the major story points will likely be the same.\n\nIf you've given up on this story, my apologies. If you're still along for the ride, thank you so much for your patience and understanding. Writing is hard. \n\n#\n\nSheera led them confidently through the labyrinth-like interior of the mountain. Lucy clutched her hand, feeling like a child. If they were separated, she would be lost and alone.\n\nI'll find you.\n\nWarder had told her to run. He had promised to come for her. That promise-it should feel like a threat. But Lucy knew that part of her fear came from the idea of leaving Warder behind. He was imposing and domineering and frightening. \n\nHe was her mate.\n\nWarder's blood was sticky on her hand as she tightened her grip on Sheera. Lucy thought that she would know if he were dead, even if he were dying. If what Ysabel said was true, death would break the bond between them. She thought she would feel a thing like that.\n\n\"We're getting close.\" Sheera's sharp whisper seemed to echo in the dark. \n\n\"Close to what?\"\n\n\"Outside.\"\n\nLucy's heart started to pound in her chest. So much had happened that she had been momentarily distracted from what it felt like to be trapped inside the mountain. Now, with the possibility of escape so near, she felt as if she were being squeezed from all sides. \n\nSheera was eager to leave the mountain behind, too. She sped up, dragging Lucy towards the end of what she could now see was a rough tunnel cut into the rock. Lucy started running to keep up, still clutching Sheera's hand. Together, they tumbled through the opening of the dusty tunnel and into a building Lucy had never seen before.\n\nThe moonlight streamed through old glass. Large windows covered every wall with skylights overhead. Here and there, vegetation was growing right against the glass, shadowy tendrils of ivy and kudzu pressed in stubborn patterns as they crawled across the slick surface before burrowing into the next bit of brick.\n\n\"Where are we?\" Lucy breathed, dropping Sheera's hand and turning in a full circle.\n\n\"The old hydro-power plant,\" said Sheera. \"My Dad used to think there was a way into the mountain through here because of the way the water flows underneath. Turns out, he was right.\"\n\n\"How did you find it?\" asked Lucy.\n\nSheera took down the hood of her cloak, shaking out her bright blonde hair. \"Luck?\" she said, shrugging her shoulders. \"Sheer fucking stubbornness? I knew I had to get to you. If this hadn't worked, I think I might have found a way to claw through rock with my bare hands.\"\n\nThe way Sheera spoke made Lucy want to shut her eyes and run back into the tunnel. It was the pull of Warder's influence, certainly. But also, a sense that she was ridiculously unworthy of all of this trouble. Sheera was standing in front of her declaring that she would have done anything, risked anything to save her. And what had Lucy done? She had cowered and raged and let herself be trapped. She had given herself to Warder when she was sick and even when she wasn't. She had kissed him-because he asked, but also because she was lonely and because something about him called to her despite everything she did to push those feelings away. Warder was inside fighting Hadren because of what she had done. And the islanders-they were being slaughtered for their foolish attempt to save her. \n\n\"What's wrong?\" Sheera's face fell as she looked closely at Lucy. She reached out and wiped some of the dust off of Lucy's face, as if to better read her expression.\n\nLucy shook her head, twisting the hem of her jacket in one hand. Warder's jacket. \"Nothing. I set the antenna,\" she said. \"Tonight-right before you found me. I don't know if it was high enough and the rocks might block the signal. But I did set it. I did what we came to do.\"\n\n\"It doesn't matter,\" said Sheera. \"What matters is that you're safe.\"\n\nUnbidden, Lucy felt anger racing up her spine, hot and fast and thick. \"What do you mean it doesn't matter?\" she bit out. \"It's the whole reason we went there in the first place! It's the reason we got caught and it's the reason I was trapped inside that mountain for god knows how long.\"\n\n\"Luce-,\" Sheera held up her hands in instant surrender. \"That's not what I meant. I'm sorry. That's not what I meant. Tell me what happened,\" she said. Her voice was maddeningly calm. Lucy wished that she would yell. \n\n\"I don't even know where to start,\" said Lucy.\n\n\"Three and a half weeks,\" said Sheera. \"That's how long you were gone.\"\n\n\"I tried to keep track at first, but after a while everything kind of blurred.\"\n\n\"It will get better. You'll tell me everything as soon as I get back out.\"\n\n\"What?\"\n\n\"I have to go back into the mountain,\" said Sheera. \"I have to try to help the islanders. I might be able to get some of them out the same way I got you.\" Sheera shut her eyes and took a deep breath before opening them again. \"Miles is in there, Luce. I-I might have been able to stop him, but instead, I goaded him. I told him he wasn't brave enough.\"\n\n\"Sheera,\" said Lucy. \"You could get killed.\"\n\n\"I know what I'm doing,\" said Sheera. \"I got you out, didn't I?\"\n\n\"Yes, but-\"\n\n\"I know the mountain better than those idiot rebels,\" said Sheera. \"I have to do this.\"\n\n\"Fine,\" said Lucy. \"I'll go with you.\"\n\n\"You're not going back in there!\"\n\n\"What? You can risk your life but I'm supposed to go hide?\" As if she couldn't do anything useful. As if she always needed protection. Warder had done the same. Told her to run while his own blood stained her hands. \"I risked my life on that mountain! I lost everything, everything while you got to go home. I did what we set out to do.\"\n\nShe saw Sheera reel back at the emphasis she put on \"we\". It wasn't fair to act as if Sheera had abandoned her. Especially not know when her friend had found her and shown her the way out. But fair didn't matter. Fair didn't undo the fact that she was permanently changed. Because, if she was honest, the real reason it was so easy to be angry at Sheera was that her best friend's presence proved that the normal she had longed for didn't exist anymore. \n\n\"You're free now, Luce,\" said Sheera, as if she were speaking to a frightened animal that could bolt at any moment. \"\n\n\"You don't know,\" said Lucy. \"You don't understand.\"\n\n\"You have to go and find my father. Tell him about the antenna.\" Sheera was already moving away from her, disappearing back into the tunnel.\n\n\"Sheera, wait!\" Before Lucy could run after her, Sheera, just out of sight, let out a scream. Lucy ran towards the sound, stopping only when Persephone emerged from the tunnel holding Sheera clasped in front of her, a knife to her throat.\n\n#\n\n\"Why don't you introduce me to your friend?\" Persephone said.\n\n\"Let her go and I'll come back to the mountain with you,\" said Lucy automatically. She didn't want Persephone to know Sheera's name in case there was some chance she didn't recognize her. Sheera had already been kicked off the mountain once. She had been warned not to go back.\n\n\"Very noble and all, but that wouldn't be the smartest move at the moment. The mountain is in a state of fucking chaos thanks to your merry marauding islanders.\"\n\n\"Is that why you left?\"\n\n\"I left because Warder sent us to find you,\" said Persephone. \"Believe me, I'd much rather be inside doing something important.\"\n\nLucy could see that Persephone was holding herself awkwardly, favoring the knee that she had landed on while they were trying to run from Ysabel. She also had a gash on her forehead, probably from when she fell after Ysabel's attack. \"We?\"\n\n\"Persephone?\" Another voice sounded from the tunnel and Cenia appeared, her light hair streaked with dust. \"Lucy! You're okay.\" Her eyes flickered down, taking in the blood on Lucy's hands before she returned her gaze to her face, concern in her pretty blue eyes. \"Are you okay?\"\n\n\"Yes,\" said Lucy. \n\nSheera snarled and writhed in Persephone's grasp. Cenia seemed to notice her for the first time. \"Persephone, what are you doing?\"\n\n\"She's an islander,\" said Persephone. \"She's a threat.\"\n\n\"She's not,\" said Lucy.\n\n\"Are you sure?\" asked Cenia.\n\n\"Yes,\" said Lucy. \"Make Persephone let her go.\"\n\n\"I meant, are you sure she's an islander?\" asked Cenia, confusion furrowing her brow.\n\nPersephone glared at Cenia, a look of disgust on her face. Then, she leaned in, her thin, patrician nose sniffing at Sheera's neck. A look of shock passed over her face and she laughed. \"My god.\" She shoved Sheera away from her. Sheera stumbled but caught herself, instantly making her way towards Lucy and trying to shield her.\n\nLucy pushed her gently away, her focus on Persephone. \"What's going on?\"\n\n\"What's going on is we're taking you somewhere safe until Warder can come for you.\"\n\n\"She's not going anywhere with you.\" This from Sheera, one hand pressed to her neck where Persephone had held her blade. \n\nPersephone let out a growl of frustration and darted forward, grabbing Lucy's arm. Sheera leapt to her defense, but Cenia blocked her, holding her arms. Soon, the four of them were moving back into the tunnel, a flurry of arms and legs and shouted threats. Amidst the commotion, it took a moment for the other sounds growing around them to register. Only when rock began to rain down on their heads did each of them slowly realize what was happening.\n\nThe tunnel itself was shaking. \n\n\"Run!\" said Persephone, letting go of Lucy and pushing her back towards the mouth of the tunnel. \"It's caving in!\"\n\nJagged pieces of rock began to shower from the ceiling of the tunnel as it cracked apart. Lucy ran, blinded by the dust, pelted by rock. She stumbled and felt a hand wrap around her upper arm, dragging her towards safety. When her feet hit the cracked concrete of the power plant floor, Lucy turned around, expecting to see Sheera. But it was Cenia who had dragged her out. Her eyes swept the room, barely registering the hulking, rusted shapes around them, looking for her friend. A split second, and it was clear they were alone. Without another thought, Lucy wrenched herself out of Cenia's arms and ran for the rubble of the tunnel.\n\n\"Sheera!\" She clawed at the rock, feeling her eyes fill with tears as it slid through her fingers like sand, filling in what small divots she managed to make. She dug more deeply, scooping debris away in fistfuls, ignoring the way the small, gritty pieces tore at her skin. \"Sheera! Can you hear me?\"\n\nShe heard Cenia talking, but she ignored her. It was an unwelcome, but distant, distraction. She said something like, \"Lucy, you need to stop.\"\n\nLucy remembered what she had done when Ysabel threatened her, the light that had seemed to flow from her fingers. As alien as it had been, she knew that light. She knew it was a part of her, that she had summoned it. So, where was it now? She leaned back, her knees digging into the gravel, she closed her eyes and let the fear and the pain rush through her, the joy of thinking she was going home and the horror, moments later, of knowing that Sheera might not be going with her. The light had come from something like this place - despair, desperation. It had all been the same. \n\nIt had to have been the same.\n\nBut something was missing. When the light rebounded, she had felt a kind of stillness, a steely reserve that seemed to belong more to someone like Warder than someone like her. A power that was bigger than anything that was meant to exist in her body.\n\n\"They could be all right,\" said Cenia softly. \"We've seen cave ins before. Pockets develop and the people in them can be saved.\"\n\n\"Then help me to dig,\" said Lucy, distracted from her dissection of the light. She brushed her hands over the debris again, calculating instead of panicked. If she couldn't access that wild power, at least she could remind herself that she was smart. Resourceful. Being petted and dominated by Warder had almost made her forget.\n\n\"We aren't going to be able to do anything without tools,\" said Cenia. \"They'll know about the tunnel. There are sensors all over the mountain. A security team is probably already working from inside.\"\n\n\"We can't count on that. It's a disaster inside. Bad enough that Warder let me out.\"\n\n\"He sent us after you immediately. And you know he didn't mean for you to leave the mountain. He only knew you would try.\"\n\nIgnoring that revelation, Lucy changed tactics. \"Persephone's in there. You must care about her even if you don't care about my friend.\"\n\n\"Lucy, I would do something if I could,\" said Cenia. She looked at her earnestly, as if she could will Lucy to believe it. \"For both of them.\"\n\n\"You can go with me into town. We'll get people to help.\"\n\nThe anxious openness in Cenia's face shuttered. She looked down at her boots. \"We should not go into town,\" she said. \"Persephone and I were following you to keep you safe. Town is not safe.\"\n\n\"It's my home,\" said Lucy. \"That is my home.\" She pointed to the collapsed tunnel, tears in her eyes. \"My friends. My family. They're all on the outside. Or...they're supposed to be.\" She felt tears gathering in her eyes and brushed at them, impatient with herself. She wasn't sad. She was terribly angry. All of this was Warder's fault. For doing what he had done to her. For not letting her go. \n\n\"With the attack, emotions will be running high. The islanders can't be trusted.\"\n\n\"I am an islander,\" said Lucy. \"If town isn't safe there, and the mountain isn't safe-\" Lucy choked back tears, swiping a hand across her face to try to hide the fact that she was about to break down. It was about Sheera. It should be entirely about Sheera. But Warder-his image filled her mind too. He had told her to run. After weeks of chasing her, cornering her, protecting her, he had sent her running away from him.\n\nWhich-why should she care?\n\nBut it hurt. It hurt like a physical wound. Like the sound of the cave in and the silence that followed. She had no home. No place was safe.\n\nShe felt Cenia's arms wrap around her shoulders. She was all muscle, wiry and slim, but strong. \"Someone will help them,\" she said. \"And it won't be like this forever. But-things have changed. The safest thing to do right now is to lay low.\"\n\n\"Lay low?\"\n\n\"I don't know another way back in that won't attract attention. Is there somewhere we could go? Somewhere close to town but not in it?\"\n\n\"Don't pretend you don't know this island like the back of your hand.\"\n\nCenia nodded. \"I know it the way a soldier knows it. I'm asking for your advice. Where do you feel safe? If town isn't an option? If-\" she trailed off.\n\nIf Warder isn't an option?\n\nWas that what she was going to say? How long would it take to get over this feeling, hating him but hurting for him at the slightest distance? She still planned to escape. If she managed it, physically, how long before the bond between them burned out? How long would it hurt?\n\n\"There's a place,\" said Lucy slowly. \"Sheera and I used to hang out there. Go camping. No one that I know of uses it otherwise. The path from town isn't great.\"\n\n\"Where is it?\" asked Cenia.\n\n\"Near Folly Beach,\" said Lucy. \"It's on the side closer to town. If we-\"\n\n\"I know the way,\" said Cenia. \"Let's go.\"\n\n#\n\nWhen they reached the small cave in the woods above Folly Beach, Cenia did a sweep of the area and declared it passable. Then, she handed Lucy a bag of trail mix and an emergency blanket out of her pack. \n\nConvinced she wouldn't be able to sleep, Lucy huddled against the wall of the cave with the blanket around her knees and focused on the sound of the not-too-distant surf breaking against the beach. \"Folly Beach\" took its name from the incredibly rocky, sharp sand that littered most of the shoreline. Comfortable paths to the water were few and there were other much friendlier beaches scattered across the island. Still, Lucy was desperate to feel the water rushing over her toes after weeks trapped under the mountain. \n\nSomething kept her from suggesting it to Cenia. She doubted that Cenia would deem swimming in the dark a safe activity. And Cenia was clearly on high alert. She sat at the front of the cave, one hand on the knife at her belt, scanning the darkness beyond the cave for any sign of threat.\n\nGiving up on the beach-for now-Lucy decided to occupy herself with a different activity. Cenia, after all, had been the one to tell her about omegas. And if that was what she was-what they thought she was-she needed to learn more. Lucy got up, crouching slightly to avoid hitting her head on the top of the low cave and letting the emergency blanket crinkle noisily so as to alert Cenia to her approach. Cenia turned her head and waited for Lucy to settle next to her. Then, she scooted a little closer and turned her attention back to the woods outside the cave. \"You okay?\" she asked.\n\n\"Sort of,\" said Lucy. \"Do you mind talking?\"\n\n\"Never,\" said Cenia amiably. \"Although your tone suggests that you might plan to ask things I can't answer.\"\n\nLucy hadn't been aware she had a tone. Cenia noticed more than she expected. \"When I met you, you called me an 'omega,'\" said Lucy. \"You said you were one, too. That omegas stick together. So...what are we?\"\n\n\"We are peacekeepers,\" said Cenia. \n\n\"You're a warrior.\"\n\n\"Not because I want to fight,\" said Cenia. \"War is part of our lives and if I'm in it, I can influence it.\"\n\nLucy considered that. \"Nothing about Ysabel seemed peaceful.\"\n\n\"Ysabel's situation was not-it wasn't what it would have been like for an omega, before we came here.\"\n\n\"What's different about the island?\" asked Lucy. \"Why come here at all?\"\n\n\"I didn't mean the island,\" said Cenia. \"I meant-before we came here. To this-\" she lifted her hand and gestured around her, a small gesture, but one clearly meant to encompass the entire world. \"We weren't always here, in your world.\"\n\n\"My...world.\"\n\nCenia nodded, her pale hair a flash of color in the dark.\n\n\"You're telling me you're aliens or something?\"\n\nCenia laughed. \"Or something. We didn't come from up there,\" she pointed to the endlessly starry sky over their heads. \"We came through...I guess you would call it a portal. An opening.\"\n\nIt was crazy. But what wasn't? Even with the occupation of the island, even with the sense that the mountain people were in some way alien, it had been almost possible to rationalize. To make excuses. But just hours earlier, she had seen light flow from under her own skin. She had killed with it. Other worlds seemed...possible.\n\n\"Why come to this world?\" Because it was the next thing she wanted to know if she was willing to take the existence of other worlds for granted.\n\n\"Curiosity,\" said Cenia. \"At first. And your world-it's more peaceful than ours. At home, we were in a state of near-constant war and part of it had to do with a lack of territory. There are large portions of our world that aren't really inhabitable. Here, there was room.\"\n\n\"Earth isn't exactly known for not being crowded,\" Lucy pointed out.\n\n\"You couldn't understand it unless you've lived it,\" said Cenia, not unkindly. \"You have prairies, grasslands, forests. You have islands. And mountains.\"",
        "\"Why not come here sooner, if it was so crowded?\"\n\n\"There wasn't always a way. There's a place there-\" And then she said a word that sounded to Lucy like a garbled \"Adirondack.\" \"The best translation I can think of is 'The Last Lands.' It's not really livable there, either, but warriors will go there to prove themselves, spending days without access to fresh food or water, fighting off the creatures that come out at night.\"\n\nLucy shivered and moved infinitesimally closer to Cenia. The darkness of the island felt friendly, especially after the gloomy sameness of the mountain. But there was an emotion in Cenia's remembering that made these 'Last Lands' feel present as she spoke of them. Lucy had a clear sense that it wasn't a place she would like to be. \"The portal is there?\" she asked.\n\nCenia nodded again. Lucy's eyes were adjusted to the dark now and she could make out Cenia's face, just enough to see that her gaze was distant, focused on the story at hand. \"A warrior came back from his pilgrimage and reported that he had found a kind of door, an opening into a place with what seemed like infinite space. It was upstate New York, near Canada. Fields and lakes. And it was winter-endless, glistening snow. He went back and told his clan and after sending scouts, they made plans to move into the new lands. They saw it as a sign that their clan was favored, that they had been given space to live and grow.\"\n\n\"And that was you?\"\n\n\"Not me, exactly. But us-we call ourselves-\" and she said another word Lucy didn't know.\n\n\"Spillen?\"\n\nCenia spelled it out, tracing a slim finger over Lucy's arm. \"Sylphen. Sill. Fen.\"\n\n\"So, everyone came through? You just-moved in?\"\n\n\"My people approached it as they do anything. Like a battle. There was strategy. Purpose. The strongest, smartest warriors went first, the ones who not only could handle anything they found on the other side, but who could blend in if they needed to. Determine whether the land was safe. What wars might be going on.\"\n\n\"We have wars, too.\"\n\n\"Yes. But the warriors who went through first, they felt they could manage the native conflicts. They determined what we would need to blend and integrate. They gathered supplies. The operation took nearly a year, especially because it isn't easy to get anything in to the Last Lands. We lost good people travelling that terrain, people who gave their lives to make better paths so that families could join their warriors.\"\n\nLucy felt hopeless listening to Cenia recount the careful, planned overtaking of her world. At the same time, Cenia's story made it clear that the movement had been urgent. No one leaves home unless home is the mouth of a shark. It was a line from a poem about refugees, intended to evoke compassion for people who fled home only to be met by unfriendly borders. Could she really refuse her compassion to the Sylphen simply because she thought of her world as hers alone? Instead of Warder, she tried to imagine Cenia fighting through the Last Lands to the snowy expanse of Earth. Elias. He was around six years old. How long had the warriors been on Earth? Had he been alive to make the journey through the portal? Then, a terrifying thought struck her that extinguished the fragile flame of her compassion. \"Are more of them-of you-coming?\"\n\nOnce more, Cenia shook her head. \"The portal is closed.\"\n\n\"You closed it?\"\n\n\"No, it closed on its own. Without warning. And no one has ever been able to open it.\"\n\n\"Oh,\" said Lucy. If what Cenia said was true, they couldn't go back.\n\n\"Of course, you're probably wondering how you could be an omega, like me, if we're from different worlds.\"\n\nDespite her million questions, Lucy hadn't been wondering that. Yet. But now she hoped Cenia would explain. \"I know I'm from this world,\" said Lucy. \"I have a lifetime of memories. I have parents.\"\n\n\"You are,\" said Cenia. \"But you're also omega. The thing is, when the portal closed, almost all of the omegas were on the other side. Waiting, in the Last Lands. Because the Alphas and Betas went first, to make things safe. Most of our people are Betas,\" said Cenia, explaining without being asked. \"The easiest way to describe them is that they're similar to humans. They are warriors but also shopkeepers, childminders, architects...\"\n\n\"Normal,\" said Lucy.\n\n\"Relatively,\" agreed Cenia. \"Alphas, they're born leaders. Strategists and warriors. There are humans with traits like the Alphas, but we've never found anyone on Earth that is truly an Alpha as we know them.\"\n\n\"Warder,\" said Lucy, his name heavy on her tongue.\n\n\"Of course,\" Cenia agreed. \"But the omegas-they're the balance. It doesn't matter how strong a warrior is if he can't understand emotion. It doesn't matter how well-planned the war is if someone doesn't understand peace. Omegas are the heart. We're rare and powerful in a way that no Alpha could be, no matter how strong. And when the portal closed, almost every one of us was on the wrong side. Left behind. Left behind in the Last Lands, an environment many of our strongest Alpha could not survive. The portal closing, it was likely a death sentence.\"\n\nThere were tears on Cenia's cheeks, glistening in the moonlight. Lucy stayed quiet. She wanted to ask how she could be an omega if she wasn't born that way. But the story of the lost omegas-it was obviously raw for Cenia. And if Lucy allowed herself to think beyond her immediate circumstances, it was unbearably sad. The strong had gone first, to see the path made safe. And the path had crumbled behind them without warning.\n\n\"How did you make it across?\"\n\n\"My parents came in on one of the earlier journeys. I insisted on coming with them. They didn't want me to do it.\"\n\n\"But if you hadn't-\"\n\n\"Warder promised to look after me,\" said Cenia. \"I thought he was saving me from being bored, waiting on the other side. He ended up saving my life.\"\n\nWell, if there had ever been any question about where Cenia's loyalties really lay-with Warder or with her fellow omega-they were laid to rest with that statement.\n\n\"After the omegas were lost, things were bad for our people. Within a few months, there were reports that there were omegas among the humans. We don't know why. Maybe the portal was open before-maybe other portals existed that our history has forgotten. Or maybe omegas are a reality that both of our worlds share. Whatever the reason, there are omegas among your kind. And you're one of them.\"\n\n\"It could be something else,\" said Lucy.\n\n\"Human omegas are functionally the same as the Sylphen,\" said Cenia. \"As far as we can tell.\"\n\n\"What-function?\"\n\n\"Well-I mean, it's different-omegas and alphas, when they mate. It's not like it is for anyone else.\"\n\nLucy remembered the feel of Warder's knot, heavy inside her. The words he had whispered to her in her fever dream. You'll take it because I ask it of you. She should hate him for it, but the memory made her shiver.\n\n\"So we might not be real omegas like you, but we're good enough to be fucked,\" said Lucy, her voice cold.\n\nCenia looked as if she has been slapped. \"It isn't-I didn't mean-\"\n\n\"I'm not like you,\" said Lucy. \"I'm human.\"\n\n\"I never said-\"\n\n\"Just because it's convenient for your alphas-\" she nearly spit the word, \"to take advantage of something strange about me, whatever it is that makes me sick, it doesn't mean-\"\n\n\"The sickness is part of it,\" said Cenia, her voice small. \"Human omegas, it doesn't seem that they used to get sick before our Alphas came. We call it estrous. And if we had been here, if we had known-if I had known-I wouldn't have let you go through it alone.\"\n\nLucy wanted Cenia to rage at her, to fight with her or to cry or to reject her. Anything but this direct, heartfelt certainty - a gentle promise of friendship even as Lucy rejected whatever bond the woman wished to build between them. \"So it's possible, if your people had never come here, I wouldn't be this way?\"\n\n\"It's possible,\" said Cenia.\n\nLucy turned her head away, shoving her knees against her chest and resting her cheek on the crinkly surface of the emergency blanket so that her face was turned away from Cenia. She could hear her heartbeat thudding in her own ears, but she still heard Cenia, too.\n\n\"I'm sorry. But even if it was possible, we're here, now.\"\n\n\"Why are you here?\"\n\n\"I told you. We were fleeing war. And then the portal closed.\"\n\n\"No,\" Lucy lifted her head and turned to Cenia again. \"Why are you here on this island? You said the portal opened somewhere near the Canadian border. Why come here?\"\n\nCenia opened her mouth to speak and then seemed to think better of it, shaking her head. \"I should let Warder tell you that part.\"\n\n\"I thought omegas looked out for each other. Confided in each other.\"\n\n\"I told you what I could. Lucy, I'm sorry-\"\n\n\"It's fine,\" said Lucy, in a tone that clearly indicated that it wasn't. She shrugged off the blanket, letting it fall at Cenia's feet. Then, she marched deliberately across the cave and settled far away from Cenia, hugging her body into a small ball to stay warm. \n\nOn some level, she understood. The warriors-the Sylphen-had seen an opportunity and they had taken it. It had ended in a kind of tragedy, with the loss of the omegas. But they were here. They were obviously thriving, in their own way. When an opportunity presented itself, it was to be seized. \n\nThat was why Lucy had abandoned the noisy blanket. That was why she had moved far away, pretending to sleep. Maybe the warriors didn't sleep. Warder never seemed to. But if Cenia was really like Lucy, she would eventually fall asleep. And Lucy would be ready to seize the opportunity.\n\n#\n\nWarder was no stranger to difficult choices. He had set himself on a path years ago that had offered little else. Even the warriors who had accepted Hadren's leadership knew that it was Warder's decisions that guided the direction of their lives. It was his plan that had brought them to the mountain. It was some kind of faith in him, he knew, that kept them there. He had rejected that leadership, forced his people to accept Hadren by refusing to replace him.\n\nThat was over now.\n\nSo many puzzle pieces, small concessions, carefully tended quarrels, weaved together with fate to make the fabric of their existence. Every being inside the mountain participated. And every life-human or otherwise-on the outside, too. \n\nIt was easy for Warder to consider the consequences of his choices. He was a strategist at heart. Even as a child, he had quickly learned to hide his intelligence. No one wanted to play a game with an opponent who had already determined exactly how they were going to lose. As a warrior, he used the same tactic to guide his opponents into believing whatever it was he wished them to believe about his intent. Even admitted to himself without pride that those who feared him who had no sense of the true extent of his power.\n\nThat had been a choice, too.\n\nAnd then, on a sunny day, on the side of the mountain that he had chosen-chosen-for a kind of prison, he found her. Her dark hair tousled by the warm wind, her eyes wide and frightened. Delicate. Beautiful. He had decided that he would have her. That he would keep her. Make her his mate.\n\nIf he had known what that choice would set in motion, perhaps he would have let her go.\n\nOne large hand, lying flat against his muscled thigh, flexed into a fist at the thought. It had never been an option. Even if he had known for certain that his world would burn for it, he would have had her. Would have laid her down and taken her amongst the flames.\n\nSo, here were the strange players laid out before him. The fiery blonde, retrieved from a tunnel collapse in sector five. A collection of her comrades, bruised and battered islanders pretending to be warriors, scattered around the containment area. And, in the medical suite beyond, another handful of the same being tended by the warriors they feared for the wounds that had been inflicted in their short-lived and ill-advised rebellion.\n\nHe wondered if they were even aware that Ysabel was not one of their own. She was so small-pale and fragile. Especially now as she hovered between life and death, cared for alongside the rebels. From his own hospital bed, Hadren had demanded that the others be banished even if it killed them. That all of their resources be focused on Ysabel. Warder had refused to allow it. \n\nFor years, Ysabel had been coddled, treated as if she were special. She would have been protected even from Hadren's cruelty, if she had been willing to avoid it. But that care had only nursed the darkness in her. Had turned her mad. What Warder didn't know was if the madness and the power fed or fought each other. Was it Hadren's treatment that had caused Ysabel to become what she was? Or was this a path Ysabel had always been on, one she would have found even without her oddly elevated and isolated position? \n\nYsabel was asleep, but the blonde was staring at him. Glaring, really. He had been forced to gag her when she would not stop screaming, so she used her eyes to communicate her hatred. He had recognized her immediately. The fair-haired friend, Sheera. He still suspected that it had been her idea that brought them both to the mountain that day. In a way, he ought to thank her. Instead, when she screamed at him again through the gag, he backhanded her, careful to mediate the force of the blow so that she wouldn't lose consciousness. He only wanted her attention.\n\n\"Tell me who ordered the attack on our children,\" he said. \"That is what I want to know. If I remove that gag and I hear anything else, I'll be tempted to cut out your tongue.\"\n\nTempted. But his mate wouldn't forgive him easily for hurting her. He would do it, but only if the woman refused to cooperate. \n\nHe waited, watched as she reasoned through his threats, considered her own options. Slowly, her gaze locked on his, the woman shook her head.\n\n\"You will not tell me?\"\n\nShe shook her head again.\n\n\"Perhaps you do not know?\"\n\nHe knelt in front of her, reaching around the back of her chair to ensure that her wrists were still bound. Around her, the islanders who hadn't passed out from fear or exhaustion watched him warily, silent without any provocation. \"I do not care if you do not know,\" he said, his voice low and dangerous. \"You will find out. You will bring that person to me and I will kill them. That is our justice-that is what you walked into when you chose to attack our mountain. When it is done, the rest of you will be allowed to go home. To tell them of our mercy.\"\n\nSlowly, watching her every reaction, he removed the gag from the woman's mouth. She coughed and her arms jerked and he knew she wanted to rub her lips where the cloth had been tied too tightly. He raised his own hand and ran his thumb over the red marks. \"Tell me, Sheera,\" he said. He leaned in, his voice too quiet for the other islanders to hear. \"Tell me, or I will be tempted to tell your islanders all kinds of things about you.\"\n\nHe felt her stiffen beneath him. Her arms jerked again and he suspected that this time, she itched to slap him, to fight back. Perhaps it was unwise to goad her-his mate would be displeased if he was forced to kill her. But peace within the mountain depended on someone paying the price for the attempted slaughter of the women and children in the nursery. It would be his first act as leader or else the warriors would not truly accept him, even as so many of them had tried to force him into the role for years.\n\nHe had built much of his life around refusing that burden, but now he would do what was necessary to shoulder it. All of their safety depended on it. Lucy's safety depended on it. That was enough.\n\n\"Tell me,\" he said, his voice silky, cajoling.\n\n\"I did it,\" Sheera lied, her voice steady. \"Kill me.\"\n\n\"Liar.\"\n\n\"It was me. I knew it would hurt. I understood more than any of them what would really hurt. You warriors expect to die, but to kill a child or an omega. That's the only way to really hurt you. It's what I thought you deserved.\"\n\n\"When the cameras are up and running again, we will know who it was,\" said Warder. \"I will take my time with the culprit. I'm giving you an opportunity to hasten the process.\"\n\n\"I'm in no hurry,\" said Sheera. \"I'm having a great time.\"\n\n\"We will withdraw medical care from all of the rebels until the guilty party is punished.\"\n\n\"I told you,\" said Sheera. \"I told you the truth!\"\n\n\"The cameras near the tunnel we found you in are still operable,\" said Warder. \"I know where you were when the fire was set. You were on the other side of the mountain, searching for my mate.\"\n\nSheera reared back as if he had slapped her again. \"Your mate,?\" she hissed.\n\nHe took great satisfaction in seeing her register the truth. That Lucy belonged to him. That harming him would harm her.\n\n\"I will retrieve my mate,\" he said. \"As soon as I've settled matters here. I know there is a history between you. It may prove useful.\" Warder reached out and smoothed a lock of hair from Sheera's cheek. \"That is why you are not dead.\"\n\n#\n\nCenia didn't drift off until the early morning. Light stained the sky in the distance, hazy in the fog rolling in from the water. Quietly, Lucy slipped from her spot on the floor, tiptoeing over the rock until she was far enough from the cave to be sure that Cenia wouldn't hear her footsteps.\n\nHer best option was to go back to town. Sheera had said that doing so could be dangerous. But she could tell the other islanders what she knew about the rebellion. And, most importantly, she could tell Ioanni, Sheera's father, that she had successfully placed the antenna. \n\nIf the islanders could find a way to reach the outside world, everything would change. \n\nFor a moment, Lucy indulged in a fantasy where she started life over again on the mainland. Surely Warder wouldn't come after her there. Or, if he did, she would have more places to hide, more people to turn to for help.\n\nHe didn't really want her, after all. He craved control. Dominance. He was brainwashed by the strange customs inside the mountain. If she could get away, he would forget about her, the way he had forgotten about his son. \n\nIt isn't about me. It isn't real.\n\nLucy let out a small squeak of surprise when a blue spark seemed to fly from her hands. Had thinking about Warder summoned it? She took a deep breath, banishing thoughts of Warder. As much as she could.\n\nAfter a few false starts, Lucy found the path towards town. She intended to step off the path if she heard anyone coming-warrior or islander. But the walk was silent, pleasant, even, as a warm breeze from inland met the cooler sea air. \n\nThe first signs of the islanders were a scattering of small cabins along the tree line where the forest gave way to the marsh and then the dunes closer to the beach. Most of the families living in the more isolated cabins had moved closer to town after the occupation. But there were still a few diehards living out here-no one that Lucy knew well. She approached the cabins slowly, trying to remember which ones were occupied. She thought she saw a curtain twitch in the window of one tidy, blonde wood cabin, but no one emerged.\n\nFeeling a sense of unease, Lucy kept moving, watching the cabins and the trees for signs of life. She was undecided as to whether it was a good idea to be seen by the majority of the islanders. She could avoid the main street and the square-possibly, the remaining islanders had retreated to emergency housing in the library and the church. That was the protocol, after all, even if the \"shelters\" would offer little real protection if the warriors came after them.\n\nWith a shake of her head, Lucy realized that she thought of Warder and his people exclusively as \"warriors\" now rather than \"mountain people\" or \"invaders\". It was only a slightly more familiar term, but it bothered her. Because they truly were warriors, even down to the children like Elias and Shell. They had a sense of purpose that the islanders lacked-mostly because they seemed to have their own reasons for taking over the mountain while the islanders were as unaware of the reasons for their strange captivity as the day it had first occurred.",
        "It was unlikely that Sheera's father would be in town even if everyone had gathered together for safety. Ioanni was somewhat of a loner, especially since Sheera's mother had died. Skirting the town square, Lucy took a beach pebble path that wound behind several rows of houses. The island felt abandoned. Lucy pulled Warder's jacket more tightly around her and started to jog, eager to reach the old, rambling beach house where Ioanni lived. She had spent hours and hours there as a child, breaking apart pieces from Ioanni's giant collection of electronics and then, with Ioanni's help, putting them back together. \n\nShe was almost to the path that led exclusively to the house when she heard footsteps behind her. She turned and saw a middle-aged woman standing in the road behind her.\n\n\"Hello?\"\n\nThe woman stared and Lucy tried to place her, flipping through her internal database of names and faces. Slowly, the name surfaced.\n\n\"Mrs. Crisp? Lori Crisp?\"\n\nThe woman frowned and swayed slightly, her eyes fixed on Lucy.\n\n\"Are you all right?\" Lucy asked. \"Did something happen?\"\n\n\"My son.\" said the woman. \"My son went inside the mountain.\"\n\nLucy took a few steps towards Mrs. Crisp. The woman looked like she might collapse and Lucy thought to catch her. \"I'm so sorry,\" she said. \"I think-I think most of them are okay. I wish I knew more.\"\n\n\"He's gone. And then the food didn't come. We're all going to die.\" The woman's voice was strangely flat. Trying to piece together what she meant, Lucy realized that it must be the day when a food delivery was expected from the mountain. A poorly timed rebellion, she thought.\n\n\"I'm sure something can be done,\" said Lucy. \"Please, where is everyone? Can I help you? Can I take you somewhere?\"\n\n\"No,\" said Lori. \"Get away from me.\" She ran then, heading towards the woods. Lucy started to call after her, but she didn't know what to say. The people living on the outskirts of town had always been odd. \n\nShe continued towards town, shaking off the strange encounter. As she drew close to the town square, she noted the empty streets, but that wasn't unexpected. With some of the strongest islanders inside the mountain, people would be cautious. \n\nFollowing an instinct to avoid further unplanned encounters, Lucy stuck to paths she expected to be deserted. It hurt to bypass the road to her parents' house. But advising Ioanni of her success with the antenna needed to be her first priority.\n\nArriving on the porch of Ioanni's beach house outside of town was its own kind of homecoming. She had been friends with Sheera for several years before the warriors came, ever since Sheera and her family started spending time on the island. She braced herself as she knocked on the door, afraid she might cry at the sight of a familiar, beloved face. But the house stayed silent. \n\nSlowly, she crept around the side of the house to check for Ioanni in his workshop. He had set up the workshop in what had once been the garage. Now, it was filled floor to ceiling with electronics. Over the years, more and more of the islanders had been willing to give their electronics to Ioanni as hope of their future usefulness has waned. \n\nLucy heard the sound of metal against metal before she even turned the corner. Ioanni was wearing a helmet and using a lit candle to melt some kind of wire.\n\n\"Ioanni?\"\n\nHe looked up and, when he saw her standing there, dropped the candle. Mercifully, the flame winked out before it landed on the cluttered workbench. \"Lucy!\"\n\n\"Ioanni!\" \n\nIn a moment, he had vaulted around the workbench and pulled her into an awkward sideways hug. \"Are you well, Lucy? How did you escape?\"\n\nThe reality of what she had to tell him washed over her, causing her to be momentarily speechless. \n\n\"Lucy, sweet girl, what happened?\"\n\n\"Sheera got me out,\" she said. \"She found a tunnel into the mountain inside the old power plant.\"\n\nIoanni shook his head. \"She insisted. I guess she was right. Is she with you?\" He peered around her in the direction of the house.\n\n\"No,\" said Lucy, her voice choked. \"There was an accident when we were trying to leave the mountain. She was trapped in one of the tunnels.\"\n\nIoanni's grip on her shoulders tightened painfully and then fell away. \"Is she all right?\"\n\n\"I don't know,\" Lucy answered honestly. \"If she survived the cave in, she's trapped inside. Ioanni, I'm so sorry. If I could, I'd trade places with her.\"\n\n\"You survived,\" said Ioanni slowly. \"Sheera is strong, too.\"\n\nLucy was surprised to hear Ioanni call her strong. She wiped at the tears that were starting to fall silently down her face. \"I'm so sorry.\"\n\nIoanni gripped her shoulder again, squeezing hard. \"My daughter made her choice,\" said Ioanni. \"We must hope that she survives.\"\n\n\"I placed the antenna,\" said Lucy. \"Last night, before the rebels attacked. If it's working, we might be able to find help. For Sheera. For all of us.\"\n\nLucy wondered, unbidden, what would become of the warriors if help reached the island. Perhaps Warder would die. Perhaps many humans would die before they neutralized the threat. \n\n\"You placed the antenna?\" asked Ioanni, sharp interest in his eyes. \"Where?\"\n\n\"On some kind of balcony high up on the mountain. I could see the lights of the town, but I don't know if the antenna is high enough or clear of obstacles like you instructed.\"\n\n\"I'll start trying to make contact,\" said Ioanni. He brushed her hair out of her face, wiping awkwardly at the tears on her cheek. For a moment, his gaze lingered and Lucy imagined that he was examining the marks on her neck where Warder had bit her. Self-conscious, she tugged her sleeve down to hide the worse mark on her wrist. \"You did a good job,\" said Ioanni, snapping her out of her worry. \"This may be the break we need.\"\n\n\"What else can I do?\" asked Lucy. \"How can I help Sheera?\"\n\n\"Keep yourself safe,\" said Ioanni. \"Tensions are high in town right now. You shouldn't go home until we know more of what became of the rebels.\"\n\nIt bothered her that Ioanni had also realized she might be in danger from her own people. Bothered her more than it had when Persephone and Cenia had suggested it. \"I'll be careful,\" she said. \"When will you know if the antenna is working?\"\n\n\"A few days at least,\" said Ioanni. \"Lay low until then.\"\n\n#\n\nLucy kept to the same back paths on her way back to the cave. This time, she wasn't lucky enough to go unnoticed. \n\n\"You have some nerve coming back here,\" said a cold voice. \"It's her, isn't it?\"\n\n\"It's her.\" \n\nLucy whirled at the sound of a the voices to see a small group of islanders coming towards her from around a blind corner. \n\n\"Our best men and women went into the mountain to save you. Avenging your death. Now here you are, and our sons and daughters are gone.\" Lucy recognized the man who was speaking. Evan Reede, a man she had known her entire life. A life-long islander who had been a member of the Coast Guard before the invasion.\n\n\"I ran away,\" said Lucy. \"I was held captive.\"\n\n\"Can't imagine they'd let you escape.\" This from Lori. \"Why are you really here? Gathering intel for your mountain people?\"\n\n\"You're looking quite a bit healthier than most of us,\" said Evan. He appeared to be the ringleader. \n\nThese were islanders. Her people. Evan had served as crossing guard as she walked to her first day of school. He had sat in the living room with her father discussing the tourists and the tides. So why was he looking at her now like she was an enemy?\n\n\"One has to wonder if you were working with them all along. Why else would a young woman go up on that mountain, knowing the danger?\" This from Ashley Starrish, the woman who ran the library.\n\n\"I'll do anything I can to help,\" said Lucy. \"I'll go back and talk to them.\"\n\n\"We have our own ideas about what you can do,\" said Ollie Park, advancing. Unlike some of the others, his face showed thinly veiled excitement more than fear or pain. Lucy remembered him from school. He had always been a bully-not the leader, but the follower, happy to follow orders to chase or to hurt.\n\nLucy took a step away from him. They circled her, these islanders-her people. The accustations began to fly thick and fast, so fast that she couldn't even tell where each of them were coming from. \n\n...working with them all along...\n\n...played the whore...\n\n...thought you were dead, but here you are. Working with them all along...\n\nAs they closed in, she felt a hand at her back and was shoved to her knees.\n\n\"No one else has ever come back,\" said Ollie, looming over her. \"What deal did you strike?\"\n\nLucy raised her hands-to defend herself, to ward off the noise. She felt something hot flow through her arm-the light? She couldn't let whatever that was master her here. Couldn't hurt these people-her people. They were only grieving. They were afraid. She bit down hard on the side of her cheek, tasting blood. The voices around her were, blissfully, drowned out as she focused every ounce of her control on keeping that light-the strange, hot, terrifying light that seemed now to live inside of her-from hurting anyone else.\n\n\"Get back!\"\n\nThe order was given in the confident, mannered voice of a warrior. A woman. Immediately, the crowd fell away. One islander screamed. Lucy kept her eyes shut, focusing on holding in the heat, pushing it back down to wherever it came from. Someone grabbed her arm and she cried out, afraid of what she might do.\n\n\"No!\"\n\n\"Lucy, it's all right.\"\n\nCenia.\n\n\"Please, don't touch me,\" she bit out through clenched teeth. Immediately, the hand fell away. \n\n\"What is it? Did they hurt you?\"\n\nLucy waited in silence for a good thirty seconds before she was reasonably certain that it was safe. \"No, they didn't. Please don't hurt them.\" \n\nThe crowd had instantly dispersed as much as they were able. Lucy saw now that the only thing keeping them from heading for the hills were the other warriors ringed around them, watching from trees and behind sand dunes. She hadn't seen any sign of them on her walk in the deserted town. How could such large people be so stealthy?\n\n\"I do not think there is really any need,\" said Cenia with a light shrug. She glanced over her shoulder to where Ollie cowered under the gaze of a male warrior Lucy didn't recognize. It looked as if he had wet himself.\n\n\"While I'm asking for things,\" said Lucy. \"Please don't make me go back to the mountain. Not yet.\" She kept her voice low, hoping that only Cenia would hear. From the way the other warriors were watching her, she suspected that it did no good.\n\n\"The others are here to secure the town,\" said Cenia. \"I'm here for you.\"\n\n\"You're-what?\" Lucy had expected to be taken captive again. She had scanned the crowd for Warder despite herself, but she knew he wasn't present. It was difficult to accept how certain she was that she would feel him if he were.\n\n\"It would be best if we left the town for now, but if you wish to stay...\"\n\n\"No,\" said Lucy, looking around at the islanders. Her people. What would they have done if Cenia hadn't appeared? \"I should go.\"\n\nLucy started walking. Even as Cenia fell into step next to her, she expected someone to stop her, but no one else-not islander or warrior-moved. She felt her skin cool and only then did she realize that it had been crackling with heat as she was cornered, the strange light burning just under the surface. Had anyone been able to tell?\n\n#\n\nThey made their way back to the cave in silence. With as little discussion as possible, Lucy suggested that they stop at the beach on their way back. She had imagined being near the water again so many times while she was trapped inside the mountain. She had never imagined it like this. When she turned and started to walk back towards the cave, there must have been more in her expression that she had wanted to give away. Cenia took her in, her pretty, pale face suffused with worry. \"We can stay awhile, if you want.\"\n\nToo overwhelmed even to be properly grateful, Lucy retreated along the rocky beach until she found a shady spot and collapsed into the rough sand, turning her face to the waves. She felt Cenia settle a little ways away and as grateful as she had been when the woman had shed some light on the strangeness of her people-omegas and alphas and hidden worlds - she was even more grateful for her silence now as everything that had happened - and could happen - ran through her mind. When Cenia finally did speak, it had been hours. High tide was creeping towards them.\n\n\"It's getting dark,\" she said.\n\n\"Yes,\" said Lucy. She didn't move.\n\n\"Will the water get much higher?\"\n\nLucy turned to look at Cenia, realizing that there was a note of concern in her voice. Did they have oceans where the Sylphen came from?\n\n\"It won't come much closer this time of year,\" she said. \"Could I-would you give me a few minutes alone? There's only one path down to the beach. If you're at the top, no one will be able to come down without you knowing about it.\"\n\n\"Alone?\"\n\n\"Please,\" said Lucy. She didn't know why Warder wasn't here. With warriors in town, the fighting was clearly over. The warriors had won out against the islanders. There had never really been a question, but now it was done. If Warder wasn't here, there was a reason. She was as certain as that as she was certain that when he did appear, he would lock her away again. She wouldn't even be able to fight him on it. Not really. Her own people had treated her like a stranger today. Like an enemy. She didn't belong anywhere-with him, where Persephone sneered at her and Ysabel tried to kill her. With her own people, who would always blame her for lives lost inside the mountain, even if most had been spared. She wanted a few moments alone with the sound of the water and the feel of the sand beneath her feet. Because she would always belong to the ocean and the island, even if the people were strangers and enemies. This was familiar. This, after so many weeks of captivity and fear, was a balm.\n\n\"Of course,\" said Cenia, breaking into Lucy's reverie. \"I'll give you a few minutes.\"\n\nCenia was barely out of sight when Lucy stood, walking to the water and sitting down again with her legs in front of her, letting the waves wash over them, gasping at the chill. \n\nShe was still without shoes. The realization made her laugh. It was a small inconvenience among so many. And it had been Persephone's idea, hadn't it? To make it harder for her to run away?\n\nWell, she had run anyways. And been caught again. And again. This island-the whole place was a trap. There was no such thing as being free-only choosing the one who held the chains. As the sun set and darkness fell, Lucy knew she should make her way back to the cave. To \"safety.\" But she was so grateful to be alone and outside. The salt air seemed to be washing the dust out of her lungs. The sand was comforting on her battered feet. She watched the place where the fog seemed to gather on the water-it was common to see a cloud cover there, about as far out as the barrier.\n\nThat had always been the strangest part of the islanders captivity. At the beginning of their captivity, the warriors had left all of the island's boats in disrepair, smashing through hulls and shredding sails in the night. After a few months, enough of the boats had been repaired that a contingent were named to set out to sea and get help from the mainland. It was a perilous journey without electronic instruments and radio, but there was some hope that those things would work when they got outside of the immediate vicinity of the island. \n\nExcept, they couldn't. About a mile out, the boats stuck as if they were trapped in an invisible net. There was no navigating around it. Hopeful friends and family watched from shore as the boats tried again and again to advance. After a while, they watched in horror as the sailors abandoned ship and tried to swim through. In vain.\n\nIoanni had posited that the barrier was electrical-part and parcel of whatever the warriors were using to keep radio and television signals off the island-some kind of advanced electronic warfare. Even he had no answers as to what, exactly, the war was against or why they had been trapped only to eventually be left mostly to themselves.\n\nThe moon broke through the clouds, throwing light onto the water. The movement was hypnotizing and for a while, Lucy just watched. Then, in an instant, she became aware of the fact that her clothes were still stained with blood, her hair covered in dust and debris, her feet dirty and bruised. \n\nIn an instant, she shucked off Warder's jacket and her leggings. After a moment's hesitation, she kept on the flimsy dress, just in case Cenia came back looking for her. It was cold-the water would be freezing, but Lucy didn't care. She made it a few feet going step by step and then she immersed herself before she lost her nerve. Once she was completely submerged, the water didn't feel as bad. In fact, it felt warmer than the air. Smiling to herself for the first time in what felt like ages, Lucy began to swim, giving in to the powerful stroke of a life-long islander. When she was deep enough, she floated, watching the moon. When her foot grazed the barrier with a soft thump, she wondered if she had been swimming out to it on purpose the whole time. Testing the boundaries of her cage.\n\nLaughing, she pushed off the invisible wall, did a flip in the water and then swam for it again. She felt as high as she could for some sign of weakness. It felt like trying to press against a strong wind although the night was still. Now and then, she felt a light electrical shock-like static electricity. That wasn't uncommon-it was the bedrock of Ioanni's theory. A thought occurred to her and Lucy dove down, using the invisible wall as a guide. Of course, islanders had tried to swim under it, but she was suddenly seized by a need to see for herself how the wall worked. When she was too afraid to go any further without air, she could still feel the wall all the way down to her feet. She bobbed back up, gasping for air, and then dived again, driven by a consuming need to explore.\n\nIt was on her third trip down that the wall started to respond. Or Lucy did. She felt the electricity again, the strange light, flickering in her body. She opened her eyes in the water and watched it spark in her hands. Electricity and water should react-they shouldn't slip past each other without any recognition. If the wall really was made of the same stuff as that blue light-as Lucy now suspected-shouldn't it react?\n\nAlmost as if she had willed something into being, the wall seemed to spark in response to the light in her hands. Lucy felt an odd tug in her core and she experimented, holding out her hands to the barrier and pressing as hard as she could. She was pushing the limits of how long she could hold her breath, but she persisted a moment longer, feeling something in the barrier change. What if she could get through? What if she could truly escape? She thought, if she did, she could easily swim all the way to the mainland without breaking a sweat.\n\nOf course, she did need to breathe. Reluctant, Lucy began to follow the barrier back up to the surface. Just as her head was about to break through, the barrier changed. It seemed to melt around her, flowing into the water and covering her. Caressing her. \n\nHolding her down.\n\nLucy struggled to continue towards the surface, but it was suddenly as if she were swimming through jello. The water was viscous, heavy. Forgetting where she was, she tried to scream and water rushed in. She tried to concentrate with the little breath she had left and use the light to push herself to the surface. She made some progress and then slipped back down. \n\nI'm going to drown, was her last last clear thought. After everything, I'm going to drown.\n\nAs a final insult-or at least a reckoning-she imagined Warder's arms around her as the world fell away. She clung to him even as she struggled to breathe, unaware if she was helping him or fighting him. Changing her mind from one moment to the next.",
        "Then, as fast as she had been drowning, she found herself choking up water on the sand. Warm hands, heavy on her back, steadied her, holding her as she forced the water out and gasped a breath. \n\nAs soon as she caught her breath, she was pushed onto her back in the sand and Warder was looming over her. \"What were you doing?\" he growled. He had one hand braced against the sand behind her head and he used the other to push her wet hair out of her face.\n\n\"Swimming?\" Lucy managed before she coughed again. \n\nWarder cursed and pulled her up into the crook of one arm, holding her upright until the coughing ceased. \"I will not allow you to kill yourself. You will not try it again.\"\n\nLucy swung around to look at him. \"I wasn't-\"\n\nBefore she could explain, she found herself trapped beneath him once more. Satisfied that she was no longer choking, Warder used his body to dominate her, his powerful thighs trapping her so that she was forced to lie still beneath him in the sand. \"I will not allow it,\" said Warder. \"You belong to me. Your life belongs to me.\"\n\n\"I belong to myself,\" said Lucy, nearly shouting. \n\nWarder shook her, one powerful hand circling her neck. The pressure was light but the threat was clear. Lucy kept very still, watching his face. \"You are mine,\" Warder said eventually, as if he had to master his anger even to speak. \"And I am yours. Your mate. It cannot be undone.\"\n\n\"Of course it can't!\" said Lucy. \"It's all ruined. My own people hate me. Yours will never accept me and I don't want them. I'm alone except for you. Is that what you wanted?\" Lucy felt her chest rise and fall against him. He was nearly naked-he had obviously stripped off most of his clothing to come after her. His own chest was heaving with effort. She knew that the swim had not winded him. He was fighting back anger. Fear. She could feel the emotions waring within him as if they were her own. \n\nHe growled, ignoring her accusations and running his hands over her body as if to check for injuries. Her knees were scraped up-whether from falling inside the mountain or being pushed in town, she didn't know. As Warder ran his hands over the abraded skin, she could feel his anger as if it were her own. \n\n\"Warder?\" she raised a hand to his chest. \n\n\"You are hurt.\" His hand flexed around her throat.\n\n\"Calm...calm down.\"\n\nHe kept his hand where it was, but he looked down at where she touched him. \"Good,\" he said finally. \"A mate should soothe her Alpha.\"\n\nLucy wanted to argue with him again, but she noticed the bandage under her hand, just above his hip. \"You shouldn't have gone into the water. Is that from Hadren?\" She tried to reach for the bandage, but Warder caught her hand. \n\n\"It doesn't matter. I am well.\"\n\n\"I saw you bleeding,\" said Lucy. \"I had your blood on my hands.\"\n\n\"I know,\" said Warder. Lucy realized that he was doing a better job of hiding his emotions now. She couldn't feel him as well even though he still loomed over her.\n\n\"You're keeping me out,\" she said.\n\n\"Shall I let you in while you hold yourself apart? You try to deny you are mine even as you touch me as a mate should.\" He nodded at his chest and Lucy realized that she was holding onto him now with both hands, one tangled in the hair at his chest, one lower, caressing the skin at his hip just above the bandage. She forced her hands to still and Warder growled low in his chest. In a moment, his hand left her throat and tangled in the wet fabric of her dress where it stuck to her breasts. His grip tightened until the fabric was taught and then he tore it. Lucy cried out as the fabric whipped over her skin, leaving a burn in its wake. \n\n\"Warder-\" She began to repeat his name over and over, once a warning, then a request. \n\nPlease. Please don't.\n\n\"I had intended to wait,\" said Warder. \"In time, your natural desire to be with your mate would overcome any objections. But things have changed, little mate. There is no time. And I find I have no patience.\"\n\nHis hands worked at his belt and in an instant, he was pressed against her, his body as naked as her own. Lucy shivered and Warder chafed his hands along her arms, warming her. She felt him hard against her thigh and pressed her eyes shut. Afraid of what was next. Afraid of how much she desired him. \n\n\"Eyes.\"\n\nThe command was harsh and as Lucy's eyes flew open, she realized that her mate was still blindingly angry over what he believed she had done. It didn't matter now what her intent had been. Nothing mattered except for the powerful man looming over her in the dark, pressing her almost painfully into the rocks and sand. She raised her arm to his chest again because he had seemed to like that, pressed her palm against his heart. Slowly, she raised her other hand, placing it again at his waist and then exploring until she knew she was almost touching his cock.\n\n\"Touch it,\" said Warder. Another command. Afraid to look at him yet afraid to close her eyes, Lucy buried her face against his chest as she gripped one hand as far as she could around him. He was heavy in her grasp, huge and warm. Tentative, she explored him, running her fingers along the length of him and brushing the tip. She couldn't feel any evidence of the knot that grew heavy inside her when they mated.\n\n\"Where-I mean-\"\n\n\"My knot only grows inside you,\" said Warder. \"Only when I am inside my mate.\"\n\nTentatively, Lucy pressed her fingers lightly at the tip of him again before running her hand back along his length, awed at the way his powerful body shuddered under her touch. She had in mind that she had been much more bold when they were first mated, even demanding as she touched him with her hands, her mouth. But right now, the fog of mating was far away. Still, there was a heat building in her core. An awareness of him. Desire. \n\nShe let her hand fall. \"What happened inside the mountain?\" she asked, hoping desperately for a distraction. \"Hadren...Ysabel?\"\n\n\"Not now,\" said Warder. \"Do you know that you will go into heat again soon, little mate?\" he asked. \"I could have waited. Could have let your instincts take over, force you to act as a mate should. But I find that I want you fully aware of me. I want you to surrender to me. For your own sake.\"\n\n\"I was better off without you.\"\n\n\"Perhaps,\" said Warder, seemingly unbothered by the accustation. \"But that world doesn't exist anymore.\" He settled over her, almost crushing her were it not for the give of the sand. She felt him heavy between her legs, her hands trapped between their bodies. He lowered his head and laved his tongue at the marks on her neck, then lower, teasing the peak of one small breast. Lucy shied away and Warder growled, taking her nipple almost painfully between his teeth and releasing her only when she stilled. \n\n\"Warder, I need to know what happened. To the islanders. I need to know what happened to me. That light-\"\n\nWarder shushed her and reached between them to drag one of her hands free. He brought her wrist up next to her head, and Lucy squirmed beneath him, feeling unbearably exposed. \"Use your other hand to do something interesting,\" Warder said, leaning in to speak into her ear, his voice low and rough. \"Or I will capture it, too.\"\n\n\"I can't.\"\n\nWarder reached down and took her other hand as promised, holding them both together above her head. He examined her carefully, taking in the torn dress, her wet, salty hair. \"I had a long day,\" said Lucy, feeling self-conscious.\n\n\"You look wild,\" said Warder approvingly. \"Beautiful.\"\n\nBeautiful.\n\nIt was what she had so often thought about him. But there was nothing in her willing to admit it. Nothing was worth that.\n\nInstead, Lucy tried to dislodge a hand. After a moment, Warder let her and she trailed the hand back towards his chest, testing the way his muscles flexed at her touch. As her hand moved lower, Warder's voice stopped her. \"There,\" he said. \"Don't move.\" Lucy stilled and Warder let go of her other wrist, watching to make sure that she stayed frozen. Then, he lowered his own hand, dragging it across her face, her neck, her breast. He stopped with his palm splayed over her abdomen. Lucy's breath hitched at the thought that he might move lower. He pressed his hand against her abdomen so that her next breath was shallow. Her pulse seemed to throb in her entire body, in her sex, as every inch of her became aware of him. He kneaded her stomach, his hands firm, but gentle. Lucy took another breath and he pressed harder, his other hand going back to her throat. \"I know you're ready for me,\" said Warder. \"Wet.\"\n\nWithout further warning, he positioned himself and drove into her to the hilt. Lucy gasped and Warder continued to press against her, stealing her breath. Lucy was too caught up in the feel of him, stretching her to an aching fullness, to care if she could breathe. When Warder finally released her, it was a moment before she even remembered to take a breath and as soon as she did, Warder's mouth descended on her own, claiming her, his tongue thrusting in the same possessive rhythm as his cock driving into her body.\n\n\"Warder,\" she gasped against him. When she couldn't make herself heard, she began to move instead, crying out as she felt the tiny rocks and pebbles in the sand cutting into her back. \n\nNoticing her discomfort, Warder rolled over with a groan, taking her with him and Lucy was momentarily shocked to find herself astride him, their bodies still joined. She looked down at his chest but Warder growled again and she knew he wanted her to make eye contact. When she glanced at him tentatively, he rewarded her by gripping her hips and thrusting up into her, deeper than she had thought possible. \"It's-too much,\" she gasped.\n\n\"No,\" said Warder. He thrust again, giving her an approving smile when she gasped and ground back against him.\n\nLucy shook her head, unsure if she was arguing or agreeing. Her orgasm washed over her without warning, hot and hard and deep. She fell forward, bracing herself against Warder's chest as the sensations thrummed through her. \n\n\"Yes,\" said Warder. \"Yes.\"\n\nLucy felt him beginning to swell inside of her as the orgasm faded. She tried to get away, but Warder caught her instantly and held her firm against him, rolling her back onto the sand, but keeping his arms under her to protect her skin. \"You're afraid of my knot,\" he said. \"But it was made for you.\"\n\nLucy stopped struggling, aware that if she dislodged him while the knot was growing, it could tear her apart. She stilled in his arms, her breathing fast and shallow.\n\n\"You're panicking,\" said Warder. \"I will not hurt you. I cannot hurt you.\"\n\n\"You are,\" said Lucy, squirming slightly beneath him as he swelled inside her, impossibly huge and heavy.\n\n\"Be still, mate,\" commanded Warder. But she didn't stop moving until she felt his release inside her, filling her. He rose over her, pushing deeper and she felt a small amount of cum leak out where they were joined. \"Do not be afraid, pet. Just feel me inside you.\"\n\nLucy closed her eyes against the aching fullness and this time, Warder let her. She focused on her breathing, her own body as a separate entity from her mate. But nothing distracted her for long. Everything was Warder's body inside her, around her. Everything was his cock, heavy and hard. His knot, swollen, locking them together until some future point where the storm had calmed. Everything. \n\nThis time, she felt the orgasm coming. For a moment, she tried to deny it, to wriggle away from him somehow. No. No. I hate this. I don't want this. But soon, she couldn't muster a coherent thought. There was no thought. There was Warder, joined to her. Inside of her. \n\nEverything.\n\nWarder growled in approval as she came, slow this time, like the feeling would go on forever, the walls of her cunt squeezing his cock, his knot inside of her. He spurted the last of his cum deep, kissing the claiming marks on her neck and at her wrist, caressing every inch of her.\n\nWhen it was over, he turned her again so that she lay breathless across his chest, her body spent and empty. There was no light. No fire. There was only Warder.\n\nOnly her mate."
    ],
    "authorname": "MariLeigh",
    "tags": [
        "alpha",
        "omega",
        "mating",
        "bonded",
        "beach sex",
        "warrior",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-mountain-ch-08"
}