{
    "title": "Josiah, Emergent",
    "pages": [
        "CHAPTER 1: A Dance and a Song \n\nJosiah Langer looked around the VFW hall. Older people sat at cafeteria tables, talking over the music which was just a bit too loud. There were pitchers of beer or Coke and baskets of potato chips and pretzels about. Lots of younger children were running here and there. One girl looked about his age, and he didn't want to look away from her as long as she wasn't looking at him. He'd be a freshman in high school soon, and he liked girls. \n\nShe was beautiful in a sleeveless summer dress: big eyes, dark hair, thin, and quite animated talking to her relatives in the dim room. She sat on a metal folding chair among some of her family, at a long cafeteria table covered with a paper linen. Josiah didn't think he'd ever seen her before. After some furtive glances and much courage-building, Josiah made his way across the room and stood before her. She wasn't talking to anyone just then, and she looked at him. He felt insignificant. \n\n\"Hi. Would you like to dance? With me?\" he stammered, and he feared she'd laugh. He felt eyes on him. The woman across the table stifled a smile. The girl was looking at him, not in surprise but consideration. When she didn't answer right away, he said, \"I don't know anyone here but the guy playing the music.\" \n\n\"Who are you?\" the girl asked. \n\nHe smiled sheepishly. \"Josiah. I'm Josiah.\" \n\nShe hesitated as if it were a hard decision to make. She looked over at the woman he assumed was her mother, who nodded shortly. The girl said, \"My name's Erin. Okay, I'll dance with you.\" \n\nShe got up. She was an inch taller than he and probably a year older. They walked over to the dance floor, not touching, and waited for the end of Frank Sinatra's \"My Way\" and the start of the next song. \n\nRoy saw them waiting and started in surprise, then smiled and shook his head. Josiah averted his eyes and felt his face flush; he'd hear about this, sooner or later. Roy was Josiah's friend Patrick's big brother, in his early twenties, and Josiah was along to help him set up his speakers and hook up the wires because Patrick was at a tennis match. Once the music started, Josiah had no work until the reception ended. \n\n\"My Way\" soon concluded, and Roy held up a cassette. He announced into his microphone, \"This is not a professional recording, but it's a good song. I play it at every reception, and people always request it again. 'Of Hope and Love' by Ava Fortner.\" He put the cassette in his machine and a thin voice sang a beautiful song, the first time Josiah heard it. \n\nJosiah held Erin close because that was all he knew of dancing. He delighted in the feel of her arm on his, her right hand in his left, her left hand on his shoulder. They shuffled about, bodies occasionally touching, her hair smelling of Prell. After some minutes, Erin let go of his hand and clasped both hers behind his neck. He felt her back under his fingers. Every touch was electric. \n\nThe recording was amateurish and raspy in spots, but the melody and lyrics were gentle and hopeful about losing someone but never losing love. It was romantic. The girl singing it had a pleasant, clear voice. \n\nJosiah and Erin looked at one another's eyes occasionally, but mostly they looked aside. Speaking quietly and nervously, they exchanged ages and schools and small talk, but mostly they were quiet. He was careful not to hold her too close; she might think he was trying something. They turned in languid circles until the song finally ended. Josiah looked at her for another second with his hands on her waist and hers on the back of his neck, and then he held her hand and escorted her back to her family's table. \n\n\"Thanks for dancing with me,\" Josiah said. \n\n\"You're welcome,\" she said back. \n\nHe hesitated, but he couldn't think of anything else to say, so he wandered off. He looked back and saw Erin talking to her mother, who was smiling. \n\nThe rest of the evening he wondered if he should ask her again, or just sit with her and talk, but he couldn't find the courage. Now when his glance went her direction, a few times she was looking back at him, and he blushed. \n\nAll wedding receptions end, and Roy announced it eventually. As her family left, Erin looked over at Josiah and tilted her head. He waved, and she smiled and waved back. It was simple and adolescent. Two kids danced, perhaps for the first time for each. It was wonderful to have a girl in his arms. \n\nHe helped Roy pack up his equipment, and he fell asleep on the ride back to Greenville. \n\nThe next day was a Sunday, and Josiah visited Patrick's house that afternoon, like many afternoons. They listened to music in Patrick's living room. Patrick's dad insisted on good music systems. He worked for a small recording studio in Mt. Healthy, on the Hamilton road from Cincinnati, and often handed them tapes that he'd rejected for some reason. \n\nRoy walked through, carrying the big suitcase in which he stored his music. \n\n\"Hey,\" Josiah asked, \"do you have that song where the guy dreams of his lost love? I liked it.\" \n\nRoy smiled. \"Yeah, I remember it. You danced with that girl.\" Roy couldn't resist teasing. \n\nJosiah blushed. \"Uh, I was wondering if I could hear it again.\" \n\n\"Sure. Let me find it.\" Roy opened his case and started shuffling things around. He held it up after a few seconds and flipped the cassette to Patrick. Ava Fortner was the handwritten name on this cassette. \n\n\"It's good but just a kid playing a guitar and singing. Not in good enough shape. I knew it was slow.\" Roy winked at Josiah, who felt his face flush again. \"Listen all you want, but I'd like it back,\" he said. \"Dad said the songwriter passed away before he could arrange anything.\" \n\nJosiah said, \"Thanks, Roy.\" \n\nJosiah and Patrick listened to that song over and over that afternoon, as fanciful kids sometimes did on lazy summer afternoons. They lay on the carpet in the sunbeams slanting through the plate glass window of Patrick's living room, dozing or talking or just listening. Occasionally, Josiah sang along with the tune, memorizing the lyrics by repetition, watching dust motes float in the sunbeams. He mused about his one dance, remembered Erin from the night before, and life was good, dreamy, and warm. \n\nCHAPTER 2: Singing in a Mall \n\nIt was a very pleasant reminiscence 12 years later. Josiah felt dreamy and warm again and wondered why it came to him in a shopping mall on a Sunday afternoon. Memories of that wedding reception long ago flooded his mind: images of Erin Somebody, two adolescent kids clinging gently and awkwardly for brief minutes. He imagined Erin's body against his, smelled her hair again (do they still have Prell, he wondered?), heard her soft voice, remembered her hand pressing his. He never forgot that unique elation, so rare in his life since. It was a wonderful, gentle recollection. His eyes were closed for thought of her again, for a moment. \n\nAnother hallucination, Josiah? He smiled wryly; it was just a memory, not a vision. \n\nThe mall was noisy. Kids were yelling, hundreds of customers were talking among themselves or to clerks and salespeople, water splashed in fountains, and from the lower level there was a hint of piano music. With the echo, it was a cacophony. Josiah leveraged past a department store and the musical notes organized into a song. \n\nIt was THAT song, \"Of Hope and Love,\" coming from the piano. It was not just Josiah's imagination. \n\nNow, on the upper floor of the mall, he realized he was still that dreamy kid from a dozen years ago, perhaps more experienced and embittered, but a romantic at heart. He smiled to himself; he liked that kid somewhere within him. Perhaps someday he'd reclaim that part of himself. \n\n\"Positive thoughts? So unlike you,\" he thought. \n\nHe swivelled over to the balcony rail, now with celerity. Looking onto the lower level of the mall, he espied the piano at the bottom of the escalator, and saw the pianist. The pianist was tastefully overdressed for a shopping mall. There was a small audience gathered and watching him play. He was quite good. He was not reading music for this song, although he had a stack of it with him. \n\nNo one was singing. \"It needed to be sung,\" Josiah thought. For a moment, he was back on Patrick's living room floor, watching dust motes and singing dreamily. He felt as if he were in a fog, the mall were unreal, and these things were not happening. \n\nCrippling reduced inhibitions, or perhaps it was the cynicism that developed with it. It was a revelation: combat eliminated his stage fright. He was careful to avoid sneering as he made his way to the top of the escalator. That dreamy kid inside him wanted out. \n\nThe pianist intended another round, bridging to a higher key. Josiah found the escalator and stepped on awkwardly, carefully placing his crutches, and as the pianist approached the beginning and he approached the lower floor, Josiah sang, hoping he remembered all the words. He sang loudly with a conviction that a timorous rendition could ruin a song. No point in gutlessness, Marine, he thought to himself. \n\nThe pianist's head yanked around and found him leaving the escalator, but he didn't miss a note for the surprise. He changed his playing though; as Josiah sang, he reduced his emphasis on the melody and increased it for the chords. Josiah made his way over, where he could lean and rest against the baby grand. More and more people were stopping now, hearing the moving lyrics as well as the beautiful tune. \n\nThe pianist nodded and decided to repeat the final chorus, because the gathering crowd seemed to appreciate it. Josiah sang on. Some bystanders had their cell phones up for recording. Josiah wondered if this were the greatest audience this song had known. Too soon, the final chord hung in the air. \n\nPeople clapped. Josiah nodded and smiled; the pianist stood and joined the clapping and pointed at Josiah. It had been a long time since Josiah had felt notable, or had forgotten his handicap. For just a moment, he was happy. \n\nHe was holding himself up with some effort by this point, and the pianist saw his strain. He helped him to his bench. People were clapping enthusiastically, Josiah thought, and a few were saying more, or again, or one more please, and there were even whistles. Josiah was perspiring after standing so long without much support except the crutches. His doctor had ordered him never to use the braces again. \n\nThe pianist said, \"I'm Sing Minh. I'm shocked you knew the words. It was good.\" \n\n\"You mean I sang a Sing song?\" Josiah asked, smiling. \n\nSing smiled and shook his head. \"I've had to put up with that joke since I played my first chord. No. I found it in some tapes someone sent me, saying I should listen. I did and 'Of Hope and Love' was great. I found nothing on the composer. Ava Fortner. No one heard of her. And you know the lyrics?\" \n\n\"Yeah, I heard it at a wedding a dozen years ago, and my friend's dad had the tape from a studio he worked at. It might be the very one you have. They said the writer died soon after making it.\" \n\nMore, sing more, people were saying. Most were drifting away. A few were hopeful to hear them, and Josiah wondered: To hear Sing? He was very good. \n\n\"You do this for a living?\" he asked. \n\n\"Yes. Love it. I feel lucky to be paid to do it. My greatest fear is losing hearing.\" \n\nSome people were still calling for another. \n\n\"They want another,\" Josiah said, shaking his head. \n\nSing said, \"Do you know 'Annie's Song?' John Denver?\" \n\nJosiah said, \"Of course not, really. That was enough. Thank you. I'm no singer. I appreciate it.\" \n\nSing looked disappointed. \"I think you're mistaken. Could I have your phone number?\" he asked. \"Or email?\" \n\nFor a moment, Josiah considered giving him false information, but he put it out of his mind. He gave the information, Sing writing it on a sheet of music. Sing excused himself. \"Gotta work.\" \n\nHe played \"Annie's Song\" then as Josiah wandered away. It was lovely, but Josiah was no singer. \n\nJosiah was thoughtful as he crutched through the mall. Did Erin ever think of him? Someone probably married her, loved her, had kids with her. She should be loved by now. He shook his head as if to clear away cobwebs of doleful thought. He admitted the single dance with an unknown girl had a curious meaning for him. He doubted he'd ever have such a moment again. \n\nHe didn't treasure many memories. Mostly, he wished they'd never come back. \n\nCHAPTER 3: Virgin Plus One \n\nHe grew up in Greenville, Ohio, playing tennis, running cross country, and singing in the glee club. He watched his parents sink into alcoholism, losing his dad to a heart attack when Josiah was 10 and his mother to exhaustion and liver cancer over the summer between his high school and college. In her years of foggy drinking, she dragged herself through life for his sake. \n\nHe had some cousins he hardly knew, an aunt by marriage to his mother's brother. They were not rich, and he knew taking responsibility for him would be a burden. There was no need. He had been practically on his own for some years. An older only child, his mother working nights, father passed, he was used to fending for himself. His mother's life insurance would pay his tuition; he would work summers, weekends, and evenings delivering flowers for a florist to pay for room and board. \n\n\"We'd be more than happy to have you stay with us, now or anytime, if you need help or just want to be a kid,\" Aunt Dotty offered. It was sincere, or at least Dotty hid her trepidation. \n\nJosiah smiled. He was familiar with their situation: constantly on the brink of divorce, children young and needing attention, and his uncle irresponsible. \"No, not right away. I'll be in Cincinnati, working and going to school. Mom and I talked about things a lot the last six months, I think I'm ready. If I mess something up or change my plans, I'd like to keep you as my fall-back plan, though.\" \n\nShe brightened at that. \"Sounds like a good way to go. I may check on you every now and again. Just a phone call, you know?\" \n\n\"Thanks, Aunt Dotty,\" he replied, kissing her cheek. He didn't think he'd want to take her up on it with her four kids under 10, but he liked her and she was a great cook. They lived somewhere near Whitley City, Kentucky, which was not near Cincinnati. \n\nThings worked out. He saw Dotty's family at Christmas, talked to her on the phone once a month or so, and lived in a little apartment near UC. He got through school, delivered tons of flowers, and actually saved some money. Dotty dropped out of his life his junior year when she divorced Josiah's uncle. She moved with his cousins to California for work and to be away from her ex. She called Josiah once after that, but then lost contact. \n\nThere was no mom to ask, no mother to tell, no shoulder on which to cry, no one definitely on his side. He was orphaned and barely old enough. College poverty and steady work occupied his attention. The whole world looked different after his mother died. He was on his own. \n\n* \n\nOne girl taught him a lesson. \n\nHe met her at a party, she a little girl with a cute face and pert body wearing too much black: dark hair, dark nails, dark eyes and shadow, dark clothes. She was perhaps 20. Her black/blue hair hung straight. She was startlingly white-skinned. She seemed to be alone, and she didn't leave when he sat beside her on a couch. \n\n\"Hello, I'm Josiah.\" \n\n\"Ari El,\" she said, \"two words.\" He shook her hand and she didn't let go, so he scooted closer to her on the sofa. They talked for a while as people moved about them, talking and laughing and drinking beer. Beer was almost thrust into their hands, and Ari El sipped as he drank. She laughed quietly, talked about her major (anthropology of some sort). She said she lived in Cooper Hall, and he found his hand creeping up her shirt as she pushed her tongue into his mouth. \n\n\"Let's find another room,\" she said, since people could see them, and he regretfully pulled his hand off her small breast. They found a bedroom unused on the top floor and wedged the door shut, and by the time he was satisfied they were alone she was kneeling on the bed nude with her legs apart. She had a dark bush; he thought that was unusual for a woman their age, but so be it. \n\nShe said, \"I hope you like what you see.\" \n\n\"I do,\" he agreed, pulling clothes off and standing there naked and pointing at her. \"You're sexy.\" \n\nShe sat on the edge of the bed then and took him in her mouth, and soon she was slurping on his shaft as he squeezed those little breasts. With no ado she pulled off him. She had a condom under the pillow, ripped the foil off, and unrolled it over him. She made it a sensual experience, looking up at him with a smile as she did. She lay back with her legs spread. It was as if she had a series she wanted to follow: 1. Kiss; 2. Undress; 3. Suck; 4. Fuck; 5... \n\n\"Fuck me,\" she said. Step four. He put his hands one behind her left and the other her right knee, spread her wider, and slid into her. He had never felt such a thing: acceptance and desire and power. They were both new to it, he was sure, and neither of them would last long. He was thrusting hard and slow, her legs now folded back to her shoulders as he gathered her to him, and they kissed as it went on. He felt the welling of his orgasm. \n\n\"I'm going to cum,\" he said. \n\n\"In my mouth, please!\" she responded, so he pulled out and she slid the condom off (in his sensitive state it was almost too much) and as soon as those darkly-painted lips touched his cock, he was spurting, one after the other. She swallowed, smiling up at him, and somehow he knew that was step six. He felt her tongue circle his head, gathering all of it. She took a deep breath. \n\nShe looked at him and smiled in some sort of satisfaction. She said, \"Thanks, that was great!\" She threw her clothes on and went out the door. She was gone so quickly he couldn't tell her her shirt was inside out. \n\nHe was alone. He looked down at himself, shrunken and empty. The condom and its wrapper were beside him. Sex felt different than he expected; it felt hollow. \n\nThe number she gave him was false. The name she gave him was not registered at the school. He asked at the party apartment and no one knew her by name or description, or no one admitted it. He looked for her at Cooper Hall but never saw anyone who looked like her. He never saw her on campus. \n\n\"Obviously, there are things about girls I don't understand,\" he thought. It was meaningless, and he was disappointed in himself. Perhaps she'd punched a ticket in some weird game at a sorority or a bet with a roommate: they fucked and he came and she swallowed, so she won all 10 points! She probably got the super bonus for finishing in less than half an hour. \n\nHe guessed he just wasn't one of those guys who screw and walk away. He thought of Erin for some reason, and hoped that her experience was better. \n\nHe avoided college girls after that. It would wait. He was the poorest student in school. Girls wanted prospects. Women wanted achievement. He had neither. He considered possibilities. Graduate school would cost too much, his major was in liberal arts: writing books seemed like a dream but he didn't have much experience to relate. There was no group he'd been part of since glee club and the tennis team. He felt alone, cut off from society. \n\nHe lacked direction. He had no purpose. Like Barth's Ebenezer Cooke needing the perfect notebook for his epic Marylandiad, he could not make up his mind. He wanted his life to matter. \n\nBut unlike Cooke, he was not just purchasing a notebook. He wondered if military service made sense. His mother once said, \"You play guns enough, you ought to be a soldier.\" She had meant it in jest. War was unlikely. \n\n* \n\nWomen could wait. ",
        "He contacted the local Officer Selection Officer, and the month after he graduated, he reported to Quantico. In eleven weeks, he was commissioned Second Lieutenant Josiah Langer, USMCR. No old friend, no family attended the ceremony. Aunt Dotty didn't know he joined. He listed a charity for his next of kin. \n\nHe had friends then in the Corps. It's hard to get through Officer Candidates School without building friendships. But when he told them he was an orphan with no ties, they were surprised. \"Hell,\" his friend Brian said, \"you made a mistake. You musta thought this was the French Foreign Legion. Is Langer really your name?\" \n\nJosiah laughed but thought that made some sense. He was using the Corps to get a start in the world\u2014there was nothing unusual in that. It was a home, of sorts, once he found some success. He was assigned to schools. He felt competent, and the war made every Marine lesson significant. He chose the infantry. \n\nHe even went out with a few girls. He dated Brian's sister once when his family visited for one long weekend. Melanie was pretty and funny and didn't want to start a relationship with a guy she'd only see for a few days. Home for them was in New Mexico. Another time, he met Captain Wilson's wife's sister while watching a ballgame. They sat together, and he found someone he liked. She went back to Michigan to finish college, promising to write. They exchanged a few letters, her last one about a classmate whom she thought would be the love of her life. \n\nHe now regretted his restraint. He should have done more, should have been more determined or aggressive. He should at least have dated more determinedly. The girls his age had lives still, they went on, but he had so few memories, and those unsatisfactory. His sex life was an anguish, a strikeout. \n\nHe was a virgin plus one. Since the war, he assumed there would be no more for him. \n\nCHAPTER 4: A Misanthrope \n\nA 7.62 round pulverized both his knees and ended his career. Now he lived a few miles away from his old home, in a refuge called Sky Grey. \n\nHe had an orthopedist and physical therapy at Merciful Lord Hospital (paid by the VA), he had a pension from the disability, church was close if he ever chose to attend, and shopping was limited but not far. He had a car with modified controls (bought with a grant from a charity) and so could get to the mall some. That was his present and future, and good enough. \n\nHis hair was longer, so no one quickly associated him with the service. If people showed interest in him, he demurred. He sought no attention, and he felt he was succeeding until he sang in the mall. No one could find him. He doubted anyone would search. Perhaps one person would consider it. \n\nSky Grey was off the beaten path, and Josiah took solace in the idea that he was just a wreck by the side of it. \n\nHe liked being anonymous in the midst of crowds, as if he could hold others at arm's length but still be part of the group. People noticed his legs, and kids occasionally stared, but usually he could look around at the shoppers or worshipers without notice. He visited Merciful God church for 11 o'clock Mass some Sundays. He was sure civilians could not understand a wounded serviceman. He liked to be with them, but not one of them. \n\nAn incident after Mass one Sunday made him pause for thought. A little girl started it by looking at his legs. \n\n\"What's the matter with your legs?\" she asked very matter-of-factly. \n\nThe question from such an innocent shouldn't have jarred him, but it put him into a stupor for an uncomfortable few seconds. He stared at her, not wanting to answer, not wanting to say, I'm shot and the world sucks. He was panicked and his mind was blank. The child looked frightened. Her mother whisked her into her arms, as if he was a threat. The child hid her eyes against her mother's neck. There were lots of people around watching, some within an arm's length. Josiah felt his face burning. \n\nThe young mother looked at him and said with asperity, \"I expect you've had it rough, but she just wanted to understand.\" \n\nHer words struck Josiah like a fist. She was right. \n\nJosiah said, \"I'm sorry, ma'am, I couldn't think how to answer.\" He looked at the child in her mother's arms. \"I was hurt a few years ago and my knees don't work. So I have to use crutches.\" \n\n\"Was that so tough?\" the mother said, sarcastically. \n\nJosiah recognized something accusatory in her tone. \"I didn't want to give her the details, ma'am.\" \n\n\"You had no cause to threaten her,\" the woman said, obviously exaggerating the incident. \"You're a menace.\" \n\n\"Hey!\" he heard some guy say, thinking the woman had now exaggerated the incident. \n\nJosiah regarded the woman with new eyes. The panic he'd felt a moment before evaporated. He nodded and said, \"A mother should protect her child. But I'm not going to apologize twice for the same indiscretion. I meant and did no harm.\" \n\nAt that, the woman turned away with an audible huff, unmollified, and turned her attention to filing out of church. The little girl kept her eyes against her mother's neck for a few seconds, and then Josiah saw her look up. He nodded, and she looked back, without animosity, he thought. The crowd moved on, one or two shaking a head. Josiah released some tension with a sigh and swung himself forward. There came a tug on his arm. \n\nAn older woman stood beside him, heavyset and grey-haired, smiling. \n\n\"Hi. I'm Mary Sackston, the parish secretary. I noticed you in the last pew a few times and wondered if you'd like to register in the parish office?\" \n\nJosiah shook his head. \"I think I just alienated one of your parishioners, and now you want me to join?\" \n\n\"She's my niece, and you get along with her better than anyone in our family does,\" she said, shaking her head. \n\n\"She was right about my staring, but I... I have trouble talking about my injury. It was uncomfortable.\" \n\n\"My niece has the clarity of self-righteousness,\" she said. He saw something in her eyes: Approval? Pity? \"I hope you like it here at Merciful God,\" she said. \n\nHe joined the parish, disclosing information to Mary that he'd hoped to keep private. Father Phil made a point of speaking to him after Mass thereafter, and he found Josiah didn't want to talk about his time in the military. If Josiah missed Mass, Phil or Mary would call Sunday afternoon. It was annoying, but it reminded Josiah of his Aunt Dotty's calls during his college years. \n\n* \n\n\"That was rash. What were you doing?\" he said aloud as he drove home. Joining Merciful God and singing in a mall: he was a poor recluse. He wondered why he'd been unable to answer Lacy. \"Sometimes I'm not sure what I'm doing,\" he thought. \"My decisions don't match my purposes.\" \n\nHe decided he preferred loneliness. He called it independence, despite physical therapy and government disability checks and charity car controls. He made peace with his situation by ignoring the contradictions. \n\nInsomnia plagued him more than the pain of his knees. It left him tired everyday, and it always reminded him of Iraq. \"Just another part of depression,\" he thought. His nut doctor had told him about depression. \n\nDreaming was mostly repeating the same dream, with variations. \"How many times will I have that dream?\" he wondered, only to have it that night again. \n\nHe was in a Humvee on a bridge. He checked his watch, having a deadline to meet. They were supposed to enter the village at 1015 hours, just six minutes from then. Refugees were streaming past their slowly moving vehicles on the bridge, escaping the burning town on the other side. He noticed two, a woman and small boy, walking together. She was noticeably uncomfortable, walking oddly. Langer realized why. \n\n\"Stop the vehicle! Halt halt halt!\" he yelled, grabbing for the door handle before Ramsey could skid it to a halt. \"Save the kid! It's the mom!\" \n\n\"Who? Which one?\" his guys were yelling. There were dozens of women in grey and black burkas, and maybe a hundred people walking toward them over the bridge. Many women were with children. \n\n\"The one with the kid!\" and he was out the door, knocking someone down, leaping over the old guy, dodging people, slinging his weapon onto his back. He ran to a woman and boy near the bridge railing. They didn't see him, he was close and then he watched as... A surge of anguish passed through him as he slept. \n\nNo. That wouldn't do. He willed the memory to change, willed the dream to be different. He changed it. Josiah saw a shark falling toward the river, and then it blew up. He felt better. He even smiled in his sleep. \n\nSomething hit his knees hard; he thought it might be a bowling ball. Damn that was weird. He slumped immediately as his knees no longer supported him. He held himself up with his arms over the bridge rail. He heard his guys yelling, \"Lieutenant's hit! Lieutenant down!\" \n\nHe thought, \"Me? I'm hit?\" \n\nHe lowered himself to the pavement as rounds were zinging and pinging every which way, people were screaming and running or dropped to the pavement. Some crawled. He knew his guys were setting a perimeter, looking for the shooters, and engaging by fire. He heard the big fifty cal open up from the top of the Humvee. He sat with his back against the concrete rail and awkwardly swivelled his M4 around. He glimpsed his knees, which were a mix of bone and muscle and tendons in blood. \"Those will never work again,\" he said aloud. A sloppy fog filled his mind. He prepared to return fire, but he was so low that he couldn't see much and might hit some civilians. \n\nHospital corpsman Wilfred Jones was suddenly yelling in his face, Josiah felt his spittle; he was so concerned, so demanding, so sure Josiah needed him. He jabbed something in his leg and pulled out a bandage. Josiah smiled. \n\n\"I'm out,\" Josiah said. \"Don't worry about me.\" It was a good war, warm and dreamy. He thought of Erin in his arms, of dancing with her against him. \"I'm shot, Erin,\" he thought within his dream. \"This is a good dream,\" he thought. \n\nHe was thinking clearly now, and he knew he was awake. Lacy's mom did not seem so bad. A mother should protect her child. \n\nHe awoke soaked in perspiration, pushing himself up by an elbow, and looked at the clock. It was uncanny. He woke at the same time every night: 3:09 in Ohio. I'm living a psychic Groundhog Day, he thought, and smirked. He closed his eyes and tried to sleep. \n\n3:09 in Ohio. 10:09 in Iraq. \n\n* \n\nHe read a lot, some of it about people like him: sick, hurt, wounded, or alone. \n\nHe found Fortunate Son at a used bookstore. \"It's very good,\" the clerk said as he purchased it, \"but he killed himself a few years later.\" Josiah wished he'd not picked it up, but he read it anyway. \n\nLewis Puller Jr. wanted to see a good side to life. He wrote of the support of his wife and children, overcoming his handicaps, finding a new career. He gruesomely described the moment he lost his legs, an image that stayed with Josiah. The book was a plea for people to see through it. It was an unintended lesson in undependable narration for life. A few years after winning the Pulitzer Prize, Puller ended his suffering with a gunshot. A friend said, \"I thought he was winning.\" \n\nJosiah knew something was wrong and wallowed in it. Vogel was right: depression became a lifestyle. He defended his depression. \n\n\"Oh God, love me,\" he said once, when he convinced himself someone was listening. More quietly, he said, \"Forgive me, too.\" He wondered why he said that. \n\nCHAPTER 5: A Musical Trio \n\nSing called. \"Josiah, this is Sing. From the mall? I have a performance lined up in a few days and I wondered if you'd like to sing. You'll be paid for it.\" \n\nSing was prepared for a refusal. It was obvious to him that Josiah was dealing with issues beyond his knees. He'd seen panic in his eyes when he suggested another song, contrasting with the confident performance of the unknown \"Of Hope and Love.\" It was as if Josiah was moving quickly between extremes of confidence and diffidence. \n\nJosiah's voice was easy and substantial, unlike so many amateur voices, and he carried at least one tune well. From that one impromptu performance, Sing was hoping he'd found a performer, and wondered at Josiah's hesitation. It was not stage fright; Sing had felt that himself. It was some other fear, and Sing hoped Josiah could get past it. The performance in the mall had much impressed him. \n\nJosiah liked singing, and he liked the idea of being paid for it, but he wondered if his voice was worthy. He sang for fun. Singing for money was a bit of a challenge, a demand that he be entertaining. Sing and the audience would expect him to be good. It would require effort and an acceptance of responsibility. \n\nJosiah started to decline but stopped. Vogel had said, \"You have things to do, Lieutenant. You just don't realize it yet. Get out in the world again. Get a job. Join things. Get to therapy.\" \n\n\"Are you going to do nothing, Josiah?\" he wordlessly asked himself. His resolve to become a recluse crumbled quickly when confronted by unsought opportunity. It was only Vogel he avoided. Singing had been fun, and he'd had little fun for years. \n\n\"Maybe someone will enjoy it,\" Josiah said, as if from a distance. \n\n\"They will. We can practice at my apartment,\" Sing said. \"It's small, but I have a piano.\" \n\nJosiah was surprised at Sing's friendly but almost Puritan work ethic. \"People deserve the best we can do,\" he said. \"I graduated from the Cincinnati Conservatory. I picked you. I want a good reputation. And you can be very good.\" He was on Josiah for diction and swooping into notes and lots of little things, even presentation. Josiah wondered if he'd made a mistake agreeing to the job. \n\n\"You'd have been a great DI in the Marines,\" he muttered to Sing once, before he smiled. \n\nSing laughed at that one. \"They're paying us, Josiah,\" Sing said. \"Singing is like any other skill. You can improve it with understanding and effort.\" \n\nSing talked to him about audiences and how to interact. \"I'll be in charge this time, but eventually you'll have to be since you're singing...\" \n\n\"Eventually?\" Josiah thought. \n\nIt proved to be an extravagant bar mitzvah reception in a sumptuous hall at an expensive hotel in Cincinnati. Sing picked Josiah up for the hour trip, and they went over the song list, instructions from the employer, and other things. They arrived well ahead of the guest of honor and most of their audience. People wandered in as the ceremony at the synagogue finished, and they moved to their song list. The first songs were meant to warm them up. Sing would not be unprepared. If the occasion ran long, Sing would add instrumentals that he had practiced for years. \n\nThere were young boys and girls all about, wandering in from the ceremony at the Wise Temple that had taken some hours. The young Jew who was confirmed looked relieved and almost giddy, Josiah thought; if the ceremony had not gone well, it was at least gone by. His father was a little guy with wine in his hand and mother a woman a half foot taller than her husband. She was statuesque, and Josiah had to force his eyes away. Her love for her son was tangible. \n\nOccasionally, children noticed Josiah's crutches and knees; he made a point of smiling at them and nodding. \n\nAs the event went on, Josiah became more comfortable speaking. A few times he sat for a song, and no explanation was necessary. The crowd seemed sympathetic. Perhaps his situation was not so unusual. The singer needed crutches; every family had someone wounded or physically handicapped. The disabled needed to make a living, too. \n\nPerhaps most surprisingly, the audience seemed to enjoy his singing. They clapped after most songs. \n\n\"How'd you hurt your legs?\" a kid asked from the side, and Josiah looked over. She was in a pink dress, staring at him as he stood with the crutches. She was perhaps eight, Josiah thought. \n\n\"I was in a war,\" he said, and she nodded. Josiah smiled at her. \n\n\"I know about war,\" she said, eyes big. He believed her. \n\nWhen the celebration broke up, the boy's father thanked and complimented them. His tip was generous. He said, \"I'll talk to my friends about you. You were great.\" \n\nJosiah and Sing felt exhilarated by their reception. \n\n\"It was as good as it can be,\" Sing said. \"I've done a lot of parties like that, usually alone, and they are polite and appreciative. But this was different. It's you, Josiah. People like your voice. And you, too.\" \n\n\"I think you're exaggerating,\" Josiah said, \"but they did seem to like it.\" \n\n\"Hey, there's a bar I know. Let's celebrate.\" Sing pulled into a place just off the circle freeway. \n\nThey drank and talked about girls and generally about their lives. Sing said there was not a lot of action for a straight mixed-Asian musician out in the boondocks. Not much, though Sing had hope; he thought one girl was interested. Josiah commiserated and mentioned his own difficulties, and encouraged Sing to pursue his one lead. They flirted mildly with the women who walked by, making eye contact and nodding. Josiah wondered what the other patrons thought of the little Asian and the handicapped guy flirting with women who happened past their table. \n\nJosiah didn't talk about Iraq. No one would believe him, anyway. Sing and he left after some time, and Josiah realized that despite everything, he had a friend. \n\n* \n\nIt was only a few days before Sing called to say they'd been engaged for another performance and that he'd asked a flautist to join them. Cora could play several instruments, including clarinet, English horn, and oboe. Sing thought it would make their performances more interesting and varied. Josiah could tell by the tone of his voice that Sing was very encouraged that Cora had joined them. \n\n\"Are you dating her?\" Josiah asked directly. \n\n\"Yeah. She doesn't care that I'm Asian.\" \n\nJosiah shook his head. \"I don't think many people do, frankly.\" \n\nSing admitted, \"I haven't noticed much open prejudice either, come to think of it. But I want to maintain my place in the victimology hierarchy.\" \n\nJosiah laughed. \"I wonder where white guys with mushy knees rank.\" \n\n\"I should think the handicapped would rate highly,\" he said. \"I mean, you're actually a victim.\" \n\nJosiah shook his head. \"No, not really. It was payback.\" Josiah wasn't sure what he meant by that. Sometimes he confused himself. \n\nCora was a fallen-away Catholic who had been dumped by two boyfriends over the years, so she had sworn off boys until Sing came along. A graduate of Carnegie music, she was in her late 20s. She had dark hair, a thin build, was an inch or two taller than Sing, and had dark eyes. She liked to smile and wear sweaters in winter, and she drove a little, dinky car. She and Sing were soon dating frequently, but they kept rehearsals professional. Josiah liked them both; Cora was pretty and nice, but romantically she was only interested in Sing. That was fine with Josiah. \n\nHe thought they made a good couple. \n\n* \n\n\"I'm looking for Ava Fortner's family,\" Sing said at a rehearsal. \"I know Ava is buried in Springfield, Ohio, and it looks like her dad is buried there, too, a few years later. But after that I lose track of her mom. She doesn't live in Springfield anymore.\" \n\n\"I'd really like to find her,\" Sing added. \n\nCora particularly loved \"Of Hope and Love.\" \n\n\"It's the lyrics,\" Cora raved, \"so moving! And the tune is a hundred years of emotion in one song. I don't know if Ava was brilliant, but her song is. We could play it softly or quickly, sadly or happily, and it would still be good.\" \n\nIt became a common request that they play \"Of Hope and Love\" more than once at receptions or parties; people wanted to hear it again, and remarked they'd never heard it before. Josiah would briefly explain the song's story and that they were looking for the writer's family. The trio would perform the song once with lyrics and then either Sing or Cora would play it as an instrumental. ",
        "Sing was developing plans for that song. \n\nCHAPTER 6: Meeting Mattie \n\n\"Josiah, this is Father Phil,\" the voice on the phone said. \n\n\"Yes, Father. What's up? I was at Mass Sunday,\" Josiah said. \"No harm, no foul.\" \n\nPhil laughed. \"No, no, I just discovered that you sing with a pianist sometimes. I was wondering if you'd like to sing at a Mass in two weeks? Our organist is about to retire and he's inviting people to perform. He has arthritis and it's affecting him more now. Oh, we can't afford to pay you, you know.\" \n\nJosiah considered. \"I'll do it. I'll have to confirm with my partner. Sometimes we perform with a floutist. Should I ask her, too?\" \n\n\"Oh, I didn't know. Yeah, please do. Do you think they'll agree?\" Phil asked. \n\n\"I don't know. They're professionals, but I'll try to get them to do it.\" \n\n\"Thanks, Josiah.\" Father hung up. \n\n\"Now why did I agree to that?\" Josiah wondered. \"And without hesitation?\" \n\nCora and Sing were very pleased. They saw Mass at a big church as an opportunity, exposing the group to a wide variety of possible clients. Sing contacted the church music director, who sent him a list of hymns and other music that could be used that Sunday. All three of them met with the church music director on Tuesday, and Sing played the old pipe organ at Merciful God for the first time.. \n\nHe looked over at the music director. \"The delay is longer than I expected.\" \n\nThe director smiled. \"Yeah, you have to ignore it. And allow at the end for the final echo to resound. Not like the new ones.\" \n\nJosiah had never seen someone so happy to play an instrument as Sing was playing those old pipes. He played louder and louder as the session went on. \n\nJosiah said after a particularly booming song, \"I thought you were worried you'd go deaf?\" \n\n\"Yeah,\" Cora added with a nod and a smile. \n\nSing smiled sheepishly, \"It's like I'm addicted. I have to hear it more and louder. I'll tone it down.\" \n\nSing and Cora saw rehearsal as work, but to Josiah it was fun. Between pipe organ and flute and clarinet, the sound was wonderful and everyone finished happy. The church organist was obviously excited. They were ready for Sunday. \n\nJosiah loved that Mass. \n\nCora and Sing picked him up at his apartment, so they arrived together an hour early and had to wait for the preceding Mass to finish. Josiah watched the two pros set up then, which was only a moment. Sing played a few chords on the pipe organ, Cora played the scale on her flute and then oboe. Josiah sang softly a few bars of a few songs. \n\nSing and Cora were playing twenty minutes beforehand with songs from Beethoven and Purcell and Ravel, and Sing was doubly impressive on that huge pipe organ. Cora's flute was particularly lovely on \"Pie Jesu,\" a song from Andrew Lloyd Webber with high flute notes countered by low organ. The church was full well before Mass time; there was no talk as people listened to the performance. Some wanted to clap when it finished before the priest processed. \n\nJosiah didn't sing until Mass began. Here people had occasionally noticed him over the last year, although he hardly participated in church activities. He doubted any knew his name. He was that poor handicapped guy in the back the last seven months: wasn't he in the war? Now he was in front of them. He thought they were surprised to see him singing. \n\nThe processional began. It was a powerful song. He thought they were moved; someone clapped in the back. Father went on with the opening prayers immediately. \n\nSing had little experience playing for a congregation to sing, nor did he know the order of the Mass, and with the pipe organ he was not at ease with the delay between playing and sound, so he avoided it. Phil would signal when it was time for another song, and Josiah would point to the next song title. It was practically a concert, with him singing processional, offertory and communion hymns. \n\nIt went well. Before the recessional, Fr. Phil said, \"I believe we should thank our musicians for some of the finest music I've ever heard at Mass anywhere.\" He looked down at a paper in his hand. \"Josiah Langer, Cora Taschenbaum, and Sing Minh,\" he read. \n\nit was quite wholehearted. Sing stood and bowed, Cora smiled and curtsied with her oboe in hand, and Josiah smiled and nodded. \n\nThe closing was magnificent. Cora and Sing played with enthusiasm, and many congregants remained in the pews till the end. Then Cora and Sing played three other prepared songs, and about a third of the people just stayed in their seats, and as many hung around listening and talking in the back of the nave. The music finished about ten minutes later. Everyone remaining applauded, including Josiah. Fr. Phil came back in and thanked them. Cora hugged Josiah. She and Sing hugged, too. \n\nIt was as if he felt part of a team again, and a winner. Josiah felt appreciated. \"Maybe I'm getting better,\" he thought. \n\n* \n\nIt was only a few days later that Fr. Phil called and asked if the group would like to play for a funeral. Sing and Cora were willing especially when he said the performance would pay for the whole group as one. \"Some families don't have a lot to offer,\" Phil said. The father of the deceased had asked for them, having heard them at that Mass. So they did it for what was offered, cramming in a rehearsal and meeting with the arthritic music director to guide them in song selection. \n\nJosiah showed the director the lyrics to \"Of Hope and Love\" and he approved them for before the ceremony began; loss of love and life were so similar. It was a long, wonderful, easy preparation evening in the nave, playing songs to consider and rehearsing. \n\nThey expected a sad ceremony. The deceased was a 20-year-old young man named Eugene Tierney who had passed after a year of increasing agony and decreasing hopes. Glioblastoma, a brain cancer, killed him young. \n\nJosiah put his crutches behind the chair he'd be using, determined to stand on his own at least for the singing. He said a prayer for more endurance. \n\nThe church music director came to be sure they didn't become confused at the differences in a Mass with a funeral and just a Mass. They played some classical music, and Josiah sang \"Of Hope and Love\" with just the piano. Cora played a solo, and Sing played a famous hymn for the congregation to sing, but really only for Josiah because so few sang. It went well. Josiah steadied himself without his crutches, using the back of a chair, and sitting behind the piano so people didn't see him awkwardly rising. \n\nThere were some parishioners whom Josiah recognized from his attendance at Mass, but one woman he did not. She was his age, thin and pretty, and she looked at him occasionally as he sang or stood before the mourners. He hid his difficulty standing up, but he didn't think he was completely successful. \n\nThe deceased boy's father actually paid much more than the agreed price, but he was in so much grief that he didn't want to discuss it. \n\nThe nave emptied quickly after the casket was removed. Josiah used his crutches to the back vestibule, where Cora and Sing caught up with him. With lots of people still around, Josiah held his crutches in his left hand and walked awkwardly a few steps toward some chairs by the wall. Cora and Sing headed to the restrooms. \n\n\"That song was lovely. The one you sang first,\" a woman to his right said. He turned stiffly, because he could only turn stiffly, and there was that girl about his age, a little shorter than he, with blonde hair and he didn't know the eye color because he's color deficient, but he knew a pretty girl when he saw one. \n\nHe smiled at her, saying, \"'Of Hope and Love' is the name. Hi, I'm Josiah Langer.\" He held out his hand. \n\n\"Mattie Morrison,\" she said. She noticed him fidgeting and misunderstood the reason. \"I'm sorry, I'm keeping you, you seem to need to go.\" She backed away. \n\n\"No, no, I have trouble standing for a long time, that's all. Old war wound,\" he said, laughing. He showed her the crutches in his left hand. \n\n\"Oh, did you hurt it playing football or something?\" she said, smiling and turning toward the chairs by the wall. \n\n\"No,\" he said, \"it's really a war injury.\" \n\nHer eyes were dismayed as she quickly turned back to him. \"Oh, I'm so sorry, I thought you were being metaphorical. Can I help or...?\" \n\n\"Let's just sit a minute in the chairs there,\" he said, pointing and heading that way. He used his crutches, it was just too awkward for him to walk. Cora and Sing came by and saw him going to sit. He introduced them to Mattie, and they excused themselves with a wave and a wink. \n\n\"Meet you outside,\" Sing said, and Josiah nodded. \n\n\"So, Mattie Morrison, how did you know the deceased?\" \n\n\"My cousin,\" she said. \"On Mom's side. I knew him but we were not particularly close. My parents were going to come but they were stuck on the highway behind a wreck, so they're home now.\" \n\nShe acted like she wanted to say more. She smiled, and he thought she was lovely. \"My dad and his had some sort of inside joke. He's named for an actress, and I'm named for an actor. Gene was five years younger. My first name's Marion.\" She looked as if she were testing him. \n\nIt rang a bell in Josiah's mind. Eugene Tierney. \"Gene Tierney!\" he said. Marion Morrison. \"You're named for John Wayne?\" he asked, smiling. \n\n\"Dad liked The Shootist, he told me once. He didn't think Mom would know so he casually suggested Marion. When Mom found out later that I was named for John Wayne, she insisted I be called Mattie. She still feels like he snookered her.\" \n\nJosiah laughed, thinking he might like her parents. \"At least they don't call you Duke.\" \n\n\"That's true. It could have been worse, I guess. Your singing was beautiful. That one song was so touching. I noticed the lyrics speak of loss but they could mean life or love, couldn't they?\" \n\n\"Yeah.\" he nodded. \"Written by a singer who died soon after. Perhaps that's why she wrote it that way.\" \n\n\"Apropos, then, huh?\" she said. She looked directly in his eyes. \n\nHe held her steady gaze. \"Yes,\" he said, otherwise at a loss for words before her. Some seconds passed. \"Well, it has been nice meeting you, I'm sorry at a funeral. Do you attend Merciful God?\" \n\n\"I do. I'm at nine o'clock every Sunday.\" \n\n\"I may make a point of going earlier now,\" he said. He started to get up. \n\nShe stood, saw his difficulty and lifted under his elbow. \"Thanks,\" he said. He liked being touched by her. She could help him anytime. \n\n\"I hope you will,\" she said. \"Make it a point.\" \n\nThat was something to think about. Sing saw him come out and signalled they were ready to leave. \n\nCHAPTER 7: An Upsetting Story \n\nPractically having a date to see Mattie (not Marion) Morrison increased the pressure to get him to Mass. He fulcrumed himself into nine o'clock Mass a few days after the funeral and discovered that a lot of people go that early, also. He sat near the rear of the nave and looked around for Mattie. She arrived a few minutes later, behind him and left, and suddenly she was beside him in the pew. \n\n\"Hello, Josiah,\" she whispered, preparing to kneel beside him. \n\n\"Mattie,\" he said, smiling. \n\nShe lowered the kneeler and began to pray. \n\nIt wasn't a religious experience for him. He was happy sitting beside her, and even the struggle to rise was pleasurable because she helped him, lifting his arm or putting hers around him. He sang with the congregation and listened to Mattie's pretty voice, and Father nodded and gave a little smile after their eyes locked momentarily across the room. \n\n\"Would you like to come home and have brunch?\" she asked him. \"I live about a quarter mile down the road. We could drive if it's too far, I have my car.\" \n\n\"Let's walk, but slowly,\" Josiah said. \"I'm supposed to move as much as possible on my own.\" \n\nShe smiled and said, \"As slowly as you need.\" He crutched and she walked along, talking of life and her work and the town, books and sports. She didn't mention the war and he didn't bring it up. They rested every hundred yards or so. \n\n\"Are your folks there?\" Josiah asked when they came in sight of her home. \n\n\"Yes. Are you nervous to meet them?\" \n\n\"Yes,\" he admitted. \"I haven't... I don't have much experience having a friend.\" \n\nSo they walked on, sometimes Josiah using the crutches, sometimes not. \n\n\"Oh, sometimes my right knee locks up, so if I fall don't be shocked.\" \n\n\"Why's it do that?\" she asked. \n\nHe shook his head. \"No one knows. But they don't want to operate unless it happens a lot. They're hoping it just goes away,\" he said. \"It's only happened three times. After a few seconds, it unlocks.\" \n\nSo he swung along or walked slowly, and she stayed with him. \n\nShe had been a cross-country runner at Merciful Saviour High School and still ran three miles two or three times per week. Miami in Oxford, Ohio was where she'd lived for undergraduate school. She was now the head librarian at the Sky Grey Public Library; it was a gentle calling, although occasionally she'd bill somebody for a lost book. \n\nHe told her about his college experience at the University of Cincinnati, getting into the Marines thereafter, and then how he'd handled being home with surgeries and therapy. He saw sympathy in her eyes. Somehow her sympathy gave him pause. He usually preferred sympathy, but for some reason not from her. \n\nHer house had five or six steps up to a big porch, which he mounted tremblingly using his crutches. Mattie positioned herself to the side to catch him if he fell back, but said nothing. He was perspiring at the top, and Mattie saw it. \n\n\"Tough, huh?\" \n\n\"Yeah. But I'm a pro with the crutches.\" \n\nThey entered the front door into a dark wood house with plaster walls and overstuffed chairs. The place smelled of sausage and coffee, and he hoped they weren't barging in on a late breakfast with people in pajamas. But she called out, saying she'd brought along a friend. They passed into a large kitchen with table and chairs. Her father was reading the paper. He found out later that Mrs. Morrison went to Mass on Saturday evenings, and Mr. Morrison had a different view of the church. Mrs. Morrison was standing with a cup of coffee in her hands, leaning against the sink. \n\nMattie spoke. \"Mom, Dad, this is Josiah Langer. I met him at the funeral the other day and saw him at Mass today.\" \n\nJosiah swivelled forward, a bit awkwardly, crutches in his left hand, and shook hands with Mrs. Morrison and then Mister, who said, \"Larry,\" meaning he should call him that. He nodded. They saw he had the crutches and probably noticed his handicap to some extent. \n\n\"Please, sit wherever,\" Mrs. Morrison said. \"Would you like sausage and eggs, or cereal and milk, or pancakes?\" \n\nHe thought he'd found heaven. He plopped a bit hard into a chair beside Larry, and relaxed a little more than other people would, almost as if he'd just run a few miles, if he'd had normal legs. \"Pancakes sound great,\" he said, smiling. Mattie sat on the other side of him . \n\n\"Okay?\" Mattie asked. He nodded. \n\nThey talked then as families do with a new boyfriend brought home. Where are you from, how'd you get to Sky Grey, what did you do for a living, that sort of thing. It was the first time he'd had to confront what happened to him since he'd left the hospital. It was the first time with nonmilitary people, really. \n\nHe'd been conditioned to distrust civilians when it came to understanding his experience. \n\nHe thought the conditioning was in error, at least if the Morrison family was any indication. They were interested and accepting and sympathetic. They listened and commented without judging anything. \n\n\"So you are how old?\" Larry asked. \n\n\"26. I lived in Greenville growing up, went to public schools there, got a degree from UC. The Marines looked good to me then.\" \n\nMrs. Morrison asked, \"Have you any family?\" \n\n\"No, I was an only child. My dad was much older. Dad died of a heart attack and Mom took care of me. She became... alcoholic, over time, and died right after I graduated high school. So I went in the Marines with no family to speak of. No family history of religion much. But we went to St. Mary when we went.\" \n\nMrs. Morrison looked dismayed as she flipped a pancake. \n\n\"Marines, huh,\" Larry said, thinking about that. \n\n\"I wasn't sure what I wanted to do with my degree,\" he said. \n\n\"Your legs... How'd you get hurt?\" he asked. \n\nMattie said forcefully, \"Daddy!\" She was actually mad, and Josiah smiled at that. He'd never been defended by a girl in front of her father. \n\n\"I don't talk about the wounding much.\" Just then three medium pancakes appeared on a plate in front of him, with silverware and coffee and orange juice. Mattie had a plate then, too. \"Thanks, very much,\" he said. \n\n\"I'm sorry, maybe I shouldn't have asked,\" Mr. Morrison said, actually looking chagrined. Josiah found that touching, and smiled. \n\n\"Well, I guess I shouldn't treat it like a mysterious event,\" he said. He paused to eat some pancake, which had blueberries and that he'd drizzled with real maple syrup. He'd noticed Mrs. Morrison getting out the real maple and putting away the Mrs. Butterworth's. \n\nMattie said, \"You don't have to...\" \n\nHe shook his head. \"I know but might as well.\" He took another breath, one that quavered unusually, and he determined to give no details. \"I was an infantry platoon commander. We had some firefights. Several IEDs wounded some of my men over the months, but none were killed. In my last firefight, I took a round right through the knees before my guys killed the shooter. Nothing much, just bad luck.\" He let out his breath, as if he'd been holding it because the moment was stressful. That was that, he thought. Not so bad. Good story, not many details, all of it was true. Not complete, but true. They were looking at him as if something was wrong. \n\nIt was the volume that surprised them. He realized he'd gotten louder as he talked. \n\nMrs. Morrison had stopped cooking pancakes and the smell of burning food began to waft.\"That was all?\" Mattie said quietly, and he felt her hand on his arm. \n\nHe was perspiring, heavily. \"What was wrong?\" he asked himself. He looked around at each of them. They were looking back, concerned for some reason. There was that noise in his head that he got sometimes, but it wasn't terrible. Tinnitus or something. \n\n\"Yep. More or less,\" he said aloud. \"They took me to a fob, a forward operating base, then to a ship, where they operated. I've had several operations. I expect no more, but operations seem to be the thing where my knees are concerned.\" He smiled. He'd gotten through it, without demons or crying or sharks, anything. Just some sweat. Good. The tinnitus diminished. \n\nMr. Morrison was looking at him as if he'd done something. \"He's begging us to believe him,\" Larry thought. He wondered what happened to the poor boy. \n\n\"Sorry,\" Josiah said quietly, meeting no one's eyes. \"I have trouble talking about Iraq. \n\n\"These pancakes are great, ma'am,\" he said, talking at a more normal volume, finishing more than he should eat. Mrs. Morrison joined them at the table. She smiled and welcomed his compliment. \n\n\"Are you in constant pain?\" Mattie asked. \n\n\"No, no longer. I can use my legs, but I shouldn't kneel and the doctors said I might always need crutches or a cane for any kind of distance. They don't want to see their work messed up by too much weight on a bone they've rebuilt, and it might hurt. I have pins in some bones, and both knees were engineered in New Jersey,\" he smiled. \n\nMrs. Morrison reached over and covered his hand. \"I am so... sorry this has happened in your life.\" He looked at her eyes: grey, sincere, and he wished he'd had a mom like that. Very much. He remembered Mom's eyes: yellow, bloodshot, dark. Why had her life been so different? He answered it himself, and looked to Larry with a little more regard. ",
        "\"Well,\" he said softly, \"I think I know what it's like to have a mom again. Just a little bit.\" He looked at her, turned his hand, and squeezed hers. Then he pulled it away. They had not asked about what he was doing in that firefight. They seemed to accept his explanation. He looked about to see if he was suspected and realized he might have a furtive expression on his face. \n\nIt was an interesting morning, as Mattie and he tried to learn about one another and her folks danced around them, probably wondering if he was okay for her, or if his lack of family was a debility, or if he was an evil. Perhaps they wondered if he were mentally stable from the war. \n\nHe wondered that himself. \n\nHer dad said, \"You sing? Mattie said you sang at Gene's funeral.\" \n\n\"Yes. I met up with a pianist and his girlfriend and started singing, and now people are paying me for it. I sang in the choir in high school. I'm shocked people are willing to pay to hear me.\" Josiah shook his head, smiling as if it were almost risible. \n\nThey were quiet, sipping coffee, and Mrs. Morrison was moving about completing mundane tasks like putting knives in the dishwasher. Josiah felt welcome. Talk was gentle and normal, about movies and work and weather. \n\nAfter an hour he knew he should leave. \n\n\"I should go. Thank you, Mrs. Morrison, for breakfast. Mr. Morrison, pleased to meet you. Bye.\" They called out farewells and Mattie went along. \n\nShe walked him part way home when he left. Near his apartment she said, \"I hope you'll come to nine o'clock next Sunday.\" \n\n\"Will I get breakfast afterwards?\" he asked. \n\n\"Yes. Sometimes they work at the Homeless Shelter on Sunday. So I might have to make it.\" \n\n\"So Mass is like a date,\" he said. \n\nShe nodded. \"See you then,\" she said. \n\nHe had a strange feeling in his chest as they parted. He made his way to his apartment. Vogel had warned him about life: \"You're not done, Lieutenant. Your knees just suck.\" \n\nHe called Mattie a few days later, \"Just to talk,\" he said. They discussed her work and his singing. He didn't run out of things to say. Two days later, she called him. They saw each other at Mass again. \n\n* \n\nA few weeks later, he surprised Mattie at her job. It was nine o'clock in the morning, and there was no one in the library but Mattie and a college-aged guy who worked mornings. \n\nJosiah crutched in, having driven and parked in the lot. He remembered public libraries as peaceful and almost serene places. It had been many years since he'd been in one. \n\nMattie saw him. \"Josiah! What a surprise!\" She left the cart she was pushing and walked over to him. \n\n\"I need a library card,\" he said. \"Do you still use library cards?\" \n\n\"Yes, we do. Have a seat and you can fill out a request.\" \n\nSo he sat a few minutes filling out the form while she busied herself putting books on shelves. When he finished, she came over and sat with him. \n\n\"Josiah, when you came for that first breakfast, what was it you didn't say? When you told Mom and Dad about what happened in Iraq, you kept something to yourself, I could tell.\" \n\nIt was a simple request, made without judgment or insinuation, and possibly out of genuine concern for him. Josiah looked straight into her eyes. It was loud in his head suddenly, and it interfered with his thinking. Her eyes didn't waver looking back. He looked away because he knew somehow that he would be disingenuous, but not how. \n\nHe looked down at the table and finally spoke. \"It was when I got shot. I can't remember all of it.\" He paused and took a breath. \"Hundreds of civilians were walking toward us on a bridge. The fighting was still going on in their city, smoke was going up, bombs going off. There was a woman, holding the hand of her boy, walking funny. She was not far away, and she lifted her son to the concrete railing on the side of the bridge. I wondered, now why is she doing that? Is she going to drop him in the river? I stopped our Humvee and ran to them, but then she stumbled and fell with him into the river. That was when I was shot, was shot as I watched them fall. The mom looked up at me for a second.\" He shook his head. It was plausible, it might even be true. \n\nSomething screamed at him in his mind, not words, just anguish, an emotion sonifying in his head. He knew he'd gotten louder again. \n\nHer eyes were different, looking into his. \n\n\"I failed. I could have saved them,\" he said. He felt perspiration breaking out on his forehead. Why did he perspire so much when he told the story? In the back of his mind a voice said, which story? You've told so many you can't keep them straight. \n\nHe couldn't meet her eyes. \n\nHe said nothing more. He shook his head, looked into his lap. He had to move, to go. He pushed himself up, his knees stiff. \n\n\"I should go. I must go,\" and he smiled at her and headed for the door. He abandoned her at a table in the library at nine in the morning. He was frantic, using his crutches, then banging the door into his one crutch and almost falling, but then getting out. He turned left to go home, forgetting his car parked in the lot to the right. \n\nHe interrogated himself as he crutched away. \"Do you have issues, Lieutenant? Have you not come to grips with your actions? Their results? Guilt is more complex than it should be, isn't it?\" \n\nNo, not just guilt. Responsibility. That's what his nut doctor had said. You feel responsible for something. \n\nFor a few minutes, he closed his mind and had no thoughts. He was better than that, Josiah thought. He left someone he was thinking of loving alone and unanswered, wondering what was so hard to tell. He saw her eyes, clear and accepting and interested, and her eyes, accusing and hateful and dark as she loosed her grip on her son. What did it mean that he remembered Mattie's eyes and some anonymous woman's, of all the women in the world? He was forcing memories around something, as if there was a sphere of shielding in his consciousness that could not be broached. \n\nWhat kind of man was he really? He stopped outside his apartment, closed his eyes and stood in the shade of a tree. How can you remember the same thing a different way each time you think of it, and you're sure they're all true? \n\nHis shrink said, \"Your mind associates to protect you. You don't want to believe what you saw. Or what you did.\" Josiah didn't tell Mattie the truth. He told her what he remembered this time, this morning, in Ohio. \n\nThree girls besides his mother and Aunt Dotty. Not girlfriends, any of them. Erin, who danced, who felt so electric under his hands, he would not forget despite innocence and youth. Ari El, who promised nothing and delivered his first sex, a woman he could never see as anything but a part of a senseless night. And now Mattie, who looked and acted like he was a man, who acted like she might like him, even love him, and who scared him somehow. \n\nHe was afraid to call her. What did he want from Mattie? He was crippled and would receive a government disability check the rest of his life. He could sing a little, or run for office. He was a lousy prospect for a pretty girl. No, she was better off without him. The best thing he could do for her was to leave her alone. \n\nShe was probably thinking, good riddance! \n\nCHAPTER 8: Is He Crazy? \n\n\"Mom,\" Mattie said to her mother, \"Josiah walked out on me. At the library.\" \n\n\"Why? Did you fight?\" her mother said. \n\nMattie shook her head. \"No, I don't think so. I asked him about what happened in Iraq. Remember Dad said he thought Josiah had some issues about it, the way he looked as he told us? Anyway, he looked that way again and he gave me a story about a mother and her boy caught in a firefight, and it just didn't make much sense. Then he stood up and left.\" \n\n\"Oh?\" her mother asked. \n\n\"Another thing. He drove to the library, but his car was still there all day. I think he forgot his car. He had to use his crutches all the way home, almost a mile for him. I saw him coming back for his car just after closing time. His lips were moving like he was talking. I don't think he even noticed when I drove by him.\" Mattie shook her head. \n\nHer mother was silent. She retrieved some cold tea from the refrigerator and sat down at the kitchen table. Mattie was her younger of two, somehow unmarried after a coterie of failed prospects, and seemed to be most interested in that poor soldier. She'd heard about mentally disturbed servicemen returning, beating their wives, becoming drug addicts, or unable to hold a job. She liked Josiah, but there was that strange story and the way he looked dark around his eyes. Getting louder had worried all three Morrisons. \n\nShe looked at her daughter and decided she wouldn't bring up Peter, the doctor who asked her to marry him, whom she'd turned down. \n\nWas she trying to save this guy from himself? \n\n\"Are you in love with him, Mat?\" \n\nMattie looked away, but then brought her eyes straight back to her mom. \"No, not yet, but there's something there I can't describe. It's like he really wants to tell me something, something he just can't force out. No, I'm not in love. But he's the kind I could love.\" \n\n\"You know, you shouldn't love someone in order to change him. It doesn't work like that. Lots of women... \" \n\nMattie smiled and shook her head. \"No, Mom, I know. That's why I can honestly say I don't love him yet. It's only been a month... No, less. But he's a good guy at heart. There's a... strength in him. He's not ready to get involved. He's nowhere near that. If I ever hear from him again.\" \n\nHer mother nodded. \"You going to see him?\" \n\n\"I was thinking at church. Maybe I'll go to a different Mass this week, over at St. Charles or St. Mary, and next week see if he's still sitting in the back. Give him a week to think about things. But I wish he'd call or something. Somehow I doubt it. I think something really bad happened to him over there. I wonder if he did something bad, or cowardly or something.\" \n\nHer mother nodded. \"Would that change things for you? If he'd done something awful or bad?\" \n\nMattie responded quietly, \"I wonder the same thing.\" \n\nHer mother sat quietly and her father entered. \"I heard you talking about your boyfriend.\" \n\nMattie protested, slightly humorously, \"You know he's not that. Not yet, anyway.\" \n\n\"Holding hands is a commitment, I think,\" her dad said, smiling. \"But really, you left out an option.\" \n\nMattie and her mother looked at him. \"What do you mean, Dad?\" \n\n\"What if he feels bad because he did something really brave?\" \n\n\"Is that possible?\" his wife asked. \n\n\"Well, think of this. What if he shot a terrorist but then is second guessing whether or not it was a terrorist? Second thoughts about something bad. Something like that.\" \n\n\"So,\" Mattie said, \"you're saying he might be a hero, but it was morally unclear to him whether it was right?\" \n\n\"Yeah,\" her dad said. \"I know lots of guys followed orders and were still haunted by it. Justified orders. Vietnam had lots of that.\" \n\nThey sat at the table for a while in quiet. Mattie's fingers drummed on it, her nails clacking. She was thinking that she left Peter, because he was obsessed with sex, for Josiah, who was obsessed with something in Iraq. He'd shown no interest in sex with her, but it was early for that. She had deflected Peter's desires almost as soon as they started dating. \n\n\"He's a pretty good singer,\" she said. \n\nHer mother responded, nodding, \"Rose was saying the performance he gave at Mass with the organist and clarinetist was tremendous. She says he used to sit behind her at eleven o'clock and she had no idea he had such a good voice. She said Grant thought he was a vagrant, passing through, but then he kept coming.\" She was smiling. \"Says he sounds like Bing Crosby.\" \n\n\"So you've been checking out my boyfriend, huh?\" Mattie joked. \n\n\"Ah, so you admit he's a boyfriend,\" her dad said. \n\nMattie smiled in surrender. \"I give up. Yeah, he's a boyfriend. But he's on thin ice. I think he's a liar.\" \n\nHer mother said, \"Lying either gets you an advantage or it protects you from harm.\" \n\n\"They all have baggage,\" Mattie thought. \"Even good men are flawed. Am I wrong about Josiah?\" \n\nHer father said, \"I think he's hurt.\" \n\nMattie asked, \"Hurt enough to not say the truth, or not know it? Do you think he's crazy?\" \n\nNo one spoke. \n\nCHAPTER 9: Ava Once More \n\nPlaying at Merciful God proved to be a turning point for Sing, Cora, and Josiah. Gigs began to find them. They had performances at first every month, then every other week, then occasionally two in a week or on a weekend. They became busy. They rehearsed when they were free. Sing worked with Josiah, careful not to overwork his voice. \n\n\"Of Hope and Love\" became their most-requested song after they performed it once. People wanted to hear it again. They prepared to play it with lyrics once and as an instrumental another time at most functions. It fit some religious ceremonies or as a romantic dance song. \n\nSing called Josiah one afternoon. \n\n\"I found her,\" he said, a hint of the jubilant in his voice. \n\n\"Who?\" Josiah eloquently replied. \n\n\"Ava Fortner's mom. I found her. She lives near Columbus,\" he said. \"Her last name's Crimmins, now.\" \n\n\"Wow,\" Josiah said. \"How'd...\" \n\n\"Contacted her through a lawyer who was involved in Ava's father's estate. Her mother remarried after her husband died, all since Ava passed.\" \n\n\"Have you contacted her?\" Josiah asked. \n\n\"Just quickly, by phone, a minute ago. I said I'd like to talk to her about Ava. Said I'd heard a song she'd written. She invited me over. I said I'd come with a friend.\" \n\n\"When?\" \n\nHe smiled. \"She was very eager. She asked, 'Tomorrow? Nine?'\" Sing laughed. \"Cora can't make it; she has a rehearsal with Cincinnati since they need another flautist this weekend. Get you at 7:15?\" \n\nJosiah said, \"I'll be ready.\" \n\nSing said, \"I have some things to do now. See ya tomorrow.\" \n\nSing used his friend Bobby's equipment to clean up the recording of \"Of Hope and Love.\" He removed most of the raspiness and some unfortunate echo as much as he could, and transferred the recording to several CDs. He brought along a CD player and the cleaned-up recordings, hoping the effort would be appreciated. \n\nSo they drove to the Grove City suburb of Columbus, finding Mrs. Crimmins's sister's house to be a two story brick with a full front porch on a street shaded by old trees. They parked beneath a huge tree on the street, hoping the shade would keep the car cool. Mrs. Crimmins met them at the door. She wore light pants and a loose, comfortable, nice shirt. \n\n. \n\n\"Mr. Sing?\" she asked as they walked up the steps. Josiah was slow, and Sing knew he wanted to make it on his own. He was using his crutches. Mrs. Crimmins was patient, too. \n\n\"Yes,\" Sing said as Josiah reached the top step, \"this is my friend, Josiah.\" Sing watched for any wobble or stumble as Josiah surmounted the obstacle. Sing put his hand out to be sure he didn't relax too much and fall back. Mrs. Crimmins was solicitous. \n\n\"Hello. Hurt my knees a few years ago,\" Josiah said, smiling and nodding that he'd made it. \n\n\"I'm so sorry,\" she said once he steadied. \"How were you hurt?\" \n\n\"I got shot,\" Josiah said, \"in Iraq.\" He surprised himself with the abrupt detail. \n\nHer hand went to his left arm then, an expression of dismay on her face. She just shook her head, but she squeezed his arm. \n\n\"Thank you both for coming. Come in, please.\" She held the door and they went inside. They found seats on the sofa and a chair; she had cookies and coffee ready on the coffee table beside a picture album. \n\nShe served the coffee and cookies as they talked; the house was air conditioned and cool. \n\n\"Now, what brought my daughter to your attention?\" she asked. She picked up her own coffee to sip. \n\n\"A song, 'Of Hope and Love,'\" Sing started. \"We were told it was written by an Ava Fortner.\" \n\n\"Wow,\" she said, smiling and musing then. \"She worked on that song for months, trying this version and that. She sent off a cassette to a recording studio, but she never heard back. I think she recorded it sitting on her bed up in her room, in our old house, using an old recorder of my husband's.\" She shook her head at the pleasantness of the memory of her daughter. \n\nShe went on after a short moment. \"About then is when she was diagnosed. Glioblastoma,\" she said. \"So we had other things to worry about. But it was a disappointment for her.\" \n\nSing looked at Josiah, who looked back. It was the same disease that killed Mattie's cousin, whose funeral they played. Glioblastoma was a quick killer sometimes, and apparently didn't always wait for old age. \n\nShe hesitated, with a dreamy expression on her face. \"Would you like to see pictures?\" \n\nSing and Josiah both nodded. \"Very much,\" Josiah said. \n\nMrs. Crimmins opened the album, and they all three sat on the couch looking at it. There was Ava as a high school kid, playing in the school band, kicking a soccer ball, smiling at the camera. Unremarkably beautiful as most adolescent girls are, there was Ava hiding braces for a year or two, brown hair long. She was a winsome child with a ready smile, and shy; \"I don't think she was much over five feet tall,\" her mother mentioned. She was just a regular kid, modest and nice. There were some pictures of her in decline then, two with her head swathed in bandages and with sunken, gaunt eyes, and finally her mother closed the book. \n\n\"She was all those things you want in a kid,\" her mother said, not crying but sadness tinging her words. \"Gentle and happy and friendly.\" \n\n\"We are so sorry for you, and her,\" Josiah said. \"Our loss not to know her.\" \n\nMrs. Crimmins shook her head. It was quiet for a moment. \n\nJosiah said, \"I heard the tape when I was maybe 13. Patrick and I listened to it over and over. I memorized the words. I thought it was so beautiful.\" \n\nMrs. Crimmins looked thoughtful. \"Ava died 12 years ago, now, and the tape was maybe a year before that. I heard her sing that song so many times, changing this and that.\" It was quiet for a moment as she remembered. \n\nSing said, \"Uh, we have the tape.\" \n\nMrs. Crimmins was obviously startled. \"The actual tape? With her singing?\" she asked, surprised. \n\nSing held up the disk. \"I enhanced it, transferred it to disk. Would you like to hear it?\" \n\n\"Yes! Oh my...\" she said, eyes big. \"Oh, I assumed... Shelly isn't here, I wish she'd been able... Or Jack. He never met her.\" Josiah wondered at the emotions a man might have hearing his wife's deceased child for the first time. \n\nSing said, \"I can leave the disk, several actually, I have others. If you have a player?\" \n\n\"Oh, yes,\" she said. Her hands, holding her coffee cup, trembled. Josiah realized she was trying to control herself. She managed to put the cup down without spilling. \n\nSing slipped the disk into his player and turned it on. Some guitar chords were played and then Ava sang. Mrs. Crimmins inhaled sharply as she heard her daughter's voice for the first time in 12 years. Her eyes were tightly shut, she didn't even seem to be breathing. \n\nJosiah and Sing watched her. She sat back, relaxed, legs crossed at the ankle. At the second verse, a single tear escaped her right eye. She didn't seem to notice. The beautiful voice and melody filled the living room for several minutes. The recording ended and hung about them. \n\nThey were silent for perhaps two minutes more. Mrs. Crimmins was like a statue, eyes still tightly shut, hands folded in her lap like a Catholic school child. Sing looked at Josiah, who shook his head slightly, encouraging Sing to preserve the moment for her. \n\nFinally, Mrs. Crimmins started to talk but no sound emerged; she shook her head, eyes remaining closed. She pursed her lips. Eventually, calmly, she whispered, eyes still shut, \"What a wonderful gift you've given me.\" A long moment more of silence ensued. Finally she opened shining eyes. She turned to Josiah and kissed him on the cheek, holding the kiss for more than the usual. She did the same with Sing. ",
        "She said, her voice louder than a whisper now, \"A few years ago, I found an old beach ball she blew up, half full, still carrying her breath. I squeezed it out to smell it.\" She shook her head. \"I thought that was the last...\" \n\nShe looked from Sing to Josiah. \n\n\"How can I thank you?\" she asked, her voice normal as before. \n\nSing looked at her forthrightly. \n\n\"Ma'am, I'm a professional pianist,\" Sing said. \"Josiah sings. We would like to know if you'd grant us permission to play the song, maybe even record it,\" he said, looking over at Josiah's surprised expression with a hint of a smile. \"I don't think her recording is of a quality that we could make it commercial, at least as it is. The acoustics were just not strong enough for a modern recording, and the tape was old when she used it, the recorder was not very good. But we'd like to offer a contract. Permission to record and sell the song, if we can. If it made any money, you'd get standard percentages as inheritor of the copyright.\" \n\nWas he saying Josiah would sing for a commercial recording? With his commonplace voice? \n\nMrs. Crimmins was one better than Sing. She had purposes and virtues, too. She sat back and smiled, thinking before she answered. \n\n\"Young MEN,\" she said with emphasis, \"you have made an old woman very happy. To hear her voice again!\" She shook her head. \"And now forever I can play it for anyone who asks. It's like God won't let us forget her.\" She shook her head once more. \"No, I won't accept any money should a recording of Ava's song sell even a million copies. Instead, give that percentage to defeat GBM. Just attribute it to her. Make sure, if anyone asks, that you tell her story and that she only had enough time to give this one song. Sound fair?\" \n\nThey nodded. Sing said, \"We may write up a contract to that effect, then. You can see we're keeping our side. The lawyer, he might want a signature.\" \n\nShe waved it off. \"My husband deals with contracts. He'll appreciate this. I can't wait to play this for him and my sister.\" She stood up. \n\n\"Now I'd be even happier if you'd play and sing it for me, yourselves,\" she said. \"We have a piano in the back.\" \n\nJosiah and Sing looked at each other. It turned out she had an old upright in the sun room off the back of the house, and Sing sat down at it and played some chords. \"It's in tune,\" Sing said. \n\n\"Shelly plays,\" Mrs. Crimmins said. \"My sister.\" \n\nJosiah sang then, and Mrs. Crimmins sat in the sunroom on a cloudy day and seemed very happy. She was nodding, lounging on a white wicker chair with her hands clasped about a knee. She looked comfortable and normal. She was about the age of Josiah's mother when she passed. \n\nThey went through the song twice because she seemed so happy with it; she joined in the chorus at the end. \n\n\"I think,\" she said after they finished, \"Ava would have loved to sing with you.\" \n\nThey talked about Ava then, deceased at 19. A promising life never lived. Or perhaps fully lived in its brief time. \n\nWhen they told her, Cora said she regretted missing that meeting, very much. She gave Sing a kiss on the lips, and kissed Josiah on the cheek, her right arm around his neck. \n\nShe said, \"You guys have no idea what you did.\" \n\nCHAPTER 10: Torment \n\nHe called Mattie once on the phone, but the conversation seemed strained and awkward. He went to Mass at nine, two Sundays after the library incident and the week after visiting Mrs. Crimmins, and Mattie sat beside him. He said, \"I'm so sorry I left you like that. I can't believe I did that.\" \n\nShe looked at him and smiled. She admitted, \"I was pretty mad, but I could see you were upset.\" \n\n\"Later, maybe?\" \n\nShe nodded, and sometimes she held his hand during Mass. He was pleasantly surprised. He wondered if it meant anything to her. \n\nHe walked her home then, telling her of the visit to Mrs. Crimmins. When he told her of playing the recording, Mattie stopped and looked at him. She looked from one of his eyes to the other, and held his right hand. When he finished telling of singing for Ava's mom, Mattie stood on her tiptoes and kissed his cheek. She shook her head as they started to walk again. \n\n\"There's a lot of good in you, Josiah.\" She was quiet, but she shook her head when he went to talk. She put her fingers on his lips. \n\n\"You should see someone. You're not seeing a therapist about your anxiety, about your experiences.\" \n\nFor the first time since he came to Sky Grey, he wished he had followed Vogel's advice. \n\n\"It's only the one thing,\" he said to Mattie. \"I just stress over one thing. I wake every morning at 3:09 and it takes me forever to fall back asleep. Sometimes when I think of that bridge, I just sweat and there's a noise in my mind.\" They walked slowly, and she held his hand as he swivelled with crutches under his left arm. \n\nHis voice was controlled, soft, but again the buzz in his head grew louder. After some minutes she squeezed his hand. They came to a bench and sat. Josiah straightened his legs in front of them, blocking the sidewalk, but there were no walkers nearby. \n\n\"Do you remember it now?\" she asked. He looked around, then into the distance as if searching the horizon for a ship. \n\nHe told her again of that day, checking his watch at 10:09, that bridge, those people, but there came a point Mattie was sure something was wrong or just not likely. He grew louder again. \n\n\"I dismounted the vehicle, yelling at my guys. Alternatives and ramifications flooded my mind, so much could be going on. She picked her boy up, put him over the railing to protect him but just then an IED went off and they were blown into the water. I was shot then in a firefight. That's all there is in my memory, anyway. That's all there WAS!\" \n\nHe spoke over the sudden noise in his head. It wasn't tinnitus, but what else could it be? The whole thing was awkward. \n\nMattie was looking at him. He'd added some things like the exact time, little things except for the IED, and left out others. He didn't meet her eyes. She'd heard a tinge of desperation as he spoke, heard the volume increase and diminish as he struggled to control it and the noise in his head had to be overcome. She saw the perspiration on his forehead and darkening his shirt; he was soaked. \n\nHe wanted to say, I'm okay, it's all okay, it was long ago and far away and I'm not, you know, crazy. \n\nHe calmed himself. \"I remember it, and that's all true. A child and a mother gone just like that.\" \n\nMattie said nothing for some time. She realized she'd now heard three versions. Josiah thought she could believe this one because it was true, although she missed the shark. He remembered seeing the shark, but now he didn't remember it as happening; he remembered it as what he told Vogel. In yet another version. \n\n\"How many versions were there?\" she wondered. \n\n\"How many versions were there?\" he wondered. He suddenly knew how many versions there were: as many as were needed. \n\nIt weighed him down as he realized it was not truth. \"Wait,\" he said, stopping and looking at her. He was better, but he wasn't well. \"It's not true. What I just said. I thought it was a minute ago, and now I know it's not.\" She looked in his eyes. \n\n\"A lie followed by an apology,\" she thought. \"He's tortured.\" \n\nAs they came to her house, she said, \"You blame yourself for something. A woman and child died right before your eyes. Then you were horribly shot. Don't you think your standards are a little demanding? I mean, would you have expected someone else to save her? Or the kid?\" \n\nJosiah nodded. \"I know you're being reasonable. Somehow I think I should have saved them.\" He was perspiring again, and he heard the words weave themselves together so as to convince her, to persuade her. It worked, he thought, she believed him, and he felt satisfaction. \n\nHe wondered why he was satisfied. He was losing track of his lies. \n\nVogel knew he was making things up, just as Mattie now did. She also knew he couldn't find the truth. What woman would love an admitted liar? \n\nShe raised her head and kissed his lips then, as he stood drenched in too much perspiration, too much anguish, too much emotion for what he'd said. He knew it, and he knew she knew it. \n\nHe said, quietly, looking directly into her eyes for once, \"I'm not crazy forever.\" \n\nShe shook her head. She thought, \"What am I doing? This is it? I'm finally in love, and this is it? He's crazy.\" \n\nAn answer came to her, and she smiled. She thought it was from God, although it just came to her mind. Perhaps her mother would understand. It was her moment: the moment, she thought, that made her life good or bad. She knew the choice she should make. She looked at Josiah, who had not kissed her, not touched her breasts, not tried to get in her pants. Josiah, who suffered; but she was sure he was good, smart, loving. \n\nHe was brave, she became sure. He always left that Humvee, in every version. He didn't shoot into the crowd or order others to kill innocents. Somehow, she knew he went into more danger when he left that vehicle. \n\nHe was gentle. She'd seen his eyes as he told her about Mrs. Crimmins. She had to let him know. \n\n\"I think you're a good and decent man, Josiah. I don't know how you live with those moments in your memory,\" she said, her hands holding his shoulders, eyes glistening. \n\nHe saw Mattie's eyes, wet with emotion. \"I wonder if I ever remember them, will I be better or fully crazy?\" \n\nMattie shook her head. She didn't know. \n\nCHAPTER 11: Favors and Songs \n\nWedding receptions were their primary work, but they also played parties and dances. Occasionally, if the contractor wanted a larger group, they added a bass player, violinists, guitars, and a drummer. All the musicians were colleagues of Sing and Cora, all young and eager for the work. All were talented and classy, Josiah thought. \n\nThey were making some money at it now, and Josiah was actually considering himself a professional singer, guffaw to follow. \"Mom,\" he thought, \"I'm a singer!\" He imagined her smiling and shaking her head at the way life was working out for him. But he'd heard no ridicule, no criticism of the effort. They had to refuse some offers because they became so busy. \n\nFather Phil asked if they'd play a Mass on the anniversary of the founding of Merciful God in a few months. He admitted he could not afford to pay them, but he emphasized it was a major celebration for the parish. Josiah spoke with Sing and Cora, and they spoke with a guitarist, drummer, and two violinists, and for the publicity and gratitude they decided to do it. \n\nA month after the visit to Mrs. Crimmins, a copyright lawyer sought and received a release from her, with a brain tumor charity to receive a percentage of any profits over $2000. The lawyer was certain they did not need the contract, that actually they could record the song without consideration, but Sing wouldn't hear of it. \"I know guys who've played fast and loose with a songwriter's work, and everyone of them has a bad rep forever.\" \n\nSing called Mrs. Crimmins and they talked for some time. She said it was a wonderful moment playing Ava's recording for her sister and husband. \n\n\"I want a copy of your new recording, when you finish it,\" she said. \n\nSing smiled. \"It won't be long now. I'm getting everyone together.\" \n\nThey rehearsed and eventually recorded at Sing's friend Bobby's house, whose basement was a sound studio. Bobby was older, an occasional conductor of some of the local orchestras, had his own band over the years, and seemed to know the industry. His large basement was crammed with electronics and a soundproof room big enough for a small orchestra. Bobby was ever on the fringes, watching Sing and the other performers, sometimes whispering things in Sing's ear that Sing judiciously conveyed to a performer. \n\nSing wanted to make the recording of \"Of Hope and Love\" using the three of them, several other instruments, and some backup singers. He rehearsed the singers separately for several days and worked alone for several days with Josiah. Josiah worked on diction and all the things a singer can improve. \n\nA few days before the recording, Sing gathered all the singers and rehearsed them together. At first, Josiah felt foolish to be the lead in front of three professionals. \n\n\"So you're the lead,\" the little brunette backup said. \"We wondered if you were a real guy or just a figment. Sing was very mysterious.\" \n\nJosiah smiled. \"I'm it. I hope you cut me some slack. I'm just an amateur.\" \n\nThe blonde singer shook her head and smiled. \"If Sing says your voice is the one, who am I to argue?\" Apparently, Sing's reputation was solid. \n\nDuring one break, the singers sat and drank some soft drinks. \n\n\"Well, I hope my voice is good enough. This is all new to me. I wonder that I'm singing with accomplished people, I don't want to let anyone down,\" Josiah said to them. They smiled at him. \n\n\"I graduated from the Cincinnati Conservatory,\" the one black woman said, \"and believe me, I'd rather sing with you and Sing than some of those so-called pros.\" \n\nJosiah smiled at her generosity. He asked, \"Why'd you agree to work with us? We have no money up front.\" \n\nOne of the backup singers said, \"He only cares that the music sound as good as it can. He's sincere, and half of the music pros in this area owe him favors. And we heard the writer's percentage is going to charity.\" \n\nThe other two singers were nodding. One said, \"Sing's always worked with us when we needed him. He's calling in favors. But once you agree to do it, he works you like a gym trainer!\" \n\nThey all nodded at that. Sing had Bobby work with them for another half hour. Then Sing played a recording from one of the instrument rehearsals. Josiah was shocked at the wonderful sound. Bobby practiced with them for an hour to two recordings, nitpicking every voice. He heard imprecise timing when there was none to the amateur ear. \n\nSing didn't want to record it in pieces, he wanted everyone in the same room, everyone together for final rehearsals and recording. Sing was on the phone a lot, coordinating. \"They'll all be here!\" he said. \n\n\"How many favors did you have to call in?\" Josiah asked him during a break. \n\n\"All of them,\" he said and smiled. \"There are all kinds of investments in life.\" \n\nFinal rehearsals were resounding, literally. By that time, many in the room hated \"Of Hope and Love.\" No one blamed Sing, possibly because everyone could see that he was prepared and working harder than anyone. Finally, after listening to the musicians play through for the thousandth time, Bobby looked at Sing, and everyone waited a few seconds. \n\n\"We're ready,\" Sing said. \"Tomorrow, here, ten in the morning. We want to make several recordings, so it'll be a day.\" There was a weak cheer and groans. Sing had ruled their lives for the last mornings and evenings of intense practice. \n\nIt was important to Josiah. His sudden fear of failure perhaps showed a side of him Sing had only suspected. Josiah had suffered no stage fright when he was bitter and angry, but those qualities seemed to diminish with success and dreams, performances, a girlfriend and a song. People were counting on him. It was their livelihood, their hope, and he didn't want to let them down. \n\nThey recorded \"Of Hope and Love\" several times with variations over several hours. Sing and Cora were flawless, Cora's clarinet very subtle in its loveliness. Lovely tune, lovely and different each time. There were a few mistakes that were corrected; Bobby smiled (which was unusual, Sing said; Cora said she'd never known he could). \n\nWhen the final variation wrapped, this one with more prominent guitars, Bobby nodded and Sing said, \"That's it! Great job, everyone. I'll let you know what we do with it, it'll be soon. Thanks, all of you.\" \n\n\"What are you going to do with it?\" Josiah asked Sing when the others had left. \n\nSing looked at Bobby. \"Don't know.\" Bobby smiled. Sometimes Sing kept his cards close to his vest. \n\nCHAPTER 12: Haunted \n\nJosiah avoided Mattie's family at Thanksgiving and Christmas, making excuses that she did not believe. \"It's only been a few months,\" he said. \n\n\"You just can't face people who might be interested in you. Like my brother or sister-in-law.\" \n\n\"She was right,\" he admitted later. \n\nBy spring they were dating occasionally in the evenings, and always together for Sunday Mass. They visited Krohn Conservatory for the flowers, saw the Dayton Dragons play, visited parks. But they were not sexually active. They kissed, but it was usually goodnight and never led to passion. \n\nMattie spoke with her mother. \n\n\"Mom, I'm just not sure about him. Josiah, I mean. He's normal and fun and smart, gentle, and then there will be something about the war or Iraq, and he'll shut down, or his eyes get that dark look. Like he's haunted.\" \n\n\"Do you ask him about it? What's bothering him?\" her mother asked. \n\n\"Yes, he'll say he doesn't know why his mood changed,\" she replied. She hesitated and said, \"I think that's true. He doesn't understand himself.\" \n\nHer mother clasped her hands. \"Hon, is he okay? Are you safe with him? I mean, is he... mentally okay?\" her mother asked very, very seriously. Josiah had been over quite a few times, but he had been quiet, moody, and polite. She wondered how and why her active, beautiful daughter was involved with such a man. \n\n\"I think so. But there's something wrong. It's not normal. He doesn't act like other guys act. Like you remember Peter?\" Mattie asked. \n\nHer mother nodded. Peter, the doctor, probably about to be rich, had dated her for over a year before it ended. They'd talked of marriage. \n\n\"Yeah, well, frankly, he was all over me all the time, Mom. He couldn't control himself. I broke up with him finally because I decided any guy who wanted to have sex that badly and openly showing it... He would touch me at parties, people would see... I thought he might not be faithful, in the long run. And I was right. When I gave back his ring, he said he'd be with his old girlfriend that same night,\" she said, shaking her head. \"He couldn't stop himself from the threat, even though he knew it was mean.\" \n\nShe was shocked at Peter's ignobility when he was interested in sex. She'd thought she was in love with him. They'd had sex, but it became obvious it was the main thing he wanted of her, and he couldn't see anything else. \n\n\"I didn't know,\" her mother said. \"We liked Peter.\" \n\nMattie smiled and tapped her mother's hand. \"I thought I loved him. But I don't think he knew how to love because he was so obsessed with...\" she hesitated at the term she almost used, \"... with sex.\" \n\n\"Josiah is different?\" her mother asked. \n\n\"Worlds! He's kissed me a few times, but I've been the one initiating. He has NOT tried to touch me anywhere private,\" she laughed and her mother joined in. \"He holds my hand. I've tried to get him to hold me close and he shies away or acts like he's afraid. I hint and he seems interested but he doesn't do anything. He talks about serious things, or his singing, which actually brightens his face. He talks about his pianist friend and the girl who plays in their group, and he's animated, but...\" She shook her head. \n\n\"He holds me at arm's length, somehow,\" Mattie finished. She was dismayed, and she began to weep, silently, softly, so sadly. \"Everyone. He holds everyone at arm's length.\" \n\n\"Is he in constant pain in his knees?\" her mother asked. \n\nMattie shook her head. \"I went to see one of his doctors with him the other day at Merciful Lord. Dr. Melrose met with us and examined his knees this time. \n\n\"I saw his knees clearly for the first time. Mom, you wouldn't believe,\" she said, \"his knees are just a mass of scars and you can hardly see... just lumpy flesh all different colors. I was... it was hard not to cry.\" ",
        "Mattie looked seriously at her mother. \"He may need crutches all his life, and now he seems fine with that. He thanked the doctor for helping, said he was grateful they saved his legs.\" \n\nShe paused. \"His knees must have been pulverized. I understand some of what he's going through.\" \n\nMattie stopped, knowing her mother would bring up the startling missing element. \n\n\"He doesn't see a mental therapist? No one to deal with his stress?\" she asked. \n\nMattie shook her head. \"He said he went through the whole exam and didn't think of the bridge once. Like that was an accomplishment.\" \n\nShe looked at her mom. It was all good news, all improvement. Josiah was pleased he didn't remember something he couldn't describe. Would there always be a memory he had to avoid? Would it always color his view of the world? \n\nShe hesitated, put her head down on her arms, and cried. She felt her mother's hand on her back. \n\n* \n\nHe drove. They went to an Italian restaurant near the interstate highway, away from the usual Sky Grey and Greenville patrons. Mattie wore a tank top-like mini skirted dress, and sandals. She wore no bra. She looked very sexy, and several of the men in the restaurant noticed her. Some kept looking over at her, almost rudely ignoring their own dates or wives. \n\nHe had a new set of crutches and had actually been eager to try them. These were lighter, titanium and something much like his knees, and fit his forearms better. He liked wearing new clothes or trying out anything new, so he used them. \n\nBut he couldn't take his eyes off Mattie. She jiggled a little as they walked, her breasts obvious through the cotton top, and her skin was a darker tan now in early June. He followed her to a booth, and he noticed her bottom and legs. \n\nThey'd not had sex. He'd never touched her, never anythinged her. He wondered if there was something wrong with him. \n\n\"You know how I feel,\" he said to her. Sometimes their conversations started at the second or third paragraph, she noticed. \n\n\"A woman likes to hear it,\" she said. She was looking at him as if this were a serious conversation. \n\n\"I think I have trouble saying emotional things,\" he said. He looked around, then back at her, at her breasts and then her eyes. \n\n\"I'm making a play for you,\" she said. \n\n\"Not yet,\" he said. \"I need more time.\" \n\nShe was disappointed, very disappointed. She'd known him almost a year. \n\n\"Josiah, I'm ready, but you have to want me, too,\" she explained. \n\nHe looked at her, looked around the room. Could others hear her? Her talk was getting a physical reaction from him, but mostly it made him uncomfortable. He didn't want to think of sex and marriage and children and making a woman a mother. \n\n\"I don't understand you, Josiah,\" she said shaking her head. \"I try to get closer to you and you act like you like me but... I've never had a boyfriend who avoided touching me.\" She was upset, holding in some emotion. \n\n\"I'm not them,\" he thought, as if that should be a qualifier. He didn't say it because she would think it an insult. It dawned on him that he was explaining to himself why this relationship must fail. He needed it to fail or he'd face all those things: sex and marriage and children and creating motherhood. \n\nSomething welled up inside him. His nut doctor had told him, but it wasn't real then. He'd had no girl interested in him, he was crippled, he expected a life of forced celibacy, it wasn't real. He'd only thought of how it would affect him. He'd not thought it might cause a woman pain on her side. Mattie was almost in tears. \n\n\"You sing that song and it's as if it were meant for me. Just me. I thought that at the funeral when I first heard it,\" she said. \"I still feel like it's special for me. Does it mean anything to you, other than just a nice sound?\" \n\nHe didn't answer for his thinking, which was a jumble. Vogel was right, and now it mattered. Vogel said once, \"It will bite you in the butt, and it might be too late then.\" Now he was hurting someone who wanted to love him. The doctor said he'd have trouble bonding normally if he didn't get help. \n\nShe and he didn't talk through the meal. They ate, he paid their bill and tipped the little girl who waited on them. As he drove Mattie home, \"Of Hope and Love\" by the Josiah Langer Trio played on the FM channel of the radio. It was the first time he'd heard it. He was about to point it out to Mattie, but suddenly he realized she wouldn't feel his joy this time. \n\nMattie heard the song. She was looking out the side window. For most of the drive, she was silent beside him. He turned into her driveway and stopped. A few seconds passed in silence. She said then, \"We don't have much longer. I can't go on forever like this.\" She stopped. He was looking straight ahead, his countenance stony. \"It's a good song, Josie.\" She had tear streaks on her cheeks. She opened the door and ran to her house. He watched her. \n\nHis mother called him Josie. \n\n\"I'm out of kilter,\" he thought. \n\nHe was losing her. \n\nCHAPTER 13: Josiah Uncovered \n\n\"You named us after me?\" he asked Sing. \"Maybe you could have talked to me.\" Josiah looked somber, too somber for something like a disagreement about their group name. \n\nSing looked sheepish, and Cora smiled. Sing said, \"Yeah, I should have told you. If we use Sing they'll think it's a pun, only Benny Goodman could name a band after a clarinetist and no one after a flautist, and you're the one they see singing.\" He wouldn't hear any of Josiah's protests about effort and training and professionalism. He said, \"We have professional reputations. You deserve some return for so much standing and suffering. It's harder for you. And you've had a crash course in singing that would take a year or two with a voice coach.\" Josiah didn't see it like that. \n\nSing looked at him seriously. \"Someday you'll realize you're as proficient at your part as we are at ours.\" Cora was nodding and had that same sincerity on her countenance. \n\nIt was an overstatement, but more than a gesture. There were all sorts of help in the world. Good people helped good people succeed. Josiah shook his head and surrendered. \"Well, we should have talked. I guess it doesn't matter.\" \n\nCora noticed his despondence. She said, \"What's bothering you so, Josiah? You're so gloomy.\" \n\n\"Mattie and I... I'm not sure how it will go,\" he said. \n\nSing looked concerned. \"We know how important she is to you.\" \n\nCora nodded. \"She's been very understanding. I think she loves you.\" \n\nJosiah looked away for some seconds. \"There's something wrong with me,\" he said. Cora and Sing said nothing. \"I don't feel like other people.\" \n\nMattie called him after two days. She was quiet, and he listened, feeling his heart pounding. \"Josiah, you and I must talk.\" \n\n\"I don't know how to fix things,\" he said. \n\nShe didn't say anything for a few seconds. \"That's the problem. We need help.\" \n\nHe thought, \"At least, she said 'we.'\" \n\nThey talked on a bit, but Josiah couldn't promise what she wanted to hear. She did not hear that he loved her, nor that he'd find a therapist. She did not close the door, but she wondered if she should back out of the relationship. \n\n\"Next Sunday, we'll be at your anniversary Mass. My whole family will be there. Mom and Dad, my brother and his family will be in town, we're all coming.\" \n\n\"You know, that's not...\" he started, but was interrupted. \n\n\"Yes it is,\" she said with finality. \"They all want to meet you.` Mom and Dad are looking forward to it. And Cindy's excited. That's Randy's wife.\" Randy was her brother. \n\n\"I guess I have to meet them all.\" \n\n\"Yes, you do. Like we're a couple. And after that you and I are going to talk,\" she said. \"We're going to talk about things, very serious things, because you're... we're too good not to make things better. We can't live in limbo any longer.\" It sounded ominous. Was there an ultimatum? She thought to herself, \"I'm going to hold his hand and drag him into a shrink's office.\" \n\nBut things didn't work out the way she expected. \n\nTheir performance was advertised, and the parish reunion promised a large crowd. They met with the new music director, an organist Sing knew from somewhere, and they planned out the whole thing. It was going to be more than the usual. There'd be pre-Mass songs on the organ, a solo by Cora, and the drummer and guitarist would join in for Mass itself. The music director recommended a joyous, relatively new tune that he and Sing spent some time arranging. Mass promised to be fun. \n\nThe parish was holding a festival after Mass, with booths and rides and food. \n\nHis mood lifted some that Sunday. He realized that Mattie was determined to give them a chance as a couple. But he was like an alcoholic: he knew how he should act, but he couldn't make it happen. \"Mom,\" he thought, \"I understand better now.\" He felt no response. Maybe somehow he'd do the right thing. Would it take an ultimatum from her? \n\nAttendance was overwhelming. By thirty minutes before Mass, there was no standing room available. Josiah heard people talking as he made his way down the aisle to the chancel. \"I heard their song on the radio last night. Really good,\" a man was saying to his wife. \"They started here so they're doing this for old time sake,\" a woman was saying to her grown son. \n\nHe smiled at people who pointed him out as he crutched to the music area. He looked about at the audience. Mrs. Sackston smiled at him and nodded, with her niece and Lacy beside her. Near the front he was surprised to see Mrs. Crimmins, sitting with (probably) her sister and a man, probably her husband. He stopped and looked over at them. \n\n\"Thanks for coming, ma'am.\" \n\nShe smiled. \"I wouldn't miss it.\" \n\n\"Would you like to hear Ava's song?\" he asked. \n\n\"Is that okay?\" she asked. \n\n\"I'll see if we can do it.\" \n\nMattie and her family were down front almost an hour before Mass to get good seats, not far from the performers. He smiled as he passed; Mattie pointed him out to her brother, a big guy with lighter hair and a very small wife beside him. They had two sons squirming beside her, out of dad's reach. Josiah had his crutches, but he lifted one and smiled at Randy who nodded and smiled back. \n\nSteps were all around Merciful God. Josiah would be standing a lot; he kept the crutches handy. He put them on the floor behind his chair once he was in position. Getting up was so awkward for him that he planned it out, sitting near the piano so he might use it to steady himself. \n\nHe spoke to Sing, who looked around and found Mrs. Crimmins in the crowd. He waved, spoke to Cora. \"Sure, Josiah, let's play it.\" \n\nJosiah spoke into the microphone. \"Our first song was written 13 years ago by a child dying of brain cancer. She passed at 19, shortly after writing it. Her mother and relatives are with us today. We've performed it at funerals, at receptions, at celebrations. 'Of Hope and Love,' by Ava Fortner, then of Springfield, Ohio. Now, well, we miss her.\" \n\nThey performed it joyously this day, Sing using the piano and Cora the flute. Josiah looked at Mrs. Crimmins as they finished and noticed that her sister was dabbing at her eyes. Mrs. Crimmins smiled at him and nodded. \n\nThe pre-Mass instrumentals commenced. Sing loved that pipe organ, and his love communicated to the audience. His selections were surprising; Father had questioned them but finally acquiesced. He didn't play traditional religious songs before the Mass. \n\nThe group played selections from \"The Trees\" from the movie Medicine Man, then a selection from John Barry's Out of Africa, and \"Hymn to the Fallen\" from Saving Private Ryan. A few parishioners recognized the sources and obviously whispered them to their company. Finally, Cora played \"Gabriel's Oboe\" from The Mission, as achingly beautiful a song as has ever been written, no question. Josiah noticed that Cora finished with streaks on her face, silently weeping the emotion she felt in the song. \n\n\"I wonder if I know Cora well enough,\" Josiah thought, looking at her. She saw his look and returned it honestly with a smile. \n\nThe music director, sitting on the side that Mattie's family was but facing the congregation, started clapping, and everyone joined in. \n\nIt was a memorable Mass for many reasons: the crowd, the music, the anniversary, and of course, the inadvertent act of klutziness. Josiah's first song was joined by the congregation and the loud sound of so many singing was astounding. The drums were lightly played on this one; the guitarist liked the song and Sing smiled at his enthusiasm. The Mass proceeded, Phil showing signs of his age occasionally in a stuffy church, but he was hanging in there. \n\nMerciful God had a series of steps creating a large podium or stage with the altar, and the musicians were situated on Joseph's side of the church on the second lowest step, which was six feet wide and wrapped around the podium's height. By communion time, Josiah was using crutches because of all the standing, and as he was moving to the microphone he had that moment he knew would come eventually: his right knee locked, he had a drop of eight inches to his left and his crutch was not that long. So as Sing played the introduction and Father and the other distributors moved to their places to give communion, he fell flat on his face just inside the old communion rail. He saved his mouth and nose by turning his head, but he got a good conk on the side of the head. He never lost consciousness, nor did he bleed. \n\nSing immediately stopped. Cora, unable to see the incident, played on a few bars, the drummer stood behind his drums, and the guitarist, who almost caught Josiah, took off his instrument and was first to his side. Mattie was up and moving too, he saw as he rolled over. \n\nJosiah smiled. He waved Mattie away. Mattie, seeing he was not seriously injured, smiled and went back to her seat. The congregation laughed, trying not to sound insensitive. The guitarist helped him up and handed him a crutch. Father asked into his microphone, \"Are you okay, Josiah?\" \n\nJosiah said, nodding, \"Fine, thank you, Father.\" Phil smiled back. Josiah eventually stood behind the microphone which somehow was not involved in the whole incident. \n\n\"Sorry, folks,\" he said. He looked at Sing, who started the song over, and he sang with the congregation Graham Kendrick's \"The Trumpets Sound.\" It was very fun as the drums cut in at certain points and the crowd joined in. They moved on to another song, and then another, as there were so many communicants. \n\nJosiah, for a few minutes, thought he was healthy. \n\n* \n\nThe crowd was slow to leave, hoping for more, but Sing was packing up after the last prepared song. He released the violinists, the drummer, and the guitarist. Josiah thanked them all, especially for their concern when he fell. They congratulated him on his performance and the success of the recording, and left. \n\nJosiah looked at Cora and Sing, now packed and ready to leave. \"Thanks, Sing. Cora. Sure you don't want to come along?\" They shook their heads, not wanting to intrude on the family and intending to visit Cora's later, he knew. \n\nJosiah looked up and then quickly down, feeling dread like a wave pass through him. He forced himself to look up again, and he was suddenly nauseous. A man he knew was sitting in the middle of the nave, watching him as all the rest of the congregation left. Legs crossed, he appeared relaxed, one arm along the top of the pew back. If he'd had a cigar in his hand, it would have looked natural. He was always relaxed. Shrinks are just like that, Josiah thought. The major, in a sport coat but with the obvious Army haircut, sat in the sunlight streaming through the stained glass. He was behind Mattie's family many rows, just waiting. \n\nJosiah was in the kill zone, trapped. \n\nJosiah walked over in front of Mattie's family but stayed on the altar side of the unused communion rail, and was introduced to everyone in her family. He looked up but the major was still there. He wouldn't go away, Josiah knew. His nut doctor was here with a purpose. \n\nJosiah forced himself to address him, but from this distance. \n\n\"Major Vogel, I didn't expect you,\" Josiah said, looking past Mattie's family. \n\n\"You've done a good job hiding, Lieutenant,\" he said. \"Still maintaining symbolic barriers, too.\" \n\n\"I'm not hiding. I'm from here.\" Vogel meant the communion rail for the barrier, and Mattie's family; Josiah was aware, once he mentioned it. \n\n\"Near here, but you haven't been going to therapy. You agreed. I released you, and you've been getting PT but nothing more.\" Vogel stopped talking, sounding disappointed. He was disappointed. Josiah realized he'd probably bought a plane ticket at his own expense to come find him . \n\n\"Mass? You found me at Mass?\" he asked. \n\n\"Online. Your performance is advertised online,\" he said. \"You're very good, by the way.\" \n\nJosiah looked at Mattie. She was listening to a strange conversation, Josiah in the front and the guy with short hair halfway down the nave. Everyone could hear, including her parents and family. Josiah couldn't make himself go around to the major. \n\n\"I have people here,\" he said. \n\n\"I don't care,\" Vogel said. It was his act, Josiah knew. He actually did care. He wanted them to pressure him to talk to him. \"You're actually one of my favorite patients, you know.\" \n\nFather Phil wandered in from the back of the church and heard the long range talk. \n\nMattie was looking at Josiah as she realized who Vogel was. Her parents were looking and hearing. Everyone heard. Josiah thought it was unprofessional of the major. \n\n\"It's unprofessional,\" he said. He knew that was an ineffective argument with Vogel. \n\n\"Yeah,\" he said. \"Sue me. Turn me in to the Board.\" He was Army; the board would accept more unusual means. Vogel wouldn't care anyway; he had a reputation for helping hard cases, even to the point a Navy psychiatrist had sent Josiah to him. \n\n\"Tomorrow?\" Josiah asked. \n\nVogel nodded. \"Nine. Father, have you a room we could talk in tomorrow?\" the major asked. He had no shame. \n\n\"Yes, may I ask who you are?\" Phil asked. \n\n\"Major Kenton Vogel, United States Army, Dr. Kenton Vogel. Look me up online. We just need to talk.\" \n\nFather was nodding. \"I may poke my head in?\" \n\n\"No problem. But we need privacy.\" \n\nFather replied, \"If you'd rather use a confessional?\" Vogel shook his head and actually laughed. \n\n\"No, although he might prefer the barrier.\" Confessionals often had a perforated screen that prevented direct view of the penitent by the priest. Vogel stood and looked at Josiah. \n\n\"Tomorrow, Lieutenant. And you may bring your lovely friend, too.\" \n\nJosiah started. He did NOT want Mattie to know... something. He just didn't want her to be there. She shouldn't be involved. Bring his girlfriend? \n\n\"Isn't that inappropriate, sir?\" he asked. He was perspiring, but the major was serious. \n\nVogel cocked his head to the side, saw how panicked Josiah felt, and knew he'd guessed correctly. \"I don't think so in this case. You can't hide forever.\" At this point, if he'd had a cigar, he'd have waved it. The cad, Josiah thought. \n\n\"I know you, Lieutenant. Bring her along, If she's willing. I insist.\" He was looking at Mattie, and she looked angry. She saw this discussion as an attempt to humiliate Josiah. \n\nShe had no idea the lengths this man would go, Josiah thought. \n\nVogel probably saw the flight prospect in Josiah's eyes; it was in his thoughts. Of course, he'd done it before. \n\n\"Don't make me chase you,\" Vogel said to him. He could have arrested him, probably. Or committed him. \"Are you really sure you want to leave all these people behind? Now?\" \n\nJosiah looked at Mattie and considered. Some seconds passed, and he shook his head. He had reason to stay here. Josiah loved and felt loved. ",
        "\"Seriously, Lieutenant,\" Vogel said, standing and moving into the aisle. He looked at Mattie and said, \"Sorry about this. ma'am.\" \n\nJosiah had never seen Mattie so angry. Her hands by her sides were clenched, her arms straight and stiff beside her. \n\nThe major left after talking quietly to Father Phil for a moment. Josiah felt a weight drop from his shoulders. He turned to face the Morrisons. \n\nIt was a long day for Josiah. He had Vogel to think about, Cindy and Randy to impress. He felt that everyone thought he was crazy, like they were looking over at him all the time. Mattie was mad all day, whether at Vogel for the imposition or Josiah for not being as angry as she. \n\nIt wasn't that. She was mad because she didn't want to make excuses for Josiah. For her boyfriend. She thought of him as part of her future, her future with children, her future with family and friends and life, if things worked out. Josiah acted as if he didn't know he was being shamed. \n\nHe wouldn't blame Vogel; he knew Vogel had his interest at heart. But he thought he was finally out of his depression, and wasn't that the point? But no, it wasn't enough for Vogel. Vogel wanted more. It wasn't just depression. Vogel offered a red pill. Vogel demanded he accept reality, whatever it was. \n\nUltimately, Vogel thought Josiah was strong enough to handle the truth. \n\n* \n\nNo one trusted him the way Vogel had. His release made him voluntary, but he'd sworn up and down that he'd seek therapy. Vogel even set it up with a therapist in Dayton, so when he disappeared to Greenville and then Sky Grey, Vogel waited and finally tracked him down. Vogel's problem was that he liked Josiah, and he thought it had led him to trust Josiah too much. He knew now that Josiah couldn't help fleeing. \n\nVogel knew Josiah's memory was not his memory, his recall was not just recall. His imagination was also a defense mechanism working hand in glove with his memory to produce original, technicolor, reality-not. Josiah knew he didn't remember things the way they happened, he remembered them a way that protected him. He remembered differently every time he needed differently. \n\nVogel worked to understand why the patient needed differently so much. \n\nVogel didn't just diagnose and treat patients; he studied them as if they were a manuscript on some specific condition. Josiah assumed he'd never married, or that he divorced a lot. His patients and his job were his life. \n\nBut Vogel said Josiah was sane. He let him out of the hospital. From his perspective, at that point the patient went walkabout. It wasn't hard to find him, but it would take time and he had lots of patients. He could have kept him in Walter Reed or Bethesda. Or any VA hospital with a mental facility. There are a lot of those. \n\n\"Am I a danger?\" Josiah asked him before his release. \n\n\"No. You're not suicidal, either,\" he said, \"but you are delusional.\" \n\n\"Do you know what happened on that bridge?\" Josiah asked him, thinking it would give him pause. It had not. \n\n\"Better than anyone on earth,\" Vogel said. \"I talked to your whole platoon. Hell, Lieutenant, you were there. No one saw more than you: do you know? Do you know?\" Josiah remembered he could not answer. \n\nMaybe he knew. When he tried to remember, he remembered it was tragic, a shark blew up in the water, and he was shot in the knees: a shark, in the river, hundreds of miles from the sea. The remembering panicked him. \n\nCHAPTER 14: The Bridge \n\nMattie drove them to the appointment Monday morning. Mattie, mad, said nothing, and when Josiah started to speak she raised a hand at him as if she would attack. Josiah realized Mattie was not exactly like him. Love was different with her. It was different with him, for her. She felt betrayed and loved and treated as ignorant. No one wanted ignorance in love. Perhaps love can't be ignorant. \n\nJosiah took a chair between Mattie and Vogel, introducing them. Mattie shook Vogel's hand, but she left no doubt how she felt about him. She didn't smile. They were seated in a meeting room, with a large, cheap cafeteria table and some rickety chairs. Josiah was at the long end. \n\nVogel addressed Josiah first. \"May I talk about you with her? Everything?\" \n\nJosiah was squirming and he didn't understand it. \"Now you cover the bases? After embarrassing me in front of her family. Must you?\" \n\n\"No, but I think it would help you. A lot. I could see how you felt about her, yesterday. You've made strides, probably because you discovered a woman might love you. You assumed that was gone with your knees. Certainly not because you've skipped therapy. So yes or no?\" \n\nJosiah looked at Mattie. What could he tell her? Until he met her he thought celibacy was his future. Something in him cried out. Josiah wanted to be a real person. Welcome to you, Mattie, he thought. \n\n\"Okay.\" \n\nVogel smiled and nodded, then turned to Mattie. \"Josiah has trouble connecting with his feelings. It doesn't prevent him constructing the feeling, just communicating it. He loves you, if you have any doubt. I don't.\" Dr. Vogel was smiling. \n\nJosiah exclaimed, \"Hey!\" \n\nVogel went on. \"He can't say it, he can't act on it, but he's in love. He's probably had trouble kissing you, telling you how he feels. I doubt you've had sex. But it's real. Real love. And with him, it's probably forever. Whatever happens, he'll always love you. Always. I hope you love him back.\" \n\nShe looked at Vogel as if he were crazy. He was so sure and clear and arrogant. \n\n\"How do you...?\" she said. \n\nHe smiled and leaned back. \"He's one of the most honest men I've ever met. He's so forthright. He's almost... pure. In a sense. He's in anguish over something he can't remember. It doesn't prevent him from loving, but he can't admit it. It's too much. To him, it's everything.\" \n\n\"Uh, I'm right here, you know,\" Josiah said. \n\n\"Childishness now, ever a new reaction,\" Vogel said, smiling and shaking his head. Josiah was protecting himself. \n\n\"Why should I listen to you?\" Mattie asked Vogel. \"Do you humiliate all your patients? Is that some Army doctor technique for forcing someone to therapy?\" \n\nVogel looked down at first, and looked then at Josiah, who had an unusual look on his face. Josiah realized Mattie was defending him. He also realized what she couldn't: Vogel was defending him, too. \n\n\"I see why you love her,\" Vogel said to Josiah. Josiah smiled at him; Mattie thought the smile on Josiah was strange, childlike, as Vogel had said before. \n\nVogel looked at Mattie and waited until she looked at him. \"He's smart. He knows why I do things my way.\" He was quiet and smiling a moment. \"It was the bridge. The incident on the bridge. He must have told you something, it's his whole life, his whole understanding of the world, and he believed what he said at the time. He told me several times, several versions, a few weeks apart. None was true. Sort of true, true in an alternate universe sort of way, but not this one true. He can't tell you the truth, and he knows it, and he's so honest it's eating him up. You, most of all, he wants to trust him.\" \n\nVogel shook his head looking at Josiah, who was looking down at his hands on the table. It made Josiah very uncomfortable having them talk about him. It made him feel academic, or silly. He felt like someone else was inside his body, acting strangely, not as he wanted to act. \n\n\"It interferes with his emotional defences. Ask him if he loves you. He'll avoid making the commitment. He's so damn honest the lying kills him, but it's the only way he can protect his personality from his experience. He'll never get past it without help. It reduces him to childish reactions, like now. Other times it manifested in other ways.\" \n\n\"He told me two different stories about the bridge,\" she said. \"No, three. Not greatly different. You think they were lies?\" \n\n\"Not regular lies. He can't prevent what he says. I think he's hedging still. He needed the barriers yesterday, and you see the reaction now. He's honest about this like a five year old; he'll believe his lies when he tells them because he can't face the reality of what happened to him, and BECAUSE of him.\" \n\n\"If you two would like to talk, I'll go get a sandwich or something,\" Josiah said. \n\nMattie looked at Josiah differently and asked, \"Did he do something bad?\" \n\nVogel smiled and shook his head. \"No, that's the irony, not bad. Heroic, even. But he did something he'd like to forget.\" \n\nMattie thought for a moment, remembering something her father said. \n\nVogel thought to himself, \"Wow. I haven't met one like her before. I wish... But no.\" He was professional, and Josiah was his patient, and Josiah needed Mattie. Vogel thought, \"I think Mattie needs Josiah, too. What an interesting pair they made! Why does Mattie need Josiah?\" He shook his head. She was not his case. \n\nLove was not for Vogel. He'd had three wives, none like this woman, and Vogel didn't want another. But this one... He shook his head. Outstanding. \n\n\"Okay,\" Mattie said, turning to her boyfriend. \"Josiah, do you love me?\" \n\nJosiah looked panicked. He squirmed and hemmed and hawed, but he said, \"You ask me in front of him? I want you to love me. I can't stop thinking of you. I want you to love me.\" \n\nShe smiled, put her hand on Josiah's, and looked at Vogel. Arrogant or not, he seemed to understand Josiah. \"I see what you mean,\" she said. \n\n\"Dissembling. He should be a politician. If you persist he may tell you that he loves you,\" he said. \n\n\"Why's it so hard for him?\" she asked. \n\n\"He can't afford to love. Love has meaning and responsibility and repercussions. Loving a woman could mean a family, and he has to avoid creating a family.\" Vogel stopped and looked thoughtful. \"A mother. He doesn't want to make you a mother.\" \n\n\"He loves mothers, but he knew one he could never understand.\" \n\nMattie was listening. \n\n\"He can't remember what happened. Every time he tries, he imagines things a different way and he can't cut through to the truth. It took me a lot of thinking and studying him to realize how it was inhibiting his emotions.\" \n\n\"He's mentally ill?\" she asked, looking very concerned. She'd feared that was the crux of it when Vogel had embarrassed him yesterday. \n\nVogel smiled. Josiah smiled, like a five-year-old, Mattie thought. She didn't smile. \n\n\"Depends how you define it. If you saw something, DID something, so awful, so upsetting that you NEVER wanted to admit seeing it or doing it... would it be normal to remember it? Like your sister's wedding or high school graduation? No. He's sane. That's why I let him out of the hospital. But it's getting in the way of his ability to feel emotions the way he normally would. It runs his life. He didn't move home, he moved five miles away from home, changed his cell phone number, changed his email, joined very few online sites that I might be able to locate him. It's been over a year, but I finally found him.\" He smiled at her, and then became almost somber. \n\nHe said, quietly, \"It was awful, what he did and experienced. I even have nightmares about what he saw, and I just heard the story from others who were there. Are you willing? To hear how awful it was? Realizing he SAW it, DID it? Feels so bad about it that he's... probably always going to remember it, every day. I think he's strong, he might be able to live with it.\" \n\nMattie thought about it. \"Do I love him? He did something he has trouble living with. The major says it was great, awful, life-long. Do I love him?\" \n\n\"I love him,\" Mattie said. She thought, \"I'd rather live with the worst horror of his life than not have him. I just hope we can be happy.\" \n\nJosiah looked up at her, startled and adult-like. Vogel looked at her and thought, \"Wow! I wish things were different.\" \n\nVogel turned to Josiah. \"What's the worst thing you've ever seen, Lieutenant?\" he asked. \"Tell me truly, now. No avoiding.\" \n\n\"I saw a shark explode,\" Josiah said, smiling. It wasn't funny though. He saw it in his mind, a grey shark falling into the river and exploding. He was perspiring now, fighting to get it out, and it was a shark. \n\n\"A shark,\" Josiah said again, forcefully. Next to a little boy, he didn't add. \n\n\"No you didn't,\" Vogel said, soothingly. \"Misleading us, again. But I know what it means now. You can't fool me as easily. It was a fake shark. A fake. Heck, it was probably a toy shark. And there was a little boy near, too. Too near.\" \n\nVogel realized Josiah had to react to this contradiction, and Josiah reacted. He stood, suddenly beyond squirming. He had to move, to act, to do something. He stood and walked to the wall, using a crutch in his left hand, and he pounded with his right fist into the plaster and a crack appeared. It was not sheetrock, it was old thick plaster. He looked at his right knuckles for a few seconds, and they were swelling. \"Idiot,\" he thought, \"probably broke a knuckle.\" Josiah wasn't smiling anymore. \n\nHe looked at Mattie, and she had a fearful expression. He imagined her thoughts: \"Why am I with him? Why do I pick a guy with such issues? Am I heading for a lifetime of heartache? Is he violent?\" \n\n\"Father may not let me use this room again, if you keep it up,\" Vogel said. He didn't seem unhappy. Josiah realized he was reacting as Vogel expected. It was the child, Vogel thought. He had been right. In the end, it was the mother's willingness to sacrifice her boy. Josiah associated mother with child as the greatest bond; it was the child that was the coup de grace, Vogel thought. He could handle the mom, but not what she did to the boy. He remembered what Josiah had said of his own mother. \n\n\"WHAT is going on?\" Mattie asked. She put her hand on Josiah's left as he sat back down, so he didn't feel completely alone, and he then looked at her. \n\nHe was lost in thought. \"Would I ever be able? Do our minds heal?\" He realized Mattie was a reachable star: but he had to reach for her. \"Why hadn't they made out? Why no sex? Am I ever going to get past it? Am I ever going to love and let someone love me? My legs are broken, but it's my mind that's holding me back.\" Josiah relaxed and stared at his new love, seeing her in that daydreamer's reality that transfixed him. \n\nSuddenly he was mature again. He looked at Vogel. \"A lot of mental therapy depends on the patient deciding to improve, doesn't it?\" \n\nVogel said nothing, but his eyes widened, and he nodded. Josiah's words were prognostic. Some patients never can face it. \"He loves that girl,\" Vogel thought. Vogel looked at Mattie. \"Does she realize how much this guy loves her?\" \n\nJosiah closed his eyes. Mattie later told him he kept them closed for ten minutes, sitting there as if looking at her through his eyelids, and Dr. Vogel signalled her to be quiet. She held Josiah's hand in both hers. After about ten minutes, eyes still shut, he lowered his forehead to the edge of the table, as if looking at his lap. \n\nFor him, maybe a few seconds passed. \n\n\"Not near. In my hands. The little boy was in my hands,\" he said to his lap, finishing some thought aloud. \n\n\"We were crossing the bridge in Humvees,\" he said clearly, making the words distinctly heard, \"and people were walking toward us. A hundred, maybe two, from the village just bombed. I saw a woman with her son, and they were on our right, out in front of us maybe fifty meters. She looked... heavy, walked as if weighed down, burdened and awkward in a burqa. It was... gray. I watched her and finally realized what it was. I yelled into the comm halting us. 'The woman has a vest!' I tried to explain as calmly as I could into the comm, but there were dozens of women, many in gray, some with children. She could kill scores, maybe some of us in the vehicles, too. There were many people in my line of fire if I shot. She was coming closer as I thought how to describe her in time, but there wouldn't be time. \n\n\"'Cover me!' I yelled. There were people everywhere, a hundred maybe near us. She stopped thirty feet in front of our Humvee as I got the door open (I remember knocking someone down with the door) and jumped out, and she lifted the little boy over the concrete wall, behind an abutment, not realizing I'd figured her out. Her hands were full of her kid, we were safe for a second, she'd have to reach for the trigger. Her back was to us, to me, and I was running, I hit her in the legs with my shoulder, low, under her butt, wrapped my arms like a tackle, and lifted her up as she let go the kid, and I flipped her over the wall. She saw me at the last second; I remember her surprise in her eyes. She was cartwheeling from the bridge to the water. I grabbed the kid, he was barely on the little ledge, I lifted him but then she reached into her burqa and exploded. Right as she reached the water.\" \n\nHis forehead was on the table. He felt Mattie's right hand on his back, rubbing, and then he felt her head on the table too, next to his. He felt tears leaving his eyes. \"I got cut on my right hand, and something sliced under my right eye for watching her, I have a scar, but the concrete wall and the little boy's body protected me. Her kid, the little kid was... there wasn't much of him that wasn't blood. He was in pieces, some in the water next to her, I was only holding part of him. She wasn't far away when she blew up. She was... halved.\" \n\nThe recollection was gruesome. It overwhelmed Mattie, thinking, \"Oh, my God. How does he live with it?\" \n\nHe went on, eyes closed but as if looking down at his lap, forehead on the edge of the table. \"When she exploded he must have been hit by her shrapnel and the concussion, it... blew him apart, too, and just then I was shot in the knees and I concentrated on holding that poor boy. Not realizing he was not there. I held onto the concrete rail, slumped, arms across it with the boy dead dangling. I looked down into the water at what was left of a mother and I only held part of her son... Finally I let go of him. Soon my guys got to me.\" He shook his head at the horrible memory, repeating himself because he was telling the truth and it was so. \n\nMoms should love their children. \n\n\"His mom blew him apart,\" Josiah said, quietly. Mattie was crying, too, Josiah noticed. He felt Vogel's hand on his back, too. It was quiet for a long moment. A long one. \n\n\"That was hard for you, Josiah,\" Vogel said, almost in a whisper, calling him by his first name for the first time. \"Why don't you go get some water and let me talk to Mattie a minute?\" \n\nJosiah looked at him, as if a weight were off him. He could see that woman and her son. He could see them, whole and then not as if instant replay were running automatically. He could. \n\n\"Yeah, I'll be right back.\" He hesitated as if he wanted to say something to Mattie, but then he just left. Mattie later told him what they talked about while he was gone a minute. Mattie noticed that Josiah was drained, tired, soaked. Something was emptying him. \n\n\"He needed to love. I think he was looking to find a way to get over the horror. He couldn't get past it... Who could? He's a decent guy. He had no family, he always wanted one like other kids had. When I saw him with you yesterday, during and after Mass, I saw why he was different. He's trying very hard to get better now. For you.\" \n\nMattie said, \"I've seen some effort. But he's not like other guys.\" \n\nVogel nodded and considered her. \"You're his motivation, like it or not. I hope you're sincere. He found someone he wanted to love, and you were open to him with all his problems and devils. You must have seen them?\" \n\n\"Yeah. Mom's worried he's crazy. So am I.\" \n\n\"It's PTSD, and it's not crazy. PTSD is not unreasonable. It's even normal in lots of circumstances, but his is extreme. Because it was the mother.\" \n\n\"I'm sorry? I don't understand,\" Mattie said. \n\n\"I assume Josiah's mentioned his mother. She died in her early fifties. Alcoholic. Everything she did the last five years of her life was to give Josiah a future. A chance. The drink had her, and she didn't think she had long, so she got to work and prepared for after she died. Life insurance. Work in a factory.\" He shook his head. ",
        "\"Josiah realized?\" Mattie said. \n\n\"Yeah. He knew she got up in the morning because of him. She just couldn't beat the drink. They lived in a hovel, falling apart around them. Have him show you the place in Greeneville, if it's still there. He described it to me.\" \n\nVogel was a lot nicer one on one, Mattie thought. Smart, too. \n\nVogel added, \"Oh, his Aunt Dotty, too, was another mother-figure and good in his life. If you ever meet her. And she was not a blood relation. He hasn't had contact with her for many years. Oh, he had a slight acquaintance who seems to have mattered a lot. A girl he danced with.\" \n\n\"A girl he danced with? That Erin girl? They were just kids, it was one time...\" but she remembered Mark somebody who walked her home once. He was the first boy to hold her hand. \"Of Hope and Love\" was the most important song of Josiah's life, probably renewing the memory of that sweet dance every time he heard or sang it. For him, it wasn't just one dance with another kid. It reminded him of when he could walk, when he had hopes of love and a future with family. His mother. \n\n\"Our minds can find meaning in little things. Especially when our emotions are involved,\" Vogel said. \n\n\"What was the shark?\" Mattie asked, hearing Josiah returing in the hall. \n\n\"Yeah, that threw me for much of a year,\" Dr. Vogel said. \"He said there was a shark that blew up in the water. He couldn't remember the mom at all falling and exploding. She was wearing a grey burqa, though. He was remembering the first Batman movie, back in the sixties. Batman is attacked by a silly-looking grey shark, a plastic prop, that drops off his leg into the ocean and explodes. He was telling me, said a shark exploded in the water, but I didn't understand for a long time,\" he said. He shook his head at his own imperfection. \"I thought he was thinking of Jaws, but there were inconsistencies. His mind associates whenever seriously stressed emotionally. That's not all that unusual.\" He sighed and smiled. \"Every case is a challenge.\" \n\nJosiah came back to the room having gotten some water at the fountain in the hall. Moving helped, although his knees had stiffened in the sitting and without the crutches he'd left behind he'd leaned against the wall a lot. He found his seat again. \n\nJosiah felt Mattie's hand on his. It soothed him, as the cool plastic tabletop had before. \n\n\"She could have killed scores,\" Vogel said. \"You had to stop her, but... why didn't you just shoot her? You ran right up to a vested suicide bomber. My God!\" \n\n\"I don't know,\" Josiah replied, \"I thought the vest might go off if a bullet hit the wrong spot, there were a lot of people between us just walking by our vehicles, I'd have to shoot through them, but it was all so fast I didn't really think it all out.\" \n\nMattie and Vogel were quiet, and Josiah looked thoughtful. He was not panicked, not desperate. He remembered the actual incident now, his men doing their jobs and ultimately saving him. \n\n\"I didn't want so many people to die,\" he said. He was humbled by the magnitude of evil. The horror, as Kurz would say. \n\nHe looked at Vogel, and then Mattie. \"She only killed herself and the one she should have loved most.\" \n\nMattie was silent, her hand on his back. \"Wow,\" she thought. \"Josiah was wounded because he thought a mother should love her son.\" \n\nHer dad would understand. \n\nCHAPTER 15: Farrow's \n\nJosiah had therapy every Monday for a while, then every other Monday. Sometimes Mattie was invited, usually she was not. He saw Dr. Carl Morgan, a local psychologist with experience with veterans and PTSD, who was recommended by Vogel. \"I haven't met him, but he has good references and I know some of his teachers. They like him.\" Morgan was funny; Josiah actually looked forward to his sessions. \n\nIt was October when Mattie arranged a date. \"I want to see you in the dress blues.\" Josiah smiled; the blues were the reason a lot of Marines had chosen that service. He had his hair cut to regulation Marine length; he wouldn't be shaggy in uniform. He wore his ribbons, some for the first time. \n\nShe made reservations at a select restaurant called Farrow's Supper House. Very expensive, very small, requiring reservations, permitting no cell phones and admitting no one after eight, it was exclusive. The cook chose the menu for the evening, and only twenty-two people were accommodated; eleven couples (occasionally an exception could be made, usually for clergy or handicapped). It was only a dinner restaurant; the meal was served when the chef was ready after eight, and the reservations and meal were charged 24 hours prior. It was $200 per couple. The chef cooked the food as she saw fit, spoke to every customer, and her husband ate with them. It was intended to be a once in a great while place, and it was. \n\nMattie hemmed and hawed, making them late, and then she decided to drive and she couldn't find the place even though Josiah knew they'd passed it many times in the past. \n\nA high school-age girl opened the door for them as they approached. Josiah thanked her as he went by. Within, everyone was standing at their seats. He suspected a rat immediately. Mattie's parents were there, with Cindy and Randy, and next to them, Dr. Vogel with a woman and both in Army uniforms (she outranked him, Josiah noted immediately). Father Phil was with Mattie's family... and Aunt Dotty! Sing and Cora were there. There were others he didn't recognize. \n\n\"You set me up. I must see Aunt Dotty,\" he said to Mattie. \n\n\"You must introduce us,\" she said, \"I've only talked to her on the phone.\" \n\n\"Hello, Josiah,\" Dotty said as he came near. She hugged him then, and not quickly. \"Why didn't you tell me you were hurt? And a Marine?\" \n\nHe shook his head. \"I don't know. I... guess I let family go. This is Mattie,\" he said. They hugged. \n\n\"Thank you for inviting me,\" Dotty said. \n\n\"I'm glad you're here,\" Mattie replied. \n\n\"Are you staying in town?\" Josiah asked. \n\n\"With Mattie's parents, until Monday. We must talk,\" she said. \n\n\"We will. Sunday afternoon, maybe? Dotty... I'm so glad you're here,\" Josiah said, with a quiver. \n\nThe chef came out as Josiah and Mattie sat. She was a middle-aged woman with reddish-brown hair and a smile that wouldn't leave her features. She went from table to table, asking names and exchanging pleasantries. She clinked a glass for people's attention. \n\n\"Hello. Welcome to Farrow's. I'm the chef and owner, Millie Farrow. Your experience here is important to me. Now, if you would all bow your heads. Father, if you'd say grace.\" \n\nPhil stood and said the prayer. Everyone said, \"Amen,\" as he finished. \n\nMillie looked at Josiah and came to their table. \"It's an honor, Lieutenant, and you must be Mattie.\" Mattie shook hands with her. \n\nMillie spoke to the customers then. \"Ladies, gentlemen, this is Lieutenant Josiah Langer.\" She put her hand on Josiah's shoulder. \"I ask that you NOT stand, Lieutenant. Some of you know him and are here to celebrate him. Four years ago, he was awarded the Navy Cross, second only to the Congressional Medal of Honor, for what he did one morning in Iraq,\" she said. She looked at a paper in her hand and went on, reading some of the medal decree. She finally finished, and everyone stood and clapped, even Mattie. He found out later that Mrs. Farrow often did such things, having lost her older brother in Vietnam. \n\nMillie said to the guests, \"I hope you like the meal. I prepare everything with the help of my daughter and two others, and if it is not as I wanted, I will refund you. That hasn't happened yet.\" She winked at the room and disappeared into the kitchen. \n\nJosiah didn't usually like it when people winked at him. Mattie knew it and put her finger to her lips, shushing him before he could joke. \n\nA salad appeared almost immediately after the chef disappeared. Josiah looked up into familiar eyes. He'd seen them before, once. \n\n\"Hello, Josiah. Do you remember me?\" the server asked. She placed a salad before him. She was beautiful still, but no longer a kid. \n\n\"Erin?\" he asked. \n\n\"You remembered! I often wondered what became of you. Then when I heard \"Of Hope and Love\" on the radio and saw the name I wondered if it was you.\" \n\nJosiah started to get up, but Erin put her hand on his shoulder. Even a dozen years passed, her touch was electric. \"No, stay seated.\" She looked at Mattie. \"Hi. Josiah and I met once at a wedding reception. I'm Erin Farrow Jeppeson.\" \n\n\"Mattie Morrison,\" Mattie said, and the women shook hands. Mattie wondered if Erin realized what that simple moment had meant to Josiah. \n\n\"It gave me hope. That dance, I mean,\" Josiah said. \"When I was in the hospitals, I thought of it. A good memory.\" \n\nErin looked at him. \"It was the first time I danced with a boy. I never forgot you. I wished I'd given you my last name.\" \n\nJosiah nodded. Mattie did, too. \n\n\"You're married now?\" Josiah asked, smiling. \n\n\"Yes. And a son, almost three!\" she said brightly. \n\nJosiah smiled and shook his head. There was a pause, not awkward, just quiet. \"You're a mom. Wow.\" \n\nErin said, \"Millie's my mom, if you haven't figured that out. I'm glad you're okay, and I'm glad you're here. With someone who loves you.\" She looked at Mattie, hoping to convey some understanding. \"I saw your name listed here, the medal citation, and I told Mom right off, 'That's that boy you saw dance with me.'\" \n\nJosiah said, \"She was laughing, if I remember.\" \n\nErin nodded and put her hand on his shoulder again. She paused before she said more. \"I must get to work. I wanted to say, I'm proud of you, Josiah. I'm proud I know you. Glad you're okay.\" She squeezed his shoulder and left. \n\nJosiah looked at Mattie, who looked at him. Her eyes seemed brighter. \"We were just kids,\" he said. \n\n\"So? Kids count, too,\" Mattie said. \"She remembers your name and details. She heard of a hero and thought it must be you.\" \n\nJosiah nodded with a little smile. It was as if they were alone among so many who loved them. They didn't care what others heard. \n\n\"I wonder if it's okay to wear the uniform. I'm not on active duty,\" he said, almost as an apology for all the attention. \"I don't even know if I'm in the reserves. Probably medically discharged. I should look at the papers I have.\" \n\nMattie looked at him. \"You have trouble accepting good wishes and caring, don't you? That woman knew you were special, Josiah. She saw something in you in one dance when you were a teenager. She assumed you were that guy, that hero, when she saw your first name. You saved dozens of lives, you're permanently handicapped. You are not a charity case. You're a man, a courageous one, one people look up to, you dolt! You're a guy women want to remember.\" \n\nShe shook her head and smiled before going on. \"You earned the damn uniform. Wear it anytime you like, out of season, in. You don't need to ask the commandant. You don't have the RIGHT to wear it?\" It was as if she felt the nation owed him something. The uniform, the medals, the expense, the training, the medical care were not eleemosynary. She really thought he was somebody. She thought he deserved everything. \n\nNo. He was wrong, and he realized it then. It stunned him. \n\nShe thought he deserved HER. \n\n\"You're not done, Josiah,\" she said. \"You have a lot more to do. Kids to raise, balls to toss, songs to sing. People to help, maybe save. Me to love.\" Her eyes were direct and focused on his. \n\nIt was quiet for a moment. Her parents were eating and listening. \n\n\"You'd have made a great Marine wife,\" he said. \n\n\"If that's a proposal, it's a sad one and you're going to have to do better,\" she said. \n\nHe looked directly into her eyes, seriously. \"It wasn't, and I will.\" He saw her mother smiling. \n\nErin seemed to be their server. She was about them, quietly serving each course, refilling drinks, asking quietly what each would like. She said nothing more to Josiah, but she made sure she was their server. \n\nThey were pleased to find filet mignon with bacon and a light white sauce, green beans, some strange mediterranean vegetable concoction, and potatoes romanoff which had cheese and were worth thousands of calories. Dessert was strawberry-rhubarb pie, the crust tender and flaky and the filling tart and sweet. \n\nThe evening was sublime. Vogel was his patented, arrogantly-comical self. His date was a Lieutenant Colonel in supply, of all things, and thought Vogel was a hoot and a holler. Mattie's father was laughing at Vogel's description of a case, a guy who claimed to be president, and who turned out to be President Lincoln in a reenactors group. He refused to come out of character during a week before a big performance, and someone sent him to be evaluated for schizophrenia. Phil and Mattie's parents proved to be good conversationalists, and Dotty was laughing about Josiah or Mattie growing up. Sing and Cora much enjoyed talking with Randy and Cindy, and Josiah wondered at their interest in marriage and children. He appreciated the gathering. What an unusual collection of people, he thought. Good people. \n\nMisanthropy was forgotten. \n\nHe realized he was happy. Mattie was smiling, too, knowing her big evening had gone off without a hitch. \n\nAfter coffee, the guests drifted away for home or wherever they needed to go. Mattie's mom kissed Josiah on the cheek, holding tightly to both his shoulders, as her husband shook his hand. Her father kissed Mattie's cheek then and said something to her. She blushed and said, \"Thanks, Dad.\" \n\n\"What did he say?\" Josiah asked when he found himself alone with her. \n\n\"He said, 'You're a good judge of character. We won't wait up for you.'\" \n\nMattie was tan and slender, her skin fresh and freckled and wantable, and he wondered how he could keep his lips from her neck\u2014which seemed longer and beckoning. How could any man? How did a man not want such a woman? She had a necklace of thin gold and a small diamond solitaire almost between her breasts. She was such a wonderful slimness. \n\nThey approached her car door in the dark night, stars spangling a moonless sky. She turned and looked at him, put her hands on his shoulders. She said nothing, so he spoke. \n\n\"You are everything I ever could have... \" his voice failed, but finally he finished, \"hoped.\" Unable to speak, he could only whisper: \"I thought this life was lost to me.\" \n\nShe nodded, her curled hair quivering. He looked at her mouth, smiling slightly, as she said, \"I love you, Josiah.\" She kissed him softly on the lips, and he put his hands on her hips. \n\n\"I love you,\" he said. \n\nIt was the first moment since his wounding that he felt whole. He held the door for her, closed it gently, and thought about his mom as he went around to the passenger side. \n\n\"Mom,\" he thought, \"she loves me.\" \n\n\"Son, she wants it all. Family, you, kids, life. You can give it. You always could. A good husband. A good dad.\" \n\nHe thought, \"Thanks, Mom.\" \n\nHe opened the door and got in the car. He looked at the sexy dress Mattie wore, the trouble she'd gone to get hair done, to notify the chef, invite guests, the whole evening. His knee stiffened at strange moments, his legs straightened awkwardly, but now, suddenly, wonderfully, something else did. He wanted to exclaim. \n\nThey had time. The night was theirs. What more should a man want? Was there more to want? He held her hand gently as she drove. \n\n\"Will you make love to me, Josiah?\" she asked quietly. \n\nHe looked at his shoes for a moment. \"You know,\" he said, \"I may need more time than others, or help.\" \n\nShe smiled. \"We'll make do. I've looked forward to it.\" She squeezed his hand. She hoped that, finally, they were they. \n\nThey made love that night. Other nights, they would have sex, but that night was only love. He discovered it was quite possible to enjoy sex when crippled and awkward. Sometimes it was funny. Sometimes it was frantic. She was careful, solicitous, soft, fun, and energetic. Oh, nimble, also. He tried to be, too. \n\nHer body joined with his as he looked up at her, lit by moonlight sneaking between the drapes. He gasped at her thin silvery outline as she raised her hands above for a few seconds, as if reaching for the ceiling or stars or heaven, her breasts so graceful and the wonderful edges of her in the bluish light: a memory he would cherish and never share with anyone. He would dream of her that way. It was the way it's supposed to be, loving and loved, and his first loving sex. \n\n\"What should I do?\" he asked her, looking up, thrusting gently. \"I want you to love this.\" \n\nShe thought, \"I found him. With all of his life, his hardship, his pain, his... goodness, he wants to be wanted by me. He was in there all along. \n\n\"Now he's in me,\" she thought. \n\nThey enjoyed that wonderful feeling of skin to skin, of fullness and acceptance, of touch, of being them. For a few minutes, it was all there was. Her hands were on his arms, his hands roamed whatever he could reach. She lowered her mouth to his ear. \"You're wonderful, so deep inside,\" she whispered, full of him, feeling him. She raised herself then to look down into his eyes. She felt a tear escape her eye, course down her cheek, and fall to his chest. He saw it and felt it also. \n\nHe felt the rising up, the gathering of imminent orgasm. It was upon him suddenly, and she felt it within her and sighed at the warmth spreading there with his harder thrusts. She wished that feeling would never end. She shook then, for some seconds, holding herself tight against him. His arms were about her. She relaxed and lay upon him. \n\n\"Love you,\" she said. \n\n\"Love you,\" he said. \n\nLove with sex made imperfect people perfect for one brief moment. \"Love with sex is the best of being a man and a woman,\" he thought, \"and a whole life follows. We come from the best of us, the most we can be, when there's love.\" \n\nIt was a new understanding for him, and he wanted to tell the world, so he did. \n\nHe told Mattie."
    ],
    "authorname": "Malraux",
    "tags": [
        "ptsd",
        "marine",
        "iraq",
        "delusions",
        "depression",
        "family",
        "motherhood",
        "disability",
        "singing",
        "alcoholism"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/josiah-emergent"
}