{
    "title": "Futanari Breeding Agency Ch. 03",
    "pages": [
        "\"Suspended? What do you mean I'm suspended?\" Alina said.\n\n\"I don't have much of a choice. Heck, I think I'm being nice not reporting you two to the police. You got her pregnant for god's sake,\" Principal Pulcher said.\n\n\"But I've never been suspended before,\" Alina tried, knowing it wouldn't work. \"My parents are going to freak out,\" she added, mostly to herself.\n\n\"It's mostly a formality. We only have a week of school left and you can attend graduation,\" Principal Pulcher explained.\n\n\"It's the most fun week,\" Alina said. \"No tests. No homework.\" She didn't believe it herself. She liked schoolwork. Everyone else was talking about how amazing it would be the last week. All the pranks and none of the worries. She didn't care much for that, but she didn't want to get suspended.\n\n\"We don't need to tell your parents. I don't want to explain to them that you got one of your teachers pregnant. How did that even happen?\" Principal Pulcher asked.\n\nAlina knew that her principal wasn't fishing for a real answer, but maybe that was the opening she needed. Her cock had opened up a lot of new avenues lately. Older women like her principal had eagerly done anything for her. Could she use that to get her principal too? If she made her love her cock too, she wouldn't be able to suspend her for getting Mrs. Swan pregnant. Standing up and pulling her pants down to show her what she used would probably just scare her. She needed to be more tactical.\n\n\"Actually, it is part of my job,\" Alina said. \"My family couldn't afford to pay for college. At least not for a better school. I had to work to get the money myself. It is really unfair that you punish me for trying to pay for college on my own.\"\n\nShe could see how her principal tried to figure it out.\n\n\"I'm very supportive of students working. It is usually in fast food. Do you flop burgers too? I hardly see how that relates to Julia getting pregnant,\" Principal Pulcher said.\n\n\"It's not fast food,\" Alina said, unable to stop a smile. She took up her phone that she had gotten from Julie and found Evelyn's number. \"I work for an agency and this is the number to my contact. Her name is Evelyn. The owner's name is Beatrice Whittington, but I don't have her number. Evelyn could get it for you if it's necessary. I'm sure they can answer all of your questions.\"\n\nAlina watched as her principal wrote down the names and numbers on a piece of paper, underlining Beatrice's name to show that she was the person she needed to talk to.\n\n\"Are you a model? Or is it a temp agency? I still don't understand how this relates to your teacher,\" Principal Pulcher said, looking perplexed.\n\n\"They can answer all your questions. I'm very good at my job. 100% success rate. I also understand that you haven't told anyone why I've been suspended, so I suggest that we postpone it until the end of the day. You can call Evelyn and rethink your decision to suspend me for doing my job. Is it okay if I came back at 3:20?\" Alina said, already standing up and having taken a few steps towards the door.\n\n\"Fine,\" Principal Pulcher said. \"I'll suspend you by the end of the day, but if this is just a trick, you better believe I will extend your suspension so that you can't attend the graduation.\"\n\nAlina quickly left. She would only be a little late for class. She wasn't sure that her suspension would be lifted but at least she had a chance now. With a bit of luck, she might even get to fuck her principal. She would have her beg for mercy and then beg for more cock. It was all up to Evelyn and Beatrice now. She knew that Evelyn would only say good things about her, but Beatrice could be more difficult. By the end of the day, she would know.\n\n**************************************************\n\nShe had wanted to stay the entire morning in bed, but that meant she had to tell her parents she got suspended. Principal Pulcher had agreed they should keep it a secret. Especially after she had talked to the Futanari Breeding Agency. She hadn't been impressed that Alina worked with helping women get pregnant. Actually, she had thought about calling the cops before she realized that everything was legal, and all that would accomplish was give the school unwanted attention for having a student working there, and one of the teachers getting pregnant. Even if that hadn't been part of Alina's work, the news media might look differently at it.\n\nShe had told her parents that she would get help with funding for College. That all expenses would be taken cared of, just not that it would come from her own savings now. Lucky enough her parents didn't snoop around in her room, and she had to do her own laundry, so hiding all the new things were easy. She wondered how they would react if they knew about her new life? She had thought about telling them a few times, but now with the suspension that was out of the question. At least for another week.\n\nNow it was a few days of hiding. Finding something to do all day to make sure her parents didn't get suspicious. Getting out of the house she started to walk towards school but then turned to the bus stop to go into town. Last night she had thought how fun it would be to turn up at the library that Rose worked at, but this morning she thought it would be a bad idea to show up announced. She knew she would text her soon but knew that not everyone liked the idea of doing something bad at work. She might need to calm down her expectations and realize that seeing Rose at day time might be a bust.\n\nDowntown was busy with cars and people and Alina decided that this would be a great opportunity to visit a Starbucks. She never really been to one before, and now when she had some spare money and nothing better to do, that would be the perfect place to plan the rest of the day. A few people were already in line but that only gave her time to decide on what to get. She didn't want coffee and thought that tea should be good, but as the list must have had over 50 different ones she started to stress out. Most of the good ones seemed to be iced tea, but there was a cold wind out there, and she wanted something warm, settling for a tall Citrus Defender and a blueberry muffin she had seen on display while standing in line. It would be pricey, but when the barista told her it cost even more than she had thought. \n\nSitting down she fished up her new phone from Julie and went to Evelyn's number. Had she even started work yet? She should have. That Dolly Parton song talked about office people working 9-5, but she didn't know if that was true. The song was old and maybe working times had changed. If so, then surely they must be starting work even earlier now, not later, and since it was just after 9, Evelyn must be working. She knew that she had been at the office till 6 a few times, but perhaps that was only because it was often hard for Alina to get there earlier than 4, and usually not before 5. She shook her head trying to clear it. Evelyn would be happy to help her no matter what time it was.\n\n\"Hi Evelyn, it is Alina. Alina Huba,\" She said.\n\n\"Oh, hi,\" Evelyn said, pausing briefly, \"Did the confusion with your school get cleared up?\"\n\n\"No. I got suspended for the rest of the week,\" Alina admitted.\n\n\"Damn. I tried to explain to her. I will have Beatrice call her. She will talk her out of it,\" Evelyn said confidently.\n\nAlina sighed. It would be nice if Beatrice could do that. It had only been a few hours and she was already losing her mind.\n\n\"Are you at the office? I would like to see you,\" Alina said.\n\n\"You want to see me? I'm sorry, but I am out of the office the entire day. I can schedule you in for tomorrow,\" Evelyn said, sounding disappointed.\n\n\"Fine,\" Alina sighed. \"I want to pick a new client, and then you better make sure we got plenty of time for us too.\"\n\n\"I'm sorry I couldn't be there today. I figure you must be having a hard time being suspended,\" Evelyn said.\n\n\"I'll get by,\" Alina said.\n\n\"I need to rush. I will see you tomorrow,\" Evelyn said ending the call.\n\nShe took a bite from the muffin, noticing it didn't taste anything of blueberry, adding to her disappointment. This day had been a struggle, but she still had other people she could ask.\n\n\"Rose, I need you. Can I come to your work?\" she texted.\n\nShe sipped on the tea. At least it tasted pretty good.\n\n\"Work is too busy. Got three groups I'm reading for today. Sorry,\" Rose texted back a few minutes later.\n\n\"What about after work?\" Rose texted.\n\n\"My daughter is over for dinner. You know she still hasn't accepted that you got me pregnant so it will need to be some other time,\" Rose texted.\n\nAnother bust. She didn't know much about library work, but she did remember that back in the lower grades they often went to the local library. Of course, at this time of the day everyone was working, but surely Mr., Swan must be free since she was suspended too.\n\n\"I want to fuck,\" she texted, knowing that Mrs. Swan liked the direct naughty talk.\n\n\"At my mothers. Back on Friday,\" Mrs., Swan texted back.\n\nWhat the hell was wrong with everyone? She needed to find something to do and having sex with beautiful women was her favorite thing, only today when she needed it more than ever, everyone had abandoned her. There was only one hope left.\n\n\"Julienne. I got no school. Want to work on getting you pregnant. NOW,\" Alina texted.\n\nShe sat staring at her phone, feeling her cock start to get ready for the task. Surely Julie wouldn't be able to turn her down.\n\n\"Out of town meeting with a business we might take over. Why aren't you at school?\" Julie texted back.\n\n\"Suspended for getting teacher pregnant,\" she texted back.\n\n\"That should be celebrated and not punished! How about if I arrange for you to stay in my room at the hotel? How long are you suspended for?\" Julie texted.\n\n\"Today, Wednesday and Thursday. Friday is graduation. I'd love the room. Haven't told parents I got suspended,\" Alina answered.\n\n\"Probably for the best. The room will be ready for you in an hour. I will tell them you can use all the hotel's services free of charge. Food, spa and everything else,\" Julie texted.\n\n\"Are you sure this is alright? It sounds a bit much,\" Alina texted.\n\n\"You deserve it. You can go to our gym too. It is a few buildings down the street from the hotel. I think you'd like it a lot. Can I book you for another session this weekend?\" Julie asked.\n\n\"YES,\" Alina answered.\n\n\"It's a date. I will get back to you about the details later. Text me if you need anything else,\" Julie texted.\n\nIt was another letdown, but at least she was getting a free hotel stay out of it. She might need to head back at nights to not make her parents suspect anything, but it was still a much better option than sitting here.\n\n************************************************\n\nThe hotel personnel had installed her in Julie's room, making her feel like a VIP. She had eaten at the restaurant, being a little more confident in her order this time, and then they had delivered fresh clothes for training to her room and guided her to the gym. It was only a few buildings away from the hotel and Alina understood why Julie thought she would like it here now. \"Julie's gym for women,\" read the text on the door and it looked like a high-quality gym, full of fit ladies. Just standing in the lobby, seeing women in tight pants and tops, made her excited about it. It made her feel that getting suspended might not have been that bad after all. Not if she could spend her time here.\n\nBehind the counter stood two women. One was a white woman with long braided hair that dangled over her shoulder as she was leaning forward to work on a computer. She was wearing a top that seemed to be incredibly tight and way too small, making Alina think that it might just be a sports bra. Her stomach showed perfects abs and with so little fabric on her upper body, Alina could see that she was covered in strong muscles. Her face showed that she might be older than her body let on.\n\nAt first, Alina didn't recognize the other woman. Pitch black hair set in pigtails with a small sliver of cyan running through the right one. Cyan lips and dark makeup around the eyes. She was wearing a light purple t-shirt with the \"Julie's Gym for Women\" logo on it, but even if it was hanging loose, Alina could still tell that she was fit and strong, even if not to the level of the blonde woman. Her pale skin a contrast to the brightness of her top. When she realized that she was one of the women from the binders she had looked on in Evelyn's office, she felt her face blush. She glanced over to the other woman again, needing to make sure if it was the emo looking woman's wife, but she was quite sure it wasn't. Still, it must be the emo girl that wanted to get her wife knocked up by Alina.\n\n\"Alina, nice to finally meet you,\" the emo woman said, smiling. \"Julie told us you were on your way.\"\n\n\"Hi,\" Alina said, unsure how to handle the situation.\n\n\"Jenny is just setting up your account,\" the emo woman said, the other woman looked up and waved her hand before turning her attention back to the computer. \"Did you get the clothes we sent over?\"\n\nAlina held up her small bag to show that she had gotten them. What was her name? She was quite sure the wife's name was Cindy, but she struggled to find the name of the emo woman.\n\n\"You are her, right? You and your wife,\" Alina asked.\n\n\"Yes. She isn't here today. She's going to be really jealous when I tell her,\" The emo woman said, smiling.\n\n\"Cindy. And you are,\" Alina said, taking a moment to think, \"I know it wasn't Maleficent,\" she said, thinking out loud.\n\n\"Millicent, but I go by Millie,\" she answered.\n\n\"Nice to meet you, Millie,\" Alina said. \"I take it you work here?\"\n\n\"Me and Cindy are the managers. She is going to be really happy that you remembered her name,\" Millie said, showing her full, cyan lips as she smiled.\n\nJenny held up a bracelet, and Millie took it and stepped out from behind the desk. Alina couldn't help but stare at her toned legs hiding under the tight black pants, and a butt that made Alina's body tingle.\n\n\"Are you ready for a quick tour?\" Millie asked, looking at Alina.\n\nShe hugged her bag close and followed behind Millie, her beautiful butt guiding her. They walked up to a double glass door, Millie using the bracelet to unlock it, and they entered a massive workout area full of machines and all kinds of other equipment. Energetic music was playing but it wasn't very loud and clinking and clonking could be heard over it as people were working out. Millie instructed Alina to change her shoes and put on a pair of crocs to not drag any street dust around.\n\n\"I would have had the bracelet ready before you showed up, but even after a few years I still haven't learned how to make one, and I had to wait for Jenny to finish up a class. You just hold it up to a lock and the bracelet will unlock it. If you are just gonna be here on the floor we can buzz you in from the reception, but for members only areas you need to use the bracelet,\" Millie explained as they walked through the room.\n\n\"Over here is where the classes are being held. There's a schedule outside of each one, and if they are free, members can book them for private use too. You can do that on our website, as well as sign up for classes. For members they are free, but visitors can also take part for a small fee. Some are for closed groups, but you can always ask if you want to join,\" Millie said.\n\nAlina walked into one of the corridors with glassed walls showing small rooms with a big mirrored wall on the opposite side. One of the rooms was full of women sitting on floormats as they talked.\n\n\"They are waiting for Jenny. I think they're going to do yoga together,\" Millie said before stepping up to the door and reading on the digital display. \"Yeah, it's a yoga class. We also offer massage in here depending on who is working and if everything is available.\"\n\nThey left and continued to the furthest wall in the room. It also had a mirror with a thick mat in front of it, and had all kinds of bells and bars for free lifting. In the corner, there was a sturdy window and door. Millie used the bracelet to unlock the door and as they walked inside Alina felt the smell of chlorine.\n\n\"Here is just a small dressing room for changing and washing up. We expect you to wash yourself before and after you use these facilities. If you want to do swimming laps in the pool, we need you to wear a swimming suit, but for the hot tub and warm water pool, it's okay to be naked. Even if we are a gym for women, we do have some men who come here too. They aren't allowed in this area but should stay in the main area or taking part in a class. We also don't have a dressing room for men,\" Mellie explained. \n\n\"Women are naked in there?\" Alina asked, trying to hide her eagerness.\n\n\"Yeah, most people just end up being naked in there,\" Millie said.\n\nThey walked along with the thin but long pool, where one woman in a bikini was doing laps, to the other side where they walked through another door.\n\n\"In here we have a steam sauna. Again most people are naked in there, and it is for women only. Try to make sure you don't leave the door open for too long as that will mess up with the steam and the heat,\" Millie said.\n\nAlina wanted to have a look in there, especially if there was someone naked, but Millie left and they went through another door to come into the main room again, but on the other side of where they had entered the pool area. Alina also noted that the bracelet didn't seem to be needed to exit the area, but only to enter it.\n\n\"Last we have the dressing rooms. There are two entrances. One here,\" Millie said as they walked past one door halfway into the main room, \"and the other one is down here at the entrance,\" Millie ended after a brief pause for them to walk down the wall to the other entrance. Millie swung the bracelet in front of the door and they stepped inside.\n\n\"Well, not much to say about this. Just a normal dressing room. Plenty of space to sit down. Lots of lockers. Two shower rooms. Let me show you how the lockers work,\" Mellie said as they walked into the dressing room. \"You just blip the lock with your bracelet, and then you flip the switch on red to lock it. Now only your bracelet can unlock it, again by blipping it, and then turning the switch to green. I think that's it,\" Millie said, looking like she was trying to think about something else to include with the tour.\n\n\"Will the bracelet work for three days or just today?\" Alina asked, unsure if Julie would let her use the gym for free for as long as she had the room.\n\n\"Julie insisted that we gave you a lifetime membership. The bracelet allows you to enter the building at all times, but the membership areas are only available from 6 in the morning till 9 in the evening. You can leave the bracelet in the reception if you don't want to carry it around, but as long as ownership stays the same, you will always be welcome here, and can enjoy all of our services for free. You must have made quite an impression on Julie, but if all I have heard about you is true, I think I would gladly give you the same benefits,\" Millie said, smiling her inviting cyan smile.\n\nAlina blushed. Julie hadn't confirmed to her that she was pregnant yet, but if her calculations from when Rose knew was accurate, Julie should be able to tell any day now. At least if it took the first weekend they spent together. They had a few other sessions since then just in case.\n\n\"Would you need any instructions on how to use any of the machines or other equipment out there?\" Millie asked.\n\n\"I think I'll manage,\" Alina answered.\n\n\"Then it is my honor to welcome you to Julie's Gym for Women,\" Millie said, handing the bracelet to Alina. \"The bracelet is 100% waterproof, heatproof, and we still haven't had anyone that been able to put enough force to one to break it,\" she added as Alina looked the bracelet over. \"Now, I know this is a lot to ask, but Cindy wouldn't forgive me if I didn't ask. Would you mind if I got to see your cock?\" Millie asked, bluntly.",
        "\"Here?\" Alina said, looking around in the dressing room as she felt her heartbeat rise, and her cock start to stir.\n\n\"Why not? It's a dressing room, so being naked is perfectly normal,\" Millie said.\n\nThat was true, but Alina wouldn't be happy with just that. She wanted more. Needed more than to just show of.\n\n\"What do I get out of it?\" Alina asked.\n\n\"I could show you my boobs?\" Millie offered.\n\n\"That would be nice, but I was thinking that you should show me why tomorrow when I go into the office at the Futanari Breeding Agency, I should pick you and your wife next,\" Alina said.\n\n\"You'd do that? Cindy would be so happy,\" Millie said, brimming with excitement.\n\n\"There are so many lovely women that it's hard to decide, but you and your wife have certainly been a frontrunner so far,\" Alina admitted.\n\n\"We would make it worth your time. Both of us. I bet everyone else got a boring husband, but with us, you would've two women to make sure you can do your job properly,\" Millie said.\n\n\"Would Cindy be happy if you just said you saw my cock?\" Alina asked.\n\n\"No,\" Millie said, a gleaming want showing in her eyes. \"She'd want to know how it felt. How warm it was, how thick it felt. If it had the same power that Julie says it does.\"\n\n\"What about you? Do you want to know those things too?\" Alina asked.\n\n\"Yes, but Cindy would be so jealous. It's her day off, and she will miss out on the chance. Almost every roleplay we have had the last two months have been me pretending to be you, getting her pregnant,\" Millie confessed.\n\n\"That's a lot for me to live up to,\" Alina said.\n\n\"Give me a minute, I need to talk to Cindy about this,\" Millie said, fishing up a phone from somewhere.\n\n\"Cindy, you're never going to believe who is at our gym right now. No, not her. Even better. Alina. Yes, Julie's Alina. Calm down. I was thinking that maybe I'd show her what she'd get if she let us hire her. Oh, come on, you know I'm not good at that. Fine! Yeah, I love you too. I'll tell you about it later, bye,\" Millie said on the phone.\n\n\"No luck?\" Alina said, disappointed.\n\n\"She said I can only use my mouth and hands. That she wanted to be the first to feel you inside of her,\" Millie said.\n\n\"I have been thinking how those cyan lips would feel on my cock,\" Alaina enticed.\n\nAlina watched as Millie sunk down on her knees. She hadn't expected her to do that here. Not in the dressing room. There were other people here, and they were standing where most people who joined or left would see them, or even need to walk past them. She could hear two women talking in one of the shower rooms, and she figured they could be no more than 20 feet away. The dressing room looked really big, and she thought that even if they would do it in here, surely they would find a secluded corner.\n\n\"Well, are you going to show me?\" Millie asked, her eyes beaming with anticipation.\n\n\"Here?\" Alina asked, never having done anything like this in public before.\n\n\"Why not? We have an open policy about it,\" Millie said.\n\nIt sounded weird, but at the same time, Alina wasn't ready to pass up on the opportunity. She unbuttoned her jeans, needing to pull them down firmly past her half-swollen cock, and then all the way down so she could step out of them. She saw Millie bite her lower lip as she saw the protruding underwear.\n\n\"You know, I have never done this without Cindy,\" Millie said, her eyes glued at Alina's bulge.\n\n\"Sucked a big cock?\" Alina asked.\n\n\"That too, but been with another woman without Cindy present,\" Millie clarified.\n\n\"How long have you been together?\" Alina asked.\n\n\"It will soon be 20 years. 20 years and I have never once had sex without her,\" Millie said, sounding excited.\n\nShe thought Millie was younger than that. She couldn't remember if she had looked at their bio in the binders. She pulled her own top off and then put her fingers inside of the waistband of her underwear, getting ready to pull them down.\n\n\"Surely you can't be that old,\" Alina stated.\n\n\"I certainly am. 39 years old. Cindy is 43. I have heard you like older women,\" Millie said, smiling.\n\n\"More than anything else in the world,\" Alina said, pulling down her underwear enough for them to fall down so she could step out of them.\n\n\"Fuck,\" Millie said.\n\n\"You like it? I hope it isn't too big,\" Alina said, smiling to herself as she had never met an older woman who didn't like her big cock. Well, except for her principal perhaps.\n\n\"Cindy is going to die when she sees it,\" Millie said, reaching her hand up to gently grab Alina's cock, \"and if she survives, she will die when you pound her pussy into pregnancy,\" Millie added.\n\n\"I'm looking forward to that, but right now it wants you. Wants you to cheat on your wife with the cock you been waiting 20 years to find. 20 years to give your absolute devotion too,\" Alina said, feeling her own heat rise as Millie's soft hands with pitch black fingernails were slowly stroking her growing cock.\n\nShe watched as Millie stuck out her tongue, and gave the head a few careful licks, each one making Alina's cock twitch into further hardness. When it was finally fully stiff, the beautiful cyan lips engulfed her cockhead, struggling to get it into her mouth.\n\n\"Linda, I know you would like to watch, but our lunch break is almost over, and we need to get back to the office,\" someone said behind Alina.\n\nShe heard footsteps scurry from the shower, and she figured it was the women from the shower that had been watching. It felt weird, but also somewhat exciting that they were in the open like this. That it was one of the managers that were on her knees, sucking her cock, made it feel safer. Even if someone wouldn't approve, they wouldn't be able to do anything to stop it.\n\n\"That feels very good,\" Alina encouraged.\n\n\"It's a very good cock,\" Millie answered, taking a short break from trying to shove her mouth over Alina's cock.\n\nFinally, Millie managed to all of the head in her mouth, letting her lips close around the shaft below it. It felt amazing, and Alina couldn't help but wonder if more women shouldn't wear cyan lipsticks. A woman in her 20's entered the dressing room from the entrance door, saw Alina, then Millie on her knees in front of her, and hurriedly rushed away with her face blushing.\n\nWhen her attention returned to Millie, she got surprised that she had taken much more of her cock in her mouth, feeling it press at the back of her mouth. Millie's eyes were tearing up, but Alina didn't want to stop her. If she wanted to choke on her cock, she was going to allow it. Millie kept pushing it at her throat, saliva running down Alina's shaft and Millie's chin, as she was making more and more noise as Alina's massive cock pushed as deep as it could go in Millie's mouth.\n\nThe same girl ran past them again, this time dressed in workout clothes. As the door opened, she bumped into two older women, made some weird sound, and then hurried away.\n\n\"What was her problem,\" one of them said, but only a few steps later they both stopped a few feet behind Millie, looking at the scene in front of them. Alina looked at them, and they just stood there looking down at Millie choking. They both looked to be in their 40's, and Alina couldn't help but stare at the big breasts both had. She certainly liked butts the most, but the impressive set on these women was hard to not look at.\n\n\"Sorry,\" Alina said, unsure how to handle the situation.\n\nAt the same time, Millie seemed to need the rest, letting Alina's cock slip out of the mouth, letting the wet cock rest against her face as she was gasping for air.\n\n\"What the fuck is that?\" one of them said.\n\n\"Surely have you seen a cock before,\" the other said, \"your husband got one, right?\"\n\n\"Not like that?\" the first one said.\n\n\"Oh yeah, that one is huge,\" the second one confirmed.\n\n\"A monster. Wonder how it would feel,\" the first one said, curiously.\n\n\"Are you a new member? I haven't seen you here before,\" the second one asked Alina.\n\n\"I just joined,\" Alina acknowledged.\n\n\"And you already got one of the managers? Impressive. If you ever need any help, we would both love to help you,\" the second one said, pulling her stunned friend with her as they went deeper into the dressing room.\n\n\"Thank you,\" Alina said, feeling Millie start to kiss her cock.\n\n\"This thing is a challenge,\" Millie said between kisses.\n\n\"You're doing great,\" Alina encouraged her.\n\n\"Cindy is the true cocksucker. but I'm not going to give up until I get this thing down my throat,\" Millie said, determined. \"When I do, I want you to fuck my face hard,\" she added, looking up at Alina.\n\n\"Ok,\" Alina said, unsure if Millie could handle it. She thought about questioning her promise of a deepthroat face fuck, but she didn't want to miss out on it, so she stayed silent.\n\nAgain, Millie's beautiful lips started to open, taking the engorged head, and then starting to slide down the hard pole all the way until Alina felt the back of Millie's mouth block any further passage. A few times Millie tried to press past it, causing her to choke, but then as if a miracle occurred, Alina felt her hard cockhead sink deeper, seeing the lips slide further up the shaft, and Millie's eyes looking like she was close to death. Yet the emo girl persisted, holding still as her body was getting acquainted with the new intrusion.\n\n\"Whoa, how does that thing fit in there?\" the first woman said, having returned in her training outfit.\n\nAlina looked towards her. She was even hotter in her tight-fitting workout clothes. Her breasts looked squeezed up in a sports bra, but her breasts still looked massive. Alina thought about what Millie had asked her to do, and she knew this would be the perfect chance to show off. She grabbed one pigtail in each hand, holding close to the head.\n\n\"She needs to learn to take all of it. Not just anyone can handle a cock this big, and sometimes you need to force it,\" Alina groaned.\n\nWith a firm grip of Millie's hair, she started to move her hips, feeling her cock slide in the tight throat. By guiding Millie, and carefully pushing her hips forward, she sank her cock deeper and deeper into her throat, until she felt Millie's sweet cyan lips press against the base.\n\n\"No way,\" the second woman said. \"That cock was much too big for that.\"\n\n\"Don't you always brag that your husband got a big cock?\" the first woman said.\n\n\"For a man. Nothing like that though,\" the second woman answered.\n\nAlina started to fuck Millie's face. The black makeup around her eyes had become a mess, and she was making weird noises every time Alina's big, wet balls tapped her chin. She felt powerful. Like Millie would do anything to please her, and the two beautiful women looking at them would gladly take her place. She would knock up Cindy, and then she would knock up Millie too. Everyone would carry her child. Everyone would accept her potent seed.\n\n\"Get ready, because you are going to get the biggest cumbath anyone at this gym has ever seen,\" Alina prophesied. \"The same cum that will get your wife pregnant.\"\n\nShe pulled her cock from Millie's throat, feeling this first big jet of cum fill the older woman's mouth, then she pulled out fully, laying her heavy, long ropes of cum all over her face. When she ran out of space, she just let it pile on, making the cum run down Millie's face and neck, down to her purple \"Julie's Gym for Women\" t-shirt.\n\nWhen her orgasm finally came to an end, she turned to the locker, slumping against it. She saw that several more women had joined in watching, and now when she looked up at them, they all split up, either running out to workout or deeper into the dressing room.\n\n\"Julie wasn't lying that you cum a lot,\" Millie said, still on her knees and with cum dripping from her face.\n\n\"Sorry. It just happens,\" Alina said.\n\n\"I better try and get back to work,\" Millie said, pulling her t-shirt off, and tried to wipe some of the cum away with it.\n\n\"What about your promise that I could see your boobs?\" Alina asked.\n\n\"That will after you pick us,\" Millie teased. \"Now you better get that workout you came here for.\"\n\nShe watched as Millie walked away. She was a mess after the rough oral and cum shower, but Alina thought she still looked amazing. Her body was perfect, and even if her breasts weren't as big as the other two women, they looked perfect on her. It might be worth picking them just to get to see Millie naked.\n\n****************************************************************\n\nAlina had decided to sleep at home. It almost felt like she had become a secret agent, her parents thinking she was just a normal student, while in truth she had a whole different life that they didn't know about. Working for the agency with assignments to impregnate willing women, but also a life of new friends that she loved and cared for. Taking the bus into town hadn't felt as weird as it had been the previous day, and she longed for her meeting with Evelyn.\n\nComing into the office Alina looked around for Beatrice, but she couldn't see her anywhere and just went into Evelyn's office instead.\n\n\"Oh, you're here already,\" Evelyn said as she stood up from behind the desk.\n\n\"I took the earlier bus,\" Alina answered.\n\nAlina took in Evelyn's full figure. The older woman had most of her blouse hanging open, and Alina knew it was for her sake. Evelyn was a side project, but a very pleasant one. It certainly helped that Evelyn seemed to be under her spell.\n\n\"I'm sorry I couldn't be here yesterday. I hope you found some way to pass the time,\" Evelyn excused herself.\n\n\"I did,\" Alina said.\n\nShe reached the desk and put her bag on one chair and then slumped down in the other one. She had originally planned to leave it at the hotel before coming to the office, but in her eagerness, she had walked straight here.\n\nFor a moment she thought about telling Evelyn about her day yesterday, but on second thought she decided to keep it to herself. It had started rough, but after the world-class blowjob from Millie, her day greatly improved. She had worked out for a while after it, mostly trying different machines, but when the two big chested ladies had walked into the pool area, she couldn't help but sneak after them. She just wanted to get a peek on them naked, but when they saw her, they invited her into the hot tub. I hadn't taken long before her cock was between one set of beautiful big breasts, and then the other ones. At one point she had her cock between both sets. After the hot tub, they had moved on to the connected small shower room, where both women had taken her big cock in their lovely pussies until neither had been able to stand. It had been the perfect workout.\n\n\"Something did come up yesterday. Do you think it would be possible that I can have some business cards with your name and number? I was thinking, it might be good if I could give them out to possible clients,\" Alina asked.\n\n\"That isn't our usual practice, but it does sound like a good idea. I'd need to talk to Beatrice about it,\" Evelyn answered. \"Well, how about if you take a few from me now, and then if you need more, I will have a better answer for you then.\"\n\nAlina took the cards Evelyn had found on the desk. It was only eighth, but she figured she would find a good use for them. The two big breasted ladies from yesterday were already interested, even if Alina wouldn't be surprised if all the cum she filled them with had already started to work on growing their bellies.\n\n\"Thank you. Are these the new binders?\" Alina asked, stretching for a pile of the usual folders on the table.\n\n\"Yes, but I think I already know who you will pick,\" Evelyn said.\n\n\"We'll see. Are you going to stay there, or come over here and suck my cock while I look at them?\" Alina asked.\n\nA few seconds later Evelyn was down on the floor, having pulled Alina's cock out, and was making it grow with her hands and mouth. Alina did indeed know who she would pick. She had made a promise to Millie, and she was eager to get started with it already. Still, she was curious if Evelyn knew about that, or if it was someone else she had in mind. Either way, it was always fun to see who was hoping to carry her baby.\n\nCindy and Millie were in the first folder. Cindy being the target for pregnancy. She hadn't met her yet, but just from being with Millie she knew it would be an amazing experience. The first time she had seen their folder, she had hoped it would be a threesome, and now it was confirmed. It didn't matter what anyone else had to offer, because she had made a verbal promise to Millie.\n\nEvelyn was working on her cock while she put down Cindy and Millie. The next few women were all couples that she had read about before. She wanted to get them pregnant at some point too, but they didn't feel like a priority. Especially those with husbands that didn't look very welcoming. For a moment she wondered if they would all be old files, but then a new face appeared. A red-haired woman with pale skin and some freckles on her nose and under her eyes. She looked younger but the bio said she was 46 years old. She was married to a kind-looking dark-skinned man who looked a bit puffy. Alina bit her lip as Evelyn was swallowing her cock. She certainly wanted to try being with this woman sometime in the future.\n\nWhen she reached for the final binder she was sure that Evelyn must have meant that she knew she would pick Cindy and Millie, but as she opened it everything changed. The beautiful, stern face of Beatrice Whittington stared up at her. Last time she had thought the same thing, but then it had been her less stern sister. This time there wasn't any doubt. This was her boss. The owner of the Futanari Breeding Agency. The person she had short mental battles with in the past, that she had hoped to break so that she could get her pregnant. Finally, she had the chance to pick her. Fuck her any which way she pleased and have her carry her child.\n\n\"Stand up and bend over the desk,\" Alina ordered Evelyn.\n\nThe older beauty quickly complied, getting up from her knees, pulling her skirt up to reveal that she wasn't wearing any underwear, and pointing her sexy big butt out to give Alina full access. Alina jumped up from the chair, feeling her cock sway in the air, before she got behind Evelyn and lined her cock up with Evelyn's willing pussy, claiming it with one long, powerful thrust. What the hell was she supposed to do now? She had made a promise to Cindy and Millie. What would they do if she broke it? What would Beatrice say if she turned her down? Would either of them give her a second chance?\n\n\"So big,\" Evelyn moaned.\n\nAlina pounded her hard. Why couldn't life always be like this? A beautiful woman always ready to take her cock. Give her the pleasure she felt she deserved. Beatrice seemed to be the only one who thought that she didn't deserve it. Millie had done everything in her power to convince Alina to pick them. Anything to have her wife get knocked up by the biggest girl cock this agency employed. Beatrice only complained at Evelyn for pleasing her. Saying that they weren't that kind of agency. Now she wanted Alina to knock her up? It wouldn't be that easy. Either Beatrice had to prove herself, or never be picked.\n\nEvelyn had certainly proved herself. From the first moment she had seen Alina's cock, she had been smitten with it. Doing anything for Alina, even at the cost of her job. That was the kind of dedication she wanted.\n\n\"Take it,\" Alina said. \"Take my cock and get ready for my seed.\"\n\n\"Oh, please get me pregnant,\" Evelyn screamed loud enough to be heard over the entire office.\n\nAlina hiked Evelyn's skirt up even further and grabbed a hold of the flesh of her behind, using it as leverage to pound her hard. She was going to show everyone the power of her cock; make them all want to carry her children. In only a few months she would move away for college, but before that she would leave her legacy here. A legacy of fully satisfied older women with big bellies from their joint efforts.",
        "\"Did you tell your husband about our meeting today? Tell him how you would make me cum? Make me cum in your fertile little pussy?\" Alina queried.\n\n\"Yes. He said I had to be good. Had to do everything for you,\" Evelyn confessed.\n\n\"Then get pregnant. Show him I don't only have the best cock, but also the best cum,\" Alina yelled.\n\nEvelyn was milking her. Her strong pussy muscles were grabbing her cock tightly, holding it as it pushed back and forth. Evelyn was an eager lover. Always keeping active to make it feel as good as possible for Alina.\n\n\"I think I might be. I'm sorry I didn't say anything before, and I haven't been able to confirm it, but I can feel it. Feel that I'm already pregnant,\" Evelyn screamed.\n\nAlina slowed down for a moment. Was this only wishful thinking from Evelyn or was she really pregnant? If it was true, this would be her third. First Mrs. Swan, then Rose, and now Evelyn. Julie shouldn't be long away from finding out either. Just as Evelyn seemed to be sure, Alina was certain that Julie was nursing their baby inside of her too.\n\nShe pressed Evelyn down, buckling hard against her behind.\n\n\"We need to make sure,\" Alina said. \"This will be your pregnancy insurance policy.\"\n\nEvelyn was moaning wildly. Alina went all out, fucking Evelyn mercilessly. After today there wouldn't be any question about her being pregnant or not.\n\n\"Please fuck me. Please cum in me,\" Evelyn screamed and moaned.\n\nAlina was getting close. She tried to hold out, enjoying being on the edge of an orgasm. When the door opened, she didn't stop her hips, but looked over to see Beatrice come in. She closed the door behind her, and then just stood there watching her two employees in their passionate lovemaking. Alina wanted to show her. She was sure that Beatrice had heard all the stories from Julie, Rose, and Evelyn, but it would be something else if she got to see it herself.\n\n\"Cum for me Evelyn. Cum for me and I will give you all of my cum,\" Alina said loud enough so that Beatrice would hear it over Evelyn's moaning.\n\nAlmost as on command, Evelyn started to buckle. Her pussy squeezing even tighter. Alina howled as she started to cum too. Jet after jet streamed deep into Evelyn's body. Her handler had given herself to her, and now Alina wanted to show the owner of the agency what she too could have if she gave herself to Alina. A baby, and the best sex in her life.\n\n\"Take it. Take all of it,\" Alina moaned as she continued to pump cum into Evelyn's pussy.\n\nWhen the orgasm stopped Alina tried to stay strong even if her knees felt weak. The abundance of cum was pushing on her cock, and she slowly let it slide out of Evelyn, followed by a small river of cum. She turned to Beatrice standing at the door, making sure she could see all of her glistening cock as it dangled half stiff between her legs.\n\n\"Why don't you come over here and have a taste, Mrs. Whittington,\" Alina asked.\n\nShe thought that Beatrice would be unable to resist. It seemed to work so well with the other ladies, but Beatrice looked unphased.\n\n\"Evelyn, you have a meeting coming up and I hope you will clean yourself and your office up before that. We don't want to give the impression that we do these kinds of things,\" Beatrice said firmly. \"Ms. Huba I'm sorry we couldn't help lift your suspension. Lucky enough your principal didn't see this or I'm sure it would give her even more ammunition against you, and would've made sure you couldn't attend your graduation,\" she added.\n\nAlina felt the frustration building. Nothing seemed to be able to break Beatrice, and part of her made her want her even more, but she wasn't going to show that. Instead, she helped Evelyn up from the desk and down on her knees to clean their juices from her cock.\n\n\"I ran into Millicent yesterday, I promised her that she and Cindy would be my next clients,\" Alina said to Evelyn, but louder than necessary to make sure Beatrice would hear her.\n\nFor a moment there was silence as Evelyn was busy with Alina's cock in her mouth.\n\n\"Finish the papers, clean up and be ready for the meeting, Evelyn,\" Beatrice said, not making sure if Evelyn had heard her before she left.\n\nAlina picked up the top folder, knowing it was Beatrice's, and tossed it away. Why did Beatrice always manage to get to her? One day she would break her. Even if it took the whole summer, she would make sure that Beatrice would join her harem of pregnant women.\n\n**************************************************************\n\nFor the second day in a row she walked into Julie's Gym for Women. This time with full confidence from a great session with Evelyn, and the wonderful news for the two gym managers. It had only been two hours, but she was hoping that they would already have been told about it. She was going to get them a baby, and she was ready to get started on it right away.\n\nAlina had expected Millie and Cindy to be at the reception, but it was just the other woman from yesterday standing there. Jenny, she seemed to remember her name being, but she knew her memory with names wasn't very good, so she didn't have the confidence to say her name aloud.\n\n\"Hi, I would like my bracelet please,\" Alina said to the woman.\n\n\"Of course,\" she answered. \"The bosses asked me to find them if you came in here. You can start to get changed, just make sure you don't go hide anywhere until they have talked to you.\"\n\nAlina nodded and took the bracelet. Jenny sounded very serious. Did she know about the arrangement? Did it mean that Millie and Cindy were cross with her, and the whole deal was off? What if they had heard about her being with the two big chested women yesterday, making a mess all over the aquatic parts of the gym, and now they wanted to kick her out? She hugged her bag close as she used the bracelet to unlock the doors. No matter what happened today, she wouldn't have sex with any of the other people that trained at the gym. She would show them that she could be good and behave.\n\nThis time she entered deeper into the dressing room, sitting down on a bench. Should she even change? If they wanted to cancel the contract, she wanted to be able to leave as soon as possible. Lucky enough it seemed to be empty right now. She opened her bag. Sitting here wouldn't do any good. If it was bad news, she could always go back to the hotel in her training clothes. She unlocked the locker and started to change.\n\n\"Alina are you in here?\" a voice called.\n\nAlina stopped, her arm high in the air as she was in the middle of putting her top on. After a brief pause, she finished the movement and stepped out fully dressed from behind one of the many walls in the dressing room. Millie was there, together with another woman with her back against her. She knew it must be Cindy. She tried to get a read from Millie, but she didn't show anything. There was no running away now.\n\n\"I'm here,\" she said.\n\nBoth women turned towards her. She had been trying to think about excuses and promises to make that it would never happen again. Why had she been so foolish? Making love to two random women at a gym.\n\n\"There you are,\" Cindy said. \"Millie told me all about yesterday.\"\n\n\"I can explain,\" Alina started. \"It just sort of happened, and I promise it will never happen again.\"\n\n\"Never?\" Cindy asked. \"I think you misunderstand. I want it to happen right now. Evelyn called earlier and said you accepted us, thanks to my sweet wife, and now I want us to get started with getting me pregnant.\"\n\n\"Now?\" Alina asked.\n\n\"If you feel it is too soon, then you must at least let me suck your cock. It is unfair that Millie got to do it already,\" Cindy said.\n\n\"We should probably find somewhere more private this time,\" Millie added.\n\n\"Are you ready?\" Cindy asked, holding out her hand towards Alina.\n\nAlina was confused for a moment, then took Cindy's hand and got dragged out of the locker room. They crossed the machines and up to the opposite wall where the group workout rooms were located, and after some quick pressing on a tablet by Millie, all three entered a room. In front of them sat a full mirrored wall with a bar to hold on to in front of it. The two walls to the sides were covered in mats and basic weights of different kinds. The wall with the door was mostly made of glass, making it almost seem silly that Millie called it private. It couldn't be seen from the machines, but anyone that walked by would be able to see everything that happened in here.\n\n\"Well, can I see it?\" Cindy asked.\n\nAlina was still unsure if this wasn't a trap. She watched as Millie got up to the mirrored wall and adjusted a long matt Alina hadn't seen under it. It was almost as long as the room itself and a few inches thick. In gym class they had used it for tumbling. Somersaults and such things.\n\n\"You first,\" Alina answered. \"Both of you.\"\n\nCindy started to undress eagerly and told her wife to hurry up and do the same, which she did even if not as quickly. Millie looked the same as the day before. Pigtails hair as dark as the night, but with a sliver of cyan in it. Cyan lipstick and fingernails with dark rings around her eyes hinted at a dark past, but her personality seemed very little like the people with that look from school. They dwelled in misery, but Millie must have left that part behind her. Alina felt that Cindy had a big part in that. \n\nCindy's body was fit without looking overly muscular. Alina noted that her breasts looked bigger than she had originally thought. Cindy seemed to have a bubblier personality. Hardly any makeup, but her strong features didn't need it. Her long hair was in a strong ponytail were the binding seemed to be more than an inch wide. Her body was more defined than Millie's, with clear abs showing on her stomach, but still maintaining a feminine body that seemed to be more about being agile than powerful.\n\nCindy was the first one to get fully naked, and Millie got next to her when she had gotten naked too. Alina felt her cock strain against her workout shorts. Two marvels were standing in front of her. Two naked goddesses that both seemed willing to serve her.\n\n\"Is this an official attempt to fulfill my contractual obligations to get Cindy pregnant,\" Alina asked.\n\n\"Absolutely,\" Cindy answered.\n\n\"I told Evelyn that if you came in here today, I wouldn't be able to stop my wife to start the progress, and she agreed,\" Millie added.\n\nAlina knew that she most likely was the luckiest 18-year-old girl in the world. Cindy would be the fifth woman she got pregnant, and her wife was going to help her. Her cock felt like it was made from steel, trying to break out of its confine. She had already been with Evelyn today, but she had a feeling her cock was ready to set new records, and her big tingling balls were trying to prepare for their part of the job. She walked past the married couple up to the mirrored wall, leaning her butt on the railing. Alina could see the longing in Cindy's eyes. Rose had shown it, as well as Julie. Evelyn absolutely had it too. Millie had shown it a little bit, but Cindy had it bad. She knew she must have dreamed about this for a long time. Hoping and wishing her time would come. Alina knew it gave her all the power. Cindy might be married to Millie, but right now she belonged to her and her cock.\n\n\"Get down on your knees and crawl to me,\" Alina commanded. \"Show me how much you want my big cock.\"\n\nMillie hesitated, looking at her wife, but Cindy didn't waste any time sinking down to the floor, and seductively started to walk on all fours, her eyes fixated at Alina's protuberant crotch. When Cindy got up on the tumbling mat, Millie sank down to her knees too, and hurried to follow her wife. Alina smiled. The two older women were much more sexually experienced than her, but she knew that she would be able to show them a new limit of sexual height today.\n\nCindy eagerly let her hands find the outside of Alina's tight workout shorts. She gave a brief glance up at Alina, and Alina nodded her head to give her permission. Cindy tried to use the flexibility of the fabric to pull the hem over Alina's cock, but it proved difficult as it was perfectly hard and unwilling to let itself contained. Lucky enough Millie came to the rescue, allowing Cindy to move a hand to hold Alina's cock, while they removed the tight shorts together.\n\n\"Impressive, isn't it?\" Millie said to her wife.\n\n\"It's amazing,\" Cindy said. \"You sure you had the entire thing in your mouth?\"\n\nAlina felt her hands grasp tightly around the bar she was leaning against. Cindy was using both hands to stroke and squeeze all over her hard shaft, making her struggle to contain herself.\n\n\"And I nearly died doing so,\" Millie confirmed.\n\n\"I would like to see that! You wouldn't believe how many times she has 'trained' me with a strap on,\" Cindy said, looking up at Alina. \"For once I would like to see her suffer through it. Just first I need to show how well I have been trained.\"\n\nAlina knew better than to argue with someone who wanted to show their skill at pleasing her cock. She had regained her composure from the initial touches from Cindy and could feel her cock longing for the embrace of Cindy's beautiful lips. Cindy exposed the cockhead, giving it slow licks with her tongue. Wetting it properly, and almost as if Alina's cock wanted to reward her, a big glob of precum oozed out, dripping down on her tongue.\n\n\"it certainly tastes better than a strap-on,\" Cindy said, savoring the taste in her mouth.\n\nMillie leaned forward, putting her cyan lips against the cockhead, and licked the excess precum from the opening before leaning back.\n\n\"No argue. That tastes fantastic,\" Millie answered.\n\nIt felt good to have two beautiful women talk about her cock and precum like that. It got even better as Alina watched them share a passionate open mouth kiss for a few seconds. As soon as it ended, Cindy opened her mouth wide and swallowed Alina's cock. Her lips gliding over the head and closing behind it, as her tongue started to circle around it. Alina moaned, feeling her cock twitch from surprise pleasure, making her hands again grasp tightly around the bar to try and not choke Cindy.\n\n\"I told you yesterday that my wife was the better cocksucker,\" Millie said, noticing Alina's struggle.\n\n\"She is world class,\" Alina agreed.\n\n\"It'll get even better,\" Millie promised.\n\nAlina looked down at Cindy and found that her eyes were eagerly looking up at her. Beautiful eyes that locked with hers as Cindy started to bob back and forth, the hard member moving between her lips while her tongue continued to dance around slowly, licking everywhere it could reach.\n\n\"You have trained her?\" Alina asked Millie.\n\n\"Yeah, only my strap-on isn't as big,\" Millie answered.\n\nEven if it was bigger than Cindy was used to, Alina thought she was doing amazingly. If anything, the extra size seemed to spur her on. Cindy was slowly working on getting more cock in her mouth, and when the head started to press against the back of it. It impressed Alina that Cindy didn't seem to be bothered that the large phallus pushing against her throat. Alina had to steel her resolve again as she felt her cock bounce deep in Cindy's mouth, while the older woman's tongue never stopped dancing around her cock.\n\n\"Time to swallow her, Honey,\" Millie said.\n\nCindy followed her wife's direction without hesitation. Alina was prepared that her cock would do another bounce, but instead, Cindy slightly shifted her body, opening up her throat, and in one swift motion Alina saw her entire cock disappear into Cindy's mouth. She felt Cindy's throat close around her cock, making Cindy's eyes tear up slightly from the unnatural strain. Alina moaned, feeling her knees buckle but she quickly caught herself. She was worried the shift could have damaged Cindy, but Cindy started to bob her head again. Careful, slow movements at first, but surprisingly fast Cindy started to fuck her throat on the cock.\n\n\"Damn, that's good,\" Alina said between gritted teeth.\n\n\"Fuck her throat. Show her who's boss,\" Millie said, biting her lip in excitement.\n\n\"You want to see your wife choke on my big cock?\" Alina asked Millie.\n\n\"Yes! Go hard on her,\" Millie said.\n\nAlina smiled. How could she be this lucky? Two beautiful women and they were both so wicked. She grabbed Cindy's head and when Cindy tried to pull back to continue her bobbing, Alina instead held her in place, forcing her to hold the invasive cock balls deep. She saw how Cindy tried to look up at her, showing that she was ready to accept her fate. Alina started to move Cindy's head, while moving her own hips too, making her cock slide in and out of Cindy's mouth. At first, she did it with the same pace as Cindy held previously, but she quickly started to go faster and using more force to push her cock all the way into Cindy, making her balls slap against her chin.\n\nFor a moment she had forgotten how close she had been to cuming, but now it was coming back to her. Did she want to cum already? She was sure they would be able to make her cum several times, and she loved showing off how much she came. At the same time, they were paying her to get Cindy pregnant, and they might not like it if she was cuming anywhere but inside of her pussy.\n\n\"I need to cum,\" Alina stated, hoping it would make her two lovers voice what they wanted.\n\n\"Cindy has been dying for a cumbath from you,\" Millie answered. \"Hell, you might as well cover both of us,\" she added.\n\n\"Mouths open and eyes closed,\" Alina warned.\n\nA few more powerful thrusts into Cindy, then Alina pulled out. Both women already had their eyes closed and after a brief second to get her senses back, Cindy's mouth soon opened, joining Millie's gaping target. Alina gave herself a few quick strokes, and then the first heavy rope plastered Cindy's face, and a second quickly followed, aimed at Cindy's tongue. A quick turn made the third one shoot into Millie's mouth, and then Alina started to alternate between them, firing massive after massive loads all over them. For a moment she wondered if she would ever stop cuming as both women became completely covered from hair to face and down onto their naked bodies. Finally, her orgasm ended with just a small dribble of cum leaking out, which she tried to fling from her cock onto Cindy, and then she tried to lean back at the bar again, only to feel her knees give out, causing her to fall down on her bottom. Lucky enough the tumbling mat was soft enough for it to not hurt.\n\n\"No way,\" Cindy said, struggling to talk with all the cum still in her mouth.\n\n\"I told you,\" Millie answered after swallowing hard.\n\n\"I feel like I just got a bucket of cum dumped over me. Did you even get any cum on you?\" Cindy asked.\n\n\"I probably got just as much on me,\" Millie answered.\n\n\"How are we supposed to get cleaned up from this? We didn't bring any towels,\" Cindy said.\n\n\"I have an idea,\" Millie answered.\n\nAlina was starting to recover and hearing them talk got her intrigued. Just as she had hoped, Millie started to lick her wife. It was a bit silly since they were both unable to see but having two marvel's lick cum from each other was also extremely hot. Her cock quickly got ready again, but she wanted to enjoy the show for as long as it lasted. They took turns licking cum, and every now and then they met in a cum swapping kiss, only to go back to cleaning cum with their tongues again. It took several minutes before they stopped, still with plenty of cum in their hair and on their bodies. At least they were both able to see again.\n\n\"I think this is the best day of my life,\" Cindy said.\n\n\"It will get better,\" Alina promised,\" because now we need to get you pregnant.\"\n\n\"Actually,\" Millie said, and the two wives looked at each other and nodded. \"Actually, we have been thinking about it for a while, and after yesterday I told Cindy that I had made a decision too.\"",
        "Alina looked at them. They had been having so much fun and now they were going to give her the bombshell. Alina felt back to her feelings from before. They would just be playing around, and Cindy didn't want to get pregnant anymore. At least that would be better than what she had feared before. Getting amazing blowjobs from Cindy and Millie would be a good reward for visiting the gym every now and then.\n\n\"We both want to get pregnant,\" Millie said.\n\nAlina felt her jaw drop. Both of them? She felt her head spinning.\n\n\"What do you mean?\" Alina said.\n\n\"We want you to get both of us pregnant,\" Cindy explained.\n\n\"One baby in me, and one in my wife,\" Millie added.\n\nAlina felt her cock get to that impossibly hard state again.\n\n\"I can do that,\" Alina said. \"Hell, I'm going to get that done today.\"\n\n\"Do you think you can handle that?\" Cindy teased.\n\n\"Easy,\" Alina said. \"I'll bet you that I can fill both of your pussies with two loads just as big as the one you just shared.\"\n\n\"Two each?\" Cindy questioned.\n\n\"Yes. Easy,\" Alina bragged.\n\n\"That is a bold statement from a young girl,\" Millie teased, her foot pushing gently against Alina's balls.\n\n\"But if I make it, you are both going to take all of my cock up those pretty little butts. A good and hard pounding,\" Alina proclaimed.\n\n\"I don't do that,\" Millie said, looking paler than normal and her foot looking like it had frozen in the air. \"Not with something that big.\"\n\n\"Are you scared you'll lose to a teenage girl?\" Alina teased.\n\n\"We accept. Even with your massive cock, we will be able to break you if we work together as a true couple,\" Cindy said.\n\n\"Sounds like a win-win situation for me,\" Alina said, flexing her cock. \"Cindy you're first.\"\n\nCindy was sitting on her knees, but by lifting her body a little, and separating her knees, she removed her legs from under herself while limberly sitting down on her behind and leaning backward. Alina considered getting on top of her, but instead took her left leg and pushed it to the right, while laying down besides Cindy. Cindy quickly understood and pulled her legs up and jutted her butt out on the mat. It looked very tempting and Alina hoped she would have the stamina to get in that butt later, but now she laid her hard cock up against Cindy's pussy.\n\n\"I'm going to make your wife mine,\" Alina proclaimed. \"Her pussy will belong to me.\"\n\nAlina expected Millie to bite back, but she seemed to get turned on by it.\n\n\"It feels big enough to kill me, and you are just rubbing my pussy with it,\" Cindy moaned.\n\n'I don't want to kill you, but I will take you to heaven,' Alina thought. She spanked her cock against Cindy's wet lips, and then she let her cock slip inside, making them both moan.\n\n\"Whoa that's big,\" Cindy said.\n\nAlina felt how Cindy was moving her hips in small barely noticeable circles. She tried to be still letting her get used to it, before slowly starting to move her hips too. Cindy's pussy felt wet and smooth, as well as dangerously strong. Alina laid a hand on Cindy's hip, caressing it as her cock was slowly moving deeper. How could she be this lucky? How could so many beautiful women give themselves to her?\n\nShe felt Cindy shift. Her moans intensified and got pithier. Her hips started to do the small movements faster and faster. Alina knew what was going to happen. She let Cindy do the work for now, only doing small, slow movements herself to help edge her on. Feeling how Cindy's hip circles got more and more intense, as her moans got higher and louder. Waiting for the right moment to strike.\n\n\"Oh god, oh god, oh god,\" Cindy started to say, and the next moment she exploded.\n\nAlina felt Cindy's orgasm hit, and she then sunk all of her cock into her, making the older woman scream even louder. Alina wanted to condition her to connect the powerful orgasm with having Alina's gigantic cock slammed in balls deep, and she tried to pound hard and deep into Cindy with each orgasmic wave she was riding on. Alina felt her cock being squished extremely tight over and over until Cindy went quiet.\n\n\"Is it that good?\" Millie asked her wife.\n\n\"The Best,\" Cindy answered, her voice tired from the powerful orgasm. \"I think we'll need to get bigger toys,\" she added.\n\nAfter the hectic start, Alina slowed down, letting her lover recover from the first fiery minutes, and then she started to fuck Cindy with slow but hard thrusts. She wanted to show her power, knowing that it often seemed to melt her lovers' minds away, making them fully dedicated to her. Being with a couple also added another dynamic. She not only needed to make the person with her cock inside of her enjoy it but also the person watching. Keeping them excited and engaged in what happened as they watched.\n\n\"Your wife is fantastic,\" Alina said.\n\n\"Oh, I know,\" Millie said. \"She is my favorite little bunny.\"\n\nIt was clear that even if Cindy was taller and stronger, Millie was the sexually dominating partner in their relationship. Alina felt like trying to challenge that today.\n\n\"Have you ever seen her this happy?\" Alina asked, flexing her hips extra hard.\n\n\"She has been dreaming about this moment,\" Millie admitted.\n\nShe felt Cindy getting ready to come again, making Alina up her pace, as Cindy's circling hips started to speed up too. This time she wanted to join her. Wanted to make her first claim to Cindy's fertile eggs.\n\n\"Your wife is getting ready to cum again, and this time I will reward her with a belly full of my cum,\" Alina proclaimed. \"Look at her, Millicent. This is when I make her dreams come true. I will give her what she's always wanted,\" Alina boosted.\n\nCindy's body was reacting to each powerful thrust from Alina. Her body only being kept in place thanks to the fabric of the tumblers mat. Cindy and Millie were looking at each other, making Alina realize that this was an important moment for them. Something that they both dreamed about. Solidifying their marriage with a child, or two. This job wasn't only about fucking beautiful women. It was about giving people something unique and special. Something they might not otherwise be able to obtain. She had thought about making Cindy beg for her cum. Beg to get pregnant, but this was a shared experience.\n\n\"Beg me to get your wife pregnant,\" Alina told Millie.\n\nMillie leaned down to Cindy, giving her a quick peck on the lips.\n\n\"Fill her up. Get her pregnant. Show that godlike cock deep into my wife and pump all of your cum into her. Claim her womb with your bounty. Make us the happiest couple in the world,\" Millie said, excitedly.\n\nAlina was trying to hold off until Cindy orgasmed, but as Millie spoke, she realized that Cindy was doing the same thing. Alina could go for longer, playing the waiting game, but this was Cindy's moment. If she wanted to orgasm because she was getting impregnated, that is what Alina would give her. A few final thrusts, and then Alina started to empty her seed into Cindy. Even if she had just cum, her balls were still eager to pump up big loads deep into Cindy. Cindy's body quickly reacted and blissful contractions joined her orgasm into Alina's. Every time Cindy squeezed down, Alina felt her cock deposit another massive load.\n\nWhen it was over, Alina laid gasping for air. One down and three left to go. Her cock was still in Cindy, and she felt the plethora of cum she had dumped into her pussy was pushing against her cock. She slowly let it slide out causing them both to moan.\n\n\"I will remember this moment forever,\" Millie said, her eyes sparkling.\n\n\"Me too,\" Cindy answered.\n\nAlina thought she might remember it too. Cindy and Millie shared another kiss, and then they turned to Alina.\n\n\"Are you done for the day?\" Millie asked teasingly.\n\n\"I'm just getting started. You are next,\" Alina said.\n\n\"I won't do as well as my wife,\" Millie warned.\n\nAlina doubted that. Especially with what she wanted to do. Millie was the top, but that was with Cindy. During their first encounter, Millie had shown something different, and Alina wanted to explore that further. How would Millie react to it now when Cindy was there, and how would Cindy take it? She felt her cock starting to get hard again. She needed to do this.\n\n\"Get on all fours,\" Alina instructed.\n\nMillie quickly obliged, showing of a black floral tattoo covering the back of her left thigh and up to her left butt cheek. Alina thought that Millie would have more of them, but she couldn't see any more.\n\n\"Is this the only tattoo you got?\" Alina asked.\n\n\"Yes,\" Millie answered, shaking her sexy behind. \"I was supposed to get more, but it hurt so much that I stopped with just this one. I used to have twenty piercings too, but most of them have closed up now,\" she added.\n\n\"I like it. It compliments your butt,\" Alina said, squeezing her butt.\n\n\"I think she should get more too, but she is a bit of a coward,\" Cindy teased.\n\n\"I don't see you with any,\" Millie shot back.\n\n\"I'm a good girl!\" Cindy answered.\n\nAlina saw her opening. This was her chance to get Cindy's approval.\n\n\"What do you say we give your wife a lesson?\" Alina suggested. \"Show her what bad girls get.\"\n\n\"She never lets me do that,\" Cindy answered, biting her lip in excitement of the prospect.\n\nThat is what she thought. Clearly, Cindy enjoyed being the sub, but the thought of her wife getting some heat excited her too. Alina put one hand on Millie's back, using it to pull her ass towards her, and then moved the other one up to Millie's neck and pressed down. Surprised by the action Millie's face went down to the mat.\n\n\"Face down and ass up. Just how I like it,\" Alina said.\n\nShe saw how Millie thought about getting up, but that she decided to accept the position. Alina let her cock rest in her crack while she caressed the two beautiful globes.\n\n\"Do my little Millicent want my big cock?\" Alina asked, grinding the shaft of her cock against Millie's pussy.\n\nMillie moaned, then groaned. Alina could feel the battle within her. She was used to being in control, but now that control was slowly being given away. She knew she was trying to decide if she liked it, but Alina already knew the answer. She just had to be careful to not push too hard to make Millie fight back.\n\n\"I know you do. I can feel it all over my cock. Your body is preparing to accept me. Anticipating how good it will feel to be owned by me. Your pussy drooling its juices as it knows it will find its true place as my cock's toy. Now tell me, do you want my big cock?\" Alina asked again.\n\n\"Yes,\" Millie whispered after a brief pause.\n\n\"You need to earn it. Yesterday you proved yourself in your pursuit to get your wife pregnant, but today you need to show me how much you want to get pregnant too,\" Alina said. \"Cindy, have Millie ever spanked you?\"\n\n\"All the time,\" Cindy answered.\n\n\"But she never let you spank her?\" Alina asked.\n\n\"Never. Are you saying...?\" Cindy questioned.\n\n\"Would you like to see me spank your wife?\" Alina said.\n\n\"Yes!\" Cindy said, eyes beaming.\n\n\"I'm going to turn these pale little globes red,\" Alina said, squeezing Millie's ass hard. \"You don't mind do you, Millicent?\"\n\nAlina pressed her hard shaft hard against Millie's wet pussy, making her moan.\n\n\"I've never done that,\" Millie tried, shaken by how the situation excited her.\n\nAlina noted how she didn't say no and raised her hand and let it fall down hard on Millie's right cheek. Millie raised up her upper body as she screamed. Alina pressed her hands on her back, and Millie hesitated before accepting being pushed down again.\n\n\"Cindy, I need you to help hold your wife down. I don't want to see her head get off the mat again,\" Alina instructed.\n\nCindy got over to Millie's head, putting her hands on her shoulders to make sure she stayed in position. Alina waited until Cindy held her wife down, and then she started to spank Millie again. The first strikes were controlled as she wanted to find the right way to make them have the proper impact, but as she got the hang of it, she started to go harder. Each strike making Millie scream higher until she started to break.\n\n\"Please, I can't take it,\" Millie tried to say as her voice was crackling.\n\n\"Say that you are mine. Say you are my fucking slave,\" Alina said, high with sexual power.\n\nShe felt Millie press her pussy hard against her cock. She knew the older woman not only wanted her but was accepting her position under her.\n\n\"Yes, please. Just no more,\" Millie groaned.\n\n\"Ass up high. Present yourself to me,\" Alina demanded.\n\nHer hand never stopped working on Millie's backside. It was shining a beautiful red color, Alina loved how it made the floral tattoo stand up even more when it was highlighted with the new red color. Between slaps she found Millie trying to adjust her position. Her knees got further under her, making her ass rise, and Alina made sure her throbbing cock never lost contact with Millie's gushing pussy.\n\n\"You are mine, Millicent. Confess it. Confess that you are my slave, Confess and I will fuck you like you never been fucked before,\" Alina said, stopping the spanking and lining her cock up with Millie's pussy.\n\n\"I'm yours. I'm your slave. Please fuck me. Please fuck your slave,\" Millie confessed.\n\nAlina let her cock sink into Millie, her wetness making it perfectly slick, and all of her gigantic cock found its way into Millie's pussy in one powerful stroke. She heard Millie half moan and half groan, but she gave her no time to get used to it. Instead, she just pulled out again and then pushed in hard and deep. She looked at Cindy and found her looking mesmerized at what was happening while still holding her wife's shoulders down.\n\n\"Your wife is mine now. My little willing fuck slave,\" Alina said.\n\nShe pounded Millie hard while looking into Cindy's eyes. Cindy looked up from where Alina's hard cock barreled into her wife and nodded when her eyes met Alina's. Not only did Cindy not seem to mind that her wife had just been claimed by a big cocked girl, but she seemed to be even more excited than before. This was the difference with being with a lesbian couple. Not only could she dominate them, but when the partner got excited by it, she could do things with them too.\n\n\"Kiss me. Kiss me and show me how much you love me for showing your wife her proper place,\" Alina told Cindy.\n\nCindy attacked her. Their lips met and Cindy's tongue was forced into her mouth. Alina answered the kiss, trying her best to not let it affect her pounding of Millie's tight pussy. She moved a hand up to Cindy's face, wanting to show her how much she liked the kiss and appreciated how she had helped her in the submission of her wife.\n\nThe kiss lasted several minutes until Alina felt a shift in Millie. She was going to come, and Alina wanted to make sure Cindy knew about it. She shifted her hand from Cindy's face and back to her ponytail. It was held together by several ribbons making it a firm handle that she grabbed and pulled Cindy away from the kiss.\n\n\"Listen to your wife. She is going to cum for me. She is going to give her first confirmation as my sub,\" Alina said.\n\nMillie was screaming and moaning. Her body was taken to its limits and it was going to make her cum. Alina could already feel it would be powerful. She didn't know how Millie usually came, but she hoped the build she was currently going through would break new records.\n\n\"Cum for me,\" Alina told Millie. \"Show me how much you love my cock. Show me the pleasure only I can give.\"\n\nMillie started to trash around, only being held in place by Cindy's hands and Alina's cock. Her body convulsing repeatedly as she went between not getting any air and moaning impossible moans. Alina continued to fuck her, battling the overwhelming tightness of her orgasming pussy.\n\nWhen it ended, Alina stopped too, feeling how Millie collapsed, panting heavily. Alina gave Cindy another quick kiss which she eagerly answered.\n\n\"Clean your wife's juices off my cock,\" Alina instructed as the kiss ended.\n\nWithin seconds Cindy got off her wife and over to Alina, pulling her cock out of her wife and started to devour it. Alina moaned. She hadn't just claimed Millie, but she knew that this had also won her Cindy. She knew it might just be roleplay, but even if it was just for today, she was going to make the most of it. Looking down she saw Cindy eagerly take her cock in her mouth, this time it made her lightly choke as she was excited to clean it fast. Alina reluctantly grabbed the ponytail handle again, pulling Cindy of her cock.\n\n\"You are mine too, aren't you?\" Alina asked, letting her cock fence with Cindy's noise.\n\nCindy nodded.\n\n\"Good girl,\" Alina said, making Cindy blush.\n\nShe pulled Cindy up, giving her another quick kiss, and then turned her attention back to Millie. She still laid on the floor panting. Looking like she had been completely broken by her previous orgasm, but Alina wasn't done with her.\n\n\"Get up,\" Alina said, bending down to grab Millie's hair.\n\nMillie hesitantly started to pull herself up as Alina guided her with her hair, careful to not hurt her.\n\n\"Get up against the bar, and look at yourself in the mirror,\" Alina instructed,\n\nMillie did as she was told, putting her hands on the bar and looked into the mirror.\n\n\"Ass out,\" Alina added.\n\nMillie spread her legs slightly, pushing her ass out which made her upper body go lower. Alina got up behind her, admiring her red butt for a few seconds.\n\n\"This is the new you. The future mother of my children,\" Alina said, indicating that soon both of the women would carry her child, \"and my submissive slave.\"\n\nAlina let her cock slide into Millie's pussy again. The perfect wet, tight hole welcomed here greedily by clinging on to her. If there was any doubt if Millie liked her new position, the true answer was in her pussy. Alina knew it loved her big cock, and she rewarded it by starting to fuck her. Millie moaned. Stilly at first, but as Alina found her pace, Millie's moans started to get more intense. Alina saw that Millie was looking at herself in the mirror.\n\n\"What do you see,\" Alina asked her.\n\nMillie bit her lip but remained in eye contact with her reflection in the mirror.\n\n\"Your slave. Your soon to be pregnant fuckdoll,\" Millie said.\n\nAlina felt her cock swell another size.\n\n\"Cindy, I need you to kneel under your wife and suck my balls while I fuck her. Help me get her pregnant,\" Alina instructed.\n\nCindy quickly obliged, getting in under her wife and first moving her hands up to cup Alina's heavy balls, massaging them lightly as she reached in with her mouth to suck on them.\n\n\"Cindy, what are you doing,\" Alina asked.\n\nCindy hesitated for a moment, wondering if she was doing something wrong, but then catching on.\n\n\"Licking your beautiful balls,\" she answered.\n\n\"Why?\" Alina asked, pumping her cock back and forth into Millie.\n\n\"So that you can get my wife pregnant,\" Cindy answered between kisses of Alina's balls. \"Helping you get your submissive pregnant. My mistress,\" she added.\n\n\"Can you hear her moans? Can you see her muscles contract as she tries to please me with everything she got? Can you tell how much she likes my cock?\" Alina asked, feeling her power rising.\n\n\"She loves it,\" Cindy quickly answered. \"We both love it. I love your cock, Mistress,\" Cindy added excitingly.\n\nAlina felt how her limit was getting close. Her cock felt hard to the point that it almost hurt, still she craved the pleasure of Millie's amazing pussy.\n\n\"What about you, Millicent? Do you love it?\" Alina asked.\n\n\"Yes, Mistress. I love it. I love that it will make both of us pregnant,\" Millie moaned. \"Love that it is going to make me cum again.\"\n\nAlina knew it wouldn't be long now. Her balls were tingling more than ever before as Cindy was kissing and sucking on them, and she pounded Millie for all that she was worth. She grabbed a hold of her red ass cheeks, and then she started to unload. Feeling her cum burst into Millie with more force than she had ever experienced. It was overwhelming. Overpowering, and when she felt and heard Millie orgasm, her own grew even stronger.",
        "\"Take it. take my cum. Take my baby. Fucking take all of my seed,\" Alina yelled, needing the verbal outlet.\n\nShe felt her head get dizzy. The pleasure too strong to handle. After several powerful shots of cum, she backed away, letting her cock slip from Millie's pussy, but it kept firing. Long white strings flew through the air and landed on Cindy's beautiful face. When it finally was over Alina kneeled down, breathing heavily as she tried to find herself again.\n\n\"Fuck,\" Millie said, as she also kneeled down, leaning her arms against the bar in order to not fall.\n\n\"Oh god,\" Cindy added, licking her lips as her face once again was covered by cum.\n\nTwo down, two to go, Alina thought, wondering if she actually would be able to go through with it. Her body felt a bit sore. Especially her balls were tingling uncomfortably as they must be working hard to replenish for more action. She wasn't ready to give up, but she figured she might need to buy some time.\n\n\"Are you done now?\" Millie asked Alina.\n\n\"Never,\" Alina answered, defiantly.\n\nFeeling the strength return to her legs, Alina stood up again. To her surprise, her cock was still pointing out slightly, even if the tip hung lazily. It gave her confidence that even if her body was tired, her cock was always ready for more.\n\n\"That was outstanding,\" Millie said, still hanging over the bar to stay up.\n\n\"Hottest thing ever,\" Cindy agreed.\n\n\"Can you imagine that we might both have gotten pregnant already?\" Millie said, turning to her wife.\n\n\"You will look amazing with a big belly,\" Cindy said, smiling at her wife.\n\nIt was a sweet moment between two people who were truly in love. Alina looked on as they looked into each other's eyes. It was beautiful, but suddenly Alina's mind jumped to Julie and Rose. Wishing it was her that shared that kind of moment with them. Beatrice entered her mind too, making her feel sad that she always seemed to mess up their encounters, but making her wish that one day she will be able to share something special with all of them, just as Millie and Cindy shared something unique to just them.\n\n\"I think it is my turn again,\" Cindy said, having turned to Alina.\n\nAlina broke from her dream state. She didn't quite feel ready for another round, but an idea slipped into her mind, making her smile.\n\n\"First we need to change venues,\" Alina said, reaching out her right hand to Millie, helping her up, and then turning around and offering her left hand to Cindy. \"I want to have a look at that steam sauna.\"\n\nCindy stood up too, but as she heard what Alina wanted to do, she hesitated.\n\n\"What about our clothes?\" Cindy tried as Alina was pulling the two other women towards the door.\n\n\"We don't need clothes in the sauna,\" Millie answered, sounding more confident about the fact that they needed to pass through the gym in order to get there.\n\nCindy tried to protest further but Alina dragged her towards the door, out into the short corridor, and then out towards the floor. Straight ahead and to the left where most of the machines, but Alina could only see two people there. Instead, most people were to the right. At least a handful were on the thicker mat up towards the far wall, stretching or handling the lighter weights, doing all kinds of exercises, and a few more people were on the treadmills and exercise bikes in front of the mat. Alina wanted people to see them walk naked through the gym and walking between those two areas would certainly be the best chance for it.\n\nAlina firmed up her grip of the two women's hands and started to walk up against the wall. When they were getting closer, she saw that people were noticing them, stopping mid-movement as they saw three naked ladies walking towards them. When they reached the slightly curved aisle of bikes and treadmills Alina turned and started to walk where everyone would be able to see them.\n\nShe felt her cock harden up a bit, clearly liking the attention giving by all the women in the gym. Some seemed to be mortified, but most seemed to be captivated by the sight, even if Alina couldn't know it was because of her, Millie and Cindy, or the fact that they were all walking there naked together. She could also feel how scared Cindy was. She kept falling behind, clearly not wanting to be where she was, and Alina would drag her up, making Cindy take a few fast steps to catch up, only to fall behind again.\n\n\"Hey Millie, do you know if there is any room left in the 7 pm CrossFit group tomorrow?\" a beautiful blonde woman, that seemed a bit stuck up, said.\n\nAll three of them stopped so that Millie could answer them.\n\n\"I think it might be full, but you can check the website, or talk to Jenny at the desk,\" Millie answered.\n\n\"Ah, I was hoping you would know. I guess I will see if Jenny can help me,\" the stuck-up woman said. \"Wait, what is that in your face, Cindy? Is that...\" she added, looking over at Cindy's cum covered face. Then she looked over at Alina's cock, making her blush even more. \"What, what, what have you been doing?\" she stuttered out.\n\nMillie looked like she had been enjoying the walkthrough, but now when she realized that her wife's face was covered in cum and that everyone had seen it, she turned beet red too. Cindy must also have forgotten that her face was plastered, but after bringing up a finger to check, she clung her strong hand around Alina's, walking as fast as she could while pulling Alina. \n\n\"Sorry I need to go. Check in with Jenny,\" Millie said before she too got dragged away as she didn't want to break her handholding with Alina.\n\nCindy found the first door to the sauna area, finding that it was locked and that she didn't have her digital key with her. Alina came to the rescue as she unlocked the door, and then Cindy burst through it and through the small corridor to the steam sauna room. \n\n\"Why didn't you tell me I had cum in my face?\" Cindy said, pulling her hand back from Alina and up to her cum covered face.\n\n\"I didn't even notice,\" Millie excused herself.\n\n\"There was so much going on that I didn't think about it,\" Alina tried, knowing she had messed up.\n\n\"Did you see the look on Mrs. Bandon's when she noticed it? I thought I would die from embarrassment,\" Cindy said. \"We need to do that again sometime. It was so exciting,\" she finished.\n\nAlina breathed out heavily. For a moment she was sure that Cindy would blow up, but lucky enough she found it exciting. She even took the cum from her fingers and licked the cum off from them. Alina agreed that it was exciting. Walking naked so that everyone could see them. She figured at first everyone must wonder if they just had sex, or would go somewhere they could have sex, but when they found out Cindy was covered in shiny, white cum, they must all know what was going on.\n\n\"Share some of that,\" Millie said to her wife, stepping up close to her to get some of the cum from her wife's face.\n\nAlina turned her attention to the room. It was full of warm steam making the room look like it was veiled in fog. It warmed her up, and breathing felt so easy as the warmth seemed to clear up any problems there could be in her lungs and pathways. The room seemed to be covered in light blue, fake tiled linoleum that even spread out over the seating that was up against the far wall. After the walk, and seeing the couple share her cum again, Alina knew that she was ready to get the show started again. She walked into the room, climbing up to the second seat, and sat down looking out on Millie and Cindy. Her cock had started to harden, and it danced happily from left to right as if it was trying to pick which of the two ladies it wanted.\n\n\"Who's next?\" Alina asked, getting the two naked, fit, beautiful women's attention.\n\n\"Me,\" Millie and Cindy both answered.\n\nThey looked at each other, and then they both started to scramble to get to Alina. Cindy was faster, showing her agility as she jumped up to the second seat effortlessly, while Millie instead kneeled down on the first step between Alina's legs, beating her wife to the fierce cock by taking the shorter path.\n\n\"No fair,\" Cindy complained as Millie grabbed the cock with both hands and started to kiss it.\n\n\"It tastes like me so it must be mine,\" Millie said between kisses.\n\n\"Why don't you share it,\" Alina said, liking the idea of having both of them please her.\n\nAlina couldn't believe her luck when Cindy put both hands on her cock too, her lips and tongue starting to lick it next to her wife's. She imagined it was tasting like a mix of her and Millie's cum, and she could easily tell that both Cindy and Millie loved it. Eventually, both ladies started to have their lips touch, making them try and battle for the right to suck the cockhead. Cindy won the first fight, and Millie accepted her defeat by licking cum from her wife's face. \n\nWhen Cindy's face was clean, Millie tried to fight her away from the hard, throbbing cockhead, and to Alina's luck, it led to both women ending up in some sort of kiss, with the glancing cockhead sandwiched between both women's lips. Alina had worried about her recovery, but now it felt like her balls were working in overdrive, making her worry she would pop again. She tried to push the pleasure away, as she watched her lovers kiss and suck, but eventually it was starting to be overpowering. She needed to change the pace.\n\n\"I need one of you to ride me,\" Alina stated.\n\nAgain, both women started to scramble, but even if Millie had a firm grip of Alina's cock, Cindy now had the supreme position so that she could swing a leg over Alina and get on top of her. Millie helped hold Alina's cock as her wife lowered herself halfway down.\n\n\"God, this big cock will be the end of me,\" Cindy moaned.\n\nAlina didn't mind trying to make that a reality, but she was glad that Cindy was riding her slow and shallow. The strong, juicy pussy gripping her hard cock and stroking it to pleasure. It felt good. The rejuvenating steam and the slow sex giving her more and more energy back. I didn't take long before Cindy started to moan heavily. She was only taking half of Alina's cock, but it was clearly more than enough to make her feel good.\n\nAlina felt how Cindy fell against her, holding on to her shoulders as she was riding her. Cindy was getting close, and Alina moved her hands to Cindy's hips, starting to help her get lower on her cock. Taking more of it as Alina started to thrust upwards. When Alina first felt her cock bottom out, it caused Cindy to grip her cock like her pussy was possessed, gritting her teeth, and then the older woman exploded into orgasm. Her body shaking as violent moans filled the sauna. Alina pounded her cock up into Cindy all through her vibrating climax, but as the orgasm subsided, Alina slowed down and lifted Cindy off.\n\nMillie understood what was going on and quickly got up to try and take Cindy's place, but Alina stopped her.\n\n\"First you need to clean your wife's juices off my cock,\" Alina said.\n\nMillie eagerly obliged. Starting by licking the bounty of Alina's big balls, but quickly moving her tongue bath up the shaft, trying to clean all of it before finishing off with the head. When she felt like she was done, she jumped up over Alina and tried to fish for the young girl's cock. This time Cindy came to the rescue, aiming the hard cock up into the air so that her wife could claim it. Millie sank all the way down in one swift swoop. Taking a few seconds to moan from the deep penetration.\n\nWith her feet planted beside Alina's hips, and her hands resting against the upper half of Alina's stomach, Millie started to ride Alina fast. Alina had her hands on Millie's body for support, but Millie showed that she also was strong and agile, just like her wife. Millie was moaning loudly, and Alina couldn't help but join her in loud moaning. Cindy didn't want to be left out and got down to take Millie's old place on her knees between Alina's legs. Alina thought she might go for her balls, but instead Cindy dove into Alina's pussy, licking it passionately.\n\nThe surprising pleasure made Alina bite down hard. She was close to losing control and tried to save it by thrusting upwards into Millie, making their bodies clash loudly together. For a moment she thought it might work, but then she realized it only made things worse, but at that point it was too late to stop it. She gritted her teeth as Millie was riding her cock wildly and Cindy was eating her pussy. She felt Millie tighten up and her body tensing. Alina wanted the release too, but something in her mind stopped her, thinking it was Cindy's turn to get her cum. Millie was thrashing around on top of her, and Alina was using all her strength to keep herself from cuming too.\n\nWhen Millie finally stopped, Alina quickly let her cock slip from her. To her surprise, Cindy moved from her pussy and took her cock instead. Sucking and licking on it, and again Alina struggled to keep her throbbing cock from exploding. Millie got off her, and Cindy seemed to want to take her place again, but Alina halted her, keeping the fit Cindy down on her knees, as she got down behind her, pushing Cindy against the step so that her upper body lay on the higher one, and then Alina pushed her hard cock balls deep into her.\n\nThere was no holding back now. Alina went all out. She knew it wouldn't be long until she came, but she wanted to show Cindy what her cock could do. She had said that Alina's cock would be the end of her earlier, and now Alina wanted to prove that it could very well be the case. She pulled out almost all the way, and then smashed forward giving Cindy all of it.\n\n\"Oh God,\" Cindy moaned each time Alina drove home. \"Oh God, oh God, oh God,\"\n\n\"You hear that Millie? I'm your wife's new god,\" Alina boasted, feeling each \"oh god\" from Cindy spur her on to fuck her harder.\n\nMillie was sitting next to Cindy, stroking her own pussy as she was watching her wife getting hammered. Alina figured that usually Millie was the one doing her wife like this, and she didn't seem to mind that it was now a supreme cock showing her up.\n\n\"Fuck her, Goddess. Give her your seed. Your divine offering,\" Millie said, stroking her clitoris faster.\n\nAlina felt her balls churn. They were full of hot cum, and it would disperse any second.\n\n\"Oh God, oh God, claim me. Claim my womb. Oh God, oh God, oh God,\" Cindy moaned as loudly as her voice would allow.\n\n\"I'm cuming,\" Millie moaned, frantically fidgeting with her nether regions\n\n\"Me too. Cuming, cuming all over your massive cock,\" Cindy screamed.\n\nAlina started to cum too. Moaning loudly as she started to empty her balls deep into Cindy's fertile pussy. Feeling her powerful and bountiful semen flood the outside of Cindy's womb. Counting Evelyn and the blowjob with Cindy and Millie, it was the fifth time she was cuming today, but her balls seemed to be gingerly working overtime because it felt like she would never stop pumping cum into Cindy, and when her balls finally stopped self-draining, Alina had to grab a hold of Cindy's hips to not fall backward. Instead, she guided herself to the side on wiggly legs and managed to sit down on the second seat next to Cindy, with Millie on the other side.\n\n\"You have never been hotter than today,\" Millie said, pulling her wife up to a kiss.\n\n\"Probably because I have never been more full of cum,\" Cindy answered.\n\n\"We one hundred percent need to buy a bigger dildo for the strap-on,\" Millie said, referring back to Cindy's statement from the other room.\n\nAlina half sat and half laid down as she was trying to find her breath. Three down and one more to go before she had fulfilled her promise of filling each woman with cum twice. She had to find a little bit of time to recover again, but this time it would be easy. The steam and heat in the sauna had them all drenched and warm.\n\n\"We need to go somewhere to cool off,\" Alina suggested.\n\n\"It was hot having sex in here, but it might be a little too hot,\" Cindy agreed.\n\n\"Let's go to the pool area,\" Millie said.\n\nMillie stood up, putting her arms at her hip as she looked down on Cindy and Alina that seemed to be close to being passed out. She reached down to help her wife up, and even if she resisted a bit at first, Millie got her up. Both women then got to Alina, grabbing one hand each to pull her up.\n\n\"This isn't the time for being knocked out, but for getting us knocked up,\" Millie said, trying to encourage Alina.\n\nWith that Alina got up, her knees still feeling weak, but Millie and Cindy helped her find her balance, and they walked together, holding hands, out of the sauna. Alina felt her balls bubble and they felt terribly sore. Would they really be able to get another big barrage of cum ready? Fucking older women was the best thing she knew, but they were all so greedy and tested the limits of her stamina. She knew she wouldn't be able to give up. Not without fighting to the bitter end. If she would end up dying, this would be the way to go.\n\nThey exited the sauna and this time went to the left in the small corridor to get to the door leading to the pool area. There was a scent of chlorine in the air, but Alina didn't mind it. They couldn't see anyone else in there, and Millie quickly let go of Alina's hand, taking a few quick steps up to the thin swimming pool and dove into the water. Her head appeared a few seconds later in the middle of it.\n\n\"I desperately needed that after the warm sauna,\" Millie said gingerly.\n\n\"You should get in there too,\" Cindy told Alina.\n\nAlina wanted to take Cindy with her, but could sense that she didn't want to get into the pool, so instead she also got up to the edge, more carefully than Millie since she knew it could be slippery next to a pool and she didn't want to injure herself, and then bent down and gently jumped into the water with her feet first. Just as the sauna had been refreshing at first, the cold embrace of the water rejuvenated her.\n\nCindy walked up to the edge too, sitting down and dangling her feet into the water. Alina thought she looked very cute sitting naked like that. How lucky was she to get to experience something like this? When she looked over at Millie again, she was gone, and then the next second the black haired emo flew out of the water, her face just inches away from Alina's. Alina was shocked at first, but when she felt Millie's lips against her own, she answered the surprise kiss for as long as it lasted.\n\n\"As nice as this water is, I think I need something warmer again,\" Millie said, breaking the kiss.\n\n\"Should we try the hot tub?\" Cindy said, eagerly.\n\nMillie brushed herself against Alina as she got to the edge of the pool, her body sinking down slightly, and then her beautiful naked body burst up from the water, her hands holding on to the edge, and then Millie was standing up on the floor dripping water everywhere. Alina thought about trying the same thing but didn't want to make a fool out of herself, so she swam to the ladder instead, using it to get up from the pool.\n\nMillie had already gotten up to the hot tub, turning around to wait for her wife that was just behind her, and they both stepped inside together, sinking down and then looking at Alina who was trying to not shiver as she stepped on the tiled floor. The cold water and the cold air feeling like they were bringing her core temperature down as it must have been shocked to leave the warmth of the steam room. Her two new friends made room between them, and Alina happily sunk down into the warm water between them, feeling her body quickly heating up again.\n\n\"I take it you're done for the day,\" Cindy teased, her fingers poking at Alina's limp cock.\n\n\"You look done,\" Millie added, her hand also going for Alina's cock.\n\nAlina could certainly see where they were coming from. Her cock had been in some state of hardness since they first started, but now it was lazily flowing in the water. She wasn't done though. Far from it. As long as she could stand, her cock would be able to stand too. She just needed a little bit of inspiration. She looked at the two women, trying to decide which one she should target first.",
        "\"I'm not done yet,\" Alina said.\n\nShe decided to go for Millie first, dipping her face into the water and finding Millie's right nipple with her mouth, sucking on it under the water. Millie seemed to be surprised, but she didn't protest as Alina was working on her chest. Eventually she was running out of air, trying to stay under for as long as she could, but eventually, she had to get her head up, gasping for air.\n\n\"Oh, you still have some fight in you,\" Cindy teased.\n\nAlina thought about giving Cindy's nipples a treat too, but with both women touching her cock, she felt it was starting to fill up with blood. She would show her just how much fight she still had in her. She stood up, feeling both women try to hold on to her cock but eventually had to let it go. She turned to Cindy, her half hard cock pressing up against her beautiful face. Alina grabbed her own cock, moving it to the side, and then slung it against Cindy's face. The wet heavy cock made a loud sound as it hit Cindy's cheek.\n\n\"I will show you how much fight I still have in me,\" Alina said.\n\n\"Wow, do that again,\" Millie said enthusiastically.\n\nAlina felt her cock harden. Millie wanted to watch her cock slap her wife's face? She had only planned to do that once, and then get her to give a blowjob, but now she wanted more. She wanted to slap her big, hard cock all over Cindy's face.\n\nAlina took a loose grip of her cock, and started to sway her hips sideways, and then back making her big cock sway in the air and crash into Cindy's cute face with a heavy slap. It hurt her cock slightly, and she realized this would bring her soreness level up, but the excitement was too strong for her to care about that. She swayed her hips again, wanting to improve her technique. After the fifth cheek slap, it made the perfect loud noise as her cock hit Cindy's face, making both of them moan. She felt her cock twitch. Did Cindy like getting slapped in the face as much as her wife liked to watch it?\n\n\"Have you ever done this to your wife before?\" Alina asked Millie, swinging her cock at Cindy.\n\n\"Once or twice, but it looks and sounds much more exciting with a gigantic real cock,\" Millie said, enthusiastically.\n\nAlina felt that hitting the same cheek was starting to hurt that side of her cock, so she shifted to try and slap the head of her cock against Cindy's forehead, but found that it was hard to get good leverage to that movement. Instead, she pushed her entire extra equipment into Cindy's face, loving how Cindy responded by fencing the shaft with her nose as she was sticking her tongue out at her balls. Her cock was dry now, and even with a tub full of water to use, she thought that the best way to get it wet again would be to use Cindy's mouth.\n\n\"Open your mouth and my cock wet again, so that I can slap you some more,\" Alina ordered.\n\nCindy obliged. Shifting her position so that her mouth found the head and swallowed it up, making sure it was a sloppy blowjob so that saliva ran down the shaft. When Alina was happy with it, she pulled out and this time swung her hips to the other side, making her cock move far out before turning her hips again making the heavy cock slingshot back hitting Cindy's cheek making a loud, wet sound. Cindy's other cheek had a shine to it, and Alina was making each slap as hard as she could to give her matching rosy cheeks. When her cock was starting to get sore again, she gave Cindy another dab on the forehead, and then sank into her warm mouth.\n\n\"Does it hurt when you slap your cock on my wife's face?\" Millie asked.\n\n\"A little. Probably a lot worse since you already made me came four times, but something about it makes me really hard too,\" Alina answered.\n\n\"I can tell. Your cock is amazing,\" Millie said, biting her lip.\n\n\"I'm glad you think so, because you are next,\" Alina said, pulling her cock from Cindy's mouth.\n\nWith a few quick steps in the water, Alina stood over Millie. The pale emo woman looked up at her with a mix of fear and admiration as she leaned back to avoid Alina's cock. Alina grabbed one of her pigtails, using it to pull her close, and then swung her cock as she had done to Cindy. It was a hard, heavy, wet, loud hit, making Millie gasp as it struck her pale cheeks. Alina didn't wait for a reaction but swung her cock again, making it slap Millie's face again. The steam room and diving into the pool had made the black makeup around her eyes run down her cheeks, and now as she looked up at Alina she looked like she had been through a battle, but still ready for more.\n\n\"Let's put some color on the other cheek too,\" Alina said.\n\nMillie quickly moved her hand away from Millie's head, and placed the other hand on the other side, as she shifted her position and swung her cock at Millie's other cheek. Again it made a loud, wet sound as the heavy cock slapped Millie hard in the face. Alina kept swaying her hips, her cock slapping Millie repeatedly, making the older woman gasp each time, her mouth opening more and more each time her face got slapped with the massive cock.\n\n\"Suck it,\" Alina told Millie.\n\nShe let her cock rest on Millie's face as she waited for Millie to follow instructions. Part of her was slightly worried Millie hadn't appreciated getting slapped around, but she also felt very confident that no matter what she did to Millie right now, she would love it. Millie didn't disappoint her as she fished the cock from her face and stuck it in her mouth.\n\n\"I can't believe she is letting you do that,\" Cindy told Alina.\n\n\"Do what?\" Alina asked.\n\n\"Whatever you want. She is usually in charge, sexually at least, and now she seems to enjoy you doing whatever you want with her. It is exciting,\" Cindy said.\n\nAlina looked down on Millie sucking her cock. Her make up looked even more ruined now when she had her eyes closed enjoying the treat in her mouth, with the light shine of red on her cheeks. It excited her that Millie had surrendered to her. Could it be that she had been waiting for someone that could fill that need in her? It felt way to simple that all she needed was an oversized cock to make her submit, but Alina felt that it had a big part in it. \n\n\"You didn't know she loved big cocks?\" Alina asked.\n\n\"Yeah, but only when she gets to fuck someone with them,\" Cindy answered.\n\nAlina smiled to herself as she pulled her cock from Millie's mouth, and started to assault her face with it, leaving big wet marks.\n\n\"Is that it, Millicent? You always wished you had a grand cock like mine?\" Alina said as her cock slapped all over Millie's face.\n\nMillie tried to answer, but each time she tried to say something Alina's cock got in the way. Alina had a loose grip at the base of her cock, using it to get extra leverage into smaller hip movements that could still have an impact. Her cock was sorer than ever, and she could see Millie getting flustered too, and she let go of Millie's head, taking a big step into the middle of the hot tub, and sank down into the water so she sat down on the opposite side.\n\n\"Fuck,\" Millie said, diving across the hot tub after Alina.\n\nAlina needed a minute to regain control over her nether regions, but Millie didn't allow it. Alina saw how Millie aimed for the cockhead that stuck up from the water and dove down on it with her cyan lips. First just sucking on the part that broke free from the water, but to Alina's surprise, Millie let her lips sink lower, forcing her own head down under the water as she let Alina enter her throat. Alina gripped hard around the edges of the tub, caught off guard by the surprise deepthroat.\n\nCindy came over too, cupping Alina's breasts and giving each nipple a soft kiss, before coming up to kiss Alina passionately on the lips. Millie quickly came up for air, and then dove down again, sinking Alina's massive cock balls deep into her mouth. Alina put her hand on Millie's head while kissing Cindy. She felt Millie start to struggle slightly as she tried to push up, but Alina held her down, knowing she could handle more. Her cock was pulsing inside of the hot emo girls throat, and she knew that the only thing that allowed her to not cum now was that she had already come so many times. Still, the sense of power was overwhelming. Kissing one wife while the other was sucking her cock under water, struggling for air but still working her tongue down on her balls.\n\nWhen she felt Millie push hard against her hand, she grabbed her hair and pulled her up. Millie gasping for air as she looked at her wife kissing their new lover and impregnator.\n\n\"Turn around and show me your pussy,\" Alina ordered Millie. \"I'm gonna fuck you.\"\n\nThey didn't break the kiss but Alina spoke through it. She let go of Millie's hair and heard her scramble around the water. She stood up again, feeling her cock press against Millie's behind, and Cindy followed with her so they could still kiss. Alina reached down and found Millie's pussy with one hand, while the other guided her cock into her, claiming her pussy with one long, deep stroke.\n\nThe water offered some resistance, preventing Alina to fuck as hard as she had wanted, but instead went with long, slow strokes. Millie pushed her ass back, making them bop their bodies together. Alina held one hand on Millie's hip, and moved the other up to caress Cindy's face as they continued to kiss. Feeling Millie's pussy around her cock again felt wonderful, but it was the kiss that made her mind buckle. Cindy showed so much in it. As if her very being was full of passion, and it flowed out of her lips and into Alina. She knew that this was what she had seen between the two wives before, but now it was directed to her. She felt like she had wedged herself in between them, and now their love flowed through her too.\n\nEach wave of love that came from Cindy, made her hips move faster. Push against the water as her hips clashed harder into Millie. She could hear her moans in the background, even if her own and Cindy's almost overshadowed them. She felt Cindy's hand all over her body as the kiss grew in intensity. Her head was spinning making her get lost in the kiss. She didn't hear when Millie's moans stopped, but when she felt Millie's body get pushed away Alina ended the kiss, feeling like the rest of the world returned. She felt Millie's pussy spasm around on her cock as she followed Millie forward, the old emo barely hanging on to the edge of the tub as her whole body was shaking.\n\n\"Are you alright?\" Alina asked.\n\n\"I-\" Millie said, her voice shaking. \"I can't stop cuming,\" she managed to finally get out.\n\n\"That means it's my turn?\" Cindy said, gleefully.\n\n\"No. I need my second load,\" Millie said. \"I've earned it.\"\n\nAlina felt Millie pull away, causing her cock to slip out, and then she got up on her knees on the seat in the tub. Her sexy butt being lifted out of the water allowing Alina perfect access to Millie's juicy pussy.\n\n\"I never knew I would ever feel this way about a cock, but I love yours, Alina. I need you to cum inside of me. Get both horny lesbian wives pregnant with your wonderful seed,\" Millie said.\n\nAlina had thought about forcing her to take a break, but after that speech she knew it wouldn't be possible. She needed to cum inside of her, no matter what it would take. This had become more than just a job. More than just pleasure. This was about fulfilling life long dreams for people who needed her help. Building bonds that would last a lifetime.\n\nDetermined, Alina took the steps up to Millie. She let her cock slide between her buttocks a few times, then she took a hold of her cock and slapped Millie's ass cheeks with it. They felt strong and firm yet had a nice softness to them. When she felt ready, she slipped her cock in between the lips, slowly letting her cock sink in all the way into Millie's wet pussy.\n\n\"I'm going to need to fuck you hard,\" Alina warned. \"Are you sure you can handle more of that?\" Alina asked, knowing Millie would agree to it, but still wanting consent.\n\n\"Yes, anything. Just cum in me,\" Millie said.\n\nAlina started to move slowly. Going in from below, making her balls drag through the water as her cock started to work on building up a pace. It felt like Millie was close to her limits, but Alina knew that she would need to test them even further. She hadn't been able to pay attention to how many times Millie had cum while Cindy had been kissing her, but she figured it must have been a lot. She already felt Millie's pussy contract in a way that meant she would cum again soon. It couldn't be helped. Alina felt her balls were full, but they would need a lot more to be ready to fire, meaning Millie's orgasmic ordeal was far from over.\n\nAlina firmed her grip of Millie's hips, starting to pound hard into her. Her sensitive cock feeling every muscle of Millie's pussy as they worked on her hard rod. She looked down to see her cock work on that previously tight looking pussy that now stretched out impossibly around the massive intruder. Her eyes found the other hole. The inviting rose waiting for her. She spit right on the anus and moved one hand to start to gently rub it while she fucked Millie's pussy hard.\n\n\"You know this will be mine soon too? After I cum inside of you, it means you're offering up your last hole to me. I own your mouth. I own your pussy, and after this, I will own your ass too,\" Alina proclaimed. \"is that what you want? Is that why you're so desperate to have me cum in your pussy again? You know you're already pregnant, but this load of cum you will take in your pussy will force you to give your asshole to my cock. Make me own all three of your holes.\"\n\n\"Fuck,\" Millie said. \"Fuck, fuck, fuck.\"\n\nAlina felt Millie orgasm. She didn't know if it was her speech that unleashed it, but she certainly hoped it helped. She kept fucking Millie while rubbing her tender asshole, feeling how her pussy tried to strangle her cock. Millie seemed to be on the edge, but Alina felt that Millie's pussy was just like her cock, being as strong as ever before even in these trying times.\n\n\"Please hurry,\" Millie moaned. \"My pussy is so sore,\" Millie groaned.\n\n\"It's because your body wants to give me your ass,\" Alina stated, knowing it sounded like nonsense.\n\nShe pounded away. Water splashing as their bodies clashed.\n\n\"Yes,\" Millie moaned after a few seconds of silence. \"I want you to have all of me,\" she added.\n\nAlina felt her balls bubble. Millie's surrender was making her get ready for her fifth release. When she felt Cindy grab her butt, and dive her face in to lick her pussy, she almost lost it. Her one hand grip of Millie's hip got so hard her knuckles whitened, and she sank her finger one knuckle deep into Millie's soft ass. It only took a few seconds from there, and she felt her balls twitch as her rock-hard cock started to unload.\n\n\"Take my cum. Take my fucking cum,\" Alina yelled.\n\n\"Fill me. Fill me up,\" Millie screamed.\n\nRope after rope spewed deep into Millie. Filling her pussy up with more cum than it could possibly hold. Alina felt her knees start to give again, and her cock and balls got sorer and sorer with each jet of cum it fired until it ran dry. Alina reached back and grabbed Cindy's hair, taking a firm grip of the strong ponytail, pulling her into position and slapped her cum covered cock a few times in Cindy's face, before jamming it into her mouth for cleaning.\n\n\"I think I've died from cuming too much,\" Millie said, hanging over the edge of the tub.\n\n\"You look like it. Maybe that is what you get for turning into a total cockslut, just like me,\" Cindy teased, having completed her task of cleaning Alina's cock.\n\n\"If we had found a cock like Alina's, I would have done it years ago,\" Millie confessed, having regained enough composure to sit down in the tub.\n\n\"I need a cold shower,\" Alina said, sliding down to sit in the middle of the tub.\n\nAll agreed. Alina had fulfilled her duties, and now she would claim her price. Her cock felt so sore it might fall off, but she knew it would be up to the task if it could just get a minute or two to recover.\n\n\"Should we use the showers in here?\" Millie asked.\n\n\"Dressing room,\" Alina quickly answered.\n\nAfter her time with the big chested women yesterday, she knew the shower area here wasn't very big. It was just for a quick rinse, while the dressing room had big, nice showers that could house several people. It was nicer and would leave plenty of room for full-fledged butt fucking.\n\n\"That means we need to walk naked through the gym again,\" Cindy said.\n\nAlina thought Cindy might be upset about that part, but the athletic woman jumped away to get a towel, wiping the worst of the water away. Millie came right behind her, taking the same towel to dry her body and then using the towel to put her hair up, something Cindy didn't need to do as she had been able to keep most of her hair dry, even with the cockslapping. \n\nAlina was the last to get out of the tub, being able to admire the two wonderful asses she was about to conquer. When she got to them, they both attacked her with towels, drying her body. Alina thought that they maybe could put one of the gym towels to cover up with if they wanted to be humble walking through the gym now, but Cindy went for the door without one, and Millie just with the one on her head, making the decision easy for Alina to go fully naked too.\n\nThis time they didn't go out together, but Cindy and Millie went out first, and Alina walked behind them, caring more about their behinds then what was happening in the gym. They came out next to the mat with all the ladies working out and walked up to where they had made the pass-through earlier, again being in the perfect shot to be seen by everyone. When people started to turn their heads, Cindy and Millie waited, holding out their hands. Alina took one hand each and they walked naked together so that everyone could see them.\n\n\"Are you done for the day?\" One of the big chested women from the day before asked.\n\nAlina didn't know who she asked, or if she meant working out or having sex, but she made sure she was first to answer.\n\n\"We'll finish it off in the shower,\" Alina stated. \"One final bit of stretching.\"\n\nEveryone seemed to be happy with that statement, allowing the threesome to walk past. They took a left turn instead of finding the sauna door again and got to the mid gym dressing room door. Inside there were a few more ladies, and Alina recognized how the stuck-up lady was changing next to someone she figured was her friend as they had been chatting, but turned silent as they watched the new arrivals.\n\nThe left shower room had occupants, so Alina went for the one on the right. She already felt rejuvenated to some degree, having watched the beautiful butts and walking through the gym, but her merchandise still felt sore and she was hoping a warm shower would be the last pick me up she needed. Especially with Cindy and Millie joining in next to her. The water raining down over her tired body felt life-giving. Cindy tried to keep her hair out of the water, but she saw how Millie undid her pigtails and swirled her jet-black hair around as the wet locks found their natural place. Suddenly her cock was rock hard again, ready for its next task.\n\n\"Which one of you is first?\" Alina asked.\n\n\"Now?\" Cindy asked, looking shocked. \"I thought we would do that some other time.\"\n\n\"You heard her out there. The final stretching,\" Millie said, \"and you are absolutely going first so I can see if it is humanly possible to get something that big into an opening that small.\"\n\nAlina jumped out from under her own shower and got under Cindy's. Her hard cock laid itself against the surprised woman's butt and back. She grabbed her breasts from behind, loving how they felt in her hands, and how Cindy's body pressed against hers. They remained like that for a few moments, Cindy lightly moaning as they stayed close under the falling water, but eventually, she leaned forward, putting her hands on the wall, and jutted her butt out trapping Alina's cock between her cheeks.",
        "\"Just do it. Having that thing in my bum will kill me, but I'm starting to feel I might die from horniness if I don't get to feel it too. I need your gigantic futa cock,\" Cindy said.\n\nAlina had to move her hands from Cindy's chest, and instead put them on her firm buttocks. She parted them, and a beautiful violet flower came into view. It looked so small, and even smaller when her cockhead came close to it, looking like it could cover it several times over, but Alina pushed forward, feeling Cindy's anus open up slowly for her. Water ran over Cindy's ass and Alina's cock creating a wonderful view, but Alina liked it even better when Cindy's asshole seemed to swell open, taking the engorged head inside of it, and then closing firmly as the head had fully disappeared. Alina moaned, but Cindy moaned even louder. \n\n\"Fucking tight,\" Alina said.\n\n\"Fucking big,\" Cindy countered.\n\nAlina pushed forward. Cindy seemed to pull away as the massive intrusion was difficult to handle, but Alina followed with small steps until Cindy's body pressed up against the wall. There was nowhere left to escape, and Alina could claim Cindy's ass with all of her cock. Slowly building up a rhythm of powerful pounding against the tiled walls, creating a synergy of loud sounds as their wet bodies clashed together, but also Cindy's body would slightly leave the wall as Alina was pulling back, and then smack into the wall as Alina drove in deep.\n\n\"I'm gonna cum,\" Cindy panted.\n\nThe tight passage was massaging Alina's cock as she was fucking Cindy hard. Feeling her cock getting the royal treatment as Cindy's orgasm was approaching.\n\n\"Make her cum. Make my wife cum from getting her ass pounded. Cum on that big fucking cock, wifey,\" Millie encouraged.\n\n\"Fuck yes, fuck yes, fuck yes,\" Cindy screamed.\n\nThat was all the Cindy needed, as she started to thrash around at the wall. Alina tried to keep on pounding her, but quickly realized that Cindy's strong muscles were too strong, and she instead held her cock deep, holding Cindy against the wall as they both enjoyed her powerful orgasm,\n\nWhen Cindy calmed down, Alina lifted her up, using her rock hard cock deep in Cindy's asshole as leverage, and turned around with her and carried her out of the shower to the middle of the room, where she gently put her down as Cindy more or less collapsed on the floor, causing Alina's cock to slip out of her.\n\n\"My turn,\" Millie said, more eager to get the same experience as her wife than concerned of her wife laying on the floor trying to recover from the anal orgasm.\n\n\"First you'll lick your wife's ass juice from my cock,\" Alina said. \"Clean it really good with those pretty lips.\"\n\nMillie kneeled, biting her lower lip as she carefully reached out to grab Alina's cock.\n\n\"This is usually Cindy's job,\" Millie said.\n\n\"Everything she does for you, you will now willingly do for me, Millicent,\" Alina said, pushing her hips out towards Millie.\n\nMillie accepted her fate, taking the head between her lips, and letting it slide into her mouth. Sucking gently on it as the taste of her wife's ass filled her mouth. Alina had expected that she wouldn't like it, but Millie moaned pleasantly before letting the cock slip from her mouth so she could lick all over the base.\n\n\"I told you she'd do it,\" someone said.\n\nWhen Alina looked up, she saw several women watching them from where the dressing room and shower room met. The two big chested women from the day before, fully dressed in their workout clothes. The stuck-up woman and her friend fully naked holding their towels and other shower gear, as well as two women with towels around them that must have come from the other shower room. They all seemed keen to watch what was happening.\n\n\"Good job licking your wife's ass juice from my cock,\" Alina said much louder than necessary for just Millie. \"Now face down and ass up, so I can show you the pleasure of getting your ass fucked.\"\n\n\"I need lube,\" Millie said, while still turning around on her knees, putting her face down and pushing her ass up. \"My wife might be used to it, but I need plenty of lube.\"\n\nAlina looked up at the women watching.\n\n\"I got some,\" a new woman said that just came in.\n\nThey all watched as she put her bag down, ripping it open and wildly searching for it amongst all other things in there.\n\n\"Got it,\" she said, leaving the bag as she ran in with the bottle of lube to Alina. \"Water resistant too.\"\n\n\"Why don't you put it on me?\" Alina suggested.\n\nThe woman smiled happily, her eyes beaming excitingly as she looked down on Alina's cock. She opened the bottle and tried to squeeze lube out in her other hand. At first, it didn't want to come out, making her shake the bottle desperately until lube poured out. When her hand was full, she put it on Alina's cock, smearing the lube over it. She looked very nervous as her hand danced back and forth. Hesitant yet so eager and almost clumsy from being flustered by the situation.\n\n\"Sorry,\" the woman said. \"I've never seen a cock like this before. They are very lucky to get to have it. Me too of course. Thank you for letting me touch it,\" she added, speaking way to fast.\n\n\"The honor is mine. Getting to be with such beautiful women. You too,\" Alina said, smiling at the woman. \"Would you mind putting a glob of lube on Millicent's little anus too?\"\n\n\"Yes, of course. Sorry,\" the woman said, taking her hand from Alina's now lubed up cock, and hesitating if she should use her hand to apply lube to Millie too, before settling to taking the bottle and squeezing it out directly on Millie's behind.\n\n\"I'll take it from here,\" Alina said, lining up behind Millie.\n\nThe woman backed away, thinking if she could stay up close for a little longer, but after looking at the other onlookers she decided to go back and join them, holding the bottle of lube close with both hands.\n\n\"Are you ready to become my little butt-slut,\" Alina asked.\n\n\"Yes, just go slow,\" Millie answered.\n\nAlina rubbed her cockhead against Millie's final opening spreading the lube even more. She knew that more foreplay would have been better, but they had been fucking for hours and with Cindy it had worked well.\n\n\"Look up at the women watching you find your true self. Look at them as they see you become my three-hole servant,\" Alina said.\n\nWhen Millie looked up from the floor, Alina started to push her cock forward. Millie tensed up, making Alina stop moving forward and instead moved her cock around the opening until she felt Millie relax again, and then she took advantage and pushed forward. The lube did its job, allowing Alina to slide inside with minimal resistance as the head got sucked in, but then Millie tensed up again.\n\n\"Oh, hell, that is big,\" Millie groaned. \"How the hell did you take all of it,\" she asked her wife that had recovered and was sitting next to them.\n\n\"It hurts, but it will feel so rewarding when you got all of it,\" Cindy promised.\n\n\"Do you want all of it?\" Alina asked.\n\n\"Yes,\" Millie said meekly.\n\n\"Beg me for it. Beg me to let you take all of my cock in your virgin ass. Beg me in front of your wife and all these women,\" Alina said, feeling the rush of having hot women submit to her, and doing so openly.\n\n\"Please,\" Millie said, a clear want in her voice, but not loud enough to please Alina.\n\n\"Louder,\" Alina said, spanking Millie hard.\n\n\"Please,\" Millie yelled.\n\nAlina felt her cock flex, but she spanked Millie again wanting further submission.\n\n\"More. Tell me what you want. Tell everyone what you want me to do,\" Alina said.\n\n\"Please give me more. Give me more of your wonderful cock,\" Millie said, her voice getting more and more excited. \"Claim your reward for giving me and my wife so much cum. Show me why my wife loves anal. Show me how you made my wife cum from giving you her ass,\" Millie continued as she started to push her ass back against Alina, making the cock go deeper.\n\nAlina moved slowly as Millie spoke, using the lube to allow her cock to stretch her beggar. When Millie started to move her hips against her she knew she was truly ready, and after adjusting her own position, she started to force her cock deeper. Inch by inch she sunk further into the tight asshole, feeling Millie crunch down on her cock every now and then, making her stop, but as Millie relaxed again, Alina allowed her cock to dive deeper. She knew Millie was struggling, breathing hard, but since she didn't protest, Alina ventured forth until she felt the older woman's backside hug her hips.\n\n\"You're mine,\" Alina proclaimed. \"All your sweet holes now belong to me and my cock.\"\n\n\"Fuck her,\" Cindy said. \"Fuck her good,\"\n\n\"Is that what you all want to see?\" Alina asked the women watching.\n\nThere were more women now. At least ten, and most of them nodded, even if they seemed to be slightly concerned if Millie could handle it.\n\n\"I can't hear you,\" Alina said, flexing her cock in Millie, making her moan.\n\n\"Yes. Fuck her,\" was heard from several women in the crowd.\n\nAlina started to move her hips. She had planned to go slow with Millie, but the heat of the moment was getting to her, and it was so easy to slide back and forth with the bountiful lube. It only took her a few pushes before she was taking Millie hard, driving her face down into the floor.\n\n\"Fucking hell your ass feels good,\" Alina said. \"You like me fucking your ass, Millicent?\"\n\n\"Yes,\" Millie groaned. \"Just too hard. You will break me.\"\n\n\"Hell yeah, I will,\" Alina answered.\n\nLooking at the women watching, Alina could feel their excitement. Their envy of Millie. They wished they were her. Getting fucked by the most impressive cock they had ever seen. They would all bend over for her, just as the big chested women already had, and she felt sure that after today many of them would get to feel her cock in the future. \n\nShe could feel that Millie was getting close to an orgasm, but suddenly she felt her balls get ready to cum. It was too soon. She tensed up, resting for a second or two, then pulled out of Millie's ass, her cock swaying in the air making the other women gasp with excitement. It took a few seconds before she was back in control.\n\n\"Clean your wife's juices from my cock. Show everyone how much you love sucking on my cock and how much you love your wife's ass,\" Alina authorized Cindy.\n\nCindy willingly gave the shaft a few licks, and then sunk her mouth on it, savoring the taste for a little before she let the head sink deeper, taking it all the way down her throat.\n\n\"How the hell are they able to handle a cock that big?\" one of the women watching said, her voice filled with shock.\n\n\"Put me back in your wife's ass,\" Alina told Cindy.\n\nSlipping Alina's cock out of her mouth, Cindy took a firm hold of it and guided it to Millie's asshole that still looked it was struggling to find its old shape. Cindy leaned up and over it, spitting saliva on it, and then pulled the hard cock towards the opening. When Alina made contact, she pushed forward, making Cindy let go of her cock as it sunk back into Millie.\n\n\"Make her cum,\" Cindy demanded.\n\nAlina shifted her upper body forward, being in a position that would allow her to drive her cock more downwards than forward. She gave Millie a few long and slow strokes before she started to go faster again. She could feel how the ass muscles tried to clamp down tightly around her. Hold her in place so that she couldn't fuck Millie as roughly, but the lube seemed to make it impossible to stop Alina's cock.\n\n\"I can't take it,\" Millie groaned. \"I'm gonna cum.\"\n\nAlina could feel Millie's muscles twitching, dancing on the edge of an orgasm. It made her pound the amazing asshole even harder, again and again, until Millie screamed out loud.\n\n\"Fuck. Fucking fuck me. Fucking kill me with that divine cock,\" Millie screamed as the orgasm hit.\n\nAlina had learned her lesson from Cindy, burying her cock deep, and enjoying the pleasurable ride of having her cock balls deep in the ass of an orgasming woman. She basked in the glory of having all the women watch her completely dominate Cindy and Millie. There were even more women now, all admiring her handiwork as Millie's orgasm ended, making her lay down panting on the floor. Cindy reached for Alina's cock, but Alina stopped her.\n\n\"I know you love tasting your wife on my cock, but I thought I should offer someone else a chance,\" Alina said, needing all of her strength to not give in to Cindy's beautiful puppy eyes. \"How about it lube girl? Would you come over here and suck my cock clean?\"\n\nThe woman with the lube bottle turned red, hesitating if she would dare to do that in front of so many people, but the other women in the crowd encouraged her and she took a few quick steps, still clinging to the lube bottle, until she reached Alina where she kneeled down next to Cindy.\n\n\"You don't mind?\" she asked Cindy.\n\nCindy took the lube from her and gave her a nod.\n\n\"It's actually pretty hot to have someone else taste my wife's asshole on Alina's cock. Have you ever tasted ass before?\" Cindy asked.\n\n\"I've never tasted cock before,\" the woman confessed, her face turning red from embarrassment. \"I've been married for 29 years and never had a penis in my mouth. I don't even use the lube for sex. I've heard of anal before, but this is the first time I actually confirm it's something people do.\"\n\n\"Are you still married?\" Alina asked.\n\n\"I signed the divorce papers last week. It's not official yet,\" the lube woman answered, her voice shaking as she looked up at Alina.\n\nAlina felt her cock throb in anticipation. She was about to feel a virgin mouth. She had believed the woman to be around 40, but now she wondered if she mustn't be over 50 to have been married for so long. Either way, she was stunning, with amazing eyes and shorter hair that didn't reach her shoulders dyed in a deep red color. Maybe to hide that it had started to turn grey.\n\n\"Lick it. Taste my wife on her cock,\" Cindy said.\n\n\"I can't believe I'm doing this,\" the woman said.\n\nThe woman stuck her tongue out, looking like she was hesitating a few times, before she went for it, laying her tongue against the shaft and letting it slide up to the head. It looked like she was anticipating that it would taste awful, but then her eyes lit up and she moved in for a few more licks.\n\n\"It's sweet,\" she finally said. \"Sweet and good,\" she added, sounding very surprised.\n\n\"Now suck on the cockhead,\" Cindy told her.\n\nEagerly she put her lips over the head, trying to take it into her mouth. At first, it looked like she would struggle, but then she fully opened her mouth, the cock stretching her lips, and she started to suck on it.\n\n\"Use your tongue. Make sure you get all the sweet ass juices,\" Millie said, having joined the other two women kneeling down in front of Alina.\n\nAlina felt how she started to use her tongue. Sucking and swirling her tongue around with increasing excitement. It was clear that she didn't know what she was doing, but it still felt very good, and the excitement of being the first cock she ever sucked on was adding to it. Sadly, she knew that it couldn't last and that she needed to get back to business.\n\n\"Cindy, your turn to go face down and ass up,\" Alina said.\n\nThe woman unwillingly removed Alina's cock from her mouth.\n\n\"You did very well,\" Alina praised. \"Maybe we can do it again some time. You can suck my cock, and we can do whatever else you might want.\"\n\n\"Thank you,\" she said, flushing an impossible shade of red as she got up and returned to the other people watching, getting a lot of encouragement from the crowd.\n\n\"Now when we have the lube here, can we please use a little this time, or I will be unable to work for a week,\" Cindy said, having assumed the position.\n\n\"Just a little then,\" Alina said.\n\nTaking the bottle, Alina applied a little on Cindy's rose, and then rubbed her cock in the lube, using one hand to spread it out, and then she put her cock into Cindy's ass, letting it slide all the way inside with one firm thrust.\n\n\"How lucky am I to have two tight asses to fuck?\" Alina said, it being more of a statement than an actual question.\n\nNot wanting to hold back, she started to fuck Cindy hard, knowing that she could handle it. Millie was good too, but Cindy's experience was evident as she was using her strong muscles to milk Alina's cock as it pounded her behind.\n\n\"Anyone else wants to clean ass juice from my cock?\" Alina asked the bystanders.\n\nFor a brief moment there was silence, and then almost all the women answered \"yes\" at the same time. One of the women wearing a towel dropped it and scrambled away from the others to be the first one. Other women, naked or clothed, pushed and screamed as they went after her. The first one kneeled down to the right of Alina, two more kneeled down on her left, and soon eight women were waiting on their turn to taste her cock, fresh from another woman's asshole.\n\n\"Here are the rules. You will each get one chance to suck my cock clean. You will do your best to get all the ass juice from it. When you've had your turn, you will get up and return back to the entrance of the shower room. Do you understand?\" Alina said. \n\nThey all agreed, and Alina slammed into Cindy extra hard, holding her cock in deep and moving it around to make sure it was covered in flavor, and then pulled out and offered her cock to the first woman to kneel down. She eagerly took the head in her mouth, sucking hard on it and using her mouth. She tried to take more inside but it caused her to gag, and she instead started to lick the shaft. Alina thought she was done, but she tried to pull her cock away the woman took it in her mouth again, sucking it for a little longer before she gave it back. Alina quickly sank her cock back into Cindy and started to fuck her hard, as the woman reluctantly got up and walked back to the now smaller crowd.\n\nAlina pounded Cindy hard for a minute, and then she pulled her cock out and fed it to the second woman. This time it was one of the big-chested women from the day before, and she did a strong job cleaning her cock before she too needed to give it back.\n\n\"Millie, can you get on all fours behind me?\" Alina asked.\n\nMillie quickly complied, and Alina turned around and stuck her cock in her tight asshole, no extra lube this time, and fucked her for a minute before she fed the third woman her ass to mouth treat. On it went as she took turn fucking Cindy's and Millie's assholes, feeding a new woman between each anal session. When the willing cleaners started to diminish three more women couldn't resist any longer and kneeled down to fulfill their duty too. The last one was the stuck-up woman, sucking on her cock like it was the thing she wanted to do most of all in the world.\n\nAlina felt her cock and balls feeling dangerously sore again. They had been through so much, yet she knew she wouldn't be able to end this without her cuming again. She went for Cindy's asshole, taking a firm grip and started to pound away with all her might. Cindy was moaning like a woman possessed as her body was trying to survive the onslaught. Her balls felt like they were dancing around in anticipation of getting emptied again.\n\n\"Can I have another turn with tasting my wife's ass?\" Millie asked, having moved into a kneeling position beside Alina.\n\nAlina smiled. This was the final proof that Millie had accepted her new place. Asking for a chance to clean her wife's ass from Alina's massive cock. Alina gave Cindy a few last hard thrusts and then pulled her cock out, feeding it to Millie.\n\n\"All who wants to taste my cum, come and kneel down in a circle around me,\" Alina proclaimed.\n\nCindy joined her wife, as Alina was fucking Millie's face. The other eleven that had cleaned her cock also kneeled down, and two more that had been too scared to do ass to mouth, also pushed their way into the circle. 15 willing women kneeling down to have a chance to taste Alina's cum. She took a firm hold of Millie's head, slinking her cock down into her throat, fucking it a few times, her balls clashing against her chin.",
        "When she was ready, she pulled out her cock, grabbing her cock firmly, and fired the first strong rope over Millie, then she turned and stroked her cock a few times, and the second rope was laid over Cindy. She heard women gasp, and knew that they were shocked by how much cum she was able to put on each woman as she continued to turn, giving each woman a taste of her bountiful cum. 12, 13, 14 and then finally woman number 15 getting her face covered by a big, white rope of cum, and just to make sure every last drop was used, she squeezed out two smaller servings for Millie and Cindy.\n\nFinally able to relax, Alina felt her entire body hurt, and most of all her cock ached. It had been through a fuck marathon, making her feel like she had to curl up to try and deal with the pain, but knew she had to stand tall, watching all the women tasting her cum, talking about how wonderful it tasted, and how amazing she was to be able to cum on all of them. She felt like a god. A big cocked futanari god.\n\n*******************************************************************\n\nHaving taken her shower and getting dressed, Alina started to limp her way out of the gym. All the endorphins and adrenaline were gone, and it felt like her body been beaten, ran over, crushed and then put back incorrectly making it hard to control. Lucky enough they had gotten help getting their workout clothes back from the other room. It would be hard enough to make it back to the hotel, even if it was just a stone throw down the street. She knew that she would need to sleep at home tonight, as tomorrow was graduation, and she feared how she would be able to get back home feeling like this. Still, it was worth it. Amazing sex with two wonderful women, and then at the end she had been able to get some new fans, and seven had even wanted Evelyn's card so that they could contact the agency. Two of them were the big chested women, but it made her happy that even more women were so impressed by her performance that they wanted to carry her child. She was sure that all the other women at least wanted to fuck her.\n\nJenny waved at her from the reception desk, and Alina waved back, trying to now show that she was in terrible pain. Coming out of the gym and out on the sidewalk, her phone beeped. She saw it was from Julie, making her smile.\n\n\"Are you still on for a date on Saturday? We want to celebrate your graduation,\" Julie's message read.\n\n\"YES,\" Alina quickly texted back.\n\nShe didn't know if her body would have recovered by then, but it didn't matter. She would never be able to deny Julie. She was certain the celebration would include sex. A lot of sex. She was also curious who the we referred to. Certainly, it must be Rose. Maybe it was Julie's husband too. She hadn't met him yet, but she much rather wanted it to be Rose.\n\nShe limped into the hotel, feeling rejuvenated by the prospect of Saturday. Getting expelled had sounded awful at the start, but it had turned into one of the best weeks of her life. She would need to thank Principal Pulcher tomorrow. She would make sure to thank Julie for her part in it too. She knew just how to do it too.\n\nThe End"
    ],
    "authorname": "Sonatatre",
    "tags": [
        "breeding",
        "futa",
        "giant cock",
        "gym",
        "impregnation",
        "lesbian",
        "mature",
        "pregnant",
        "wife"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/futanari-breeding-agency-ch-03"
}