{
    "title": "Jeff Thousandaire Ch. 03",
    "pages": [
        "***\n\n-- CHAPTER 3: Adoration --\n\n***\n\n*STILL SATURDAY NIGHT*\n\n\"Ungh... ungh... ungh...\" the pretty brunette whimpered over and again while my cock drilled in and out of her clenching pussy. Over the course of the past few weeks, I had been wondering what this would be like. The reality did not disappoint.\n\nI gripped her hips tighter as I pumped her slender body from behind, and then put my hand to the small of her back, forcing her torso down until her chest was flat on the sofa cushion. Charlotte simply licked her lips and then moaned, \"More... harder...\"\n\nSo I picked up my pace.\n\nTwenty minutes earlier, we were all recuperating from Round 1 and spread across the three couches and various chairs in the room. We got a few drinks and engaged in heavily sexual conversation while the boys recharged. Kaitlyn and I snuggled together on a recliner meant for one, delighted by our budding romantic feelings.\n\nJeremy was laughing as he noticed a thick glob of John's cum on Rebecca's chin. He pointed it out and Rebecca blushed as she scooped it with a finger and popped it into her mouth.\n\n\"So, does that fill my workout quota for the day?\" John asked.\n\nRebecca shook her head. \"Two more cums, at least,\" she said in a stern tone. \"You did alright for an ab exercise but I'd better see more upper body work in the next hour or so, or I'll really work you to death on Monday.\"\n\nJohn just sighed while Rebecca laughed.\n\nI didn't understand until Kaitlyn leaned over and told me, \"Rebecca is John's personal trainer.\"\n\n\"Ah,\" I replied. Now that I got a better look at the brunette, her occupation made perfect sense. She was certainly in great shape. Her body was toned and well- muscled without being bulky, looking like she could be competitive at an Olympic heptathlon or something. Her long brown hair was pulled back into a ponytail, leaving her pretty face clear and absent of any real makeup. Even her obviously fake tits, so high and round, fit in with the rest of her physique.\n\nTaylor overheard and leaned towards us. \"I want Johnny to be in good shape for the wedding. He was starting to get pudgy around the mid-section.\" With that, Taylor poked her fianc\u00e9's love handles, which were barely noticeable.\n\n\"Hey, I've got you. It's not like I needed to go out and impress women anymore,\" John retorted with a smile at me. And then he leaned forward with a grin. \"But leave it to Taylor to find me a beautiful, bisexual woman for a trainer.\"\n\nHe turned and looked at Rebecca and in a louder voice said, \"I mean, less than three days after we first met she just stuck her hand in my shorts and started jacking me off while I was trying to do a sit-up.\"\n\nRebecca broke off her conversation with Cassandra and grinned. \"It's not MY fault you had a hard-on. All your blood flow was going in the wrong direction and I had to get rid of the problem so we could get on with the workout.\"\n\nJohn sat up straighter. \"It WAS your fault. You were wearing that really low-cut top and bent over at the waist while counting my reps.\"\n\nRebecca giggled, \"Oh, yeah...\"\n\nTaylor joined in the laughing. \"Well that was three months ago. I'm doubly happy that Rebecca is such a good carpet muncher...\" Taylor leered at Jeremy and spread her legs, letting a bit more of his spunk leak out of her. \"And that her boyfriend is such a stud.\" \n\n\"Oh!\" Rebecca sat up. \"Is there more of my man in there?\" Quickly, Rebecca slid over and got to her knees before Taylor, diving in headfirst to scoop out whatever Jeremy had left inside.\n\nThat seemed to signal the beginning for the next round. Kaitlyn and John started eyeballing each other, stirring just the briefest jealous thought in me. But then I remembered, they'd known each other a lot longer than me.\n\nAs if reading my mind, Kaitlyn turned back and planted a wet kiss on me, filling it with all her newfound affection. She sighed happily as she broke it off. \"There are really only two rules: One, Cassandra's off-limits to any man besides John. And two,\" she frowned for a moment. \"John won't cum inside anyone's pussy but Taylor or Cassandra.\" She shrugged. \"Their house, their party, their rules.\"\n\nThe second rule obviously didn't apply to me. And as great as Cassandra looked, especially her incredible rack, I would live. Besides, Charlotte took that moment to come over and kneel right in front of me. Without her glasses, she looked so young and innocent. You would never guess what kind of kinky submissive she could be.\n\n\"Please, Mr. Lee, sir... I want your cock. Will you fuck me?\" she asked in a quiet voice.\n\nSomething in her tone stirred back up the latent animal, and after looking to Kaitlyn for approval, I nodded. Charlotte then proceeded to slurp me into her hot little mouth, bringing me up to full hardness while I reached down to play with her pleasingly round titties.\n\nShe was getting better at fellating me. Where first Charlotte had been efficient, by now she was figuring out my pleasure buttons and I was quickly at full mast. Charlotte then moved over to kneel before one of the couches, laying her chest on the cushion and reaching back with her own hands to spread her pussy lips wide for my perusal.\n\nOver the course of the past few weeks, being so close to Charlotte's naked body without ever actually screwing her, I'd wondered what it would be like. I was about to find out. And once my mushroom head parted her wet lips and began its descent deeper into her body, Charlotte moaned appreciatively.\n\nShe spread her arms forward, slipping her hands to the other side of the sofa cushion and gripping it while I pressed forward until my pelvis was flush against Charlotte's cute ass. She giggled when I started wiggling my hips, carving my cock around her innards. And then the pretty brunette went back to moaning as I pulled back and began to pump in and out of her tight tunnel.\n\nMeanwhile, Taylor and Cassandra started sixty-nining on another couch. Jeremy pulled his girlfriend Rebecca into his lap so that the athletic brunette could ride him. And John had Kaitlyn bent over the armrest of the same couch I was fucking Charlotte against, leaving the two girls' heads only about a foot apart.\n\nHe'd found a bottle of Astroglide somewhere and Kaitlyn was wriggling in anticipation. In a familiar voice, she moaned, \"Hurt me...\"\n\nI swear Charlotte shuddered just hearing Kaitlyn say that, and I started drilling her sodden pussy even harder. Charlotte lifted up her chest and used the leverage of her arms to start ramming back at me with every stroke.\n\n\"Ungh... ungh... ungh...\" the pretty brunette whimpered over and again while my cock drilled in and out of her clenching pussy. \"More... harder...\"\n\n\"Ohhh...\" Kaitlyn was moaning and I turned to see John's rather large dick begin to penetrate into the blonde's teenaged asshole. Having been there myself, I grinned at him as I really began to fuck Charlotte.\n\nOnce John was fully inside, he exhaled happily and glanced over at me. Then he picked up the Astroglide and held it out for me, his hips pumping back and forth as he skewered Kaitlyn's ass on his dick.\n\nCharlotte's head was turned so that she could see this exchange, and she quivered. Whether in fear or anticipation I'm not sure.\n\n\"Charlotte,\" John said sternly.\n\n\"Yes, sir,\" she gasped while I kept thrusting into her pussy.\n\n\"You're going to take Mr. Lee's cock up your ass and you're going to love it.\"\n\n\"Yes, *sir*...\" Charlotte quivered again, and this time I knew it was from pleasure. I coated up my fingers and began to lube up the pretty brunette's bunghole, and meanwhile John started pounding Kaitlyn with increasing force.\n\n\"Ohhh... fuck my ass!\" Kaitlyn cried as her head shook.\n\n\"Fuck my ass!\" Charlotte echoed, and I pulled my iron hard erection out of her sopping pussy and guided the tip to her dusky red star.\n\nCharlotte picked up her head and started groaning as we both strained to get the mushroom head through her sphincter. And when it popped inside she whimpered and moaned, her anguish turning into a satisfied groan as my shaft burrowed deeper and deeper.\n\n\"Ohhh...\" Kaitlyn crooned again while John continued to ream her out, and then the blonde teen reached out with one hand, pulling Charlotte's face to her own so the two young women could lock lips and swap spit while they were both getting buggered.\n\nMeanwhile, the other four had managed to turn themselves into an odd formation. Cassandra was laying flat on the floor with her head at the base of the next sofa. Rebecca was sitting on her face, letting Cassandra's long tongue spear into her juicing snatch while Rebecca deep-throated her boyfriend. Jeremy was the only one actually sitting on the sofa, his legs spread to the sides around both Rebecca and Cassandra. And while his girlfriend was blowing him, his head was back so that Taylor could perch practically on top of the sofa back, straddling Jeremy's head so that he could eat her out as the four of them connected together in a vertical chain of oral pleasure.\n\n\"Fu... fu... fu...\" Charlotte started chanting while I pistoned in and out of her anal chute. Her muscles clamped down on me rhythmically, getting me closer and closer to orgasm. Kaitlyn wasn't far behind. John had her pinned to the armrest, and I read the anguish in the pretty blonde's face as her own orgasm started to overwhelm her.\n\nThe raw animal instinct was growing in power the closer I got to my climax. My hands caressed Charlotte's shapely hips for a brief moment, and then with a surge of adrenaline I suddenly gripped her waist and started roughly pounding her ass. She screamed at the unexpected force and then with my right hand I started slapping her buttcheek over and over, unrelenting as I simply started whaling away at the brunette's tender flesh.\n\nThe pain set her off. She shrieked in exquisite agony and came, her ass muscles spasming around my shaft and pulling me over the edge with her. With a roaring growl I slammed forward as deeply as I could go and began ejecting load after load of cum up the ass of Taylor's personal assistant. \"Ugh! Ugh!\" I grunted with each shot as I felt it fly out of me.\n\nAnd just as I started cumming, as if on the exact same wavelength, Kaitlyn cried out her orgasm as well, tears dribbling down her face as she wailed out, and then John was following after, answering my wolfish growl with one of his own as he began spunking inside the blonde teenager's asshole.\n\nA few minutes later, we paired off and went to separate bathrooms. Cassandra and Charlotte went with John and Taylor to the master suite to clean up together. Jeremy and Rebecca went to one guest bathroom, and Kaitlyn wouldn't let go of my hand from the moment we came back together.\n\nIt didn't matter that I'd just fucked another woman's ass and she'd gotten her ass fucked by another man. Yes, we'd had sex with other people, but the bond I felt with her was no less than before. I leaned back in the shower and let Kaitlyn clean me up before I returned the favor. And when we cuddled together in the warm spray and our lips came together, I knew I'd found my soulmate.\n\nWe would live happily ever after.\n\nIf only life were that simple.\n\n***\n\n*SUNDAY*\n\nGrowing up, I'd read about rich people and their secret passageways in order to have clandestine meetings with mistresses and the like. I'd thought that sort of thing only existed in European castles and palatial countryside mansions. I never expected to find one in a modern Manhattan apartment building.\n\nThe trap door from John Kwong's closet down to Kaitlyn's closet was so simple in design and yet mind-boggling in its implications. When Kaitlyn showed it to me, my mind immediately started to wonder at exactly what her relationship was to John, especially given the \"mistress\"-connotations a secret passage implied.\n\nKaitlyn had explained that the trap door and ladder had been put in before her family moved in. I was just incredulous that her parents hadn't found it yet.\n\nStill, I put my questions aside when Kaitlyn invited me to spend the night with her. I was pretty tired after John and Taylor's little orgy and the prospect of sleeping with my angel for a second night in a row was just too good to pass up.\n\nAnd now it was Sunday morning. Well, technically it was Sunday afternoon. The party hadn't broken up until close to 3am and as I glanced at the clock on Kaitlyn's bedside table, it was now just after 12noon. I hadn't slept nine hours in FOREVER; but considering the exertion I'd put myself through last night, I wasn't overly surprised.\n\nAnd when I awoke, it was with my arms wrapped around Kaitlyn's naked body. Her golden head was pillowed on my left bicep and my right hand had subconsciously settled one of her round breasts into my palm. I was holding her in my arms. She was letting me hold her in my arms. And the feelings running through me were even better than sex.\n\nFor the zillionth time I pondered how incredibly lucky I was. Kaitlyn had been but a fantasy a month ago. She was the pretty face who stuck in my head and then refused to leave it after nothing but a chance encounter in a smoothie shop. And now I had spent what amounted to an incredible weekend with her. And I was falling in love.\n\nHow was it possible? I barely knew the girl. She was still a teenager for crying out loud. I had no real knowledge of her personality, her quirks, her funky habits. Love like this only happened in fairy tales, not in Manhattan.\n\nWas it only me? Was I the only one feeling like this? Did Kaitlyn just see me as a good lay and a one-night... well, two-night stand? Seriously, how could she consider me boyfriend material? How does any 19-year-old girl decide she wants to be serious with anyone after only 3 days?\n\nAt some point, she and I would have to figure out our true feelings for one another. It was so easy to get swept away in the whirlwind. As the older person I thought I had to stay grounded on some level about how realistic a relationship might be.\n\nBut I wasn't going to get that chance right now. I started hearing voices outside the door. It was odd to me because the apartment had been completely empty for the entire weekend. Kaitlyn had said her parents always gave the staff time off whenever they themselves went on vacation. So who was in the apartment?\n\nAlmost immediately, a deep male voice called through the door, \"Kaitlyn?\"\n\nMy blonde angel was up immediately. \"It's my dad!\" she hissed at me under her breath. From the tone in her voice, it didn't seem like her father would take kindly to finding a naked man in his only daughter's bed.\n\nAll I could think at that moment was, 'Oh, SHIT.'\n\n***\n\n-- KAITLYN --\n\nHe was holding me in his arms, and the feelings running through me were even better than sex.\n\nFor the zillionth time I pondered how incredibly lucky I was. Jeff had been but a fantasy a month ago. He was the adoring gaze that stuck in my head and then refused to leave it after nothing but a chance encounter in a smoothie shop. And now I had spent what amounted to an incredible weekend with him. And I was falling in love.\n\nHow was it possible? I barely knew the guy. I had no real knowledge of his personality, his quirks, his funky habits. I didn't know if he was a trustworthy man or just another asshole player. Love like this only happened in fairy tales, not in Manhattan.\n\nWas it only me? Was I the only one feeling like this? Did Jeff just see me as a hot body and a one-night... well, two-night stand? Seriously, how could he consider me girlfriend material? How does any successful young professional decide he wants to be serious with a teenager after only 3 days?\n\nAt some point, he and I would have to figure out our true feelings for one another. It was so easy to get swept away in the whirlwind. Despite the thrill I had to stay grounded on some level about how realistic a relationship might be.\n\nBut I wasn't going to get that chance right now. I started hearing voices outside the door. It was odd to me because the apartment had been completely empty for the entire weekend. Daddy always gave the staff time off whenever they themselves went on vacation. So who was in the apartment?\n\nAlmost immediately, a deep male voice called through the door, \"Kaitlyn?\"\n\nI was up immediately. They must have come home from the Bahamas early. I HATED it when they did that. Sometimes I think my dad deliberately lied to me about when he would be returning just to see if he could catch me with uninvited guests.\n\n\"It's my dad!\" I hissed at Jeff under my breath. Daddy would not take kindly to finding a naked man in his only daughter's bed. Part of me wanted to panic but I already had an idea in mind.\n\nHurriedly, I pushed Jeff off the bed and into the closet. He whirled around and looked confused, not yet understanding. I'd seen enough movies. No one ever managed to stay hidden in a closet. But I didn't want him to stay in the closet.\n\n\"Kaitlyn?\" came Daddy's voice again, this time accompanied by the jiggle of the door lock.\n\nI emphatically pointed up the ladder to the trap door and he finally understood. Quickly, he started climbing while I called out in a faux-sleepy voice, \"I'm up. I'm up.\"\n\n\"Darling, can I come in?\"\n\n\"Uh, I'm not dressed, Daddy. Hang on a sec!\" I slipped into a bathrobe just as Jeff got through the trap door and then closed it behind himself. I saw his clothing in a pile next to my bed and hurriedly I kicked it underneath the frame. And then fixing my hair behind my ears, I stepped forward and opened the door.\n\n\"Daddy! You're home early!\"\n\n***\n\n-- JEFFREY --\n\nFor a second, I stayed unmoving in John Kwong's closet, my ears straining to try and hear something through the trap door. I heard muffled voices, but I couldn't make out the words.\n\nAnd then a different moan caught my attention. It was the moan of a woman in heat. I turned my head and realized that the closet door was open, giving me a clear view of a couple in the middle of making love on the bed.\n\nMy eyes went wide seeing the stunning nude form of Cassandra Cooper. She was on all fours, her fair blonde hair swept to one side while her beautiful face and sky blue eyes shone in the mid-day light. Her tits were absolutely incredible, so large and firm and pendulously rocking back and forth with her fucking motion. It didn't seem fair that such a tall and slender woman could have such a pair of tits.\n\nJohn Kwong was right behind her, pumping away with his hands on her hips. They were groaning and moaning and oblivious to my presence. For a while at least.\n\nThen Cassandra saw me and she stopped moving, a crooked smile on her face. Her sudden halt got John's attention and they both looked over at me.\n\n\"Uh, sorry...\" I stammered and tried to cover my naked crotch with my hands. \"Kaitlyn's dad came home earlier than expected.\"\n\nJohn chuckled, \"Hal Reynolds has a habit of doing that.\" He nodded to a spot past me. \"Grab a bathrobe and you can hang out in the lounge for a bit. Kaitlyn will come up when the coast is clear.\"\n\nQuickly, I borrowed the robe and then scurried past the fornicating couple, unable to resist ogling Cassandra's body one last time before slipping out. Once I closed the bedroom's double-doors, I heard the moaning start up again on the other side.\n\nSo wrapped up in what was going on in the Master Bedroom, I didn't realize there was someone else in the Master Lounge until after I closed the door and turned around.\n\nTaylor was wearing a royal purple robe and curled up on a couch, reading some fashion magazines. She looked up at me and said, \"Hello, Jeffrey. Were you trying to fool me into thinking you were my fianc\u00e9?\"\n\n\"Huh?\"\n\n\"You're wearing his robe,\" she pointed to the monogrammed JK over the breastbone on the robe.\n\n\"Uh, no,\" I stammered. I explained the situation about Kaitlyn's father and Taylor nodded understandingly.",
        "\"Too bad. I might have given you a morning blowjob if you were Johnny.\"\n\n\"Well, I think he's got that covered right now,\" I nodded back to where the erotic moans were still filtering through the door.\n\n\"That he does,\" Taylor giggled. \"Sit with me,\" she patted the spot on the couch beside her.\n\nJust as I was getting seated, Charlotte came into the room with a glass of orange juice and two croissants on a tray. \"Oh, hello Mr. Lee. I wasn't expecting you. Would you like anything?\"\n\nThat moment felt very weird for me. Just a few hours before I'd nutted up Charlotte's asshole while she howled in ecstasy and for a second I felt like answering her request with a very naughty response. But I tamped down on that impulse and looked to Taylor to make sure I could go ahead and answer. I wasn't used to having staff serving me. \"Uh, OJ and croissants sound great.\"\n\n\"These are chocolate-filled. Dorothy can do the same for you or would you prefer a jelly or cream cheese?\" Charlotte asked.\n\n\"Chocolate is great,\" I smiled at the thought of chocolate-filled croissants on demand. It's the little things that separate the wealthy from average Joes like me.\n\nCharlotte smiled and nodded and then left.\n\nTaylor took a sip and a nibble of her croissant and then turned to me. \"So Jeffrey, if I may be so bold, what are your intentions towards my young friend?\"\n\n\"Excuse me?\"\n\n\"I think you know I'm talking about Kaitlyn. She's very special to me and the last thing I want is to see her hurt.\"\n\nMy eyebrows crinkled. \"I assure you I have no plans to hurt her.\" An image of a naked Kaitlyn with handcuffs and my hands around her neck flashed into mind. \"Uh, well, unless she's asking me to,\" I blushed and glanced down.\n\n\"Yes, she does get off on mild pain. Nothing like Charlotte mind you, so be careful with her. What I meant is her budding feelings. I needn't tell you that Kaitlyn is still rather young.\"\n\nI put on my best 'trustworthy' expression and looked sincerely at Taylor. I was still amazed that just a few weeks ago, she was just a fantasy in my imagination. Today, I felt like I was trying to sell myself to my girlfriend's parents. \"I truly want nothing but the best for Kaitlyn and her future. I'll be honest: I hope that future involves me. In just a few days I've seen how her energy lights up a room and lights up my life. There is something special about her that captivates me. But the realist in me knows I have to be careful to not be swept up by my emotions.\"\n\nTaylor mused on that for a second before stating. \"You didn't exactly answer my question. What are your intentions? Were you planning to screw her and leave her? Do you want to be friends with benefits, like you and me? Or are you intending something more?\"\n\nI looked down for a second to ponder my response. I already knew the answer in my head and in my heart. \"Something more. I... I can't explain it other than to say that it feels like love at first sight. I feel like Kaitlyn is my soulmate.\"\n\n\"Are you sure?\"\n\n\"I... I think so. I'm not totally sure. It's all so... overwhelming right now. I feel like I'm being led around by my heart.\"\n\n\"Not your dick?\"\n\nI smiled. \"It has a mind of its own, yes. But this one's coming from my heart.\"\n\nTaylor looked thoughtful again and she leaned back against the couch. The two halves of her robe slipped to the sides a bit, revealing a wide expanse of her prodigious cleavage, but she seemed oblivious. \"Jeffrey, I originally set you two up on a whim because of the architecture connection. I knew you were good in bed and I felt like sharing that with my friend. But I never expected her to show the kinds of feelings she has been.\"\n\nMy heart was beating a little faster. \"What kinds of feelings?\" I asked with more than a little hope in my voice.\n\nTaylor smiled. \"She looks like she's falling in love. Last night you two were beautiful, and I'm happy for the both of you. But the concerned mama-bear inside me has to be cautious. I really don't know you that well, Jeffrey. You're a brilliant designer and I already know the home you're building for us will be spectacular. But in my experience, creative brilliance and stable emotions rarely go hand-in- hand.\"\n\n\"I'm falling for Kaitlyn, Taylor. I know it. I can't predict the future, but I know that every ounce of me wants to make her happy.\"\n\n\"What about your admin, Melody?\"\n\n\"Melody?\" I jerked my head back. I hadn't thought of Melody in a long time. And then memory came back. \"Well... to be honest, there is some history there. But Melody broke it off herself. She called me yesterday.\"\n\n\"So is Kaitlyn some kind of rebound?\"\n\n\"No, no! Melody and I were never... we were never really together. There's nothing to rebound from. And I can honestly say I've never felt this way about anyone before Kaitlyn.\"\n\n\"Okay. I'll trust you to that, Jeffrey. But if you hurt her, I WILL cut your balls off.\" Taylor grinned at me, showing both rows of teeth in a way that was not exactly friendly.\n\n\"Don't do that!\" came a sweet, giggly voice from the direction of the Master Bedroom. \"I need those!\" Kaitlyn smiled as I turned around. She was still clad in her bathrobe and she quickly crossed the room to climb into my lap.\n\nMy arms easily went around her body as she found my lips and we started kissing as easily as if we'd never stopped since last night. I immediately felt a stirring in my groin, which Kaitlyn rubbed herself against.\n\n\"Mmm... SOMEbody's happy to see me,\" she giggled.\n\nTaylor sighed. \"Aww. I wasn't expecting you to monopolize him so quickly, kitten. We throw a big orgy with only three dicks and last night I never even got a piece of him.\"\n\nWith a sly grin Kaitlyn slid off my lap and fished my cock out from the borrowed bathrobe. I was already hard and the precocious teen waggled my erection in Taylor's direction. \"You want this, Taylor? I'll let you have some if you do something for me.\"\n\nTaylor put on a mock indignant expression. \"And since when do YOU dole out permissions over Jeffrey's dick?\"\n\n\"Since it became MINE,\" Kaitlyn laughed and looked at me. I had no protests and just leaned in when the blonde hottie kissed me.\n\n\"Fine,\" Taylor pouted. \"What do you want in trade? An hour with Charlotte? A straight dick-swap for Johnny?\"\n\n\"No, no,\" Kaitlyn laughed. \"What's mine is yours, lover. I could never refuse you anything,\" Kaitlyn's green eyes sparkled at Taylor.\n\n\"Well in that case, I'm in the mood for something salty to go along with my croissants.\" And with that, gorgeous supermodel Taylor slipped off the couch and knelt before me while Kaitlyn moved out of the way. Kaitlyn even held up my shaft while Taylor moved into position, and all I could do was groan as I felt the raven-haired goddess take my cock into her mouth.\n\nI blinked rapidly as I felt the wondrous sensations start shooting through me. Kaitlyn took one look at the expression on my face and she started giggling again. Have I mentioned how much Kaitlyn laughs? Have I mentioned how much I love watching Kaitlyn laugh?\n\nIn any case, the blonde teen took the opportunity to stick her tongue in my mouth again and I let myself be carried away to paradise, where gorgeous supermodels you've lusted after since you were fifteen suck your dick while equally gorgeous hot teenagers make out with you.\n\nI'm almost ashamed to admit I didn't last very long. When Kaitlyn shrugged out of her bathrobe and then pulled my face between her breasts, my mind simply went blank as I absorbed all the heavenly titflesh I could. And since I wasn't concentrating on holding back my ejaculation, when Taylor started deep- throating me and otherwise lavishing her expert cocksucking skills upon me, I had nothing to prevent my eruption.\n\n\"Mmph,\" Taylor moaned when my hands suddenly pulled her head tight to my crotch. And then she was rapidly swallowing my cum as I spunked out a surprising amount of semen given the number of orgasms I'd had in the past couple of days.\n\nKaitlyn kept smothering me in her cleavage and just when I felt like I was going to pass out from both sensory overload and oxygen deprivation, she released me to gasp for air as Taylor got the last of my salty goodness to offset the sweetness of her chocolate croissants and orange juice.\n\nThe girls left me a spineless lump on the sofa and then Kaitlyn went to whisper something into Taylor's ear as she helped strip Taylor's purple robe off of her. The slightly older goddess flashed her alluring gaze at me before turning back to Kaitlyn and answering a confident, \"Sure.\"\n\nFully naked, Taylor simply strode out the door. Kaitlyn pulled off my robe and then with both of us nude as well, she tugged me after her. We half-skipped down the hallway and I blushed crimson when I realized Edward and Dorothy could see us as we cruised by the kitchen. But then we were in the guest wing and arrived at a familiar bedroom.\n\nTaylor beat us there and had thrown herself upon the bed. Kaitlyn let go of me and then leaped after her friend, the two beautiful women tumbling about the bed together and romping playfully before settling down to lock lips and trade wet kisses.\n\nDespite having just cum, the mere sight of my fantasy Taylor and my new love Kaitlyn making out with each other was enough to put some fresh lead into my pencil. I reached down with my hand to speed up the process as I listened to their erotic moans and wet kisses.\n\nAnd when the girls rolled until they were right on top of each other, face-to-face, chest-to-chest, and crotch-to-crotch, my eyes positively started bugging out. Taylor and Kaitlyn both spread their legs to the sides even as they rubbed their pussies against each other, and the sight of them double-decker before me had me as hard as ever.\n\nKaitlyn craned her head around to me. \"Come on Jeff! Take your pick! Or better yet, take a few samples before you make your decision.\"\n\nSampling sounded like a wonderful idea. I clambered onto the bed between the girls' legs and tried to figure out the gymnastics required to pull this off. In the end, I simply grabbed onto Kaitlyn's hips and lifted her up until she was supporting herself on her knees. This brought her pussy out of contact with Taylor's but at the perfect height for me to sink my cock into her from behind.\n\nAt the other end, Kaitlyn moaned into Taylor's mouth and rubbed her chest harder against the brunette's tits. And as I started pumping into her she began to pant and gasp with pleasure.\n\nBut just when Kaitlyn began to tense up as I fucked her closer to orgasm, I pulled out and aimed my cock lower. The blonde teen whined, \"Aww...\"\n\n\"Come here, kitten. Let me take you over the top,\" Taylor husked.\n\nKaitlyn quickly crawled forward and moved to sit on the pretty model's face, and then her girlish moaning picked up again while Taylor tongue-lashed her back towards her climax.\n\nThat also left Taylor's pussy wide-open and available beneath me. Fisting my meat, I guided myself into place and then plunged in, forcing Taylor to groan into Kaitlyn's pussy while I rammed my rod all the way in. I pulled her long legs up and around my waist to give me additional leverage, and then with a good grip on her ass, I started pumping away.\n\nI smirked to myself knowing that I was once again plowing a woman who I'd dreamed about for so long. And I closed my eyes to focus on the wondrous sensations coursing through my body as I let old fantasies of Taylor fill my mind.\n\n***\n\n-- KAITLYN --\n\n\"Ohhh, so good, Taylor! You were always so good to me!\" I moaned as I rode the tongue of the best pussy-licker in New York. Taylor was gripping my asscheeks with both hands, eating me out with furious intensity and I felt the ecstasy that had been building inside while Jeff fucked me now coming to fruition.\n\n\"So close. Mmm, deeper! Oh, yes... yes... yes...\" I whimpered as I started humping up and down on Taylor's face. And when she unexpectedly moved a hand and popped a finger into my asshole, I detonated.\n\n\"YES!!!\" I screamed as I fell into absolute bliss. My vision blanked out in an ocean of white and when I could see again, I found that my thighs were quivering and my whole body was trembling in the aftermath of a glorious orgasm.\n\nThere were also more hands on me than I'd been expecting. Taylor was still rubbing my buttcheeks and languidly lapping up the honey I'd dumped onto the lower half of her face. But from behind, Jeff was pressed against my back, holding my waist and planting little kisses along the sensitive nerves over my spine.\n\nI shivered to feel such love from two of the most important people in my life. Not that I didn't have feelings for John, but I was closer to Taylor. And now I felt the happy delirium at the prospect of having a man of my own.\n\nFrom the slight movement of his lips against my back, I could feel the pulsing rhythm of Jeff still thrusting in and out of Taylor. I sat up and pulled away from Taylor's face, leaving her gasping for air both from my smothering cunt and her own fucking exertions. She looked so radiant with my honey on her lips and chin. Her short, dark hair hung back to let me see the shine in her gorgeous eyes, such a vibrant purple when she was in heat.\n\nOn a sudden whim, I backed myself up until I was settled back over Taylor's crotch, with Jeff still pistoning away behind me. He slowed for a moment when I wriggled my ass back against his abs and pulled one of his arms around my waist. And then with a naughty grin, I started making back and forth pumping motions of my own, directing Jeff to match me and drive his cock in and out of Taylor in sync with my undulations.\n\nFrom Taylor's end, it had to almost look like I was fucking her. At the very least, my body was moving back and forth in time with the filling and emptying sensations in her pussy. I could see my heavy tits wobbling back and forth and I grinned with aroused delight as I saw Taylor start to let the little fantasy into her mind. \n\nThe look on my face only got even better when Jeff dipped his hand and started rubbing my clit. This served to almost throw off my fucking rhythm, but we quickly regained it and I found myself panting with lust as I continued my undulations.\n\n\"Fuck me, Kaitlyn,\" Taylor cooed. \"Drive that big cock inside me.\"\n\nI giggled and mimed the animalistic (and quite ugly) glare of a man at the edge of his orgasm. Taylor laughed and held onto my hips while we kept pumping away. I started laughing at the silliness of the whole situation and my gorgeous lover pulled me down to her, wrapping her arms around me as our tongues came together once again as we let the pleasurable happiness carry us away.\n\nOnce freed of trying to match my thrusts, Jeff picked up his own rhythm, using Taylor's hips as hand holds to really start pounding away at Taylor, deeper and harder than before.\n\nI picked my head up and ran my fingertips over Taylor's gorgeous face, intently watching the play of emotions and pleasure in her eyes. I kissed her jawline as she gasped and moaned, feeling like I was a part of Jeff and her union as my new love fucked her to her climax.\n\nAnd when Taylor arched her back and came, I nibbled on her neck and stroked her breasts while she clutched me to her. I felt every vibration of her body and in a way, I felt like I was sharing her orgasm with her.\n\nWhen the feelings passed and she sagged to the bed, I lay my head down against her shoulder and rubbed my whole body against hers while Taylor stroked my back and cooed happily into my ear. For a moment, there was peace.\n\nAnd then I felt Jeff's rough hands on me.\n\n***\n\n-- JEFFREY --\n\nI craved my release. The animal inside me demanded my release. Kaitlyn had gotten off. Taylor had gotten off. Now I wanted to explode.\n\nAnd with a burst of adrenaline, I seized Kaitlyn's hips roughly and flipped her over onto her back beside Taylor. She hit the mattress with a thud and I quickly yanked her legs back open for me. And with my muscles flexing, I rammed my hips forward and cruelly impaled her pussy on my dick once again.\n\n\"Yes! Fuck me!\" Kaitlyn was immediately in the mood, her legs picking up and wrapping behind me while I leaned over her and began to fuck her hard.\n\nI pushed forward, rolling her hips upward until her ass lifted clear of the mattress. With a little grin, I reached my hand back and SPANKED her... *hard*.\n\n\"AGAIN!\" Kaitlyn cried.\n\nI let fly with another spank on the same cheek, as hard as I could do it.\n\n\"YES! Fuck me! Fuck me!\" the teenager squealed.\n\nAnd the animal came back out. He was all my baser instincts, and he was the one in charge now.\n\nKaitlyn saw the glimmer in my eyes and a wicked grin came across her face. \"Do it,\" she growled. And then she leaned her head back, baring her neck for me.\n\nI brought one hand up and slowly began to squeeze her neck.\n\n\"Ungh,\" Kaitlyn gurgled, and then her eyes rolled up in her head and she gaped her mouth open in a silent scream as her body went completely rigid, locking up entirely. Mid-thrust I felt the inner clamping of her muscles as she tightened up and came.\n\nAnd THEN I started machine-fucking her.\n\nI immediately let go of Kaitlyn's neck after her climax, burying my head against her shoulder while I got a new grip on her hips and started fucking as hard and as deep as I could possibly go. I didn't care anymore about her pleasure. And yet I knew she would find it anyways.\n\nFaster and faster I humped the young teen like she was a personal masturbatory tool, and I rapidly felt the pressure building up in my balls.\n\n\"Come on me, Jeff. Come all over my big tits and then we'll watch Taylor lick it off of me. Cum, baby. CUM!\"\n\nAt the last moment, I yanked my cock out and spread Kaitlyn's legs to the side as I leaned forward and let fly with the first jet of cum. It fired hard and fast right at Kaitlyn's neck, impacting just beneath her chin and leaving a trail of white spooge down the front of her throat. The second blast hit the middle of her chest, and then as I stepped forward with one foot, I emptied out the rest all over Kaitlyn's round tits and swollen nipples.\n\n\"Fuck!\" I growled as I jacked out the rest, and then when the adrenaline started to leave me and I tired of jerking my cock, Kaitlyn herself reached up and milked out the last few drops.\n\nWhen we were done, Kaitlyn turned to Taylor, who just looked back and forth between us with an expression of awe.\n\n\"You two were incredible,\" she shook her head before glancing at me. \"You be careful with that gasping-neck thing, though.\"\n\n\"I will,\" I promised.\n\nKaitlyn just giggled to her friend. \"Isn't he perfect for me? Now, do you feel like some more salty goodness?\"\n\nI just sat back on my heels and watched as Taylor bent her head down and let her tongue go to work.\n\n***\n\n*MONDAY*\n\n*DING DONG* *DING DONG*\n\nWhuh?\n\n*DING DONG* *DING DONG*\n\nI sat up in bed, squinting against the morning light. The doorbell stopped ringing and in its place was a hard pounding at the door. Immediately, I reached across the bed for Kaitlyn, only to come up empty. After spending both Friday night and Saturday night in her bed while her parents were on vacation, I'd gotten rather used to sleeping with her. Part of falling in love meant I wanted to spend every waking second with her. But her parents returned last night and I had work in the morning. I realized then that I was back in my own apartment and alone.\n\n*BAM BAM BAM*\n\nI glanced at the clock. It wasn't even 7am yet. What the hell was going on? Was there a fire in the building or something?\n\nI managed to step into some pajama pants before stumbling, shirtless, to the front door. And then I looked through the peep hole.\n\nAh, HELL.\n\nI pulled away quickly, but Melody just started yelling \"I KNOW you're in there, Jeff! I saw you blocking the light in the peep hole!\"\n\nRolling my eyes, I unlatched and then unlocked the door, pulling it open.",
        "\"Hi, sweetie!\" Melody's face was bubbly and she leaped into my arms with a warm hug.\n\nI staggered back under her weight as she pecked my cheek, confused beyond belief. Melody had spun on a dime from righteous rage to bubbly cute. She was good at doing that. I held her away from me as if she was radioactive and looked her right in her face. \"You're bipolar, you know that?\"\n\nShe shrugged. \"I brought you breakfast!\" She held up bagels and a coffee caddy with two cups on it. \n\nSmiling widely, the bouncing bottle-blonde handed me a cup and then flounced over to my table, sitting down in a chair and clearly expecting me to sit with her.\n\n\"Mel, do you know what time it is?\" I asked as I walked over, my brain still not processing at full speed just yet.\n\n\"Yeah, almost seven. Don't you normally get up soon?\"\n\n\"The operative word is 'soon'. As in... 'not yet'.\"\n\n\"Well, we're getting you a head start on the week.\"\n\nI sat down and automatically reached for the bagel bag. \"Mel, what are you doing here?\"\n\n\"What? A girl can't bring her boyfriend breakfast to start the day?\"\n\n\"Boyfriend? Uh, you dumped me on Saturday. Remember?\"\n\nShe shrugged and waved me off like it was no big deal. I was suddenly reminded of when she bitched about me \"cheating\" on her with Taylor and then the next day she got herself transferred so that we could start dating publicly. I was starting to wonder if my bipolar comment wasn't more accurate than I thought.\n\nMelody got up then and waltzed into my kitchen as if she owned the place. She'd been to my apartment many times and with casual familiarity she opened up a cabinet and got my bottle of sugar. She came back with it and popped the top on her coffee cup. \"I never put in enough sugar while I'm at the coffee shop.\"\n\nI sighed and then resigned myself to drinking my coffee and putting cream cheese onto my bagel. A big part of me wanted to understand what was going through Melody's head right now, understand why she'd woken me up so early by banging down my door and then immediately flipped into a homey morning as if we were an old couple getting ready for work together. But I still wasn't fully awake yet and I had no energy for such an intense kind of conversation. So I just stayed quiet and bided my time to wait until the caffeine hit me.\n\nI was silently cursing the cheap plastic knife they'd provided for the half-frozen cream cheese when I heard the low squeak of a chair across tile. I looked up to see that Melody's chair had been shifted back, but Melody was nowhere in sight.\n\nNo sooner did I begin pondering this puzzle than I felt a cool hand tugging at my pajama pants. \"The hell?\" I half-crawled out of my chair, which ended up giving Melody just the opportunity she needed to pull my pajamas and boxers down my ass and to my knees.\n\nAnd then with a firm grip, she plunked me back into my chair, ducked her head into my lap, and slurped my limp noodle into her mouth while she knelt underneath the dining table.\n\n\"Melody!\" I gasped.\n\n\"Mrrph,\" she gurgled around my cock, which was quickly rising in her talented mouth.\n\n\"What are you doing?\"\n\nShe just rolled her eyes in a 'well-DUH' expression.\n\nImmediately I thought of Kaitlyn. It's not like we were monogamous or anything. In fact, it's not like we even formally discussed being boyfriend/girlfriend or anything like that. But still, I felt like I was cheating on Kaitlyn right now.\n\n\"Mel! Please, stop. Please.\" I tried to pry her head off me, tugging upwards as firmly as I could without risking her teeth on my cock nor pulling hard enough to bang her head into the tabletop. It wasn't working.\n\n\"Stop. You gotta stop!\"\n\nShe finally pulled away. \"Why? Your cock seems to be enjoying this.\" And then she went right back down.\n\nShe was right about that. Melody was an expert cocksucker and the longer she kept blowing me, the more my resistance crumbled. I made a few more half- hearted attempts to brush her away, but my sluggish mind wasn't working well enough to let me focus on anything but the pleasure.\n\n\"Ohhh,\" I groaned involuntarily.\n\nMelody smiled and simply worked even harder.\n\nAfter about five minutes, I was slumped in my chair, coffee and bagels and Kaitlyn forgotten. My eyelids were heavy, and while my hands were still on Melody's head, they simply held her as she bobbed and moved, doing nothing to impede her movements.\n\n\"Ohhh,\" I groaned again, and this time Melody slowly sunk me into the back of her throat, fighting past her own gag reflex until her lips were pressed to my base.\n\n\"Fuck!\" I exclaimed as I felt the pressure in my balls come to a boil. My hips jerked, sending my cockhead into Melody's throat, gagging her so that she came up coughing. But as the head of my pecker came apart, she surrounded me once again in her hot little mouth just in time for me to start filling it with my cream.\n\nHer right hand came up and jacked me while the cute blonde pumped more and more man juice out of me. I watched her nostrils flaring as she worked to breath while I shot over and again.\n\nAnd when I was done, Melody tilted her head back, the tabletop obscuring the view of her face until all I could see was her mouth gaping wide open and the pool of my jism she'd saved right there.\n\nIn one gulp, she swallowed it all down and then showed me her empty mouth before ducking out from underneath the table with a satisfied grin on her face.\n\n\"Mmm... protein...\" Melody giggled.\n\nMelody acted as if her angry rant Saturday morning never happened. As if we were still under our original agreement: dating, open relationship, no pressure. Technically that meant I could fuck Kaitlyn or Charlotte or Taylor or whoever on the side and I was still dating Melody.\n\nBut I wanted more than that... with Kaitlyn. And to do that, *I* might be the one who needed to break up with Melody.\n\nBut it was still early. The caffeine still hadn't hit me yet and while orgasms are wonderful, they only help turn the brain into mush. Melody and I needed to have a long talk...\n\n...later. For now, I just needed to clean up and get ready for work.\n\nAnd so began the most intense and life-changing day of my life.\n\n***\n\n\"Hey! Kaitlyn, it's so good to hear from you!\" I rocked my desk chair back and put my feet up on the desk. Running my fingers through my hair, I exhaled and felt a wave of tension roll off of me. It's amazing what the sweet sound of a woman's voice can do for a man when he's falling in love.\n\n\"Hi, Jeff!\" The teenager giggled. Her voice made me feel like a kid myself again. \"Are you busy for lunch?\"\n\n\"Even if I was, I'd make the time for you.\"\n\n\"Aww, you're so sweet. Well, I AM in the area. Would you like to meet up?\"\n\n\"Sure thing! Name the place and I'll be there.\"\n\nTwo minutes later, I was on my way out the door, saying, \"Erica, I'm heading out to lunch early.\"\n\n\"Got it, boss.\" The brunette nodded as I left and went right back to work. She was efficient, as always.\n\nThe elevator ride down to the lobby was interminable. I did my best to remain calm, but there was a giddy energy inside of me that made me want to start dancing. After spending my first serious time away from Kaitlyn since we discovered we really wanted to be together, I was so relieved she seemed to still feel the same way.\n\nWhen we stopped at the second floor to pick up more passengers, I thought I was about to DIE.\n\n'Why the hell aren't you taking the stairs you lazy sonofabitch!' I thought to the executive with the big beer gut who boarded the elevator car at the second floor.\n\nFinally, I landed and was heading for the main doors in a barely controlled fast- walk.\n\n\"Hey, Jeffie!\" With expert coordination, a soft hand slipped into mine and I caught a flash of blonde hair as I turned in surprise.\n\n\"Mel! What are you doing here?\" Was the girl stalking me now? I slowed down as Melody fell into sync with me as we approached the main doors. Automatically, I held the door for her as she went through and then pulled me out onto the sidewalk with her.\n\n\"Going to lunch with you!\"\n\nI stopped dead in my tracks. My jaw waggled a few times before I managed to croak. \"Wha-? No, no. I'm meeting... someone... for lunch.\"\n\nShe nodded with her mouth in a firm line. \"I figured. And I'm going with you.\"\n\n\"Melody, you can't just invite yourself along.\"\n\n\"Well, I just did.\"\n\n\"Mel, we talked about this. I don't own you. You don't own me. You can see whomever you want and I'm not going to interfere. That goes both ways.\"\n\n\"You're meeting the blonde teenager, right? The one you were with Friday?\" She didn't have to wait for me to answer verbally. She saw it in my eyes.\n\nI sighed. \"Her name is Kaitlyn.\"\n\n\"Whatever. I'm going with you. Try to walk away from me and I'll follow you.\"\n\n\"Mel, that's insane!\"\n\n\"No, it's just a fact,\" Melody stated sternly. \"So now you have a choice. Either you cancel and tell her you're eating lunch with your girlfriend or you go and I WILL be coming with you.\"\n\nNeither option sounded very appetizing. But what other choice did I have? Break up with her here on the street?\n\nAs if reading my mind, Melody flatly said, \"Even if you dump me right now, Jeff, I'm following you wherever you go.\"\n\nI stopped dead in my tracks, looking at my ex-administrative assistant in confusion and with a healthy dose of fear. Right now, Melody seemed capable of *anything*. I wouldn't have been surprised if she pulled out a handgun and shot me where I stood.\n\nSo sighing, I nodded. Kaitlyn, Melody, and me all in one place. I only hoped Melody wouldn't make a scene.\n\n***\n\n-- KAITLYN --\n\nI was absolutely buzzing with excitement. I'd never known that falling in love could feel so... so thrilling! So energizing! And yet, so heartbreaking. After Saturday's party, Jeff and I had holed up together and barely left each other's side for a full 24-hours. Daddy was immediately suspicious that I was seeing a boy since I stayed out of the house for so long, but he was always suspicious of me.\n\nThe sex with Jeff was incredible, of course. But more than that, I'd never realized how much pleasure could be had just from being nearby to someone you were falling for. I'd cuddled... some... Usually it was just nice to feel the hot skin of your lover beside you. But I never knew that sleeping in Jeff's arms could be so amazingly wonderful!\n\nAnd then last night, sleeping alone felt like the worst punishment I could imagine. Stupid parents. Why couldn't he be with me? Why couldn't he ALWAYS be with me?\n\nBut he would be here soon. He would walk in the door, he would look at me adoringly, and my heart would melt while my panties got wet and I would fling myself headlong into the whirlwind of young love and simply enjoy being near him once again.\n\nI heard the door jingle and glanced up, hope floating my heart up into my throat. \n\nNope. Some elderly Jewish couple. I sighed and went back to stirring my iced tea.\n\nThe door jingled again and I looked up, and THIS time my face broke into a wide smile as I saw him. Funny... he looked even cuter than I remembered. Maybe I was becoming biased, but while he wasn't classically handsome, I found myself longing to rub my hand on his cheeks and gaze into his twinkling eyes.\n\nJeff's head swiveled, looking around for me. And when he saw me his face lit up and that adoring look came into his eyes. If he asked me to marry him right then I would have gleefully said 'YES!'\n\nBut then his face fell, and rather nervously he looked back at the bottle-blonde following him into the caf\u00e9. She was very pretty, and her hawk-like eyes followed his gaze and then her dark eyebrows tilted inwards venomously when she saw me.\n\nWhat the hell was he bringing a girl with him for?\n\nQuickly, Jeff walked up to the table and I stood to greet him. There was an awkward pause as I fought off my desire to launch myself into his arms and shove my tongue down his throat. In the end, we exchanged a stiff hug as I looked questioningly into his eyes. \"Hi, Jeff. Who's your friend?\"\n\n\"I'm Melody,\" the girl said sweetly and smiled, although I could hear the edge in her voice. \"Jeff's girlfriend.\"\n\nI THINK I managed to keep the surprise off my face. \"Girlfriend? Oh... uh, pleased to meet you.\" I held my hand out to shake and simultaneously shot a glance at Jeff.\n\nHe sighed as he we all took our seats. \"You're not my girlfriend, Mel. You dumped me, remember?\"\n\n\"Pssht. I was never serious,\" she waved him off. \"Well, aren't you going to introduce us?\" She flicked her gaze to me, clearly evaluative.\n\nAs if he was carrying the weight of the world on his shoulders, Jeff wearily gestured between us. \"Melody, this is Kaitlyn. She's a friend of Taylor's and an architecture student at Columbia. I believe Erica mentioned that she stopped by last Friday to take a look at the plans.\"\n\n\"A student, hmm.\" Melody said discerningly. \"How old are you?\"\n\n\"A woman never tells,\" I responded with a slight chill in my voice. Now that I'd gotten over my initial surprise at Melody's presence, I felt like I was being subtly insulted.\n\n\"Well, to look at you I'd have to say you were still a teenager.\" She swiveled to Jeff. \"Robbing the cradle now, are we? She IS legal, isn't she?\"\n\n\"What? Are you going to report me?\" Jeff said in a slightly exasperated voice. Clearly, he wasn't comfortable with Melody here. For a moment, I wondered if she really was his girlfriend and he was trying to hide me from her. If so, that just made him a two-timing jerk worried that he'd finally been caught red-handed.\n\nBut the way he was looking at me made me think that wasn't the case. Rather than having a pleading look in his eyes that I don't blow his cover, he looked apologetic that I was being dragged into something that perhaps didn't involve me. That, plus his previous \"dumped\" comment.\n\n\"So Melody, have you two been dating long?\"\n\n\"About six months,\" she answered at the same time Jeff repeated \"We're NOT\".\n\nMelody fluttered her eyes at Jeff with an aww-poor-confused-baby expression on her face. \"Jeff was my boss. I was his admin. We've been intimate together for six months. Those are facts you can't deny, right?\" she asked Jeff.\n\nResignedly, he nodded. I felt a chill come over my heart.\n\n\"And recently we agreed to start dating. I changed jobs so our intimacy wouldn't interfere with our working relationship. And we agreed to be boyfriend/girlfriend. That's all true as well, right?\"\n\nJeff sounded defensive. \"That's true, but that's not the whole story.\"\n\n\"Oh, Jeffie,\" Melody patted his shoulder. \"We shouldn't bore her with the details.\"\n\n\"And... Kaitlyn, right? You two have been getting... intimately involved?\" Melody quickly asked me in her sweet/edgy voice again.\n\nI looked to Jeff, not sure what he was thinking or what he might want me to say. My mind was a jumbled mess. One moment, I'd been happily eager to see him and pick up our romance where we'd left off. The next I was feeling defensive in front of his ostensible girlfriend. \"Only recently.\" I looked at him as if to say 'what- the-hell-is-going-on?'\n\n\"No need to feel embarrassed, Kaitlyn. My man here is quite skilled. I know very well how happy he can make a woman. You see... we have an open relationship. He's free to spread his love to cute, young things like yourself. Just as long as you understand,\" Melody's voice dropped. \"*He's mine.* Okay?\"\n\nFor a second I felt like my heart was being ripped out of me. I'd thought that Jeff was falling in love with me, too. But was he just using me? He wouldn't be the first man. Right after the whole John-Kwong-pregnant fiasco I'd dated two other older men who just used me as a teenage plaything. And Jeff couldn't deny Melody's assertions that they'd started a dating relationship and that he was her boyfriend. That made ME the \"other woman\". My lower jaw quivered and Jeff looked like he was ready to die as he buried his forehead in his hand.\n\nAnd then I caught the look on Melody's face. She seemed... triumphant. Like she'd won. And then I realized, there was MUCH more to this than she was letting on.\n\nJeff had been screwing Taylor. And Taylor certainly had never met Melody; else she would have mentioned it to me. This meant that for some reason, Melody felt the need to meet me and establish some dominance over me.\n\nThat meant Melody felt threatened by me. That meant Jeff really did have feelings for me.\n\nAnd that thought gave me strength.\n\nI straightened my spine and cocked my head, coolly evaluating Melody. The older girl noticed my new posture and became more alert, the self-satisfied smirk on her face evaporating.\n\n\"Well,\" I began in the same sweetly venomous voice Melody had been using. \"I'm glad we got a chance to meet, Melody. I must admit, Jeff is AMAZING in bed and it's quite a relief to know you are open to letting me borrow him every once in awhile.\" I batted my eyes prettily.\n\nOoh, Melody smelled a catfight. And with her genteel veneer in place, she smiled sweetly. \"Oh, it's no problem. Jeff is a wonderful man and at those times I have no further use for him, I'm only too happy to share my bounty with the little people.\"\n\nNow I knew I was being insulted. She was a freakin' secretary and she was trying to condescend to me. \"Well, what can I say? Young people like me have too many hormones and not enough sense to keep out of trouble. I'm happy I can let out all that energy on a trustworthy man like Jeff. You're lucky to have found someone who can keep up with you AND satisfy a horny teenaged nymphomaniac like me at the same time. There are times I just want to stay in bed and bring me and my man to orgasm over and over again for hours on end.\"\n\nI dropped my voice to a conspiratorial whisper and leaned forward. \"When he fucked my ass, I felt like melting. My orgasms were incredible.\"\n\nJeff's eyes were pingponging back and forth between us, looking even more confused than ever.\n\n\"You let him fuck your...\" Melody flustered for a second before schooling her features. \"Well, I do have him well-trained. After all, what kind of girlfriend would I be if I didn't make sure my man didn't learn all he could? I'm happy that *my man* was able to please you.\"\n\n\"Oh, he does. Anyways, it's good for me that he already has you for a girlfriend. The last thing I want is to make a man fall in love with me... again...\" I bobbed my head like such an event took place frequently and was of SUCH an annoyance.\n\nI smiled and continued. \"I'm sure you make him so happy that he'd never dream of wanting to lose the strong emotional bond you've formed together. You must feel SOOO comfortable and secure in your relationship to let him have some playtime on the side. After all, men have their urges and it's very healthy of you to acknowledge that and give him the freedom to release his lust. I know from personal experience that a man's dick will inevitably find someone else's pussy whether you try and tie him down or not. So establishing the openness of your relationship was definitely the right way to go.\"\n\n\"Uh, thanks...\" Melody said with some confusion. I don't think she was expecting me to take my compliments in that direction.\n\nI was on a roll. \"So, I'm happy to know you're confident enough in your relationship that you aren't threatened by me. I've got an itch that just really needs to be scratched and Jeff is sooo good at scratching it, so I WILL be around quite often to take advantage of your... openness... to the relationship. But don't worry. I understand that he's yours and I would *never* do anything unless I knew it was okay with you.\"\n\n\"Uh-huh.\" Melody wasn't quite tracking me.\n\n\"Great! Well, anyways, I just remembered that I'm meeting Taylor downtown. You guys go ahead and have your lunch. The teriyaki chicken is REALLY good here.\" I stood up. \"Melody, it was nice to meet you.\"\n\nI pecked Jeff on the cheek while he looked at me as if I'd sprouted horns. \"Jeff, I'll see you later. Call me.\"",
        "And like a whirlwind, I blew out of the caf\u00e9. Only once I got outside did I let a grin spread onto my face. Jeff and I were still going to need a LONG talk to figure out what the heck was going on and to give me the full story on what the deal was between him and Melody.\n\nBut for now, at least, I had the upper hand.\n\n***\n\n-- JEFFREY --\n\nWell THAT was weird.\n\nOne minute, I'm wincing in pain as Melody rattles off all the verbal commitments we'd made to each other while I freak out that Kaitlyn's never going to want to talk to me again and walk away before I can explain.\n\nThe next minute, Kaitlyn has simultaneously expressed a lack of interest in getting serious with me and also managed to get what sounded like a green light from Melody, my \"girlfriend\", to keep on fucking me.\n\nI know all men are slightly clueless, but sometimes I really wish I could be better at figuring out what the hell was going on. Something in the back of my head told me that much more had been exchanged between Kaitlyn and Melody than I'd caught, but I didn't know enough to understand exactly WHAT they'd communicated to each other.\n\nMelody wasn't much help. She simply went about ordering her food and then we lapsed into relative silence.\n\nIt was possibly the quietest lunch I'd ever had with her.\n\n***\n\nMelody was still quiet and lost in her thoughts as we returned to the office. We rode up the elevator in silence, and just before we reached our floor, she slipped her hand into mine.\n\nHer touch felt so comfortable and casual that at first I barely noticed. We stepped out and immediately saw the receptionist, who merely smiled at us as if we were just another loving couple returning from lunch together.\n\nAt first, we walked together down the hallway towards our respective workplaces. Melody had already begun her new duties, but when we came to the intersection where she normally would have turned to go to her new desk, instead, Melody gripped my hand even tighter and turned in the opposite direction.\n\nI was about to open my mouth and ask what was going on when Melody quickly looked around, confirmed no one was looking in our direction, and then before I knew it she'd pulled me into the janitorial closet.\n\n\"Melody!\" I hissed to my ex-assistant, but then she slammed me into the only open wall amongst the racks of cleaning products and individually-wrapped toilet paper rolls.\n\n\"Fuck me, Jeffie,\" she husked from an inch away, her hands already busy at my pants.\n\n\"Now?\" I looked at her wide-eyed.\n\n\"Just a quickie,\" she growled. \"I haven't had you since last Wednesday.\" She dropped my pants and shorts to my ankles and then tugging upwards at the hem of her pencil skirt. Once she got the tight fabric to her hips, she pulled the crotch of her thong panties to the side while her right hand started jacking my cock, but I wasn't rising right away.\n\n\"But you've had others since last Wednesday,\" I said somewhat coldly.\n\n\"And so have you,\" she half-snarled right back at me. Frustrated that I wasn't immediately erect, the cute blonde dropped to her knees and promptly inhaled my prick.\n\nI groaned and let my head loll back as Melody's talented mouth worked me over. A part of me didn't want to do this. Something felt... *wrong*... between us. Something that had to be fixed. Ever since that first hookup with Taylor, which felt like ages ago, it was like Melody had become a different person. And it was hard to still feel now what I felt for the old Melody before.\n\nNevertheless, she was quite the cocksucker and without any help from me, she had my cock at full mast. Standing up quickly, she lifted her right leg and automatically I scooped her up in my hands. She was already gushing wet and she whimpered again, \"Fuck me, Jeffie...\"\n\nI slotted into position and then with the burn just starting into my forearms, I lowered her body while my dick ascended upwards into her wonderfully familiar pussy.\n\nThis wasn't the first time we'd used this janitorial closet for a quickie. Once I was fully embedded, I hefted her over to one of the racks and settled Melody's ass onto its edge. Once the cool metal was supporting her weight, I was able to hold her hips and start thrusting. Her legs scissored around my back and she clutched me tightly to her as we energetically started fucking each other.\n\nSo much had changed in the span of little more than a month. Back then, it had been only me and Melody. Now, there was so much more standing between us: Kaitlyn, Taylor, Charlotte, and Richie Solomon even. We used to be so free with each other. I used to know what Melody was thinking and we had a comfort and trust with each other that extended into a perfectly harmonious working relationship.\n\nThings were just so much simpler back when we were just fuck-buddies and there was no one else around.\n\nAs if on the same wavelength, Melody leaned in until our foreheads were pressed together. We were both looking down and panting as our hips continued to drive towards one another over and again. I groaned feeling the intense pleasure radiating through my body from my cock as it pushed in and out of Melody's tight tunnel.\n\nBut Melody was crying. I saw the tears rolling down her face as she whispered, \"What happened? What happened to us?\"\n\n\"I don't know,\" I grunted. \"Things change. We changed.\" Despite the heaviness of our moods, the pleasurable feelings running through me kept my cock hard. Melody simply felt too damn good.\n\n\"Why? I wish we'd never changed. I wish we could have always stayed the same. The way we were. I miss that.\"\n\n\"Doesn't work that way, Mel. Life is change. And I couldn't be your fucktoy forever.\"\n\nShe shuddered and clutched my shoulders tighter. \"You never complained. And you didn't seem to mind when Taylor wanted to make you a fucktoy.\"\n\nI grunted as the sensations spurred me to speed up. Melody was huffing and panting erotically even while her tears kept rolling. \"Taylor... ugh... Taylor never got jealous.\"\n\n\"Didn't I have a right to be jealous? You were mine!\"\n\n\"I'm not yours, Mel. I never was. That's the commitment you never wanted.\"\n\n\"It's not fair.\" She sniffled and clutched my shoulders. \"It's your fault. You never told me I needed your commitment. I just thought I already had it.\"\n\n\"It doesn't matter now, Mel.\"\n\n\"You're going to leave me for her, aren't you?\"\n\nI was. I was falling for Kaitlyn. I sighed and looked away. \"Mel...\" I began slowly.\n\n\"No!\" she screeched, louder than I would have liked. Someone might have heard her. And then Melody lunged off the shelf, wrapping all four limbs around me and causing me to scramble just not to drop her.\n\nMelody's weight pulled her downward and thrust my cock as deeply as I could go into her pussy. And with a wicked gleam in her eyes she started to MOVE.\n\nHer hips were stationary as I staggered to regain my balance and put her back on the shelf. No, Melody was moving *inside* her pussy. Her inner muscles clenched and released and rolled in some incredible pattern that felt absolutely exquisite on my cock. I couldn't help but groan at the sensation and once I got her butt onto the ledge, she began rolling her hips to fuck me harder.\n\n\"Mel...\" I pleaded as the feelings started to overwhelm me, but I was already in her grasp. The pleasure was taking over and I felt helpless beneath Melody's physical onslaught.\n\n\"Mel...\" I tried again. I realized that my feelings for Kaitlyn were more than just lust. I realized that despite my reluctance to separate from such an intimately close friend like Melody, it really was for the best. I realized that I needed to break things off with Melody before I hurt her even more.\n\nBut I couldn't help it. As if I was trapped in a swirling vortex, Melody's expert lovemaking sucked me down the path of no return and she clamped her teeth onto my neck as her entire body pulled and pushed me in and out of her quaking pussy.\n\n\"Oh, fuck,\" I groaned. \"Oh, fuck...\"\n\n\"Yes... CUM...\" Melody growled. \"Cum in me, boss,\" she whispered. \"Fill your sexy secretary with all your spunk.\"\n\nMy hips jerked and then I was doing as Melody demanded, blasting my load to splatter against her innards and coat the walls of her pussy with my creamy, white juice. \"Ohhh...\" I groaned and jerked again, firing away, and then my hips kept shuddering as I blasted shot after shot into Melody's tight body.\n\nWhen I was done, I sagged against the rack with my forehead against Melody's shoulder. She patted my back and whispered, \"Good boy...\"\n\nWearily, I managed to stand up and pull myself out of my ex-admin's saturated pussy. She opened a pack of paper towels and tidied herself up while I simply tried to catch my breath. Before I could pull my pants up, she bent over and suckled me into her mouth, slurping up our combined juices before patting me with a fresh paper towel. And then Melody even helped zip up my pants.\n\n\"Aww...\" she clucked at my neck, and I realized I must have a sizeable hickey there. \"Go back to work,\" she said sweetly. \"I'll see you later.\"\n\nAnd with that, Melody popped the door and slipped out.\n\n***\n\nIf Erica noticed the hickey, she didn't comment. I gave her a set of new tasks and then tried to wall myself in my office. My mind kept drifting. What the hell was I going to do about Melody?\n\nHow could I break things off and get a fresh start with Kaitlyn?\n\nDid I even deserve Kaitlyn? Did she want me? And if she didn't want me, shouldn't I STILL break things off with Melody? That relationship simply wasn't healthy.\n\nAnd what was I feeling for Kaitlyn? Was it real? Was I just frustrated with Melody's bipolar outbursts and passive-aggressive clinginess? Kaitlyn was just a kid. She was six years younger than me, still a teenager, and still in college! Physically, sexually, that was a very GOOD thing. But romantically... could it be for real?\n\nAnd still the Melody thing wasn't resolved. But I knew what I wanted. I knew WHO I wanted. I HAD to see her again. I had to take the risk and put myself out on the limb. Deep in my heart, I knew it wasn't a risk at all. So I called her.\n\n\"Hello!\" Kaitlyn bubbled into the phone.\n\n\"Hi...\" I drawled, feeling a lot of tension melt away merely at the sound of her voice. \"It is SOOO good to hear you,\" I said.\n\n\"Mmm... you too.\"\n\n\"Look, about Melody. I'm really sorry about lunch.\"\n\n\"Don't be. I get it. Well, I don't get all of it. But I think that's something we're going to need to discuss at some point.\"\n\n\"We will,\" I agreed. And then almost hurriedly, I began, \"Look, Kaitlyn, I need to get this out in the open. I know that the timing may not be right and maybe I should wait until we see each other in person; but I've just seen WAY to many movies where people delay what they want to say and everything goes to hell.\"\n\nKaitlyn giggled at that.\n\n\"I like you,\" I said seriously. \"I really, really like you. I might even be falling for you.\"\n\n\"Ahhh...\" Kaitlyn sighed, quite happily, on the other end of the line. It was a very good sign.\n\n\"I can't explain it in anything so simply. I just know when I look at you that I want to be with you. And not just the sex. I want... I want...\" I searched for the right word.\n\n\"I want to ADORE you, Kaitlyn.\"\n\nShe hummed through the speaker and for a second I thought she just had an orgasm.\n\n\"But I've got some baggage,\" I said morosely. \"This thing with Melody... she's right about one thing. We've had something that's not so easy to let go of. But I want to let go of it. I want to let go of her. We're together, we're not. We're dating, we're broken up. It's... it's all gotten so complicated.\"\n\n\"Do what you need to do, Jeff,\" Kaitlyn said reassuringly.\n\nI smiled. \"I'm breaking things off with her tonight. And then, I'll see you later. Can I meet you somewhere?\"\n\n\"Just call me. Once you're done, I'll meet you anywhere.\"\n\n***\n\n-- KAITLYN --\n\nHe wants to adore me.\n\nI flung myself back across my bed and stretched out. The homework sitting on my desk was forgotten.\n\nI couldn't stop grinning and actually started giggling as I rolled around in my own sheets. He wants to adore me!\n\nI'm in love.\n\nI'm in love, I'm in love, I'm in love.\n\nI have to tell somebody!\n\nI quickly got up and grabbed my purse and jacket. I headed for the front door, passing by Daddy's maid. \"I'm going out for a while,\" I told her as I left.\n\nSure, I could have used the ladder. But as often as possible, I left out the front door and went upstairs the normal route, especially when my parents weren't around and therefore I didn't need to sneak past them.\n\nI found Taylor in the Master Suite, lounging on a couch while idly watching Celebrity Sightings.\n\n\"I'm in love!\" I said gleefully. \n\nTaylor put her water glass down and arched an eyebrow at me while I bounced into the room.\n\nI laughed crazily as I spun around a full 360. \"And he loves me too! I know it!\"\n\nTaylor chuckled at my overeager teenaged energy and she simply opened her arms to me. I launched into her, wrapping myself up in her hug.\n\n\"I'm happy for you, kiddo,\" she patted my back. \"He's a good guy.\"\n\nI couldn't wait until Jeff called to meet me. Then everything would be perfect.\n\n***\n\n-- JEFFREY --\n\n\"Hi, Mel.\"\n\n\"Jeffie! What brings you out here into the wilderness?\" Melody stretched her arm across the sea of cubicles. \"Want another quickie in the janitor's closet?\"\n\n\"No, no,\" I waved her off. \"I wanted to invite you to dinner. It's been a while since our last date,\" I said calmly. \"Are you busy tonight?\"\n\n\"Too busy for you? Never,\" she said with heartfelt emotion.\n\nI blushed and glanced down, guilt eating away at me. Melody did seem so attached to me, and for a moment I felt like the biggest jerk in the world. The 'date' idea was just a ruse to get her to go out with me. I was hoping to get her somewhere public so she *might* not make a scene when I told her we needed to break up for real.\n\nBut I just put on a forced smile and said, \"I'll see you after work. Come by my office when you clock out.\"\n\nShe nodded and I quickly turned away.\n\n***\n\nI held the door and let Melody slide in first, and then hopped in after her.\n\nI leaned forward to give the cabbie the name of the restaurant where I'd made reservations. But before I could do so, Melody had already leaned over the seat and given him the address to her apartment.\n\n\"Mel, what about our date?\"\n\n\"What? So we can talk and flirt and blah-blah-blah,\" she said with her head bobbing side-to-side as if talking was the LAST thing she wanted to be doing. As if to punctuate her point, her hand slid over my crotch. \"This afternoon was just a quickie. I want the full enchilada tonight.\"\n\n\"Mel...\" I started and tried to remove her hand from my lap. So much for my idea of a public place where she couldn't make a scene. Still, a clean break needed to be done, in her apartment if need be.\n\nMelody giggled as she continued her attempts to grope me while I tried to fend her off without attracting too much attention from the driver. She laughed herself silly and then just leaned against my shoulder.\n\nSighing heavily she closed her eyes and wrapped herself around my arm. All went quiet in the cab for a minute.\n\n\"I miss you, Jeffie.\"\n\n\"Hmm?\" I looked over at her.\n\n\"I miss working with you. I get so lonely in the cubicle farm. I don't know that many people around me and they're all working on different things. And they've got me doing nothing but busywork all day. I miss your projects. I miss feeling like part of the team.\"\n\n\"Well, as good as Erica is, I have to admit that it's not the same without you up front,\" I mused.\n\nShe sighed heavily. \"I used to get to see you every day, talk to you every day. My old boyfriend, I'd actually get sick of seeing him every day after a while. But you? Never. There was no pressure. We chatted, we flirted, and if something happened then something happened. But you never demanded that I 'service' you. You never needed to know where I was every second of every day. Not like that controlling jerk. You were the perfect boyfriend.\"\n\n\"Because I WASN'T your boyfriend.\"\n\nShe went quiet for a long while. \"You were to me...\"\n\nMelody sighed again. \"I know you think we've only been together since last Tuesday. But for me... I feel like we've been a couple for the entire six months.\"\n\n\"Mel, we never talked about anything like that. Hell, I rarely ever even saw you on the weekends.\"\n\nMelody's eyebrows canted to the sides and she leaned into me. \"But we were together every day during the weekdays. And we were having sex more than half of those days. How many dating couples do you think can say they have sex three, four days a week?\"\n\n\"But that was it. We got to an apartment, did our thing for thirty minutes and then left.\"\n\nShe smiled. \"That's because we did all our talking at work. How many dating couples do you think can say they talk to each other for eight, nine hours every day?\"\n\nI looked out the window. The emotions I was feeling for Melody were only going to make breaking up with her harder. \"Not many,\" I said softly.\n\nBut all my old frustrations came back to me. \"Still, you say you'd never be too busy for me. Well NOW you make the time, now that there are actually other women in my life. Before, half the time I wanted to go out you were either 'busy' or 'not interested'. We went out and we screwed on your whim. I had no say in the matter.\"\n\nMelody went quiet for a long moment. And then as we turned down the final street to her apartment building, she said quietly. \"I'm sorry, Jeff. I'm sorry I took you for granted. I'm sorry I believed in my head that you were my boyfriend without discussing it with you. I'm sorry I got so jealous of Taylor and Kaitlyn. I'm sorry for screaming at you for having sex when I gave you express permission to do so. I'm sorry for being so afraid of commitment and screwing poor saps like the mail room intern and Richie Solomon just to try and prove to myself I wasn't in love with you.\"\n\nShe whimpered and snuggled herself closer to my shoulder. \"I need to say sorry now because I'm scared that I'm already too late. You see, I love you, Jeff. And I'm afraid that I'm going to lose you now.\"\n\nAnd then the car stopped. We had arrived.\n\n***\n\nMelody unlocked the door to her apartment and we quietly went inside. We weren't locked together in a passionate french kiss and we weren't hurrying off to the bedroom to shed our clothes and get frisky. Despite Melody's earlier comments about skipping past the food and the flirting to get straight to the sex, neither of us seemed in the mood right at the moment.\n\nMelody went straight to the living room and sat on the couch. She grabbed a hair clip and tucked her blonde hair back before planting an elbow on the backrest and resting her head against her open palm.\n\nI took the seat beside her, but not too close. We sat there in silence for a few minutes, still digesting the heavy words that hung in the air:\n\n'I love you, Jeff.'\n\nMelody had said them, but I scarcely believed I heard them. Everything I had ever known about Melody's emotions towards me had pointed to lust, affection maybe, but nothing more than that. She was horny, she loved to flirt, and she was rather possessive of me once she found out I might actually dare to sleep with another woman. But love?\n\nWere these some buried feelings she'd suppressed until she had no choice but to let them out? Or was this a ploy to keep her hooks in me and simultaneously prevent me from leaving her for someone else?\n\nAnd if it was real, what should I do?\n\nI still hadn't managed to answer any of those three questions for myself when Melody inhaled and readied herself to say something. I looked over, half-afraid to hear what she had to say. \n\n\"You were going to break up with me tonight, weren't you?\"\n\nI blinked twice in surprise. Perhaps I should have realized Melody could always read my moods.",
        "\"She seems like a nice girl. A little young, but nice. She certainly is pretty.\"\n\n\"Mel...\"\n\n\"Come on, Jeff. You met her what... last Thursday? It's been four days. Seriously, how well could you know her? Could you really throw everything we've had away for a... a... *teenager*... you've known for four days? What kind of future is there in that?\"\n\n\"Mel...\"\n\n\"What does she have that I don't, Jeff?\" Melody looked hurt. \"Is she so much prettier than me? Is it because she's taller? Younger? Or a natural blonde?\"\n\nI screwed my face up in a 'huh?'-expression.\n\n\"No, no. That wouldn't be you. Sure, you like 'pretty' but you're not that shallow.\" She sighed and looked away. \"Is it because I pushed you away?\" Melody started crying and she bit her lower lip. \"Is it because I started becoming a bitch about it?\"\n\nI reached out and touched her leg, pulling Melody's attention right to me as she fought back the tears. \"Mel, it's no specific thing. I can't point to any one event and say 'That's why'.\"\n\n\"Then WHY?\" she wailed and then choked off the sound.\n\n\"It's hard to explain. I just... *feel* it... with her. And with you Mel, there was always affection... but...\" I scrunched up my face, trying to put into words what I felt in my heart. \"But Mel, I never thought you cared. We had lots of chances to take things to the next level, and we never took them. I never thought you would feel anything more for me than... than 'convenient dick'.\"\n\n\"I'm sorry. It's all my fault. You asked me... more than once...\" Melody started whimpering and she put both hands on top of the one I was holding against her leg. \"Little things: you wanted to sleep overnight; you wanted to see me on a Saturday.\"\n\nMelody shuddered as the control she had over her tears finally broke and she started sobbing. \"I blew it. I was afraid. I didn't want to be in love again. I didn't want to be tied down. So many chances with you and I never took them. And now I'm losing you.\"\n\n\"Hey, what's so special about me? I'm just another guy, Melody. There are plenty of them out there.\" I frowned and some of my old frustration came back again. \"You certainly screwed a bunch of them.\"\n\nA hateful glare briefly flashed in Melody's eyes. I grimaced at the unkind comment and looked down. \"See... I'm not so great. I can hurt you just as much as anyone.\"\n\nShe exhaled and rubbed my hand against her leg. \"No, you're right. Most men would have called me a slut fifty times by now. You never seriously protested. You gave me my freedom. The only times you ever brought it up was when I tried to forbid you from fucking someone else. And maybe that's why. For six months, Jeffie, you cared about me in your own way. It was like I had the perfect boyfriend. We never fought. The sex was incredible. And you never judged me. I could trust you. I... I started having feelings for you.\"\n\n\"Me, too. But it's too late now.\" I thought of Kaitlyn. She was waiting for me.\n\n\"Why does it have to be too late? Can't we start over? Don't you still have the same feelings for me you did a few weeks ago?\" Melody's tears were drying up and she leaned in towards me.\n\n\"Mel... I can't help how I feel. And I'm honestly falling for Kaitlyn. I'm sorry.\"\n\nMelody leaned in ever closer, her lips parted in a light pant and her gaze bored straight into me. \"I love you, Jeffie,\" she said softly but sensuously. Her eyes were luminous and intense.\n\nFor a moment, I remembered how beautiful Melody could be and I remembered all the affection I felt for her. She brought her hand up and she placed her palm against my face, stroking gently.\n\n\"Six months... six months of incredible sex and hours upon hours of intimate knowledge with each other, Jeffie. We can build on that. I've fallen in love with you these past six months. And I KNOW you've had feelings for me. Let's see where we can go together. I'll stop screwing other guys. Just you and me. The way you always wanted it.\"\n\nMelody's nose was touching mine now and her husky voice echoed in my mind. Wasn't it what I'd always wanted? Even together, Melody would always give me the time to focus on my work and my career. She understood me, she understood my life. She'd lived it beside me for this long already. Was I really going to take the risk and start something with a 19-year-old girl who might very well be clingy and demanding?\n\nTaking my relationship to the next level with Melody made sense. Most in the office already knew we were dating. It would just be a natural extension of the relationship we'd already fostered together these past months. And all that animosity and tension these past couple weeks between us would go away. We could be happy again.\n\nAll my overthinking evaporated the moment the sweet taste of Melody's lips met my own. With one hand Melody still stroked my cheek and with her other she pulled my head tightly to her own. I inhaled sharply, happily taking in her familiar scent and I heard her moan into my mouth even as our tongues met and danced together.\n\nAnd I let the pleasure of Melody's kiss take me away.\n\n***\n\n-- KAITLYN --\n\nI set the blow dryer down and leaned forward into the mirror, making sure the waves in my hair were absolutely perfect. Half of my makeup kit was strewn across the countertop as I searched for EXACTLY the right combination.\n\nI didn't just want to be pretty. I wanted to take his breath away.\n\nI giggled to myself as I carefully arranged my breasts and adjusted the straps of my bra. I was quite proud of my beauties. I knew from personal experience that they could stop a man in his tracks from across the street. But there was only one head I wanted turning tonight.\n\nTaylor had sat me down and cautiously explained the dangers of falling so hard so fast. Not counting the brief glance in the smoothie shop, I'd really only met Jeff four days ago. And yes, we practically never left each other's side from Saturday night to Sunday evening. But there was scant little I knew of the man.\n\nBut what I knew was enough. I KNEW he loved me. I could see it in his eyes. And when he couldn't restrain himself from blurting on the phone how he wanted to adore me, I knew I'd found my own version of John Kwong.\n\nSo he wasn't that rich. That was okay. He was successful enough already and he was still young with plenty of ambition. So he wasn't that tall or handsome or had a monster cock. He was a good man and he adored me. That was all I ever wanted.\n\nI'd had enough of preening assholes who thought their family's money made my pussy their birthright. I'd had enough of Daddy's middle-aged business associates trying to cop a feel of my ass.\n\nI could be my own woman. I could have my own success. Taylor taught me that. True, she ended up marrying a billionaire, but she'd forged her own career before that. And while she was gorgeous, she was far from just a trophy wife.\n\nI didn't want to be a trophy wife anymore. I wanted to be in LOVE. All I really needed for that was a man who truly loved ME. And now I'd found him. Love at first sight really DID exist.\n\nSitting nervously, I eyed my cell phone, which was innocently sitting on the counter.\n\nSoon it would ring. Soon he would be coming to love me. Soon I would see that look in his eyes. And everything in my world would be perfect.\n\n***\n\n-- JEFFREY --\n\n\"Mel...\" I moaned.\n\n\"Don't talk,\" Melody husked as she whipped her top over her head and then planted her lips back on me. She'd already removed my shirt a few minutes before. I felt her fumbling for a second and then when she leaned into my body again, I could feel the hard points of her bare nipples pressing into my chest.\n\n\"Ohhh...\" I groaned knowing Melody's unbound tits were rubbing against me. And then with her tongue still lodged in my mouth, her hands went lower and started fiddling with the clasps of my pants.\n\nMy own hands had already hiked Melody's skirt up to her hips and I knew that once she freed my rock-hard cock, all it would take would be for Melody to slide the strap of her panties to the side and then I would be buried inside her personal slice of heaven.\n\nI groaned in anticipation. Melody had always been an incredible lover. I knew it from many, many ecstatic couplings with her. And with such a dynamic nympho writhing in my lap, someone with whom I had had history and someone who had already pledged her love for me, why did I need Kaitlyn?\n\nMy eyes snapped wide open. And my world crystallized.\n\nI loved Kaitlyn. It was irrational, but it was real. I couldn't explain the lightning bolts. I couldn't explain the undeniable chemistry. Melody had me wrapped around her little finger for six months. But the mere sight of Kaitlyn had me wrapped around her heart.\n\nI couldn't explain how the precocious blonde teenager simply OWNED me. But she did. It was like my soul already knew.\n\nMelody was blinding me in a haze of lust, but with a desperate cry, I pushed through the fog and simultaneously pushed Melody up and off me.\n\nJust in time. She'd already gotten my dick out of my pants.\n\n\"Mel, I can't.\"\n\n\"Please, Jeffie,\" Melody reached for me again.\n\nI was already trying to stuff my cock back into my pants, before temptation got a grip on me again. \"We both knew what I was going to do tonight. One heartfelt conversation doesn't change that. I can't be with you anymore, Melody. My heart belongs to Kaitlyn.\"\n\n\"But what about your feelings for me?\" she pleaded.\n\n\"They were what they were. I'd always had affection for you, Mel. But it was never love. If I'd been in love with you I would have fought for you as hard as I'm fighting to leave you now. What we had was 'fun'. What we had was pleasurable. But I was never more than a rebound to you, Mel. You were coming off the big breakup and you got comfortable with me. I don't pretend to know whether you really love me or not. But I think a big part of it is that you were comfortable. I was reliable. You could trust and depend on me.\"\n\nI found my shirt and pulled it on while Melody shrunk back against the couch and covered her nakedness with her arms, suddenly ashamed of her nudity.\n\n\"Mel, if you really loved me you would have made a point to show it a long time ago. But I was only ever convenient sex to you. And now that you might be losing your beloved pet you're fighting it. But that's not love.\"\n\n\"What if I just never realized what I had until it's gone?\"\n\nI sighed and buttoned my shirt back up. \"It's a nice clich\u00e9. Sometimes it means you didn't appreciate what you had enough. Sometimes it means you didn't CARE enough to appreciate it when you had it. I'm sorry Mel. But we had our chance, and now it's gone. I'm not trying to be mean. I always cared about you and I never wanted to see you hurt. But I can't keep stringing this along the way we have been.\"\n\nI finished dressing and got my keys. Melody was still curled up on the couch, but she wasn't crying. Instead, she simply stared at the floor, her gaze deliberately away from me.\n\n\"I'm sorry,\" I said with a heavy heart. \"I really am. There was a time I truly wished we could work out; but not anymore. Goodbye, Melody.\"\n\nMy thumb was already on the speed-dial to Kaitlyn before the door even closed behind me.\n\n***\n\n-- KAITLYN --\n\nThe ding went off and then I turned my shoulders and squeezed my way through the elevator doors, unable to wait until they parted a more appropriate distance. I raced down the hallway and quickly scanned each number before realizing I was heading in the wrong direction.\n\nCursing silently to myself, I changed direction and eventually found my way to Jeff's door.\n\nI knocked only once before the door flew open and then I launched myself into Jeff's arms. I was a bundle of energy and he lurched under my weight as I wrapped my legs around his waist and clutched him tightly.\n\nMy mouth was an airtight seal over his, and he ended up having to tap my back to get my attention and let him breath a bit. Once freed, he swung his head around to look for a suitable landing spot and managed to stagger over to the couch.\n\nWe sat down heavily with me in his lap and I pushed my face at his once again to resume our kissing.\n\n\"Whoa, whoa, kitten!\" Jeff held up his fingers to block my lips.\n\n\"I love it when you call me kitten,\" I blushed and tried to maneuver around his fingers.\n\n\"Must have picked it up from Taylor,\" he chuckled. \"Hang on, hang on.\"\n\n\"But... I'm so horny for you,\" I pleaded. \"I can't help it. I'm in love, Jeff. I'm in love with you. I can't believe it. I never thought I would feel this. But I'm in love. I'm in love!\" I bounced up and down in his lap.\n\n\"The energy of youth,\" he drawled. \"Seriously, we need to talk.\"\n\n\"Did you break up with Melody?\" I asked with the first touch of hesitation in my voice.\n\n\"Yes. We're done. Because I'm falling for you too, kitten.\"\n\nI squealed with glee and managed to press my tongue between his lips before he could stop me. I rubbed my firm body against his and was rewarded with a groan as his hands locked onto my asscheeks.\n\nThen I caught the scent. He had Melody on him. He didn't quite smell like pussy, but there was a definite muskiness that I didn't recognize.\n\nI pulled away and glared at him. \"Did you have one last fuck before you broke up?\"\n\n\"No!\" Jeff blinked with just a hint of fear on his face. \"Not quite...\" he sighed. \"She wanted to. She wanted to convince me not to break up with her. And she got pretty hot and heavy. But we didn't.\"\n\n\"Cute girl like that throwing herself at you and you said 'no'? What kind of a man are you?\"\n\nThen Jeff gave me that Look. You know, the one I love so much. \"I'm a man who's in love with you.\"\n\nI squealed again in happiness and started tugging at his clothes. \"I promise we'll talk later. Right now, there is NOTHING that's going to stop me from fucking you.\"\n\n\"Hey, I've already proven I can say 'no' to a hot girl throwing herself at me,\" he chuckled.\n\n\"Not when the hot girl is ME.\" I growled as I got his pants unbuckled and then yanked them down to his knees. \"I own you now, Jeffrey Lee,\" I growled with my teeth bared. \"You're mine!\"\n\n*** \n\n-- JEFFREY --\n\n\"I own you now, Jeffrey Lee. You're mine!\"\n\nAnd I was. This was love. I belonged to Kaitlyn and she belonged to me. When Melody had claimed ownership of me my first instinct was to feel annoyed and restrained. Melody's idea of ownership was to control me, to restrict me within her boundaries.\n\nBut Kaitlyn, she just wanted to love me and to have my love in return. I wanted her to own me. I wanted her to have a piece of every fiber of my being.\n\nWhat could I say? I was in love.\n\nAnd as Kaitlyn settled downward and my upright cock began spearing its way into her heavenly pussy, I sighed happily.\n\n\"This dick is mine, Jeff,\" Kaitlyn giggled.\n\nThis part about being owned wasn't so bad either. Now that we had gotten to where we wanted to be: with my cock embedded inside of her, we both managed to slow down.\n\nKaitlyn simply took my breath away. I saw the gleam in her eyes as she watched me looking at her, from beautiful hair to perfect face and dainty nose. I leaned further back into the couch and let my eyes trail down over her bounteous chest. I'm not ashamed to say that I lingered on the swells of her breasts, and automatically my hands moved up to slowly undo the three buttons holding her sweater together.\n\nKaitlyn rolled her shoulders back to help me as I parted the sweater and dragged it down her arms and then dropped the garment onto the floor. She rolled her hips slightly, just to add a little more contact to the feeling of me inside her. And then she bent to focus on my buttons and divest me of my clothing as well.\n\nWe took our time undressing each other, one article at a time. After she pulled my undershirt off, I reached my hands to the front clasp of her bra. Kaitlyn smiled shyly and put her hands on mine, as if nervous to let me remove it.\n\nIt was silly, to be sure. I'd seen her naked more than a few times already. But in a way, I felt like I was with a virgin. Kaitlyn was letting someone into her soul for the first time, and with her angelic, youthful looks and near-embarrassed expression, I was filled with the want and need to protect and reassure her.\n\n\"I love you, Kaitlyn.\"\n\n\"I love you, too,\" she smiled. And with her hands on mine, she guided me to open the clasp of her bra and then those wonderful breasts spilled out into my palms.\n\nKaitlyn shucked the bra and then held my hands over her boobs, and slowly she leaned in to kiss me. When she pulled away, she said happily, \"I am yours.\"\n\n\"And you, Kaitlyn Reynolds, I am yours, too.\"\n\nWe were still wearing too many clothes. And for some reason, I DIDN'T want to be doing this on my couch. With a firm grip on Kaitlyn's butt, I managed to get to my feet and kick off my shorts and pants. And then with her still impaled on my cock, I waddled into my bedroom. One benefit of having such a tiny apartment was that I didn't have to walk far.\n\nAfter laying my angel down on the bed, I only pulled out of Kaitlyn long enough to strip her skirt and panties and remove both our shoes. And then after climbing back on top of her and with Kaitlyn cooing at me, I slid between her legs and rejoined our bodies once again.\n\nHer feet hooked around my ankles and pressed our legs together. Her arms circled my back and held my torso along hers. My own arms locked in tight beside her shoulders, squeezing gently. We held one another and looked into each other's eyes and did our best to simply melt our bodies together into one being. This was love.\n\nI ran my fingers over her forehead and then kissed her gently. This wasn't just lust. The animal inside was no threat to take me over. I wasn't just going to fuck a hot chick. We, Kaitlyn and I, were making love.\n\n***\n\n-- KAITLYN --\n\nWe were making love. I was making love with a man who loved me. I was making love with a man who adored me.\n\nSo he wasn't the wealthiest man I'd ever dated. His apartment was tiny and the carpet was cheap. But it was HIS. And I knew WE would never want for material things.\n\nSo he wasn't the most gorgeous man I'd ever seen. I was proud to be on his arm and the way he looked at me was all I needed to make me feel sexy and make me horny for him.\n\nSo I barely knew the guy. He loved me. He was my soulmate. He was the counterpoint to my existence. That was all I needed to know about him. The rest didn't matter too much. We'd work it out.\n\nAnd as I held his body to me while his hot, throbbing cock brought me worlds of pleasure, I cooed into his ear, \"Cum in me. Cum on me. Take my mouth. Take my pussy. Take my ass. I am yours.\"\n\nI put myself willingly into his hands. I knew he would not disappoint me.\n\nI could see it in his eyes.\n\nAnd when our orgasms came, when he filled that hole inside me with the liquid expression of his love, we floated away together into a world of pure bliss.\n\n***\n\n*ONE YEAR LATER*\n\n-- JEFFREY --\n\n\"Jeffie, Edgar Marshall on Line 1,\" Melody's voice came through the speakerphone.\n\nMelody herself looked at me through the plate glass wall separating my office from her desk. I smiled and nodded and picked up the headset, hooking it over my ear.\n\nAn hour later, the hollow rapping on the glass got my attention as Melody stepped in and then tapped her watch. \"Hey boss. You'd better get going. Can't be late for something like this.\"\n\nI checked the clock on my monitor and then nodded. \"You should take the rest of the day off, too. Go meet up with Ryan,\" I grinned.\n\nMelody blushed. \"And what makes you think I'd want to be seeing Ryan again?\"\n\n\"Well, Erica told me you couldn't shut up about him yesterday at O'Brien's.\"\n\nMelody let a little grin creep across her face. \"Hmm. Well he DOES have a bigger dick than you.\"\n\n\"Hey! That's grounds for sexual harassment young lady,\" I chuckled.\n\n\"What, are you going to report me?\" She grinned.",
        "\"Seriously. Just make sure Anders finishes the Marshall draft and then you can take the afternoon off.\"\n\n\"You got it, boss. Have fun tonight. I'll see you...\" She shrugged. \"... when I see you.\"\n\nI grabbed my jacket and then headed out.\n\n***\n\nTwo hours later I was in position, clad in a perfectly pressed tuxedo and neatly groomed as I stared down the aisle in anticipation.\n\nJohn Kwong leaned over and whispered in my ear, \"I STILL can't believe you went to work today.\"\n\nI smiled. \"SOME people have to work for a living. Besides, there's only a month left and you DO want your new place to be finished on time, don't you?\"\n\nJohn chuckled and agreed, \"Yes I do.\"\n\nThe music started up and then John and I got back into position. Pachelbel's Canon in D started up and then the ceremony got started. I watched dispassionately as the three young women in bridesmaid's gowns came down the aisle while holding elaborate bouquets. Each girl was quite pretty, but my attention was further down the aisle.\n\nAnd then my angel stepped into view.\n\nShe was perfect. Her exquisite face would have made the Greek Goddesses jealous with envy. Gold ringlets were piled high on top of her head. Her creamy white skin was perfectly clear. Her green eyes sparkled even from across the room. And as I looked upon her beauty, lightning bolts shot up my spine and my heart fluttered with delight.\n\nKaitlyn looked right at me the whole walk down the aisle.\n\nThen at the last moment, she winked at me and then turned away to take her place beside the three bridesmaids who had preceded her.\n\nCassandra was the final bridesmaid down the aisle, and then the whole place stood up at attention as the Wedding March began to play.\n\nI looked up to see the doors at the end of the aisle open and reveal Taylor, resplendent in her white gown. I sighed. My fantasy woman was about to be married. But that was okay. I didn't need fantasies anymore. I glanced to my right and found that Kaitlyn was looking to me at the exact same moment. The smile on her face matched mine.\n\nI now had a reality.\n\n***\n\nNEXT: John Billionaire II: A Billionaire's Life"
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "billionaire",
        "kaitlyn",
        "orgy",
        "anal",
        "ffm",
        "two women one man"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/jeff-thousandaire-ch-03"
}