{
    "title": "Red-faced on the Red-eye Pt. 02 - Sunburn",
    "pages": [
        "Sara's embarrassing, naked vacation continues. \n\nThis story is the sequel to Red-Faced on the Red-Eye Part 1, and would best be enjoyed after reading that first. Both stories follow wannabe exhibitionist Sara on her Caribbean vacation, which she and her friend Rosie planned as a way to challenge themselves to explore their ENF and public nudity fantasies. In Part 1, Sara got an unplanned head start on her naked antics during her overnight red-eye flight from Ireland, courtesy of Anna, a very seductive and dominating flight attendant. Part 2 picks up where Part 1 left off, and follows Sara and Rosie on the start of their vacation \u2013 which also does not exactly go as planned... \n\n***** \n\nSara sighed blissfully, basking in the warmth of the tropical sun beaming down on her naked body as she lay sprawled on the strangely lumpy sand and ran her fingers over her bare skin, reveling in her total exposure on the crowded beach. It was so crowded, in fact, that she somehow couldn't quite lay her head down flat, and something was even keeping her from stretching out her long, slender legs. But Sara tried to relax as she heard the chime of a steel drum \u2013 or a bell? \u2013 and listened to the reassuring tones of the captain telling everyone that they would soon be landing... \n\nCaptain? ...landing? \n\nSara suddenly sat up and realized that she still on the plane, very naked, and completely exposed, having sloughed her blanket off onto the floor in her sleep \u2013 and the topical sun warming her body was shining in from under her still-open window shade, highlighting her bare, pale skin in the darkened cabin just as brightly as did her reading light. \n\nThen, all of a sudden, all the cabin lights turned on and dozens of waking passengers began opening their own window shades, flooding the cabin with morning light as the naked girl snatched up her blanket and scrambled to cover her petite, nude body. \n\nSeats were rustling all around her as passengers stirred and began moving into the aisles to line up for the restrooms at each end of the section. The 21-year-old co-ed had to go as well \u2013 desperately, in fact \u2013 but she wasn't about to stand up and wait in line for ten minutes just wrapped in a blanket, so she crossed her legs tight and waited for the queue to thin out. As the passengers shuffled past her, Sara noticed that several of them were giving her some very odd looks, as if many more people than she had realized may have woken up to see her during her naked strolls, and then drifted off again assuming it was a dream \u2013 only now to have the sight of this skittish, red-faced girl hiding under a blanket make them suddenly question their doubts.  \n\nBetween the passing passengers, Sara could also see the pill-addled auto-parts heiress across the aisle glaring at her with deep suspicion, no doubt trying to recall what she saw last night when she woke up to Sara's moans and watched her writhe and twist in orgasmic ecstasy under the bright spotlight of her reading lamp. The nude girl blushed a few shades redder as she tried to act as natural as she could curled up in an airplane seat naked under a blanket. \n\nWhen the line to the bathroom finally dwindled, Sara jumped up in her blanket and hurried up the aisle to the door. It was still occupied, so all she could do was wait there, wrapped in a blanket, at the front of the coach cabin. Reluctantly, she looked back at the rows of seats behind her, facing all the passengers she had so recently crept past completely nude as they slept. Most of their faces had been burned into her memory as she had frantically scanned them last night to make sure they were asleep as she made her naked stroll down the aisle. But now they were all wide awake, and most were staring right at her, no doubt a bit curious about this blushing, barefoot girl standing in the aisle pulling a blanket around her shoulders. She started to wonder again how many of them may have actually seen her last night. \n\nThen Sara spotted the bald man several rows back who she knew had woken up and gotten an eyeful of her last night before she'd been able to duck out of his view. He was staring at her with a lecherous grin and pointing her out to his seatmate, who responded first with a look of initial disbelief, but was soon leering at her as well and pointing her out to his buddies in the row in front of him. \n\nMortified, Sara turned away and moved further into the catering area \u2013 the place where Anna had first kissed her and teased her naked body to convince her to do such shameless and submissive things. Part of her hoped to see Anna in the back of the crew space, remembering how comforting the woman's presence was when she felt so frightened and embarrassed last night. But then another part of her felt a strange relief to see that the area was empty, recalling how Anna had so clearly delighted in Sara's nervous blushing and in pushing her into situations that threatened such total, naked humiliation. Then Sara started to genuinely worry about what the demanding, dominating flight attendant might do if she found her \"naked toy\" hiding in her territory, daring to cover her nudity with a blanket. \n\nWhen the restroom finally became available, the increasingly nervous girl scampered inside and shut the door, unsure if she was hiding from the other passengers, or from Anna. \n\nOnce she was safe in the loo, Sara looked at herself in the mirror and barely recognized the girl who stared back. Removing her blanket, she saw the normally pale skin of her 5-foot-2, 109-lbs frame blazing red with the shame of being pointed out by the leering men. And yet, she also noticed her nipples pointing erect and beadlike from her b-cup breasts, betraying an arousal she could no longer deny. The loose curls of her shoulder-length brown hair were tousled and tangled, making her feel like some trashy slut kicked out after a one-night stand to take a well-deserved walk of shame home. She could still see on her face traces of Anna's pink lipstick from her first lesbian kiss, and still feel between her thighs the sticky residue of the repeated climaxes that were both the most extraordinary and humiliating of her life. \n\nAfter relieving herself, Sara did her best to clean herself up and make herself slightly more presentable before she ventured back out into the cabin in an attempt to reclaim some small bit of dignity. But that small effort was immediately undercut when she stepped out only to be confronted by the bald man who had seen her last night, flanked by his thick-necked seatmate. \n\n\"Hey, we got a little wager going,\" he said with a laddish grin. \"I'm betting that you're stark naked under that blanket, but my friend here says I'm stark-raving mad.\" \n\n\"So, which is it?\" said his friend with a crooked toothed smile, standing back as if he actually expected her to throw open her blanket and give them a good look. \n\n\"You're both mad,\" said Sara, pulling her blanket tighter around her shoulders and pushing past them, humiliated nearly to the point of tears. \n\n\"I told you, if she won't show us, that means she's gotta be naked. You owe me a quid.\" the bald man whispered to his friend, far too loudly, prompting dozens of passengers to look up at Sara wide-eyed as she made her way down to her row. \n\nOnce back to her seat and cowering under her blanket, Sara looked up to see the two lads heading to theirs further back. \n\n\"I knew I saw you running around starkers last night,\" he said with a wink as they passed \u2013 again far too loud. \n\nSara did her best to shrink into her seat and disappear, avoiding at all cost looking over at the auto-parts heiress, who was muttering about her from across the aisle. \n\nNot long after that ordeal, the captain announced that everyone should prepare for landing. When she heard the phrase \"fasten your seatbelts,\" Sara felt a hot blush rising as she recalled that moment eons ago when Anna had had first made her reveal her naked body to show her seatbelt before takeoff \u2013 the first of so many times the beautiful flight attendant had made her expose herself so completely. \n\nSara caught herself staring eagerly at the curtain in the front of the coach cabin, waiting to see if Anna would come to make her display her nude body again in a replay of that first electrifying, erotically charged moment between them. As if on cue, Anna emerged from behind the forward curtain flashing her gleaming supermodel smile and began making her way slowly down the aisle checking passengers' seatbelts. \n\nAs the tall, curvy flight attendant drew nearer, she casually glanced over and winked at the sexy young girl she had so thoroughly seduced, teased and toyed with just a few hours ago before leaving her naked and exhausted under a blanket. Sara felt an unexpected bolt of lightning between her legs when she met Anna's piercing green eyes for the first time since the night before when the stunning woman had stripped her so naked, physically and emotionally, made her do so many shamefully shameless things, and then rocked her with the most body-quaking climaxes of her life. \n\n\"I'm afraid I must ask you to remove your blanket so I can see that you're properly buckled in,\" said Anna with her knowing smirk when she finally reached Sara's row. \n\n\"Yes ma'am, of course,\" said Sara with a flirtatious tone, as she obediently began pulling her blanket aside. \n\nBut just then she noticed the drowsy heiress across the aisle from her craning her neck around Anna's hips to see what she was doing. Sara froze, prompting a raised eyebrow from Anna. A quick nod indicated her concern, but Anna just rolled her eyes and leaned in closer, tossing her wavy blonde hair to one side and slightly obscuring the other woman's view. \n\n\"Don't get shy on me now, sweetie,\" she said with that husky whisper that had compelled Sara to do such naked, brazen things for her all night long. \n\nStill painfully aware of the heiress's gaze, but nonetheless transfixed by Anna's commanding eyes, Sara threw off her blanket and unveiled herself fully to her demanding seductress. She arched her back to thrust out her firm, apple breasts and even slid the buckle higher up over her taut stomach to reveal the light-brown muff between her legs, which she inched open in a wanton display that took even Anna by surprise. \n\n\"Very good,\" Anna said with a wink and lingering look before she turned around to the woman across the aisle. \n\n\"Did you see that girl?\" hissed the heiress to Anna as Sara scrambled to cover herself again. \"She's naked \u2013 I saw her last night too.\" \n\n\"You're seeing things again Mildred,\" said Anna dismissively with a wink over her shoulder at Sara. \"You should stop taking so many pills.\" \n\nShortly after Anna finished her check, the plane came in for a landing and taxied to a stop. When the seatbelt light finally turned off, passengers began getting up and pulling their bags out of the overhead bins. Sara blushed acutely when she saw the passengers directly in front and behind her \u2013 knowing they had been most near and yet most oblivious when she was performing her most shameless act as Anna's naked toy last night: touching herself as she writhed naked under the spotlight of her seat's reading lamp. \n\nAs the aisle filled with passengers waiting to exit, Sara noticed more and more of them glancing at her and whispering among themselves. She heard Mildred the heiress muttering to people that she was naked under her blanket, and saw that bald man and his friends pointing her out to other men who all craned and leaned to try and get a better look at her over the seats as Sara sank lower, pulling her blanket up to her chin. \n\nWhen the line finally began moving, it seemed like every passenger who shuffled past her did their best to get a look to confirm the whispered rumors she couldn't help but overhear \u2013 that she had been naked under her blanket for the entire flight... that she had traipsed up and down the plane all night completely nude... that she had brazenly played with herself in her seat, naked under a spotlight like she was begging to be seen... Whether the look on their faces was an eager leer or a judgmental scowl, Sara did her best not to glance up at any of them as they slowly moved past \u2013 she but couldn't help but blush deep red as she listened to their laddish snickers or disapproving grumbles, and felt their eyes burn into her. \n\nEventually, all the passengers had exited the coach section, leaving Sara alone in the cabin and still huddled naked under her blanket, not knowing what to do next. She had really expected Anna to have given back her sundress by now. After all, she had promised to make sure Sara had something to wear to get off the plane \u2013 if she was a good girl... \n\nHadn't... hadn't she been a good girl? \n\nAt last, Sara heard some movement in the back of the plane and she peered over her seatback, heaving a sigh of relief when she saw that it was Anna, making her way slowly up the aisle collecting the blankets from the empty seats. Sara wanted to rush up to her and immediately ask for the dress, but she understood by now that Anna just enjoyed making her stew, and knew it was best just to go along her games. \n\n\"Well hello, fancy meeting you here,\" said Anna when she finally made it to Sara's row. \"Did you enjoy your flight?\" \n\n\"Oh yes, tremendously,\" Sara said, returning Anna's posh tone. \n\n\"We do try and take our passengers to new heights.\" \n\n\"Yes. Well, you certainly did that. But, um... I was just wondering...\" said Sara, biting her lip. \"When do I get my dress back?\" \n\n\"YOUR dress?!?\" said Anna with apparently genuine offence. \"That was a gift, remember?\" \n\n\"Right, sorry! Um, may I 'borrow' your sundress, please... so I can get off the plane?\" \n\n\"That's better,\" said Anna smugly. \"Well, I'll tell you what \u2013 I'll trade it for your blanket,\" she said holding out her hand. \n\nSara rolled her eyes at Anna's constant games and casually handed over her last meager covering to the flight attendant, leaving herself once again completely naked, however briefly, in her seat. But then, much to Sara's surprise, Anna just continued up the aisle, adding blankets to the jumble in her arms. \n\n\"Anna!\" hissed Sara, suddenly feeling so much more naked now than she had just moments ago when she handed over her blanket. \"The dress?!?\" \n\n\"Well I didn't bring it with me!\" said Anna with feigned exasperation, and with no further explanation, she grabbed the last few blankets towards the front of the section and disappeared beyond the curtain. \n\nSara waited for what felt like an eternity for Anna to bring the dress, huddled naked in her seat, knees pulled up to her chest, praying that nobody else would come back there before her beautiful tormentor returned. Then the intercom speakers broke the silence with a crackle. \n\n\"Attention all remaining passengers...\" It was Anna's voice, of course. \"The cleaning crew will be boarding the aircraft in a few moments. All remaining passengers are urged to collect their belongings and immediately exit the aircraft. Thank you.\"  \n\nSara was petrified. What was she supposed to do now? Where was the dress she was promised? Was Anna really just going to leave her there naked? Was she going to have to make a nude dash past the cleaning crew get to the exit? And what then?!? As she imagined a crew of strangers barging in as she sat there naked and helpless, Sara wished she had just kept her blanket instead. Not knowing what else to do, she pressed her call button. \n\nAfter an excruciating minute, Anna's head popped around the curtain with bright and taunting smile. \n\n\"Yes? You called?\" \n\n\"Where the hell is my\u2014 your dress?!?\" Sara hissed, hiding behind the seat in front of her, now somehow embarrassed even to be seen by the woman who had toyed with her naked body for so many hours just the night before. \n\n\"Hmm...\" said Anna putting a pensive finger to her chin. \"I think I must have left it somewhere in Business Class, if memory serves. But you'd better hurry and go get it before the cleaning staff throws it in the garbage.\" \n\nAnd with that, she was gone. \n\nAs Sara got up and apprehensively made her way naked up the aisle of the coach section towards Business Class, she could feel herself burning red from head to toe \u2013 but she was unsure at this point whether it was purely from embarrassment or also from anger at Anna for spinning out her exhibitionist games so long as the stakes grew ever higher. \n\nThe nude girl tip-toed through the catering area and peeked around the curtain into Business Class to confirm it was empty before nervously venturing onward. Creeping naked through the brightly lit section made Sara's heart pound, fearing that at any moment some stranger from the cleaning crew would throw open the curtain ahead of her. She peered into, between and even under the seats of each row she passed, knowing that it was not beyond Anna to hide the promised dress someplace Sara might miss. Feeling the heat of her intensifying blush, the nervous girl began to realize it was less from the anticipated embarrassment of getting caught, and much more from her sense of actual shame at having allowed herself to be manipulated into such a humiliating predicament. \n\nSuddenly, from the corner of her eye, Sara saw the forward curtain open and she immediately dove out of the aisle into a roomy Business Class seat. She got down on the floor and cowered, knees up, ankles crossed, frantically wondering if it might even be possible to crawl underneath a seat to hide. Then as the helpless, naked girl held her breath and wished she could just disappear, she saw Beverly, the other flight attendant, emerge into view as she made her way down the aisle replacing SkyMall catalogues. \n\nWhen the middle-aged flight attendant saw Sara huddled naked on the floor, she just shook her head with a matronly chuckle. \n\n\"I think you'll find what you're looking for in seat 9A,\" Beverly said casually. \"Anna must really like you, you know \u2013 at least she's not making you run naked across the tarmac like she did with that poor girl last summer,\" she added, sending a bolt of fear through Sara's nude body. \n\nThe naked girl dashed up the aisle after Beverly passed and found her flipflops laying the seat and the pink dress tucked into the seat pocket. She quickly shuffled on her flipflops \u2013 momentarily noting that this was the most clothing she'd had on in the past 12 hours \u2013 and then she grabbed for her sundress. \n\nWhen Sara picked it up, for a moment she wasn't even sure it was the same dress. The long, pink sundress that once came down nearly to her ankles had literally been cut in half. Sara couldn't imagine how this skimpy remnant was even supposed to come down far enough to cover her bum. But she began to get a clue when she examined the spaghetti straps that she had always tied in long, loose bows over each shoulder so that the front came up to just a few inches below her neck and the scooped back came down a bit below her shoulder blades. Now the straps were extended longer than she had ever seen before, and tied in tight knots with any remainder snipped off. With no other option, Sara stepped into the truncated dress and slipped the long straps over her shoulders. Then she blushed even more than when she was naked. \n\nThe front of the dress now hung so low that it barely came up high enough to cover her nipples, and the scooped back drooped all the way down to the cleft of her butt. Pulling it one way or another offered no modest solution \u2013 either her nipples were securely covered and she was showing off the crack of her ass, or she could hide the \"coin slot\" in back and her nipples would peek out in the front. Gathering up the straps to raise both sides to reasonably modest levels was also not an option, because the bottom of the dress already only came down far enough to just barely cover her butt cheeks \u2013 or at least she hoped it did... ",
        "The thought of exiting the plane in this \"dress\" felt almost as humiliating as her naked dash through Business Class. But at least she could get some decent clothes from her carryon bag when she picked it up at the exit. \n\nAfter a deep breath, Sara stepped past the curtain into the First Class section \u2013 feeling more than ever like a stripper taking the stage \u2013 and she suddenly faced a man from the cleaning crew making his way down the aisle filling a trash bag. Sara blushed deep red when she saw the look on his face as the man tried and failed not to stare, but she did her best to maintain her composure as she forced herself to walk towards him. When she had to squeeze past him in the aisle, she demurely turned away from him as he stood back against the seats, but as she slid past, Sara felt the bottom of her dress ride up and her bare ass rub against the stiff bulge in the front of his pants. Mortified beyond words, Sara just wanted to crawl into the bag with the other garbage and disappear. \n\nBut when she finally got to the exit and saw another man by the door in an airline uniform, she approached him like a savior from her abject humiliation. \n\n\"C-can I please have my bag now?\" she said, barely able to form the words. \"You should have it. I had to check it right before takeoff.\" \n\n\"Of course, um... ma'am,\" he said, clearly almost as flustered as her. \"Can I please see your claim tag?\" \n\nSara froze. Oh god, where was it? Where could she have possibly kept it? Would she really not be able to get her bag without it? That bag had all her clothes, her money, her passport... What on earth was she going to do? \n\nJust as Sara was about to crumple into a ball sobbing, she heard a familiar voice in her ear. \n\n\"Forget something?\" whispered Anna from behind her. \n\nThen Sara nearly jumped out of her skin as she felt Anna slide the tag stub between her butt cheeks before vanishing into the forward crew area. \n\n\"Oooh! Oh god, um, y-yes. Yes, here it is,\" stammered Sara as she retrieved the claim tag and handed it over. \n\nThere was no jetway, just stairs leading down to the tarmac, and the man leaned out the door to scan the ground before turning back to Sara with a shrug. \n\n\"I'm sorry ma'am, it looks like they've already taken the remaining bags to the baggage claim area,\" he said. \"But you should be able to collect it there.\" \n\nSara tugged nervously at the bottom of her dress, only to stretch the straps and flash her nipples at the man, who politely spun around and again peered down at the tarmac. \n\n\"And it appears the, um, passenger shuttle buses have already left, ma'am. I'm afraid you'll have to walk to the terminal.\" \n\nSara cursed herself for waiting so long in her seat as she made her way down the stairs and set out on the fifty-yard walk to the terminal building. The wind whipped at her tiny dress so badly she could barely keep it on, and she heard several ground crewmen whistle and catcall, some clearly diverting their vehicles in her direction to get a better look. \n\nAs furious as she was at Anna for what she'd done to her dress, Sara tried to imagine making this dash totally naked, as one of Anna's other victims apparently had to, and she suddenly felt faintly grateful even for this miniscule scrap of pink fabric that kept flipping up to flash her bare butt to the world. \n\nInside the terminal, all eyes were on the scantily clad girl blushing as pink as her dress as she hurried towards the baggage claim area. Sara's hands made a futile rotation of attempts at modesty \u2013 tugging her dress, hiding her nipples, and covering her bum as she noticed different people ogling her various parts from all angles. \n\nThe experience of having so many eyes on her \u2013 leering at her, judging her \u2013 even semi-dressed, such as she was, felt so much more embarrassing to Sara than when she was actually naked on the plane, and only fearing that people would see her. That had seemed so erotic and exciting \u2013 but this? This was just humiliating. \n\nAnd yet... \n\nSara felt her heart racing, and the heat of her blush was making her sweat in the humid island air. When she covered her nipples, she felt that they were erect and very sensitive to her touch. Then she caught a glimpse of herself as she passed a mirrored pillar \u2013 her long legs bare all the way up to her bum, her back exposed down to the cleft of her butt, the sides of her pert breasts peeking out from her tiny dress that served more to call attention to her bare skin than to cover it \u2013 and above all, the crowds of people surrounding her and staring at her. \n\nA thrill shot through her body, and Sara felt herself getting moist. \n\nWhen she got to baggage claim, the luggage carousel for her flight was virtually empty. This was a bit of a relief, because it meant most of the passengers had already grabbed their bags and left. She wasn't sure she could face that judgmental old dowager dressed just like the shameless harlot she had presumed Sara to be. But Sara's relief slowly melted into anxiety as she waited, braving the ogles and sneers of everyone around her, as the carousel made one, then two, then three full circuits, and she still didn't see her bag. \n\nAfter waiting for an eternity as the conveyor snaked by empty, Sara felt her panic rising and she went to the baggage claim office. The small office was crammed with bags, none of which Sara recognized as hers, and the desk was staffed by a gray-haired little man who looked like he had just won the lottery when he saw the slim, barely dressed young girl enter his domain. \n\n\"Oh, well hello miss!\" he said, looking Sara up and down with the same \"ice cream sundae\" look she'd gotten from Anna. \"What can I do for you?\" \n\n\"I\u2013 I can't find my bag,\" she said, tugging her dress and then immediately having to hide her nipples. \"I really need it, but it's not out there.\" \n\n\"Oh, that's very strange,\" said the old man, momentarily taking his eyes away from Sara's long legs to examine the red tag she handed him. \"Hmm, this bag came through maybe an hour ago,\" he said, checking a clipboard, \"but it had a note, said it was late \u2013 that the owner came in on an earlier flight and we should just send it straight to the front desk at the Coral Cay.\" \n\n\"Anna!\" said Sara, flushing as much from anger as embarrassment. \n\n\"Hmm? Oh wait, there was one more thing,\" he said, fiddling for a key on a jumbled ring. \n\nHe leaned down to unlock the bottom drawer of his desk and took the opportunity to steal a glance up Sara's ridiculously short dress, making her stamp her foot at him. \n\n\"Hey! Watch it!\" \n\n\"Oh, I was, believe me!\" he chuckled, letting out a low whistle as he fished something out of the drawer. \"This came with the note.\" He dropped a manila envelope on the desk. \"Said it was valuables. Somebody would be coming by the airport with that claim stub to pick it up.\" \n\nWhen Sara snatched up the envelope and tore it open, out plopped her passport and an indecipherable amount of local currency. She grabbed the passport and shuffled through the multicolored bills. \n\n\"How much is this?\" she asked. \n\n\"Hmm,\" the old man shrugged, \"Probably enough to get you the Coral Cay.\" \n\nSara stomped off in a huff toward immigration feeling furious with Anna. As amazing as last night had been, this was just too much. Cutting her sundress? Stealing her luggage? Stranding her at the airport in nothing but this humiliating parody of a dress? \n\nShe got through immigration and customs with refreshingly few problems \u2013 having literally nothing to declare \u2013 but her embarrassment spiked when she had to leave the terminal and hail a cab. \n\nThe line of cabbies out front all started calling to her the moment she stepped out into the bright, tropical sun. Several approached her and eagerly motioned for her to get into their cars, some with lustful looks in their eye that made Sara recoil in genuine fear. \n\n\"Come girl,\" called out a female taxi driver a bit further down the street. \"I know where you want to go.\" \n\nSara dashed over to her car, thankful to at least find a driver who wouldn't spend the whole ride leering at her in the rear-view mirror \u2013 or worse. \n\n\"Oh, thank god you were here,\" Sara said, jumping in the back seat. \"Coral Cay, please.\" \n\n\"Coral Cay? You're kidding me, eh? Not Hotel Para\u00edso? La Cascada? Damn, girl, who did you piss off to get sent there?\" chuckled the driver as she pulled away. \n\n\"No-nobody,\" stammered Sara. \"What are you talking about?\" \n\n\"Most of you girls come here to work Para\u00edso \u2013 or at least La Cascada. But the Coral Cay bar is shit. You'll get no decent business there.\" \n\n\"What?!?\" shouted Sara, equally appalled and humiliated. \"Y-you think I'm a prostitute?\" \n\n\"A girl come off the plane like that \u2013 by herself, no luggage, in that dress?\" said the driver with a derisive snort. \"But no judgements! I got a cousin who works the resorts like you \u2013 we all do what we gotta do.\" \n\n\"But I... I'm not a prostitute!\" insisted Sara feebly, suddenly realizing that she could provide no compelling evidence to the contrary. \n\n\"Well, not a very good one, obviously,\" said the driver with a shrug. \"Coral Cay it is.\" \n\nSara just stewed silently for the rest of the ride, half wanting to argue that she wasn't a prostitute, and half that could be a damn good prostitute if she wanted to. But as she tugged at the bottom of her dress in a futile attempt to separate her bare ass cheeks from the hot vinyl seat, she couldn't deny that she was certainly dressed for the part of a low-rent whore. \n\nWhen they finally arrived at the pastel-colored, colonial-style entrance of the Coral Cay resort, Sara shoved the jumble of bills at the driver and hopped out. \n\n\"What's this? Most working girls know to give a decent tip, fucking puta!\" the driver shouted as he roared off. \n\nHumiliated now on several levels, Sara could only tug haplessly at the bottom of her dress and head for the front desk, where she could hopefully retrieve her bag \u2013 and some proper clothes. There was an elderly couple in the middle of checking in so Sara stood behind them as demurely as possible to wait her turn, but the receptionist called her out with a wagging finger the moment she saw her. \n\n\"No, no, no! You girls are not allowed in the lobby!\" declared the heavyset woman at the reception desk. \"The bar is around the back and up the stairs.\" \n\n\"No,\" said Sara, this time more humiliated than offended. \"I'm not... that...\" \n\nAt this point the sweet-looking elderly couple turned around and scowled in shock at Sara's outfit, backing away like she was diseased. \n\n\"Don't you worry, I'll get rid of this trash,\" said the receptionist to the old couple, handing them their keys before turning her attention back to Sara. \"You want I should call the police?\" she said, holding up the phone receiver. \n\n\"No, no, you don't understand,\" pleaded Sara, tugging at the bottom of her dress, only to flash her nipples at the woman. \"I'm not a... I\u2013 I'm a guest... Honestly! I have a reservation, I swear!\" \n\n\"Oh really?\" sneered the receptionist incredulously. \"And what's the name? Let me guess \u2013 first name 'John' eh?\" \n\n\"No!\" said Sara, blushing deep red and nearly weeping with shame as she realized she was going to have to attach her name to this entire, humiliating display. \"My name is Sara... Sara Flynn,\" she said, trying to calm her breath and muster some shred of dignity. \"I have a reservation.\" \n\nThe receptionist checked the book, and looked back at Sara suspiciously. \"You have ID?\" \n\nSara offered her passport, which at the moment was her only possession other than her flipflops and \"prostitute\" dress. Then she remembered her carryon. \n\n\"Oh, and I should have a bag here, brought from the airport maybe a half hour ago.\" \n\nAfter many skeptical and disapproving looks, the receptionist almost reluctantly handed Sara a key and the carryon. Almost giddy with relief, Sara dashed down the palm-lined path to the beachside bungalow she had rented with Rosie, anxious to finally get started on a relatively normal vacation. \n\nSara entered their room to find Rosie dancing silently to her earbuds \u2013 she was completely nude, the most intimate parts of her dark-tanned body defined by olive tan lines. Rosie was taller, and definitely curvier than Sara but still with a trim, athletic build, and her wavy black hair came down well past her shoulder blades. Though they had always felt a deep connection, Sara had certainly never had any sort of sexual thoughts about Rosie, but the sight of her shapely friend dancing naked, so soon after her intense experience with Anna, inevitably stirred... something... \n\nRosie was startled when she finally noticed someone was in the room, snatching out her earbuds and reflexively covering herself, but when she saw it was Sara, she smiled her big toothy grin and opened her arms for a hug. As they came towards each other, Rosie's eyes widened as she took in her friend's micro-mini dress. \n\n\"Damn girl, I guess you're taking this whole exhibitionist thing waaay seriously. Did you really wear that thing on the plane?\" \n\n\"Not... exactly,\" said Sara, wondering how she could even communicate everything that had happened. \"It... it's a long story.\" \n\n\"Whatever, but you'd better get outta that slut dress right now, bitch!\" Rosie said with a wink, flipping the straps off Sara's shoulders. \"Remember the deal \u2013 we gotta at least go naked in the room.\" \n\nSara rolled her eyes and let her \"slut dress\" drop to the floor, then tossed it on the bed with her bag. For some reason, the feeling of being naked in the hotel room with Rosie \u2013 who had certainly seen her nude before \u2013 now made Sara feel a bit flushed. \n\n\"Well, you've obviously already gotten into the spirit,\" said Sara with an awkward giggle and a nod to her friend's bare d-cup breasts. \n\n\"Jeez, I've been here for hours waiting for you! I was starting to go stir crazy,\" Rosie said, swiveling her hips in a repeat of the dance she was doing when Sara came in. \"What took you so long? Didn't your flight get in like an hour and a half ago?\" \n\n\"Well, that's, um, part of the story,\" said Sara timidly. \"I\u2013! met this, um...\" She stopped and sighed. \"I'll explain later.\" \n\n\"You'll explain now, bitch!\" said Rosie with an excited smile. \"Who did you meet? Some sexy Irish hunk who charmed you right out of that nothing dress? Oooh, did you have sex in the airplane bathroom? I've always wanted to do that!\" She grabbed Sara by the hands and tugged her over to sit on the bed. \"Tell me everything!\" \n\n\"No, it wasn't quite like that...\" said Sara, slightly distracted by the realization that the bathroom was practically the only place on the airplane where Anna didn't have sex with her. \"So, well, okay... I... I met this flight attendant...\" \n\n\"Wait, what?\" said Rosie incredulously. \"Aren't they all gay?\" \n\n\"Well I don't know about that... but I guess this one was,\" said Sara, taking a deep breath before going on. \"Her name was Anna...\" \n\n\"Ohhhh,\" said Rosie, arching her eyebrows. Without thinking, she drew back from Sara slightly and started to cover her breasts, but she quickly caught herself and forced a smile. \"I mean, um... oh, so... what was she like? I'm guessing... very persuasive.\" \n\n\"Well, yeah!\" said Sara with a relived chuckle as Rosie took her hand supportively. \n\nSara finally uncorked and recounted to her friend how her initial test run of taking her dress off under her blanket and stowing it in her carryon went awry when Anna took her bag, and how Anna had repeatedly stripped her and taunted her and made her do such daring, shameless, naked things after the lights went out \u2013 and finally how the mischievous flight attendant had taken her blanket and altered her dress and had just orchestrated so many embarrassing, sexy, exposed situations for her that were at once so humiliating and yet oh-so arousing. \n\nHer account was all relatively PG \u2013 Sara mentioned the tickling and some of the touching, but didn't quite have the courage to confess the passionate kisses and body-quaking orgasms she'd had with her lesbian seductress. Still, she noticed that Rosie was nonetheless looking rather flushed as she listened, biting her lip and squirming where she sat as if rubbing her thighs together. She kept asking Sara how it all felt \u2013 to walk naked up and down the aisle, to touch herself naked under a spotlight, to be caught by a stranger completely nude in middle of the airplane, to have all her clothes taken away by someone so determined to make her expose herself. And Sara's answers \u2013 that it all felt sooo embarrassing, but at the same time so thrilling \u2013 seemed to spark a light in Rosie's eye that suggested at the very least fascination, if not outright envy. \n\n\"Damn girl, that's all just so... wow!\" said Rosie, her breathing slightly heavy. \"I mean, how did she get you to do all that? I'd be way too scared.\" \n\n\"But I was scared, obviously \u2013 terrified, even. It's just that she was so... um, well, like you said \u2013 'persuasive'...\" said Sara, not daring to go into exactly how Anna had persuaded her. \n\n\"Well, this woman sounds amazing,\" said Rosie. \"And as embarrassing as it all must have been, it seems like you had a really great time.\" \n\n\"Yeah, she was amazing,\" said Sara wistfully, closing her eyes for a moment and recalling the titanic orgasm Anna had given her before letting go to sleep. \n\n\"Okay, well you're obviously way ahead of me, so I need to get caught up. Go take a shower so we can hit the beach and I can start working on my all-over tan,\" said Rosie hopping up and grabbing her earbuds. \"They got all the good stuff in there \u2013 shampoo, body wash \u2013 real boutique shit. Use it all up so they'll give us more when they come in to clean.\" \n\nLeaving her bag untouched on the bed with her \"slut dress,\" Sara headed into the bathroom for a much-needed shower. After doing her best to wash away her multitude of sins, she gave her long legs a once-over with the hotel razor, but then paused for a moment before she put it down. She ran her fingers over the tuft of brown hair between her legs and recalled what Anna had told her \u2013 and what she had promised Anna. Without really knowing why, but feeling a strange compulsion to obey, Sara lathered up and began pulling the razor across her mound. \n\nWhen she was done shaving everything, the effect was amazing \u2013 the pulse from the shower head on her exposed mons sent shockwaves through her body. The stroke of her fingers between her legs felt like she was touching herself for the very first time. When she got out of the shower and dried off, the warm air on her newly bared pussy made her feel more naked than she had ever felt before. \n\nBut when she wiped off the mirror and took a look at herself, Sara felt a different sort of shock, and a slight pang of regret. The visual effect of shaving off her pubes was quite striking as well \u2013 not quite \"Lolita,\" but more like \"porn star.\" It was so instantly noticeable, like it would be a magnet for everyone's eyes, even on a beach full of other naked people. The thought of going out on a nude beach like this suddenly made her much more self-conscious than she had expected to feel after all her naked antics on the plane. She blushed when she wondered what Rosie would say. \n\nMost embarrassing of all \u2013 at least in Sara's own mind \u2013 was that she had just created an indelible reminder to herself of Anna's enduring domination over her. \n\nWhen Sara came out of the shower, Rosie had her bikini on and was slathering on sunscreen. She spun around and had the same stunned reaction to Sara's shaven pussy as she did to the micro-dress. ",
        "\"Holy shit, girl. When you say 'naked,' you really mean it,\" she said with a nervous chuckle. \"You are waaay more advanced than me. Please don't ask me to do that too.\" \n\n\"No, of course not!\" said Sara returning the anxious laugh. \"I just... I just thought it would be fun,\" she shrugged, ashamed to admit that it was Anna's suggestion. \"You know, like you said \u2013 going really naked, right?\" \n\n\"Yeah, well you have fun with that. Now get your suit on and let's head out.\" \n\n\"But I thought the deal was we'd go naked on the beach.\" \n\n\"Damn, you really are way ahead of me with all this,\" said Rosie, shaking her head. \"Pump the brakes, girl! Let's at least wear our swimsuits until I can get a couple of drinks in me at the bar, okay?\" \n\n\"Okay, okay!\" said Sara, reaching for her carryon. \"I think I could use a drink, too.\" \n\n\"And cut me some slack, girl. I didn't have some pushy flight attendant stealing my clothes and making me run around the plane buck-naked to get practice.\" \n\n\"Anna!\" shouted Sara furiously when she opened her bag. \n\n\"Yeah, her. So, what's\u2014?\" \n\n\"No, Anna actually stole my clothes!\" said Sara, dumping her bag out onto the bed. \"She literally stole ALL my clothes!\" \n\nSara had just discovered that her carryon bag was stuffed not with all the clothes she had packed in the expectation that she and Rosie would flake out on most of their naked plans, but instead now crammed with crumpled pages of the in-flight magazine. Amidst the balled-up paper, her wallet and other sundries, Sara found a neatly folded note: \n\n\"You said had doubts you could follow through on all your big, sexy plans, so I thought I'd give you a little help. Don't worry, everything will be waiting for you in a bag at the gate when you board your return flight home. You're welcome! ;) \u2014Anna\" \n\n\"Whoa... that bitch,\" said Rosie, slowly shaking her head. \"That bold-ass bitch. I just can't believe\u2014\" \n\n\"Well, she said she's only trying to help,\" said Sara, surprising even herself at how ready she was to let Anna off the hook. \n\n\"What are you\u2014? Did this woman put a spell on you or something?\" \n\n\"I\u2013I mean... she's right, you know,\" Sara said, trying to ignore Rosie's question for fear it might be true. \"We were already chickening out before we even left the hotel room for the first time.\" \n\n\"I just wanted to get a little drunk first,\" said Rosie a bit sheepishly. \n\n\"But we can be naked at the beachfront bar,\" said Sara, suddenly emboldened by necessity. \"Let's get this vacation started off right \u2013 the way we had planned to. We go out to the beach nude, with just our towels and beach-bag,\" she said, grabbing her room key and pulling the springy band around her wrist. \"Let's do what we came here for.\" \n\n\"Damn, girl,\" said Rosie, reaching back to untie her top. \"I guess she did cast some kind of spell on you. You were so shy back at the campus when we were doing those streaking dares.\" \n\n\"Well that was at my college \u2013 where I live,\" Sara said. \"This is a nude beach on a tropical island that I flew across an ocean to enjoy.\" \n\nThen she threw her friend a towel and headed out the door, silently thanking Anna for forcing her to find the courage to follow through on what she knew she wouldn't have been brave enough to do by herself. \n\nAs Rosie dashed to catch up on the shaded walkway between the bungalows, she started to wrap her towel around her chest, but Sara \u2013 who had hers over her shoulder \u2013 playfully yanked it off and ran ahead with it. \n\n\"No cheating!\" she said. \"Naked means naked!\" \n\n\"Okay, okay, little miss expert exhibitionist!\" \n\nWhen they emerged naked into the hot tropical sunlight, they both felt a flustered elation. Several other guests passed them on the palm-lined path leading down toward the beach, and every one of them had on bathing suits or beach robes, making both girls feel acutely naked. But none of them seemed especially shocked or offended, with most acknowledging the two young, nude girls with amused smiles. \n\nBeing so new to it all, Rosie couldn't help but try to cover herself a bit, and Sara saw her friend getting flushed on the top of her chest just like she did when they went streaking in Dublin. But when Sara started noticing the surprised looks her bare pussy was getting, she was suddenly blushing as well and doing her best to resist covering up. \n\nWhen they finally made it to the beach, the girls felt relieved to see that they weren't the only ones going fully naked out on the sand. But when they turned to head for the bar, they were slightly daunted by the fact that only a few of the women in the shaded beachfront restaurant were even topless, making them both feel quite self-conscious as they approached the bar completely nude. \n\n\"Sooo... whose bright idea was it that we're going to eat every meal here totally naked?\" asked Rosie, glancing around at the disappointingly overdressed diners. \"That had to be you, you little freak, right?\" \n\n\"Actually, I'm pretty sure that was your suggestion,\" said Sara. \"I recall you said something about hoping the waiters were cute.\" \n\n\"Ooh, speaking of...\" said Rosie, quickening her pace toward the bar and leaving her friend behind. \n\nSara was confused for a moment until she looked past Rosie's enviable bubble butt and noticed what her friend's radar had obviously picked up at much greater range: the bartender. He looked to be about their age, maybe a little older, and his dashing smile flashed bright amid his deep tan. His sleeveless tropical shirt was completely unbuttoned, revealing an impressive physique that glistened with a sheen of sweat. Rosie was already chatting him up when Sara finally caught up with her at the bar. \n\n\"Well then what's your specialty?\" she was asking, already peached on a barstool and leaning on her arm to raise up her bare breasts. \"I'll have whatever you recommend.\" \n\n\"I, um, I make a pretty good banana daquiri,\" he said with a shy grin while making a heroic effort not to stare at what Rosie was so clearly begging him to stare at. \n\n\"Oh, I'd love to try your banana... daquiri,\" she said with a wink. \n\n\"Make that two,\" said Sara as he turned and grabbed for the rum. \"Rosie you're terrible,\" she whispered, smacking her friend's bare ass. \n\n\"It's vay-kay, okay?\" Rosie said. \"Let's enjoy ourselves! Hey sweetness,\" she called out to the handsome barkeep, \"get us a couple of tequila shots, too.\" \n\nThe girls drained their shots and their first round of daquiris and devoured two plates of shrimp fritters as they caught up on each other's lives since their wild semester together daring each other to dash naked through the streets of Dublin. As they were nearing the bottom of their second round, Rosie brought the discussion back around to more recent history. \n\n\"So, how can you be so damn chill about this woman stealing all your clothes? I'd be so pissed!\" \n\n\"Well, she took my dress and gave it back.\" \n\n\"Yeah, chopped in half! Why aren't you more upset with her? I'd be on the phone getting the bitch fired if she did that to me.\" \n\n\"Don't be so sure, Rosie,\" said Sara, still uncertain how much of her experience with Anna she should divulge. \"I mean, she got me to do the kinds of things that I had only fantasized about \u2013 that we had fantasized about. Remember back when your told me how much you got off on that fantasy about getting naked in an empty classroom right before people would be coming in? Well, right before this trip I was getting off so hard every night on fantasies of sneaking around naked on the plane when everybody was asleep. But Anna actually made that fantasy come true for me \u2013 and more. And it was AMAZING, Rosie!\" she said, getting slightly flushed at the memory. \n\n\"But still, I mean...\" \n\n\"I'm just saying, what if I had figured out some way to get you out of your clothes before the start of that Irish Lit class and made you run around naked hiding behind seats further and further back as the classroom filled up? Would you really be so pissed at me? Or would you feel, well, maybe kind of grateful?\" \n\n\"Okay, I get your point,\" said Rosie, tapping her shot glass on the bar to order another round. \"But you don't have any clothes, girl! She just up and stole them. What are you gonna do?\" \n\n\"Well... how about I do exactly what we both promised ourselves we were going to do here?\" Sara shrugged. \"If we do everything we were planning, why would I need anything more than that pink dress?\" \n\n\"You're talking like that bitch did you a favor,\" said Rosie as she threw back her shot. \n\n\"She did you a favor too,\" Sara said before she downed her own. \"I mean, if I'd had a bathing suit in my bag, do you really think you'd have had the guts to be sitting here stark-naked right now, flapping your boobs at that hottie bartender?\" \n\n\"Now you're just being a drunk bitch,\" hissed Rosie and she pulled Sara away from the bar. \"Okay, so this Anna lady is our nay-kay vay-kay cruise director, and now I gotta go as naked as you or I'm some kind of flakey bitch, is that it?\" \n\n\"Your words, not mine,\" Sara giggled as they wandered out onto the beach to find a spot to spread out. \n\nThe girls laid back on their towels and felt the tropical sun warm their naked bodies, letting their rather tipsy minds wander into thoughts that made them both start getting moist between their legs. For her part, Sara was remembering the unreal titillation she endured the night before she was posed naked and spread-eagled in the doorway at the rear of the airplane, having to hold her position up on her toes as Anna devilishly teased and tickled the most sensitive parts of her nude body. \n\nAs her body and mind both heated up, Sara's thoughts then drifted to more recent events that had at the time left her feeling more angry than turned on... Being abandoned naked in the back of the plane and left frantically searching for her dress before the cleaning crew found her. Being forced to walk through the crowded airport in that humiliating dress, enduring all those leers and judgmental looks. Suddenly discovering that Anna had taken all of her clothes from her luggage, basically calling her bluff on her extravagantly exhibitionist plans. \n\nBut this time, as these recollections steeped in Sara's smoldering brain, they all now carried a distinct erotic charge for her. She remembered the undeniable excitement she felt sneaking naked through the empty plane, knowing that at any moment someone could step past the curtain and discover her. She relived the sexy thrill she felt when she caught sight of herself in the airport wearing that tiny dress that exposed her body more than anything she had ever dared wear in public before. And she recalled the intense erotic rush she felt when she realized that Anna had successfully stripped her of all of her other clothes, and that she would have to go naked, or painfully close to it, for the rest of her trip. \n\nAs her heartbeat quickened and she did her best to resist the urge to touch herself, Sara began to accept that all that time that seductive, dominating woman had been toying with her, manipulating her into increasingly exposed and embarrassing situations, Anna was quite simply making Sara's deepest and most shameless fantasies come true. \n\nSara's horny mind then began to spin new fantasizes on top of the old, trying to imagine what more Anna might be capable of making her do in her newly vulnerable state if she were to somehow show up during Sara's vacation. \n\nWould Anna really insist that she couldn't wear anything but that cut-off \"slut dress\" all week? Or worse, might she demand even that tiny scrap of cloth back \u2013 on the grounds that she had only let Sara \"borrow\" it, after all \u2013 and actually make Sara spend her whole vacation completely naked? Maybe Anna would figure out a way to make her go naked someplace public where everyone else, including Rosie, was fully dressed. Pondering these teasingly embarrassing scenarios at the mercy of her seductress made Sara start rubbing her slippery thighs together, and then slide into more intense and intimidating thoughts about the... other things... that Anna had done with her. \n\nIf she were somehow there now, would Anna insist on making out with her on the beach in broad daylight, where everyone \u2013 even Rosie \u2013 could see? Would she touch and fondle her \"naked toy\" with the same casual sense of ownership she had expressed on the plane? Would Anna command her to do things \u2013 sexual, lesbian things \u2013 in front of her friend? Imagining these frightening possibilities made Sara feel no less aroused, but far more anxious, and she felt a certain sense of relief knowing that \u2013 unlike her wild fantasies-come-true from the plane \u2013 these humiliating reveries would safely remain make-believe. \n\nBut little did Sara know that her manipulative lesbian seductress had taken such a serious interest in making sure that all of her most depraved and shameful fantasies would indeed come true \u2013 and more. \n\n\"Well, fancy meeting you here,\" said a familiar voice. \n\nSara looked up to see Anna standing over them in a white bikini and thin cotton beach robe, holding down her wide sun hat against the breeze. \n\n\"Oh my god... Anna?\" Sara said, unsure whether she was real or a daquiri-induced hallucination. \n\n\"And you must be Rosie,\" the woman said to the buxom Latina, giving her a familiar, ice-cream-sundae look. \n\n\"Wait! This is that bitch who stole your clothes?\" said Rosie squinting up at Anna. \"You got some nerve showing up like this.\" \n\nRosie instinctively covered her privates with her hands, but Sara somehow knew better than to try and hide her nakedness from Anna. Nonetheless, both girls blushed deeply under her gaze \u2013 to Anna's quiet delight. \n\n\"Anna, what are you doing here?\" said Sara, vaguely wondering if she had somehow conjured her temptress with her fantasies. \n\n\"Well, I had a few days off I could swap with Beverly, and I just wanted to check in with you girls to see if you were really going to live up to all your... 'naked ambition,' so to speak,\" she said as she dropped her beach bag next to them. \n\n\"So why aren't you naked?\" asked Rosie, pulling their own beach bag onto her lap to cover herself. \"This is a nude beach, right?\" \n\n\"Actually, it's a 'clothing-optional' beach, sweetie\" said Anna, adjusting her light robe as she sat down next to them. \"And I like to keep my options open.\" \n\n\"Well you sure didn't leave Sara any options, did you, bitch? Stealing all her clothes like that.\" \n\n\"That was a little mean,\" chided Sara with a giggle, but her tone was more teasing, even flirtatious, than angry. \n\n\"Oh, sweetie, I think we learned last night that you really have the most fun when your options are limited,\" Anna said, running a finger up and down Sara's arm. \n\n\"But what if she really needs something to wear more than that cut-off slut dress you left her with?\" said Rosie, feeling increasingly protective of her friend with this lesbian cougar clearly stalking her. \n\n\"Look sweetie, there's a shop right there in the lobby,\" sighed Anna, rolling her eyes. \"If you really need something to wear before you leave you can get it there.\" She reached into her bag and tossed several multicolored bills on the sand between the two girls. \"My treat.\" \n\n\"Damn right,\" said Rosie, scooping the money into their beach bag. \"We'll get you something cute today,\" she said to Sara. \"and you can borrow some of my stuff too.\" \n\n\"Exactly,\" said Anna. \"She could always get more clothes if she wanted \u2013 but that was never really the point, was it? It's all about giving her an excuse to overcome her fears and make herself do want she really wants to do anyway. It worked on the plane, didn't it, Sara?\" \n\n\"Oh, no question,\" said Sara with a chuckle. \"And it worked here too, didn't it?\" Sara said to Rosie. \"For both of us \u2013 you did leave your bikini in the room, after all.\" \n\n\"So, I'm supposed to thank this woman for stealing your clothes,\" Rosie asked Sara, \"because it got me naked too?\" \n\n\"Oh, no need to thank me,\" said Anna with a smug grin. \"Getting sexy young girls to bare all is just a public service I like to do.\" \n\nShe then started trailing her fingers down Sara's taut stomach very slowly, going lower and lower, making the girl's breath catch with every slight tickle. \n\n\"Speaking of baring all,\" Anna said, \"I see you shaved your pussy like I told you to. Good girl!\" she said, as she finally tickled Sara's bare mons with her fingertips, making Sara jump. \"See? So sensitive!\" Anna said with a wink. \"Do you like it?\" \n\n\"Oh, yes ma'\u2014 ...ah, um, yes, it feels really sexy,\" said Sara, barely catching herself before calling her seductress \"ma'am\" in front of Rosie. \"Thank you for the suggestion,\" she added, avoiding her friend's surprised look. \n\n\"So, you were the one who 'told her' to shave her pussy bare like some porn star?\" said Rosie. \"Are you planning on being her pimp, too?\" \n\n\"You know you're messing up your tan,\" was Anna only reply, nodding at the bag on Rosie's lap. \n\n\"Shit, you're right,\" Rosie said, pushing the beach bag off and brushing the sand from her naked skin. \n\n\"Once again, vanity triumphs over modesty,\" said Anna, winking at Sara and prompting a flustered blush from Rosie. \n\nFor a moment, Rosie kept holding her hands over her breasts and pussy, not wanting to give this snug lesbian the chance to ogle her naked body. But then she followed Anna's logic to its conclusion and let out a sigh of resignation as she reclined back on her elbows with her hands at her sides, fully exposing her nude body to the sun \u2013 and to that arrogant woman's appreciating gaze. \n\n\"Whatever,\" she muttered, as Anna and Sara shared a giggle at her expense. \n\n\"And on the topic of tanning, this sunscreen won't work for you here,\" said Anna, examining Sara's bottle of tanning oil and tossing it aside. \"A pale girl like you will get burnt to a crisp in the tropics if you don't use something stronger. But don't worry, sweetie, I have just what you need,\" she said, pulling a bottle of lotion from her bag and squirting a dollop into her hand. \"Turn over like a good girl and I'll do your back.\" \n\nAlmost without thinking, Sara obeyed, barely realizing that she was inviting the woman who had seduced her into her first lesbian encounter just hours ago to slather oil all over her naked body right in front of her friend. Anna smoothed the lotion over Sara's back and shoulders but wasted no time venturing lower, kneading the nude girl's buns and then sliding her hand down to Sara's thighs to tease the folds between her legs. Sara gasped slightly at Anna's intimate touch, and Rosie gawked at the woman's brazen forwardness. \n\n\"Well, I guess you two must have gotten to know each other pretty well on that flight,\" said Rosie, both appalled and strangely fascinated. \n\n\"Oh sweetie, what did you tell her?\" Anna said looking down at Sara and brushing her brown curls from her face. \"Did you squeal on me about making you squeal?\" she asked, as she swirled a fingertip over Sara's clit. \n\n\"No \u2013 I... ooh! ...um, no, just the streaking...\" said Sara, blushing deeply as she realized how her easy acquiescence to Anna's touch must look to her friend. \"Nothing else...\" \n\n\"Yeah, she only told me about the naked stuff,\" said Rosie with feigned nonchalance as she tried not to watch this older woman masturbate her friend right next her. \"She did mention you got kinda handsy with her \u2013 but that was clearly an understatement.\" \n\n\"Nothing she didn't enjoy, isn't that right sweetie?' Anna said, tickling Sara's pussy lips and making the girl squirm and giggle helplessly. ",
        "\"Yes! I mean... 'no'?\" Sara stammered, losing her ability to think straight. \"I mean \u2013 I enjoyed it.\" \n\n\"So, what's your deal?\" Rosie said to Anna, doing her best to maintain her casual front, \"You just go jetting around the world finding innocent girls on airplanes to strip naked and sex up on overnight flights?\" \n\n\"Well, no... sometimes I like to sex them up in broad daylight right in the middle of a crowded beach,\" Anna said with a wink, sliding her fingers into Sara's pussy and pressing on her g-spot. \n\n\"Oh god!\" moaned Sara, grabbing fistfuls of towel and reflexively grinding her hips. \"Ooooh... I... mmm...\" \n\n\"It's actually a lot of fun,\" said Anna with her mischievous smirk as she met Rosie's widening eyes. \"You might want to try it sometime.\" \n\nBefore the stunned Latina could formulate some snappy comeback, Anna plunged her expert fingers deep inside Sara and gave the squirming girl a sudden, body-quaking orgasm \u2013 and Rosie couldn't hold back an astonished chuckle at the sight of her friend bucking on her towel like a fish flopping on a deck. \n\n\"Look, I'm happy for Sara that she's found her magical, flying dominatrix to give her orgasms in public, but that's really not my thing, okay? I like dudes,\" said Rosie, composing herself and standing up. \"Now, if you'd like me to leave you two alone for a little bit, I think I need a drink.\" \n\n\"Oh, while you're up, could you get me and Sara a couple of frozen margaritas?\" said Anna with a friendly smile. \"You can put all three drinks on my tab at the bar. Just point over here and I'll wave \u2013 the bartender knows me.\" \n\n\"I'm not your waitress, bitch!\" said Rosie as she stomped off. \"And I got my own money.\" \n\nAnna watched the feisty Latina's well-rounded ass swivel as Rosie headed to the beachfront bar with an ostentatiously sexy walk, then she almost reluctantly turned her attention back to Sara, who was still delirious and humiliated from climaxing in front of her friend. \n\n\"That Rosie is a tough cookie, isn't she?\" observed Anna, absently running her fingertips up and down Sara's oiled back. \n\n\"Oh my god, I\u2014I can't believe\u2014 How could you do that to me right in front of her? It was so embarrassing!\" Sara whimpered. \"She didn't know that we... I never told her... about the other stuff.\" \n\n\"Oh, you mean all that hot lesbian sex we had?\" Anna asked quite loudly, prompting several nearby beachgoers to look their way, and making Sara burry her red face in her towel. \"Well if you weren't going to tell her, then it's up to me to show her, right? Just to let her know what she's missing,\" she said, idly squeezing Sara's bare butt, and then reaching down to flick her clit. \n\n\"No, I\u2014 Ah! \u2013 I think she's pretty straight \u2013 like, totally boy-crazy straight,\" said Sara, barely noticing in her orgasmic afterglow how accepting she had become of Anna casually stroking her pussy in public. \n\n\"Well, you were 'straight' too, when you boarded that flight, weren't you?\" asked Anna as she plunged her oiled fingers into her naked toy once again and started teasing her now hyper-sensitive g-spot. \"But what are you now, sweetie?\" \n\n\"Oh god, oh god, oh GOD!\" Sara babbled as her lesbian seductress swiftly drove ever-so-close to another climax before backing her off from it. \"I\u2014I don't know,\" she said, unconsciously humping Anna's hand, hungry for more stimulation. \n\n\"Well, you can't really call yourself 'straight' anymore, can you?\" said Anna, stroking Sara's clit so lightly it made the naked girl whimper. \n\n\"N-no ma'am... I guess... I guess not,\" she said slowly, blushing red as she admitted this to herself for the first time. \n\n\"Well, 'straight,' 'gay,' 'bi,' 'undecided,' whatever \u2013 there's one thing we both know you are, right sweetie?\" said Anna, giving Sara's bare bum a firm, possessive squeeze. \"What are you?\" \n\n\"I'm... I'm your... naked toy?\" the horny, nude girl whispered softly \u2013 almost reluctantly \u2013 looking up at her seductress with a strange feeling of profound helplessness. \n\n\"What's that?\" Anna said, cupping her ear and smacking Sara on the ass so hard it made her jump. \n\n\"I'm your naked toy!\" answered Sara more loudly, glancing around awkwardly at the many people nearby who now appeared to be watching their exchange intently. \n\n\"And what does that mean, my little toy?\" asked Anna, as her fingertips started dancing all over the girl's bare, sensitive skin. \n\nThe light tickling made Sara squirm and whimper as she tried to think of what to say, but she knew instinctively that she shouldn't resist it \u2013 and also that it would surely continue until she gave a satisfactory answer. \n\n\"Oh, I... ummhmmhmm... eep! It means \u2013 Ooohoohooh! It means you can play with me any way you want!\" she said through a whiny giggle, paddling her pointed feet against the sand but not daring to move her arms. \n\n\"And how do you feel about that, my little naked toy?\" Anna asked as her devilish tickles only intensified and spread further up and down Sara's nude body. \n\n\"Ooohooh... I\u2013 um... aaaaah...Ooh! I love it! \u2013 heehee!\" she managed to squeal, finally recalling her lessons from the other night as Anna's ticking kept intensifying. \"I-yeeeheehee \u2013 I love it! Ooohoookay? I LOVE IT \u2013 pleeeheeheease!\" she squeaked through manic laughter. \n\n\"Very good!\" Anna said triumphantly, finally relenting and patting Sara's butt as the girl panted with relief. \"Now one more time for me, sweetie, this time loud and clear,\" she said as she slid her fingers between her toy's legs once again. \"What are you, what does it mean, and how do you feel about it?\" \n\nAs Anna's expert fingers quickly brought her painfully horny toy closer and closer to another powerful climax, Sara suddenly stopped worrying about the crowds of onlookers on the beach all around her. She only wanted to please this beguiling, dominating woman \u2013 and, of course, to please herself. With the pleasure building, Sara suddenly reared back and straightened her arms, lifting her shoulders and arching her back while at the same time raising her butt and grinding against Anna's hand to push herself over the edge. When her orgasm erupted, Sara threw back her head and let out a squeal. \n\n\"I'm your naked toy!\" she declared in a trilling voice that lilted unsteadily with the waves of her climax, \"And you can play with me any way you want \u2013 because I fucking love it!\" \n\nSara's body remained in this tense arch for several moments as she drank in every drop of pleasure Anna could milk from her. But when she finally opened her eyes, she found herself looking up at her dumbfounded friend Rosie, who was staring down at her wide-eyed and slack-jawed, her banana daiquiri slowly tilting until it started spilling into the sand. \n\n\"What. The. Fuck?\" said Rosie, totally oblivious to the fate of her drink. \n\n\"Oh my god, please no...\" Sara whimpered as she curled into a ball on her towel on the verge of tears. \"I can't believe this is happening...\" \n\n\"Damn, are you okay, Sara?\" said Rosie, kneeling beside her. \n\n\"Oh, she's doing great,\" Anna chuckled. \"When was the last time you had an orgasm like that?\" \n\n\"I do just fine, thank you,\" Rosie snapped, before finally noticing her empty glass. \"Shit! Look at this.\" \n\n\"I'm so sorry about your drink, Rosie. Please, let me get you another one on my tab,\" offered Anna. \"After all, I can't help but feel partly responsible,\" she said coyly, licking the fingers that had just launched Sara into her ultimately humiliating ecstasy. \"Sweetie, get up, stop pouting,\" she said, smacking her whimpering toy's bare butt hard enough to rouse her from her shame spiral. \"You owe your friend a new banana daiquiri, and we need a couple of nice frozen margaritas. Go be a good girl and fetch them for us \u2013 just tell Juan they're on me.\" \n\n\"Y-yes ma'am,\" said Sara weakly as she rose on wobbly legs and headed off toward the bar, doing her best to avoid Rosie's eye. \n\n\"She calls you 'Ma'am'?\" asked Rosie snidely once her friend was gone. \n\n\"Sara started that, actually,\" said Anna with a shrug. \"But I don't discourage it, because I think it makes her feel comfortable.\" \n\n\"Same with calling herself your 'naked toy'?\" \n\n\"Well no, that was my idea... but I think she enjoys that too,\" Anna said with a wink, nodding down at the spot on the towel where Sara had most recently enjoyed it. \n\n\"So lady, just what are your intentions with my friend?\" said Rosie, reclining on towel. \"I'm not going to let her get hurt.\" \n\n\"My only intention is to give her the most intense, erotic, thrilling, exhibitionistic experiences she has ever had,\" Anna said with a self-satisfied grin. \"Which is exactly what she came here for, right?\" \n\n\"Well, yeah, I guess so... but did you really have to humiliate her like that? \n\n\"Oh, but the embarrassment is half the fun! Doesn't she look just adorable when she blushes? And besides, I know that turns her on.\" \n\n\"And how do you know that?\" demanded Rosie skeptically. \n\n\"Honestly, sweetie, if you don't think I can tell when a hot, young, naked girl is getting turned on, then you haven't been paying attention,\" said Anna as she leaned across Sara's towel at the blushing Latina. \n\n\"Well, I wouldn't know about that,\" said Rosie, suddenly getting flustered. \n\n\"Oh? Well I can tell that you've been getting turned on watching me sex up your friend into these 'embarrassing' public orgasms,\" said Anna, with a nod at Rosie's hardened nipples. \n\n\"What? No, I just, um...\" the buxom co-ed trailed off as she drew back and put her arm across her chest, blushing deeply. \n\n\"The real question,\" said Anna, locking onto Rosie with her intense green eyes, \"is whether you're getting turned on by watching your girlfriend's sexy, naked body writhe in ecstasy at the hands of another woman \u2013 or... it's because you were imagining yourself publicly climaxing in her place...\" \n\n\"No!\" said Rosie crossing her legs and avoiding Anna's eye. \"I mean, not either of those...\" \n\n\"But you were definitely thinking about how turned on she was, weren't you?\" \n\n\"I mean, yeah... I guess,\" said Rosie, biting her lip with a far-away look. \n\n\"And wondering how it would feel... being touched like that, naked, in front of so many people...\" \n\nAfter too long a moment to deny, Rosie finally shook her head and managed to snap herself out of her erotic musings \u2013 while Anna just sat back and tried not to laugh. \n\n\"Look bitch, I'm just trying to look after my friend, okay,\" Rosie said curtly, moving her hand from her boobs to her upper chest, now somehow more embarrassed by the hot flush she was showing there. \n\n\"And I'm just trying to give her what she wants,\" said Anna, \"...what she came her for...\" Then the woman reached out and brushed a lock of wavy black hair from the flustered girl's face, as if daring her to pull away. \"It's what you came here for too, isn't it?\" \n\n\"Whoa! Hold up, lady,\" said Rosie as she sat up and pulled her knees up to her chest, suddenly feeling extremely naked in front of this aggressive lesbian seductress. \"I'm here for all kinds of things \u2013 just like Sara \u2013 and I don't recall seeing you on either of our agendas when we were planning this trip.\" \n\n\"Okay, fair enough,\" said Anna, backing off, pleased to have planted the seed deep enough to make the \"straight\" Latina so uncomfortable. \"But let's leave it up to Sara, shall we? We'll ask what she thinks when she gets back, and if she says she hasn't enjoyed what I've been doing with her... well then, I'll be on my way and we won't cross paths again.\" \n\n\"And you bring all of her clothes back here by tomorrow and leave them for her at the front desk,\" said Rosie, extending her hand to shake on it. \n\n\"But...\" Anna continued, \"if she admits she does enjoy it... Then you are going to stop badmouthing me just for helping her do what she really wants. In fact, you will tell Sara you're actually a bit jealous that she has no choice but to go naked for so much of this trip, and that you're so inspired by her example that you pledge to go as naked as her \u2013 only wearing clothes when she wears her little pink dress. Agreed?\" \n\nRosie rolled her eyes and shook Anna's hand, and was a bit taken aback by feeling such a firm grip from such a soft hand. But with a truce established, she pulled Anna closer and lowered her voice. \n\n\"So... you really know that cutie bartender?\" \n\nAnna laughed and started dishing what she knew about Juan, but their conversation was interrupted when Sara returned with their drinks, blushing anew as she walked naked past the many beachgoers who had just watched her have a squealing orgasm. \n\n\"There you are!\" said Anna brightly, taking her glass. \"Such a good girl, isn't she, Rosie?\" \n\n\"Yeah, 'good girl,' Sara,\" Rosie said with another roll of her eyes as she took her glass. \n\nWhen they were all sitting together sipping their drinks and Sara was just starting to put her embarrassing orgasmic episode out of her mind, Anna reached over to run a finger up her oiled inner thigh, sending a renewed shiver up her spine. \n\n\"So, sweetie, remember that little talk we had earlier,\" Anna said, \"you know, about how much you love being my naked toy?\" \n\n\"Oh, I think I can recall,\" Sara said, dropping her head into her palm and feeling the hot blush on her face. \n\n\"I'm guessing that must have been pretty embarrassing for you... what with all of these people, and even your friend Rosie, seeing you say such a shameless thing out loud \u2013 all while you were having that toe-curling orgasm...\" \n\n\"Oh, ya think?\" said Sara, cringing as she relived the moment in her mind. \n\n\"Well, I was just wondering,\" said Anna, as her fingers reached Sara's pussy and the girl barely flinched, but instead opened her legs slightly more at the touch, \"was it worth it? That toe-curling climax?\" \n\nSara let out a faint whimper and winced as if scolding herself, before unconsciously rocking her hips against Anna's skillful fingers and giving the only answer her body would allow... \n\n\"Yesssss,\" she sighed, bowing her head. \"It\u2014it was... amazing...\" \n\nAnna glanced up at Rosie in a mood to gloat but saw that the buxom Latina was just staring entranced at her friend. \n\n\"It was embarrassing... maybe even humiliating? But still... amazing...\" Anna said, teasing Sara's clit ever-so lightly. \n\n\"Yesssss,\" said Sara with quickening breath. \n\nThen Anna took her hand away, eliciting another small whimper from her horny toy. \n\n\"You're getting turned on right now just thinking about it, aren't you?\" she said. \"Thinking about all these people around us staring at you, knowing what they all just saw you do... That's turning you on now, even as you blush as the thought, isn't it?\" \n\n\"Y-yes, ma'am,\" said Sara, blushing even deeper and first closing her legs in shame, but not long after, unconsciously rubbing her thighs together quite shamelessly. \n\n\"The embarrassment actually turns you on too, doesn't it?\" \n\n\"I hate to admit it.. but yeah, it does,\" said Sara, wincing at herself again. \n\n\"Well I'm glad you're able to admit that actually enjoy these sexy little embarrassments I've been putting you through, sweetie. Your friend Rosie here was getting worried about you,\" Anna said, winking at Rosie with a gloating grin, \"but you're fine with all this, aren't you, sweetie?\" \n\n\"Yes ma'am,\" she said feebly, reaching over to touch her friend's arm. \"Really, Rosie, I'm fine. I'm sorry if all this made you uncomfortable.\" \n\n\"No girl, don't worry about me,\" said Rosie somewhat defensively. \"If you're into it, then enjoy it, okay?\" \n\n\"I guess I really do enjoy it,\" said Sara with a resigned sigh. \"I don't think I wanted to admit it, but guess now I can't really deny it.\" She turned to the woman who had seduced her, stripped her, repeatedly humiliated her \u2013 and given her the best orgasms of her life \u2013 and smiled at her weakly. \"Anna won't let me.\" \n\nAnna responded by running her finger over Sara's erect nipple \u2013 making the horny, naked girl bite her lip as she tried not to squirm. Then she cast a quick glance over at Rosie, clearly pleased to flaunt her control over her friend. \n\n\"You know, sweetie, I think you've been learning \u2013 and admitting \u2013 quite a bit about yourself since you got on that plane,\" Anna said as she swirled her fingertips around Sara's oiled, b-cup breast, sending a shiver up the girl's spine. \"It's pretty clear you knew well before you planned this trip that you get off on the idea of getting naked where you're not supposed to. And while it may have been hard for you to accept, I don't think it was really much of a surprise to you that you also get turned on by the feelings of embarrassment that public exposure naturally brings with it... But I do think there might be one more thing that our little games might have helped you discover about yourself that maybe you didn't see coming.\" \n\nAnna took Sara's chin in the palm of her hand and leaned in to look deep into the girl's wide, blue eyes... \n\n\"I think you've also discovered that it turns you on when you have to do as you're told.\" \n\nThis thought made Sara blush more deeply than ever, and she tried to turn her head to avoid the woman's piercing green eyes, but Anna held her chin firm and wouldn't let her look away. Sara felt an unexpected surge of wetness between her legs when her seductress forced her to hold her gaze and dared her \"naked toy\" to deny thrill of being under her control. The swooning girl suddenly felt so weak and helpless, as if not just her chin but her entire, naked body was quivering in the palm of Anna's hand. She bit her lip as another wave of shame crashed over her at the realization of her submission, and that only served to make her even more painfully horny than before. Sara waited for as long as she dared before finally admitting out loud \u2013 to Anna, Rosie, and herself \u2013 what her body had long ago made so clear. \n\n\"Y-yes ma'am,\" she said in a shaky voice, not daring to imagine what new erotic torments this admission might unleash. \"It turns me on when you tell me what to do...\" \n\n\"Good girl!\" Anna said, drawing Sara closer for a gentle but demanding kiss. \"It feels good to finally admit what really turns you on, doesn't it?\" she said, turning her gaze to Rosie to send the same taunting message to Sara's clearly fascinated friend, who was brightly flushed and breathing heavy as she watched this rapacious lesbian sexually dominate her friend right in front of her. \n\nWhen Rosie finally managed to snap herself out of her erotic trance and realized how obviously turned on she was, she pulled her knees up to try and hide her naked blush and took a deep draw on her drink, trying to look casual. But Anna just gave her a teasing wink to let her know that she wasn't fooling anyone, before turning her attention back to her horny, naked, obedient toy. \n\n\"Okay, sweetie, then I have a treat for you... I want you to lie back for me like a good girl,\" cooed Anna, taking Sara's drink and setting it off to the side. \"Now put your hands behind your head, close your eyes, and stay still \u2013 no matter what. Will you do that for me, sweetie?\" she said. \n\n\"Y-yes ma'am,\" responded Sara, hesitating only slightly before obediently closing her eyes and laying out her nude body for Anna to do with what she wished. \n\nThen Anna filled her straw with frozen margarita and capped the top with her finger to hold it in. \n\n\"Now remember, you have to keep your eyes closed and your arms up, no matter what,\" said Anna teasingly, holding the loaded straw over Sara's left breast. \n\nAnna lifted her finger to suddenly pour a dollop of the icy slush onto the girl's nipple, making her gasp, wince, tense up \u2013 but not move. ",
        "\"Ooooh!\" whimpered Sara, squirming slightly and squinting the keep her eyes shut. \"So cold!\" \n\nAnna smirked and winked at Rosie as she reloaded her straw and proceeded to swirl another mound of frozen margarita over Sara's right nipple, eliciting another small gasp, but this time a more resolutely passive acceptance of the torture. The woman used the straw to trace lines of icy slush up and down Sara's bare tummy, and with each one, the girl's breath quivered, but she remained obediently still, flinching slightly only when the chilly liquid melting off the slush dripped unexpectedly down her sides. \n\n\"Such a good girl for staying so still,\" said Anna, just before unloading a strawful of frozen margarita onto Sara's shaved pussy. \n\n\"Thank y\u2014 Aaaah!\" gasped Sara, her whole body tensing up, but her arms staying up and her eyes obediently shut. \n\n\"Such a good girl...\" repeated Anna, but with her eyes on Rosie, who was staring at her thoroughly dominated friend with wide eyes and a flushed chest. \n\nNext, Anna leaned over and began licking the melting slush off Sara's nipple, making the girl flinch again, but still not move. The woman's mouth lingered on her breast, licking and sucking the chilled nipple, knowing what effect the contrasting warmth of her lips was having on the girl. \n\n\"Mmmm...\" Sara moaned, again starting to forget that she was in the middle of a crowed beach. \n\nAnna moved slowly to her other nipple, and then eventually down to the girl's stomach, licking up the stripes of green slush with long, serpentine laps of her tongue, all the while making Sara moan and writhe more and more. \n\n\"Want some?\" whispered Anna with a quick look up at Rosie, but the American girl could only shake her head slightly as she stared in awe at her friend's erotic enthrallment. \n\nThen Anna's warm lips suddenly enveloped Sara's mound and she plunged her tongue deep inside her squirming toy, sucking the girl's frozen clit deep into the heat of her mouth. \n\n\"AAAAAAHHH \u2013 oh my god, oh my GOD!\" squealed Sara as she was heaved once more over the edge into ecstasy. \n\nShe threw open her legs and ground her bare pussy into Anna's mouth, even desperately raising her hips to chase Anna's tongue as the woman sat back up and casually reached for her drink. \n\n\"I just love a good frozen margarita,\" Anna said, taking a sip and smiling down at her panting toy. \"But they always taste so much better when served on the naked body of a very horny and obedient girl.\" \n\nAs Sara began to regain her senses, she glanced around at the onlookers gawking at her latest obscene display, and then finally up at her flabbergasted friend, who was again staring down at her, eyes wide and mouth open. \n\n\"I'm sorry, Rosie,\" she said between panting breaths, not noticing how flushed her friend had gotten watching the whole episode. \"I just couldn't help it. I hope I haven't freaked you out too much,\" she giggled weakly. \n\n\"No, don't worry about it,\" said Rosie, her own voice a bit unsteady. \"I \u2013 I get it,\" she said with an embarrassed glance at Anna. \n\nAnna smiled at the two naked, uncomfortably horny young girls \u2013 each embarrassed at different levels, but both adorably flustered and so ripe to be toyed with. \n\n\"You know, Sara, while you were fetching our drinks like a good girl, Rosie had a wonderful idea,\" Anna said, prompting a curious glance from Sara and a very nervous one from Rosie. \"We were chatting about how much fun you're going to have since I gave you no choice but to go naked for so much of this trip, and Rosie confessed that she's actually a little bit jealous,\" she said with a sly look at the blushing Latina. \n\n\"Really?\" said Sara glancing over at Rosie, excited by the prospect of some validation from her friend. \"You told her you were jealous of what she did to me.\" \n\n\"Y-yeah, kinda,\" said Rosie grudgingly, but now secretly wondering if there might not be some truth to it. \n\n\"So... tell her your idea, Rosie,\" said Anna with a smug grin. \n\n\"Well...\" the buxom girl sighed, awkwardly playing with her hair. \"I was, um, I was thinking that maybe I should go naked whenever you do, and only wear my clothes when you wear your pink dress.\" \n\n\"Oh, okay...\" said Sara with an amused smile. \n\n\"That way, you see,\" Anna chimed in, \"by taking your clothes away from you, I've really stripped you both naked for the week! Right, Rosie?\" \n\n\"Yeah,\" she sighed, finally realizing the meaning of what she had agreed to. \n\n\"And since she'll only be getting dressed when you wear clothes,\" Anna went on, turning her sly grin to Sara, \"now you are basically in charge of when Rosie has to go naked. Doesn't that sound like fun?\" \n\n\"Actually, it kinda does!\" said Sara with an evil grin at Rosie, who could only shrug and roll her eyes and the predicament she had let Anna maneuver her into. \n\n\"Yeah, well now that you're had your fun,\" Rosie said, sitting up and reaching for their beach bag, \"we have some plans of our own. Sara, what say we, um, take a swim up the beach.\" \n\n\"Oh yes, Sara filled me in on your daring plans to swim up the coast to a regular beach and then come out of the water and try to make your way home in the nude,\" said Anna in a slightly condescending tone as she casually trailed her fingertips up and down Sara's naked body as if marking it as her territory. \"Quite admirably ambitious, but it could be a little risky depending on the time and place you try it.\" \n\n\"And what would you know about it?\" said Rosie, doing her best to reassert some attitude after witnessing Anna's expert dominance. \n\n\"Well, I've been coming to this island for years, and I know that just south of here there's a ridge of jagged rocks between two resorts that runs all the way down the beach and pretty far out into the surf. So, if you head that way, you won't get very far. You're much better off swimming north, but just don't go any farther than the Jard\u00edn de Flores hotel \u2013 you'll know it by the big red roof. If you go much further than that, you'll be getting close to the business district, and there are usually a lot of police patrolling that area.\" \n\n\"Police?\" asked Sara, exchanging a worried look with Rosie. \n\n\"Well, yeah \u2013 public nudity is illegal here, after all, which is why there are private beaches like this. The locals are actually pretty conservative about nudity, and they get annoyed with tourists who think every stretch of sand is a topless beach.\" \n\n\"Ooh, maybe this isn't such a good idea,\" Rosie muttered. \n\n\"I didn't say that,\" said Anna. \"I think it's a wonderful idea, and I'm sure you'll both enjoy it. I just want to make sure you know how to get away with it and still have your fun.\" \n\n\"You're so kind,\" said Rosie skeptically. \"Any more friendly advice?\" \n\n\"Well, you should definitely wait until later in the afternoon \u2013 after 5pm or so. By that time, pretty much all the families have left, so there won't be kids around. That's what really pisses off the locals \u2013 tourists running around naked in front of their kids. Avoid that and you should be able to stay out of trouble on your way back.\" \n\n\"Yeah, um, maybe we should wait, Rosie,\" said Sara with an apologetic look to her friend. \"I don't think I feel quite up to it right now, you know?\" \n\nOh yes, sweetie, you must be exhausted,\" said Anna, tweaking Sara's nipple. \"I know the rule is no swimming for three hours after a meal, but what is it for swimming after so many heavy-duty orgasms?\" \n\n\"Very funny,\" said Rosie as her friend blushed deep red. \"Look Sara, I didn't sleep too well on my flight either, so let's go take a nap for a few hours. I'm sure your friend Anna can find some other girl out here to finger bang while we're gone.\" \n\nThe two naked girls packed up their beach bag and got up to shake out their towels before heading in. Anna stood up as well, and delighted in making Sara jump with a pinch on her bare butt. But then she grabbed her naked toy firmly by the arm before she could leave and gave her a playfully stern look. \n\n\"You moved, you know,\" said Anna, arching an eyebrow. \n\n\"What?\" \n\n\"When I was enjoying that delicious frozen margarita off your equally delicious body,\" Anna said. \"I told you not to move, but when I went down on that chilly pussy of yours, you practically tried to shove your clit down my throat.\" \n\n\"Oh god, I'm sorry,\" said Sara, barely able to recall what she did. \"I just couldn't help it. It was all just...\" \n\n\"Doesn't matter. Rules are rules,\" said Anna with her mischievous grin. \"You moved, and now you know you have to be punished.\" \n\n\"Oh,\" said Sara quietly, again feeling that sudden thrill of submission burn between her legs. \"I\u2014um...\" \n\n\"In due time, sweetie,\" said Anna with a wink as Rosie grabbed her dazed friend by the arm and started dragging her up the beach. \"See you later, I'm sure,\" Anna called out with friendly wave. \n\n\"Not if we see you first,\" snapped Rosie as they made their way up the beach toward their bungalow, Sara still glancing back over her shoulder at her dominant seductress, wondering what \u2013 and when \u2013 her \"punishment\" would be... \n\nBack in their room, Sara and Rosie curled up naked on their respective beds to get some well-needed rest, and Sara drifted off almost immediately, thoroughly spent from her repeated public orgasms, as well as the intense waves of humiliation that crashed over her in their wake. \n\nBut her sleep was less than perfectly restful, as it was filled with vivid dreams of Anna. She envisioned the seductive flight attendant rolling the dining cart down the aisle of a plane with Sara perched on top \u2013 naked, legs spread wide, hands bound behind her head with a kerchief \u2013 offering passengers a dinner selection of \"beef, chicken, or slut.\" Sara dreamt of Anna tying her naked and spread-eagled to a giant kite and flying it over the beach, with thousands of people peering up and pointing at her nude body. And she repeatedly relived a surreal version of Anna's frozen margarita game, but this time she was splayed out not on the tropical beach but on Professor Duggins' desk at the front to that Irish Lit class where she first met Rosie \u2013 the auditorium seating packed with everyone she knew from school, who all applauded and cheered each time Anna made her cum by sucking on her cold clit. \n\nWhen Sara finally woke, somewhat refreshed but still thoroughly horny, she heard moans and heavy breathing from Rosie's bed. Her Latina friend had kicked off all her covers and was writing naked on her bed with one hand deep inside her pussy and the other squeezing her breasts and reaching up to pull on her hair. Rosie's hips bucked high off the mattress and her whole body glistened with sweat. Sara had no way of knowing how long she had been at this, but her friend seemed to be edging herself over and over again to some especially delicious fantasy. \n\n\"Mmmm, oooh yes \u2013 YESSSS! Juan, stir me like a martini!\" she mumbled as she swiveled her hips. \n\nDespite her urge to giggle, Sara stayed silent so she could continue to enjoy the show. Rosie's nude, tanned, athletic body squirming so salaciously as she massaged her ample boobs captivated Sara. So curvy and well-endowed, Rosie actually looked quite close to what Sara had imagined Anna might look like naked \u2013 and to see her writhing in the same kind of ecstasy that Sara had just experienced held a powerful fascination for her. \n\nAlmost forgetting that it was her friend she was watching, Sara's fingers drifted between her legs and she began teasing her own slippery folds. She imagined Rosie's hair as blonde, and her lips bright pink like Anna's. Sara began to lose herself in her reveries as she fantasized that she was watching her lesbian temptress pleasuring herself naked for Sara's own entertainment, in a titillating role-reversal of what Anna had made her do on the plane. Kicking off her own sheet, she began to imagine herself beside her, each pleasuring each other in a level of intimacy that Anna had not yet allowed and Sara hadn't realized she wanted. Then, as Sara neared yet another climax, she started moaning unconsciously \u2013 but she was oblivious to the noise until it got Rosie's attention and her friend looked over and caught Sara staring at her as she masturbated. \n\n\"Whoa bitch, you were looking at me, weren't you?\" said Rosie, sitting up and grabbing her sheet to cover her nakedness. \"You really have no shame left at all, do you?\" \n\n\"No Rosie, it wasn't like that,\" said Sara, discovering a whole new category of sexual humiliation. \"I'm sorry!\" \n\n\"So, you were looking at me while you were getting off!\" \n\n\"But \u2013 but I wasn't thinking of you, Rosie \u2013 I promise!\" Sara insisted, hiding under her own sheet. \"I\u2014I was thinking about... Anna...\" she said, wincing at herself. \n\n\"Damn, girl,\" said Rosie, shaking her head as she threw off her sheet and stood up. \"I gotta take you out to chat up some guys, and snap you out of the spell that freaky witch put on you.\" She yanked Sara's sheet away too and pointed towards the door. \"Now get your naked as out on that beach with me so I can catch us some dick!\" \n\n\u2013\u2013\u2013- \n\nFin \n\n\u2013\u2013\u2013- \n\nOkay, now if you want to know how successful Rosie is in her quest (ha!), and whether/how Sara gets her \"punishment,\" then you gotta gimmie those stars, bitch! (and lots of comments and feedback, too!) I need the inspiration to get me to finish Part 3."
    ],
    "authorname": "LasciviaDelicioso",
    "tags": [
        "exhibitionism",
        "forced exhibitionism",
        "forced nudity",
        "humiliation",
        "lesbian",
        "lesbian domination",
        "public nudity",
        "streaking",
        "tickling"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/red-faced-on-the-red-eye-pt-02-sunburn"
}