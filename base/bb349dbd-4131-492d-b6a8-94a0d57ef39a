{
    "title": "The Last Shewolf Ch. 84 - End",
    "pages": [
        "Meghan's POV \n\n\"Don't say a word,\" I said as I elbowed him in the ribs. He grunted, then sat down. \"Put that away and look at me.\" He put the ticket back in his wallet and put his phone down. I leaned in, whispering in his ear. \"This isn't the time or place. Don't say anything until you have Snake and Dagger alone, this is club business.\" \n\nHe nodded, still shocked. \"I can't believe it.\" \n\n\"Believe what? That your dream was real? Tell me if you recognized the women with Gabriel and Michael last night. Were they the ones in your vision?\" He nodded, still trying to wrap his head around it. \"Then relax and eat breakfast.\" I got him to pick up a fork and eat, and soon we were in a lively conversation with my parents about where we would live and what we would do. \"I don't know yet,\" I said. \"There's still so much up in the air, I haven't even begun to figure out what I'm doing next month.\" \n\n\"There's plenty of time, don't rush into a mistake,\" Dad said. \"Where to live, buying a house, it's a big deal.\" \n\n\"Right now, it's important that she be near the Clinic, so I think I'm going to move into the room with her short-term. None of the apartments at our complex are big enough for what I want to do, and Snake's cooking is better than Kusheil's.\" Steven pulled me into his side. \"It's also important that we be close to the clubhouse, I still have my Master-At-Arms duties since I got elected without running somehow.\" \n\nMom just laughed. \"No one else ran, Steven. Hammer here needed to retire, and he spread the word he thought you had done a fine job. The Club agreed. You're it, son.\" \n\n\"Fine, but when we have a family I'm going to see if I can get someone else to step up.\" \n\nIt was time for Mom to look confused. \"You know, you mentioned family in your vows, both of you, but you both know that you two can't have children together. You told me yourself, Meghan, you said it was a biological impossibility. Are you planning to adopt or get a sperm donor?\" \n\nI blushed a little. \"I have a plan, but I'm not willing to talk about it yet. There is too much going on right now, what with the funerals and the Club coming together.\" \n\n\"You should do it right away,\" Mom said. \"You're not getting any younger.\" \n\nI snorted. \"Geez, Mom, a week ago you were worried I'd die a crazy cat lady, and now you're demanding I get knocked up before I've even had a honeymoon! I'm only thirty, Mom, I have time.\" \n\nShe just took my hand. \"I have time too, PLENTY of time, and I want to spend it playing with my grandchildren, so get busy. I'm so happy you married a guy in our Club, so I don't have to worry about you moving away.\" \n\nIt was Steven's turn to laugh. \"Oh, you'd be surprised,\" he said. \"We have to keep Eve hidden and protected, they're five hours north. Moose, Sheri, Viper, Kelly... all of them are already talking about how they can't take Minnesota winters any more and are threatening to move to Florida.\" \n\n\"Damn right,\" Viper said as he came over and sat down. \"We are thinking about putting our house on the market, now that Snake found a woman and Eve is married. It's too much work, and with my arthritis I hate the cold. Hell, we looked at Harley trikes last week.\" \n\n\"Really? It's getting that hard to ride?\" I pulled his hand over, I could feel how his joints were swollen. \n\n\"The motorcycle is getting tougher to handle, and Kelly doesn't want to ride on her own. We took a test drive, it's stable, comfortable and better for us. We're still talking, but we'll probably make the change soon. In any case, we were thinking about looking for a condo somewhere near Jacksonville. We like the area, and when you guys come down for Christmas we'll be right there.\" \n\nWow. The Club wouldn't be the same if a bunch of the old guard followed them down there. \"I hate to see us scattered around like this, we just got the Club together and now it's like we're breaking apart.\" \n\n\"Not necessarily,\" Steven said. \"I have some ideas, just trust me. I have to run them past Snake and Dagger before we bring them to the Club, and I want to do some research.\" He put his fork down and drank the rest of his milk. \"Now, I have to get upstairs and get some work done on the new security plans, and Doc here has patients to check on.\" \n\nI nodded and took his hand as he helped me up. \"I expect the police will be here, they will probably want to interview me and the others who were here last night.\" \n\n\"I'll put them in the conference room, and coordinate getting the people there,\" Viper said. \"I need to talk to the Chief, and we need to start planning the funeral. I have a call into our lawyer, we'll set up a will reading on Monday. I did ask him to forward any arrangements or decisions on his funeral to me.\" \n\n\"And we are going to help with the kids, now that they are fed we need to get them packed up and home. They can't do anything outside.\" Teri looked at the group that was eating at the far table, a tear in her eye. \n\nI looked back at them, nodding slightly. \"The will need support, they loved Deputy Donuts.\" With that, Steven picked me up as I squealed and started carrying me back upstairs over his shoulder. \"Put me down!\" The group was laughing as he took the stairs fast, making me bounce on his shoulder. \n\n\"Quit wiggling, wife!\" He smacked my ass hard, making me squeal again. He didn't set me down until he opened the door to our room. His eyes were dark, and I pulled him inside with a smile. He leaned down, kissing me hard as I pressed myself into his hard body. My hand was down his pants as he untied my scrub bottoms, pushing them to the floor. I got his belt unbuckled and dropped his jeans to the floor, his boxers with them. I jumped into his arms as his hands grabbed my ass, pulling me tight to his hard length. \"I couldn't wait another minute,\" he said as he bit my earlobe. \n\n\"I can't wait,\" I said. I pulled my panties aside, and he pulled me up until he was at my entrance then eased me down. I moaned as I felt him slowly fill me, making me whole. I wiggled my way until I had him all. \"God, I love you,\" I said. \n\n\"By Luna, you are MINE,\" he said. He turned and used short steps to push me against the door, his ankles still caught up in his jeans. I bit off a scream in his shirt, my teeth leaving a mark on his shoulder as he lifted me and dropped me again and again onto him. It was hard, fast and brutal, it was amazing. His wolf was forward, and he was claiming what was his in the most primal of ways. \"Move my shirt aside and bite me,\" he said. \"Claim me as yours as I claim you as mine.\" \n\n\"It won't work,\" I said, barely able to talk over all the pleasure I was feeling. \n\n\"I don't care.\" He had me pinned high on the door, pounding up into me at a furious pace as the sensations overwhelmed me. I came once, twice, and then I felt him swell even bigger. Something was trying to force its way in, it was like a softball and my poor body was struggling. \"I'm going to give you my knot,\" he said. \"It will hurt, but when it is in you won't believe how it feels.\" \n\nI screamed as he lifted me up, then drove me down onto the knot. My lips stretched around it, it was HUGE. Steven wasn't a small man to begin with, but this was the size of his fist. He worked me around before lifting me and pulling me down farther. My eyes closed, I tried to ride out the pain as I got more inside. It took four more tries before it popped inside, and the pain was replaced by pleasure. \n\n\"Holy shit,\" I said as he moved it within me. He was fully buried now, and the knot was rubbing constantly against my G-spot. I became a freight train of orgasms, screaming until I had no more breath. He was pushing me farther and farther up the cliff, so high I might not survive the drop. He reached up, tearing my scrub top and exposing my shoulder. I could see his face and teeth shifting, and it didn't frighten me at all. I pulled his shirt aside, picking my spot where neck met shoulder. He sped up and up until he we screamed together in pleasure, and when I felt his release he bit down hard on my shoulder. \n\n\"STEEEEVE!\" I came so hard I almost blacked out. The pain from my shoulder reminded me of his, and in my orgasmic bliss I leaned forward and bit him hard enough to break the skin. His blood coated my teeth and tongue, mine coated his, as we held each other tight. It was a minute to catch our breath, then he walked me over to the bed. The knot still held us together, so he lay on his back with me on top of him. He gently licked the wound on my shoulder, I could tell he was pleased. It would scar brightly and declare I was his to his world. \n\nI tore off a chunk from the scrub top and used it to stop the bleeding on his neck. As a werewolf, he wouldn't scar, and the bite wouldn't bring the same bond that a shewolf would have given him. The knowledge of this made me drop my face to his chest, a tear falling onto his skin. \n\n\"You're not second best, Meghan, and I'm not settling for you,\" he said. \n\n\"How did you...\" \n\n\"I could sense your emotions. I get tingles, impressions. It's not a mate bond, but Luna gave us something more than any wolf has ever had with a human. You are mine, Meghan.\" \n\n\"You are mine and I am yours,\" I said. \n\n\"Yes. I don't understand it, but I'm accepting it. That dream, it wasn't my dream. I've never had a prophetic dream, and only Luna could make these things happen. I mean, a lotto? All those children?\" He kissed my head. \"The lottery win happened. The women who were sitting with Gabriel and Michael, they showed up last night. Did you see how they were together?\" \n\n\"They are already in love,\" I said. \n\n\"Exactly. I can't make that happen, Gods grants that. And if Luna grants me a human mate, and shows me a future with us playing with our children in their wolf form, well, I'm not going to argue with it. I don't know how she will do it, but it WILL happen. We will all be together, watching our children play in the grass together at the Pack house up north.\" \n\n\"I know how to make it work,\" I said. \"I will need to get some equipment, and everyone will have to agree, but it's doable.\" \n\n\"And it answers the question I've had since we started protecting Vivian.\" \n\n\"What?\" I moaned softly as he moved inside me, kicking off another small orgasm. \"Stop that, or we'll be stuck together for hours. I have patients to care for.\" \n\n\"Sorry.\" He ran his hand down my back, causing tingles to run down me to my core. \"We couldn't figure out how Luna would rebuild the species with just one shewolf. Even if she had a dozen children in eight years, those children have to grow up and find their true mates. It would take centuries to build up a decent population again.\" \n\n\"Luna isn't planning on one baby at a time,\" I said. \"She is going to use the human wives of werewolves to birth a new generation. That's what you saw, more than a dozen the first year, all female.\" \n\n\"Yes. Those girls grow up and find their mates among the remaining werewolves here. They get the next generation started, and if we do things right, in two generations we have hundreds of wolves. I might live to see a Pack that rivals what I saw as a boy,\" I said. \n\n\"With no asshole Alphas and no forced mating,\" I said. \"Things will be different with no Pack bond. It will be all about family.\" \n\nI snuggled into him, feeling better already. \"When we do this, I want to bear your children, Steven.\" \n\n\"Our children.\" We drifted to a contented sleep together. \n\nDagger's POV \n\nThe detectives arrived just after ten, and Viper set them up in the conference room for interviews. One wanted to talk to Doc, and I had seen how Steven carried her out. Telling him I'd bring her back, I walked to her room and knocked softly. No answer came, I checked the doorknob and it was unlocked. Opening it slightly, I saw a flash of naked boob before she was rolled behind him. \"WHAT!\" \n\n\"Sorry, Steven. The detectives need to talk to Meghan.\" \n\n\"Tell them we'll be down soon,\" he said. \n\nI closed the door, the room smelled of sex and sweat. I closed the door, smiling to myself as I walked down to the spare room Gabriel was staying in. I opened the door, not expecting two sets of eyes to be looking at me when I entered. \"Hello Mackenzie, Natalie. How is he doing?\" \n\n\"He hasn't moved, his vitals have been stable,\" Zee said. \"Did Doc say when he was going to wake up?\" \n\n\"This afternoon, last I heard. Guys like him don't like to sit still and rest, so she forces the issue a bit.\" I walked over, checking everything. The girls were working on their computers, she hid the screen when I came closer. \"I'm sorry this all happened last night. I wanted to thank you for the warning, if you hadn't reacted Eve might be dead now.\" \n\n\"I just reacted with my training,\" I said. \"If this big lug here hadn't followed me, I might be dead. I at least need to thank him before I leave.\" \n\n\"At least,\" Lee said with a snicker. \"I don't want to leave until you're better. Between the food and the company, I kind of like it here.\" \n\n\"How is Michael doing,\" I asked. \n\nLee blushed. \"He's very... attentive. I don't know, it's like something is there, we barely know each other but...\" \n\n\"You feel a connection to him,\" I finished. \n\n\"Yes. Zee does too, I can tell, she's just not sure if she can let her walls down long enough to let the man in.\" \n\n\"Well, Doc should be in soon. Word of warning, detectives are downstairs, they will probably want to talk to both of you and Gabriel when he wakes up. Lunch starts at noon and goes until one.\" \n\n\"Thanks, Dagger,\" Lee said. I walked back out, grinning to myself. All the time I'd known Gabriel and Michael, they'd never given a woman a second look. All of the sudden, love was in the air. I went downstairs, eager to find my Shadow. After talking with her parents last week, I had to find a way to top Steven and his cliff jumping stunt or I'd never hear the end of it. \n\nCh. 85 \n\nMackenzie's POV \n\nAs soon as the door closed, Natalie started to giggle. \"You're SO falling for Gabriel,\" she teased. \n\n\"Am not!\" \n\n\"You are! You should see your eyes when you look at him. It's like when the steak gets delivered to your table.\" I looked at her, trying to disagree but unable to. \"Not that I can blame you. I mean, just look at him. You could do laundry on those abs, and I bet those big arms would feel good around you.\" \n\nI looked over at him, they had moved pillows to keep his chest slightly elevated. His shoulder and chest were still bandaged, but the sheet had dropped to his waist. The broad expanse of his chest and arms was there. \"He's not bad, especially for his age.\" \n\n\"Yeah, you aren't either. Did you sneak a peek? Is he... proportional?\" \n\nMy jaw dropped, and my face reddened at what she was implying. \"I'd never... I mean... fuck Lee, you aren't playing fair here. You've got that hot guy Michael damn near reeled in, and at least you two kissed already.\" \n\n\"We did, and it was amazing. We've been texting, he's going to take me home to change, then we're going to lunch. Is it all right if I ride your motorcycle home?\" \n\n\"I'd prefer that, one of the prospects volunteered but you know how I feel about people touching my stuff.\" \n\n\"I'll pack you an overnight bag.\" There was a knock on the door, and Doctor Meghan came in. She was looking flushed and was walking slowly as she came over, setting down her black bag. \"Doc, you don't look good, are you all right?\" \n\nShe blushed. \"I'm more than all right, Lee. I'm a married woman and my man is insatiable and talented. I never knew it could be this good, but my body is protesting right now.\" \n\n\"He banged you good and proper, huh?\" I laughed a little. \"I wonder if his friends are as talented, they all have the bodies for it.\" \n\nShe didn't say anything, she was busy checking Gabriel's vitals and she changed out his IV bag and emptied his catheter bag. I couldn't help it, even though Zee had her head buried in her iPad, I had to know. \"More than proportional,\" I whispered to her. \n\n\"I can't speak for his talent, but Zee won't be lacking if she gives him a chance,\" Meghan said. \"Those two men are falling hard for you, it's obvious to everyone. They are good men, I've known them a long time. Men of honor and integrity, please give them a chance. They deserve a shot at happiness.\" \n\n\"Why? What happened to them?\" Zee looked up, curious. \n\n\"It's not my place to say,\" Doc said. \"Now, he should wake up a few hours after lunch, I'll be back then to check on him. Let's see how you are doing.\" She came over and peeled back the bandage, inspecting it closely. Opening her bag, she used cotton balls and alcohol to clean the skin around the wound. I grit my teeth a little at the sting. \"It's looking good, no sign of infection yet. No strenuous activities, I'll check it again tomorrow.\" She put a new bandage on and taped it down. \n\n\"Should I see my doctor about this,\" I asked. \"And am I being billed?\" \n\n\"I'd never even consider billing someone who was injured protecting a Club member,\" she said. \"We do things a little different, this Clinic and my services are free to all members. For your doctor, I will give you copies of your treatment records, so you can follow up with your doctor if you wish. If you wish, I can do the follow-up and stitch removal as well.\" She packed up her bag again. \"I hope you two stick around, I think you'd be happy here.\" With that, she walked out and closed the door again. \n\n\"Weirdest Club I've ever heard of,\" I said. \"Staff Doctor, chefs in the kitchen, free food, guest rooms and apartments.\" \n\n\"It's a good weird,\" Lee said softly. \"I hope she's right. I feel like Michael might be the one for me. I've never felt like that before.\" Someone knocked on the door and Lee got up to open it. It was Michael, he leaned down to kiss her and soon they were in a passionate embrace. \"I missed you,\" she told him. \n\n\"I'm sorry, a lot of stuff is going on, but I'm ready to make it up to you. Ready to go?\" \n\n\"Yep.\" She grabbed my motorcycle key and gave me a quick hug. \"We might be a while, don't wait up,\" I whispered. \n\n\"Use protection,\" I said softly into her ear. \n\nMichael's POV \n\nI was tired and so much had gone on in the last twelve hours, but I couldn't stay away from her. Natalie entranced me, I would get lost in her eyes, and kissing her lips took me to a whole new place. When Tony mentioned they needed to get stuff from their place, I pulled rank and volunteered to take her instead. Her greeting when I opened the door told me all I needed to know; she felt it too. I was hard as a rock, but we needed to roll, before her sister got a live show. I stared at her ass as she bent over to hug her sister, like everything else about her it was perfect. \n\nI took her hand as we walked down the hall and downstairs. I had brought one of the cars over from our apartment building, thankful that the cops had finally taken down the crime scene tape. Lunch was just about to serve, it smelled good. Mia was making her lasagna, but I didn't want to share Natalie with anyone right now. \n\nShe gave me her address in case I lost her, then she pulled Mackenzie's Harley out in front of me and I followed her to the freeway. They lived across town, in an executive condominium development in Edina. I parked in front of the garage as she pulled in, backing the motorcycle up next to a silver Lexus SUV. I walked into the garage as she got off the motorcycle, hitting the button to close it. As soon as it was low enough for us not to be seen, Natalie jumped into my arms. I kissed her hard as her hips ground into my groin, feeling my excitement through our clothes. I started to walk us towards the door, breaking the kiss as I opened it. \"Bedroom?\" \n\n\"Two doors down on the right,\" she said. I kept one hand under her ass as she pulled her T-shirt off. Her breasts were as perfect as the rest of her, straining to get out of the confines of their lacy prison. I opened the door to the girliest room I had ever seen, all pink and white, lace, a four-poster canopy bed with all kinds of pillows. I set her down on the edge of the bed, stepping back to pull off my shirt as she took off her bra. \"Wow,\" I whispered. ",
        "She reached out and undid my belt and jeans, pushing them down and off. My manhood sprang free, causing her to move back a little in surprise. \"Wow,\" she said as she wrapped her hand around it. Leaning forward, her tongue reached out, flicking the tip and licking the drop of pre-cum from it. She moaned happily, smirking up at me before her hand grabbed my balls and pulled me forward. She opened her mouth, welcoming my length in. She could only take a few inches at first, but I saw her determination and the next time down I went into her throat. \n\n\"Oh my,\" I said as my hands threaded through the hair on each side of her face. She smiled around me, doubling her efforts as I fought to hold it off. When she took me to the base, I lost that battle. \"Nata-LEE!\" I screamed as I began to cum hard, pumping deep into her throat as she took it with a smile. \n\nShe finally backed off, a loud POP as she came off the sensitive head. \"That should give you some staying power,\" she said with a smile. She scooted back on the bed, lifting her hips and pushing her shorts and panties off. \n\nI stepped out of my jeans, kneeling at the edge of her bed. \"My turn,\" I said with a smile. I pulled her legs over my shoulders, using my hands to lift her up to me like I was drinking a fine wine. I loved her smell, her body, everything about her, and I didn't just bring her pleasure. I worshipped her like the Goddess she was. \n\nTwo hours later, I took off the third condom of the afternoon as she lay exhausted on the bed below me. \"Michael?\" \n\n\"Yes love?\" \n\n\"If I even see you look at another woman I'll cut your nuts off. You're MINE, I'm not letting you go.\" \n\n\"As you wish,\" I said. \"As long as you live I will never want another. You are MINE, Natalie, and I'm not letting you go.\" She smiled and lay back, closing her eyes. I went into her bathroom, starting to fill the big whirlpool tub. She wasn't moving, so I went to the kitchen and found some bottled water, cheese, grapes and summer sausage. Putting together a plate with some crackers from the cupboard, I set the stuff on a shelf by the bath and went back to get her. I kissed her, she moaned softly and kissed me back. \"Come on, bath is ready,\" I said. \n\nI set her in the tub and got in behind her, both of us sinking down into the warm water. She relaxed back into me, and I fed her as we talked. I found out how brilliant she was with a computer, how she and her sister worked together to protect people and recover kidnapping victims. I told her a little about my time in the Club, my love for motorcycles, and my hopes for a family. When the food was done, I gently washed her then she turned and cleaned me, paying particular attention to her favorite parts. When we were changed, she pulled me down for a kiss. \"We should be getting back, Gabriel is waking soon and I need to be there for my sister,\" she said. \n\n\"Gabriel will never hurt her, she is safe,\" I said. \n\n\"I'm not worried about her getting hurt, she's the toughest person I know. It's Gabriel I'm worried about. If he pushes too hard she'll bolt. She doesn't trust him yet.\" We closed up the house and got into my car, headed back for the clubhouse. \n\nShe held my hand the whole time, making my wolf and I content she was with us. \n\nGabriel's POV \n\nI moved up through the quiet and the darkness, fighting for the light. As I rose, my senses started to work again. I could hear breathing in the room, two people, and my nose detected her presence. I relaxed, she was alive. That was all I wanted to know. \n\nI opened my eyes, closing them again as it was too bright. \"Sorry.\" I heard Doc go over, closing the blinds. She came back and I was able to open them and keep them open, my eyes searching for her. \n\n\"Gabriel,\" her voice said softly. I turned, feeling her hand grasping mine, and blinked a few times until I could make her out clearly. She had a bandage on her neck, and I could smell her blood faintly. \n\n\"Ma... Mack...\" My throat felt raw. Doc put a cup of water with a straw down, and I took a few sips, it felt amazing. \"Mackenzie, you're all right.\" \n\n\"You are too,\" she said, relief evident in her face. I squeezed her hand, tears forming. \"Eve? What happened to Eve?\" \n\n\"She's fine, thanks to the two of you,\" Meghan said. \n\n\"Where?\" \n\n\"She's been taken up north. We faked her death, outside the Club you need to refer to her in the past tense. Her funeral will be in a few days,\" she said. She took a few minutes examining me, I barely noticed because I was busy looking at Mackenzie's face. \n\nWhen Doc walked out, I pulled her down to sit with me on the bed, the ludicrous number of pillows behind me. \"How?\" \n\n\"A man tried to kill Eve, I saw the laser just before he fired. Remember how I made fun of your 1911?\" \n\nI laughed, it hurt and I grimaced. \"Yes, you like your Tupperware Glocks.\" \n\n\"Well, yours saved your life.\" She opened up the drawer in the bedside table, pulling out the shoulder holster and my pistol. The trigger guard was dented and scratched. \"Doc cut your shoulder straps off to pull the bullet fragments out, but the shot deflected off the leather and the steel. She said the largest fragment went through your chest, grazed my neck, then stopped in Eve's shoulder. The smaller fragments she pulled out of you.\" She set it back down. \"You scared the hell out of me, Gabriel.\" \n\n\"I couldn't bear it if either of you were hurt, Eve because of who she is to the Club, and you for what you are to me,\" I said. \"I reacted, just like you.\" \n\n\"I'm going to be fine. You, on the other hand, have some explaining to do.\" I lifted my eyebrow. \"Your name is Gabriel Johnson, but you don't exist.\" \n\n\"I'm right here.\" \n\n\"Your identity is fake; there is no record of you more than twenty years ago. Your birth certificate belongs to a child who died at age two. Your friend, Michael, same thing. A first look at your identities and everything is fine, but drill down a little and it collapses like a house of cards. Then there is this place; you call it a motorcycle club, but few people have jobs. No social media, no income streams. My gut wants to believe there's nothing here, but my head is screaming out that this is a criminal enterprise, and you're right in the middle of it. I'm beginning to wonder why some businessman from North Carolina, a Dennis Thurber, would try to kill a newlywed in front of this gang and every other one in the Cities. It looks like a revenge hit, and I don't get in the middle of criminal feuds.\" \n\nI closed my eyes, leaning back. \"It's nothing like that,\" I said. \n\n\"Then explain to me who these former werewolves are. Is it another gang? A codename? Were you guys government agents? Talk to me, Gabriel, because if you don't come clean I'll walk out of here and never see you again.\" \n\n\"Don't. Please, don't leave me.\" I squeezed her hand and looked in her eyes. \"I'd rather you take my pistol and kill me now than leave me to live my life without you.\" \n\nShe pulled her hand out and stood up, turning her back on me. \"How can you say that, we barely know each other. What's worse, I'm feeling almost ill just at the thought of doing that. What have you done to me?\" \n\n\"Sit, please. I'll tell you everything if you will just sit with me and listen.\" \n\nJust then, there was a knock on the door and Mackenzie got up to open it. Michael came in, holding hands with Natalie. I took a sniff, they'd already moved their relationship forward. Lee was flushed, walking a little tentatively and was sporting a big grin. \"You're awake,\" she said as she came over. \"Welcome back.\" \n\n\"Thank you, Natalie. I trust Michael is treating you well?\" \n\n\"VERY well, thank you.\" She blushed and leaned back into him. \n\n\"You needy little slut, you had a nooner?\" Mackenzie rolled her eyes as Natalie nodded her head, grinning widely, and held up four fingers. \"Jesus, everyone is getting action except me.\" \n\n\"So, are you guys, uh, 'talking?'\" Lee wiggled her eyebrows as Zee looked away. \n\n\"I was just telling him he better come clean, about his name, his background and these former werewolves, or I'm going to leave and never come back,\" she said as she sat back on her chair. \"He promised he would tell me, so sit down and let's hear it.\" \n\nNatalie looked up at Michael, who looked over at me for guidance. \"Sit down, love,\" he said to her. \"So we show them?\" \n\n\"We have to, I can't lose her.\" \n\nHe started to pull off his clothes, and Mackenzie turned away in shock. \"Mackenzie, please, just watch. You have to see this and accept it before we can explain the rest.\" \n\n\"How is him getting naked doing anything to explain this?\" \n\n\"Just watch, please.\" Michael stood facing Natalie, who had already seen everything, and stripped naked. A moment later, he was gone. and a huge black wolf was in his place. \n\nCh. 86 \n\nMackenzie's POV \n\n\"The FUCK?\" I drew my Glock, getting up our of the chair and moving to the wall. In front of me was the biggest, scariest looking wolf I'd ever seen. I held the pistol out, aiming at his head, my arms shaking. \n\n\"Mackenzie, relax, that is Michael.\" I heard Gabriel's words but my mind wasn't processing right now. The big wolf sat down, tilting its head at me as its huge pink tongue hung out the side of his mouth. His teeth were huge and white, dangerous looking. \n\n\"Michael?\" The big wolf head turned to look at my sister, who was moving off her chair towards him. \n\n\"Lee, stay back!\" I watched the wolf lie down and roll over nest to the bed, his head reaching towards her as she knelt down. \n\n\"He's so soft,\" she said as she ran her fingers through his fur. His tail started to whap on the ground as she scratched his chest behind his front leg. \"You're a werewolf! How cool!\" \n\n\"Werewolves don't exist,\" I said as I lowered my pistol. \n\n\"You saw him change, Mackenzie. No one came in, no special effects. He's a werewolf, so am I. That's why I'm here instead of a hospital, why I had surgery yesterday, but I'll be fine in a few days. We're not humans, we're more.\" \n\nI sat back in my chair, trying to process it all. I was a logical thinker, a detective. I prided myself on being able to follow facts, not speculation or fiction. Yet, here I was, looking at a wolf that had to go two hundred pounds and stood five feet tall. The animal was licking my sister as she scratched him. Gabriel was right, there was no other explanation other than werewolves existing. \"How?\" \n\n\"We are born this way. Don't worry, we won't turn you into a monster or anything. In fact, our DNA is not compatible with yours. We can't get humans pregnant, and we don't use human hospitals. The reason I don't exist in the system is that up until about twenty years ago, I lived in an isolated Pack in the Rockies that didn't interface with humans.\" \n\nMichael licked Lee's face, making her giggle, then he moved back and shifted to his human body again. I looked away as he pulled his clothes back on. \"I figured it would be better if we all could talk,\" he said. \"We can't hide the truth from you, not if it would mean you leaving my friend. Werewolves are different in their relationships than human, we mate for life, and we find our mates then fall in love,\" he said. \n\n\"Wait, so you could find a werewolf skank and leave me?\" \n\nMichael picked her up, sitting in her chair and moving her to his lap. \"No, my wolf and I both know you are the one for me. I don't know how or why, but Luna, the Moon Goddess who rules our species, has formed something close to a mating pull between me and you. It's something that has never happened before with a human female.\" \n\n\"A few days ago, a lot of things changed in our world,\" Gabriel said. \"Luna cursed our species, all of the females died in childbirth or committed suicide. Over twenty years ago, I had a vision where Luna appeared to me, telling me of the coming birth of the Promised One, the Last Shewolf. I formed the Knights of the Moon with others you pledged with me to protect the mother, then the last eighteen years we've been protecting her. Eve was the Last Shewolf. When she mated Adam, it broke the curse, and now we're seeing things we've never seen before.\" \n\nI looked over at Michael, he didn't say Gabriel was crazy. \"You know how wolves have Packs, well, up until she mated Adam so did we. That's gone now; no Packs, no Alphas, no nothing. We joined the Riders because we have been friends and allies for a long time, and they are family to us. I think Luna is doing something new here; even Steven found his mate in a human female.\" \n\n\"Wait, Steven is a wolf too?\" \n\n\"Yes,\" Gabriel said, \"There are about eighteen of us around here now, and six went up to the North Shore with Adam to protect Eve. The Northwoods Riders are all human.\" \n\n\"And they know about you? All of you?\" My mind was reeling, how could a Club with this many people keep a secret for so long? \n\n\"Yes, like I said, we have been friends and allies. Eve's mother died and her father was killed; Snake and Vivian, the previous Doctor here, they adopted Eve. After Vivian was killed when Eve was just a baby, Snake raised her, with Viper and now Kelly as grandparents. The Club protected her just as much as my Pack did. We had to, she was in great danger if another werewolf discovered her.\" \n\n\"Why? Why her?\" \n\n\"Because the strongest instinct of a wolf is to bring forth the next generation, and she was the only one left who could do it,\" Michael said. \"I don't know exactly why Dennis Thurber tried to kill her. Maybe when his Pack bond was lost, when his power evaporated, he blamed her or thought killing her would bring it back. In any case, for some reason, Luna took away all the wolves from everyone except those of us here and Adam. They can't shift into wolf form, they don't have our hearing, our strength, our smell, our healing ability anymore. I'd be pissed too.\" \n\nI didn't say anything for a minute, it was all too much. \"I need space to think,\" I said as I got up. \n\n\"I'll go with you,\" Lee said as she got off his lap. \n\n\"Mackenzie? Take the time you need, but if you have questions, ask. We'll let the Club know you are aware of us. You can ask anything you want of any of them. Just don't hold what I am against me. I've never been any different, I'm still the same man who protected this Club and Eve, I'm still the same man who fell in love with you the moment our eyes met.\" \n\nI looked at him, reaching my hand out to touch his. \"I won't leave without telling you,\" I promised. We walked out the door, closing it behind me I leaned back against the wall. \"I need a drink.\" \n\nMeghan's POV \n\nAfter I left Gabriel, I went down and turned over my reports to the detectives. I was exhausted, so I headed to my room and took a short nap. Steven was busy, still making arrangement with his guys to protect Eve up north. He woke me in time to check Gabriel again, this time he was alone in his room. \n\nDinner was a Chicken Parmesan with mixed vegetables. I sure hope Mia stays around, because the food that she sent out of the kitchen was incredible. I told her as much when she came out with Snake to eat. \n\n\"Thank you,\" she smiled. \"It was my grandmother's recipe, I grew up on it.\" I took another bite, the flavors dancing on my tongue. They had also baked fresh Italian bread with garlic butter, and a light salad. I smiled as I ate it, and I watched the two of them together. They were perfect for each other, and already looked so much in love. \n\n\"So, what do you two have planned for tonight,\" I asked. \n\n\"Not much. Between the cops, the Club and the drama, when cleanup is done I might go to bed.\" \n\n\"I wish I could let you do that,\" I said. \"Steven and I need to meet with the leadership privately, it's very important. I need you and Mia, Mom and Dad, Dagger, Viper and Kelly, Gabriel and Mackenzie, Michael and Natalie. Oh, and we need to bring Adam and Eve, plus Alan and Alice in on Skype. We'll set that up as soon as we set a time.\" \n\n\"Mia, Mackenzie and Natalie aren't members, not yet, and Alan and Alice are not even under consideration.\" Snake was going over the list, trying to figure out why those people were being invited. \"And we'll have to do it in Gabriel's room unless you're ready to move him.\" \n\n\"No, that's where we need to have the meeting,\" I said. \"Eight o'clock sound good?\" \n\n\"I'll set it up,\" Snake said. \n\n\"Thanks for dinner, it was wonderful,\" I said. \"Hey, have you seen Mackenzie and Natalie?\" \n\n\"Natalie took a couple plates, I think they are outside,\" Snake said. \"Gabriel and Michael told them what they were, it's a lot to take in. I know it was for me, if she wasn't hurt and I wasn't focused on saving Vivian, I might have walked away for a while too.\" \n\n\"I'm going to talk to them,\" I said. I grabbed three beers and walked outside, looking around in the heat and humidity. They had picked a picnic table near the fence, in the shade of a maple tree. \"Can I join you for a moment?\" \n\n\"Since you brought beer, sure,\" Lee said with a laugh. \n\n\"Only one, you can't drink more than that on your painkillers,\" I told Zee as I handed her the Summer Shandy. \n\n\"I stopped taking them, I've had worse pain before,\" she said. We sat for a moment, just sipping the cold beer and looking out at the sky. \"So I am falling in love with a werewolf?\" \n\nI snickered. \"You say that like it's a bad thing, they have bodies like Adonis and know how to use them,\" I said as I elbowed Lee. \n\n\"Not to mention incredible passion and sexual endurance,\" Natalie giggled. \"My God, that man can fuck me stupid any day of the week and twice on Sundays.\" \n\nI had to laugh, and I gave Natalie a quick hug. \"I know, my poor lady bits are begging for a day off, but all I can think about is making love to him again. And oh my GOD, that knot? Holy shit. He puts the 'O' in 'Oh My God.'\" \n\n\"Knot?\" Mackenzie looked at me in horror. \n\n\"You'll find out soon enough. It hurt like hell going in, but I couldn't stop cumming once it was seated. Like I said, that man has skills in the sack.\" I described to them some of the physical things that were different with the werewolves, and why I was perfectly fine being the wife of one. I finished my beer, crushing the can and tossing it in the recycle bin nearby. \"I actually came out here because I need you to be a part of a meeting I'm setting up. It's important, and I need the two of you to join us in Gabriel's room at eight.\" \n\nMackenzie looked at her phone, that was forty minutes away. \"All right. I can't promise anything to anyone, especially Gabriel, but I'll listen.\" \n\n\"That and an open mind are all I ask,\" I said. \n\nForty minutes later, we were all crammed into Gabriel's room, the laptop open on the dresser. We had Adam, Eve, Alan and Alice on the other end. Eve didn't wait until the meeting started. \"Hi guys! Hey Mackenzie, I wanted to thank you for saving my life. I was told you gave the warning, that you were the one who tackled me.\" She wiped a tear from her eye as she was pulled into Adam's embrace. \n\n\"I just reacted as I was trained, Eve. I'm glad you are going to be all right.\" \n\n\"Thank you, Gabriel, once again you've saved me.\" \n\nWe talked for another minute before I called for everyone's attention. \"Guys, Steven and I have called you all here tonight because of a dream he had a few nights ago.\" \n\n\"A dream? I'm up here for a dream?\" Snake didn't look happy, he looked tired. \n\n\"I wouldn't ask you all here if it wasn't important. Maybe I should just tell you what it was.\" Steven described the dream, sitting in the chairs in the grass. Meghan telling me she was glad I bought that Powerball ticket for the Club. I told them who I saw in the chairs around me. \n\n\"Wait, I didn't know you then.\" Mackenzie had this deer in the headlights look. \n\n\"True,\" I said, \"But Steven described the two women who were sitting in Gabriel's and Michael's lap to me. He described the two of you,\" I said. ",
        "\"The real reason you are all here is what we were watching, up there at the rebuilt Pack House of the North Shore pack. We were watching our children play. Lots of children, at least fifteen girls, all about one year old, all belonging to us.\" \n\n\"I can't have children,\" Mia said. \n\n\"I'm not even sure I'm going to be with Gabriel next week,\" Mackenzie complained. \n\n\"I'm too old to have kids,\" Kelly said. \n\nI just laughed. \"I know, I couldn't figure it out either, my girls were in the circle too. Mackenzie, Natalie and I can't get pregnant by our mates, it's a physical impossibility. It wasn't until after he told me the dream that I figured out what was going on.\" \n\n\"Luna knows that having a single shewolf being mated, no matter how many babies she has, is going to take forever to reestablish the species,\" Steven said. \"What the dream told us is that there was another way. Those girls running around on the lawn? I stood up and shifted into my wolf, Michael did too. The girls all started climbing over us, one hugged my neck and called me Daddy.\" \n\n\"That's wonderful,\" Mom said. \n\n\"Then she pulled off her dress and shifted into her wolf. The other girls followed suit, they ALL shifted. Little wolf cubs, all different colors, all climbing and play fighting.\" \n\n\"Impossible,\" Gabriel said. \n\n\"No,\" I said, \"I know how to do it.\" Everyone got quiet. \"We have one female werewolf, but she has thousands of eggs in her ovaries. I checked Vivian's notes; fertility hormones for humans work the same on werewolves. She's going to go into heat soon; I use the hormones to stimulate egg production, then use a simple procedure to harvest the extras. She'll heal in a day, and her heat proceeds normally from there. The eggs, though, can be fertilized by semen from other male werewolves and implanted using In-Vitro Fertilization techniques into other women.\" \n\nA whole bunch of people started to talk at once, and I just looked around the room. Some were crying, others hopeful, a few skeptical. Finally, Eve called for quiet. \"If I do this, we can have twenty babies in a year instead of just a couple?\" \n\n\"Yes,\" Steven said. \"I think those twenty and maybe ones from the next year will grow up to find true mates among the other male werewolves, and then we will have enough to have a good growth population. In one generation, we can make a big step towards recovering our species.\" \n\n\"I'll do it,\" Kelly said. \"We've given up on babies, and I think we should talk to Sheri. She might agree too.\" Viper hugged her as she started to cry. \"I have to, we have a chance to save their kind,\" she said. \n\n\"If I do this, Michael will be the babies father?\" Natalie shifted in his lap. I nodded. \"If it's the only way I can have your baby, and it's important to you, I'll do it.\" \n\n\"Wait, how do we know this will happen,\" Mackenzie asked. \"People dream all the time, it doesn't come true.\" \n\n\"What do you think is more likely,\" I said. \"You and Gabriel getting together and having baby girls, or winning the Powerball?\" \n\nShe laughed at me. \"I don't know what the odds of staying with him are, but the Lotto is a tax on people who are bad at math. The odds are like one in two hundred and ninety-two million.\" \n\nSteven pulled out a ticket, it was in a plastic protective case. \"Pull up the winning numbers on your phone and check them.\" Mackenzie pulled up her browser, checking the Minnesota Lottery site. \"Hey, it says the Powerball was won in Minnesota,\" she said. She checked the numbers, her eyes bugging wide before she dropped her phone. \"You fucking won?\" \n\n\"The Club did. I bought the ticket with donations for the Club, and the Club collects, not me. Honestly, I never play, and we've never had a Club pool. The only reason I bought the ticket was because Meghan told me to get one, just in case the dream was real.\" He took the ticket back. \"That's the reason you others are here, to let you know the Club just won a hundred and sixty-two million dollars, cash after taxes.\" \n\nIt took a while for things to calm down after that, but Steven got control eventually. \"I think we need to keep this quiet for now. We have the funerals, we need to safeguard Eve, and we don't need a bunch of reporters and others coming around because they think we're handing out money now.\" \n\n\"You're right,\" Snake said. \"Nobody say anything about this. Steven, hire a lawyer to handle this quietly. Ideally, I'd like for the Club name to never come up in this, even if we have to wait months to see the money.\" \n\n\"How are we going to do this,\" Dagger asked. \"We've got to keep people with Eve up north out of sight, we've got this Clubhouse and the old Knights building, and a bunch of us are talking about moving south.\" \n\n\"I'm thinking one Club, three Chapters. We rebuild the Pack House up north, that becomes the werewolf headquarters and a place for us to base out of during the summer. We keep the facilities here, improving them and adding on as we need. Then we build a chapter in Florida. With this money, we can have a hell of a nice Florida chapter. I want you to head up scouting a new place, maybe near Jacksonville. Work with Viper, Hammer, anyone else interested in moving south. I want the place to be big enough that the whole Club can vacation there, and remote enough the wolves can run there.\" \n\n\"I'll get right on it,\" Dagger said. \n\n\"We don't have a ton of time,\" Adam said. \"If we're going to get the Pack House going, we need to get permits and start demolishing the old structures, get designs, pour foundations. There's only a short time until construction season ends if you aren't weather tight.\" \n\n\"Then start now,\" Gabriel said. \"We have funds the Knights held, they are now Club funds. Use them to get what you need and put a rush on it. I'd love it if we could move people in next spring. In the meantime, buy that land and house we were talking about, so you have a base of operations. We can send more guys up, some of us have experience in construction trades.\" \n\nThe meeting went on for another half hour until we had hashed out what we needed to do. \"I'm going to have babies,\" Kelly said. \"It's really going to happen.\" \n\nI went to her and hugged her tight. \"We're all going to have babies, Kelly. Beautiful babies who play together on the lawn in their wolf forms.\" The hug was soon joined by the other women. \n\nThings were going to be all right. \n\nCh. 86 \n\nSnake's POV \n\nThis President thing was really interfering with my love life. \n\nLast night had been a shock, Mia and I had returned to our room and talked well into the night. In one way, the dream confirmed all the choices and feelings I had made. She was meant to be mine, and I was good with that. She was happy as well, over the moon at the idea she'd be able to have children with me. That had been the one thing she was hoping would not be a dealbreaker in our relationship. \n\nWe set Eve's funeral service for Wednesday night, as Thursday afternoon was now set for Donuts. The two services couldn't be more different; Eve's was a simple memorial service, we had purchased an urn and Kelly had a large photo printed of her framed to put behind it. It was going to be a biker sendoff, fitting for a daughter who grew up in the Club and was a full member. We would return to the Clubhouse after it was over for a wake. Donut's will directed a law enforcement funeral, but he had specific instructions for how he wanted the Club involved. He was going to be in full dress uniform, but was to be holding his cut in his right hand in the casket. We'd already been told it would be a closed casket, the head injuries were too much to repair. The Club was also going to be interspersed with the police, in between the Ramsey County cars and those from all other law enforcement agencies. \n\nThe third funeral Dagger was handling. We'd gotten a call from the Coroner up north, asking about funeral arrangements for Mitchell. I found out a lot about the man who had both protected and threatened my daughter. Meghan had talked to both the medical examiner and his oncologist at Bethesda Naval Hospital. It turned out he hadn't been discharged at all, he had packed up and left the day after a brain scan showed his cancer had metastasized. It was inoperable, and he was given six months to live.  \n\nIt was all to medical-talk for me, but Meghan said he had a tumor growing in his brain in the area that controlled judgement and strong feelings. His autopsy results showed he had been taking large doses of painkillers to deal with the pain. \"He probably ignored it all and came here to continue with his life,\" she told me. \"Death was caused by the tumor damaging an artery, he bled out into his brain in seconds. There was nothing I or anyone else could have done.\" \n\n\"And his behavior?\" \n\n\"At some point, thinking about Eve made the pain go away and that fed his fantasy. He didn't want to hurt her, to him she was an angel, the only thing that made things tolerable.\" I sat down, thinking back to how we had treated him, and how he had behaved. \"He was a good man once, he deserves to be remembered that way.\" \n\nWe worked with the staff at the Fort Snelling Cemetery, and using Mitchell's computer and phone contacts we sent the information to as many of his fellow Marines as we could find. The local Marine Corps Reserve and VFW also spread the word. Two days later, we were standing graveside as an Honor Guard of Marines fired their salute. He was a highly decorated Marine, well respected, and it showed in the turnout and the eulogies. \n\nI drove Mia back to the Clubhouse to change for Eve's service. The Club did a good job keeping up the act, since we all knew Eve was really safe and sound up north. She hadn't attended school and didn't have friends outside the Club, so the church was packed with Club members and friends from other area Clubs. All too soon, I was standing there next to her portrait. \"My Eve was the jewel of my life, the daughter who made me proud of everything she did. There isn't a person in this room her life didn't touch, a person who wasn't better because she came into this world.\" I stopped to wipe a tear away. \"I can't believe she's gone, I go to breakfast every morning expecting her to give me a kiss and tell me she loves me...\" I stepped back, I couldn't do any more, I fell to my knees as Mia raced forward to comfort me. Dagger led me back to my seat, and I barely listened as the others talked. Just thinking about her being gone put a knife to my heart, I didn't have to fake the pain. \n\nWe were driven back to the clubhouse and the bar was opened. Toasts were made, and soon I was drunk off my ass. Viper helped me up to my room, and I was asleep before the door was closed. \n\nThe next morning, I had a splitting headache. Mia was gone, it was eight, she had probably gone to do breakfast on her own. There were a few aspirin and a bottle of water next to the bed, I took them both. Moving slowly to the bathroom, I pulled on some clothes and then went downstairs to the kitchen. The smell made my stomach lurch, but I kissed Mia anyway. \"Sorry about last night,\" I said. \n\n\"It's fine, your reaction did more to sell her death than anything else we could do,\" she said. \"I made you eggs and toast, you should go sit down. You'll need food in your belly for today.\" I took the plate, kissing her as she went back to the grill, and went back out to find a table. \n\n\"He lives,\" Dagger teased as I sat next to him. \n\n\"Barely. By the way, thanks for setting the bar even higher on this engagement shit.\" He didn't go to Mitchell's service, instead he took his girlfriend Sara on a hot-air balloon ride up past Stillwater. Of course, he proposed to her with some cheesy line about how she lifts him to the heavens or something. She was sporting a big ring and a smile this morning as she talked to the other ladies, and I could see them looking at me like I was next. After Steven's leap of faith, pressure was building on me to do something over the top for Mia. \n\nOne of the prospects put down a large glass of orange juice for me, I nodded my thanks. \"We all set for today?\" \n\n\"We are,\" he said. I was going to deliver the eulogy for the Club, while Dagger as VP was in charge of the riders. Since Donuts was prior military, we'd contacted the Patriot Guard Riders as well as the other clubs in the Metro area. The funeral procession was going to be incredibly long just because of the law enforcement part, and we didn't need a thousand bikes adding to it. \n\n\"I made the arrangements yesterday,\" he said. \"Between the Guard and the other Clubs, we have it set so a motorcycle is parked every hundred feet along the entire route. We've set it up so each rider has an American flag, and will be standing with their hand over their heart as he passes.\" This was a great way to get involved, even with his big church as the service site, there just wasn't room for everyone. \n\nI choked down the toast and butter, hoping my stomach would quit rebelling soon. \"The VFW and Marines are in it as well. His old Company Commander is going to speak at the funeral, and his unit members have been given priority seating at the service. He will be well represented.\" I was still a little pissed about one thing, he had written into his will that the Club President had to ride in the SUV immediately behind the hearse with his family. There wasn't much left, a younger sister and a cousin. It didn't matter that he wrote it for Viper, it meant I had to ride in a cage for the day. \n\nSteven and Meghan sat down, both with full plates. \"Ready for today,\" Doc asked. \n\n\"As soon as I lose the headache,\" I said. \"Are we ready for the weekend?\" \n\n\"Yep, arrangements all made. The wolves will stay at our new house or in wolf form, and we've got enough hotel rooms for the humans.\" We decided that we needed to get out of town and have a Club meeting, and the only way to get everyone together was to go up north. We told everyone the Club was taking a private ride up north this weekend to spread Eve's ashes. No one would interfere with that. \n\nThe funeral for Deputy Nathaniel Donaldson was huge. Dignitaries including the Governor, the National Guard Commanding General, and others. At least five hundred police and sheriff cruisers, hundreds of motorcycles, and untold private citizens lined the route from the church to the National Cemetary. I was holding his sister's hand as Mia tucked into my side, watching with pride as we drove down the route. He was buried with full military honors, a combined Law Enforcement and Military honor guard performing the salutes. His sister received the American flag, along with his estate. \n\nI couldn't open the kitchen for dinner, so instead we had booked a room at the Machine Shed in Lake Elmo. It worked well because they had large portions that the big guys and werewolves liked, and it was good food. We ate and drank into the night, finally knocking off around nine because we had to get up early. \n\nI wanted to beat the heat and traffic to get up north, so we were leaving at six in the morning. I pulled Mia into my arms as we went to bed, holding her tight as the emotions of the week caught up to me. She made love to me, then we fell asleep until the alarm went off again. \n\nDagger's POV \n\nI got to ride up front this time, this was the first official club ride since the new elections. Snake was to my right, Mia tucked in with her arms around him, while Shadow had decided to leave her Harley and ride with me. Everyone was gassed and ready, we were going to ride a few hours to get out of the City and stop once before and once after Duluth. \n\nI'd talked to the guys up there, the new house had been closed on yesterday thanks to a cash offer, and they were already moving in. It was a nice place, on four hundred acres of rolling forest, with a six-bedroom four-bath rambler and a full basement. It would be tight for a while, but they had already made a run to purchase enough beds for everyone. The pole barn would be turned into a gym, and it was a fairly short run to Alan's house. \n\nI looked back in the mirror as we merged onto I-35E, loving the feeling of riding in formation like this. There were a half-dozen cars and SUV's trailing us, carrying some of the wives and children who didn't want to ride. Weather was good, in the sixties but humid. We made good time on the drive, pulling into the new property just before noon. The guys had the big grills fired up already, and soon we were eating steaks on the dozens of picnic tables they had purchased and set up. Alan and Alice had joined us, since we were planning on asking them to join the Club. \n\nWe ate and enjoyed the North Shore afternoon, putting a good dent in the tub of beers that were floating in ice. Everything was perfect, so I took Shadow's hand and nodded to my accomplice. He moved over to the stairs going up to the back deck of the house, and we followed him, stopping at the bottom. \n\n\"IF I CAN HAVE YOUR ATTENTION,\" Crash said as he clinked three beer bottles together, The Warriors style. He waited until everyone quieted down, as soon as they saw him up there with us they figured it out. \"People, what we have here, is a failure to learn from the mistakes of others. How many more times are you going to force me up here to join people together in holy matrimony, knowing full well that they have been sinning with each other every night for the past year?\" \n\n\"Sometimes a few times a night,\" I said. \n\n\"And don't forget mornings and nooners,\" Shadow added with a laugh. \n\n\"And so, for my usual fee of a bottle of Irish Whiskey, I once again stand before you with a new set of victims.\" \n\n\"I can't wait until we find YOU a woman, Crash,\" Kelly teased. \n\n\"Ain't gonna happen, woman. Now, where were we. Oh yeah. If anyone other than me has any reason why these two kids should not bind themselves in a lifetime contract where they end up arguing over why clothes don't make it to the hamper or the toilet seat is up again, speak now or you're just as guilty as me.\" \n\n\"Jesus, Crash, I gotta take a whiz here, hurry it up,\" Tiny said. \n\n\"Fine. Do you, Dagger, take this fine-looking woman here as your Old Lady? To treat her right, keep her happy and fill her with little paring knives? To love, honor and bang her, and only her, as long as your skinny ass lives?\" \n\n\"Hell yeah,\" he said. \n\n\"And do you, Shadow, who can probably do far better than him if you'd play the field, do you take this guy as your Old Man? To ride him like a Harley, keep him fed and dressed, and let him rebuild his engine in your living room? To love, honor and bang only him even though he's boring and can't get it up after drinking?\" \n\nShe just laughed. \"I'll take him,\" she said. \n\n\"Then by the power vested in me by the State of Minnesota and the fourth renewal of my sketchy clergy license, I now pronounce you husband and wife. Now you may what?\" \n\n\"MOLEST THE BRIDE!\" The club yelled it out, then rushed forward to congratulate us. Instead of showering us with rice, they sprayed Leinenkugel's on us as we hugged our family. \n\nTen minutes later, I moved my hands up her leg, pulling off the garter she'd put on under her shorts before the service. Smiling, she took it over and put if over Snake's hand and beer as he was talking with Viper. \"Don't fuck this up, Mr. President. If you like it, put a ring on it.\" She kissed his cheek and walked away as the other ladies cheered. \n\n\"Can I have my meeting now?\" Snake tried to take the garter off, only for Mia to grab his hand as we all laughed. \n\nCh. 87 \n\nEve's POV \n\nI went from table to table, greeting and thanking the Club members who were up here for this get-together. It wasn't until this last week I had truly recognized the dangers I was in, and the sacrifices all these people had made to keep me safe. I could never repay that, and I would never overlook it. ",
        "It was fun seeing the couples together, sharing the kind of love I had with Adam that seemed to have appeared instantly. Humans weren't like us; the bond with Adam had been instant, a hard pull turning into an all-consuming kind of love. I laughed at the old me, hoping I wouldn't find my mate, that I wouldn't get hauled off somewhere to live with him and his Pack. I'd follow Adam anywhere, I loved him that much. \n\n\"You guys look cozy,\" I said as I sat at a table with Steven, Meghan, Michael, Natalie, Gabriel and an uncomfortable Mackenzie. \n\n\"I'm with my new friends and my man,\" Natalie said. \"I feel like I'm at home here, like we belong together forever.\" Michael pulled her into his lap, kissing her deeply as Zee looked away. \n\n\"My God, Lee, you've known him less than a week! Even for you, that's a little fast.\" She shifted away from Gabriel, who looked a little hurt at the space. It didn't last, it was like there were magnets that kept pulling them together, and he was touching her leg again. \n\n\"It's different for werewolves, I'm sure they explained that,\" I said. \"If they choose you, they choose for life. There's no reason to delay the inevitable. We don't date, we don't have long engagements, we find and claim.\" \n\nZee looked at Gabriel. \"You haven't even kissed me yet.\" \n\n\"It's not because I want to, Mackenzie. I do, with every fiber of my being I want your kiss and more.\" He reached his hand up and cupped her cheek. \"You aren't ready for me yet. Something has hurt you, made you not trust your heart. My wolf is in pain at the thought, but he is cunning. He will stalk you, learn your patterns, and wait for the right opportunity to make you his, willingly and completely.\" \n\nHe dropped his hand and went back to eating his food, smirking a little bit as she reached her hand for her cheek. Her mind may not want him, but she was already falling for him, and missed the contact. Lee noticed and smirked. \"All you're doing is denying yourself amazingly deep love and hot sex,\" she said. She turned to Michael. \"Are you ever going to ask me to marry you, or are you waiting for an engraved invitation?\" \n\nWe all cracked up at that, and Michael was blushing. \"I can make you mine as soon as soon as you wish, but it does involve some of that hot sex,\" he said. \"I need to explain the process so you aren't scared of it.\" \n\n\"You fuck, he bites your neck, you bite his neck, BOOM! Mated for life,\" I laughed. \"At least as much as a werewolf and a human can be. It's not going to be the same as my bond, but Meghan?\" \n\n\"There's something there, Natalie. He can sense my emotions, I can feel him in the back of my mind, like when you know someone is with you without seeing them, you just feel his presence.\" She kissed him and snuggled down into his lap. \"And she's not lying about the hot sex, either.\" \n\n\"I'm not rushing into a marriage with a guy I barely know,\" Zee said. Gabriel was holding back his anger, he got up and walked off to get another beer. She watched him leave. \"I hurt him, didn't I.\" She looked down at her hands. \"I'm not ready to make babies with him.\" \n\n\"But you're not taking off screaming, even after you watched a man change into a huge wolf and back,\" Michael said. \"Has Gabriel told you the story of his mate?\" \n\n\"No, he said she died a long time ago.\" \n\n\"She did,\" I told her. \"He loved her like all mates do, it was all-consuming, and when she died he and his wolf kind of lost it. It happens sometimes, they can't handle the loss of the bond, they wander into the wilderness and never come back.\" She looked at me, wide-eyed. \"Gabriel might have gone that way if he hadn't been given a vision, a vision of Luna telling him I was coming, and how important it was that I survive. For two dozen years, that man has not dated, not kissed a woman, he hasn't even considered letting someone back into his broken heart. When his vow ended, something shifted, and Luna has granted him a chance at love. Love with you, Mackenzie. Don't toss away the greatest gift you'll ever get.\" I got up and walked off, leaving her to her thoughts. \n\nAdam felt my emotions and waved me over to where he was standing with Alan and Alice. \"What's going on?\" \n\n\"It's weird, Lee has accepted Michael and they'll be mated soon, but Gabriel is having a tough time cracking her shell.\" He pulled me into his side. \"I want them to be happy, like we are, like you two are.\" \n\n\"It's not quite the same, Eve. I don't have a wolf, I gave him up long before whatever it is that Luna is doing now. We have a human love, it's strong, but not the same.\" \n\nI moved over and gave my brother-in-law a hug. Taking his head in my hands, I looked up at him with a tear in my eye. \"I wish you hadn't made that choice to give up your wolf, Alan. I want you to have your wolf again, running with us over your old Pack grounds, like it was meant to be.\" All of the sudden, my hands started to get hot. I tried to pull them off his head, but I couldn't move them. \"Something's wrong,\" I said. \n\nAlan closed his eyes, his mouth opening in a silent scream. Blood started to drip from his ears and nose. His hands went up to mine, but he couldn't pull them off. I started to feel the heat, it was burning my hands, moving up my arms. \"Adam oh Luna aaaaah...\" \n\nI was about to scream when it suddenly stopped, my hands flew away from his head and I fell backwards. Adam leaped behind me to keep me from hitting the ground. The pain was gone, I looked at my hands, turning them over, expecting them to be charred or red but there was nothing wrong. \"What happened?\" \n\nI looked up at Adam, he was staring open-mouthed at something. Nobody was moving or making a sound, then I heard bones crunching followed by a loud howl. \n\nAlan had shifted into a striking grey wolf. \n\nHe sat back, howling in joy as Alice ran over to him. He licked her face, rubbing his fur onto her as she hugged him in joy. \"You're beautiful,\" she said as she ran her hands over his fur. \"You make me all tingly.\" She let him go, and he ran over to Adam, dropping his front feed down before darting around him. \n\n\"I'm fine, you go with your brother,\" I told him. \n\nHe pulled off his clothes and shifted. \"What did you do?\" \n\n\"I don't know, I told him I wanted him to have his werewolf back and something took over. My hands got really hot and I couldn't move them from his head.\" \n\n\"He says thank you. We have a family bond, he's over the moon with happiness.\" \n\nI didn't know if the mate bond would overlap with his family bond, so I tried. \"Alan, can you hear me? It's Eve.\" \n\n\"THANK YOU! Care for a run?\" \n\nI looked around, others would need an explanation. \"They need to go run, could some of you go with them? Just in case.\" A few of the guys stood up, stripped and shifted, and the small group of wolves ran off into the woods. \n\nI stood up, brushing myself off, and was surrounded by the other werewolves. \"What the hell was that,\" Gabriel asked. \n\n\"I don't know. I wished for it to happen, my hands got hot and I couldn't move them, then it was like something popped and it was over. Next thing I know he has his wolf back.\" \n\nNo one said anything for a while, until Steven finally moved next to me. \"No one, I mean NO ONE not here today is to know about this. If she was in danger before, just imagine if they find out that she can get them their wolves back.\" I had to agree, I was still in shock at what just happened. \n\n\"That's not all,\" I said. \"Adam and Alan had their sibling bond immediately, but that didn't shock me. Adam and I have our mate bond, he told me what he was saying. I decided to try something,\" I said as I looked around. \"I thought maybe since I was his brother's mate, maybe I had a link too. It turns out I do.\" \n\n\"Wow,\" Michael said. \"I miss the link, I wish I was part of YOUR family.\" \n\nI pulled him into a hug. \"You're family to me, Michael.\" A shock passed between us, and he stepped back with his eyes open. \"What the hell was that?\" \n\n\"I can hear you, Michael. It's a BOND! We just formed a family bond!\" I was smiling and laughing as everyone looked at us like we were crazy. \"I just adopted Michael into my family, now we have a family bond,\" I said to their shock and amazement. \n\n\"How in Luna's name did you do that,\" Gabriel asked. \n\nI walked over to him and gave him a hug. \"You're family to ME, Gabriel.\" The shock passed again, and soon they were all lining up. In five minutes, all of my new brothers were able to talk not only with me, but each other. \"Boys, you better run back here, something big is happening,\" Steven sent. \n\n\"Steven? What? How can I hear you?\" I laughed at Adam's confusion. \n\n\"Just get back here, guys, I need to adopt a few more brothers.\" I didn't have to wait long. Ten minutes later, it was like we had a Pack again, but different. \"What do you think this means, guys?\" \n\n\"Packs are gone forever,\" Gabriel said, \"and good riddance. The structure led us to our doom, and Luna took it away. This is new, never before have we been able to form family bonds without sharing blood. I think Luna is changing our society, and for the better.\" \n\n\"And she's doing it with family, specifically the mother, at the center. I tried adopting Dumah, just as an experiment, before he got to you. Nothing happened. You, Eve, are the only one who can form this bond, the only one who can turn this group into a true family.\" \n\nI leaned back into Adam's arms. \"I love all of you guys like brothers, well, actually you were more like uncles because you're so damn old,\" I said as they laughed. \"I'm just so happy.\" \n\n\"That's all we want for you, Eve. For you and everyone here, to be together and happy.\" Gabriel raised his glass to me. \"Charge your glasses, it's time for a toast.\" \n\n\"It better not be to me,\" I whispered as we walked back to our picnic table to grab our drinks. \n\nGabriel raised his beer. \"A lot of things have changed since we put the Knights together all those years ago, but some things have not. Alpha or not, Pack bond or not, you have all been my family and I love every single one of you. Now Luna has granted our family a bond, and through Eve we are all brothers. To Luna!\" \n\n\"TO LUNA!\" We raised our glasses and I chugged mine down. I looked around and smiled, I liked this. I liked it a lot. \n\nCh. 88 \n\nMeghan's POV \n\nThe party really got going after all the good news. I was sitting on Steven's lap, we were talking to Gabriel and Mackenzie when Eve came up to us. I had a question for her. \"This bond that just formed between you and the males, it is a two-way bond?\" \n\n\"I've never had one,\" Eve said. She looked at Steven for help. \n\n\"It feels like what I had with my parents,\" he said. \"I like it.\" I must have shown on my face how left out I felt; I was Steven's, but his link with Eve was stronger than anything I had. Eve hugged me and sat next to Steven. \n\n\"I'm so sorry Meghan, I wish you could be a part of the link.\" \n\nI looked up in shock, looking around, the voice seemed to come from INSIDE my head. \"What?\" \n\n\"What what,\" Steven asked me. \n\n\"Who said that?\" I looked at Eve. \"Did you do that?\" \n\n\"Do what?\" \n\n\"I heard a voice in my head... a woman said she was sorry and wished I could be a part of the link.\" \n\nNow it was Eve's turn to look shocked. \"You heard that? I didn't say it out loud.\" \n\n\"Try something again.\" \n\n\"Don't you just want to drag him inside and bang the shit out of him until you can't walk straight?\" \n\n\"OH MY GOD YOU SHAMELESS LITTLE...\" I jumped at her, almost knocking her off the picnic table. \"I heard you, in here!\" \n\nSteven pulled my back into his chest. \"What did she say?\" \n\n\"I can't tell you, but the answer is 'hell yes.'\" It was Eve's turn to get embarrassed. \"So, can I talk to you?\" \n\n\"I don't know, I shouldn't be able to talk to you, the link is strictly between werewolves,\" she said. \n\n\"Give it a try, honey. Just think of her and say something in your head, not out loud.\" I tried saying something to her, I tried sending to Steven, Gabriel, I even tried sending to them all but nothing happened. We did find out that I could hear any of them now. \n\n\"How is this happening,\" Eve asked. \n\n\"I have an idea,\" I said. \"Try sending to Mackenzie.\" I tried her, then Natalie and Mia, but nothing worked. \"OK, how about Alice.\" \n\nEve closed her eyes, the next thing we heard was a plate breaking, then a loud thud. \"MEGHAN!\" Alan yelled from inside, clearly panicked. I ran inside, a broken plate was on the floor and Alan was holding an unconscious Alice in his arms. \n\n\"Put her down on the couch,\" I said. I ran back out and got my bag, by the time I got in, she was just coming to. \"What happened, Alice? Did you hit your head?\" \n\n\"I heard a voice in my head,\" she said, all confused. \"It sounded like Eve.\" Her eyes bugged out. \"It WAS you... how...\" \n\n\"Alan, you try it. Imagine she's got the family link.\" This time, both their eyes got wide. \"She heard you, didn't she?\" \n\n\"I did, but she can't answer,\" he said. \"Still, we've never had this. What's happened?\" \n\n\"Tell the leaders to come in here, and anyone with a human mate. Have them bring Snake, Mia, Viper and Kelly with them.\" It only took a few minutes before their large living room was full, and after a quick recap of what was going on, I gave my theory. \"Eve gave you all a family bond, but for those of you who have human wives, you bit them, right?\" I unconsciously reached up to the bite wound on my neck, barely covered by the thin T-shirt. \"The women who can hear Eve, can hear their mates, probably hear any wolf in this Bond, all were bitten. My theory is that they can't turn into wolves, our DNA is too different, but the bite is still causing a change in us. It is enough to give us some characteristics, including the ability to hear the bond.\" \n\n\"Will we be able to talk back?\" Alice looked at Alan. \"Will I feel the mate bond? Get sharper vision or better hearing? Develop a taste for steak so rare a good veterinarian could still save it?\" \n\n\"I don't know, this is all new, but I won't say anything is impossible.\" I leaned back into Steven's arms, enjoying the tingles as he ran his hands down my arms. \"I really like these tingles,\" I said. \n\n\"I know, it's so nice, and it gets me all...\" She stopped talking and turned red. \"I mean, it's so calming.\" \n\n\"What now,\" Viper asked. \n\n\"Well, I'd like to figure out if there are any changes I can find after the bite. I have my own blood back at the clinic, and I'd like to get a sample of Natalie and Mackenzie before you get bitten.\" \n\n\"I'm not getting bitten,\" Mackenzie said. \n\n\"Not unless you ask me to,\" Gabriel said. \"I would never force you to do anything. It is against my honor, and you'd probably try to kick my ass if I went too far.\" \n\n\"I would kick your ass, ball licker,\" she said, but there was no hostility in her voice. Her attitude had noticeably softened since they first met, and she was finding it difficult not to be touching him all the time. \n\n\"I'm asking Michael to bite me as soon as we get back to the hotel,\" Natalie said. \"The do not disturb sign will be on the door for good reason.\" She straddled Michael's lap, pulling him into a deep kiss. \n\n\"I guess I'll take your blood now,\" I said with a chuckle. I pulled out some sample tubes and took a vial of blood from each, packing it in a cooler. Steven was excused, and practically ran Natalie out to his motorcycle before they tore out of the driveway. I smiled as I walked back inside. Something was happening and I would figure it out. I loved a good mystery. \n\nGabriel's POV \n\nHearing the others discovering a bond that I didn't think was possible made me feel even worse about my situation with Mackenzie. I and my wolf were sure she was ours, but she was resisting. I had to find a way to get her to give us a chance. When we all left the house, I led her aside. \"Mackenzie, do you trust me enough to go somewhere with me alone?\" \n\nShe looked at me. \"I don't fully trust you, but I don't fear you or mistrust you, Gabriel. I can't be ignorant of what you have done with this group, of the kind of man you are.\" She laughed a little. \"Meghan and Eve are both pushing me to give you a chance.\" \n\n\"I'd like to take you to a place I like, where we can talk alone and get to know each other,\" I said. \"Will you come with me?\" \n\nShe nodded. \"Are we riding?\" \n\n\"Yes, but not the way you might think. Can we get your backpack?\" \n\n\"Sure. Anything else I need?\" \n\n\"Swimsuit if you have it. I'll get us some food and water.\" A few minutes later, I put the water bottles in the pockets on the side of her backpack and started to take my clothes off. \n\n\"WAIT. What are you doing?\" \n\n\"The place we are going is too far away to walk to and get home before dark. I'm going to shift and you can ride on top of me, kind of like a horse.\" I was down to my boxers, packing my clothes and sandals neatly in her pack. I pulled off my boxers and put them in, secretly pleased that she pretended to be embarrassed but was totally checking me out. I focused, shifting into my huge, jet black colored wolf. I stood there for a moment, waiting for her to react. It took a minute, but she came up and started running her fingers through the fur on my neck. I licked her hand, then laid down so she could get on me without pulling on my fur too much. When she was in place, I got back on my feet and started to move towards the treeline. \n\n\"Have fun Mackenzie,\" Eve said. \"Just hold on around his forechest and hook your feet above his tail, use your thighs to hold yourself in place. He knows where he is going, so just enjoy the ride.\" \n\n\"This is weird, and I've done a lot of weird in my life,\" she said. \n\n\"He thanks you for trusting him and asks you to hold on,\" she said as we started to pick up speed. When she put her head down low and asked me to run fast, I went into a full sprint. Dodging trees, leaping downed ones, and running up and down hills was fun for me, and her reaction was the same. Pretty soon she was yelling in my ear how much she loved this. \n\nI couldn't keep up that pace forever, not with a rider. I slowed to a fast lope as we got closer to the hidden place Adam had told me about. She heard the noise. \"A waterfall?\" \n\nI chuffed and moved to find the scent trail that marked the hidden entrance to the narrow crevasse. She ducked her head down as I moved through the overgrown bushes until we popped out on the other side. I took her to the big flat rock, warmed in the sun, with a small grass area next to it. She hopped off and set the pack down, looking at the ten-foot waterfall that dumped into a still pool. \"It's beautiful,\" she said. \n\nI shifted back, standing naked behind her. \"It's a little cold, but it will feel good after the run. Care to join me?\" \n\n\"You first,\" she said. I walked in front of her, walking into the water until it was up to my chest. I turned around to see she was taking off her shirt and shorts. \"I didn't bring a suit,\" she said. I was pleased she didn't ask me to turn around as she pulled her bra off, then pushed her panties down before putting them by her backpack. \n\nShe was incredible. Her body was not soft, it was coiled power under tanned skin, skin that had too many scars in it for my liking. I pushed my wolf back, she was a warrior like I was, she was deadly and her body was a weapon. She took a few steps and dove into the water, surfacing right in front of me. I reached for her, and she took my hands in hers. \"You aren't bothered by nudity?\" \n\n\"It's part of what you are, I see that, it's not sexual. I've been posted overseas in places nude or topless bathing was the norm. I kind of like it, especially when the scenery is this good.\" She moved closer, letting my hands go and running her hands over the broad planes of my chest. \"You have been a warrior a long time,\" she said as she traced some scars. ",
        "\"Yes; I have fought battles, I've been injured, I've lost men. I've had more than my share of sorrow in my life, Mackenzie. To be honest, I always thought that when I finally finished my vow to Luna, I'd walk into the woods and die to be with my mate, finally joining her in death.\" She moved closer, hugging my waist, her firm boobs pressing into me, the nipples like hard eraser heads. \"And then I saw you. Beautiful, dangerous, my equal in every way. Everything I wanted but didn't know to ask for. I love you, Mackenzie. I've loved you since you first touched my hand and I looked into your eyes.\" \n\nShe didn't look up, she didn't answer, she just started to cry into my chest. When she started to shiver, I hooked her legs under my arm and carried her to the side where we could sit in the sun, away from the cold stream water. \"I should tell you my story,\" she said. \n\n\"I have all the time in the world for you, Mackenzie.\" \n\n\"You may not like what you hear.\" She buried her head away from my gaze. \n\n\"Maybe so, just like you might not like hearing mine. Still, we cannot change what happened to us in the past. The events formed us, turned us into what we are now.\" \n\nShe looked up at me, tears in her eyes. \"And what exactly are we?\" \n\n\"We're meant to be together, Mackenzie. We have a chance to make a real future together, to have children of our own, a huge family to be a part of. I'd hope you would want to be here, with my family, but I'll follow you anywhere if you don't.\" \n\n\"I'm afraid I'll get hurt again,\" she told me. \"But, I feel drawn to you, to them. Natalie is right, you guys have something special going on.\" She stood up and walked back towards the water, her hips rolling as she moved. She knew exactly what she was doing, and it was working. \n\n\"Never tease a wolf, baby.\" \n\n\"It's not teasing if you can back it up.\" She cheekily looked over her shoulder and dove into the water. I was after her like a shot, taking two steps before diving after her. I caught her leg just past the middle of the pool, hauling her back to me as she fought to escape. She was good, she used different techniques to try and break my holds and create distance. It was her Krav Maga training, but she was laughing the whole time and not trying to hurt me. It took a few minutes, but I ended up with her wrists trapped behind her back while her legs were wrapped around my waist. \"Draw,\" she asked sweetly. \n\n\"I believe I have the advantage,\" I said with a smirk. \n\n\"You'd be wrong.\" I shuddered as she moved her hips, running her core along my painfully hard shaft. She moved up and down a few times while I shifted my grip, letting her arms go so they could wrap around my neck while my hands moved to support her butt. \"Feel up for a few rounds?\" \n\n\"Absolutely.\" I moved her up until I was poised at her entrance, then slowly lowered her down. The contrast between the cold stream water and the heat of her welcoming folds was amazing. I moaned into her mouth as we kissed, a kiss she broke only when she worked her way down to the base. \"Wow,\" I said. \n\n\"Jesus you're a big boy,\" she said. \"Give me a second to adjust here. You feel like you're up to my ribs.\" Pretty soon she was starting to move a little, then we moved back to the long, slow strokes. The water was great as long as we didn't go to fast. \"I'm cumming,\" she said. \n\nI felt her clamp down on me, her channel milking me, and it was my undoing. \"FUUUUCK,\" I said as I thrust in to the hilt and started to pump my seed deep inside her. She held me there, riding out the orgasm as her eyes rolled back into her head. \n\nWhen my legs were fully under my control again, I moved us over to the side of the pool, still buried deep inside her. She bounced a little as I walked, and she started moving her hips again. \"You're still hard,\" she said. \n\n\"Love, I've been so hard these last few days a lineman couldn't climb it. You have no idea what you do to me.\" We reached a rock on the edge of the pool, it left me in thigh-deep water while she could sit on the rounded edge. I started to move inside her, faster and harder this time as her moans and kisses urged me on. She came again hard, then again as I sucked hard on her nipples. The third time, pounding hard up into her, she screamed her release as she held on for dear life. \n\n\"Mercy,\" she said as she tried to catch her breath. \n\n\"Come on.\" I pulled out, my seed gushing out of her swollen sex as we finally separated. I picked her up, carrying her over to the warm rock. I laid back, letting her rest on my chest as my hands traced patterns down her back. \n\n\"Natalie wasn't lying, that was incredible,\" she said. \n\n\"It was. I love you, Mackenzie.\" \n\nShe couldn't say it yet, but she was thinking it. She kissed me, then nuzzled her head under my chin. \n\nWe fell asleep together, the sun warming our bodies, as the bond worked its magic on us both. When we woke, she was more comfortable talking after another hard round of athletic sex. She told me her story, about her rough childhood, her rape and vow never to be a victim again. She told of her fiance' who had been killed, the way men looked at her and treated her, and her eventual decision to just ignore them. \n\nI was reluctant to stop, but we had to get back before dark or she risked being knocked off my back by an unseen branch. I shifted, enjoying the tingles as she crawled back on. It was just before sundown when we walked out of the woods together, hand in hand. \n\nCh. 90 \n\nSnake's POV \n\nThe welcome for Gabriel and Mackenzie as a new couple was amazing, and the Club partied into the night. The girls all went inside at one point, and we could hear giggling as they talked in the kitchen. \"They're up to something,\" I said. \n\n\"You'll recall that's pretty much a constant with women,\" Viper said with a laugh. I was sitting with him along with Gabriel and Michael when I saw them coming with Crash behind them. \n\n\"Oh shit, look at their eyes,\" I said. They were eyeing us up like we were prey. \n\nMia hopped into my lap as Natalie straddled Michael's legs and Mackenzie knelt between Gabriel's legs. \"What's going on, ladies,\" I asked. \n\n\"We're tired of waiting,\" Mia said. \n\n\"There's questions you aren't stating,\" added Mackenzie. \n\n\"And we want to get to the mating,\" said Natalie. \n\n\"Will you marry me?\" All three girls said it at once, looking up into our eyes. I didn't hear what the others said or did, I just said \"YES\" and kissed her hard. From the whoops and claps of the assembled crowd, and the expressions on my friend's faces, all three had been yes. \n\n\"Well, come on then,\" Mia said as she hopped off my lap. She took my hand and we stood in front of Crash, who had his bible with a Harley-Davidson book cover open. Gabriel and Mackenzie stood to our left, Michael and Natalie to our right. \n\n\"Now?\" I looked around, everyone was gathered around. \n\n\"Yes, now. Who knows the next time we will all be together?\" Mia squeezed my hand. \n\n\"And I told you I didn't want to wait,\" Natalie said. \"As soon as I got the call that Zee and Gabriel were making love at the waterfall, I made him come back. I wanted to make sure you didn't screw this up, Gabriel.\" She was wearing a loose Tshirt, proudly showing off the mating bite she had gotten that afternoon. \n\n\"And I've wasted enough time in my life,\" Mackenzie said. \"So why wait another minute?\" \n\n\"So we're actually doing this?\" Crash looked at us, and the girls nodded enthusiastically. The three of us looked at each other, then nodded as well. \"Dearly beloved, I don't know why I even bother warning my flock about the dangers of rampant matrimony any more. First comes sex, then comes marriage, I guess then we get a shitload of girls in the baby carriage.\" \n\n\"Damn right,\" Gabriel said. He pulled Mackenzie in front of him, his hands spread over her belly. \"I love that vision.\" \n\nMichael did the same with Natalie. \"I can't wait to see your belly filled with my children.\" \n\nI hugged Mia to my side. \"I love that we'll have our babies,\" I told her. \n\n\"Yeah, yeah, you guys make me want to vomit up the cheap beer and barbecue I ate tonight,\" Crash said. \"Have you ever seen three tougher guys being led around by their dicks?\" The group started to laugh. \n\n\"It's a pretty long leash,\" Mia said. \n\n\"Like a handrail,\" Natalie added. \n\n\"Sometimes he pushes me,\" Mackenzie giggled. \n\n\"All right. Dammit, if anyone can think of a reason why we shouldn't just marry these three couples so they can stop being so damn lovey-dovey and screwing all the time, speak now or share in the blame.\" Tiny burped loudly, but no one said anything. \n\n\"All right, the vows. Do you lovely ladies take these guys to be your Old Men? To screw him often, take care of his house, and bear the children he wants even though it looks like it hurts like hell?\" \n\n\"HELL YEAH,\" the three yelled at once. \n\n\"And you guys. Do you promise to love, honor and protect these fine ladies for the rest of your life, giving up all others, and sleeping with the same woman every night as long as you both shall live?\" \n\n\"DAMN RIGHT,\" we all said. \n\n\"I thought you'd say that. Honestly, these babes are hot as hell, I can't even blame you.\" He smirked a little and held up the book. \"Then by the power vested in my by the Church of Mastercard and a state clearly lacking in its oversight capabilities, I now pronounce you Old Man and Old Lady. You may now...\" \n\n\"MOLEST THE BRIDE!\" I pulled Mia into my arms for a deep kiss, my hands going under her shirt as the guys sprayed beer and tossed popcorn at us. Our friends mobbed us, giving slaps on the back and hugs as they officially joined our family. We stayed for twenty minutes, then Steven handed us the keys. \"The rooms are on the top floor, they're yours for the night,\" he said as he handed one to me and to Gabriel. \n\n\"We're going back to our hotel room, it has a Jacuzzi,\" Natalie said. \n\nI swept Mia over my shoulder, careful of her injured side, and smacked her butt loudly. \"I'll see you in the morning,\" I told everyone. \"LATE morning.\" Mia laughed as I ran off, and we had a very active wedding night. I heard the howl from next door, Gabriel must have claimed Mackenzie, followed by her screams of pleasure. Being naturally competitive, we started a silent competition to see who could make our wife scream the most before going to bed. \n\nI had to stop at four AM, the count was over thirty. We lost. \n\nThe next morning, we showered and dressed and went downstairs. A late brunch was set up in the kitchen, and I pulled Mia into my lap as we shared a big plate of pancakes. The tables were packed with people, many humans hung over. \n\n\"Did you sleep well,\" Viper said, and everyone started to laugh. \"I wish I was a werewolf, I could have curled up in the woods where I couldn't hear you two.\" \n\n\"It didn't help,\" Puriel said. \"Wolf hearing, those screams could be heard for miles. Thanks for keeping the windows in your room open.\" \n\n\"I'd say I'm sorry, but I'm not. It was a hell of a night,\" Gabriel said. \n\n\"I don't know if I can ride today, you pounded the shit out of me,\" Mackenzie said. \"And I loved every minute.\" She pulled him into a kiss. \n\n\"Well, since none of us could sleep, we got a few things figured out late last night,\" Hammer said. \"The rest of the Club talked over the lottery and what we discussed, and we're all in agreement.\" \n\n\"We are going with the three chapters/one club idea,\" Dagger said. \"There won't be many up here at first, just Adam, Eve and most of the werewolves. We're already working on getting construction drawings made up and talking to contractors. We want to start demolition of the old structure tomorrow, and get utilities in. If we really push it, we can have the Pack House weather-tight by the end of October. That gives us the winter to get the interior done.\" \n\n\"We have to run in new power and connect to the natural gas line along the road,\" Azazel said. \"Pushing the contractors, we figure we can move in come spring. It's a huge project, we'll need a hundred contractors working it seven days a week to meet that schedule. Meanwhile, we'll use this house as a base.\" \n\n\"That's fine,\" I said. \"Whatever you need, we'll get you. I just want you to keep Eve hidden. Nobody outside the Club sees or hears her. Keep her here and safe. I'm sorry, Baby, but it's just too dangerous.\" \n\n\"I understand, Dad. Adam told me the same.\" He pulled her into his arms and kissed her. \n\n\"I'm handling the lottery,\" Viper said. \"Abaddon has a lot to coordinate with security. I'll work with the lawyers, bury this in so many corporations that no one will be able to figure out we are behind it.\" \n\n\"And Sheri is selling her bar, she accepted the offer yesterday,\" Moose said. \"I'm taking Hammer and Teri, along with Dumah, to scout a location for our southern headquarters.\" \n\n\"I grew up around the Ocala National Forest, that's a better bet than the coasts or down south,\" he said. \"Werewolves don't do good around swamps, and we need plenty of land to run. I think we can find something within two hours of Jacksonville, either in Florida or Georgia, that will fit our combined needs.\" \n\nI smiled at that. \"Good, because I'm looking forward to long winter vacations where I can ride every day,\" I said. \n\n\"The Northwoods will always be home, but I don't mind the beach either,\" Adam said. \n\n\"And you and I will figure out what to do with our current Clubhouse and the old Knight building,\" Dagger said. \"Maybe something a little more rural, since we won't need to work outside the Club anymore.\" \n\nMackenzie looked up at Gabriel, a little panicked. \"I can't keep my business?\" \n\nHe shook his head. \"I'd never force you to give up what you love, but I want you safe too,\" he said. \n\n\"Compromise,\" I said. \"Keep the company, it's good cover. You still provide investigation and protection services, you just have a single client. The Club. It gives us cover for the guys protecting Adam and Eve, and it isn't fair for the guys to be giving up time and effort protecting them without being paid.\" \n\n\"I like that,\" Natalie said. \"Family business.\" \n\n\"Family.\" She leaned back into Gabriel's arms. \"It will take a while to achieve, I have open contracts and commitments.\" \n\n\"And we can help you with that,\" he said. \"I have some skills in this area.\" \n\n\"Uh huh. I'll be the judge of that. I haven't sparred properly with you yet, and I need to evaluate your firearms and protection skills.\" He just laughed and hugged her. \n\n\"Form a general contracting company, the guys up here focusing on the building should get paid too,\" I said. \"I don't want someone outside the Club making decisions.\" \n\nAn hour later, the major decisions made, we started to load up. We left Eve and most of the werewolves behind, my Club riding back to the cities together. It had been an amazing weekend, full of surprises. On Monday the six of us would have to apply for a marriage license, then send that paperwork in. We also had ring shopping to do. \n\nWhat a difference a day makes. \n\nCh. 91 \n\nMeghan's POV \n\nOne week later \n\nThe honeymoons would have to wait, because the Club had a ton of stuff to do. It seemed like Steven and I hardly saw each other now; I was holed up in the Clinic doing research all the time, and he was coordinating security at three different sites. \n\nThe Northwoods group was moving like gangbusters; demolition had already begun. The architectural firm we had hired used plans for a resort hotel as a baseline, so we could at least get the walls started. After some discussion, we decided to forego log construction as we couldn't get the timbers cut and delivered in a timely fashion. There was also concern about fires, and Steven wanted the place to be secure, incredibly secure. In the end they went with the use of poured concrete inside insulated forms, giving us highly insulated and strong walls. We were using a commercial building method for the floors, a lightweight poured and reinforced concrete, so we could have large spans without supports. The outside we went with a faux-log concrete siding product that was fireproof, and steel roofing. We also specified steel fire shutters that could be swung and secured in front of the windows. In the end, the entire place would be a safe room and storm shelter, able to withstand almost any attack short of artillery. \n\nThe nice thing about the construction was the speed, it was easy to raise the forms. Pouring the foundation had already begun, and the pours would continue 14 hours a day for the next week. We were hiring almost every cement truck from Duluth north. While they poured, we also finished the blueprints we would need for the walls, electrical, plumbing and other stuff. The well was already dug, and a huge septic field was under construction in the huge front yard. \n\nWith the frame, roof, windows and doors, and basic mechanicals in place, we would be able to continue construction through the long winter. The plans that had been shared were pretty cool, and the concept was being carried over all three locations. Each member was asked to declare a \"Primary\" location they would be at; in this location, they would have the equivalent of a large apartment including a nice kitchen and multiple rooms. At the other two locations, you would still have a designated room, but it would be more like a hotel room with a kitchenette, about a third of the size. Since the dream showed we were having werewolf babies, Steven and I had chosen the northern location as our base, as had all the other parents in our dreams. \n\nI was worried the other couples would stay, like Snake and Mia, but they wanted all the girls protected. They both liked the area, so it wasn't a big problem. I was worried about Mackenzie, but she decided that if her security company had a single client, they didn't have to maintain a Twin Cities base. She was in talks to sell the company to a competitor, taking only Natalie with her. \n\nAfter much discussion among the group, we decided the existing properties in St. Paul just didn't work for us, and there was no room for us to expand. We didn't want to go too far from the cities. The werewolves wanted land to run, the humans wanted a huge garage and storage, but still close enough to visit family and work if you were still doing it. I reminded them of a place we had used years ago, the game farm near Miesville, that was owned by Viking's aunt and uncle. It was still operating, but barely, and in another year or so they would be bankrupt. Viper had kept in touch with them after their son's death, and they were eager to retire. The Club made a cash offer for their land, throwing in an offer to have a permanent room at one of the three Clubhouse locations. Not surprisingly, after a lifetime in the harsh Minnesota winters, they picked Florida. The Clubhouse was going to be the same as the one up North, using the same plans. The huge, fully equipped garage and large gymnasium were also going to be the same. No matter which place you were at, it was going to be like a luxury resort, without the paid staff. \n\nHammer, Teri and Dumah had been checking in with the other leaders every night, updating them on the search in Florida. They had located over a thousand acres bordering the east edge of Ocala National Forest, less than two hours from Jacksonville. They were in negotiations with the owners, but a purchase and building would have to take place after we claimed our lottery winnings. We had at least one more winter in the hotels before we would be operational in our Southern chapter. On the good side, they had already leased an entire condominium building south of Jacksonville, so we would at least have a good place to stay. \n\nViper had engaged a team of lawyers, and they estimated it would be another month until the Club could claim the prize. Having this much money with fewer than a hundred members made things more interesting, and the lawyers were working on how to make it all work. In the end, we went with shares. Each existing full Club member and spouse got a full share, and children a one-third share. If they left the Club, their share would be sold back to the Club at par value for the current club asset value. If you stayed, you got full use of the facilities of the Club at no cost. This included use of one apartment, plus a small room at each of the other Chapters. The property remained with the Club, so all you could do was cash out your share. It was all set up so as Club rules for adding and removing members occurred, the Club and the corporation would go on. ",
        "There weren't going to be slackers, not with the need for protection and upkeep. If you didn't work outside the Club, your job inside would come with a salary and benefits. It helped with the IRS, and gave everyone something to do. By the time school started, it sounded like all the jobs would be filled, even for the teenagers. \n\nSince I was a senior person in the Club now, thanks to my Master-At-Arms mate, I had to be part of their nightly webinars. We used a business program so we could all talk, plus any of the sites could bring up photos or documents as required. That, food, sleep and sex were about the only times I was out of the Clinic... and sometimes the latter three took place there too. \n\nThe results of my testing were conclusive, and I didn't know whether to be shocked at the result. From the notes and journals I had inherited from Vivian, werewolves had never been able to reproduce with humans. Even in later times, with modern medical testing, no evidence of successful fertilization existed. The issue was simple; as I had told everyone, the DNA of a werewolf and a human were too different to allow reproduction. The strand numbers didn't match up, and the resulting embryo was not viable. \n\nVivian had checked on In Vitro techniques during her research into SPUDS while still able to talk with other Pack doctors early in the outbreak. One doctor in Washington had tried it on an infertile couple, hiring a human surrogate. In five tries, the pregnancy never took. I reproduced part of his tests and had to agree, it couldn't happen. \n\nAnd yet my testing, and the dream, showed different. I looked at the clock, it was just after three in the afternoon. I needed to talk to everyone before the nightly meeting, at least every human female who was in the dream as being pregnant. I spent the next hour setting up the conference for six PM, right after I could eat more of Mia's amazing Italian food downstairs. \n\nI saved everything to my laptop, leaving it in the conference room before heading in for dinner. The clubhouse was boisterous, it had been that way since the weddings and the lottery announcement. The idea that our Club was central to reestablishing the entire Werewolf species was a big thing, and we had all rallied around Eve and the others to get there. The only ones who seemed depressed were the werewolves that would have to wait almost nineteen years for a mate of their own. Steven had another dream, very brief, that told him no more weddings for wolves, and that Luna was 'handling everything.\" \n\nThey all had faith in the Goddess, even if they didn't have patience. \n\nThe room smelled amazing; fresh bread on the tables along with herb-infused olive oil. Big bowls of salad and vegetables. I looked at the pans, smiling to myself. \"Manicotti?\" \n\n\"Manicotti Al Forno,\" Steven said as he led me to a table, \"With normal or spicy Italian sausage.\" This stuff was the bomb, he was assured. We found an open spot across from Viper and Kelly and sat down, almost immediately food was passed down the long table our way. \n\nI took a bite of the manicotti, moaning in pleasure. \"I swear, if Snake had fucked things up, I would have married Mia just to keep her here and cooking,\" I said. \n\n\"I knew the right answer when given,\" Snake said as he sneaked up on me. They sat next to us, Mia thanking me for the compliment which was 'one of the nicest things anyone had ever said about her cooking.' \n\n\"We still love you too, Snake. Best of both worlds. I'm glad you two are going up north with us in the spring so I don't have withdrawals.\" \n\n\"It's fine,\" she said. \"I was hoping to open a new place in Minnesota someday, now I have it. Snake and I have carte blanche on the kitchen design, plus the new house in Miesville will be an exact match. It's going to be soooo cool when it's done.\" \n\n\"So many to cook for, especially with the baby boom coming.\" Snake kissed her, and they went back to filling their plates, the kitchen now shut down as we were some of the last people down. \"So this meeting tonight, what is going on?\" \n\n\"Later,\" I said, going back to my vacuum act on the food. I had worked through lunch, so I was starving. A few minutes later, I was patting my belly and looking at the ice cream bar. \"Baby, I'm still hungry,\" I said softly to Steven. \n\n\"The usual?\" \n\n\"Please.\" He got up and went to the bartop where the setup was. He took two of the large bowls, knowing that I'd take whichever one I thought had the right proportions. He started with a fudge brownie, putting two scoops of Mint Chip on top. Another brownie on top, drown the whole thing in hot fudge, and top with whipped cream and you have the famous Hot Fudge Goopie. \n\nAlso known as heaven on earth. \n\nI moaned loudly as I dug in. \"You make the most amazing brownies, Snake.\" \n\n\"I know, you've been stealing them since you were thirteen!\" It was true, I used to hide them and take them home with me, they were so good. \n\nI looked at my phone, the meeting was in ten minutes. Kissing Steven, I went to clean up and set up. Steven, Snake, Mia, Viper, Kelly, Gabriel, Mackenzie, Michael and Natalie were here. Alan and Alice, Adam and Eve were up north. As soon as everyone was there, I started the meeting. \"Thanks for coming on short notice, everyone. For the last week I've been running tests on the blood I took from you last weekend, plus my own blood. Mia and Kelly are my controls, they are with humans. I was bitten almost two weeks ago.\" \n\n\"So does the bite matter?\" \n\nI nodded. \"Now, it shouldn't. I found these notes in Vivian's journals. IVF with a human host has been tried in the past, but it never worked. What happened was that the DNA of the werewolf embryo was different enough from human DNA that the human immune system attacked it and destroyed it. You can't stop this effect, they even tried suppressing the human surrogate's immune system, but you can't do that for a whole pregnancy. Even with the placenta, the human body attacks and destroys the baby.\" \n\nAlice looked crestfallen. \"So we can't?\" \n\nI showed them some tests I'd done and followed under the microscope. \"This short video shows what happens when small amounts of werewolf cells are placed in Mia's blood.\" We watched for thirty seconds as the white blood cells attacked and consumed the werewolf cells, which I had stained to differentiate from the human cells. \"Now watch this.\" \n\nThe next video ran almost two minutes, the stained cells moving around the blood cells. Instead of being attacked, the white blood cells moved past and ignored the werewolf cells. \"Wait... they didn't do anything,\" Snake said. \n\n\"Exactly. This blood is mine, taken yesterday. When I tried the blood I took last week, it didn't work.\" \n\nAlan looked confused. \"So, it takes time to establish?\" \n\n\"That appears to be the case,\" I said. \"There is no way to know for sure until we actually try it, but this has never happened before. It wasn't just the loss of Pack bonds or Alphas when the curse was broken, this got made possible as well.\" I pointed my finger between Steven and I. \n\n\"Almost like Luna knows what she is doing,\" Steven said. \n\nI just nodded, and let things settle in. Mia was the first to make the connection. \"Wait... I don't have a werewolf mate. How am I going to get this change, so I can carry the baby?\" \n\nShe looked at Steven, he just shook his head. \"Not from another male, we don't want to risk creating a mate bond. I don't think it would happen, not without sex, but I think the safest thing would be to have Eve bite you.\" \n\n\"Me?\" \n\n\"Yes, I think they and their husbands would be more comfortable with you doing it than one of the men.\" \n\nMia looked at Snake, who nodded his head. \"When should she do this?\" \n\n\"The next week or two,\" I said. \"I expect that Eve will go into her heat cycle around Thanksgiving. We will need to start hormone treatments to spur egg production, but a first heat is never an easy thing to predict. We need all of you to be ready, I'd rather inseminate and directly insert the eggs instead of having to freeze them. Much higher success rate that way. I will have to use hormones on you, especially Mia with her history, to make sure you are receptive to the transfer.\" \n\nI had discussed the basics of this with everyone earlier, and I was going to get more specific soon. I had been doing a lot of research and ordering the equipment I would need to perform the procedures. \"One last thing, all my facilities are here, not up north. When it comes time, I need to bring Eve and the others down here to do this in my Clinic. You should be here about a week, we'll need to make sure security is handled for that.\" \n\n\"We can restrict the clubhouse and keep you upstairs and out of sight most of the time,\" Steven said. \"A disguise while coming or going too. Bring a van down, something she can't be seen in,\" he said. \n\n\"I'm going to go up north for a day or two every week to look for signs of her cycle starting, and once it does I'll stay there doing the hormone treatments and monitoring until it's time for the procedure. Then we all come back to the clinic.\" \n\n\"Thanksgiving on the North Shore?\" Alice looked at us. \"All of you are welcome to stay with us, the other house is full of men and doesn't have much space. I'd love to spend time with my sisters,\" she said. \n\n\"Me too.\" We talked for another twenty minutes, then ended the call. We were close, it was going to happen, just like in Steven's dream. I knew from his dream at least one of those girls was mine; we had talked, and I was going to transfer four eggs into me. I wanted to make sure, and I wasn't afraid of multiples. The other girls were taking between two and four, at least that is what we thought now. Add in Kelly, who hadn't been seen in the dream, for reasons unknown, and we had a huge baby boom coming. I couldn't wait. \n\nCh. 92 \n\nEve's POV, 2 months later \n\nThis was my favorite time of the year, late October. The hard frost had come and gone, taking the flies and the mosquitos with it. The forest floor was covered in leaf litter, the trees nearly bare, and the early snow flurries were coating them with a thin layer of white. I was in the back yard of Alice's house, the werewolves forming a protective perimeter well away from me and my alluring scent. \n\nAnd I was miserable. \n\nI didn't have any mother to tell me what to expect, no friends or older sisters going through it at the same time to trade feelings with. Only one person in the entire world could go through what I was going through now, and all I had was some information Meghan had dug up in Vivian's journals. It wasn't much to go on. \n\nHeat came on within about three months of mating, then again every year in the late fall to middle winter. Like canines, the purpose was to prepare the body for conception, and to attract the male for near-constant sex over a period of a week. Males became extremely territorial during this time, enough so that Alan had moved in with the other werewolves at the temporary house until my heat was over. Adam was attentive, annoyingly so, and I knew it was only going to get worse. The former Knights, the ones who had been mated before, they pulled me aside and helped me understand. \n\n\"How are you holding up?\" I heard Meghan walking up to me, she had been up here for two weeks already. I had been under her direct supervision for the last two weeks, as she tracked my progress towards the heat. \n\nThe hormone therapy I was undergoing had my emotions all over the place, I was a real bitch at times, randy as hell at others, then a minute later I'm a sobbing mess in Adam's arms. \"I'm riding the rollercoaster,\" I said. \"I am hot all the time, even out here I'm sweating.\" \n\n\"That's good. Come on inside, we need to do the ultrasound and blood tests.\" I got off the rock and walked back inside with her, wearing only shorts and a sports bra while she had jeans, flannel shirt and a light jacket. We went to her room, where she had set up the equipment she needed; a portable ultrasound, blood drawing supplies, and a portable blood analyzer. I knew the drill, having done this twice a day since she arrived. I hopped up on the bed, and she took a sample of my blood from my arm and got it going in the machine. \n\nI pushed my shorts down out of the way, and she put the probe on my lower belly. \"That's so cold it feels good now,\" I said as she moved it around in the jelly used to make sure she had good contact. We both watched the monitor; she was always teaching, just like how she learned, and it didn't matter if I wanted to follow in her footsteps. She checked both ovaries, and pointed out the rapidly developing eggs. \"Soon?\" \n\n\"Call Adam in here please.\" \n\nI sent for him over the link and the door opened, I should have known he wouldn't be far away. \"Hi baby, everything all right,\" he asked as he came to my side and took my hand. \n\n\"Everything is going perfectly,\" Meghan said. \"Let everyone know we have to leave for the Cities in the morning. It looks like she is about two days away from being ready to harvest.\" \n\n\"Excellent,\" he said. \"You leave some eggs for us, though.\" \n\nMeghan just laughed. \"Not TOO many, I don't want you having a litter on your first pregnancy.\" She wiped the gel off and I pulled my shorts up. \"Off with you, I need to make sure all the other girls are ready.\" \n\nSince we made the decision to proceed, the humans had been placed on birth control pills to regulate their cycles, and Meghan was trying to time it so their wombs would be ready to receive the eggs as soon as they were fertilized and ready. I sent Alice in to see her while Adam led me back outside. \"Are you all right with all this?\" \n\n\"I need to be, Adam. It's my destiny to create an entire generation of werewolves.\" We walked to the woods, enjoying the cool weather. \"The harvest will be no big deal, I'll heal in a day. I'm more nervous about the heat.\" \n\n\"We will be fine, Eve. I'll take good care of you.\" \n\nI just laughed. \"Of course you say that, you get a week of nonstop sex out of it. I'm the one who deals with the pain and the mood swings. I feel like I'm out of control half the time, my rational brain just isn't in charge.\" \n\nHe stopped and kissed me, my emotions shifted again and I started to press my body to his. The makeout session grew headed, then he sat on a tree stump and pulled me into his lap. We couldn't have sex before my appointment, I'd be mortified if she used the internal ultrasound probe and a bunch of his baby batter leaked out! I unzipped him, exposing his hard member to the cold, as I turned to straddle his legs. I then pulled my loose shorts aside and sank down on him. We both moaned as I reached the bottom, I was primed and ready for him. He pulled my sports bra up, his lips attacking my sensitive nipples as I started to ride him slowly. \"Oh... Adam it's sooooo good.\" \n\nHe didn't say anything, his tongue and teeth were busy teasing my nipples, and when he sucked hard on one I leaned back in ecstasy. We took our time, slowly building up the pace, until I came hard. He started to move my hips on him, pushing me back and forth as my clit rubbed on him. He stood up, holding me up as I hung on for dear life, and pounded me good until I reached a second, stronger orgasm. My contractions around him set him off, and I felt his manly essence shoot deep inside me. \n\nHe sat back down, just holding me, as we came down from the high. \"I love you, Adam.\" \n\n\"I love you, Eve.\" He held me to his chest as my lack of sleep caught up to me, and I woke up later in our bed. \n\nMeghan's POV \n\nAfter adjusting Alice's hormones, I got on the phone and talked to the other girls who would be receiving the treatment. The goal was to get their cycle to the point they were ready to accept the implantation in two to three days; if it didn't work, I'd arranged with a fertility clinic to have their embryos frozen. I was thrilled with Eve's progress, I was pretty sure we'd be able to harvest two dozen eggs, maybe more, and she'd still have a normal heat. \n\nI was still nervous, though. In a normal case, I'd never include myself in the population of recipients. I was taking on enough with learning the IVF procedure on my own, supervising multiple women, some of whom would be high risk pregnancies. Kelly was in her late forties, Mia didn't even have ovaries, and multiple births were automatically higher risks. Add in that they might be delivered early, and I was petrified. I knew from the dream that twins would be common, maybe even triplets or quadruplets, and in the human world this would involve a hospital and a whole team of doctors to support them. \n\nSince the babies would all be werewolves, I couldn't involve the human medical system. I was scared for myself, too; I was young and healthy, but triplets were no joke. All in all, I was as nervous as a long-tailed cat in a room full of rocking chairs. \n\nI could feel my body preparing, my cycle had aligned and based on the temperature history I was taking in the morning, I would be ovulating soon. I put my hand on my belly, just as the phone rang. I saw it was Steven. \"Baby, are you all right? I could feel your fear.\" \n\n\"I'm fine, honey. I'm just scared. All of this is coming to pass, and I don't know if I can handle it all.\" I started to cry, and I'm sure he felt that over our weak bond. I wished I could use mental communication, but nothing had changed there. He could still send to me, but I couldn't send back. The most he got was my base emotions over the mate bond we had. \n\n\"It's going to be fine, you are Doctor Meghan Jenkins, medical prodigy and the top Werewolf doctor in the country!\" \n\nI laughed. \"I'm the ONLY werewolf doctor in the country, you ass,\" I said. \"That means I'm also the worst.\" \n\n\"The hottest one by far,\" he continued. \"I heard we are heading back to St. Paul in the morning.\" \n\n\"It's almost time, Eve's eggs will be ready to harvest soon.\" \n\n\"We're getting security ready. We need to protect her, but understand you are just as important. Without you, none of this happens.\" \n\nI wiped my tears. \"You're right, we know how this ends. It's all going to turn out,\" I told him. \"I love you so much it hurts sometimes when you aren't with me.\" \n\n\"I'm just a few miles away, love. Things are going really well at the site, we're putting windows in now. We'll have a basic heating and cooling system in next week, and water and flush toilets in two weeks. The framing crews are flying, you should see all the rooms as they take shape.\" \n\n\"I'd like that.\" \n\nThere was a pause. \"Have you eaten lunch yet?\" \n\n\"No.\" \n\n\"You need a break. How about I pick you up and we run into town and have lunch? Then I can bring you back and show you around the site, since we won't be up here again for six weeks.\" I'd told Alice and Eve that I'd come at about the six week point when they were pregnant, then every two to four weeks after, just to monitor progress. \n\n\"I'd like that. I don't have anything else scheduled this afternoon, I'll let Alice know we're taking a date afternoon.\" I hung up a few minutes later, smiling again. Having the little bond we did was helpful in that he didn't have to guess my emotions, he could feel them. And what he was feeling now was love, with a bit of lust mixed in. \n\nIt was too cold for motorcycles, they had been put in the back of the garage while the snowmobiles were prepared, so he picked me up in one of the pickup trucks the Club had purchased. The lottery winnings had been collected, and there was a minor media blowup as they were denied the normal photo opportunity and interview. Our lawyer collected it, in a closed meeting, and left again. I thought it was hilarious, but it was within the rules and they couldn't do anything about it. The men had taken some of the money and immediately filled the big pole barn next to the house with new snowmobiles and ATV's. I didn't mind, up here on the North Shore you get feet of snow, and we had plenty of land to ride on. I preferred Steven's back, though. "
    ],
    "authorname": "partwolf",
    "tags": [
        "pack",
        "werewolf",
        "pups",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-last-shewolf-ch-84-end"
}