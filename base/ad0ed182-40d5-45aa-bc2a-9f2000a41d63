{
    "title": "A Hairy Situation",
    "pages": [
        "DISCLAIMER: Nothing in this story is real or should be considered as such. This story centers on a particular fetish, and yes, it also features sexual acts between consenting adults. I welcome any feedback and I'm always excited to discuss the story and characters, and chatting/bouncing around ideas for future stories. I hope you enjoy delving into my insane mind.\n\nNOTE: It's been a while since I've written anything and this story features something different than my usual fare. Most notably, a fetish that will not be for everyone. If you're not into hairy girls and body hair, I suggest you turn back now. But if you are, I hope you enjoy this little story I put together.\n\nA HAIRY SITUATION\n\n\"Have you ever considered just letting it grow out?\"\n\n\"What?\" Sarah paused with her underwear halfway up her smooth legs. Her green eyes darted over to her boyfriend who sat on the edge of her bed, and he turned away, sheepishly staring off to the side. But she caught his gaze drifting back and then away from her freshly shaved, bare snatch. She rolled her eyes and finished pulling up her panties, covering her mound with a snap of the elastic hem. \"Yeah, I'll just stop shaving and have a bush running down to my thighs.\"\n\n\"Nothing like that,\" Danny said, head whipping back in her direction. She continued to get dressed, slipping a bright lacey bra onto her modest bust, but cocked her eyebrow to let him know she noticed his sudden enthusiasm. He paused and stood before continuing, pulling off his shirt and dropping his pjs. \"I just mean, like, you talk about the hassle of having to shave all the time. I'm just saying, you don't have to if you don't want to.\"\n\n\"Uh huh.\" Sarah shimmied a pair of tight jeans over her shapely thighs and butt. She always wished her boobs were a little bigger, but what she lacked on top she made up for below. \"You say that, but then suddenly the sex stops coming as often and I find Google searches for waxing in your search history.\"\n\n\"Never. I clear my search history.\" He paused in the doorway to the bathroom, leaning against the frame in his boxers. Before pulling her short-sleeved tee over her head, Sarah noticed the half chubby inside her boyfriend's underwear but passed it off as the typical morning wood that often pressed into her ass during their waking hours. \"I don't know. I think it'd be kind of... sexy. A bit of bush above your, you know.\" His eyes drifted to her lower abdomen. \"It's whatever you want. I'm just saying I don't think I'd mind it. Anyway, I'm going to go shower.\"\n\nSarah waited for him to shut the door and for the water to start running before turning toward the standing mirror in the bedroom. The girl that stared back at her still felt like a stranger sometimes, even over half a decade later. Carefully styled and maintained dirty blonde hair. Intricately applied makeup. Tight jeans and a simple but fashionable top. A vision of preppy beauty.\n\nShe sighed, suddenly conscious of not just her shaved mound but arms and armpits. She doubted Danny had any idea the memories he dredged up with his comments. How could he? He also had no clue what he was asking for saying he wouldn't mind if she stopped shaving. Her hair grew so fast and so thick. She knew the type of reaction body hair like hers got. She knew all too well. With another, more resigned sigh, she turned away from the mirror and went to find a pair of shoes that matched her outfit.\n\nMeanwhile, Danny, his head full of exactly what he was asking for when he suggested his girlfriend stop shaving, frantically stroked his hard prick under the warm water of the shower. In his fantasy, he pictured the normally preppy blonde with jeans low on her hips and curls of hair peeking out from the waist. He imagined her smiling mischievously and reaching down to unsnap the button and lower the zipper. She wasn't wearing any panties and more and more of her bush came into view every second, bringing a rush of pleasure from his brain to his shaft. He had no idea what her bush actually looked like, having never seen a centimeter of hair below her neck, but he used the pictures he found online while doing some \"research\" as reference. Conjuring up the memories of his favorite one.\n\n\"Fuck!\" he gasped. A shot of precum fired from his tip and washed down the drain. The pumping of his fist grew more rapid, and he let out a long and low groan.\n\nUp until about two months ago, Danny never knew he harbored some sort of secret fetish for hairy girls. Sure, he remembered seeing a picture or two of girls with a full bush when he was younger, but at that time that never really did anything for him. And in a way, it still didn't. Not exactly, anyway. Things changed when he attended a music festival with Sarah, who got tickets comped to her as part of a photography gig. They spent most of their time roaming the grounds together, her snapping photos with her DSLR and him just people watching. But at one point, she moved closer to the stage for some pics while he hung around near the back. That's when he saw her.\n\nShe wasn't that different from a lot of the other girls at the festival but something about her extreme hippie vibe caught Danny's attention. Her dark hair was wild with flowers tied into the locks. Her top was miniscule, her bountiful breasts nearly spilling out of it. And her shorts hung loose on her hips. However, nothing about the first two points captivated him the most. He always preferred blondes to brunettes and never really cared too much about breast-size. What did draw his eye, however, were the shorts. More specifically the wisps of dark hair sticking out from the top. Danny watched her sway to the music, the movement causing her shorts to periodically drop lower and lower, exposing more and more of her sparse but wide patch of pubic hair. By the time the bottoms hooked on her hips, half her mound was out in the open, but she seemed not to care. She even smiled and gave him a wink when she caught his gaze.\n\nHe had looked away after that and wandered off to find Sarah, but the sight had mesmerized him, and if the situation in his pants was any indication, aroused him greatly. She was the definition of a free spirit. So unlike the girls he dated and that interested him. Later that night, back at his apartment, after saying goodbye to his girlfriend, who was understandably too exhausted to fool around, he kept thinking back to her and ended up doing some online \"research.\" He wanted to understand this newfound interest -- and get himself off in the process.\n\nHis research didn't last long that night, but three weeks, countless pictures and multiple long, drawn out jerk off sessions later, Danny came to a few conclusions. Yes, he found a girl with pubic hair hot. However, it wasn't just a girl with a bush that did it. He really enjoyed when she was almost showing it off, specifically from the top. He didn't like an unchecked bush spilling out of the sides. Nor did he like leg hair. However, surprised again, he also discovered he really enjoyed arm hair. Not underarm necessarily but on the arms themselves. That was an unusual one for him. It took a while to get to this full understanding of his uncovered fetish, but it all clicked into place when he found... her.\n\nDuring one of his many nights of \"relief\" he found a picture that exemplified all his newfound interests in one single image. She reminded him a lot of Sarah, and he told himself that's what drew him to her. She had the same hair, like forest ash, and more-or-less the same build, but everything about her vibe was the opposite of his girlfriend. Like a topsy turvy reflection. Where Sarah was polished and put together, whoever this was exuded that type of untethered spirit that the girl at the festival possessed. Her head was turned away from the camera, keeping her face hidden from view, but her dirty blonde hair was wild and messy with sporadic braids and dreads. She was also completely naked.\n\nHer arms were crossed underneath her modest breasts and on her forearms, caught in the glint of the light, was a thick layer of long fine blonde hair. Danny never expected the erection that came from that sight but something about it drove him wild. He wondered what it would be like to run his hands across those arms and then lower, past the pale plane of her flat stomach, through the valley of her bellybutton, down to the other sight that made his prick throb and drip. Between her legs, where a thick bush of sandy blonde hair grew. The hair appeared dense but maintained, contained to her mound and not extending to her thighs. The style of it though, coupled with everything else about her, had him in a masturbation frenzy.\n\nDanny constantly returned to that image and used it to inform what he imagined Sarah's bush would look like, maybe even the rest of her if she ever let herself get to that point. Just like he did now while frantically jerking his cock.\n\nHis fantasy continued with Sarah kneeling and sitting on her haunches in front of him. She spread her thighs enough to show off her healthy bush of pubes and pumped his cock with her hands, the expanse of hair on her arms visible. Her emerald eyes met his and a smile spread across her lips. \"Cover my pubes with your cum,\" he imagined her saying and leaning back for him.\n\nThat did it.\n\nWith a stifled groan, Danny came, hosing the porcelain of the tub down with splashes of white that were quickly washed away.\n\nLetting out a sigh, he came back into focus. It was a hot fantasy and even though he took a big step in just suggesting it to Sarah a few minutes ago, he knew that it would remain just a fantasy. He loved his girlfriend, but she wasn't her. She never would be. And really, that was okay. In the clarity that comes post-ejaculation, he even felt bad for bringing it up with her. Finishing his shower, he stepped back out of the bathroom intending to apologize but Sarah was already gone.\n\n--------------------\n\n\"Wait.\" Sarah grabbed hold of Danny's wandering hand, stopping its journey from her breast to her shorts. \"Maybe... maybe I can just go down on you?\"\n\nOver a week later, they sat on the couch in her apartment. They were right in the middle of making out like two lovestruck teens -- though even teenagers would probably consider the heavy smacking of lips and deep gasps of breaths coming from the couple a bit much -- when Sarah had stopped him from going any further.\n\nA hellish week of work had kept them busy enough that neither had seen each other since that day in the apartment. With things at last calming down in their professional lives, they'd made it a point to have a date night. Ideally for Danny, more of a third-date night rather than a first. Long, tiring hours had left him with little time or energy for personal research, and after making dinner and bringing over some wine, he had hoped to end the date with some much-needed dessert. And while he wasn't one to complain about getting treated, he usually preferred dessert when shared.\n\n\"Uh, sorry. I thought after so long maybe you would also want to...\" Danny paused. He wasn't the paranoid type, but an unease hit him, and Sarah's reluctance to fool around stirred some concern. \"Is everything okay? Did I upset you or something?\"\n\n\"Wow, you're the first guy in history to think a blowjob means something's wrong,\" she laughed, shifting on the couch and running a hand through her hair. \"It's just that it's been a busy week and, well, I didn't have any time to...\" She gestured down to her crotch. \"...you know.\"\n\nHe did not know.\n\n\"I mean, I didn't have time to masturbate either, but I don't get why that would--\"\n\n\"Oh my god,\" she interrupted with a roll of her eyes. \"Shave. I didn't have time to shave. Nothing except my legs anyway.\" Sarah shrunk into herself, missing his astonished expression and the twitch of his already half-hard cock. \"I just didn't want you to see.\"\n\n\"I really don't mind,\" he said, trying to tread carefully. After their last conversation, Danny intended to never bring up the subject again, but the hint of her having any sort of hair down there emptied his mind completely and sent all that energy somewhere else entirely. \"In fact, it kind of makes me... even more interested.\"\n\n\"What?\" She turned a skeptical expression his way, but despite her incredulity, he stared back at her like a hungry dog, eyes burning with desire. \"You can't be serious.\"\n\n\"Absolutely serious,\" he said. His gaze was unwavering, and his curiosity and lust had precum leaking into his boxers. He had all but given up on the possibility of ever seeing his girlfriend with any sort of body hair on her but with the opportunity suddenly so close, he couldn't let it slip away, caution be damned. Working to keep his voice steady, he took his shot. \"Can I see?\"\n\nSarah hesitated, her earlier resolve weakened by her boyfriend's apparent interest. He seemed genuine, eager even. Could he actually... She opened her mouth, closed it again, and then shook her head, not in refusal but more in denial. \"You're just going to get all weirded out.\"\n\n\"Sarah. I'm telling you,\" Seeing his chance moving out of his grasp, Danny reached out... and grabbed his girlfriend's hand, placing it on his erection. It throbbed under her touch, \"I won't.\"\n\nSarah's wide eyes locked with his. An electric charge surged from her hand to his crotch, up to their connected gaze and over and down again in a loop of sexual energy that crumbled away the last of her reluctance. Though her skepticism remained. With a forced exasperated sigh, she stood up in front of him and unbuttoned her shorts. \"Fine, but don't say I didn't warn you. I usually shave daily so, like, if you freak out, it's on you.\"\n\nDanny instantly sat up in his seat, his posture becoming as erect as his cock. It was actually going to happen. His fantasy was about to come true. Part of him feared this was all just a dream, but so long as he didn't wake up before Sarah dropped her pants, he was okay with that. A wet dream well worth it, just for this glimpse. He watched in rapt arousal as she unzipped her shorts and in one smooth motion, pushed them and her panties down her legs. \"Holy shit.\"\n\nSarah stood in front of him, naked from the waist down. He'd seen her bottomless many times before throughout the course of their relationship, but never like this. Never so... untamed. He expected a decent stubble, at most a sparse expanse of fine hair, but what grew between Sarah's legs almost made his cock erupt in his pants. A decent bush of half-inch long hair covered his girlfriend's mound, extending to just below her panty line and down to her lips. The hair was a touch darker in color than the hair on her head, closer to her roots and eyebrows, but still steps away from verging into brown. At only a few days in, his normally immaculately bare girlfriend sported a bush that would put most other girls to shame.\n\n\"This was only a week?\"\n\nAlready more nervous and skittish than a squirrel, Sarah missed Danny's excitement and took her boyfriend's shock and disbelief as a negative response. She told herself that she anticipated this sort of reaction, but even having prepared for it, she still feared it, and a pang of hurt hit her in the chest. She felt embarrassed, ashamed, and hastily started to pull her shorts and panties back up. \"I told you. I knew you'd get all--\"\n\nDanny's hand shot forward and cupped her mound, his fingers running through her bush and finding her sex. She gasped, and a moan escaped her lips. Her hands froze in their ascent. The stiffness of her body evaporated under his continued touch and when she tilted her head back down, she finally saw the way he stared at her... with fascination, interest, and arousal. His fingers moved through her pubic hair, tugging at them gently, marveling at its length.\n\n\"God, this is so fucking hot.\"\n\n\"R-really?\" she squeaked out. Danny's lust over this part of her, a part of her she constantly hid, was turning her on, and her pussy responded to her boyfriend's enthusiasm in kind. She let out a groan when his fingers found her clit, and she pushed her shorts down far enough to where they and her panties fell to the floor in a heap. \"You... like it?\"\n\n\"Fuck yes,\" he said, simultaneously stimulating his girlfriend and reveling in the feel of her coarse hair between his fingers. He'd seen so many pictures of hair like this over the last couple months but never touched it before, never seen it up close. Now that he had, he couldn't ever imagine enjoying a bare pussy again. \"I can't believe you grew this much of it so quickly.\"\n\n\"This is nothing,\" she admitted, and he turned a pair of wide eyes up to her. She bit her bottom lip and a shy smile spread across her face. \"I grow hair really fast. It's why I shave so often. It gets much longer.\"\n\nA second of silence stretched between them and then Danny grabbed her by the waist and swung her down and to the side, laying her on the couch and following her momentum to position himself between her legs. Breathing heavily, he fumbled with his belt buckle until she reached down to help him, the two of them hastily unzipping him and freeing his throbbing erection. She lined him up with her hole and he slammed himself forward, burying himself all the way into her. A synchronized moan filled the room, and both he and Sarah arched their backs to grind their hips together.\n\nThey sensation wasn't unfamiliar to either of them, but the reason for their lust, the subtle but unmistakable new element of their pubic hair mingled together, intensified the usual feeling of his cock filling her up and drove them both to new heights. Gazing back down at his girlfriend's face and then lower to his shaft lost in the furry forest of her pussy, Danny jerked back and then hammered forward again. Cries of passion and arousal filled the room as they fucked hard and fast, Danny pumping his hips at a jackhammer pace.\n\n\"I had no idea. Ungh fuck! It's so hot.\"\n\n\"Mmmm... I'm... I'm really hairy,\" Sarah said, losing herself in the admission of her long-held shame, or at least, what she thought she should be ashamed of. The frenzy of her boyfriend's thrusts, however, and the intense pleasure in their almost primal fucking, made a lot of those notions about her body break away and start to fade. She closed her eyes and surrendered herself to her boyfriend's lust, to her own building ecstasy. \"Ah ah ah! It grows so fast and so thick. I have to shave so much. My-my legs. My bush. My ah!-arms.\"\n\nHer words further empowered Danny's frantic fucking. He felt harder than he ever had before, and his girlfriend's soaking wet, forest-covered mound accepted him with ease, welcoming his fat, thick cock deep inside of her. His mind flashed with images of her in various hairy states as she described herself to him, as she told him about this secret, hidden trait of hers. Then something clicked and his lust-drunk eyes met with hers. \"You said you only had time to shave your legs.\"\n\nSarah nodded up at him, and with an energized growl he grabbed her long-sleeved tee by the hem and yanked it off of her. If he was riding high before, he was now downright euphoric. His eyes immediately fell on Sarah's forearms, and his cock pulsed inside of her when he saw the amount of hair covering her from wrist to lower triceps. He groaned, his pumping hitting a rapid and aggressive pace, and ran his hands up and down her arms, caressing the light hairs with his fingers. Sarah whined and moaned below him, her small breasts bouncing in her bra from his hard thrusts.\n\n\"Fuck, there's so much of it,\" he panted. The warmth of her pussy brought him almost as much pleasure as the sight of her hairy body gyrating and grinding into him. But there was still more to see. With a hungry growl, he grabbed her wrists in one hand and lifted both her arms above her head. The patch of hair under her arms nearly sent him careening over the edge. Like the rest of her, Sarah's underarms featured slightly darker hair than on her head and came in thick and dense, a forest of blonde curls. \"Ungh! Fuck! Jesus! Your hairy body makes me so fucking hot. I fucking love it. Your underarms. Your forearms. Ungh, that sexy fucking bush.\"",
        "\"I can, oh god, I can let it keep growing,\" Sarah gasped, her mouth hanging open and breath coming hot and heavy. The feeling of Danny's cock plunging inside of her, the passion and lust in his every thrust and behind his every word, sent her into a mind-bendingly wild and mad spin of twisted eroticism. She couldn't believe his reaction to her body, how much he enjoyed seeing the hair covering so much of it. But he wasn't the only one enjoying their kinky coupling. She was lost in pleasure as well, arms above her head, underarms uncovered, and well on her way to a powerful and extreme climax. One of her legs hung off the couch and the other wrapped itself around her boyfriend's waist, following the motions of his pistoning hips. \"Would you, mmmm! would you like that? For me to become your hairy whore? A furry little fuckslut for you? Unnnghh!\"\n\n\"Fuck yes!\" Danny grunted in response. He was so close. The sight of Sarah's body on display and stretched out in front of him had him straining for release but the things she was saying, the kinky and perverted words coming from his normally preppy girlfriend's mouth, made him want to fuck her forever and cum and cum and cum again. \"I want your bush spilling out the top of your panties. I want you to only wear short-sleeved shirts so everyone can see all the peach fuzz covering your forearms. God, you're so hot like this. So fucking hot. I never want you to go back to being clean shaven ever again. Oh fuck! Unh! Fuck Fuck FUCK!\"\n\nWith a roar, Danny exploded, his cock erupting like a volcano. Sarah came at the same time, letting out a fierce scream of her own, her clenching pussy milking his pulsating cock as blast after blast of sticky cream flooded her spasming cunt. Their mutual orgasm lasted for what felt like an eternity, both their bodies twitching and jerking until at last Danny emptied himself fully and Sarah came down from her seemingly impossible high. She collapsed back onto the couch, and he slumped down onto her, the feeling of her pubes making his cock twitch one final time. They fell asleep like that, both sexually spent and mentally fried.\n\n--------------------\n\nThe next morning, Danny awoke with a start. His memories from last night danced between dreams and reality, but a glance at his naked body, and the post-coitus state thereof, more or less confirmed to him it was the latter. However, he wasn't sure if he was happy about that or distraught. At some point in the middle of the night, he and Sarah must have moved from the couch to the bedroom, because that's where he found himself. In Sarah's bed. Alone.\n\nPanic hit him and his mind raced with all the things he said, everything that happened the previous night. Their perverted dirty talk of wanting her to become \"a furry little fuckslut.\" Normally, the phrase would have had his half-hard morning wood go to full stiffness, but Sarah's absence worried him. Had he scared her off? Freaked her out? He sat up in bed and reached for his phone, intent on calling her and apologizing in case she had run off after waking up before him, but then he heard the shower turn off and he exhaled a breath of relief. She wasn't gone. That was at least a good sign. How she felt, well, that part was still to be seen.\n\nHe turned toward the bathroom at the sound of the door opening. Sarah emerged with a towel wrapped around her midsection, hiding the state of her mound from view. However, both her arms were above her head fussing with her messy pile of pinned up hair, leaving her underarms exposed. Her freshly shaved, bare underarms.\n\nDanny's heart sank. \"Hey, about last night...\"\n\n\"Mmmm,\" Sarah hummed and made her way to her dresser. Her back to him, she dropped her towel and squirted some lotion into her palm, rubbing it across her arms and legs. \"Yeah. That was pretty--\"\n\n\"I'm really sor--\"\n\n\"Wow.\"\n\n\"--ry. Wait, wow?\"\n\n\"Yeah. Very wow.\" She turned toward him, confusion on her face. \"Why are you sorry?\"\n\n\"I thought you...\" Danny's eyes drifted down from her face, past her breasts and stomach, to the healthy bush between her legs. \"...shaved?\"\n\n\"Oh.\" Sarah followed his gaze, looking down at the mass of hair on her mound. She reached down and ran her hand through the soft fur there and the bare skin around her lips and thighs. \"Just some trimming. Cleaning up some areas so it's not full jungle madness down there. And,\" she lifted one arm up, glancing at her smooth pits, \"I shaved my underarms. I've never been super comfortable with hairy pits. Maybe every now and then.\" She dropped her arm and smiled at him. \"I hope that's all okay?\"\n\n\"Okay? It's amazing. You're amazing,\" Danny said with relieved appreciation. He held out a hand and she sauntered toward him, stopping at the very edge of the bed and placing her palm in his. His eyes took in her still furry forearms, and he raced his fingers across them before returning to her hand. Leaning forward, he placed a kiss on her stomach, and he noticed a stretch of thinner, lighter hairs leading from below her belly button to her bush. She really was hairy. He kissed lower and lower again, and then buried his face into her pubes with a moan. One hand sinking into her fuzz, he licked at her slit, making her groan. \"God, I can't wait to see how much hairier you get.\"\n\n\"I may...\" she gasped as he found her clit. \"I may be able to help with that actually. But first... finish licking my hairy snatch. Mmmmm!\" Sarah's fingers dug into Danny's hair as he ran his digits all through her lower strands and sent his tongue all across her lips, inside and out. He explored her depths and swirled circles around her clit before licking right onto the hard nub. Her pubes tickled his nose and brushed across his features. Sarah moaned and her thighs trembled. For so long she kept this part of her sealed away, shoving that hairy girl behind a locked door, but if the sounds of his oral pleasure was any indication, Danny seemed to prefer her -- and in this moment, she could finally admit, so did she. Her breaths came short and fast, Danny's licking and sucking making her wetter and wetter. \"Oh fuck, oh god. Mmm. Mmhmmm. Unh fuck. Oh yes. Fuck yes yes YES!\"\n\nSarah came hard, almost collapsing onto the floor, but Danny wrapped his arm around her, holding her up and helping her lower to her knees onto the mattress. Rising to his own knees, he kissed her deeply.\n\n\"Okay,\" she said after taking a few second to recuperate. \"I need to show you something.\" Sarah got off the bed and walked over to her bookshelf, opening a small box, rifling through some things, and then pulling out a small flash drive. She went to her computer and turned on the screen, then slipped the drive in. Danny got up, his erection bobbing in front of him, and walked over to her. She was clicking on some files and then an image popped up, and he nearly passed out from shock.\n\nRight there on Sarah's computer was the image of the girl he had been fantasizing about for weeks.\n\n\"Very funny,\" he said, cheeks burning red with embarrassment. \"I guess you caught me. Did you look through my phone?\"\n\n\"Huh?\" Sarah glanced back at him. \"Your phone?\"\n\n\"Yeah. I'm really sorry, okay? To be fair, I only found her so hot cause she kind of resembles you.\"\n\nSarah stared at her boyfriend, looked back at the screen, and then back at him. Her eyes danced and searched as through trying to find exactly what she seemed to be missing. \"What are you talking about?\"\n\nRolling his own eyes, Danny marched to his phone, grabbed it, and pulled up the image of the girl before turning the screen toward Sarah. She looked at it and grew even more confused, blinking and shaking her head. She then turned to the laptop, tapped the keyboard twice, and another image came up. Glancing back and forth, Danny realized the previous image wasn't the one he thought. This one was. The other must have been from the same set. But how did his girlfriend have these images? Did she take them?\n\n\"Do you... know her?\"\n\n\"Uh, yeah,\" she said and tapped the keyboard again. \"I'd say I do.\"\n\nDanny's phone fell from his hand. There on the screen was the mystery girl, except this time, she was facing the camera. The thick bush, the dense hair on her arms, the braids and dreads were all the girl he had fantasized about. But the face, the face was Sarah's.\n\n\"No way,\" he said, his mind reeling with disbelief. This whole time. The entire time he'd been thinking about this girl and using her as a basis for his fantasies about Sarah and what she'd look like if she'd let herself go a little more natural, it actually was Sarah. It seemed impossible, like something out of a movie. Yet the proof was right there on the screen. \"That's you?\"\n\n\"Yeah. How I used to be,\" Sarah said, a hint of sadness in her voice. \"Back in college, I was, well, very different.\" She gave a little laugh and started to flip through the images. \"As you can see.\" Each picture caused Danny's cock to stir more and more. A close up of Sarah's smiling face, her hand playing with her braid and her hairy forearm right near her cheek. An image of her midsection, hands cupping her breasts and forearms framing her body, bush visible below. A straight on shot of her mound, her thick curls extending upward until they grew continually lighter and sparser until rising out of frame. By the last one, he was rock hard.\n\n\"I took these myself, intending them to be some artistic shots. But when a guy I liked found them... he was grossed out by how hairy I was. He shared them around to his friends and, well, you can imagine how that went. After that I reinvented myself. Started to shave daily, dress differently. I was ashamed of my natural self. Until now I guess.\"\n\n\"That guy was an idiot. And an asshole,\" Danny said, the precum dripping from his tip adding emphasis to his words. \"You look so fucking hot like this. You have no idea how many times I jerked off to--\"\n\n\"Yes, about that,\" Sarah interrupted, arching her eyebrow. \"Why do you have one of my pictures on your phone? And what was that about jerking off to it?\"\n\n\"Uh... yeah... well...\" It was Danny's turn to glance away awkwardly, but after a deep sigh he looked back at her, thankful for the playful smile on his girlfriend's lips. \"So, after figuring out I was kind of, you know, into hairy girls, I found that picture online and it just... well, drove me wild.\" Sarah's eyebrow rose even higher, and he quickly continued. \"I swear, I mainly used her to help me picture what you'd look like! I'd never seen you with any hair whatsoever and she just looked so much like you. I can't believe it actually is you. Really, I've just been masturbating to you this whole time.\"\n\n\"Uh-huh. I should probably be more upset with you.\" Sarah's gaze drifted to his still hard cock, and she reached forward and grasped his shaft in her hand, guiding him closer to her. \"But I'm actually kind of flattered. Lucky for you I'm as kinky as you are.\" She casually stroked him, bringing her other hand up so both her forearms were in view while she leisurely beat him off. The effect heightened Danny's pleasure, the sight of her peach fuzz making him throb. \"Just think, soon you'll get the real thing. But for now, I want you to cum while looking at my hairiest self.\" Encircling the base of his cock with both hands, Sarah leaned forward, opened her mouth, and took him inside.\n\nDanny groaned at his girlfriend's warm wet mouth engulfing his prick. She bobbed back and forth, taking his length deeper and deeper, sucking him off with rhythmic fervor. She had always been so good at this, but this time, there was a new kink in the chain, not just the difference in her body, but the visions of her true self that she just gave him access to. He scrolled back through a few of the images, each one bringing a pulse of pleasure to his cock, especially the photo that first emboldened his fetish. Eventually he landed on his favorite, focusing on the erotic image and placing a hand on Sarah's head to guide her face faster onto his dick.\n\nSarah's eyes darted to the screen, and she smiled around Danny's prick when she saw his choice. Closing her lips around him again, she focused back on the spit-slick pole sliding in and out of her mouth and increased the pace of her sucking. The wet slk slk slk sounds of her mouth joined her boyfriend's grunts and growls of delight. The chosen image showed her from waist to hips. Her forearms came in at an angle from the top of the picture, her hands spread out and framing her mound, centered in the image. The high-quality close-up perfectly highlighted the hair on her body: the fine long coat on her forearms, the sparse light strands under her navel leading to her mound, and of course the dense fur of her healthy bush.\n\nDanny released a long, low groan as she pistoned her face into him. His hand stroked her hair, played with her thick locks, and his eyes stayed locked onto the image of her on the screen. Sarah's breaths came faster through her nose. She avoided taking him into her throat, which would have slowed her down, and instead focused on getting as much of him in and out of her mouth as possible as fast as possible. A flurry of \"mmph mmph mmph\" escaped her lips and Danny began bucking into her thrusts. She could tell her was close, and right before he popped, she jerked her face away, causing him to break from the computer and turn to look at her.\n\n\"Hose me down with your cum,\" she said, slouching down in her chair and pushing her hips forward. Danny touched his cock to aim it and instantly came, thick heavy streams launching out of his prick and landing in Sarah's bush, perfectly framed by her hands. A few ropes landed on her forearms, one on her fuzzy lower abs, but the majority of his copious load soaked her pubes. She smiled when he was finished, rubbing a bit of it in. \"And I just showered.\"\n\nHe laughed between pants, having to lean back onto her desk to stay upright. Sarah looked at the image on her computer screen behind him and then down at her cum covered pubes and hairy forearms, letting out a contented hum. Then she looked up at him and said, \"Get my camera.\"\n\n--------------------\n\nA few months later, a tipsy Sarah and Danny grunted in unison in the bedroom of Sarah's apartment. They'd just gotten back from the very successful premiere of Sarah's art show, an exhibition of photos she took of natural girls, featuring more than a few shots of the artist herself. Blown up and stylistic photos of underarms, bushes, and other body parts lined the gallery walls. A treasure trove of the type of women that made Danny hard. Yet the images that drew his eye the most were of Sarah. They were even hotter than the ones from before. Her in also sorts of sensual poses showing off the thick hair on her forearms and mound. Even for these she kept herself shaved in the thighs and bare in the armpits. Her own unique look and the variety of other women made it obvious that there wasn't a binary in hairiness, that natural could be fashionable.\n\nHe felt both immensely proud of his girlfriend and intensely aroused.\n\nOnce they had gotten back to the apartment, they were all over each other. Even though Sarah's body was on display for all to see at the show, it didn't make Danny jealous. If anything, it turned him on a bit. It was like that touch of exhibitionism, the eroticism in showing off her body hair. Which she also did in what she wore, another reason he found it difficult to contain himself and immediately started heavily, deeply, and passionately kissing her the second they got inside. The crop top and shawl she wore not only left her arms uncovered but her shorts made it so that anyone that paid close enough attention could see the sparse blonde hairs below her belly button that got thicker, darker, and denser the closer it got to her waistband.\n\nHe found the whole thing intoxicatingly lustful. But nothing compared to her riding naked on top of him, every inch of her body -- and hair -- visible and in the open.\n\nOver the course of the last few months, Sarah had completely transformed, reverting to the person she used to keep hidden and locked away. Bouncing wildly as she pumped her hips up and down on her boyfriend, the hair on her head was messier, braided and curled all over. Her pressing her hands to his stomach for stability kept her forearms right in his line of sight, the hair on them longer and denser and running up to her triceps. And of course, her bush, which extended just past her panty line, featured a mass of maintained blonde hair that thinned and grew scarcer as it ran up her lower abs. It was the hairiest she'd ever been -- and the happiest.\n\nWhich went doubly so for Danny, who frantically pumped his hips off the bed to meet Sarah's thrusts with his.\n\n\"Unh Unh fuck! Fuck my hairy pussy,\" Sarah panted, her enjoyment over their dirty talk only having grown in conjunction with her body hair. \"I love being you little fur-covered fuckslut, oh fuck, and how much you love my, ungh! furry fucking cunt!\" Danny only growled in response, throwing out acknowledgements when appropriate but beyond happy to let his girlfriend lead the filthy convo. \"Fuck, cum for me. Blow your load into my hairy pussy.\" The pace of their thrusts reached a crescendo, both of them reduced to \"ahs\" and \"unhs\" until with a loud series of unintelligible sounds, they both came and then collapsed, Danny's twitching cock leaking the final spurts of his load into Sarah's cum-filled and hairy snatch.\n\n\"I'm going to go shower,\" Sarah said with a gratified sigh. She kissed her boyfriend on the cheek and then rolled herself off the creaking bed, heading toward the bathroom. Looking back, she saw Danny get up and reach for his underwear. Her eyes drifted down his body, toward his softening cock extending out from his own patch of coarse and much-more-wild hair. He was in the process of pulling his boxers up his legs when she grinned at him and said, \"Have you ever considered shaving it all off?\""
    ],
    "authorname": "writer4hire69",
    "tags": [
        "hairy",
        "girlfriend",
        "body hair",
        "hair",
        "fetish",
        "bush",
        "forearms"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/a-hairy-situation-1"
}