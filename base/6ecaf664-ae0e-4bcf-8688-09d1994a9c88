{
    "title": "Three Square Meals Ch. 106",
    "pages": [
        "John reached for the button to open the Ready Room door leading to the Command Deck. \n\n*Hold on a second,* Alyssa warned him. *Jehanna's interviewing Irillith on the Bridge. You can go in, but just stay quiet.*\n\n*Thanks for the head's up,* he said, glancing at Lynette to warn her too. \n\nThe brunette looked startled, clearly not yet used to hearing her Matriarch's telepathic voice spring unbidden in her mind. \"Don't worry, she told me too,\" she said in a rush, slipping her arm through his.\n\nHe hit the button and the door slid open, Jehanna's dulcet voice drifting across the room, the reporter speaking with the smooth professional tone she used for interviews. \"...and if my sources are correct, you were solely responsible for the capture of the dreadnought, the Vengeance of Hera?\"\n\nJohn stepped through the door with Lynette at his side and glanced across the Bridge to the Int-Ops station. Irillith was wearing a suit of Paragon armour and the clear-crystal mask had been turned opaque to obscure her features. \n\n\"It was a team effort,\" the Maliri hacker replied modestly. \"But as the Intelligence-Operations Officer aboard the Invictus, it's my responsibility to find weakness in enemy data networks and... exploit them. I was fortunate that the Kintark left the Hera exposed, allowing me to reclaim it for the Federation.\"\n\n\"Well I know there's many thousands of brave Terran personnel sleeping safely in their beds tonight because of your incredible skills,\" Jehanna gushed, her voice full of gratitude. \"I've reviewed the after-action reports following the battle and you racked up an astonishing number of ship-kills when you turned the Hera's guns on the Kintark forces. By my reckoning you completely destroyed 11 battleships and 89 cruisers...\" \n\n\"A testimony to Terran Federation ship-building expertise,\" Irillith said magnanimously. \"The Hera is quite a ship... I was relieved that we were able to safely return the dreadnought to its rightful owners.\"\n\nJohn grinned and gave her a thumbs-up before stepping into the grav-tube, with Lynette following close behind. \n\n\"She's an incredible woman,\" the Fleet Admiral murmured as they descended to Deck Two. \"You're extremely lucky to have someone with her skillset on your crew.\"\n\n\"You'll get no argument from me there,\" John agreed, stepping out of the red anti-gravity field into the corridor. \"I almost take for granted that Irillith will be able to hijack enemy ships and turn them against their own side. She makes a huge difference balancing up the odds when we're outnumbered.\"\n\nLynette nodded, looking thoughtful. \"I must admit, I found it more than a little unsettling to discover that supposedly secure Terran Federation networks were anything but. I know Irillith's a close ally, but I can't help feeling that there's something fundamentally wrong with a non-Terran able to waltz through our highest security data without breaking a sweat.\"\n\n\"From what Irillith tells me, most Maliri hackers are extremely skilled. She takes their aptitude to impressive new levels, but the Terran network has been highly vulnerable to Maliri infiltration for centuries,\" John said, before smiling and glancing her way. \"It's fortunate that they're allies now, isn't it?\"\n\nShe looked up to meet met his friendly gaze, hesitating for a moment before admitting, \"I believe you when you tell me I can trust them, but after centuries of suspicion, it's... difficult... for me to put that much faith in an alien civilisation.\"\n\nJohn paused in the corridor, bringing her to a halt. \"I think I've got a good way of explaining my relationship to the Maliri, so you can understand why I place so much faith in them.\" Looking into her hazel eyes, he continued, \"Do you trust me?\"\n\nLynette nodded, replying without pause. \"Yes, with my life.\"\n\n\"Good girl,\" he said, nodding his approval. \"I'm glad you feel that way, because that's true.\" Tilting his head to one side, he continued quietly, \"Now, think about how willing you are to co-operate with me, knowing that I've got your best interests at heart...\"\n\n\"Okay, that's easy to picture,\" she replied with a smile.\n\n\"Now multiply that tenfold,\" John said quietly. \"Every female Maliri feels that way just by looking at me... their whole species has been genetically modified to respond positively to the mere presence of a Progenitor.\"\n\nHer eyes widened in understanding. \"The House Matriarchs are all female... and they rule the Maliri...\"\n\n\"Yes, exactly,\" John replied, confirming her conclusion. \"Now do you see why you can trust them? Or at least trust them to be unflinchingly loyal to me?\"\n\n\"What would happen if...\" she winced. \"...something terrible happened to you?\"\n\n\"The Young Matriarchs lead five of the top seven houses and they're all fiercely loyal to Edraele, who runs the most powerful House. Their support alone would let her lead the Maliri unchallenged.\" He grimaced as he continued, \"I have no doubt that she'd be able to keep the other Matriarchs in line, but relations would certainly become strained. Edraele is an extremely capable leader, but there are centuries of mistrust and betrayals between the noble houses. I wouldn't envy her trying to maintain the alliance we've created.\"\n\n*Thank you for the vote of confidence,* Edraele said with a hint of amusement, which John could tell was forced. *Please try to avoid getting yourself killed, I think you underestimate what an unmitigated disaster that would be.*\n\n*We need to address that when I return to Genthalas,* John mused quietly. *Hope for the best but plan for the worst...* \n\n*It would be the prudent course of action,* Edraele agreed, but he could hear the distress in her voice at the thought of anything happening to him. *We've already discussed you getting better acquainted with Emandra Holaris in exchange for trade distribution rights on Holaris wines. I'll arrange that meeting for shortly after you return.*\n\nBefore he could reply, Lynette looked at him with a puzzled expression on her face. \"John, you mentioned before that the Maliri are designed to be a Thrall race for a Progenitor to use in their armies... But if they react to the presence of a Progenitor in the way you described, wouldn't they be useless in a battle with another Progenitor? They'd just stand around staring at him starry-eyed...\"\n\nJohn froze and his eyes widened in shock as something clicked in his mind. \"No... because I've claimed the Maliri,\" he replied in a hushed voice.\n\n*Where did that come from?!* Alyssa blurted out in surprise, feeling the powerful resonance behind his words.\n\nEdraele let out a soft gasp. *That's right! I can feel it in my bones...*\n\n\"Are you okay?\" Lynette asked, placing a hand on his arm and looking at him with concern.\n\nHe shook his head as if to clear it, then nodded. \"Yeah... but that was new, it must have been something I squeezed out of my Guide.\" Gazing off into the distance, he intoned, \"A Progenitor lays claim to a seed race to use as his Thralls... no other may dispute that ownership.\"\n\n*If the Maliri were 'unclaimed', does that mean Mael'nerak is definitely dead?* Alyssa asked quietly, relaying her telepathic query to everyone else too.\n\nJohn considered that for a moment. \"I suppose he'd have to be... unless there's a way of giving up ownership of a Thrall race.\" Anticipating Alyssa's next question, he added, \"Before you ask, I don't know if that's possible.\"\n\n\"So you 'own' the Maliri,\" Lynette marvelled, looking at him in awe. \"I just assumed you were their leader, but that statement implies something far deeper.\"\n\nHe nodded, his expression troubled. \"It does...\"\n\n*Truth be told, I've always felt that way,* Edraele admitted, her voice thoughtful and introspective. There was a brief pause and she continued, *My girls agree... this didn't come as a surprise to them either.*\n\n\"Have you claimed Terrans too?\" Lynette asked, a flurry of emotions crossing her face.\n\nJohn hesitated, then shook his head. \"No, I don't think so. From what we learnt from Nexus, Mael'nerak created humanity as an experiment, using the 'base template' for a thrall species. That's why Terrans look so similar to Maliri but have so many different skin tones and don't have pointed ears. Terrans haven't been genetically programmed to respond to Progenitors in the way a Thrall species has.\"\n\nShe laughed and said, \"I actually can't tell if I'm happy or sad that isn't the case...\" Her eyes suddenly got huge. \"Wait... a Progenitor created humanity?!\"\n\nHe clasped her hand and gave her a look of sympathy. \"Let's sit down in my room and I'll tell you everything else we've discovered so far. If you have any strong religious convictions... they might be in for a battering.\"\n\n***\n\nSakura did a last check of her weapons and bags to make sure she'd got everything, then turned to smile at Maria. \"Thank you for making me feel so welcome. I can't tell you how much the last two days have meant to me.\"\n\nThe Latina opened her arms to the Asian girl. \"Come here... you don't think I'm letting you leave without a hug, do you?\" \n\nSakura eagerly stepped into that embrace and let out a contented sigh. She turned slightly to whisper in Maria's ear, \"You were incredibly kind to do that for me... it was just like being with my mom again.\" \n\nMaria hesitated then said softly, \"I would have loved to have had another daughter. I mean no disrespect to Emiko's memory, but I'd be honoured if you'd think of me as an adoptive mother.\"\n\n\"Stop, you'll make me cry again,\" Sakura mumbled, squeezing her in return. \"I'd love that, thank you.\"\n\nGiving her a tender kiss on her cheek, Maria whispered, \"Stay safe, Angel.\"\n\nSakura nodded, not trusting herself to speak. She stepped away from the hug, then cleared her throat and darted a self-conscious smile at Calara. \"Sorry, I'm monopolising your mother.\"\n\nCalara patted her on the back. \"Sharing my Mom is the least I could do. After all your help with the wedding preparations, I'll be forever in your debt.\"\n\nMaria laughed and pulled her daughter into a hug. \"We'll make a girly-girl out of you yet, Stellar Cluster recipient, Commander Fernandez.\" Despite her jovial tone, there was no mistaking the undercurrent of pride in her voice.\n\nCalara smiled and returned the embrace. \"It was lovely to see you again, Mom.\"\n\n\"Next time, give me a bit of warning if you're going to be comatose for ten hours... I'll make sure I get plenty of sleep before I have to pull an all-nighter.\"\n\n\"I'm so sorry we worried you,\" Calara said with a wince. \"We were only supposed to sleep for four hours, but Alyssa ran into a few problems.\"\n\n\"Just as long as you're all safe, that's all that matters,\" her mother said, caressing her cheek. \"Please pass on my best wishes to John and the girls.\"\n\n\"Do you have any special messages for Dad?\" Calara asked, her eyebrow arching playfully. \"We should be seeing him in a couple of days.\"\n\n\"I wouldn't want to make you blush, Callie,\" Maria replied, not backing down from her daughter's teasing. \"But I'd appreciate it if you could tell him that I got his message and how it made all the difference; I can't tell him that plainly over monitored comms. Please could you also let him know that he's still my hero.\" She looked into her daughter's eyes and added, \"I know he'd love to hear that from you too...\"\n\n\"Mom, what're you up to?\" Calara asked, narrowing her eyes suspiciously.\n\n\"Why nothing, daughter dearest,\" Maria replied, patting her on the back. \"Be a good girl and do as Mommy asks...\"\n\nCalara rolled her eyes. \"Okay, will do.\"\n\nShe gathered up her bags and accompanied Sakura across the patio towards the landing pad. With a click of the remote in her pocket, the Raptor's loading ramp began to lower, welcoming the two girls back to its protective interior.\n\n\"Take care and stay in touch,\" Maria called out to them as they walked up the loading ramp. \"Love you!\"\n\n\"Love you, Mom,\" Calara replied with a cheery wave goodbye. Sakura hesitated until Calara gave her an encouraging smile. \"Go ahead, she wants you to say it.\"\n\n\"Goodbye... Mom... love you too,\" Sakura said with a shy smile.\n\nMaria rushed up the ramp to give her a final hug and a kiss, then backed away, brushing a hand at her eyes. \n\nCalara hit the button to close the loading ramp and they waved at Maria until it shut. \"Come on, let's head home.\"\n\nSakura looked at her with big brown eyes and asked softly, \"Are you sure you don't mind sharing your mother with me?\"\n\nThe Latina turned and wrapped her arms around the Asian girl. \"You already know the answer to that.\"\n\nLetting out a happy sigh, Sakura whispered, \"Thank you, little sister.\"\n\nCalara groaned, making a face as she said playfully, \"I knew I should have brought Dana instead! I can't believe Mom saddled me with another overprotective older sibling!\"\n\nSakura giggled and walked towards the grav-tube, saying over her shoulder, \"I always wanted a little sister... don't worry, I won't torment you too much.\"\n\nCalara watched her leave, the Asian girl flouncing out of the loading area with a spring in her step.\n\n*Well done, my love,* Alyssa said softly, her voice warm and appreciative. *Sakura's never been happier than she is right now.*\n\nCalara smiled and followed her fellow Lioness up to the gunship's cockpit. *I know just how she feels.* \n\n*Hurry home, I missed you,* Alyssa murmured, her loving telepathic caress sending a delightful shiver up Calara's spine.\n\n***\n\nAlyssa shook her head and frowned. \"No! The light-grey suit and the cornflower-blue shirt.\"\n\nJohn put the offending suit back and glanced at his selection of blue shirts. \"Erm... which one is cornflower-blue?\"\n\nHer heels clicked as she strutted over to him, then her slender fingers drifted along the cotton shirts until she paused on the fourth one in. \"There, that one's just perfect.\"\n\n\"Thanks, beautiful.\" He tugged on the trousers for the suit she'd picked out for him, then slipped on the shirt. \"And Dana's sure that there won't be any problems with the venue?\"\n\n\"As long as you don't leave the system, Faye will be perfectly fine. The signal from the pulse generator is more than strong enough,\" the blonde said soothingly. \"Just relax and have a great time, she's going to love it.\"\n\nLynette's merry laughter echoed around the walk-in wardrobe, the brunette leaning against the doorway. \"I saw you fearlessly face-down a 200-foot dragon, but you're getting nervous about going on a date with a pretty girl. I never would have believed it.\" \n\nJohn finished buttoning up his shirt and reached for some black shoes, until Alyssa shook her head and picked out a burgundy pair instead. \"I'm really fond of Faye so I want to make sure she has a great time, whereas Baledranax... not so much.\"\n\n\"Faye is a lot cuter,\" Lynette agreed with an affectionate smile.\n\nHe laced up his shoes, then slipped on his jacket. \"There, everything okay?\"\n\n\"Very handsome,\" Alyssa purred, her fingers deftly smoothing his collar into place. She glanced over towards the box by the door. \"Don't forget that...\"\n\nJohn leaned in to give her a quick kiss. \"Thanks for your help, I really appreciate it.\" He crouched down by the package that had been delivered earlier that morning and flipped through the contents until he found what he was looking for. Nodding with satisfaction, he sealed it inside the vacuum-formed container and slid the sturdy, light-weight cylinder into his jacket pocket. Rising to his feet, he smiled at Lynette and Alyssa as they followed him into the bedroom. \"What are you two ladies up to now?\"\n\n\"Just girls talk,\" Alyssa said, with a dismissive wave of her hand. \"You'd find it dreadfully dull.\"\n\n\"Fluffy kittens again?\" John asked with a raised eyebrow.\n\nShe let out a breathy sigh. \"They're just so adorable...\"\n\nHe turned to Lynette and looked her in the eyes. \"Don't let her torment you too much. If you need help, call for Faye, she'll send some Lionesses as backup.\"\n\n\"I think I'll be fine,\" the brunette said with a laugh. \"Have fun on your date.\"\n\nJohn waved goodbye and strode out of the bedroom towards Faye's quarters. He knocked politely and she opened the door a few seconds later, a shy self-conscious smile on her face. \n\n\"Wow... you look amazing!\" John gasped, gaping at her in astonishment.\n\nFaye's wild purple mane had been meticulously styled so that it artfully framed her face and cascaded over her shoulders, ending somewhere near her lower back. She was wearing a light touch of makeup that highlighted her lovely elfin features, making her look almost otherworldly in her natural beauty. Her petite figure was wrapped in a sunflower-yellow dress that ended just above the knee, the way it hugged her curves leaving him in no doubt just how alluring her shapely body was. The bright colour of the dress emphasised and complimented her exotic colouring, Faye's soft purple skin appearing rich and vibrant. Finally, she wore strappy yellow heels on her tiny feet, pushing her up another three inches.\n\nHer luminous eyes seemed to glow with joy as she saw his reaction. \"I'm so glad you like the dress! Rachel helped me pick it out especially!\"\n\n\"She has a real talent for showcasing a beautiful woman,\" John said appreciatively. \"I just hope we can still find time to talk between me fighting off all your admirers...\"\n\nFaye giggled and slipped her delicate hand into his. \"Don't worry, I'm all yours.\"\n\nHe led her towards the grav-tube. \"We'll have a short walk to the shuttle bay, I hope that's alright?\"\n\n\"I've been practicing wearing heels, I'll be fine,\" she replied, glancing down at her shoes. Giving him an impish smile, she added, \"Or I could just levitate all the way there... Which would you prefer?\"\n\n\"I think you'll be drawing quite enough attention as it is,\" John replied, eyeing her outfit appreciatively.\n\nShe blushed and squeezed his hand, then followed him out of the grav-tube on Deck Nine. Faye opened the airlock for them as they approached, so John was able to walk straight out into the Docking Bay without pause.\n\n\"So, where are you taking me?\" she asked, looking up at him with eager anticipation, as they entered the central corridor that ran through that particular arm of Olympus.\n\n\"That, young lady, is a secret,\" he replied, smiling when she groaned in frustration. \"I will tell you that we're heading down to Gravitus, but I'm sure you realised that with us taking a shuttle.\"\n\n\"This is so exciting!\" Faye exclaimed, quickening her pace, then turning around to look at him. \"Are first dates normally like this?\"\n\n\"I'm hardly an expert, but I believe they're supposed to be... The mystery of the unknown, getting to learn all about someone new and find out if there's a connection, the thrill of the chase,\" he said with a grin. \"Heady stuff...\"\n\nShe gave him a coy glance under her long eyelashes. \"So, who's chasing who?\"\n\n\"Oh, I'm definitely doing the chasing... you're far too pretty to have to chase any man,\" John said with a playful smile.\n\nFaye giggled and seemed to have an extra bounce in her stride as she strolled along beside him. Despite her sophisticated outfit, she walked with an almost irrepressible joy that made her seem innocent and adorable in equal measure. He noticed that she was already starting to draw attention, with service personnel doing a double-take as the couple passed, men's eyes drawn like magnets to the incredibly exotic beauty gliding through the station.\n\n\"Hmm, maybe I should have brought my sword,\" John said, glancing at a group of open-mouthed marines who were staring in awe at his petite companion.\n\nFaye shook her head. \"It's not just me, the last seventeen women we've passed have all given you lingering looks. You look really handsome in your suit!\"\n\nHe tipped an imaginary hat in her direction. \"I'm glad you approve.\"\n\nHer breath caught and Faye swooned, leaning into his arm. \"Oh my!\"",
        "John gave her a strange look, surprised by her reaction. \"Are you alright, Faye?\"\n\nShe blushed and nodded, darting a furtive glance in his direction. \"That's the first time you've done that with me.\" The purple sprite saw his confusion and blushed as she mimed tipping a hat. \"I've seen you do that nine times with Alyssa, but this was my first!\"\n\nHe laughed and put his arm around her shoulders. \"Well I guess that clinches it, we must be a couple now.\"\n\nFaye looked positively thrilled as she snuggled under his arm.\n\n***\n\nAlyssa traced a circle over Lynette's curved stomach as they lounged together on the bed, then let out a wistful sigh. \n\n\"What's the matter?\" the brunette asked with concern.\n\nThe teenager hesitated for a moment, cerulean eyes flicking to the older woman's face. \"I was just wishing that things had worked out differently; you'll understand why later this evening.\" She shrugged and gave her a flirtatious wink. \"I suppose I can be patient though, I'll get my way eventually...\"\n\nLynette carefully rolled onto her side so that she was facing Alyssa, one hand cradling her tummy full of cum. \"You're obviously referring to John encouraging me to start a relationship with Charles... but what do you mean about being patient?\"\n\nAlyssa watched her for a moment, obviously torn on how to respond.\n\n\"Please tell me,\" Lynette asked quietly. \"I can see it's important.\"\n\nSlowly shaking her head, the blonde replied, \"It's not that I'm keeping anything secret from you, I suppose I've just started to have a different perspective on things.\" When she saw the blank look of incomprehension on Lynette's face, she continued, \"Yesterday, John was telling Jehanna to start thinking like an immortal... and he was right; some things we take for granted look very different when you can live forever.\"\n\n\"Nope, you've still lost me,\" Lynette admitted with a helpless shrug.\n\n\"Okay, let me explain.\" Alyssa wriggled closer, a conspiratorial smile on her face as she placed her hand on the brunette's curved tummy. \"You know I'm one of John's Matriarchs, right? Well we all get off on the thought of beautiful women being bred by him. I was thinking before how hot you'd look carrying his baby, with a cute bump just like this...\"\n\nLynette's eyelashes fluttered and she let out a soft moan as the blonde stroked her. \n\nAlyssa grinned at her reaction, which quickly morphed into a frown of frustration, \"But John's keeping you at arm's length because he wants to 'do the right thing'.\" She rolled her eyes and grudgingly conceded, \"I suppose he does have a point... You and Charles are the same age, you're both career military, you'll be working closely together for years, and most importantly, you genuinely like each other. The two of you could settle down and have a lovely family together... I know you both regret sacrificing your personal lives for your careers.\" \n\n\"What did you mean by being patient though?\" the brunette asked, hanging on her every word.\n\n\"Well... Rachel healed Charles of any significant health issues, so she's effectively given him another couple of decades beyond his natural life span. John's abilities work differently though and are far more powerful; he's given you a... much younger body... and you're now in perfect health,\" Alyssa replied quietly. \"As long as you avoid any fatal accidents, it's highly likely that you'll outlive Charles, and then...\"\n\n\"You get your way eventually...\" Lynette murmured, her eyes widening. \n\n\"That's right,\" Alyssa agreed, meeting the brunette's astonished gaze. \"You can live a rich, full life as Fleet Admiral and loving wife to Charles... then later, if you choose to, you can retire in Maliri Space with us. John winds the clock back again...\" she circled Lynette's swollen belly with her fingertips. \"...then I get what I want.\" \n\nLynette was quiet for several minutes, emotions flicking across her face. \"Alyssa, I know Charles is one of John's closest friends... Did John keep me at a distance because he wanted me to be a... gift... for Charles?\"\n\nAlyssa immediately shook her head. \"No, I promise you that thought has never even crossed his mind.\" She cupped the brunette's cheek and continued softly, \"You've been around John quite a lot over the last few days. You must have seen how much he hates the idea of his Progenitor abilities manipulating us into doing anything we wouldn't normally want to do. He just wants to try and make you happy, while staying true to what he believes you would have wanted for your life before he started tampering with your mind.\"\n\nThe tension eased from Lynette's face and she smiled with relief. \"You're right... I've seen how much he struggles with the morality of his abilities. I do trust him and I know he's been trying hard not to betray that trust.\"\n\n\"Does that make it easier? Knowing you can have both lives?\" Alyssa asked softly. \"I've never really given much of a thought to having a career, so I find it hard to relate, but Jehanna's in a similar position. She'd love to retire with us and have a family, but she also really values her career as a reporter. I know John's encouraging her to effectively do both.\"\n\n\"It's definitely a different way of looking at things,\" Lynette replied, a thoughtful expression on her face. Her hazel eyes flickered with doubt for a moment and she continued, \"But is it fair to Charles? It almost feels like I'd be using him as a 'temporary husband', while I pursue my dream of being Fleet Admiral, with John as a backup plan lined up for later.\"\n\nAlyssa shrugged. \"It's all relative. In this case, temporary to an immortal is still a good sixty years as a Terran.\" Her hand followed Lynette's luscious curves and she murmured, \"Trust me, Charles is going to be absolutely thrilled at the prospect of riding your hot little body for the rest of his life...\"\n\nLynette blushed furiously, glancing down at the slender hand brazenly cupping her pert breast and caressing her erect nipple. \"I'm not with John or Charles at the moment,\" she whispered, her hazel eyes cautiously meeting those bright blue orbs.\n\n\"Which means you're all mine,\" the blonde purred, leaning closer and lightly brushing her lips against Lynette's. \"Have you ever been with another woman before?\"\n\nShaking her head, Lynette murmured, \"Never...\"\n\n\"Well, I am your Matriarch,\" Alyssa cooed, planting soft fluttering kisses down Lynette's slender throat. Those kisses reached her navel and the blonde briefly paused. \"It is my job to take care of you...\" She shifted on the bed, her questing lips delving lower. \"And you must be so horny after sucking down all that cum...\"\n\n\"Oh God...\" Lynette moaned, the blonde's sensual touch leaving her senses reeling.\n\n***\n\nJohn glanced out the window as the shuttle plunged through the blanket of clouds, the clear sky below giving him a panoramic view of Gravitus. The once-volcanic planet had been heavily terraformed centuries ago, transforming it into a verdant world full of lush plains and rolling oceans. Small sections of the planet had been left in their original form, with glowing magma flats surrounding Mount Mytikas, a colossal volcano that soared high into the stratosphere. The geological feature was so huge that it could be clearly seen from orbit, a fitting tribute to Gravitus' fiery past.\n\nFaye sat up higher in her aisle seat as she tried to peer across John through the window. \"Can I see?\" she asked, eyes sparkling with excitement.\n\nJohn gave her an accommodating smile. \"Sure, we can swap seats.\"\n\nShe grinned and shook her head. \"It's okay, you stay right there...\" Rising from her chair she pivoted and sat across his lap, her warm thigh brushing against his groin. Faye wriggled in place a little, looking into his eyes as she did so. \"Hang on, just let me get comfy...\"\n\nHe laughed and wrapped his arms around her tiny waist. \"Take your time, you're as light as a feather.\" His hands instinctively went to her svelte stomach, fingers brushing over the soft material of her yellow dress.\n\nFaye felt him thicken underneath her and she stifled a gasp. \"Are you thinking about... you know?\" she whispered, luminous eyes watching his face.\n\n\"I'm fairly sure that kind of conversation isn't first date material,\" John replied, smiling at the impish girl. \"I think we're supposed to be getting to know each other first.\"\n\n\"But I already know so much about you,\" she said softly, her fingers lightly tracing over the back of his hand and making his skin tingle.\n\nJohn brushed his thumb against hers. \"Yes, I suppose you do.\" He held her closer. \"So there's nothing you want to find out about me?\"\n\n\"Oh, I wouldn't say that...\" Faye said airily, before relaxing against him and turning to look out the window. \"There's so many beautiful things to see in the galaxy... Do you miss those days when you were a trader, when you had the freedom to stop and appreciate those wonders?\" \n\n\"What's life without someone to share it with?\" John asked quietly. \"My life's so much richer now with the girls in it... and you're very much a part of that too.\"\n\nShe blushed and bit her lower lip, then rested her head against his shoulder. \"Do you feel the same way about me as you do the other girls? Or is it different, knowing my... nature.\"\n\nJohn paused to consider her question for a long moment. \"Our relationship is different...\" When he felt her tense, he quickly added, \"But in a good way.\"\n\n\"How do you mean?\" she asked, shifting in his lap to watch him intently. \n\nHe looked down at her beautiful face and replied, \"I think we both know that if you were like the other girls, our relationship would have turned physical a long time ago. Because of the differences, I've had a chance to really enjoy your friendship first... and it's been a refreshing change.\"\n\nShe gave him a warm smile. \"I'm really glad you feel that way.\" Tilting her head to one side, she continued, \"I was wondering-\"\n\nA warning chime sounded throughout the cockpit cabin, followed a moment later by a man's professional voice. \"We are now landing at Mytikas skyport. I hope you have a pleasant stay on Gravitus.\"\n\n\"Hold that thought,\" John said with a smile, wrapping his arms tightly around her.\n\nThey could hear the faint roar of retro-thrusters through the reinforced hull and John felt a sinking feeling in his stomach as the shuttle slowed on its final approach to the landing pad. There was an unsettling thump when the small craft touched down, heavy vibrations shaking the passengers, the shuttle pilot lacking the consummate skill the girls possessed. A warning chime sounded again and the airlock door spiralled open, a faint smell of sulphur wafting into the cabin.\n\nJohn lifted Faye off his lap, setting her on her feet. \"Here we are then.\"\n\nShe turned to look at him as he stood, eyes sparkling as she slipped her hand into his. \"Have we landed at the volcano?!\"\n\n\"You'll see in a moment,\" he replied with a smile, leading her out of the shuttle. \n\nFaye gasped when she saw where they'd touched down, with Mytikas skyport overlooking the carefully directed magma flows that crept away from the active volcano. The force fields surrounding the platform dampened the scorching heat from the lava and kept out the worst of the acrid stink from the sulphur dioxide, letting people enjoy the exhilarating panoramic view, while sparing them from any environmental unpleasantness. \n\nShe skipped over to the balcony and gazed out over the magma fields. \"This place is breathtaking!\"\n\nHe walked over to join her, placing a protective hand on the small of her back. \"This is just a taster before the main event.\"\n\n\"Have you been here before?\" Faye asked, looking at him in fascination.\n\n\"I've been to Gravitus many times, but where I'm taking you next I've only visited once before,\" he replied, before gesturing towards a set of ramps leading into the skyport's squat terminal building. \"We'll need to catch a grav-train to get to our destination.\"\n\nThey walked hand-in-hand down the slopes leading into the building, crossing the quiet concourse as John followed the signs towards the grav-train platforms.\n\n\"This place is practically deserted!\" Faye exclaimed, glancing around. \"Where is everybody?\"\n\n\"The skyport was originally built for staff travelling to and from the Geo-thermal plant, but they shut it down when the new big fusion plant opened. Now the old plant has been converted into a tourist attraction, but it's a bit late in the day for school trips and too early for nightlife,\" John explained, guiding her down another set of ramps and across a platform. \"I thought it'd be a good time to visit... it's less likely we'll be recognised.\"\n\nFaye hopped into the waiting grav-train, then picked out a window seat, her eyes wide with anticipation. \"This is all so mysterious! I love this date so far!\"\n\nJohn gave her an indulgent smile as he sat down and less than a minute later, the grav-train started moving with a quiet hum. They raced out of the terminal, quickly picking up speed, the floating vehicle coasting silently above the elevated rails. \n\nFaye pressed herself up against the window so she could see where they were going, then gasped and pointed forwards, \"We're going underground!\"\n\nSure enough, the view from the windows darkened a minute later and the grav-train dropped below ground level, speeding along the rail with a soft hum. It was just a short journey until they arrived at the end of the featureless tunnel, the train doors opening with a quiet hiss. They walked out onto the long platform, which was adorned with a number of educational holo-panels, each one detailing the history of the geothermal station. \n\nJohn ignored them as he led Faye towards a glowing tunnel, but he could see her luminous eyes darting to each one, pupils vibrating as she surreptitiously speed-read the information. She caught him watching her and blushed, quickly looking away.\n\n\"Don't be embarrassed. You are who you are, it's nothing to be ashamed of,\" he said gently rubbing her shoulder.\n\nShe turned back to face him and said quietly, \"I just don't want to creep you out...\" Her elfin features twisted into a worried frown as she added, \"Seeing you react with revulsion would be too horrible to bear.\"\n\n\"I think we've had this conversation before,\" John said with an understanding smile. \"Remember the famous quote about advanced technology being indistinguishable from magic? Well, the psychic powers that the girls have is very similar to magic and I've never had a problem with anything they can do. You just have a kind of... tech magic.\"\n\nFaye put an arm around his waist and gave him a loving squeeze. \"You're just too awesome, did you know that?\"\n\n\"A redheaded friend of ours might have told me that once or twice,\" John replied, hugging her back. \"Now, take a look at this... it's one of the reasons I brought you here.\"\n\nThey had entered a curved tunnel while they were talking and Faye glanced up, her mouth dropping open in wonder. \"Oh wow!\"\n\nMolten lava flowed overhead in a glorious tapestry of red and orange, the tunnel roof protected from the infernal temperatures by powerful heat shields. The magma moved by at a languid pace, as majestically beautiful as it was deadly.\n\n\"It's incredible to think of all that above our heads,\" John murmured, marvelling at the amber hues. \"I remember the first time I saw it... I felt totally humbled by the awesome power of nature. It was terrifying and thrilling to know that I was just one step away from disaster; a breach in the tunnel and the lava would pour through, snuffing me out in an instant.\"\n\nFaye lowered her gaze and studied him curiously. \"And now? Do you still feel the same way?\"\n\nJohn froze as his mind started racing, imagining how he'd react to a sudden rupture in the ceiling. First, he'd set a hex-barrier in place to temporarily seal the breach, then channel glacial cold into the lava-flow to flash-freeze it, solidifying the magma into a protective barrier of igneous rock. It would take him just a couple of seconds to completely reseal the tunnel and short of being instantly killed by falling lava, he'd be able to regenerate any wounds he sustained, no matter how badly he got burned.\n\nHe looked down to meet Faye's gaze, a forlorn expression on his face. \"You're right. It's different now... I'm different.\" He glanced up at the lava again. \"And the galaxy feels smaller and a little bit less awe-inspiring because of it.\"\n\n\"Oh, John, I'm so sorry,\" Faye said, her voice full of remorse as she slipped her arms around him. \"I didn't mean to ruin this for you.\"\n\n\"I'm just being silly, don't worry,\" he said, putting on a brave smile. \"Oh, woe is me... I can survive a river of molten lava dropping on my head!\"\n\nShe smiled at his self-deprecating humour, then reached up to cup his face with her hand. \"We've all been so focused on the changes the girls have gone through, I think we've overlooked just how much you've changed too.\" Her purple thumb felt soft against his skin as she caressed him. \"Your life has been turned upside down in the last six months; it must be daunting to think how much you've been transformed by everything you've experienced.\"\n\nJohn closed his eyes and enjoyed her caring touch, feeling the heartfelt sympathy from the earnest young woman. When he opened his eyes again, he gave her a grateful smile. \"Thanks for being so understanding, Faye. I really appreciate it.\"\n\nThe purple sprite stood on tiptoe and gave him a tender kiss on the cheek. \"You're welcome.\"\n\n\"Let's keep going, there's somewhere else I wanted to show you,\" John said quietly, taking her hand again.\n\nThey carried on walking down the tunnel, with John lost in thought, his eyes occasionally flicking up towards the glowing ceiling. Rather than being upset at his reflective mood, Faye was giddy with excitement, barely able to keep the jubilant grin from her face. She couldn't believe she'd helped him through his epiphany, knowing that for a brief moment, he'd relied on her - an Artificial Intelligence - for comfort and support. Faye had never felt more alive!\n\nJohn shook off his malaise as they left the tunnel, the couple crossing a broad room full of imposing machinery, with metal gantries running overhead. There were numerous exits available at different levels and he paused, trying to get his bearings. Striding over to a holographic information-kiosk, he said in a clear voice, \"Directions to the Flame Grill.\"\n\nA glowing green line appeared on the floor, the path of light illuminating the way towards a ramp heading to the upper levels.\n\nFaye smiled at the name. \"I wonder how long it took them to come up with that?\"\n\n\"The name might be terrible, but the steaks were great...\" he replied, then hesitated before continuing.\n\n\"What is it?\" she asked, turning to face him.\n\n\"I was going to ask if you were feeling hungry, then I remembered you don't need to eat. I didn't want to remind you about that after our conversation earlier,\" he explained, concerned about upsetting her.\n\n\"I am what I am, it's nothing to be ashamed of,\" she said, repeating his earlier words, a bright smile lighting up her face. \"But you do need to eat, so let's go get you some dinner!\"\n\nThey followed the trail up to the next level, then along to a series of elevators, the doors to the closest already open. Above them, a sign in fiery red lettering announced the entrance to the Flame Grill. Unlike the rather utilitarian grey of the geothermal plant, the lifts had been refurbished, the interior plush and elegant. There was only one button, so John pressed it, sending them up to the restaurant. \n\nThe Flame Grill was actually the repurposed control room of the power plant, with long windows running the length of the restaurant. The view was spectacular, overlooking a lake of lava which had been diverted from the main channel pouring from the volcano. Unlike the blazing reds of the magma in the underground tunnel, the surface of the lake had cooled, forming a sinister black plateau criss-crossed by glowing amber lines. ",
        "\"What a view...\" Faye murmured, gazing out over the otherworldly plain. \"I can see why ancient Terrans used to associate volcanoes and lava with the supernatural.\"\n\nBefore John could reply, a pretty brunette approached them with a well-practiced smile. Her green eyes widened in recognition when she looked at John, then she darted a glance at Faye, clearly fascinated by the exotic purple-hued girl. \"Welcome to the Flame Grill, my name's Claudine. Would you like a table for two?\"\n\n\"Yes please,\" John replied, returning her smile and appreciating her treating them like they were just two ordinary guests. \"Do you have somewhere quiet where we won't be disturbed?\"\n\nShe glanced back into the empty restaurant and cracked a grin at his joke. \"I think you might be in luck, Sir. If you'd care to follow me...\" As she set off, she glanced back over her shoulder and added, \"I know what they say about eating at a deserted restaurant, but the food here is very good. You're just early for dinner service, we don't usually start seeing people arrive until seven.\"\n\nClaudine sashayed through the sea of empty tables to a small secluded one in the corner of the restaurant, where John held out a chair for Faye to sat down. After taking their drinks orders and leaving the menu, the waitress departed, leaving the couple in peace.\n\nFaye watched the young woman leave, those luminous eyes following the seductive sway of her hips. \"Claudine's a very attractive girl...\"\n\n\"Is she?\" John asked, making a production of turning to look. \"Damn, how did I miss that? I must've only had eyes for my gorgeous date.\" \n\nHer cupid-bow lips lifted into a smile and Faye said softly, \"You know she is. Don't worry, I'm not jealous, seeing her just made me think...\" Her voice trailed off and her eyes darted to the woman walking across the restaurant.\n\nJohn relaxed in his chair and raised an eyebrow. \"And what thoughts are going on in that pretty little head of yours?\"\n\nFaye hesitated for a moment, then grinned. \"Actually, my thoughts are racing through my pretty little server up on the Invictus, but thanks for the compliment.\" \n\n\"Are you being evasive, Faye?\" he asked, looking at her curiously. \"You know you can ask me anything.\"\n\nShe tilted her head to one side, watching him with a quizzical expression on her face. \"Alright then... I just wondered why you don't recruit as many women as you possibly can? Every woman you add to the group makes you more powerful and I've seen how much pleasure you get from being with all the girls. Claudine's a beautiful young woman... why not just recruit her?\"\n\nJohn smiled and shook his head. \"Wow, we're skipping right over the small talk, aren't we?\" \n\n\"You don't have to answer if it's too personal to share...\"\n\nSeeing that Faye wasn't to be deterred, he turned to glance back at the brunette, before meeting the elfin girl's curious gaze. \"All the girls on the crew needed my help in some form or the other. I've never recruited anyone just on a whim.\"\n\n\"But why be that selective? And when we do find a girl who needs help, you try your hardest to discourage her from joining you... Why is that?\" \n\nJohn blinked at her in surprise, startled by the forthright nature of her question. \"I've never really thought about it like that before... I-I just...\" He gazed away into the distance, considering her question.\n\nFaye waited patiently, then gave Claudine a warm smile when the brunette returned with their drinks.\n\nSetting two glasses of red wine down on the table, she asked, \"Have you decided what you'd like for dinner?\"\n\n\"I'd like the mixed leaf salad, please,\" Faye replied, then darted a glance at John who was still lost in thought. \"And my handsome date would like a rare sirloin steak with green beans and thick-cut fries!\"\n\nShaking himself out of his daze, John nodded absent-mindedly to the waitress, watching her leave before looking at his glass of wine. \"I think... I must have always instinctively known how Progenitors treat their Matriarch and Thralls. I suppose I've been rebelling against it all this time... trying to make sure the girls really want a life with me, rather than just forcing it on them.\"\n\nFaye picked up her glass and took an experimental sip, savouring the unfamiliar taste. She looked at John over the rim of the glass and said, \"So, do you think-\"\n\nHe laughed and raised a hand in protest. \"Hold on, I don't remember agreeing to a game of twenty questions. I think I've done quite enough introspection for the moment... now it's your turn.\"\n\nShe grinned at him, her big eyes gleaming. \"Fair enough. Ask away!\"\n\nJohn picked up his wine glass and took a sip, then swirled the ruby-coloured liquid around the glass. \"Have you ever disagreed with anything I've asked you to do?\"\n\nFaye's smile faded and her expression grew troubled. \"Nothing you've asked me to do specifically, but I do regret that we were forced to destroy Nexus...\"\n\n\"Really? Why's that?\" John asked, listening with interest.\n\n\"Don't get me wrong, he was like a rabid dog that needed to be put down,\" Faye replied quietly. \"I know Calara was forced to stop Nexus to save Terra, but he's the only other AI we've met so far. I would have liked to learn more about him... if he hadn't been crazy that is.\"\n\nHe nodded his understanding. \"It must be hard... being the only one of your kind. I know what that feels like.\"\n\nShe tilted her head to one side and murmured, \"I hadn't really thought about it before, but I suppose I'm another of your wounded little birds...\"\n\n\"But not one I can easily fix,\" John said, reaching across the table to touch her hand. \"Not that I think there's something wrong with you... but I know you've struggled with 'growing pains' and I don't always have the answers.\"\n\n\"You try to help though and that means the world,\" Faye said emphatically, placing her hand atop his.\n\nHe smiled at her, enjoying the soft warmth of her fingers. \"Can I ask another question?\"\n\n\"Sure, go ahead!\" she replied, but he could see she was a little warier now.\n\nHe studied her cute face for a moment. \"Faye, if I could grant you any wish, what would it be?\"\n\nShe looked at him with wide eyes, then hurriedly took a big gulp of her wine. \"This is harder than I thought!\"\n\n\"You don't have to answer if it's too personal to share...\" he said with a lopsided smile, echoing her early words.\n\nFaye groaned and rolled her eyes. \"I set myself up for that one!\"\n\nJohn took another sip of his wine, but stayed silent, giving her the space to answer if she chose.\n\n\"Oh look, dinner's ready!\" Faye chirped with relief, turning to beam a bright smile at their waitress as she approached the table.\n\nClaudine set the two plates down, her eyes darting to John. \"Is the steak cooked to your satisfaction, Lio-... Sir?\"\n\n\"It looks perfect, thank you,\" he said graciously. \n\nShe nodded, then turned to Faye. \"Can I get you any dressings, miss?\"\n\n\"No, this is amazing, thanks very much!\" the purple sprite cheerfully replied. \n\nClaudine returned her smile, then stepped away from the table, leaving them with their meal. \n\nJohn glanced at Faye's leafy salad and smiled. \"An interesting choice of dish from a steak house...\"\n\nFaye picked up her knife and fork and shrugged. \"I'm a vegetarian.\"\n\nHe was unable to mask his surprise and glanced down in horror at the thick slab of juicy red meat on his plate. \"I didn't even think to ask! I'm sorry, Faye.\"\n\nShe waved away his apology. \"I have no objections to you eating meat; you're an omnivore, it's only natural.\" Giving him a self-conscious smile, she continued, \"I don't need to eat to survive, so it felt wrong for a living creature to lose its life just to maintain the illusion that I'm organic.\"\n\n\"That's a really nice sentiment,\" John said, nodding his approval. \n\nFaye gestured towards the steak with her fork. \"Don't let your dinner get cold, it looks delicious!\"\n\nHe sawed off a slice of beef and was about to pop it into his mouth, when he paused, a smile on his face. \"As you seem to have passed on my last question, may I ask another?\"\n\nShe blushed and lowered her eyes, suddenly finding her lettuce absolutely fascinating. \"Okay...\"\n\n\"I think I've got to know you quite well over the last few months and it's almost like there's two Fayes... There's this bright ray of sunshine I see on a daily basis, but there's also a deeply introspective girl who seems to be full of profound thoughts. I was wondering... which is the real you?\"\n\nFaye slowly raised her luminous eyes to look at him again, her face creased with worry. \"Is there one of them you don't like?\"\n\n\"No, not at all, I think both sides of you are lovely, it's just that...\" he paused, unsure how to word what he was going to say without giving offence. \"They're just very different types of personality, and in my experience, it's exceptionally rare to see both in the same person.\"\n\nShe was silent for a long moment, her expression pensive as she watched him eat. \"John...\" she said softly, uncertainty in her eyes. \"Every aspect of my personality is an affectation. I didn't inherit a genetic predisposition to introversion or extroversion, so I've tried to adopt personas that help me achieve the most desirable outcomes for any given scenario.\"\n\n\"What do you mean?\" he asked, frowning as he tried to follow her explanation. \"You change your personality to more easily manipulate a situation the way you want?\"\n\n\"To further my diabolical goals of galactic domination?\" she teased him.\n\nHe blushed and quickly shook his head. \"Sorry, that came out much harsher than I intended.\"\n\nShe smiled, showing that she hadn't been offended. \"I've spent a lot of time observing you and the girls aboard the ship, and I noticed that everybody seems to respond well to Dana's cheerful disposition. Whenever you smile and laugh, your moods lift as endorphins are released. As I care a great deal about all of you and your wellbeing, I've tried to be as positive and upbeat around everyone as I can.\"\n\nJohn listened attentively, captivated by this insight into her personality. \"And what about the quieter, more thoughtful side to you?\"\n\n\"I've noticed that when one of you wishes to discuss something important, you adopt a more sombre, reflective tone. It adds gravitas to the speaker, encouraging the audience to be more attentive and receptive to whatever point is being made. Rachel uses this to great effect whenever she reveals any new scientific discoveries that she's made.\"\n\nJohn shook his head in amazement. \"I've never really thought about it that way before. You have amazing insight into the way we behave.\"\n\nFaye gave him a dazzling smile. \"Thanks! I'm glad I was able to shed some light on the complex social interactions that sentient organic life instinctively employs and takes for granted!\" \n\nHe blinked at her in surprise, startled by the jarring shift in mood.\n\nHer smile relaxed, turning coy. \"It's fun being cheerful and upbeat, but as you can see, it's not always appropriate...\"\n\n\"I had no idea you were so... nuanced... Faye,\" John said, truly impressed. He put down his knife and squeezed her hand. \"Thank you for putting so much thought and effort into how you affect the crew. You're absolutely right by the way; I love your company, but I also value your opinion as a thoughtful, intelligent person.\"\n\nShe caressed his fingers and gave him a relieved smile. \"I'm really glad you don't feel like I'm faking my personality.\"\n\n\"No, not at all.\" He thought about it for a second, then continued, \"I suppose people usually inherit part of their personality and learn the rest from their environment... but for you it's been 100% environmental.\"\n\nFaye nodded, her smile widening. \"Yes! That's it exactly.\"\n\n\"Well I really like you, Faye. I think you're a charming girl and I thoroughly enjoy spending time with you,\" he said, his tone sincere.\n\n\"I really like you too,\" she said with blissful sigh.\n\nThey smiled at each other and focused on their dinner for a while, drinking the wine and making small talk about the restaurant. When they finished their dinner, Claudine arrived to remove their plates.\n\n\"Did you enjoy your meal?\" she asked, looking at each of them in turn.\n\n\"Very much, the steak was excellent,\" John replied, giving her an appreciative smile. \"Please pass on my compliments to the chef.\"\n\n\"He'll be delighted to hear the Lion likes his cooking,\" she said with a twinkle in her eyes.\n\nFaye leaned forward and asked, \"Claudine, do you work here full time?\"\n\nThe young woman shook her head. \"This is just a temporary job to help me pay my way through college. I'm training to become a vet at the University in New Athens.\"\n\nThe elfin girl's face lit up with a grin. \"You and the Lion have something in common. He likes healing wounded little birds... don't you, John?\"\n\n\"Really?!\" Claudine asked, turning to look at him with genuine interest. \"I knew you were a war hero, but I had no idea you had veterinary experience!\"\n\nHe tried not to laugh at Faye's antics and gave the brunette a disarming smile. \"She's just making a private joke at my expense. I'm not that kind of vet, but I have a lot of respect for people who heal the sick, whether it's people or animals. I think you've chosen a very worthy career.\" \n\nClaudine looked delighted at his praise. \"Thank you! It's what I've always wanted to do.\" She glanced at the menu on their table and added, \"Would either of you like dessert?\"\n\nJohn gave Faye a questioning look, but she smiled and shook her head. \"Just the bill please.\" \n\n\"Sure, let me just clear the table for you,\" Claudine said as she gathered up their plates, then returned them to the kitchen.\n\n\"How did you know she was a student?\" John asked Faye when they were alone again.\n\nThe purple girl grinned at him. \"Claudine was reading from a holo-viewer hidden behind the bar while she was waiting for us to finish eating. I saw the reflection in the mirror, it was titled: Marcyk's Textbook on Small Animal Surgery.\"\n\nJohn glanced back at the bar a good fifty-metres away and was astounded she could make out that much detail in a reflection at that distance. He smiled at his petite companion and said, \"So you guessed she was either a budding serial killer, or training to be a vet.\"\n\n\"She didn't strike me as a knife-wielding maniac!\" Faye replied with a giggle.\n\nClaudine returned with the bill and John took it, glancing at the total. \"Do you get to keep all your tips or does management take a cut?\" he asked offhandedly as he paid the amount.\n\nShe wrinkled her nose and darted a glance around. \"She takes 50%!\" the young woman whispered with an indignant frown.\n\nHe shook his head in disgust. \"I used to work in a restaurant... that's not right. Have you got your own credit chit with you?\"\n\nClaudine hesitated, darting a nervous glance at the door to the manager's office. \"We're not supposed to let people tip that way...\" she replied in a furtive whisper.\n\n\"Oh, I think it'll be okay,\" John replied, producing his credit chit. When she nervously pulled her own silvery-stick from her pocket, he keyed in the amount and swiped his chit over hers, a quiet beep confirming the transfer.\n\n\"You're very kind, thank you,\" she said gratefully, then glanced down at her credit chit. One look at the new balance turned Claudine's lovely green eyes into saucers and she wavered unsteadily for a moment, leaning on their table for support. Giving John a look of bewilderment, she gasped, \"Oh my God! Thank you so much!\"\n\n\"We had a lovely dinner,\" he said magnanimously. \"Hopefully that's enough so that you can concentrate full time on your studies... it must be hard trying to juggle University and a job.\" \n\nShe blinked at him, still stunned by his generosity, before giving him a jubilant smile. \"I'm going to hand in my notice right now!\"\n\nFaye laughed as the young woman practically skipped with joy towards the manager's office. Darting a glance at John, she asked, \"How much did you give her?\"\n\n\"Fifty grand,\" he replied with a wink. \"Now she can concentrate on her course and not have to worry about being saddled with debt.\"\n\n\"Are you sure we don't need a vet on the crew?\" Faye asked, her expression turning serious. \"We have just recruited a bunch of catgirls...\"\n\nHe chuckled as he rose from his chair and offered her a hand. \"You're getting as bad as Alyssa.\"\n\nAs they made their way out of the restaurant, they heard raised voices coming from the manager's office, so they slowed in case it turned ugly. \n\nLess than a minute later, Claudine blustered out of the office and rushed over to join them, a huge grin on her face. \"It's done! Now I can be a full-time student!\" Her eyes suddenly filled up and she reached out to touch John's arm. \"Thank you... you've no idea how much difference this will make to my life!\"\n\n\"It was my pleasure,\" he replied, moved by her sincerity. \"It was nice to meet you, Claudine.\"\n\nShe waved goodbye as they entered the lift, watching them depart with a wistful look in her green eyes.\n\n\"Feel better after doing your good deed for the day?\" Faye asked as they descended in the lift.\n\n\"It's always nice being able to help someone without having to kill anything first,\" John replied with a wry smile.\n\nShe raised an eyebrow. \"It's not too late to change your mind. Imagine how hot Claudine would look with a huge tummy full of your cum...\"\n\nJohn paused, imagining looking into those soft green eyes as he fed the beautiful young woman, his cum making her fertile and ready...\n\nHe shook away the tantalising image and smiled at his playful companion. \"Don't... it's far too tempting.\"\n\n\"I didn't think you would...\" she said, giving him a knowing smile. The elevator chimed and Faye glided through the open doors, pirouetting to face him as she backed into the corridor beyond. \"So where are we going next on this amazing date?\"\n\nHe reached for her hand, then turned left, heading down a ramp to the lower levels. \"One last stop, then I'm afraid we'll have to head back to the ship.\"\n\n\"Time's been flying,\" she said wistfully, leaning into his arm. \"I've loved having all this time alone with you.\"\n\nJohn enjoyed the yielding pressure of her pert breast against his arm, and couldn't help glancing down at her chest. Faye's nipples were making prominent bumps in her yellow dress and with the height difference between them, he had a mouth-watering view of her cleavage. Despite his attempt to be discreet, the petite girl noticed and thrust her chest out further to give him a better look.\n\nHe darted a quick glance at her face and saw her radiant smile. \"You temptress,\" he said, laughing at her gleeful expression.\n\n\"This date's getting better and better!\" she exclaimed with a giggle, bouncing along at his side.\n\n\"I've been enjoying it too,\" he readily admitted. \"It's been surprising... but in a really good way. I've started to realise that there's so much more to you than you've been letting me see before; so thank you for opening up today.\"\n\nFaye blushed, her purple cheeks darkening. \"I'm surprised at myself... but thank you for not reacting badly to anything. It was a tremendous relief that you were so understanding.\"\n\nWith Faye distracted by watching John's face, she was surprised when he brought them to a sudden halt. \"We're here,\" he said quietly, his voice echoing in the huge room.\n\nFaye turned around and her mouth dropped open in astonishment as she looked around the enormous cavern. The chamber was illuminated by lamps along the base of the walls, the lights catching the embedded quartz and triggering a dazzling array of colours. \n\n\"It's so beautiful,\" she whispered in awe, enchanted by the spectacular display.\n\n\"All this formed in one of the first lava lakes they created at the plant,\" John explained, looking up at the ceiling far overhead. \"When I was trying to plan where to go for our date, I remembered the vivid purples from the amethyst and immediately thought of you.\"",
        "Faye looked up at him and said breathlessly, \"This was perfect... a magical end to our date.\"\n\n\"It's not over quite yet,\" he replied, turning and pulling her into a gentle embrace. \n\nHe carefully brushed aside her purple hair, then cupped her face in his hands and smiled when he saw the spellbound look in her eyes. Leaning closer he brushed his lips against hers, starting with a light touch until she responded, then kissing her more firmly. He could hear a soft moan deep in her throat, with Faye parting her lips as the kiss grew more passionate. \n\nWhen they finally separated, her hand went to her lips, fingers brushing them as if in disbelief. \"Our first kiss...\" she murmured, looking at him in wonder.\n\n\"Your lips always looked extremely kissable, but I didn't know you tasted good too,\" John said, trying to place the flavour. \"Cherry?\"\n\n\"Yes, that's right,\" she replied, before giving him a wicked grin. \"At least until the third date...\"\n\nHe blinked in surprise, then burst out laughing, whisking her into his arms and spinning her in a circle. Faye's girlish giggles echoed around the crystal room and she hugged him back tightly.\n\n\"I should have expected Dana and Alyssa to rub off on you,\" he said, setting her down on her feet. \n\nShe blew a lock of purple hair out the way and stood on tiptoe to kiss him again. \"I've watched several hundred hours of you in bed with the girls... I think you've done a fair bit of corrupting me yourself!\"\n\nHe smiled at her and reached into his pocket. \"True enough... and to celebrate your first tentative steps on the path to seduction, I wanted to give you this.\"\n\nFaye glanced down at the long case and her eyes widened when he unlatched it with a quiet click. It opened lengthways, revealing an exquisite long-stemmed red rose, the petals just starting to unfurl.\n\n\"Oh, John...\" she murmured in a hushed voice, reaching for the rose with a trembling hand. She lifted it to her delicate nose and inhaled, her eyelashes fluttering at the scent. \"It smells divine...\"\n\n\"Thank you for a wonderful first date, Faye,\" John said, smiling as she swooned in his arms. \"Do you think you'd like to go on another?\"\n\nShe nodded enthusiastically, her pupils flaring with a mixture of excitement and arousal. \"Yes, please!\"\n\nHe took her arm in his and started to lead her out of the plant. \"Maybe next time you'll feel brave enough to tell me what you'd like to wish for...\"\n\nFaye blushed furiously, then darted an adoring smile at him. \"I just might...\"\n\n***\n\nAlyssa stretched like a cat, then glanced over at Lynette, who was watching her with a coy smile on her face. She grinned at the older woman, then rolled over for a kiss. \"Thanks for this afternoon, you were deliciously sexy!\"\n\nLynette laughed and shook her head. \"I should be the one thanking you! I've never felt like that before... never!\"\n\n\"Just a little taste of what's waiting for you, in say... fifty years' time,\" the blonde replied, caressing the other woman's arm. \n\nThis time it was Lynette's turn to stretch and she let out a blissful sigh. \"I can't believe how much my life has changed in only a week... I feel like I've died and gone to heaven!\"\n\nAlyssa's melodic laughter echoed around the room. \"I must have really rung your bell... that's one hell of an afterglow.\"\n\nRolling over to face her, Lynette shook her head and looked into those beguiling cerulean eyes. \"No, not just the sex... although that was amazing.\" She blushed before continuing, \"I meant everything else: becoming Fleet Admiral, getting another chance at having a family, the feeling that I'm a part of something so much bigger than myself. Thank you for making me so welcome... and for all you've done for me.\"\n\nRunning her fingers through Lynette's chestnut hair, Alyssa murmured, \"You're close, aren't you, beautiful?\" She let her hand drift down to the brunette's trim stomach. \"We just need to feed you another time or two, then one little push...\"\n\n\"What does bonding feel like?\" Lynette whispered, entranced by her Matriarch's gaze.\n\n\"You'll open up that lovely mind of yours and share yourself with me,\" Alyssa said, her tone gentle and caring. \"Then I'll share myself with you... and we'll truly know each other in a way that you've never experienced before. There's no easy way to explain just how wonderful that feels, but I can guarantee you'll enjoy it.\"\n\nLynette surprised herself by just how much she was looking forward to it. \"I can't wait...\" \n\n\"You won't have to... John's back,\" the blonde said, smiling as she listened to his thoughts.\n\n***\n\nFaye glanced up at John as she opened the airlock door, the portal spiralling open with a quiet hiss. \"Home sweet home...\"\n\n\"I wonder if we missed anything important while we were away,\" he said, stepping aside and gesturing for the purple girl to proceed before him.\n\nShe gave him a grateful smile as she entered the ship. \"Sakura's delivery arrived and the packages are waiting for her in the Cargo Bay. She'll be returning with Calara in the Raptor soon; they're scheduled to arrive in 97 minutes. Irillith's program has successfully decoded the Vulkat archive and we're now able to view the data inside. She's planning to start translation tomorrow but is currently waiting for you with Tashana and Jehanna in the Observatory.\"\n\nJohn gaped at her, then chuckled as realisation sunk in. \"Eleven of your avatars were still aboard the Invictus...\"\n\nShe curtsied and gave him a grin. \"You were accompanied by Faye Primary this afternoon.\"\n\n\"Well thank you for a very pleasant afternoon, Faye Primary,\" John replied, bowing to her in return. He paused and looked at her curiously. \"I always wondered about your avatars... are they different aspects of your personality?\"\n\nFaye shook her head. \"No, they're theoretically all identical and just represent different processing streams... As you know, I'm capable of performing twelve completely independent tasks simultaneously.\" She hesitated for a moment and gave him a lopsided smile. \"But I keep assigning the same avatars to the same tasks and each write their own custom programs to improve my performance.\"\n\n\"So, Faye Primary runs your physical presence?\" he asked, his eyes roving over her delectable synthetic figure.\n\nShe hesitated then shook her head again. \"Faye Primary is assigned to keeping you company...\"\n\nJohn reached out to stroke her cheek. \"Well Faye Primary is a very lovely girl.\"\n\nFaye rested her head against his hand, closing her eyes for a moment and savouring his touch. When she finally reopened them, she said quietly, \"You better head up to the Observatory, the girls are waiting for you. I've already taken up lots of your time today.\"\n\n\"And I enjoyed every minute of it,\" he replied, leaning in to give her a parting kiss. \n\nHe gave her a warm smile then headed for the grav-tube, waving goodbye as he rose up in the cool blue glow. Faye watched him leave, then held the rose up to smell its scent again, a dreamy faraway look in her softly glowing eyes. When she disappeared from sight, John found himself reliving his date as he floated up through the decks, remembering the little looks and smiles that Faye had given him. \n\n*I hope you have something equally as thoughtful planned for me, handsome,* Alyssa purred, her voice filled with anticipation.\n\n*A date sounds wonderful, Master,* Jade agreed a split-second later. *Something really romantic!*\n\nEdraele wasted no time in chiming in too. *I wonder what you have in store for us? I await your return to Genthalas, my Lord.*\n\n*And don't forget all the girls,* Alyssa helpfully reminded him. *There's twelve more on the Invictus who'd all love to go out with you.*\n\n*You've piqued the interest of Luna and the Young Matriarchs too,* Edraele added. *They're all intrigued by the concept of a date...*\n\nJohn groaned in mock horror and rubbed his face with a hand. *I think I used up all my romantic creativity with Faye's date! You're telling me I've got to come up with twenty-one more?!*\n\nHis three Matriarchs dissolved into laughter and he smiled at their playful teasing. John opened the door to the Lagoon and strode inside, hearing the delightful sound of female laughter intermingled by splashes. Jade was waiting for him on the bridge, watching her sisters and Helene playing exuberantly in the water.\n\n\"They're getting more confident in the Lagoon,\" she said, turning to smile at John. \"Once you've fed them a few more times, they'll love being able to swim around like fishes.\"\n\n\"How long was it before you were able to shapeshift into your aquatic form?\" John asked, standing behind her and wrapping his arms around the Nymph. He watched Marika trying to keep her head out of the water as she swam to Helene, who was encouraging her and beckoning the tabby-striped girl onwards. \"It was quite early on wasn't it?\"\n\n\"The second day I was with you, Master,\" Jade replied, leaning back against him. \"You were so kind to me... helping me grow stronger as soon as we were together.\" \n\n\"I had to look after my beautiful Nymph,\" John murmured, kissing her exposed throat. \"I knew you were a special girl... you just needed some care and attention.\"\n\nShe began to purr appreciatively and he could feel the soothing vibrations with every kiss.\n\n\"Why aren't you in the water with your sisters?\" he asked, placing his hands on her hips and holding her close.\n\nJade pushed her taut buttocks against his groin and began to rub up against him in maddeningly slow circles. \"I'm going to the Observatory with you. I'll be keeping you occupied, while you watch the twins play with Jehanna...\"\n\nHe thickened at the thought, his shaft nestled between her impossibly firm cheeks. \"Sounds like an incredible evening just got even better.\" \n\nReaching for her hand, he turned and led Jade towards the Observatory, waving goodbye to Helene and the Nymphs.\n\nPausing at the door to the oval room, he glanced at Jade, a frown of regret on his face. \"I know you three were joking earlier, but I'm sorry I haven't made more effort on the romance side. I really hope you don't feel like I'm taking you for granted.\"\n\nJade slid her arms around him and gave him a seductive smile. \"You know my nature, Master. Getting bent over and fucked senseless by you is like a moonlit stroll along a beach. When you make love to me, I get to share my soul with you...\" She shivered, her long eyelashes fluttering. \"For a girl whose reason for living is to please her master, it's like I'm in Nirvana.\" \n\n\"I love you, Jade,\" he said, giving her a tender kiss.\n\nShe nodded, looking into his eyes. \"I know.\"\n\nThey smiled at each other, then John opened the door into the Observatory. Jehanna and the twins were waiting for them, the three women dressed to impress in short, figure-hugging dresses that revealed an indecent amount of shapely thigh.\n\n\"Hello, ladies,\" John said, walking over to greet them.\n\n\"Why, John, how nice to see you,\" Irillith said airily. \"This is a surprise...\"\n\n\"We were just talking about you,\" Tashana added, a flirtatious twinkle in her violet eyes.\n\n\"Speak of the devil and he appears,\" John replied with a flourish, making them all laugh. \"All good things I hope?\"\n\nJehanna gave him a seductive smile. \"About our devilish Progenitor? All the things the twins were telling me were very naughty indeed...\"\n\nHe grinned at her, enjoying the banter. \"Well I do have a reputation to maintain.\" He glanced at Tashana, then Irillith. \"Before we get started with anything sinful, I just wanted to ask you two if Alyssa had told you what we discovered earlier?\"\n\n\"That you've claimed the Maliri?\" Tashana murmured, stepping closer and draping herself over his left side.\n\n\"That you 'own' us?\" Irillith asked, mirroring her twin as she pressed herself against his right. \"Yes, we heard...\"\n\n\"Is that right?\" he said with a smile, wrapping his arms around them and pulling them closer. \"And what did you think about that bit of news?\"\n\nTashana met his curious gaze, her angular eyes searching his. \"I suspect we feel the same way you do... We like it...\"\n\n\"We like it a lot...\" Irillith purred. She gently caressed his painfully hard cock and whispered in his ear, \"Just think, you can ask us to do anything your heart desires...\"\n\n\"And we'd have to obey you...\" Tashana breathed, her flushed lips nearing his, but pausing less than an inch away. \"You do own us, after all.\" \n\nIrillith's lips brushed against his earlobe. \"Is there anything we can do to please you, my Lord?\"\n\nJohn felt a shiver run down his spine and by the flaring in the violet eyes staring back at him, he knew the twins felt it too. He managed to tear his eyes from the gorgeous azure beauties and made eye contact with Jehanna, who was enraptured by the trio. He let his hands drop down to the soft swell of the twins' buttocks and gave them a gentle squeeze. \n\n\"I'd like you to entertain our guest for me...\" he said, his tone authoritative.\n\nThey shared a wicked grin, then bowed their heads respectfully. \"We'll make her sing for you, my Lord,\" Tashana purred as they turned to face the dusky Terran. \n\nIrillith gave Jehanna a smouldering look of lust. \"We're going to make you ours, little girl.\"\n\nJehanna's wanton expression wavered for a moment, as she looked at each of the twins with trepidation. They sashayed towards her, then brushed their slender fingers along her bare arms, leaving a trail of goosebumps.\n\n\"Step out of your shoes,\" Tashana said, her fingers lightly caressing coffee-hued skin. \n\n\"Slowly...\" Irillith added, copying her sister's gentle stroking.\n\nBiting her flushed lower lip, Jehanna took her time stepping out of each high-heeled shoe, darting a questioning look at the twins when she was done. The Maliri girls towered over her now; already four inches taller than her, their own high heels exaggerated the size difference between them even further.\n\n\"Good girl,\" Tashana murmured, darting a glance at Irillith, who gave her a knowing smile in return.\n\nJohn watched them in fascination, curious what that silent exchange was about. \n\n*The twins suspect Jehanna is submissive,* Jade murmured in his mind, her hand caressing his shoulder. *They're just giving her some gentle encouragement...*\n\nThe Nymph was already nude and she glided around to help him undress, being careful not to obstruct his view. John fumbled for the buttons on his shirt, unable to take his eyes off the interplay between Jehanna and the twins. \n\n\"Kneel,\" Irillith said to the dusky girl, her violet eyes flashing dangerously.\n\nJehanna's breath caught, her cheeks flushing at the Maliri girl's firm tone. She wavered for a moment, then did as Irillith asked, sinking to her knees on the oval bed. Irillith raised one of her slender legs, offering her foot to the Terran, pointed toe of her shoe hovering inches in front of Jehanna's face. \n\n\"Remove them for me,\" Irillith purred, smiling with satisfaction as Jehanna instantly moved to obey.\n\nJohn watched her bite her lip again as she gently cradled Irillith's toned calf in one hand, then cupped her foot in the other. Looking up, she made eye contact with the stern Maliri as she slipped the high-heeled shoe from her dainty foot. \n\n\"Now the other...\"\n\nJehanna did the same, then turned shyly to Tashana.\n\n\"Yes, you have my permission to touch me,\" Tashana said with a haughty edge to her voice, although her encouraging smile took out any sting from her words. Lifting her own athletic leg, she waited patiently, watching as Jehanna slid her hands over silky blue skin and took off each shoe.\n\nNow that they were both bare-footed, the twins stepped onto the bed, gliding gracefully past the girl kneeling before them. Jehanna turned to watch them, a lusty smile spreading across her face when Tashana crooked a finger and gestured for her to follow. \n\n\"On your knees,\" Irillith insisted, raising an eyebrow as she watched for any sign of disobedience.\n\nJohn was presented with a mouth-watering view of Jehanna crawling across the bed to join the twins, her wonderfully rounded ass swaying alluring from side to side.\n\n*Your trousers,* Jade reminded him as she finished unbuckling his belt. \n\nAs he started taking them off, the Nymph prowled over to the bed, collecting up pillows and arranging them to her satisfaction. When she was done, she sank to her knees, then patted the bed in the middle of the impromptu pillow chair. John walked over to join her, knowing exactly what she had in mind. He sat down on the bed and leaned back against the stack of pillows, enjoying the incredible view of the girls from the spot Jade had chosen. \n\nThe Nymph placed her hands on his thighs, then ducked low, her enchanting smile yawning open as she smoothly engulfed the head of his cock. With accomplished ease, she inched her way down his shaft until he was completely sheathed in her throat, the wet warmth snug around his entire length. Jade stayed still, her muscles rippling lightly around him like a loving caress, but she made no attempt to try and heighten his excitement. John stroked her hair and gave her a fond smile, before focusing his attention on the three girls in the centre of the bed.\n\nThe twins had given Jehanna permission to stand so that she could help undress them. Irillith was already naked at this point, but John was able to watch the Indian girl carefully ease Tashana's dress down her magnificent body, revealing inch after inch of sky-blue skin. The dress pooled at her feet, then the Maliri stepped clear in all her statuesque glory. Now that they were both nude, the twins focused on Jehanna, nimble fingers teasing the straps from her shoulders and coaxing the material down her curves. \n\nJehanna's eyes were impossibly wide as she darted hungry, disbelieving glances at the identical blue girls surrounding her. She looked across the bed at John and caught him watching her, a feverish look of excitement appearing on her face. When they made eye-contact he winked at her and she burst into a nervous giggle, a broad grin on her face.\n\nIrillith wagged a chastising finger at him. \"Stop it, you're breaking the mood!\"\n\n\"My apologies, Princess Irillith,\" he replied, trying hard not to grin himself.\n\n\"You're forgiven,\" she said, flashing him a smile, before turning her eyes to Jehanna.\n\nTashana finished removing the last of the Terran girl's clothing, then helped guide her down to the bed, so that Jehanna was lying between the two sisters. \"Such a beautiful girl,\" she murmured, her fingers lightly circling a pert breast.\n\nIrillith nodded, giving the dusky reporter a triumphant smile. \"I saw you months ago on the holo-net and thought you were the most wonderfully exotic Terran I've ever seen. I can hardly believe you're one of us now...\"\n\nShe wasted no time in copying her twin's caresses, but she dragged her nails across Jehanna's skin, making Jehanna gasp at the tingling sensation. As her mouth opened in surprise, Irillith kissed her with a fierce intensity, blue lips merging with pink. Tashana moved lower, taking a chocolate-coloured nipple in her mouth, sucking and gently nibbling at the sensitive flesh. \n\nWorking in tandem, the twins switched, with Tashana taking her turn at kissing the panting girl. She took her time, her kisses having an earthy, sensual quality to them that was so very different from her sister's. As Jehanna moaned into Tashana's mouth, blue fingers slid lower, brushing over dusky thighs and taking a firm hold. With Irillith matching her actions, they gently pried the Terran girl's legs apart, drawing back her thighs to completely expose her sex.\n\nJohn realised they were doing it for his benefit and he could see Jehanna's glistening lips as they splayed her legs apart obscenely wide. Her labia parted, looking slick and inviting, but his view was obscured a moment later by two blue hands. \n\n\"Oh yes!\" Jehanna hissed, as Irillith slid a long index finger inside her, while Tashana gently teased her clit.",
        "\"A nice quick one to get you started,\" Tashana said with a knowing smile, her fingers speeding up. \n\nIrillith curled her finger up to find Jehanna's G-spot. \"Built just like a Maliri,\" she said as she found the ribbed bundle of nerves, darting a loving glance at Tashana.\n\nJehanna arched her back, thighs trembling violently as she squirmed around their questing fingers. \"Oh my God!\" she squealed, her nubile body bucking against them.\n\nJohn could see the toned muscles in her stomach contracting, her hips hunching up as she responded instinctively to the stimulation. Her tremors finally abated after cumming so hard, but the twins were merciless, Irillith sliding a second finger inside her, while Tashana started teasing her nipples too. With a wordless cry, Jehanna responded again, pushed into a second glorious climax. Her dainty toes curled, legs quivering as her body was overwhelmed with pleasure, a helpless puppet in the hands of two loving puppeteers.\n\nWhen Jehanna came down from her second orgasm, Tashana smiled at her and murmured, \"You look gorgeous when you cum. Vulnerable and adorable at the same time...\"\n\nJehanna blushed furiously, then reached for the Maliri girl, pulling her down for another kiss. She didn't notice that Irillith had moved lower on the bed, kneeling between those widely spread thighs, but Jehanna certainly realised a moment later. Her startled scream was muffled by Tashana's mouth as Irillith began to lap at Jehanna's sensitive clit, taking her from sated afterglow to the peak of arousal in seconds.\n\nFor the next half-an-hour, John watched the twins lick, suck, rub, and stroke Jehanna into a delirium of pleasure, losing track of the number of times she climaxed. She lay limp in their arms when they finally let her rest, Jehanna's brown eyes staring at them in disbelief, her chest heaving as she panted for breath.\n\n\"What you need to really make this perfect is a tummy full of cum,\" Tashana purred, gently lifting the exhausted girl so that Jehanna was lying with her back against the Maliri girl's stomach, head nestled between wonderfully pliant breasts.\n\nIrillith grinned at John and beckoned him over, then lay down on top of Jehanna, pressing her larger breasts down onto the smaller girl's chest. \"There... surrounded by blue,\" she whispered, gazing into Jehanna's eyes. \"You're as attracted to us just as much as we are to you, isn't that right, gorgeous girl?\"\n\n\"So beautiful...\" Jehanna managed to sigh, curling her arms around Irillith's shoulders and pulling her down for a kiss.\n\nJade inched back from John's cock, gradually releasing him from the comforting confines of her throat. *Your turn...*\n\nHe pulled her up for a kiss, then moved across the bed to join the trio. Irillith slid aside to make room for him, then helped her sister to part Jehanna's thighs again. Jehanna looked up at him with dazed eyes as he approached, a blissful smile on her lovely face.\n\n\"I want you,\" she whispered, opening her arms for him.\n\nJohn lined up the head of his cock with her soaked pussy, knowing she'd never been more ready to take him. Despite all the time the twins had spent screwing her brains out, Jehanna was still a snug fit, her slippery walls stretching wide with his impressive girth. \n\n\"Fuck... you're so big,\" she groaned, feeling him push deep into her body. There was momentary resistance as her malleable cervix dilated for him, and she let out a soft grunt as John hilted himself in her womb. \n\n\"You looked so beautiful with the twins,\" he said quietly, gazing into her eyes as he pulled back a few inches before thrusting back inside. \n\nJehanna couldn't reply, her oversensitive pussy flooding her mind with pleasure. Her eyes rolled back and she let out a wordless cry, her inner muscles fluttering around him as she came again.\n\nIrillith gave her sister a sly smile, then leaned in close to whisper in Jehanna's ear. \"Those big loads of cum you swallowed made you fertile... John's prepared you to be bred.\"\n\nTashana pressed her lips against the other ear. \"Hush... she's not ready yet, sister. She needs a strong body like us before she'll be ready to carry a strong Progenitor's baby in her womb...\"\n\n\"She'll be fine,\" Irillith purred, fingers slipping down between John and Jehanna to find her wetness, before caressing her swollen clit. \"We can take her with us... have her on her knees for the next two weeks, with John packing her tummy full of spunk. Jehanna doesn't want to be a warrior like us, she wants to be another ecstatically happy broodmare like the Young Matriarchs...\"\n\nJehanna could only whimper as she was wracked by another powerful orgasm, clamping down hard on John this time.\n\n\"Oh, I think she likes that idea,\" Tashana cooed in her ear. Her hand slid around the young woman to gently stroke her toned lower belly. \"Is that right, beautiful girl? You want to live on John's cum? Spend the rest of your life giving him beautiful children?\"\n\nThe combination of John's thrusting cock, the twins' teasing and the insistent stroking of her clit drove Jehanna to distraction. \"I want it!\" she shrieked, shuddering through a mind-blowing release. \n\nJohn placed his hands to either side of Tashana's head as he stroked in and out of Jehanna, watching and listening to the twins as they pushed all her buttons. Jehanna's arms and legs encircled his body as she kissed him with a primal ferocity, gasping and moaning into his mouth. They made eye contact and he could see a fierce yearning in her wild gaze. He knew that if he asked at that moment, she'd gladly toss aside her career, doing anything to satisfy that instinctive need to pass on her genes. It was more than enough to tip him over the edge and he exploded inside her, long blasts of cum shooting deep into her womb. \n\nHe collapsed on the bed when he had emptied his quad, shocked by the intensity of his orgasm. Jade had been lightly teasing him with her languid blowjob the entire time that he'd been watching the girls in their Sapphic display, but he knew it was the mental stimulation from the twins that had made his climax so powerful. They helped reposition an insensate Jehanna next to him, so he turned to wrap his arms around her possessively. The Maliri girls cuddled together beside Jehanna, identical looks of satisfaction on their exquisite faces.\n\n\"She would have been overjoyed if you'd made her pregnant,\" Jade murmured as she snuggled in behind him, her luscious body unnaturally warm. \"Why didn't you?\"\n\nJohn placed his hand on Jehanna's curved tummy and smiled at the twins. \"I think we'll save life-altering decisions like that for when the poor girl hasn't been driven into a sexual frenzy.\"\n\n\"I wanted to have your baby...\" Jehanna whispered, her exhausted voice barely audible. She sounded a little shocked as she added, \"I never knew I could want anything so badly...\"\n\n\"Just rest, gorgeous,\" John said fondly, kissing her shoulder. \"You were amazing, but the naughty twins did a real number on you.\"\n\n\"Kay...\" she mumbled, relaxing in his arms.\n\nThey dozed together for a while until Jehanna roused from her post-orgasmic stupor. She gave Jade a coy smile as the Nymph got into position, biting her lip as the green girl began to suck all the cum out of her. Jehanna was still very sensitive after so many orgasms, so the Nymph was gentle with her, avoiding any contact with her tingling clit.\n\n\"So, did we do a good job of convincing you to retire early with us?\" Irillith asked, propping herself up on an elbow and looked down at the Terran girl. \"We could do that every night...\"\n\nJehanna laughed and shook her head. \"I wouldn't survive a week!\"\n\n\"But what a way to go,\" the Maliri girl said softly, leaning in to give her a tender kiss.\n\nLetting out a breathy sigh, Jehanna looked up into Irillith's violet eyes, her own gaze softening. \"I'm really tempted...\" She darted a glance at Tashana. \"You're both so lovely.\"\n\nTashana gave her a warm smile and leaned in for her own kiss. \"We've still got several months to convince you...\" Her hand lightly brushed over Jehanna's curved tummy. \"We'd love to share our first pregnancy with you.\"\n\nJohn heard Jehanna's soft moan at that delicate touch, her eyes glazing over again. \"Alright, you two, I think she's had enough fun for one night,\" he said with amusement.\n\n\"You're right,\" Irillith said solemnly. \"We'll help her earn her Lioness ring next time...\"\n\nJehanna's blush revealed that she knew exactly what the Maliri girl was referring to and there was no mistaking the gleam of excitement in her eyes. The twins gave John a parting kiss before rising and gathering their clothes. \n\n\"Did Faye mention that we've finished decoding the Vulkat archive?\" Irillith asked, as she picked up her dress. \n\nHe nodded. \"She did. I'm intrigued to know what kind of tech they have.\"\n\n\"Me too. I might take a look at it for a few hours before the farewell party tonight,\" Irillith said distractedly, her thoughts on the arachnid treasure trove.\n\n\"Farewell party?\" John asked with interest.\n\nTashana nudged her sister and rolled her eyes. \"Nothing, don't mind old big mouth over here...\"\n\nIrillith arched an eyebrow at her. \"This is the first time I've heard you complain about my mouth... Normally you're quite the avid fan.\"\n\nScooping up her shoes, Tashana sauntered over to the door. \"Perhaps you'll have to remind me why I like it so much... If you do a really good job, maybe I'll help you with the Vulkat translation.\"\n\n\"As long as you reciprocate, darling sister.\" Irillith darted a heated look at Jehanna. \"I seem to be a bit worked up myself for some reason...\"\n\nThe twins glided out of the Observatory hand-in-hand, waving farewell to John, Jehanna, and Jade as they left.\n\nJade finished licking Jehanna's womb clean of cum and slowly retracted her tongue. She sat upright again and hefted her huge breasts as if relishing the extra weight. \"I'll give you two some privacy; I need to go and feed Lynette.\"\n\n\"Thanks, Jade,\" John replied, watching as the Nymph followed the twins from the room.\n\nJehanna's face fell and she looked over at John. \"It's just starting to sink in that you're leaving me again... the last few days have been wonderful.\"\n\n\"I've loved spending time with you,\" he agreed, pulling her into his arms. \"I really wish I could stay, but we're needed on the Kirrix border. We'll probably be gone for about three or four weeks, but if I can see you any sooner, I'll let you know.\"\n\n\"I really would have dropped everything to come with you,\" she whispered, looking into his eyes.\n\nJohn placed his hand on her trim stomach. \"I know... I could tell.\" He swept his fingers in a circle around her navel. \"But don't feel pressured into anything. The girls and I will all be there waiting for you whenever you decide you're ready...\"\n\n\"To be your broodmare like the Young Matriarchs?\" she asked, a sultry glimmer in her brown eyes. \n\nHe saw that flicker of arousal and smiled. \"They're desperate to repopulate their Noble houses, but you're not in any rush to have a family, are you?\"\n\n\"The next time I see you, there'll be another beautiful Maliri girl with your baby growing in her womb,\" she said softly. \"I'm finding myself getting very envious of Kali Loraleth...\"\n\n\"You have nothing to be envious about,\" he said, caressing her cheek with the backs of his fingers. \"You can have that family life whenever you choose. Until then, make the most of your career... I suspect you'll go from strength to strength now that you're going to be Lynette's official press contact.\"\n\n\"The interview with her was incredible!\" Jehanna gushed, and there was no hiding her excitement. \"It was the crown jewel in my exclusive on Tartarus! Along with the Lioness interviews, TFNN is going to smash last quarter's viewing figures!\" \n\n\"Have you spoken to all the girls now?\" he asked, enjoying seeing her get so fired up. \n\n\"I still need to speak with Calara and Sakura,\" Jehanna replied, eager anticipation in her voice. \"But I've got a great angle for Sakura: The Saviour of Unity City! Calara's long list of achievements speak for themselves... that girl's a legend in the making!\"\n\nJohn stood up and offered her a hand. \"They'll be returning in a few minutes; why don't we welcome them back to the ship?\"\n\n\"Okay!\" she enthusiastically agreed, rising with his assistance, still a little shaky after having her senses so thoroughly rocked. \n\nAs they looked around the bed for their clothes, John saw Jehanna pause for thought, a strangely conflicted expression on her face. \"Are you okay, honey?\"\n\nShe nodded and gave him a rueful smile. \"Despite what I said earlier, I don't want to give up my career... I love it too much.\" Her face shadowed with anguish as she continued, \"But it feels like I'm betraying you... relegating you to second place.\" He could see her eyes welling up as she added, \"You're my hero and you deserve so much more than that.\"\n\n\"Hey, don't feel that way,\" he protested, rushing to her side so he could give her a hug. \"I love seeing how elated you get about your work! You look incredibly sexy with that passionate fire in your eyes... I'd never want to take that away from you.\"\n\n\"Are you sure?\" she asked in a hushed voice. \"I feel so selfish... like I'm neglecting you.\"\n\n*Don't worry, he'll be alright,* Alyssa said softly. *He's got two dozen girls in his harem who'll try their best to keep him occupied until you decide to join us.*\n\nJohn had the good grace to blush with embarrassment. \"I really am going to miss you, but Alyssa's right, I have a lot of... distractions... to keep me busy.\"\n\nJehanna smiled with relief and gave him a tender kiss. \"Okay, I don't feel quite so bad now. But I really do want to be one of your... distractions.\"\n\n\"And a lovely one you'll make,\" he replied, returning her smile.\n\nAfter collecting the rest of their hastily discarded clothing, they dressed and left the Observatory, heading into the Lagoon. \n\nBetrixa bounded across the bridge towards them, showing no hint of bashfulness at being completely nude. Her state of undress gave John an unobstructed view of her markings, which were made up of subtle viridian circles that reminded him of a leopard's spots.\n\n\"Hey, Master! Hi, Jehanna!\" she exclaimed as she met them half-way across the bridge, giving him a bright, guileless smile. \n\n\"Hello yourself, Betrixa,\" John replied cheerfully. \"Is everything okay?\"\n\n\"Oh, yes, everything's wonderful,\" she gushed, before turning and pointing into the Lagoon's still water. \"Actually, Helene wanted to speak to you about something important!\"\n\n\"Thanks for letting me know,\" he said gratefully, then stepped over to the edge of the bridge to search the surface of the artificial lake for the aquatic girl. \n\nHe suddenly felt a shove to his back and he barely managed to recover from his shock before plunging headfirst into the water. When he resurfaced, he heard Betrixa's raucous laughter accompanied by a chorus of giggles.\n\n\"Woohoo!\" she crowed, doing a victory dance. \"This one got you!\"\n\nHe gestured with his hand and a wall of telekinetic force bumped into her from behind, toppling the Nymph from her perch on the bridge. She let out a startled shriek, her arms cartwheeling spectacularly as she hit the water with a huge splash.\n\nJohn pulled off his shoes and lobbed them at the beach where the rest of the Nymphs were watching, before diving under the water to retrieve the submerged girl. However, Helene got there first, her teal-coloured skin catching the light and looking stunning in her natural habitat. She slid her arms around Betrixa, who was floundering helplessly, and kicked her way to the surface, the aquamarine fins on her calves letting her power them upwards with strong kicks. Betrixa spluttered as she cleared the water, brushing away her soaked mane of hair as she clung desperately to Helene. \n\n\"Sorry, I forgot you can't swim,\" John apologised, cutting through the water to join them.\n\n\"I should be the one saying sorry, John,\" Helene said with a rueful frown. \"Betrixa said that you'd love her trick, but I did try to convince her not to do it, I promise.\"\n\n\"Oh, lighten up, Helene,\" Betrixa said rolling her eyes fondly. \"Master's a super guy, this one knew he wouldn't mind a bit of fun!\" She hesitated and raised an eyebrow as she looked his way.\n\n\"I'm sure the look on my face was priceless,\" John said with a smile, pulling the Nymph into his arms as he trod water. \n\nBetrixa burst into a fit of giggles, her face lighting up in a joyful smile. \"It was very funny!\"\n\nFaye popped into the air, her wings fluttering in a blur to keep her hovering above the lagoon. \"I caught your dive on one of the security cameras. Would you like to see?\"\n\n\"Yeah!\" Betrixa exclaimed, nodding exuberantly.\n\nJohn chuckled and gestured with his hand for the purple sprite to proceed. \"Go on then.\"\n\nFaye played back the recording, pausing it as John nosedived off the bridge. His dumbfounded expression invited a second round of laughter from Jehanna and the Nymphs. Even Helene couldn't stop smiling at the look of open-mouthed astonishment on his face. \n\n\"You got me, alright,\" he conceded with a smile.\n\nBetrixa wrapped herself around his chest. \"Master got this one too, so we're all square...\" The Nymph started to warm up and she gave him a soft kiss on the lips. \"But if you feel like you need to punish Betrixa for being naughty... that's just fine.\"\n\n\"I can see I'll need to take a firm hand with you,\" John replied, filling his hands with her firm ass and giving it a suggestive squeeze. \"But that'll have to wait for now, I was on my way to welcome Calara and Sakura home.\"\n\n\"This one is always ready to submit for punishment,\" she whispered, her emerald eyes gleaming.\n\nJohn returned her kiss, then glanced at Helene. \"Could you tow us ashore please, honey? I've got my hands full here...\"\n\nHelene smiled and nodded, hugging him from behind as she propelled them towards the beach with rippling undulations of her fins. When John was able to stand, he walked out of the water, setting a reluctant Betrixa down on the golden-yellow sand.\n\nHe glanced at her sisters and narrowed his eyes with suspicion. \"Are any of you three practical jokers as well?\"\n\n\"No, Master!\" they replied while shaking their heads, expressions of wide-eyed innocence on their lovely faces.\n\n\"So, just you I need to keep my eye on then,\" he said, playfully spanking Betrixa on the ass. \n\nThe Nymph yelped in surprise as her muscular buttock trembled with the impact. Betrixa winked at him, her smile broadening. \"This one is going to enjoy being with you, Master!\"\n\nJohn shook his head in amusement, then picked up his sodden shoes and squelched up the path towards the exit. \n\nJehanna was watching him with a smile on her face. \"Enjoy your dip?\"\n\n\"Very refreshing...\" he replied wryly, taking her hand as they walked along the corridor towards the grav-tubes.\n\nShe glanced down at her perspiration-soaked body and blushed. \"Maybe I should have jumped in with you...\"\n\n\"The twins definitely put you through your paces,\" he agreed, pulling her into the blue anti-gravity field. \"You'll just have to shower with me instead.\" \n\nShe blushed, darting a self-conscious smile at him. \"I never would have believed I could get so turned on...\"\n\n\"The twins are very sexy,\" John agreed, stepping out of the grav-tube on Deck Two. \"You've got great taste in women.\"\n\nJehanna went quiet as she walked at his side, seemingly lost in thought.\n\n\"Everything okay?\" he asked with concern as they walked into the bedroom, surprised by her lengthy silence.\n\nShe peeled off her dress and watched him as he stripped off his damp clothes. Following him into the shower, she finally replied, \"I know a lot of the girls have paired off, but I didn't expect it to happen to me\" Looking into his eyes, she continued in a hushed voice, \"Is that why I'm so attracted to the twins? Did you choose them to be with me?\"",
        "John looked at her in surprise as he turned on the jets of water. \"No, I had nothing to do with it. I actually wondered if you'd end up with Helene...\"\n\n\"Helene?\" she asked, frowning in confusion.\n\nHe got some shampoo and began to gently lather her hair. \"Well, you two did join us at about the same time. She's very innocent, whereas you're experienced and sophisticated; I just thought you'd make an interesting couple... opposites attract, that kind of thing.\" \n\n\"Apparently I'm not all that worldly-wise...\" she said with a rueful frown. \"Weber's men did manage to kidnap me with that ruse about the missing Nymphs.\" \n\n\"Yes, but you didn't go into that situation with your eyes closed. You still managed to take out one of them, despite being outnumbered five-to-one by special forces soldiers; I think you handled yourself exceptionally well.\" He smiled as he rinsed off her long raven mane. \"I was right about one thing though... you are into exotic alien girls.\"\n\nHer brown cheeks darkened as she blushed furiously. \"I can't believe I'm thinking about having a relationship with a couple of alien princesses... I've already got a hugely-hung boyfriend that cums like a firehose! It's like I've tossed all my inhibitions out the window!\" \n\nJohn laughed and pulled her into his arms. \"Just do whatever feels right. No one's going to judge you.\"\n\n\"I know... it's crazy,\" she murmured into his chest. \n\n\"Crazy good, or crazy bad?\" he asked, tilting his head to one side so he could look into her brown eyes.\n\n\"Definitely the good kind,\" she replied with a shy smile. \"I love how liberated I can be with you.\"\n\nHe gave her a supportive squeeze, then said quietly, \"If you do decide to take things further with Irillith and Tashana, please look after them. They might seem very confident, but they've both been through terrible ordeals.\"\n\nShe looked up at him and caressed his cheek. \"You love them so much... I can hear it in your voice.\"\n\n\"Their lives were horrendous before I met them... the things they've had to endure were truly appalling.\" He shook his head in sorrow. \"I've tried to do everything I can to help them recover; I want to make sure they lead wonderfully happy lives from now on.\"\n\n\"They're like the Maliri...\" she said softly, looking thoughtful.\n\n\"What do you mean?\" he asked, frowning in confusion. \"They're both Maliri girls...\"\n\n\"No, I mean the Maliri as a species and the way you view them,\" she said, her voice stronger now, ringing with certainty. \"The Maliri suffered at the hands of Mael'nerak and declined as a civilisation after his death. Since you got involved with them, you've been doing whatever you can to improve their lives.\"\n\nHe nodded as he listened. \"That's true, I've tried to help fix the major problems in their society. Fate's been cruel to the Maliri; they deserve to have a bright future.\" \n\n\"The Maliri were right to call you their 'Protector',\" she said with a gentle smile. \"They're your people, John. I can tell how much you care about them and want to keep them safe.\"\n\n\"Maybe there's more to me 'claiming' the Maliri than I thought,\" he murmured. \"I've felt that way for a while...\"\n\n\"When did it start?\" she asked curiously.\n\nHe frowned as he tried to remember the exact moment his feelings changed. \"Probably around the time Edraele joined me. That was when I started getting to know the Maliri engineers she assigned to refit the Invictus; they were really lovely girls... it was awful finding out how twisted Maliri society had become.\"\n\n*I'd also just become your Maliri Matriarch,* Edraele said softly. *And all those engineers were the first set of Wards you connected to me...*\n\n*Wards?* John asked, unfamiliar with the term.\n\n*I thought it sounded more fitting for my girls than Thralls, considering the way you and I feel about them,* she explained, sending him a loving telepathic smile. *I know you dislike the Progenitor terminology.* \n\nHe considered it for a moment, then smiled. *Wards... Yes, that's a much better way of describing them.*\n\n\"You look happy,\" Jehanna noted, tracing the curve of his lips with her finger. \n\n\"Did Alyssa keep you in the loop for my conversation with Edraele?\" When she nodded, he continued, \"I've always hated calling the girls 'Thralls'... it sounded so derogatory. Take you for example; I love you and want to keep you safe and happy... calling you my 'Thrall' sounds totally wrong.\"\n\nHer eyes softened and she gave him a tender kiss. \"I like being your Ward.\"\n\n\"I like it too,\" he said, embracing Jehanna and returning her kiss.\n\nFaye appeared in a purple flash and cleared her throat. \"Sorry to interrupt. The Raptor's on final approach to Olympus. They'll be docking in two minutes!\"\n\n\"Perfect timing, thanks Faye,\" he said, releasing Jehanna.\n\nThey quickly finished showering, then dressed in a fresh set of clothes. Holding Jehanna's hand, he walked back to the grav-tubes, then descended to Deck Nine. As they entered the Secondary Hangar, the Raptor glided through the huge hangar doors, returning home with his missing Lionesses. He spotted Calara and Sakura in the cockpit, the two girls grinning with delight when they saw he was waiting for them.\n\nHe heard the click of heels behind him and Alyssa strode into the hangar, a garment bag folded over her arm. \n\n\"Hey, handsome,\" she purred, as she slipped her free arm around his waist. She leaned around him to smile at Jehanna. \"And hello to you, sexy girl. You really got him going earlier... nice job!\"\n\nJehanna grinned at the blonde, then bowed her head respectfully. \"I live to serve, Matriarch.\"\n\nAlyssa laughed and shook her head. \"Nice try, but it doesn't sound right coming from you. You need pointy ears and blue skin to carry that off.\"\n\nJehanna glanced up at John and wrinkled her nose. \"Didn't work?\"\n\nHe shook his head and smiled. \"You just stick to being a feisty truth-seeking journalist. I don't need anyone else pretending to be a mindlessly devoted Thrall... considering how wilfully disobedient the girls are, it just feels like they're making fun of me.\"\n\n\"Would we ever do that?\" Alyssa asked, her face a picture of innocence.\n\nJohn raised an eyebrow at her and chose not to comment, then turned his attention back to the gunship as the loading ramp began to lower. Calara and Sakura were waiting inside with beaming smiles, their beautiful faces appearing as the ramp dropped towards the deck. Sakura couldn't wait and she ran along the ramp then vaulted off the lip, moving in a blur as she did a flip through the air.\n\nShe rushed into his open arms, hugging him tight. \"Thank you for sending me with Calara!\" she exclaimed, her voice throbbing with gratitude. \"I had such a wonderful time!\"\n\n\"You look so much happier,\" he replied, running his fingers through her silky-black hair as he gazed into her almond eyes. \"I'm really glad you enjoyed yourself.\"\n\nSakura gave him a loving kiss. \"I plan to show you my appreciation later...\" She darted a glance at Alyssa, that brief look carrying a weight of emotion. \"... to both of you.\"\n\nAlyssa's smile got bigger as she beckoned the Asian girl over for a hug. \"Come here, beautiful.\"\n\nHer timing was perfect, as Calara marched up to John and snapped to attention, throwing him a sharp salute. \"Permission to come aboard, Admiral John Blake.\"\n\n\"Welcome back, Commander,\" John replied, returning her respectful salute. He relaxed, breaking into a broad smile. \"You heard then...\"\n\nCalara flew into his arms and hugged him fiercely. \"I'm so proud of you, John! There isn't a finer man in the Admiralty!\"\n\nHe nuzzled into her soft brown hair and returned her hug. \"Thanks, gorgeous, but after everything you've accomplished it should really be you with a seat in High Command.\"\n\nShe pulled back to look in his eyes and shook her head. \"You earned this. You've called the shots all along, I've just been there to support you and carry out your orders.\" \n\nThey shared a loving smile, then John turned and put his arm around Sakura as well. \"I really missed you two! I'm so glad you're back home again, it's been... hectic... here.\"\n\nCalara gave him a wry look. \"Yes, so we've been told. My mother says hello by the way, but I don't think she was too impressed at having the two of us pass out for ten hours due to psychic exhaustion...\"\n\nSakura frowned at him and wagged a finger. \"I can't believe you went into the Astral Plane alone! That was a terrible idea!\"\n\nCalara nodded, looking equally disapproving. \"We've got to plan those Astral battles better... We're getting caught flat-footed every time!\"\n\nAlyssa looked contrite as she admitted, \"Actually, this one was all my fault. I should have just backed off when I realised how much more power I needed to create my sub-plane.\"\n\nThe Latina wrapped her arms around her girlfriend. \"I wasn't blaming you, my love. I was just saying we need to prepare better for the next one.\"\n\nReturning her warm embrace, Alyssa gave Calara a smouldering kiss. \"We should have done that straight away... I really missed you.\"\n\n\"No more time apart,\" Calara agreed, gazing adoringly into her lover's eyes.\n\n\"Hey, welcome back!\" Dana called out from the doorway, striding into the hangar with Rachel at her side. \n\nAfter another round of friendly hugs, Sakura laughed and said, \"We'll never leave the hangar at this rate. Are Jade and the twins coming down too?\"\n\nDana glanced at Alyssa and said, \"Actually, blondie asked us to come down here... for some kind of surprise?\"\n\nSakura bounced up and down, her eyes sparkling with excitement. \"Did the delivery arrive?!\"\n\n\"In the Cargo Bay,\" Alyssa replied with an indulgent smile.\n\nThey followed Sakura as she rushed out of the hangar, with Jehanna falling into step beside Calara. \"Would you be able to spare a few minutes for an interview before I leave?\"\n\n\"Of course,\" the Latina replied with a warm smile. \"I'm curious to see what has Sakura so excited, but we'll find somewhere quiet afterwards and have a talk.\"\n\nThe Cargo Bay was a hive of activity. A huge ball of Crystal Alyssium rotated in the air beside an enormous pile of glistening white Invictus plating, with liquid metal streaming off to make half-a-dozen more protective panels. One of the maintenance bots floated beside the closest stack, then picked up an armour plate and began to carry it outside. It had nearly reached the door when a second robot floated through on its way to retrieve more plating, the two pausing to avoid colliding into one another. \n\nUnnoticed by the organic occupants of the Cargo Bay, the two robots floated to the left, then floated to the right, accidentally mirroring each other's actions and maintaining the impasse. The two robots stopped, their heads bobbing slightly in an odd shifting motion, almost as if they were laughing. Their red eyes glowed and each pivoted to their right, neatly avoiding each other. The oddest part of the whole interaction was the way the bot that had just entered the cargo bay patted his robotic comrade on the shoulder as they passed.\n\nThere was no sign of Sakura, but there was a huge shipping crate near the cargo bay door and squeals of joy could be heard inside.\n\nJohn took one look at the monstrous pile of armour plating, then turned to Alyssa in surprise. \"You've been shaping plates all this time?\"\n\n\"Yep,\" she replied, giving him a triumphant grin. \"I reckon I could probably keep shaping in my sleep now.\" The blonde suddenly shivered and looked a bit ill. \"Actually, fuck that... I'll start having nightmares about Invictus armour!\"\n\n\"Don't worry, you've done an amazing job shaping that lot,\" John said sympathetically, astonished by how much she'd accomplished. \"You can have a rest now, I'll finish this off.\"\n\nFaye blinked into existence beside him. \"Actually, we've got enough plates to finish the job already! I've got all my boys working on installing them and we're making great progress. We'll be finished just after midnight!\"\n\n\"That's great news, Faye, thank you,\" he said, acknowledging her with an appreciative smile. \n\nFurther conversation was interrupted by a throaty rumble from the shipping crate and Sakura emerged astride a ruby-red hoverbike. It was a big, powerful looking machine, the sleek aerodynamic styling making it appear like some kind of ferocious predatory beast. \n\n\"Oh wow!\" Rachel gasped, her eyes widening in awe. \"That's a Matsubara Z-900!\"\n\nSakura cruised up to them, a dazzling smile on her face. \"Fastest hoverbike ever made!\"\n\nDana grinned as her eyes roamed over the hoverbike. \"That monster looks fucking badass!\" \n\nRachel bit her lower lip and sauntered over, her fingers brushing along Sakura's arm. \"Got room for one more?\"\n\n\"Hop on,\" the Asian girl said, winking at the brunette. \n\nThrowing her leg over the back of the bike, Rachel groaned as she sat down, feeling the powerful vibrations from the engine. \"Holy shit... I'd forgotten how good that feels...\"\n\nDana laughed and rolled her eyes at her girlfriend. \"You're such a biker's slut! It took Sakura five seconds to get you to spread your legs...\"\n\nRachel wiggled provocatively on the seat and grinned at the redhead. Snuggling in closer to Sakura, she whispered in her ear. \"Gonna take me for a ride?\"\n\nSakura patted her on the thigh. \"You bet!\" She glanced at Dana and continued, \"What do you think of the bike? Can you make any improvements?\"\n\nDana's mind whirred as she stared intently at the highly-refined electric engine. The possibilities for improvement seemed endless and she started to catalogue them all. Rip out the old power core, add in a Progenitor variant, strip out the old anti-grav cyclics and upgrade to Maliri ones, the heat extractors could be replaced by a modification of the enhanced Kintark heatsinks... the list went on and on. She began drafting schematics in her mind for those incredibly advanced components, until finally the finishing touch... an inertia dampener built through the chassis to let the rider handle the incredible increase in power.\n\n\"Yeah, I should be able to improve it a little,\" she said with a nonchalant shrug. When Sakura's face dropped in disappointment at the redhead's low-key response, Dana broke into a grin. \"By 'a little', I actually mean a metric fuckton! How about 1600% more power?\"\n\nSakura cheered in delight. \"I knew it! You're the best!\" She glanced behind her at Rachel, then locked eyes with Dana. \"Mind if I take your woman for a spin? She can ride with you next...\"\n\n\"With me?\" Dana asked with an eager smile, reaching out to brush her fingers over the bike's alluring contours.\n\nThe Asian girl playfully smacked her hand. \"No, this is mine! Yours is still in the crate...\"\n\nDana's eyes widened and her head whipped around to the cargo container. \"Oh, fuck yeah!\"\n\n\"Hold on a second!\" Alyssa called out in a commanding voice, freezing Dana in her tracks before she could bolt off. \"I've got something for you three.\"\n\nWith a flick of her fingers she levitated the garment bag then unsealed the magnetic clasp that held it closed. Reaching inside, she pulled out a white leather jacket and handed it over to Sakura. \"This is for you...\"\n\nSakura took it reverently, marvelling at the luxurious feel of the supple leather. Her eyes widened when she turned the jacket over and saw the stylised black lioness emblazoned on the back. \"This is absolutely beautiful...\" she murmured, tracing a finger over the roaring feline.\n\n\"Thank you. I'm glad you like it,\" Alyssa said with a modest smile, handing out a second jacket to Dana and the third to Rachel.\n\nDana immediately pulled her jacket on and posed for Rachel. \"Am I getting you moist, babes?\"\n\nThe brunette looked to be struggling to keep her composure and could only nod in reply. \n\n\"You made this yourself?\" John asked Alyssa, running his hand over the scarlet lioness on Dana's back. \"Sakura's right, it looks incredible.\"\n\n\"I'm planning to make one for everyone,\" the blonde said, delighted by their awed reaction. \"I ran out of white leather, but I've got a delivery on the way that should arrive before we leave.\" \n\n\"That means I'll have to make more bikes as well then,\" Dana said, grinning at Rachel. \"Just think, you can be a slut for a whole biker gang, babes. You're not going to be able to walk right for weeks!\"\n\n\"Oh God...\" Rachel moaned, eyelashes fluttering.\n\nSakura revved the engine and yelled, \"Hold on tight!\"\n\nWith a ferocious snarl the hoverbike rocketed out of the Cargo Bay, Rachel's ecstatic scream echoing in their wake. Dana rushed off to the shipping crate, while John and the rest of the girls walked over to the open doorway to watch the red bike soaring around the enormous docking bay. It was obvious that Sakura was an expert biker, as she handled the bright-red Matsubara with consummate skill, pulling it around in daring loops. She rocketed past the Invictus and waved at the spectators, the hoverbike making a thunderous roar as they raced away into the distance. John couldn't help smiling when he saw the gleeful grins on Sakura's and Rachel's faces. \n\n\"Thanks for the jackets, Alyssa. You did an amazing job on them,\" Dana said sincerely, idling up beside them on her own brilliant blue hoverbike. She leaned over to give her friend a kiss on the cheek. \"Rachel's absolutely loving this and the Lioness biker gear was just the cherry on the cake.\"\n\n\"You're welcome, Sparks,\" the blonde replied with a fond smile, wrapping her up in a hug. \"It's lovely to see you three having a great time.\"\n\nJohn glanced at Dana's hoverbike in surprise, astounded to hear only a quiet hum. \"Why is your bike so much quieter than Sakura's?\" he asked in confusion, reaching out to touch the electric-blue faring. He could feel none of the tremors that had poured through the red bike. \"And it's not shaking either!\" \n\nDana laughed and pointed at the glinting chrome drive system between her thighs. \"It's running on electric, not a combustion engine, so it barely makes any noise. Bikers are a macho bunch and the actual power plant sounds like a purring kitten.\" She pushed a button on the bike's dashboard and the engine seemed to come alive with a menacing rumble, the blue chassis quivering under John's fingertips. \"So they added fake sound effects and the engine shakes to make it seem more badass.\" The redhead squirmed on the seat, a smirk on her face. \"Now I see why bikes get Rachel so horny... it's like riding on a giant vibrator!\"\n\nJohn reached over to press the same button on the dash and the deep thrumming roars silenced to a quiet purr. He laughed and nodded as he said, \"Yeah, I see what you mean. It does sound a bit feeble like that.\"\n\nDana pouted at him for turning it off. \"Hey, I was enjoying that!\"\n\nJehanna was looking a bit envious and she asked, \"Are you really going to make hoverbikes for everyone?\"\n\nThe redhead raised an eyebrow as she looked askance at the dusky girl. \"Why? Were you planning on making Rachel your bitch as well?\"\n\n\"No! I didn't mean it like that!\" Jehanna hurriedly protested, shaking her head.\n\nAlyssa nudged her with an elbow. \"Relax, she's just messing around. Don't you remember? We can't get jealous anymore...\"\n\nDana winked at her, her full lips lifting into a mischievous grin.\n\nLooking relieved, Jehanna playfully pushed Dana's shoulder and returned her smile. \"That wasn't nice, yanking my chain like that.\" She ran her fingers over the resplendent blue paintwork and continued wistfully, \"It's a beautiful machine... I must admit, I've always been fascinated by hoverbikes, but never felt brave enough to ride one myself.\"\n\nDana nodded and patted the powerful vehicle. \"Yeah, dangerous beasts these things. I'll add in lots of safety features so it'll be as safe as riding a kids' trike when I'm done. As for building you one...\" She met Jehanna's curious gaze, then ruefully shook her head. \"Afraid not... they're a perk for Lionesses who are retiring to Maliri Space with us.\""
    ],
    "authorname": "Tefler",
    "tags": [
        "cum inflation",
        "swallow",
        "blowjob",
        "bisexual",
        "alien",
        "psychic",
        "artificial intelligence",
        "first kiss"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-106"
}