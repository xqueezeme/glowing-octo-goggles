{
    "title": "The Morrisons Ch. 23",
    "pages": [
        "It is with profound thanks to Fat_Dad not only for editing this chapter of The Morrisons but for helping me when I experienced some difficulty with the inclusion of combining story characters. There are a couple portions of this chapter that Fat_Dad contributed, so I could move on. \n\nWe have now made more introductions of Fat_Dad's characters from A New Life for Dr. Mitchel and Fat_Dad will be adding characters from The Morrisons into his story.\n\n~ ~ ~ ~ ~ ~ ~ ~\n\nAuthor's Note: The Morrisons is a continuing story where each chapter builds on previous chapters. If this is your first encounter with The Morrisons, I'd like to suggest you read the previous chapters prior to reading this one. There's a complete list of story characters on the last page. Please enjoy! \n\n~ ~ ~ ~ ~ ~ ~ ~\n\nPLEASE NOTE: \n\nBefore you read this chapter, be advised that it contains very graphic depictions of raw sex and/or love-making between two or more consenting people. IF such depictions upset you or make you lose sleep, PLEASE don't read any further. You may not enjoy reading a particular portion of the story; that doesn't mean other readers will dislike that same portion of the story. It's a different-strokes-for-different-folks kind of story. \n\nFor the sophisticated intellectuals who read incest/taboo stories on Literotica expecting to find professional authors with perfect everything, including but not limited to, punctuation, spelling, dialog, characters with only sophisticated actions, etc., please pass this chapter by, you won't find that here! We do our best to correct all typos and spelling errors but some may still slip past us.\n\nI appreciate hearing from readers, and I want to thank all those who took time to send me a public or private message. However, please don't leave a derogatory comment, if you willingly overlook THIS WARNING. \n\n~ ~ ~ ~ ~ ~ ~ ~\n\nFor the record: All characters engaging in sexual activities are of legal age!\n\n~ ~ ~ ~ ~ ~ ~ ~\n\n************\n\nFrom - Chapter 22\n\nJoanna finished her shower and dried off. She hung up her towel and walked into the bedroom. About three steps into the room she stopped and looked at the wide spread legs with a delicious looking pussy at the apex. Finally Joanna questioned, \"I thought you had jet lag and wanted to go to sleep.\"\n\nJenna smiled and said, \"I took my shower and I was thinking how much fun I had tonight with you and I don't want it to end. I'm tired and I want to cuddle with you before I go to sleep. In the morning, I want to be here when you wake up and I'm going to ravish your body, if you let me of course.\"\n\n\"That what took me so long in the shower. I too was thinking how much fun I've had tonight and over the past couple of weeks and I came to the conclusion I'm going to be more spontaneous and try everything and then I'm only going to repeat the things I had fun doing. Being with you tonight was a lot of fun so I'd love to have you with me tonight and I look forward to waking up in the morning.\" Joanna said with a huge smile spreading across her face.\n\nJoanna crawled up on the bed and they pulled the top sheet down and lay down. They hugged and kissed each other for a few seconds before Jenna pulled back and said, \"That's a sample of what you'll get in the morning. Goodnight my love.\"\n\nJoanna said, \"Good night sweetheart.\"\n\nJenna rolled over on her side facing away from Joanna so Joanna moved over to spoon up against her body. She reached across her and cupped Jenna's small boobie and gave it a gentle squeeze and Jenna moaned softly. Within a few seconds both of them were in dreamland.\n\n****************************\n\nChapter 23\n\nFor the first time in many days I woke up to the unbelievably wonderful sound of birds chirping and singing outside my open bedroom window. Traveling was fun but the small things in life still had a calming effect on me. I lay on my back listening to the birds for almost five minutes before I felt Beth stir. She moved her head over and put it on my shoulder as she mumbled, \"Mornin' sweetheart.\"\n\nI whispered, \"Good morning to you too.\"\n\nBeth cuddled up next to me, kissed my cheek before she said, \"Listen to the birds outside.\"\n\nI smiled and said, \"Yes, they sound beautiful, I never realized how much I've missed them until a few minutes ago when I woke up, they were the first thing I heard.\"\n\nKim stirred on the other side of me before she lifted her head and looked at us. She smiled saying, \"It looks like I'm the sleepyhead this morning.\"\n\n\"Only by about fifteen minutes dear.\" I replied\n\n\"As much as I'd love to lay here with the two people I love, Mother Nature is telling me, I'd better move my ass or someone is going to be all wet.\" Beth said quietly\n\n\"Do you want me to plug that for you so you can stay a little longer?\" I asked\n\nBeth quickly replied, \"If you tried that right now, I'd really squirt all over us.\"\n\n\"I've got to go too. Let's get up.\" Kim added\n\nAll three of us moved to the edge of the bed and one by one we stood up. Beth was the first one to disappear into the bathroom leaving Kim and me beside the bed. Kim pulled me into her arms and hugged me saying, \"I'm a very happy woman.\"\n\n\"I'm a very happy man. I have two exquisite ladies I love dearly but I also have a wonderful family and great friends. Life doesn't get any better than that.\"\n\nKim hooked my arm with hers as she said, \"I've got to pee, let's go buster.\"\n\nWe walked into the bathroom; Beth was taking a seat on the bidet. Kim sat down to pee, as I started to squat down Kim said \"Don't bother; I'm going to douche when I get done peeing.\"\n\nI walked over to the shower and started the water. I turned on the shower heads and then walked back to the toilet and took a leak. I joined Beth in the shower and Kim followed me a couple minutes later. We washed each other's body thoroughly. When we finished, we dried each other and the two girls headed over to the sink area and began the process of making themselves \"more\" beautiful. I only had to brush my hair, shave and brush my teeth. \n\nI walked into our closet and selected my suit along with the additional clothes I needed for the day. I brought everything out and hung up my suit in the bedroom and put my other clothes on the bed. \n\nWhile I waited for Kim and Beth to finish their personal styling, I walked to the room Joanna was using to wake her up. I saw two bodies in bed under the sheet so I walked over to the side of the bed so I could see which body belonged to Joanna. I saw her head and walked around the bed and tapped her lightly and called her name. After a few moments she opened her eyes and sat up all at the same time. I stepped back and immediately said, \"Joanna, I'm sorry to disturb you but I needed to wake you so I can talk to you.\"\n\nJoanna rubbed her eyes as she said, \"It's ok Dan, what do you need?\"\n\n\"I need for you to get up and get showered or whatever you do in the morning; I have a job for you to do today. We'll talk down in the kitchen when you're ready, I don't want to wake up your partner over there.\"\n\nSuddenly the sheet started talking, \"I'm already awake daddy. Your quiet is the same as a herd of elephants.\" Half way through her little speech Jenna lowered the sheet off her head.\n\nI said, \"Good morning sweetheart, I love you too.\"\n\n\"Oh daddy, you know I love you but you know I'm a light sleeper, even when I sleep until eleven on weekends.\" Jenna replied\n\nJoanna asked, \"What do you need me to do Dan?\"\n\n\"Why don't you get up and get through the shower and meet me downstairs. Oh, most likely Ted will be down there too. We can talk over coffee.\" I said\n\n\"Ok, sure no problem. I'll be right down after I take a shower and get dressed.\" Joanna added\n\n\"You don't have to rush to get dressed if you don't want to. You'll have some time before you have to leave.\" I told Joanna as I turned and started to walk towards the door.\n\nI walked back to my room and noticed Beth and Kim were still in the bathroom. I turned around and walked down the hall, headed for the kitchen. As I started down the stairs, the wonderful aroma of coffee filled my nostrils. I walked into the kitchen, Terri had her back to me so I tried to sneak up on her. When I was only a couple of feet behind her she said, \"Good morning Dad, have a seat and I'll pour you a cup of coffee.\"\n\nI walked over to Terri and hugged her from behind and she turned in my arms and threw her arms around my neck saying, \"You can't sneak up on me mister.\"\n\n\"I only wanted to show you how much I love you.\" I replied quickly\n\n\"Daddy, I know how much you love me. Since the first day I arrived here, I've felt like I was part of this family.\" Terri said with a beautiful smile on her face\n\nI held Terri in my arms and I kissed her with a meaningful passionate kiss. We were still kissing when Kim and Beth walked into the kitchen. They stood and watched us until we finished our kiss, before Kim said; \"Now that would have made a perfect picture for our family album.\"\n\nWithout looking at them, Terri replied, \"Go get your camera and take your picture because we're very comfortable in our current position. Ain't that right, daddy?\"\n\nI kissed Terri passionately again and there was a flash. While we were still locked in our kiss, I turned us sideways, another flash shone brightly. This time when I broke our kiss both Terri and I looked towards Beth and Kim. We were momentarily blinded by another camera flash. Kim chuckled saying, \"Got it! You two look simply marvelous, but let's get some coffee and we'll talk some more.\"\n\nTerri put her hands on my chest and pushed lightly as she said, \"Go sit down, I'll bring you some coffee.\"\n\nBeth walked over to the refrigerator and picked up the cream. She brought it back and set it on the breakfast counter. As we were getting ready to sit down, Ted and Marion rounded the corner and came into the kitchen. Kim said, \"Let's move to the dining room table, there's more room.\"\n\nAll of us who had coffee cups picked them up and moved to the dining room, with Beth bringing the cream. Kim picked up the sugar along with her coffee. Ted and Marion waited for Terri to finish pouring their coffee. As we were ready to sit down, Joanna and Jenna followed closely by Mary and Shelly walked into the room. Everyone exchanged morning greetings and the final four headed for the kitchen for their coffee. \n\nOnce everyone had coffee in front of them and was seated at the table I looked at Joanna and Jenna saying, \"I hope you two got enough sleep last night. How was the flight up and back? Did the two of you keep Jack entertained?\" I asked\n\n\"Oh daddy, yes we had so much fun. Jack is a really great guy. We talked about flying all the way back. He answered all of our questions and explained to us, in detail, how he finds his destination without road signs.\" Both Jenna and Joanna laughed when Jenna said that. \n\nI want to learn to fly a plane; well actually both Joanna and I want to learn to fly. Jack's friend is a professor over at the community college and he's going to check with him to see if he teaches a non-credit aviation course. Jack's going to call and let us know what he finds out.\" Jenna said excitedly\n\n\"I'm glad you had a great time and if you're serious about learning to fly then I'll pay for it but you both have to promise me you won't drop out of the class. You have to go and finish the school.\" I added\n\nJoanna and Jenna looked at each other and both of them squealed and giggled. Joanna said, \"I hope Jack gets back to us soon.\"\n\nTed cleared his throat and paused before he said, \"In the meantime Joanna, I have a job for you to do and you'll have to get dressed and leave here shortly. I want you to take the car and go over to the Simpson's house and spend all day with them while the movers are helping them pack and move, to their new house. I have the address for the new house in the office.\"\n\n\"Some packers will arrive early this morning and help Tina pack. I don't want anyone to enter that house unless they've been checked out. The security crew in the van has a computer so they have access to our system and can run a check on the people. I want you to be inside the house and make sure everyone is cleared before they enter.\"\n\nTed finished with, \"Later in the day it's going to be a little more hectic because the door will be open while the movers are doing their job. So, you'll have to stay right on top of everything and if you need any help, you'll have the radio with you and you can get the guys out of the van in a heartbeat. Do you have any questions?\" \n\n\"Thank you! I appreciate you keeping me on this detail for another day. I wasn't looking forward to going back to work in the jail. But I would have, mind you. No, I don't have any questions, everything is very clear.\" Joanna replied\n\n\"Oh one last thing, when it's time to close up shop at that house, you'll take Tina and her kids over to the new house and check it out before they're turned loose in there.\" Ted added\n\n\"If I'm going to be busy all day, I'd like to get my exercise in quick by taking my jog through the woods out back, before I get dressed.\" Joanna said\n\nI caught on to what Joanna said at the same time Ted and Mary realized what she meant. Only the four of us knew that Joanna would go out in the woods and leave a message with the unknown person watching our house. \n\nTed quickly added, \"Yes, if you've been running each day, I don't want to you break away from your schedule. Go ahead, finish your coffee, take your run then you can get dressed and head over to Tina's house. I've got to get dressed soon because I've got to the office and see what's happening.\"\n\n\"Ok, I can do that. I really didn't want to miss my morning exercise. Then I'll grab something to eat on the way over there.\" Joanna replied\n\n\"Joanna, I'll leave some money for you on the counter. With them moving, Tina won't have time to make lunch. I'll see Jeff this morning and give him some money to stop and pick up dinner on his way home.\" I said \n\nI looked at my watch and said, \"I need to get dressed soon. Terri, Joe Bailey will be at the gate in a little while. You'll have to open it for him this morning.\"\n\nTerri quickly asked, \"What would you like to eat and I'll get it fixed while you're dressing.\"\n\n\"Don't worry about it this morning Terri, I'll have my secretary order something and have it delivered and I'll eat while I work.\"\n\nSuddenly off to my left we heard Beth say, \"Note to self, the boss is going to want breakfast ordered.\"\n\nEveryone started laughing and Beth looked around the table asking, \"What?\"\n\nJoanna finished her coffee and went up to her room and put on her running shoes, picked up her cell phone and walked back downstairs. She detoured into the office by force of habit and turned off the alarm. As she walked through the dining room she said, \"I shut off the alarm. I'll be back in a little while.\"\n\nKim, Beth and I finished our coffee and stood up, Ted also stood up. The four of us excused ourselves and headed towards the stairs. Always being gentlemen, we allowed the ladies to walk upstairs ahead of us. Beth was in front of Ted so she asked over her shoulder, \"See anything you'd like to play with back there?\"\n\n\"I do... I do... but all of us have to get dressed now. Ask me that question when we get home tonight and I'll show you what I'd like to play with. I ain't gonna start anything I can't finish.\" Ted replied.\n\n\"He's a smart man.\" Kim added\n\nIn our respective bedrooms each of us donned the facade we'd use to do our jobs. Kim and Beth of course took a little longer than I did because everything had to be just right for our first day back to work. We walked out of our bedroom and started down the hall when Ted came out of his room wearing his police uniform. Kim hurried right over to Ted saying, \"I've always loved a man in uniform. If I get a ticket can we make a trade or something?\"\n\nTed stopped dead in his tracks and looked at Kim before he asked, \"Ma'am are you trying to bribe an officer of the law? If you are, I'll have to detain you for questioning. Don't worry; they'll be easy to answer questions.\"\n\n\"Ummm, that sounds so sexy. I could be surrounded by men in uniforms.\" Kim giggled as she replied\n\nTed hugged Kim saying, \"Part of the reason I love this house is because everyone can say whatever they want and no one takes it personally or gets jealous. This is truly a family.\"\n\nAs we were walking into the dining room the gate phone rang. Terri picked it up asking, \"How may I help you?\"\n\nShe listened to the phone before saying, \"Ok, Mr. Bailey, I'll open the gate for you, please pull through the gate and pause for a moment for the gate to close before you proceed up to the house. I'll inform Dan you are here.\"\n\nI smiled and said, \"Joe's password is on the desk in the office, I'll be right back.\"\n\nWhen I walked back to the front door, Kim and Beth were waiting for me. Beth was holding her briefcase and laptop. Ted walked over asking, \"May I ride to work with you too?\"\n\nI opened the front door and the four of us walked out on the porch and Joe stood by the back door of the car. When he saw us he opened the back door and said, \"Good morning Mr. and Mrs. Morrison and you too Ms. Thompson.\"\n\n\"Joe, I may have been promoted but I'm still the same Dan Morrison you met before. Please call me Dan, this is Kim my wife and you know Beth. Up there on the porch is my good friend Ted Johnson. I'd like us to take Ted to the police station this morning as well.\"\n\nJoe looked up at Ted, \"Good morning Ted.\"\n\n\"Joe, here is your personal gate password to use when you need to get in my gate. Don't give it to anyone else. Secondly, we have to go within a block of where Kim works so I want you to drop her off before we get to my office. Here's the address for Kim's office. Ted will give you the address for the police station.\" I said.\n\n\"Yes Sir, that won't be a problem Sir. Will we be dropping your wife and Ted off every morning Dan?\" Joe asked\n\n\"Unless she has to stay late to meet a deadline or I'm away on business, Kim will be riding with us. I think this will be a one-time event for Ted.\" I replied\n\n\"Very good Dan, is there anything you wish for me to do when I come to pick you up in the mornings?\" Joe asked\n\n\"No, for now I'm getting used to all this added attention, I can't think of anything special I'll need.\" \n\nI allowed both Kim and Beth to get into the limo before I stepped in and found that they left room for me to sit between them. Ted sat across from us. Joe closed the door; I looked at both ladies before I asked, \"Did either of you ever imagine this happening?\"\n\nKim was the first one to ask, \"Can we fool around in here since there's so much room?\"\n\n\"I'll have Joe come up to my office in the next few days and I'll have a talk with him. If he can be discreet, I think we can do something.\" I said\n\nFor some reason the ride into the city seemed very short. Soon we were pulling up in front of Kim's office building. I watched as Kim slid the hem of her dress up until her panties were showing. She waited for Joe to open the door and then she leaned over and gave me a kiss. To make matters even more interesting, she really leaned over, past me and kissed Beth. Then she turned and gave Ted a passionate kiss as well. I noticed as she was sitting back down her legs had been spread very wide. Kim looked at me and winked before she slid her ass across the seat effectively tugging her skirt higher as she exited the car. Once she stood outside the door Kim adjusted her dress and walked towards her building. Joe swung by the police station next, and Ted climbed out of the car before Joe could get out to open the door. It only took a few minutes before we pulled up in front of our building. Beth said, \"I want you to get out first and watch me get out.\"\n\nWithout saying anything I slid across the seat and got out and then turned to wait for Beth. Moments later I saw all legs with a small \"V\" of white silk between them at the top coming towards the door. Joe offered Beth his hand and when she was standing outside the car, he waited for her to adjust her dress and step away from the door before he closed it. Joe turned to me saying, \"If you need me at any time, I'll be ready within a few minutes. It won't matter where you want to go; I'm at your service.\" ",
        "I thanked Joe as Beth and I turned to walk towards our office building. A couple of the guys I used to work with, caught up with us and started a quick conversation after greetings were made. One of them made the extra leap forward to open the door for us. I thanked him as we walked through the door. Once inside almost everyone greeted us as we walked to the elevators. Beth and I rode up to our floor alone. \n\nThe elevator door opened and we started walking down towards our offices; there were a lot of people moving around. Kelly met us before we could get to our offices and said, \"The movers are here, they are packing everything in your offices. They worked late last night and have finished moving Mr. Banks and Ms. Summers out of their offices. Your new offices, as I understand it, were cleaned last night and the movers were here before I got here this morning, moving both of you. I've secured board room one for you to work in for right now. However if you want to go in your offices, I guess that's your decision.\"\n\nI looked at Beth and said, \"Go put your stuff in the board room and then meet me in my office.\"\n\nI walked into my \"old\" office and saw the essentials were still there but my personal items I used to have on my desk were gone. I walked over to my closet and found two young ladies in there packing my underclothes, shoes and other miscellaneous items I had bought and put in there. All my suits were gone so I asked, \"Have you already taken my suits to my new office?\"\n\nBoth young ladies looked at me. The one holding my boxers in her hands dropped them like they were superheated and both of them exclaimed at the same time, \"Mr. Morrison?\"\n\nThe girl who had been holding my boxers looked at me with her cheeks flushed bright red, I smiled and said, \"Don't worry, those boxers are new, I've never worn them.\"\n\nAfter a few seconds, the one girl said, \"They told us to move everything over to your new office and put everything away in the drawers over there. Are you really Mr. Morrison?\"\n\n\"Yes, I'm Dan Morrison. Since you are playing with my underwear, don't you think it would be nice if I knew your names?\" I inquired with a big smile on my face.\n\n\"I'm Taffy and she's Connie.\" Said the girl closest to me\n\n\"I'm glad to meet both of you. So now that we know each other, can we get back to my original question? Did you take my suits over to my new office already?\"\n\n\"No sir, a couple of men took your suitcase and your suits over there. They were going to hang them up in your closet. They left us here to pack your other items and bring them over.\" Taffy informed me.\n\n\"Have you packed Ms. Thompson's personal belongings yet?\" I asked\n\n\"Yes sir, we did hers first before we came here. All of her personal items are already in her closet.\" Taffy offered again\n\n\"May I ask you a question Mr. Morrison?\" Connie inquired\n\n\"Yes you may, but you don't have to ask me, to ask a question, I pull my pants on the same way both of you do, one leg at a time, so that makes us even.\" I replied\n\n\"WOW, you sound just like my dad. He says it a little different saying, unless you stand up on a chair and jump into your pants, you put your pants on one leg at a time just like me.\" Taffy added \n\nI laughed and said, \"I'll remember that Taffy.\"\n\n\"Connie, what was your question?\"\n\n\"I know they told me you were the big boss but you don't seem bossy like some of the people here. They think because we're young they have to holler at us and call us nasty names all the time. So my question is why are you so nice and you didn't holler at us when you first came in here?\" Connie asked\n\n\"Yeah, one person keeps calling us stupid but both of us are very smart. We graduated from high school last year and both of us are high honor students. We had to find a job to help out our families because our parents got laid off and couldn't afford to send us to college even though both of us had some scholarships. They weren't full scholarships so we decided to take a job for a couple of years.\" Taffy added\n\nBeth had walked up behind me as Taffy was speaking and she stepped forward saying, \"I came to work here right after I graduated so there's nothing wrong with either of you.\"\n\nI asked, \"The person calling you stupid and nasty names is he a fellow worker or a supervisor? What's his or her name?\"\n\n\"Gosh Mr. Morrison, we don't want to get him in trouble, we'll get fired.\" Taffy said very directly\n\n\"I have my ways of finding the information I'm seeking, if your allegations are true and correct, I'll know without using either of your names. I only want to narrow down my search.\" I said\n\nSuddenly a male voice boomed out in my office asking, \"What the hell are you two lazy bitches doing in that closet? Are you fucking sleeping on the job again? I don't know why they hire people like you two.\"\n\nBeth and I were inside the closet and out of sight; I held my finger up to my lips and kept the girls quiet while we waited with Taffy and Connie for the person to open the door. When he did the four of us were standing there looking back at him. Finally he asked, \"Who the hell are you?\"\n\nI stepped forward with rage racing through my body and I kept telling myself, \"Control ... control ...Dan, get control... I realized I was nose to nose with the man before I knew it. I looked him square in the eye and said, \"Beth, call security!\"\n\nBeth scooted past me and over to the phone on the desk, I know she picked it up and started talking but at the same time the man in front of me told me, \"I don't know who you are but you're biting off more than you can chew, little fellow. Step back now or you're going to get hurt!\"\n\nI stood my ground and in as much of a controlled voice as I could, I asked, \"What is your name?\"\n\nImmediately he laughed at me before he said, \"My name's John Brown, ya ask me again and I'll knock you down, little man! Now who the fuck do you think you are in that fancy suit of yours still standing in front of me like you're the boss of something?\"\n\n\"My name is MISTER Dan Morrison and I AM THE BOSS! Now I want you to go over there and take a seat in front of my desk and don't move until I tell you, you can. NOW MOVE!\"\n\nHe stared me in the eye for a few more seconds, I saw him double up his fists so I repeated myself and said, \"SIT DOWN NOW, PLEASE!!\"\n\nHe uncoiled his hands and walked over to the chair in front of my desk and sat down. I looked at both Taffy and Connie and asked, \"Is he the only one?\"\n\nTaffy shook her head no, so I asked Beth to bring me a piece of paper and a pen. When Beth was inside the closet with the girls I said, \"I want you to write down the names of every person who has called you names and their departments. I will deal with them directly. Both of you girls stay in this closet until I'm finished, with this guy. Beth please bring me the paper when they are done.\"\n\nI walked into my office and just as I was ready to sit down in my seat, two security guards and Kelly came rushing in. I held up my hand and stopped them inside the door. I sat down in my chair and looked across my desk and asked in a controlled voice, \"What's your name?\"\n\nThe man across from me was defiant saying, \"Benjamin Franklin.\"\n\n\"Ok Benjamin Franklin, how long, have you worked for our company?\" I asked with as much control as I could muster. \n\n\"Look, are you going to fire me? If you are then let's not fuck around with trivial bullshit. I don't care if you do have security here, I'll fuckin' get you first and you'll be one sorry son-of-a-bitch.\" \n\nI looked directly at the man sitting in front of me and in my mind I sized him up. When I opened my mouth to speak I amazed myself by the amount of control in my voice when I said, \"I don't care when or where you learned to be a bully but as far as I'm concerned it stops right here and right now!\" \n\n\"I'm not the push over you may think I am, but more than that, YOU work for me, not the other way around. In a few moments, I'm going to ask the young ladies in that closet to come out here and the only thing I want to hear come out of your lips is an apology to them for the way you treated them and talked to them.\"\n\n\"Beth please bring the young ladies out here, this guy wants to say something to them.\" I said.\n\nBeth cautiously stepped out of the closet and motioned for the girls to follow her. When they were on my side of the desk looking back at the guy, I said, \"Now's your chance to apologize.\"\n\nBoth girls were looking down at the floor when the guy said, \"You little fucktards have been nothing but trouble since you came here to work. Both of you can go fuck yourselves. And you asshole, you can go fuck yourself as well.\"\n\nThe guy started to get up from his seat and I saw both security guards rapidly move forward, up behind the guy's chair. He saw them and decided to stay in his chair. I continued talking by saying, \"I'm going to find out your real name. I started my career with this company at the bottom and worked my way up. Once I became a supervisor, I always tried to find some good in each person. It's unbelievable to me that I've finally met someone who's rotten to the core. I want you to know that you are the first person I've fired, in my whole career.\" \n\n\"I will make sure a letter is put in your file with the details of today's events, clearly listed. You might as well apply for a job, shoveling manure out of box stalls, at a local farm because if I have my way, you'll be blackballed for anything higher than that.\" \n\n\"I won't be a bit surprised if I read your name in the police blotter. You have an anger problem and you won't be spewing your venom around here anymore.\"\n\nAs I finished speaking I saw two police officers rush into my office with a couple of supervisors leading the way. They walked all the way forward until one was standing on each side of the guy's chair. I looked at the officers and said, \"This guy is no longer an employee of this company. He won't give me his name so I'd like him escorted off the company property and warned if he comes back I'll press trespassing charges against him.\"\n\nThe officer on his right asked, \"What's your name?\"\n\nThe guy looked up at the officer saying, \"You can go fuck yourself too. I've had enough of his shit and I'm leaving.\"\n\nAs he tried to get up the officer said, \"You're right; you are leaving, with us and in cuffs. You're under arrest for obstruction. You have the right to remain silent anything you say can and will be used against you in a court of law...\"\n\n\"FUCK YOU AND THE HORSE YOU RODE IN ON!\" the guy shouted as he tried to get up and it turned into a fight. He managed to punch one of the officers in the side of his head. The other officer zapped him with a tazor a couple of times, but the man kept fighting. They wrestled him to the floor and with the help of the security guards; they put the hand cuffs on him. When they tried to stand him up he attempted to kick them so they put him back on the floor. While my security guards helped hold him down, an officer went down to his car for leg chains. We waited for the man to be secured and removed from the building.\n\nWhen they left the office, I turned to Taffy and Connie saying, \"I want you two to learn a lesson from all this. There is no room in life for a bully. If you can't handle the bully, get someone who can. While you work here, if you ever experience another person who calls you names like you've been called by that guy, harasses you, physically assaults you, I want you to report them to your department head. You never have to work in an environment like that again.\"\n\n\"Girls, I want you to finish what you were doing and then report to Kelly. Kelly, I want you to pull their employment records and have them brought up for my review. I have a meeting coming up soon and I haven't had a chance to prepare. Taffy, Connie, I'll call you to my office later today after I review your files.\"\n\n\"Beth we need to go get some work done.\"\n\n\"Ok,\" Beth replied \n\n\"Kelly what board room are we going to have my meeting in this morning?\" I asked\n\n\"I made arrangements for you to be in board room three but I can send out a memo quickly and have everyone come to board room one if you'd like. I cleared the calendar on that one once I found out you couldn't use your offices.\" Kelly replied\n\n\"Send out the memo please and have everyone come to one.\"\n\nBeth and I walked into the board room and we set up our computers. We were only in there a few minutes when everyone started arriving. At nine o'clock shape I started my meeting with department heads. I looked around the room and said, \"Welcome everyone. I want to start this meeting by telling you, for the first time in my career, I fired someone only a few minutes ago because he abused a couple of our young employees. I want to relay to you, if any of you hear anything about an employee being bullied or abused, I want you to come directly to me and tell me. I will not stand for that kind of shenanigans happening in this company.\"\n\n\"Now, let's not waste any time, we'll start right here with Jim and go around the room. I want each of you to give me your oral report but I also want each of you to email a copy of your report to Beth and me.\n\nJim stood and made his report. Over the next two hours, with a fifteen minute break after the first hour, we reviewed all the progress reports for each department of our company.\n\n**************************** \n\nJoanna walked outside and stopped to stretch after she walked down the steps. When she finished stretching she walked across the back yard into the woods, wearing only her running shoes. Although Joanna had been naked in the woods before, when she knew there were people watching her, this time she wanted the person or persons to see her body. This time she was excited knowing they would see her small titties and her bald pussy.\n\nWhen she entered the woods, instead of going towards the pond she walked to the right towards the place where she had seen the person who made a mistake. Joanna looked around all over trying to spot the person so she could make sure he saw her, but once again to no avail. Whoever was there was well hidden. Not knowing which way to turn to give her audience a good view of her body she said aloud, \"Ok, I've been out here before, I know someone is here but I can't see you. This time is different from the last time because now I've learned to enjoy letting others see my naked body. If I knew about where you were, I could turn so you can see my lovely small tits and my hairless pussy. I have to make a phone call to the woman you work for, but if you will give me a sign, I'll turn towards you so you can watch me. I want you to have an unobstructed view of me.\"\n\nJoanna lifted her cell phone and dialed the number Judy had given her. The phone rang three times before Joanna heard, \"Good morning, you're up early. What do I owe this call to?\"\n\n\"I have a couple of things to discuss with you. First, I'm calling you from my own personal cell phone because I didn't want to let anyone know you gave me your phone number. Right now, I'm standing in the woods, completely naked because Ted and Dan asked me to contact you so I had to act out, coming out here to leave you a message with the person you have stationed out here in the woods. So if anyone asks, I came out here and gave that person, my cell number for you to call me.\"\n\n\"The first thing I need to tell you is I have to go over to Tina Simpson's house as soon as I finish talking to you. They received the ok to move to their new house yesterday, I don't know all the details but the movers will be there this morning and they will be moved into their new house by this evening.\" Joanna said\n\nOff to Joanna's right she heard a branch snap, she looked that way but didn't see anything. She turned and faced that way. A second later she covered the microphone on her cell and said, \"Please once more so I know it's you.\"\n\nJoanna listened to Judy telling her she would advise the detail. Judy asked for the new address so they could move some people over to the new house. Joanna replied, \"I'll have to call Ted, he has the new address. I'll get it from him and call you back on my way over to Tina's house.\"\n\nOnce again a branch snapped and although Joanna detected some movement, she wasn't sure and she didn't want to spoil the fun. While Joanna continued to talk to Judy she leaned back against a smooth bark tree, facing the direction of the noise. She spread her legs as wide as possible and remained standing that way so her voyeur could enjoy the view of her body. \n\nJoanna said to Judy, \"The other item I have to discuss with you is Ted and Dan want to meet with you and ask you some questions. They suggested we could meet out by the waterfall tonight about six thirty. Of course Mary and I will be with them so there will be four of us. Also you should know that you won't have to dress up because all of us will be nude. They don't care who you are, they want to find out some information about the break-in and about some other stuff. I think you can use the meeting to your advantage to find out more about the enhanced security system Ted had installed.\"\n\nJudy said, \"Let me talk it over with my people and we'll decide what's the best course of action. May I call you on your cell phone later?\"\n\n\"Yes of course you can call me anytime you want. The plan I set up with Ted and Dan was for me to come out here this morning and leave my cell number with whoever stationed here, so you could call me. I didn't disclose to them that I have a number to call you. I appreciate all you've done for me.\" Joanna replied\n\n\"Call me when you have the address so we can get some people right over there to check it out and I'll try to have some information for you by that time. Good bye and enjoy your walk in the woods.\" Judy said\n\nJoanna clicked off her phone and laid it on the ground at her feet. She announced out loud, \"It's only you and me again. I've finished talking to the woman in your organization. I hope you can see me and if you want to move closer, I'll close my eyes and masturbate for you. I don't care who sees my beautiful pussy.\"\n\nJoanna started rubbing her clit and alternating finger fucking herself. It wasn't long before she felt her orgasm building and sending wonderful sensations throughout her body. Each stroke across her clit sent tiny electrical shocks through her body. It didn't take long for her body to respond. Slowly at first, an orgasm started to build and when it finally released its fury on her body, Joanna wiggled wildly, with her head thrown back, gasping for breath while her finger moved lighting fast across her clit. Joanna enjoyed every moment of her orgasm knowing someone was out there watching her.\n\nWhen her orgasm subsided, Joanna continued to hold her spread open pose in hopes her voyeur was enjoying her body. Joanna's breathing dropped back within a normal range so she pulled her legs back together and bent over and picked up her cell phone. She looked around the woods and said aloud, \"I hope that will give you enough of a vision to jerk off to when I leave. I certainly enjoyed my orgasm. I have to go now, please enjoy the rest of your day.\"\n\nJoanna started to walk away when she heard someone say, \"Thank you.\"\n\nShe didn't turn around to see where the voice came from but it was a male voice. Joanna smiled to herself knowing she allowed a stranger to watch her do something most women won't admit doing or will only do in the privacy of their bedroom with the door shut and bolted.\n\nJoanna hurried back across the lawn and up on the deck. She walked over to the showers and quickly took a shower. As she dried her body she walked into the house and greeted everyone. Joanna looked at Mary, nodded her head slightly, which wasn't enough for anyone else in the room to notice. \"Do you know the Simpson's new address?\"",
        "Mary said, \"Yes, Ted left a copy of it in the office.\"\n\nJoanna replied, \"Ok, I'll go get dressed first and then stop by there and pick up the radio and write the address on a piece of paper.\"\n\nJoanna scurried upstairs and selected her favorite pink shorts and her pink tank top. She slipped on her sneakers, grabbed her backpack off the floor and set it on the bed. She opened it and took a visual inventory of everything that was in there. She noted that she wanted to put one of the smaller towels in there before she left. \n\nJoanna picked up her backpack and went downstairs to the office. Mary was in there with a copy of Simpson's new address. Joanna set her backpack down on the desk and walked out of the office and pulled two of the smaller towels out of the cupboard. When she got back to the office she moved her pistol belt to one side and slid the two towels down the other side.\n\nMary gave Joanna a big hug and said, \"Today's going to be hell for you with all those people coming in and out. If you need any help, call here and I'll come over and help you.\"\n\nJoanna looked into Mary's eyes and said, \"Thank you for everything, I really do appreciate it.\"\n\nJoanna picked the radio out of the charger and slipped it in the outside pocket of her backpack. Lastly, she picked up the keys for the car and both of them left the office. Mary followed Joanna to the front door and locked it once she was outside. Joanna opened the car door, reached in and put the key in the ignition. She turned on the car and put the windows down so it would cool off. \n\nJoanna sat down in the car for a moment before she put it in gear and drove down the driveway. Her trip to the Simpson's house was uneventful. A couple of blocks away from the Simpson's house Joanna picked up her radio and pushed the talk button, \"Spotlight, in approximately two minutes I'll be arriving at your location.\"\n\nA few seconds later her radio came to life saying, \"10-4, we are processing some arrivals now.\"\n\nJoanna arrived and parked her car in front of the house across the street. She saw a van with the moving company's name on it and four people standing on the sidewalk. Joanna gathered her back pack and radio before she got out of her car. As an afterthought Joanna locked her car. She walked across the street and she heard one of the guys say, \"Who the fuck do they think they are? We're here to do a job and they're fucking around.\"\n\nJoanna walked up the sidewalk towards the house when the guy called out, \"Hey you can't go in there, the fucking cops are flexing their muscles.\"\n\nJoanna turned around and walked back to the man before she pulled her badge out of her back pack and said, \"I am one of those cops. We have to work together all day so there's no reason to start off on the wrong foot. Besides, you don't really want me to flex my muscles. If I did, I'll certainly embarrass you in front of your two female co-workers. Now please quiet down and wait for the officers to finish their job.\"\n\nThe man stared at Joanna before he said, \"Look I'm sorry. It's just that we came here to do a job and they said they have to run us before we can go into the house. What's the big deal?\"\n\n\"I'm not at liberty to tell you why we're here but the fact that we are, should be enough to know you are going to be part of an important move and not just someone who hires your company to move them.\" Joanna said.\n\nThe guy scratched his head, \"I never thought about it that way. I guess you're right. Thanks for explaining it in a different way.\"\n\nJoanna turned and walked up to the front steps and knocked on the door. Tina came to the door wearing a white negligee that didn't hide anything. Joanna laughed saying, \"Old habits are hard to break aren't they?\" She stepped inside and closed the door behind her.\n\n\"I really wanted to stay nude but when I saw the two guys, I decided to put this on and save a change of clothes for later.\" Tina replied.\n\n\"In case you haven't looked in a mirror since you put that on, I'll tell you, it doesn't hide any of your body parts.\" Joanna said with a giggle.\n\nTina retorted, \"That's why I'm wearing this instead of that cotton one I used to wear before we started living as nudists.\"\n\nThey were interrupted by a knock on the door. Joanna turned around and opened the door. On the porch were the four people she'd passed on the sidewalk. Suddenly Joanna's radio broadcast, \"All four of them check out.\"\n\nJoanna stepped back and invited the four people into the house. When they stepped inside Joanna said, \"Please give me your attention for a few moments. We are going to move this family today but you have to abide by a few rules you normally don't have.\" \n\n\"The first rule is you can't leave the door open when you come and go. There is a reason for this security level. Again, I'm not at liberty to explain it to you.\" \n\n\"Please let me know what you have to do so I won't have to interrupt you while you work.\" Joanna finished saying.\n\nThe guy who Joanna spoke to earlier said, \"We brought boxes and packing material. What we do is go from room to room and pack everything in that room and label the boxes for that room. Normally we take a tour of the house first and get an idea of what we have before we start. If someone will give us a tour, we can get started. The movers will be here in a few hours.\"\n\nJoanna turned and introduced Tina, \"This is Tina, and she'll give you a tour.\"\n\nThe four packers introduced themselves and the two guys took their time to check out Tina's body. Tina led the packers through the house and when they finished they stood in the hallway and made a plan. The two guys went out to the van and brought in two dollies stacked with folded boxes. The packers were very professional and careful to use the upmost care. The morning progressed smoothly as the four packers did their job under more scrutiny than they've ever experienced before.\n\n****************************\n\nWhen Beth and I came out of our meeting Kelly met us and directed us to go to our new offices. We walked into my new office, formally Tom Banks's office, I asked both Beth and Kelly to have a seat while I walked around behind my desk and sat down. \n\n\"Beth I need you to do some research on luxury resorts in Hawaii. What I want is a beach cottage type setting preferably a private type beach so we won't have other people hanging around. I'm not sure how many people just yet but see what you can find, with our arrival this Friday and our departure on Monday. I know it's short notice but see what you can find.\"\n\n\"Kelly, do you have the employee files on Taffy and Connie?\" I asked.\n\n\"Yes sir, I have them on my desk, would you like me to go get them now?\" Kelly inquired.\n\n\"Yes please, Kelly. Beth please call Jeff Simpson and have him come up to my office.\"\n\nBoth Kelly and Beth got up and walked out of my office. When they were gone I dialed the number that Tom Banks gave me. When he answered his phone I said, \"Hi Tom, Dan here. Did you tell your wife we will be traveling this coming weekend?\"\n\n\"Yes I did. She asked me where we were going, I told her I didn't know. Have you made reservations for us yet?\" Tom asked.\n\n\"That's why I'm calling you Tom. You were always a private kind of guy and I never learned much about your family. I'd like to get some information from you now, if you don't mind. How many children do you have Tom?\"\n\n\"I have a daughter and a son. My son is married and my daughter still lives at home.\" Tom responded.\n\n\"Ok, I have another question for you, a more personal question but please don't think I'm probing into your private business. Would it bother you to have Brenda and your family together? What I'm really asking is, is your wife and Brenda friends?\"\n\nTom laughed and said, \"Well, for the first time, Dan Morrison has been caught beating around the bush. What you really want to know is if Janet knows Brenda and I are or have been lovers isn't that right Dan?\"\n\n\"Yes sir, that's exactly what I was alluding to.\" I answered.\n\n\"I'm not sure where this conversation is going Dan but I trust my instincts with you and will tell you the three of us have been romantically involved for a long time, just as I suspect you, Kim and Beth have been.\" Tom answered reservedly. \n\n\"Tom, I want you to invite your wife, son and his wife, daughter and Brenda for a weekend away to an undisclosed destination. All I know at this point is, we'll be leaving very early Friday morning and we'll be returning some time on Monday. Please call me back and let me know if all six of you will be able to go.\"\n\nTom said, \"Still the mystery man, aren't you Dan. I'll call my son and check with him but I can tell you right now the rest of us will be available to travel.\"\n\n\"I'll be waiting to hear from you Tom. This is after all, a business trip so not only will we be meeting, our secretaries will also meet to share company business.\" I said with a firm voice.\n\nTom bid me goodbye and I told him goodbye.\n\nI called Kim and told her about the trip and asked her to take Friday and Monday off. She informed me there wasn't a problem and she could make the trip. She went on to tell me since she got back from Germany she started giving more responsibilities to those who worked for her instead of doing it all herself. I asked her if she could call Jenna and ask her to take the time off also. We said our goodbyes and I told her I'd see her this afternoon when we picked her up.\n\nI no sooner hung up the phone when I heard a knock on my door. I said, \"Come in.\" and Kelly opened my door, walked over to my desk with two folders in her hand. She handed them to me and I asked, \"Please have both girls come up and sit in your office. I want to get this settled quickly.\"\n\nAs Kelly was closing my door I opened the first folder which was Connie's file. After I had time to review both files I paged Kelly and asked her to bring both girls to my office. I paged Beth and asked her to come to my office. All four of them arrived at the same time so I stood up and walked around the desk to meet them. \n\n\"Before we sit down to talk, I want to try a little experiment. Beth, please lead the way to your office.\"\n\nOnce we were in Beth's office I said, \"I want to view your closet.\"\n\nBeth opened her closet and I walked in by myself leaving the women behind. I looked at the way the suits were hung. I was interested to see if all of them were organized and hung facing the same way. Then I opened Beth's drawers and looked at her folded clothes. I asked, \"Who hung the suits and put the clothes in the drawers?\"\n\nBoth Taffy and Connie responded, \"We did it together.\"\n\n\"Is there something wrong with the clothes?\" Taffy inquired.\n\nI closed the drawers and exited Beth's closet. I motioned for everyone to follow me. I walked back to my office and over to my closet. Once again I went inside leaving the four women outside. I looked at all my suits before I opened each drawer and looked at the folded clothes. I exited the closet and asked all four ladies to please have a seat.\n\nI sat for a few seconds without saying a word. Beth sat ready to take notes. \"Do either of you have any idea what I did in each closet?\"\n\n\"You checked to see if anything was missing?\" Taffy guessed with a slight look of concern on her face.\n\nConnie sat quietly and didn't respond, I looked at both of them before I said, \"I looked to see what kind of job you did.\"\n\n\"Anyone can fold clothes but while I was in each closet I looked at the way the suits were hung. They are all uniformly hung facing the same direction. When I opened the drawers I noticed the clothes were folded neatly and put in the drawer in a uniform fashion. My boxers were all folded to the same size but that could have been because they have never been worn. However, Ms. Thompson's panties and bras were folded equally which unlike men's underwear, is much harder to do, as I'm sure both of you are aware.\"\n\n\"I need a couple of young people who pay attention to detail, who excelled in school, who would be willing to take night classes at our local community college. Those same young people would be reassigned to receptionist's duties with an opportunity for advancement. The candidates would have to wear business suits similar to those worn by Ms. Jones and Ms. Thompson. Before I go any further, I'd like to hear from both of you.\"\n\nConnie sat wide eyed with her mouth slightly open. Finally she found her voice, \"Mr. Morrison, Taffy and I were the ones who moved your clothes over to your and Ms. Thompson's closets. Both of us folded the clothes and put them away. We never thought someone would look at what we did.\"\n\n\"Yeah, we were only doing the job we were given.\" added Taffy.\n\n\"I would love to be a receptionist if I knew what all the duties entailed.\" Connie replied.\n\nBeth said, \"Let me help you get off the hook. Mr. Morrison is offering both of you an opportunity to move up from the job you currently have. Listen to him carefully and make a decision based on the information he's given you.\"\n\n\"I can't afford to go to college. I told you that this morning Mr. Morrison.\" Taffy offered.\n\n\"I can't afford to go either.\" Connie said in a quiet voice.\n\n\"I am going to start a program in this company where current employees will be given an opportunity to attend our local community college to better themselves. The program I'm going to introduce to the Board of Directors at our next meeting will cover the costs of both the courses and books for those who qualify. However there will be some very strict rules attached to the offer.\"\n\n\"The first and most important is you must complete a degree program that will benefit our company. There are several of them but accounting and business management are just a couple of quick examples.\"\n\n\"Secondly, we'll want the student to maintain passing grades.\"\n\n\"Thirdly, we will want each person who accepts our offer to sign a contract with our company for a period of four years. That's two years while you are taking courses and two years after you've graduated. That way both parties to this agreement will benefit.\"\n\n\"If a person drops out for any reason other than an emergency, then we'll expect to be reimbursed the full amount we've paid out.\" I leaned back in my chair and looked across my desk at both young ladies.\n\nTaffy started by saying, \"I want to make sure I heard you right Mr. Morrison. Are you saying we can learn to be receptionists for this company and go to college?\"\n\n\"That's right.\" I agreed.\n\n\"And when we graduate we have to work for the company two additional years?\" Connie queried. \n\n\"Oh, what happens if we can't afford to purchase business suits like Ms. Thompson and Ms. Jones are wearing?\" Taffy asked\n\n\"Keep in mind, a receptionist makes more money than your currently salary. There's a shop, not far from here, where Ms. Thompson and I buy our suits. They have quality suits, at very reasonable prices. If we were to take you there, I'm sure I could talk the owner into making an account for each of you. That way you can pay on your purchases, weekly or monthly, at the store so there wouldn't be any interest, unless of course, you fell behind in your payments. They have a tailor in the store who will tailor your suit to fit you. You would most likely need at least two suits, some blouses and shoes.\"\n\n\"Ms. Thompson is he really serious or is he playing with us like they do downstairs?\" Taffy asked.\n\n\"I can answer that for you Taffy. When you get to know me and I assure you, both of you will get to know me very well, I never make an offer I'm not serious or committed to follow through. The most important thing you need to know about me is I never make an offer a second time, so consider what I've said carefully.\" \n\n\"May we talk to Ms. Thompson for a few minutes before we give you an answer?\" Taffy asked.\n\n\"Yes you may. Ms. Thompson, please take both young ladies to your office and answer any questions they may have.\"\n\n\"By the way, did Jeff Simpson come upstairs yet?\"\n\nBeth replied, \"When I called him he said he was right in the middle of a project and would be up in about ten minutes. He might be out in Kelly's office now.\"\n\nI looked at Kelly \"Kelly, will you please see if Jeff is in your office? If he is, please send him in.\"\n\nA few seconds after Kelly left my office my phone rang. When I picked it up, I heard Kelly say, \"Jeff Simpson is coming in to see you sir.\"\n\nThe door opened slowly and I got up to meet Jeff. He shook my hand and congratulated me again on my promotion. I asked him how he made out with the phone company.\n\n\"Dan, they can turn my phone off in the old house today but that would leave Tina without a phone in case something happens so I figured I'd wait and talk to you.\" Jeff reported.\n\n\"Don't worry about Tina and the kids. I have Joanna on duty over there today. She's going to stay all day until the movers leave your new house. She's got her radio so if there's any problem she'll be able to radio for help.\"\n\n\"Dial the number for the phone company and let me talk to them.\"\n\nJeff dialed the number, identified himself and when they pulled up his account he said, \"I have someone who wants to make changes to my account and I authorize him to do it.\"\n\nI took the phone and identified myself. I immediately asked for the person's supervisor. When the supervisor got on the phone, I identified myself again before I told her what I needed to have done. She had to talk to Jeff so I put him on the phone so he could verify his identity. Jeff handed the phone back to me and I listened to the supervisor ramble on. Finally I interrupted her and said, \"I know some things about phones and how they work. I know it's a simple matter to get Jeff Simpson's phone switched to the new address. I'd appreciate it if you and I can make it happen and then I won't have to have the district attorney get involved.\"\n\nAt my mention of the district attorney the supervisor's attitude changed. She wanted to know why he would be involved. I told her it was a matter of security and that's all I was at liberty to tell her. She attempted to ask a few more questions but I told her all she needed to know is the switch from one house to the other was necessary for security purposes.\n\nWithin a few minutes the supervisor and I worked out the details where a crew would be dispatched within a half hour to turn off the phone in the old house and turn it on in the new house. I thanked her for her cooperation. We said our goodbyes and I hung up.\n\nI looked at Jeff who was sitting in front of me staring, I asked, \"What's the matter Jeff?\"\n\n\"Nothing, nothing at all. I'm still amazed how you get business done when others struggle without success.\" Jeff countered.\n\n\"Jeff, you have to say the right words at the right time. It's like a game of Chess. Do you play Chess Jeff?\"\n\n\"No sir I don't.\" Jeff replied.\n\n\"It's a game of concentration, anticipation and making the right move at the right time.\" I said with a huge smile on my face.\n\nI pulled out my wallet, took thirty dollars out and handed the money across the desk to Jeff. He questioned me what it was for and I told him since his house would be in an uproar when he got home, he should stop and pick up something for dinner so they didn't have to cook. He thanked me several times. I told him I had to get back to work so Jeff stood up and shook my hand before he left my office.\n\nI was alone for all of five minutes when I heard Beth ask if it was ok to come back in. I motioned for them to come in and have a seat. When they were seated I waited for someone to say something.\n\nThe silence was broken by Taffy, \"Mr. Morrison, when we met this morning, I never would have thought I'd be considering a different position before the day was over. I want to thank you for this opportunity you've offered.\"\n\n\"Furthermore, I'd like to accept your offer to move to a receptionist position. I'm also interested in taking advantage of that program when you get it started. I'd love the opportunity to take night classes and work during the day.\"",
        "\"I know you said we'll need a couple of business suits and I'd really like your assistance at the shop where you and Ms. Thompson go.\" Taffy said with a voice of confidence.\n\nConnie sat up straight in her chair and said, \"I'd also love to thank you for this opportunity to be a receptionist. I always thought big bosses only paid attention to the higher ups and not the people at the bottom. I'm so glad to have met you this morning; I wish it would have been under different circumstances.\"\n\n\"I also want to take advantage of the program you described when you get it implemented. I'd like to make a career in accounting. Oh, and I'm also interested in you assisting me at the shop so I can get the right clothes for the job.\" Connie smiled as she finished talking.\n\nTaffy spoke up saying, \"Ms. Thompson was very helpful showing us the suits and other items you helped her pick out. She also told us you are very helpful when it comes to choosing items that will not be seen by anyone else. Ms. Thompson mentioned if we asked you for assistance, we'd have to be discreet. Mr. Morrison, I can be very discreet.\"\n\n\"Me too!\" Connie added, \"I can be very discreet when it comes to asking for assistance.\"\n\n\"So we're all on the same page, I also can be very discreet especially when dealing with sensitive matters. Because of my position with the company, I have to be careful what I offer so it's not taken the wrong way. I hope both of you understand.\" I said.\n\nTaffy spoke up saying, \"Yes sir. I understand and I want to reassure you that you have nothing to worry about with me and I'm sure Connie will agree. I will gladly accept your assistance and advice without any repercussions. I will promise you now, if you are worried about sexual harassment, please vanish the thought.\" \n\nConnie was quick to say, \"I agree with Taffy. Both of us will be discreet and respectful of your position.\"\n\nTaffy continued, \"I saw how you cared enough for both Connie and I, and you didn't even know us. Yet, you still went the extra mile to stand up for us, this morning. Pardon me for saying this sir, but Bart could have easily kicked your ass.\" \n\n\"He's been our boss since we've been here. He's always made sexual comments about our ass and tits and talked about sex in front of us. He grabbed our ass and our tits almost all the time. He never touched my ... you know ... down there. \n\n\"He always called us fucktards and worthless cunts when he thought we didn't work fast enough. The other guys we worked with weren't as bad as Bart, but they used to join in with him at times and called us names. We endured all that and we never filed any sexual harassment against him.\"\n\nI spoke up quickly saying, \"I told you this morning, don't ever let anyone do that to you again, I don't care if they are your immediate supervisor or not. I want you to remember if you can't handle the person who is abusing you, get someone who can. Let's get back to the business at hand. Bart is gone and will never be back.\" \n\n\"If you don't mind, I'd like each of you to be very specific and tell me in what way you would like me to assist you so we don't have any mixed signals. I don't want to do anything which would make either of you uncomfortable.\"\n\nTaffy was on a roll so she continued, \"As I said before, Ms. Thompson was very helpful showing us the suits and other items you helped her pick out. Especially the lingerie items no one else will see, beside those of us in this room. If I'm not being too forward, I would like for you to help me in the same way. I would like your assistance choosing some panties and bras. I fully understand I should model them for you to get your valued opinion and I'm willing to do that. Mr. Morrison you'll get to see more of me than my parents have seen of me in many years.\"\n\nI smiled at Taffy but looked at both young ladies seated in front of my desk before saying, \"I am willing to assist you but I don't want you to think I'm leading either one of you down the garden path, so to speak.\n\n\"Oh no sir Mr. Morrison, I don't feel threatened in any way and I have a strong feeling after watching you this morning, if I told you no, you wouldn't force anything upon me. I will feel a little weird the first time I model a set of panties and bra for you but that will pass I'm sure.\" Taffy exclaimed.\n\nConnie was nodding her head up and down the whole time Taffy was speaking. When Taffy finished, Connie said, \"I'm not going to repeat everything Taffy said but I feel the same way as she does. I will do whatever it takes to get started as a receptionist. I also want your help choosing the right clothes to do the job, including some lingerie that I'll willingly model for you and seek your opinion, which items look good on me. I've never had a male help me shop for my underwear before, so I think it will be fun.\"\n\n\"Mr. Morrison, I know you told me this morning I don't have to ask you if it's all right to ask you a question but may I ask you a personal question?\" Connie inquired.\n\nI thought about her question for a moment before I said, \"Connie you may ask me your question but if I find it too personal, I may choose not to answer it.\"\n\nConnie said, \"Ok, fair enough! What I'm wondering, since we've had health class, and both of us have only had limited personal experience with a guy, if we model panties and bras for you, aren't you going to have a problem to take care of? I mean ...\"\n\n\"Connie, I am a male and yes males are inspired by partially clothed or nude females. However, if you are wondering if I would try something with either of you, the answer is no. I have a wonderful family who take care of all my needs. I'm not a young buck who has to go around putting his finger into everything he sees. I don't want you to take this the wrong way, both of you are very beautiful young ladies, I don't care what you are wearing or not wearing, you are safe with me. I have been known to protect people especially those who need protection.\"\n\n\"Do you have ESP too? How the hell did you know what I was going to ask?\" Connie exclaimed.\n\n\"I only want to assure you, you can trust me. I might be the boss where you work but above all, I am also a father to a young lady, not much older than both of you.\"\n\nI looked at Beth and she was all smiles. I looked back at both girls and said, \"If you want to go during lunch, we can go over to the shop and select a couple of suits for each of you. They have a tailor in the shop and we can have him tailor your suits to fit you properly. When he's finished, we can have the shop deliver the suits right to my office so we won't have to wait for them. You'll have your suits before the end of the day. You can start your new duties tomorrow morning.\"\n\n\"While we're out, if there's enough time and if you're interested, there's a wonderful little lingerie boutique here in the city where I take my wife and daughter. They have a rather large selection of brand name lingerie.\" I finished saying.\n\nTaffy and Connie were all smiles as they sat in their chairs and looked between Beth and me.\n\nI looked at Beth asking, \"Do I have any other meetings this afternoon?\"\n\nBeth excused herself and went into her office. When she returned she was looking at her calendar before she said, \"No sir. You don't have any meetings but there are a couple of people who've requested to see you today. I didn't schedule them because of the way our morning started and I didn't know what was going to happen.\"\n\n\"Very well then, we'll go shopping and when we get back, I'll have you make the appointments with them for later this afternoon. Call Kelly and let her know we are going out for lunch and then call Joe Bailey and tell him to bring the car around the front in a half hour.\"\n\nBeth left to go into her office and the two young ladies remained seated in front of my desk. Taffy spoke up saying, \"Mr. Morrison, I personally want to thank you for all the help you were to us this morning. Although I didn't like the way we've been treated, I didn't think anyone would listen to me since I'm young and fairly new with the company. After this morning, I'm determined to make a career with this company if you'll have me for that long.\"\n\n\"No one deserves to be treated like you two have been. I advised my department heads this morning to let their people know that I won't tolerate that kind of behavior in this company. Both of you deserve a chance to show what you can do and I'm going to give it to you. I hope you won't let me down.\"\n\n\"I have to make a couple of phone calls, would both of you step out into Kelly's office for a few minutes.\" I asked.\n\nI watched both young ladies get up and walk out of my office. As I was reaching for my phone, it rang. I picked it up and Kelly said, \"Mr. Morrison, Mr. Banks is on line one for you.\"\n\nI clicked over to line one, \"Hello Tom, what did you find out?\"\n\n\"Dan I just got off the phone with my son and he told me both he and his wife would be able to take the trip. Both of them cleared their calendars. So, all six of us will be going.\"\n\nI said, \"That's great Tom. I still don't know where we're going but I know I asked for a private beach area, if that's any help to you. I'll have to get back with you on the departure time when I get it from Beth. I'll be talking to you soon Tom.\"\n\nBeth knocked on my door and peeked inside; I motioned for her to come in. She walked behind my desk, leaned down and gave me a kiss. She admitted, \"I didn't tell the girls anything other than you helped me choose my clothes. I wanted to clear that up with you while they weren't in the room. I did tell them any conversation we have, has to be kept in the strictest of confidence. That's why they told you they could be discreet.\"\n\n\"If you want to take them to the shop, I'll try to steer them into allowing us to see them model anything we help pick out if you want me to. I think both of them are rather cute. I think the tailor would love to see them naked but at the very least in bra and panties.\" Beth finished saying.\n\n\"Maybe we'll buy you another suit while we're at the shop.\" I said with a huge smile spreading across my face.\n\nBeth returned my smile, \"You know Dan, that tailor would love to measure this body again.\"\n\nI smiled at Beth, \"If I had a chance, I'd love to measure that body but with a different type of measuring stick.\"\n\n\"Yummmmy, I remember your measuring stick and I'd love to have you check how deep you can get inside me.\" Beth purred.\n\n\"I sent the girls to Kelly's office. Before we go shopping, I think you should prepare a couple of confidentiality statements for everyone to sign. You can have them come to your office and help you write it so they think they've contributed something and it's their statement to us.\" \n\nBeth smiled at me, \"Yes sir, I'll have them come to my office and help me. We'll have everything ready for signatures in a few minutes.\"\n\n\"Joe is going to be out in the front in a half hour so don't be long.\" I said as I watched Beth walk back towards her office.\n\nAs Beth was leaving I turned to my computer and typed a memo about the college program I wanted to implement and the conditions under which I'd like to see it run. I sent it out to the members of the board. Also I sent them a memo with the name and address of the Veterans Homeless Shelter and asked them to consider a sizable donation, especially since they were a non-profit organization.\n\nI was just finishing up when Beth knocked on my door and peeked inside. She asked, \"Are you ready to review this confidentiality statement with us so we can get going?\"\n\nI told her to bring in the young ladies and have a seat. Once the young ladies were seated Beth handed me three statements. I read each statement, which all basically said the same thing, except the names were changed. All three forms were already signed by each of the young ladies and Beth, and the third blank was for my signature. \n\nI looked up at Beth first then moved my eyes left to Taffy and finally to Connie. Both girls were a little red faced but both of them sat straight in their seat and looked directly at me.\n\nTaffy's paper was on top so I asked, \"Taffy I'm going to ask you three questions. Is this your signature on this statement? Do you understand and agree with what the statement says? Finally did you sign this paper willingly?\" \n\nTaffy blushed a little deeper red before she said, \"Yes sir, Mr. Morrison. I am eighteen years old and I can make decisions for myself. I understand that my asking for your help may include me being in an ambiguous situation. I signed that form knowing full well, at the clothing shop, you will most likely see me less than fully dressed or even nude. I wasn't threatened or forced to sign that form. I also understand the need for discretion will be most important. By my signing that form I agree not to disclose any activities which may occur in your presence, not only today but anytime.\"\n\nI looked at Connie, \"Connie, is this your signature on this statement? Do you understand and agree with what the statement says? Finally did you sign this paper willingly?\" \n\n\"Yes sir.\" Connie said, \"I signed that form willingly without anyone forcing or threatening me. I'm also old enough to make decisions for myself and I understand there's a dire need for discretion in any activities we do. I wanted the signature lines for both you and Ms. Thompson on each form so all of us agree to be discreet. I want a long career with this company and I don't want anything I do today or in the future, if something more should happen, to be used against me at some point. Sir, I am ready to do what it takes to start my new job and I want to start off on the right foot.\"\n\nI sat and looked at both young ladies before I said, \"Both of you are old enough to understand there is a double standard in this world. Males are nailed to the wall at the first hint of any allegation of sexual harassment. That could be career ending even if the allegation is later proved false. I want to reiterate that any assistance I give either of you, I don't want to be construed as sexual harassment. If both of you are absolutely sure you would like for me to assist you at a professional level, I will.\"\n\n\"Taffy, Connie, both of you are wise beyond your years. Not many eighteen year olds are planning their future. Most are concerned with partying, not that that is a bad thing. Everything in moderation, I always say. I'm proud to add my signature to these documents.\"\n\n\"Mr. Morrison may I speak freely?\" Connie asked.\n\n\"Yes, yes you may Connie.\" I answered.\n\n\"Sir, I watched you closely this morning when you stood up to our boss. I'm not sure what you were thinking. He was clearly larger than you and could have hurt you. I was scared he would do something to us once he got past you. Mr. Morrison, I want to say it took a lot of guts for you to stand up in his face and not back down. I want to work for a man who, in the face of adversity, will stand his ground and let the chips fall where they may. Sir, I will work hard for you and I will make you proud.\"\n\n\"I believe both of you will work hard. I can see the sincerity in your faces. I started at the bottom and yesterday I was promoted to the top job of this company. I know what it's like to struggle and work your way up. I am a firm believer that everyone deserves a chance. Today, starts a chance for both of you to prove you can do any job given you, to the best of your ability. Beth, would you please make copies for Taffy and Connie and keep the original for our file?\" \n\n\"By the way,\" I said, \"I know what it's like to go shopping with females. As I said, I'm married and I have a teenage daughter. So shopping with the three of you won't be that much difference other than you're not related to me.\" \n\n\"Mr. Morrison,\" Taffy asked, \"We came in really early this morning to get everything moved out of your old offices into the new ones ... well ... if we're going to go shopping, do you mind if we take a few minute to run down to the locker room and take a quick shower. I promise we won't be that long. I don't want to put this dirty body on display in lingerie ... I hope you understand.\"\n\n\"I understand.\" I said, \"I believe in being clean myself and I wouldn't want to embarrass either of you by making you go as you are. Beth do you think it would be ok for them to use your bathroom to take a shower? I'd offer one of them my shower but I don't want the young ladies to think I'm trying to separate them.\" \n\nBeth smiled at both young ladies and said, \"Sure Dan, I'll show them where everything is.\"\n\n\"We'll be very quick.\" Mr. Morrison, \"We promise. Honest!\"\n\n\"Remember, our driver should be waiting so let's not keep him too long.\" I said with a chuckle.\n\n\"When you get them settled in your bathroom, please come back so I can check with you on your progress for the weekend.\" I said to Beth.\n\nBeth came back in five minutes with a huge smile on her face. She looked at me saying, \"I believe we have two young ladies who are committed to making a career, working for this company. I remember those early days when I first started and this young man offered me an opportunity to be his secretary. The older version of that young man is still offering opportunities to advance.\"\n\n\"Thank you Beth, I really do appreciate the acknowledgment but that's the way I am. I truly believe everyone deserves an equal chance.\"\n\n\"Ok, on this weekend, I've chosen the place, all I need to know is how many are traveling so I can make reservations. I contacted Captain McGrath to give him advance warning we were going to travel on Friday. I told him you suggested we only needed Linda and Jenny for flight attendants and Jerry the chef. He told me he'd contact them. I explained to him that he and his crew will have to share a cottage.\" Beth stated.\n\n\"For Tom's side there will be six of them including Brenda. On my side there will be five of us, including you and Kelly, even though I haven't asked Kelly yet. I'll ask her later and surprise her. If my addition holds up, that would be a total of fifteen people. I want to fly out of here as early as we can on Friday morning so we can have most of the day to relax and do what business we have to do.\" \n\n\"This will be a working weekend so you will be taking your laptop with you. Brenda, Kelly and you will be working together so you two can get more information from her. I will be doing the same with Tom. Are you going to let me know where we're going or are you going to keep that a secret?\"\n\nBeth smiled at me, \"Because you're a nice guy, I found some private luxury beach cottages on the island of Oahu, Hawaii. Each cottage sleeps four guests but I image if we use the maximum number of guests in each cottage, they will make it kind of crowded. Besides, Tom's son and his wife might want a cabin to themselves, being a young couple. The information says the cottages are located on a private beach. The information doesn't say if there will be other cottages nearby or not. I suspect if there are nearby cottages, other people will be out on the beach also. However, I'm sure it won't be crowded like a public beach. How many do you want me to reserve?\"\n\n\"I don't know how the weekend will develop and I think you're right about Tom's son. So I think if we reserve six cottages that should be plenty of space for us. I want to have space for the pilot and flight crew, I want them to be with us on the beach. Please make sure the cottages are next to each other.\" I added\n\n\"I read on the web page there are six cottages in a cluster. Ok, I'll go to my office and make the reservations right now. I'll call Captain McGrath so he can figure out what time to leave when I get the reservations made.\" Beth said.\n\nBeth was gone almost fifteen minutes and when she came back, Taffy and Connie were following her. Beth confirmed the reservations were made. She told me the travel time from the airport to the cottages takes almost an hour, depending on traffic. She told me she contacted the transportation company recommended by the resort and she needed to call them back with our arrival time. Beth told me Captain McGrath would be calling her cell when he had the departure time all set. I suggested we work on the rest of the trip when we returned from lunch. ",
        "I called John at the clothing shop. When John answered the phone I told him who I was, of course he remembered me. We exchanged pleasantries and he asked about our suits and I told him I wanted to bring a couple of people down to pick out a couple of suits and some other clothes. I added in the fact that I was recently promoted to Chairman of the Board/CEO. He congratulated me and said he looked forward to serving me again.\n\nI reminded him I only wanted to work with Jeff Snyder and Cindy Spinner. I inquired if they would be available in approximately fifteen minutes. John was very quick to tell me he would make sure they would be available when I arrived. I also told John I'd likely need the services of his tailor. John politely interrupted me and told me his tailor would be at my service when I needed him. I thanked John for his willingness to be helpful and as a closing statement I asked, \"So we'll have uninterrupted shopping?\"\n\n\"Oh yes Mr. Morrison. I'll personally make sure you and your party won't be disturbed. Goodbye and I'll be waiting for you.\" John rapidly replied.\n\nI picked up my phone and called Kelly and asked her to step into my office for a moment. When she arrived I said, \"Kelly, we are going to lunch and I expect to be back in a couple hours. We will have our cell phones with us if you need to contact us. While I'm gone I'd like to have you pull the employment records for the people on this list. I have to name someone to be second in command and I want to choose the best possible candidate.\"\n\nKelly took the list and left my office. I looked at Taffy and Connie, \"Are both of you ready to go?\"\n\nTaffy said, \"Yes Sir.\"\n\nConnie also quickly replied, \"Yes Sir.\"\n\nI smiled at both of them and said, \"While we are together where no one else in around, you may call me Dan.\"\n\nBoth Taffy and Connie smiled and me and said, \"Ok Dan.\"\n\nWe walked to the elevators and went down stairs. When Taffy and Connie saw Joe open the door to our limo, both of them gasped. Taffy turned to me asking, \"Dan are we going to ride in that car ... that limousine?\"\n\nI smiled at her saying, \"It would be a long walk if we don't take the car. You don't want to get all sweaty again do you?\"\n\nTaffy laughed saying, \"I've never ridden in a limo before. Today seems to have a lot of firsts for me.\"\n\nConnie laughed, \"You know we owe all this to Bart. We should go down to the police station and thank him. If he hadn't mouthed off this morning we'd still be going around picking up garbage cans and making dumpster runs.\"\n\nI stood by and let all three ladies get into the car. I gave Joe the address for the shop and asked him to park in front of the building if it was possible. I told him the parking lot was rather small. Once I got into the car, Joe closed the door and I took the rear seat beside Beth. \n\nBoth Taffy and Connie were looking around and every now and then they would look down towards Beth's legs. I took a half second and looked at Beth's legs and noticed her knees were parted and most likely the girls could see Beth's panties. We carried on a great conversation on our trip to the shop. I was delighted to see the girls had personality and both of them spoke in clear and concise English. One thing I did notice was their lack of cell phone or at least the use of their cell phone if they had one.\n\nJoe pulled up in front of the shop. We waited for Joe to open the door and I let the ladies exit the car first. I noticed Beth was a little un-lady like when she got out but being behind her I didn't get to see what she showed Joe. However Beth stood in the open door and adjusted her skirt before she stepped away so I could exit the car.\n\nI looked at the shop and saw John holding the door open for us to enter and true to his word Cindy and Jeff stood just inside the door waiting for us. We entered the shop and I made sure everyone was introduced before I said, \"Cindy, I believe we are going to go to the lady's suit section first.\"\n\n\"John, I'd like to speak with you,\" I said, \"Privately if I may.\"\n\nJohn directed me to his cluttered office where he had to pick up papers off a chair before I could sit down. Once seated I said, \"I'm going to make this quick because I want to get out there with them while they shop. I need you to set up a charge account for Taffy Davis and Connie Swensen.\" \n\n\"They work for my company and they were promoted today so this is only the first shopping trip for them. I'm sure if you treat them well, as you have with Beth and me, they'll be repeat customers. I know both of them are young and neither of them have major finances so I will back each of them for a three thousand dollar limit. That should give them enough clothing to wear in their new positions. John I don't want you to let them know I'm securing their accounts with you. Set up a payment arrangement with each of them however you want to do it.\"\n\nJohn smiled broadly at me saying, \"We've picked up many customers from your company since you and Beth came here. I don't see a problem with me extending credit to those two young ladies out there. I appreciate your willingness to back their accounts, but that won't be necessary. I will set up an account so their purchases will be charged to their accounts today.\"\n\n\"Thank you John, I appreciate your cooperation.\" I replied.\n\n\"No, it is I who needs to thank you for sending customers here. Jeff and Cindy have been very busy. I suspect you've spread the word around to ask for them?\"\n\n\"Yes as a matter of fact I have. Both of them are very knowledgeable and pleasant to work with. It's a good thing I'm not in the retail business; I'd lure them away from you in a heart-beat.\"\n\nI stood up and shook John's hand, \"I'll let you know when we are ready to check out.\"\n\nJohn smiled as he sat down behind his keyboard and opened up his computer. I left his office and caught up with Taffy, Connie and Beth. I saw each of them was holding a suit with a skirt and slacks. Jeff and Cindy were making suggestions for a second selection. Finally both of them made a second choice. \n\nJeff had helped Beth at the same time he was assisting Taffy. I noticed Beth was holding two suits in her hands. Each suit had a skirt and slacks. She was also holding a white silk blouse with frills on either side of the buttons.\n\nCindy suggested to Taffy and Connie if they would like to see what the suits looked like on them before we went over to the tailor shop, they could try them on in the dressing room first. Both young ladies jumped at the chance to try on the suits to see how they looked.\n\nWe walked over to the dressing room area and each of them carried their selections into the dressing room. Cindy and Jeff looked at me and Jeff was the first to say, \"They're cute.\"\n\nCindy slapped Jeff's arm whispering, \"You horny little ...\"\n\n\"I saw you checking them out too.\" Jeff whispered back.\n\n\"Dan thank you for all the business you've sent our way. Cindy and I have been really busy. Both of us made salesman of the month this month. I don't mind sharing that title with such a wonderful, beautiful young lady like Cindy.\" Jeff said.\n\n\"Flattery will get you everywhere big boy. But it's I who don't mind sharing salesman of the month with you.\" Cindy retorted.\n\nTaffy's curtain opened first and she stepped out in her suit with the skirt on. Cindy and Jeff immediately walked over and had her turn and look in the mirror as they had her move and checked the fit of the suit. It was decided to get one size bigger to give her a little additional room. While Jeff went to select a suit a size bigger, Taffy asked me what I thought. I told her I agreed with Cindy and Jeff's assessment. Taffy went back in the changing room to take off the suit and wait for Jeff to return.\n\nMeanwhile Connie waited for Cindy to check her out. She said the skirt was longer than she'd like it to be and I added the tailor would take care of the hem when we went over there. Jeff returned and handed the new suit into Taffy. He turned and worked with Cindy evaluating Connie's suit. Connie asked me what I thought of the suit and I told her the suit fit her nicely and it looked great on her. Connie went back in her dressing room to try on the other suit she selected.\n\nTaffy came out in the larger suit and all of us agreed it was a much better fit. She said they would have to select a second suit in that size.\n\nThrough all the attention to Taffy and Connie, Beth came out of her dressing room to ask my opinion of her choices of suits. I approved both of them. When both Taffy and Connie were inside their changing room, Beth's curtain opened and she was only wearing the silk blouse she'd chosen. She stepped out of the changing room and stood in front of the mirror asking, \"Jeff, Cindy do you think this looks good on me?\"\n\nAlthough both of them had seen Beth completely naked before, here she was standing in the store wearing only a blouse. I know I had a hard on looking at her and Jeff would have had to be dead not to be affected by Beth's body.\n\nBeth's beautiful bald pussy was clearly visible below the tail of the blouse. She stood in front of the mirror and turned several ways before she returned to her changing room and closed the curtain.\n\nA few minutes later all three were out of the changing rooms and all we had to do was exchange that one suit for Taffy and we were on the way over to the tailor shop. When we entered the tailor's shop, which was closed off from the rest of the clothing shop, he looked up and smiled broadly at us. He held up one finger and then we watched as he finished sewing the hem of the skirt he was working on.\n\nWhen he finished he came over to us and greeted us, me with a hand shake and Beth with a hug before I made the introductions for Taffy and Connie. He asked us what we had for him and Beth said, \"We have two suits each. All the suits have both a skirt and slacks.\"\n\n\"How about,\" The tailor said before he continued, \"Beth I have your measurements in my computer unless you've lost weight. I won't need to measure you again.\"\n\n\"That's what I love about you,\" Beth smiled, \"You know just what a woman wants to hear. No I'm still the same size as I was when you tailored this suit for me.\"\n\n\"That's great.\" The tailor said with a smile, \"I can measure these two young ladies and then we'll find out how much we need to adjust the suits. Who would like to go first? There's a curtain over there if you'd like to use it.\"\n\nTaffy looked at Connie and Connie looked back at Taffy and then both of them looked at Jeff and me. Finally Taffy asked, \"Is everyone going to stay here while we get measured?\"\n\n\"Here let me do this so you won't be embarrassed.\" Beth said as she started unbuttoned her jacket and hung it on the back of the chair beside her. Next she unbuttoned her blouse and slipped it off and hung that on the chair also. Without waiting Beth unfastened the button and unzipped her skirt and held it as it slid down her legs and she stepped out of it. Both Taffy and Connie drew a sharp intake of air when they noticed Beth wasn't wearing any panties and her bald pussy was proudly displayed to the tailor, Jeff and me.\n\nAfter laying the skirt on the chair Beth unhooked her bra and proudly allowed it to slide down her arms baring her beautiful round \"C\" cup titties with the light brown areola and pencil eraser size nipples which stood out at attention. \n\nBeth looked at both Taffy and Connie saying, \"When I come here, I don't use the curtain, nor do I worry about anyone seeing me. The tailor is very professional in his work and actions. As far as our sales people and Dan, well I don't worry about them saying anything either.\"\n\nBoth young ladies looked at each other for a few seconds before Taffy said, \"If Beth can stand here completely naked, then I'm not going to worry about being naked either. She handed her suits to Beth who hung them up on the rack and then without further ado she started unbuttoning her blouse. However, her fingers were visibly shaking as she worked.\n\nWhile Taffy was undressing the tailor said, \"Since there are six suits and all of them have skirts and slacks, would it be ok if you left them here and I can do them all and have them delivered this afternoon to your office?\"\n\nI spoke up saying, \"That would be great and then we can get back to work and not have to wait. Do you still have the address for my office?\"\n\nThe tailor replied, \"Yes I have everything in my computer.\"\n\n\"Taffy and Connie will need their suit for tomorrow so as long as they are delivered this afternoon that will be acceptable.\" I said\n\n\"This is fucking weird,\" Taffy said as she looked at Beth, \"Undressing in front of everyone. But you did it, so I can do it as well.\"\n\nI looked at Taffy and she was blushing deeply as she took her time to unzip her jeans. She saw me looking at her and paused momentarily. With a slight grin on her face he hooked her thumbs into her jeans and pushed them down. I noticed immediately she wasn't wearing panties. She stepped out of her jeans when they pooled at her feet, leaving her only in her bra. She reached behind her and pulled down on the back strap and unsnapped it. One quick shake of her shoulders, her bra cups uncovered those delicious mounds of flesh. Taffy looked me directly in the eye and watched me as I allowed my eyes to travel down her body, lock on to her beautiful breasts and pause a few moments. Then I allowed my eyes to travel over her abdomen to her pubic mound and finally her pussy. Within seconds I had her body memorized. \n\nTaffy has black shoulder length hair, with a fair complexion. She has deep blue eyes. Her shoulders are a little broader than her body style but that could be the results of her most recent job. I'm guessing she has at least a large \"B\" or a small \"C\" cup tit. I saw a scar on her right side which most likely is an appendectomy scar. She has a black half inch wide landing strip about two inches long that ends just above her slit. Her black pubic hair, although obviously shaved, showed as a dark frame around her pubic mound and the lips of her pussy. The area that was shaved looked like a guy's beard with a five o'clock shadow. Her hips flared only slightly but not enough to notice. Taffy's thighs had well defined muscles giving way to runner style calves.\n\nWhen I looked back up at Taffy's face, her smile had spread and it looked like she was almost ready to giggle. I looked at Jeff and his eyes were also fixed on Taffy's body. Our spell was broken when the tailor said, \"Please step over here and I'll get your measurements.\"\n\nTaffy looked in the large mirror as the tailor measured her. When he measured her bust his finger brushed her left nipple, immediately causing both nipples to pop out and stand proudly out from her small titties. He paused after the measurement to scribble a number on his pad before he proceeded. He made other measurements down her body until he was kneeling in front of her. This put his face directly in line with her pussy. All of us could see him take a moment to look at her lovely slit before he continued his duties. He measured the outside of her leg and then looked up at Taffy asking, \"Can you part your feet so I can get an inseam measurement for your slacks?\"\n\nTaffy followed his instruction and a squeal escaped her lips when his bent finger rubbed across her pussy lips while he held the tape measure stretched out to get an accurate measurement. \n\nWhen he was finished he asked Taffy to stand up on the platform and put on a jacket, with a skirt or a pair of slacks. The tailor had a platform big enough for three or four people to stand on, which was located in front of a very large mirror. The platform was high enough for him to hem a skirt without bending over too far. At one end of the platform was a small hand railing for a person to hold on while the tailor did his work. The mirror allowed the customer to watch the tailor and make suggestions on adjustments. For those who waited for their suits to be tailored, they could stand on the platform and view the finished product.\n\nWith her face glowing red, Taffy walked over and up the steps to the platform. She chose to put on one of the skirts first. Beth was standing nearby so Taffy motioned for her to walk over to her. She bent down and whispered something in Beth's ear. Beth looked around before she walked over to the desk and pulled a couple of tissues out of the box. She walked back to Taffy and handed them to her. Taffy parted her legs and made a quick swipe with a tissue then crumpled it up in her hand. Beth held out her hand and said, \"Don't worry, I'm excited also.\"\n\nRed faced, Taffy handed the tissue to Beth before she said, \"Yeah but you've done this before. This is the first time for me, especially with an audience. I've never had so many people view my naked body at the same time.\"\n\nThe tailor smiled saying, \"Just relax honey, no one will do anything to you in my shop.\"\n\nTaffy said, \"I'm getting used to it but ...\"\n\nI saw movement out of the corner of my eye and when I turned to look, I saw Connie undressing. She saw me looking, \"Dan, I'm going to be naked in a few minutes so it doesn't matter if I do it now or wait until everyone is watching me.\"\n\nI smiled saying, \"When you are with me or Beth you can do whatever you want to do.\" \n\nConnie walked over to me and in a very quiet voice she asked, \"Are you saying you won't mind if Taffy and I are naked in front of you and Beth?\"\n\n\"Please remember, I don't need anything to come back and bite me for helping someone out.\" I said in a whisper.\n\nI looked at Connie, our eyes met and without me saying another word, I saw a smile spread across her face and her eyes sparkled. \"You won't have to worry about that from either of us. I talked to Taffy when we were waiting for you and we are so happy to be rid of Bart. We have decided we will do whatever job you have for us.\"\n\n\"All I'll ask from either of you is to do your job to the best of your ability. Don't take anything for granted.\" I countered.\n\nConnie finished taking off her clothes and walked over to the desk and pulled out a tissue. When she thought no one was looking she turned around and wiped her pussy and dropped the tissue in the garbage. \n\nI looked at Connie and she was the taller one of the two. She stood possibly as tall as five foot seven. Her hair is blonde and she also has wider shoulders than a girly girl. Her tits were larger than Taffy's but not by much. Her pink nipples are small puffies that stand out from her titties. Connie has a flat abdomen and like Taffy she only has a very slight flare to her hip. I looked directly at her pussy and she caught me looking and what I saw made my mouth water. I knew I'd been caught so I didn't look away and Connie didn't hide her body from me. I thought it was strange for the seemingly shyer of the two girls, to stand before me completely naked and never once try to hide her tits or pussy.\n\nConnie's pussy is one where you could only see the beginning of her slit at the base of her pubic mound. Her clit hood peeked out between the tight pussy lips. I figured she either shaved or waxed because she didn't have any stubble on her pubic mound or her pussy lips. Connie's thighs looked like she was a track runner.\n\nThe tailor finished with Taffy and she stepped down off the platform. Connie stepped forward and looked at the tailor saying, \"I'm a quick study. Go ahead and measure me.\"\n\nTaffy had thrown caution to the wind and didn't bother putting on her clothes. She walked over and stood beside Beth. Neither one of them bothered to cover any of their parts. Beth mentioned they needed to pick out some blouses when they went back out into the shop. Taffy asked, \"Will we have to be naked out there?\"\n\n\"Oh honey, you don't have to be naked back here if you don't want to be. I'm a nudist and I don't mind being nude. Besides I find it easier to step in and out of my clothes for the tailor to work on. Of course with him being a man, I'm sure he doesn't mind seeing me nude. If you want to put on your clothes, please feel free to put them on.\" Beth told Taffy.",
        "\"When you are with Dan, no one will ever get away with doing something you don't want them to. He believes both parties have to be consenting any time there's any action.\" Beth whispered back.\n\n\"I know I saw him this morning when he challenged Bart! He walked right up and got in Bart's face and told him what to do. I thought Bart was going to hit Dan but he didn't. I was very impressed by his actions.\" Taffy whispered.\n\nI heard Taffy's last comment so I said, \"Taffy, you never have to be worried being dressed or naked when I'm around. No one will ever touch you without your consent.\"\n\n\"I know, Beth just told me that.\" Taffy countered. \n\n\"I'll wait for you to get dressed. It just feels weird standing here naked but I'm not uncomfortable. I'm getting used to having all of you seeing me. I mean, all of you are looking at the real me, there's nothing being hidden from your view.\" \n\n\"God this is so fucking weird. If anyone had told me I would be naked in front of the big boss this morning when I woke up, I'd have told them they were fucking crazy. Actually Beth, I'm getting excited standing naked in front of these guys and I feel safe because no one is trying to do anything to me.\" Taffy said with a smile.\n\n\"Me too!\" Connie replied\n\nThe tailor looked up at Connie, pausing briefly to stare at her bald pussy, before his eyes got to her face, \"All three of you sure make this old man's heart beat faster. If any of you need something tailored, I'll stop what I'm doing and take care of you. With all the new business we've had lately, I may have to hire another tailor to work with me.\"\n\nCindy spoke up saying, \"You can thank Mr. Morrison and Ms. Thompson for the increase in business. I've been told by some of the customers, who've come in, they've spread the word around their company. My customers have told me they heard we sell high quality suits and the tailor does a fantastic job.\"\n\nThe tailor looked at us saying, \"Thank you Mr. Morrison and you too Ms. Thompson.\"\n\nWhen the tailor was finished with Connie she stepped down off the platform and Beth stepped up on it without any hesitation. She hung her two suits on the small rack at the end of the platform and selected a skirt to put on first. The tailor went right to work and hemmed the skirt to the length that Beth wanted. Like Taffy and Connie, Beth had all her items measured for her and ready to be sewed before she stepped off the platform. \n\nBeth walked over to the tailor and held out her arms and gave him a naked hug. It wasn't a quick hug but one that lasted almost a minute. All of us could see she had her lovely titties pressed tightly against his chest.\n\nTaffy also hugged the tailor while she was naked but her hug only lasted a few seconds. Connie followed Taffy and then all three of them started to get dressed. The tailor told all three young ladies they had wonderful body shapes and he enjoyed working with them. He said, \"Please don't take this the wrong way but I'm glad you didn't wear any clothes while I worked. I don't get that many who choose to be nude, but I appreciate those who do. I'll look forward to helping all of you again in the future.\" \n\nWhen all three young ladies were finished dressing, we walked back out into the shop to look at blouses. While they browsed through some of the blouses I stood off to the side and watched Cindy and Jeff help both Taffy and Connie choose selections to try on. When they finished we went over to the dressing rooms. Taffy was the first to step out of the dressing room and ask my opinion on a blouse. Connie must have heard her and she opened the curtain and also asked for my opinion.\n\nWhen they made all their selections we waited while Jeff and Cindy totaled up everyone's purchases. I explained to both Taffy and Connie I'd arranged for each of them to have a charge account with the shop owner. Both of them expressed their gratitude and promised to make sure they paid. I smiled at both of them saying, \"I trust both of you and that's why I'm helping you get started. Everyone needs a helping hand from time to time. Who knows both of you could work your way up to executive status one day.\"\n\nBeth paid for her selections while Taffy and Connie signed a contract to make monthly in store payments. I handed Jeff and Cindy each a fifty dollar bill and thanked them for doing an excellent job.\n\nI pulled them off to the side and said, \"With the promotion, we are going to be busy but we will be home in the evenings. If you'd like to come back out to our home, you have the address. There's no invitation required for either of you. I hope you'll take advantage of the open invitation. It will be great to see more of you.\"\n\nCindy reached up and hugged me whispering, \"I want your body, Dan Morrison. I hope that invitation includes a wild ride.\"\n\nWhen we finished our hug I looked at Cindy, I winked and nodded my head. Her smile couldn't have been any broader. I said, \"We are going away on a trip until sometime late next Monday.\"\n\nCindy understood what I said without asking any questions. Jeff shook my hand and said, \"Have a great trip and stay safe.\"\n\nJohn came walking out to say goodbye and he was especially warm to the three young ladies. He told them if they needed anything to come back and he would make sure Jeff and Cindy would be available to take care of them.\n\nJohn shook my hand and with a broad smile said, \"Thank you Dan, I appreciate what you're doing for my business.\"\n\nI smiled and squeezed his hand saying, \"No problem John. I can only steer someone to your shop, customer service is what keeps them coming back. You have two great sales people right here in front of you, treat them well.\"\n\nI smiled at both Jeff and Cindy then said goodbye and turned to leave. John rushed past us and opened the door. When Joe saw us come out of the shop he opened the car door for us to get in. Once inside Taffy exclaimed, \"Can you believe it Connie, this morning we were in deep shit for not moving fast enough and this afternoon, there are people rushing to open the door for us. Pinch me; I want to make sure this isn't a dream.\"\n\nConnie reached over and pinched Taffy's arm and she yelled, \"Ouch! That hurt!\"\n\nConnie started giggling and said, \"Yep, you're awake, this has to be real.\"\n\nBeth and I laughed. Suddenly the phone rang beside me and I picked it up. I heard Joe ask, \"Where do you want to go next Mr. Morrison?\"\n\nI told him to call me back in a few minutes and I'd tell him. \n\n\"Do you two want to go to the lingerie shop or do you have enough underwear?\" I asked while looking at Taffy and Connie.\n\nThey looked at each other; I saw both of them start to blush. Taffy turned to me saying, \"I can only speak for myself when I say, I live paycheck to paycheck because I help my family with expenses. I really don't have the money to buy fancy lingerie like we saw in Beth's drawers. I appreciate your offer but I can wear my current underwear for now. I don't want to ask you for any more favors. You've helped me enough to get me started in my new job.\"\n\n\"My family has also been hit hard with the current economic hard times. My father is also looking for work and can't find a job. He's older and no one wants to hire an older guy. He's trying and all of us who are still living at home are chipping in to make it. I'd better wait until times get better before I buy any fancy underwear too.\" Connie added.\n\nI looked at Beth and the phone rang. I picked it up and gave Joe the address for the lingerie shop. When I hung up the phone I said, \"We are going to the lingerie shop and get each of you some panties and bras ...\"\n\nBeth interrupted me, \"What Dan is saying is that I'm going to buy each of you some bras and panties to wear with your new suits. I want both of you dressed for success. I will pay for the items we choose for you and you won't have to pay me back. Consider this a gift from both of us to both of you.\"\n\n\"I told you, I started out at the bottom when I was fresh out of high school so I know what it's like to be in your shoes. I struggled back then by myself because I left home and moved to the city. I rented an apartment and I lived paycheck to paycheck for a long time until I started moving up in the company with this particular young man who I performed secretarial duties for. Every time he advanced he brought me along with him and yesterday, well you know where we are now. I want both of you to remember this day and if you ever find yourself in a position to assist someone who needs your help, well ...\"\n\nBoth Taffy and Connie sat in the seat facing us and stared. It seemed like a long time before either of them said anything. As customary it was Taffy who spoke first asking, \"Are you guys for real? I mean, nobody helps a stranger. You two are the big bosses and big bosses don't give a rat's ass for people low on the food chain and ...\"\n\nI let Taffy rant until she quieted down and said, \"Tell me about your father and what type of work he used to do.\"\n\nTaffy looked at me with a confused look on her face. \"Do I need to repeat my question?\"\n\nDumbfounded, Taffy said, \"Like Connie's dad, my dad is older too. We are the babies in our respective families. When his company was hit with layoffs, he was one of the first to go. He's looking for work but he can't find a job in his field. He was an engineer of some kind, I don't know any more than that.\"\n\nTo save time, when we get back to the office, I'm going to have Beth give each of you her office phone number. I want you to take the number home with you tonight and have your dad's call Beth tomorrow and set up an appointment for an interview with me. I'll find out, for myself, if I have a job they can do. I can't promise anything but I'm certainly willing to hire an older guy as both of you called them, if I have something available.\n\nConnie looked at Taffy and said, \"Hit me!\" Taffy hit her arm!\n\n\"Yes, that hurt so I'm not dreaming either.\" Connie replied.\n\nTaffy smiled and said, \"Both of you sure know how to shock a person. How are we ever going to repay you?\"\n\n\"It's very simple; you can repay us by helping someone else someday. It doesn't have to be with money or material things, a show of kindness goes a long ways.\" I replied\n\n\"Dan, I have a perfect idea. When we do the employment drive at the homeless veteran shelter, let's take Taffy and Connie with us. They can help me and it will expose them to someone less fortunate than they are.\"\n\n\"That's an excellent idea Beth! Would the two of you like to go along with us and help us? We will be doing that after regular business hours.\" I asked.\n\nBoth Taffy and Connie said they'd love to help. Connie offered, \"Dan you can ask us to do anything and we'll do it for you. You've been so kind to us, it's hard to believe.\"\n\nThe car came to a stop in front of the lingerie shop and Joe opened the door for us to get out. When we were out of the car I looked at Joe saying, \"Come in with me so we can talk while they're choosing lingerie.\"\n\nBeth looked at me and smiled while Taffy and Connie whirled around and stared at me for a moment before they turned back and started walking towards the door. When we walked into the boutique, the older lady who owned the place came over to us immediately. When she saw me she hesitated for a moment, looked at the three young ladies with me and then smiled. Then she looked at Joe, who was dressed in his chauffeur uniform and her smile grew even bigger.\n\nShe held out her hand saying, \"My name is Maggie, I know you've been here a few times before but I never caught your name.\"\n\nI politely shook her hand saying, \"My name is Mr. Morrison. Mr. Dan Morrison. As you clearly stated, I've been here before so I know my way around your boutique. We are on a time schedule today and we would love to have some uninterrupted time to make our selections. We need to get back to the office.\"\n\n\"Very well, Mr. Morrison please feel free to browse and if you want a particular item and can't find it, I'll be happy to assist you.\" Maggie stated in a clear sing-songy voice.\n\n\"Actually Maggie, I hope you won't take this the wrong way, but if I need assistance, I'd prefer to have one of your employees assist me. I'm going to be paying for the items we select so you will be making some money off my purchase. I don't want to give you a tip on top of your markup. If one of your employees assists me, I'll be spreading the wealth, won't I?\"\n\nMaggie stared at me with a look of disbelief on her face before she recovered with a smile saying, \"Yes, but of course Mr. Morrison. The customer is always right. If you need assistance I will send one of my employees. Thank you for shopping in my humble store.\"\n\nI looked over the racks and saw Beth, Taffy and Connie had started looking through the panty and bra sets so I motioned for Joe to follow me. As we walked away from Maggie, I saw her look out the front door and most likely at our car parked at the curb. \n\nI watched as Beth expertly browsed and chose items that were both practical and sexy. At the same time I talked with Joe as we walked down the various aisles. When Beth, Taffy and Connie had chosen several pieces each, Beth led the way to the changing room in the back of the boutique. Joe and I followed and we sat down in the comfortable chairs across from the changing rooms. \n\nAlmost immediately after we were seated a young lady came over and asked Joe and me if we wanted something to drink. I asked her for a cold bottle of water and Joe agreed that sounded good. The young lady excused herself and when she came back she had two bottles of water on a tray with two plastic cups. I reached out and picked up a bottle of water and said, \"I can drink it right out of the bottle\" The young lady smiled at both of us as Joe reached out and took the other bottle off the tray.\n\nBeth stated, \"I want to let both of you know, since this is a boutique you can be nude out in this area if you want to. Also we're lucky to have two males present to give us their opinions.\" \n\n\"Beth, the last time we were here, you didn't close your curtain. I don't see any need in you doing it this time either.\" I said with a smile.\n\nBeth smiled at me saying, \"No problem Dan. I don't mind at all.\"\n\nTaffy exclaimed in a hushed voice, \"You didn't close your curtain even when you were changing?\"\n\nBeth quietly said, \"Taffy, think about it! Some of the items we selected are sheer so they're going to see your body anyway.\"\n\n\"Yes, that's right.\" Taffy replied, \"Besides I've already undressed and displayed my body to a few men this afternoon, I guess another one won't matter.\" \n\nEach of young ladies selected a changing room and much to my amazement and exhilaration; nary a one closed their curtain before they started undressing. Beth knew I wanted Joe to see her naked body so she stood facing us and carried on a conversation with me as she slowly unbuttoned her blouse and took it off, unhooked her bra and slipped it off and finally she unbuttoned and unzipped her skirt and let it slide down her legs before she stepped out of it. She hung up the skirt and turned back and struck a pose with her legs parted while she asked me a question. I answered her question and then looked at Joe. \n\nHe was sitting in his seat with his eyes wide open staring at Beth's naked body. I motioned for Beth to walk over to us and without hesitation, she did just that. She didn't stop walking until she couldn't walk any further. With Beth standing in front of us, I turned to Joe asking, \"I hope what happens in this boutique will stay between us and not be spread around.\"\n\nJoe stared at Beth's bald pussy before he said, \"Ms. Thompson you look lovely, thank you for allowing me to see all of you.\"\n\nBeth leaned over and whispered to Joe, \"Any time you want to see my naked body all you have to do is ask.\" Joe's face turned beet red as he tried to think of something to say but he was tongue tied. \n\nBeth turned and walked back to her changing room. One by one all three of the young ladies came out in various bra and panty sets. They walked close to Joe and I before they did a slow three hundred and sixty degree turn so we could view the back and well as the front. Before they walked back to the dressing room, we informed each of them which articles looked good and which ones looked sexy on them. It was a hard job, but someone had to do it. \n\nWhen they ran out of sets to try on, all of them re-dressed and brought their selections out with them. Joe and I helped them decide which items to keep. True to her word, Beth paid for all of the items which the three of them selected. We started walking towards the front door of the boutique with Maggie following us and telling us to come back any time. She stood in the open doorway while we got into the limo and she watched us pull away from the curb.\n\nI looked at my watch and saw we'd been gone a little over two hours but I felt the trip was worth doing. I looked at the other three with me asking, \"Is anyone hungry?\"\n\nAll three of them said, \"Yes!\"\n\nI picked up the phone and called Joe and gave him the address for a little deli I used to use when I would go out and get my lunch. We pulled up in front of the deli a few minutes later. I invited Joe to come in with us and get a sandwich. It was after the lunch hour rush so we didn't have to wait to have our sandwiches made. We selected a drink and I paid for our lunches before we moved to a table near the front window. \n\nWe ate our lunch in peace but we had a lively conversation going. Both Taffy and Connie wanted to know how two men could watch three naked women try on sexy underwear and not try to feel them up or touch them in any way.\n\nI looked at Beth and she said, \"I'll prepare a statement for Joe.\"\n\nI looked at Joe saying, \"I'd like for you to sign a confidentiality statement for me. I don't want anything you may have seen or heard today going anywhere outside this little group.\"\n\n\"Mr. Morrison, in case you aren't aware, as part of my duties as your chauffeur, I have already signed non-disclosure/confidentiality statement and it's in my file.\n\n\"Until recently, I've never had the services of a chauffeur so I didn't know that. I appreciate you telling me.\" I said with a smile.\n\n\"As for the lady's question, I totally enjoyed seeing all three of you this afternoon. I had to restrain myself to my gentlemanly composure. All three of you are very beautiful young ladies, in your clothes but I particularly loved seeing all of you out of them. If I may be so bold as to say, it's a shame you have to hide all your beauty under those clothes.\" Joe unabashedly said with his slight accent.\n\n\"Connie, Taffy, I know you signed a statement so I'll tell you, like Beth, I'm also a nudist. So as beautiful as both of you are, I've been around nude females all my life. I'm not jaded by any means, I still appreciate each view I get of a naked female. I also managed to use my self-control today as I watched all three of you lovely ladies chose your underwear. The best part for me was when all of you allowed me an unobstructed view of your naked body.\" I said as I looked at all three ladies seated with me.\n\nWe finished our sandwiches and left the deli. We arrived back at the office a short time later. I asked Joe to come up to my office at four o'clock. The four of us rode the elevator up to my office. Once inside I asked Connie and Taffy if they had a locker down in their old work area. Both of them said they did so I advised them to go down and clean out their locker and then come back up to Kelly's office to wait for the delivery from the clothing shop.\n\nI sat down at my desk and Beth said, \"I need to make arrangements with Captain McGrath for our flight time.\"\n\n\"When you call Captain McGrath make sure you tell him about the ground travel once we land, so he can calculate when we have to leave to be at the cottages somewhere around noon.\" I said to Beth."
    ],
    "authorname": "RecHiker",
    "tags": [
        "mother son incest",
        "mother",
        "sister",
        "daughter",
        "brother",
        "father",
        "brother sister sex",
        "incest",
        "nude",
        "exhibitionism"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-morrisons-ch-23"
}