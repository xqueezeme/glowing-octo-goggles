{
    "title": "Alex & Alexa Ch. 10",
    "pages": [
        "Disclaimer: All characters portrayed in sexual activity are 18 years of age or older. Reviews are always welcome, flames in all caps or poorly spelled will be snickered at, no excuses. Enjoy!\n\n Chapter 10- Awkwardness Mounting\n\n I pulled on Alexa's hair and she groaned in pleasure. I was fucking her from behind, with her bent over the desk of the big office we'd been working in. She ground her ass back against me and flexed her pussy around my cock, making me shudder. I'd never known anything like it.\n\n And I was so in love with her.\n\n \"Gnnnn, Alex...\" she hissed, flexing her fingers against the pad that topped the desk. \"You feel so good...\"\n\n \"I love you, Alexa.\" I panted.\n\n \"I love you too,\" she replied, turning her head to look at me, eyes shining. \"You gonna marry me?\"\n\n \"Uh-huh.\"\n\n \"And be mine forever?\"\n\n \"Yes.\"\n\n \"Alex, I- uh! Oh God... Alex, I can't live without you. We need to be married, somehow.\"\n\n I nodded, enthralled by her voice, smooth with pleasure. We had gone to the university to do our summer work and after the campus had emptied out, she slipped into her schoolgirl outfit, which I was now fucking her in. The little pleated skirt was hiked over her beautiful ass while the blouse, knotted at the midriff, was unbuttoned, her incredible breasts spilling out of it. They were pressed now against the desktop while I watched my glistening cock sliding in and out of her wet pussy.\n\n Within seconds of her putting on the outfit we were making out hungrily and the piles of papers on the desk were now scattered around the floor as we made room for a badly-needed fuck session. My addiction to my aunt was exactly that- an addiction. In spite of it breaking one of the world's most universal taboos, there was nothing I could do about it, even if I'd wanted to. And I sure as hell didn't want to.\n\n I reached down and squeezed her breasts, gripping them and pulling her upright to me. She shuddered and moaned, turning her head to kiss me hungrily, tongues tangling in one another's mouth. I squeezed the silken flesh and pulled gently on her nipples. Her ass squirmed against me and I pushed in and out of her. The moist heat of her womanhood, it's velvet clutch around me, was sheer heaven.\n\n \"Let me turn around, Alex,\" she said breathily, her hairline damp with sweat and her skin pink. \"I want to see you, to look in your eyes when you cum in me...\"\n\n I nodded and pulled out of her for a moment when she turned around. I marvelled at the sight of my aunt, who was so inhumanly beautiful to me- her lush, golden blonde hair, penetrating blue eyes, her kind smile, her sculpted body, adorned with glorious breasts, athletic legs and her wanton pussy. She looked up at me with molten eyes, her hand slowly pulling up the hem of her tiny skirt, exposing herself to me. She parted her legs to make room for me.\n\n I took her by the hips, staring back into her eyes. We knew one another's bodies well enough that I easily found her entrance and we both sighed as I pushed back up inside her, the pliant, slippery walls giving way before my hard cock. She put her hands gently on my shoulders, her butt resting against the desk and she legs on either side of mine. My hands found her bountiful breasts and her head fell back when I massaged them as I began to push in and out again.\n\n \"You feel so good, Alex...\" she whispered, her eyes closed, letting the sensation of our lovemaking flood over her, stroking the back on my neck with her fingers. \"Unlike anything or anyone I've ever been with. It's so perfect and right with you...\"\n\n She squeezed me rhythmically as I pushed inside, filling her. My throbbing cock stretched her walls and we could hear the wet sounds her pussy made as I fucked her. Her breasts jiggled hypnotically and I squeezed them again. Her head fell back, her eyes closed. She ground her hips in circles against me. I gazed hungrily at the glistening wetness of my cock and her slit, bonding us to one another.\n\n \"Cum in me...\" she whispered. \"Let me feel you cum deep inside me, Alex.\"\n\n I took hold of her hips and began pumping back and forth with more vigour and she squeezed me tighter. We both groaned, no longer trying to delay our climax. The goddess I worshipped wanted my cum and I would give it to her. We squirmed and ground against one another, sweat shining on our skin, hearts pounding and panting.\n\n I could feel the tingling boil inside my balls, spreading through me, my thrusts becoming almost desperate, pushing further inside her. Her hands gripped my ass and squeezed before trailing up my back, nails straking my skin. They finally arrived at my upper back and she pulled herself against me, wrapped her legs and arms around me.\n\n \"Oh God!\" she gasped, shaking almost uncontrollably.\n\n My hands found her ass cheeks and I pulled her against me as tightly as I could, pushing my hips forward with all my might. Her eyes flared open and we stared into one another's eyes as I began to cum inside her. The warmth flooded through me and I lost myself in those sapphire eyes while I pumped my essence deep into her yielding pussy.\n\n I treasured this moment in our lovemaking, where I felt like I was seeing right into her soul, to my aunt's true self. I could see how much she loved me, her total and even fanatic devotion to me. And she could no doubt see how in love I was with her, nothing held back.\n\n Trembling, we kissed one another, relieved to have cum together, something we were both dependent upon now. We kissed lovingly and deeply, my cock still filling her. We whispered loving words to one another while kissing, hands caressing each other's bodies gently. I held her to me, never wanting to let go.\n\n \"Oh, wow...\" came a familiar and unwelcome voice from the doorway.\n\n We both turned our heads to gaze at the interlocutor before Alexa sighed quietly and pressed her forehead against my shoulder in despair. I kept staring as Jeanie leaned in the doorway, arms crossed over her chest, smirking at the two of us. There was no point in moving away from Alexa and trying to salvage the situation, because we had no idea how long she been standing there and I was clearly buried deep inside my aunt and had been playing tonsil-hockey with her.\n\n \"Don't mind me, I love a good show as much as the next girl.\" Jeanie lilted, finally walking into the office and closing the door behind herself. \"Gotta admit though, Alli, you really had me fooled when you seemed all grossed out at my suggestion that you two would look hot fucking.\"\n\n She must have seen the look in my eyes because she put up her hands and smiled. \"Easy, tiger, I'm not gonna blackmail your aunt or anything, I promise. After all, I'm fucking your parents, so I'm not exactly clean here.\"\n\n She stood a few steps away from us and sighed. \"I... well, I'll just come out and say it. I'm jealous.\"\n\n We both stared at her.\n\n \"Look, I'm not gonna plead some poor rich girl case or anything, but I'm not fooling myself either. I got into this university because my parents are stupidly wealthy and contributed a whole goddamn wing or something and I'll get a degree in whatever because of it and I'm never gonna hurt for money, but none of that matters, does it? Because I'll never find anyone to be as madly in love with as you two are with one another.\"\n\n I think I saw tears in the corner of her eyes. She put her dainty fingertips over her lips.\n\n \"I mean, I'm jealous, yeah. But not angry, just envious.\" Jeanie continued. \"What you two have is beautiful. I've never seen anyone so in love, except maybe the profs, y'know? Don't worry, your secret's safe with me. I know you think I'm a ditz and maybe I am, but I'm a good-hearted airhead.\"\n\n She looked at Alexa and sighed. \"I spent all that time teasing you about fucking your nephew, just to be funny and hope you'd think I wasn't a total waste of time. Guess the joke's on me.\"\n\n I sort of expected my kind-hearted aunt to detach from me and give her friend a hug, but instead she held onto me a little more tightly. Whatever Jeanie meant to Alexa, it wasn't a patch on what I meant to her.\n\n \"Just so y'know, I'm not gonna be messing around with your folks anymore,\" our guest said, looking at me now. \"It'd just not feel right, since I've been with Alli. And while I'm sure they enjoyed sharing me, I don't think they'll miss it if we stop fucking. Not a big deal to them.\"\n\n \"How long were you watching, Jeanie?\" Alexa asked, but her voice was not unkind.\n\n Jeanie smiled weakly. \"Long enough to not fool myself into thinking that my words made you want to fuck your nephew,\" she said quietly. \"Long enough to hear you talk about how in love you are. I really hope it works out for you. Because that's not how my parents are and I don't see that in my future. So I really want it to work out for someone.\"\n\n She looked at me again. \"You're a lucky fella. And if she's in love with you, that must mean you're awesome, so she's a lucky girl. I... I don't care how you do it, but... get married, please?\"\n\n Jeanie blew us a kiss, turned and walked quietly out of the room, closing the door behind her. We stared at the door for several seconds before Alexa sighed and pressed her forehead to my chest.\n\n \"What was she even doing here at this ungodly hour?\" I asked. \"During the summer?\"\n\n Alexa shook her head. \"I sort of remember her telling me during a pause in our lesbian sex pretzel that she sometimes came late and wandered the campus, trying to find some purpose in being there. She... when people were around, she felt like a fake, like she didn't belong there.\"\n\n \"Maybe she doesn't.\" I shrugged.\n\n \"Maybe, but that's not our judgement to make, Alex. Mike and Karen seem to believe in her, at least to some degree, and we know at least that's she got some emotional depth to her, even if she's a round-heeled bimbo. I... we need to remember to be kind to her. She wants us married, after all.\"\n\n I sighed heavily. Getting caught had definitely not been in my plan for the evening, but clearly it could have been a lot worse...\n\n***\n\nA few days had passed and we were sitting in one of the offices, going over papers and sorting them into piles that hopefully represented categories. We hadn't been given too many instructions, so Alexa (probably rightly) surmised that what organization we gave the department was a welcome improvement to the no-system they seemed to run on.\n\n Dad had been allowed back to work on a casual basis, as long as he was mostly sitting and did not exert himself. There was the option of a wheelchair, of course, which mom offered to push him around in, but he declined and bought himself a Segue, which he spent the next few weeks on, bombing around and annoying the faculty, who knew better than to complain. Dad was larger than most of the faculty put together, so nothing was said, unless he left skidmarks in the hallways.\n\n \"Lets count our blessings,\" Alexa said as she sorted. \"Some night we're going to look out a window and see your mom and dad silently glide by in the moonlight, naked and fucking their way across the campus on the damn thing.\"\n\n I squeezed my eyes shut and shook my head. \"Thanks for the libidoectomy, I was getting rather horny.\"\n\n She giggled and she resumed her sorting. We were silent for some time before she spoke again, her voice tinged with regret. \"I really wish I knew what to do, Alex. It's so damn unfair that you're my nephew. I wish we could get married, but we can't. Not here. We'd have to move to France or Finland or something. And that would destroy my new family anyway. I feel so... trapped...\"\n\n I nodded. \"I know a few places allow avuncular marriage over in Europe, you're right. But if we're married and in love, there's a risk if we decide to have kids.\"\n\n She nodded. \"I looked it up, could be as high as a thirteen percent chance of passing on congenital defects. Do you know of any in the de Bourne family?\"\n\n I shook my head. \"No history of congenital diseases or cancers or anything. Mom always said one of the reasons she married dad was because of his impeccable good breeding stock.\"\n\n \"None on the Gordon side either,\" she added. \"Same fantastic genetics. So if we did have kids, they might just be advanced and impossibly blond and blue-eyed.\"\n\n \"Oh good, little Aryan children of the damned,\" I laughed. \"Inbred superhumans.\"\n\n She grimaced. \"I've seen the size and your dad's skull, and yours isn't much smaller. I'd be frightened of pushing those kids out...\"\n\n I sighed and shook my head again. \"It's all just whimsy at this point. We can't exactly break apart the family because we happened to fall in love.\"\n\n \"I know...\" she said quietly, trailing off as she looked at the papers in front of her. We continued sorting out papers related to Proto-Indo-European language theory when she just stood up and looked at me.\n\n \"Take me to the maze?\" she asked, holding out her hand. \"I'm feeling like some Dutch kissing.\"\n\n Without even blinking, I stood up and took her hand, leading her out of the office and onto the campus. It was late Saturday night and I knew we'd be alone.\n\n***\n\n I was sitting on the stone bench and Alexa was straddling me, her crystalline blue eyes looking down into mine. Tears glistened on her cheeks, but she wasn't crying. She was sad, yes, because we loved one another so much, but she wouldn't cry. I wiped some tears away with my thumb and she pressed her lips gently against mine, whispering about how much she loved me. My hands rested on her waist and I whispered back, the two of us enjoying the solitude of the hedge maze. Moonlight shone down on us and she looked beautiful as her golden hair caught the silvery rays. I wondered if this was what it was like to be in love with Galadriel or Indis of the Vanyar.\n\n Forehead to forehead, we said nothing for some time, just comforted by each other's presence and feelings. Her fingers caressed the back of my neck and her breasts pressed to my chest. Normally the feel of her body against mine turned me on, but right now, we just wanted solace in one another. Together and desperately in love.\n\n \"I want to marry you,\" she whispered in my ear. \"I don't know if I can love anyone else. It sounds silly to say, since we're so young, but I don't understand how to love anyone else any more. If... if I went back to the other side of the world tomorrow, I could lose myself in sex, but be in love again? Even with Freja? No. I... oh, Alex...\"\n\n \"I know how you feel,\" I murmured back. \"I don't see how my life continues without you, except in an unsatisfying manner. There'd always be a big, nagging hole I couldn't pretend wasn't there.\"\n\n She got off my lap and pulled me to my feet, leading to a patch of soft, emerald grass and laid down. I settled myself gently on top of her and we kissed lovingly for several minutes, my aunt and I. Desperate to feel close, to feel one another's heart, lost in the deep truth of our feelings and comforting one another because of the hopelessness of our predicament.\n\n \"I want to do silly things like marry you here and now, to commit myself to you, as if it were a real and legal thing. But I can't just stay with you always and never marry you legally, can I? We can't do that to our family.\"\n\n I shook my head. \"I wish we could. Why does this have to be so difficult?\"\n\n She sighed and I stood up, pulling her gently to her feet. We walked silently around the center of the maze, her fingers tracing along the statue in the center. Finally, I pulled her to me and leaned back against the hedge wall, holding her tight. She snuggled into and sighed, wrapped in my arms.\n\n There was a giggle and the rustle of movement on the other side of the wall and we froze, eyes wide and not daring to make a sound. What if we were discovered?\n\n \"I can't believe we're doing this!\" whispered a familiar, giddy female voice. \"What if we're found?\"\n\n \"Big deal, people know we're married,\" my father said in his distinctive baritone. \"Maybe I should shout loudly to the night that I'm violating my wife in the campus hedge maze.\"\n\n \"Don't you dare!\" my mom hissed, scandalized but also giggling. \"I have a reputation to maintain!\"\n\n \"The same reputation that gained notoriety when we were caught boning in Convocation Hall four years ago?\" dad teased. There was movement against the other side of the hedge wall and the endless leaves shivered, as did my spine. Mom almost squealed and there was a sound like playful struggling.\n\n \"Be careful, you thunderous oaf,\" she said, trying to sound commanding. \"Your stitches won't- gnnn!- you need to be careful, the doctor said -oooooh, dammit, that's cheating, you bastard...\"\n\n \"My doctor said what?\" dad asked in a seductive tone.\n\n \"How the hell would I know?\" mom said breathily. \"Get that tongue in me...\"\n\n We held perfectly still, unwilling to move a muscle. We felt something, or someone, push into the hedge wall directly on the other side of us. We heard clothes rustling and then my mom moaned wantonly.\n\n \"God,\" she hissed. \"I love your tongue, baby. Right there...\"\n\n Alexa and I looked at one another in dread. Were my parents really getting it on two feet away on the other side of a hedge? Her eyes were wide with concern. I shook my head ever so slightly, warning her to stay absolutely still.\n\n \"Gnnnn, yes...\" mom moaned, clearly enjoying whatever dad was doing to her. \"Oh God, my ass, yes, finger my ass...\"\n\n I squeezed my eyes shut, unable to run away in horror. Alexa placed her forehead against mine and said nothing, obviously feeling trapped as well. Mom's moans became panting and the hedge wall continued to rustle against us. We could have, possibly, attempted to extricate ourselves away from the leaves slowly, to sneak away, but we were both too scared to take a chance. If they heard us and came around the corner...\n\n \"Give me that cock now, big boy,\" mom breathed. \"I need it so bad...\"\n\n We heard my dad unzipping his jeans and then the rustle of them getting shimmied down. Dad sighed as we heard mom begin to give him head. She moaned and started sucking loudly, like something out of a porn movie. Alexa's eyes went wide as she listened and she fanned her face in response.\n\n \"God, you suck better than anyone, baby,\" dad groaned. \"Your mouth is magic.\"\n\n \"Mmmmm, better than my pussy or my ass?\" mom purred, pausing for a moment to tease him.\n\n \"No,\" dad chuckled. \"But every bit as thrilling. Let me fuck you now.\"\n\n \"Take me however you like me, Michael...\" mom said in a sultry voice dripping with lust. \"This is no marathon fuck session, give it to me good and hard and make me cum.\"\n\n We heard them rearrange themselves and then mom groaned as dad got inside her. They whispered and panted together as they fucked. The leaves of the hedge kept rustling, meaning they were pressed to it somehow. We still didn't dare move.\n\n \"Oh, fuck!\" mom gasped, trying not to be loud. \"You feel so good. Yes, right there...\"\n\n \"Hold on, baby girl, daddy's gonna make you scream,\" dad grunted. \"You're so fucking tight, Karen.\"\n\n \"Ah!\" mom squeaked. \"Yes, bite it, my love! Tug-gnnnnn!- tug on it. Ohhhhh, God...\"\n\n \"You're so beautiful,\" dad moaned. \"I love you, baby.\"\n\n \"I love you!\" mom panted. \"Cum in me!\"\n\n They mercifully stopped talking and fucked faster and faster until they were both gasping and then dad kissed mom, stifling her scream as they both came. We could feel their bodies tangling and thrashing through the leaves, reminding us exactly how close they were.\n\n Finally, they stopped moving, breathing heavily as they basked in the afterglow of their lovemaking. We could hear them kissing and mom giggling as dad caressed her. Pretty sure this whole scene would have been hot as hell if it weren't mom and dad.\n\n \"Y'know,\" dad said finally, and I could almost picture him laying next to mom on the grass, tracing the tip of his finger around her nipple as he spoke. It just had that tone to it. \"You're probably still young enough to give Alex a little brother or sister and Alli another nephew or niece.\"",
        "Mom giggled. \"You're sweet. Alex would make a wonderful big brother and Alli'd be the best aunt to ever live. We could talk about it, I suppose. Sure you're up to it?\"\n\n \"Baby, I'll make sure everyone can hear you sloshing when you walk,\" dad replied. \"Think they're still working away?\"\n\n \"Oh, you know Alex, get him going on a project and he won't come up for air,\" mom said. \"I suppose we could go check on them and then all go out for a late bite. I think the Siam Palace is still open.\"\n\n \"Alright, let's dress and get them, they've going been at it for hours now.\"\n\n \"Don't say it like that,\" mom hissed, swatting dad. \"You make it sound like they're having sex on the desk of something.\"\n\n We heard them wandering away, with mom muttering that they'd be forever trying to find their way out of the stupid maze. We waited silently until we were sure they were thoroughly lost in another part of the maze. Alexa looked at me in trepidation.\n\n \"You remember the way out?\" she asked.\n\n I nodded. \"They're heading in exactly the wrong direction for the exit we'd use. If we go now and keep quiet, we'll never run into them.\"\n\n She took my hand and followed me, both of us listening carefully for signs of my parents. I led us through the maze as quickly as I dared. As important as anything was making it back to the office without looking flushed or like we'd just been running.\n\n We stopped dead and jammed ourselves up against a hedgewall at one point, pale with fright as mom and dad walked right by us, hand-in-hand and heading down another wrong path. Once they turned the corner, we continued on our original route. We came into the clearing beyond the maze and broke into a sprint toward the main building.\n\n \"We smell like the hedge,\" Alexa remarked as we ran toward the building. \"I'm not kidding, when we get in the room, we're rubbing old books on ourselves!\"\n\n We dashed into the building and up to the office we'd been using, thankfully running into no one along the way. Alex went up to a shelf full of musty old books and grabbed several that were related to the subject matter of the papers we were organizing. She hastily rubbed her hands and arms on the pages and then did the same to me before sitting down on the opposite side of the desk from me. About three minutes later, my parents came in.\n\n \"Look at you two, so industrious,\" mom quipped as she walked through the door. \"Enjoying your privacy?\"\n\n \"I'm enjoying the honorarium and chance to get ahead,\" I replied practically before looking at them. \"Got lost in the maze?\"\n\n Mom frowned. \"And why do you think we were in the maze?\"\n\n \"Grass stains on the knees of your pants.\" I said, pointing at her jeans. Mom blushed and shut up while Alexa giggled.\n\n \"Well, now that you've trivialized our romantic coitus, how about you two smart-asses join us for Thai food?\" dad asked, grinning. We may have clammed mom up but there was no sense trying to stop dad. We both nodded and exited the office with them, locking it up for the night. We followed in my car while dad led the way to the restaurant.\n\n \"Good catch on the grass stains.\" Alexa mentioned, squeezing my hand.\n\n \"Oh, they're barely noticeable,\" I said, shrugging. \"But her knees were slightly wet and they couldn't really call me on it, since they didn't know we were there. I just wanted them off-balance and instantly focused on something else.\"\n\n She clapped giddily. \"I'm gonna be an auntie. Again, I guess, but this'll be like it's supposed to be. Are you excited to be a big brother?\"\n\n \"I think I'd like that,\" I said, nodding. \"Mind you, I already know what the names'll be if they have another kid.\"\n\n \"Oh, really?\" Alexa mused, looking at me. \"They've always had it planned, hm?\"\n\n \"Yep. If it's another boy, he'll be Connor Elryk Endymion. If it's a girl, she'll be Aurora Indis Veronica.\"\n\n Alexa shook her head and smiled. \"Indis? Like second wife of Finwe, Indis?\"\n\n I laughed. \"They'll both be so pleased you got the reference. You know it's Quenya for 'Bride', right?\"\n\n \"Yes, yes, I'm a Tolkien geek,\" she replied. \"Great names, I'm not the least bit surprised, given what mighty nerds they are.\"\n\n She leaned back against her head-rest and sighed, staring at the ceiling of my car. \"The one dorky nerd family I want to marry into and I can't because I'm already related to it. Talk about a bitch of a spin on the Wheel of Transmigration. Ugh, falling instantly in love with you was such a bad idea, and I had no choice in the matter. I was yours the second our eyes met.\"\n\n \"Yeah, ditto,\" I said grimly, staring ahead at the road. \"And the only people who know are some bimbo at our school and a Danish hooker.\"\n\n Alexa looked at me, her eyebrow raised. \"Freja. A hooker.\"\n\n \"Go ahead and tell me I'm wrong,\" I said, shrugging. \"She makes money by fucking, right?\"\n\n \"It's... not completely uncommon,\" Alexa said somewhat quietly. \"I might have had sex a few times when I was younger for money.\"\n\n \"Don't worry, I'm not knocking it,\" I offered. \"I'm just saying that I had a pretty good hunch how she paid for university.\"\n\n \"University is free in Denmark,\" Alexa pointed out. \"She uses her hooker money for other things.\"\n\n And then I laughed. I love my aunt so damn much.\n\n***\n\nAlexa was kicking my ass at Mortal Kombat. She was doing the stereotypical girl one-button-mash thing and it was working. She'd won several matches in a row before I sighed and put the controller down. Dad was sitting nearby and chuckled as I admitted defeat. \"So what's his punishement, Alli?\"\n\n\"I dunno,\" she quipped, grinning and ruffling my hair. \"Might put him on a dress and take pictures. Throw a tea party with all my stuffies for him. The possibilities are endless.\"\n\n I grunted and ignored the teasing, doing my best to look bent out of shape. Win or lose, I knew lovemaking would be the stakes of our matches, only Alexa got to choose the type since she'd won. She'd doubtless sneak back down to my room after mom and dad had gone to bed and we fuck until we were ready to pass out. Losing at Mortal Kombat really didn't bother me.\n\n We played a couple more rounds where I tried to even the score, but Alexa won out. Dad laughed and wished me well in my career as a drag queen before heading up to join mom in bed. We continued playing a while longer, to make sure they were asleep before she hit the Pause button and turned on the chesterfield to look at me. Her blue eyes were warm with lust.\n\n\"Let's fuck here on the couch, Alex,\" she said quietly. \"I'm feeling daring tonight.\"\n\n I shrugged. \"We've fucked on the couch before. There's no place in this house we haven't fucked.\"\n\n \"Yes, but with Mike and Karen upstairs, there's a certain risk involved and like I said, I'm feeling daring.\" Alexa pointed out. \"We'll put down a towel to cover our tracks, but I want to make love to you here tonight. I won the game, those are my terms.\"\n\n I nodded. I had to at least pretend to be the voice of reason before I acquiesced to her crazy idea. She waited quietly while I retrieved a large towel and laid it out on the chesterfield. I pulled her close to me and we kissed deeply as we began undressing one another. Soon we were naked, bodies pressed together, fitting like pieces of an erotic puzzle. We whispered to each other about how in love we were before Alexa sank to her knees in front of me and took my already swelling cock into her mouth, sucking on me hungrily.\n\n I did my best not to moan as she bobbed back and forth along my shaft, her hand caressing my length as it followed her wet lips. My hands were resting on her head, fingers in her hair, kneading and caressing. I moved my hips back and forth slowly, matching the rhythm of her mouth. It felt so good to have my aunt sucking my cock.\n\n She brought me skillfully to the edge of climax several times before backing off, until my body was trembling with need. I pulled her off my shaft and pushed her down onto the chesterfield, pulling her legs wide to expose her glistening pussy. Without a word, I knelt and buried my face in her slit, my tongue pushing through her netherlips and deep inside her. She squirmed and moaned silently, thrilled by my assertiveness. I teased her the way she had teased and edged me until her body was warm and damp with need. \n\n Without a word I crawled over top of her and she spread her legs wide, looking up at me expectantly. I pushed my cock head through the slick lips of her pussy and we both sighed almost in relief as I slid all the way in. She squeezed herself around me tightly as I pushed in, the resistance thrilling us both. Once I was buried deep inside her, I looked down into her eyes and she reached up and cupped my cheek, whispering 'I love you' before we began to fuck. I started moving in and out slowly and she pushed her hips up against me as I pushed down. The rhythm we had with one another was wonderful, natural and intuitive. As I pulled back, she squeezed with her pussy muscles, making the withdrawal feel every bit as good as the press into her. I marvelled at her control of her body, somehow pushing up without squeezing but doing that while lowering her hips. All I could do was piston my hips at varying speeds or gyrate while inside her. \n\n We kissed feverishly, her hands roving in my hair while I gripped hers. Keeping silent was more effort than fucking her. Alexa strained to keep her panting inaudible, but this had been her challenge, so she must have thought she was up to it. We pumped and slithered against one another, torn between wanting to cum and wanting to keep fucking daringly, just a single floor away from my parents. The risk we were taking was insane. If either of them came down, there'd be no time to recover. \n\n I pushed her deeper onto the plush couch as I leaned more of my weight over her. She shuddered as I sank still deeper inside her, her eyes wide and glazed with lust as she looked up at me. Alexa grabbed my butt cheeks and pulled on them, hard, as if trying to pull my whole body inside her. I grinned evilly and thrust forward out of our rhythm, my deepest penetration yet. \n\n My aunt yelped in sudden pleasure. \n\n \"Alli?\" came a voice from upstairs. \n\n My mother. \n\n Without a word, I had pulled out of her and in a blur of motion gathered up all my clothes and darted silently to the basement door. I could hear mom's footsteps upstairs as she came to investigated and mostly closed the door behind myself, heading downstairs quietly as I could. I hated the notion of leaving Alexa so suddenly to face my mother, but she was a big girl and hopefully would figure it out. I just dared not be anywhere nearby. At all.\n\n I practically leapt the six feet to my bed, diving into the covers as I heard my mother's footsteps upstairs. Finding a towel, I cleaned myself off before spreading out on my stomach and haphazardly throwing a blanket across my middle. I quickly turned off my bedside lamp, knowing that I needed to be feigning sleep if we were to survive this. I turned my head to the side so I could listen, closed my eyes and hoped for the best. \n\n \"Alli, are you alright?\" my mother asked as she headed into the living room.\n\n \"I... I'm sorry, Karen,\" Alexa faltered. \"I... I was...\"\n\n \"Are you naked under that cover?\" I heard mom ask. \n\n There was a rather pregnant pause. \"Yes...\" my aunt admitted. \n\n \"Oh,\" mom said, somewhat awkwardly. \"You were... well...\"\n\n \"Yeah.\" Alexa almost whispered. \"Sorry. I just... I called my friend Freja after Mike and Alex had both left and our conversation got rather hot. And with your room being so close, I didn't want to-\"\n\n Mom giggled. \"That's very considerate of you. We wouldn't have heard you if you hadn't made that noise and God only knows, if Alex is asleep then he wouldn't hear you if you were doing it in the same damn room. Dead people are easier to wake than that boy.\"\n\n I heard Alexa giggled now. \"I probably traumatized him enough with those involuntary photos of Jeanie and I, no point tempting fate.\"\n\n \"Well, for the record, darling, if my husband falls asleep he won't hear you either, and I don't mind what you do in your room, a woman has needs, right? Don't feel like you need to go to extraordinary lengths before enjoying yourself, okay? Hell, use the Jacuzzi jets if you need to, I've cheated on Mike a few times with them.\"\n\n My mom and aunt both laughed before mom sighed. \"So my son left you alone to go sleep, hm? King of Chivalry, that boy.\"\n\n \"To be fair, I told him I was tired and ready to turn in,\" Alexa replied. \"I couldn't exactly tell him I was horny and needed to get off with a Danish lesbian.\"\n\n \"Yes, I can see how that would be best avoided,\" mom mused. \"Well, sorry to have interrupted your play time, I just heard the noise and wanted to make sure you were alright. Call your friend back and finish up if you like.\"\n\n Alexa laughed. \"I think I killed the moment, Karen. I'll finish up with Freja later. I think I'll just read some periodicals to cool off and then actually go to bed. Had my excitement for the evening.\"\n\n \"Alright, Alli, have a good night,\" mom said as I heard her walking out of the living room and through the dining room. \"Remember what I said.\"\n\n \"I will. G'night, Karen.\"\n\n Silence. \n\n After several minutes, I heard feet quietly pad across the dining room floor and the basement door creak open. Alexa crept downstairs and crawled into bed with me. Her heart was still pounding as she embraced me.\n\n \"Okay, that was a little too daring,\" she whispered. \"Forgive me?\"\n\n \"Nothing to forgive,\" I said, cuddling her close. \"I'm just glad you managed to pull that off with mom.\"\n\n She nodded. \"Karen's pretty hip, she knows I have needs. We've discussed it when we're alone. Horniness seems to be a genetic condition of the women in our family.\"\n\n She then pulled aside my tangled blanket and crawled down my body. \"That being said...\"\n\n I couldn't believe it. We'd nearly been caught in the most terrifying position of our lives, twice this week, and she needed to relieve the fright by fucking. I shivered as she took my cock inside her mouth, moaning around it as she bobbed up and down expertly. My objections vanished and I was hard in no time. \n\n \"I wasn't lying, auntie has needs,\" she said breathily as she now squirmed her amazing tits around my cock before crawling back up my body and straddling me. \"I think I'll stay on top this time, to control the rhythm and your misbehaviour...\"\n\n Without another word, she sunk down onto me and we both sighed quietly as I filled her. I reached up and groped her breasts eagerly and she bit her lip to keep from moaning too loudly. She began a grinding motion, moving her hips in circles and keeping my cock buried deep inside herself. Alexa leaned down and pressed her lips to mine, kissing me deeply and passionately. I put my arms around her back and hugged her to me, lost in her lust and love for me. \n\n I felt her lean her hips up and my cock popped out of her while we kissed. I wondered what she was doing but then my cock head pressed against her tight knot and she pressed down, shuddering as she took me inside her ass. She was so unbelievably tight and I stiffened as I tried to control myself.\n\n \"God, I love having you in my ass,\" she murmured through our kiss. \"I love having you inside me everywhere, Alex. I'm yours...\"\n\n \"I'm yours too, Alexa.\" I panted as I hugged her tight and began pushing my hip up and down, sliding in and out of her. Because she was lying down on top of me, I had to push up with my hips to move my cock inside her. She whimpered in pleasure before finally sitting up and settling down on my cock, causing me to sink into the bed and not have to push up so much. \n\n We said nothing for some time as she fucked me with her ass. I could only see the faintest outline of her from light coming down the stairwell, but her lush body felt very real against mine, my hands squeezing and massaging her opulent breasts. It was every bit as thrilling as getting to look at her in a way. \n\n We'd had enough close calls recently and decided not to prolong the act or turn it into a maenadic frenzy of sex for fear of involuntarily making more noises it was best not to explain. We ground and squirmed against one another faster and more heatedly until I pushed my hips up, straining and Alexa bit her knuckle to keep from screaming. Second later, I was pumping my cum inside her ass, which twitched and gripped me tightly. \n\n Alexa collapsed on top of me, panting, her body limp like a rag doll. I was almost deflated beneath her, my hands resting on her back. Her ass was still throbbing around my softening member, milking me dry. After several minutes, she stirred and pressed her lips to mine, whispering her undying devotion to me. I kissed her back, whispering about my need to marry her. \n\n \"Guess I'd better go,\" she said finally. \"Don't want my sister coming to check on me.\"\n\n We both shuddered as she moved and my cock popped out of her ass. She giggled as she wiggled over to my bathroom to freshen up. She came back out after a few minutes, knelt on the bed, took my face in her hands and kissed me lovingly. She then gathered her clothes and headed upstairs, retiring to her room. \n\n I looked at the ceiling for a few minutes before deciding I was no closer to answers about our predicament than I was before. I went to the bathroom and washed myself before heading back to bed, determined to not think about things until the morning. Basking in the glow of our lovemaking was good enough for tonight.\n\n***\n\n I woke to the sound of laughter upstairs, specifically my mom and Alexa. They were clearly sitting at the kitchen island and talking over the coffee I could now smell. \n\n \"I can't believe you woke him up,\" my mom laughed. \"My poor son, sleeping away peacefully, having not noticed your noisy masturbation habits, and you get bored and head downstairs to harass him into keeping you entertained with video games?\"\n\n \"He lost the video game rounds earlier and I got to choose the punishment. It could have been worse, Mike was convinced I was going to make Alex wear a dress and take pictures, like he was a doll to dress up or something. All I did was wake him up and make him play video games until I was bored and tired. At least he likes games.\"\n\n \"Well at least that's true,\" mom agreed. \"Did you at least shower or towel down before bothering him so you didn't fill his brain with your pheromones?\"\n\n \"Was it that bad?\" Alexa laughed.\n\n I could almost hear mom nod. \"We Gordon women seem to ooze them. I got your horny scent from the stairs when I came down to check on you.\"\n\n \"Mom used to talk about that, I thought she was bullshitting, but I guess it's true.\" Alexa mused. \"But no, I didn't, I just got dressed and went down to pester him. He was pretty groggy and out of it for a while, mind. I don't think he would have noticed if I'd been sitting naked in his lap.\"\n\n \"Well at least you don't have to go to those lengths to get him to pay attention to you,\" mom said somewhat dryly. \"Does he wear anything when he sleeps?\"\n\n \"Thankfully he had a coverlet over his midsection when I so blatantly went down to pester him,\" Alexa replied. \"I poked his cheek until he woke up and whined that I wanted to play video games. He mumbled about sleep but I reminded him he lost the best and what I said went. Then I hid in his bathroom until he kindly put clothes on and we played video games until I was sleepy.\"\n\n \"You are such a brat,\" mom exclaimed, laughing. \"That's a brat kid sister move, are you sure you're his aunt and older than him?\"\n\n \"It's still nice to get attention paid to you,\" Alexa pointed out. \"And since I'm his social responsibility until I'm ready to fly on my own, I'm getting the most out of him.\"\n\n \"This family is so weird,\" mom said cheerfully. \"Well, I suppose we should get him up.\"",
        "\"I'll do it.\" Alexa said, moving her stool to stand.\n\n \"Dressed like that?\"\n\n \"Hey, he's seen me naked, this'll just shock him into waking up quickly. I don't know about you, but I'm tired of waiting for him so we can get on with our day.\"\n\n \"Well, it's true he's being tardy,\" mom mused. \"Alright, bringeth my son unto me, sister-mine.\"\n\n \"As you will, Great Lady of the Manor!\"\n\n I continued to pretend being asleep while Alexa turned on the stairwell light and skipped downstairs. She turned on the master light and then was silent as she did something. \n\n \"Alllllllllllllex...\" her voice rang lyrically. \n\n Playing along, I opened my eyes, to see my aunt standing there in very sheer pink panties and a lacy pink bra, which she had pulled over her magnificent breasts to expose to me, a wild grin on her face.\n\n \"JESUS!\" I shouted in an alarm I didn't feel, throwing myself off the bed backwards and crashing into some non-essential furnishings, making a horrible din. Upstairs I could hear my mother whooping with laughter at my perceived shock and discomfiture.\n\n Alexa wiggled her tits from side to side, smirking in amusement at my antics. \n\n \"Put those away!\" I said loudly, utter shock and almost horror in my voice. \"I'm your nephew!\"\n\n Alexa made a show of pouting and lowered her bra before turning on her heel and heading back upstairs, where I could hear my mom still snickering.\n\n \"He's awake...\" she said casually.\n\n***\n\n \"You really bring out the troll in my mother, you know.\" I mentioned as I drove my aunt and I into the downtown core to do some shopping. Near the lakeshore was a huge Asian supermarket my parents liked to frequent to get their more exotic culinary supplies and apparently dad needed thousand year eggs.\"\n\n \"Oh, it was funny and you know it,\" Alexa replied, reaching over and squeezing my hand. \"Besides, this sort of thing throws them off, since in their mind our relationship is somewhat awkward and antagonistic, in a platonic kind of way.\"\n\n \"Mom's right, this family is weird.\" I muttered, not feeling any of the exasperation I was attempting to convey for effect. \"Mom didn't give me a list; did she give you one?\"\n\n \"She texted it to me,\" Alexa answered. \"Nothing too extensive, but it looks like your dad wants to make siu mai and har gow for some reason.\"\n\n \"Sounds like dad, for sure.\" I said. \"Any other errands while we're out?\"\n\n \"I told Karen I needed some personal feminine supplies, so she thinks you're my chauffeur while I pick things up.\"\n\n \"But you don't.\" I posited.\n\n\"Nope,\" my aunt replied. \"But it gives us time to go somewhere and fuck ourselves stupid before heading home to eat green and black eggs with your dad.\"\n\n \"Could be worse, could be hakarl.\" I sighed. Thousand year eggs weren't anywhere near as bad as they look or people frighten themselves into thinking they must be. More than anything, they taste sort of like a rich blue cheese. You just don't eat a lot of them. And God only knows I've eaten worse things, thanks to dad's crusade to try every cuisine from around the world.\n\n \"We'll need to head back to the faculty tomorrow, finish up that clusterfuck of papers on Ural-Altaic languages.\" Alexa mentioned. \"How can such a prestigious and internationally recognized department of Linguistics have such dismal organization skills?\"\n\n \"Good luck more than good management, clearly.\" I said. \"You take the Turkic stack while I tackle Finno-Ugaritic?\"\n\n \"Ugh, sure, leave me the super-messy one,\" she grimaced. \"Is this because I flashed my tits at you this morning for your mom's amusement?\"\n\n \"Wanna switch?\" I offered.\n\n \"Hell no, I fucking hate Finnish and Estonian.\" Alexa spat. \n\n \"There's no pleasing you, is there?\" I laughed. \"You're such a Gordon woman.\"\n\n\"Suksi vittuun, nephew.\" Alexa jibed. \"Preferably mine.\"\n\nIt felt good to be out with my aunt, just natural and right. We drove to the supermarket and began shopping. I would I could have held Alexa's hand, like the lovers we were, but my parents and I had been here often enough that the attendants recognized us. Even so, Alexa held my arm as I pushed the cart around. That could be construed as familial and Alexa did have European mannerisms. She squeezed my bicep as we walked and playfully bumped into me when she could. \n\nMy aunt was wearing a pretty sundress that accented her perfect figure, a cornflower blue in colour with blossom patterns on it. The skirt part was quite short and she teased me by bending into a freezer to get some frozen goods we needed, exposing her but and the tiny thong she was wearing. I coughed as someone walked nearby, staring and shook my head upon her return, sighing at her shenanigans. \n\n\"Chilly freezers,\" she whispered, subtly pulling the front of her dress forward to allow me to see down her dress, where her pink nipples were pointy and hard. \"The nippleometer says it's glass-cutting cold in those things.\"\n\n\"You're killing me, Smalls.\" I sighed. \"You do know I can't just rape you in the middle of a Chinese grocery store, right? There are laws and things.\"\n\n\"True, but knowing you want to is enough.\" Alexa replied simply, releasing her top and letting conceal her goodies once again. \n\n\"No argument there.\" I admitted. \"Let's finish up so I can take you somewhere private and rape you.\"\n\nThere was a certain note of fleetness in her pace after that.\n\n***\n\nWe'd returned to our little glade where we first made love. The trees overhead allowed golden beams of sun into our enchanted kingdom and one such beam was falling on Alexa's beautiful hair as I fucked her, bending her over the large rock that anchored the glade. She gasped and moaned as I pushed and ground into her, knowing that she didn't mind her skin rasping against the coarse stone, she considered the scratches marks of love or honour. \n\n\"Yes, Alex...\" she panted, squeezing as she pushed her ass back against me. \"Gnnnn, fuck me until I scream, my love...\"\n\nI didn't hold back as I thumped my hips against her, her tits pressed to the stone while she squirmed eagerly. I pulled on her hair and she almost growled as her neck craned back. Her sapphire eyes flashed at me, shining with lust. I could tell she was close, her pussy throbbing around my cock faster and tighter than ever. \n\n\"Gonna cum?\" I panted as I pushed farther inside her. \n\n\"Yes!\" she hissed. \n\n\"Want my cum In your pussy?\"\n\n\"Gnnnnn, Alex!\" she whined. \"Don't fucking tease me, please! Cum in me before I fucking die!\"\n\nI pushed with all my might, crushing her to the stone and she keened as she tried not to scream. I felt her pussy clench around me and a strangled cry of pleasure was torn from her throat. I groaned and shuddered as I felt my cum pumping deep inside her. Alexa writhed and churned against me, almost like she was having a seizure. After a final strain and incoherent sound, she collapsed against the rock, panting heavily, body trembling. \n\nI laid gently over my aunt, caressing her as we basked in the afterglow of our shared climax. I couldn't believe how perfect these moments felt. Why did this have to be so wrong?\n\nSlowly, with deep breaths, Alexa reached out a trembling hand for her phone, while was sitting in its stand on a nearby rock, pointed at us. She brought the screen to her face and smiled at it. \n\n\"So?\" she said wearily. \"How was that, darling?\"\n\nOn the screen, her beloved friend Freja smiled. \"Everything with you is wonderful, Alli. Seeing you fuck your nephew is so hot, especially because I know you are so in love. And your secret little area is so beautiful.\"\n\n\"Thanks, we like it,\" my aunt breathed, stretching her spine to press back against me and squirm her lovely ass. \"Our perverted little sanctum sanctorum.\"\n\n\"I hope to see it one day,\" Freja remarked, massaging her wet pussy, having just cum with us. I found it quite a turn-on to have her for an audience, actually. \"If you don't mind having anyone else see it.\"\n\n\"You're an exception I'd willingly make, if Alex was okay with it,\" Alexa cooed, finally standing and letting my softening cock fall out of her with a wet 'pop'. \"As for you visiting, that would be both wonderful and convenient, to be honest. Karen and Mike know about you, and about you and I, it might continue to throw them off the trail for a while about Alex and I.\"\n\nFreja giggled. \"Is that all I am to you, my love? A tawdry sexual decoy?\"\n\n\"I couldn't ask for a better one,\" my aunt said sweetly, snuggling back against me and letting me put my arms around her in a close embrace. My hands cupped her breasts and she sighed in contentment. \"Can you see us married, Freja?\"\n\nFreja grinned. \"Yndling, if it isn't me that you marry, then I think you couldn't do better than your nephew. You make a wonderful couple and your inbred children would be glorious.\"\n\nWe both laughed. Alexa promised to discuss a possible visit for Freja with her later, she kissed her phone screen and ended the call. She looked around in amusement at our surroundings. \"I swear, it looks like we're a million kilometers from anywhere and I still get 4G. God bless the New World.\"\n\n\"He did when he brought you to it.\" I said lovingly, kissing her ear and making her shiver. \n\n\"Mmmmm, you've had enough Dutch kisses, don't try so hard, you greedy thing,\" she purred, massaging my groin with her ass. 'This is all your fault, you know, making a poor, innocent girl from Europe fall in love with you against her will.\"\n\nI laughed and bit the juncture of her shoulder and neck, causing her to gasp and shudder. \"Riiight, poor innocent succubus who seduced her nephew and made him fall hopelessly in love with her absolute perfection. A tragic tale of woe even Sophocles would be awed by.\"\n\nShe turned into me, her body pressed to mine as she hugged me, looking up into my eyes, hers shining with the absolute love she felt for me. \"It's true. The minute I laid eyes on you, I hoped against all sense we would find one another. And even though I didn't actively try to bring us together or seduce you, I didn't do anything to stop what was happening. I felt... bewildered, helpless against it. It was so exhilarating to be swept along by that tidal wave.\"\n\nI pulled her to me and kissed her deeply. Alexa melted into my kiss, her body molding to mine. It was perfection and completeness that I felt to have her against me and I couldn't imagine living any other way now. I just wished there was a plausible answer. \n\nShe seemed to be reading my mind. \"What... what if I got pregnant?\"\n\nI looked down at her, eyebrow raised. \"We'd be together in Hell, I imagine, watching my parents raise our child after they killed us dead.\"\n\nShe sighed, pressing her forehead to my chest. \"I know, I know, just trying to think of every possible solution, no matter how crazy. Every single one, though, leads to the destruction of my family. Nothing about this is fair for anybody. It would cost Mike and Karen their credibility and careers if their son was in a relationship with his aunt and even if we left and moved to France or somewhere, that'd still be true. The stigma would ruin them.\"\n\nI laid down on the emerald grass with her and we forgot our troubles for a time as we held one another close and kissed, murmuring to one another about how in love we were. Eventually she slid down between my legs and massaged my cock with her breasts before taking it into her mouth, sucking me to hardness. She then lay on her stomach and I rolled on top of her while she parted her legs. We moaned as I slid deep inside her. As spirited and assertive a girl as Alexa seemed to be, she loved and even craved feeling my body covering her, protecting her and dominating her. I was happy to oblige. \n\nI pumped up and down on her for some time, causing her to groan in pleasure before I smiled evilly and knelt up- before she had a chance to recover from her languid state, I pulled her ass cheeks apart and pushed my cock head through her puckered rose. She gasped and went rigid for a moment as I pushed steadily inside her. \n\n\"Gnnnnn, sneaky nephew...\" she wheezed as I filled her, finally clamping her muscles around me once I was fully in her ass. \"You know I love your cock in my ass.\"\n\nShe pushed herself up to her hands and knees, but I then reached forward and took hold of her opulent breasts, pulling her up into a sitting position on my lap, impaled on my throbbing member. She groaned loudly and began to move up and down while her hands joined mine in squeezing and molesting her breasts. She turned her head to the size and we kissed hungrily, our problems a thousand light years away.\n\nAlexa hissed as strained, squirming against me urgently as she ass clenched around my cock and came, sending me over the edge. I crushed her body to me as I spurted inside her, biting her shoulder. We shook and writhed against one another until the orgasm had faded and collapsed onto our sides wearily, with me still inside her. I don't know how long we laid there, but the sun had moved significantly west by the time we stirred. She nudged forward until my cock was out of her ass and then turned around to snuggle into me, looking deep into my eyes and holding my hand against her heart. \n\n\"I love you so much,\" she whispered, her voice deep with emotion and undeniable truth. \"I'm yours in every sense of the concept, Alex. It was inevitable.\"\n\nI looked back into her sapphire eyes and nodded. \"Let's come back here at night and marry one another. I know it's not official or anything and it only makes our problem worse, in a sense, but I just don't care, Alexa. I want to hear myself marry you and I want to hear you marry me. It's stupid but it's all that matters to me right now.\"\n\nTears glistened at the corner of her eyes and she put her fingers over her mouth and she nodded. \"Yes,\" she said quietly. \"You name the time and I'll be there.\" \n\n***\n\nShopping with mom and dad was always entertaining, especially now that Alexa was along to add to the chaos. Mom was wearing one of her flouncy sundresses that made it obvious what a gorgeous cougar she was and hanging on dad's arm, making sure every guy we passed on the street was jealous. Alexa was a tight crop-top that showed off her midriff and a sports bra beneath, probably at my mother's insistence, so that male heads everywhere didn't explode. She was wearing daisy dukes that hugged every curve of her luscious hips and ass and her long, perfect legs were capped with sandals that had strap heels. Her hair was in a long, single braid down her back. \n\nI was wearing cargo shorts and a tank top while dad just wore jeans and a t-shirt advertising Black Sabbath. The combined IQ of our little tribe was well over 700, but we'd certainly not chosen to not advertise this point today.\n\nAfter some browsing for a new laptop for dad, we sat down in a small artisan caf\u00e9 for coffee and a treat. To mom's bemusement, they didn't take debit or credit cards and she needed to scamper across the street for actual cash. No bank machine was in the vicinity so she ended up buying something from a drug store to use their 'cash back' function. \n\nShe returned with two Ring Pops. Remember those things? The goofy little plastic rings for kids that had the huge 'gems' made of variously-coloured sugar fixed to it? Yep, two of those, which she tossed to Alexa and I.\n\n\"Don't say I never give you anything,\" she declared as we stared at her gift before she headed up to the counter to pay. They'd already given us our coffee, especially since mom had agreed to leave dad in the shop as collateral in case she didn't return. The barista behind the counter seemed rather crestfallen when mom returned. \"Honestly, where's a bank machine when you need one?\"\n\nShe turned to look at dad, sitting next to her at our table and they began discussing dinner plans while we stared at our Ring Pops and then unwrapped them. Alexa's was some ungodly red colour while mine was a hideous cerulean shade. \n\n\"We've done a lot of Thai and Moroccan recently, along with Italian,\" mom mused, sipping her coffee and still talking to dad. \"Maybe we should switch it up?\"\n\nDad nodded. \"There's that new Ethiopian place on Baldwin Street, that seems promising.\"\n\n\"Oh, there's a good idea,\" mom agreed, nodding. \"There's also the Afghani place around the corner, so we have some options. What do you two thi-\"\n\nMom had turned to ask us our opinion about what sort of food we wanted but stopped dead, staring. Alexa had her ring on her pinkie finger and was holding it up to my mouth. I was sucking on the sugary offering eagerly until mom saw us. After a pregnant pause, Alexa popped her ring out of my mouth, put her hands in her lap and looked at the ceiling innocently. \n\nMom blinked for a moment. Dad said nothing, still looking at his spouse. Slowly she turned back to look at him. \"Well, let's discuss dinner for you and I, since plainly pablum is in order for these two,\" she sighed. \"In any event, I personally like the Ethiopian option, I'm really feeling like-\"\n\nShe paused as she noticed dad trying not to smirk and her head snapped around to look at us. This time Alexa had my ring in her mouth. It didn't show (I hoped) but I could feel her swirling her tongue around the candy. She stopped as she noticed mom staring at her and slowly pulled her mouth off the ring and wiped at the corner of her mouth with a finger. \n\n\"Low blood sugar?\" she offered. \n\nMom pinched her eyes for a moment and drew a deep breath. \"Honey, are you absolutely certain we can survive a nine-hour road trip with Sid and Nancy here?\"\n\nI tilted my head. \"Road trip?\"\n\n\"Oh, right,\" dad said, snapping his fingers as if he'd forgotten something. \"Our friend Lil Duchesney, remember her? She's getting married in Gatineau and invited us to the wedding. We thought we'd make a road trip of it.\"\n\n\"Cool,\" I replied. \"When is it?\" \n\n\"Not until the last week of August, so we've got a few days yet. But we thought we'd make it a road trip, rather than fly out and feel rushed.\"\n\n\"And since Alli is now part of our merry little band, she can go as your plus one,\" mom added. \"Saves us having to drag along some dimwit girl you'd doubtless ask along at the last moment.\"\n\n\"My aunt,\" I said flatly. \"As my date to a wedding.\"\n\n\"It's pretty much a given on Lil's end, they've heard all about my sister and are eager to meet her. I told her she'd accompany you for convenience.\"\n\n\"Your son's a boy,\" Alexa chimed in. \"I like girls.\"\n\n\"Suck it up, Buttercup,\" mom replied plainly. \"I'm sure you'll survive the trauma.\"\n\nAlexa looked at me for a moment and stuck out her tongue, as if she was sneering at me. \n\n\"And keep your tongue in your mouth, Alli,\" mom sighed. \"You look like you blew a Smurf.\"\n\n***\n\nAlexa was helping me unload and fold all the laundry in the laundry room while my parents were watching TV. She was neatly folding everything into four separate stacks while I sorted. She kept smirking and finding time to flash her tits at me or turn and bend over, showing me her ass in those wonderful shorts she was wearing. \n\n\"D'you think I'm hoping against hope that Karen giving us those rings was secretly a sign that she wants us together?\"\n\nI nodded. \"Afraid so. She buys ring pops every time she needs cash or to buy a small item. They've accounted for most of my dad's sugar intake over the years. Much as I'd like for it to be true, I'm afraid that this is old hat.\"\n\n\"Poo,\" she muttered, setting down some of her own thong panties. \"Got my hopes up and everything.\"\n\n\"Well, on the plus side, we now have rings we can wear when we marry one another in the glade.\" I pointed out. \"And even if they're ring pops, I'm happy to have them.\"\n\nShe smiled warmly and hugged me close, her lips close to my ear. \n\n\"I am too,\" she whispered, moving her body subtly against mine. \"You'll put the ring on my finger, take me for your wife and then make me yours forever. I can't wait.\"",
        "\"Neither can I.\" I murmured back, reaching down and cupping her ass cheeks, causing her to moan and squirm in my grip. Her crotch pressed against mine and we began kisses hungrily, acutely aware of the fact that my parents were not far away, but desperate to ravage one another. Tongues slithered and tangled while hands groped and fondled. \n\nMy dad's solid footsteps not far away, approaching and causing us to hastily pull apart, returning to our respective roles in the chore. \"Having fun yet?\" he asked as he loomed in the doorway.\n\n\"Yeah, great, dad, nothing I love more than handling my mom and lesbian aunt's panties.\" I replied tersely, turning to give him a deadpan look while holding up some women's underwear. \"My life's pretty darn complete.\"\n\nDad chuckled at my reticence about the situation and moved on, clearly on a mission to do something else. We didn't risk making out again, although we moved close enough to touch one another or hold hands for a brief moment. \n\nWe both were feeling the giddy excitement of getting married. It was silly, since we were doing no such thing legally, but the heart-wrenching thrill and fulfillment of hearing one another say those words was all we could think about. We knew it would make things even more difficult than they already were, but we didn't care. We needed this.\n\n\"I've... been considering having Freja on the phone as a witness, which makes it feel more real to me somehow, but I also just want you to myself that night, you know?\"\n\nI smiled and nodded. \"Considering our other potential witness is Jeanie, I think we should probably just keep it between the two of us. Why don't we record it and then you can send Freja a copy?\"\n\n\"Oh, you practical male, that makes perfect sense,\" she cooed, squeezing my hand. \"This is why we women keep you around, you know.\"\n\n\"Good, I'd hate to think it was only for tawdry sex.\" I replied, grinning. We finished the laundry and deposited the stacks in their assigned rooms. We met back down in the living room, where mom and dad were watching a Kurosawa movie. Alexa flopped into a chair opposite me while I was stretched out on the loveseat. \n\n\"We could knock out the walls to push the chairs back if you two need to sit farther apart,\" mom said, looking back and forth between us with a wry expression. \"Does one of you have cooties or some such thing?\"\n\n\"What, a guy can't spread out and relax?\" I asked somewhat defensively. \"She's my aunt, not a therapy animal.\"\n\n\"And he's kinda lumpy for a girl,\" Alexa added. \"Weird angles and bulgy lumps. How you can stand resting on Professor Hulk over there is beyond me. Doesn't he ever give you a black eye by flexing on accident?\"\n\nMom snickered while dad tried to look offended. Mom happened to be sitting on his arm at the time and he flexed his bicep suddenly, causing her to yelp and spring off his lap in shock. Alexa and I both laughed as she looked at him, trying to not hold her butt. \n\n\"Don't encourage them, man,\" she hissed, trying not to giggle. \"Even across the room for one another they're a better tag-team than we are, mostly because you keep switching sides at random moments!\"\n\nMom sat down again, after moving dad's massive arm and putting it around her shoulder. She sighed wearily as his hand came to rest on her boob. We resumed watching the movie and when it was over, Alexa yawned and announced her intention to go chat with Freja for a few before turning in. She gave mom a hug and then ruffled my hair as she swept by me on her way out of the room. \n\nMom retired shortly thereafter, poking dad's nose and making him promise to not keep her waiting long. She kissed me on the top of the head and left. Dad and I watched some goofy kayfabe wrestling from the 80's before he got ready to turn in. \n\n\"Back to the university tomorrow?\" he asked. \"The department is ecstatic with what you and Allie have done for them so far.\"\n\n\"That's unreal to me,\" I admitted, shaking my head. \"It doesn't seem like that much, it's just basic unit organization. Language groups, languages, dialects and sub-dialects. We're kinda amazed it wasn't at least this organized to begin with. It's so simple.\"\n\n\"Geniuses are rarely tidy, Alex, and those are some of the most brilliant linguistic minds in the field today,\" dad replied, cricking his neck. \"They're so happy with what you two have done, they'll start offering you accelerated private lessons and have you in PHD's before you're twenty-one if they have their way.\"\n\n\"Wacky thought,\" I laughed. \"Well, whatever makes them happy.\"\n\n\"You actually okay with taking Alli to this wedding?\" he asked. \"You know it's okay to say no.\"\n\nI shrugged. \"Dad, it saves me having to look around for someone I could tolerate for the trip. And if everyone knows she is my aunt, there's no expectations about why we're not more huggy and lovey and shit, right? Maybe there'll be a cute girl or two at the wedding I can score with.\"\n\n\"As long as Alli isn't competing for their attentions too, that could get awkward,\" dad laughed. \"Sleep well, I'm gonna go get my gin-gan goolied.\"\n\nI shook my head. Dad and his weird expressions. I shut down the TV and turned off all the lights on the main floor before heading downstairs. I opened my laptop and activated the chat program, not at all surprised to see my lovely aunt waiting for me, completely naked on her bed, smiling seductively and using two fingers to spread her pussylips wide while the other hand caressed one of her breasts. \n\n\"I refuse to believe that wrestling was preferable to this...\" she said in a quiet, sultry voice. \"I've been getting so wet waiting for you.\"\n\nI stripped out of my clothes quickly, letting her see my rock-hard cock at full attention for her. She squirmed at the sight of me, massaging her wet netherlips. I stroked my shaft and she fingered herself while we watched one another, wishing we could be together but knowing this would have to do.\n\n\"Let's go tomorrow night,\" I suggested. \"I want to marry you tomorrow night, after we're done at the faculty.\"\n\n\"Yes, Alex,\" she said in barely a whisper. \"I want to become your wife tomorrow and you my husband. Marry me, please.\"\n\nWe teased and played until we both came hard, leaving us trembling and limp on our respective beds. Alexa sighed finally and told onto her side, caressing one of her nipples languidly as she smiled at me, eyes shining with love. We agreed to not fuck at the university but to keep ourselves pent up until night, when we'd make love as husband and wife.\n\nIt was all I could think about as I passed into the realm of sleep. \n\n***\n\nWe walked hand-in-hand through the moonlit glade, Alexa having changed into a simple dress of pure white that reflected old Luna's silvery beams. I was wearing my linen pants and a Moroccan shirt with a simple pattern on it. We set up our phones on two rocks and began recording before taking off our shoes and stepping into the crystalline water. I held Alexa's hands between our chests as I looked down into her sapphire blue eyes. My heart was pounding as I thought about what I had promised myself I'd say. \n\n\"Pourquoi sous tes cheveux me cacher ton visage? Laisse mes doigts jaloux \u00e9carter ce nuage : Rougis-tu d'\u00eatre belle, \u00f4 charme de mes yeux? L'aurore, ainsi que toi, de ses roses s'ombrage. Pudeur! honte c\u00e9leste! instinct myst\u00e9rieux, Ce qui brille le plus se voile davantage ; Comme si la beaut\u00e9, cette divine image, N'\u00e9tait faite que pour les cieux! Tes yeux sont deux sources vives O\u00f9 vient se peindre un ciel pur, Quand les rameaux de leurs rives Leur d\u00e9couvrent son azur. Dans ce miroir retrac\u00e9es, Chacune de tes pens\u00e9es Jette en passant son \u00e9clair, Comme on voit sur l'eau limpide Flotter l'image rapide Des cygnes qui fendent l'air! Ton front, que ton voile ombrage Et d\u00e9couvre tour \u00e0 tour, Est une nuit sans nuage Pr\u00eate \u00e0 recevoir le jour ; Ta bouche, qui va sourire, Est l'onde qui se retire Au souffle errant du z\u00e9phyr, Et, sur ces bords qu'elle quitte, Laisse au regard qu'elle invite, Compter les perles d'Ophyr! Ton cou, pench\u00e9 sur l'\u00e9paule, Tombe sous son doux fardeau, Comme les branches du saule Sous le poids d'un passereau ; Ton sein, que l'oeil voit \u00e0 peine Soulevant \u00e0 chaque haleine Le poids l\u00e9ger de ton coeur, Est comme deux tourterelles Qui font palpiter leurs ailes Dans la main de l'oiseleur. Tes deux mains sont deux corbeilles Qui laissent passer le jour ; Tes doigts de roses vermeilles En couronnent le contour. Sur le gazon qui l'embrasse Ton pied se pose, et la gr\u00e2ce, Comme un divin instrument, Aux sons \u00e9gaux d'une lyre Semble accorder et conduire Ton plus l\u00e9ger mouvement.\"\n\nAlexa's eyes shone as she listened to my recitation of Lamartine, who she had previously told me was one of her favourite chanseurs. I coughed somewhat apologetically and smiled.\n\n\"I had to get some French in there for you somehow. But you know I love you. I... have no choice, Alexa. If there is indeed such a thing as being 'fated', this is it. And I wouldn't resist it if it was true.\"\n\nI slipped the blue ring-pop onto her finger, still looking into her eyes. \"I wed thee now. I devote my heart and soul to you, Alexa. And you are forever mine, come what may.\"\n\nHer eyes were shining with tears as I spoke the words she was so desperate to hear. She nodded when I finished and drew a deep breath. \n\n\"Alex, I don't speak Sumerian, you're better at the ancient languages than I am. But this is the world's oldest known love poem, from Sumer, because I feel our souls have been bonded as one since before recorded history...\"\n\n\"Bridegroom, dear to my heart, Goodly is your beauty, honeysweet, Lion, dear to my heart, Goodly is your beauty, honeysweet. \n\nBridegroom, let me caress you, My precious caress is more savory than honey, In the bedchamber, honey-filled, Let me enjoy your goodly beauty, Lion, let me caress you. \n\nMy precious caress is more savory than honey. Bridegroom, you have taken your pleasure of me, Tell my mother, she will give you delicacies, My father, he will give you gifts. \n\nYou, because you love me, Give me pray of your caresses, My lord god, my lord protector, My Shu-Sin, who gladdens Enlil's heart, Give me pray of your caresses.\"\n\nShe looked into my eyes as she slipped my ring-pop onto my finger, quoting the play Much Ado About Nothing.\n\n\"As you are mine, so now am I yours.\"\n\nI pulled her close and kissed her deeply, as her husband. It felt so right and any complications were banished from my mind. There was only Alexa, only this moment of universal perfection with her. Short of a comet hitting the city, nothing could intrude upon it. \n\nI led her onto the shore and we looked into one another's eyes as we pulled the clothes from each other's bodies. Her skin shone in the moonlight as I laid her down on the emerald grass gently, her golden hair arrayed in a corona or halo around her angelic face. I settled over her and she spread her legs to accommodate me. She smiled lovingly as she looked up at me, her hands resting on her breasts. \n\n\"May I?\" I asked quietly and she nodded. I felt my cockhead press against her pliant and wet pussylips, sliding it up and down for a moment before kissing her lovingly, her hands on my shoulders. \n\n\"With my body,\" I whispered to her. \"I thee worship...\"\n\nI pushed inside her and we both sighed in relief, joined now as husband and wife, bound forever heart, soul and body. With the moon shining down on us, we made love in this sacred cathedral of nature, the babbling brook and the wind through the trees a perfect song to accompany our union. Alexa sighed, panted and whispered in my ear as I pushed back and forth inside her. I kissed her hungrily, devoted to her transcendent pleasure and happiness. I could feel her legs wrap around my waist as we rocked and squirmed against one another. \n\n\"Alex!\" she hissed as she strained against me, pushing up with her hips...\n\nWe groaned in mutual pleasure as we came, with me pumping my essence deep inside her. We kissed feverishly, lost in rapture as we consummated our bond. No matter how many times we'd made love before, this, for whatever reason, was the most intimate and intense moment yet. \n\nIt didn't matter that we weren't legally married. Between us there was an understanding and troth that needed no words or understanding. It simply was and there was no denying it. Not for us. It was maybe the one thing in our topsy-turvy world that finally made any sense. \n\nI made love to my bride twice more before we admitted that we needed to get home. It was getting late and the excuse of working at the faculty would only hold for so long. Reluctantly, we disentangled and cleaned ourselves off before dressing in our clothes from earlier that day and returned to my car. We said little on the ride back, listening to Sainte-Saens and then Bach. \n\nI pulled into the driveway and we went inside, somewhat confused that the place was dark with no signs of habitation. Alexa found a small note on the table in my mother's flowing cursive.\n\n\"Dear Sid and Nancy,\n\nKegger for the Physics Department. Unlike you Linguistics nerks, scientists know how to party. Will be back at some point tomorrow after the inevitable hangover wears off. \n\nAlli, make sure he pays attention to you at least once. Tattle if he doesn't.\n\nBig Sister and Professor Hulk\"\n\nAlexa was already undressing as she read the note, clearly inspired to continue our wedding night since the folks were absent. She tossed the missive aside and crushed her naked body to mine, insisting I take her upstairs and ravish her until dawn. \n\nI was the happiest man alive as I carried her over that threshold. \n\n***\n\nAuthor's Notes: I work for the movie industry here in Toronto and it's been insanely busy over the Spring and Summer. So while I love writing these stories, no, I'm not apologizing for the horrendous delays, because I don't make money doing this. If people pay me to write erotica, I'll happily crank out a chapter a day, guaranteed. \n\nYes, yes, Alex and Alexa had a private wedding between the two of them. This is not the end of the story, don't lose your shit. Plenty of twists to come. \n\nDecided I liked Jeanie as a sympathetic character, even if she's a space cadet. She'll be around, get used to the idea. Karen continues to be the straight man of the comedy troupe, even if she has her own wacky moments. I'm thinking that her sister being back in her life has had a positive effect on her and this'll hopefully shut up the Karen haters out there. Mind you, this was the plan for her all along, it's not like I had to change my outline for the character in response to people's vitriol. Karen is a totally fictional character; she really doesn't give a crap what you think about her. She told me so. True story. \n\nI've worked hard on making Alexa somewhat more pro-active rather than reactive to everything around her. Hopefully it's working. \n\nMore to come, but now I need to finish the next chapter of Sapphic Serenity and after that My Naughty Neighbour, both of which have been in big demand. The Great Khan and Twin Cities Tryst are also long overdue for new chapters, so I've got my work cut out for me, on top of what my actual job throws at me. \n\nFall approacheth, I hope the season finds you all well. \n\nKeep your stick on the ice!\n\nManagement "
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "nephew",
        "aunt",
        "romance",
        "secret",
        "funny"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/alex-and-alexa-ch-10"
}