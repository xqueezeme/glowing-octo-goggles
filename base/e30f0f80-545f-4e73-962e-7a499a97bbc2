{
    "title": "Mentor",
    "pages": [
        "Chapter 1\n\nAbout fifteen years ago\n\n\"Dad? Can you read my story?\" called Kelly, Bill's daughter.\n\n\"When's it due?\" When he received no response, he repeated the question, much louder..\n\n\"Ah, ahem, it's not. It's like a story, you know, like fiction? I wanna' see what you think.\"\n\nSince Bill was a technical writer, he was used to Kelly, a high school freshman, asking him to review her papers, but his focus was primarily on spelling, grammar, and readability rather than content. However, he'd written a few fiction stories over the years and submitted some of them to anthology magazines. Two had made it through the gauntlet and been published, so he called out, \"Okay, on one condition: I'll read it if you'll watch your 'likes.' Remember what I've told you about that?\" \n\nShe gave a plaintive \"Sorry!\" from the other room. \n\nHe considered chewing her out about yelling out her requests again, but figured one complaint would have to do since she'd conveniently forget everything if he did both at once. \"Okay, leave it on my desk.\"\n\n\"But I don't have a hard copy, Dad,\" she said, suddenly standing in the door to his office. \"It's like\u2014oops! Sorry!\u2014online. I'll leave it up on your computer, okay?\"\n\nSmiling at the thought of excising her habit before it got too bad, he agreed. She brought it up on his screen and he read it that evening. It was actually pretty good. Since she wasn't getting many views and didn't have any reviews, he joined the website to be able to comment on it, giving it good but realistic marks. He even made a minor suggestion for an improvement. He wrote down a few more that he handed her in person at breakfast the next morning.\n\n\"Thanks, Daddy! Love you! Bye!\" she said, kissing his cheek before she grabbed a muffin and ran out the door. \"Bye, Mom! I'm late!\"\n\nHe and Crystal, his wife of 23 years, looked at each other and called out \"Bye\" to the closed door before chuckling. \n\n\"As much as I wanted another child at one time, I'm almost glad she was our first and last,\" said Crys. \"I honestly don't know if I could have handled another one.\"\n\n\"Hurry-cane Kelly,\" he agreed. \"Always rushing around and hurrying off somewhere. She didn't say anything to me so I'm assuming you know where she's going this time?\"\n\n\"The cheerleaders are doing a car wash at the chicken place next to the school. She's riding with Amber this morning and we're picking them up this afternoon.\"\n\nBill walked into the dining room and looked out the front window to see Amber's mom, from a few doors down the street, already stopped in front of their driveway. Kelly ran and hopped in the car. As the car disappeared down the street, he glanced up at the cloudless sky. \"Going to be a hot, sunny one today. Hope she took sunscreen.\"\n\nCrystal finished the last of her coffee as he reentered the kitchen. \"I told her, so I hope she listened.\"\n\nChuckling, he nodded as he put their empty cups in the dishwasher. \"You know, I notice we say that a lot about her. About a lot of things,\" he added as he moved behind Crys, \"though if memory serves, I once knew someone a lot like her about that age who eventually turned out okay.\"\n\nShe looked up over her shoulder at him. \"Okay? Just okay? This wouldn't be anyone I know, I hope.\" \n\n\"Umm, I think you might.\" He started massaging Crys's shoulders, leading her to take a deep breath and close her eyes as he worked her muscles. \"In fact, she's pretty much perfect most of the time.\" \n\nCrys exhaled, giving a little smile as she leaned her head back against him, becoming more relaxed by the moment. His fingers moved lower on her chest as she did, slipping below her collar bone and working the upper part of her pecs and then a bit lower still.\n\n\"Bi-ill...\" she said, stretching his name out by way of warning.\n\n\"Yes, perfect most of the time, except she has a tendency to say 'no' too much at the most inopportune moments.\" He slid down to her breasts and cupped them from above as he hoped his trap would work.\n\n\"You!\" she laughed, knowing if she made him stop she'd be proving his point. \n\nBill kissed her cheek and she turned up so their lips could connect as he massaged her. \n\nHer tongue playing with his and an insistent moan told him that she wouldn't be saying no this time. He massaged more firmly and then slid his arm down and scooped her up. They lost their kiss but Bill continued planting little kisses on her as he carried her over to the counter and set her down on it.\n\n\"You're not!\"\n\n\"Uh huh.\" He moved in front of her and raised her legs, spreading them. Again, she didn't say no, though she was shaking her head in disbelief as he started kissing her thigh, moving closer and closer to his goal. An inch away, she was grinning in anticipation but he switched to her other thigh and started all over again. She gave him a pouty look but opened her legs even wider allowing him to slide a hand down, ever so lightly, and play it just inside the gapped leg of her shorts, right along the edge of her cotton panties. \n\nHis little kisses on the opposite thigh were reaching the same general point as the first, but as he arrived, he gave a little lick along the edge before trying to ease his tongue under the edge of the fabric.\n\nCrys giggled when it didn't work, but she grabbed his head and pulled him into her. His nose was pressed against her mons, putting his mouth, he figured, right over ground zero. Using only his lips, he began to mouth her through her shorts and panties causing her to squeal in surprise. As she did, his fingers attacked and slid under the edge of her panties from both directions and started massaging her and then moving to the sides of her clit to add to the stimulation.\n\nHer moan was more of a contented groan this time as she let go of his head and hooked her thumbs in her shorts and panties and tried to push them down. He resisted for a couple of seconds, pretending he was happy the way it was until she gave a little sound of disappointment. He helped her raise up off the counter then, her clothes came down, and he got yet another great view of her wonderful pussy that he'd been worshipping ever since they finally consummated their love so long before.\n\nHer delicate labia highlighted her, protruding to form a little ridge and causing his blood to surge. He kissed lightly along their length, sucking them gently with his lips before taking his tongue to spread them open, back to front. They stayed spread, showing their glistening pink lining for just a moment before starting to roll closed. A second pass corrected that and a third, deeper, into her depths, opened them fully, making Bill a most happy man. His blood surging, he moaned in his chest, reveling in their beauty, before making a slow, deliberate fourth pass.\n\nAt that point, Crys's whimper-like moan told him that he'd played enough so he got into the rhythm she liked and it wasn't long before she was arching her pelvis to match his ministrations. Her breathing changed, becoming shallower and faster with her cute, barely audible little moans she'd perfected years before to avoid waking Kelly. Knowing she was building to a climax, Bill kept his pace but increased it little by little to match hers. \n\nWhen she came moments later, it was a long, low moan, of loving contentment. \"Thank you, Sweetie. That was perfect. 'Don't say no. Don't say no. Don't say no,'\" she added, chant-like, as if trying to drill it into her head for the future. \"Now, it's your turn not to say no.\"\n\nShe slid off the counter with Bill helping her down. She peeled off her t-shirt and sports bra as she pushed him against the counter and knelt down in front of him. Bill's athletic shorts and briefs dropped to the floor and she took him in both hands, gently rubbing his length, causing him to grow to his full length and diameter before she kissed up the front, from base to tip. \n\nHer tongue darted out to give a single lick to his frenulum, followed by the feel of her breath on that same spot at the front of his helmet. A second lick, as slow as the first, and another slow breath led him to give a tiny moan as he exhaled. Chrys's tongue hit the same spot a third time and he knew that hot little breath was coming again until her tongue suddenly started flicking him excitedly, like an old-time schoolteacher ringing her handbell as fast as she could. At least that's how it made him jump before she sucked him in and started a quick bob that prompted a deep, controlled groan. \n\nHe was smiling down at his beautiful lover as he placed his hands lightly on her bare shoulders, delighted to feel her skin under his fingertips, so the love could practically flow between them. Crys had one hand encircling the base of his penis with her finger and thumb and the other fingers holding his testicles, holding still but all the while giving gentle squeezes, while her middle finger on her left hand was setting the pace of it all by slowly circling her clit. \n\nCrys was giving a wonderful blowjob and kneeling in front of him stark naked like that made him feel like king of the world, but knowing what she was doing down below, he let her have some fun before they switched to the main event. When he started to feel the tingle, that delicate edge, building, he slid his hands over her shoulders and down her arms, nudging her up.\n\n\"That's enough, Sweetheart,\" he whispered, as she gave me a few more kisses before letting go. \"Do you want to go upstairs or is right here okay?\"\n\nHer motions had probably taken her further than he expected, for she turned around, placing her breasts on the countertop as she spread her legs like a Greek lambda and grabbed the edge of the countertop. He took that as meaning right there would be just fine.\n\nShe was so ready, so wet inside, that he slid into her easily, fully, in one stroke, and started rocking into her, slow the first time\u2014\n\n\"Faster!\" she demanded.\n\n\u2014a bit faster and a bit harder the second\u2014\n\n\"More!\" she begged.\n\n\u2014and then like her schoolmarm example on the third, gripping her hips to steady himself as he pounded into her as hard and as fast as he could, causing her to call out a prolonged \"Yes!\" \n\nBill slammed himself into her repeatedly, enjoying her feel, the look of her oh-so compliant body as her tight runner's ass reverberated from his blows, and the face she was making as she turned back toward him, trying to see her lover giving her the ride of her life. It wasn't long before he was making a similar face, breathing hard as he crashed against her, into her, trying to prolong her ride and her pleasure.\n\nCrys felt her legs buckling so she braced her knees against the cabinets and pressed her hands against the tile backsplash, rying to resist the pile driver that worked her. Her head inches from the wall where she'd been bumped forward, she turned back to watch him, the only man she'd ever loved, as she saw his desire to give her his all. \n\nWith her breasts pressed hard against the granite countertop, she was vocal in her moans, encouraging him as much as she could even as she demanded for him to keep fucking her through what felt like a tidal wave of orgasms.\n\n\"Crys?\" he grunted, as if barely able to say the word between his gasps.\n\n\"Yes...do...it,\" she grunted back as her head sank to rest on her arm on the countertop just as Bill made his last slam against her and stayed deep, spasming inside her, pumping her full. Crys's leg shook, quivering on its own in the seconds that followed as he sank down on top of her, his chest resting against her back as gave her a series of small kisses while trying to slow his breathing.\n\n\"Oh, Bill, that was wonderful,\" she gasped, while Bill felt himself slipping out of her, leading her to add, \"But if you don't let me up, you're cleaning the kitchen floor.\"\n\n\"I'll clean the damn floor,\" he whispered as he pulled her up and around into his arms. \"I'm not letting you go.\"\n\n\"Good. And Bill?\"\n\n\"What, Sweetheart?\"\n\n\"Be sure to remind me of this if I ever say no again, okay?\"\n\n***\n\nBill cleaned the kitchen floor while Crys cleaned the countertops before they retired to their room where they spent most of the rest of their Saturday morning snuggled together in bed. They made love again after lunch, with both knowing how lucky they were to be together.\n\nLater, Crystal, a teacher, graded math exams while Bill took care of the yard work before showering and going to pick up Kelly and Amber. Though his car could have used it, he took Crys's SUV so the cheerleaders could wash it for her. He gave the suggested donation and then doubled it to help their fundraising effort since he realized he should have arranged to bring both cars. \n\nThe girls, soaking wet and wrapped in towels, sat in the back seat chattering cheerleader talk and boys on the way home. Bill was sad to hear that his little girl, just days from her 15th birthday, was growing up and growing increasingly interested in the opposite sex.\n\nAfter dropping Amber off, Kelly asked, \"Dad, can I move up to the front seat?\"\n\n\"And get another seat wet to travel eight houses? Seriously?\"\n\nShe made a face at him in the rearview mirror before laughing. \"So...do you think you could read another of my stories?\"\n\n\"Kelly, what did we say about starting sentences with 'so'?\"\n\n\"Sorry. It's lazy, I know, but lots of people do it.\"\n\n\"Lots of people jump off bridges, too. Do you do that, too?\"\n\n\"No...but then again, I don't know anyone who's jumped off bridges either though I hear that bungee jumpers like it and I wouldn't mind trying.\"\n\nShe was grinning this time and Bill chuckled as he turned into their driveway. Her late grandmother's frequently-used expression with him had lost most of its original impact with the invention of bungee jumping.\n\n\"Dad, my new story? Do you think you could read it for me?\"\n\n\"Sure, Sweetheart. I'll be glad to.\"\n\n***\n\n\"Bill, do you think she should be on that website?\" asked Crystal a few weeks later as they lay in bed together after he told her about Kelly's newest story.\n\n\"I don't see anything wrong with it. The rule is that you're supposed to be at least 13 to join and behave to stay in good standing. From what I saw, it looks like it runs the gamut from barely thirteen, maybe, to retirement age or beyond, and the website admin is pretty strict on the behavior part. She's fifteen now and has her head on straight.\"\n\n\"Yeah, I know. I just don't want her meeting creepy guys and having them stalk her. Bill, it could be dangerous.\"\n\n\"Sweetheart, I understand, but we've both spoken with her about protecting her identity and not getting involved with strangers. I think we've got to trust her on this. She has some talent, so let's let her practice and see if she can make use of it.\"\n\n\"Mmm, I guess you're right. Just keep an eye on her, okay?\"\n\n\"I will,\" he promised, leaning in to nuzzle her ear. \n\n\"Hmm. I thought you were tired tonight,\" she said with a giggle as her hand slid down his tummy. \"If we start this, you better not peter out on me.\"\n\nHe chuckled silently at her choice of terms. \"With this gorgeous, sexy woman in my arms? Sweetheart, there's not a chance in the world of this peter petering out tonight.\"\n\nShe rolled her eyes at him. \"Oh, remind me again why I married such a juvenile.\"\n\n\"Mmmm, I think it had something to do with the fact that you loved him so much and that he was such a great fuck.\"\n\nShe snickered and, smiling, tapped the tip of his nose with her finger. \"Love, yes, quite true, but I'll give you a grade and a final rating on the rest in a little while.\" \n\nShe was barely done speaking when Bill started kissing her and it wasn't long before Crys was moaning in ecstacy, forgetting all about her grading exercise.\n\n***\n\nChapter 2\n\nOver the next few months, Bill read several more of Kelly's stories before she became distracted by the fall cheerleading season and by Austin, her new, though unofficial, boyfriend. Bill and Crystal had agreed that Kelly's dating officially began at 16, so Austin was allowed to come over at set times and to accompany her to certain events, all with proper chaperoning.\n\nAfter that, she mostly put the writing website behind her, never posting another story, though he did see her signed-in from time to time, probably reading stories that others had written.\n\nBill was having a bit of fun with it by then, though. Under the username WesternRomanceGuy, he started publishing a few of his old works that hadn't been accepted by the magazines and then started writing some new ones. The first three didn't get much attention but he hit a nerve with some people on the next one and favorites, follows, and comments started pouring in...at least for a little while.\n\nWithin a week, the story had dropped from the new listing and he'd realized that twelve comments really wasn't that many compared to a lot of other stories. He thanked the two commenters who'd signed in and then went back to it, hard at work on finishing his next story.\n\nThat was when a thirteenth comment arrived.\n\nHi, I loved your story! The characters felt so alive to me and their dialogue was perfect, just like I was eavesdropping on them. I hope my writing will be this good someday!\"\n\nThis comment came from a member by the username of AlleyKat99. Bill clicked on the profile, planning to send a thanks with encouragement to write something and post it, but there he saw that AlleyKat already had one posted. Instead of the thank you, he decided to return the favor by reading and commenting, figuring that he'd struggle through and leave a polite comment with some innocuous suggestion that wouldn't be insulting and a quick thanks at the end. \n\nSurprisingly, the story was pretty good, keeping his attention as the characters were developed and the plot played out. Instead of rushing out a two line comment, he had to think on how to word his comment to encourage AlleyKat while at the same time offering three ideas he had for improvement rather than something insignificant as he'd originally figured. He made the comment, expecting that would be the end of that.\n\nThe next day, Bill found a private message in his Inbox on the site.\n\nHi, WesternRomanceGuy,\n\nThank you for reading my story and for the great feedback! I'm glad you enjoyed it and really appreciate your suggestions for improvement. I understand the first two, but I'm confused about the last one. Can you please explain a little more so I can get this right for future stories? I want to be the best writer I can be!\n\nThanks! \n\nAlley\n\nIt only took a couple of minutes to clarify the issue and he pressed send, forgetting about it until the next day when a new comment arrived on one of his older stories. \n\nHi, WRG! This was another great effort! With such great dialogue, I can see how Missy would have fallen for him in a heartbeat. Make a girl's heart skip a beat, will you? :-) Thanks for the sweet story and for the note. I understand now and I just posted a new one! AK99\n\n\"Well, damn. I thought she was female and now, not only that, I suspect she's young, really young,\" he said, looking at the screen.\n\n\"Mom! Dad's talking to himself again,\" yelled Kelly from the doorway. Turning back to him with a snicker, she added, \"Mom said pizza's here and to come down now. I'll be there in a second.\"\n\nKelly hurried off to her room so Bill looked back at the screen; he'd respond later, he decided. He went downstairs and Kelly came running down a couple of minutes later, just as he was about to call her for the second time. \n\n\"Crys, I think I picked up another stray,\" he told her over supper. \n\nCrystal looked at him questioningly. \"You think? You think it's a stray or you think you picked it up? Remember, Bill, you're always saying that words mean things.\" She and Kelly snickered before Crys asked, \"Is it a dog or a cat this time and where'd you put it?\" They'd been able to find the owners of two stray dogs and a cat over the years, but two other cats had come to live out their remaining years with the Humphries family. ",
        "\"Ahhh...I think it's a teenage girl.\"\n\n\"Yay! I've always wanted a sister...but I'm not sharing my room,\" laughed Kelly, scooping up another piece of veggie pizza. \n\nCrystal looked at him for a moment, concern in her eyes, before asking, \"Bill, do we need to discuss this privately?\"\n\n\"No, not necessary. A young female author has discovered my stories on the website and now she's reviewing them and asking me questions on how to improve her own.\"\n\nCrys breathed a sigh of relief, since drugs, alcohol, and abuse weren't the reason, but Kelly asked, \"Are they any good?\"\n\n\"Well, she seems to like them so far,\" he deadpanned before Kelly groaned.\n\n\"Dad!\"\n\n\"Hey, Mom just reminded us that words mean things.\"\n\n\"Bill, are your young friend's stories any good?\" asked Crys. \"We already know all about yours.\" She rolled her eyes at Bill before winking at Kelly.\n\n\"Actually, I've read one of her stories and found it to be pretty good. I'm going to read her second one tonight to give her some feedback.\"\n\n\"If you think you can help her improve, do it. Just don't let her fall for you,\" said Crys with a playful smile.\n\n\"Don't worry about that, Sweetheart. She's probably 13 or 14 and just needs a little advice. If she realizes she's talking to a decrepit old fogey, she'll head for them thar hills,\" he said with a funny western accent, using the title to one of his western romances that Crys had read. \n\nCrys poked him before giving him a kiss and Bill went to read Alley's story. He read it, found it to be better than her first, and he again offered a few suggestions. He showed Crystal that evening, and Crys gave a female's perspective after reading the story while that sat in bed. Bill passed along her observation, too.\n\nThus, over the next few months, Bill and AlleyKat became online friends, with Bill serving as a mentor to the young lady and Crys giving input from time to time. It was just about writing for a while, but eventually, Alley asked about a school-related issue. She was, he discovered, a year behind Kelly. Another slip up told him she was in the New York City area. It was then that he felt they were close enough he could chastise her a bit without having her run away.\n\nAlley,\n\nPlease be careful giving away information like this to people you meet online. Anyone you meet online can be some creep wanting to find and potentially do unspeakable things to you. Mrs.WRG and I care about you and don't want you to slip up and get hurt, and since it could even be possible that Mrs.WRG is a figment of my imagination and that I'm some creepy pervert, too, you shouldn't tell me these things either. Of course, Mrs.WRG is real and I'm not a pervert, but you can't know that for sure so you shouldn't even ever trust me with any identifying info. I'll answer any questions I can but you need to be really careful and to go to your parents if you have any doubts about anything you see or read online, even if it's from me.\n\nYour friend,\n\nWRG\n\nBefore he pressed send, he had Crys read his note and she took the laptop and added a bit more:\n\nP.S. Alley, this is WRG's wife. He's really not a pervert (he's goofy sometimes, but I still love him), but if you find out that someone is bad with bad intentions, it might be too late to do anything about it. That's why you have to be careful with your information just like he said. Also your friend, Mrs. WRG\n\nAlleyKat didn't respond for a week or so after Bill's message, but then she was back.\n\nThanks, WRG. I'll try to be more careful. And please thank Mrs. WRG, too. I appreciate the two of you looking out for me.\n\nOver the next year, the discussions continued, often about her writing, but sometimes about career opportunities, hobbies, movies, travel, and, eventually, boys. The last was where Bill drew the line. \n\nAlley, you really need to talk to your parents about that. \n\nAlley responded. But they're so strict they won't talk to me. Dad anyway, and I think Mom's afraid to say much (I'm deleting this as soon as we finish!). They won't let me date, though that's not an issue since nobody would ever ask me, but they won't help me quit being nervous about being around them and talking to them either. There aren't any boys at school.\n\n\"Ah, she must go to an all girl school,\" said Crys, confirming Bill's thoughts. \"That can be a good thing, but if her parents are too strict and try to keep her isolated from guys, she may not learn to deal with them as she should, which can be a problem down the road. Bill, you can be a good, outside role model for her.\"\n\n\"Crys, I don't want to get between her and her parents, though,\" he said, really concerned about the situation for the first time since he and AlleyKat had met. \"What if her parents don't like it and call the police on me? I hate to say it, but I think I need to end this and walk away before she gets hurt or I get arrested.\"\n\n\"It's too late for that, Bill. She's already attached to you, like her favorite teacher, an uncle, or maybe even a way-way-way older big brother. You've become a mentor to her, whether you like it or not, and if you run out on her, you could really hurt her and all the good things you've done helping her would be destroyed. Protect your identity like you were telling her, don't do anything dumb including offering any specific advice that might get you in trouble or us sued, and help her as much as you can, okay? I'm in your corner and we can even pull in Kelly if we need a modern teenage perspective.\"\n\n\"You're right, Crys. The last thing I want to do is hurt her. Well, the last thing other than going to jail...or getting sued.\"\n\nMost of her questions were pretty simple, but one day Alley sent a tough one.\n\nWRG, how does a girl deal with a crush?\n\nHe passed it along to Crys without even trying. They were sitting on the couch together watching a movie on the widescreen when he showed it to her and said, \"Crys, help! She asked about a girl, but from a teenage boy's perspective, my personal reply would have been 'Not well.'\" \n\n\"Bill, I don't know. I know I waited nearly forever before you finally got a crush on me, but that seemed to go okay.\" Crys nibbled his ear.\n\n\"Sweetie, I think she meant getting over one. I never had to get over crushing on you. All the million and one before you, though...\"\n\nShe punched him lightly, giving him a little frown. \"We're not here to talk about that and there weren't that many girls in the tri-county area, anyway, so I sense a slight exaggeration in your number. Unless you had them on a loop, that repeated, what, twenty times a day? Hmm?\"\n\nBill laughed. \"I don't know, but it sure seemed like that many, with all of them ending badly until I finally got lucky with you.\"\n\n\"Dad! Yuck!\" cried Kelly, raising up part way from where she was lying on the love seat to the side. She was giving him a very displeased look.\n\n\"I didn't mean like that. I meant\u2014\"\n\n\"I know. Just giving you a hard time,\" she giggled, grinning, before turning back toward the movie on the big TV and flopping back down on her pile of pillows and eating another bite of popcorn.\n\nCrys put her head against his chest. \"It's been a long time since I was a teenager, but I had a few crushes myself. You, of course. And Ronnie Winestaff. Woah!\"\n\n\"Ronnie Winestaff? Now wait a minute,\" he said, shocked that he was just hearing his old classmates' name after twenty-four years of marriage.\n\nCrys burst out laughing. \"Got you! Seriously, tell her that crushes don't last forever, and often don't even last long. Tell her that it's not the end of the world if the nothing comes of it\u2014in most cases, it doesn't, and that's probably for the best\u2014\"\n\n\"Ronnie Winestaff,\" he grumbled, leading her to laugh.\n\n\"I was teasing! Crushes eventually fade away or they become something more, like us. Anyway, to answer her question, maybe she should start a diary or a journal; by writing down how she feels today, she'll be able to look back on it in a month or maybe two when she gets her next crush and then she can see that life goes on, and that crushes come and go.\" \n\nKelly piped up from the love seat. \"Yeah, crushes come and go. I had two last week and now I've got it on him.\" She pointed to the sexy star of the movie, at least fifteen years her senior. Bill threw a pillow at her, being careful to hit her legs instead of her bag of popcorn. \n\nThey had a good laugh, and Kelly became their occasional sounding board for some of AlleyKat's periodic teen-related questions. \n\n***\n\nWhen Kelly started her senior year of high school, Bill and AlleyKat99 were maintaining their relationship as mentor and mentee, with Alley asking numerous college and career-related questions as she considered colleges. As the year passed, she revealed that she'd done extremely well on the national tests and that she'd probably be considered a good catch by most universities since her extracurricular activities were also good.\n\nDespite their warnings, over time, Alley made a few more comments that revealed what Alan and Crys felt was too much about herself. He knew her birthday was the first week of September, that she lived in Queens, and that she attended an all-girls school. He suspected that her real name was Allison or something similar since she mixed Alley and Ally interchangeably at times, though, he knew, that could have been intentional as a red herring since she was too good at spelling to be making such a mistake. They joked about that at times; she said she disliked the spelling of her middle name so much she refused to learn how to spell it and had to look at her school ID or new learner's permit to be sure when she was filling out applications. \n\nIt was when her grandfather died, though, that she gave away too much. She mentioned the date and the location, and it took Bill only minutes to find the obituary with her name listed as Allison Brady. She said she wasn't close to her grandfather because he and her mother didn't get along, but she was sad. Bill gave his condolences but didn't scold her on her slip-up because of that. \n\nMore stories followed but one spring day, Alley didn't appear. Bill's response to her question went unanswered, and her new story that she'd been discussing with him was never posted. He started to worry about her, telling Crystal about his fears. Days became a week, and the weeks became a month with no sign of her; the only very welcomed relief came when his search for another obituary, hers, turned up nothing. \n\nBill wondered if she'd gotten hurt or if she might possibly have dropped the website in favor of boys. He started to post a new story of his own but found himself a bit sad that his young mentee and friend apparently no longer had any need of him.\n\n\"She was a kid, and kids grow up,\" said Crys one evening when he mentioned it. \"Look at Kelly; she was going to be a soccer star, a volleyball star, and all the other things in between, but then one day she decided to be a cheerleader. Girls are little women, Bill, and you know what they say about women changing their minds.\"\n\n\"Yeah.\"\n\n\"Kelly graduates in a few weeks, will be heading off to Bickford in the fall, and before too long, she'll graduate from there, be married with kids, and we'll wonder where our little Hurry-cane Kelly went.\"\n\n\"God, woman, making me a grandpa before my time. Now you've really got me depressed,\" he said with a chuckle. \"Even with this sexy new nightie.\"\n\n\"Oh, I think I know how we can fix that. Kelly's spending the night at Amber's, and I thought I might try to reenact that bronc busting scene from your latest story.\" She pushed down his shorts and threw her leg across. Sitting atop him, she pushed her tiny panty to the side. \n\n\"Oh! I feel a bump in the saddle! Let me fix that. Ahhhh...unhhhh...\"\n\nBill was grinning as she sank down on him.\n\n\"Crys, you're so beautiful and you feel so\u2014\"\n\n\"Shhh! You're playing the horse in this scene, remember? And I'm pretty sure the horse's name wasn't Ed.\"\n\nBill chuckled, enjoying her hot pussy encasing him. Though she wasn't trying yet, she was moving around a bit, making it feel so good.\n\n\"Okay, Mr. Horsey. One more thing. This horse has a very special saddle with a big, two-part saddlehorn in addition to its wondrous, center LEGO stud. One part goes here\u2014\"\n\nShe placed his right hand on her left breast, cupping her over the lacey babydoll.\n\n\"\u2014and the other here,\" she continued, placing his left over her right breast. \"Now this special saddlehorn can squeeze a bit, but not too hard, and can pinch a cowgirl's nipples a bit harder.\"\n\nCrystal was grinning as the bifurcated saddlehorn began operating as instructed, but she looked around as if something was wrong.\n\n\"What's wrong, Crys?\" he asked, growing concerned.\n\n\"I forgot my damn hat. Well, fuck it! Now, giddy-up, horsey!\"\n\nIt was all Bill could do to keep from laughing at her look of displeasure\u2014he was almost certain the hat would have clashed with the pretty pink nightie, anyway\u2014but his beautiful wife's sudden bout of bronc-busting drew his full attention, with her slamming up and down on him while holding his ribcage and Bill bucking up and down in her, keeping his hands connected to keep her breasts from flying. He continued giving her the squeezes and pinches she'd requested and rocked his hips and pelvis to compliment her movements. \n\nCrys, an accomplished horsewoman in her youth, was using her thighs and knees to ride up and down on him, squeezing him as she did. However, with Bill and Crystal now approaching their late-forties, she soon found her legs and hips tiring from the vigorous exercise, so she rested on him as she leaned forward into his hands, rocking herself forward and back for some strokes, before straightening and riding some more. \n\nBill was smiling at her efforts, as her usually gentle moans became full grunts. When he couldn't last much longer and saw that she was getting close, he planted his feet on the mattress and lifted, allowing him to increase the force of his thrusts into her. Crystal's face contorted as she tried to prolong her orgasm but it was too much and she suddenly groaned as it hit, collapsing onto her \"saddle\" as she pushed his hands to the side so she could fall atop him. Bill slid his arms around her as he made one last stroke and buried himself deep within her as he came. \n\nShe lay atop him as they held each other. \"Bill, I love you, Sweetie, you were a fine stallion, and that was a great ride,\" she said softly in his ear, \"but I still can't believe I forgot my damn hat.\"\n\n***\n\nKelly graduated high school and headed off to Bickford University in California that fall, much further from home than Alan and Crystal would have preferred, but she seemed to thrive there on academic and partial cheerleading scholarships and in the sorority where she pledged. \n\nSeveral years passed, with Bill and Crystal living a mostly empty-nest lifestyle, but with Bill still remembering his young mentee. He continued to check the writing site periodically in case Ally returned, but she never did. Hoping she'd do well and be successful, Bill and Crystal moved on with their life together, loving each other until that fatal day....\n\n***\n\nChapter 3\n\nPresent day...\n\nThe house was quiet. It had been that way for almost all of the past three years to the day since Crys was, according to the pastor, \"called home to be with the Lord.\" Bill hated the phrase and what it represented, since her death was stupid and uncalled for and any god who would allow such a good person to go so horribly....\n\nHe shuddered at the thought, the anger still deep within him despite the passage of time. He looked at her, touching the glass over her photo, asking himself yet again why it had to be her. She was so fresh and vibrant in the photo, a true picture of how she was, but now...gone. \n\nHe'd always been a religious person, a believer, but her death had confused and angered him, and rebelling, he'd left their church and most everything else in his life, including his old job. His job at his new firm was very similar to the old, but there he didn't have to suffer through everyone looking at him week in and week out, feeling sorry for him when it was Crystal that they should have been mourning. She was the one who didn't deserve what happened, Bill knew; he was just an affected participant.\n\nHe'd become a loner after the funeral, with video chats with Kelly and her family being practically his only non-work-related conversation each week. She'd divorced her husband a few months ago after finding a strange pair of panties in his pocket while doing the laundry and then reading the report a few weeks later from the private investigator she subsequently hired.\n\nDespite being over 2,500 miles away, Kelly had been his rock through the rough times, the one who'd kept him grounded and away from thoughts that might have ended his troubles but which would have only left worse scars for her and his grandsons. As much as he hurt, he knew he could never do that to them since she needed him and needed him to be a good role model for her boys. Her ex had largely abandoned them following the divorce, paying his child support but offering little in the way of the love they truly needed.\n\nBill felt for her and tried to do what he could to help her, including making a conscious effort to keep himself in shape despite his pain. He ran most mornings, a gentle jog, but his knees hurt too much to regularly go beyond 10K so he was perpetually training for the half-marathon that he knew he would probably never run. He lifted weights with his resistance gym in the basement to keep up his strength. Having just turned 60, he found that was important to his physical health as well as what remained of his mental side, and he was now in better physical shape than he'd been in his late 40s and early 50s when middle-age-spread set in.\n\nKelly had been working with him on that, particularly over the past year, when she'd been gently urging him to let Crystal go, to keep the good memories of his wife and her mother, but to move forward, to start living again, trying to find new happiness rather than trying to live off the memories of the past. When he showed no signs of achieving it on his own, she'd urged him to enter counseling, which he'd steadfastly refused. \n\n\"Dad, the kids see it. They see you, how dreary you are, and while Arnie doesn't remember Mom and what you were like before, Mikey does, and he wants you to be happy again.\"\n\nWith Kelly living so far away, they weren't able to get together often, but they video chatted frequently and he tried to put on a happy face, even if he was cold and dark inside. She also sent frequent text messages and e-mails, partly to help him but also to help her since she was still hurting from her ex-husband's betrayal and the recent divorce. They would talk today, he knew, remembering Crystal again, and she'd probably be giving him some small nudge, or more, to move forward. \n\nBeing a Saturday and the anniversary of Crystal's death, he left the gloomy house, its atmosphere stifling, for his morning run but he couldn't get her out of his mind. Tears pooled in his eyes at the thought and then slipped down his cheeks. He'd accepted that she was gone long before, but certain days like this were too much; he still missed her and refused to move on.\n\nThe one time when he could escape the memories and the pain was when he was writing\u2014westerns and romance were still his staple, but he'd done a fantasy series and written a suspense thriller. He'd ventured into self-publishing and succeeded in selling a number of stories over the years, though still not nearly enough to give up his day job and the big novel sale had never materialized despite having four complete novels that he'd tried shopping to real publishers in recent years. ",
        "His run over, he returned home, showered, and ate a bite of breakfast before opening his laptop. There, he found an e-mail from Kelly.\n\nHi, Dad,\n\nGood morning. Please remember that the kids and I love you and that Mom always loved you, too. We know today will probably be tough for you but we want you to remember that part of love is wanting what's best for the one we love, even when we're no longer there to help with that. Mom would want that for you, too, and would want you to let go and move on. I hope you'll think about that today, Dad, and I'll be thinking of and praying for you today, too. Then, tomorrow, get up and make a new start, okay? That would make Mom happy, would make me and the boys happy, and will make you happy in the long run, too.\n\nI'll call later; Mikey has soccer practice at 8 this morning so I'm up early trying to get his practice uniform ready. I don't remember them being as fussy about stuff like that when I was his age.\n\nLove you,\n\nKelly\n\nP.S. I'm still on the e-mail list for Belden's Bookstore downtown. They're having another signing event for a new author this week; if you go, get me a copy and an autograph, okay? I read a review and it sounds really good.\n\nBill hadn't done a signing event since Crystal died, but getting an autograph for Kelly might be a nice gesture to thank her for all that she'd done to help him. He and Crystal had attended a number over the years, with Kelly coming along for a few and they'd met several good authors as a result.\n\nHe sent Kelly a short thank you note for letting him know and then went to the Belden's website, knowing the store was one of the few remaining independent bookstores around town that still had the clientele to host such events. He went to the upcoming events page and saw there was a book signing on Tuesday night by an established author and then another on Friday night with a new author whose name jumped out at him: Allison Daniela Brady.\n\nHis breath caught for a second as he reread it. \"Allison Daniela Brady. Allison Brady. Could this be Ally? AlleyKat99? Nah, it couldn't be,\" he said aloud, but still wondering. \n\nAn online search for the author led him to several articles with interviews she'd done in recent weeks, including one she did with one of the big New York publications.\n\nKCMag: \"So when did you decide to become a writer?\"\n\nBrady: \"It was a number of years ago when I was a young teenager. I was terrible, but a writer friend saw potential in me and encouraged me to keep writing and to never give up. He spent a lot of time reviewing and critiquing my works, and practically going crazy, I suspect, helping me.\" Then, she confirmed it. \"I always told him that my spelling sucked and teased him that I couldn't even spell my middle name right\u2014it's a variation of the Hungarian spelling, from my great grandmother, Dan-i-ay-la\u2014without looking at my student ID to remember if it was one 'L' or two. He talked me through a number of other issues over the years, too, and I've always been so thankful for his help. We lost touch years ago but I hope he's doing well.\"\n\nBill slumped back in the chair, remembering clearly the middle name comment. He'd found her first and last names from the information she'd disclosed about her grandfather\u2014or was it her grandmother?\u2014and the obituary but he'd never learned her middle name. \n\nThe events listing showed that Miss Allison Daniela Brady would be in town on Friday for the signing. Friday night signings were fairly rare, so Bill checked the local writers' forum, finding that she'd be doing a signing at one of the big bookstores on Thursday and was staying over for a second event at the smaller independent. \n\nHis mind swirling, Bill visited Crystal's grave at the cemetery. He set fresh flowers in the vase and sat down next to it. A tear slipped down his cheek. \n\n\"Hi, Crys. Sorry it's been a few weeks since I visited. I...I miss you, Sweetheart, and will love you always...but it's really hard coming here, talking and remembering you and not having you reply, to hear your voice, your laugh. Kelly and Mikey are doing well, and little Arnie is getting bigger by the week. She sent me a note this morning and wants me to, basically, remember you always but let you go. I'm going to try, Crys, but you're always going to be part of me, here in my heart, and I'll always love you.\"\n\nHe leaned against her headstone for a few moments, the cool, solid feel of the marble and the depth of the engraving under his fingertips reminding him that it was real and not just some horrible nightmare he'd been living for the past three years. Blinking with his face set, he fought off the tears.\n\nHe stood up and was about to go when he added, \"I found out something else today, Crys, that you'd be glad about. Remember AlleyKat, our young writer friend? She made it, Sweetheart. She grew up and is a published author now. I'm thinking of going to get her autograph. I don't know if....\"\n\nHe sighed looking at the name on Crys's stone and the flowers he'd put in the vase. \"Bye, Sweetheart, I have to go,\" he whispered before finally turning away.\n\n***\n\nLater that afternoon after speaking with Kelly and the boys, Bill drove to Belden's and picked up two copies of Ally's book. He picked up some General Tso's, Crys's favorite, at the local Chinese restaurant, and went home to start reading while he ate. It was late that evening when he put it down, and he finished it after his run on Sunday morning. It was, he felt, a great book.\n\nIt was tough for Bill to concentrate over the next few days. The anniversary of Crystal's death weighed heavily on him, but the thought of finally meeting his successful, former mentee brought a sense of happiness and hope that had been missing from his life for too long. He was second guessing that decision on Friday night, though, as he stepped into the signing line at Belden's, wondering if introducing himself was the right thing to do. After all, she'd successfully moved on without him, even if the magazine article made it sound as if she might have regretted it all these years later. As the line inched forward, he knew he'd meet her but he still wasn't sure if he was going to introduce himself as Bill, Bill Humphries, or WesternRomanceGuy. \n\nThere were a number of photos of Ally online at various signings, but the most common was the one on the back cover of the book jacket. The big photo next to the table where she was seated was the same as that publicity shot though it wasn't as cropped as the cover, with short, dark brown hair and dark brown eyes. The photographer had succeeded in making her look as smolderingly sexy in the photo as the heroine in her mystery-romance novel, but here, her hair was longer, at least by several inches, she wore a casual sleeveless dress with pretty flowery print and a neckline that wasn't too high but wasn't so low as to make a father blush either. She had a nice bustline in the dress, nothing too big for her seemingly small frame, with her breasts not being nearly as accentuated as in the publicity shot. \n\nAll-in-all, she looked more friendly, next-doorsy even, as she smiled and laughed with those whose copies she was signing than the sexpot on the back cover. Moving closer to the front of the line where he had an even better view, he was glad to see his young friend, who'd once described herself as klutzy and boring-looking had grown up so well. \n\nBill was a few people from the front of the line when the event coordinator came back over. She'd been circulating and had previously spoken to those in front of him, so he'd already gotten a good look at her but really paid her no attention. With brownish-blonde hair and amber-colored eyes, she appeared to be in her mid-forties and was wearing a dark business skirt. As she stepped up to him then, he noticed the almost sheer white shirt with a white camisole under it that highlighted rather nice breasts with nice points. He took it in at a glance, careful not to stare. \n\n\"Hello, sir, thanks for coming this evening. I see you have a copy of Miss Brady's book. Oh, two copies.\"\n\n\"Yes, one for me, and one for my daughter. I came down and picked them up over the weekend when she told me about this event. I have the receipt for them, if that matters, and I've read the whole thing. My copy, anyway,\" he said, already a bit nervous about the situation and then being called out on asking for more than one autograph. \n\nThe woman smiled, shaking her head. \"Oh, no, no problem. We're actually just glad to see such a great crowd, especially on a Friday night, to get Allison and the store some publicity. Do you have a short note you'd like for her to include in the book or would you rather let her write something original?\"\n\n\"If she doesn't mind, I'd like to provide a short note.\"\n\n\"That's fine,\" she said with a nod, \"but please write it, as legibly as possible, on this slip of paper. That way, it keeps notes to just a few words and allows everyone to have a turn.\"\n\n\"Understood.\" He took the little square of paper with lines and wrote out a short note. On the back, he wrote one for Kelly.\n\nBy the time he was next in line, Bill was getting a bit nervous about what he'd written, but then it was too late. The event-coordinator lady said, \"Sir, it's your turn. Please step forward.\" \n\nHe was a bit choked up as he faced her, but she put him at ease. \"Hi, I'm Ally. Thanks for coming. And you are?\" she asked as she extended her hand in greeting.\n\nBill shook her hand, warm and tender, leading him to force himself to let go. \"Ahem, hi, Miss Brady. My name's Bill Humphries. It's very nice to meet you...in person,\" he said as he handed her his little paper with the note. \"Mine's on front, and my daughter's is on back.\"\n\nAllison was smiling as he introduced himself and she nodded to him before opening Bill's copy of her book that he handed her. Then she read the little note he'd written. When she did, she became animated, glancing back and forth from the paper in her hand up to him standing across the table from her. \n\nShe shook her head quickly, as if in denial. \"Really? Are you serious?\"\n\nHe smiled. \"It's been a long while, but yes, and it's me and I'm still in your corner cheering for you, AlleyKat99.\"\n\nShe squealed, jumping up and leaning across the table to hug him. The female assistant frowned and quickly moved toward them, but Ally moved around the table and gave an even bigger hug, almost tittering excitedly the whole time.\n\n\"Everyone! Everyone, listen, please! This is the first time I've ever met him in person, but this is my dear friend, WRG, who helped mentor me when I was a fledgling author. He helped me so much, pointing out boo boos, making me think through plots and the details that help make stories work. Thank you, thank you, thank you, my friend!\"\n\nShe gave him another hug as those still in line smiled and gave a polite round of applause. All except the event assistant, who was frowning even more. She took a step toward them, but then hesitated, apparently seeing that Bill meant Ally no harm.\n\n\"Say,\" Bill said, \"I don't know if you have plans for this evening after this signing, but if not, I'd love to take you to dinner and catch up. It's been a long time since we've talked.\"\n\nShe laughed but nodded enthusiastically. \"That sounds great! I think we only have another 30 minutes or so and...say, I still owe you a signing...and you had another one for Kelly?\"\n\n\"Yes, but we've taken enough time. How about if you go on and take care of these folks and you do mine and Kelly's at dinner?\"\n\nShe nodded, gave him another big hug, and returned to the signing, with Bill stepping away so the next person could step up. He moved to the side and watched, but was surprised to see the event coordinator approaching.\n\n\"Excuse me,\" she said, \"but you really are WesternRomanceGuy?\"\n\nBill chuckled as he nodded. \"In the flesh, ma'am, but I generally went by WRG with Ally. I can't believe she would have mentioned me to you .\"\n\nThe woman's frown deepened. \"I'm not an employee of the store, Mr., what was it?\"\n\n\"Humphries.\"\n\n\"Mr. Humphries. My name is Lynn Marie Brady, and I'm Allison's mother. Did I hear her say that she'll go to dinner with you?\"\n\n\"Oh, hi! Nice to meet you, Mrs. Brady. And, yes, she did, but I didn't realize that she had someone traveling with her. You're welcome to come, too.\"\n\n\"You going to dinner with my daughter isn't a good idea, Mr. Humphries. In fact, I must say, it's a very, very bad idea\"\n\nTo have been so pretty and smiling minutes earlier, she looked surprisingly upset, bordering on angry, when she said that, and, after seeing how happy Ally was when they'd met, Bill wasn't sure what was going on. \n\nIn a low voice, he asked, \"Why, Mrs. Brady?\"\n\nShe took his arm and steered him farther away, into one of the empty aisles. \"Why are you doing this, Mr. Humphries?\" she hissed. \"Why are you back now?\"\n\nBill shook his head. \"I live a half hour away and she's here. Listen, I don't know what you're upset about but Ally and I are friends meeting in person for the first time. Dinner will give us a chance to talk, and, like I said, you're invited, too. To tell the truth, I've debated this all week but I really am looking forward to catching up with her, especially after wondering how she was doing for so many years. Do you realize we seemed to be good friends and then it was like she just disappeared one day? I wondered for the longest time if I'd done something wrong or why she would leave like that.\"\n\nMrs. Brady was staring at him, the apparent anger hidden just under the surface, ready to burst out at any moment. \"Well, I'll be perfectly blunt, Mr. Humphries. She didn't do it by choice. Her father and I forced her to quit speaking with you for her own good\u2014\"\n\n\"What?\" he exclaimed, interrupting her with a sharp whisper. He couldn't believe what she'd just said, and his anger suddenly rivaled what he sensed in her. \"Mrs. Brady, I respect you since you're Ally's mother, but that's crap. I spent a lot of time helping her because we were friends, being a mentor to her to the extent I could be from hundreds of miles away because I thought she had talent and could do something with her life, and she's proven it. Back then, I thought she appreciated my input; God, she thanked me enough times. Then you just decide that I shouldn't help her any more and don't even let her tell me goodbye? What? Did you think I had some sinister plan for her? If so, you're sick, lady. She's like a daughter to me.\"\n\nMrs. Brady planted her hands on her hips glaring at him. \"She is a daughter to me, Mr. Humphries, and that's why we forced the issue. No, after reading your comments and seeing how much effort you were giving her, I believed you truly were trying to help her and that's why my husband and I didn't stop it years earlier, but it wasn't you.\"\n\n\"What do you mean?\"\n\n\"It was Ally; we think she developed a crush on you despite not meeting you and was beginning to fantasize about running off to be with you. She was desperate to 'go live at WRG's house.' That's all she talked about. 'Going to live at WRG's house.' I don't know how she did it, but she'd somehow discovered your name and location though she never would share them with us. She swore she knew, and Ally, though a handful, was always very truthful. She even told me your first name was Bill, but she wouldn't say more.\"\n\nBill was stunned and barely forced out the words. \"You have to be kidding me. She had a crush on me? And she was able to find me despite all my precautions?\"\n\n\"No, Mr. Humphries. I wish I was kidding, but when Ally was looking at colleges, she developed misplaced feelings for you and we think she was beginning to see\u2014no, I'm sorry, imagine you as far more than her mentor. We had to push her away, to cut you off so she didn't continue to focus on you but on her future instead. She was miserable her senior year of high school, but we had to watch her to make sure she stayed away from you so she didn't ruin her life. She was desperate to get out of the house to start college, then, and it was only when she promised to not contact you anymore that we agreed to let her go. Tell me, Mr. Humphries, if we hadn't forced the issue, if she'd tried to approach you back then, do you think she'd have turned out like this?\"\n\n\"I'm so sorry, Mrs.Brady. I didn't know. I really didn't know and I didn't suspect anything. She never, ever, gave any indication of feelings for me. I, ah, I thought we were just friends and that I was helping her. We talked about writing, school, and, yeah, even boys sometimes, but never about a romantic interest in me. I tried to give her a good perspective and to help her as much as I could. It hurt when she cut me out of her life so abruptly, but I figured she was just growing up and moving on, that she'd gotten a boyfriend, and didn't have time for me anymore, but was doing what was best for her.\"\n\nShe nodded slowly, her face transforming from the verge of anger to that of compassion, perhaps even sadness. \"I think I can see that, Mr. Humphries, and I'm sorry. My husband thought about trying to track you down to warn you off but when you didn't push it and Ally seemed to let go, we let it drop.\" \n\nShe looked at him thoughtfully, inwardly debating some fine point in their quandary before finally nodding, coming to a conclusion. She smiled for the first time, just a little one, but showing a nice, human side Bill hadn't seen or really suspected to that point. \n\n\"Mr. Humphries,\" she said with a sigh, \"if I'd caught you early enough, I'd have said no, no way, but she's expecting it now and keeping you apart might make things worse. Go to dinner with her, but please, be gentle, and don't allow anything to happen that she could take the wrong way. She's almost 29 years old now, she's independent, and she's as smart as a whip, but she can be somewhat, well, obsessive at times. If you give her a bit of encouragement, I'm afraid her interest in you might be rekindled. That, Mr. Humphries, would not be a good thing at this stage in her career.\"\n\nAs much as Bill didn't want to like the woman or agree with anything she said, he nodded slowly. \"I understand, but you had nothing to worry about from me. I'd have never done anything like that to encourage her and I'll be sure nothing improper happens tonight.\"\n\n***\n\n\"Oh! I'm so glad you're here, WRG! Let's go to Korbo's. It's at my hotel and is supposed to be really good,\" said Ally after the signing was over. She jotted down the hotel's address, gave him a peck on the cheek. \"I'll meet you there in half an hour, okay?\"\n\n\"Sounds great. I'll see you there.\" \n\nDinner was great. Though having just met in person, they shared many memories of years past when they were friends at a distance. Ally ordered a bottle of wine and kept topping the glasses off frequently as they talked.\n\n\"Ally, I don't think I need any more wine, thank you.\"\n\n\"Well I'm not drinking all of this by myself, so you just hush and drink up,\" she said with a smile. Another bottle arrived later in the evening, and they continued talking.\n\n\"My parents were very strict, at least Dad was, and Mom was strict because of him. They made me stop talking with you\u2014they held the pursestrings to my college account, and threatened to make me go close to home. I'm so sorry about that, WRG. Then, they wouldn't let me date until I went to college. I became a bit of a wild thing, during those years; oh, Daddy would have killed me if he'd known the details. After, that is, beating my ass till I was black and blue.\"\n\n\"Ally, when they made you stop talking to me; your mother said you had a crush on me. Is that true?\"\n\nShe looked down with a smirky smile as she chewed her lower lip. \"Well, I wouldn't say it was a crush...but I sure did want to go live with you.\"",
        "\"Ally, as much as I hate to admit it, I think they did the right thing in pushing us apart.\"\n\n\"Bullshit!\" she said, a bit louder than necessary. \"Dad smothered me, not letting me have many friends, especially guy friends, wouldn't let me wear makeup, and stopped me from being friends with one of my best friends without even letting me say goodbye. That really sounds like the right thing to me. Right.\"\n\n\"I'm sorry, Sweetheart. I didn't mean the way he did it, but that we didn't have any type of future together as more than friends.\"\n\n\"Bill, I don't know, maybe I needed a father who wasn't a self-righteous prick. Do you know what I did in college?\"\n\n\"No...\"\n\n\"I went out west, as far from home as I could get, and, when I found out with the help of my sorority sisters that I wasn't quite as plain and ugly as dear Daddy had forced me to believe for all those years, I went on a binge.\"\n\n\"Oh, Ally, I'm so sorry.\"\n\n\"Yeah, second semester, I gave away my virginity to a guy whose name I don't even remember, and then I fucked a different guy almost every night for a month.\"\n\nBill felt uneasy, shaking his head. \"Ally, I don't need to hear this.\"\n\n\"But I need to tell it,\" she snapped. \"Please?\"\n\nHe nodded, hoping he could get through it to help, if that's what she needed, without being sick.\n\n\"My Big Sister in my sorority had been one of my few friends for years\u2014Daddy didn't know about her\u2014so, when she saw what was happening to me, she helped me get straightened out by setting me up with this really nice guy. He took me to dinner and we talked\u2014a little like this, actually\u2014and then he walked me back to my dorm before asking if he could see me again. He didn't try to come in. He didn't feel up my boobs or try to slide his hand up my skirt to finger me. He was nice, sweet.\"\n\n\"Sounds like your friend had your best interests at heart.\"\n\n\"Oh, she did. That week, I didn't go out, I didn't fuck a single guy, but by the next Friday night, I was horny as could be, and didn't care how nice he was. All I could think about was peeling his pants off of him, licking him like a popsicle, over and over, up and down, flicking his head until he quivered and then deep throating him until he shot in my mouth. I'd drool a little on each of my perky titties, swirl it around my nipples, around and around until they were hard little nubs, and then, after giving him a good look at his spunk in my mouth, swallow it all.\"\n\nBill, having had more wine than he'd drunk in years, was clearly uncomfortable, shifting in his chair, trying to control his breathing and calm the budding erection he was involuntarily getting from the terrible images she was painting. \"Ally, please! Is there a point to this?\"\n\nShe nodded. \"Just a little more, I promise.\"\n\nHe gave a nod, feeling sick, not only from her tale but also that it was exciting him far too much. \n\n\"It played out just like that, except it was in the back seat of his car, and then, when he'd gotten some relief, I climbed on, facing him, my titties in his face as he slid inside me. I rocked up and down his cock\u2014my God, it had to have been 8-inches long and well over 2-inches in diameter, on and on, while he sucked on my nipples, sperm covered and all. We didn't care, we were just fucking like there was nobody else in the world. He had a pretty big bush to go with his monster meat, and I was grinding my clit through it every time, so I ended up coming five or six times, absolutely soaking him and his car seat, before he came again. He wasn't using a condom\u2014I was on birth control by then through the university\u2014so I felt his juice flooding into me, making me tingle more than I already was.\"\n\nBill shifted, adjusting himself under the table even though she clearly knew what he was doing. He was hurting and didn't care. \"Ally, I'm sorry, but that's enough. What's the point?\"\n\nHer face relaxed and she smiled. \"So, what do you think? It's a scene from my next novel. Do you think it's hot enough or do I need to rewrite it?\"\n\nHis hands fell to the table as he slumped downward. \"It's...a fucking...story?\"\n\n\"Yes, of course, it's a fucking story. What I'm asking, is do you think it's a good fucking story or a ho-hum, boring fucking story.\" She was grinning.\n\n\"You said this was your story. So you really just made this up?\"\n\nLaughter covered Ally's face before it actually broke out, with her shaking her head. \"You're so easy, WRG! I had you going from the start! It may not have been a great scene, but it had your motor revving.\" She laughed happily before taking his hand and giving him a squeeze.\n\nHe drew back, hanging his head in his hands, staring at the table, before Ally reached across to him, placing her palms against his forearms. \n\n\"Bill, are you okay?\"\n\nHe let out a long, slow sigh. \n\n\"Ally, please. Don't ever do that again.\"\n\n\"We'll see.\" She was smiling so improperly that he ended up chuckling, too.\n\nThey talked for a while longer and drank more of the wine. When the restaurant started clearing out and they realized how late it was getting, Bill said, \"I haven't had this much to drink in years and I'm definitely not going to drive. I'll walk you to your room and then I'm going to rent a room for the night.\"\n\nAlly shook her head. \"No way! I have a suite with a couch. You can sleep on that. The publisher is paying for lodging on this tour so Mom and I usually share a room when she comes with me, but I told her I wasn't spending three nights stuck in a room with her this week. I made her get her own this time since I thought I might want to have a little fun.\" \n\nShe grinned when she said it, teasing him again, but Bill shook his head. \"Ally, I can't sleep in your room, even on a couch. I think your mom is figuring on your fun because she's thinking you want it with me. She'd be upset with you and she'd kill me if I were to spend the night in your room, even platonically, if she found out.\"\n\n\"WRG, I won't tell her if you won't. See how easy that was? Now, let's go.\"\n\n***\n\nBill, with the worst hangover he'd had since college, was awakened by loud voices, with Mrs. Brady yelling at Ally and when Bill sat up on the couch, she yelled at him, too, and then slapped him. It wasn't hard but it was a surprise and it stung. \n\nAlly, wearing a sheer babydoll-type nightie and a g-string that showed her ass, was much calmer than her mother, trying to explain the situation, saying that Bill didn't do anything to her and she didn't do anything to him. It took Bill a moment to remember through the fog of his hangover, as he stared off in another direction, trying to keep from seeing those lovely, tight buttocks that had practically burned their way into his eyes. \n\nWhen they arrived at the room, the suite wasn't actually two rooms but a room and a half with a partial divider separating the bedroom from the sitting area.\n\n\"Ally, I'm sorry but this is a bad idea. I can't stay here.\"\n\n\"Yes, you can and you are,\" she said as she pinned him to the wall and started kissing him, her tongue in his mouth. \n\nIt felt so good after such a long period without physical contact, without affection, and he responded for a moment, kissing her back, before his conscience kicked in. He turned, withdrawing from her.\n\n\"Ally, no! I can't do this! I have to go.\"\n\n\"No,\" she said, pulling him to sit down on the couch. He was barely seated when Ally was atop, straddling him, and kissing him again, her tongue in his mouth and Bill feeling like he was in heaven. \n\nIt was Bill's turn to say no again, but when he did, Ally grabbed the front of his shirt with both hands..\n\n\"Why not, Bill? Everything, I mean everything to the word, that I told you earlier was true; yes, it's going to be in my next book, but I based it off of what happened that night in Kenny Jassick's car. It really happened, Bill, and it was fun. I still love to suck a nice cock every now and then, but fucking's a hell of a lot more fun.\"\n\n\"Ally, stop it!\"\n\n\"Maybe I shouldn't admit this, but when I went off to college, I didn't have a crush on you but I'd much rather have had you to be my first than some asshat of a guy whose name I don't even remember. Yeah, it's years too late for that now, but you can still be mine, just once Bill. Tonight, okay?\"\n\n\"No, Ally,\" he said, struggling now to force out the words. \"Ally, you're like a daughter to me; I don't see you like that.\"\n\n\"Ummm, think I can change that?\" Her sex, covered only by a thin panty under her dress, was pressed against him and, he realized, his erection that shouldn't have been, the erection that now he couldn't control. She moved slowly, sliding herself against him through his pants and, in seconds, she was panting and moaning as she humped against him. \n\n\"Ally, no! That's enough!\" \n\n\"Bill, am I being bad?\" she asked coyly as she continued her rocking.\n\n\"God! You know you're being bad!\"\n\n\"Do I need to be spanked?\" \n\nHer smile was prim and far too playful, angering him. \"Oh, God, you're incorrigible. Stop it!\"\n\nShe was laughing as he physically picked her up and removed her from his lap. There was a big wet spot over the fly of his pants where she'd been rubbing, though he knew it wasn't from him. She rolled up in a ball, laughing and it wasn't too long before Bill, still tipsy, laughed, too.\n\nWhen they were calm again, Ally promised to behave so they sat on the couch, a respectable distance apart, and they started talking, careful to avoid anything of a sexual bent. Perhaps an hour later, they fell asleep, with Bill on the couch and Ally in the bed.\n\nSo when Lynn Marie Brady was yelling at them, Bill knew that Ally was technically telling the truth that he hadn't done anything to her and she hadn't done anything to him (well, too much, anyway, even though she'd tried). That she'd tried very hard to do something to herself using him as a working surface was best forgotten.\n\nSquinting, Bill rose up and found his glasses with Ally and Mrs. Brady still arguing. \n\n\"Ladies! Please forgive me for causing this, but I need to leave to let the two of you calm down.\"\n\n\"WRG, don't go!\"\n\n\"Ally, I have to. I'm your friend, but part of friendship is helping solve a problem when it's creating issues between others, like here with your mom. She may hate me, but she loves you and the two of you need to work this out, hug each other like a mother and daughter should, and move on.\" \n\nHe was fighting off a tear as he said it, hoping he hoped he hadn't messed things up too badly between Ally and Mrs. Brady.\n\nAlly had tears in her eyes, too, as she threw her arms around him, hugging him tight. She tipped her face up to kiss him, but he turned away, only to see Mrs. Brady staring daggers at him. Ally kissed his cheek instead of his lips, so, staring into Mrs. Brady's eyes, he kissed Ally's cheek in reply and said, \"Take care, Ally.\"\n\n***\n\nChapter 4\n\nThe phone rang when he was leaving the local Walmart with a basket full of supplies. Before he saw the store and thought about turning in to do his shopping, he'd been on his way home to sit and feel sorry for himself about how he'd found his young friend but wouldn't be able to be her friend anymore due to hormones.\n\nBoth hers and his. \n\nHe hated to admit it but it really had been hard resisting the urge to give in to what she wanted last night. He was still trying to put it out of his mind as he pulled into the grocery store parking lot a little later; the phone rang again and he ignored it once more. \n\nHe parked and was walking toward the store when the phone rang a third time. This time, he looked and saw Ally's name on the screen.\n\n\"Ally, what's wrong?\"\n\n\"WRG, you left without talking to me! And I really need that, to talk to you. I'm almost 29 years old and my bitch mother's treating me like I'm a kid again. Wait! I know, I shouldn't have called her that. Sorry.\"\n\nHe smiled to himself; self-policing was one of the personal issues that he'd tried to help her with when she was a kid, so he was glad to see she was still trying to practice that.\n\n\"I love her, but she's driving me crazy! I need you to talk to me, to help me work it out; I could always think more clearly when we talked on the computer in the old days.\"\n\n\"Ally, think about that, what you said. In the old days. You've grown up now and you've been handling yourself, your life, and your mom just fine for a lot of years since our last discussion. You don't need me now. You can do it on your own.\"\n\n\"I know,\" she said softly. \"I should have done this tour on my own, but Mom wanted to come, too, to help. She's probably helped too much, and now she thinks she's back in charge again, of my schedule, my desires...my body. I'm not a kid anymore; I'm a woman and I have needs, whether she wants to admit it or not.\"\n\n\"Ally, listen to me, Sweetheart. I love you like a daughter, which is why we're having this conversation, but you and your mom have both reminded me, pointedly, that you're not my daughter and you've also reminded me and yourself that you're an adult. A quite beautiful, extremely sexy, and seemingly sensual and very hungry adult, but between you and me, that means I can't trust either of us to do the right thing when we're alone together. Ally, I don't care about your sexual history. I don't care if you've screwed half the guys in the country. I won't be one of them.\"\n\n\"WRG, it's because of our age, isn't it?\"\n\n\"No! Ohhhhh! Well, that could have something to do with it if I had my head screwed on straight, but Ally, it's more than that. I don't love you in a let's get drunk and screw scenario.\" \n\nA lady getting a shopping cart looked around at him, staring. He frowned back at her, scaring her off, before he continued, more quietly. \"You're an absolutely beautiful young lady, so do you think, if I did, or even if I was a guy who didn't care a whit about love, do you think I wouldn't have taken you last night and screwed your brains out when I had the opportunity? When you were begging for it? Do you have a clue how hard it was to resist you when my body was begging to have that physical intimacy with you? That release? Ally, I haven't been with a woman since my wife died, but when I do, it's not going to be someone that I've cared about like I've cared about you for so long.\"\n\n\"Pfffffh. So that's it? We go back to you just being the mentor on the other end of the computer line? I send you a note when I have an issue, and you help me define it so I can work out a solution? Is that it?\"\n\n\"Ally, yes, whenever you need that, I'll be there for you, and maybe we can even get together when we find ourselves in the same town, but no more hotel rooms. I'll always love you, Ally, and I'll always try to help you however I can, but that stops when it comes to the physical side and helping you get yourself, or me, off.\"\n\n\"I'm sorry,\" she said sadly, quietly. \"I was so excited I didn't think about your feelings on everything. Are you mad at me?\"\n\n\"Maybe, just a tiny bit,\" he said, smiling at her obvious discomfort as she gave a little whine over the phone. \"But all's forgiven and I'm here for you, always, for anything other than, uh, sexual gratification.\"\n\n\"Thank you, WRG. I love you, I do, but, you're right, I'm an adult and I've been on my own and making my own choices for years, so I'll try to keep that to a platonic level.\"\n\n\"Thanks, Sweetheart. I love you, too. Equally platonically,\" he said before cringing at the horrible double adverb. \n\nShe seemed to catch it, too, for she laughed lightly. \"I'll talk to you soon, okay? I've got to go find Mom now and try to work things out with her.\"\n\n\"I'm looking forward to it,\" Bill agreed, \"and good luck with your mom. Bye.\"\n\n***\n\nWhen Bill arrived at home almost an hour later, there was a small sedan parked on the street next to his driveway. He was pulling into the garage when he saw someone getting out and coming around the car. Going outside, he saw Lynn Marie Brady striding up the driveway toward him. \n\n\"Mr. Humphries, where have you been? I've been waiting here for you for two hours and I'm about to bust. Can I use your bathroom?\"\n\nWaiting for him? Bill was confused. \"Mrs. Brady, what the hell are you doing here?\"\n\nShe stopped, stepping from foot to foot like a four year old, and he suddenly realized how serious she was. \"Looks like you better come on in if you don't want to squat behind a bush.\"\n\nShe gave him an awful face, but he wasn't sure how much was anger at him and how much was trying to keep from letting it fly. He unlocked the door and opened it for her. \"Left, first left, first right.\"\n\n\"Thank you!\" she said, almost flying past him as he turned off the alarm. She was probably entering the bathroom when he heard her cry. The door slammed, there was a small string of curses, and then there was a long, powerful, jetlike stream in the toilet bowl before he heard a sigh of relief, a flush, and running water. That, and he wasn't even trying to listen.\n\n\"Uh, Mr. Humphries?\" she said from inside the bathroom. \"I, ah, I think I left my purse in the rental car. Do you have a little plastic bag I can have?\"\n\n\"Here.\" He handed her a zip-type sandwich bag from the kitchen when she opened the door before she quickly closed it back. When she came out a few moments later, she was carrying the bag behind her, but he noticed a long wet stain on the bottom of her dress. While he hadn't noticed during her harrangue earlier in the morning, at least someone got to change clothes since the night before.\n\n\"Mrs. Brady, I hate to ask this but do you need a change of clothes while I do a quick load of laundry?\"\n\nShe looked quite sheepish before putting her hand over her mouth, as if suppressing a little laugh. \"Would it be too much trouble? I really thought I was doing well and could control it until I got out of the car and stood up. Then, it was like a tsunami hit me.\"\n\n\"Or something,\" he agreed, desperately trying to keep from bursting out laughing. \"Come on upstairs. I think we can find something for you.\"\n\n\"It's not ideal,\" he said a couple of minutes later, but here's one of Kelly's old sleep t-shirts, some boxer briefs, and a bathrobe to cover yourself. Go in the bathroom and get a shower, but hand your things out first and I'll run them through the washer.\"\n\nShe was hiding behind the door as she handed everything out through a narrow crack before closing and locking it. He took her things to the laundry room and started to toss them in the washer when he saw she'd handed him her bra, a pretty, nude, lacy thing, as well. He wasn't sure why it needed to be washed; maybe the pee had splashed? If so, he feared he was going to have a real mess to clean up downstairs. \n\nHe was about to drop the unpadded brassiere in the tub when he saw the strap and looked at it\u201438D\u2014before he thought of how he was invading her privacy. \"Oops,\" he said to himself before dropping it in, adding the liquid, and starting the express cycle. \n\nMrs. Brady came out of the bathroom a little later, her makeup washed away, holding her arms across her breasts. She had a surprisingly sheepish look. \"Excuse me, Mr. Humphries, but did I give you my bra for the washer, too?\"\n\n\"Yes, Ma'am, it's in there.\" \n\nShe turned away and gave a long sigh before she whispered to herself but just loud enough for him to overhear, \"Shit!\" \n\nHe smiled, remembering how Ally always told him her parents were so strict when she was growing up. He suspected that was where some of her issues originated, but now her mother, he saw, wasn't quite the saint he'd always imagined her to be.\n\n\"Ahem, Mrs. Brady, you look fine. How about coming downstairs for a cup of coffee? Or maybe tea or a soft drink, if you'd prefer?\"\n\nShe nodded. \"If you don't mind, I'll go out to the car to get my purse while you make the coffee. I feel a bit naked without my makeup.\"",
        "He looked at her and thought how nice she looked when she wasn't frowning. Barefooted, she was about 5'-4\", and in the robe, as much as it hid, he suspected she was about 130 to 135 pounds. Her hair was still damp, looking much darker than her usual brownish-blonde hair. \n\n\"Mrs. Brady, you're very pretty without the makeup, but I'll go grab your purse for you if you'll give me the car keys. Oh, and there's a blow dryer under the sink in the bathroom, if you'd like to dry your hair. I'm heading downstairs so you won't be disturbed.\"\n\n\"Thank you, Mr. Humphries. I appreciate it,\" she said, handing him the keys.\n\n\"You're welcome, Mrs. Brady. You're very welcome.\"\n\n***\n\n\"Your purse is hanging on the doorknob,\" he called through the bathroom door. He glanced around his bedroom, thankful that he'd made a practice of making his bed every day and not leaving too much of a mess. He picked up a couple of stray socks, threw them in the closet, and headed down to make the coffee.\n\nMrs. Brady came in minutes later. Her hair and makeup were fixed and she'd re-tied the robe, leaving more of the sleep shirt showing below. Her arms no longer covering her breasts, he noticed nice points and had to turn toward the sink as he calmed a sudden stirring he hadn't expected.\n\n\"How do you like your coffee, Mrs. Brady?\"\n\n\"Cream, no sugar, please. And please, call me Lynn Marie,\" she said softly.\n\n\"I, ah, don't think your husband would appreciate that.\"\n\n\"Gerald died nearly four years ago, Mr. Humphries. He always carried too much weight, he was very pent up, and his blood pressure was way too high as a result; one day it caught up with him. Please, Lynn Marie?\"\n\n\"I'm sorry, I really didn't know, Mrs., ah, Lynn Marie. Thank I'm Bill.\" \n\n\"What about Mrs. Humphries? I seem to remember a 'Mrs. WRG' in some of the talks way back when.\"\n\n\"She was hit crossing the street in the pedestrian walk, with the crosswalk light, a little over three years ago. The doctors operated and thought she'd be fine, but there was a weakened blood vessel in her brain that they couldn't see. It swelled suddenly\u2014the vessel burst, they think\u2014and she went into a lot of pain. All the doctors on duty were in surgery so they had to wait until one was available while she suffered before they could wheel her back into surgery. It was too late.\"\n\n\"I'm so sorry.\" \n\n\"Thank you. She died three years ago last Saturday.\"\n\n\"Oh, I'm sorry, Bill.\" The compassion on her face was evident, so he nodded to her in thanks and turned back to the counter to complete his work.\n\n\"Lynn Marie, I must admit that I really wasn't expecting you to be outside my house when I pulled up. What's going on?\"\n\nShe looked down. \"Ally and I had an even bigger fight after you left. She's grown, Bill, but I have a hard time seeing that at times, particularly when it comes to her body and her...ahem...\"\n\n\"Sexuality?\"\n\n\"Yeah, that's the word. She's been pushing me to move past Gerald for two years, so she said she didn't appreciate me barging in and driving you away. I think her words \"were to keep her from having any, too.\"\n\n\"Lynn Marie, nothing happened between us. She wanted it, but I had to stop it before it went too far.\" He looked her in the eyes. \"I swear, nothing happened between us.\"\n\n\"She told me that you gave her your address and that she was coming here to...to...\"\n\n\"What?\"\n\nLynn Marie was staring down at the table, her face flushed and her breathing shallow and rapid. She was obviously embarrassed and uncomfortable as she whispered, \"She said she was coming here to suck you dry and...do...you over and over and over again until she screamed and until it was time to catch our plane tomorrow afternoon. She even told me to pack her bag and bring it to the airport if she wasn't back in time.\"\n\nBill couldn't help himself; he burst out laughing and Lynn Marie gave him a horrified look of disbelief.\n\n\"Lynn Marie, I'm so sorry. Nothing happened between us last night and nothing like that would have happened in the event she'd come here. I actually spoke with her this afternoon and she was perfectly calm and rational. I hate to say it, but I suspect she was mad at you and was just yanking your chain.\"\n\nShe was shaking her head furiously. \"But she stormed out of the room, saying she was going to your house to do all those things. I didn't know what to do until I saw your card with your contact info on top of her laptop. I grabbed it and went after her, but I couldn't run in my shoes so I looked and looked around the hotel. When I couldn't find her, I beat her to the rental car somehow, so I took it and came here, hoping I could stop her and warn you.\"\n\nShe was obviously distraught so Bill suppressed his chuckle this time and patted her hand. \"Think about it. If she had that much of a head start, don't you think she'd have made it to your rental car first and been long gone? Like I said, she was mad at you and played a trick on you.\"\n\nShe hung her head. \"Shit. And I fell for it.\"\n\nBill was still barely restraining a smile as she realized she'd been had. She looked up at him and chuckled. \"That sneaky, sneaky girl. She got me back good, didn't she?\"\n\n\"I don't know, maybe she was trying to help me.\"\n\n\"What do you mean?\"\n\n\"Hey, I'm the one with the beautiful woman dressed in a bathrobe sitting at my kitchen table.\"\n\nShe turned red and glanced away, covering her eyes and trying to hide her embarrassment, so Bill concentrated on the cups in front of him. When it was all ready, he set a cup in front of her and one across for himself. \n\n\"That look about right?\" \n\n\"Yeah, that looks perfect. Thank you.\"\n\nHe sat down opposite her but, getting a good view of her chest across from him, he looked away, trying to avoid staring at her. \n\n\"Bill, are you okay?\"\n\nA little sigh slipped out inadvertently. \"Seriously, I, ah, haven't sat across from a beautiful woman in a bathrobe in over three years, since Crystal died. It's a bit more difficult to avoid acting, ah, unseemly, than I remember.\"\n\nShe had a twisted little grin on her face as she looked at him. \"Now that you've proven how gullible I am and I've proven how klutzy, how about if we consider this a casual meeting and relax. As long as we can both keep our hands to ourselves, I think we'll be okay, don't you?\"\n\nHe nodded and looked back at her, but his eyes were immediately drawn, as if by a tractor-beam, to those projecting, cloth-covered nipples. The disappointment clear on his face, he looked up at her and said, \"I'm sorry. I didn't mean to do that.\"\n\nShe gave a little smile and a nod. \"Don't be. The truth is, I've always had rather prominent nipples, so it's not your fault for noticing. I think that was one of the things that first attracted Gerald to me, though he never admitted it in all our years together. After that, Gerald always wanted me to wear thick, padded bras to help hide them from other men. That not only made me hot and uncomfortable, it made me look even more busty and probably drew more eyes than if I'd worn what I did before.\"\n\n\"That's not too surprising, I guess. I remember Ally saying that her dad was very strict.\"\n\n\"Yes, extremely. He was from a fundamentalist denomination and had, well, let's say 'rigid' beliefs. I loved him and lived the way he wanted because I loved and wanted to please him, not because it was the way I'd have chosen for myself.\"\n\n\"That's about what I suspected. Based on what she said, he seemed like he was\u2014I don't want to be mean, but\u2014stifling, to her. I think that's why she latched onto me as she did, because she needed a male figure who tried to treat her like a young woman rather than as a disciple with no other choice. To be frank, I'm surprised he allowed her to communicate with me, particularly when we got into discussions about teenage life, boys, and such.\"\n\n\"Umm, actually, he...he rarely knew about that. I monitored her communications and only let Gerald see the writing parts and the really mild stuff that passed between you; anything that dealt with touchier subjects, well, I tried to make sure he didn't see those. He caught her once and took away her computer privileges for a week or two, so we had to be more careful after that.\"\n\n\"I think I remember that. I was worried when she disappeared for a while, but then she was back with no explanation and I don't think I pried.\"\n\n\"I think she appreciated that, because she was scared he'd find out and cut her internet connection completely.\"\n\n\"Strict or vindictive? Sounds like both.\"\n\n\"Maybe. He didn't like us crossing him, so it didn't happen often, at least not until she started growing up. Before that, she was perfectly obedient most of the time.\"\n\n\"Funny how that works until one gets big enough to question what's really happening to and around them, isn't it?\"\n\n\"Yeah, I think so.\" She sipped her coffee before reaching across and taking his hand, slipping her fingers into his and giving a gentle squeeze. \"Bill, I must say, I really appreciate how you always stressed to Ally about talking to us about issues and how you didn't want her making up her mind solely based on what you were saying. That gave me a lot more trust in you over time.\"\n\n\"Thank you. My only goal, ever, was to help her.\" He gave her hand a gentle squeeze in reply, but neither let go then, and when she smiled at him for his comment, their hands remained in contact, however tenuously, on the table between them.\n\n\"So Ally's dad, ah, Gerald, gave her a hard time?\"\n\n\"Mmm, very, I'd say. I gave her what freedom I could, but she needed more since Gerald had an oppressive streak a mile wide and miles deep that stifled her, as you said, her mind and her creativity. When she started talking about going to live at WRG's house, it shocked and horrified me in a way, but in another, I could see her wanting the freedom, the ability to get out from under Gerald's thumb since I'd done something similar by marrying so young to get away from my parents.\"\n\n\"But you said you loved him and you married him, early even. How did he treat you?\"\n\nShe looked down, stirring her coffee purposelessly, watching the eddy to keep from looking at Bill as she gripped his fingers a bit more firmly. Bill patted her hand with his other hand and said, \"I'm sorry, Lynn Marie. I shouldn't have been so nosy. You don't need to answer\u2014\"\n\n\"No, Bill. It's okay,\" she said, trying to convince herself as much as him. \"Gerald treated me much the same as Ally, unfortunately, but I didn't realize it as much then because it was what I expected and accepted. We married just months out of high school\u2014me, anyway, since he was several years older and well established in his profession\u2014and I never got to go to college, to be on my own, to learn more about life or myself. No, I was a 'good wife,' loving him and letting him have his way on lots of things, only to learn later, after he was gone, that his interpretations were much stricter and a lot more cherry-picked than those of most denominations. I left that church after that, and was ostracized to a degree, but considering what I was leaving, I really didn't care.\"\n\n\"I'm sorry, Lynn Marie. That had to be tough on you.\"\n\n\"Small town girl desperately in love and wanting to get away from home makes it to the big city with her love? It was really exciting for a while until I came to understand the restrictions I was living under. Then, it was too late; Ally was born and I had to get by. I was a lot stricter with her than I should have been because of Gerald, but I did what I could to help her and give her as many opportunities as I could.\"\n\n\"What about now? You said he's been gone for several years. Are you seeing anyone?\"\n\nHer face fell as she pursed her lips and shook her head. \"No. I have way too much baggage, too many memories, so I can't let myself get close to anyone. I can't trust men and I, ah, I don't know if I can trust myself.\"\n\n\"So you've been on your own since Gerald died? Do you think you've made any progress on the things you were talking about? Learning to be yourself?\"\n\nHer hand rotated in his until their fingers were interlaced, their palms almost touching. \"I've tried. Don't tell Ally but I've even taken some college courses at night. The bank where I work pays for them and it gets me out of the apartment a few evenings a week. I'm thinking of trying to get an associate's degree and, just maybe, make something of myself. I've even been thinking of moving, to get a new start.\"\n\nBill squeezed her hand, pulling her palm up against his. \n\n\"Please, don't belittle yourself. You are something. You said you have a good job and you've kept it and grown in it over time. You've survived a relationship that many would term abusive and you've raised your daughter to be a fine young lady. You're a very pretty lady and you have a lot of living ahead of you.\" \n\n\"Thank you, Bill. You don't know me but it's very sweet for you to say that.\"\n\n\"No, I don't know you well, but I know some things about you and, despite these old, tired eyes, they still see well enough that I can recognize a beautiful woman when I see one.\" He smiled at her as his hand gave hers a little squeeze before his eyes glanced down for a second and then back up at her little smile. \n\nShe looked at him for a bit as if studying him before glancing down at her breasts for several seconds and then back up at him. His eyes had followed hers, admiring her shape for a moment before his embarrassment about leering returned. \n\n\"Bill, may I ask you a very personal question?\"\n\n\"What?\"\n\n\"Have you...been with...many women?\"\n\nHe took a deep breath and let it out slowly. \"No. Not many. Crys and I started dating when I was a senior and she was a junior in high school. I went off to college and she joined me the next year. We were each other's firsts then and we thought it would be so easy, but she broke up with me when I was a junior, thinking we needed to 'see other people.' We both dated some that year and we each had a few lovers, but by the end of the year, we realized that the sex we'd had wasn't love. We still loved each other so we got back together late that year and were together from then on. Crys worked for several years before Kelly was born, but those...those were fun, loving years.\" \n\nLynn Marie was nodding, a hint of melancholy on her face, so instead of reversing the question to her, Bill paused, giving her time to lead the conversation where she wished.\n\nShe answered without being asked. \"Gerald was my first...and my only. I suspect now that he wasn't a very good lover, though. I've watched some videos online over the past couple of years and seen some things I never dreamed of. He actually treated me well in bed and was very respectful, unlike a lot of the guys in those videos, but he wasn't all that good either. Missionary position, slam, bam, it's over, ma'am.\"\n\n\"Lynn Marie, most of those videos are made by professionals and most of them are fake to at least some extent. They're catering to guys who think women like it rough, like having spunk in their face, or like having a log shoved down their throat or up their rear, having their hair pulled and such. Some women may, but I suspect the percentage in those videos is somewhat out of kilter with everyday reality.\"\n\n\"Oh, I know. I was a bit sheltered, not stupid, you know,\" she said with a laugh. \"Gerald just never tried to do the things they do in the videos, any of the things, to make a woman orgasm. Don't get me wrong, it felt good sometimes, but he never could get me quite to the point to get me off and once he was done...well, it was done, over. We worked the same hours so we were rarely apart except when at work, but I came to relish my privacy in those occasional times when he had to go to the store or whatever. I got to where I could, ah, rub out a good one really quick.\"\n\nShe was smiling at the thought, those precious little moments that had made life more liveable in what must have often been an often miserable situation.\n\nBill was smiling, too, at the thought of how her knees must have been drawn up with her feet tucked under her as she did it. Her hand must have drifted down at first, unsure, and then, perhaps, eventually becoming a blur as she feared her husband's return. His blood surged at the thought, his member throbbing and coming to life unexpectedly, and he looked back into her eyes staring into his.\n\n\"Bill, I'm sorry, but I'm getting really hot in this robe.\"\n\nHe rose up to help her, exposing the tightness in his pants before he realized it and could turn. With a little smile, she turned instead, allowing him to slip the robe from her shoulders. She tipped back a little then and he caught her but she leaned against his chest and pulled his arm around her. Her breathing was shallow as she looked back at him. \n\n\"Bill, I didn't know your name back then, you were just Ally's WRG, but I trusted you with my daughter,\" she said almost breathlessly. \"It's been over four years since Gerald. Do...do you think...I can, ahem, trust myself to you for today? And you to me?\"\n\nHis other arm encircling her was all the answer she needed for she turned a bit more to catch his lips over her shoulder. She turned her body then, to face him, her breasts pressed against him and her mons catching his semi-hard cock and giving it encouragement to do more as she rocked against it. Her hands ran over his back, catching handfuls of his shirt before pulling it out of his khakis, and then struggling to get it off of him, over his head. \n\nBill's hands were rubbing her back, pressing her against him again as soon as his shirt was free. He ran his left hand to the front and cupped the bottom of her breast, giving it a little squeeze before pushing it up to free her luscious nipple from his chest. He kissed it through her sleep t-shirt, kissing it again and again, before pulling it between his lips.\n\nLynn Marie moaned at the feeling, almost electric, shooting through her, as Bill took her hand and led her upstairs. He picked her up there, carrying her down the hall and into his bedroom. He set her on the bed, a little harder than intended, causing her to bounce on the bed and giggle as she pulled him down on top of her. He was laughing, too, then, as he kissed her, trying to get the big sleep T off of her while she was undoing his belt.\n\nMoments later, they were on the bed facing each other, him in his boxer briefs and socks, and her wearing another pair of his underwear. She grinned as he stripped the socks from his feet but then he paused, looking at her. \n\n\"Lynn Marie, are you certain?\"\n\n\"Never more, Bill. And you?\"\n\nAfter so much grief and uncertainty, this felt right; Crys would be happy for him. He nodded. \"Very much so.\" \n\nShe hooked his boxer briefs and pushed them down as he raised himself, freeing his member, leading her to forget the underwear as she took him in both hands and started to pump. \n\n\"No fair,\" he said, \"though I'm not complaining, mind you.\"\n\nShe laughed. \"Let me know if I do anything wrong.\"\n\nBill gave a light moan. \"I don't think you have to worry about that.\"\n\nHer breasts were wonders in his hands, soft and pliable, yet firm enough to hold their shape as he held and caressed them, and were capped with large areolas with those long, hard nipples that had drawn his eyes. His tongue flicked a nipple, causing it to quiver. A second flick and a third was all he could do before, like the wise old owl in the commercial, he'd had enough and sucked it into his mouth, while flicking the tip with his tongue. \n\n\"Mmmmmmm!\" moaned Lynn Marie, as her head rolled back. Bill moved her back and shifted around, pulling her other breast up and together where he kissed both for a moment before shifting over to the more neglected one.\n\nHe helped her onto her back and stripped her boxers, too. He got between her legs, which she pulled up, opening her knees wide, allowing his swollen head to rub across the little patch of close-cut hair above her sex. He rubbed across it a few more times before shifting his attention back to her breasts. He kissed and caressed them, eliciting happy moans from Lynn Marie, but then started to move down, lightly kissing along the way, her tummy and around her belly button, and then further still. ",
        "Lynn Marie's hands caught his head and entwined in his hair as he kissed her mound. She started to close her legs but Bill caught them gently. \n\n\"Are you okay?\" he said, looking up at her from just above her mons.\n\n\"Gerald never...I've never...just the videos,\" she whispered nervously. \"I don't know....\"\n\n\"Just relax...and enjoy.\" He kissed her patch again before beginning to rub his hands up and down both of her thighs, from her buttocks to her knees and back. This he did several times and then brushed a kiss on her inner thigh. \n\nShe quivered at that and cooed, her breath catching several times, repeatedly, as he continued his kisses, making the massaging movements on her legs shorter and shorter until his fingers were still and it was his thumbs rubbing her perineum and her outer labia. Lynn Marie was clutching his hair as she lifted her rear off the mattress and tried to offer herself to him.\n\nBill was enjoying the view. While not shaved, her hair was trimmed short and it ringed her puffy outer labia topped by a hood, with a bit of inner lips projecting out near the front. He kissed one thigh, the other, and then sucked lightly on those delicacies before moving to her outer lips and working inward. \n\nLynn Marie was squirming as he kissed and massaged her, his thumbs pulling her open a little more ever few rounds, with Bill sweeping his tongue through her cleft before continuing her torture.\n\n\"Bill, please?\" she begged as she twisted, trying to catch his tongue or lips on her aching clit. \"I need AAAAGH!\"\n\nHe timed it to her plea, and then started working around her pleasure pea, around and around a few times while she still held him by his hair. She kept him in position right over it, not letting him move away. He started flicking her clit with his tongue, slow at first, and then faster as her moans increased. He kept everything else the same as she neared her release until he slid two fingers in her wetness, focusing on her G-spot. Her orgasm came quickly then, sweeping over and through her as she'd never experienced it before, so strong that she clamped her legs tight around his head as she felt herself flooding inside. \n\nPeeling her legs open, Bill suckled on her pussy, enjoying her juice and the intimacy of her hidden treasure as he dipped his tongue and a finger into her depths. Lynn Marie's body was heaving so, reluctantly, he let her go and moved up to hold her. \n\n\"My God, Bill, I've given myself orgasms but I've never felt anything like that. That was...heaven on earth.\"\n\nHe kissed her shoulder, her neck, and up to her chin before moving to her lips. They kissed for some moments, and then he shifted back to her cheek and neck to allow her to finish catching her breath.\n\nShe rolled to her side then and started kissing him back before reaching down and retaking his hardness. \"Bill, can we make love now? I'll do it however you say, anything, whatever you want.\"\n\n\"Lynn Marie, this has to be good for you, and it has to be comfortable, so we're going to start slow and simple, okay? We can play and experiment later. Right now, I want to be in you, looking into your eyes, kissing your gorgeous boobies, while I make slow, gentle love to you.\" \n\nHis eyes asked if that was okay with her, and, with her breathing almost back to normal, she nodded, rolling back and opening herself up to him. He moved around and rubbed his swollen head through her cleft a few times before she reached down and directed him in, moving herself a bit to catch him. \"Now, get in me, mister, and do me.\"\n\nHappy with her new assertiveness, he rocked forward gently, feeling her open to take a little more of him and then more still as he did it again. A third and fourth followed with Lynn Marie's eyes trying to focus on him as he sank further and further into her depths. On the next, he slipped and slid all the way inside until their pubic bones were pressed as hard against each other as they could.\n\n\"Mmmmm,\" she moaned as she stretched up to kiss him. Bill leaned, cupping her breast with one hand as he supported himself with the other. He started rocking, slowly out, slowly in, as they kissed, with Lynn Marie getting the rhythm and starting to move with him. Slow and steady they went, with Bill trying to bury himself into every part of her depths and her trying to hold him tight.\n\nHer face, so pretty, transformed from relaxed to something more over time as her brows lowered, her mouth twisted a bit, and she started biting on her lower lip. A slight moan escaped her lips moments later and Bill smiled as he continued his slow ride.\n\n\"It's just us, sweetheart. You can let it out,\" he whispered. \"As quiet or as loud as you like, it doesn't matter. No one else will hear.\"\n\nShe smiled at him for giving her that option and over the next few strokes, she adjusted her breathing as she let out gentle moans with each. As her breathing sped up, the still small moans coming faster, Bill started going faster, too, rolling in with a bit more force, feeling his balls beginning to smack lightly against her. She felt the change and heard the sound, and a smile came over her face. \n\n\"That's good, Bill. Faster. Do me faster. Fuck me. Fuck me harder! My God, I've always wanted to say that! Fuck!\"\n\nHe smiled at her enthusiasm and tried to comply, increasing his speed and smacking harder against her even as he felt sorry for her and how her sexuality must have been pent up by her husband for all those years. There was little time to think of that, though. While he'd relieved himself from time to time since Crystal's death, this was different with Lynn Marie's sex clinging to him so desperately as he stroked it. He was several years older and out of practice, so, as he felt the beginning of that tingling feeling deep inside, he knew he wouldn't be able to last long.\n\nAs much as he liked feeling her against him as he moved, he lifted himself up a bit, making it easier to breath and to thrust harder. It also allowed him to drop a hand between them, placing his palm on her triangle patch and his thumb to her clit. Since she was already excited and since he didn't feel he had a lot of time, he hit the accelerator, brushing it lightly a few times before increasing speed and then floorboarding it, flicking it as fast as he could in hopes that it would be enough for her to reach her orgasm with him.\n\nLynn Marie's legs wrapped behind him, pressing him against her as her hands made tight firsts, her fingers turning white. Her face contorted in a fight to prolong the feeling while her moans were short, frequent, and louder. She felt her excitement building, her second orgasm coming and then taking her. She pushed Bill's hand away and then threw her arms around him, trying to pull him toward her.\n\nBill wasn't quite done, though, so he gave a mighty slam against her and then one more as he tipped over the edge, shooting into her. Buried deep inside, he fired off several more shots before lowering himself down and holding her in his arms.\n\nNo words were spoken as they held each other while they regained control of their breathing. When they did, Bill gave her a couple little kisses on her earlobe and cheek before looking into her eyes.\n\n\"Bill...it's never felt like that before. Ever. I'll never forget this. Thank you.\"\n\n\"Then that gives us a goal, Lynn Marie. We'll have to make the next time even better.\"\n\n\"Next time?\" She grinned.\n\n***\n\nWith Bill being sixty, the next time had to wait a while, so they held each other, still naked, under the sheets after a quick clean up.\n\nLynn Marie said, \"Bill, I'm sorry. I should probably go and let you get on with your day.\"\n\n\"Nope. You want to know what you probably should do? It's to hush about such silly ideas and let us hold each other while we feel so good.\"\n\n\"Mmmm, if you're good with that, I'm definitely good with it,\" she said, smiling, snuggling in tight against him.\n\nBill held her close, but his mind was racing. Crys was gone; her Gerald was long gone, too, but they'd found comfort in each other's arms after a long stretch where there was no comfort to be found anywhere. What had happened to bring them to this point, where they lay comfortably in each other's arms, relishing the lovely release they'd each needed for so long? \n\nThat raised another question in Bill's mind. Was this a one-night stand, or could it be something more? They didn't know each other well at all, so was it something they both needed on a purely physical level or had they made some deeper, inner connection that he didn't yet realize? He didn't know and didn't see any easy answers.\n\nLynn Marie was thinking, too, but she had other thoughts in addition to those she secretly shared with him. She turned toward him, a look of apprehensiveness crossing her face. \"Bill, I didn't plan this; I loved it and I'd do it again in a heartbeat, over and over, but...well, I'm 48, I'm still supposedly fertile, but I'm not on the pill. Is there a pharmacy nearby where I can get a morning, ah, afternoon after pill?\"\n\nHe gave her a hug. \"No need, Lynn Marie. I had a vasectomy shortly after Kelly was born. The doctors said it wasn't safe for Crys to have another child.\"\n\nRelief flashed across her face for a moment. With that concern gone, she asked, \"Did you two want more?\"\n\n\"We thought about adopting but we both had jobs and Kelly was a real handful, so we never did. I think that was Crys's biggest disappointment in her life, that she never got pregnant again. She was sick as a dog for the first trimester and then horny as a she-devil for the second and most of the third. That's when the doctor found the problem, and Kelly was delivered several weeks early.\"\n\n\"So Crys did, but did you?\"\n\n\"After we had Kelly and Crys was safe, it just wasn't as important to me, at least until Ally came along and I tried to help her. I told you that she was like a daughter to me; Crys used to tease me about Ally being the daughter I never had. It may have been tougher on Kelly, though. She was an only child, but she always wanted a sister. She was in a sorority in college, which seemed to help her.\"\n\n\"That sounds just like Ally. Gerald didn't want kids at all, but I got pregnant and wasn't going to give her up. He made me go on the pill for years, though I never liked it. Knowing I'd never need it again, I never took another after his heart attack.\"\n\nThey continued to talk throughout the rest of the afternoon and into the evening, getting to know each other better between a couple more bouts of long-overdue love making. While Bill found he couldn't come every time, he could do a lot for Lynn Marie, and that was what was important. It felt so natural, so right, spending time with her, though he wasn't sure if it was because she was a very pretty woman and there with him or if it was because there was actually a spark between them. Bill didn't know and really didn't care at the moment, but he knew he wanted to find out eventually. \n\nAs they finished dinner\u2014from a good local restaurant courtesy of one of the rideshare delivery services\u2014and a bottle of wine, Bill reached across the dining room table and took her hand. \"Lynn Marie, this has been a really special day and I'm finding that I like you a lot.\"\n\n\"But?\" she asked, nodding.\n\n\"Yeah, there's a but, unfortunately, so I'll just say it. It's been great, making me feel alive inside again for the first time in so, so long, and it appears to have done the same for you.\"\n\n\"Definitely.\"\n\n\"I'm really glad. The thing is, we don't know each other very well\u2014\"\n\n\"And we live a long way apart,\" she added, guessing where he was going.\n\n\"Right. So where are we going with this? Is this just today or do you want to see where it goes?\"\n\n\"I don't know, Bill...but I think I'd like for us to give it enough time to see if there's something as good there as it felt.\"\n\n\"But we just said we live miles and miles apart.\"\n\n\"Oh, that's actually the easy part, I think,\" she said, patting his hand. \"I'm a bank employee in the area with the highest cost of living in the country. Ally's my only significant family and she's grown with her own place. Gerald basically screwed up our relationship with any of the friends we once had. Add all that together and I was already thinking of moving to get a new start in a less expensive location. Bill, if this were to work out between us, I don't think that would be a big problem. There might be a bigger problem, though.\"\n\n\"Yeah, what's Ally going to think if she finds out we've done this?\"\n\nLynn Marie nodded. \"I can see the headline now: 'Mom steals young author's potential boyfriend and daughter freaks. Story at 11.'\"\n\nBill laughed but shook his head as he rose from the table and took her into his arms. \"I don't know, but I suspect she'll take it pretty well after she gets over the huge shock. She's a very smart girl, she loves you, and I think she cares a lot about me\u2014platonically as I've asked, I hope. It may take a little time, but I suspect she'll eventually get over it and be happy for us, whether for today or forever.\"\n\nLynn Marie snuggled up against him. \"We can hope, Bill. We can only hope. For now, do you think we can put the future out of our minds and go upstairs and work on making more memories today?\"\n\n***\n\nEpilogue\n\nLate that evening, Ally was in her hotel room typing a few lines on one of her story ideas when the phone rang. She grabbed for it; on seeing the caller's name on the screen, she hit the Accept icon excitedly.\n\n\"Hi!\"\n\n\"Hi, Ally! Checking in again. What's happening?\"\n\n\"Not sure. Let me see.\" She switched windows on the laptop to the phone finder app. Since Ally regularly took care of her mother's technology needs, Lynn Marie didn't know her phone was linked to Ally's computer. \n\n\"Still there, hasn't moved since last time.\"\n\n\"Have you heard from her?\"\n\n\"Yeah, just a little after your last call. She sent me a text saying she'd run into a friend, that that they were about to sit down to dinner, and, I quote, 'Don't wait up.'\"\n\nThe caller's little squeal over the line matched Ally's when she'd first received the message.\n\n\"We can't know what's happening, but it's getting late and I deliberately set the flight out of town late tomorrow to, assuming this worked, give them time if she wanted to stay over. I even thought about driving over and letting the air out of her tires, just to be sure.\"\n\n\"Ally! You're evil!\" The caller laughed naughtily, though.\n\n\"No, I just want this done and want them to be happy, whether for the night or maybe even for always, I don't care. Break the damn wall they've each erected so they can move on, start living again, and find happiness somewhere.\"\n\n\"I know. I know, Little Sis. It's been hard on him for the past few years; he's refused to move on\u2014and you've said the same about her\u2014so I hope they don't hate us for taking the initiative.\"\n\n\"Don't know about you, but I'm planning to let nature take its course\u2014oh, maybe push it along a bit, if needed\u2014but I'm not actually telling them squat.\"\n\nThe caller laughed. \"You always were a sneaky one, Ally. I think it has to do with the plots for your stories and all those plays you were in while we were in college. Say, speaking of stories, did you show your publisher the manuscript I sent you?\"\n\n\"I sent it with the final manuscript for my next book and they loved it. It needs some tweaking to make it commercially successful, but they said that will be easy. They're putting together the paperwork to send him, but I asked them to wait until after this weekend to contact him, though. I didn't want his upcoming writing success to get in the way of his love life...or mess up our plan.\"\n\n\"Your plan, Little Sis. I was just the shill, one of the bit players who gave him a little nudge, but a very willing one, in your scam. You're the maestro, the master grifter, directing the orchestra and pulling the strings, and I just hope it works out.\"\n\nIt was Ally's turn to laugh. \"Keep the faith, Big Sis. We can only hope,\" she said, repeating one of her mother's favorite lines.\n\n\"Oh, sorry, Ally, got to go. The boys are calling me. Send me a message if anything happens, okay?\"\n\n\"Will do, Big Sis! Rho Xi Alpha, always!\"\n\n\"Rho Xi Alpha, forever, Little Sis! Bye!\"\n\nAlly clicked off the phone and looked at the phone finder app on her laptop. Her mom was still at WRG's house so she ended the app and shut down the computer, leaving them together in privacy as she sat down and smiled, remembering that first exchange of messages all those years before.\n\nPM from Cheer-Bear123: Hi, AlleyKat99, why are you talking to WesternRomanceGuy? He's my dad; I found your username from your PM when he left it on the screen and forgot to log out (again) after he read my story.\n\nPM from AlleyKat99: Hi, Cheer-Bear123, Nice to meet you. I'm Ally. You're so lucky to have a dad who'll read your story and talk with you. Mine won't read my stories and he treats me like I'm supposed to accept everything he says as gospel, not questioning any of it, and not asking about anything else. He won't even let me have any close friends and my only time online is while he's at work or asleep.\n\nPM from Cheer-Bear123: Ally, so sorry, but you're right, I have a great dad (most of the time) and I'm very lucky. I'll be your friend if you'd like. I'm Kelly.\n\nWhile Ally had never gotten to go live at WRG's house when she was in high school as she so fervently wished, with Kelly's dad as the compassionate and caring father figure she needed and, more importantly, with Kelly as the big sister she'd always wanted, Kelly had convinced her to apply at Bickford, where she'd studied English, acting, and creative writing. They'd been able to spend three years together as sorority sisters, with Kelly as her Big Sis and best friend, and though they'd ended up on opposite sides of the country afterward, they'd remained great friends since. \n\nAs such, she knew she'd never tell Kelly just how far her play acting had to go to kickstart Bill's libido but since she'd had a blast with it (and had been quite prepared to go as far as it took) and trusted that he wouldn't tell either, she wasn't worried. \n\nYes, thought Ally, she would always consider herself fortunate that Kelly had reached out to her all those years ago when Kelly's dad had been her online mentor.\n\nThe End \n\n____________________\n\nAuthor's Note:\n\nThanks for reading and for your votes, favorites, follows, and comments. All are greatly appreciated. If you enjoyed this, I would welcome and encourage you to check out some of my other stories. Thanks!"
    ],
    "authorname": "SouthernCrossfire",
    "tags": [
        "mature",
        "romance",
        "loss",
        "cowgirl",
        "friendship",
        "online friends",
        "oral sex",
        "getting over grief",
        "tender moments",
        "countertop sex"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/mentor-3"
}