{
    "title": "My Favorite Girl Pt. 02",
    "pages": [
        "*This is a work of fiction. Names, characters, businesses, places, events, and incidents are either products of the author's imagination or used in a fictitious manor. Any resemblance to actual events is purely coincidental. All character's involved in sexual activity are 18 or older.*\n\n----------------------------------------------------------- Part 2 ---------------------------------------------------\n\n------------------------------------------------------ Wednesday ------------------------------------------------\n\nI woke up the next morning a little later than I had been the past couple of days. I got up and headed for the bathroom to get changed so I could get going. I changed into my golf clothes, brushed my teeth, did my business, and then quietly left the bathroom.\n\n\"Jay?\" Emma whispered. \"You got five minutes to spare?\"\n\nShe was lying on her stomach on top of the covers. Her legs were spread apart leaving her puss exposed to me as I came from the bathroom. What a beautiful sight to see first thing in the morning. And, I did have five to spare. For her, like she was right now, I'd give her all day if she needed me too. There was just one problem though. I walked around and sat on the bed next to her.\n\n\"I'd give you all day if you asked,\" I whispered. My hand went to her cheeks and slowly circled the firm flesh as I spoke.\n\nShe looked at me and gave a soft growl as she chewed on her bottom lip. My fingers dipped between her legs and touched her wet sex in the middle. My fingers were coated with her sticky wetness as I opened her folds and dipped one inside.\n\n\"You're forgetting one rather important detail though,\" I continued.\n\n\"You can't blow golf off for one day?\" she whimpered.\n\n\"I can,\" I whispered as my finger slipped in and out of her. There was the slightest turn of her hips now.\n\nShe looked at me. \"Why are you still sitting there then? Can't you feel how wet I am?\"\n\n\"I can,\" I whispered again.\n\n\"Jason,\" she whined, her sing song voice coming out now. \"Come on then.\"\n\n\"What story should I tell your dad when I go to close the door?\" I asked.\n\n\"What?\"\n\n\"The door is wide open and he's up drinking coffee and reading the newspaper already.\"\n\n\"Seriously?\" she hissed. \"Are you kidding me right now?\"\n\n\"I wish I was, but I'm willing to try if you are.\"\n\nShe sighed in defeat.\n\n\"I take that as a no?\"\n\n\"You better go golfing,\" she sighed again. \"Before I make us do something stupid.\"\n\n\"Sorry, Em,\" I smiled.\n\nI slipped my finger from her wetness then leaned down next to her ear. I placed a wet kiss right behind her ear then let my tongue linger for a second. She growled and twisted as I pulled away then blew on her skin before I whispered in her ear.\n\n\"I'll be back right around noon time. You, me, and that sexy yellow bikini have a date on the beach.\" I leaned down and kissed her right where I had a moment ago. \"The things I'm going to do to you later.\"\n\n\"I can't wait,\" she said softly then rolled over to tuck herself back under the covers.\n\nI stood now and adjusted myself to try and hide my hard-on pressing my pants outward. I kept looking at her as she lay there looking back up at me. She looked so sexy and so turned on right now. I nodded my head towards the bathroom and waited for her response. Her finger went to her chin as she pretended to think for a moment.\n\n\"Later,\" she replied.\n\n\"Ok,\" I agreed and left her laying in the bed.\n\nI grabbed my bag and not a moment too soon. Uncle Ronnie had come into the room just as I was letting the door close. I quickly booked it down the hallway to put some distance between me and the door just in case he was coming in to talk to me. I loved Uncle Ronnie, but he was a lot to handle first thing in the morning.\n\nI stopped by the front desk before I headed to the cart corral to get some information on charter fishing trips. They gave me a few names that they had as independent contractors that they used to send guests. I started calling and left a few messages as I got the cart and headed for the range. By the time I reached the range I had us a trip booked for tomorrow morning.\n\n\"Where have you been?\" Hank called. \"I've been waiting.\"\n\n\"Sorry, I guess,\" I replied sarcastically. \"I didn't know we had a set in stone tee time.\"\n\n\"Well,\" he hissed. \"We do. It's in fifteen minutes.\"\n\n\"You're going to have to go without me then,\" I replied calmly. \"I need at least a half an hour to warm up and that's even pushing it.\"\n\n\"Are you kidding me right now?\" he groaned.\n\n\"No, I'm not. I've got to get everything loose. I can't risk an injury playing a meaningless round of golf while I'm on vacation. I've got to warm up the right way or I can't go.\"\n\n\"Come find me when you're ready then,\" he scorned. \"I've got to find Jack and Bill to let them know we've got to wait on Mr. big shot to get loose.\"\n\n\"Ok,\" I said calmly. \"I'll see you in a little while.\"\n\nHe spun around hard in the cart making it slide on the wet grass. When he regained control, the cart jerked hard and sent half his golf balls out of the open pocket in his golf bag. They bounced in every direction as he sped away. He was so hot right now he didn't even bother to stop and pick them up. I couldn't help but smile as I continued on my way to the driving range and took my time warming up.\n\nI texted Emma once the round was over and I was on my way back to the room.\n\n'I'm on my way back.'\n\n'K I'll get ready. Did u win?'\n\n'I killed the back 9 and won by 9 today. Was down by 2 on front 9.'\n\nI was waiting for her to respond when my phone started ringing. I waited for the number to show before deciding if I was going to answer it. It was an odd number that I didn't recognize at first. It dawned on me that it was a satellite phone and only one person I knew used one of those. I reluctantly answered the phone.\n\n\"Hey mom.\" There was a delay before she responded.\n\n\"Hi, Jason. How did you know it was me?\"\n\n\"Sat phone mom. Who else uses a sat phone?\"\n\n\"One of your girlfriends, maybe,\" she joked as she tried to be funny.\n\n\"Probably not,\" I sighed. \"All my girlfriends are here and can use normal phones.\"\n\n\"I was just trying to be funny,\" she offered.\n\n\"I know,\" I replied. I was thinking about saying she should try harder, but I'd let it slide for now and behave. I was in a good mood at the moment.\n\n\"I didn't wake you, did I?\" she questioned.\n\n\"No, it's just about noon right now. I've been up since the sun came up.\"\n\n\"Ohhh. How come you were up so early?\"\n\n\"Golf,\" I sighed. \"It's part of my everyday routine.\"\n\n\"Right,\" she said like she suddenly remembered what my passion was. \"So, how is that going? Are you doing good?\"\n\n\"I'm doing alright,\" I offered. \"I've got a little hang up with my short game, so I've been trying to work on that. It's coming along. Hold on just a second, mom.\"\n\nI arrived at the cart corral and got off. The cart guy and the bellhop both came hustling over. One was taking the cart and the other grabbed my clubs from the back. I held the phone away from my mouth so I could talk.\n\n\"116A. I've got to take this call out here so just knock. Somebody should be there. I'll square you up in a minute. I'll be in the lobby.\"\n\n\"That's ok,\" he smiled. \"You got me the last time.\"\n\nI headed inside and found a seat next to the door I had just come in. I didn't want to have this conversation in front of Emma or whoever else was still in the room if I didn't have to. I never knew what my mom wanted when she called, so I'd rather have this conversation out here instead of getting everybody's two cents on what I should do or say to her. I'd already spent half of my life dealing with my mom by now, so I considered myself a pro at it and I didn't need anyone's help.\n\n\"Ok, I'm back,\" I said to my mom. \"Sorry about that.\"\n\n\"What's going on?\" she asked. \"Are you busy and can't talk?\"\n\n\"No, I've got time. I was just getting my golf bag put away.\"\n\n\"Oh. You're golfing right now?\"\n\n\"Nope, just finishing up for the day,\" I replied.\n\n\"Oh. So, have you won yet this year?\"\n\n\"As a team we have won a couple,\" I replied. \"As far as me, alone, I've finished in the top five a few times, but I haven't gotten over the hump yet.\"\n\n\"Well... you just have to stick with it,\" she cheered. \"Maybe I'll come watch you play someday.\"\n\n\"That didn't turn out very well the last time,\" I recalled.\n\n\"That's true,\" she laughed a little.\n\n\"So, what have you been doing?\" I asked to change the subject and get to the bottom of why she called without coming right out and saying it.\n\n\"Well... right now I'm trying to organize a work crew to put the roof on the community room that we have been working on for the past few months.\"\n\n\"Yeah? How's that going?\"\n\n\"Ok, I guess,\" she sighed. \"I made a few calls today and I'm waiting to hear back so I figured since I have the phone for a little while I'd give you a call to see how you are.\"\n\n\"Oh,\" I said acting interested. \"You know, you don't have to call me when you're killing time? You can call me anytime like a normal mom would.\"\n\n\"I know,\" she replied. \"I'm sorry. I get caught up and just lose track of time.\"\n\n\"I know,\" I quipped. \"I've gotten used to it by now.\"\n\nThere was a long pause and I had to pull the phone away from my face to see if the call had dropped. The minute counter was still going so I knew she was still on the other end.\n\n\"So...... I was thinking about coming to Texas to spend spring break with you,\" she said.\n\n\"Wow,\" I replied. \"The first one in ten years.\"\n\n\"I know,\" she sighed. \"But I wanted to spend your first spring break as a college kid with you.\"\n\n\"Do you have a time machine?\" I asked.\n\n\"No. Why?\"\n\n\"Because... I'm already on spring break.\"\n\n\"Really?\" she asked in shock. \"You are?\"\n\n\"Yeah, it started on Saturday evening for me.\"\n\n\"Oh, shoot,\" she hissed. \"I'm sorry. I thought it was next week.\"\n\n\"Afraid not.\"\n\n\"What are you up to then?\" she asked. \"Are you staying out of trouble?\"\n\n\"Yeah,\" I replied. \"I'm down in Florida with Uncle Ronnie, Aunt Joy, and Emma.\"\n\n\"Oh, you went to the house?\"\n\n\"No, we stayed clear of the east coast. We went to a golf resort on the west coast. It's actually a pretty cool place.\"\n\n\"Why didn't you guys stay at the house? Your Uncle Ronnie can't afford to be spending that kind of money. You shouldn't have made him take you to a golf resort. They are probably bored out of their minds.\"\n\n\"Mom,\" I hissed. \"Slow down. I didn't have anything to do with the trip, it was all Uncle Ronnie. There's a ton of stuff to do around here besides golfing. I've seen them a couple of times since we got here. They've been busy soaking up the sun on the beach and getting couples massages.\"\n\n\"Oh, that's nice.\"\n\n\"Yeah, it's not bad,\" I said. \"I didn't think it would be worth the trip, but so far it's been good.\"\n\n\"When was the last time you were at the house?\" she questioned.\n\nOh boy I thought, here we go with the house again.\n\n\"Last summer, I spent a week there,\" I replied. \"It was weird without dad there though.\"\n\n\"You should think about selling the house if you're not going to use it,\" she said.\n\n\"I'm not using it because I'm at college, mom,\" I hissed. \"I'll use it once I'm done with school if I'm not out on the tour by then.\"\n\n\"I think it's kind of silly of you to keep it. It's just rotting there with nobody in it.\"\n\n\"I'm not selling it,\" I cried. \"It's the last thing I have that was dads and it has a lot of memories in it.\"\n\n\"I know, but what are you going to do with it once you are done with school?\"\n\n\"Mom? Did you call to bitch at me about the house or did you call to talk? Or do you need some more money to buy something for some village somewhere?\"\n\n\"I just think it's a waste,\" she replied.\n\n\"So, you called to bitch about the house then,\" I sighed.\n\n\"Jeez, Jason,\" Emma called. \"I thought you'd text me when you got back, not send your clubs to the room to let me know you were here. How the heck are you going to go to the beach in golfing pants?\"\n\nI held my finger up to my lips to hush her as she sat in the chair next to me. I pointed to the phone and mouthed I'd be done in a minute.\n\n\"Who is it?\" Emma asked quietly.\n\nI put my finger in my ear and leaned away to silence the noise in the lobby so I could hear better. Mom was talking but I was having a hard time hearing her at the moment. The connection was going in and out.\n\n\"You're really coming in low,\" I called. \"I can hardly hear you. Can you say that again?\"\n\n\"I called to talk but you obviously don't want to,\" she said. It was still very hard to hear her.\n\n\"So talk,\" I said. \"I'm listening. The subject of the house is off limits and you're too late for spring break. So, what else you got?\"\n\n\"I guess there's always next year isn't there,\" she offered. It came back in loud and clear now.\n\n\"Yeah, you just have to plan a little better.\"\n\n\"I never know what you're doing,\" she said with a little anger behind it.\n\n\"I'm in school. It's not that hard to figure me out. You call, I answer, just like I did today. You're the one who is all over the place. It isn't like I can call you; I never know what phone you have this month.\"\n\n\"Ok-ok,\" she sighed. \"I've got to clear the line just in case one of the work crews call me back. Listen honey, I hope you have a great time down there. Don't do anything too crazy and don't spend too much money. I'll try calling you over Easter.\"\n\n\"Ok, mom. By the way, Easter is on a Sunday in a couple of weeks from now,\" I said sarcastically.\n\n\"Yeah,\" she groaned. \"I love you too.\"\n\n\"Bye, mom.\"\n\n\"Bye, Jason.\"\n\nI let out a huge sigh as I hung the phone up then looked over at Emma. She was nodding her head in understanding at my frustration of the whole situation I was in. I shook my head again.\n\n\"Sorry about that, Em. Let's go back to the room so I can change so we can go to the beach.\"\n\n\"You ok?\" she asked with genuine concern.\n\n\"It's laughable,\" I sighed. \"She wanted to come home to spend my first spring break as a freshman in college with me. What a joke.\"\n\n\"She's ah...... a little late,\" Emma offered.\n\n\"You think?\" I hissed.\n\n\"Don't get hissy with me,\" Emma said softly.\n\n\"I'm not,\" I sighed. \"At least, I'm trying not to. She just gets annoying. Like, it's my fault that she doesn't know what I'm up to. Then she brings up the house again. I'm not selling the thing.\"\n\n\"I know,\" she said calmly. \"It's the last thing that you have memories of your dad in. I'd keep it too.\"\n\n\"That and......,\" I trailed off.\n\n\"And?\" she asked and tilted her head.\n\n\"You cannot repeat this to anyone,\" I said firmly. \"Please.\"\n\n\"My lips are sealed,\" she said.\n\n\"The way my dad set up the trust, if I sell the thing before I'm twenty-one, she gets half of whatever I sell it for. The way I see things, he and I have both given her enough. She doesn't deserve anymore.\"\n\n\"Yeah,\" Emma quipped. \"She probably got half when they got divorced.\"\n\nI snickered. \"Not exactly.\"\n\n\"What?\" Emma asked. \"She got more than half?\"\n\n\"You cannot repeat this either if I tell you.\"\n\nShe tilted her head and tried to be funny. \"Am I going to end up in concrete shoes at the bottom of the yacht basin by the end of the week?\"\n\n\"I don't know,\" I sighed. \"What bikini you got on under that shirt of yours?\"\n\n\"The yellow one like you requested.\"\n\n\"That's my girl,\" I smiled. \"But seriously, you can't repeat this either.\"\n\n\"My lips are still sealed.\"\n\n\"My mom and dad were never actually married. He gave her money out of the goodness of his heart. She wasn't entitled to anything but child support and when she took off, she gave that up.\"\n\n\"Wow,\" Emma said stunned. \"They were never married?\"\n\n\"Nope.\"\n\n\"How did you find that out?\"\n\n\"When he died,\" I sighed. \"The lawyer went over a bunch of stuff with me before she got there. That's when I learned that they weren't ever married.\"\n\n\"Wow,\" she said again. \"Do you think my parents know that they weren't ever married?\"\n\n\"I don't know for sure, but my gut says no. Dad always said they eloped and got married in Paris and nobody from the family was there. Even your mom confirmed that story.\"\n\n\"Maybe they did get married in Paris then,\" she offered.\n\n\"The lawyer said no. Well... my dad said they didn't. It was all in the will or whatever you want to call it.\" I was snapping my fingers trying to think of the word.\n\n\"It was like his will and testament that had directions for how his assets would be distributed and then personal things meant for me. That's where I found out they weren't married.\"\n\n\"Right,\" Emma nodded. \"I know what you're talking about.\"\n\n\"It also explained how the trust worked, what I got, what she got, everything. That's how I found out about the house clause. I'm thinking that maybe she doesn't know that I know about the house? I saw the lawyer first then she saw him a week later, but I didn't go with her when she did. I already knew what I was getting out of it.\"\n\n\"That's pretty slimy and low of her if that's the reason why she keeps bringing up you selling the house,\" Emma said while shaking her head.\n\n\"I don't know if that's the reason or not,\" I shrugged. \"A part of me says yes, the other part says nobody can be that cynical.\"\n\n\"I think she's worried I'm going to blow all the money he left me then I'm going to be in a hurry to sell it and not get what it's really worth. At least, I tell myself that. If there was one thing my dad taught me, besides golf, it was how to manage money and how to make money.\"\n\n\"I was given a lump sum of money to help me get by until I either graduated, turned pro, or reached the age benchmarks set in the trust. I took the money he gave me and started looking at jobs that I could work right now with my skills and my time and then paid myself based on that. The rest just sits and earns interest for me.\"\n\n\"That's pretty smart of you,\" she complimented me.\n\n\"Three hundred bucks a week isn't much but it's all I would make if I worked a real job based on my schedule.\"\n\n\"That's about what I make working at the smoothie shop,\" Emma sighed.\n\n\"And all the free smoothies you can drink,\" I teased.\n\n\"Yeah. That got old pretty quickly,\" she said and rolled her eyes.\n\nI looked at her sitting in the chair next to me in her long shirt covering the yellow bikini I had been waiting to see since she modeled it for me. Her toned and tanned legs were slightly parted as the shirt rested high up on her legs. I looked at her smiling at me with her blue eyes piercing my gaze. It was time to stop dwelling on my mom and focus on the exquisite beauty sitting next to me waiting to go to the beach.\n\n\"Oh man,\" I sighed. \"What a day already. You ready for some sun?\"\n\n\"I've been ready,\" she smiled.\n\n\"Let me go back and change,\" I said. \"Who's in the room?\"\n\n\"Nobody that I know of,\" she said coyly.\n\n\"Shall we pick up where we left off this morning?\"\n\n\"Well,\" she blushed a little. \"I was pretty wet so I took a long shower and...... you can guess the rest.\"\n\n\"Damn,\" I chuckled.\n\nWe both stood and headed down the hallway towards the room.\n\n\"So, you're not game then?\" I questioned.\n\nShe sighed. \"I mean, we can. I was really wanting to go to the beach with you. And, I don't have a clue where they are or when they are coming back.\"\n\n\"Nope,\" I chuckled. \"That wouldn't be good. He almost walked in on us this morning with my fingers in your whoo-haa.\"\n\n\"Thanks for abandoning me,\" she sassed and gave me a pretend mad face.\n\n\"He's your dad,\" I fired back. \"You've had years of training on how to deal with him. You ought to be an expert.\"\n\n\"I thought you handled him exceptionally well last night when he was chewing us out about being out so late. Maybe you should take the lead once in a while.\"\n\n\"I have been all week if you recall. I bailed you out at the house, I gave him the run around when we got here, and I plotted against him last night.\" I put the air quotes around the plot part. She couldn't help but laugh at that.",
        "\"Fine,\" she sighed. \"I guess I had to take one for the team then.\"\n\nI clicked the door open then cautiously walked inside. I looked around and didn't see anybody, so I tossed my shirt off and went to my bag to find my swimming trunks. It didn't appear that anyone was around, but Emma had already said she wanted to go to the beach. I wouldn't push the issue of having sex with her right now. I knew I'd have her sooner or later. And knowing her thirst for sex, it would be much sooner than I thought. I still played it safe and went into the bathroom to change into my trunks.\n\n\"You ready?\" I asked as I came out of the bathroom.\n\n\"I've been ready,\" she cheered. \"Let's go.\"\n\n\"I see you went to the store while I was out,\" I said.\n\n\"What store?\" she asked innocently.\n\n\"The sex shop,\" I said holding the receipt. \"You got the plug I take it.\"\n\n\"What? No!\" She was blushing again.\n\n\"What was in the trash then?\"\n\n\"Are you stalking me?\" she asked.\n\n\"The empty package was right on top,\" I replied. \"You should probably hide it better or throw it away in the lobby.\"\n\nShe turned around so she could return to the bathroom and retrieve the empty package.\n\n\"I got it in my pocket,\" I said. \"I'll get rid of it for you.\"\n\n\"Thanks, Jay,\" she smiled.\n\nWe were in the hallway now walking to the front of the hotel to get to the beach.\n\n\"You got it in?\" I asked.\n\n\"Maybe,\" she smiled her devious smile. \"Maybe not. Wouldn't you like to know?\"\n\n\"Why else would I ask?\" I chuckled.\n\n\"A girl can't tell all her secrets,\" she teased.\n\nI quickly reached my hand back behind her and grabbed her butt right between her legs. I felt the soft end of the plug as my fingers squeezed her cheeks. She whimpered as I pressed against it.\n\n\"Fuck, don't do that. I'm already on edge with it in there. You pushing on it is going to make me cream in my suit bottoms.\"\n\nI pushed it one last time before I let my hand fall away. She yelped again before smacking my chest. I caught her wrist and pulled her so she turned. I leaned in and gave her a soft kiss on the mouth.\n\n\"I've been wanting to do that all day long,\" I said as she stood there looking up at me with those sexy eyes of hers.\n\n\"Hmmm,\" she growled. \"Have you now?\"\n\n\"Mmm-hmm,\" I replied. \"Come on, let's get you to the beach so I can see you in that bikini.\"\n\nWe started walking again. She wrapped her arm around my side as we walked until she pushed and turned me towards the cart corral. I let her lead not knowing what she was up to, but she hadn't let me down with her spur of the moment adventures yet. I leaned over and tossed out the trash from her shopping so she wouldn't get grilled by her dad.\n\n\"So, I know we are on vacation, but this is downright lazy. Why do we need a cart to go to the beach that's right across the street?\" I asked.\n\n\"Because...... we aren't going across the street,\" she replied in her devious way.\n\n\"I thought we were going to the beach.\"\n\n\"We are, just not that one,\" she pointed towards the beach across the street.\n\n\"Alright,\" I smiled. \"I'll play. What beach did you have in mind then?\"\n\n\"Dory told me about a topless beach,\" she whispered. \"It's a local hangout spot that most tourists don't know about.\"\n\n\"That's cool,\" I teased. \"I go to the beach topless all the time though.\"\n\n\"Do you?\" she played along. \"I've never been, so I'd like to see what it's all about.\"\n\n\"Nothing special,\" I sighed. \"The bottomless beach is where it's at.\"\n\n\"Really? I think I'll take baby steps for the moment. I'll start topless and go from there.\"\n\nI smiled. \"Two... well, three things come to mind right now. One, you better have some sunscreen or an umbrella. Your titties are going to burn if you don't. Two, I sure as hell hope we don't see Dory or Doug down there. Three, I'm going to have the biggest hard-on. Bigger than the one I already have.\"\n\n\"I've got sunscreen in my bag. Doug is at the bar working. Dory had a lady's day, which I was invited to, but I turned her down for you and the beach. Your boner, your problem. Sounds to me like you're a little chicken.\"\n\n\"You obviously don't know me that well,\" I replied. \"As long as the cops don't show up, I'm game for just about anything.\"\n\n\"I'll keep that in mind for future reference,\" she smiled.\n\n\"We should see if they have one of those big umbrellas for rent. I'd rather not roast in the sun all day.\"\n\n\"I've got a couple on the side,\" the cart guy said as he stepped out of our cart. \"What time are you guys coming back?\"\n\nI shrugged and looked at Emma. \"Three, maybe four?\"\n\n\"Yeah,\" she agreed.\n\n\"I'll be here until six,\" the cart guy said. \"If you guys get back before then I can let you borrow one. If not, you are going to have to head over to the beach club up the way and rent one.\"\n\n\"We will make sure we are back before six,\" I said.\n\n\"Hold on a second and let me run and get it.\"\n\nWe had our umbrella stuffed between the seats as we headed off. Once we made it away from the five blocks that made up the town square area, there was a designated pathway made just for golf carts. We wound down the pathway for a mile or so passing a few big mansions, a few older but still nicer houses, a lighthouse, a park, and a few condos. Each thing we passed butted up to the beach and we even passed two beach parking lots, but not the one we were looking for apparently.\n\n\"Do you know where you are going?\" I asked.\n\n\"Dory said it was just past the entrance to a gated community. She said it was just a small entrance with a small sand lot.\"\n\n\"When did she tell you about this again?\" I asked.\n\n\"Last night when I said I was going to the bathroom. She invited me to the lady's thing, but I declined and said we were going to the beach. That's when she told me about this beach.\"\n\n\"You were like four drinks in when she told you that,\" I offered. \"Are you sure you heard her right?\"\n\n\"Yup,\" she cheered and swerved the cart hard to make the turn. \"There it is.\"\n\n\"Holy gee-whiz!\" I gasped as I tried to find something to hang onto. \"Warn me next time, will you?\"\n\n\"Sorry,\" she giggled. \"I didn't want to miss it.\"\n\nWe slowed down and found a spot to park. There were twenty or so carts already here as we both scanned the beach area. There was a hundred yards or so of separation between the parking area and the beach itself. There were beach grasses and some sea grape trees mixed in the space between us and the beach. There were a few paths here and there cutting through to get you to the beach depending on where you parked. The far end of the parking area had native palm trees, more beach grass, more sea grapes, and a few Australian pines. By the looks of it, the far end had a long stretch of nothing but trees and native vegetation.\n\nEmma and I sat in the cart for a minute and looked out at the beach goers sprawled out across the sand. Most of them were topless, a few were covered but the people they were with were topless. They were spaced out and away from each other as some hid under umbrellas, some had chairs, some were on towels and some were swimming in the water. There were a few people our age, most were mid-fifties, and some were older than that.\n\n\"Well?\" Emma asked. \"Shall we?\"\n\n\"After you,\" I said. \"I'm going topless regardless.\"\n\n\"Yeah,\" she smiled. \"So, do I take my top off now or when we get down there?\"\n\n\"I'd wait until we get settled. You don't want some pervy old man watching you walk down the beach.\"\n\n\"Or some horny teenager,\" she teased, referring to me.\n\n\"Ha-ha,\" I chuckled.\n\nI looked out over the beach again as Emma stepped out of the cart. I damn near shit my pants as I did a double take.\n\n\"Emma!\" I rasped. \"Get back in the cart.\"\n\n\"What? Why?\"\n\n\"I think that's your mom!\" I cried.\n\n\"What?! Where?\"\n\n\"The topless chick with the big-brimmed hat,\" I pointed.\n\n\"Holy shit!\" Emma gasped. \"It is. My mom goes around topless?\"\n\n\"Looks that way.\"\n\n\"What the hell?\" Emma sighed still in disbelief.\n\n\"Do you see your dad anywhere?\" I asked.\n\n\"No. I'm looking though.\"\n\nWe both scanned the small crowd of people looking for Ronnie. Knowing our luck over the past twenty-four hours, he'd pop up next to us and ask us what we were doing here.\n\n\"There he is,\" I said with relief. \"He's coming back from the water.\"\n\n\"I can't look,\" Emma groaned as she held her head down. \"Does he have shorts on? Please tell me he has shorts on and not a speedo or a thong.\"\n\n\"A thong?\" I asked.\n\n\"Don't ask,\" she groaned again with her head down still. \"He wore a man thong to the beach one time. It was soooo embarrassing.\"\n\n\"They make such a thing?\" I questioned.\n\n\"Oh my gosh, Jason!\" she quipped. \"Is he wearing shorts or not?\"\n\n\"He's got shorts on, but they are kind of short.\"\n\nShe looked up as he returned to his spot and sat down next to Aunt Joy.\n\n\"How the hell did they find out about this place?\" Emma asked.\n\n\"Beats me,\" I replied as I watched them sitting there. \"I guess it's not as secretive as you thought.\"\n\n\"I guess not,\" she sighed.\n\n\"When did he wear a thong to the beach?\" I asked Emma as I continued to watch them sitting there unaware that we were here.\n\n\"Please don't make me relive that,\" Emma begged.\n\n\"I was just curious where he got the thong,\" I joked.\n\n\"I will not be seen in public with you if you wear a thong,\" she hissed.\n\n\"You're no fun.\"\n\nWe were both still sitting there watching her parents as they sat there on the beach. We both were stuck on what we should do from here.\n\n\"Jason,\" Emma quipped. \"Quit looking at my mom you weirdo.\"\n\n\"What? She's got nice tits.\"\n\n\"Jason! Stop that.\"\n\n\"Yours are nicer though.\"\n\n\"Gee, thanks. I would hope so. I'm thirty years younger than her.\"\n\n\"Although, they seem to be bigger than yours.\"\n\n\"Yeah, she got implants a few years ago.\"\n\n\"She did?\" I questioned.\n\n\"Yeah...... Why are we talking about my mom's boobs anyway?\"\n\n\"I don't know,\" I shrugged.\n\n\"What should we do?\" she asked now. \"Should we beat feet and leave or take a chance and head down to the beach?\"\n\n\"That's up to you,\" I offered. \"I think if we go down to the far end and sneak out past the trees down there, we might be ok. We just can't make a huge scene going down there. We move the cart, grab the stuff, head out and don't stop to look around. We pick a spot and park it.\"\n\n\"I don't know,\" she sighed.\n\n\"It's up to you,\" I said again. \"We can always go back to the other beach.\"\n\n\"Nope,\" she said firmly after some thought. \"I've wanted to try a topless beach, so I'm doing it.\"\n\nShe backed the cart up and quickly moved us down to the far end away from where they were sitting. I got out of the cart now and looked out at the beach to find a spot while she kept an eye on her parents. I picked a potential spot, grabbed the umbrella and my towel as she got her bag, and then led the way down the path. We were a good two hundred yards away from them, so they shouldn't notice us.\n\nWe made it down the furthest pathway through the grasses and hit the open stretch of beach. I took a hard left and followed the edge where the grasses met the open sand until I saw a sign before I stopped under the shade of the pines and tossed my towel down. She tossed the bag down as we both sat and tried to look normal. I looked back down the beach towards her parents as she read the sign we were twenty feet away from.\n\n\"State park area. Clothing must be worn beyond this sign. No overnight camping, no open containers, no open fires.\"\n\n\"This is about as far as we can get away from them,\" I offered.\n\n\"Where are they?\" she asked as she dared to look.\n\n\"Still in the same spot as before, just further away from us.\"\n\n\"Do you think they can see us?\" she asked.\n\n\"They can see we are people, but I doubt they can tell it's us,\" I replied.\n\nShe was still looking down the beach as I spread my towel out.\n\n\"Let me put the umbrella up over here and it will block them and the sun from us,\" I offered. \"Will that help you relax?\"\n\n\"Yeah,\" she smiled.\n\nI stuck the umbrella in the sand and opened it before turning it, so it blocked most of the sun and a lot of the crowd. She dug into her bag and pulled her towel out then spread it out before sitting down on it. I sat back on mine and tossed my shirt off then tried to relax by lying down. Emma shifted around and tossed her shirt off to join me.\n\nShe sat there for a moment and looked around. Her legs were stretched out on her towel as she had her arms at her sides resting on them. I studied her body and wasn't disappointed as she sat there. I knew she was looking down the beach and still worrying about her parents.\n\nThe little triangles of yellow covered her perky boobs and the hard nipples beneath. They formed visible bumps in the fabric from my side view. Her smooth stomach slowly rose and fell as she breathed and continued to look down the beach then out to the water. I could just make out the jewelry in her navel as my eyes traveled down to her hips and the strings tied on the points. I couldn't see between her legs, but I knew two things for sure. She was wet down below, and the plug was still there.\n\nMy dick started to swell at the thought of that. I continued down her toned legs with the soft and tanned skin covering them. She had painted her toenails a deep red this morning. She must have done that after she got out of the shower after touching herself. My dick was still rising and was almost fully hard right now. I could see her looking over at me and down to where my dick was in my shorts. I didn't even try to hide it, I made it bounce a little before finding her smile.\n\n\"I haven't even taken my top off yet,\" she said referring to my hardness.\n\n\"Doesn't matter,\" I replied. \"I like you in the bikini as much as I like you not in the bikini.\"\n\nShe laughed a little then shifted so she was resting on her elbows but still sitting up and still scanning the beach. I let her sit there for a minute waiting for her to take the top off herself. She was content with just sitting there and looking around the beach. I knew if I left it up to her, she would never lose the top and I'd never get to see her topless.\n\nI reached over and pulled the strings that were tied around her neck until they untied. I went slightly lower and pulled the one tied around her back until it untangled. The bikini top was still resting on her chest. Her breathing increased slightly as I pinched the triangle closest to me and pulled it free. Her white boobs with the painfully hard red nipples in the middle came out for the world to see. At the moment it was just her and I seeing them.\n\nShe looked over at me, her lips full, chest slightly flush up to her neck, and a smile on her face. \"Thanks, Jay.\"\n\nI stared at her boobs and admired how perfectly they hung on her chest. I was starting to become a tit fan thanks to her. They fit her body perfectly, they were firm and perky, evenly sized, and they looked great on her small frame. There were a dozen or more things I wanted to do to her right now, but I just lay there for the moment and drooled at her tits being out in public. She was barely comfortable with her boobs out, so us having sex was probably not an option.\n\nShe finally laid down after a few more minutes of watching the beach. She turned her head towards me once she got settled and gave me her soft and content smile. I returned one as her hand slid over and found mine. Her fingers tangled between mine as she held my hand and rested there quietly.\n\n\"Well?\" I asked. \"How does it feel to be free?\"\n\n\"I didn't realize my nipples were so sensitive to the breeze,\" she offered in her seductive way.\n\n\"Don't forget you need to put some sunscreen on before long.\"\n\n\"Mmm-hmm,\" she replied.\n\nWe laid there for a little while without saying anything. She had stopped holding my hand now and went to running her hand up and down my chest. Every couple of passes she'd stop and tease my nipple before tracing my skin with her soft touch. I thought I was hard before; this was making it worse. I was tented up in my shorts, the head had to be purple, and it was dripping my desire from the tip. I remained composed and rested there while she continued to play her game and tease me.\n\nShe leaned over after a few more minutes of tracing my chest and licked my nipple as her hand curled around my shaft. I felt her teeth nibble a little on my nipple as she squeezed my dick and gave it a couple of strokes. I lay there letting her tease me still. I'd pay her back later for what she was doing to me now. We had started this unspoken game after last night and it was her turn. Mine would be next and the things I was going to do to her. \n\nShe chewed a little then turned her head and let me watch her lick my nipple. She had such a seductive look on her face as her tongue traced my skin. Her hand left my cock then slipped under my shorts. Her nails softly scratched the trimmed pubes as my cock tented above her hand. I wanted to roll over and get behind her right now. Wanted to pull her suit to one side and slip my dick into her hole, knew how wet she had to be. I was dripping from the tip, there was no way she wasn't soaked at this point.\n\n\"You want a beer?\" she asked and brought me out of my thoughts. I hadn't even realized she had stopped teasing me I was so lost in my fantasy.\n\n\"You got one?\" I asked.\n\n\"I wouldn't offer if I didn't,\" she smiled.\n\n\"If you got it, I'll take it.\"\n\nWe both sat up as she dug into the bag and pulled out a soft cooler with a couple of beers and some ice in it. She handed me two beers then found the sunscreen. I popped the caps off as she spread lotion over her chest then up to her shoulders. She then started on my chest without me asking. Once she was done, I handed her a beer. We said cheers before taking a sip and looking out at a couple of younger people walking by the water in front of us. Her eyes instantly went down the beach to search for her parents.\n\n\"Relax,\" I said. \"They are right where we left them.\"\n\n\"Whew,\" she sighed.\n\nShe focused on the two girls walking in front of us by the water again.\n\n\"See?\" she said now. \"I could never pull that off.\"\n\n\"What? The thong?\"\n\n\"Yeah. The whole look she has.\"\n\n\"Which one are we talking about?\" I asked. \"The brunette or the fake blonde?\"\n\n\"Well... both now that you mention it. Is the blonde completely naked?\"\n\n\"I believe so,\" I said as I tried to find some fabric on her hips.\n\n\"Hummm?\" Emma questioned as she still looked at them.\n\n\"What look are you going for anyway?\"\n\n\"I thought this was just a topless beach.\" She ignored my question and was still focused on her nudity.\n\n\"Forget that,\" I said. \"What look are you going for?\"\n\n\"Hers,\" she finally answered and looked at me. \"She looks so pretty.\"\n\n\"Emma!\" I cried. \"My gosh, have you looked in the mirror lately? You are beautiful. She's so fake it's not even funny. You are real and that makes you beautiful.\"\n\n\"Thanks, Jay,\" she smiled. \"But I'd like to get bigger boobs.\"\n\n\"Why?\" I asked. \"Your boobs are perfect on you. Look at them.\"\n\n\"I am and they seem a little small.\"\n\n\"No,\" I said. \"Perfect. Look at my wiener. It works like Pinocchio's nose... but a little different.\"\n\n\"Yeah?\" she giggled sarcastically. \"What does it do, get harder the more it likes something?\"\n\n\"Yeah,\" I chuckled.\n\n\"Right,\" she giggled still.\n\n\"Seriously, Em. I'm not the biggest tit fan, but yours are bringing me around. I like your tits on your body. Don't change them.\"\n\n\"If you say so,\" she sighed.\n\n\"You are pretty perfect just the way you are,\" I said seriously. \"Twenty years from now you are going to still be beautiful and that chick out there will be spending thousands of dollars to try and fix all the stuff she's tried to make better now.\"\n\n\"Probably,\" she smiled.\n\n\"And... I can guarantee you that your ass is much better looking than hers in a thong. You've got the small frame and a big bootie.\"",
        "\"Yeah-yeah,\" she smiled. \"People compliment me on my butt all the time. I wish they'd compliment me on my boobs.\"\n\n\"Why? They should complement you on your smile or your eyes or your kind heart. If they're only saying you have a nice butt, they only want one thing and you're way better than that.\"\n\nShe looked at me now with that perfect smile and this look on her face that said I spoke to her heart just then.\n\n\"Thank you, Jason. You're a good man for saying that and I hope you mean that.\"\n\n\"You know I do,\" I said firmly. \"If some idiot is hitting on you and his line is 'nice butt', you should tell him to get lost. You are way more than just a nice butt.\"\n\n\"I know, I know,\" she smiled. \"I've got perfect boobs according to you.\"\n\nWe both laughed before taking another drink from our beers. I knew she appreciated what I had said to her and that was her way of saying thanks and then turning the conversation away from the serious stuff. She knew she was better than what she was getting from the guys at her school. It just took a guy to tell her she was better then what she was getting. Sure, we had been fooling around but she knew I was more serious with her then we were both leading on. She was always going to be a part of my life in some way or another so I would always look out for her.\n\nI slid out and stood up. \"I'm going to take a dip. You coming?\"\n\n\"What? Jason, no. What if they see us?\"\n\n\"Then they see us. If they come over and make a scene, you just make one back. They can be here, but we can't?\"\n\n\"It's a little different for them,\" she offered. \"They are together.\"\n\n\"We are both adults,\" I said. \"We came to the beach to enjoy the sun and the possibility of no tan lines.\"\n\n\"Oh boy,\" she sighed. \"Fine, but if we get caught, I'm so going to kill you.\"\n\n\"You'll be so grounded. You won't have a chance to kill me.\"\n\n\"Ha-ha,\" she giggled and stood to join me.\n\n\"Now, if he does come over here,\" I started. \"Do not cover yourself. You stand there with your boobs pointed straight at him.\"\n\n\"What? Why?\"\n\n\"It's going to do one of two things. It's going to make him not want to be there so we get to deal with your mom first and she can soften the blow with him. Or, he's going to ignore your boobs and cuss us out, in which case he's just made my case. If he can stand in front of you and yell at you and ignore your boobs, so can I. There's no argument he can use to win in this situation.\"\n\n\"But we both know that's a lie,\" she teased as she gave my cock a squeeze. It had gone down some, but it was still pretty hard.\n\n\"He doesn't have to know that,\" I said and pushed it into her grip.\n\n\"Yeah,\" she laughed. \"There's a lot he doesn't need to know.\"\n\n\"Like the plug you got in your butt,\" I said and gave it a bump.\n\n\"Fuck,\" she whimpered. \"Jason!\"\n\nI had already taken off and was heading for the water. She gave chase as I looked over my shoulder and watched her bounce around as she chased me. I focused on the path in front of me until I hit the water and dove in. She splashed in right behind me as I swam out to get deeper. She was still hot on my tail as I continued out until I was chest deep. I stopped to let her catch me.\n\nShe caught me and splashed me before I grabbed her and dunked us both. I let her go as we both came to the surface and splashed each other a couple of more times before we stopped. Her attention went back to the beach and to where her parents were. I looked too and saw they were both lying down with covers over their faces.\n\n\"See,\" I said. \"Nothing to worry about.\"\n\n\"I guess,\" she sighed and floated in the water to relax.\n\n\"Tomorrow we have to be at the dock by six in the morning,\" I said.\n\n\"What?\" she asked. \"Why so early?\"\n\n\"We have to go out fifty miles. Twenty miles an hour, it's going to take two and a half hours to get out to a spot. We fish for four hours then head back in.\"\n\n\"If it gets him to leave us alone for the last full day here then I'll do it,\" she sighed.\n\n\"I'm going to go golfing in the afternoon when we get back in,\" I said. \"Do you want to go with me again?\"\n\n\"Actually, yeah. I'll go with you.\"\n\n\"Sweet,\" I cheered. \"Thanks, Em.\"\n\n\"Oh,\" she said as she remembered something. \"We have dinner tonight with them at six at the fancy place.\"\n\n\"Tonight?\" I asked.\n\n\"Yeah. That's what I said.\"\n\n\"Ok,\" I said. \"Sounds good. We have to be back by five then. We need to shower, change, and get ready.\"\n\n\"What time is it now?\" she asked.\n\n\"My phone is on the towel. I'll go look if you want me to.\"\n\n\"Would you?\"\n\n\"Sure,\" I smiled.\n\nI left the water and headed for our spot. I took a quick detour and went around the sign to see what was on the other side. 'Entering clothing optional beach area. Adults only. No overnight camping, no open containers, no open fires. Please dress before leaving the beach area.' I continued on my way to our spot, checked the time, took a quick drink of my beer, and then started back to the water just as the two girls were coming back down the beach.\n\n\"Ladies,\" I smiled at them. \"How are you two doing today?\"\n\n\"Good,\" they both smiled and giggled a little.\n\n\"What about you?\" the nude blonde asked.\n\n\"Very well,\" I replied.\n\n\"Say, ladies? Do you have a second?\"\n\n\"Sure,\" they both smiled again as they stopped.\n\n\"Are you two from around here?\" I questioned.\n\n\"I am,\" the blonde replied. \"My family has a vacation home across the street, so I've spent a ton of time around here between summers and holidays.\"\n\n\"Ok,\" I smiled being polite. \"Cool.\"\n\n\"Yeah. But we are from Ohio, just on spring break right now. What about you?\"\n\n\"Spring break too,\" I offered. \"But I've moved all over the place. I did call Florida home for a good ten years. Now, I call Texas home for the foreseeable future.\"\n\n\"We've always wanted to go to Texas,\" the brunette cheered. \"They say everything is bigger in Texas.\" She was glancing down at my trunks as she spoke.\n\n\"Just the cowboy hats,\" I joked. \"Everything else is about the same.\"\n\nThey giggled and looked at each other before looking back at me.\n\n\"So, I saw the sign and it said clothing optional,\" I started. \"My girlfriend thought it meant topless, but I can see that might not be the case.\" I kept my eyes level with hers, but I did notice the silicone boobs that she was pushing up and out towards me. Her friend in the thong was doing the same thing.\n\n\"The spoken rule is topless, but the unspoken rule is full nude,\" the blonde replied. \"The sign doesn't say either way, so most people go with what they are comfortable with. I've gone full nude since I was old enough to do so and haven't been told not to.\"\n\n\"I don't think you'd get too many complaints,\" I smiled.\n\n\"None so far,\" she giggled with her friend.\n\n\"I bet you wouldn't either,\" the brunette offered.\n\n\"Probably not,\" I chuckled with them. \"But I've got to get chicken shit out there to try it with me.\"\n\nThey both turned and looked at Emma still floating in the water. She waved shyly as they waved at her.\n\n\"She's topless at least,\" the blonde said. \"That's a start.\"\n\n\"Baby steps,\" I offered. \"Well, thanks for the info, I've got to get back out there with her.\"\n\n\"No problem,\" she smiled. \"I hope she comes around for you.\"\n\nThey continued down the beach as I headed back into the water and rejoined Emma.\n\n\"Did you get a good look?\" she teased.\n\n\"The naked one looked like a silicone doll.\"\n\n\"What?\"\n\n\"She's had so much work done I think she is stuck smiling permanently.\"\n\n\"Oh. So, what were you talking about?\"\n\n\"I asked them if this was a topless or full nude beach. She said it was whatever you felt comfortable doing.\"\n\n\"Thank goodness my parents are only comfortable topless,\" she sighed.\n\n\"How do you know?\" I asked. \"We didn't actually see if your mom had bottoms on.\"\n\n\"I sure hope she does.\"\n\n\"Why? What do you care? You're not over there with them.\"\n\n\"I know. But it's embarrassing. It's bad enough my mom is topless.\"\n\n\"You're topless,\" I said.\n\n\"Yeah, but it's different.\n\n\"How is that?\" I asked.\n\n\"Alright Ronnie,\" Emma hissed with sarcasm. \"Quit playing the stupid question game.\"\n\n\"Then quit plotting against me,\" I teased in his voice.\n\nShe splashed me so I splashed her back. It led to us splashing again for a minute before we gradually stopped. She wiped her eyes and fixed her hair before turning and looking at the beach again for her parents.\n\n\"Emma,\" I sighed. \"You have got to stop.\"\n\n\"What?\" she asked.\n\n\"Stop worrying about them. It's just me and you here right now with a bunch of strangers on the beach. Let's enjoy the day and each other. We might never get this chance again.\"\n\n\"Sorry, Jay,\" she smiled now. \"You're right.\"\n\n\"I'm ready to go lay down again,\" I said. \"You coming?\"\n\n\"Yeah. I've got to finish my beer before it gets warm.\"\n\n\"We're not supposed to have beer,\" I said as we got out of the water.\n\n\"Says who?\" she asked.\n\n\"The sign over there.\"\n\n\"Oh well,\" she shrugged.\n\nI made the mistake of looking back at her as we started up the beach. Her thin suit bottoms clung to her body and left very little to the imagination. Her lips puffed the suit out as her slit left a line in the middle. My dick was already filling back up with blood again.\n\nI stalled and picked up a shell as she walked past me so I could take in her backside. Her ass looked even better than it did at the house when she modeled it for me. Now that the suit was wet it clung to her cheeks. They rippled and wiggled and shook as she walked quickly up the sand. The sway of her hips, the dimples on her back, the soft bounce of her breasts had me fully hard as we reached our spot. We both sat back down on our towels and dripped dried as we tried to enjoy the almost warm beer.\n\nShe took a sip and glanced over at me before looking back out at the water. She looked back at me again then down the beach towards her parents' spot. The umbrella was blocking her view, but she couldn't help but look anyway. Then it was back my way again. I knew she was working up the courage to ask me something by the look on her face.\n\n\"What?\" I asked and tried to make it easier for her. \"You've got something on your mind, just ask.\"\n\n\"If the sign and your new friends say we can be full nude,\" she started. \"Are you brave enough to do it?\"\n\nI finished the last of my beer then set the empty down. \"If you want me to go full nude, you take my shorts off for me and I'll do it.\"\n\n\"What? Really?\" she asked excitedly. \"You will?\"\n\n\"Yeah, I don't care if I'm naked.\" I laid back down on my towel and got comfortable.\n\n\"You don't?\" she questioned.\n\n\"I've got what I've got,\" I offered. \"Besides, it's a nude beach. It's not like we are at the hotel pool trying to get away with something.\"\n\n\"What about you?\" I asked after she didn't respond. \"Are you going to join me?\"\n\n\"I don't know,\" she replied shyly. \"Maybe.\"\n\n\"Chicken,\" I teased.\n\n\"You won't rip my bottoms off if I take yours off, will you?\"\n\n\"Why would I rip them off?\" I asked. \"I'd just untie them if I wanted them off.\"\n\nShe sighed and smiled as she sat there and took another sip. I knew what she meant but I had to tease her a little.\n\n\"I'll let you get comfortable with me being naked before I take your bottoms off,\" I offered. \"I won't force you to do anything you aren't willing to do.\"\n\nShe smiled her soft smile before taking another sip of beer.\n\n\"This is gross now,\" she quipped and dumped it.\n\n\"Warm beer is pretty scummy,\" I agreed.\n\nShe sat there for a minute and watched the water before looking back at me. I had my eyes closed most of the way and pretended not to notice as she leaned over and pulled the strings on my shorts. She untied them then pulled the flap open and exposed me. She gripped the waist and tugged as I lifted up and let her pull them down my legs. They cleared my feet as I settled back down and lay there with nothing but a smile on my face.\n\n\"You can't turn over and hide your boner either,\" she said with a wicked smile on her face.\n\n\"I didn't plan on it. I hope my friends come back down the beach.\"\n\n\"Jason,\" she sassed in her sing song voice.\n\n\"What?\" I smiled at her. \"They wanted to know if everything was bigger in Texas.\"\n\n\"I'd say they are.\" She raised her brows and chewed her bottom lip as she looked down at my cock. It was about as stiff as it could get, the head was a purple color, and it was leaking my desire from the tip again.\n\n\"You better put some sunscreen on me or I'll get burnt,\" I said nonchalantly and closed my eyes.\n\nI heard her rustle through the bag and get the sunscreen. Her hands hit my skin as she carefully rubbed the lotion from my hips down to mid-thigh where the sun normally didn't hit my skin and I was pale white. The only part she avoided was my raging hard-on and my sack. She brushed by them but never made full contact. It was all just part of the tease.\n\nI turned my head as her hand left my body. She squeezed out more lotion and started on herself again. I pretended not to be interested but I couldn't help but watch her hands slowly trail across her skin. I don't think it was intentional but the way she ran her hands across her skin was so sensual. She did let her hands linger on her tits and circle her nipples intentionally before she settled down again. Her hand found my chest as she traced my skin.\n\nWe laid there for over a half an hour not saying or doing anything. Truth be told, it was a little... strange to be laying there completely naked out in the open like I was. Yeah, we were pretty far away from everybody and the umbrella was blocking us and it was a nude beach, so it was acceptable to be naked. But it was still strange to be doing it especially when I had never actually done anything like this before. My confidence was about the only thing getting me through right now.\n\nThat and I was hoping it would lead to Emma getting naked with me. That was pretty much the only reason I was nude at the moment. I figured if I was naked, she would get naked and it would lead to more if I was really lucky. I glanced over at her and checked out her boobs as her hand idly moved up and down my chest again. Her hand stopped right at my hip with her fingers softly rubbing my trimmed pubes near the base of my shaft. She had still avoided touching my dick skin to skin.\n\nAnother fifteen minutes passed by. Her fingers were still moving across my sweat soaked skin every once in a while, but that was the only thing moving at the moment. The midday heat was roasting the beach as the breeze had stopped. The wind blew off the land towards the water in the morning then switched in the afternoon and blew from the water to the land. There was a half an hour where the breeze did nothing and we were at that point right now. The air was stagnant, and I was lying in a pool of my own sweat to the point that I couldn't stand it any longer. I sat up and scanned the beach to see the heat devils dancing in waves across the sand.\n\n\"What?\" Emma asked as she felt me stir and sit up. \"Did somebody walk by and notice you?\"\n\n\"Not that I know of,\" I said. \"I'm roasting hot. I'm going to take a swim.\"\n\n\"Here,\" she said quickly. \"Put your shorts back on before you go.\"\n\n\"Why?\"\n\n\"Because,\" she giggled. \"You can't walk down the beach with your dick sticking straight out like that.\"\n\n\"Why not?\" I stood and looked at her before turning towards the water. \"It tells me which direction the water is. See? That way.\"\n\nShe laughed and shook her head at my silly joke. \"Pretty amazing cock you got. It finds water, grows when it likes something, and gets hard with little to no effort.\"\n\n\"You should see what else it does,\" I laughed.\n\n\"Oh yeah?\" she giggled and tilted her head.\n\n\"Shoots lasers and predicts thunderstorms.\"\n\n\"Keep that thing away from my kitty cat then.\"\n\nWe were laughing now at the stupidity we were both spouting out.\n\n\"I'm going for a swim,\" I chuckled still. \"You want to come?\"\n\n\"I'll pass for now,\" she replied.\n\n\"I'll be back in a minute.\"\n\nI walked straight for the water at my normal pace even though I felt like running. I slipped into the water and swam out until I was neck deep then couldn't help but scan the beach to find Ronnie and Joy. The spot that they were in before was empty, much to my surprise. Actually, most of the beach was now vacant. The heat must have driven them away. There looked to be less than a dozen people still here and all of them were tucked up under their umbrellas to stay out of the heat.\n\nI looked back up the beach at Emma. She was sitting up with her knees drawn up and her arms resting on them as she looked at me. I waved at her as she smiled then waved back. I went under the water before coming back up and looking at her again. She had leaned over and grabbed her phone from her bag now and was playing on it.\n\nI could see the yellow material pulled tight over her mound the way she was sitting right now. It was just barely covering her puffy lips between her legs. Right below her lips and behind the bikini was the soft plug still inside and stretching her hole out. I could almost bet she was soaking wet right now. My being naked was having an effect on her. Her nipples seemed harder and her chest a deeper red then before. Maybe it was the sun roasting her body, but I'd bet she was turned on too.\n\nI left the water and walked back up the beach keeping an eye on the gap between her legs. I could clearly see the dampness coming from the slit outlined on her bottoms. The material was barely containing her lips it was so skimpy down there. It took all that I had in me not to beg her to let me have her right now. Be patient I told myself, it's her game and you are just a participant.\n\n\"How does it look from down there?\" she asked as she set her phone back down.\n\n\"You look freaking amazing,\" I smiled.\n\n\"I must,\" she smiled and looked at my dick. It was less than two feet away from her face as I stood there and drip dried some. \"I meant the beach though.\"\n\n\"The beach looks amazing with you sitting on it.\"\n\n\"Jason,\" she said in her little girl voice.\n\n\"The beach is actually pretty empty. There isn't but a dozen people left and they are all tucked up under whatever shade they can find.\"\n\n\"Really?\" she asked.\n\n\"Yeah. Your mom and dad must have left,\" I said as I sat down. \"I didn't see them anymore.\"\n\n\"You didn't?\" she asked thinking I was joking.\n\n\"Unless they moved to a new spot, they left.\"\n\nShe had her devilish smile on her face right now. She tried to hide it, but she could hardly contain it. She still leaned around the umbrella and looked down the beach to check for herself. I waited until she returned to the shade again before I spoke.\n\n\"You going to be more relaxed now?\"\n\n\"Yeah,\" she sighed.\n\nI leaned over and slowly pulled the string at the hip closest to me. She took a soft breath as I crossed her body and pulled the other side. The suit was untied but still on her body as I left it resting there. I leaned in and kissed her neck as she tilted it for me. I tasted her sweat mixed with the sunscreen which was not a good combination. She was leaning into my lips so I kept teasing her until she pushed me away playfully.\n\n\"Stop that,\" she sassed. \"I'm already wet and horny. That's not helping.\"\n\n\"Get your vibrator out and play with yourself,\" I said.\n\n\"Why? I've got you if I wanted to play.\"\n\n\"Who says I want to play?\" I teased.\n\n\"Your dick tells a different story,\" she laughed.\n\n\"What's stopping you then?\"\n\n\"Nothing. I don't feel like it yet.\" She chewed her bottom lip as she spoke.\n\n\"Tease,\" I sighed.\n\n\"I know,\" she said coyly.\n\nShe leaned back to the bag and handed me another two beers. I cracked them opened as she looked around then pulled the suit bottom from under her body and set it next to her top. I handed her a beer as I took a sip of mine.\n\n\"Welcome to the nudie club,\" I cheered.",
        "\"Thanks,\" she smiled.\n\nWe both took drinks as we sat there for the moment. I scanned her body as she sat there looking around still. Her one hand that was closest to me was behind her as she used it to hold herself up. The other one was holding the beer. Her legs were stretched out, the one knee furthest from me was up slightly and bent, but they were together for the moment. I knew she was naked, but I couldn't see any details other than her boobs. It didn't make my dick any less hard though.\n\n\"Not so bad now is it?\" I asked.\n\n\"No, not so bad,\" she replied and drew her knees up to rest her chin on them.\n\n\"It's pretty exhilarating in the water too,\" I said. \"You don't realize how much your suit blocks the water from your body.\"\n\n\"We can go in a minute,\" she offered.\n\n\"Alright,\" I said before I took another long drink of my beer.\n\n\"Can you put this back in the cooler so it doesn't get nasty like the last one?\" I asked.\n\n\"Sure,\" she smiled. \"Where are you going?\"\n\n\"Nowhere. I'm just going to lay back down and take a siesta.\"\n\n\"Lazy bum,\" she teased.\n\nShe leaned over and pushed my beer back into the cooler as I laid back down. Once she had my beer put away she moved the umbrella over to block the sun a little better. She continued sitting there for a moment before she spoke to me.\n\n\"Hey, Jay?\"\n\n\"Yeah,\" I replied but didn't open my eyes yet.\n\n\"Why... haven't you tried anything with me yet today?\"\n\nI chuckled a little. \"I've wanted you since the moment I got back from golf. You didn't seem interested, so I don't want to be that guy that bugs you about it until you give in.\"\n\n\"How thoughtful of you,\" she replied sarcastically.\n\n\"I aim to please,\" I joked right back.\n\n\"Sex has been on my mind all day,\" she said coyly.\n\n\"Really?\" I asked but remained still with my eyes closed.\n\n\"It's kind of the reason we came here.\"\n\n\"Is that a fact?\" I asked and turned my head.\n\n\"Yeah.\"\n\nI opened my eyes to see she had turned her body to face me. Her legs were spread as she leaned back a little and exposed her pussy to my gaze. Her lips were slightly parted as wetness leaked from her center onto the towel. I raised my brows as one finger slipped between her legs and pressed into her opening. As she brought it back out it was coated in her juice. I figured she would be wet, but I didn't think she would be as wet as she was.\n\n\"I guess you weren't lying,\" I managed to say as two fingers slipped inside now.\n\nShe panted a little as she withdrew and found her clit. Her fingers split the bud then rolled it between the tips as she moaned in pleasure. I wanted to turn and move her hand away so I could taste what she was leaking but I remained still for now. I wanted to let her dictate how this was going to play out even though it was killing me to see her as wet as she was and not do anything but watch.\n\nMy cock was bouncing to the beat of my heart as it raced in my chest. Her eyes were focused on it as her fingers dipped back into her pussy again. I added a little extra bounce as she pulled her fingers out then glanced over her shoulder to see if anyone was watching or coming our way. The umbrella was blocking most of the beach so we couldn't see or be seen.\n\nShe leaned down and got onto her side with her head at my cock now. She eagerly took it into her grip and looked at it. She squeezed it and milked it from the base all the way to the tip. My desire leaked out onto her fingers as she reached the tip then lowered her head and stuck her tongue out to taste me. She licked my slit then turned her tongue and circled the underside of my shaft.\n\nI sighed in pleasure as her wet tongue circled my head again. Her tongued teased my slit as more of my desire dripped out. I wanted to reach out and touch her wetness, but she was just out of reach the way she was curled up next to me. The only thing I could reach was her nipple, so I let my thumb roll it around before I cupped her tit. She let go of my cock and slapped my hand away from her tit. She wagged her finger at me before grabbing my cock again and holding it so she could lick the entire length of it.\n\n\"So, we aren't playing the exposed skin game anymore?\" I asked her with my smile.\n\n\"New day, new game,\" she said coyly.\n\nHer mouth covered my cock this time as she slowly swallowed me in until I was halfway in her mouth. She sucked hard and slow as she pulled up and off, making a popping noise as she did.\n\n\"I don't know the rules, but I think I like this new game,\" I managed to say.\n\nShe growled as she took my dick back into her mouth. She went deeper this time, forcing her mouth to take more until I was touching the back of her throat. I still wasn't quite all the way inside as her throat quivered and she was forced to pull up. I could feel her cough a little as she came off before she spit on the head and jerked me slowly to work the spit down my length. She took the moments pause to look around again.\n\n\"I'll stop you if somebody is looking,\" I offered.\n\n\"Sure you will,\" she said sarcastically. Her mouth covered my dick again.\n\n\"I'll try to,\" I gasped.\n\nShe took me in until I touched the back of her throat again. She rested there and relaxed her throat before pressing down more. I started to slide into her throat as I reached up and pressed the back of her head lightly to give her a little extra force. Her teeth softly closed around the base of my cock once she had me fully inside of her mouth. I let go of her head, but she remained for a second before slowly pulling off, leaving a thick trail of spit as she did. She came off and coughed again before taking a breath. Her eyes were watering as she looked at me and smiled.\n\n\"Thanks for the help.\"\n\n\"Anytime.\"\n\nShe slowly sank down and relaxed her throat again as my dick touched it. I didn't help her this time, she forced herself down and closed her teeth around the base all on her own. She held still for a moment before she pulled off quickly and gasped for air. Her hand started to jerk me again as she looked at me with tears rolling down her face.\n\n\"I'm going to end up cumming in your mouth if you do it again. If you want to fuck me, you better do it before I bust my nut.\"\n\nShe took another breath and cleared her throat again. \"You better not cum in my mouth. I'll fuck you when I'm ready and I'm not ready yet.\"\n\nShe opened her mouth and took me in again. She went painfully slow with lots of pressure on my cock until I touched the back of her throat again. I was so close to cumming I had to concentrate not to blow my load. She relaxed and let the final part of my cock slide inside until her teeth touched the base again. I reached up and pressed down on the back of her head harder now. Her lips and nose pressed into the skin around my dick as I touched just a little deeper against the back of her throat. I held it for a good while before I let her free.\n\nShe pulled off and gasped for air again as more tears ran from her eyes. She sniffled a little and wiped her mouth before she looked at me. She had the devious smile on her face as she checked over her shoulder again. She turned her whole body around and slipped a leg over my torso as she faced the water and had her back to me. I pushed my dick towards her wet little hole as she settled down on it.\n\nMy soaked head parted her soaked lips easily and sank all the way into her. She gasped as I touched her very end on the first plunge. She held and twisted her hips letting me touch her core as she whimpered and sat more upright. I could see the soft end of the plug as she rolled her hips and her body forward to let me slide out of her soaked hole. I could feel the flared base against my cock as my tip reached her entrance.\n\nShe pressed back down taking me deep inside of her hot center. My thumb found the plug and pressed it as her lips flared around the base of my cock. I was so deep inside of her I was mashed against her cervix again. She gasped as my thumb hit the plug and pushed on it. Her hand flew to her mouth as she covered another yelp as she started to pull away. I had ahold of the plug now and was softly pushing and pulling on it.\n\nIt was moving maybe an inch at the most, but it was bringing raw pleasure to her now. I was sunk deep inside of her as she pressed all the way back onto my cock. Her hips were undulating as my fingers worked the plug. I was twisting it around and moving it side to side. Wetness was running from her cunny and flooding my cock as she whimpered and gasped into her hand still covering her mouth. I could faintly hear her yelp she was cumming as she flooded me.\n\nI lost my grip on the plug as she pushed hard against me and took away what little space I had. I was buried so deep inside of her right now. Her puss was rippling and squeezing my cock as the flood of white cream coated the base of my shaft. I gripped her hips and used them as a lever to rock my hips causing her to cry out in pleasure again. She had both hands over her mouth now as her orgasm tore through her body still.\n\nHer legs were shaking as her pussy squeezed my cock hard then released in quick bursts. Wetness was dripping from her body and running down over my sack between my legs. It felt like she was pouring hot liquid between my legs as she came and gasped into her hand. She leaned back just a little and used my pelvis to push the plug into her and bring her more pleasure. Her whole body shook now as I could feel the plug against my cock through the thin wall separating the two holes.\n\n\"Fuck,\" she whimpered. \"Stop.\"\n\nI kept using my hands and rocking my hips to press deep into her cumming hole. She grabbed my knee with one hand as she cried into the other again. She squeezed my knee hard, but I wouldn't let up.\n\n\"Jason,\" she yelped. \"Too intense, stop... fuck... no-no!\"\n\nI stopped my assault and let her come down from her intense high. She panted and gasped, her breath ragged as her body heaved above mine. She still shook and twisted her hips a little as she recovered but she had control. Her cunny was still rippling over my cock as juice leaked from her.\n\n\"You shit,\" she giggled as she twisted her body slightly and looked over her shoulder at me.\n\n\"You established the safe word,\" I said.\n\n\"I know,\" she panted still. \"I forgot.\"\n\n\"Take the plug out,\" she said after a moment of rest.\n\nShe moved up and lifted slightly so I had the space to remove it. I reached out and grabbed the end and pulled softly to get it to slide out. It slipped out after a little more pressure leaving her hole open for a second before it slowly closed. She dismounted and turned to face me before settling back over my body.\n\nShe was glowing as she faced me now. She leaned over and took the plug from my hand then reached for the bag she had brought. She dropped the plug inside then pulled out a small bottle of lube. She sat back on my knees and took my cock into her hand again.\n\n\"You're soaked down there,\" I said. \"You probably don't need the lube.\"\n\n\"I know but I want to make sure it doesn't hurt.\"\n\nShe squeezed out some lube onto my tip. Her hand circled it around the head then down my shaft. It mixed with her wetness that already coated me and seemed like over kill. She came forward, lifted, and hovered over my cock as she pointed it up. It pressed against her closed pucker as she relaxed now and looked down at me. She applied firm pressure down on my cock until the head opened her up and slipped inside her exit.\n\nShe inhaled softly as I stretched her open and inched deeper inside. The plug had done its job as I entered her further than last night without giving her any discomfort. She slowly sank down then pulled up before sinking down repeatedly until I was deep inside her ass. She rested by sitting on me and let my cock stretch her further.\n\nIt was a completely different feeling to be inside of her back there. She was still tight and wet, but it was more personal that she let me in there. She started a slow rise and fall as her body had adjusted to my cock buried inside her ass. She brought one leg up then the other to squat over my cock. She placed her hands on my chest to balance before picking up the pace.\n\nShe wasn't pounding down on me, but she wasn't soft either. It was a quick rise and fall that left her panting in pleasure as I joined her. Her tits bounced and shook with each bump of us together. I traced her legs with my hands and felt her muscles working to lift her up and down and bring us pleasure. Her eyes closed as she enjoyed the thrill of me inside of her.\n\nMy fingers reached her pussy as it drooled her wetness out. I spread her lips and traced her slit, bumping her clit with each rise and fall. I turned my hand and let one finger slip inside before letting another press in. I could feel my cock slipping in and out of her as she whimpered in pleasure. I curled my fingers up and reached deep to find her spot as my thumb bumped her clit.\n\n\"No-no,\" she cooed. \"You can use your fingers but don't rub my spot. I don't want to cum that hard and hurt myself.\"\n\nI stopped pushing against her spot and went to an in and out, matching her up and down. My thumb still remained on her clit and circled it. It was building inside of me as she continued at her constant and unhurried pace. I was about to erupt but I was waiting on her. I knew she was close, her breath was shorter and sharper with each rise and fall. Her little nose wrinkled, her mouth hung open, her eyes closed, her nails dug into my chest as her puss squeezed my fingers.\n\n\"Emma,\" I panted.\n\n\"Yes...... fuck...... cumming... cum with me.\"\n\nMy heels dug into the sand as I started to buck into her and meet her halfway. I couldn't concentrate on more than one thing anymore as I started to release. My fingers slipped from her and dropped to my stomach as I released thick ribbons of cum inside of her. My head started spinning from all the pent-up energy I was releasing.\n\nShe dropped down and took my cock all the way inside and forced my butt back onto the towel. She just rocked now as she looked down at me with her content smile as my cock continued to pump into her. I was grunting with animal lust as her one hand left my chest and covered my mouth. She had this huge and seductive smile on her face as I finished and flattened out on the towel.\n\nShe continued twisting her hips slightly as she smiled at me. This devious smile that looked so perfect on her face right now. She looked so sexy as she sat above me and panted with me. We were dripping with sweat from the act and the heat of the day roasting us. There was just the slightest breeze starting to pick up as she leaned down and kissed my mouth.\n\nI kissed her back and traced her tongue before she playfully pulled back and giggled her innocent little girl giggle. I looked up at her and couldn't help but smile and laugh a little with her. She was so happy, so free right now. Like, the weight of the world had been lifted off her shoulders and she could be who she wanted to be. She wasn't labeled with me, she had no limits and no expectations here. This was the true Emma and I was happy she was sharing this side of her with me. I knew the fun loving and carefree side of her, but I didn't know she had a wild, sexual side to her.\n\n\"What?\" she asked as I smiled at her still.\n\n\"Nothing,\" I replied. \"I just love how fun you are right now.\"\n\n\"I do too,\" she giggled.\n\n\"Do me a favor and don't ever lose your sense of adventure.\"\n\n\"I won't,\" she said and held up her pinky.\n\nI held mine up but didn't wrap it around hers just yet. \"What do you want me to swear to?\"\n\n\"Always be there for me if I need you,\" she answered.\n\n\"I will,\" I said and took her pinky into mine.\n\nShe leaned down and kissed me softly on the mouth again. These quick little kisses that made us both laugh as my hands traced her sexy body until she pulled away and looked at me again.\n\n\"You ready to take a dip with me?\" she asked. \"Show me what it's like?\"\n\n\"Yeah, I'm soaking wet again with sweat.\"\n\n\"Ok,\" she sighed. \"Hold still a second.\"\n\nShe took a calming breath then slowly worked herself up my semi hard shaft until just the head was resting inside. She pulled quickly off and spun away to the sand next to my towel. She stood up as I sat up then climbed to my feet. She was looking around at the other umbrellas as I wrapped my arm around her hip and started to lead her to the water.\n\n\"Don't look at them,\" I said. \"Don't worry about them, don't think about them. They aren't even there. It's just me and you.\"\n\n\"I don't know how you can be so confident and relaxed. I feel like everyone is looking at me.\"\n\n\"Who cares,\" I said. \"Everyone out here has come here for the same reason. They want to enjoy the beach without a suit on. They are just as naked as you are.\"\n\n\"I guess,\" she sighed.\n\nWe reached the water and waded out until we were chest deep. She took a breath and dove under the water and swam along. She surfaced and blew water from her mouth then twirled and twisted like a little kid enjoying the freedom.\n\nI laughed as she swam around for a few minutes before diving under again. She surfaced right in front of me, cleared the hair from her face, and then wiped her eyes. We stood there a few feet apart as we started talking and enjoying the water as it cooled our bodies from the heat. We talked and laughed until she splashed me with water again. That started another splash war that ended with her wrapping up my arms with hers so I couldn't throw any more water on her.\n\n\"Thanks for doing this with me, Jay,\" she said.\n\n\"I promised you the beach,\" I offered.\n\n\"Yeah, but you didn't promise that you'd go and run around naked with me.\"\n\n\"Added bonus.\"\n\nShe laughed now as we held each other. Her body was having an effect on me as she remained wrapped around me so close to my face. I also couldn't ignore the fact that she was sexy as hell, completely nude, her tits were rubbing against my chest, and her hand was now teasing my cock. It was already hard again, her hand was not helping the situation any. I closed the distance and found her lips in a soft kiss as her tongue traced mine.\n\nHer kiss grew more intense as she stopped teasing my dick. Her hands now cupped my face and pulled me into her lips as she wrapped her legs around my waist. I squeezed the supple flesh of her ass as our tongues tangled together. These soft little whimpers were leaving her mouth as our lips crashed together.\n\nI could feel her hips turning against my cock as we kissed. I was sliding along the lips between her legs as I held her weightless body. It started out as an inch or two but quickly turned into her sliding along the entire length. I let her tease for the moment and continued on tasting her passionate kiss as I slowly pulled us deeper into the water.\n\nI knew where this was leading and the further I got away from shore the less noticeable we would be. I got us to neck deep water and had to stop. Any further and we would be swamped by the waves that were softly rolling by us. I let her turn her hips until my cock was right at her entrance before I made my move. I let two fingers curl around her butt and push against the head of my cock. As she slid back my cock slipped into her wetness.\n\nShe panted then whimpered in surprise and pleasure as my head split her lips and opened her up. She slowly worked her hips and took my entire length into her center before she rested and used her muscles to squeeze me. I groaned into her mouth as she did that. She broke the kiss and looked at me.\n\nHer lips were swollen and red as she panted and let her breath hit my face. The skin on her neck was flush and I couldn't help but lean in and kiss her there. I worked her jaw line up to her ear lobe and left wet kisses before turning and going down her neck. She pulled my lips tighter to her neck and let her fingers tangle in my wet hair. Her hips started moving but barely as she was being cautious.",
        "\"Fuck, Jay,\" she growled. \"How the hell do you know all my spots already?\"\n\n\"I'm a fast learner,\" I said between working her neck.\n\n\"Don't leave any marks,\" she warned.\n\n\"Give me a reason not to,\" I countered.\n\n\"They will see us,\" she sassed.\n\n\"So?\"\n\n\"Jason, you're bad.\"\n\n\"Me?\" I questioned in my teasing way. \"You're the one fucking me right now. I'm just kissing your neck.\"\n\n\"This isn't fucking,\" she retorted. \"This is teasing.\"\n\n\"Well... stop teasing me and get to it,\" I said as I stopped to look at her.\n\nShe looked at me with her seductive smile as I smiled back at her. She was just about to turn her head and look back to the beach when I reached up and stopped her.\n\n\"They are not there. We are here. If you look guilty then you are. We are just two people out in the water holding each other. Just turn your hips and squeeze your muscles.\"\n\n\"And that will get you off?\" she asked innocently.\n\n\"I get off on watching you get off. Will it get you off?\"\n\n\"I'm already on edge,\" she cooed.\n\n\"Take me with you over the edge then.\"\n\nShe leaned back but kept her hands folded around the back of my neck as she started working her hips. I was buried so deep inside of her as she humped me and squeezed her muscles. We were moving barely an inch in either direction but it was intense. I started pulling her hips in tune with her turns as I felt the tingle start to build.\n\nShe was soaking wet as my cock pushed against her end with each turn of her hips. Even in the water she was still on fire down there. This liquid heat surrounding my cock as she squeezed her muscles and brought this intense pleasure to the both of us. I could see it on her face and in her eyes as they locked on and stared right back into mine that she was almost there.\n\nHer eyes rolled and closed as her mouth hung open. Her cunny was squeezing my cock harder as her hips twisted faster. Soft pants and moans accompanied a single cuss word over and over as the pleasure built inside of her. I couldn't hold back any longer and started to release. My cock swelled then pulsed and washed her walls with my seed, filling her up as she yelped a little louder and followed mine with her release.\n\nWe were panting in each other's face as our foreheads rested against one another. She was giggling softly and squeezing her muscles to tease my cock still. I already wanted to fuck her again. I wanted to take her up to the towels and bend her over and slip into her from behind. Wanted to see my cock stretching her lips from behind as I smacked her ass and pulled her hair. The things this woman made me want to do to her were incredible.\n\nI leaned in and kissed her again. I left the wet and long kiss on her lips before I pulled away and looked at her with my devious smile. She already knew I was thinking about the next one. She wagged her finger at me.\n\n\"You are being a bad boy,\" she said coyly. \"I don't know what exactly you are thinking but I need some time to recover from that one.\"\n\n\"Ok,\" I said. \"You've got five minutes. That should be enough time.\"\n\n\"Bad,\" she giggled. \"How about after dinner?\"\n\n\"I get you for dessert?\"\n\n\"Mm-hmm,\" she growled. \"Any way you want.\"\n\n\"That's dangerous,\" I laughed.\n\n\"Indeed, but I'm game.\"\n\n\"Speaking of dinner,\" I sighed. \"Do you know what time it is?\"\n\n\"No, but we should probably check.\"\n\n\"In a minute,\" I said with my smile.\n\n\"Why?\"\n\n\"My friends are walking by,\" I said as I waved back to them.\n\n\"Oh gawd,\" she said and hung her head. \"They probably saw us.\"\n\n\"You mean, they are seeing us? I'm still inside you.\"\n\n\"I know,\" she said, her mouth making a big O as she spoke. \"You feel pretty darn good inside of me.\"\n\n\"Do I?\" I asked. I pulled her butt and slipped along her soaked tunnel.\n\n\"Mmm-hmm,\" she growled. \"I hope they enjoyed the show.\"\n\n\"I was thinking about taking you back up to our spot, bending you over and hitting you from behind while pulling your hair and smacking that ass. Do you think they would like that too?\"\n\n\"Jason!\" she squealed in her little girl voice. \"Not now, later I told you.\"\n\n\"But they won't be around later,\" I said.\n\n\"So, go give them your number and tell them to come by later,\" she said.\n\n\"What? Seriously?\"\n\n\"Absolutely... not. I like the thrill of being outside, but I don't want somebody to intentionally watch us.\"\n\n\"You had me going for a minute,\" I chuckled.\n\n\"Come on,\" she said and kicked her heels into my butt. \"Take me closer to shore so I can touch.\"\n\nI neighed like a horse before I bucked into her then started moving towards shallower water. Once we got to about chest deep, she pushed away from me and dove underwater before coming up and splashing me. I splashed her and started chasing her to dunk her. She knew I was after her and took off towards shore.\n\nWe both raced through the water. I had the longer legs so I covered the ground faster than her little legs could. She did manage to reach the shore where the waves broke on the sand before I caught her. I scooped her up into my arms and cradled her. She thrilled with laughter and slapped at me playfully as I spun us around and around and laughed with her.\n\nI spun us around to the water's edge again and pretended like I was going to toss her in. She squealed with fear then started laughing and snorting when I flung her up then caught her again before running with her towards our spot on the beach. We both must have looked like a couple of idiots right now but I didn't care. Emma's laughter was about the only thing that mattered to me at the moment and she was laughing so hard it made me laugh right along with her.\n\nI reached our spot then stopped and held her so she could calm down and stop laughing so hard. She was still all smiles along with her little girl giggles as I kissed her softly on the mouth. She giggled and smiled between quick little kisses again and again. She wiggled finally so I set her down. We both sat down and slipped under the shade while still chuckling for no good reason.\n\nShe reached over and opened the bag to get the beers out that we had started. She shuffled around and hid the lube and the plug at the bottom before finding her phone. I took a sip of my cold beer and looked out as the two girls were walking by again and waved at me once more. I smiled and tipped my beer towards them as they said something to each other and laughed but continued on.\n\n\"Is the brunette naked now too?\" Emma asked.\n\n\"Looks like it,\" I said.\n\n\"Man, girls are just dropping their clothes for you all over the place today,\" Emma joked.\n\n\"Let's hope it stops once we leave the beach,\" I joked. \"I'd hate to see your mom drop her undies for me.\"\n\n\"Jason!\" she cried. \"You're a pig.\"\n\nI looked over at her with a sheepish grin on my face. She was smiling at me in her cute way so I knew she wasn't mad.\n\n\"What time was it?\" I asked.\n\n\"Just after four thirty.\"\n\n\"Let's finish the beers then get on our way,\" I suggested.\n\n\"Sounds good.\"\n\nI took a long drink from my beer then looked over at Emma as she too took a long drink. I smiled at her sitting there leaning back on her elbows. Her legs were parted as she sat there without a care in the world. She noticed I was looking at her and smiled softly back at me.\n\n\"What are you smiling about?\" she asked.\n\n\"Nothing. Just noticing how beautiful you are sitting here right now.\"\n\nShe snorted a little. \"Right. You don't have to lie to me. That's just mean.\"\n\n\"If I'm lying then I'm dying,\" I said. \"But seriously, you look so perfect sitting there right now. So beautiful.\"\n\n\"Thanks, Jay,\" she smiled and turned her body so she could lean against me. \"You're the best.\"\n\n\"Now who's the liar?\"\n\nShe looked up at me with her mouth hung open in mock shock. I leaned in and kissed her before taking the last sip of my beer.\n\n\"I have two more in the bag if you want another,\" she informed me.\n\n\"Trying to get me drunk so you can have your way with me?\" I asked.\n\n\"Off of three beers?\" she laughed.\n\n\"I'm too young to drink. It's possible.\"\n\nShe laughed again as she handed me another beer then returned to leaning on me. I popped the cap off and took another long drink.\n\n\"So, you've had sex at the beach twice and once on the beach,\" I started. \"Did sand get in places it shouldn't have?\"\n\n\"No,\" she answered.\n\n\"So, your friend was wrong about the beach then?\" I asked.\n\n\"Oh... yeah,\" she said playing along. \"Definitely wrong.\"\n\n\"Too bad for your friend,\" I joked as I took a sip.\n\n\"Yeah... she can be a bitch sometimes.\"\n\nI laughed as Emma took another sip. We both looked out at the water before she spoke.\n\n\"Freaking Todd Bowman,\" she hissed.\n\n\"Who?\" I asked.\n\n\"Todd Bowman. That's the guy that I tried to have sex with at the beach my freshman year of college.\"\n\n\"Ohh?\" I said interested now.\n\n\"We had been dating for a few months at that point. We were on spring break, it was nighttime, and it was raining out too. We snuck away and left his drunk friends at the bar and headed down to the beach.\" She paused to reflect for a moment.\n\n\"He was in such a big hurry that he basically threw me down into the sand under the boardwalk to have sex with me.\" She looked at me now. \"How romantic, right?\"\n\n\"Sure sounds like it,\" I offered.\n\n\"It wasn't,\" she continued. \"I got sand up my bum. Then he stumbled and kicked sand into my girly parts as he tried to get his shoes off to get his shorts off. It was just bad. I knew I wasn't going to enjoy it and it was going to feel like sandpaper, so I ended up blowing him.\"\n\nShe took a drink then looked at me again. \"I can't believe I'm telling you this.\"\n\n\"Remember that open and honest thing we had the other night?\" I asked.\n\nShe nodded. \"Yeah.\"\n\n\"It stays between us.\"\n\n\"Well, that night was the first time my heart got broken at college,\" she started again. \"I found him in the bathroom with another girl at the bar after I had gone back to the room to rinse off.\"\n\n\"Fuck, Em, that sucks.\"\n\n\"Tell me about it,\" she sighed. \"I sure know how to pick them.\"\n\n\"Wait, so, you blew him on the beach then he found some random at the bar right after and was banging her in the bathroom?\"\n\n\"I should probably explain that part a little better,\" she answered. \"There was a group of us that went together. Him and I, four of his guy friends, and two other girls. I thought the girls were with two of the other guys but they weren't. They were just along for spring break. He and I were the only couple.\"\n\n\"Ok,\" I nodded.\n\n\"I blew him under the boardwalk then we went back to the bar. We were there for a while after that, but I couldn't stand the freaking sand in my parts anymore, so I went back to the hotel room to shower and change. When I got back, I found out he was in the bathroom with one of the other girls that came with us.\"\n\n\"Sorry, Emma,\" I offered.\n\n\"It's not your fault,\" she replied.\n\n\"I know, but on behalf of decent guys everywhere, we all aren't like that.\"\n\n\"Really?\" she quipped. \"Because I've got a half a dozen more stories just like that one. Which is why I don't date and I don't have sex anymore. Well... except for now. But you're different, I know you and we don't have any expectations.\"\n\n\"We don't?\" I asked. \"I expect a great adventure and one hell of a good time.\"\n\n\"Well?\" she smiled. \"Have I lived up to that so far?\"\n\n\"The weeks not over yet,\" I chuckled. \"I'll let you know on Saturday. You're off to a great start though.\"\n\n\"Gee, thanks,\" she said sarcastically.\n\n\"But seriously though. I'm sorry guys are such dicks to you.\"\n\n\"Ah,\" she shrugged. \"I'll find somebody someday or I'll die alone.\"\n\n\"No, don't say that,\" I said. \"There's a guy out there for you. You just haven't found him yet.\"\n\n\"I'm not too worried about it right now,\" she said honestly. \"It'll happen when it happens.\"\n\n\"That's the spirit,\" I cheered.\n\n\"Yay,\" she cheered sarcastically.\n\n\"So... what happened after you found him with the other chick?\" I asked carefully.\n\n\"I left the bar, went back to the hotel room, packed up my stuff and left. I rented a car and drove back to school and spent the rest of spring break all alone.\"\n\n\"Where were you guys at?\" I asked.\n\n\"Daytona Beach,\" she replied. \"It wasn't that far of a drive back home.\"\n\n\"But still, I mean that still sucks.\"\n\n\"It was a learning experience,\" she offered.\n\n\"That's one way to look at it,\" I agreed.\n\n\"You about ready?\" she asked after we both took another sip from the beers.\n\n\"Yeah,\" I sighed. \"We don't want to piss your dad off by being late. We'll both get grounded.\"\n\nWe both started putting clothing back on over our naked bodies. Once we were covered, I took down the umbrella as she shook the towels and tossed them into the bag. We both slammed down the remainder of our beers before we took one last look around then headed for the cart.\n\n\"Where is that last beer at?\" I asked as we reached the cart.\n\n\"Still in the bag,\" she answered. \"Why, you want it?\"\n\n\"We probably should get rid of it before we get back,\" I offered. \"Ronnie won't care if you drink but he might care if I do. It'd be better if we came back empty.\"\n\nShe was already digging it out for me. She handed it to me then dumped the ice.\n\n\"I guess I'm driving then,\" she said.\n\n\"You drove us here,\" I replied with my smile. \"It's only fair you drive us back.\"\n\nI popped the cap as she started driving us back towards the hotel. I played on my phone and drank the last beer as she drove us along. We arrived a few minutes later, returned the umbrella, tipped the guy who let us borrow it, and then headed for the room.\n\n\"How long you going to be in the shower?\" I asked.\n\n\"Fifteen to twenty minutes,\" she replied.\n\n\"What the hell do you do in there that it takes you that long?\"\n\n\"Well... I've got to scrub, wash and condition my hair, shave my legs and my parts so I'm smooth for later, then I let the water pelt me so I relax.\"\n\n\"Let me go first then?\" I asked. \"I'll be in and out in five minutes.\"\n\n\"Go on then,\" she sighed. \"I can wait.\"\n\nWe reached the room and opened the door before cautiously entering and looking around. To our surprise, Ronnie and Joy weren't in the room.\n\n\"Where are they?\" she asked.\n\n\"Are you sure dinner was at six?\" I asked. \"Maybe it was at five.\"\n\n\"We're late if it's at five.\"\n\n\"Let me get in the shower. You text them and make sure it's still at six. Don't tell them where we are if they ask though.\"\n\n\"What do I say if they ask?\"\n\n\"Tell them we are on the sixteenth tee and might be a little late,\" I shrugged. \"Make something up.\"\n\nI shut the door to the bathroom and jumped in the shower. Five minutes later, I was done and wrapped up in a towel looking for something to wear for tonight.\n\n\"They went to the bar at the pro shop,\" Emma said as I walked by to get to my bag.\n\n\"What the hell are they doing on our turf?\" I asked.\n\n\"I don't know,\" she replied. \"They said they were finishing up then they are heading back here.\"\n\n\"Ok,\" I said as I dropped the towel and slipped on my boxers.\n\n\"I'm going to get in the shower,\" she called.\n\n\"Alright,\" I called back. \"I'm going to get dressed then go call the boat captain to make sure we are all set for tomorrow.\"\n\n\"Ok.\"\n\nI got dressed quickly then left the room and headed for the cart corral before she noticed I was gone and before Ronnie and Joy would be back. I got my cart and hit the road on my way to my destination in hopes of having a little fun and paying Emma back for tormenting me today.\n\n\"Welcome to Sugar and Spice, Naughty or Nice,\" the girl at the sex shop said as I walked in the door.\n\n\"I'm kind of in a hurry,\" I said. \"Can you help me find something specific?\"\n\n\"Sure,\" she smiled. \"What are you looking for?\"\n\n\"I need a remote-controlled vibrator,\" I smiled.\n\n\"Wire or wireless?\" she asked.\n\n\"Wireless.\"\n\n\"We have just the thing,\" she smiled again. \"We just got these in about a week ago. I haven't had a chance to try one out myself, but Jill has. She's my manager and she says it works pretty well.\"\n\nShe handed me the box so I could look it over. \"How's it work?\"\n\n\"This part goes inside,\" she pointed to the fatter end. \"This part hangs out so it can be retrieved. This is the remote. It's that simple.\"\n\n\"Batteries?\"\n\n\"Included inside the box.\"\n\n\"I'll take it.\"\n\nWe walked to the counter so she could ring me up.\n\n\"Who's the lucky lady?\" she asked.\n\n\"My girlfriend,\" I smiled. \"She was in here earlier and bought the plug.\"\n\n\"I remember her,\" she smiled back. \"Very shy but very pretty.\"\n\n\"Short, brown hair, blue eyes?\" I asked.\n\n\"Mmm-hmm, that was her.\"\n\n\"She's not shy once she loosens up,\" I offered. \"It just takes somebody to give her a push once in a while.\"\n\n\"Is that what this is for?\" she asked coyly.\n\n\"We are going to play a little game tonight at dinner with her parents,\" I grinned.\n\n\"You bad boy,\" she said with a wicked smile.\n\n\"I hope she plays along,\" I said as I paid.\n\n\"Good luck,\" she smiled again as she handed me the bag with the toy inside.\n\nI walked out the door and jumped back in the cart. I started driving and opened the box to get the toy out and the batteries in place before I got back to the hotel. I slipped it and the remote into my pocket then discarded the trash before reaching the hotel. I dropped the cart off and headed back to the room. I opened the door and saw Uncle Ronnie sitting on my bed talking to Emma as she brushed her hair out by the mirror that was hung on the wall by the slider.\n\n\"Hey, Jason,\" he called.\n\n\"Hey, Uncle Ronnie. I just got off the phone with the boat captain. We are all set for tomorrow at six in the morning. We have to meet him at the dock on First Street and A Avenue so we can head out.\"\n\n\"Alright,\" he cheered. \"I can't wait.\"\n\nHe got up and headed back to his room to find Aunt Joy to tell her the good news. I looked at Emma as she stood there in a sexy black cocktail dress and finished pulling her hair back to tie it into a loose bun.\n\n\"How come I didn't get to pick out your outfit tonight?\"\n\n\"You snooze, you lose,\" she replied.\n\n\"You guys ready?\" Ronnie called. \"If we leave now, we will get there right on time.\"\n\n\"I'm ready if you are,\" I said.\n\nWe left the room together and headed down the hallway to get a cart. Ronnie insisted that we all pile onto one cart. Emma and I didn't have anything planned after dinner at the moment, so we all went on one cart. I sat in front with Ronnie so we could talk about the trip tomorrow and what we had been up to for most of the day.\n\nWe arrived at the restaurant and were seated right away to a four top square table. Ronnie sat across from me, Emma was to my right, and Joy was to my left. We were given menus and our drink orders were taken right away. Once the waitress left the table, we started looking over the menu and made small talk.\n\n\"You look like you got some sun today, Aunt Joy,\" I said. \"You should have covered up better or used sunscreen.\"\n\nI got a kick from Emma under the table and flinched a little as she caught my shin. She was glaring at me but couldn't help but smile once her mom started talking.\n\n\"I told your Uncle Ronnie that we needed to rent an umbrella,\" Aunt Joy said.\n\n\"It's twenty dollars for the day,\" Ronnie groaned. \"Highway robbery I tell you.\"\n\n\"Uncle Ronnie,\" I laughed. \"They gave you the room for free, you can give them a little back.\"\n\n\"That's how they get you,\" he continued on. \"They nickel and dime you to death. The drinks at the pro shop bar were outrageous.\"\n\n\"We've been getting ours for free,\" Emma chimed in now. It was my turn to kick her under the table.\n\n\"Because I've been paying for them,\" I said quickly. \"What, do you think they just give soda away?\"\n\nUncle Ronnie studied Emma's face and waited for her to crack. She held steady and was saved by the waitress showing up at the table with the drinks. I pulled my phone out and texted Emma then held it down below the table and pointed to it so Emma would see I wanted her to get her phone out. She looked and carefully pulled her phone from her little purse.",
        "'Way to almost get us busted!'\n\n\"Sorry,\" she mouthed as she looked at me.\n\n\"Are we ready to order?\" the waitress asked.\n\n\"I have a question about this right here,\" Ronnie started and pointed to something on the menu.\n\nI texted Emma again. 'You wanna play?'\n\nShe looked at her phone then responded. 'What r we playen?'\n\n'You see. Give me yur panties first.'\n\nShe read my text then looked at me with her devious smile before she replied.\n\n'I like the sound of this game. Cant give u my panties though.'\n\n\"You guys want any appetizers?\" Ronnie asked.\n\n\"Yeah,\" I replied as I looked at the menu quickly again. \"Those chicken poppers and some pretzel bites.\"\n\n\"Two things?\" Ronnie questioned.\n\n\"I didn't get lunch today. Somebody wanted to go to the beach as soon as I got back from golfing. And, my mom called so I was stuck talking to her.\"\n\n\"What did she want?\" Ronnie questioned.\n\n\"Ronnie,\" Joy hissed. \"You're being rude to the waitress.\"\n\n\"I am?\"\n\n\"Yes! She is trying to take our order.\"\n\n\"Sorry, miss,\" Aunt Joy said to the waitress. \"Go ahead and get what Jason wanted and throw in some onion rings with the dipping sauce. That was amazing the other night when we had it.\"\n\n\"You got it,\" the waitress smiled.\n\nWhile that exchange was going on, I quickly texted Emma. 'We cant play if you dont give me ur panties.'\n\n'Give me u hand under table,' she texted back.\n\n\"For what?\" I mouthed to Emma.\n\nShe squinted and shook her hand by my hip telling me just to give her my hand. I wasn't really paying attention to her very closely, so maybe she had slipped her panties off already and was going to give them to me. I slipped my hand under the table and the tablecloth and rested it on Emma's knee. She took my hand but stopped when Ronnie started talking again.\n\n\"Are we ready to order or do we need a minute?\"\n\n\"I need a minute honey,\" Aunt Joy replied. \"I don't want to get the same thing I got the other night.\"\n\n\"But I thought you liked it.\"\n\n\"I did but...\"\n\nI looked at the waitress now. \"You might as well put the appetizers in then come back in five minutes. These two are going to talk it out, he's going to change his mind, then he's going to have to find his glasses to read the menu, she's going to have to borrow his glasses once he's done, it's going to be a big production. It's really a pain to take these two anywhere these days.\"\n\nAll the girls started laughing at my comment. Ronnie didn't find it very funny.\n\n\"Ha-ha,\" he grumbled as he pulled his glasses out. \"Very comical, Jason. You just wait. You'll get old like me one of these days and then you'll know what it's like.\"\n\nI looked at the giggling waitress again. \"See, I was spot on with my analysis of the situation. Come back in five minutes. We should be ready by then.\"\n\nAs I was speaking, Emma pulled my hand off her knee and moved it between her legs. She twisted my hand around and moved her body over and opened her legs. My fingers touched the bare skin between her legs and nothing else.\n\n\"Ok,\" the waitress smiled. \"You got it. I'll put in the appetizers then come back.\"\n\nI pulled my hand back as the waitress left the table. I was surprised that I didn't stutter my words as my brain realized I was touching Emma down there. I looked at Emma as she grinned from ear to ear.\n\n\"That's why,\" she mouthed.\n\n\"Bad,\" I mouthed as Ronnie spoke.\n\n\"So, what did your mom call about?\"\n\n\"I'll tell you once you figure out what you want to eat,\" I said.\n\n\"I already know what I want,\" he smiled. \"It's your Aunt that doesn't know. I'm just looking in case I see something better.\"\n\n\"I'm looking,\" she sighed. \"Give me a minute.\"\n\n\"She called to see if she could come visit me over spring break,\" I said to answer his question.\n\n\"This year or next?\" he asked.\n\n\"This one but I told her to try for next year. Then we made small talk before she had to go.\"\n\n\"Wow,\" he said in shock. \"She didn't ask for anything else?\"\n\n\"Nope,\" I lied a little. \"She just wanted to visit and chat.\"\n\n\"She's softening you up for something,\" Ronnie offered.\n\n\"Maybe not,\" Joy chimed in now. \"Maybe she just wanted to talk.\"\n\n\"Yeah right,\" Ronnie sighed. They went back and forth now.\n\nI texted Emma as they started talking about my mom. 'Put this inside of u.'\n\nI pulled the vibrator from my pocket and rested it on her knee as she read the text. She reached her hand down and felt what I had in my hand. She smiled her wicked and devious smile as she figured out what it was. She took it from me and set it in her lap as I pulled my hand back to text her again.\n\n'At the table no bathroom!'\n\nShe texted me back to back texts.\n\n'How do I turn it on?'\n\n'What!'\n\n'Put in n I tell u how.'\n\n\"Jason?\" Ronnie called.\n\n\"Yeah,\" I answered.\n\n\"What are you doing over there?\"\n\n\"Checking emails,\" I replied calmly.\n\n\"At the table? You know I hate that.\"\n\n\"I know,\" I sighed. \"I'm sorry but I have to. I didn't have time today and I have to know what we are doing next week for golf.\"\n\n\"You can't do that later?\"\n\n\"It's going to bother me if I don't. I'll be done in a second.\"\n\n\"Fine. Make it quick, please.\"\n\nI noticed that Emma had shifted around in her seat and must have slipped the vibrator inside. She was so subtle about it I hardly noticed she had even moved until the end when she settled back down. Her text confirmed that she had slipped it inside.\n\n'It slipped right in. I'm so wet right now. How do I turn it on?'\n\nI set my phone on the table and reached into my pocket. I checked and saw that Ronnie was holding the menu up to get better light, so he was blocked. Aunt Joy was leaned back and looking at hers. I pulled the remote out and showed Emma before pushing a button to turn it on. She jumped a little as it must have pulsed inside. I clicked it a couple of times and changed the settings and the speed. I had no idea what it was on, but it was on. She smiled her wicked smile as I texted.\n\n'How that feel?'\n\n'Weak. My fingers r better.'\n\nI clicked the remote twice and increased the speed.\n\n'Better. Go slow'\n\nI clicked the remote again to make it speed up. She jumped a little and raised her eyebrows now. I clicked it again as she twisted and closed her legs then chewed on her bottom lip.\n\n\"Have we decided?\" the waitress asked.\n\n\"I'll have the tomahawk steak, mashed potatoes, and the green beans,\" I said.\n\nI clicked the remote again and changed the program to the next thing. I wasn't sure what it was, but it must have been something because Emma jumped as she tried to order.\n\n\"I'll have the salmon,\" she said excitedly. \"With a sweet potato and broccoli, please.\"\n\nUncle Ronnie looked at her funny before he placed his order. I was too busy smiling to myself to even hear what he ordered. I watched as Emma panted softly to herself and wiggled around in her chair. Aunt Joy was next to order as I clicked the button and made it jump up another level. Emma gripped my leg and dug her nails into my skin as she crossed her legs and twisted around.\n\n\"Ok,\" the waitress said. \"The appetizers are ready. I'm going to put this in and bring them back.\"\n\n\"Are you ok, Emma?\" Uncle Ronnie asked.\n\n\"Yeah,\" she said as normally as she could. \"I think I got a little too much sun today. I feel flush.\"\n\n\"Drink some water,\" Aunt Joy suggested.\n\n\"Yeah,\" Emma panted a little.\n\nShe took a sip and opened her legs again. She reached down under the table in between her legs and must have pulled on the one end a little to adjust it. I was tempted to push the button again, but I let it go for the moment. She adjusted herself in the seat again and tried to act normal.\n\nThe kitchen staff arrived with the trays of food and started to place them around the table. I clicked the remote and changed the setting again making Emma jump in her chair a little.\n\n\"Fuck,\" she mouthed to me. Her nails dug into my skin again as she lifted her butt a little out of the chair.\n\n\"Are we missing anything?\" one of them asked.\n\n\"I think that's all of it,\" Ronnie replied. \"Jeez, that's a lot of food.\"\n\n\"I can probably eat all of this by myself,\" I said.\n\nI grabbed some pretzel bites before passing the plate to Aunt Joy. Emma continued to squirm around in the chair and grip my leg. Her nails were starting to hurt my leg now, so I clicked the remote again to turn it down a level. She dug harder into my leg.\n\n\"Jason,\" she half whimpered. \"Can I have a chicken popper?\"\n\n\"Sure,\" I smiled as I reach for one.\n\n\"No-no,\" she barely managed to say. \"Stop! That one.\"\n\nI reached out and tossed a popper on her plate then clicked the remote to stop the vibrator. Her grip increased on my leg after I clicked it. I looked at her now as she pleaded with her eyes and mouthed no-no again. I held the remote out by her leg and clicked the button again to stop it. She flinched and kicked the table leg making the table move. Her glass tipped over sending ice and water right off the edge of the table into her lap.\n\n\"Shit!\" she yelped.\n\n\"Emma!\" Ronnie quipped. \"Language. What the heck is going on over there?\"\n\n\"Sorry, Uncle Ronnie,\" I said quickly. \"It was me. I have a leg cramp that I'm trying to work out. Sorry I spilled your water, Emma.\"\n\nI was clicking the remote repeatedly to try and get it to stop but it appeared that it wasn't working. Emma sprang up from the table and yelped as she headed for the bathroom. I pushed the water back with my towel before I pretended like I had some water on my shorts too and excused myself quickly to follow her.\n\n\"Emma,\" I called as I knocked on the door.\n\n\"You little shit,\" she called while laughing.\n\n\"Can I come in?\"\n\nThe door clicked and opened. I slipped inside the single stall bathroom with her as she held the vibrator in her hand. It was still buzzing as she stood there panting.\n\n\"Sorry about that,\" I started. \"I was clicking it to shut it off.\"\n\n\"Holy shit,\" she panted still. \"I came so freaking hard.\"\n\n\"You're not mad?\"\n\n\"That could have been bad but no, I'm not mad at you. It wasn't your fault.\"\n\nI laughed with her now.\n\n\"No more games tonight,\" she said but still laughed.\n\n\"Agreed,\" I smiled.\n\n\"And throw this thing away.\"\n\nI clicked the remote again and wouldn't you know it, the buzzing stopped. We both laughed again as she shook it and pretended to make sure it was dead.\n\n\"What the hell are we going to say when we get back out there?\" she asked as we stopped laughing.\n\n\"I got a leg cramp and I kicked the table and spilled your water on your lap,\" I said.\n\n\"But I kicked the table,\" she said.\n\n\"He doesn't know that.\"\n\nShe sighed. \"You think that will work?\"\n\n\"Well... we could tell him that I gave you a vibrator and you played with yourself......\" I didn't get to finish before she swatted me and had that sexy, stunned look on her face.\n\n\"I most certainly did not play with myself,\" she sassed in her little girl voice. \"That was you!\" The smile on her face right now was priceless.\n\n\"Which story are we going with then?\" I asked.\n\n\"Neither,\" she said after some thought. \"How about we climb out the window and run away? They do it in the movies all the time.\"\n\nI looked over her shoulder at the walls behind her. \"There's no window to climb out of in here. Next idea.\"\n\n\"Damn,\" she hissed playfully. \"Plan foiled.\"\n\n\"We go with the first story if he asks,\" I started. \"As soon as we get back to the table you apologize for cussing and say that this is your favorite dress and you didn't want to ruin it. He'll scold you about swearing then move onto me, but the actual incident will probably be forgotten. The wait staff probably already has it cleaned up by now.\"\n\n\"But,\" I said as I moved by her and went to the sink to splash some water on my shorts. \"You have to use your whiny little voice.\"\n\n\"What?\" she asked.\n\nI mocked her and pretended I was her when she was younger and used a high-pitched voice. \"Daddy, I'm sorry I cursed, daddy. But Jason made me do it.\"\n\n\"I do not sound like that,\" she said highly annoyed.\n\n\"Wanna bet?\" I laughed.\n\n\"Jason!\" she sassed and almost sounded like I had when I mocked her. \"You take that back.\"\n\n\"Fine,\" I chuckled still. \"I take it back. But... go with the little girl voice anyway. Trust me, it'll work.\"\n\n\"Why did you splash water on your shorts?\" she asked now.\n\n\"Because I told him I got wet to. I have to make the lie believable.\"\n\n\"Oh,\" she said as she grabbed a towel and reached under her skirt to pat her puss. I looked at her with interest.\n\n\"We are lucky I did spill the water. I was so freaking wet. I was leaking down my leg when I took off running and it wasn't from the water either.\"\n\n\"Really?\" I smiled. \"We better hold on to the pink play toy. It might come in handy later.\"\n\n\"I'm not letting you put that thing in me unless we are alone and I have the remote.\"\n\n\"What fun is that then?\"\n\n\"Let me put it in you then,\" she said coyly.\n\n\"I don't quite have the same parts as you,\" I joked. \"In case you haven't noticed.\"\n\n\"Not up front, but in the back,\" she smiled still.\n\n\"My prison wallet isn't built for objects,\" I said quickly.\n\n\"Your what?\"\n\n\"You know? In prison they put things in their butts to sneak them in...... never mind.\"\n\n\"You watch too much TV,\" she laughed.\n\n\"Come on,\" I said. \"We have to get back out there. Play the part and I'll bail you out if I need to.\"\n\n\"I know,\" she sighed deeply.\n\nHer toy and the remote went into my pocket before we left the bathroom. We both walked back out to the table and sat down. Emma started right away and put on a surprisingly good performance.\n\n\"Daddy, I'm sorry I said what I said. Will you forgive me, daddy? This is one of my favorite dresses and I had to work two extra shifts at the smoothie shop just to buy it. And, man did it stink too because it was right around Christmas and the place was always slammed. I still think I have smoothie in my hair from when the blender blew up on me.\"\n\nI couldn't help but smile as she was going on and on. She was doing better than I thought and the little girl voice was the perfect touch. Ronnie set his fork down and looked at Emma before letting out a sigh.\n\n\"I guess it's alright. You aren't fourteen anymore. Sometimes I forget how much you've grown up and how fast it happened. Just try and... keep it PG for old time sake.\"\n\n\"No problem, daddy,\" she smiled. \"Thanks.\"\n\nShe glanced at me as my jaw was practically sitting on the table. She was pretty good at this bullshit thing if given proper instructions.\n\n\"What do you have to say for yourself?\" Uncle Ronnie looked at me now.\n\nI snapped to and looked at him. \"Oh, Uncle Ronnie, I'm so sorry I kicked the table and tipped over the glass,\" I said and mocked Emma. \"I got a leg cramp and tried to kick it out.\"\n\nHe started laughing as Emma kicked me under the table again. I jumped a little as she hit me in the same spot as earlier.\n\n\"I'm just messing with you,\" Uncle Ronnie laughed still. \"That was pretty good though.\"\n\nI picked up my fork and broke open the chicken popper as Emma mouthed jerk to me. I smiled at her then gave her leg a squeeze.\n\nDinner was uneventful after that. We ate, talked for a while after, had dessert, talked some more, then headed back to the room. Ronnie and Joy decided on a walk and asked Emma and myself to join them but we declined.\n\n\"Do you want to go to the pro shop bar?\" she asked me after they left.\n\n\"Not tonight,\" I said. \"Let's find something else to do. There has to be someplace we haven't been that we can get into trouble at.\"\n\n\"Let's get a cart and go for a drive,\" she suggested.\n\n\"Where did you pick up the beer at?\" I asked.\n\n\"The little store at the front of the hotel.\"\n\n\"How much did that cost you?\"\n\n\"It cost you fifteen bucks,\" she laughed.\n\n\"Me?\" I asked.\n\n\"Yeah,\" she laughed still. \"I borrowed some money from your wallet to pay. Was that ok?\"\n\n\"It's too late now if it wasn't,\" I smiled. \"Let's get a six pack and hit the road before they get back.\"\n\n\"Sounds good,\" she smiled and took my hand.\n\nWe picked up the beer, put it in the cooler she brought with ice, grabbed a cart and started driving. She was in the driver's seat again and I was navigating us. I had her head down towards the boat docks first so we could check that out and know right where we had to go for tomorrow morning.\n\nWe arrived and stopped to look at all the boats in the marina. The dock was full of people sitting around drinking beer, talking, and laughing out loud about whatever they were talking about. We thought about going up there and checking it out, but something told me it was a semiprivate area, and we would be alright to go up, but we wouldn't feel welcome.\n\nWe both decided on driving south and further than the nude beach to see how far we could get. We knew we were on a manmade island of some sort since we crossed a bridge to get here and the water went to the Gulf then back into the yacht basin and around to the marina. I figured it had to continue on past the marina since the bridge we crossed to get here was a fixed bridge and way too low for any of the yachts and sailboats to get under. It had to empty out south of the nude beach somewhere.\n\nWe drove past the nude beach and the gated community and continued south for a little longer before the pathway went dark. Up to this point, the pathway had overhead lights and it felt comfortable to drive down. Once we got past the community and the last cart entrance at the south end, the pathway went dark and got bumpy. We had lights on the cart, and we could see, but we had no idea what was really out there. We both agreed to turn around and head north again.\n\nI was just about to tell her to go to the pro shop bar as we were passing by the lighthouse that was next to one of the beaches. She turned off the path abruptly and crossed the road to get to the beach parking lot. We drove to the end of the empty parking lot then turned around and drove back and parked near the lighthouse. We sat there in silence and listened to the waves roll calmly across the sand.\n\n\"Well?\" I sighed. \"Do you want a beer?\"\n\n\"Sure,\" she smiled.\n\nI reached into the cooler and popped the caps off two beers then handed her one.\n\n\"I guess we aren't very adventurous, are we?\" I asked after a sip.\n\n\"I'd like to know what's down there, but I'd rather find out in the daylight,\" she offered.\n\n\"Me too,\" I said. \"I guess I could look it up on my phone.\"\n\n\"So, get to it,\" she said and leaned on me with her cute little look.\n\n\"I ah... left my phone in the room,\" I said as I felt my pockets. \"How the hell do I keep forgetting my damn phone?\"\n\nShe laughed a little. \"I left mine on the bed too. My dad is going to kill me.\"\n\nI looked at her as she still smiled at me with her cute little smile.\n\n\"Oh, daddy,\" I teased her in her little girl voice. \"I'm sorry I was a bad girl, daddy.\"\n\n\"You're such a brat,\" she giggled as I laughed with her.\n\nI wrapped my arm around her and kissed her forehead. \"Yet, you are still hanging out with me.\"\n\n\"You promised me an adventure,\" she replied.\n\n\"Well... what do you want to do?\"\n\nShe giggled and growled a little as her hand went to my leg and rubbed it now. \"I remember you saying at the beach that you were going to bend me over and screw me from behind while pulling my hair and smacking my ass.\"\n\n\"Yeah, I did say that. But you wanted me to do it in front of my new friends, I thought?\"\n\n\"Screw them,\" she said and took a sip.\n\n\"I've got you. Why would I screw one of them?\"\n\nShe snorted a little and lost some of her beer as she laughed then coughed. \"That's not what I meant. I didn't mean literally screw one of them.\"\n\n\"I would hope not,\" I said.\n\n\"Why? You can't handle more than one at a time?\"\n\n\"You know, I've never actually tried that before,\" I answered honestly and looked at her.\n\n\"Hey, don't look at me,\" she said quickly. \"I've only been with guys and only one at a time.\""
    ],
    "authorname": "betweenthesheets",
    "tags": [
        "anal",
        "beach",
        "cousins",
        "love story",
        "public",
        "spring break"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/my-favorite-girl-pt-02"
}