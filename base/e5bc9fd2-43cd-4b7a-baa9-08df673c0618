{
    "title": "Red Roses",
    "pages": [
        "This is my first submission, so I hope you like it. I apologize in advance; I admit, I'm a terrible copy editor, so I hope there are minimal typos in here. All feedback is welcome, though if you're going to say it sucks, please tell me WHY it sucks, else I won't get any better. And yeah, I took some creative liberties with the psychology of these fantasies. :) Thanks!\n\nWhy does the doorbell always interrupt important work?\n\nI hit PAUSE and tossed the game controller on the coffee table. As I paced to the door, I mumbled to myself, \"Better not be some salesman.\"\n\nI opened the door, revealing a slender brunette. My face broke into a grin. \"Trish! How you doing?\"\n\n\"Good.\" Her smile matched mine. She held up a couple bottles of wine and a notebook. \"I took a chance you'd be home and figured you might need a lesson in humility in Call of Duty.\"\n\n\"I can't say no to that. C'mon in.\"\n\nA word or two about Patricia Bettenfield. We've known each other since grade school and been friends forever. It never manifested as anything romantic. We tried to date once in high school and agreed it felt weird. When we kissed, we both felt like we were kissing a sibling. So we fell back to being good friends. Best friends. Even though we went to different colleges, we both returned the same stretch of suburbia outside Atlanta in which we'd grown up. She went to work as a CPA, me as a project manager for a local engineering company and with both of us twenty-five years old, we were just living and loving life.\n\nWe'd hang out once or twice a week. That fact would worry prospective boyfriends and girlfriends until they saw us together and realized we were, in fact, only good friends. I know people say men and women have a hard time being \"just friends\" and generally I agree but there are exceptions to every rule. It was even to the point where she'd strip down to her bra and underwear and me to my boxers if we needed to change in front of each other. It never felt awkward.\n\nAnother word about Trish. She's attractive. Not in a supermodel sense, but in the all-American-girl-next-door may. She's about five-six, with wavy brown hair that falls past her shoulders and brown eyes. A cute, dimpled smile. Because she is a workout nut, she has a trim, athletic figure, killer legs, and a tight ass. She's not the biggest up top, but her breasts are firm. 34B. I only know that because she whipped a bra at me one night while we were teasing each other and I checked.\n\nI mean, yes, I am male. I've had lingering thoughts about what it would be like to sleep with Trish, but that's all it's been. I've never made a move or even been really tempted. It sounds cliched but I value our friendship. She's stood by me through thick and thin, and I wouldn't endanger that. Some people have said we'd be lost without each other and there is some truth there.\n\nBesides, it's not like I am celibate or hurting for female company. I go through girlfriends off and on, and get laid often enough. Trish is a good reality check on which girls are worth my time. I try to do the same for her. She's not a slut but not a prude either. I know she's slept with some of her boyfriends, though because of her religious upbringing, she was never comfortable discussing either of our sex lives in great detail.\n\nAnyway, she popped in unannounced, like she does sometimes. Usually we'll chatter and watch a movie, or play some Playstation, or something. She likes gaming and sports, so it's always easy to do something together. We played for about an hour, working our way through one bottle. Okay, she had one glass, I had most of one bottle.\n\n\"Ha!\" she crowed. \"I just fragged your sorry butt!\"\n\n\"Lucky shot.\"\n\n\"Yeah, sure, sure.\" Her smile faded.\n\nI noticed and said, \"You okay?\"\n\n\"Yeah. Justin, can we talk for a second?\"\n\nI put my controller down. \"Of course. What's up?\"\n\n\"You know me and Aaron broke up, right?\"\n\nI nodded, though I didn't say anything. Aaron was a former high school classmate who became a Georgia Tech quarterback. Aaron was so sure he was going to get picked up early during the NFL draft that he hadn't finished school. He not only didn't get drafted, his showing at the following year's combine was so bad, he couldn't even make a practice squad. He'd staked so much of his prestige on making the pros, he'd kind of become a prick when he hadn't.\n\n\"We only went out a few times and he kept trying to get me into bed. I wasn't ready so, I kept putting him off. I guess he didn't want to take no for an answer.\" Trish lowered her eyes.\n\n\"What happened, Trish?\"\n\n\"We were at his place when he made a move. He threw me on the bed and tried to get my shirt off. I screamed and he smacked me. Not bad, but enough to bloody my lip. I head-butted him in the face. When he let me go, I jumped up and ran out. He didn't chase me but he screamed names after me. When I saw him yesterday, he ignored me.\"\n\n\"That motherfucker.\" Aaron had six inches and fifty pounds on me but at that second, I was ready to drive over and kick his ass. I started to stand up. \"I'm gonna\u2014\"\n\nTrish grabbed my arm. \"No, Justin, don't. He's not worth it.\"\n\n\"But\u2014\"\n\n\"He's history, man. C'mon, you know I can handle myself. I'm not falling to pieces because one jerk got aggressive. I didn't even call the cops. Besides, that wasn't what I wanted to talk about.\"\n\nShe patted the seat and smiled. Reluctantly, I sat back down.\n\nShe took a deep breath and I could see that she was really nervous. \"Justin, I....\"\n\n\"Trish, what it is? It's me, you can tell me anything.\"\n\n\"This is really tough, Justin. I spent an hour working up the nerve to come over here and do this and I still can't. Look, it's probably best if I just give you this.\"\n\nShe opened the notebook she'd brought in and pulled out what looked like a standard ten by thirteen manila envelope, except that it was all black. She handed it to me and I took it, uncomprehending. When I looked back up, I was shocked to see her eyes brimming with tears.\n\n\"Trish?\"\n\n\"Justin, you know that I value our friendship more than anything, right?\"\n\n\"Yeah?\"\n\n\"We've been friends our whole lives and I am terrified to give you this, since this might damage us permanently. But I'm going out of my mind and I can't see any other way forward.\"\n\n\"I don't understand.\"\n\nShe pointed at the envelope. \"Just wait until I am gone and open that. Read it thoroughly. I hope you will understand and I pray to God this won't affect us, no matter what. Can you promise me you will think very hard before you do anything, Justin? Please?\"\n\n\"I promise, but Trish...what is this all about?\"\n\nTrish stood. \"All the answers are there. I'm gonna go. Remember, Justin. You're my best friend, no matter what.\"\n\n\"Don't forget your other bottle of wine.\"\n\n\"You might need it.\"\n\nI didn't know what else to say. \"Are we still on for tennis Saturday?\"\n\n\"I hope so.\"\n\nShe gave me a quick kiss on the cheek and left the room. A second later, I heard the front door of the townhouse. I went to the door in time to see her get in her car and drive away. I locked the door and returned to the couch. The mysterious black envelope lay there.\n\nI grabbed my pocket knife, slit the top, and dumped the contents. A handful of smaller black envelopes tumbled out. Six of them were about four by six\u2014the kind that invitations to events come in\u2014and were pre-addressed to Trish's house with my address in the return address, already stamped. The last was a standard business letter size and was labeled: \"Justin\u2014Open Me.\"\n\nI tore it open. There were several typed pages inside. I unfolded and started reading:\n\nDear Justin,\n\nI still cannot believe I am writing this to you. I have gone through this letter at least twenty times trying to get it right. I have also wavered back and forth again and again on whether or not to give it to you at all\u2014not the least because I am afraid this will break our friendship and you will never think of me the same way again. I hope against hope that isn't the case. But if you are reading this, it means I took the chance and it is all up to fate.\n\nI told you about Aaron by now. I meant it when I said it wasn't a big deal.\n\nI chuckled a bit, since she hadn't used those exact words but she could hardly know that when she wrote the letter. I continued.\n\nIt really wasn't. He was grabby so I kicked him to the curb. I think he's lucky I didn't break his nose. Trust me, if he had pushed any harder, I would have castrated him on the spot. But there was something else. When he flung me on the bed and tore my shirt, I was scared and I was furious. I was also incredibly turned on.\n\nNot because of Aaron, he's a pig, but by the situation itself. You know how strict my folks were and how much they lectured me about extramarital sex and drilled into my head that sex was dirty. Consequently, I have been pretty uptight about sex since I was young. I have slept with some guys and enjoyed it, at least a little. You knew that. But you may not know that I always had shame and guilt over it. Every time.\n\nI didn't know that but it made sense. Despite our long-term friendship, her Bible-thumping parents didn't even like Trish and me to be alone in the same room with the door closed. They said it was \"inappropriate for an unmarried couple.\" It also meant that as open as she was and as non-judgmental as I tried to be, she had a hard time discussing sex, even with me.\n\nWhen Aaron took control, it was like someone opened a door and revealed a truth. I saw that if I wasn't in control, I wouldn't feel responsible for anything that happened. If I wasn't responsible, I wouldn't feel any guilt. If I don't feel any guilt, I am free to let loose and really enjoy sex in a way I never have before. I know, it sounds screwed up. I thought I was pretty messed up in the head but I've done some reading online and haunted some psychology forums. It turns out these feelings aren't that uncommon among women who have a pretty specific set of fantasies.\n\nAfter I drove home from Aaron that night, I got in the shower and masturbated. God, I am blushing just writing this, knowing you will read it. I had the biggest orgasm I have ever had in my life. It was so good I slumped down in the shower and sat there for five minutes. Since then, it has been on my mind constantly.\n\nEven though writing the above made me blush, I am not sure why, when what I am about to say is so much worse. Justin, you are my oldest and dearest friend. I treasure our friendship above any other I have and like I said, I fear this will hurt us, but I have to do this. I have to get it out or I am going to go crazy.\n\nJustin, I want to be raped.\n\nMy blood ran cold. \"What...what the fucking fuck?\"\n\nI sat back in the couch. It couldn't be. This was Trish. The girl who used to sit in front of me in Mrs. Lartner's second grade class and swing her pigtails at me to make me laugh. This was my friend. Was she having some kind of breakdown? Was she sick? And if not, how could she think that?\n\nI didn't want to read any more. I set the letter aside, uncorked the second bottle of wine, and took a swig straight from the bottle. I waited, then took another.\n\nA joke, I thought. I can keep reading and I will get to the punch line. No, she needs some counseling, some mental help.\n\nI glanced at the pages. But what if she's serious?\n\nThe problem with someone opening Pandora's Box is that the mind refuses to accept that the box is still half full. It has to get to the bottom to see if there is anything else hiding down there.\n\nI tried to ignore the letter. I tried to play Call of Duty again. I got up and paced.\n\nNothing worked.\n\n\"Damn it.\" I sat down, picked up Trish's letter, and resumed reading.\n\nThat's not quite right. I don't want some random person to attack me and put me in the hospital or get me pregnant or give me a disease or something like that.\n\nI want something more regulated. I want a simulation but I want it to be as realistic as possible. I want to have the control taken from me.\n\nI breathed a little easier. When she put it like that, it sounded less drastic.\n\nOf course, it is very difficult to find someone who understands this. A woman says, \"I want to be raped,\" and idiot guys start lining up around the block. This isn't something casual. It takes an incredible amount of trust and faith for a woman to want to surrender herself like this. I've dated\u2014what, fifteen or twenty guys since high school? I slept with less than half of them. None of them lasted more than six months and I wouldn't place enough trust in a single one of them for this. Not now, not ever.\n\nWhich brings us to you.\n\nIf my blood ran cold before, it was positively arctic now. I wanted to hurl the pages aside but I couldn't.\n\nJustin, I know we've never professed any kind of romantic love. We've always been like a brother and sister, at least in how we get along. We've said so for years, and both agreed. But we're not brother and sister. We're friends. And my friend, I trust you more than anyone else on this planet. I know that if I place myself in your hands, you will never hurt me\u2014at least, not in any serious way.\n\nI know this is a lot to take in\u2014\n\n\"No fucking shit.\"\n\n\u2014but Justin, this is something I really want to try. I read about women who acted on these fantasies and as long as the simulation remains on the rails, so to speak, they find it very fulfilling. If I am to try this, I want it to be with you. I want you to...you know.\n\n\"God, she can't even say it,\" I laughed. I had to laugh or I'd freak out. The entire notion was so unreal.\n\nAlso, Justin, I want you to understand this: I will never speak of this face to face. It is simply too embarrassing and humiliating for me to do so. I already fear you will consider me the worst kind of slut for even thinking of this but I can't take it any more. I have to do something. So I had to write it down. I will never discuss this with you. If you bring it up, I will change the subject or leave. All of our communication on the issue will be written.\n\nIn the big envelope are six smaller envelopes, aside from this letter. Five of them have a blank note card inside. If you have questions or comments, please write them on a note card and mail it to me. I will mail a response back. If you send all five, I will send you more cards, so don't save them if you have questions.\n\nThe sixth also has a note card in it. It has two lines with checkboxes. One is marked, \"I'm In.\" The other is marked, \"I'm Out.\" Please decide which you want to check. I already said I want you to do it but I will, of course, respect your choice.\n\nTake as much time as you want. Take a few days. Take six months. Until you do, nothing will change. I still want to spend as much time with you as we have. You are still my best friend. I still want to go watch football and have a beer and throw darts at O'Malley's. I still want to beat you in Playstation. I still want to go to the movies and hang out with our other friends and occasionally go shopping and hiking and all the other stuff we do. Please say we can. It won't be too weird, I promise. I will never act different than we have ever acted before.\n\nIf you don't ever decide, or if you send back the card marked, \"I'm Out,\" I will never bring this up again. I certainly won't ask you to reconsider, since once I leave this letter with you, I will probably go home and cry myself to sleep because I am so scared and nervous about what you will think of me. Ironically, if I asked this of some asshole, I would not care what he thought of me. But you're the only one I trust enough to even consider it. I will continue to treasure our friendship. I will still be your buddy. Nothing has to change. I dearly hope you feel the same. If you decide not to do it, chalk it up to temporary insanity on my part. I'm still the same girl you always thought I was.\n\nIf you send back the card and mark, \"I'm In,\" I will send you a proposal as to how we will go about it.\n\nJustin, I don't think I should say anymore. Ball is in your court now. Whatever you choose, know that I am your friend forever.\n\nLove,\n\nTrish\n\n\"Jesus H. Tapdancing Christ.\"\n\nI had no idea what to do, so I did what most people in a fucked-up, impossible situation would do.\n\nI got drunk.\n\nThe morning alarm clock was unforgiving but I dragged my ass to work. My coworkers gave me a hard time about my obvious hangover and my boss gave me the stinkeye but I scarcely paid any attention. My mind was fixed on Trish and the nuclear bomb she dropped.\n\nI couldn't talk to any of the idiots at work. They'd simply slap me on the back, tell me I'd hit the jackpot, and to break one off for them. I couldn't talk to any of my friends. Most of them were her friends too and I wouldn't want to color their perceptions of her.\n\nReally, I knew I could never tell anyone else about this. I would take it to my grave because to let even one person know would betray Trish's confidence. It was so unstated that she hadn't even asked me not to tell anyone; she knew I wouldn't.\n\nI staggered through that day from hell. On one hand, I was glad it was Friday, so I wouldn't have work distracting me for a day or two. On the other hand, the next day was Saturday and Trish and me had arranged to play some mixed-doubles tennis the next day with friends.\n\nBut could I face her?\n\nI brooded about it over a beer and reheated leftovers. Why had she done this? What the hell was wrong with her? Did she need some professional help? Did I even want to remain friends with her?\n\nThat thought shook me and caused not a little shame. What was I thinking? This was Trish, my oldest and dearest friend.\n\nI thought about my own sex life and the women I'd bedded. How would I feel if I had never been fulfilled doing it? What if every time I got laid, I felt doubt and shame. It would make sex miserable and I would really wonder if something was wrong with me. And I want to dump my best friend because she admitted that's how she felt?\n\nNo, my brain said, because she wanted you to fix it.\n\nI waved my hands, cutting off the internal dialogue. I wouldn't abandon Trish. I was a long way from agreeing with her but she was my friend and that wouldn't change.\n\nI picked up my phone and shot her a text:\n\nStill on for tennis tmrw @ 10?\n\nHer response was instant:\n\nU bet, c u there! :)\n\nI exhaled hard. The exchange was exactly like any of thousands we'd had over the years, right down to her use of abbreviations and the same smiling emoji she put at the end of every single message she sent me. When I'd asked her about it, she'd said talking to me made her happy. I went to bed feeling a little more optimistic.\n\nTrish was already at the court when I got there. Fortunately, so were our opponents, so we didn't have a ton of time for chit-chat.\n\nShe bounced up to me as I entered the court. \"Hey, you. Ready to beat these losers?\"\n\n\"I heard that!\" said Marty from across the net.\n\n\"Yep, ready,\" I said. \"You feeling all right?\"\n\nShe didn't hesitate. She smiled, her cheeks dimpling. \"Just fine.\"\n\nWe lost the match to our friends Marty and his wife Jan, but they were better than us anyway. The fun part was the good-natured banter between Trish and I, and between us and the other couple. I kept watching for odd signs but nothing was different from our normal interactions. I watched to see if Trish did any kind of flirting or bent over more in front of me or anything like that but she never did.\n\nI considered that. Maybe she really meant that nothing would be different. The idea was heartening. That meant I could ignore what had happened and our friendship would continue.\n\nThe next few weeks were the same and I felt better and better about things. Outwardly, Trish acted like nothing was different. She was as warm, and upbeat, and fun as she ever was. Each interaction strengthened my belief that we could put this behind us\u2014treat it as \"temporary insanity\" as she called it. I got more relaxed and started to put her letter out of my mind.",
        "Until....\n\nThere's always an \"until.\" I called Trish on a Thursday from work. She answered, \"Hey, guy. What's up?\"\n\n\"Nothing. You got plans for tomorrow night? Was thinking about catching a movie.\"\n\nHer voice was guarded. \"Sorry, Justin, I have a date.\"\n\n\"Oh? With anyone I know?\"\n\n\"No. It's a guy I work with. His name is Matt.\"\n\n\"Okay. Well, have fun. I will talk to you this weekend.\"\n\n\"Yep. Talk to you later.\"\n\nAs I hung up, I realized this was the first date Trish had been on since the night of the letter. That by itself wasn't unusual; she sometimes went a few months without going out with anyone. But now, there was an elephant in the room. She'd admitted to herself what she wanted. It had been a month and I had not answered her. Her desire and frustration had to be building. What if she tried to convince Matt to do what she asked me to do? What if he went to far and hurt her? What if\u2014\n\nI shook my head. It was ridiculous. Trish wouldn't do that.\n\nWould she?\n\nI fretted all through Friday night. I made myself wait until about noon Saturday to call her. It went to voicemail. I texted. There was no answer.\n\nI couldn't take it. I hopped in the car and drove to her house. Trish had a small house out past suburbia, but it sat on two acres, giving her a little privacy. It was a nice place and I'd spent many happy days hanging with her there.\n\nNow, I drove there, half-expecting to find her face down in a pool of her own blood.\n\nA rational part of my brain kept telling me that she was fine and just missed the call. And the text. And the second text.\n\nAnd what if she had decided that this guy Matt was to be her faux-rapist? Maybe that's what she wanted. Who was I tell her otherwise?\n\nI was almost insane with worry and anxiety when I pulled in her gravel drive. Her red Camry was parked next to the house. Her front door was open, though the steel screen door was closed and locked, but I knew where she hid the spare. I unlocked the door and hurried inside. \"Trish? Trish, you here?\"\n\n\"Justin?\" Her voice drifted from the back. She emerged wearing her robe, with a towel wrapped around her wet hair. Her eyes were concerned. \"Is everything okay?\"\n\nA shower. I am such a dumbass.\n\n\"Uhm, yeah everything is fine. I tried to call and you didn't answer, so I came over.\"\n\nHer eyebrow rose. \"That's it? You've never come over before when I missed a call.\"\n\nThere it was. I couldn't say anything without treading into that territory that she swore she'd never speak of in person. I stammered, \"I was just worried about you for some reason.\"\n\nShe smiled but I could see in her eyes that she was working it out in her head. She knew why I was really there. I knew it, and she knew that I knew. I felt like an idiot.\n\nFortunately, she took pity on me. \"Well, since you are here, do you want some late breakfast?\"\n\n\"Sure.\"\n\nShe laughed. \"Then get your butt in the kitchen. Scrambled eggs for me, please. I'll get dressed.\"\n\nI grinned. I was getting off light.\n\nI visited with her for a while then went home. For the first time since that night, I pulled out the black envelopes and re-read that letter. When I was done, I got a beer and sat, staring at the wall.\n\nOne thing was clear to me. Trish was going to go through with it at some point. After reading the letter again, the strength of her desire was obvious. Sooner or later, she would crack. If she got desperate and got in a bad situation, she might get seriously injured.\n\nAnd that was something I couldn't allow to happen.\n\nI took out the note card and checked the box marked, \"I'm In.\" I stuffed it back in the envelope, sealed it, and walked it to the corner mailbox. Before I could change my mind, I tossed it in the chute.\n\nThere. Nothing to do but wait.\n\n#\n\nAt the time, I would have said my motives were purely altruistic. I would have said I was just trying to protect my friend from random danger.\n\nBullshit, of course. In retrospect, I have to say that the idea of laying the pipe to Trish's hard body was an enticement all on its own. Not that I didn't want to protect her, but an atavistic part of my mind reasoned that if protecting her meant getting laid too, then what was the downside?\n\nMen really are pigs sometimes.\n\nThe downside was, of course, the potential harm to a lifelong relationship that I valued more dearly than anything.\n\nThe Thursday after I sent the return card, Trish and I met a circle of friends for after-work drinks. I kept an eye on Trish but nothing was different. She was her normal ebullient self. I knew she had to have received the card by now. Cross-town mail took, at most, two business days, and it had been four. Had she not gotten it? Had she changed her mind?\n\nI had to stop myself. Trish waited patiently on me to respond to her initial letter, though if she felt as frazzled as I now did while she was waiting for that response, then I owed her a hell of an apology for making her wait. If we could speak about the issue aloud, that is.\n\nI got back from work late on Friday. I parked and walked to the door. I was still thinking about a mechanical problem we'd encountered on one of the designs that day, so I wasn't really paying attention to the mail as I pulled it from the box. I moved to open my door, stopped, and looked down.\n\nI was holding a black envelope. The return address was Trish's.\n\nMy hands began to tremble. I went inside, placed the envelope on the coffee table, and went to change. When I had stalled long enough, I sat, took a deep breath, and opened the envelope. Two smaller ones fell out. A business letter size and one the same size as my previous return card. Trish's approach was so business-like and precise.\n\nI opened the business letter, sat back, and started reading.\n\nGround Rules For Encounters\n\nThe following are the proposed rules for potential sexual encounters. The person delivering said attention is designated as the invader. The person receiving said attention is designated the recipient. For reasons of privacy and security all encounters will take place at the recipient's home.\n\n1) At designated times, the recipient will place a single red rose on the door of the invader's home. The invader will understand this as a signal that the recipient will be at her place of residence between the hours of 9PM and 6AM, starting the evening the rose is left on the door.\n\n1a) The invader will not attempt entry at any time other than those designated by the placement of a rose.\n\n1b) The invader is under no obligation to arrive due to the placement of the rose and may choose to pursue or not pursue any given opportunity. The invader will not notify the recipient in advance whether he will or will not arrive for a given encounter.\n\n1c) The recipient is responsible for ensuring her presence during those hours and that all matters and conflicts that might interfere have been resolved.\n\n1d) Should the recipient be unable to be present for emergency reasons or otherwise after scheduling an encounter, she will notify the invader per (8) below.\n\nI rubbed my eyes and said to myself, \"Man, she lawyered the hell out of this.\" But it made sense. With clear understanding, it would prevent some problems. I kept going.\n\n2) The recipient will leave the rear door of her domicile unlocked during the hours noted above during the time of a designated encounter.\n\n3) The invader is not responsible for procuring or using birth control. Both the invader and recipient will make reasonable efforts to ensure they are disease-free.\n\nI blinked. She wanted me to go bareback.\n\n4) The invader understands that the recipient will resist. Both the invader and the recipient may scream, struggle, scratch, bite, swat or lightly kick. No closed fists will be used. Forehand slaps are permitted.\n\n5) No weapons or firearms will be used by the recipient or invader. Use of restraints, toys, or other devices are permitted as long as they do not violate the exceptions in (6).\n\n6) Any sexual activity is permitted if the invader successfully subdues, coerces, or forces the recipient, with the following exceptions:\n\n- scat or urine\n\n- extreme pain\n\n- marking of public-visible parts of the body (ie, no marks on the neck or shaving the head)\n\n- marking with implements (such as branding or cigarette butts)\n\n- presence of any other parties, beyond the recipient and the invader\n\n- bestiality\n\nI had to laugh at the last one. I figured she was just being thorough. Then I realized I was basically being given carte blanche. I could tie her up. I could cum on her face. She hadn't even mentioned anal, which is something I had never done. I admit, my cock twitched at the thought.\n\n7) No video cameras or recording devices shall be employed by either the invader or recipient.\n\n8) The safe word is \"Cincinnati.\"\n\n8a) The invader should strive to use this word to establish positive identity without breaking the scenario, ideally within the first few moments of an encounter if possible, though this is not mandatory.\n\n8b) If the recipient uses the safe word, the invader will cease and desist all activity. If the recipient says, \"Akron,\" the invader may resume. If the recipient says the safe word twice, the invader will depart. Explanations will occur through correspondence.\n\n8c) If the recipient texts the safe word to the invader prior to 9PM on the night of an encounter, the invader will act as if the encounter is canceled. This will occur even if it is 859PM and the invader is standing outside the recipient's domicile.\n\nI nodded. Trish gave herself an escape hatch. That made sense. I would abide by it, as she knew I would.\n\n9) The invader will depart no later than 6AM on the night of an encounter, under all circumstances.\n\n10) The invader and the recipient will not discuss any matters involving an encounter except in correspondence, save for matters of medical emergency.\n\n11) Either the recipient or the invader can completely cancel this arrangement at any time by sending a card labeled with the words, \"I'm Out.\" Alterations to the arrangement will be accomplished by correspondence. No encounters will be planned while outstanding changes are under consideration.\n\nIf the invader agrees to these terms, please indicate so on the enclosed card and return to the recipient via the provided envelope. If the invader wishes to propose changes or additional terms, please use one of the cards enclosed with the recipient's original letter. The recipient will consider any requested addenda and agree or counter-propose.\n\nI put the letter down and thought. It was all pretty reasonable\u2014for something that was bat-shit insane, anyway. I decided to sleep on it a night or two and see if anything leapt out at me or came to mind with a fresh review.\n\nBut by Sunday, I had to admit I was pretty much stumped. Trish had covered things so well I couldn't see anything left out. I scribbled my acceptance and dropped in the mailbox.\n\nI went back to my townhouse and collapsed on the bed. How would I react when I saw a rose?\n\nHell if I knew.\n\n#\n\nAs it turns out, the rose was somewhat anti-climactic. It was two weeks after I'd agreed to the Ground Rules. I'd had a rough day at work, having had to threaten one of my team members with firing and I got a flat tire on the way home. I was scowling at the ground when I reached my front door. Then I saw it.\n\nThe rose was wedged next to the door handle, held firm by a piece of tape. I stared at it a moment, absorbing the meaning. It was almost seven. Fifteen miles away, my best friend was undoubtedly cleaning up after dinner. Then she'd watch tv or do some reading before getting into bed. Was she on pins and needles? Would she be expecting me? The rules said I didn't have to take her up on any opportunity, but how would she feel if I didn't show?\n\nI slumped. I was fucking exhausted. The day had been long and I hadn't eaten since breakfast. Trish would just have to be kept in suspense. I ate something, cleaned up, surfed the internet, then crashed into bed.\n\nMy phone rang around eleven the next day. I didn't look at the caller ID. \"Hello?\"\n\n\"Hey, Justin.\"\n\n\"Hey, Trish. What's up?\"\n\n\"Nothing. Want to meet me at O'Malley's tonight? Bri, Ben, and Jill are going to be there.\"\n\n\"That sounds good. What time?\"\n\n\"Around eight.\"\n\n\"Cool, see you there.\"\n\n\"Bye bye!\"\n\nTrish disconnected. I guess I should not have been surprised. Nothing else had changed, so why would one missed opportunity? She was as happy-go-lucky as ever.\n\nThe evening went well. The girls ganged up on me and poor Ben in darts but we held our own right to the very end and our wallets got lightened after we had to buy a couple of rounds.\n\n\"So, Trish,\" Brianne said to Trish over her Long Island Iced Tea, \"what'cha been up to?\"\n\n\"Oh, same old, same old.\"\n\n\"I tried to call you last night, see if you wanted to come out.\"\n\nTrish bit her lip. \"Ah, I just felt like staying in last night.\"\n\nJillian laughed. \"You hermit.\"\n\nTrish managed not to look at me. \"Sometimes, it's better to hang out at home.\"\n\nThe next rose arrived several weeks after that on a Wednesday. Unfortunately, I'd been told that day that I had to take a no-notice business trip out of town. I wasn't going to tell Trish I wouldn't take up the offer\u2014one of the rules said I didn't have to\u2014but we were supposed to go hiking that Saturday and I didn't think it was fair to leave her hanging.\n\nHey. Sry, have to go to Chicago tnite for 2 dys. Bk Saturday. Have to move hike\n\nHer response came back while I was packing.\n\nNo prob, trvl safe! :)\n\nShe didn't seem upset and she even called me Thursday night to say hi and ask if I'd had a chance to do anything exciting in Chicago. I laughed and told her I had been stuck in meetings all day. She asked me to bring her home a trinket from the Windy City.\n\nSo two roses and two dismissals by me. I wondered if she thought I was ducking her.\n\nI wasn't but the coincidences were in my favor. I still wasn't sure I could go through with it. The idea\u2014the very idea\u2014went against my integrity and my conscience. At the same time, I felt like Trish was counting on me, and I had entered into this to protect her. Yeah, and to fuck her, but I'd completely passed up one chance and missed a second. The internal back-and-forth was killing me. I did my best to put it out of my mind but it hovered around the periphery, threatening to drive me nuts.\n\nThings were normal for six weeks or so. I got busy at work but that was about it. Trish and I were able to hang out here and there. She had another date with Matt from her work but said she was taking it slow. Me, I hadn't been out with a girl for several months and I was getting real tired of my right hand.\n\nFriday came and I ducked out a few hours early. My boss pretended to be annoyed by stuff like that but we had just put a major project to bed, and I didn't do it very often, so he looked the other way. It was about 3PM when I pulled up to my townhouse. I grabbed my briefcase and headed up the walk. It was gonna be a quiet night; most of our friends were hung up doing stuff, so I looked forward to logging a little Playstation marathon. I'd been so beat I hadn't played in weeks.\n\nI was practically skipping by the time I reached my door. I had the key in my hand. I reached for the door\u2014and froze.\n\nA red rose.\n\nI stared at it. And...I couldn't help it. For the first time since Trish had proposed all this insanity, the notion of fucking her made me incredibly hard. My dick was at full attention.\n\nExcept, it wouldn't be sex. It would be rape.\n\nExcept it wouldn't be rape, because she was sanctioning it.\n\nI'll just go inside. I'll rub this out. That'll be it.\n\nRight?\n\nI shook my head.\n\nThis isn't going to stop until I do it. Okay. So do it right.\n\nI hurried inside and sketched out a list. I glanced at the clock, suddenly glad I'd left work early.\n\nI had things to do.\n\n#\n\nI doused the car lights as I turned into her driveway. Luckily, the moon was full, giving more than enough light to creep up to her house. Luck, or Trish had planned it that way.\n\nI stopped about halfway down the drive and killed the ignition. My window was open, so I sat and listened. Nothing came back to me save the chirp of crickets.\n\nTrish's house was dark. She kept the front porch light on at night on but otherwise, nothing. I glanced at my watch.\n\n10:45\n\nI nodded. Time to go to work.\n\nI slid out of the car. I was wearing a dark blue zip-down hoodie, a pair of black sweats, and old running shoes. All I had on underneath was a pair of jockey shorts. I normally wore boxers but Trish knew that and I wanted to keep this as separate as possible from reality.\n\nI carried a small bag with a few implements in it. In the hand pouch of my hoodie, I had a pair of handcuffs, the key to those cuffs and a tiny pair of scissors.\n\nI stopped and donned a black ski mask. I wasn't crazy about the itch but it just didn't feel right giving Trish my face to stare into for this. Maybe I could come up with something better for the next time.\n\nNext time? Jesus, dude. Just get through this first.\n\nI slunk down the driveway, trying to stay quiet and low. All kinds of scenarios ran through my head. What if Trish was setting me up for something? What if a neighbor saw me?\n\nI frowned. What if Trish kicked my ass?\n\nWell, then it will be over with, at least.\n\nI stole to the rear of the house. The back porch light was out. I fished my phone from the bag and checked for last minute texts. No Cincinnati. I put the phone on vibrate and replaced it in the bag.\n\nI hesitated at the door. If I opened it, I was really committing to doing this. I grabbed the knob and twisted.\n\nIt was unlocked.\n\nThe latch was horribly loud in the silence of the night. I winced and waited but there was no reaction from within. I stepped inside, gently pulled the door closed, and twisted the deadbolt.\n\nI was in Trish's kitchen. I knew the layout of her house and moved through the living room, towards her bedroom, taking care to go slow and quiet. The door to her bedroom was open. I peered inside.\n\nThe curtains on the windows were pulled back and moonlight filled the room. Trish lay on her side on the queen bed, half under the blankets. It looked like she was wearing a tank top and flannel pajama bottoms.\n\nMy hands were shaking so hard I could barely do it but I withdrew the handcuffs and unlocked each cuff. Trish's bed had a decorative antique headboard with crisscrossed wrought-iron bars . It was tailor made for handcuffs. I smiled. Trish had always been so proud of that bed. I wondered how proud she would be after tonight.\n\nI paced close to the bed, expecting her leap up at any second. But the rhythmic pulse of her breathing told me she was asleep, or at least faking it well.\n\nI hovered over her, on the right side of her bed. I slipped the handcuffs through the headboard and back around. It took several agonizing seconds to finagle the open cuff back through. I gazed down at my friend. She looked so peaceful, so serene in the moonlight\u2014and yes, quite beautiful. A stray strand of hair had fallen over the pale skin of her cheek.\n\nI took a deep breath. This is it.\n\nI gently lifted her left wrist and snapped the cuff around it.\n\nTrish's eyes flew open.\n\nBefore I could react, she shoved me back. I staggered back against her dresser as she lunged off the bed.\n\nThe wrought iron headboard saved me. The one side of the handcuffs\u2014the one I had threaded back through in an open position\u2014caught on the iron bars, halting her in mid-movement. Trish snarled and leaned back to work it loose.\n\nI jumped onto the bed, straddling her torso. With both hands I grabbed her right arm. She fought but I had strength and leverage. I snapped the manacle shut on her wrist.",
        "Trish bucked, trying to throw me off. I laughed. Her efforts were pointless, cuffed to the headboard as she was. I put my hand under her chin but yanked it back as she snapped her teeth at my fingers. \"You fucking bastard!\"\n\nI paused. Trish rarely swore and even more rarely lost her temper. The feral look in her eyes was unsettling, especially stacked on her choice of words. I shot my hand out, around her throat, under her chin. She gasped, wrenching her head back and forth but could barely move.\n\nI leaned down, putting my lips close to her ear. \"You're the prettiest girl I've seen since that one in Cincinnati.\"\n\nTrish hesitated. I thought for a moment she was going to call it off before she started struggling with renewed vigor. \"Get off! Get off of me, damn it!\"\n\nI released her chin and moved my hands down her collarbones. Her chest heaved with exertion and the rise and fall of her tight breasts was almost hypnotic. Her nipples were prominent. I paused, thinking that putting my hands on her breasts was wrong.\n\nThis is why you're here, idiot.\n\nI squeezed her tits. Trish cried out and pushed her hips, trying to throw me off. I squeezed again. They felt fantastic. I wanted to see them. I seized the folded seam of her tanktop right above her cleavage and tore.\n\nThe motion almost carried me off the bed and the seam didn't rip.\n\nFeeling slightly embarrassed at that failure, I pulled the tiny pair of scissors from my hoodie pocket. Ignoring Trish yelling at me, I concentrated on not letting her stab herself on the scissors with her wild motions. I snipped through the seam and tucked the scissors back in the pocket.\n\nBeing a rapist is harder than it looks.\n\nI took hold of the shirt and ripped again. This time the tanktop tore all the way to her waist and I saw my friend's breasts for the first time in our adult lives.\n\nWhen we were thirteen, I had accidentally walked in on Trish changing in the bathroom. She had shrieked at me and told me to get out. I'd seen her breasts that day. They were little more than swellings. I'd teased her about that for months.\n\nNow she had the beautiful breasts of an adult woman. They weren't the biggest I had ever seen but they were firm and supple. I lowered my head and sucked one of the nipples into my mouth. It was already hard but impossibly, it got even firmer and more pronounced. I nibbled on it, then gave it a sharp nip. Trish squealed but I ignored her. I worked her tits for a few minutes, savoring the feel and texture of them beneath my fingers and mouth. Trish's yells had muted and she was panting in short, sharp breaths and I licked and tongued her nipples. I lowered my mouth to the underside of her left tit, and sucked, leaving a nice hickey. I moved to right one and gave a couple of bites around the nipple, marking it. Trish gasped and fought but could do little. My cock was as stiff as it had ever been. Painfully so. I have no doubt she could feel it pressed against her belly and I don't know it if frightened or excited her. Probably both.\n\nI slid off her and the bed. My feet touched the floor. As if that was a signal, Trish lashed out with her feet, striking me in the shoulder.\n\nPain flared and so did my temper. I leaned over and smacked her in the face with an open palm. It wasn't a hard blow but Trish's eyes widened. \"Keep fighting and you'll get worse.\"\n\n\"You fucking son of a bitch! Let me loose!\"\n\nI took hold of the waist of her flannel bottoms. Trish started to flail her legs again but I grabbed them and held them down. I worked the loose pants down her legs, revealing a pair of plain white granny-panties. I had to chuckle; I shouldn't have expected her to wear lingerie to her own rape.\n\nIt wasn't easy with her feet kicking but I got the pajama pants from her. I stepped back from the bed and surveyed my handiwork.\n\nTrish glared at me with hate-filled eyes. Her breasts\u2014covered in saliva and bite marks\u2014rose and fell with her angry breathing. All that remained of her clothing were her plain cotton panties and the tattered remains of her tanktop.\n\nI removed the handcuff key from my hoodie pocket and placed it on the nightstand. With Trish watching, I kicked off my shoes. I unzipped the hoodie and pulled it over my head. I was no Greek god but I was reasonably fit and trim, with just the hint of a six-pack poking through. I lowered my sweatpants, leaving me standing there in just my jockey shorts and my ski mask. My cock strained at my shorts, with the head just peeking over the edge of the waistband.\n\nI glanced at Trish. Her eyes were on my cock and I swear I saw her lick her lips. I realized that she had never seen me naked either. I hoped she wouldn't be disappointed. I steeled my courage and pushed my shorts to the floor.\n\nTrish gasped at the engorged state of my erection. I looked down. Drops of precum glistened around the head and the whole thing was already throbbing.\n\nI smiled at her. I had already decided that I was going to indulge in a bit of smack talk. \"Like what you see, whore?\"\n\nHer eyes lifted from my package. Her anger was palpable. \"That teeny needle-dick? I won't even feel it. Probably come in two seconds too.\"\n\nHer comments stung a bit more than I thought they would but I just nodded. If I could talk some shit, so could she. \"We'll see about that.\"\n\nI approached the head of the bed, beyond range of her feet. She sneered but could do little. I gave her tit one more pinch before I worked my way down to her flat stomach to her waistband. Trish started to thrash again but I laid across her legs, holding her still. I crept my fingers inside the hem of her panties and inched inside.\n\nShe was shaven.\n\nI'm surprised I didn't come right then. Her mound felt so hot against my skin. I rubbed and caressed it for a moment, then slid one finger to the top of her lips. I had lube in my bag, just in case, but no need; she was flooded. The inside of her panties were soaked. I parted her lips and touched her clit.\n\nTrish arched her back. A choking gurgle escaped her mouth. Her whole body started shaking and I felt new moisture gush across my fingers.\n\nShe came as soon as I touched her. She really is turned on by this.\n\nI ran my finger up and down her labia, pinching them here and there, touching her clit and tweaking it between fingers. Trish shook and trembled in my grasp.\n\nMy cock pulsed again and I could not take it any more.\n\nI hooked my fingers around the edge of her panties on each of her hips and slowly pulled. Her pussy came into view and it was all I could not to stop and just stare at it. It was indeed shaven and glistening with her juices. Her lips were perfect and engorged and red with lust. I pretty much tore the panties the rest of the way off, leaving her at my mercy.\n\nStill laying across her, I lowered my head and ran my tongue across her swollen lips.\n\nTrish convulsed.\n\nI stabbed with my tongue, running from her clit down to the entrance of her tunnel. She was sweet, like springwater. Her scent flooded my senses. She tasted so good! I could have stayed there longer but my cock would not be denied.\n\nI swung my legs until I was lined up with her. I sat on my haunches and drove my knees into her inner thighs, shoving them apart. Trish fought and pushed back, but wasn't strong enough. She tried to twist her hips away from me. I held her tight.\n\n\"No! No, please don't do this! Please!\" She had tears in her eyes, all traces of resistance gone. I was tempted to stop but she didn't use the safe word.\n\nI positioned the head of my prick at her entrance and rubbed it up and down her lips. Her struggle subsided but not completely. I said, \"God, you are dripping wet. You want this, slut. Tell me you want it.\"\n\nHer defiance came roaring back. Trish raised her head. Through gritted teeth, she growled, \"Fuck you! Fuck you!\"\n\nI donned my most evil smile. I dug my fingers into her hips. \"No, sweetheart. Fuck you!\"\n\nWith that, I rammed my swollen dick into my best friend, all the way up my balls.\n\nTrish screamed. Her pussy clamped down on my cock like a vice\u2014so tight I could barely move. Her whole body spasmed and liquid poured around the base of my dick and ran down her ass.\n\nGod, I thought, she came again. If I wasn't in her, she might have squirted halfway across the room.\n\nI waited until her orgasm started to subside before I began fucking Trish with long, slow, deliberate strokes. I paused a good second before each thrust. With each, I put all the power in my hips into it. The shock wave of each impact rolled up Trish's entire body. She lay with her head turned. Tears leaked from her eyes. I had no idea what tears meant, whether it was pain, fear, happiness, or some other emotion. She had still not used the safe word.\n\nI fucked her slowly for three minutes. Each stroke felt like heaven. She was as warm and wet as I had ever felt in a woman. Her pussy gripped my cock at the apex of each stroke and relaxed as I pulled away. After a minute, she began rolling her hips towards me as I thrust. I doubt she was even consciously aware she was doing it.\n\nI realized I was getting close. I leaned forward a little, placing my hands by her rib cage, and accelerated my tempo. Within seconds, I was pounding her pussy with my cock, ravaging her depths with every stroke.\n\nThe familiar tightening arrived, deep in my scrotum. I squeezed the muscles in my abdomen, tying to stave if off as long as possible, even as I picked up the pace yet again. I jackhammered into her. Trish shrieked again and began shaking, coming a third time. That was all I could take. With a roar, I let loose, spraying jet after jet of cum deep into Trish's body. My orgasm went on for twenty seconds, losing everything I'd built up for the last few months. Even after the last pulse, Trish's pussy kept milking my cock, squeezing and relaxing over and over, trying to extract every drop it could get.\n\nI sat there a moment, fighting to calm my beating heart and control my breathing. Beneath me, Trish vibrated. Her eyes were closed.\n\nMy cock softened and I pulled out of her. She flinched. Even in dim radiance of the pale moonlight, I saw a trail of white liquid trickling from her swollen lips. The image was erotic as hell.\n\nWithout a word, I got off the bed. My thighs protested the sudden movement; I didn't realize I had been clenching them so tight. I walked from the room, stretching my legs, leaving Trish trembling in a puddle of our combined juices.\n\nOnce in the kitchen, I fished around in her fridge until I found a beer. I took a dishtowel and spread it across her couch (can't leave wet dick stains on my friend's furniture, you know). I sat, popped the tab on the beer, and tried to process what the hell had just happened.\n\nI mean, obviously, I just fucked the hell out of my best friend. She'd come several times that I could see and I had the strongest, most intense orgasm ever. It was short, it was brutal...and it was the best sexual experience of my life.\n\nI took an uncomfortable swallow of beer. If practically raping someone was the best sexual experience of my life, what did that say about me? I couldn't tell what emotion was stronger: the sense of guilt and shame for my role, or the sheer eroticism of what had happened.\n\nAnd Trish...what was she thinking right now? Was she having regrets? Was she in pain?\n\nI drained the beer and crushed the can in my hand. I'd try to get Trish to use the safe word. If she refused, I was going to press on. I would likely never have such an opportunity again. I would let Trish be my conscience. Some might call that cowardly but I figured that since she had got me into this, she could get me out.\n\nI went through the kitchen to the laundry room, tossed the dishrag in the hamper, set the empty beer can on the counter, and returned to the bedroom.\n\nTrish was where I left her. I flipped on the bedside lamp to get a better look at her. Her eyes fixed on me. I glanced at her wrists and was concerned to see that in her struggles, she had rubbed the skin raw in places.\n\nI picked up the key. \"I am going to take these cuffs off. Do you think you can behave?\"\n\nShe didn't answer but just continued to eye me with contempt.\n\n\"You play your cards, right, you just might get out of this. You might get a chance to travel, do stuff. Is there somewhere you want to go? Some city perhaps?\"\n\nTrish glared at me. \"Why the fuck would you ask me that?\"\n\nI stared at her, then shrugged my shoulders. I'd given her as clear a chance as possible and she'd just as clearly ignored it. My guilt receded. Whatever happened this evening, it was something Trish obviously wanted.\n\nI let my voice get a little harsher. As I unlocked one of the cuffs, I said, \"We're gonna have some more fun now. Don't try to run.\"\n\nI knew she would. And I'd chase her. Just the thought started my cock swelling again. I glanced down at the hot mess between her legs and got even harder.\n\nTrish sat perfectly still as I pulled her wrist from the right cuff. I half-expected her to swing at me but she didn't. I readied myself and unsnapped the left cuff.\n\nLike a flash of lightning, she rolled off the bed and darted towards the door. I was already moving around the bed to intercept. She made it to the living room before I caught her.\n\nI half-seized, half-tackled her. We fell to the floor face forward, with me on top of her. Trish kicked backwards but I evaded her blow. I used my weight and strength to pin her to the carpet.\n\n\"Get the fuck off me!\" she screamed.\n\nI twisted her left arm behind her back and pushed her wrist towards her head. Trish whimpered and started to cry. I ripped the remains of her shredded tank top from her.\n\n\"Shut up, you fucking whore. I told you not to run, didn't I?\"\n\nShe didn't answer. I twisted her arm and she yelled again. I raised my voice. \"Didn't I?\"\n\n\"Yes!\"\n\n\"Then you have to be punished.\"\n\nI shifted to one side, exposing her butt to my view. Trish's ass had always been amazing. It had a beautiful inverted heart shape and was so tight you could bounce a quarter off it.\n\nI raised my hand and slammed the open palm into her left cheek. Trish hollered and squirmed. I twisted her arm again. Her right arm groped back for me but her angle was bad and she couldn't exert any leverage. All she could do was scratch my chest and arm a few times and none of them bad.\n\nI smacked her again, then switched to her right cheek. I went back and forth, spanking her with blows of varying strength. Trish cried out each time and tried to escape but my grip on her arm was far too tight. Within moments, her ass was cherry-red. And my dick was totally hard again.\n\nI forced her legs apart. Knowing what was coming, Trish lunged forward, trying to break free. I simply followed, landing on her back. \"No, please don't! Please, not again!\"\n\n\"You were told not to run.\" I grabbed my dick and rubbed it against her slit. \"You should have listened!\"\n\n\"No!\"\n\n\"Oh yes.\"\n\nI worked my dick back into her, this time from behind. She was as slick and even hotter than before. With my left arm holding her left arm pinned behind her back and holding her face in the carpet, I used my right arm to raise her hips until she was on her knees. I held her hip with my right hand and began fucking her again.\n\nTrish grunted and fought but couldn't get away. With the living room light on, I was able to see everything in glorious detail. My cock lanced deep into her from behind, over and over. My rod shone with the shining moisture of her excitement. I closed my eyes and groaned as I pierced her. Her pussy was a wet velvet glove, holding my cock tightly. As with before, her inner muscles gripped me with each thrust and before I knew it, she was thrusting her hips back at me. A minor orgasm crashed through her and she shook and once again flooded her tunnel with fluid. I had no idea Trish was a squirter but it was great knowing I was giving her that pleasure.\n\nFucking Trish was simply heavenly. I'd had sex before, many times. But with Trish, it was as if none of those experiences had happened. She was so hot, so wet. Each thrust sent pulses of pleasure through my body. Her body responded to my aggression with such passion, with such exquisite elegance. She joined me in a natural rhythm without even trying. When I looked back later, I think it was simply due to our connection. We knew each other so well to begin with that the sex just fell into place.\n\nMy left hand released her arm and wandered up her back. I buried my fingers in her hair and lifted. She gasped as I pulled her head back. \n\n\"God, you're such a hot little tramp.\"\n\n\"Shut up!\"\n\n\"Your pussy feels so good and tight. So much better than I thought it would.\"\n\n\"You asshole!\"\n\nI dropped her head back to the carpet. I licked my thumb, then used it to trace over her sphincter. At no time did I stop thrusting my dick in and out of her.\n\nTrish moaned as I worked the tip of my thumb into her backdoor. \"Now, that's an asshole.\"\n\n\"Get out of there!\"\n\nI twisted my thumb inside, creeping it forwards until I was in her ass up to the first knuckle. \"That's right, keep telling me what to do. You never learn.\"\n\n\"Get out of my ass, you motherfucker!\"\n\nI pulled my dick loose from her.\n\nWhen I walked in, I had absolutely no plan to do this but she was practically daring me. She knew me, and knew how I'd respond\u2014and that was fine, since I was dying to do it. I'd never had anal sex before but I'd read plenty on it. Everything I read agreed on two points: lots of lube and go slow. The lube was in the bag on the floor of her bedroom and I couldn't get it without letting her up but I'd go slow and if it didn't work, I'd move onto something else.\n\nI pulled my thumb out of her ass and plunged three fingers into her sopping hole. Trish groaned and trembled. When they were soaked, I pulled my fingers out, wiped her juice all over my cock, plunged them back in, then wiped it all over her pink rosebud.\n\nTrish's head shot up. \"What? No!\"\n\nShe fought again, harder than at any time since we'd moved to the living room. I had to use both hands to subdue her. I pressed her face against the carpet and floor her arm again. She growled and shuffled her feet in impotent rage.\n\nI gripped my cock and brought it to her asshole. Trish tensed. She inhaled and for a long moment I thought she was going to throw down the safe word. I waited. She exhaled and started wriggling.\n\nI held her steady and very, very slowly worked the head of my cock into her butt. Trish froze, tensing up once again. I rested there, letting her get used to it. After a moment, I pushed another half-inch in. Every time I did, Trish went rigid and then after a second, relaxed. So it went until I was almost all the way inside her. I slowly pulled back, then pushed in again.\n\nTrish gurgled and jerked her head, whipping her hair about. \"No, oh no!\"\n\n\"Take it!\"\n\n\"Get out, get out!\"\n\n\"Make me!\"\n\nShe groaned as I thrust again.\n\nIf her pussy had been tight, her ass was a suctioning whirlpool, gripping my entire shaft in a silky, warm constrictor embrace of pleasure. I moved slowly, not wanting to really hurt her. The sensation was amazing.\n\n\"Is that all you got?\"\n\nMy jaw fell open. Was she really trying to fucking taunt me? \"What?\"\n\nHer voice was venomous. \"Is that all you got, you limp-dick loser? My grandmother fucks better than you.\"\n\nShe wants me to pound her. All right then.\n\nI released her left arm, grabbed her hips and ratcheted up my speed, pistoning my cock in and out of her ass. Trish grunted and moaned. Her face went down into the carpet. Her left arm stretched out in front of her.\n\nBecause I'd just come a little while before, I was able to take my time and plunder her butt for a good fifteen minutes. Trish grunted and bucked the entire time. I lost track of her right arm. When I thought about it, I realized it was under her and her hand was in her pussy.",
        "She's actually frigging her clit while I fuck her ass.\n\nEvery few minutes a small orgasm would wrack her frame. Trish trembled with each one. I kept up the pace, steadily burying my cock in her ass, again and again.\n\nI felt my orgasm building. I picked up the pace again, trying to be sure not go too deep. Trish moaned along with me. I pulled her hips as I pounded her again and again. Just as my dick erupted, filling her bowels with my cum, Trish screamed louder than she had to this point. Her entire body leapt and quivered like she was having a seizure. I kept inside her but released my grip on her hips. Trish slumped to the floor. \n\nMy softening cock slithered out of her with a soft pop. I sat back and stared at her. Trish lay on the floor, whimpering. Her body was still twitching. Her hips clenched and unclenched as the aftershocks of her enormous orgasm continued to roll through her.\n\nI helped Trish to her feet. Okay, I basically pulled her up. Her eyes were unfocused. I all but dragged her back to her bedroom and laid her face down on the bed. I snapped the handcuffs back on her wrists and staggered to her bathroom. I found a washcloth, soaked it with warm water and antibacterial soap, and thoroughly washed my shrinking dick. Wash, rinse, repeat.\n\nI came back to the bedroom. Trish still had not recovered. She scarcely moved when I sat on the bed.\n\n\"Had enough yet, slut?\"\n\nTrish's voice was tired but still defiant. \"I can take whatever you dish out, dickhole.\"\n\n\"That's what I like to hear.\"\n\nI fetched my bag and withdrew a two-headed vibrator. I'd found it at a sex shop earlier that day, after remembering an ex-girlfriend raving about one. One head was intended for penetration, the other for a clit massage. I thumbed the power switch and both started moving.\n\nSince Trish was on her belly, I grabbed a pillow, lifted her pelvis, and shoved it underneath. I spread her legs apart. She did not resist either movement. I lay between her legs and maneuvered the vibrator into position. When the head touched her clit, she merely moaned. I shifted, allowing the vibrating dildo head into her pussy. Trish buried her head her pillow.\n\nI worked on her for about thirty minutes. She had several more orgasms, accompanied by moans and spasms, though they got successively weaker. By the time she had the last one, she could only gasp and convulse just a little.\n\nI gently removed the vibrator and tossed it aside on the bed. For the last few minutes, I'd been stroking myself and gotten back to half-staff. I took the bag off the bed and unlocked her. I wondered if she would try to resist again but she simply laid there. I flipped Trish on her back and dragged her to the edge of the bed. Her eyes were filled with a heavy-lidded languor. I sat propped her up so that she was half-sitting and recuffed her, with her arms over her head.\n\nI put the key down and faced her again, stroking my cock, which was now a little harder. \"Open your mouth.\"\n\nShe stared at me, as if not understanding.\n\nI grabbed her hair and pulled. She winced. \"Open your goddamn mouth!\"\n\nHer jaw dropped open, forming a near-perfect \"o\" with her lips. I moved up and shoved my dick in her mouth. \"Suck!\"\n\nTrish slowly moved her head back and forth. I am not sure what she was thinking, but watching my best friend wrap her lips around my cock was bringing me back up to rock hard status in no time.\n\nI started to work my hips, thrusting in time with her suction. I moved my right hand down to her pussy and gently stroked her clit and her lips as she sucked me.\n\nShe closed her eyes and I rapped her forehead with my knuckles. Her eyes flew open. \"Look at me, whore. Look in my eyes as you suck my cock.\" She nodded slightly, keeping her eyes on mine.\n\nShe's not fighting me now. She must be exhausted.\n\nI had a sudden desire to bring this to a close. When I had her blow me, I was thinking it was to get me hard enough so I could fuck her again. But Trish was about to fall over and I was feeling the effects myself. So I decided to end it.\n\nI placed one hand on each side of her head and increased my speed. My thrusts grew more aggressive and frenzied until she wasn't blowing me but I was fucking her face.\n\nTrish gagged and coughed as my the head of my cock hit the back of her throat. Moisture filled her eyes but she never looked away from me.\n\nI felt it coming again. My breath came in ragged pants as I slammed my hips into her face. Cum boiled out of my dick one last time. Trish coughed and sputtered; my spunk oozed from her mouth and ran down her chin.\n\nI stepped back from her. Trish fell back against the iron bars, her eyes glazed.\n\nI went back to the bathroom, found another washcloth, cleaned up my junk and returned, clutching the cloth. I looked at Trish.\n\nShe still slumped against the wrought iron, with her legs splayed open. Her eyes were half-closed, her gaze distant. Her hair was sweaty and matted. Saliva and cum covered her chin. Her tits were peppered with bite marks. Her crotch was a half-dried mess of sweat, my cum, and her own juices. With slight alarm, I could see bruises already developing on the inside of her thighs.\n\nI pulled my clothes on quickly and gathered up everything. The last thing I did was unlock her from the headboard. Trish rolled over on the bed, facing away from me, and curled up on her side. I dropped the handcuffs in the bag and only then realized I was still holding the washcloth. I brought it out because I was going to wipe her face with it but I realized that would be way too incongruous with the rest of the evening's tone.\n\nI tossed it at her. The cloth hit Trish in the butt and she flinched. \"Clean yourself up, would you?\"\n\nI turned out the bedside light, turned out the living room light, unlocked the kitchen deadbolt, activated the regular lock, and left. I glanced at the dash clock when I got in the car.\n\n1:29\n\nHuh. Seemed like a lot longer.\n\nI drove home in a mild daze. My mind was numb as I sleepwalked through the shower. I all but fell into bed and dropped into a dreamless sleep.\n\nI spent most of Saturday pondering what had happened. The events of the night were already ethereal and dreamlike, as if they had happened a long time ago or to someone else. I spent most of the day wondering if I would get an angry phone call, or a visit from the police. I wondered if I would ever hear from Trish again. I wondered if I had destroyed our friendship.\n\nI also spent a lot of time trying to decide what was wrong with me. I went into the deal to protect Trish from getting really hurt by someone, and yeah, to have a chance to fuck an atheletic, good-looking girl.\n\nIf I could have protected her without fucking her, would I have?\n\nThe thing is, I knew the answer was yes. If I thought I could have talked her out of it or got her to do something else, I would have passed on the chance to have sex with her. Trish could be as stubborn as they come and once she got an idea in her head, it was hard to dislodge it. I didn't see any good way I could protect her without either agreeing or alienating her, so I agreed to it.\n\nSo why had had I reveled in the evening when it was so harsh?\n\nI had to accept that I enjoyed it so much because it was Trish.\n\nI'd never even come close to pushing my luck with a girl unless I was certain she wanted sex. Quite the opposite, I'd been told I missed opportunities by walking away when I wasn't sure about a girl's level of interest. I wasn't interested in hurting or dominating people. But when Trish asked me to do just that, I knew it was for her. I was protecting her from potential danger and all the things I did to her were to make her happy. If it made her happy, it made me happy, which meant I was able to enjoy myself to the level I did.\n\nIt was thin, but I had to accept that...unless I wanted to accept that I was a monster.\n\nAnd it was one time. It was done now. She'd had her experience. It was probably the one chance I would have in my lifetime to take it to that level with my favorite person in the world. I took the opportunity, reveled in it, and that too was over.\n\nI just hoped she was right and it didn't change things. I was skeptical but there was little to be done about it now.\n\nTrish didn't call or come over on Saturday. Neither did the cops, thankfully. I wanted to text her but didn't have the slightest idea what to say. I puttered around until bedtime and got a restless night of sleep.\n\nSunday about noon, I heard my phone chirp. I grabbed it. It was Trish.\n\n\"Hello?\"\n\n\"Hey, Justin. How you doing?\"\n\n\"Uhm, good. You?\"\n\n\"You know, same old same old.\" Her voice was cheery. I listened for undertones but there were none. \"Hey Falcons and Panthers are on at six tonight. Want to go down to O'Malley's to watch?\"\n\n\"Uh...yeah, sure, sounds good.\"\n\n\"Great. Jim and Tina said they'd be there.\"\n\n\"Okay, see you at six.\"\n\n\"Bye bye!\"\n\nI hung up and considered what had just happened. There was nothing in her voice to suggest that anything had happened the other night. She sounded the same as always.\n\nOkay, I thought. If she can maintain our friendship at the same level it was, so can I. I think.\n\nI showed at O'Malley's a few minutes early. Trish wasn't there yet so I found a table. Just as the waitress took my order for a pitcher, I saw her come in.\n\nShe wore a Falcons jersey, a pair of faded jeans, and sandals. She had a ballcap on her head and her hair was gathered in two braided pigtails resting on her collarbones. An all-American girl.\n\nWho fucks like nothing I have ever seen.\n\nShe bounded up to the table, smiling her dimpled smile, and gave me a kiss on the cheek.\n\n\"Hey, guy!'\n\nHer scent almost overwhelmed me. I forced a smile to my face. \"Hey, you. Sit, have a beer.\"\n\nShe grabbed the pitcher and a glass. \"Hell yeah, I will.\" She poured. \"How was your weekend?\"\n\n\"Fine, I just kind of hung out at home. You?\"\n\n\"Good, a little sore.\"\n\n\"Uh, really?\"\n\n\"Yeah, I added an extra workout today and yesterday.\" She stared into her beer. \"I think I overdid it.\"\n\n\"Oh, sorry.\"\n\nShe shrugged. \"Live and learn.\"\n\nThe double-entendre was about as plain as could be. Had she worked out? I said she was a fitness nut. She had done two-a-days many times in the past. Had she really overdone it? Was she having regrets? Or was she just fucking with me?\n\nI glanced at her and thought I caught a tiny smile on her face. It vanished as fast as it came.\n\nWomen. If live to be a hundred, I will never understand them.\n\nOur friends Jim and Tina arrived and joined us. They were recently married and a lot of fun. We watched the game, cheered on the Falcons, teased each other, and generally had a good time for four hours. She smiled and laughed, touched my arm as she always had, and was just as much fun to be around as ever.\n\nBut like a car that has a new fender put on and the paint doesn't quite match, I knew it would never be exactly the same.\n\nWhen the game was over, we had to head home, with work in the morning. I'd gotten a little more reserved at the end of the evening. I doubt Jim and Tina had noticed but Trish had. Her eyes kept wandering to me. I could tell she knew what I was thinking.\n\nMonday was hectic at work, so I managed to make it though the day without thinking about Trish more than once every ten minutes or so. Tuesday was slower, so I had a lot of time for my mind to torture me. I thought about her the whole drive home. I wasn't sure what we were going to do. Could our friendship endure after what happened? Could I make the effort to keep it going? Did I want to keep it the same way as it had always been? The image of Trish on all fours on her living room floor, thrusting her hips back against me, flashed through my mind. Our connection\u2014physical, mental, and spiritual\u2014had been unbelievable. And I'd never have the whole package again. That thought was agony.\n\nThen I realized if my choice was not having Trish in my bed or not having her in my life at all, that was an easy choice.\n\nWhen I got home, I checked the mail. There was a black envelope in the mix.\n\nI walked inside, tossed my briefcase and the rest of the mail on the couch. I stared at the envelope for a long time. With a sigh, I opened it. There was a card inside.\n\nFantastic. Everything I hoped for and more. I pray you have no regrets because I have none. No matter what happened or happens, I hope you still think of me as your best friend. Thank you for being mine.\n\nI nodded, finally accepting it. I didn't abandon her before over her desires, and I couldn't do it now. We'd stay the same. I'd love to have her again. But even if that didn't happen, I'd never give her up all together.\n\n#\n\nOver the next six months, things returned to near normal. I grew more relaxed and normal around Trish, to the point where even if we were alone, I didn't feel the need to be on guard. If she had misgivings, she kept her own counsel. We still did stuff and it got to the point where I could spend an evening with her without envisioning us fucking the hell out of each other.\n\nStrange as it seems, it did seem to bring us even closer. The experience\u2014a secret which only we shared\u2014was another tie uniting Trish and me. There were marriages where the partners didn't show each other the trust and loyalty we'd given one another. I know I was more subdued around her for a while, and she was more cheery and upbeat than usual, as if we were both trying to assure ourselves that everything was normal. It took time but as we both realized the sky wasn't falling, an unspoken understanding seemed to develop. I loved Trish as a friend before, and that was even more amplified now.\n\nDid I love her more than that? I refused to consider that until I worked through the other feelings.\n\nAfter her last message, I waited a day or two and used one of the message envelopes she'd given me. I wrote:\n\nYou will always be my best friend, no matter what. I will cherish the memory of this experience. It was amazing. I am honored you trusted and loved me enough to share it with me just once. I understand if it never happens again, and I won't think of you any different.\n\nA few days later, she responded:\n\nThe agreement remains in effect until terminated as outlined in the Ground Rule 11.\n\nI snorted when I read that. I figured she knew exactly how much our time meant to me and she didn't want to hurt me with an abrupt shut-down. I'd love to feel the heat of her skin on mine, hear her panting in ecstasy, taste her sweetness of her essence again...but it wasn't going to happen. I knew that. I considered just sending her a card with the words, \"I'm Out\" to end my torment but something stubborn in my brain said I should make her do it.\n\nOver time, I put that in the back of my mind. No new black envelopes appeared and our relationship assumed a degree of normalcy.\n\nTrish did date the guy Matt from her office a few times. I felt a surge of jealousy over that. I wondered if she was sleeping with him. It was none of my business and even the thought made me a tremendous hypocrite. I had started dating a woman named Liz and was banging the hell out of her regularly. Liz wasn't on birth control, so I was back to using condoms. Our sex life was pretty traditional. I kept an eye on my own behavior to see if I had any notions of roughing her up or getting dominant but I never felt even the remotest need.\n\nLiz was a little leery of my relationship with Trish but after she got to know her, Liz stopped worrying.\n\nTrish's relationship with Matt fizzled out and she didn't go out with anyone for a while. When I asked her why she hadn't been dating, she just shrugged and said, \"Eh, haven't really felt it with anyone lately.\" She didn't say so, but I got the impression she was waiting for something.\n\nAbout a month later, Liz and I kind of reached the conclusion that we weren't really going anywhere and mutually called it off. I think she had her eye on a guy at her office and that was fine. I wasn't feeling it anymore either.\n\nTrish and I continued to hang out with our friends and the night in question faded into memory. My memories were good. It was a hell of a sex session. I helped and protected my friend. I hadn't turned into some kind of serial rapist. Nothing had fundamentally changed.\n\nIt was about a month after I broke up with Liz. It was at end of the work week and I was kind of bored. I had no plans for the evening, so I called Trish. \"Hey, lady.\"\n\n\"Hey, Justin. What's up?\"\n\n\"Want to come over and watch a movie tonight? I'll order pizza.\"\n\n\"Oh, I can't. I started that new workout plan, remember?\"\n\n\"Yeah?\"\n\n\"Yeah, I'll be at the gym for a few hours tonight. I probably won't get home until nine. I plan on taking a long hot shower from nine-thirty to ten, then getting in bed with a book and a glass of wine.\"\n\n\"Oh, okay. Well, enjoy your workout.\"\n\nShe giggled. \"You too.\"\n\nShe disconnected before I could tell her I didn't have a workout planned. I shrugged, chalking it up to her being distracted at work or something.\n\nTraffic was light so I got home in decent time. I was already thinking about changing and heading over to O'Malley's, to see if I could catch a pickup game of darts. I was almost to the door when I noticed it.\n\nA red rose.\n\nI halted in place, not believing what I saw.\n\nI think I stood there for several long minutes. Finally, I plucked the rose from its perch, opened the door, and went inside. As I sat on my couch, Trish's words on the phone echoed through my mind: I plan on taking a shower from nine-thirty to ten....\n\nI stared at the rose for a long time. We had just gotten that can of worms back in the tin. What would it mean for us to re-open it?\n\nI suddenly thought of the British special forces branch called the Special Air Service. Their unofficial motto was, \"Who dares, wins.\" I knew what it meant: sometimes the rewards are so great that chances have to me taken.\n\nAt long last, I smiled. I knew there was only one real question now.\n\nWould I have enough time to ravage her properly before the hot water ran out?\n\nEND\n\nThanks for reading!\n\n \n"
    ],
    "authorname": "PeytonMirabelle",
    "tags": [
        "fetish",
        "fantasy",
        "friends"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/red-roses-2"
}