{
    "title": "Base Pharmacy",
    "pages": [
        "*Author's Note: The medical board is obviously fictitious. The proceedings and timelines aren't accurate, but they're 'close enough for government work'.   :-)\n\n****\n\n\"You're lucky. It was a clean break. I'd say you'll be out of the cast in four weeks. From there we'll reassess and see how long you'll need to be in a splint.\"\n\n\"So...no more jumping out of perfectly good airplanes?\"\n\nThe Navy doctor laughed and said, \"No. None. At least not for a couple of months.\"\n\nHe waited then looked at the young Marine lieutenant and said, \"And the next time you do, try not to fuck it up, okay?\"\n\nThe Marine laughed even though breaking his ankle on the last jump of his training wasn't funny. By virtue of completing this final jump at night (or what turned out to be very early in the morning), he'd earned the right to wear the coveted gold jump wings awarded to Marines who were in an ANGLICO unit which stood for Air Naval Gunfire Liaison Company. He was assigned to 2nd ANGLICO at Camp Lejeune, North Carolina, and had somehow been blessed by the gods to get that very coveted assignment within two months of having been promoted to first lieutenant.\n\n\"I'll do my best, sir,\" was the sheepish reply.\n\n\"I'll send your prescription to the pharmacy, and a corpsman will hook you up with some crutches. And I'm giving you a no-duty chit for 10 days.\"\n\n\"Wait. No duty? Sir, can't it be light duty so I can at least go to work?\"\n\n\"Oh, sure. Why didn't I think of that? I'm only a medical doctor who went through medical school, residency and specialty training, so what do I know, right?\" the Navy Lieutenant, the equivalent of a Marine captain, said as he slapped the junior officer on the shoulder. \"Just stay off that ankle as much as you can.\"\n\n\"Aye, aye, sir,\" the younger officer said, feeling like a fool for asking such a stupid question. Then again, anything that might keep him away from the job he loved was something he couldn't stand, and a no-duty chit fit the bill. And it meant he'd be taking copious amounts of shit from Marines of every rank for being a non-hacker. Enlisted Marines would be careful in the way they got their digs in, but no one escaped, and 1stLt Dan Knight wouldn't be an exception to the rule.\n\nJust as the doc said, a young corpsman came in with the crutches a couple of minutes later and made sure they were the proper size.\n\n\"Okay, Lieutenant. You're good to go. Just stop by the pharmacy on your way out. Oh. And be sure to take this to your unit.\"\n\nHe handed him the dreaded no-duty chit, a true badge of shame for any officer, then walked out to take care of the next patient.\n\n\"Just freakin' great,\" Dan said as he carefully folded it up before putting it in his wallet then giving the crutches a first go.\n\nHe got back to the main lobby then looked at the signs until he saw 'Pharmacy' and an arrow pointing him in the right direction. He already felt a growing sense of shame as he hobbled down the shiny tile floor, hoping he wouldn't run into anyone he knew. Then again, if everyone in the unit didn't already know, they would by tomorrow morning. Still, not having to deal with anyone in person for now would be pretty nice.\n\nHe finally made it to the lobby of the pharmacy and realized he'd never used it before as he got behind two other people ahead of him who were waiting there turn to get a ticket.\n\n\"Just like the barber shop,\" Dan mused to himself as he looked at the machine to see how it worked.\n\nThe first person was an active-duty Marine who held his ID card under an infrared reader until it beeped then followed the menu prompts on the screen in front of him until it spit out a ticket with a number on it with the number indicating where he was in the queue. It looked simple enough, so he watched as the other person in front of him got ready to do the same thing.\n\nThis person was most likely a dependent as it was a woman who looked to be in her early 30s. She had a son with her, and as she got out her ID card, she couldn't get the reader to take it. She had it turned upside down, but Dan didn't want to embarrass her.\n\n\"Mom. Let me try,\" her son said. \"I know how to do it.\" \n\nHe took it and turned it over, but it still didn't work. \n\n\"Hold on,\" the boy said before turning it back over again. He wasn't lining up the bar code on the back with the red light, but Dan didn't want to embarrass the boy, either.\n\n\"Maybe we should ask someone,\" his mother said as she looked behind her to see how many people she was holding up. Seeing Dan, she smiled then made her case.\n\n\"Sorry. We've never done this,\" she said to the young Marine on crutches, a helpless look on her face.\n\n\"May I help?\" he asked.\n\nThe boy turned around and as soon as he saw they gold jump wings, his eyes got big as he said, \"Cool!\"\n\nThe wings had been pinned on by the unit commander as two other Marines helped him stand up after everyone had completed the jump, broken ankle and all. \n\nDan smiled at the woman then asked her son, \"Can I maybe give it a whirl?\"\n\nThe boy handed him his mom's ID card without asking, so Dan looked at her to get her approval.\n\n\"Yes, please! If you don't mind, that would be very nice of you,\" she said, a smile on her very pretty face.\n\nHe took it, turned it the right way, then held it steady at the same height the first guy had held his. The machine beeped and spat out another ticket. The noise scared the woman and she yelped while taking a step back.\n\nHer son laughed, and her mom said, \"It scared me!\" before turning to Dan who was holding her card out for her to take.\n\n\"Thank you so much!\" she said as she took it then told her son they needed to go find a seat.\n\nDan scanned his in about two seconds and pulled his ticket out then took a look around. The place was packed, and so he took the only open seat he could find and waited. After watching for less than a minute, he could see that he'd be called up once as a part of the process then told to sit back down and wait. \n\nThe first call came in about five minutes. He made his way to Window #1, showed his ID card and ticket then got half the ticket back and was told to take a seat by the civilian in the booth, just as he'd expected.\n\nThe information board said the wait was 45 minutes which probably meant at least an hour, but there was nothing he could do about that. He was in uniform, and active duty in uniform had priority, but so were a ton of other sailors and Marines who had priority over dependents and retirees.\n\nWhen he went to sit back down, his old seat was occupied, but someone got up who was sitting next to the boy whose mom he'd helped, and he waved Dan over to sit next to him. Just as he did, his mom got called up for her first round and told her son to save her seat as she got up without noticing the young Marine who'd scanned her ID.\n\n\"Okay, Mom!\" he replied as Dan sat down and got out his iPhone to kill some time. \n\nHe opened an app for a mystery puzzle game called 'The Room 3' and continued where he'd left off and started searching for the next clue to get to the next room to eventually escape.\n\n\"That's really cool,\" the boy said unaware he was being rude by leaning over and looking.\n\nDan was aware but didn't mind. The game had the best graphics he'd ever seen on any app and knew it was a magnet for any boy that age, or for a lot of men his age and older.\n\n\"Oh, hey. Yeah, these are great. Do you like puzzle games like this?\"\n\n\"Uh-huh,\" the boy said as he leaned in closer. \"What do you have to do?\"\n\nDan patiently explained how the game worked and what was required to keep moving on.\n\n\"Do you get any help?\" the boy asked.\n\n\"Yes. See this question mark in the upper left corner? When it lights up, it'll give you a clue. The first one is usually vague then you get one that's better, and finally they pretty much tell you where to look. But you can turn off hints if you're brave enough.\"\n\n\"So it's like Myst,\" the boy said.\n\n\"Ah, so you are a gamer,\" Dan replied, surprised a boy that young had heard of a game that came out many years ago. But there was a new version of it, so perhaps he'd seen it or even played it.\n\nThe boy beamed then said his dad used to play Myst.\n\n\"Oh, okay. Yeah, that was before my time, too.\"\n\n\"But they remade it,\" the boy told him. \"And it's almost as nice as this game as far as the graphics.\"\n\nHis mom came back, and when she saw him leaning over, said, \"If my son is bothering you, please tell me, okay?\"\n\nDan smiled at her and assured her he wasn't.\n\n\"He's a real connoisseur,\" Dan told her.\n\nWhen she laughed, the boy asked what that meant.\n\n\"It means you're kind of like an expert,\" his mom explained.\n\n\"Oh!\" was all he said, a happy smile on his face before turning back to the man in uniform.\n\n\"Here. You want to play?\" he asked the boy before remembering he should probably ask his mother. \"If it's okay with your mom.\"\n\n\"Believe it or not, he forgot his phone at the house,\" she said as she looked over her son. \"That's surprising because I often feel like it's been surgically attached to his hands!\"\n\n\"Mom!\" the boy complained before asking, \"so...can I?\"\n\n\"Yes you...may,\" she replied, correcting his grammar.\n\nBut because her son was so excited to play the game with the amazing graphics, he didn't hear anything she said after the word 'yes'.\n\n\"Cool!\" he said as he took Dan's phone.\n\n\"What do you tell the nice man?\"\n\nThe boy looked up then kind of sheepishly said, \"Thank you.\"\n\n\"No problem. Have fun.\"\n\n\"I haven't been to a base pharmacy in...gee...several years,\" the woman said as she looked at the flat screen monitors hung every few feet that had all the numbers of them. \"Do you know why some numbers start with 'C' and some with 'E' or other letters?\"\n\nHe leaned over to talk around the boy then said, \"Hey, buddy. Could we switch seats?\"\n\nWithout looking up or saying a word, the boy stood up, waited, then sat in the other seat as Dan slid over and sat next to the pretty blonde.\n\n\"Sorry. My name's Charlotte,\" the woman told him, a warm smile on her face.\n\n\"Hi, Charlotte. I'm Dan.\"\n\n\"Thank you again for helping me out. The card reader thing is new to me. They didn't have that the last time I was at a base pharmacy.\"\n\n\"Same here,\" Dan replied. \"Well, the new part anyway.\"\n\nHe didn't tell her he'd never used a military pharmacy before.\n\n\"Wait. Seriously?\" she asked.\n\n\"Um, yes. I've never used the pharmacy before,\" he reluctantly admitted, his relative lack of time in the military always on his mind.\n\nShe looked at his foot then asked what happened.\n\n\"If you don't mind telling me.\"\n\n\"It's a little embarrassing, but I uh, I broke it when I landed.\"\n\n\"Landed?\" she asked, her brown furrowed indicating she didn't understand.\n\n\"Parachute jump. My last one to finish qualifying for the gold wings.\"\n\nHe looked down to just above his left breast pocket and so did Charlotte.\n\n\"Those are very pretty,\" she said before apologizing a half second later. \"Sorry. That is not what I meant.\"\n\nDan chuckled and told her it was fine.\n\n\"They uh, they are kind of pretty, aren't they,\" he told her as the pain medication he'd been given began kicking in.\n\nShe laughed and said they looked very nice.\n\n\"May I ask what they mean? I see they look like a parachute, but is there something...unique about them?\"\n\nDan spent a couple of minutes explaining what ANGLICO was, how he got assigned there, what had to be done to earn the coveted wings of gold, then told her as much about the only other Marines who could wear them\u2014Force Recon\u2014as he knew.\n\n\"My husband was a Navy corpsman, and I should know a lot more about the military, but I'm afraid I still can't really tell a petty officer from an admiral,\" Charlotte admitted.\n\n\"I've only been on active duty for 26 months myself, so I'm no expert,\" Dan told her.\n\nHe'd gone to the Naval Academy, but even so, there was a ton more he didn't know, even about the Marine Corps, than he did know, let alone the other services. Admitting it was painful, but the code he lived by didn't allow him to lie, cheat, or steal.\n\n\"Is your husband retired?\" Dan asked, not sure if she could be that old. Then again, he might be older than her, so it wasn't out of the question.\n\n\"Oh. No. He...\"\n\nShe leaned closer then said, \"He was killed in Afghanistan in 2012.\"\n\nShe looked to make sure her son wasn't listening then even more quietly said, \"By an IED.\"\n\n\"I...I'm so sorry. I didn't mean to...\"\n\n\"It's okay. Thank you, though. We were stationed at Camp Pendleton, but I'm originally from Jacksonville...North Carolina,\" she said making sure he knew she didn't mean Florida. \n\nJacksonville advertised itself as the home of Camp Lejeune, and had been a Marine town forever.\n\n\"We just moved back, and to my extreme surprise, we got assigned to the base hospital for primary care. Wyatt has asthma, so this is our first visit to a base in...I guess that would be eight years or so. We got our primary care off base in California, and that's what I expected here, too.\"\n\n\"Oh, okay. I understand. And Wyatt is your son's name, right?\"\n\n\"Yes. And you said 'Dan', right?\"\n\n\"Yes. Dan Knight.\"\n\n\"It's a pleasure to meet you...\"\n\nShe looked at the silver bars on his collar then shrugged.\n\nDan laughed and said, \"Lieutenant. But please call me Dan.\"\n\nHe smiled then also said, \"Just not...LOO-ten-ent Dan, okay?\"\n\nHad he not done the southern accent like Forest Gump, Charlotte wouldn't have got it. But that gave it away, and she promised she wouldn't even as she laughed.\n\n\"Mom! Look!\" Wyatt called out.\n\n\"What's going on, honey?\" she asked as she leaned in front of Dan to see.\n\nHer son held out the phone and explained how he'd just found some object he needed to turn on a power source in the game.\n\n\"Oh. Nice!\" she said, having no idea what that meant.\n\n\"This game is SO cool!\" he told her as he went back to playing it.\n\n\"I apologize if I'm contributing to the delinquency of a minor,\" Dan said, making sure Wyatt couldn't hear.\n\nCharlotte laughed immediately and told him she might have to turn him in.\n\n\"But on the other hand, he doesn't have any friends here yet, so I'm happy to let him do something he enjoys.\"\n\nShe paused then looked at Dan again and said, \"So thank you for letting him use your phone. He can't seem to live without it. I...I swear he's addicted!\"\n\n\"Don't tell anyone, but I'm kind of addicted myself.\"\n\nShe laughed again then said, \"That's understandable, right? I mean, you grew up with cell phones and the like, didn't you?\"\n\n\"Hey, wait a second. I think you just called me a kid,\" Dan teased, pretending to be offended.\n\n\"What? No! I did not. I promise,\" Charlotte assured him immediately. \n\nShe glanced at him then said, \"If I did, that's not what I meant at all.\"\n\nDan could tell she felt bad for saying it even though it was true. He couldn't ever remember a time when there wasn't a cell phone in his home growing up, so he chuckled then told her he took no offense.\n\n\"None of us chooses when we're born, right?\" Dan said with a smile. \"Or who our parents are, for that matter.\"\n\nCharlotte was enjoying talking with him and laughed again.\n\n\"I won't call you Lieutenant Dan, but I may have to start calling you Captain Obvious.\"\n\n\"Ouch!\" Dan replied, as he put a hand over his heart.\n\n\"Are you okay?\" Wyatt asked out of nowhere.\n\nDan and his mom and heard it at the same time. She looked at Dan then laughed. When she laughed, he did, too.\n\n\"I'm okay, buddy. Your mom just kind of hit me with a cheap shot.\"\n\n\"What?\" he asked, completely confused.\n\n\"Go back to your game, Wyatt,\" his mom said as she smiled at Dan again.\n\nNeither Dan nor Charlotte spoke for a couple of minutes, not sure what to say, but both of them wanted to continue their conversation.\n\n\"So how are you getting home?\" Charlotte asked.\n\n\"Oh, yeah. That reminds me. I need to call the duty driver and have him come get me. I got a ride with a friend who lives a block away, and the unit corpsman brought me over here.\"\n\nHe asked Wyatt if he could borrow his phone, and Wyatt handed it back to him.\n\n\"Don't worry. I'll only be a minute,\" Dan promised. \"And it'll remember where you were.\"\n\nHe heard the duty clerk at the unit answer the phone and said, \"Hey. This is Lieutenant Knight. Can you send the duty driver to the base hospital and have him meet me at the main entrance in about...\"\n\nDan looked at his watch, but before he could answer, the young lance corporal said, \"Sir? The CO is using the duty driver right now and won't be back until 1300.\"\n\nIt didn't really matter who was using the CO's vehicle because he couldn't order anyone to let him have it. But since it was the ANGLICO commander himself, Dan only smiled and thanked the 19-year old Marine for his help.\n\n\"Any luck?\" Charlotte asked as Dan handed his phone back to Wyatt.\n\n\"No. Looks like I'll have to give someone a call,\" he told her as the automated voice said, \"now serving number E371 at Window number 5.\"\n\nDan was A315, and there were still four 'A' tickets ahead of him.\n\n\"I'm getting close,\" Charlotte said as she checked her ticket for the tenth time.\n\nShe was E382 meaning she probably had at least another 15 minutes left to wait.\n\nDan told her she was indeed getting there, then Charlotte surprised him when she said, \"I can give you a ride.\"\n\nAgain, Wyatt perked out of the blue and said, \"Can you, Mom?\"\n\nShe smiled then said to Dan, \"I think someone likes you, Lieutenant.\"\n\n\"He's a good kid,\" Dan told her as he looked at Wyatt who smiled at him then asked his mom again if they could give him a ride.\n\n\"Yes. But that's not up to me,\" she told her son while looking at Dan for a response.\n\n\"I don't want to put you out, Charlotte. I have to stop at my unit and drop off my no-d...some paperwork before I can go home.\"\n\n\"That's okay. I took the whole day off, and we don't have anything else to do, and I'm happy to help out,\" she told him.\n\n\"You're sure it's not a bother?\"\n\n\"Yes. It's no problem at all.\"\n\n\"Then...okay. Thank you very much.\"\n\n\"You're very welcome,\" she said as Wyatt said 'YES!' and did a fist pump.\n\nAs it worked out, Dan only finished up about two or three minutes before Charlotte as two more Navy pharmacy mates filled windows 7 and 8 and began calling 'E' tickets.\n\n\"That worked out rather nicely,\" Charlotte said as she walked over to Dan after picking up several inhalers for her son.\n\nHe laughed and said, \"Yeah, it's almost like someone was looking out for us.\"\n\nCharlotte laughed and told him, \"Maybe so,\" before letting him know which way to walk.\n\nBut after a few steps with the crutches she said, \"Hold on. Why don't you go out front, and we'll go get the car and meet you. Is that okay?\"\n\nThe front door was just 30-40 feet away, but her car was a good 200 yards from where they were with about 50-75 of the yards being part of the building itself.\n\n\"Can I stay with him?\" Wyatt asked. It was more like begging, and his mom was going to tell him 'no', but Dan put his arm around the boy's shoulder and Charlotte gave in.\n\n\"Okay. But stay with Dan, okay?\"\n\n\"I will!\" Wyatt promised as he beamed from ear to ear.\n\nWhen they got to the main door, Wyatt ran ahead and opened it for the peg-legged Marine and Dan thanked him.\n\n\"You're welcome!\" the boy told him, the smile still glued to his face.\n\n\"You're pretty awesome, Wyatt.\"\n\n\"Thank you!\" \n\n\"Your mom is really nice, too,\" Dan told him.\n\n\"Not...all...the time,\" Wyatt informed him as Dan tried not to laugh. \n\nBut the smile on his face disappeared when Wyatt hesitated then added, \"But that's just because she's so lonely.\"\n\n\"Why is your mom lonely?\" Dan asked as tactfully as he could.\n\n\"I don't know. I think she worries about no one wanting to marry her because of me.\"\n\n\"What? Really?\"\n\n\"Well, yeah. I heard her tell my Grandma once how I'll be a teenager in a few years, and nobody likes teenagers.\"",
        "Dan didn't see any sadness in Wyatt's eyes, but his words really hit him hard. He hoped Wyatt had misheard his mom or misunderstood what she'd said. Regardless, it bothered him, so he put his right crutch under his left arm with its mate then pulled Wyatt in close.\n\n\"I can promise you there are a lot of men who'd love to have a son like you, buddy.\"\n\n\"You mean it?\" Wyatt asked as he looked up at the much taller, older man.\n\n\"Heck yeah I mean it!\" Dan said as he gave Wyatt a little shake.\n\nWyatt put his left arm around Dan's back, and maybe it was the pain medication, but he felt like he was getting a hitch in his giddy up and had to look away when he noticed Charlotte pulling up.\n\n\"Speaking of your mom...\"\n\n\"Hold on! I'll get the door for you!\" Wyatt said as he waited for the car to stop.\n\nWyatt opened the front door, but Dan said, \"Don't you want to ride upfront?\"\n\n\"Uh-uh. I want you to ride with my mom,\" the boy told him. \n\nBefore Dan could object, Wyatt said, \"Here. Gimme your crutches, okay?\"\n\nWhen Dan got in, Charlotte was smiling. While Wyatt struggled to get the crutches inside, she quietly said, \"I think someone is trying to do some matchmaking.\"\n\nDan gave her a quizzical look then said, \"Really?\"\n\n\"Sorry. I know it's crazy, but I also know my son. His heart's in the right place, he just has to give his brain time to catch up with reality.\"\n\nDan chuckled just as Wyatt got in.\n\n\"What's so funny?\" he asked as he pulled his seatbelt around his slight frame.\n\n\"Oh, nothing, honey. We were just talking.\"\n\n\"Okay!\" her son replied before asking Dan if he could borrow his phone again.\n\n\"Oh, right. Yeah. Here you go.\"\n\nDan turned around and handed it to Wyatt then said, \"Remember what I told you.\"\n\nThe boy's face lit up again while his mother glanced over and asked, \"Should I ask what that might be?\"\n\nWyatt heard that, too, and before Dan could chime in said, \"No. We were just talking, Mom.\"\n\nShe laughed at his use of her words then said, \"Oh. I see,\" before smiling at Dan again then putting the car in drive.\n\n\"Once we get back on the main road, we'll head north for a mile or so then...\"\n\n\"Dan?\" Charlotte said, interrupting him.\n\n\"Yes?\"\n\n\"I don't do directions.\"\n\nHe laughed then apologized.\n\n\"Sorry. Were I to tell my Marines, go left for 200 meters then turn right, they'd roll their eyeballs at me.\"\n\nHe looked over at Charlotte then said, \"But you most definitely don't look like any Marine I've ever known.\"\n\nShe smiled then continued going straight which she correctly assumed was north until Dan told her to turn. \n\nWhen they pulled into 2nd ANGLICO, Wyatt saw the logo with the huge gold jump wings and sat up straight then said, \"Cool!\"\n\nWhen the car stopped, he excitedly asked, \"Can I go in, too?\"\n\nBefore his mom could say 'no', Dan looked at her and said, \"It's okay with me if you don't mind.\"\n\nHe saw her wheels turning then said, \"I won't be long, and Wyatt might keep from getting a whole lot of grief about being on crutches.\"\n\nShe saw the look on his handsome face and sighed.\n\n\"Okay. But stay with...can he call you Dan?\"\n\n\"Of course.\"\n\n\"Stay with Dan!\"\n\nWyatt hopped out, grabbed one crutch at a time, handed them to Dan, then closed both doors.\n\nAs they walked up to the front entrance, a Marine came out, saluted, and said, \"Good morning, sir!\" to Dan who kind of stopped and used his right arm the best he could to return it.\n\n\"Does everybody call you 'sir'?\" Wyatt asked, his eyes wide with excitement.\n\n\"No. Not everybody.\"\n\nJust as they walked in, a captain from the S-3 (the operations office) saw Dan on crutches and smiled.\n\n\"Morning, sir,\" Dan said to the senior officer.\n\n\"I heard about this, Lieutenant Knight. You sure you're in the right unit?\" the captain asked with a smile as he winked at Wyatt.\n\nDan didn't get a chance to reply as the captain was in a hurry, but Wyatt was drinking up everything he saw and heard like a dry sponge.\n\nWhen they got to the company office, the only person there was the company clerk. \n\n\"Good morning, sir,\" the young corporal said.\n\n\"Is the CO around?\"\n\n\"He's in an AOM, sir.\"\n\nAn AOM was an 'all officers meeting' were Dan would be were he not a cripple.\n\n\"Can you make sure he gets this for me?\" Dan asked as he held out the no-duty chit.\n\nThe corporal glanced at it then winced.\n\n\"Ouch. Sir,\" he said with a smile.\n\n\"Yeah, tell me about it. And I know you don't mean my broken ankle.\"\n\nThe corporal laughed and said he'd personally hand it to the CO when he came back.\n\nOn their way out, the ANGLICO sergeant major was walking down the hall and saw the crutches and started laughing.\n\n\"Lieutenant? Did you get yourself a booboo?\" the 24-year veteran asked.\n\n\"Don't give me shit, sergeant major,\" the lieutenant replied with a laugh of his own.\n\n\"Well, the CO's in a meeting, so someone who can get away with it has to give you a ration,\" the older man replied with a smile.\n\nWhile Dan outranked the sergeant major, it was understood that he was the one enlisted Marine in any unit who could get away with that sort of thing. But in virtually all cases, it was good natured as sergeants major understood how things worked, too, and never pressed the issue too far.\n\n\"Good point,\" Dan told him as the sergeant major wished him a speedy recovery.\n\nAs they got outside, Wyatt said, \"Did you see all the stripes on that man's uniform?\"\n\n\"I did. Pretty impressive, huh?\"\n\n\"That was the coolest thing ever!\" Wyatt told him as they did the crutches thing in reverse order.\n\nCharlotte asked, \"All set?\" once he got in, and the only thing he was able to say before Wyatt took over the conversation was 'yes'.\n\nFor the next five minutes, Wyatt was wound up. He began by telling his mom about the 'major sergeant' they saw and kept rattling off whatever came to mind without a break.\n\nDan pointed left or right before a turn, but other than that, it was all Wyatt all of the time.\n\n\"I believe that made quite an impression on my son,\" Charlotte said once Wyatt finally wound down, and Dan wholeheartedly agreed with her. \n\nHis asthma flared up from all of the excitement, and the need for his inhaler was the reason, but he did give it a rest after taking a quit hit from it.\n\n\"Thank you for being so kind to my son,\" Charlotte quietly said a minute or so later once Wyatt was buried in the game again.\n\n\"No. He's awesome. I had a great time hanging out with him.\"\n\n\"Well, I think he's pretty wonderful, too. It's just nice to hear an objective third party tell me that,\" she replied with a smile.\n\n\"It's true. He's a very nice young man, and I'd be proud to hang out with him anytime.\"\n\nOnce again, Wyatt's selective hearing kicked in, and his head came up before he spoke.\n\n\"Mom? Could Dan come over sometime?\"\n\n\"Honey, Dan is very busy, and besides...\"\n\nShe was glancing at Wyatt in the mirror but looked over at Dan and saw his eyebrows raised up indicating he may not agree with her.\n\n\"What? Why are you looking at me like that?\" she asked.\n\n\"I just dropped off a no-duty chit. That means I am most definitely not busy and won't be for...\"\n\n\"So can he?\" Wyatt asked again.\n\nCharlotte asked as quietly as she could, \"You wouldn't want to...\"\n\n\"I'd love to,\" Dan replied before she could ask.\n\n\"Cool!\" Wyatt said before his mom could formally agree.\n\n\"Well, I guess we could have him join us for lunch or dinner sometime.\"\n\n\"How about both?\" Wyatt asked, causing Dan to laugh and his mom to give him the look.\n\n\"Okay. Fine. Just one,\" Wyatt agreed, the smile still on his face.\n\n\"Maybe your mom doesn't want to put up with the likes of me that much,\" Dan said to Wyatt as he smiled at his mom.\n\n\"I can think of worse things,\" Charlotte told him as she tried not to smile.\n\n\"Speaking of good impressions, with high praise like that, it's pretty obvious I've impressed you at least as much as I've impressed Wyatt!\" Dan teased.\n\nCharlotte's response to his kidding was twofold. On the outside she played it cool and replied with something equally witty. But for some reason, there was another response that was internal, and that response surprised her when she realized how happy she was that this handsome, younger man she'd just met was going to be spending more time with her. She told herself it was actually with Wyatt, but were she to be honest, the feeling stemmed from having another opportunity to see him again.\n\n\"I'm just up here on the left,\" he told her.\n\n\"Thank you for not saying 'east',\" Charlotte replied with a little laugh.\n\n\"I wouldn't have said that because we'll be turning 'south',\" Dan informed her with a kind of smug look on his face that was clearly not real.\n\n\"Ha! Okay. I see how this is going to be,\" she told him as she stuck her nose up in the same way.\n\n\"So you're saying there's going to be a...this, eh? Nice,\" Dan told her with a smile that made her tummy do a flip flop.\n\n\"Ha! You wish,\" she replied, even as the aftermath of the flip flop hit her before a second came along.\n\nWyatt hopped out again and did the crutches routine one more time then asked if he could go open the front door for Dan.\n\nCharlotte bent down to see Dan's face as she looked out of the passenger window.\n\n\"Sure. That'd be great,\" he said before she could give her approval.\n\nOn the way in, Wyatt saw Dan's car which he'd left at home when a friend came to pick him up very early that morning which was just after midnight. \n\n\"Cool car!\" Wyatt said then forgot about it when he opened the door after Dan unlocked it.\n\nDan let Wyatt take a quick look around, and although there wasn't much to see, the young man was checking out everything in the older man's apartment with the same level of interested he had at ANGLICO.\n\n\"Oh. Where's my phone, buddy?\" Dan asked just before the nickel tour ended.\n\n\"Um...in the car! Hold on!\" he said before tearing out the front door and running to the car.\n\nBy the time he got back with the phone, Wyatt needed another hit from his inhaler.\n\n\"Feel better?\" Dan asked once Wyatt took a long, slow breath.\n\n\"I'm okay,\" Wyatt assured him, a smile back on his face.\n\n\"Can I get a high five?\" Dan asked.\n\nThey smacked hands then Dan said, \"Oh. I forgot to ask your mom. Do you know her phone number?\"\n\nWyatt rattled it off so fast Dan had to have him repeat it. But once it was entered he thanked his new friend who told him he was welcome.\n\n\"I'll see you soon, okay, Wyatt?\" Dan told him.\n\n\"See you soon, Dan!\" Wyatt replied before going back outside.\n\nDan quickly tapped out a text to the new number and hit 'send'. He watched from the front window as Charlotte picked up her phone, and when she covered her mouth and hid the smile that appeared, something 'down south' stirred.\n\nShe looked at him through the front door, smiled, then texted him back.\n\n\"I enjoyed meeting you, too, Dan. I'll text you when we get home to see what day works for both of us, okay?\"\n\nHe flashed her a 'thumbs up' then waved as she backed out. Charlotte didn't wave, but Wyatt did all the way until he could no longer see the young Marine.\n\nAlone with nothing but time on his hands, Dan looked around then just smiled.\n\n\"Not a bad trade. A broken ankle for a date with a beautiful woman,\" he said to himself with a laugh before going to the bedroom to change out of his uniform.\n\nFor Charlotte, she didn't have time to think about what had just happened. Wyatt was on a new kick, and this time it was Dan Knight. For the entire ride home he was an animated as she'd ever seen. Everything was 'Dan this' or 'Dan that' or 'Dan said'.\n\nIt was certainly understandable. Wyatt was new to the area, didn't have a father at home, and hadn't made any friends at school yet. So when a friendly, older male showed him some kindness, it was natural that he would glom onto the man. Charlotte said, \"Yeah\" or \"Uh-huh\" a dozen times on the way home and didn't have to say anything about how she felt where Dan Knight was concerned. That was actually a good thing, because at that moment in time she had no real idea how she actually felt let alone what it might be.\n\nBut once Wyatt's enthusiasm reduced itself to a dull roar, she couldn't help but think about what had happened at the base pharmacy. The simple version was she'd been helped by someone who then coincidentally sat next to her and let her son play a video game on his phone. \n\nAnd yet it wasn't quite that simple. This person had made a huge impression on her son, and she'd basically promised to have him over, and once she began thinking about that, she wondered how she'd let it get to that point.\n\nIt wasn't that she'd done anything wrong. She wasn't married or engaged, or even seeing anyone for that matter. And she'd only agreed to see him socially and with Wyatt, so it wasn't like she was cheating or being unfaithful to anyone or even agreed to a date of some kind. Then again, he was very good looking, and there was a part of her that enjoyed being made to feel like she was still attractive and desirable, even at 39. \n\nSo what was it that was bothering her so much? The only thing she could think of was the most obvious issue, and that would be Dan's age. While she still didn't understand military ranks, she was pretty sure that lieutenants were at the bottom of the ladder, and that meant they were also young. Then again, that was obvious just by looking at him. But looking at him had made her...tingle. So perhaps that was the real issue. \n\nPlaying devil's advocate with herself, she asked herself a question that made her very uncomfortable.\n\n\"Is it possible you don't just think he's good looking but that you're attracted to him?\"\n\nCharlotte understood that she could find a man attractive without actually being attracted to them. But in Dan's case she was being forced to confront the very real possibility that she was indeed attracted to him. Then again, how could she be if he wasn't even 30 years old? In fact, it was very likely he wasn't even 25, although she couldn't be sure. He had a very heavy, dark beard that, in spite of being very closely shaved, made him look older.\n\nAs if that wasn't enough to think about, she now had to figure out what to do when she invited him to come over. Dinner was the obvious choice, but wasn't this mostly for Wyatt? If so, perhaps playing some kind of game would make more sense. She'd inherited several board games from her grandmother, and all of them were in very good condition. \n\nAmong them were Scrabble, Monopoly, and Sorry, and maybe this would be a good time to introduce her son to old-school games and get him away from the phone for an hour or two one evening. \n\nCharlotte laughed when she realized she hadn't played one herself in at least 25 years, and that made her wonder if Dan ever had. She sighed so loudly that it caught Wyatt's attention who asked her if she was okay.\n\n\"Oh, sure. I'm fine, honey. I was just thinking. That's all.\"\n\nSatisfied, Wyatt said, \"Okay,\" and went back to his phone.\n\n\"Mom? he asked a few minutes later. \"Can I download the Room?\"\n\n\"The what?\" she asked.\n\n\"The game Dan has on his phone. Well, he has the Room 3, but I want to start with the first one.\"\n\n\"Oh. Um...I guess.\"\n\n\"It costs $4.95,\" her son informed her.\n\nWyatt rarely asked for things, and five bucks wasn't going to break her, so she agreed.\n\n\"Can you bring me my wallet in my purse?\"\n\nWyatt hopped up and grabbed it, and once he was at the screen to buy the game, his mom entered her credit card number.\n\nHe not only thanked her, he gave her a very nice hug then said, \"Now I can be just like Dan!\"\n\nCharlotte sighed again, but this time, Wyatt was too involved with the new game downloading on his phone to notice. She finally laughed then asked herself what she was going to do and when.\n\nBut after racking her brain for hours, she still had no idea what to do, so around 7pm that evening, she texted Dan.\n\n\"Sorry to bother you. I've been sitting here trying to think of something we can all do together, and I'm drawing a blank. I feel bad for being so...uncreative? The best I've come up with is playing an old-school board game, but I don't want you to be, um, bored. I'm not a bad cook, but just eating dinner seems rather...blah. Any ideas?\"\n\nDan was dozing off due to the Percocet he was taking, but he heard his phone 'ding' and grabbed it. When he saw who was texting him he was suddenly wide awake.\n\n\"Hi, Charlotte. You're not bothering me at all. In fact, I've been thinking about you all day.\"\n\nHe almost took out the second sentence, but in spite of the foggy-brained feeling, he wanted her to know that he liked her. He had no idea whether the feelings were mutual, but she was the first woman to really catch his attention since he'd been on active duty. He couldn't explain why, but her being older and having a son Wyatt's age didn't bother him at all. In fact, the appeal of a ready-made family seemed almost perfect to him even though he'd never even consider marriage or even getting serious.\n\n\"I enjoy board games, and some of my fondest memories are playing Parcheesi with my mom and grandmother. But I have another idea I'm 100% sure Wyatt will love, and I'm hoping you will, too. If not, I'm up for a round of Battleship or whatever you've got at the house.\"\n\nHe thought for a few seconds then finished with, \"I really did enjoy meeting you both today, and thank you again for chauffeuring me around. I almost drove myself this morning, but as it turns out, I'm very glad I didn't. So just let me know when and I'll be there. Oh, maybe let me know where you live, too. I'd hate to have to run around and knock on hundreds of doors trying to find you.\"\n\nCharlotte was unaware she was smiling or that her heart was beating faster when she read Dan's text, but both were true. She thought he might possibly be flirting with her earlier, but after being away from him for several hours, she decided he was just being nice. But here he was making her feel like he really was flirting, and the truth was she was enjoying the feeling.\n\n\"I enjoyed meeting you, too, Dan. And thank you for helping me with the card reader. I'm not completely technically illiterate, but that did kind of beat me up.\"\n\nWyatt looked over at his mom just as she was replying and saw the big smile on her face.\n\n\"Why are you smiling, Mom?\" he asked as he got up and walked over to her.\n\nWhen she pulled the phone away so he couldn't see it, he knew something was going on.\n\n\"Are you texting Dan?\" he asked as he reached for the phone.\n\n\"Hey! Keep your mitts off!\" his mom said as she put the phone between her back and the back of the sofa.\n\n\"I wanna see!\" Wyatt said. \"Is he coming over?\"\n\n\"Yes. He's coming over. But no, you may not see!\" she told her son.\n\n\"Tonight? Is he coming over tonight?\"\n\n\"No. Not tonight. We're trying to decide that, but some boy is making it hard for his mother to do that.\"\n\n\"Sorry,\" Wyatt told her, a little grin on his face. \n\n\"Go back to your game, and I'll let you know what we decide, okay?\"\n\n\"Okay, Mom!\" he said as he kind of hopped and skipped back to his chair.\n\nCharlotte retrieved the phone, and to her horror realized she'd sent the text without finishing it. She saw little bubbles telling her Dan was replying, and even though it was no big deal, she felt a little foolish.\n\nShe quickly tapped out what happened and hit 'send' before receiving his reply. When his came, what he wrote made her feel warm and fuzzy all over. The feeling started between her legs and spread out from there, and the fact that it was happening at all surprised in the most pleasant kind of way.\n\n\"Then I'm glad the card reader gave you trouble, too. Had it not, I might not have found a way to talk to you, and that would have been downright awful.\"\n\nShe smiled again as she told him she agreed then let him know she'd trust him as far as whatever he had planned.",
        "\"But we have several games just in case.\"\n\nShe hit send again then waited.\n\n\"Sounds perfect! What evening works for you?\"\n\nIt was Wednesday, so she suggested Friday around 6pm.\n\n\"Wyatt goes to bed at nine, so that should give us time to do whatever you have planned and maybe even talk a little.\"\n\nCharlotte added some smiley emojis then sent it.\n\n\"Then I'll be there Friday at 1800. But where is 'there'?\"\n\nCharlotte laughed when she realized she forgot to provide her address.\n\n\"Sorry. I think I may be a little flustered! We live at...\"\n\nDan's final text made her heart flutter when he replied, \"I hope I have something to do with your 'flustration'.\"\n\nShe almost wrote, \"You do,\" but decided not to say anymore for now. She set her phone down, and before she could raise her hand back up, Wyatt asked when Dan was coming over.\n\n\"Friday evening.\"\n\n\"Awesome!\" her son said. \"What are we gonna do when he comes over?\"\n\n\"I don't know. He said he was a surprise or something.\"\n\n\"Yes!\" Wyatt said before going back to the couch.\n\nThis time he sat down right beside his mom then said, \"Mom? You're the coolest mom ever!\"\n\n\"Ahh! Thanks, buddy! And you are the coolest son ever!\"\n\nShe almost teared up when Wyatt turned and hugged her in a way he hadn't done in quite some time.\n\n\"Mom? Can we have pizza when Dan comes over?\" he asked after the hug was over.\n\n\"Oh. Well, I suppose so. I'll have to ask him if that's okay and what kind he likes, but if he agrees then sure.\"\n\nShe got another hug before her son buried himself in The Room which she watched him play for a couple of minutes. The graphics were stunningly clear, and while she wasn't much for internet games of any kind, this one looked interesting. But as soon as Wyatt got back up and went to his chair again, she forgot all about it and went back to enjoying the very pleasant emotional high she was still on.\n\nCharlotte waited until she got home from work on Thursday to ask Dan about pizza.\n\n\"Are you kidding? I live on pizza! Anything is okay with me except for anchovies or pineapple.\"\n\nCharlotte also hated anchovies but did occasionally like Hawaiian-style pizza. Rather than mention that, she let him know that Wyatt was crazy for pepperoni while she preferred black olives and mushrooms.\n\n\"Got it!\" Dan wrote back. \"I'll pick up a large with have pepperoni and the other half olives and mushrooms.\"\n\nCharlotte felt sick to her stomach and immediately texted back, \"You'll do no such thing! We're inviting you over, so we'll get the food.\"\n\nShe felt better, but when Dan's reply came, she got that 'warm, fuzzy' feeling again.\n\n\"I'm not letting a beautiful woman pay for my food. So I WILL be picking up the pizza, and you and Wyatt WILL enjoy it. Got it?\"\n\nHe put several wink emojis behind it, and again, Charlotte was smiling from ear to ear.\n\n\"K,\" was all she wrote except for, \"Thank you, Dan.\"\n\nShe put a blushing emoji with it then sent it.\n\n\"See you tomorrow,\" he wrote back, and Charlotte got another hit of endorphins or whatever it was her body was making.\n\nWhen she got home from work on Friday at 4:30, Charlotte turned into a whirling dervish as she vacuumed, dusted, straightened, and got Wyatt to clean his room. She had just enough time to change into something nice, but not too nice, minutes before Dan arrived.\n\nWyatt let his mom know his room was clean just as his mom finished getting ready.\n\nHe saw her and said, \"Mom. My room is all...\" then stopped and smiled. \n\n\"Mom. You look really pretty!\"\n\n\"Thank you, honey!\" she told him. \"Now let me take a look at the disaster known as Wyatt's bedroom.\"\n\nIt looked fine, so Charlotte thanked him then asked if he was ready for Dan to arrive.\n\n\"Oh, yeah!\" he said just as the doorbell rang.\n\n\"I'll get it!\" he hollered as he tore out for the door which he flung open.\n\nDan was holding two pizza boxes and said, \"Hi there, Wyatt,\" when the door flew open.\n\n\"Pizza!\" the boy said as his mom walked up.\n\n\"Don't you mean, 'Hello, Dan. It's nice to see you'?\" his mom said as she smiled at their guest.\n\n\"Sorry. Hi, Dan,\" Wyatt told him.\n\n\"Hey, buddy. You wanna take these?\"\n\nWyatt reached out, and Dan warned him they were heavy.\n\n\"No problem! I'm nine!\" \n\nHe nearly ran into his mom when he turned around, but once he zipped around her she asked Dan to come in.\n\nHe thanked her then said, \"You looked great at the base pharmacy, but...wow!\"\n\n\"Oh. Thank you. You look very nice yourself,\" she told him, a happy smile back on her very pretty face. \"And thank you for the pizza.\"\n\n\"Thank you for inviting me.\"\n\n\"I'm glad you came,\" she told him in a voice she hadn't used in a very long time.\n\nDan assumed he was in the minority when it came to men who preferred blondes. He'd always like darker hair better, but Charlotte's light-blonde hair looked amazing on her and made her blue eyes really stand out. She parted it on the side and wore it to just below her chin with just a hint of wispy bangs that weren't really bangs, per se, but whatever they were, the look worked for her in a big way.\n\nShe was wearing an ivory-colored sweater and a pair of taupe-colored pants. Dan noticed the additional makeup he hadn't seen at the pharmacy, and it was just enough to add to her considerable natural beauty.\n\n\"Mom? Can we eat now?\" Dan heard Wyatt call out.\n\nCharlotte looked at Dan who smiled and said, \"That's fine with me.\"\n\n\"Okay!\" his mom told him. \"Can you put out some plates for us?\"\n\nShe got an enthusiastic 'okay' in return, and within a minute there were three plates on the table along with a bunch of napkins. Charlotte felt silly for asking but asked anyway.\n\n\"You don't want a knife and fork, do you?\"\n\nDan gave her a 'are you crazy?' kind of look, and that made Charlotte laugh.\n\n\"Just checking,\" she told him before asking him what he'd like to drink. \"I apologize but we don't have any beer.\"\n\n\"No problem. I'm not a big beer drinker. Water's fine.\"\n\nShe offered him a choice of sodas, and Dan told anything was okay. Wyatt wanted Coke, so Dan had a glass with him while Charlotte went with tap water.\n\n\"Pepperoni!\" Wyatt said when his mom opened the boxes.\n\n\"There's a whole pizza just for you, big guy,\" Dan told him. \"Just don't try and eat it all tonight, okay?\"\n\n\"I won't!\" Wyatt said as his mom put a big slice on his plate as she smiled at Dan.\n\n\"One or two?\" she asked their guest as she opened the other box.\n\n\"I'll be polite and say one. For now.\"\n\nCharlotte laughed then put two on his plate.\n\n\"Can I have two?\" Wyatt asked immediately.\n\n\"Yes, but you can have them one at a time,\" his mother said as she put the smallest slice on her plate.\n\n\"Now can we eat?\" Wyatt asked, his mouth salivating as the thought of the first bite hit him.\n\nShe looked at Dan, smiled again, then said, \"Yes. Go ahead.\"\n\nWyatt took a huge first bite, and had Dan not tried to avoid laughing, Charlotte would have been embarrassed and told her son to slow down.\n\n\"He's all boy,\" she told Dan instead.\n\n\"That's a good thing, right?\" he replied as he took a fairly large bite himself.\n\nCharlotte looked at him in a way that said she loved hearing him say that, but because she was chewing, she didn't answer. When she finished the bite she asked a question of her own.\n\n\"So where are you from, Dan?\"\n\n\"Just outside of Seattle.\"\n\n\"I've always wanted to go there,\" Charlotte told him. \"Not sure if I'd like all the rain, though.\"\n\n\"It rains more in Atlanta, Georgia, than it does in Seattle,\" Dan informed her before taking another healthy bite.\n\n\"Really?\"\n\n\"Yep. But it's dark and gray a lot of the time as the Cascade Mountains hang up any clouds that form. But cross the mountains and you enter a whole new world of wheat fields, sugar beets, and hops. The West in green, and the East is brown.\"\n\n\"I guess I should know that, but...I don't.\"\n\nDan smiled then asked her a question.\n\n\"Mind if I ask what brought you back to Jacksonville?\"\n\n\"No. My father owns a trucking company, and he always hoped I'd work for him and maybe take it over one day.\"\n\nShe laughed then said, \"I know he really wanted a boy, but as you can see...\"\n\nDan smiled in a flirty way then said, \"Oh. Trust me. I definitely see.\"\n\nThis time, it was obvious that he was flirting with her, and it was also obvious that Charlotte enjoyed his doing so.\n\n\"Anyway...\" she began as though his comment was either unnoticed or out of line, \"he asked me again a few months ago, and even offered to pay to bring us back here. Wyatt wasn't thrilled about leaving his friends, but he dearly loves my mom and dad, so...here we are.\"\n\n\"Can I have another piece now?\" Wyatt asked, oblivious to the adult's conversation.\n\n\"Okay. Sure,\" his mom said. \"I don't know where you put it, but go ahead.\"\n\nWyatt was built like a beanpole, but he could pack away pizza without gaining an ounce.\n\n\"If only I could eat like that,\" she said to Dan who was also finishing his first slice.\n\nHe looked at then smiled.\n\n\"Yeah, you look like such a blimp.\"\n\nThe way he looked at her after he said made her tingle all over.\n\n\"I...I feel like one lately!\" she replied, partly in a defensive tone and partly in a way that said she knew she wasn't fat or anything close to it. She wasn't skinny, either, and Dan was now well aware of how nice she looked from the neck down, and it was every bit as pleasant to look at was everything from the neck up.\n\n\"So are you working for your father?\" Dan asked before starting on the second slice.\n\n\"Yes. Once we got settled in and found a place of our own, I started working again.\"\n\n\"You have a beautiful home,\" Dan told her sincerely.\n\n\"Oh, thank you. That's all due to...\"\n\nShe looked at her son who was pulling a long string of cheese off his pizza and still not paying any attention.\n\n\"My...husband had SGLI, of course, and, well...\"\n\n\"I understand,\" Dan said letting her know there was no need to explain any further.\n\n\"I've never cared about money, but once Jimmy...my husband...was gone, it...well, it would have been incredibly difficult without any. The only thing I've ever really wanted was a decent house, so this is my big splurge.\"\n\nThe truth was it was a very nice house, but it wasn't huge nor was it ostentatiously furnished. It was just a very nice home with thoughtful, tasteful decor throughout.\n\n\"It looks fantastic,\" Dan told her before asking if he could ask her another question.\n\n\"Of course.\"\n\n\"You mentioned 2012, and it's 2020. Has there, you know, has there been anyone...special...in your life?\"\n\nDan looked at Wyatt then back at his mom before saying, \"Other than this guy, of course.\"\n\nShe laughed then told him there had been one person.\n\n\"I met him four years after...\"\n\nAgain, she didn't need to say more.\n\n\"I really liked him, and I even moved in with him.\"\n\n\"I sense a 'but' coming,\" Dan said as nicely as he could.\n\n\"Oh, definitely. He uh, he had a...a wandering eye.\"\n\n\"Ah. And something tells me it wasn't just his eye that wandered.\"\n\nCharlotte couldn't help laughing then told Dan he was right.\n\n\"After that, I mostly kept my distance. I wasn't about to bring a bunch of men into our home after that, so I focused on raising Wyatt and just dated here and there.\"\n\n\"What?\" Wyatt asked, hearing his name and thinking his mom was asking him a question.\n\n\"You want one more slice?\" she asked as she tried not to laugh.\n\n\"Yes, please!\" \n\n\"Okay, but that's it for tonight, okay?\"\n\nWyatt agreed and then finished eating every piece of the crust from his second slice before attacking the third.\n\n\"How about you?\" Charlotte asked as she took another small bite that got her to the halfway point of her first piece of pizza.\n\n\"No. I've never gotten serious with anyone. Well, there was a girl in high school I dated for a year, but when I went off to college, that ended, and there's never been anyone else.\"\n\n\"Did you go to school in Washington State?\"\n\nDan thought about saying that 'Washington State' was the name of a university in Washington near the Idaho border, but he knew that everyone who wasn't from there called added 'State' to Washington.\n\n\"No. I uh, I went to the Naval Academy,\" he said, trying to downplay it.\n\n\"That's amazing, Dan! It's really hard to get into, right?\"\n\nDan knew that the acceptance rate was 8.5%. That was almost twice as many as got into Harvard, but it was still a very low acceptance rate.\n\n\"I guess,\" he replied as though it was no big deal.\n\n\"So how come you're a Marine then?\" she asked, having no idea how that worked.\n\n\"About one in four graduates are Marine option.\"\n\nThat, too, was a competitive process, and there were always more midshipmen applying for Marine commissions than slots available. \n\n\"I had no idea,\" Charlotte admitted. \"My only experience with the military was with Jimmy, and we didn't talk about it all that much. Most of the time we talked about what we'd do after he got out.\"\n\n\"I'm really sorry,\" Dan told her again, knowing they'd never had the chance to find out what that might be.\n\n\"Wyatt never knew his father,\" Charlotte said very quietly. \"He was six months old when Jimmy was sent to Afghanistan with a Marine unit.\"\n\nHoping to tactfully move away from that painful subject, Dan asked if Wyatt had always had asthma.\n\n\"No. He was just diagnosed with it about a year ago.\"\n\n\"Now it's my turn to be honest about not knowing much about something,\" Dan said with a friendly smile. \"Don't some children...grow out of it?\"\n\n\"Some do, yes. Wyatt's isn't severe, so there is a chance. I don't know the number or percent, but it is possible.\"\n\nWyatt was nearing the end of his third slice, and when his mom noticed she just shook her head.\n\n\"So what do you like to do, Wyatt?\" Dan asked him once the boy realized he was being looked at. \"Besides video games.\"\n\n\"Oh,\" he replied, his thunder having been stolen. \"Um...pizza!\"\n\n\"Wyatt! That's something you do, it's something you eat,\" his mother told him.\n\n\"He kinda...did...that pizza,\" Dan joked, causing Charlotte to laugh then agree.\n\nAs he shoved the last, large piece of crust in his mouth, Charlotte shook her head then told him to put his plate away then go wash up.\n\nWyatt said 'okay', but his mouth was so full it was inaudible, and his mom shook her head again.\n\n\"All boy, right?\" Dan said with a laugh.\n\nThe beautiful, older woman sighed loudly as Wyatt grabbed his plate while still chewing, then said, \"I don't know what I'd do without him.\"\n\n\"Speaking of doing...\"\n\nCharlotte looked right at Dan then smiled and said, \"Yes?\"\n\nHe waited until Wyatt headed to the bathroom before asking if it was okay to set up his Xbox.\n\n\"Oh, my goodness. Wyatt has asked me for one forever!\"\n\n\"Oh. Maybe that's not such a good idea,\" Dan replied with a little cringe.\n\n\"No. In fact, that would be exactly what Wyatt would want to do, given a choice of...anything.\"\n\nDan chuckled then asked if she was sure.\n\n\"Yes. Absolutely.\"\n\n\"Okay, but on one condition,\" Dan said.\n\n\"Oh?\" she replied with another amazing smile.\n\n\"You have to play, too. I only have two controllers, but we all have to play.\"\n\n\"I know I'll get killed by both of you, but I'll be happy to play,\" she told him with slightly less enthusiasm.\n\n\"Great. Let me go get the equipment, and I'll be right back.\"\n\nBy the time Dan came in with everything they'd need, Wyatt was back and waiting. When he saw the Xbox, he nearly flipped out, and within seconds was reaching for his inhaler.\n\n\"You wanna help me set it up?\" Dan asked, as though that might not be the case.\n\nWyatt 'got it' as soon as Dan explained where something went.\n\n\"This is for video, huh?\" the boy asked as he connected a wire.\n\n\"It is. And this is...\"\n\n\"That's the power cord. And the controllers go...\"\n\n\"He's a natural,\" Dan said to Charlotte who was watching them interact and enjoying every moment of it.\n\n\"He's very bright,\" she told him. \"Math is his favorite subject.\"\n\n\"Mine, too,\" Dan said with a smile. \"I majored in engineering, but I love math.\"\n\n\"Oh, my. I guess that leaves me the big, dumb dummy here, huh?\" she mostly teased.\n\nShe was standing near Dan who looked at her then quietly said, \"You are neither big nor dumb. In fact, you're just about...\"\n\nHe smiled then said, \"Perfect.\"\n\nCharlotte felt an even stronger tingle as she smiled back then sweetly said, \"Thank you.\"\n\n\"Mom! Did you see this game?\" Wyatt asked after connecting the last wife and picking up his favorite game.\n\nIt was called Star Wars Battlefront, and when Dan saw it he said, \"Oh, boy. I didn't mean to bring that one.\"\n\nWyatt was obviously disappointed, but as long as he got to play, he wasn't overly concerned.\n\n\"I brought a Hasbro game pack. Your mom mentioned board games, and I thought maybe we could play them only on Xbox.\"\n\n\"That sounds like fun!\" Charlotte said as Wyatt asked 'what kind of games'.\n\nBut within a minute of starting the first one, he was so deeply engrossed in it that he forgot all about the Star Wars game he wanted to play. It had Monopoly, Boggle, Trivial Pursuit, and several other games.\n\nThey played each of them for a few minutes apiece before settling on Risk, a strategy game Dan had loved as a kid and that Wyatt was loving. Charlotte had played everything else, and once they began playing Risk, she suggested the 'men' go at toe to toe.\n\n\"Okay, but how about you sit in between us?\" Dan said in a way and with the kind of smile that brought more than a tingle.\n\n\"I suppose I could do that,\" she replied, a kind of look of her own in her pretty blue eyes.\n\n\"Come on, Mom! Sit down with us!\" Wyatt said without looking away from the TV screen.\n\n\"Yeah, Mom,\" Dan said, as he patted the seat next to him after moving the wires out of her way.\n\nIt was 8 o'clock, and the next hour flew by. Charlotte hated given her son a 15-minute warning, but until she told him it was time to get ready for bed, he never complained. Even then, he only said, \"Ah, do I have to?\"\n\n\"Sorry, buddy. It's 9 o'clock, and we've playing since just before seven.\"\n\n\"Okay,\" Wyatt told her as he set the controller down.\n\n\"You're really good,\" Dan told the 9-year old.\n\n\"Yeah, but you were beating me.\"\n\n\"True, but I've been playing Risk since I was your age.\"\n\n\"Really?\"\n\n\"Uh-huh. It was a board version, but yes, I've been playing a long time.\"\n\n\"Go brush your teeth then come tell Dan goodnight, okay?\" his mom said.\n\n\"Okay! I'll be back!\" Wyatt said, trying to sound like 'Ahnold' in Terminator.\n\n\"And I'll be Beethoven!\" Dan replied, causing Wyatt to stop, give him a funny look, then shrug his shoulders before looking to his mom for help.\n\nCharlotte was laughing and unaware that she was staring at the very handsome younger man still sitting next to her on the couch, so Wyatt said, \"Whatever!\" then turned to leave.\n\n\"You're so good with him,\" Charlotte told Dan as her son walked away.\n\n\"I had a blast tonight. This was really fun,\" Dan said as he kind of turned her way.\n\n\"Yes. This was...very nice,\" Charlotte agreed, suddenly aware that their shoulders were touching.\n\nShe looked down at them then said, \"Sorry. I'll slide over.\"\n\nDan gently put his hand on her arm then said, \"You don't have to.\"\n\nJust the touch of his hand felt like electricity. Charlotte felt paralyzed and unable to move now even if she wanted to, and her body was telling her she didn't want to. But her brain wasn't quite as convinced and tried to convince her to move away.\n\n\"Oh,\" she replied, not sure what to do.\n\nDan had felt her twitch, but had no idea what was going on in her mind, and assumed that perhaps she wanted some space.\n\n\"If you want to,\" he added.\n\n\"I...I think I'm okay,\" she replied, barely above a whisper just as Wyatt came back.\n\n\"That was fast,\" his mom said. \"Did you brush?\"\n\n\"Uh-huh. I promise!\" her son replied.",
        "\"Hmmm,\" his mom said before giving up. \"Okay, come give me a hug and a kiss.\"\n\n\"Mom!\" \n\nCharlotte had never seen her son be embarrassed to kiss her before, but she knew the reason why.\n\n\"Can I at least have a hug?\" she asked.\n\nWyatt smiled and told her she could.\n\n\"Never be embarrassed to kiss your mom,\" Dan said in a friendly way as Wyatt bent down.\n\nThose few words did the trick, and Charlotte got her kiss.\n\n\"Can I get a hug, too?\" Dan asked.\n\nWyatt sped around the coffee table and gave the tall Marine a hug as Dan said, \"Just no kiss for me, okay?\"\n\nWyatt laughed the way Charlotte loved and found herself smiling and feeling happier than she had in ages as Wyatt said, \"No way. That ain't happening!\"\n\n\"Good night, buddy,\" Dan told him. \n\n\"Night, Dan! Night, Mom!\"\n\n\"Good night, honey!\"\n\nWyatt was leaving then stopped and turned around.\n\nHe stood there for a moment, and it was obvious he wanted to say something.\n\n\"Yes?\" his mother asked.\n\n\"You and Dan are a really nice couple,\" her son replied.\n\nHis mom's eyebrows rose up as high as they could go, and when Wyatt saw her reaction, his little face turned bright red.\n\n\"Where did you hear that phrase?\" Charlotte asked, now feeling bad that he was embarrassed.\n\n\"I don't know. On TV maybe?\"\n\n\"We're...we're not a...a couple, honey,\" his mom said as nicely as she could.\n\n\"I know, but you guys would be perfect for each other,\" the 9-year old insisted as some of the color drained from his cheeks.\n\n\"I'll come tuck you in in just a minute, okay?\" his mom said rather than address his comment.\n\n\"Okay. Good night, Dan!\" he said again.\n\n\"Night, Wyatt. See you again soon, okay?\"\n\n\"Okay!\" the happy boy said as his mom started to get up.\n\n\"I'll be right back,\" Charlotte said. \"To apologize.\"\n\nIt was a good five minutes later before she returned, and when she did, she sat down across from Dan.\n\n\"I'm sorry. Wyatt just gets so...hopeful,\" Charlotte explained apologetically.\n\n\"I get hopeful, too,\" Dan told her quietly and without a smile.\n\n\"You...you what?\"\n\n\"Maybe I'm off base here, maybe...way off base, but I can't remember ever feeling like this about...any woman before.\"\n\n\"Feeling? What kind of feeling?\" Charlotte asked as she felt like her mouth was suddenly very dry.\n\n\"For starters, I'd very much like to see you again,\" Dan told her.\n\nUnable to speak, Charlotte just sat there and listened as her heart began beating faster.\n\n\"I know you don't date much, and I'm sure you worry about who Wyatt meets. But I loved hanging out with him tonight, and I had the best time I've had in...well, maybe forever. With you.\"\n\nCharlotte's brain was racing faster than her heart. She wanted to find just the right words to say, but she had no idea what they might be. Instead, three words came out one at a time.\n\n\"I...don't...understand.\"\n\nDan looked right at her then said, \"You can't possibly be unaware that you're gorgeous.\"\n\nCharlotte had never been a vain woman, but she was well aware she'd been pretty since she was a little girl, so that wasn't the issue. It was hearing a man Dan's age who was as attractive as him say it.\n\n\"And based on the time we've spent together, it's also obvious that you're as nice as you are beautiful.\"\n\nCharlotte tried to speak again, but only got out one word this time.\n\n\"But...\"\n\n\"A third thing that's obvious is that you could date anyone you want, and I may not be that guy, but I'd really like to have the opportunity to let you find out that I'm a pretty guy.\"\n\n\"I...it's...it's obvious to me that you are,\" she managed to say.\n\n\"But?\"\n\n\"But...we...you and I...we just...met.\"\n\nDan finally smiled then said, \"That's true. And that's the reason we need to spend more time together. Otherwise we'll never know.\"\n\n\"Know?\" Charlotte croaked.\n\n\"Yes. We'll never know whether or not we're right for each other.\"\n\n\"Right for each other?\"\n\n\"Charlotte, I know that Wyatt is your number one priority in life. And I love that he is. But I really enjoy doing things with him, and I think he and I would also get along really well.\"\n\nWhen she didn't say anything, Dan kept going.\n\n\"But unless you have at least some tiny amount of the same kind of feelings about me, that won't ever happen, either.\"\n\nCharlotte still didn't say anything, so Dan continued.\n\n\"I can understand if my being in the Marine Corps is too big a concern. The wars have largely wound down, but it's still a dangerous profession. So it that's...\"\n\n\"No. It...it isn't that. Not at all,\" Charlotte said as she finally found her voice.\n\n\"Am I...unattractive to you?\" Dan offered as a possible guess.\n\n\"What? No. That's...that's crazy. You're very handsome, Dan.\"\n\nHe smiled then said, \"Thank you. So...what is it?\"\n\n\"You're kidding, right?\" she asked as nicely as she could.\n\n\"I haven't kidded about anything I've said,\" he told her as politely as he could.\n\n\"Dan, I didn't get married until I was 25. Jimmy and I were together for four years before we had Wyatt. He's nine, so...you said you're really good at math, so...\"\n\n\"Wait. You think how old you are matters to me?\" Dan asked once the light came on.\n\n\"Well, yes. How could it not?\" a very surprised Charlotte asked.\n\n\"I hope this comes out the way I meant it, but if not, I apologize in advance,\" Dan began. \"I've never dated a woman who wasn't white. But had I met someone who wasn't...someone I was attracted to physically and mentally...I wouldn't let that stop me.\"\n\n\"That makes sense, and it came out just right. But that's a whole lot different than being...so far apart.\"\n\nDan smiled at her then said, \"We're what? Maybe...ten feet apart?\"\n\nHe saw Charlotte smile, and before she could reply, he said, \"We could change that if you'd come back over here and sit with me again.\"\n\n\"I could, but what will I do when you realize I'm...almost 40...and come to your senses? And how would that affect Wyatt?\"\n\n\"So if I was 40\u2014or so\u2014you'd come sit next to me even though there'd still be no way to know what might happen down the road? Regarding you or Wyatt?\"\n\nCharlotte stopped looking at him and looked down into her lap.\n\n\"If I've made you uncomfortable, I apologize,\" Dan told her sincerely. \"But I couldn't leave here and not tell you how I feel. I guess I just don't feel the same way you do about our difference in age, but that doesn't mean you're not entitled to feel however it is you feel, so...\"\n\nDan got up, and as he did, Charlotte raised her head back up and said, \"Please don't leave yet.\"\n\nHe went to sit back down, but finished standing up. He looked at her then went around the coffee table and walked over to the chair she was sitting in. She watched him walk over, but once he was standing next to her, she looked down again.\n\n\"May I?\" Dan asked as he sat down on the arm of the large chair before she could answer.\n\n\"Charlotte? I don't have a crystal ball, so I can't know what the future holds for any of us. But I do know myself, and I am not someone who would ever intentionally hurt anyone. And if you decide to give me an opportunity to get to know you better, I can promise you I will be here for you. But that's up to you, and...\"\n\n\"Okay,\" she said so quietly Dan barely heard her.\n\n\"What was that?\" he asked.\n\nShe finally looked up at him, then said again, \"Okay.\"\n\n\"Okay? Really?\"\n\n\"Yes. Okay. And really,\" she said again as their eyes met and locked.\n\n\"Really?\" Dan asked again as he bent down to kiss her for the first time.\n\n\"Uh-huh,\" she whispered as his lips pressed against hers.\n\nIt was a soft, short kiss, but it caused Charlotte's body to tremble as she wondered what she was doing even as Dan stood up then held out his hand. Charlotte looked at it then looked at him, and finally place her hand in his.\n\n\"I'm very happy,\" Dan told her as he pulled her close.\n\n\"I'm very...nervous,\" Charlotte replied until Dan smiled.\n\n\"Don't laugh! I am nervous!\"\n\n\"You're also beautiful,\" Dan told her as he brushed her hair back then kissed her again.\n\n\"Can we just go...slow?\" Charlotte asked after this second kiss made her weak in the knees.\n\n\"Wait? How slow are we talking?\" Dan asked so seriously it took her a second to see the humor in his question.\n\n\"Stop!\" she protested even as she smiled back. \"You're young and handsome and...amazing, and I'm...\"\n\nDan put a finger on her lips and quietly said, \"Shhh.\"\n\nCharlotte stopped talking and looked up into his eyes.\n\n\"I'll be here for you. I promise,\" Dan quietly said.\n\n\"Okay,\" she whispered before putting her arms around her neck and letting him kiss her one more time.\n\n\"I uh, I should probably get going,\" Dan told her.\n\n\"Wait. I thought you told me you'd be here for me.\"\n\nCharlotte's deadpan delivery was so good, it took Dan a few seconds to get it.\n\n\"Ha! Got you!\" she teased before kissing him.\n\n\"Okay. I see how this is gonna be. I got my eye on you, young lady.\"\n\nDan bent down and put his head on her shoulder, and Charlotte asked, \"What in the world are you doing?\"\n\n\"I've got my eye on you,\" Dan replied. \"It kind of hurts though. I mean your sweater is soft, but still...\"\n\nCharlotte laughed a real laugh, and it felt so good she wasn't surprised by it and laughed even harder until she remembered Wyatt was sleeping.\n\n\"Shhh!\" she said even though she was the one needing to be quiet.\n\n\"Maybe I shouldn't have let you know about my sense of humor so early on,\" Dan told her as he stood back up.\n\nCharlotte laughed more quietly then said, \"I love your sense of humor.\"\n\n\"Yeah?\" Dan asked as he pulled her close again.\n\n\"Uh-huh.\"\n\n\"And I love...\"\n\nHe kissed her for quite some time then said, \"Kissing you.\"\n\n\"You're not so bad yourself there, Lieutenant. Dan.\"\n\nDan let her go and took a step back.\n\n\"Okay. Here we go!\"\n\nCharlotte was laughing again and didn't care.\n\n\"Come on. I'll walk you out,\" she told him as she grabbed his hand.\n\nWhen they got to his car Dan asked her, \"Are you really afraid?\"\n\n\"A little.\"\n\n\"Is it just the age thing?\"\n\n\"The 'age thing'. You say that like it's no bid deal.\"\n\nHe started to make a joke out it then changed his mind.\n\n\"If it's important to you then it's important to me,\" he told her as he put his hand on her cheek.\n\n\"Thank you.\"\n\n\"And thank you for having me.\"\n\nShe kissed him then told him it was her pleasure.\n\n\"Oh. You forgot your Xbox!\"\n\n\"I don't mind leaving it now that I know I'll be coming back,\" Dan told her. \"As long as you're okay with that.\"\n\n\"Wyatt will want to play it every minute of the day.\"\n\n\"That part is up to you,\" Dan said before he held her close then told her again how happy he was to have met her.\n\n\"Yeah. I had no idea that being a technological Luddite would be such a good thing.\"\n\n\"Luddite! Listen to you!\" Dan said as they laughed and held each other.\n\n\"I'm glad we met, too, Dan,\" she told him as she held him back.\n\n\"Good night, Charlotte,\" he said before softly kissing her one last time.\n\n\"Night, Dan.\"\n\nIt was chilly outside, but as Dan drove away, Charlotte didn't notice or even care. Inside, she was warm; warmer than she'd been since her husband was alive. It made no sense to her when she thought about how young Dan was, and yet there was a maturity about him she'd never found in any man of any age with the exception of her father.\n\n\"And he's 70 years old,\" she out loud with a sigh.\n\nWhen she walked back inside, she smiled then said to herself, \"So much for going slow.\"\n\nThe following morning, Charlotte was sound asleep when Wyatt came into her bedroom.\n\n\"Mom! Guess what?\"\n\nShe slowly opened one eye then said, \"I give up.\"\n\n\"The Xbox is still here! Dan left it. Can I play?\"\n\n\"Um...sure. Just not the one game.\"\n\n\"Star Wars?\"\n\n\"Okay. Sure. That one.\"\n\nWyatt nearly ran to the TV and sifted though the box of games until he saw one that made his eyes bug out\u2014Call of Duty Modern Warfare.\n\nSeconds later he was blowing stuff up and killing the enemy left and right. Explosions were going off, and Wyatt was hollering, \"You're DEAD!\" and other such things.\n\nCharlotte had already fallen back asleep, but the yelling woke her back up.\n\n\"What in the world,\" she said as she threw the covers off and got up.\n\n\"Wyatt James Clark. What in the world are you playing?\"\n\n\"Mom. This is SO cool!\"\n\nShe watched him fire some kind of weapon that destroyed a helicopter and had seen enough. She found the 'power' button and pushed it, and everything went blank.\n\n\"Mom!\" \n\n\"Wyatt, I thought you understood not to play this kind of game.\"\n\n\"Huh?\"\n\n\"I told you not to play this.\"\n\n\"Mom. You said I couldn't play Star Wars. Remember?\"\n\nShe didn't remember and didn't feel like arguing.\n\n\"Honey? I don't like all the violence, okay? Can you find something less...destructive...to play?\"\n\n\"Ahh,\" Wyatt said with great disappointment.\n\nBut a few seconds later he was playing something else and seemed just as happy. \n\nNow unable to sleep, Charlotte made some coffee then sat there thinking about the day before from the base pharmacy to...the kiss. Or kisses.\n\nThe thought made her smile and also afraid at the same time. She'd promised herself she'd never rush into anything again, but she had this overwhelming desire to see Dan again. She had this feeling that she really could trust him. That he would never hurt her or Wyatt. And yet that's what she'd thought about Mr. Wandering...Eye...Guy.\n\nShe sighed loudly then poured herself a cup when it finished brewing, and within seconds, she was again reliving each of the kisses she'd shared with this amazing man. This amazing, handsome, very young man. \n\nIt wasn't until she was pouring a second cup that Charlotte realized she hadn't checked her phone for messages. As she went to the bedroom to get it, she experienced another tingle in anticipation of a text from Dan. It was unlikely she'd find one, but just the thought of it brought back that old, familiar feeling of...\n\nShe laughed when 'being in love' came to mind as the cause for the feeling. That was downright nutty, but whatever this was with Dan, it felt very nice to her.\n\nThe anticipation peaked when she picked up the phone and saw a red '4' in her messages. Her heart rate quickened as she looked to see who they were from, and when saw that two were from Dan she let out an involuntary kind of squeal.\n\n\"Hi, gorgeous! I had a hard time sleeping last night, and while some of it was due to the cast, most of it was because I couldn't stop thinking about this beautiful blonde woman I met at the base pharmacy.\"\n\nCharlotte was beaming from ear to ear as she continued reading.\n\n\"I have to say that while I've many other evenings that were a little more wild, I've never had one that was so enjoyable. I wonder if that might have anything to do with the people I spent it? I mean, that blonde woman was there, and that was pretty fantastic. But I also had a great time playing video games with her son. Sorry for going on and on about it, but it really made a huge impression on me. I guess you'd have to be there to really understand.\"\n\nHe put a smiley emoji after that then wrote: \"I really did have a wonderful time with you and Wyatt last night, Charlotte. And while I'm rambling, I wanted to tell you that the way the evening ended was even better than the time we spent playing video games with Wyatt. I'd give it a solid '10'. For that matter, I'd give you one, too.\"\n\nHe put another smiley gizmo behind it then said, \"Hope that wasn't offensive. I also hope we can see each again very soon. Like maybe...today?\"\n\nShe scanned the second text which only said, \"May I call you?\"\n\nCharlotte read it a second time then fell back on the bed and kicked her feet in a kind of happy dance. Dan had just written everything she hoped to hear and more. She laughed when he said she was a '10', but the fact that he said it made her feel beautiful in spite of being almost 40.\n\nShe sat back up and thought about what to say for a minute then started texting.\n\n\"My, my. You have a way with words, Lieutenant! I have to say your text made me smile, and I haven't stopped smiling since I read it. I know you're an honorable and honest man, but I am going to have to call you out on your um...rating. I was flattered to be called a '10', but we both know that's not true. Not even close. But it was very sweet of you to say. Considering that you may actually be one yourself.\"\n\nCharlotte but some blushing emojis down then finished her text.\n\n\"I would love to see you again, too, Dan. And today would be very nice. I could make dinner for us unless you have some other idea. I'm flexible, so just let me know, okay? Oh. And you can call me today. Or anytime!\"\n\nShe sent it then remembered she didn't tell him how much she also enjoyed the way things ended, so she quickly sent a second text as a PS.\n\nDan was smiling as he read them, and as soon as he finished, he called her.\n\n\"Hi,\" Charlotte said very sweetly when she saw his name.\n\n\"Good morning.\"\n\n\"I'm glad you called.\"\n\n\"I couldn't not call. You're...addicting.\"\n\nCharlotte laughed then told him that was him.\n\n\"No. That would be you, and I dispute your dispute about my awarding you a '10' which, in my humble opinion, was very well deserved.\"\n\n\"You are one smooth operator, Dan Knight,\" Charlotte said with a little laugh.\n\nShe could tell Dan was smiling even when he didn't laugh with her.\n\n\"As to plans, I don't really have any. This peg leg thing I've got going on is really um...\"\n\nDan used his 'I'm like totally stoned' voice to say, \"Harshing my mello, maaan.\"\n\nCharlotte laughed, not so much because it was funny, although she did think it was. She was just so happy she couldn't not smile or laugh.\n\n\"I'm sorry you broke your ankle, but I'm also not too sorry, because had you not...\"\n\n\"Don't say it!\" Dan interjected, and when he did, Charlotte laughed again.\n\n\"Can I make dinner for you tonight?\" she asked in that sweet voice he already loved.\n\n\"As long as it isn't leftover pizza,\" Dan said very seriously, and even that made her laugh.\n\n\"I promise I won't do that to you. But it would be nice to know what you like.\"\n\nThere was a pause before Dan said, \"Oh. You mean other than you, huh?\"\n\nOnce again, the 39-year mother was all smiles and feeling on top of the world.\n\n\"I'm a simple guy. I love baked chicken, salmon, red potatoes, wild rice, broccoli, asparagus, whole wheat bread.\"\n\nCharlotte laughed again, but this time out of a sense of irony, because his list of very specific things didn't mesh with his claim of being simple to cook for.\n\n\"Okay. You're a healthy eater then.\"\n\n\"I try. And as you saw, I do eat junk food.\"\n\n\"Hmmm. You consider pizza junk food while I consider it one of the four food groups.\"\n\nNow it was Dan who laughed.\n\n\"You're not only beautiful, you're so easy to talk to. I think it's pretty obvious why I like you so much.\"\n\n\"I...I kind of like you, too,\" she told him.\n\n\"Yeah?\"\n\n\"Maybe. A little.\"\n\n\"I'll take it!\" Dan said with another little laugh. \"And what can I bring with me tonight?\"\n\n\"Do you drink wine?\"\n\n\"I do if I have someone to drink it with me.\"\n\n\"Then a bottle of chardonnay would be nice. If that's not too girly for you.\"\n\nDan laughed again and assured it wasn't.\n\n\"Just don't tell any of my fellow Marines I drank chardonnay. If it comes up, just maybe say whiskey or tequila, okay?\"\n\n\"Your secret's safe with me, Dan,\" Charlotte said in that same sweet voice.\n\n\"So what time is dinner in the Clark house?\"\n\n\"Is six okay?\"\n\n\"It's better than okay. It's perfect.\"\n\n\"K. See you then?\"\n\n\"You will. Bye, Charlotte.\"\n\n\"Bye, Dan.\"\n\nWhen she hung up, Charlotte fell back on the bed and did an even bigger kicking thing. This was almost a kind of thrashing, and the squeal that came with it brought Wyatt running into her bedroom.\n\n\"Mom. Are you okay?\"",
        "She sat up then threw her feet over the side of the bed and let him know she was fine. She was still smiling from ear to ear, and Wyatt noticed.\n\n\"Why are you so happy?\"\n\n\"Well, I was just talking to Dan again, and he's coming over again tonight for dinner. Is that...\"\n\nShe didn't 'okay' out before Wyatt went crazy. Even when he had to use his inhaler a few seconds later, Charlotte still didn't feel bad because her son was as happy as she was, and she was very, very happy.\n\n\"How about we get ready to run to the store so we can buy something to make tonight?\" she suggested after Wyatt's lungs cleared.\n\n\"Okay, Mom!\" he replied and headed straight to his bedroom.\n\nHaving never dated an older woman before, Dan wasn't sure what was appropriate so he went to the expert named Google and asked. To his very great surprise the first thing he found was advice to never, ever give flowers on a first date. The writer said it made the man look 'needy' and that it was a huge turnoff for any woman.\n\nBelow the article there were comments, and every woman who shared her opinion disagreed with the writer who happened to be a man.\n\n\"This guy's too 'woke' for his own good,\" Dan said as he made up his mind.\n\nHe picked up a bottle of chardonnay and a bouquet of tulips, a flower one of the commenters said she received\u2014and loved\u2014on a first date. What he hadn't thought through was carrying both of them to the front door while on crutches. So when he pulled into the driveway, he wasn't quite sure what to do.\n\n\"Oh. I got it!\" he said as he got out of the car then grabbed his artificial legs.\n\n\"Dan!\" Wyatt said as he flung open the front door.\n\n\"Hey, Dude!\"\n\nDan bent over and hugged his new best friend then said, \"Can you do me a huge favor?\"\n\n\"Sure!\"\n\nJust as Charlotte walked up in a dress that took his breath away, Wyatt was outside serving as the delivery boy.\n\n\"You're killing me here!\" Dan told her when he saw her.\n\n\"It's okay?\"\n\n\"Is it okay. Are you kidding me?\" he teased.\n\n\"Dan! I got everything!\" Wyatt announced as he came back in.\n\nCharlotte saw the flowers and gasped.\n\n\"They're for your mom, buddy.\"\n\n\"Here Mom!\" Wyatt said as he handed them to her.\n\n\"Dan. They're...beautiful! Thank you. Thank you so much!\"\n\n\"Oh, and this too, Mom,\" her son said as he held out the bottle of wine.\n\n\"Can you bring that into the kitchen for me?\" she asked.\n\nOnce Wyatt was gone, Dan moved closer and smiled.\n\n\"I'm dying to kiss you.\"\n\n\"I'm dying to be kissed,\" she said with a happy smile.\n\n\"You're uh, you're wearing lipstick.\"\n\nShe understood it would be on Dan's lips and that Wyatt would see.\n\n\"Hold on.\"\n\nShe set the bouquet down, grabbed a tissue, then looked to make sure Wyatt wasn't watching.\n\n\"Okay!\"\n\nDan kissed her softly, and just as he did, someone came out of the kitchen and saw them.\n\n\"Mom!\" \n\nCharlotte pulled back as though Dan's lips were electrified. In a way, they kind of were, but Wyatt really startled her.\n\n\"Oh. Hey...buddy.\"\n\n\"Do you like Dan?\" he asked hopefully.\n\n\"Is that okay?\" his mom asked back.\n\n\"Are you kidding? That's...awesome!\"\n\nDan laughed, and so did his date.\n\n\"Dan. You wanna play Xbox?\" Wyatt asked.\n\n\"I do, but can I maybe talk to your mom a little first?\"\n\n\"Oh. Sure. Yeah, that's fine!\"\n\n\"But we will play. I promise.\"\n\nWyatt zipped off to his room as Charlotte put the flowers in a vase.\n\n\"This was so nice of you, Dan.\"\n\nHe told her what he'd read online, and when he did, Charlotte made a face.\n\n\"No. I couldn't disagree more.\"\n\n\"The author is a guy.\"\n\n\"Ha! No wonder! He's probably a single guy,\" Charlotte quipped.\n\nDan moved closer then behind her, and when he did, he rested his crutches on the counter then put his arms around her waist.\n\n\"You look amazing.\"\n\n\"I can't tell you how long I debated about what to wear. I kept telling myself that a dress was...overkill...but I'm glad you like it.\"\n\n\"I do,\" he said as he nuzzled her neck. \"But I like the woman in it even more.\"\n\nCharlotte put her hands on the counter in front of her then arched her neck back and said, \"Mmmm.\"\n\n\"You look good and...you smell good,\" Dan said as he continued kissing her neck.\n\n\"You uh, you should probably stop doing that as in...right now,\" Charlotte said in a husky voice.\n\n\"I will if you'll promise I can finish doing it at a later date.\"\n\n\"I promise,\" she whispered before turning around and kissing him in a way they hadn't yet kissed.\n\n\"Wow. I don't know where that came from,\" Dan told her as he smiled at her, \"but I hope there's more where that came from.\"\n\n\"I have a ton of it saved up, and whenever you finish whatever you were doing to me, I promise you more of that will come out, too.\"\n\n\"Is it too early to tell you you're really 'hot'?\" Dan asked as he put his arms around her waist.\n\n\"You can say it, but I'm going to need some time to be convinced you mean it,\" she replied, her insecurity about being so much older rearing its ugly head.\n\n\"I can do that. Guaranteed.\"\n\nThe way Dan looked at her made her heart skip a beat. He was SO handsome it almost scared her as she really wondered how he could possibly be interested in her. But the thought of asking him and hearing an answer she didn't want to hear was even scarier so she just smiled, kissed him again, then said, \"Can you help me get dinner ready?\"\n\nHe told her he could, then when he reached for his crutches she felt terrible.\n\n\"Dan. I'm so sorry. I...I got so caught up in, you know, that I forgot all about your...\"\n\n\"Peg leg?\"\n\nOut of relief, Charlotte laughed again then asked to go sit down as she went to get Wyatt who was happy to help.\n\nWyatt wasn't quite as excited about baked chicken as he'd been about pizza even though he thought it tasted great. He even followed the conversation most of the time, and asked Dan a bunch of questions about the Marine Corps.\n\n\"Why do you have silver things on your collar but gold wings on your chest?\"\n\n\"Is the guy with all the stripes higher than you?\"\n\n\"How can you be higher than him when he has more stripes?\"\n\n\"Do Marines make a lot of money?\"\n\n\"Have you killed anyone?\"\n\nHis mom politely stopped him when he asked that question and let him know that wasn't something to ever ask anyone. She did her best to explain why without making her son feel guilty, and he moved on to video games.\n\n\"So tell me about your dad's business,\" Wyatt asked at one point.\n\nCharlotte spent a few minutes explaining how he started out as a driver back in the mid-1960s and paid off the truck. He got a loan and bought another and then formed an LLC.\n\n\"Now he has over three dozen vehicles and drivers plus a staff of three in the office. I do his books and billing.\"\n\n\"Oh. An accountant.\"\n\nCharlotte laughed and told him, \"Self trained. I did take a couple of classes in California, but most of what I know, my dad taught me. The woman who'd been doing the billing got married\u2014to a Marine\u2014and she left for Pensacola where her new husband is going to be an instructor in flight school.\"\n\n\"Okay. Yeah, I have quite a few friends who went there. In fact, they're all still there.\"\n\nHe could tell Charlotte wanted to ask him a question, but she only told him it could wait as she turned things around and asked him to explain what 'ANGLICO' did. She pronounced it 'angle-ko', but Dan didn't laugh. He just pronounced it correctly as he began talking.\n\nHe started with the role of naval gunfire back when the Navy had battleships and the need to precisely control where the huge shells landed to avoid killing friendly troops while decimating the enemy. Charlotte was doing her best to follow along, but there was just too much to explain in too short a time. Even the basic job description was a confusing mess.\n\n\"ANGLICO provides commanders a liaison to control fires in support of joint, allied, and coalition forces,\" he said before stopping.\n\n\"We talk on the radio,\" Dan said as a simple way to sum it all up.\n\n\"I...I feel so...\"\n\n\"Mom! You're not supposed to say that word!\" Wyatt told her, knowing she was about to say 'stupid'.\n\n\"Good thing you remembered then, huh?\" she told him with a smile.\n\n\"Your mom is very smart,\" Dan told him. \n\nHe looked at Charlotte then added, \"And very beautiful.\"\n\n\"I know,\" Wyatt said with a slightly embarrassed look as he smiled at his very pretty mother.\n\n\"Ah! Both of you are so nice!\"\n\n\"That's 'cuz we love you!\" Wyatt told her.\n\nCharlotte's eyes got wide as she looked over at Dan who was smiling as he put his hands up.\n\n\"Hey. What he said.\"\n\nDan pointed at Wyatt who thought he was in trouble.\n\n\"No. I was agreeing with you,\" Dan told him.\n\n\"Oh. Okay. Mom? Can I have dessert?\" the happy boy asked, and that caused both of the adults laugh which made Wyatt cross his arms to indicate he didn't like being laughed at, even though he was having a great time. He could also tell no one was being mean, and he was enjoying being the center of attention.\n\n\"I suppose you could have have a couple of Oreos with some milk,\" his mom said.\n\n\"Can I have five?\" \n\n\"How about three?\"\n\n\"Four?\" Wyatt asked knowing he'd win.\n\n\"Okay. Four,\" his mom said as she looked at Dan for support.\n\n\"He's thin as a rail,\" Dan told her as though he had no choice but to tell the truth.\n\nWyatt was already into the bag and getting his ration of cookies while his mom gave Dan a 'thanks a lot' look before smiling at him.\n\nWhen Wyatt sat back down with the cookies and milk his mom said, \"If you're going to slurp them, how about slurping them in your room?\"\n\nWyatt had that same sheepish look on his face when Dan came to his rescue again.\n\n\"What other way is there to eat Oreos?\"\n\nCharlotte's jaw dropped in an exaggerated manner as she shook her head in mostly mock disbelief.\n\n\"What can I say? I'm all boy, too.\"\n\nCharlotte started to say something, but Dan held up a finger.\n\n\"Don't you dare say a word about the 'boy' part, okay?\"\n\nShe had no intention of saying anything like that, but she understood what he meant immediately and said, \"Who, me?\"\n\n\"What are you guys talking about?\" Wyatt asked as he pulled an Oreo out of the milk then slurped it until the cookie collapsed in his mouth.\n\n\"Someone's insecurities,\" his mother replied.\n\n\"What does that mean?\" Wyatt asked.\n\n\"It means your mom doesn't know how beautiful she is,\" Dan said to Wyatt as he looked his mom.\n\nThe boy was already soaking another black and white cookie and didn't really care. When he slurped it, his mother cringed but Dan laughed. When he did, Wyatt laughed, too, exposing a mouth full of soggy cookie that was also stuck to his teeth.\n\nCharlotte gave Dan another, \"What am I supposed to do?\" look when he said, \"Hey. All boy, right?\"\n\nFor the first time in years she really thought about what it would be like to have a man in her life who loved her son and who could serve as a role model. She'd thought it about in some generic sense many times, but she hadn't ever really imagined what it might look like day to day or in any specific circumstance until right then.\n\nBut as she saw Dan, who was male in every sense of the word, and her son, who was growing up so fast, she understood that they would share a bond she never could. Having been the only adult in Wyatt's life all day, every day since her late husband left for Afghanistan, she felt a pang of jealousy at having to share him. But the pang was replaced by her awareness that boys needed men to guide them and to bond with. That meant doing guy things like sports and being aggressive and maybe even slurping their food or even, as much as she hated to admit it...farting and belching.\n\nAll those thoughts ran through her mind in the space of a few seconds, and in the end, it made her smile.\n\n\"So do I have to go to my room?\" Wyatt asked after swallowing the rest of cookie #2.\n\n\"No. I don't mind a little slurping,\" she told him, grateful to have such a good, decent boy as her son, and for having Dan there with her, too.\n\nOnce the table was clear, the dishwasher loaded and running, and Wyatt's black teeth turned pearly white again, he wanted to play video games again.\n\n\"How about something similar but not involving Xbox?\" Dan suggested.\n\n\"Like what?\" Wyatt wanted to know.\n\n\"If you'll go get my iPad, maybe we can all do something together.\"\n\n\"Okay!\"\n\nDan asked Charlotte to sit on his left and Wyatt to sit on his right as he opened the game he'd let Wyatt play at the base pharmacy.\n\n\"Let's see if we can figure out the clues together,\" Dan suggested.\n\nWyatt was ready and willing, but Charlotte said, \"I'm terrible at this kind of thing.\"\n\n\"Have you ever tried it?\" Dan asked as he turned to look at her.\n\nWhen their eyes met from just inches away, Charlotte got a warm bath of emotion that spread over her entire body.\n\n\"No. I can't say I have, but if I can stay right here, I'd be happy to try,\" she told him quietly as she ran the fingers of her hand along his forearm.\n\n\"I'd like that,\" Dan replied just as quietly. He formed a kiss with his lips, and when he did, Charlotte smiled then laid her head on his shoulder and waited for him to explain what to do.\n\n\"Oh! I see it!\" Wyatt said before his mom could even tell what was going on.\n\nHe found a key to open a box, and when Dan clicked on it, the box opened.\n\n\"That's amazing!\" his mom said as she looked around Dan.\n\n\"It's easy, Mom! You try.\"\n\nCharlotte stared at the screen but couldn't see what to do next.\n\n\"How about we look over here?\" Dan suggested as he touched the screen which moved them closer to a corner.\n\n\"How about this silver thing?\" she asked as she pointed to it.\n\nDan clicked on it and when he did, it rose up and she could see a hole in it.\n\n\"Oh! If we get this little stick thingy over here, I bet it'll go in that hole!\" she said as she started getting excited.\n\nIt fit, and Wyatt said, \"Way to go, Mom!\"\n\n\"Thank you, honey!\"\n\nDan looked at her then said, \"Yeah. Way to go...Mom.\"\n\nShe slid her arm through his and held it tight as they continued playing. At one point she put her left arm on top of Dan's forearm and ran it along it as they played. Wyatt never noticed, but Dan did, and he needed to adjust the iPad to conceal a...growing problem...just underneath it.\n\nNine o'clock came so quickly that all three of them were surprised as the grownups said goodnight to Wyatt.\n\nWhen Charlotte came out of her son's bedroom to sit with Dan, she snuggled up even closer than she had while playing The Room.\n\n\"I realized something tonight,\" she told him.\n\n\"What's that?\" Dan quietly asked.\n\n\"I said I wanted to go really slow, but I...\"\n\nShe looked up at him then said, \"I don't feel that way anymore.\"\n\n\"Yeah?\" a surprised and happy Dan Knight replied.\n\n\"I can't explain it, but I...I have this...feeling.\"\n\n\"What kind of feeling?\" Dan asked as he used the back of his fingers to gently touch her cheek.\n\n\"I...I feel like...like I can trust you.\"\n\n\"You can,\" Dan assured her.\n\n\"When I was a little girl I used to believe in love at first sight. But as I got older I became more practical and felt like I needed to know someone for at least six months before I could have any, you know, romantic feelings for them.\"\n\n\"And?\"\n\n\"Well, maybe it's just my emotions or not having had a man in my life for so long, but...\"\n\n\"Uh-huh?\"\n\n\"Please don't laugh, okay?\" Charlotte asked in a way that said she was feeling vulnerable.\n\n\"I won't.\"\n\n\"I feel like meeting you was...I don't know. Maybe...destiny? Or fate?\"\n\n\"I called home and talked to my dad, who's the smartest man on earth, and I told him I'd met a woman who pretty much turned my whole world upside down. He wanted to know how long I'd known her, and when I told him, he laughed.\"\n\n\"Oh,\" Charlotte said, feel deflated and foolish.\n\n\"No. He didn't think it was a bad thing. He laughed because that's how he felt about my mom the first time he met her.\"\n\n\"Oh,\" Charlotte replied in a completely different tone of voice, now feeling much better and even hopeful.\n\n\"He told me, 'I just knew. I don't know how I knew, I only knew that I did'.\"\n\n\"And?\"\n\n\"Well, they went out a couple of times, and my dad said he told her he thought he was already falling in love with her.\"\n\n\"What did your mom say to that?\"\n\nDan laughed then answered her question.\n\n\"She said, 'Gee, what took you so long'?\"\n\nCharlotte gasped, sat up, then asked, \"Did she really say that?\"\n\nDan smiled then said, \"Well, I uh, I wasn't actually there, but my dad swears it's the truth.\"\n\n\"But your parents aren't like us, right? In terms of age?\"\n\n\"My dad is three years older than my mom, so no. But don't you think that when you know, you just know?\"\n\nDan was staring into her eyes, and Charlotte had this crushing sense of needing to tell him she loved him. She didn't because her rational mind won out, but it was all she could do not to speak those three little words. Rather than say them she only told Dan she agreed.\n\nDan turned his hand around and placed it on her cheek then quietly said, \"And...I just know.\"\n\nCharlotte's eyes were darting with his so fast it would have been humorous had the mood not been so serious.\n\n\"I do, too, Dan,\" she whispered before raising up to press her lips against his.\n\nThey kissed for several minutes, and Charlotte knew they had to stop, because in spite of her 'knowing' she knew she wasn't ready to sleep with him yet. Dan also knew that, and he was the one who suggested they stop while they still could.\n\nThey talked until midnight, neither of them moving as Charlotte nestled in close, Dan's arm around her, feeling like she was safer and happier than she'd ever been.\n\n\"You have to work tomorrow, don't you?\" he said when Charlotte mentioned it was already twelve o'clock.\n\n\"I do.\"\n\n\"You need to get some sleep.\"\n\n\"Hey! Are you saying that because I'm so old?\" she teased as she looked up at him.\n\nDan laughed then kissed her and ignored her question.\n\n\"No. However...I do know, though,\" he told her.\n\nCharlotte smiled then told him she was very happy that he did before reminding him that she did, too. She then walked him to the front door where he thanked her for dinner and another wonderful time, and she told him the pleasure was all hers.\n\n\"Charlotte?\" he said as he held her just before saying goodnight.\n\n\"Yes?\"\n\n\"I'd like to see you as often as you'll let me.\"\n\nShe smiled then said, \"I'll let you as often as you like.\"\n\n\"Yeah?\"\n\n\"Uh-huh. Anytime.\"\n\n\"Promise?\"\n\n\"Cross my heart.\"\n\nDan looked at her for several seconds then said, \"I love you, Charlotte.\"\n\nHad they not talked about love at first sight or Dan's father and mother, she'd have recoiled in fear. But that talk, which really began because of her comments, had set the stage for those very unexpected words.\n\n\"I love you, too, Dan,\" she whispered back as he pulled her close and kissed her one more time.\n\n\"See you tomorrow?\"\n\n\"Yes. Please.\"\n\nWhen Dan walked out, Charlotte stood there with her back against the door as her body trembled and her mind swirled with emotions that came crashing down on her all at once. There were too many to number, but out of all of them the one that stood out the most was a feeling of gratitude. \n\nShe had no idea whom to thank, or if anyone was even to be thanked. Perhaps it was nothing more than fate itself. Maybe it was that she was so ready, willing, and able to fall in love again that made this happen, but had Dan not felt the same way, she knew she wouldn't be feeling anything even close to this.\n\nAnd yet she was, and as she heard his car pull away, tears of joy welled up in her eyes as she realized she was once again in love. The man she loved made no sense 'on paper', but love wasn't an equation. It was a thing of the heart, and Charlotte's was telling her this was as real as anything she'd ever experienced.",
        "Dan came back the following evening and every night for the rest of his ten days of no duty, one of the biggest unforeseen blessings of his life. After that, he and Charlotte spent as much time together as they possibly could with Wyatt joining them most of the time.\n\nAfter just three weeks, Dan met Charlotte's parents for the first time who'd both been warned about their daughter's boyfriend being 'a little younger than her'. It took her a few hems and a few more haws to fess up to just how much younger he was, but she finally told them then waited for their reaction.\n\nNeither of them had had much to say at the time, so she still wasn't sure how they'd react when they met Dan for the first time. But before he left that Saturday evening, he'd won her mom over with his charm and her father with his maturity and the way Dan treated his little girl.\n\nWhen Dan's cast came off a couple more weeks after that, he was returned to duty but put on 'light duty' for two more weeks. He wore a brace on the ankle for those two weeks, and for several months after that it seemed to be just fine. But during a double running of the obstacle course, a physical challenge that beat up all but the fittest of Marines, Dan came off the wall on the second time through and knew something was very wrong as he collapsed like he'd been shot when his feet hit the ground.\n\nOnce again, two Marines helped him get into the vehicle with the corpsman in it as he was driven back to the base hospital. This time, pins were put in the ankle, and a Navy doctor who was a captain, the equivalent of a Marine colonel, told the lieutenant he would likely face a medical board.\n\n\"I know it's not what you want to hear, Lieutenant, but that ankle may never fully heal. Were you my age and/or rank, we could put you on a permanent light-duty status until you retired. But at your age, you won't be considered fit to serve the 17 or so additional years you'll need to retire.\"\n\n\"So does this mean I'm done, sir?\" Dan asked, dumbfounded by the revelation.\n\n\"Not necessarily. It's hypothetically possible the board will find you fit to continue serving. But that seems unlikely to me having seen dozens of similar cases over the last 21 years. Even if they do certify you, you could very well break it again unless you were to become...maybe an admin officer?\"\n\n\"A fate worse than death,\" Dan mumbled at the thought.\n\n\"I'll let your command know that I'll be getting the ball rolling on the medical board. In the meantime, stay off the ankle.\"\n\nDan hadn't yet called Charlotte, but as he once again found himself at the base pharmacy waiting for medication, he dialed her number, knowing she was at work.\n\n\"Hi, honey! What's going on?\" he heard her ask cheerfully.\n\n\"I uh, I'm at the base pharmacy again.\"\n\nThe fear in Charlotte's voice was evident as she asked, \"Is everything okay?\"\n\nDan told her what happened, and even after insisting he was fine, he heard Charlotte telling her dad she had an emergency and would be leaving.\n\n\"I'll be there in 20 minutes, Dan,\" she said.\n\n\"You really don't have to do that,\" he said again.\n\n\"Dan? I love you, and I can't not do this, okay?\"\n\nDan Knight had never cried since he was four or five, but the frustration of possibly losing the career he loved was so great it was all he could do to hold it together. But hearing the woman he loved say those words gave him hope.\n\n\"You have no idea how happy I am that you do,\" he told her as he blinked hard a couple of times then hung up before sighing deeply and looking down at the new cast that was a metaphor for what was down the road.\n\nDan was still seven numbers away from being called the second time when a very pretty, frantic, blonde woman appeared in the lobby and began searching for one particular Marine among many others. Because his unit had been PTing, he wasn't in uniform, but Charlotte spotted him in a second.\n\n\"Dan!\"\n\nHe raised his arm a little then smiled as she rushed his way. When she got to him she bent over and hugged him then kissed him before sitting down beside him.\n\n\"Is it...is it really that bad?\" she asked, her eyes filled with tears knowing how difficult this was for him.\n\n\"I think it is.\"\n\nHe explained what the orthopedic specialist told him, and when he finished, Charlotte laid her head on his shoulder and told him how sorry she was.\n\n\"So in 90 days, I could be a civilian,\" Dan said quietly and matter of factly.\n\n\"We'll get through this. Together,\" Charlotte said as she sat up and looked him in the eye. \"I'll be here for you no matter what, okay?\"\n\nShe wasn't crying only for Dan's sake, but when she saw his eyes get glassy, she couldn't hold it back any longer. Now it was Dan comforting her as she again laid her head on his shoulder and cried as quietly as she could.\n\n\"I'm sorry I'm so weak,\" she told him as she dabbed her eyes with a tissue.\n\n\"Hey. It's okay. You're all girl, right?\"\n\nThe meaning of the phrase wasn't lost on her, and she even laughed which made the mess even worse.\n\n\"I am that,\" she agreed as she tended to the disaster that was her face.\n\nShe apologized for that, too, and Dan said, \"Hey. Listen to me. You are the most beautiful woman I've ever known.\"\n\nShe looked at him and showed him her mascara-streaked eyes, her snotty lip, and asked if he still meant that. Ignoring it all, he leaned over and kissed and told her that he did. \n\nCharlotte teared up again out of love and gratitude, and somehow kept it together from then on. And just like before, she brought the car around front where Dan was waiting for her.\n\nWhen he got in, he said, \"This is like deja vu all over again.\"\n\n\"Okay, Yogi Berra,\" Charlotte said with a little laugh, trying to be cheerful. She took his hand, squeezed it, then let go and put the car in gear.\n\n****\n\nThree months later\n\n\"Lieutenant Knight. It is the decision of this board that you be recommenced for discharge under honorable conditions for medical reasons as cited below.\"\n\nThe Navy captain didn't read them. Dan already knew them by heart. He'd failed every test the Navy ran him through starting with an MRI to see whether or not the ankle was strong enough to remain on active duty, and he'd failed every one of them, and of them he failed spectacularly.\n\nHe'd be able to live a normal life free of pain when walking and even ride a bike, swim, and possibly even hike if he didn't try and carry too much weight. But any kind of sudden impact bearing the weight of his body could easily cause another more serious break.\n\n\"Do you have any questions for the board?\" the senior doctor asked.\n\n\"No, sir.\"\n\n\"Then we are hereby adjourned.\"\n\nAnd with that, Dan knew for certain that his career was over. It would take some time for the discharge to be approved, and in the meantime, he'd continue working in the S-3, or operations office, where he assigned quotas to various units within ANGLICO to go to the rifle and pistol ranges, annual swim qual, the PFT or physical fitness test, and other such training events.\n\nFour years at the Naval Academy and three years on active duty were coming to an end, and Dan would now need to find work in the civilian community. That was a given, and so was the fact that he was even more in love with the beautiful, older woman he'd met at the base pharmacy. Because of that, he'd been putting aside as much money as he could for a special occasion.\n\nThat occasion came that weekend when Dan took Charlotte and Wyatt out to dinner at the nicest place they ever been. Charlotte wouldn't have had any idea this was any different than any other night if Wyatt hadn't smiled at her and then at Dan one too many times.\n\n\"What's going on here?\" she finally asked.\n\n\"What do you mean?\" Dan replied as though nothing was.\n\n\"You can keep a secret. Someone else can't.\"\n\nShe looked at her son who couldn't stop smiling.\n\n\"Is anyone going to tell me?\" Charlotte asked as she looked at Wyatt then Dan.\n\n\"Maybe,\" Dan replied with a smile of his own.\n\n\"After dessert, right Dan?\" Wyatt said as he looked at Dan, that smile still on his face.\n\n\"Okay. Fine. Keep me in the dark already,\" Charlotte said as her heart began to race as she realized what was happening.\n\nToo anxious to eat dessert herself, Charlotte quietly waited for the men she loved to finish.\n\n\"Well. I believe it's time,\" Dan said rather ceremoniously after the server removed their plates.\n\n\"Now?\" Wyatt asked, as his mom nervously looked at them again.\n\n\"Yes. Now,\" Dan said as he got up and inched his way toward Charlotte.\n\nWyatt did, too, and once Dan chose his spot, Wyatt stood next to him.\n\n\"What...what's going on?\" Charlotte asked, barely able to speak.\n\nDan held out his hand, and when he did, Wyatt slapped a fuzzy, blue box in it the way a nurse would hand a scalpel to a surgeon.\n\nCharlotte's hands were already covering her mouth, and everyone in the restaurant was now watching as Dan got down on one knee, the leg with the cast out in front.\n\n\"Charlotte, I had no idea that the day I broke my ankle\u2014the first time\u2014would be the beginning of the end of my career. But more importantly, I had no idea it would be the beginning of the best thing that ever happened to me.\"\n\nDan pulled Wyatt closer then opened the box.\n\n\"Charlotte Clark. I love you\u2014and this guy right here\u2014more than anything on earth. So will you...\"\n\n\"YES!!\" she said so loudly that everyone laughed as they began to applaud.\n\nWyatt helped Dan slide the beautiful diamond ring on his mom's left hand then let her hug and kiss her new fianc\u00e9 before getting a hug and a kiss of his own. Dan then turned to Wyatt and said, \"I love you, too, buddy.\"\n\n\"I love you, too, Dan!\" the now 10-year old boy said as his dad-to-be hugged him while his mom joined in making the circle of love complete.\n\nThe following weekend, Charlotte's parents invited them over for a celebratory dinner. Her father, Duane Clark, had gotten close with this young man his daughter loved, and he'd become a sort of son the man had never had.\n\nAfter they finished eating, Duane asked his daughter if he could have a few minutes alone with her new fianc\u00e9, so she and her mom went to the living room so the guys could talk.\n\n\"You know what you're gonna do yet when you get out of the Corps?\" Duane asked.\n\n\"No. Not yet. I'm thinking about engineering and hoping that not working in the field for three years won't hurt me too much.\"\n\n\"That's a noble pursuit,\" the man said. \n\nHe paused then said, \"How would you feel about staying here?\"\n\n\"If I could find a decent job, I'd consider that.\"\n\n\"How about helping Charlie run the company?\" he said, using his favorite nickname for his daughter.\n\n\"Running it?\" Dan asked.\n\n\"I just turned 71, and I'm ready for a little R&R. I've always wanted Charlotte to take over someday, but I never thought she'd come home. She did, but then she met you, and I just assumed you'd get orders and she'd be gone again.\"\n\nDan smiled and said, \"Yeah. That's not gonna happen.\"\n\n\"I'm really sorry about your leg and all, but well, you're like family to me, Dan. Hell, you are family. I was planning on asking Charlotte to take over in a few months, but I wanted to see how you felt first.\"\n\n\"Wow. I don't know the first thing about running a business. Especially not this one.\"\n\nThe older man laughed then said, \"That's why I'm hanging on for a few more months. I'll be there to teach you both. Charlotte's got quite a few things down pat already, and as smart as you are, you'll pick things up in no time. So?\"\n\n\"Let me talk to Charlotte, and I'll let you know.\"\n\n\"Charlie? Come here, honey!\" her dad hollered.\n\nDan tried not to laugh at the amount of time he had to mull things over and 'talk to Charlotte' before her dad told her what he'd just proposed.\n\n\"Business is booming, and even with me taking a healthy draw for my retirement, you two will be sittin' pretty,\" Duane assured them.\n\n\"What do you think, honey?\" Charlotte asked.\n\n\"It's the best job offer I've ever had,\" he told her before saying, \"it's also the only job offer I've ever had, but yes. I'd love to.\"\n\n\"Dad? You've got yourself a deal!\" his daughter said.\n\n\"Then let's celebrate!\" her father said. \"Beer's on me!\"\n\nCharlotte laughed knowing beer was her father's version of champagne, and after the four of them toasted to their new job and new life together, they took a first sip then settled in to talk trucking. Or...truckin' as Duane called it.\n\nBy the time Duane was ready to retire, he felt extremely confident that the new owners could handle things. Besides, he assured them, he'd only ever be a phone call away if something unusual came up.\n\nKnowing roughly when this would take place, Dan and Charlotte had planned their wedding for the same period of time, and as it worked out, they would have just enough time for a short honeymoon before taking over.\n\nDan's parents and several of his buddies from the Academy flew into town, and two others were stationed at Lejeune who were all too happy to join the celebration.\n\nAlthough no longer on active duty, Dan Knight wore his dress-blue uniform the day he married his beautiful bride, who looked more amazing than he'd ever seen. Wyatt was wearing a little tux and looked so handsome it nearly made his mother cry when she saw him.\n\n\"Thanks, Mom, but you're the only who looks amazing,\" he told his mother in white. \"No wonder Dan loves you so much!\"\n\n\"I'm a very lucky girl,\" his mom said. \"I have the two most handsome, most wonderful men on earth to love me.\"\n\n\"And we always will!\" Wyatt told her as he gave his mom a hug.\n\nCharlotte's parents kept Wyatt for a four-day weekend so the newly-married couple could have that brief honeymoon, and as they arrived at the little cottage her parents owned, they both told said yet again how much they loved each other.\n\n\"And to think this all started because because I couldn't figure out how to use the card reader at the base pharmacy,\" the blushing bride in white said as her handsome husband held her in his arms.\n\n\"Amen to that,\" Dan told her as he looked at her and told her how beautiful she was.\n\n\"Beautiful enough to make love with?\" she asked as though that was a serious question.\n\n\"Beautiful enough even to maybe add to our ready-made family,\" her husband replied.\n\n\"Are you...are you serious?\" she asked, her eyes open wide in surprise.\n\n\"I love Wyatt like my own son, and if we don't ever have another child, I'll be more than content for the rest of my life.\"\n\n\"But?\" \n\n\"But were to have a baby, I don't think I'd mind at all,\" her husband replied with a twinkle in his eye.\n\n\"Dan Knight? Do you know how happy I am right now?\"\n\nDan smiled at her then said, \"Yeah. I kinda do.\"\n\n\"Then help me get this dress off so we can get to work.\"\n\n\"Yes, ma'am!\" he told her as he found the zipper in back and gave it a tug.\n\nIt was two years later, but Dan and Charlotte Knight did have a baby, a little girl they named Mia Marie Knight. \n\nHer big brother grew out of his asthma by the time high school started, and four years later, Wyatt Clark Knight graduated having lettered in two sports with a 3.98 GPA, good enough to secure admission to the United States Naval Academy where the man he called 'Dad' had once gone not that many years before.\n\nThe first time Ensign Wyatt Knight sat at a base pharmacy, he told an interesting story to the woman sitting next to him.\n\nBy the time he finished, the woman was drying her eyes and said, \"That was the most romantic thing I've ever heard.\""
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older woman",
        "younger man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/base-pharmacy"
}