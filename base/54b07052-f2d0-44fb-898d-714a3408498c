{
    "title": "Dream Drive: Yuri Ch. 01",
    "pages": [
        "I got into a bit of a creative slump in December. I felt like nothing I wrote was any good. To get out of the slump, I read my favorite books and tried to imagine additional stories set in their worlds. It came to naught, until I re-read Over_Red's story \"Dream Drive\", which he published on this very site. I managed to conjure up a character and sent him on an adventure in the world of Dream Drive.\n\nOver_Red gave me permission to write this story and to publish it here, in the Sci-Fi & Fantasy category. Everything I've written below is to be considered fanon and not official Dream Drive canon. I hope you'll enjoy this little piece of fan-fiction. It's far more story than sex, but I've written an outline for part two, which will have threesomes and stuff. However, I'm swamped with time-consuming obligations and I don't know when I'll be able to finish it.\n\nDISCLAIMER: This story contains a non-Occidental protagonist and a lot of violence. If you're not up for either, go read something else.\n\n********\n\nWarrant Officer Yuri Yanuk stood in the hallway before the closed doors of the Intelligence Service Cipher School's auditorium. Within, the voices of dozens of flag officers were raised in heated debate. He knew it was a debate about his work, but he didn't know exactly what was being debated. No matter how hard he strained his ears, he couldn't quite make out their words. Not with the droning of hundreds of disbelieving officers coming from the opposite end of the short hall.\n\nYuri swayed on his feet. He had spent an entire day and night working. His body wasn't tired, but his mind was exhausted. He could hardly string two thoughts together. He needed to sleep. The endless chatter filling his ears seemed to be inviting him to shut it all out. He slowly leaned against the wall and closed his eyes. The raised voices coming from inside the auditorium tried to rouse his attention, but he had none to spare. His head nodded.\n\n\"Stand at attention!\"\n\nYuri snapped to attention and turned on his heel to see Lieutenant Colonel Tariq Ali standing before him. He saluted. The Colonel glanced at him in disdain and refused to return the salute. In the four years Yuri had been at the Cipher School, Ali had returned his salute only a few times, leaving him to stand with his hand at his brow until either Ali left his sight, or a superior officer came along.\n\nYuri couldn't help but grin. Things were going to change for the better around here. Particularly for him.\n\nAli stared at the auditorium doors, his unibrow drawn down into a scowl. \"Half the flag officers of the Caliphate military seriously debating the fears of a whining baby.\" He shook his head. \n\n\"Sir, my cryptanalysis-\"\n\n\"Silence!\"\n\n\"Yes, Lieutenant...Colonel.\" The brief pause between the two words of Ali's rank was all Yuri could do to fight back against the man's molestation and not get court-martialled for it. Usually, he only used it when Ali abused military statutes to leave him locked into a salute for minutes on end, but he was tired and didn't feel like waiting. The implication of instantaneous demotion by three ranks never failed to anger Ali into raising his voice and drawing the attention of other officers.\n\nExcept this time. Ali wasn't even looking at him.\n\n\"You're predicting the first naval invasion in more than thirteen years of war, boy.\"\n\n\"The intercepts-\"\n\n\"Silence!\"\n\n\"Yes, Lieutenant...Colonel.\"\n\nAli still refused to rant and rave at Yuri, which confused Yuri until the muted voices reminded him that half the Caliphate's military brass was ten feet away, behind a wooden paneled door. Of course Ali wouldn't do anything rash in this situation. I really need some sleep, Yuri thought.\n\n\"You're a bare-faced boy, Yanuk, not a man that should be taken seriously. Why the General ever brought you in, I'll never understand.\"\n\nYuri almost rolled his eyes in annoyance. \"The messages clearly-\"\n\n\"Silence!\"\n\n\"Yes, Lieutenant...Colonel.\"\n\n\"And you dreamed up the key to decrypting all that traffic.\"\n\n\"The Dream Drive-\"\n\n\"Silence!\"\n\n\"Yes, Lieutenant...Colonel.\"\n\nAli stood silently staring at the auditorium doors. Yuri kept his salute the whole time. He was starting to wonder if he could now take a swing at the Colonel's head and get away with it.\n\nHe decided not to try his luck. He was trained in hand-to-hand combat, but Ali used to be Special Forces and would gladly break him in half. Then Ali'd insist Yuri be brought before a court-martial and dishonorably discharged. The brass might listen to the man and that would leave Yuri's future in jeopardy. And his family was counting on him.\n\nYuri nodded to himself. He just had to muddle through this latest bout of petty abuse of power and everything would be okay. He wished his mind wasn't lagging so much. His eyes seemed unwilling to remain open any longer. \n\nSuddenly, Ali's face was right in front of his. \"You know they don't believe you, don't you?\"\n\n\"I'm not-\"\n\n\"Silence!\"\n\n\"Yes, Lieutenant...Colonel.\"\n\n\"You just have to ask yourself why that's so, Yanuk.\" Ali cocked his head. His humungous lip ferret twitched as his mouth pouted. \"I mean, it's a preposterous idea, all on its own, but is there something else?\" He narrowed his eyes. \"Is it because you were a double agent, for a time?\"\n\n\"My contact with-\"\n\n\"Silence!\"\n\n\"Yes, Lieutenant...Colonel.\"\n\n\"No, it isn't that, either. We both know what's tripping them up in there. Don't we? It's because you're a Zibar. A descendant of the infidel whores our ancestors snatched off passing ships and enslaved.\"\n\n\"The Zibar have lived-\"\n\n\"Silence!\"\n\n\"Yes, Lieutenant...Colonel.\"\n\n\"I'll not be hearing your filthy Zibar propaganda. Not anymore.\" His lips curled up into a smirk. \"No, definitely not. It's time, Yanuk.\"\n\nYuri turned his head and looked at the auditorium doors. The voices within were quiet, but only for a few seconds. The debate was still going on.\n\n\"A new day is upon us. The beginning of the Caliphate's rise to glory.\" \n\nYuri's eyebrow rose at that last phrase. If Ali was thinking that the Caliphate could hold its own against the combined military might of the Greater Atlantic Union, then he had clearly taken leave of his senses. The ant that gets stomped by the boot wins no glory.\n\nAli turned around and walked away. \n\nYuri watched him go. As soon as Ali's back was swallowed up by the press of uniforms at the end of the hallway, Yuri lowered his arm. Instead of relieved, he felt annoyed. In the four years of working at the Cipher School, he had come to know that irritating smirk quite well. Ali always wore it when he had a serious ace up his sleeve, like when he caught a mistake of Yuri's that he could lord over him in front of the General. \n\nYuri used to be a daydreamer, too caught up in surges of ideas to see any one of them through to the end. His mind skipped eagerly from topic to topic and tended to get lost in tangents. Only codes and logical puzzles could engage his intellect for more that a few seconds at a time. He got really good at solving them.\n\nWhen he had taken his aptitude tests at the start of his secondary education, the Caliphate military expressed an interest in his abilities. As soon as he had finished high school, he had seized his chance to join the Army. He had originally been given special dispensation to skip basic training and had been assigned to the Intelligence Service's Cipher School. \n\nWhile the School did teach secure communications and intelligence work to military officers, its actual purpose was to decrypt all foreign military transmissions. Ali had been at the School for a decade already and he began to ride Yuri's ass right off the bat, catching every single one of his mistakes and using them against him.\n\nAlways with that stinking smirk on his face.\n\nAli had been the one that had convinced the General to forgo the special dispensation and ship Yuri off to basic training. He had said that Yuri could only benefit from rigorous discipline and a demanding schedule of physical training. The six months Yuri had spent at the mercy of a bunch of Army sergeants had left him with a chiseled physique. That physique was maintained by the habit of strenuous daily exercise that they had drilled into him.\n\nThe sergeants also forced him to develop the ability to focus on a single task, like rope climbing, to the exclusion of all other thoughts, except for the fear that his arms would come off at the shoulders if he was forced to do any more push-ups.\n\nEven after Yuri completed basic training and was reinstituted at the Cipher School, the smirk would still make an appearance, from time to time. It forced Yuri to go over his work from other angles, check and double-check his suppositions. It made him develop a habit of seeing if the same data he was basing his premises on could be used to support the exact opposite hypothesis. Much to his surprise, it sometimes could, and he'd have to work harder.\n\nIn a way, Yuri was glad for Ali and his smirk. The smirk, as much as he hated it, had a big hand in making him the best cryptanalyst he could possibly be.\n\nA dopey grin spread across Yuri's lips. And I'm certainly the best.\n\nHe had spent the past few months working at gaining valuable intelligence data from the children of key officers in the Greater Atlantic Union's military. Ali had wasted no opportunity to deride his work, as it mostly consisted of playing video games with North American teenagers in the Hub, the virtual space of the Dream Drive. Fortunately, the General both understood Yuri's premise and trusted him enough to allow him free reign and it had paid off just last night.\n\nUsing cutting edge technology, Yuri had won some online gaming competitions and enough prestige to get the right people to want to hang out with him in virtual space. The reclusive son of a GAU Navy officer had joined him in a private chat room and gushed over his performance in a prestigious gaming tournament. \n\nYuri had carefully guided the conversation from the war games he had just played to the actual war and then shared with the boy his desire to join the real thing. The boy jumped on the bandwagon and the topic of conversation became his father, an operations officer aboard a GAU aircraft carrier.\n\nYuri had stroked the boy's ego and plied him with ideas of being useful to the GAU's cause and living up to his father's legacy. When the boy's \u00e9lan faded, Yuri struck hard. He had already known the boy's father had trouble connecting with him. He guessed that their only common ground was the father's cryptography work. \n\nYuri painted a picture for the boy. A way to use his computer skills in the military. To be a communications officer for the GAU and ensure their messages never got read by the enemy. The boy laughed before launching into a lengthy lecture on everything he had ever heard his father say about his duties.\n\nLate last evening, Yuri Yanuk had been told the principles which governed the way the GAU Navy chaffed its transmissions while at sea. He had also been told the actual communications protocols and callsigns for a carrier's air group. He had quickly ushered the boy out of the chatroom and logged off to get to work. He had put all the School's supercomputers to the task and begun winnowing the chaff from the recent GAU transmissions the Intelligence Service had picked up. Using the callsigns as cribs and knowing where in the messages they should be, he was able to guess the encryption methods the GAU was using.\n\nJust like that, the number of possible permutations the supercomputers had to run through to decrypt the messages went from infinite to a mere few dozen quadrillion.\n\nYuri had worked hard through the night, making educated guesses and cutting off futile avenues of calculations, until he had managed to extract a plaintext translation from a transmission. He wanted to jump for joy, but the thought of Ali's smirk had kept him focused. He still hadn't known if he had been right. He had triple-checked his assumptions and let the supercomputers work at the progression of encryption for another hour. He got his confirmation when more messages were decrypted. The code was cracked. He had cracked it.\n\nAs the supercomputers solved more and more permutations, the process of decryption gained speed at an almost exponential rate. Pretty soon, he had enough decrypted material to be able to predict the correct encryption method, based on nothing more than the exact time the message had been sent. No cribs were required any longer. All the GAU Navy's secrets were laid bare before his eyes.\n\nBy the time dawn came along, the supercomputers were decrypting the messages all but instantaneously as they were being fed into them. When the rest of the staff started coming in, they were stunned by his accomplishment. General Houdani, the commanding officer of the Intelligence Service Cipher School, laughed at seeing the plaintexts and hugged Yuri, calling him \"the brightest boy under the heavens\".\n\nEveryone, even Ali, got to work at Yuri's direction and they resolved the backlog of stored GAU intercepts before lunch.\n\nSome of them wished they hadn't. The rest barely contained their panic.\n\nPut together, the recent transmissions plainly told of a huge invasion fleet anchored off Sardinia as it was being loaded with men, munitions and machines it would use to invade the Caliphate. It was going to happen any day now.\n\nDespite the grim news, Yuri couldn't help but feel proud. This was the greatest code-breaking accomplishment of the entire war. If either the GAU, or the Bloc, had ever managed to break the other's codes like this, they had kept it to themselves.\n\nHe knew he wasn't going to get a medal anytime soon. As soon as the General had realized what was being said in the messages, he had put the Cipher School on a strict lockdown, disabling all telecommunications. He had summoned couriers and dispatched them to deliver handwritten notes from him to all the senior military officials in the capital. Now that the Caliphate knew the GAU's plans, they needed to keep the GAU from knowing that they knew, at least until they decided that they wanted the GAU to know that they knew.\n\nA steady stream of senior officers started pouring into the School shortly thereafter. The NCOs and civilian secretaries scrambled to accommodate them all and find each one a seat and table where they could read a secure copy of the decrypted transmissions. Their disbelieving murmurs made a continuous droning sound which threatened to lull Yuri into sleep, once again.\n\nThe memory of Ali's smirk roused him back into action. He had to figure out the reason behind it. He knew that his analysis was immaculate, the sheer volume of decrypted messages was testament enough to the quality of his work.\n\nYuri resolved to re-examine the man's words, looking for a clue as to what the ace up his sleeve was. What was it that he said? A bare-faced boy? He knew that wasn't it. In Arab culture, smarts were only possessed by those who also possessed moustaches, the thicker a man's facial hair, the wiser he was. Yuri couldn't grow a moustache, as everyone could plainly see.\n\nNo, it was something else...The first naval invasion in thirteen years.\n\nAs ridiculous as that sounded, it was true. World War Three had been raging for fourteen years and it had been more than thirteen years since either side had tried a true naval invasion. He thought back to how the war had even started and the naval invasions he had learned about, both in school and in basic training.\n\nHe snorted softly. The things that were written in his high school history book were quite different from the things the drill sergeants had told him. The history books always painted war in terms of just causes and grand strategies. The sergeants told the stories in different terms; logistics and supply lines. The history books spoke of morale and convictions winning battles. The sergeants spoke of how ammo trumped courage every time and how air superiority was never optional. \n\nAfter watching the war unfold for years, Yuri had to concede that the sergeants were right and the history books and academia were largely wrong. The people who burned for a just cause always lost to the people who shelled them from beyond the horizon with pinpoint precision by using a tiny robot disguised as a bee for a forward artillery observer. Yuri could predict how every military campaign would end, even before it began, based on nothing more than a good look at the supply lines it relied on. Even the most advanced technology was rendered useless if it ran out of critical supplies.\n\nHe focused his tired mind anew and thought back to fourteen years ago, when the war had started. He had been just a boy kicking a ball. If someone had tried to explain the war to him back then, they would have told him about the American city of Phoenix being nuked by terrorists. Now, he knew it was the result of economic collapse in both the global powerhouses and their antiquated leaderships' fear-driven efforts to force their markets to recovery.\n\nThe Greater Atlantic Union on one side, and the Sino-Russian Bloc on the other, decided to fight a small skirmish by proxy over natural resources in eastern Africa. Things slowly escalated from there into World War Three. While the GAU and the Bloc only added about a dozen nations to their official ranks during the war, the entire world was brought into the conflict. Whether they had to bow to economic pressures, or a direct threat of invasion, every nation had to declare for one side, or the other. \n\nThe few countries that managed to remain officially neutral only did so with tacit permission from both the warring sides. They were used as third party go-betweens that allowed the rich and powerful to circumvent the strict embargo laws and do business with their enemy counterparts.\n\nAs the crisis spread from Africa to the Middle East, the GAU intervened into the Israel-Iran conflict and wound up occupying most of Iran. High on the success, they got the bright idea of invading Russia via the Caucasus countries. The plan would bypass the bulk of Russia's armed forces.\n\nWhen the war began, the GAU and Bloc massed their forces at their shared borders. The threat of Mutually Assured Destruction had kept their armies idling in place, even while their comrades in arms had been slaughtering each other in faraway deserts.\n\nSince armies hate sitting idle, they busied themselves with making defensive preparations. This suited the politicians well. Despite threatening to do it, neither side actually wanted to be the one to let loose with the nukes and spark the end of the world. Both sides had been increasing their nuclear arsenals to ludicrous proportions. All thoughts of a crippling first strike were rendered futile. The sheer number of nukes either side had, as well as the various methods they developed for deploying them, meant that any nuclear strike was going to result in the certain destruction of the Earth. \n\nDespite this sobering fact, the world leaders still pressed on with their war, using propaganda to foment pro-war sentiments amongst their citizens. More accurately, they used propaganda to turn their citizens against anyone who dared question, in any way, what the government was doing. Such critical thinkers were painted as traitors and backstabbers. If they got lynched by the angry relatives of dead soldiers, law enforcement routinely looked away and buried the evidence afterwards.\n\nIn such an atmosphere, the governments couldn't afford to appear weak while facing the enemy, so they got on board with the fortification program. The GAU-Bloc borders in Scandinavia and Eastern Europe were quickly stitched up tight with multiple layers of defenses.\n\nAn Exclusion Zone was established. It ran for thousands of miles, from the Arctic to the Black Sea, and was tens of miles wide. It was riddled with land mines and automated turrets and tank obstacles. Every square inch of it was pre-sighted by the countless artillery pieces that were installed there. ",
        "Both sides seemed to cotton on pretty quickly to the economic and propaganda values of the Exclusion Zone. It was the perfect excuse to keep their military-industrial complexes revved up and a great justification for increasing the defense budget. Wars in faraway places just didn't ring as urgent in the public's mind as an enemy right at the border.\n\n\"They have robotic insects that are smaller and faster and more sophisticated than ours,\" one side would say and get a budget bump to make even smaller and faster flying robot scouts.\n\n\"They have bigger guns than us, with greater range,\" the other side would say and be given the funds needed to create giant cannons that had to be mounted on railway lines to absorb their recoil. Or they constructed long cannon barrels on hillsides to create stationary supercannons that could fire clear across the Exclusion Zone. Those prompted the evacuation of the civilian populace so the Zone could be widened. \n\n\"Enough bunkers to house the entire population of the Earth.\" \"Enough barbed wire to tether the Moon to the Earth.\" \"So many surface-to-air missiles we can blot out the sun if we launch them all at once.\" \"If all the mines that we've buried in the Zone were dug up and distributed to the population of Earth, everyone would get their very own mine with lots left over.\" \"We will make so many artillery shells available to our defenses in the Zone that we'll have more explosive power focused on our border than what is contained in all the Earth's nukes put together.\"\n\nAt first, those were exaggerated threats made by generals and politicians, aimed at scaring the other side and instilling confidence in their own people, but they slowly became literal as the Exclusion Zone grew. Neither side had any illusions about being able to punch through the Zone. At least not without losing a million lives and getting trillions of dollars worth of sophisticated military equipment blown to smithereens.\n\nAnd in the end, the grand prize for their sacrifice would likely be a nuclear strike to the face. \n\nIn view of all that, the GAU High Command planned their Caucasus campaign in utter secrecy. The Caucasus was filled with tiny, Bloc-friendly nations. In exchange for Mother Russia not occupying them, they had to keep the Caucasus locked up against any GAU intrusion as well as economically support her war efforts. If the Russian Federation got even one whiff of the plans, it would redeploy its forces and stop the campaign before it could begin. It was a risky business, right from the start, but GAU High Command thought the risks were worth the reward. If they could knock Russia out of the war, the rest of the Bloc would collapse.\n\nGAU Intelligence selected nationalistic leaders it could back and then began a campaign of destabilizing the democratically elected administrations of the Caucasus countries. They used terror tactics and false flag operations, playing heavily against Russia's long-standing territorial pretensions towards those countries and their sovereignties. The local media, which GAU Intelligence had quietly purchased through third parties, blew the tiny incidents way out of proportion and created a state of fear among the people. The few isolated protests were again blown out of proportion and states of emergency got declared. \n\nIn the resulting chaos, GAU Intelligence managed to overthrow the governments and install the new, pro-GAU leaderships. The new leaders entered into an alliance with the GAU and allowed their troops to march into Russia itself.\n\nThe GAU brass was practically celebrating victory, although most must have been scratching their heads as to why Russia had not let loose with the nukes. No one had any illusions of restraint being the operative word in the Kremlin. The Russian leaders were quite loud as they talked about how America had bombed Hiroshima and Nagasaki and that bombing America would be just desserts. Or how Phoenix had already been nuked and that a few more nukes wouldn't matter much. \n\nMost could see that the Russians were suspiciously too loud, but the GAU had been converted into a collection of police states in the wake of the nuclear attack that had wiped out Phoenix. No one dared dissent publicly. The GAU was thrown for a loop by what came next.\n\nThe very same leaders that GAU Intelligence had hand-picked and elevated to supreme rule of those small nations on platforms of extreme nationalism, cut a secret deal with the Russians. At the same time as the long-planned Russian counteroffensive was launched, they turned on their GAU allies and became Russian vassals. In exchange for switching sides, they got named presidents for life of their little countries, now forever a part of the Bloc.\n\nThe GAU was so blindsided by this move that the results could only be described as a one-sided slaughter. Their forces were isolated by their former allies and defeated in detail by the surging Russian troops. The GAU's military presence was driven out of the Caucasus and Iran joined the Bloc, further securing Russia's south flank. \n\nWith their own territories firmly walled off from the war, the GAU and the Bloc returned to fighting their war by proxy, on foreign territory. Their navies guarded their coastlines like hawks. The threat of nuclear war seemed to fade, even though the Middle East and half of Africa were becoming hell on Earth. \n\nThen the Chinese upset the balance of power by conquering Korea with a naval invasion that completely bypassed the Exclusion Zone which protected it.\n\nSouth Korea had been a GAU ally with a terrible problem. Its capital, Seoul, was in range of North Korean artillery parked at the edge of the Exclusion Zone which separated the two countries. Everyone was so focused on dealing with this issue that they had failed to adequately prepare for the naval invasion which happened. They had merely sunk the North Korean Navy and called it a day.\n\nBy the time the GAU realized the scale of the assault, it was too late to stop it. Their only recourse seemed to be the nuclear option, but the Chinese Army had already intermeshed with the civilian populace. \n\nMillions of Koreans fled to Seoul and were sheltered in the city's underground system, while their army was slaughtering the attackers on the streets above them. The city had been planned and zoned by the South Korean military with the exact purpose of making it as hard to conquer as possible. The Chinese Navy sailed up the river to try and split the city into two, but the Koreans sank their ships and later used them as improvised bridges.\n\nThe North Korean artillery was still stuck beyond the Exclusion Zone, which was being cleared of obstacles at a rate of fifty feet and hundreds of dead engineers per day, but that didn't stop them from raining thousands of shells on Seoul almost every hour of the day. \n\nThe civilians were safe underground and the soldiers joined them whenever the shelling started. Their armor and combat robots would take cover on the southern slopes of Seoul's mountains. They all emerged unscathed as soon as the shelling stopped. All the rain of shells accomplished was to force the Chinese to retreat every time it started, giving the defenders much-needed breaks, as well as reduce the city's buildings into rubble. \n\nIronically, this also helped the defenders. \n\nThe South Korean soldiers used the rubble as cover against the Chinese attackers. It blocked the streets and prevented the Chinese from bringing to bear their numerical and technological advantages. Instead of fighting across a city that was divided into buildings which could be isolated and defeated, one by one, the Chinese soldiers found themselves wading daily across heaps of cover, not knowing which pile hid a booby trap, or an angry Korean with a loaded gun.\n\nFor months, the South Korean government launched appeals for help from their GAU allies, but the situation was clear. A GAU counterinvasion would cost millions of lives and dollars. Lives and dollars they had not been ready to pay, particularly not so soon after the Caucasus campaign. The GAU wanted the Chinese to focus on Seoul, as it kept them from reinforcing their armies in the African theater of operations. \n\nBesides, it looked like the Koreans could simply to run out of Chinese to kill at any given moment. \n\nA particularly fat Air Force Major waddled through Yuri's field of view, his uniform's buttons threatening to quit at any time. Yuri sighed heavily. He couldn't help seeing, in his mind's eye, the Koreans in those vids again.\n\nAfter the Chinese invaded North Korea and stopped them from interfering with the Battle of Seoul, months of globally televised, bitter, urban warfare followed. The battle only ended when starvation forced the South Koreans to surrender. While the Chinese were pulling the Koreans out of the Underground, the GAU had been shocked at seeing the entire civilian populace reduced to skin and bones. \n\nThe soldiers on the streets had always looked adequately fed in the vids, making the Korean frantic arguments of imminent death by starvation look like they were crying wolf. It turned out that the civilians had been subsisting on minimal rations to allow the soldiers to last long enough for help to arrive. \n\nIn the wake of the Caucasus Campaign disaster and the images of Korean living skeletons being broadcast alongside their desperate appeals for help, the GAU replaced its leadership, en masse. The new people firmly decided to use nukes to destroy a Chinese invasion fleet aimed at Japan, their only remaining ally in the west Pacific. Nuclear Armageddon seemed to be only minutes away.\n\nThe Chinese fleet again surprised everyone by slipping away from GAU oversight and rushing through the straights of Malaya. They sailed to Madagascar and landed an invasion force. The invasion went well, for a week, before a GAU fleet came in from the Atlantic, destroyed the Bloc fleet, and landed nine whole divisions of GAU Marines. \n\nThe fleet established a blockade of the island. The Marines on the ground fought a cautious, static battle of attrition with the aim of depleting the Bloc forces of their ammunition and supplies. Once that was accomplished, the GAU got a desperately needed morale boost, as well as a huge propaganda victory and nearly a quarter of a million prisoners of war. The Bloc lost all their craft and personnel that were specialized for large scale naval invasions. They never again attempted to project their power overseas like that, not even after they replaced their losses.\n\nA Russian-led Bloc fleet had been sent to relieve the siege of Madagascar, but had been delayed fighting for the Suez Canal. They only captured it after the Battle of Madagascar was over. Still, Bloc control of the Suez threatened to have them achieve a naval linkup between the eastern Mediterranean and the Indian Ocean and the GAU moved to prevent that.\n\nTheir fleet invaded the Horn of Africa to secure ports that would support a naval blockade of the Red Sea. It was the second GAU naval invasion of the war and it went off without a hitch. The GAU was making a comeback.\n\nThe Bloc responded with a feat of logistics. They moved the bulk of their African Expeditionary Force across a thousand miles of jungle using waterways and barely serviceable railways. Thousands of leaky boats and hundreds of rusty locomotives moved almost a million men, even while they were bailing water and fixing rails on the fly. \n\nThe GAU's scout drones and satellites couldn't see through the thick jungle canopy and the Bloc's Great Green Express, as their propaganda later named it, caught them flat-footed. The GAU Marines were spread out, policing a large area in order to secure the logistical base their fleet needed. The Bloc forces swarmed them and sent them into a rapid retreat towards the sea. The Marines only stopped once they got inside the range of their offshore armada's weapons.\n\nThe GAU command had not planned for a retreat and there was a lot of dissent within the new leadership regarding how to proceed. Their amphibious and landing craft had been sent back towards ports on the Atlantic coast to be loaded for a complementary invasion of the Arabian peninsula and many argued against recalling them. \n\nHundreds of embedded reporters had been landed on the beaches with the Marines, all the better to document another GAU victory. The Bloc had propaganda battalions in the hinterland and many independent journalists from all around the world had already come to the region to report on the Olympic Games that had been supposed to be held there soon. They had stayed to report on the war, instead. The entire world watched the \"Horn of Africa Crisis\" unfold live on their vid feeds. \n\nFor two days, the tense stand off continued. GAU Marines holding the beaches and the Bloc staying put, just out of range of the Navy's guns and missile batteries. Then the Bloc's heavy armaments caught up with their infantry and the suddenly outgunned GAU fleet had to pull away. For a week, the world watched GAU Marines getting blown to bits as they scrambled onto anything that could float in an effort to escape the beaches. By the time the landing craft came back, there was hardly anyone left to be rescued. \n\nThe GAU's humiliation burned so hot that they had never even hinted at the possibility of another naval invasion again. \n\nThe Crisis was also the last time the world got to see unfiltered information on their vid screens. Ever since, all independent journalists attempting to enter war zones were detained and turned back. Ostensibly, this was done for their own safety. The only information about the war that regular people could receive was severely redacted by their governments. It was barely more than pure propaganda.\n\nAfter the Horn of Africa crisis, the GAU's official line was that they switched from the idea of trying to find a way to break up and defeat the Bloc to a strategy of outlasting them. Strangely enough, the Bloc's propaganda also spouted phrases of outlasting the inherently corrupt GAU and emerging victorious one day.\n\nEvery now and then, an independent intellectual would say that both sides were deliberately perpetuating the global war for the sake of having an external threat that allowed them to cow their own populaces into obedience and maintain power. Such thinkers would rarely get to repeat their assertions. They would vanish from the public's eye in ways that undermined their credibility. Usually, they'd be arrested and charged with heinous crimes, like peddling child pornography. Sometimes, they'd slip in their bathrooms and break their necks. \n\nYuri agreed with those intellectuals and their assertions, suicidal as they were. He had seen both sides pass up huge strategic opportunities over the years. The biggest proof of the war being deliberately dragged out for as long as possible, was the lack of naval invasions. An enemy on distant shores is a truncheon that state propaganda can use to keep the masses in line. An enemy that invades your soil is a kick in the ass that makes people wake up and take stock of the situation. The governments on both sides seemed to fear that more than anything.\n\nThere were amphibious assaults happening worldwide to this day, but they were small affairs, mostly utilizing rivers and lakes and coastal waters. Just a few brigades landing behind enemy lines to make the defenders split their forces and wheel around to face the new threat. Then the ground offensive would punch through the weakened section of the battle lines and link up with the beachhead. Rinse and repeat as needed.\n\nBoth the Bloc and the GAU definitely had the ships, equipment and personnel needed to mount naval invasions. The GAU even kept its practice of maritime prepositioning of assets. If they had no intention of ever mounting a naval assault, then why would they hide ships laden with supplies in every ocean, but the Arctic? The thirteen year lack of actual naval invasions was not a valid reason to discount Yuri's findings. The invasion of the Caliphate could not upset the global balance in any discernible way.\n\nWhat was the next thing Ali said? Is it because you were a double agent, for a time?\n\nYuri frowned. That couldn't be it. He had reported the contact as soon as it had gone down and General Houdani had personally handled the operation. Everything had been done according to established protocol. Yuri had played along with the American's idiotic scheme and handed over everything the boys from Counterintelligence had cooked up.\n\nPrickling needles ran down Yuri's spine as he got a nasty thought. What if the invasion was in response to something I had handed over to the spy? Logically, the blame for it would lie with those that had conjured up those files and told him to hand them over, but he'd still feel responsible. \n\nHe sighed. The double agent thing just didn't feel like the smirk thing. General Houdani had praised his performance so much that Yuri was sure he'd get a promotion and a commendation, if only he wasn't on GAU Intelligence watchlists. They might think twice about the information he provided them if he got promoted soon after betraying his country.\n\nThe third thing Ali said sounded most like a winner. It's because you're Zibar. Yuri's mouth twisted. The historical record clearly showed that the Zibar people had lived in the mountains to the south of the capital ever since the Vandal invasion, but one wouldn't say they were natives of Africa just by looking at them. Like all Zibar, he had Caucasian features, straight hair and sparse facial hair, bordering on none. He kept his face neatly shaven and his hair closely cropped, so he looked like the tourists from Europe did, back in the days of the old kingdom, when they still vacationed in this part of the world. \n\nTwelve years ago, the Caliphate had emerged from the brutal civil war that had torn apart the old kingdom. It occupied the majority of the old kingdom's territory and declared itself the winner. It had won because it had appealed endlessly to the Arab Muslim majority and decried the neighboring, also predominantly Muslim and Arab, nations as takfir. The neighboring countries had each taken a bite out of the former kingdom's territory as it was falling apart, under the pretext of \"keeping the peace\". \n\nEver since the end of the civil war, the Caliph had cracked down on anything that would make the Caliphate appear weak, or ineffectual. What had started off as an appeal to strength and unity, soon devolved into hatred towards those that were different in any way. The religious minorities, the infidels, the Jews, the Hindus and all the Arabs who wouldn't convert from Christianity to Islam had been chased out of the country.\n\nAbout twelve percent of the Muslim Arab majority followed the minorities right out the door, stunning the Caliph and his government. They sealed up the borders as best they could, but even these days, people were trying to sneak across. The real trouble with crossing the border was when the other side caught you and deported you back into the vengeful hands of the Caliph's clique. After getting swarmed with over a million unwanted immigrants, all the neighboring countries passed strict laws that mandated swift deportation for all Caliphate citizens.\n\nWith no religious minorities left, the ethnic minorities were pushed into the spotlight. The Zibar were the most visible ones, so they presented a perfect target for the Caliph and his clique. A Zibar looked European and their language sounded vaguely European. To an Arab's ear, that is.\n\nA propaganda campaign was concocted. It told that the Zibar were descendants of the women the Barbary pirates of old had kidnapped off passing Christian ships. It was perpetuated so much that the Arab population began believing it. Of course, it had been the Arabs of old who had kept those women in harems and interbred with them, but that part of history was officially declared \"a pack of lies the colonial powers concocted to undermine the glorious work of God's chosen Caliph\".",
        "Yuri had been listening about how \"his kind\" was going to \"ruin the Caliphate\" and \"betray everyone\" for over a decade. It had gotten old as soon as it had started. \n\nA particularly loud exclamation of disbelief brought Yuri's attention back to the then and there of the Cipher School.\n\nAll the personnel in the Cipher School were Arab, apart from him. Most either liked Yuri, or they maintained a professional demeanor around him. Everyone respected his talents and work. Tariq Ali was the biggest exception to that unspoken rule. He adored riding Yuri's ass, his stubble-covered chin frequently on Yuri's shoulder as he watched over his work. \n\nAll because Yuri had been born into a different ethnic group.\n\nYuri dismissed that line of reasoning. He was as Zibar today as he had been yesterday. Ali's smirk was new. It had to be something else. It had to be about the intercepts, after all.\n\nHe frowned. They now knew the strength of every Marine division that was going to hit their beaches, down to the platoon level. They knew the name and type of every ship that would participate in the preparatory bombardments and which types of cruise missiles and EM warfare drones they'd use to cripple the Caliphate's communications in the interior. They had everything on the fleet, except for one thing.\n\nThere was no motive.\n\nThe decrypts plainly spoke of the target being the Caliphate coast. The sheer amount and nature of the transmissions heavily suggested the fleet had been hastily assembled in the last few weeks, but there was not one single peep as to why they were going to invade the Caliphate. \n\nCould that be it? Could Ali's smirk indicate that he had managed to unearth the reason? Yuri had only seen Ali achieve something noteworthy once, or twice before and he couldn't remember Ali smirking like that. The smirk was reserved for Yuri's fuck-ups, not Ali's accomplishments. No, Yuri decided. Ali didn't have the GAU's motive in hand. Not unless Yuri missed it, somehow.\n\nYuri softly snorted. If I couldn't see it, then Tariq Ali definitely couldn't, either.\n\nSuddenly, Yuri was snapped out of his thoughts by the auditorium doors opening. The brass started filing out of it. Yuri saluted. Half the officers ignored him, half gave him the stink eye. The Navy Chief of Staff, a Fleet Admiral, shot Yuri a cursory salute.\n\nI must look as tired as I feel, Yuri thought. He dropped his arm and looked behind the Fleet Admiral. All the other officers had one or two stars, while the Admiral had been a three-star officer, meaning that Yuri didn't have to salute anyone else. \n\nMajor General Moussa Houdani, commanding officer of the Cipher School, was bringing up the rear. He stopped short when he saw Yuri. His mouth opened, but no sound came out. His face flushed and Yuri thought the General looked uncomfortable.\n\n\"Do they believe them, Sir?\" Yuri asked.\n\n\"What?\"\n\n\"The intercepts I've deciphered, Sir? Do they believe them to be true plaintext?\"\n\n\"Oh. Yes, yes, yes they do.\" Yuri could have exploded with pride. \"It's, uh, it's plain to see the truth...sometimes.\"\n\nYuri bit the inside of his cheek to keep his mirth from showing. There was one thing missing from the intercepts, after all. \"Sir, do they know why we're going to get invaded?\"\n\n\"Well...\"\n\n\"Are they going to let the GAU know we know they're coming? That might make them cancel the invasion. Force them to negotiate some kind of treaty with us.\"\n\nThe General seemed to be struggling to say something. Yuri patiently waited for his words. \"Yuri, what are you still doing here?\"\n\nNow it was Yuri's turn to be confused. \"Well, you said I couldn't come in, Sir, so I...\"\n\n\"You should go home, get some rest.\"\n\n\"No, no, I'm fine, Sir. I want to stay here and work on-\"\n\n\"Yuri...\" \n\nFor a moment, Yuri thought he could see tears glistening in his eyes. Then the General blinked rapidly and Yuri told himself he was just seeing things due to not sleeping for almost thirty hours straight.\n\n\"Please, Sir, tell me it's not because of the files I had passed on to the American last year.\"\n\n\"The invasion? Oh, God have mercy, no! No, no, no, no, no.\" He put a tender hand on Yuri's shoulder. \"My dear, dear, sweet boy...that's...\" He shook his head. \"One has nothing to do with the other.\"\n\nYuri looked the General in the eyes. He felt uncomfortable with the emotion he could see in them.\n\n\"Yuri, go home. Be with your family.\"\n\n\"I don't think that's such a good idea, Sir. We're up on the GAU's primary naval communications and we need to stay on them. If my predictions-\"\n\n\"Yuri.\" The General gave his shoulder a soft squeeze before letting go. \"That was an order, not an idea. Don't worry about us. Thanks to your brilliant work, we have things well in hand.\"\n\nYuri's mouth fell open. The General turned and started walking towards the mess of officers debating the messages. Yuri moved after him. \"But, Sir, we need to keep abreast of any changes they make in their encryption protocols. I can rest on a cot in the gymnasium for a few hours and resume my duties at a hundred percent.\"\n\n\"Go home, Yuri. You're on leave for the next few days. Spend them with your family.\" \n\nColonel Ali emerged from the multitude of officers with several of them in tow. He shot Yuri another smirk. Yuri couldn't quite keep from glaring back. \n\n\"Peace be with you, Yanuk,\" the General sadly said over his shoulder.\n\nJust like that, the General was swallowed up by a sea of uniforms that were pleading for him to tell them it wasn't true. Ali remained behind. His smirk grew into a wide smile. It looked positively beaming. \"Should I call the MPs to remove you, Yanuk?\"\n\nYuri bit back a growl and turned to march down the side corridor that led to the mess hall and gymnasium. For a few minutes, earlier this morning, he had actually allowed himself to daydream of getting the respect that he was due. And when Ali had gotten to work at Yuri's instructions without protest, Yuri had even begun to hope things were going to change between the two of them. How silly that had been.\n\n\"Give my best to your family!\"\n\nYuri nearly tripped on the flat, marble floor at hearing those words come from Ali. Usually, the man had only the vilest things to say about all Zibar and relished in likening Yuri's family to pigs. Yuri turned on his heel, but Ali was already obscured by the press of uniforms. \n\nSome officers bumped against Yuri's shoulder as he stood in the middle of the corridor. He turned around again, fought back a wave of dizziness, and walked to the mess hall. \n\nSeveral Air Force officers were seated at one of the tables, leaning back as a serving woman in a burqa placed steaming cups of tea in front of them. As soon as she moved away, they leaned back in and resumed a heated debate about the merits and flaws of GAU's combat drones.\n\nYuri watched the serving woman move and decided she was Alyah. He caught up with her. \"Peace be with you, Alyah. Could you, please, tell Sasha that I'm here for my bag?\"\n\nAlyah nodded and disappeared behind the door that led into the kitchen. Yuri leaned on the wall and faced away from the officers. The hall was silent. He knew what that meant and he grimaced. He told himself not to look their way. He told himself to just hold on for a few moments longer and-\n\n\"What's a Zibar doing here at this time,\" one of the Air Force officers demanded. Yuri tried to ignore him. \"Hey! Warrant Officer! I'm talking to you!\"\n\nYuri huffed softly and turned to face them. He sketched a salute. \"Sir?\"\n\nThe officers looked amongst themselves and chuckled. \"Is that any way to salute? Who taught you to salute?\" The Major looked to be in a foul mood for some reason. Probably had something to do with reading all the intercepts that said he was going to lose to the GAU soon. \"Stand at attention, soldier!\"\n\nBefore Yuri could comply, Sasha's deep voice interjected, \"He's not a common soldier, Al-Warra. So why are you trying to treat him as one?\"\n\n\"This has nothing to do with you, Sasha,\" Major Al-Warra replied, not taking his eyes off Yuri.\n\n\"Yes, it does,\" Sasha said and came forward to put his arm around Yuri's shoulder. The chef was a round man, as wide as he was tall, and reaching around Yuri required him to press his side against Yuri's. Yuri could feel the cool sweat that covered the man's body at all times. \n\n\"Who do you think got you those drone operator manuals you requested last year? It was this guy, right here.\" Sasha patted Yuri's shoulder. \"And if it wasn't for his tireless and brilliant work, we wouldn't know about the storm coming our way.\" The officers' jaws dropped. \"That's right, he's the one that broke the GAU's codes. You should be saluting and thanking him, not badgering him.\"\n\nMajor Al-Warra's face screwed up in disbelief. \"A Zibar?\"\n\nSasha snorted derisively at the major. \"A great man.\" Yuri felt his eyes begin to mist. He blinked them clear. \"Even if he is a Zibar.\" Yuri rolled his eyes. \"And he has more important things to do than bandy words with the likes of you.\" He addressed Yuri. \"Here's your bag!\"\n\nSasha effortlessly lifted a large, bulging messenger bag and plopped its strap atop Yuri's shoulder. Yuri nearly buckled under the sudden appearance of seventy pounds of weight on his shoulder. Fortunately, he had been forced to run uphill with greater loads than that during basic training, so he stayed upright.\n\n\"You got it?\" Sasha asked, not referring to the heavy bag. Yuri's eyes flicked meaningfully between the Air Force officers and Sasha. The big man waved his hand dismissively. \"Don't worry, Al-Warra's in the know.\" He turned to address the officers. \"If you ever want the newest and best in the world of entertainment,\" Sasha nodded at Yuri, \"he's our man.\"\n\nYuri noted Sasha said \"our man\". It meant that the officers were in on their little arrangement. Sasha winked at Yuri. He probably thought he was doing Yuri a favor by introducing him to more people from the circle, but Yuri didn't appreciate it. Their ring's activities were illegal and punishable by court-martial. The more people that could implicate him directly, the worse he liked it. And here was a whole bunch of Air Force officers who knew about him. He forced a grin onto his face, all the same.\n\nThe Caliphate was subject to a comprehensive GAU embargo. The Bloc nations did not support this embargo, but there were numerous difficulties which prohibited the Caliphate from engaging in any significant dealings with them. First, there was the problem of openly shipping things through GAU-infested waters and territories. Then, there were the Bloc nations that did not appreciate an Islamist government as a trade partner. On top of it all, price gouging and ill-timed fluctuations in the currency exchange rates frequently brought foreign trade to a crashing halt.\n\nShortages of medications, food and various supplies were a part of daily life. The part of Caliphate society that was hit the least by all this was the military. It had carte blanche to import anything it needed to ensure the sovereignty of the Caliphate, without any regard for where it came from. The Caliphate Intelligence Service had an elaborate network of multinational companies it routinely used to procure such critical supplies and covertly deliver them to the homeland. The network also covered up the sales of the Caliphate's oil and ore, which was how they paid for those supplies.\n\nEven without the embargo, the Caliphate would be isolated from the global entertainment markets since foreign media was deemed immoral and subversive. If any company wanted to distribute media in the Caliphate, they'd have to submit it to the Morality Board, which routinely denied permission, classifying everything as satanical. The few things that they did allow to be distributed were so bad that Yuri couldn't imagine getting paid enough to waste his time on them.\n\nAs a result of this media ban being in effect, new movies, music albums, video games and books were valuable goods in the Caliphate. They worked almost like a currency.\n\nOne could trade a copy of the newest piece of entertainment for almost anything, since the person receiving it would, in turn, be able to make copies and trade them for things they needed. Once you had a copy of something good, it held value until you ran out of people who wanted to see it, but hadn't yet.\n\nPerson-to-person was the method of distributing good media in the Caliphate. Emails with large attachments were routinely screened for subversive material. Foreign file-sharing sites and services were blocked. Domestic ones were taken down as soon as they cropped up, their creators imprisoned for long stretches of time. The Cipher School trained the Morality Board's enforcement arm and they were very good at their job.\n\nDuring his first few months of military service, Yuri had insinuated himself into a circle of military quartermasters that traded valuable goods amongst themselves. Most of them didn't want to have dealings with a Zibar, but Yuri would hack into servers belonging to entertainment companies worldwide and download all sorts of contents that would otherwise never be seen in the Caliphate. In exchange for copies, the quartermasters let him join in on the fun. Whenever he needed something, one of the other members of the ring would write it off as faulty and give it to him. \n\nUsually, Yuri dealt with Sasha, as the man had first dibs on any imported food items. He was also the most reliable source of insulin in the Caliphate. No one knew where and how he got it, he just did.\n\nSasha squeezed Yuri's shoulder. \"Well, have you got them?\"\n\n\"Yeah.\" Yuri pulled a microdrive out of his pocket and handed it to the chef.\n\nSasha held it up, in open view of the Air Force officers, and said, \"I'll never get what my kids see in a cartoon about a bunch of talking animals, but...damn if it doesn't get me some alone time with the missus!\" Sasha's belly laugh echoed across the mess hall. Some of the officers joined in, politely.\n\nSasha clapped Yuri on the back. \"Thanks for this! Peace be with you, Yuri!\"\n\n\"Peace be with you, too, Sasha. Thanks.\" Sasha turned around and went back into the kitchen. Yuri could feel the eyes of the Air Force officers on him as he left the mess hall.\n\nHe rushed down the side corridor to the gymnasium. He looked around before going to his locker. He retrieved a flat, plastic box and crammed it into the messenger bag. He took out a book on asymmetric encryption and leafed it until it stopped open on a page. There was a collection of bright yellow stickers stuck between the two pages. He took one and replaced the book in his locker. After taking another look around, he applied the Intelligence Service's official Classified Materials Within seal across the bag's zipper.\n\nHe left the School by way of the gymnasium, not wanting to squeeze past all the officers and frazzled secretaries in the office part of the complex. There were some officers in the gym, praying. Yuri didn't know if they were praying a late Zuhr, Asr, or a simple dua for God to grant them strength in the coming ordeal. They were facing the Qibla and he tiptoed past them to the side exit, unnoticed. He walked across the small parking lot, that was chock full of jeeps, and got to the side gate. He saluted the duty Lieutenant there.\n\n\"Warrant Officer Yuri Yanuk requesting transportation home, Sir!\"\n\nThe Lieutenant returned his salute and checked a clipboard before saying, \"Wait right there, Mr. Yanuk!\"\n\n\"Yes, Sir!\"\n\nThe Lieutenant picked up his phone and said, \"I've got Yanuk at the side gate. ... Yes.\" He put the phone down and turned his attention to the jeeps coming and going while Yuri just stood there, not knowing what this was about. He tried to interrupt and ask, but the jeeps were carrying high ranking officers, the Lieutenant seemed to be quite short on patience and Yuri had trouble coming up with what to say, so he stood in place and waited. Soon, he was swaying on his feet, blinking his eyes to keep from nodding off. He started counting his yawns, just to have something to do, other than wait. \n\n\"Warrant Officer Yanuk?\"\n\nYuri snapped awake and turned around. A young Arab soldier stood there, holding a small parcel. He looked Yuri up and down, affected a sneer of disdain, and held out the parcel.\n\nYuri glared at him. The days of him being a \"bright kid\" with \"lots of potential\" were long gone. He was a hero of the Caliphate. A code-breaking demigod amongst men. He was not going to take shit from grunts anymore.\n\nThe young soldier stared back. His smirk stayed on his face, even as he gave in and sketched a quick salute. Yuri sighed, his flash of anger evaporating with the gesture of appeasement. He was too tired to chew the man out, so he just snatched up the parcel. He did take note of his name, though. He'd have a talk with the General about the soldier, when he came back.\n\nThe soldier gave a dismissive chortle and turned around to walk back inside. Oh, yeah, we'll definitely have a chat about discipline, you and I, Yuri thought.\n\n\"Yanuk,\" the Lieutenant called out.\n\n\"Yes, Sir?\"\n\nThe Lieutenant pointed to the jeep that was pulling up to the gate. \"That's your ride.\"\n\n\"Thank you, Sir.\" Yuri put the parcel into a side pocket of his bag and got into the front seat of the jeep.\n\nThe Arab Corporal driving the jeep made no face, or comment, to driving a Zibar Warrant Officer, even when they were stopped at one of the checkpoints that led through the wall surrounding the Zibar enclave of the capital.\n\nMembers of the Islamic Militia manned the posts. They were mostly rubes, fresh from the sticks, called to the capital to serve the Caliphate and God. Yuri could tell that they lacked the brain cells to process what they were seeing; a Zibar in uniform. Fortunately, though they had been given guns, they had also been given military oversight, so Yuri had a Captain to talk to.\n\nHe still had to present his credentials to the man and answer several stupid questions about how he had come to serve in the military. Yuri found himself wishing, for the umpteenth time, that they'd stop rotating the officers so much. Explaining himself thrice a week was thrice a week too often, as far as he was concerned. Once the Captain asked about his bulging bag, Yuri showed him the bright yellow seal and the man looked nonplussed. \n\n\"Are you sure you want to go inside the enclave,\" the Captain earnestly asked.\n\nYuri blinked. He was too tired to fathom the man's thought process. \"Yes.\"\n\n\"With that bag?\"\n\n\"Yes.\"\n\nThe Captain looked like he was going to burst if he didn't say something to Yuri. After a short, silent deliberation, the man decided to follow military regulations and let Yuri through without searching his bag.\n\nYuri walked into the enclave. The area immediately visible from the checkpoint was, as usual, short on signs of life. Yuri could hear the squeal of playing children and the chatter of people, but it was all faint until he rounded the first corner. Then the sounds and smells of the enclave exploded in his face. \n\nThere were children running after a ball in the middle of the street. An old man was shooing them away, telling them to go play farther down the street, where they couldn't kick the ball into view of the checkpoint. The children kept ignoring him until he reached for the ball. Then they kicked it down the street and chased after it, laughing at the old man's exasperation.\n\nA little farther down the street, a large group of women was engaged in stirring cauldrons suspended over small propane fires. A fine dust rose from the cauldrons to settle on their hair and clothes, making them look a little like ghosts. Most wore simple cotton masks over their mouths and noses.\n\nYuri knew that inside the cauldrons, chickpeas were roasting in sand, along with lemon rinds and laurel leaves. Later, they'd be run through sieves to separate them from the sand and then they'd be doused with a liberal amount of aniseed liqueur and left to slowly dry for two months. It was a Zibar wedding tradition to wrap them up in paper and hand them out to the guests as they were leaving the reception.",
        "Yuri looked at the group, trying to figure out if he knew the bride-to-be. She would be easy to spot. Apart from being probably the youngest woman there, she was also the one that was required to attend the preparations, but was strictly forbidden from doing any of the work. If the bride touched the chickpeas, the marriage would result in stillbirths, the Zibar believed.\n\nIt was a stupid superstition, but Yuri had to admit that he loved the flavor of the chickpeas. He had only gotten to taste them a few times before, when he had attended the weddings of his cousins.\n\nHe finally spotted the young woman. She didn't look familiar to him. He sighed and decided to take another route home. He didn't want to get sand in his nose, or hair. He was too tired to overlay a mental map of the enclave in his mind's eye, so he just went down the side street, intending to return to his usual route at the next turn.\n\nYuri walked past a group of old women that were sitting together on some chairs on the sidewalk, knitting and gossiping. They shut up as he walked past. A mouth-watering smell was spreading from an open window of the building across from them. There were men walking around, carrying heavy bags and looking nervous. He could feel their open-mouthed gazes on himself.\n\nHe lowered his head and walked past, intent on getting home and to his bed as soon as possible. He was surprised at all the attention he was getting until he noticed the green at the bottom of his vision. He was still in uniform. Usually, he changed in and out of civilian clothes at the Cipher School, but he had forgotten to change before leaving today. \n\n\"Well done, Yuri,\" he muttered into his chin. \"Well done indeed.\"\n\nYuri had heard the rumors about himself that were going around the enclave. It was hard not to. The idea of a Zibar working for the Caliphate Intelligence Service was so outrageous that it made for very popular gossip. Some said that he was a spy for the Arabs. Others said that he was an operative of the Bloc, or the GAU. The nature of his agenda and mission were speculated on daily. There were even some people who firmly believed Yuri didn't exist.\n\nDespite all the rumors going around about him, few in the enclave knew him by name. Even fewer knew his face.\n\nHe made sure that everyone whose needs he saw to kept silent about him. They all seemed glad to keep his name out of things. He guessed that it gave them a modicum of power and importance when they suddenly brandished a rare item, or medication, that no one could obtain and casually said that they could get more at a few days' notice. By keeping him out of it, they kept that power to themselves.\n\nA quiet segregation of Arabs and the Zibar had been going on for as long as Yuri can remember. He had definitely felt it, but only on a personal level. On paper, he had been equal to any other child while he had been growing up. He had gone to schools no better and no worse than all the others in the Caliphate. He had a doctor treat him when he had been a kid, a dentist fix his teeth, food on the table, clothes on his back, a roof over his head. He had even managed to get his hands on some entertainment, every now and then. \n\nThere had been hate crimes against the Zibar, but only out in the sticks, where the rubes probably also wed their sheep. The old folks spoke of bad times to come, but Yuri couldn't see it. It was all just talk, as far as he was concerned. One side talking nonsense, then the other one-upping them in return. Yuri hated listening to people flapping their mouths, just for the sake of taking their turn to make some noise. \n\nThe crowning argument for the impending doom of the Zibar nation was, according to everyone, when the Zibar were gathered into enclaves. Yuri didn't see the downside to it. The enclaves were places where they could live free. It wasn't like they were imprisoned in them. They could leave to go to work, if they had it. They could go visiting their relatives in other enclaves, or abroad. Zibar emigration was not as strictly forbidden as that of Arabs. With no Arabs in sight, there had been no more violence and he didn't have to listen to the endless talk of all the bad things that were coming. He still could, but he chose not to. He chose to focus on his work.\n\nWork which he wouldn't have been able to do if not for the forced relocation into the enclaves.\n\nZibar society was defined by its traditions. It was organized into tribes, for lack of a better word, according to where the Zibar lived. Each tribe had its elders and, as part of transitioning from child to adult, every Zibar had to go before the tribe's elders to declare their chosen profession and receive the elders' blessing for it.\n\nYuri's family had lived in a suburb of the capital and they had their own elders, separate from the elders of the other Zibar communities in the capital. When Yuri had professed his desire to become a code breaker for the Caliphate military, the elders had forbidden it.\n\nHe had been gutted. Without the elders' blessing, he had to either find a new career, which he couldn't even begin to consider, or he and his family would be shunned by every Zibar of their tribe, and then some. \n\nDuring the spring of his last year of high school, his guidance counselor tried to steer him towards a number of professions, but to Yuri, the man's speeches sounded like a funeral dirge someone was playing two streets over. A string of notes that he couldn't quite make out, nor did he particularly want to.\n\nAs the firstborn son, leaving his family was tantamount to taking a wet shit on all the graves of his ancestors. His sister was expected to leave the family hearth when she got married, but it fell on him to bring a woman into the family and father a new generation to keep the traditions and the family name alive. To care for the elders of the family as they grew old.\n\nEven if his family moved to another part of the capital, they needed the blessings of both their current and future elders to change tribal affiliation. That blessing would probably only come with a string attached; the one that said his ban on a military cryptography career had to be upheld.\n\nHe saw no way out of his predicament, not without breaking his parents' hearts. He knew he'd feel like shit whatever he chose.\n\nWhen all the Zibar in the capital had been moved to the enclave, Yuri could have shouted his joy from the rooftops. By Zibar custom, living in one area mandated a single gathering of elders to lead them. That meant that many of the elders had to give up their prestige and social power and none of them seemed willing to do that. A power struggle between the various city quarters' elders had ensued. \n\nWhile they had been busy sorting out their new hierarchy, Yuri had seized the opportunity the power vacuum had provided and joined the Army. By the time they had gotten around to establishing a unified council, he had put them before a fait accompli.\n\nEven if they wanted to do something about it, they were now practically powerless to stop him. The Arabs had wedged themselves into every decision-making process regarding the enclave and they controlled who lived where and what could and couldn't be delivered into the enclave. The elders' power was now reduced to determining who sat where during social functions and in which order everyone's tea cups got filled.\n\nAs far as Yuri was concerned, it served them right for trying to dictate his life for him.\n\nIf the elders tried to decree his family ostracized, people would play along and shun them in public, but in private, they'd have to come to him, hat in hand. Yuri had seen to that. \n\nHe used his military privileges to sneak the things he obtained into the enclave. It was mostly things that were hard to come by, even for the more affluent amongst the Arabs. Several of the elders had actually asked Yuri to bring them things in the past few years. He had obliged them, but that had not resolved the tensions between the council of elders and himself.\n\nHe stuffed his hands into his pockets and walked faster. A bubble of silence walked with him. He focused on his feet. He couldn't look up and see those gawking eyes. Not today. Today, he had followed his dreams and saw them come to fruition. Today, he wanted to feel good about himself.\n\nAll his life, Yuri felt like he had to explain himself. Like his very existence was some kind of anomaly. In elementary school and high school, whenever he saw an Arab kid with similar interests to his own, they'd be shocked that he wanted to be their friend. The ensuing awkwardness stopped him from ever forging any lasting friendships with Arabs. The Zibar kids would look at him like he was insane that he wanted to even talk with \"them\". \n\nHis childhood had wound up being a very solitary experience.\n\nHe had hoped that, once he left school, things would get better, but his hopes were quickly dashed. All those artificial divisions in Caliphate society kept intruding into his life, every single day. Everywhere he went, he was gawked at as if he was a freak of nature. There were times he wanted to start every interaction with other humans with a punch, in the hopes that their eyes would go back into their sockets and that whatever was stuck inside their brains would get loosened. Only at the Cipher School did he feel like people could see past the superficial to what was important.\n\nWell, people who were not Colonel Ali, that is.\n\nAfter a few wrong turns, Yuri managed to return to his usual route home. Normally, the winding streets presented no challenge to him, but he was having a hard time figuring out the cardinal directions. Just two turns from his apartment building, a pair of heels planted themselves right in his path. He tried to walk around them, but a soft hand grabbed his elbow. \"Yuri, wait!\"\n\nHe looked up to see the smiling face of Wada Rial, his old flame. While his brain struggled to make sense of the sight, his mouth went on autopilot. \"Oh, didn't see you there,\" he said, in Arabic.\n\nShe frowned at his choice of language, but continued in Zibar. \"Well, I'll say you didn't. You've got your head hanging so low, you're nearly brushing the pavement with your nose.\" She reached up and gave his nose a quick squeeze. \"Honk!\"\n\nYuri grinned despite himself. He leaned away from her hand. \"Hey,\" he exclaimed in his native Zibar. She honked his nose twice more and he had to pull his hands out of his pockets to get her to stop. \"Cut it out! What's wrong with you?\"\n\n\"Nothing's wrong.\" She shrugged. \"What? Can't a girl touch an old friend's nose? And make noises doing it?\"\n\n\"Yeah, ok...I'm just...\" He took a good look at her. She was dressed in a fairly form-fitting blue dress. It accentuated her body far more than concealed its shape. Her pitch black hair was done up in tight, little curls. She had worn it like that a few times, back when they had been dating, and he had never failed to tell her how much he liked it done up like that. Red lipstick adorned her smiling lips. There was some blush on her cheeks and her eyes were made up, too. Yuri almost frowned when he was looking into her brown eyes. They didn't quite seem to match her smile. \"Um...\"\n\n\"Yuri, you old dog, how long has it been?\"\n\n\"Since...?\"\n\n\"Since we got together to talk. How long has it been?\"\n\nYuri had to actually think about that. He knew the exact time and date of their last conversation; it was the one with which she had dumped him for that med student. He just couldn't, for the life of him, muster the present time and date, let alone subtract one from the other and give her the answer. \"Uh, long...\" He nodded. \"It's been long.\"\n\n\"Well, can we talk now?\"\n\n\"Um, I'm tired and...\"\n\n\"Tired? Isn't it a bit early in the day to be tired?\"\n\nYuri squinted up at the sky. The sun was past its highest point, approximately half way to the horizon. \"Uh, I guess, but I was up all night, and...\"\n\nWada snuggled closer to him, hugging his elbow with her breasts. \"What were you up to all night long, you naughty boy? Making trouble for all the single ladies in the enclave?\" She winked up at him and giggled.\n\n\"No! No, I was on duty the whole night long!\"\n\n\"Oh, relax, Yuri, I'm just teasing you.\" She looked him up and down. \"Though, I've got to tell you, you look great in that uniform.\"\n\nHe could feel his cheeks burning. \"Uh, thanks.\"\n\nShe felt his arm with her hands. \"Oooh, and you feel so strong to the touch, Yuri. You do a lot of exercise, huh?\" She winked. \"It definitely shows. You're quite the hunk now.\"\n\nHe didn't feel comfortable hearing her talk like that in public. \"Where's, uh,\" Yuri squinted as he struggled to recall the name of the med student. \"Where's Abraham?\"\n\nWada shrugged. \"He's helping out at the clinic.\"\n\n\"Oh.\" Wada kept smiling up at him, even as she kept his elbow pressed firmly between her breasts. \"Well, what would your fianc\u00e9 think about you standing so close to me?\"\n\n\"Abraham knows we're close, you and I.\" Yuri's brow rose. \"Well, he knows we used to be so close.\" She leaned in and rested her head atop his shoulder, not breaking eye contact. \"Don't you miss it? Us being close? Together?\" Yuri's mouth worked, but no sounds were coming out. \"I do. I've missed you so bad. I've often thought about getting back together with you.\"\n\nYuri gulped as his throat was suddenly very dry. He could feel her breath against the bottom of his chin. Some kind of floral perfume was lingering in his nostrils.\n\n\"I used to lie in bed, sometimes,\" she whispered, \"and imagine what it would be like to get back together with you.\" She rubbed her cheek against the top of his shoulder. Her breasts rubbed against his bicep at the same time. \n\nHer overtly sexual motion snapped Yuri out of his surprise. He cast his eyes about. There were few people around, but most of them were glancing their way. \"Wada, stop that,\" he hissed, \"someone will see you!\"\n\n\"So?\"\n\n\"So? So, you're acting like a wanton whore, Wada. Stop it!\" He stepped away from her and pulled his elbow out of her grip.\n\nWada kept smiling. Her fingers traced the front of her dress. Yuri gulped when he realized she was tracing around her nipples. He could see they were erect and that meant she was braless. A flood of memories rushed into his mind's eye. Broken images of her riding atop his hips, her face scrunched up in concentration as she yelped and gasped. Her tits, her naked, smooth, soft tits in his hands, getting redder the more he played with them. He started feeling his cock swell against his boxers.\n\n\"Used to be, you didn't mind me behaving like that. Used to be, you liked it. A lot.\"\n\nYuri frowned. \"That was then. We're not together anymore.\" He forced himself to look away from her chest and cast his gaze about again. \"And we never did anything untoward in public.\"\n\nShe raised an eyebrow. \"Well, if you're worried about public indecency, we can go someplace more private. Someplace where we can be as alone and as close as we want to.\" She stepped closer and embraced him.\n\nYuri could feel her breasts flatten against the muscles of his chest. He could feel her nipples poking into his skin. They felt like a pair of electrodes, poised to make his heart race and stop beating at the same time. The heat of her soft, pliant body against his was too powerful to resist. His cock sprang up to full hardness, poking her in the hip, despite the heavy canvas of his combat fatigues.\n\n\"Ooooh,\" she cooed in delight. \"I can feel how close you want to be to me.\"\n\n\"No, no, no, that's not...no, I...\" His eyes darted everywhere, noting the disapproving looks the passers-by were shooting him.\n\n\"If you want me to stop being so close to you, just say so and I'll move away and let you and your,\" she shot an amused look at his crotch, \"big friend walk home all by yourselves.\"\n\n\"No,\" he exclaimed softly and pressed her closer to him. Hugging a girl on the street was indecent, but walking around with a discernible erection was utterly unacceptable. He'd be ostracized for such behavior. His family, too. He could push back against the elders' nonsense, but this... \n\nHe felt Wada's soft laugh against his chest, even as his eyes darted around in a panic. \"Wada, stop it,\" he hissed.\n\n\"Stop what? I'm not doing anything.\" She held her hands up above their shoulders. \"Look, my hands are up here!\"\n\n\"Wada!\" Everyone's eyes were on them now. He could feel sweat break out across his brow. He had never seen Wada act like a harlot before. He had never seen any girl act like this in public. He didn't know what to do.\n\n\"If you're worried about everyone's eyes, we could duck inside, out of the way.\"\n\n\"Yes! Yes, let's!\"\n\n\"Come on!\" She turned around, took him by the hand, and led him to the nearest doorway. \n\nIt was a small apartment building, only three stories high, with two apartments per floor. He was almost relieved to be out of the street, but then he heard children's laughter coming from higher up on the staircase. \"Wada,\" he hissed heatedly, \"children can't see me like this!\" His erection was somewhat subsiding, but he still needed to hide it. He maneuvered his messenger bag in front of it.\n\n\"Come on! We can hide in here!\" She unlocked a door and pushed him in before he could object. She locked the door behind them.\n\nYuri looked around the small apartment. It was somewhat cramped, with lots of furniture lying around. There were neatly folded clothes and books everywhere. \"Wada,\" he whispered, \"people live here.\" \n\n\"Yes, my family does. Don't worry.\" She winked at him. \"No one's home.\"\n\n\"Oh.\" He frowned. \"Wait, so you live here? I thought you and Abraham moved south after you...\" She looked a bit sheepish at his comment. \"Since when do you live here?\"\n\nShe shrugged. \"A while now.\"\n\n\"I had no idea. I live just two streets over. Why didn't you ever come over and say hello?\"\n\n\"Your mother hates me.\"\n\n\"No, she doesn't.\"\n\nWada shot him a look. \"Yes, she does. But that doesn't matter.\" She moved his bag aside and stepped closer to embrace him once again. She was sporting another inviting smile.\n\nHis eyes fluttered closed and he sighed as he felt her warm body press itself against his. Her pliant hip rubbed against his erection. Even through their clothing, it felt excellent. \"Wada, we can't.\"\n\n\"Sure we can.\"\n\n\"We shouldn't.\"\n\n\"No,\" she said, giggling, \"we definitely shouldn't.\"\n\nHe looked around and then at her. \"I, I have to go.\"\n\n\"No, you don't.\"\n\n\"Wada, please!\"\n\n\"Please, what?\"\n\n\"Just, let go of me. I have to...I have to use the bathroom.\"\n\nShe laughed softly as she rubbed herself against him all over again. His cock instantly regained any hardness it might have lost and he had to grit his teeth to keep from rubbing along with her. \"Why, Yuri, that's a sin, you know.\"\n\nHe shot her an incredulous look. \"And this isn't?\"\n\n\"Was it a sin when we were together?\"\n\n\"We, uh...we're not together now. You're with Abraham.\"\n\n\"Forget Abraham.\" Her hands roamed up and down his back, squeezing his buttocks and tracing the cleft between his shoulder blades with her nails. \n\nHe sucked air and grimaced. His upper back had always been sensitive. Just getting touched like that was making him relive all the times he had spent himself inside her quivering sheath, her nails raking his shoulder blades bloody as she climaxed with him. His knees felt weak, all of a sudden. \"Wada, no.\"\n\n\"Yuri, yes,\" she breathed into his chin. She tilted her head and began sucking on the side of his throat.\n\nHe groaned when her tongue joined in on the fun. She kissed across his larynx, tickling away until he was unable to speak, only gasp for breath. She kissed up the side of his throat until she reached his ear. \"Be with me, Yuri, just like old times. Be with me.\"\n\n\"Wada, no.\"\n\nHer hands reached up and pulled his head down for a kiss. When her lips touched his, he couldn't fight it any longer. He dropped his bag and seized her ass. Her buttocks felt so right in his hands, their soft flesh overflowing between his clenching fingers. She squealed into his mouth and then jumped up to clamp her legs around his midriff. He supported her weight with ease.",
        "Wada pulled away from his mouth. \"When did you become so strong?\" He leaned in and kissed her again. She rubbed her body against his, making him groan with desire. \"In there.\"\n\nHe carried her in the direction she pointed, even as their tongues wrestled for supremacy across the expanse of their lips. He found himself inside a bedroom. He walked to the bed and let go of her. She let herself fall back onto the bed and giggled as she bounced upon it.\n\nNow that his hands were empty, he realized that he could just rush into the bathroom before she could get up, lock the door, squeeze one off and be on his way home, without his erection swinging around to scandalize the whole world. No muss, no fuss. \n\nThen he looked down at her. She reached up towards him with a warm smile and all thoughts of decency vanished. \n\nShe had been his first and he hadn't really been with anyone since. Arab girls caught his eye, with their curly, dark hair and smooth, swarthy skin, but few of them dared break the unspoken taboo on inter-ethnic dating. The ones that did had only been interested in one-night stands that provided them with some kind of revenge against their boyfriends. \n\nYuri pretended those nights had never even happened. If the wrong Arabs heard of the matter, they'd snip his balls off. Literally. None of those girls could hold a candle to Wada, anyway. \n\nShe started unbuttoning her dress.\n\nYears of sexual frustrations erupted out of him. He pounced atop her and let loose. His hands nearly mauled her breasts. His tongue frantically tasted every bit of her skin, desperate to confirm his memories of how good she tasted. He bit and licked and sucked, not caring about the marks he'd leave on her.\n\nShe tried to fight him, just to reign him in a little, but it was to no avail. She only got him to pause when she managed to undo his zipper and grab his erection. He groaned as she pulled him out. Their eyes met. He burned with desire and, for a fleeting moment, he thought he could see that hers didn't match. Then she started pumping his cock and he was lost. She used his erection as a control stick and got him to roll over on his back. She wasted no time in pulling her dress up and mounting him. He was paralyzed by the glorious realization that she had not been wearing panties, either.\n\nThey both groaned while she slowly sank down his length. He couldn't believe how good it felt to be inside her again. His memories, as vivid as they had been, felt like liars in that regard. Then she started moving up and down on his shaft and all he could think of was how much he wanted this to last forever.\n\n\"Oh, yes,\" she exclaimed in a breathless voice, \"just like old times.\"\n\nAt one point, the top half of her dress pooled around her midriff, revealing her breasts. His hands shot up and massaged them, tweaking her nipples and rubbing around her areoles. He smiled at the v-shaped mole on her left tit. I haven't seen you in a long time, old friend. \n\nWada responded to his ministrations with soft yelps and quick gasps. His hips began to buck upwards, all on their own. He was lost on a sea of desire and she rode every wave that possessed him. \n\nSoon, her yelps started coming in shorter and quicker bursts, her breasts flushed pink underneath his fingers and her pussy began fluttering against him. He cried out as his whole body seized up, driving his hips clear off the bed. His seed shot out of him and into her gushing womb. The ecstasy felt like a fire that was consuming his very mind.\n\nAs his orgasm faded away, so did his consciousness.\n\nHe was jostled into a half-wakeful state. All he knew was that his temples were throbbing. His mouth tasted like shit and he couldn't focus his eyes on anything.\n\n\"Get up! Somebody's here for you!\"\n\nYuri groaned in vague protest. He couldn't make sense of anything. \n\n\"Mr. Yanuk! We know you're in there! Come out, please!\"\n\nThe loud voices snapped Yuri awake and he shot up in bed. Wada was busy doing up her dress and straightening it out to make herself look presentable. Shame washed over Yuri at the sight. Confusion followed.\n\nHe didn't know if this meant that they were getting back together. He didn't know if he really wanted it, deep in his heart of hearts, or if it was just because she was the only girl he had ever really been with. If he had his choice of women, would Wada be the one for him? Years ago, he would have shouted \"yes\" to that question. Of late, he had not been so sure. Today had done nothing to clarify the issue.\n\nFresh knocks on the door snapped him out of his thoughts. \"Mr. Yanuk, open the door, please!\"\n\n\"Who's that?\"\n\n\"I don't know.\" Wada looked at him with an expression that told him she was feeling guilty about what they had done. \n\nHis heart sank. She wasn't interested in a relationship with him. He didn't understand why she did what she did if she was uninterested in him. He got out of bed and swayed on his feet. I really need to get some sleep. He looked back down at the bed. It was so inviting, even if it wasn't his.\n\nWada checked herself in the bedroom mirror and then left the room. \"Who is it,\" he heard her call out. \n\nHe looked around the room. He was forgetting something important, but he couldn't figure out what. \n\n\"Just a minute!\" Wada dashed back into the room. \"It's the elders! They've sent for you!\"\n\n\"What?\"\n\n\"There's people at the door, they want you to come with them.\"\n\nHe blinked his eyes, trying to process this new piece of information. \"What about you?\"\n\nShe shrugged.\n\nHe wiped his face and moved towards the door.\n\n\"Hey.\" \n\nHe looked at her. She was pointing at his crotch. \"Oh,\" he said and put himself back inside his boxers. He zipped up and remembered he had his bag with him. He looked around for it.\n\nAnother knock came at the door. \"Mr. Yanuk!\"\n\n\"Yeah, yeah, I'm coming,\" Yuri snapped in that direction. His temples were still throbbing and he was in no mood for any elders scolding him about his lewd behavior, indoors, or in public.\n\n\"Yuri,\" Wada said, fearfully.\n\nHe spotted his bag and picked it up. \"What?\"\n\n\"Please don't tell them about...\"\n\n\"I won't.\" He put the strap of his messenger bag across his shoulders and steeled himself against the scorn that awaited him beyond the door. \"I'll tell them to go fuck themselves.\"\n\nWada gasped.\n\nHe marched to the door and yanked on the handle. It didn't budge.\n\n\"Yuri!\"\n\n\"What?\" He turned to look at her. She looked fearful, desperate.\n\n\"Please, come back! After you're done with them, please come back and talk to me.\"\n\n\"Okay.\"\n\n\"Please! Whatever they say, or do, please come back here. I... We need to talk. It's important. I need you.\" Another knock on the door nearly made her jump in place. \"Promise me! Promise me you'll come back and talk to me!\"\n\n\"I promise.\"\n\nYuri unlocked the door and yanked it open. He stood there glaring at several tense faces. He drew a deep breath to send them to hell with, when they all changed their expression into relief. His brow twitched in confusion.\n\n\"Peace be with you, Mr. Yanuk,\" one of the men said. \"Please, come with us. You are needed.\"\n\n\"What?\"\n\n\"Please, Sir, we need your help,\" another said.\n\n\"What?\"\n\n\"Please, just come with us, Sir,\" said the first man.\n\n\"The elders need to speak with you,\" added the second.\n\n\"I'm in no mood to go see anyone.\"\n\nThey looked alternately surprised and worried by his words. A silver-haired old man, with a few wisps of hair dangling from his upper lip, leaned in. He spoke softly. \"Mr. Yanuk, are you refusing to attend to your elders when called upon? Should we tell them that? Is your family prepared to forgo their guidance and protection?\" \n\nFuck the elders, Yuri thought. He opened his mouth to say it.\n\nThe man shot a pointed look at Wada. \"There is no need for us to concern them with matters of impropriety. They need to speak with you on a different matter.\"\n\nYuri looked over his shoulder into Wada's fearful eyes. His indignant rage deflated. \"Can't this wait until morning?\"\n\n\"Wait until,\" one of the men exclaimed in disbelief before trailing off.\n\n\"No, Mr. Yanuk. This is an urgent matter and the elders are calling upon you to deal with it.\"\n\nYuri sighed even as he tried to blink himself awake, yet again. Why can't people leave me alone to sleep? He gestured and they stepped aside to make room for him to pass. He squeezed his way outside and shot Wada a parting look. She looked fearful as she closed the door behind him. He looked down the street that led home with longing. He faced forward and let them lead him in the nearly opposite direction, shuffling along as best he could with a pounding headache. They walked for fifteen minutes down the winding streets of the enclave. \n\nThe good thing about the place was that there were no cars, so there was no chance of getting hit by one if you were stumbling around the streets, half asleep. The bad thing about the enclave was that the streets were everyone's living room. There were children running around, men playing bowls, women standing around talking, teenagers sitting on corners, snickering at God knows what. They were all so loud that they were making Yuri's headache worsen with every passing moment.\n\nYuri couldn't muster the intellectual strength to avoid obstacles, but he didn't have to, surrounded by the elders' men. Everyone on the street respectfully parted for them and ushered the children out of the way. Yuri could almost hear the rumor mill begin to grind away behind him.\n\nWhen the men stopped in front of a large house, they gestured him in. He tilted his head this way and that, stretching his neck to try and wake up. He noted that the sun looked to be at about the same place in the sky as it had been when he ran into Wada. Had he spent more than half an hour with her? Including the nap that had been so rudely interrupted?\n\nHe shook himself from head to toe and entered the elders' villa.\n\nThe place was packed. It seemed like half the able bodied men of the enclave were squeezed into the ground floor of the villa. Everyone turned their attention to him as he stood in the doorway. \n\n\"Peace be with you, Mr. Yanuk,\" called a voice from the back room. Yuri thought it sounded like Kenfer, one of the elders from Yuri's old neighborhood. \"Please, come and join us!\"\n\nYuri planted his feet and folded his arms across his chest. The pounding in his temples seemed to worsen at the sound of Kenfer's voice. He'd be damned if he had to squeeze through a crowd to get to a scalding. \"You seem to be busy,\" he called out, \"I'll come back tomorrow.\"\n\nThe anteroom erupted in astonished muttering. Yuri turned on his heel. The men that had escorted him there closed ranks around him, to prevent him from leaving. He sighed in annoyance.\n\n\"We're not busy, we're waiting for you,\" Kenfer called out. \"Every one of these men is waiting to hear from you. Come! Stand aside and let Yuri pass!\" The men in the anteroom scooted to the sides, opening up a narrow corridor.\n\nYuri frowned and shot a look towards the back room. None of this computed. What's worse, he knew he'd get it long ago, if only he hadn't been exerting his mind all day yesterday and through the night and for most of today. Unable to leave, he gave in and slowly walked through the anteroom. \n\nThe back room was almost empty, compared to the packed anteroom. The eleven elders were seated at a long table, the head elder at the far end and five to a side. The twelfth chair was pulled out at the near end of the table. An elder swept her hand towards it, inviting him to sit down. He fell heavily into it. He set his bag down on the floor next to the chair. \"Peace be with you, elders.\"\n\n\"And with you, Yanuk,\" the head elder said. His name escaped Yuri for the moment. \"Would you care for some tea?\"\n\nYuri looked down the table. Every elder had a steaming cup in front of them. There were two attendants standing at the sideboard. The sideboard was laden with refreshments and carafes of water. Yuri squinted in confusion. Usually, the elders offered tea, then waited for the attendants to place the cups and pour. The tea was poured to the elders, in order of precedence, and only then poured to the guest. The time the guest spent silently waiting for the tea to be poured was a mark of respect for the elders, as well as a token of submission to their rule. \n\nFor the tea to be already poured when the guest was offered...Yuri had no idea what that meant. He guessed that, if he said yes, the elders would have their teacups removed and a fresh pot boiled. They'd make him wait all that time and he was sure he'd fall asleep and thus insult them. There was no way he was going to stay here for a second longer than he had to.\n\nHis grandfather had taught him that in ancient times, wars between Zibar tribes had been declared by sending an emissary to refuse the tea that the elders of the other tribe offered. That simple refusal was enough to declare war. The elders would tell the emissary to leave and arm their people as soon as he was out of sight of the settlement.\n\nHe was grateful that time had changed that particular part of Zibar culture. These days, refusing the elders' tea was merely the equivalent of sticking a thumb up their ass and spinning them atop it. He glanced over his shoulder at the packed anteroom. He hoped the second part of the tradition hadn't changed; that he'd be allowed to leave before they broke out the torches and scythes. \n\nHe faced forward and smiled at the head elder. \"No, thank you.\"\n\nA chorus of murmurs spread behind him. The head elder merely nodded and it died out. \"Thank you for coming on such short notice, Mr. Yanuk. We have a great need to speak with you.\"\n\nYuri rubbed an itchy eyelid. He had no idea why the elders were giving him such leeway, but he didn't care. He had cracked the codes of the greatest fleet on the planet. He was beyond such trivial considerations. He made a show of looking around the room.\n\nThe tapestries adorning the walls caught his eye. They depicted characters from ancient Zibar legends. The ones that predated Islam. He had often seen their like, back when he had been a kid. His grandfather had taken him on a tour of all the surviving Zibar monuments. Every Zibar temple had dozens of tapestries like those adorning their walls.\n\nThe temples were gone now, bulldozed by the Caliphate during the last few years.\n\nAnother round of murmurs broke out in response to his behavior. Even the elders at the table shifted in their seats. The boy before them was supposed to show great gratitude at being given such deferential treatment from his elders.\n\nKenfer nearly exploded. \"Pay attention to your elders!\"\n\nYuri leaned forward and put his elbows on the table. He then put his head in his hands. If his family had to suffer disgrace, then so be it. He was going to ask the General to move his family out of the enclave, anyway. He wasn't going to have his time wasted like this ever again.\n\n\"Please, elder Kenfer,\" the head elder said, cutting off everyone's indignant reactions. \"Mr. Yanuk, you are aware of our people's situation, are you not?\"\n\n\"I am.\"\n\n\"And you are willing to help, are you not?\" Without waiting for an answer, the head elder leaned forward and said, \"You are one of only four Zibar serving in the military at this time. And you're the only one from the capital. We need you to speak with your superior officer.\"\n\nYuri was shocked for a moment. Were they going to try and force him to resign? \"Look, I'm not quitting my job and that's final!\" The stunned silence that ensued nearly made him regret his tone. He glared at the head elder, all the same.\n\nThe man smiled. \"You misunderstand, Mr. Yanuk. We don't want you to resign. Quite the opposite. We want you to use all the privileges and authority of your rank to help us protect our people.\"\n\n\"What do you mean?\"\n\n\"What do we mean, what do we mean,\" Kenfer quietly mocked. \"I can't believe we're dealing with this stupid boy.\"\n\nThe head elder put a calming hand on Kenfer's elbow. \"The Arabs are planning to make their move against us soon.\" Yuri rolled his eyes. \"Your commanding officer is the highest ranking amongst the officers that we know are against a Zibar genocide. We need you to put together a meeting between us and him.\"\n\n\"Not this crap again,\" Yuri muttered.\n\nKenfer barked out a reproachful, \"Yanuk!\"\n\n\"You guys have been going on and on about how the Arabs are going to exterminate us for over a decade now. Don't you ever get tired of repeating yourselves?\"\n\nAn explosion of noise made Yuri sway in his seat. The entire anteroom was roaring with indignant rage. The elders all spoke up at the same time, loudly. Most of them also jumped up out of their seats. Yuri rubbed his temples. If they didn't want to take his lip, then maybe they shouldn't have dragged him in here in the first place. No one hurled anything more than abuse at him, though. He was grateful for that much, at least. He was sure they could get their hands on some rotten fruit, if they wanted to.\n\nThe head elder managed to get the crowd under control and seat the other elders. Only Kenfer remained standing. \"I told you! I told you all! The moment he put on that uniform, he began believing all of their propaganda. God have mercy, he must have believed it all since before he joined. That was why he had joined them in the first place! Pissant child,\" he roared at Yuri, \"how dare you speak to your elders like that?!\"\n\n\"You're old, Kenfer,\" Yuri said, \"but you're no one's elder.\"\n\nKenfer rushed towards Yuri. The other elders jumped up and stopped him. \"I'll not have this, Mansour,\" Kenfer yelled at the head elder. \"Remove him! Throw him and his family out! Now! We can't have dealings with this boy!\"\n\nYuri felt rough hands on his shoulders. A few men from the anteroom had moved to obey, but they stopped when Mansour signaled. The rest of the elders reluctantly joined in with Mansour's pronunciation and the men retreated quietly.\n\nKenfer's face turned red with rage. \"To hell with you and your families! Let go of me!\" He shrugged the restraining arms of the other elders off himself and stalked out of the room, leaving by the side exit. At Mansour's nod, the attendants left after him.\n\nAn uncomfortable silence ensued. Yuri pinched the bridge of his nose in an effort to curtail his headache. It wasn't working.\n\n\"Young man,\" one of the elders broke the silence, \"you cannot deny that our people have suffered under the Caliph's rule. We've been murdered in the streets like rats, with no one ever being held accountable for it.\" The crowd in the anteroom broke out in angry murmurs of agreement. \"Our women have been raped, our children and elderly beaten. The Arabs see us as subhuman monsters and they will stop at nothing to eradicate us from this land.\"\n\n\"Had,\" Yuri said.\n\n\"What?\"\n\n\"Had been beaten, raped and murdered. That's why we're in the enclaves. No one's been molested, or murdered, since the relocation.\"\n\n\"You can't possibly see the enclaves as a good thing,\" another elder demanded in disbelief. \"We're prisoners here! Prisoners awaiting execution.\"\n\n\"If we're prisoners,\" Yuri asked, \"how come we're allowed to travel, even abroad? Didn't...what's her face...Roudhan, didn't Roudhan sit on this very council? Where is she now? Ah, yes, she moved to Italy.\"\n\n\"Elder Roudhan's relocation bears no relevance to this discussion,\" Mansour said. The other elders sat back in their seats. \"The fact is, Mr. Yanuk, that beyond these walls are Arabs who want to exterminate every last one of us. They see it as a way to prove their devotion to God. A way to cleanse this land of those they consider to be impurities and make it ready to receive God's blessings. They'll make good on their ambition. I think you know they will.\"",
        "\"That's patently ridiculous,\" Yuri said. \"The Arabs aren't evil. They're people, just like us.\" A few of the elders scoffed at this notion. The anteroom mirrored their actions. \"Yes, the Caliphate has the Islamic Militia, which is a collection of lunatics, but that doesn't mean that every Arab in the country wants to kill Zibar. Everywhere on Earth, it's the same. The ones in power manipulate the masses to hate those that are different from the norm, mostly by letting the loonies near the microphones. It's a way to distract the public from what the ones in power are really doing behind the scenes. It's the same old story that's been playing in every culture across the globe, for all of human history. It's never going to change.\"\n\n\"Ah, listen to this student of history,\" Kenfer said, entering from the side door. \"It's a shame you didn't learn history properly, you insolent child. If you did, maybe you'd have learned about the ghettos the Nazis had forced the Jews into during the last World War. Did you ever hear what had happened to those people? Particularly the ones that believed the ghettos had been established for their own safety? Huh?\"\n\n\"That was a long time ago,\" Yuri said. \"And no one's going to try and repeat that.\"\n\n\"Are you really this stupid? Or are you getting high on being contrary to us?\" Kenfer took his seat and turned to the head elder. \"Seriously, Mansour, why are we even talking to this boy? He's too stupid to be of any use to anyone.\"\n\nYuri chuckled with derision. \"No use to anyone? That's funny. I do recall getting a lot of things during the last four years for half of you seated here. I wasn't called useless at the time.\"\n\n\"Careful, boy,\" the elder sitting closest to Yuri quietly hissed.\n\n\"You're a bunch of fucking hypocrites.\"\n\nThe anteroom exploded into howls of rage. All the elders glared at Yuri. Only Mansour's raised hand kept the situation from becoming violent. Kenfer's face turned beet red all over again.\n\n\"Particularly you, Kenfer,\" Yuri said, loudly enough to be heard over the mob. \"You forbade my career. If it had been up to you, I'd never have been able to join the Army, or obtain my present posting.\" Yuri cocked his head and sneered. \"And now you're trying to get me to use that very post to help you. If that's not hypocritical, then I don't know what is.\"\n\n\"You don't know anything,\" Kenfer hissed. \"Insolent little child. You defied us, your elders, and went and joined the enemy when you should have-\"\n\n\"Enemy?! Wow! Those are some words. War's been declared already? You know, I'm thinking that maybe the Arabs might be prudent in locking up some Zibar.\"\n\nKenfer pounded the table. \"Damn it, Mansour! Throw him out! We'll do this ourselves!\"\n\n\"Do what,\" Yuri asked. The elders and the crowd finally fell silent. \"What is it that you want with me, anyway?\"\n\nMansour considered for a moment. \"We need you to talk with your General about...getting us some guns.\"\n\n\"Oh, fuck, no,\" Yuri barked out.\n\n\"Just so we can defend ourselves,\" Mansour said. \n\n\"No, no, no, no, no,\" Yuri shook his head, making his headache worsen. \"That is never going to happen.\"\n\n\"We can't remain defenseless anymore. We've gotten word that the Arabs are planning their move very soon and we can't afford to act like we're above violence any longer.\"\n\n\"No. This is a bad idea.\"\n\n\"Think of the weapons as only a deterrent.\"\n\nYuri snorted. \"No weapon has ever served as a deterrent, or a path to peace. Whenever one side gets armed, the other responds in kind. If the Arabs even suspected you had a cache of guns hidden in the enclave, they'd raid the place to take them away from you. Hell, they might even end the enclaves altogether and send us back out to mix with the idiots from the sticks.\"\n\n\"The Arabs have guns,\" Kenfer yelled at Yuri.\n\n\"The military has guns,\" Yuri insisted.\n\n\"The Militia has guns. Those very same lunatics you've acknowledged as dangerous are sitting at the checkpoints with guns trained on us.\"\n\n\"The Militia has military oversight,\" Yuri said. \"They won't so much as fart without orders. You start packing heat and the military is going to give them those orders.\"\n\nKenfer wiped his face with his hands. \"I can't believe how stupid he is.\"\n\nYuri frowned. \"Neither can I believe how stupid you are, elder Kenfer.\" Mansour raised a hand to silence the crowd again. \"What would you do with guns, if you were given any? Do you know which end of a gun to hold? Do you know how to maintain a firearm? How to properly use it? Has anyone in the enclave served in the military in the last decade? Does anyone here have any combat training? No? Giving a bunch of guns to a bunch of civilians unfamiliar with them is the same as shooting them in the head. Hell, shooting them in the head would be more merciful.\"\n\n\"You could help train our forces,\" an elder suggested.\n\n\"Help train,\" Yuri asked, incredulously, and then trailed off. He looked from one face to the other. \"Are you kidding me? I only did basic training. I know how to work a gun, true. I can teach some people to disassemble and reassemble and maintain a few types of weapons, but I can't train anyone to be fighters. These aren't the good old days when just knowing how to properly hold the butt of a rifle against your shoulder made you a soldier. These days, fighting requires a lot more technical savvy than guts, or physical fitness. \n\n\"I'm talking about technical savvy that takes a lot of time to acquire. Months of training and specialized education that I can't provide. If you're thinking of going as old-school as possible... Do I really have to tell you what happens when a few guys with small arms go up against a bunch of men in combat exoskeletons? It isn't pretty, let's leave it at that.\"\n\n\"Ordinary soldiers with rifles can still destroy robots and mechs,\" an elder said.\n\nYuri shook his head. \"You'd give an opinion on Islamic law while Imam Malik was in Medina, wouldn't you?\" The elder blushed and glared at Yuri, but made no reply. \"Special forces and professional soldiers can take down mechanized enemies with small arms and handheld explosives, yes, but it takes three vital things to do that. One, they must vastly outnumber the enemy. Two, they must have full command of the surrounding terrain. Three, they have to be trained to work together to such an extent that each soldier will not only know the exact best way to react to any move the mechs make, but will instantly know what each and every other man in his unit will do at that same moment. One slip up and half the unit is mowed down in the next instant.\n\n\"That kind of coordination takes even longer to train than the technical stuff. I'm talking a full year, at the least. The Caliphate has entire brigades that are continuously undergoing such training. They're also specially trained and equipped for urban warfare and peacekeeping.\" Yuri sighed. \"I mean, this discussion is completely moot. I was never trained in advanced tactics. I couldn't possibly train such a force for you.\"\n\n\"We don't have that kind of time,\" an elder said to Mansour. \"Not if the reports from the south are true.\" Mansour nodded, sadly.\n\n\"Let's get back on track, shall we,\" Mansour said. \"We need to speak with your general. Can you arrange a meeting between us, or not?\"\n\n\"Not if you're going to ask him for guns.\"\n\n\"We won't.\"\n\n\"Then what would the meeting be about?\"\n\n\"It's futile,\" Kenfer said to Mansour. \"His general doesn't have that kind of authority. Can't have it! I mean, the man recruited Yuri, how smart can he be?\"\n\n\"Major General Moussa Houdani has plenty of authority,\" Yuri said. \"Real authority. He also has plenty of duties that are crucial to the Caliphate. The kinds of duties that you wouldn't know anything about, Kenfer.\"\n\nMansour put his hand on Kenfer's elbow again. \"Do these duties extend to oversight of the Militia?\"\n\nYuri frowned. \"Not usually. Why?\"\n\n\"Can he influence the placement of guards at the checkpoints?\"\n\n\"Maybe.\"\n\nMansour leaned in. \"Would he be willing to appoint some friendly faces at the checkpoints. Friendly faces that might be willing to look the other way?\"\n\n\"You're not seriously trying to arrange for guns to be smuggled in here?\"\n\n\"No,\" Mansour said. \"We're interested in smuggling something out.\"\n\nYuri's eyebrows rose.\n\nKenfer rolled his eyes. \"Us, you idiot!\" He gestured broadly. \"All of us!\"\n\nYuri looked over his shoulder in amazement. The assembled men cast dark looks back. He faced Kenfer again. \"You want to sneak out and leave everyone else behind?\"\n\nKenfer banged a fist against the table. \"No, you idiot! Everyone! Every man, woman and child in the enclave.\" He huffed and then muttered, \"Though it's clear some should be left behind.\" Mansour shot him a warning look.\n\n\"Are you kidding me? You want to try and sneak twenty-three thousand people through the capital?\"\n\nKenfer crossed his arms over his chest and refused to even look at Yuri.\n\n\"Where there's a will,\" Mansour said, \"there's always a way.\"\n\n\"We could divide up into smaller groups,\" an elder suggested.\n\n\"Some classified military transports, maybe,\" another added.\n\n\"Can he get us passes,\" a third elder asked. \"Special passes that would allow for free movement?\"\n\nYuri had to rub his temples again. His headache had been bad before, but this kind of talk was making it worse. \"And where, for the love of God, would you take our people? The desert? The mountains? That would only leave them vulnerable to exactly the kinds of semi-literate rubes that had been hounding us for years.\n\n\"Or, are you thinking of making it across the borders? That's the one thing that would provoke the Caliph into action against us. He can't stand emigration. And even if you managed to get to any of the borders, since when do they allow anyone across? The borders are still officially contested by the Caliph. There's military on both sides. Sneaking past all those watchful eyes is a lot harder than any of you can imagine.\n\n\"Not to mention that none of our neighbors want us there. They deport any one of our citizens they catch on their territory. We all know what awaits those repatriated, don't we?\"\n\n\"We can go north, to the sea,\" Mansour suggested.\n\n\"And then what? Say you get a fleet of boats and load everyone on them. Where do you sail? Half the world is a war zone. And the rest of the world is even worse. 'No fucking foogees, thank you'. Have you never seen the vids? I know you must have. I got half of you your internet access points.\" Some of the elders shifted uncomfortably in their seats.\n\n\"What vids?\" Kenfer asked.\n\n\"Vids of youths attacking refugee camps. They tie up the men at gunpoint, make them watch as they rape the women and then set them all on fire.\" Kenfer's jaw dropped. \"What? You never heard of that? 'The Foogee Burnings'? They're very popular.\" Yuri swept a hand over the table. \"Ask around. They'll tell you. Hell, they can even show you!\"\n\n\"That can't be true,\" Kenfer protested. The faces of the other elders told him it was. \"Where is this happening?\"\n\n\"Everywhere,\" Yuri said. \"Both the GAU and the Bloc tolerate that kind of behavior cause those same groups of violent, ultra-nationalistic youths are pivotal to their recruitment and propaganda machines.\"\n\n\"That's insane.\"\n\n\"We finally agree on something, Kenfer. Sadly, it's completely true. If we try to leave the Caliphate, the Caliph will come down on us. If we were to, somehow, manage to get away, we would only be getting out of the frying pan and into the fire.\n\n\"This is our home. This is where we live, where our ancestors have lived for almost two millennia. This is where we must stand and thrive. The Arabs outnumber us. Vastly. We have to cooperate with them. It's the only way forward.\"\n\n\"I agree with you,\" Mansour said. \"But that doesn't change the facts. The Arabs are planning to hurt us. We can't bury our heads in the sand and pretend that they're not. We need you to put us in touch with your general as soon as possible.\" He leaned forward. \"The situation is dire.\"\n\n\"While you were away, playing with your Arab friends,\" Kenfer said, \"they started tightening the noose. There was no bread delivery today. The medicine delivery didn't come, either. The trash still hasn't been picked up. They're going to make their move. Soon.\"\n\nYuri wondered if his discovery had had anything to do with those. The enclave's management was under military supervision and the military, particularly the forces in the capital, had been thrown for a loop this morning. \"I don't think a day's delay means anything.\"\n\nKenfer snorted in derision and sat back in his seat, shaking his head.\n\n\"Yanuk, please,\" Mansour said. \"Just put us in touch with your general. We know he's not a man that hates based on skin color, or ethnicity. We know he's willing to help us. We just need you to put us in touch, discreetly, and we'll take it from there.\"\n\nAll the elders' eyes were upon him. He could feel the men in the anteroom holding their collective breath. He sighed and then shook his head.\n\nPandemonium erupted in both rooms. Yuri's head was going to explode. The men shouted and yelled, the elders pleaded. Arguments and curses were being hurled at him but, in his ear, they all combined into a sound like fingernails being dragged across a blackboard. \n\nAfter a whole night of beauty and magic watching the supercomputers do his bidding, this argument was like watching someone paint a huge building with a tiny brush; boring and repetitive and unproductive. He didn't want to think anymore. He just wanted to sleep.\n\nThe elders would have none of that, it seemed. They took to grabbing him by the elbows, or shaking him by the shoulders as they listed all the crimes and discriminations their people had suffered at the hands of the Arabs. The crowd in the anteroom shouted abuse at him.\n\nFinally, he couldn't take it anymore. \"Enough!\"\n\nBoth rooms fell silent. He could feel his heartbeat throbbing painfully across the back of his skull. \"Enough. No more.\"\n\n\"You'll put us in touch with the General?\" Mansour asked. He was the only elder still in his seat.\n\n\"No,\" Yuri said and held up an imploring hand. \"I'll tell you why your fears are unfounded.\" Everyone murmured. \"But only you!\" He hooked a thumb over his shoulder. \"They have to go.\" He shook a finger at Mansour. \"And you all have to swear to me that you'll never, ever, repeat what I tell you. Not to a soul.\"\n\nThe elders turned to look at Mansour. He considered for a few moments and then nodded. With just a few gestures, the elders sent the men in the anteroom packing. Kenfer summoned the attendants from the side door and sent them to speed the crowd on its way out the door. A minute later, the attendants closed the front door behind themselves. Yuri was alone in the villa with the elders.\n\nNow that there was silence, Yuri found himself regretting his outburst. He really shouldn't tell the elders. If they told on him, he'd be in big trouble. He reasoned that the news would break soon anyway, but he knew that was no excuse for revealing classified intelligence. He guessed he could probably get away with telling them. He was the master code-breaker, after all. That was bound to net him some leeway and tolerance before any future court-martial.\n\nThe elders sat down and patiently waited for him to start talking. Something about the way they looked at him, even the female ones, reminded him of his grandfather. Yuri missed him and his stories. Even as a little boy, Yuri would get bored of stories quickly. He'd guess the ending and shout it out loud to get the person telling him the story to stop and go away, leaving him free to find another preoccupation.\n\nHis grandfather had been the only one to not get insulted by that behavior. He'd just laugh, rub his head and call him his \"bright boy\". Then he'd tell him another story, a better one.\n\nYuri wiped his face. \"The botched deliveries...those are probably my doing. I deciphered a whole mess of messages last night. There's a massive GAU fleet in the Mediterranean being made ready to invade us.\" The elders gasped as one. \"It'll happen soon. Unless the Caliph manages to talk it out with them. So, you see, we had every single officer in charge of...well, everything, really, come into the School today and that's probably why the deliveries went awry.\"\n\n\"You're not lying,\" Kenfer feebly said. His face blanched.\n\nYuri looked him in the eye. \"I wish I was. Anyway, you must not tell anyone anything about this. You gave me your words.\" He looked around the table as all the elders, even Kenfer, nodded.\n\n\"So, you see, it would make no sense for the Arabs to go on a killing spree, right as we're about to be invaded.\"\n\n\"Madness never makes sense,\" one of the elders said. Yuri nearly rolled his eyes at her.\n\n\"It's true,\" Kenfer said to Mansour, sounding shocked. \"What they were saying. It's true.\" Mansour nodded. All the elders looked to be deep in thought.\n\n\"What's true?\"\n\nMansour stared Yuri in the eye, making him feel judged. After a few moments, Mansour relaxed in his seat and spoke. \"Last month, we received word from our compatriots in the south that a discovery had been made in the mountains. Endless truck convoys have been ferrying heavy digging equipment into the area, ever since. Armed men were suddenly patrolling the entire countryside, making sure no one got close to the digs without permission. Permission not even the local authorities could obtain. There's a lot of speculation as to what they're drilling for, but if the GAU is planning to invade us...\"\n\n\"Uranium,\" Yuri said.\n\nAll the elders nodded, agreeing with his reasoning.\n\n\"Fuck,\" Yuri said.\n\nMansour grinned sadly. \"Pretty much.\" He lifted his cup and took a whiff. \"How do you think this will play out?\" He took a sip of his tea and set it back down. \n\nYuri fidgeted in his seat. Suddenly, he was struck by the weirdness of this meeting. Had anyone told him yesterday that the elders would be summoning him to ask for his help, he would have thought them crazy. Now, not only had they allowed him to insult them repeatedly in front of an audience, but the head elder was asking for his opinion. \n\nHe was too exhausted to think of any reason why he should not give it. \"Well, the Caliph had been spouting anti-GAU propaganda since before the civil war had destroyed the old kingdom. I don't really see him as allying with the GAU, but he's a calculated man. Realistic. He knows he can't possibly win. Our Air Force could challenge the GAU's naval air groups, but my decrypts suggest that the GAU has a lot of air power ready to act from bases in Spain and Italy.\" He could tell that the elders were bristling at his use of the word \"our\", but he kept on talking.\n\n\"Indeed, I guess the primary purpose of their carrier-borne air power will be to defend their fleet and landing vessels against our attacks. Our fleet is chronically under funded. It's severely lacking in ships and trained seamen. The weapon systems are largely obsolete and the electronic warfare suites are laughable. The GAU can sweep the fleet aside in an hour. The real battle will be at the beaches. Once the GAU establishes supply ports, it's game over. \n\n\"We could stall their advance into the hinterland, but not turn them away. Never mind their technological superiority, they'd win by pure attrition. I mean, the GAU can always ferry another million combat robots and their operators to our shores. We don't have a combat robot industry. All our losses are irreplaceable. We have no allies. The Bloc couldn't come to our aid, even if it wanted to.\"\n\nYuri paused as the likely source of Ali's smirk finally dawned on him. The Caliphate was surrounded by hostile nations and the GAU hadn't approached any of them to join in on the invasion. It was standard GAU practice to amplify any pre-existing tensions in a region they were about to attack. They'd play the locals against each other to reduce resistance and gain allies that would help them with the ensuing occupation. "
    ],
    "authorname": "sycksycko",
    "tags": [
        "dream drive",
        "fan fiction",
        "arab",
        "kidnapping",
        "brutes",
        "cowgirl",
        "enclave",
        "virtual reality",
        "teleportation",
        "cheating"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/dream-drive-yuri-ch-01"
}