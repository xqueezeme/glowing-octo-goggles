{
    "title": "Of Witches and Vikings",
    "pages": [
        "This is my submission to the ! I had a hard time deciding on a category as there is group sex, fantasy element but the main story does revolve around two characters, so I've decided on erotic couplings. Enjoy!\n\nI leaned back against the bar, closing my eyes for a brief moment. Just the briefest. The scent of freshly ground coffee beans floats around me. It mixes with too many other scents. Cinnamon, milk, vanilla, leather.\n\nLeather? I snapped my eyes open to find the hottest man I've ever seen waiting patiently at the register.\n\n\"Oh!\" I yelped. \"Sorry, didn't hear you come.\"\n\nHe smiled and my heart clenched right along with my nether regions. Nether regions? Yes, I said it. That's what I've been reduced to as I stare at Mr. Adonis. Tom Hardy and Chris Hemsworth's lovechild.\n\n\"Halloween?\" His voice is as you'd expect. Perfect. Deep and sensuous. Like I was suddenly wrapped in a velvet cloak.\n\n\"Huh?\" I asked, glancing around the little caf\u00e9. There WERE Halloween decorations everywhere. Was he confirming it was indeed October?\n\n\"It has you jumpy. Halloween?\" And his smile deepened as he watched me blink like a moron at him.\n\n\"Oh!\" I giggled. Yep. Me, Rhiannon McKinsey, has turned into a giggling girl that thinks 'nether regions.' \"Yes, sorry, it's just been a long day.\"\n\n\"Maybe you need a coffee,\" he quipped and I melted further.\n\n\"No drinking on the job,\" I snarked back with a wink. I'd recovered a bit but my flirt game had also been cranked to eleven. \"What can I get you?\" I finally asked, letting my eyes dart down his body and then back up to his face. He was at least 6'3\" and his leather jacket couldn't hide his muscled arms and chest. Or his accent. I couldn't place the subtle lilt, something from across the sea. British, Irish...Scottish!? Scottish guys were my kryptonite.\n\nHe still smiled, his dark blue eyes narrowing slightly as he considered me as well. The moment stretched just a bit too long as we appraised each other. Yep, he liked my boobs. I could tell.\n\n\"Espresso con panna, please.\" He paused, leaned in slightly and I blushed as he boldly stared at my boobs. \"Rhiannon,\" he read from my nametag.\n\nHeat screamed up into my cheeks as he glanced back up with a smile. Of course he wasn't just staring at my boobs... \"Rhia,\" I hiccuped out to cover my embarrassment. \"I go by Rhia, actually.\" I laughed weakly as I flicked the nametag. \"My mom had a thing for Fleetwood Mac, she fancied herself a witch.\"\n\n\"How fitting,\" he said as he handed me his card.\n\n\"It got old,\" I said as I rang up his drink. \"Every Halloween I had to be a witch. Even when I was going through my princess faze. We compromised with a crown on my witch's hat.\"\n\nHe threw back his head with a loud laugh and I quickly glanced down to read his card. It was one of those weirdly heavy, pure black cards. 'Alric Conall' it read. Hot name. I glanced back up to Alric, his head was still thrown back and his muscled throat moved temptingly as he laughed.\n\nDumbly, I held the card out as he lowered his head to meet my eyes. If he knew I'd spent the last two seconds memorizing his name and the shape of his Adam's apple, he gave no sign. \"I think you'd look cute in a witch's hat. Crown or no,\" he chuckled as he took the card.\n\nHoly shit. He was flirting back. If my cheeks could go redder, they would have. But they couldn't. I already felt the boiling flush I was famous in my friend circle for. My best friend, Sylvia, always joked that we could never play poker, you had only to glance at my cheeks to know my exact thoughts.\n\nI swallowed, hoping he'd think my flush was just from the hot espresso machine next to me. \"Thanks.\" I rolled my eyes at him as I moved to make his drink.\n\nI felt his eyes still on me as I packed the fine grounds. I wracked my brain for some other sarcastic quip to keep the conversation going. But his dark eyes seemed to drill into my brain, pluck any and all cleverness away. I was left a giggling idiot with moist nether regions.\n\nI set the tiny cup of espresso on the bar and grabbed up the whipped cream from the mini fridge. Still he watched me, a slow smirk settling on his handsome face. \"Con panna,\" I said, trying my best for an Italian accent. \"You have a sweet tooth,\" I added with what I hoped was a shy smile.\n\n\"I do,\" he nodded. And then his eyes again slid down. I felt them like a brand. Down my neck, pausing for a moment at my full breasts in my tight black polo. Down further to my hand that now trembled as I held a dollop of whipped cream poised over the espresso cup. His eyes flicked back up, found me staring dumbly at him. Another slow smile pulled at his lips, though his lovely blue eyes had darkened. Another long moment stretched as we stared at each other. And then the whipped cream dropped with a PLOP into the cup.\n\n\"Enjoy,\" I trilled, much too high, and turned away. I busied myself cleaning the espresso machine and then hurried into the back room, needing to hide.\n\nI leaned back against the walk-in fridge door. The cool metal brought a TINY bit of my mind back to me. I listened. No ring from the door as he left. Instead, I heard the scrape of one of the chairs. I glanced to the clock. Nearly closing time. Licking my lips, my mind fluttered over the possibilities. He was definitely flirting. Should I ask him out. Would he ask ME out?\n\nI straightened. He couldn't ask me out if I hid back here. I hurried to the little mirror over the desk. As I'd known, my cheeks were crimson apples. I smoothed my pale blond hair, debating about undoing it from its high pony. No, that was against the rules. I wasn't getting written up just to flirt with sexy Alric. Hurrying to the sink, I ran some cold water and splashed it against my face, praying I could calm my heated cheeks. At least a bit.\n\nAs I debated about rummaging in my purse for my tiny bottle of perfume, I heard the little bell on the door ring. FUCK! Had I lost my chance with Adonis? Er, Alric? I hurried to the front just in time to see his back retreating through the door. Strong, beautiful broad shoulders filled out his leather jacket. I watched him swing a leg over a motorcycle--of course--and then he was gone. The sexiest man to ever flirt with me and he was gone. He hadn't looked like a biker with his tidy gray button up shirt and black jeans, but the retro bike looked plucked straight from a movie from the 50s so somehow seemed just right.\n\nDisappointment settled into my gut as I watched him ride away. Probably off to fuck his classy, old money girlfriend. She probably only let him fuck her in missionary. Probably complained when she sucked his dick and didn't even swallow. Probably...My eyes fell on a slip of paper left under the espresso cup on a table by the door.\n\nI pushed down the hope that surged in my chest as I stepped around the bar. I couldn't bear another disappointment tonight. I slowly walked to the table and plucked up the paper. It looked to be ripped from a book. Had he been carrying a book?\n\n'Rhia, if you're not busy with your witching duties tonight, come to my Halloween party. -A' I flipped the paper over to find an address quickly scrawled across the back. I recognized the neighborhood instantly. It sat up in the hills above the city. The RICH area of town. I blinked as I stared at the note.\n\nMy nether regions roared in excitement.\n\n<p align=\"center\">#</p>\n\nOne minute before eight I locked up the little coffee shop's door, my mind already back at home and tearing my closet apart for something to wear. Doubt warred with excitement. Should I actually go? What if handsome Alric was a serial killer. Accepting a strangers invite to his house on Halloween seemed unwise...but I hadn't gotten any bad vibes from him. And I couldn't get his chiseled face out of my head. I chewed my lip as I tugged my cardigan around my shoulders and hurried to my car. Maybe he was just being nice? Then would I look pathetic showing up to his swanky party in my discount high heels?\n\nI pulled out my phone and to text Sylvia.\n\nMe: hey girl hey...I know we were just going to stay in and watch movies...but what do you think of going to a party?\n\nThe little white dots appeared instantly as Sylvia typed.\n\nSylvia: but Hocus Pocus... :(\n\nMe: I know...but I was just invited by the hottest man alive to a party. In Pacific Heights.\n\nSylvia's little typing bubbles started. Stopped. Started Again. Stopped.\n\nMe: Please Sylvie...it might be true love\n\nSylvia: well if it's true love how can I say no?\n\nI chuckled as I started my shitty car. Racing home I tried to think what in my closet I could wear for a costume. Something sexy, but not slutty. If only I had a spare ballgown laying around... I glanced at the note for the millionth time, annoyed that he hadn't left his number. Probably a good thing though. I'd scared off one two many guys by my over-eager texting...\n\nRocketing into my front door, I smelled popcorn first. Next the sounds of Sylvia's Halloween playlist assaulted my ears. Rihanna's warbling voice pounded around me. Am I scaring you tonight? she sang. I tossed my purse on the couch and followed the music upstairs to find Sylvia in front of my closet. Several dresses, old feather boas from Pride Week, and other assorted costume components lay scattered on the floor.\n\n\"So what were you thinking?\" she asked. She had a pair of dainty horns I'd worn when I dressed as a deer for Halloween a few years back on her head. Yeah, I know it was a stupid costume. I also know female deer don't have horns. I was twenty-two, give me a break.\n\nI danced across the room to her and shoved a handful of popcorn in my mouth as I surveyed the mess. My eyes fell on the flowy white dress I'd gotten for a weekend in Santa Cruz. I grabbed up the dress and several feather hair extensions. (Don't ask me why I have those. It was a phase.)\n\n\"Forest witch,\" I breathed.\n\nSylvie nodded, her eyes brightening with the idea. \"Weyward sisters.\" She grinned as she grabbed up a black, slinky dress and a leather corset. \"You be light, I'll be dark.\"\n\nI helped style Syvlia's thick, curling black hair, working to set the cute horns. Dark, makeup, thick lines like war paint down her chin and across her forehead. Adding in some leather boots and a fur shawl and quiet little Sylvie turned into a fierce shaman warrior.\n\nWhen it was my turn, Sylvie quickly braided a dozen of the feathers into my long, pale hair. I stared in the mirror at the thick tumble of hair and feathers over my shoulders. The dress was quite modest, with long, gauzy lace sleeves. But then the neck plunged in a deep V. I considered my boobs. Alric hadn't seemed to mind them though I'd always worried they were too small. Barely a B cup. But at least it meant I didn't have to wear a bra with the dress.\n\nI slid a few wrist cuffs on my arms as Sylvia worked on my makeup. I stood half a foot taller than the curvy Sylvie. We'd always joked we couldn't be more opposite. My skin was like cream, hers like a triple shot mocha--extra chocolate. Her large dark eyes peered into mine as she finished up the gentle dusting of pink makeup on my face.\n\n\"You look practically virginal,\" Sylvie said as she stepped back to admire her work.\n\n\"Oh shit, I wouldn't want to false advertise...\" I chuckled as I leaned in to check the makeup. My blue eyes--frankly my best feature--shown bright against the white of my outfit and pale skin. I turned in the mirror, admiring how the gauzy dress flowed, but still somehow clung to my curves. Yes, I have some curves, not a lot, but some. I'm what you'd described as willowy, if you insisted on describing my body. A willow curves sometimes, right?\n\n\"So when are we supposed to arrive?\" Sylvia asked as she turned in the mirror as well to examine her outfit.\n\n\"Oh...I'm not sure. He just gave me the address.\"\n\nSyvlia stilled and turned to face me, her eyes skeptical. \"Mmhm.\" She nodded. \"And what's this guy's name?\"\n\n\"Alric. And he's not a murderer.\" I said quickly as I saw her mind begin to go there.\n\nSylvia sighed. \"Okay, give me the address, I'm looking this up before we go.\"\n\nI chewed on my lip, only now considering the practicalities. Was I really doing this? Going to some random hotty's house after speaking with him for five minutes? I hurried down the stairs and pulled the note from my purse. Alric's neatly scrawled note sent a shiver through me. He wouldn't have left it if he really didn't want to see me again...\n\nI handed the paper to Sylvia. Her lips pursed as she read it quickly then flipped it over. She squinted as she read the address. Then read something else on the paper. \"This is ripped from Macbeth,\" she murmured. \"'Fair is foul, and foul is fair.'\"\n\n\"What?\" I exclaimed and snatched the page from her. In my hurry I hadn't gotten a chance to check it over but now read through the first scene from Macbeth. My heart thrummed giddily. His joke about witches. It was out first inside joke. I grinned. \"It's our thing, witches,\" I giggled at Sylvie as I dropped onto the couch.\n\nShe snorted as she moved to her laptop and quickly typed in the address. Google maps popped up and Sylvie zoomed in on the satellite view of Alric's house. We both sucked in a breath. It sat at the height of Pacific Heights, looking like it took up half a block. \"Holy shit, Rhia. Did you really up your flirt game?\" She cocked her head. \"Or your espresso making game?\"\n\nI barked a laugh and hit her with the pillow. Glancing to the time on her computer my stomach began to roil. Nearly ten. The party had to be in full swing by now. \"Okay, so we can go?\" I asked her, letting a bit of pleading enter my voice as she still studied the map.\n\n\"Yes, we can go. But remember the rules. We don't leave each other. If I get murdered tonight, I'm blaming you,\" she warned.\n\n~\n\nWe arrived at Alric's imposing house in the hills just after ten. After handing my embarrassing car off to a black suited parking attendant, we stood gaping at the house. The curtains were all closed but the soft light from inside glowed at their edges. I strained, hoping to hear a boisterous party in full swing and could just make out the sound of soft music. Violins and piano wafted classily through the air and I spared Sylvia with a skeptical look. Her face matched mine.\n\n\"We're going to look trashy aren't we?\" she asked.\n\nI glanced down to my dress. I thought I looked pretty, but I was envisioning sleek women in ballgowns and elaborate costumes within. I set my mouth.\n\n\"You look badass,\" I said. Sylvia did. A fierce little woods witch that would take no shit. \"Come on.\"\n\nI stepped towards the large doubledoors and slammed the gargoyle knocker quickly a couple times. Only a breath passed before the door was swung open by another black suited man. He was older and swept his eyes over us quickly. Then he bowed and motioned us inside.\n\nBlinking in surprise I stepped passed the man. Butler? Did Alric have a butler? Was that even a job these days? Sylvia grabbed my hand as we stepped into the large entryway. There were costumed people chatting in the foyer with two doors leading to the left and right. I peeked through one to find a smoke-filled sitting room. Several men reclined on wingback chairs and leather couches. I instantly noticed a theme in the costumes and relief flooded me right down to my toes. They looked like they could be extras from Game of Thrones or Vikings. Rustic armor, swords, leather, furs.\n\n\"Oh my god,\" Sylvia whispered next to me. \"We fit right in.\"\n\nI giggled nervously as she spoke my mind. \"I don't see Alric in there, let's check the other room.\"\n\nWe turned from the smoking room and tried the other doorway across the foyer. Within this one was a library. Again, mostly men filled the room, but a few woman were scattered at the tables playing some sort of card game. My eyes darted over the costumed people, none were Alric. I studied the woman. Some wore similar armor to the men, shieldmaidens, while others wore more simple medieval type dresses.\n\n\"Not in here either,\" I murmured to Sylvia.\n\nA roar of laughter rose from further within the house. Still holding Sylvia's hand, I eased into the room, skirting past the tables. I felt the eyes on me then. Normally, I'd be in heaven with the amount of eager eyed men that watched us. The heady scent of tobacco smoke and leather and teakwood filled the library lounge, but I pushed through, not allowing myself to be distracted by the handsome men.\n\nThe library opened up into a long dining room. I gaped at the spread on the table.\n\n\"I'm in heaven,\" Sylvia laughed as she stepped towards the table and plucked a tartlet up.\n\n\"Don't get distracted,\" I warned.\n\n\"Too late,\" an accented voice rumbled from behind us.\n\nI whipped around to find an immense, red bearded man staring down at Sylvia and me. He grinned, his eyes twinkling as he unapologetically looked us over. If I wasn't Alric hunting, he'd have been like catnip to me. Like I said, rugged, accented men were my kryptonite.\n\n\"Too late?\" I asked him, raising an eyebrow.\n\nHe chuckled. \"I'm thoroughly distracted by the sun and the moon.\"\n\nSylvia joined me in raising an eyebrow, though I could see the amusement in her eyes as she looked over Redbeard the Viking. \"Do you use that line on every witch you encounter?\" Sylvia asked, her voice dipping sensuously low.\n\n\"Only the sisters of light and dark. The most beautiful ones.\" His grin deepened, crinkling his bright blue eyes. Again his eyes swept down us and I felt every inch of his appraisal. A thrill raced up and down my spine, there was admiration, that first spark of lust in his expression. Well, if Alric did happen to have a girlfriend then it looked like I had a back-up.\n\n\"We've just arrived, do you know where Alric is?\" I asked.\n\nHis gaze snapped back up to my face as his expression fell a bit. He nodded. \"Aye, he's on the back terrace.\" Suddenly his huge arms were wrapping around my and Sylvia's shoulders and he was leading us from the dining room towards the back of the house. \"Come, wouldn't want Alric's lass to get lost.\"\n\nSylvia and I shared a look, but let Redbeard lead us towards the back of the house. Other guests, all wearing similar styled costumes moved out of our way though I still felt their eyes. Gentle Celtic music thrummed through the gathering, punctuated here and there by an uproar of more laughter. And I began keeping track of the man to woman ratio. There were easily four times as many men as women, so I began to understand the curious eyes that followed us.\n\nLarge French doors were thrown open to a back garden. It seemed this was where the real party was. Dozens more Vikings and extras from Lord of the Rings filled the terrace and garden. A five-person band was the source of the music in one corner and the space in front of them was filled with swaying bodies. I swallowed as I registered only perhaps five women in the press of bodies. They moved sensually to the music. One woman with a mass of curling red hair was surrounded by several men. She laughed, her eyes closed as she threw her head back and was spun around the group. As she leaned into one man, pressing herself against his armored chest, another moved behind her to cup her swaying ass.\n\nI paled, worried for a moment she was being harassed, but then she again laughed loudly as another man grabbed her waist to lift her in the air. I realized we paused to watch, Redbeard's heavy arm was still draped over my shoulder.\n\n\"You like to dance?\" he asked.\n\n\"I love it,\" Sylvia breathed.\n\nI stiffened, shrugging his arm off me as I remembered myself. Now that we were out on the terrace, I let my eyes drift from the dancers to search out Alric. There were pockets of guests reclining all along the shadowed garden. I began to chew my lip, imagining Alric entwined with his girlfriend on one of the lounges. Though it was dark, there was a large firepit in the center of the space and a few torches scattered. I suddenly felt hot, nervous and regretting even coming in the first place. This was so far out of my depth, I felt like an idiot...",
        "\"Ah, there he is,\" Redbeard rumbled.\n\nMy head snapped to follow where the hulking Viking pointed. Alric reclined at the center of a large group. He was just as handsome as I remembered. More. He wore all black leather armor with silver chainmail accents. His blonde hair was pulled back, tied with a simple cord. He gave off dangerously-sexy assassin vibes and my nether regions again expressed their delight. And he was watching me. I blinked as our eyes met across the crowded garden. How long had he sat there watching? I felt another flush race up my neck as I registered his intense blue eyes.\n\nThen I registered the woman that leaned toward him. She was lovely. Thick black hair fell in a tumble over her shoulders and she filled out an intricate black dress in a way I could only dream of. I hated her instantly.\n\nSuddenly I felt Redbeard's hand on my elbow and I was being guided through the press of bodies. \"Come on, don't want to keep him waiting,\" he rumbled.\n\nI glanced to Sylvia, panic beginning to set in as I realized I was about to meet Alric's gorgeous girlfriend. My embarrassment would know no bounds. Redbeard's arm was still over my small friend's shoulder though and she now laughed at some joke I'd missed. I looked back to Alric, startled to find his eyes still on me. A small smile tugged at his lips and though the group chattered around him, his eyes seemed to pin me.\n\n\"Alric!\" Redbeard roared as we finally broke through the crowd. \"Look who I've found.\"\n\nAlric's dark blue eyes flicked to Redbeard and he gave him a sharp nod before letting his gaze slide to the Viking's hand on my elbow. Instantly Redbeard dropped his hand, as if scalded by my skin.\n\n\"Thank you, Kristof,\" Alric murmured, his eyes already slipping from the red-haired Viking and back to me. \"Rhia. You made it.\"\n\nI gulped, glancing between Alric and the group he sat within. All eyes were now curiously turned to me and I knew my blush was back in full force. \"Thanks for the invite. Your house is lovely.\"\n\nThe smile still pulled at his mouth as he finally spared Sylvia a look. \"And you've brought a friend.\"\n\n\"Sylvia,\" she said quickly, smirking and courtseying dramatically. \"I'm here to make sure you're not murderers.\"\n\nKristof--Redbeard--roared a laugh and pulled Sylvia back to his side. \"I like this one.\"\n\nAlric stood smoothly and then he was in front of me. Somehow, without a coffee counter between us, he felt more real. His eyes again ran over me as he cocked his head, the smile now in full force on his handsome face. \"The witch Rhia...\" he murmured as he held my eyes. \"Let's go for a walk.\"\n\nI glanced to Sylvia but she just grinned and gave me a nod as she leaned into Kristof.\n\n\"Okay,\" I said, but Alric is already taking my elbow to lead me from the bright terrace.\n\n\"I didn't know if you'd come,\" he said after a moment. We'd gone down a couple stone steps and now walked with a thick hedge maze. His hand slid from my elbow to the small of my back, gently leading me onward.\n\nI looked up to meet his eyes, now nearly black in the dimness of the night. \"I didn't know if I would either. You really could be a murderer.\" I glanced pointedly to the--hopefully--fake knives in his belt.\n\nHe chuckled softly as he looked down at me. \"A witch of your power has nothing to fear.\"\n\nSuddenly a screech of laughter startled the stillness around us. A woman turned the bend just ahead, followed quickly by a couple men giving chase. They barreled past us, yelling and laughing and I stumbled out of their way. Alric's arm is suddenly around me, pulling me back as the small group disappears again.\n\n\"Sorry,\" he murmured, though he doesn't release me. Instead his hand slides up my arm to brush my blond hair from my shoulder. As his fingers brush against the skin of my collarbone, I shiver, lifting my eyes slowly to meet his gaze.\n\n\"Do you have a girlfriend?\" I blurted out.\n\nHe jerked back, his hand sliding back down my arm to lightly hold my wrist. \"A girlfriend?\"\n\nHis chiseled face knitted in confusion as he studied me.\n\n\"Yes. I just...I saw the woman you were sitting with. I don't want to step on any toes.\"\n\n\"Jillian is rather beautiful,\" he nodded.\n\n\"Yes,\" I agreed. My heart fell a bit. \"I saw how she looked at you. Possessive.\"\n\n\"Yes. But I'm here with you.\"\n\n\"So there's nothing...there?\" I pushed.\n\n\"I'm here with you,\" he said again.\n\nAnd his hand slid back up to cup my neck tenderly. Slowly, Alric traced his thumb along my skin, along my jaw, under my chin. Gently he tipped my head back and I found myself leaning into him, letting my head fall back. I could feel every pulse of blood within my throat. The brush of his breath against my skin. A shiver rippled through me in anticipation of his lips touching my skin. My eyes were closed, waiting, begging him to taste me.\n\nSuddenly a new sound began to echo through the thick hedges. Soft pants, low moans. A woman's voice let out a long, high whimper and I snapped my eyes open. Alric still stared down at me. So close, his head slightly cocked as he studied my face. As if...looking for my reaction.\n\n\"What is that?\" I whispered, though I knew.\n\n\"Come,\" he murmured and slid his hand back down my arm.\n\nI let him lead me deeper into the garden. At the center is clearing and the group we saw before and several others fill it. The wild-haired woman was stretched on the ground naked except for a pair of white thigh-high stockings. One man had her wrists pinned to the ground above her head while another's head was buried between her thighs.\n\n\"Oh my god,\" I squeaked and begin to move toward them. The woman's breathy moan of pleasure stopped me in my tracks. So...consensual. Heat rose in my cheeks as I stumbled back, trying to turn away from the other sights and sounds in the clearing. Another group lay within a small gazebo. One man laying prone while a curvy woman kneeled on all fours over him. She has his cock in her mouth while another man kneels behind her, his face pressed against her ample backside.\n\n\"What the...\" I started as I turned away, right back into Alric's chest. I stiffened, biting at my lip as I looked up at him.\n\n\"You can just watch. Or...anything you want.\"\n\n\"What is this?\" I whispered harshly to him, trying to block out the erotic sounds behind me. But I already felt the stir of my own arousal. Alric so close, his thick chest the only thing I could see as I tried to avoid his eyes. \"Did you invite me here for this?\"\n\n\"I invited you because I wanted to see you again. I had no expectations. Only hope.\" His voice was soft in the warm night air. It settled over me like the supple leather of his pants. (Yes, I noticed his sexy black leather pants and the way they perfectly hugged his muscled thighs. Of course.)\n\nI licked my lips, finally risking looking back up to meet his probing eyes. \"This is like...a sex party?\"\n\nHis low chuckle rumbled through his chest and my hands itched to snake up his body to press against his hardness. \"My...people believe in the sacred night of Samhain. This is the time when the veil is thin. When spirits walk among you, hungry for what it was to be alive. Tonight is the start of the darkest part of the year. It's a time to hold each other close, to ward of the death of winter.\"\n\n\"So, yes. A sex party.\"\n\nHe chuckled again as he pulled me tight against his chest. \"It can be any sort of party that you want Rhea. Just say you'll stay. Spend this evening with me.\"\n\nI swallowed and glanceed back over my shoulder to the clearing. The white-stockinged woman was arching her back, thrusting her hips rhythmically as her breaths come faster and faster. Her arms strained but the man pinning her wrists only smiled cruelly and gripped her harder.\n\n\"Why are they holding her down like that?\" I whispered. It seemed so wrong.\n\n\"Because she likes it.\" Alric's hand moved up my arm again to gently cup my neck. His thumb again traced my jaw, pulling my eyes from the scene back to his piercing gaze. \"You're stunning Rhia. So beautiful,\" he murmured as he continued to tenderly run his finger along my skin.\n\nI felt entranced. His touch like a brand tracing over my skin, sending heat coiling within me. I couldn't look away from his eyes. There were candles all over the small clearing behind us and they lit his face softly in the night. I tred to imagine how I must look to him. Stunning? Me? He was the stunning one. I wanted to stand on my tiptoes and trace his chiseled jaw with my lips. Taste the fullness of his lips with my tongue. I wanted to press my cheek against his as he fucked me.\n\nBehind me, the woman in the clearing was reaching a crescendo. She cried out, her voice rising and falling in a panic. Finally, she must have climaxed as she gave a long wail of glee and then there was just low pants again. A part of me ached to turn and watch the lustful show. The larger part of my was still held by Alric's eyes. We seemed to ride a tide of the woman's passion together.\n\nAnd then there were new sounds. Harsh grunts. A squeal of surprise. The sound of slapping. Finally I did turn, my curiosity winning out. The woman was on all fours. The man who'd held her arms now pressed her face against his crotch. She choked on his cock as the other man knelt behind her, slamming his hips against her ass. Arousal, then--surprisingly--jealousy snaked up through me. At that moment, I'd kill for Alric's cock to be inside me.\n\nHis hand was still on my neck, though he stilled and I wondered if he followed my eyes as well. He could easily see over the top of my head. Did he think the same thing? His other hand took my waist and softly, patiently, tugged me closer to him. My body felt liquid and I flowed against him. Still, I watched the fucking couples in the clearing, unable to tear my eyes from the pulsing forms.\n\nAlric's lips dropped to my neck and I sucked in a breath in the same instant. With every gentle kiss along my neck and throat and to the little moon behind my ear a tingle of lust shot straight to my center. I wanted to move my head to capture his lips with my own, but also felt stuck in place, able to only melt against him and the pleasure in the scene in the clearing.\n\nHis lips moved up to my ear, took the lobe in his mouth as his tongue flicked against me. Finally I moaned slightly as my eyes closed and my head dropped back. He could have lowered me to the ground and fucked me right there along with the other couples and I'd have gone willingly.\n\nInstead, he whispered in my ear, \"Come.\"\n\nAlric's lips left my skin as he straightened. His hand still held my waist, but now the other slid from my neck to take my hand. I stood slightly shaky as I opened my eyes to meet his. He smiled coaxingly, dipping his head a bit to catch my eyes. It felt like it took ages before my senses came back. I knew I stood there, leaned against him, staring stupidly up at him for far too long. I even registered the stiffness of his cock against his leg. And I knew I was already soaking wet.\n\n\"Okay,\" I murmured and let him turn me to lead my out of the garden. We moved towards the sounds of the party, the bright light from the torches and firepit glowed up ahead. I began to have second thoughts. Were we going up to his room to fuck? Was that it? Did I just come here to fuck him? Should I find Sylvia and make sure she was okay? Thoughts raced through me as we neared the terrace again.\n\nAs soon as we ascended the couple stone steps we were enveloped by the boisterous crowd. The music was in full swing and now nearly the whole terrace was filled with dancers. Alric laughed loudly as he pulled me close against him again and we joined the dancers. Surprise lit up through me as I realized he wasn't just leading me back inside to fuck. I grinned happily up at him as we spun through the crowd. Eventually we crashed into Sylvia and Kristof. The large Viking lifted my small friend in the air, smashing his lips into hers as Sylvia clung to his neck. Their kiss broke and Sylvia spotted me and forced Kristoff to set her back on her feet.\n\n\"There you are!\" she yelled over the music and pulled me into a hug, away from Alric.\n\n\"Having fun?\" I had to bend down a bit to say in her ear.\n\n\"Yes!\" she sang and spun me in a circle.\n\nAlric's hands were back on my waist then, pulling me back into him as Kristof grabbed Sylvia back up. I swayed, wrapping my arms around his neck as I let him guide me through the crowd. I wanted badly to nuzzle my face into his neck, but instead threw back my head to shake out my long hair. Hoping I created a 'sexy, free spirited' vibe. The feathers in my hair had to help...\n\nAs we danced Alric was constantly slapped on the back, pulled into a quick conversation, or forced to part from me to shake a hand. It only made sense...it was his party. But somehow the attention paid to him by the partygoers made him even sexier.\n\n\"You're popular,\" I stood on my toes to yell in his ear as a couple large Norsemen greeted him with yells and slaps on the shoulder.\n\n\"They come from all over for the night of Samhain. It's become my specialty,\" he bent to speak in my ear. His breath sent a new round of shivers down my spine.\n\nHis lips didn't leave my ear. Instead he began to trace them back down my neck. His hand on my back circled me, pulling me tight against him and I finally let me head fall against him. I rested my cheek against his broad chest. The woodsy smell of leather and smoke filled my nose as I tipped my head up to his.\n\nHis lips were on mine in a blink. He pressed firmly against me and I instantly parted my lips, inviting him deeper. His tongue darted against my lips, tasting and teasing as we began to meld together. He nipped at my bottom lip and my legs turned waterlogged as I melted against him. He held me tighter, pressed his mouth more urgently against mine as he sucked the breath from me. His hand slid up my back to cup the back of my neck, holding me tight against him.\n\nI felt the stiffness of his growing arousal against my center as we moved. I pressed into him, eager to feel him with the rhythm of the music that wafted around us. Alric sucked in a breath and then his hand on my neck grabbed up a handful of my hair, tugged my head back. Our mouths broke apart and then his fell on my throat. I grabbed at his shoulders, gasping from his sudden onslaught. His tongue ran along my skin, his teeth grazed under my chin. He bit lightly along my jawline. I began to pant, my own arousal now screaming for him. I felt the slickness between my legs, the ache grew, sharper, more urgent.\n\n\"Alric,\" Kristof's deep voice broke the spell.\n\nI stiffened, snapping my head back up and my eyes open to find Kristof and Sylvia smirking at us. I reddened, but Sylvia only gave me a coy wink. It seemed my forest-witch friend was having just as much fun.\n\n\"What is it?\" Alric asked Kristof. He still held me tight against him and now I studied the lines of his face as he looked at his friend. His eyes were dark and his jaw clenching slightly. I imagined in irritation at the interruption. My heart thrummed.\n\n\"Jillian says they're nearly ready to perform the sacrifice,\" Kristof said.\n\n\"What!?\" I squeaked and jerked back from Alric.\n\nHe and Kristof both barked a laugh. Then Alric dropped a gentle kiss on top of my head as he finally dropped his arms from me. \"Just a play we put on. It's tradition.\" His gentle mouth smiled at me as he dipped his head to catch my eyes. \"We'll be back shortly.\" With a weighted glance, they turned to slip back through the roiling bodies. I followed Alric's path, easy in his shadowy black clothing, as he cut a swath across the terrace. Jillian stood at the bright French doors and together the three disappeared back into the mansion.\n\nI chewed at my lip as Sylvia grabbed my arm and pulled me into a dance with her. I still felt the craving deep within. Between my legs. Those pesky nether regions. I felt drunk though I hadn't had anything to drink since arriving. My heart hammered and my mind whirled as Sylvia spun me.\n\nI'd come to this strange man's sex party and was just about ready to let him finger me on the dance floor. Not like me. And would that be all it was? A wild, debauched night I'd tell my friends story about in a few years? I glanced back towards the doors as I danced. As stupid as it was. I liked Alric. I didn't want to just fuck him. But I was likely just another girl he wanted to bang at his yearly wild Samhain party.\n\n\"How can you look bummed right now?\" Sylvia yelled over the music.\n\nI finally shook myself back to the present and realized she danced with two men across from me. Both wore thick fir cloaks, \u00e0 la Jon Snow. One slid his hand down Sylvia's hip to move with the music against her thigh. The other had his hand on her stomach as he leaned in to whisper something in her ear. I blinked at her. She'd always been a bit more...openminded than me. But even this was a bit much.\n\n\"I don't just want to be a fuck,\" I shrugged at her. It was then I realized that we were practically surrounded by the manly men. Fur and leather and every type of sword between a cutlass and a broadsword. A veritable sausage--er, sword party.\n\n\"Tonight is the night of the dead. If you're ever going to let loose and just live tonight is it, Rhia.\"\n\nHer dark face was earnest, though a sly grin tugged at her as she leaned against one of her admirers. He slipped a hand around her, brushed testingly against her breast. I'm sure my face was turning that horrible shade of pink as I watched. Sylvia's grin only deepened as she closed her eyes and ground her hips back against Jon Snow. His hand returned to her breast, cupping it gently as he pulled her back against himself while his friend moved in front of her to begin running his hands down her thighs again.\n\nI turned away. Found myself against a press of bodies. A rugged blonde bearded man quirked his mouth at me. Another wearing a kilt and a loose linen shirt spun me as he laughed good naturedly. A man with a glistening head of black hair gripped my waist and lifted me into the air, spinning me above the crowd. I found myself laughing, the buoyant music working its way into my blood. A new pair of hardened hands gripped one of mine and twirled me quickly before passing me to a stout, bulky man with a shaved head that dipped me so low my hair brushed the ground.\n\nI landed in the arms of the blond bearded man. He had a sharp nose I rather liked and kind, closely set eyes. Long, braided hair fell down his back and I wondered for a moment if it were a wig...\n\n\"You float like a Valkyrie through a battlefield,\" he said into my ear.\n\nI smirked at him. \"I'm not a Valkyrie. I'm a witch.\"\n\n\"Ahh,\" he laughed. \"Yes, a follower of Freyja. A sei\u00f0kona, I know.\"\n\n\"A what?\" I asked. I realized he spoke with a thick accent, similar to Alric's but heavier.\n\n\"The sei\u00f0kona. Alric has a knack for finding you.\"\n\nI frowned at him as I pulled back slightly to study him. \"What are you talking about? What's a seth,\" I stumbled on the word he'd said. \"Sethkona?\"\n\nA trill of a horn blasted through the air and the band immediately quieted as all eyes turned back to the terrace doors. Alric strode through the doors and the drummer began to pound a slow rhythm. Behind Konrad, nearly a dozen men ushered two figures out. Jillian and Kristof, both now dressed in simple white clothes. Jillian's a thin dress, Kristof in only a pair of breeches. I frowned. This was...getting creepy. As the group pushed through the crowd I realized their hands were bound and leather collars were secured around their necks.\n\nAs they drew closer, moving towards the large bonfire at the center of the terrace, Sylvia's hand grasped my shoulder. \"What the fuck?\" she whispered as she leaned into me.\n\n\"Right?\" I breathed as I stood on tip-toes to watched the procession.",
        "\"He said sacrifice...\" she said.\n\nI nodded, my cheeks heating as fear tickled within me. It was a game. Some silly, weird, sex...thing. I grasped Sylvia's sweaty palm. Alric came to a stop in front of the fire and Jillian and Kristof were pushed forward. Finally, I noticed the long, narrow tables that were carried along with them. The heavy wooden tables--alters?--were placed on either side of the fire and Jillian and Kristof both moved to one each, dropping down and slowly laying back on them. I realized the entire party had gone silent save for the low drumming that had been joined by an eerie harp.\n\nAlric stood completely still though his eyes flickered around the faces in front of him. Sylvia and I stood in the middle of so many tall men, I was sure there was no way he could spot me. A part of me wanted to push forward, to meet his eyes, another wanted to slink away, to hide from whatever strange thing I'd gotten myself into. The two parts were at an impasse though, and so I stood rooted, hiding from Alric's eyes, but not running.\n\n\"Brothers and sisters! Warriors and witches. Shamans and sei\u00f0kona. Tonight is Samhain. When we all walk together as equals. Two humble sacrifices are offered tonight. They come with trusting hearts and aching souls. We shall free them.\" And now deep voices all rumbled around me as they recited with Alric, \"And they shall free us.\"\n\nMy eyes widened as I met Sylvia's look. 'What the fuck?\" she mouthed to me. I tore my eyes from her to continue watching. Alric pulled a viciously curved dagger from his belt and stepped towards Kristof. With a few well-practiced slices, he tore the large, red-bearded man's breeches away. My cheeks burned as red as Kristof's hair as his large--quickly getting larger--dick was freed. Before I could decide if now was the time to run, Alric stepped around the fire to Jillian. With another quick slice of the dagger, her dress fell away and Alric tossed it in the fire. With a jerk of his chin, the surrounding men stepped forward and proceeded to tie Jillian's and Kristof's limbs to their tables. They stretched both out and my eyes darted back and forth between them. Kristof was huge, muscled with dark red hair covering his broad chest. Jillian had a perfect body, and as I slid my eyes down her large breasts to her thick hips, I found myself chewing on my lip, unsure what emotion ran through me. Her black hair tumbled in shining waves from the table and she arched her back slightly as her wrists were bound. I ripped my eyes from her to find Alric. He'd stepped back again, looking for all intents and purposes like a presiding warrior-king.\n\nHis eyes slid cooly over Jillian, then again lifted to search the crowd. Could he really be searching for me? I debated again pushing forward for a better view, and to let him find me. But somehow I stayed rooted in place. I remembered the blonde warrior I'd been dancing with only minutes before and turned my head to find him again. He stood close at my back and smiled as I met his eyes again.\n\n\"What is this?\" I whispered.\n\nHis smile widened as he leaned down to whisper in my ear. \"This is your first?\" I nodded and he continued quietly. \"The sacrifice. They give their bodies to be used tonight.\"\n\nI licked my lips and turned back to the scene. Both were now tightly bound and helpless. Alric stepped forward again and raised both arms slowly and the slow, rhythmic music swelled as the other instruments joined the drum and harp. Feet began to stamp all around us and I glanced down to Sylvia, but her eyes were fixed on Kristof. And then Alric dropped his arms and the crowd surged forward. I was carried so quickly forward by the press of bodies that I lost Sylvia's hand. Lost sight of Jillian and Kristoff and Alric ahead. I felt a hand on my waist. I was pulled back into the bearded warrior's chest and he grinned down at me as I was pressed forward into another man.\n\nAnxiety shot through me as the breath was pushed from me by the swollen crowd. I cried out, trying to push away from the bodies around me as I began to feel hands grabbing at my waist, my arms, slipping over my stomach. I searched around desperately for Sylvia, but she was too short, impossible to find among the large, armored men. I felt carried by a tide of grabbing hands, leather armor, rumbling voices.\n\nThe jostling crowd slowed and I found myself stuck in a pocket. The blonde bearded warrior was still at my back, both hands now gripping my waist tightly. I tried to twist from him, but only found myself pressed against the chest of another Viking. He slipped his hands up my stomach as he leaned into me. I tried to jerk from him, but it was impossible. I was pressed on all sides.\n\nPanic stole my voice and I found myself whimpering as I tried to slither from the clutching hands. Confusion arced within me. Was this what I signed up for? Sylvia seemed happy enough to roll with this strange evening. But I couldn't just give in. My body went rigid as the wrongness tickled across my skin with every touch.\n\nAnd then every hand dropped from me. I suddenly had air to breath and I stood, shaky and shivering as I glanced around with bleary eyes. A dark figured stepped through the broken crowd and suddenly Alric was pulling me against his chest to lead me out of the crowd.\n\nMy head spun. Again like I was drunk, the last few moments had felt like I'd swum in the ocean for days.\n\n\"Are you all right?\" I finally registered Alric's voice. Dipped low in concern.\n\n\"I...\" I blinked and finally met his bright eyes. \"I'm not sure. I feel dizzy,\" I admitted.\n\n\"It's the magic,\" he said and weaved us through the crowd. We re-entered the large French doors and moved through the now nearly-empty rooms. When we reached the quiet library he finally loosened his grip on me and led me to a leather couch under the windows.\n\nI dropped down next to him, my head reeling. Had he said magic? I shook my head. \"Did you say magic?\" I said, surprised at the shrillness of my voice now in the quiet of the library.\n\n\"Yes.\" He nodded.\n\nI blinked slowly at him, waiting for the joke.\n\nA smiled tugged at his mouth as he watched me. This close to him again I felt the rush of heat within my chest. It stole my mind from me, just as I was getting it back.\n\n\"I'd thought, when you said you were a witch, that you knew about this. That you'd be prepared. I can see I...misunderstood.\" He looked apologetic. I frowned as I ran back through our conversation at the coffee shop.\n\n\"My mom thought she was a witch. But she was nuts.\" I pulled my hands slowly from his. \"Like I think you are.\" Disappointment sat heavy in me. Leaving my bones too heavy. Of course the hottest guy that ever showed interest in me was batshit.\n\n\"You have the blood of a sei\u00f0kona. I sensed it the moment I saw you. I don't think your mother was nuts,\" he said the word like it was distasteful.\n\nVAMPIRE. The word screamed across my vision as soon as he said blood. \"Holy shit, are you a vampire?\" I blurted as I drew further back from him. Vampires were hot, no one sane could deny that...but I didn't want to be a meal.\n\nBut Alric threw his head back with a throaty laugh. He laughed and laughed until he had to wipe a tear from his eye. I slumped, glaring at him now, realizing I was the butt of some stupid joke. \"Okay, I get it. I'm an idiot,\" I grumbled.\n\nHis chuckles slowed and he grabbed up my hand again, forcing his face back to an earnest expression, though his eyes still glittered with laughter. \"No, not a vampire. I don't think they exist. At least, I've never met one. I'm just a man.\" He laughed lightly. \"Though older than I look. I can sense the magic within you. Sei\u00f0, it's in your blood. You're naturally attuned with it.\"\n\nI stared skeptically at him. \"And you're just a man and can sense this?\"\n\nHe cocked his head, smiling gently as he studied me. \"Perhaps I'm a bit more than a man. Or less, depending on how you look. But yes, I can sense magic in others. I thought you knew, and were just being coy.\" He grimaced.\n\nI laughed weakly, still thinking I should extract my hands from his and find Sylvia, but also it was so easy to sit and let this beautiful man tell me I was magical...\n\n\"So...what's going on out there?\" I changed the subject as I jerked my head back the way we'd come.\n\nHe shrugged slightly. \"The sacrifice. A...trading of magic. Those of us that need magic to survive come together with those that are thick with it. The sacrifice is like...a magic buffet.\"\n\n\"And you're still insisting you're not vampires...\" I said.\n\nHe laughed again as he shook his head. \"No blood. Just...well, we can go watch if you want? If you're really curious.\"\n\nI chewed at my lip again as I studied this handsome weirdo. He looked like he actually believed what he was saying. Would it hurt to just play along for the night? I sighed. It would be a good story at least...\n\n\"Fine, I should find Sylvia anyways,\" I conceded.\n\nAlric's face lit with a pleased--albeit slightly surprised--expression and he gripped my hand tightly as he pulled me from the couch. Though I was still convinced he was a bit nuts, I couldn't help my pattering heart at his boyish excitement. He tugged me back through the cavernous house towards the sound of revelry. A few partygoers were still inside though. Most were wrapped around each other, apparently uninterested in the show on the terrace.\n\nThe crowd still surged though had calmed from its nearly manic movement of a few minutes before. I registered the sounds. Loud moans, a woman's breathless keening. Alric slipped through the crowd like a knife, they parted around us and suddenly we were front row to the tableau in front of the large fire.\n\nMy eyes instantly went to the loudest sounds. Jillian was still stretched on the table. A man knelt over her, hiking her hips up as he drove into her. She bucked against him as she wailed, though she was helplessly pinned by another couple men whose heads seemed latch to her full breasts. Several more were dotted down her body, running their tongues along her neck, down her thrashing legs as they helped hold her down.\n\nI gritted my teeth and glanced up to Alric. He stared down at me, watching for my reaction. I flicked my eyes back to the erotic scene right as the man thrusting into her bellowed as his thrusts grew frantic. As he came, he smashed his thumb against Jillian's sensitive center. She screamed out, her face heating red with her own orgasm. And then the group shifted, another man positioned himself between her legs, pressing slowly into her as he thumbed at her clit.\n\n\"Please, more,\" she moaned out as she was speared again.\n\nI tore my eyes from her to Kristof. He was similarly surrounded by both men and woman. And then shock quaked through me as I registered the woman that straddled him. Her dark skin sucked in the light from the fire as her black mane of hair fell over her shoulders. Sylvia moved sensuously against Kristof. She rode him, her small hands buried within Kristof's thick chest hair. Another woman knelt over Kristof's face, facing Sylvia. As Kristof devoured her pussy, the pretty blonde woman moaned into Sylvia's lips. They rocked against each other and on Kristof. A couple men stood on either side, their eyes dark with lust as the squeezed at Sylvia's and the other woman's breasts and asses.\n\n\"Oh my god,\" I whimpered as I watched Sylvia. Arousal coursed through me, quickly followed by embarrassment. I gripped Alric's hand fiercely as I watched. He stood behind me now and I became too aware of his chest at my back, his breath against my crown.\n\nAnd then his other hand slid up my back. So slowly he traced along my thin dress. He brushed just the edge of my breast, and then snaked over my chest, up to lightly cup my neck. I swallowed, knowing he'd feel the movement. Then I leaned back into him, letting my head fall back against his chest.\n\nHis breath quickened against my hair and the hand on my throat squeezed ever so slightly as he pressed his quickly swelling length against my ass. I shivered as I registered his arousal and his other hand moved to my belly to hold me more tightly against him, pressing me back against his groin. And still I watched the show in front of me.\n\nBack and forth my eyes darted. I wanted to be Jillian, helpless and pleasured in every way imaginable. I flicked my eyes to Kristof. Sylvia was now leaning back, as her back arched, her petite breasts exposed now to the men that crowded the table. The blonde Viking from earlier took her nipple between his lips while others just ran their hands over her, assisting her as she rocked her hips against Kristof. The other woman had climaxed and rolled from the table and Kristof had a brief moment where he was free to watch in awe as Sylvia speared herself on him. And then Sylvia began to bounce faster. She moaned rhythmically as she picked up the pace, her fierce face turned up to the moon as she was enveloped in a climax. She screamed out, rocking frantically against Kristof as the men around her held her upright.\n\nAs she slumped, one of the John Snow's from earlier helped her slide from Kristof's still hardened cock. Sylvia melted into him, wrapping her legs around his waist as he carried her towards the perimeter of the terrace. There were dozens of couches and daybeds and cushions spread over the area and John Snow carried Sylvia to one where several other men waited. He dropped to his knees and dropped Sylvia down in front of him. As the men around her collapsed on her, kissing along her neck, kneading at her breasts, she tugged at John Snow's pants, her eyes mischievous.\n\nI realized I'd gone stiff in concern as I watched my friend. My arousal turned to worry as I watched her. But she seemed to be having a great time...The sheer number of waiting men that hungrily watched Sylvia and even me--though Alric's presence against my back deterred them--seemed so dangerous.\n\nMy head was still leaned back against his chest, but now I finally peeled my eyes from Sylvia to look up at Alric. As normal, he watched me. It was like we were on an island by ourselves when I met his eyes. Even though I distantly still heard Jillian's cries--now joined by a dozen others--Alric was the only thing that existed.\n\n\"Why are there so few woman?\" I whispered.\n\nHis expression was unchanged as he answered. \"There have always been more women with magic in their blood. An imbalance in the universe. Your mothers, they were the first to help my people to survive in Midgard. They found on Samhain they could give us life again. To stay one year. Until the next Samhain when the ritual, the exchange of magic and life force would grant us another year here.\"\n\nI frowned as I studied him. He looked down at me so earnestly. \"I don't understand.\"\n\nHe smiled gently and though I tried to convince myself he was nuts, his belief was making me want to believe. \"Your pleasure gives us life,\" he said softly.\n\nAs another man yelled out as he orgasmed within Jillian, I felt it. The pulse of something. Of heat and arousal and life against my face, my chest, burning into my hands and feet. I tore my eyes from Alric and looked to the fire again. Jillian glowed. Her skin was bright, pulsing golden and burnt orange light as she arched on the table. Another man scrambled between her legs and slammed into her with one smooth stroke, burying himself deep withing her red and swollen pussy. She moaned, flipping her eyes open. Her eyes found me instantly and the manic lust within them startled me. She slid her gaze up, and I knew she now held Alric's eyes as he stood behind me. She tilted her hips invitingly as the naked Viking on top of her pounded into her.\n\nAlric's hands were both frozen, unmoving. One still rested on my stomach while the other lightly held my throat. Jealousy coursed through me as I watched Jillian watch Alric as she was fucked. I tilted my hips back, pressing my ass against him.\n\nInstantly Alric's hands tightened on me. His head dropped down to my neck and his lips brushed my ear. I clenched, need arcing down my body as I felt his breath on my skin. My hands had been hanging limp at my sides, but now I slid them back to press against his thighs behind me. As I'd noticed earlier--leather pants...--his legs were deliciously muscled and the feel of his hard, manliness sent my pussy aching.\n\n\"Would you like to go check on your friend?\" he murmured against my ear.\n\nMy eyes blinked drunkenly as I tried to understand what he said. Sylvia! I shook my blind lust away and looked back to where I'd last seen Sylvia. She lay stretched still on a daybed. A stout, muscled man slowly fucked her while a few others administered to her breasts and other body parts. My cheeks flushed as I watched. Alric's hand slid up my belly, cupped lightly under one of my breasts. Instinctively I pressed back against him again, felt the rock hardness of his manhood against my ass still.\n\n\"Or we could go get some air?\" he said.\n\nHis fingers slid up and then he brushed a large thumb over my nipple. A soft moan escaped my throat. His hand gripped my neck a bit tighter as he moved his fingers more deliberately against my nipple. My dress was thin, silky lace and did nothing to hide my aroused nipples from Alric's insistent fingers. I found myself begin to pant as he caressed gently over my swollen bud. Then he brushed against the skin of my chest exposed with the deep V of the dress. His fingers raised goosebumps where he touched and I found myself shivering in anticipation and need.\n\n\"Tell me what you want, Rhiannon,\" he ordered softly.\n\nI swallowed. My throat was tight and dry. And I found I couldn't force any words out. His fingers returned to my hardening nipple, pinched it lightly through the dress. I moaned again, feeling myself nearly collapsing back against him.\n\n\"I think we'll check on your friend,\" he murmured.\n\nBefore I could register his quick movements, he'd turned me and swept me from my feet. He stalked through the crowd, carrying me gently in his arms and I instinctively reached up to wrap my arms around his neck.\n\n\"My legs work,\" I said breathlessly as I clung to him.\n\nHis chest shook with a chuckle as he glanced down to me. Pressed against him now, I burrowed my cheek into his neck, inhaling his manly scent and was tempted to dart my tongue out to taste his skin. We broke from the crowd again and I pulled my eyes from him to find Sylvia again. She still lay stretched on the large daybed, though seemed to be taking a small break.\n\nAlric dropped to a chaise lounge next to Sylvia and her admirers, still holding me tight against his chest. My legs draped over his lap as I leaned into him, finally catching Sylvia's eyes. Her face brightened as she registered me and she grinning, pushing on of the men that was slowly running his tongue along her neck from her as she leaned on an elbow.\n\n\"There you are!\" she beamed at me.\n\nI tried my best to ignore her nakedness and that of the men around her. John Snow stretched behind her, spooning her as he nuzzled his face against her shoulder.\n\n\"You're...having fun,\" I said weakly.\n\n\"Are you not as well?\" she asked slyly.\n\nAlric's hand moved up my body again to slowly begin to caress along my collarbone. \"I'm glad you're enjoying yourself Sylvia,\" he said. I glanced back up to him. He was running his eyes over her body, lingering on her breasts which were now being gently kneaded by John Snow.\n\nAnother surge of jealousy rose in me and I squirmed in his lap. Like before, he instantly dropped his eyes back to me, his hands tightening to pull me closer. A smirk tugged at his mouth as our eyes met.\n\nHe dropped his head back to my neck, brushed his lips against my ear. Sitting on his lap, the bulge of his arousal was unmistakable. He ran his tongue along my skin, suckling at my earlobe, flicking teasingly against the hollow behind my ear and I swelled with need for him.",
        "\"Watch,\" he commanded softly in my ear and his hand settled on the back of my neck again, turning my head slightly towards Sylvia again.\n\nShe was still stretched out, though now John Snow gripped her leg, throwing it over his own so he could push into her from behind. He held her tight against his chest, his hand snaking up to grip her throat as he entered her. Another man lay facing Sylvia and she reached for him, sliding her hands along his hardened cock. A ripple of heat shot through me as I watched. I trembled on Alric's lap, imagining his manhood slipping into me.\n\nSylvia whined, arching into the two men and clutching at them, inviting them deeper. I burned with my own need. The ache was growing unbearable between my legs as I watched Sylvia and as Alric ran his hands over me. His mouth had fallen to my neck, nipping and sucking hungrily and I found myself copying Zoe, arching into him. Offering whatever he wanted. His hand slipped back to my breast and as he flicked my nipple I whimpered and turned my face back into his solid, leather clad shoulder. Instantly his hand tightened on my neck and he forced my face back up. He dropped his mouth to mine, kissed me with a new, savage energy. I moaned into his lips as I let him devour me. He plunged into my mouth with his tongue, tackled my own tongue as he greedily kissed me. As he kissed he gripped my breast within his strong fingers, pinching and rolling my swollen bud so hard I sucked in a breath, which seemed to only invite him further.\n\nSylvia's cries grew louder. She panted, shrill and urgent as the sound of slapping skin rose. As one, Alric and I broke our kiss to look over to the scene. John Snow stiffened with a grunt as he clutched Sylvia against his chest and came inside her. She continued to rock her hips sensuously and as soon as his spent cock slipped from her, the man in front of her rolled to his back, pulling her on top of him. She easily adjusted, taking him inside her dripping entrance smoothly. As I watched, her skin began to glow like Jillian's. Her lovely, dark skin pulsed with a deep scarlet light as she began to ride the handsome Norseman. She pushed herself up, arching her back and the light seemed to pulse with her as she moved.\n\n\"Magic,\" Alric murmured in my ear.\n\nI tore my eyes from her to meet Alric's blue eyes. They were dark with lust. I imagined my own mirrored it. I shifted on his lap, hiking my dress up a bit so I could instead straddle him on our lounge. His face broke into an eager smile as I moved and pressed my breasts against his broad chest.\n\n\"You think I have magic? You think I'll glow like that when you fuck me?\" I whispered as I moved my hands up to feel his muscled arms, his thick shoulders.\n\n\"You've never stopped glowing.\" His voice dipped low, had become husky as he watched me.\n\nI shook my head, flinging my hair from my shoulders and began to move my hips slowly against him. I pressed against him, only my thin dress and his tight leather pants between our aching centers. Still holding his eye, I began to rock, sliding my groin over his manhood. I could feel his whole length, pressing desperately against his pants and his eyes grew even darker as he began to breath quickly. He wanted me. I still hadn't decided if I'd let him fuck me in this middle of this crazed party, with everyone watching. The doubt was slowly slipping away as I pressed my sensitive center against him though.\n\nHe moved his hands to my ass, began to guide me along him, pressing me hard into his swelling length. A breath hitched in me as I hit just the right spot. I'd never been so horny in my life. I realized as the arousal coursed up and down my spine, into my stomach, lower between my legs, that I was already so close to coming. I was so turned on I imagined my clit already swollen and ready to explode with the barest touch.\n\nAs if reading my mind, Alric wrapped his hands around my back, pulling me tight against his chest as he pushed his hips up against me. His mouth smashed into mine again and he thrust his tongue into my mouth in time with his rocking hips. I gasped, shivers going through me as my excitement arced through me. I needed him. Inside me, around me. I would let him do anything he wanted to me. He held me tight against him as I ground my aching pussy against his bulging manhood. We moved now in rhythm with the sounds around us. My own desperate pants joined Sylvia's: high and whining and needy as Alric kissed me. His tongue continued to taunt me, thrusting into my mouth like a promise.\n\nFaster and faster I moved my hips, unable to control my body, my screaming need any longer. I humped him, feeling a climax rising like a fire up my body. And then his hands moved to my thighs. He dug his fingers into me, stilling my bucking hips.\n\n\"Not yet,\" he growled into my mouth.\n\nI whimpered, desperately trying to continue my movements. An impatient groan rose in his chest as he held me still. It only made me want him more. His strong hands gripped me, wrapped around me. Mastered me.\n\n\"Please,\" I murmured, pressing my lips into his. I took his bottom lip between my teeth, tugged playfully at him and his fingers squeezed bruisingly on my thighs as he inhaled sharply. I felt his cock jerk within his pants. What was he waiting for? He wanted me as badly as I wanted him.\n\n\"I want you for myself.\" His voice was hoarse, grating.\n\nI looked up from him, realized we had a bit of an audience. Sylvia was now draped over a new man, her eyes closed as he gently caressed her skin. But leaned on the daybed and the other couches around us were dozens more revelers. They hungrily watched Alric and me. I wasn't sure how much time had gone by, but even the sounds from Jillian and Kristof's sacrifice had quieted. I looked to the tables and saw they were now empty. Sweeping my eyes across the party, I saw the band had picked back up. Finally I spotted Jillian's black hair and reddened body, curled similarly to Sylvia's across the terrace on Kristof's lap. He tenderly ran his fingers through her hair as she drooped in exhaustion.\n\nI met Alric's eyes again, as always, he watched me. Curiosity and hunger warred in those blue eyes. \"You don't want to sacrifice me?\" I whispered coyly.\n\n\"Your magic is mine. All mine,\" he growled, though his playful smile played again on his face.\n\n\"Tell me about my magic,\" I forced myself to ask. To ignore the screaming of my nether regions. It seemed he wanted to set the pace. I'd let him. For now.\n\nHe loosened his fingers finally from my thighs when I made it clear I'd calmed down a bit. Back around my ass her ran his hands to grip my waist. \"I can sense it pulsing within you. I imagine it's why you're friends with little Sylvia over there. She's thick with it as well. Like calls to like. You feel drawn to her. Yes?\"\n\nI nodded, trying to focus on his words though I could only stare at his entrancing lips as he spoke.\n\n\"When I walked into your caf\u00e9, it hit me like an ocean wave. I saw it rippling from you. Calling me.\"\n\nI lifted my eyes to his. He studied me. Leaned forward to brush his lips gently to mine. Our shared lust still pulsed, but now he turned tender. Loving. He kissed me slowly, though his fingers gripped my waist, force me to stay still against him.\n\nHe pulled back with a soft smile. \"Do you feel it too?\"\n\n\"My pleasure gives you life?\" I asked quietly.\n\nHe nodded. \"Only on Samhain when the veil is thin enough, pleasure ignites the magic in you. And those lucky enough to give you that pleasure...\" He shrugged mischievously\n\n\"So the witches get the best sex of their lives and you get...life? From our magic?\" I asked.\n\nHe chuckled softly as he peppered my face with kisses. \"Yes. But you also grow more powerful. The sei\u00f0kona craved our strength. So we give it. It's a perfect bargain. Without you sei\u00f0kona, we'd be forced to leave Midgard. To return to Valhalla.\"\n\n\"I don't want you to go,\" I whispered, not really listening to his words.\n\n\"I don't plan on it,\" he said as he stood smoothly, pulling me up with him and forcing me to wrap my legs around his waist.\n\nI squeaked as I grabbed at his shoulders and he slipped his hands back down to support my ass as he stepped towards the daybed. He dropped down next to Sylvia and her new lovers. They grinned as they scooted over to make room. Alric lay back, pulling me down with him to lay across his chest.\n\n\"I missed you,\" Sylvia breathed as she reached a hand for me. She was similarly entwined in a naked, burly man. I realized it was one I'd danced with. Shaven head, thick muscles like a bull.\n\nI suddenly felt self conscious again. Though minutes before I'd been dry-humping Alric like a horny cat, now my cheeks burned again as I glanced around the terrace. Nearly all the women I'd noticed from earlier were tangled with groups like Sylvia and Jillian, though a few others still danced. Much less frequent, but seemingly having just as much fun, were a few groups of all men. I watched as one man began to glow with a soft blue light as his dick was devoured by another. So it seemed there were a few male witches as well.\n\nAlric's hand brought my focus back to him and Sylvia and the group on the daybed. He'd tucked me tight against himself and ran a hand tenderly through my hair as he watched Sylvia. She was smiling dreamily as she began to move her hips against the man she lay draped over.\n\nShe held my eye as she moved, reached her hand out again to take mine. I twined my fingers with hers and felt sucked into her dark eyes. I felt her arousal. As the man she straddled took her nipple into his mouth my groin ached with the pleasure of it.\n\n\"I've lost track of how many times they've made me come,\" she murmured as her eyes closed.\n\nOne of Alric's hands was still on my ass. He squeezed it, pressing me against his still stiff cock. I imagined he ached as much as I did. Did he want to fuck me right here? Next to my best friend. I couldn't say I'd argue...\n\nHis head dropped to my ear. \"You can taste her if you want. You brought her here.\"\n\nI swallowed as I watched Sylvia. Her head had fallen back and she lay stretched over the burly man's lap as he methodically moved back and forth between her breasts. I realized I was jealous. I wasn't sure of who though.\n\n\"Sylvia,\" I whispered.\n\nHer eyes flipped open and she smiled as she met my gaze again. I gripped her hand tighter. \"Come here,\" I ordered softly.\n\nShe grinned, cocking her head as she decided if I was serious. I pushed myself up from Alric and felt the boldness of the magic he said was in my blood. I released her hand and grabbed at the hem of my dress, tugging it up over my head in a smooth motion before I could second-guess myself.\n\nI glanced down to Alric to see his expression. I was hoping for lust or admiration. I got that. And everything between. His eyes widened and the blue nearly disappeared as they darkened. I shivered as his eyes touched every part of me. My too-small breasts, milky skin, white-lace panties. (Yes, I chose those on purpose.)\n\nI looked back to Sylvia for her reaction. Her grin had deepened and she sat up as well. I sat on me knees, with one of Alric's legs between mine. Sylvia crawled over, straddling his other leg as he lay frozen in place, as if terrified to spook a couple wild animals.\n\nSylvia grabbed up both my hands, placed them on her waist. \"I know this is your first time,\" she whispered. \"Just enjoy it.\"\n\nShe moved her hands up my body, brushing my breasts lightly. She wrapped them around me, pulling me tight against her. Her skin was heated, slightly damp from her exertions. She smelled of salt and orchid from her favorite perfume. As she pressed against me, my nipples snapped to attention against her soft skin. Alric moved his hand back to my ass, cupping gently as Sylvia nuzzled against me. I glanced down to him again, found him staring intently.\n\nSylvia kissed me. One moment she was tracing her lips along my neck, the next her full lips were pressed into mine. I remembered her words: Just enjoy it. So I let myself. I kissed her back, imagining her soft lips were my own. I nipped at her, pushed my tongue into her mouth. And I moved my hands up her body. I found her breasts, a whole sup size larger than mine and deliciously plump in my hands. I brushed my fingers over her nipples, knowing how aroused that made me. She moaned into my mouth and I knew I was on the right track. Aric's hand squeezed my ass harder, apparently pleased with the show.\n\nAs I kissed Sylvia I began to knead at her breasts, teasing and tugging at her dark nipples. I rolled them between my fingers, pinching to draw a whine from between her lips. I shoved my tongue deeper into her mouth and she grabbed at my arms to hold herself upright as she began to tremble.\n\nI felt Alric's cock between my legs again, it strained against his thigh as I straddled him and his hand began to move over my ass. He brushed his fingers across my silky panties, over the hemline, up to the small of my back and then back down. As Sylvia panted, I felt my own arousal growing. I grabbed at the back of her head suddenly, pressed her face down to my own breasts.\n\nAs her small mouth fell on my breasts, my world fell away. Alric's teasing had set my skin on fire with need. Sylvia's heated mouth gently took on of my nipples and her tongue swirled. A long moan erupted from me as I dropped my head back with the amazing feeling. Alric's hand had stilled on me, though he still gripped me tightly and now I was thankful as I was ready to melt completely from Sylvia's gentle touch.\n\nAround and around one nipple she circled her tongue, darting and coyly flicking at the tender bud. I looked down at Alric again. He was who I really wanted. And it was reflected in his expression as well. Dark lust shone in his eyes as he watched me. I held Sylvia's head in my hands, pressing her urgently against my breasts and she lapped at me hungrily. I let a small smile pull at my lips as I watched Alric. How far would he let Sylvia and I go? He'd said he wanted me for himself. When would he take me?\n\nI decided to test it. As Sylvia suckled at my breasts, I slid my hand down her body again. I came to her mound. I slipped my fingers down further, found her soaking wet folds. As I pressed against her with my palm, Alric sucked in a breath as Sylvia did. She bucked against my hand, biting lightly at my breast. I pressed her head harder against me as I worked a finger into her folds. She was slippery and hot and quivering. I wondered for a moment if I could make her come? I knew exactly what I liked, I couldn't imagine Sylvia was too different.\n\nAs I pressed against her entrance, I was surprised to find fingers pressing into her from behind. I glanced down, finally registered Alric's other hand was on Sylvia's ass, he pushed his fingers up into her, brushing against mine. I smirked at him as our fingers brushed against Sylvia's pussy. As if reading his mind, I moved my hand up to circle her clit, she whined against my breast, but I was unrelenting, still holding her head tight against me. Alric began to press a finger into her entrance.\n\n\"We're going to make you come now,\" I bent my head to whisper in her ear.\n\nShe moaned and I pressed my thumb hard against her swollen nub as Alric pushed a second finger into her.\n\n\"Fuck my hand,\" he ordered Sylvia softly and then I finally let her come up for air. She gasped as I grabbed at her hair and pulled her face to mine as I began to rock against her, my thumb still pressing against her clit. She moved in time with me, thrusting her hips slowly, grinding against Alric's hand.\n\nShe began to cry out. Long whining moans against my lips as we finger fucked her. I glanced down to Alric. Even with his fingers within Sylvia, he watched me, drinking in my expression, my body.\n\nI pulled Sylvia's head back, dropped my lips to her neck as she bucked urgently against us. Impatience began to spark up through me as I met Alric's eyes. When would he fuck me? When was my turn? I held his eye, then bit her neck as I pinched her clit between my fingers. She howled as her body stiffened, arching back as she orgasmed.\n\nAlric finally looked away from me, finding the burly man still reclined behind Sylvia. \"Take her,\" he rasped out.\n\nInstantly the other man was grabbing at Sylvia's still twitching body. He pulled her back over his chest and Sylvia melted into him, throwing her leg over his to give him access to her throbbing center. He smoothly entered her, began to fuck her slowly, jerking his hips up into her as she clung to his chest.\n\nI swayed at the suddenness of her departure. But then Alric's hands were gripping me again. He sat up, forcing my legs around his waist as he smoothly stood again. He slipped a damp hand up my chest, brushed against my now red breasts, and then pressed a finger against my lips.\n\n\"Taste,\" he murmured as he began to walk back across the terrace. I obediently opened my lips and he pushed his thick finger into my mouth. I lapped at him, tasting Sylvia on him and my arousal--and jealousy--sparked anew. I began to suck on his finger, meeting his eyes as I circled him with my tongue. His breath hitched as he met my eyes.\n\n\"I'm going to pleasure you now,\" he growled as he slipped his finger from my mouth to tenderly trace along my jaw.\n\n\"Can you see my magic?\" I asked with a smirk.\n\n\"Everyone can. But I'm not going to share you,\" he growled.\n\nThe music faded and I finally looked up to see where he carried me. Back into the mansion. He crossed quickly through the house back to the main stairwell. He stalked up the stairs, impatience sparking within him.\n\nI was suddenly apprehensive. I'd let myself go. Let myself play along with this crazy night and this beautiful--though likely nuts--man and his talk of magic. At the top of the stairs he crossed a long hall and then kneed open a door at the back of the house. A huge bed sat in the middle of the room. Everywhere was dark wood, thick carpets, earthy colors. Swords decorated one wall. Suddenly, I could hear the music again. French doors were thrown open to a balcony. To my surprise, he skirted the bed and moved towards the balcony. It contained a cozy sitting area. Low couches and curling ivy and dozens of candles lit the space. From below, the music was punctuated by moans and cries of pleasure and grunts of passion.\n\nAlric set me gently on a pile of cushions in the middle of the balcony. And then he stood over me. Running his eyes greedily over my nearly naked body. I self consciously moved to cover my breasts as the realization sank in, but he stopped me with a look and a sharp shake of his head.\n\nHe knelt down in front of me, wrapping his fingers lightly around my ankle as he held my eyes. \"I think you don't fully believe me.\" He eased my legs apart. \"Though you've seen it in the others, you don't fully believe it's within you.\" He reached up and began to slide my panties from my hips. I arched slightly to let him pull them from me. \"But it's the strongest within you. And I'm going to show you now.\"\n\nHe leaned forward, ran his lips along my thigh. Up up up he traced those lips until he came to the crease of my leg. He paused, kissed me tenderly there. \"Listen to them as I pleasure you,\" he commanded.\n\nHis tongue licked slowly across my thigh as he ran his hands towards my center. Carefully, he eased open my entrance, pressing my labia open to expose my--definitely--aroused pussy. I felt the cool night air, and then his warm breath as he opened me and a shiver ran up my spine. His tongue traced inward, tickled at my folds before moving deeper. And then his hot mouth was against my entrance and I sucked in a breath. Below us, there was a collective gasp as well, and I twitched, trying to glance over the balcony. But then his tongue lapped up my slit and everything but Alric's tongue and my body fell away. He traced up my wet folds, pausing at the hood to teasingly circle my clit. My hips jerked automatically at the rush of heady pleasure, but he quickly retreated, running his tongue back down to fondle my entrance. He pressed in, wrapping his lips around me and pulling my pussy tight against his face. If his hands hadn't pressed me down, I'd have shoved myself hard up into his warm mouth. As he plunged his tongue into me, he began to thumb at my clit. The little nub nearly vibrated with the rapturous sensations. I began to moan, soft and whining as I chased the pleasure.",
        "He pulled his face back slightly and our eyes met. I wanted to leap into the deep blue of his eyes. Also wanted to shove his face back down to continue his work. \"Listen,\" he repeated and then he dropped his head back to my pussy. He picked up the pace, lapping appreciatively against my folds, swiping his tongue up my slit to circle my clit, pausing to suckle the swelling pleasure center.\n\nMy head fell back again and I groaned loudly. From below my groan was mirrored in dozens of throats. Alric growled softly against me, now licking hungrily against me like he was starving. He took my clit between his lips, suckling and tugging at it and I cried out, again bucking my hips up into him. Again, my cries were echoed from the party on the terrace. I began to ride the waves, higher and higher Alric forced me and it was like every sensation he lit within me was echoed a hundred-fold below.\n\n\"Yes, yes, yes,\" I began to wail as my body arched, winding tighter and tighter with every stroke of Alrics' insistent tongue. The words reverberated all around us.\n\nHe pressed a finger inside me as he increased the pressure on my clit, lapping quickly as I began to shake with an approaching orgasm. My body clenched around his finger and I screamed out as I came and the sound seemed to light across my skin as the group below all cried out as one. I could feel nothing but Alric's finger inside me, his tongue as it stilled, pressing firmly against my sensitive center. I collapsed back, panting and beginning to shiver as Alric lifted his head from me.\n\n\"Look,\" he said, and ran his hands up my thighs, to caress over my belly and the hollow between my chest.\n\nI followed his eyes. My skin glowed. Bright, white light shone from me, lighting the little balcony and Alric's face. He grinned with pride as he watched me. \"You glow,\" he murmured.\n\nI licked my lips as I met my eyes. I could feel it. The magic pulsed within me, had grown so strong with Alric's urging that it set my skin alight with its power. \"I think you need to fuck me now,\" I whispered.\n\nHis face darkened as lust replaced self-satisfaction. He held my eyes as he unclipped his black leather chest armor. He tossed it aside. A simple black linen shirt sat underneath. He pulled that over his head as well and I gulped as I finally glimpsed the body I'd been trying to feel up all night. Thick, muscled chest, covered in lightly curling hair. It thinned into a perfect trail at his stomach, leading temptingly into his pants. His arms--I've always been a bicep girl--were as muscled and strong as they'd seemed as I'd clutched at him all night.\n\nAs he began to work on untying his pants, I suddenly sat up, needing to help him along. I pressed a hand to his chest and pushed him down onto his back so I could straddle him instead. I tugged the tight leather from his legs, my heart beginning to thrum as I pulled it low and found the brush of hair at the base of his shaft. Down further I pulled until finally I freed his heavy cock. It strained upwards, falling stiff and ready against his stomach. I met his eyes as he grabbed at it and began to pulse it slowly between his large hands. I hurriedly relieved him of his pants and crawled forward, brushing his hand away so I could grip him.\n\nI kneeled over him, dropped my head to kiss the tip of his manhood gently. He sucked in a breath, grabbing at my hands. \"No, your pleasure is all I care about tonight,\" he grated out.\n\nI stilled, meeting his dark eyes. \"This does give me pleasure,\" I murmured and then licked slowly up his shaft. He groaned and his eyes rolled back as he collapsed under me. I giggled, running my tongue along his hard length. His cock was hot, straining for me and his hips began to push up, desperate to be within me. I took him into my mouth gently, teasing and swirling my tongue around the thick tip and tasted the salty-bitterness of his arousal. My own orgasm still warmed my skin and now I wanted nothing more than to give Alric a taste of that. I sucked at him, taking more and more of his glorious manhood into my mouth as he began to pant, his pelvis beginning to push more urgently up against me.\n\nI began to bob my head, loosening my throat so I could take him completely within me and he stiffened, moan loudly as I paused, enjoying the moment of complete control.\n\n\"Fuck,\" he growled and grabbed at my hands again. He pulled me roughly up and I was forced to release him from my mouth. It dropped heavily back to his stomach as he tugged me forward. I grinned as I slid over his hardened body and then his mouth was on mine again. He kissed me savagely, biting at my lip, forcing my mouth open so he could dart his tongue into me.\n\nHis cocked jumped against my stomach, twitching impatiently as I scooted forward. I angled my hips, arching against him though he'd now wrapped his hands around my back to hold me tight against his chest.\n\n\"I've thought of this moment since the second I saw you,\" he whispered into my mouth as he began to grind against me, his slick manhood searching for my entrance.\n\n\"Me too,\" I breathed and tilted my hips, finally finding the right angle.\n\nThe thick head of his cock pressed against my screaming nether regions and he moved one hand up to cup the back of my neck again, stilling us both. I'd memorized his eyes over the course of the night. Deep, heavy blue like the ocean in winter. He thrust upward slowly and I arched, grabbing desperately at his shoulders as he stretched my entrance. I let out a high, needy whine as he finally entered me. My pussy was desperate, aching and empty and slowly he filled me. And still he watched my face and I couldn't look away.\n\nDeeper and deeper he pressed into me and I grew giddy from the full feeling. The sense of belonging. The magic that still set my skin glowing bright in the cool night. And then we finally settled. Fully seated within me it was like he touched parts no other man could have ever reached. He lit me from the inside.\n\n\"Ride me,\" he said softly. The sound of his deep, commanding voice sent my pussy clenching around him and I eagerly obeyed. I pushed myself up, digging my fingers into his broad chest as I found the right angle. I leaned back, knowing my eyes were heavy with lust as I gave him a show. I looked down at my pale, softly glowing skin. My breasts stood, soft and supple, nipples red as roses. Down further, his cock disappeared into me, stretched my pink pussy wide and our pelvises ground against each other in anticipation.\n\nAlric reached a hand up to gently squeeze one of my breasts as I began to rock against him. I tilted my hips, finding a slow rhythm as I took him within me. He pressed his pelvis up and began to fondle my nipple, sending shots of pleasure racing down to my groin, forcing me to clench and twitch against his straining cock. Already I felt a new climax growing within me. I wanted to come over and over and over on Alric's cock. It seemed the only thing that mattered, that existed.\n\nAs if reading my mind, his moved his other hand to my clit, pressing his thumb gently against the swollen nub as I rode him. My need rose like fire within my center. Up through my stomach, into my tender breasts, up into my throat. I again began to moan, and like before, it was echoed in the party-goers below. My hips began to buck wildly against him, I lost all sense of balance or control or anything but the feel of his thick, slippery cock. It was the only thing that could hold me upright, that could keep me from spiraling away on the cool breeze. As my second orgasm rose within my center I stiffened, arching my back and grabbing frantically at his roughly haired chest and he smashed his thumb in quick circles against my clit.\n\n\"Alric,\" I cried out as I jerked frantically against him, grinding my pussy hard into his groin.\n\n\"Rhiannon,\" he growled as he gripped at my breast, holding my melting body upright.\n\nHe suddenly sat up, pulling me tight against his chest and wrapping both arms around me. I collapsed into him, my hands trapped against his chest as he began to thrust up into me in quick, urgent strokes. Soft, mewling cries rose in my throat as he extended the glow of my orgasm.\n\n\"I can't wait any longer,\" he rasped.\n\n\"Fuck me, please,\" I whined.\n\nWith a snarl, he pushed me onto my back again. I fell back, gripping desperately at his cock. He sank on top of me, his weight delicious and manly and hard on top of my quivering body.\n\n\"I'm going to fuck you now,\" he growled as he slowly withdrew his cock from my clinging passage.\n\nAnd then he slammed into me with a brutal thrust. I cried out, grabbing frantically at his shoulders. But he was already retreating again, with another harsh growl he slammed into me, faster and faster he began to thrust. My body responded excitedly, this was what I'd waited for all night. This is what I wanted. I needed Alric to fuck me. With every slam of his thick cock I began to buck against him as well. Desperate to meet him with my hips, to force him deeper. My voice seemed not my own as high pitched, needy wails rose in the air. I raked my fingernails over his back and he snarled, grabbing at my hands to trap them above my head as he pounded into me. I threw my head back as I thrashed beneath him, a new orgasm building with his brutal treatment of my horny pussy.\n\nSuddenly he released my wrists and grabbed at my thigh with one hand as his mouth again fell on mine. He ground against my clit with the base of his shaft and I clenched around him, stiffening from the tension he wound in me.\n\n\"Come for me, little witch,\" he breathed into my lips.\n\nAnd I did. I bucked against him as his words stroked against me and he moved in slow circles against my clit. I howled, grabbing again at his deliciously muscled arms and he let himself go as well. He pumped within me and then snarled his release. Retreating quickly and giving one last resounding slam into my channel as he exploded. We pulsed against each other, our hips convulsing and pressing bruisingly as we rode our shared climax.\n\nAlric collapsed on me, pressing his mouth to mine as if I could keep him alive. We kissed slowly, our tongues intertwining so I lost track of which was mine. We breathed as one as our bodies twitched and he cupped my face in his hands.\n\nAs our bodies hummed we finally broke our kiss and I studied his handsome face. He stared down at me, awe and gratitude in his eyes.\n\n\"So, was my magic enough?\" I asked, glancing down to see I still softly glowed.\n\n\"More than enough,\" he nodded and brushed his lips once more over my cheek, down my neck. \"Though, it can't hurt to try a few more times. Just in case,\" he whispered as his tongue ran up my neck.\n\nI giggled, then a loud 'caw' sounded from the balcony railing. Two huge ravens sat staring at us. \"What the fuck?\" I murmured.\n\nAlric stiffened and turned to look over his shoulder at them. \"Fuck,\" he grumbled.\n\n\"Indeed,\" a deep voice resounded. It thrummed within my chest and the crows squawked and flapped their wings, lifting from the railing to swoop towards the speaker. I followed their flight to a large, bearded and richly clothed man that reclined on the couch across from the balcony. I blinked, unsure how long the old gentleman had been sitting watching us. He wore a leather eyepatch over one eye, but the other crinkled as he smiled thinly at us.\n\n\"You're early, Allfather,\" Alric grumbled as he turned on his side, pulling me tight against his chest.\n\n\"Just checking in on my wayward charges,\" the old Viking rumbled. \"Though it looks like you've succeeded in putting me off.\"\n\nAlric's grip tightened possessively around me. \"You have plenty of charges still to keep you company within Valhalla. We've earned our freedom for another year.\"\n\n\"I can see that.\" The older man's heavy gaze flicked to me, running his eye over my glowing skin. \"She's a new one. Old blood too, thick with sei\u00f0. You and your sisters have been keeping Alric from returning to my hall for quite a long time.\" I realized he addressed me now. I gulped, glancing up to Alric. His mouth was set in a hard line as he stared at the quietly imposing man.\n\n\"We just met,\" I answered lamely.\n\nThe older man barked a laugh as he stood. The ravens flapped their wings indignantly as he stepped forward. \"One more year Alric. You and your sei\u00f0kona have bought you one more year in Midgard. I see her magic pulsing within you, so I cannot force you back to Valhalla until it wanes.\" He smiled slyly down at us. \"Until next year.\"\n\nAnd then his form seemed to flicker. Suddenly the ravens alighted into he air and the old man joined them, transforming into a huge black raven. With a screeching 'caw' he circled above us and then was gone into the dark night.\n\nI trembled, the magic in my blood pulsed still, bathing our little balcony in light. I realized the sounds from below had stilled as well, like the whole gathering held its breath.\n\nAlric's arms finally loosened around me and I looked up to meet his eyes.\n\n\"Odin,\" he shrugged.\n\n\"Odin,\" I said skeptically.\n\nHe smiled sheepishly. \"We grew bored waiting for ragnorak within Valhalla. So one Samhain I made a deal with a witch--\"\n\n\"And the rest is history,\" I laughed softly.\n\nAlric chuckled and pulled me tight against him. \"I would spend this next year with you. And the year after. However many years you'd like...\" he trailed off, suddenly looking unsure for the first time since I'd met him.\n\n\"What do I get out of it?\" I asked.\n\nHe smiled, dipped his head to mine again to kiss me slowly, lovingly. \"We intertwine,\" he murmured against my lips. \"My soul is tied to this realm by you now. I'm your slave. Tell me what you want and I'll give it to you.\"\n\nMy body began to respond to his touch, I swelled for him. \"I need you to fuck me again,\" I whispered.\n\n<p align=\"center\">#</p>\n\nSo that's how I became the witch Pacific Heights. Every year, Alric throws his party and all those that want a break from eternity arrive and we with magic in our blood give them life for another year.\n\nI did find out one perk--outside of the amazing sex--is that I stopped aging. Just like Alric. He was right. Our lives intertwine now. I'm now the witch of Pacific Heights and have even opened my own little coffee shop--Witch's Brew--down the street. So, this Halloween if a sexy blue eyed Viking asks you to come to a party, definitely show up ready for something life changing."
    ],
    "authorname": "SkuldTheNorn",
    "tags": [
        "group sex",
        "erotic couplings",
        "halloween",
        "orgy",
        "fantasy",
        "romance",
        "oral",
        "teasing",
        "threesome"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/of-witches-and-vikings"
}