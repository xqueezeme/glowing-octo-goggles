{
    "title": "Carly's WMAF Fantasy Pt. 07",
    "pages": [
        "Glad you guys have liked these. I struggled with this one, trying to find the right tone and concept for things with Carly's sister. I rewrote it four times but I like how it came out in the end. Hopefully everyone enjoys it as much as I enjoyed writing it.\n\n*****\n\nThe week passed by with some difficulty. Carly and I traded flirty text messages and talked when we were able. Both of us were very busy with work and neither of us wanted to pressure the other to give up on that. My consultancy was going through a big merger and my status as junior partner put me in a weird place politically within the combined company. Carly, on the other hand, had a massive game release that required her to work crazy hours managing all the bugs you'd expect with any major release. So our schedules were all over the place that first week back. I try not to spend too much time on Facebook but I was curious what each of the girls would do so I started the ball rolling by simply switching my relationship status from Single to \"It's Complicated\". What resulted was a hilarious and intricate dance of modern day social etiquette that anyone familiar with alternative lifestyles knows all too well.\n\nCarly was the first one to follow suit, changing hers simply to \"In a relationship\" but not flagging who it was with. That didn't surprise me, I knew she needed time to deal with her parents and lay the groundwork. Nevertheless, she got a TON of responses from people (including her sister, I noted) asking about the guy. She played coy and didn't respond with much, other than the general positives like, \"He's amazing,\" and, \"I couldn't be happier,\" coupled with the more reassuring, \"He's got a steady job and he's not a deadbeat, Mom!\" \n\nAt that point, a couple of our friends posted on my page with things like, \"Is it Carly?\" I didn't want to respond too hastily and reveal too much so I checked to make sure we didn't have any important overlapping friends (like her sister or my little brothers) but thankfully we didn't. For the most part, there was no cross-referencing but I was really getting worried and wondered if one of my friends would post something stupid on one of Carly's posts that her family would see.\n\nIt was late Tuesday night when things went crazy as Kyrsten came to Carly's rescue. Kyrsten changed hers and specifically listed me... then she flagged us as, \"In an open relationship\". A setting which, frankly, I didn't even realize was a thing. And at that point, our circle of friends exploded. I got four texts in about 120 seconds.\n\nJenn: What??? I'm confused... Are you still with Carly too? Is that the \"open\" part?? Please be good, Jay.\n\nRoland: \ud83d\udc4d\ud83d\udc4d\n\nKyrsten: I was trying to help, Master... I hope I didn't make a mistake.\n\nCarly: Well... I guess I'm out of the woods. Enjoy your night explaining things. Lol.\n\nMessenger on facebook blew up even worse. The instant I showed online, I had seven or eight messages from people. Apparently my Mom got a call. Remember kids, your parents made a lot of casual acquaintances with other parents while you were in high school. ESPECIALLY if you played sports. You're not keeping secrets from them.\n\nMom: Open relationship?!!?!???\n\nMe: Uhhh... look... it's complicated, Mom. It's uhhhmmm... \n\nMom: You and I are NOT having this discussion on Facebook. Call me when you get your head screwed on straight!\n\nWell... that went well. I decided to do broader damage control.\n\nMe to Kyrsten: It's fine. Just trying to do some expectations management now. My Mom will be the big fire to put out.\n\nKyrsten: What about your dad?\n\nMe: Are you kidding, I'm an adult now. He's going to high five me then pull me aside and tell me to handle things on my own with my Mom. He'll be Switzerland for awhile.\n\nKyrsten: Lucky you. My parents are divorced and I barely speak to them. They're not even friends on Facebook. I doubt I'll even get a phone call.\n\nMe: I'm not sure which situation is better.\n\nKyrsten: Yours :(\n\nMe: \ud83e\udd17\ud83d\ude18\n\nMe: Gotta go put out fires.\n\nKyrsten: Nite, stud\n\nMe to Carly: Yeah... this is fun. My Mom is pissed, Jenn sounds like she might be getting on a plane to knife me and Kyrsten WAS flipping out but I think she's okay now.\n\nCarly: Good. You're good for her... You're good for everyone.\n\nMe: :)\n\nMe: I'll text you later. Gonna make sure Jenn doesn't murder me in my sleep.\n\nCarly: I'll be teasing my clit all night thinking about you, Master.\n\nMe: Teasing Bitch... \ud83c\udf46\n\nMe to Jenn: Carly and I are still together. Absolutely. I would say Carly is my girlfriend.\n\nJenn: And Kyrsten?\n\nMe: Kyrsten is really special and we're trying to figure out what that is. It might be girlfriend too...\n\nJenn: Everyone always said nice things about you in school. In fact, even on your page people are saying nice (confused... but nice) things now. I hope you're not just using her as cheap fun.\n\nMe: She's not that cheap (nono... delete, delete... rethink)\n\nMe: I told her that I want to explore the relationship more and would leave it up to her but she also knows how I feel about Carly and she's okay with that.\n\nJenn: I hope so buddy. Kyrsten's got some issues if you haven't noticed.\n\nMe: I have. Any advice?\n\nJenn: Treat her right. Show her that a relationship can be stable and worthwhile.\n\nMe: Thanks. I'm really trying.\n\nJenn: I believe you.\n\nMe: While we're at it... I hope things are going well with Roland. He's a keeper Jenn.\n\nJenn: \ud83d\ude33 I know\n\nMe to Roland: Thanks for the moral support buddy!\n\nRoland: You good?\n\nMe: Oh yeah... my Mom is thrilled and YOUR new girlfriend sounds like she wants to scratch my eyes out.\n\nRoland: Nahh... she's fine... Jenn I mean... can't help you with your Mom. Be grateful it ain't mine!\n\nMe: Hah... yeah. Enjoy your night!\n\nRoland: I will... Jenn just walked in... oh... yeah... she's not upset... gotta go man... good nite for me too!\n\nMe: Lol... dick\n\nAfter all that, I did some exercises to calm myself before calling my mom. Nothing helps clear the mind quite like some pushups and pullups that push you nearly to exhaustion.\n\n\"What the hell, Jay? An OPEN relationship? What the hell does that mean? Does it mean what I think it means?\"\n\n\"Mom... let me explain, then ask all the questions you want.\"\n\n\"Okay... but you better talk quick.\"\n\n\"Before I start, I want you to know that I'm happy and so are the girls,\"\n\n\"GIRLS?!?\" my Mom exploded.\n\n\"Mom... let me finish. Would you rather they were guys?\" I asked jokingly. Anyone with parents born in the 60s will understand that question's impact.\n\n\"Go on...\"\n\n\"Do you remember Carly? She was the tall Asian girl that was almost Valedictorian. She and I... well.. We hooked up when I was down there this weekend.\"\n\n\"You were in town this weekend and didn't come to see us?\"\n\n\"Mom... Big picture...\" I said unbelievably having to refocus my mother onto her \"open relationship\" hysterics. \"I was visiting friends on a whirlwind trip. There wasn't any time. Anyway, Carly and I hooked up but then so did Kyrsten and I?\"\n\n\"Honey, you've got to choose one. Don't be a cheating bastard like your uncle!\"\n\n\"I'm not, Mom. I chose both. And both girls know and both girls are okay with that.\"\n\n\"That's ridiculous. One of them is lying. Or they both are. No girl would be okay with that!\"\n\nMy Mom was classic second wave feminist. I knew that there was ZERO chance she'd understand the real dynamic in these relationships. But maybe she'd understand it from a more modern approach. \"Mom, they're both grown women. They both know what they're doing. Neither wants to be tied down to a man right now.\" \n\n\"Tied down perhaps\", I thought to myself before continuing, \"They want what they want and I'm really enjoying spending time with both of them. I don't know what will happen but they're the ones in control.\" That last was simultaneously the most truthful and least truthful statement I'd made in a long time.\n\nMy Mom sighed. \"Look honey. I don't pretend to understand things with you and your friends. You're leading a different life than I led. Please be careful. Your heart and your bed are important to protect... and important to respect in others.\"\n\n\"I know, Mom. You raised a good kid and I might surprise you but I will try to never disappoint you.\" \n\n\"I know, honey. Get some sleep. Are you going to be able to see these girls soon. Kyrsten lives in Orlando still... where does Carlene live?\"\n\n\"Carly,\" I gently corrected her, \"lives in Boston. I'm seeing her this weekend. She's introducing me to her sister who lives here.\"\n\n\"Meeting the family already? It must be serious,\" she said, joking to lighten the mood.\n\n\"I think it might be, Mom... I really do.\"My response caught her off-guard and she was silent for a moment.\n\n\"Be careful, honey,\" she said softly. \"I love you. Good night.\"\n\n\"Love you too, Mom. Good night.\" \n\nI got into bed and saw an email from Carly. I opened it and there was an audio file attached. It was about ten minutes of her edging desperately. I had my pants off and was lying in bed quickly, stroking my shaft as I listened to her pathetic display. She was whispering, probably trying to keep her roommates from hearing how pitiful she'd become.\n\n\"Master, please. I need to be fucked. I need you to use my holes. You're the only man for me. No other man will ever have me if you wish it, Master. There's only one white cock in the world for this dumb Asian bimbo. I promise you can do whatever you want to me. Break me. Train me. Use me. Torment me. I'll edge every night and leave myself empty, stupid and desperate if you want, Master. Just tell me how to please you.\"\n\nThere was a short pause where I heard movement and some soft grunting, when her voice started back, she was whispering even softer, the phone must have been pressed right up to her mouth. \"My sister is going to love your thick white cock in her tight concubine holes. I'll teach her how to please you. I know you'll enjoy her young, wet cunt and you can violate her ass as much as you want. I'll help you. I'll make sure she knows what she's good for, Master. And then she can be your little cumslut when I'm not there. Master? Will you... uhh... \" she gave a long groan before continuing, \"Will you make me eat your cum out of her, Master? Don't let me deny you anything you want, Master. If you make me, I'll eat her pussy or make her eat mine. I'll lick her ass. I'll make out with her. I'll do anything, Master. And if I say, no, I want you to slap me and force me, Master. I'm giving you permission. It's on this recording. I will NEVER deny my white owner, Jay, anything. Ever. I promise. He may use my body however he wants. For whatever he wants. I trust him.\"\n\nMy cock was super hard as I stroked it in my fist. I could picture Carly kneeling in front of me, holding her sister's head on my cock. Talking to her. Telling her what she was to be for me. A concubine was the perfect word. A plaything. A set of holes for me to use at my convenience when Carly wasn't around. I stroked myself three more times and suddenly came, shooting everywhere. The sleep that night was blissful.\n\nBy the end of the week, Carly and I were both ready for the weekend. The nice thing about living in big cities is that the flights are super cheap. For $90, you can take an hour flight and be with your loved ones in just over two hours (traffic and security permitting). That gets even easier if you are an eager to please slut who doesn't need to pack clothes because she's going to spend most of the weekend on her knees and naked.\n\nI emailed her Friday morning with a short list of things to bring. Nothing that would require her to carry more than a large purse or maybe a backpack. I didn't want to have to waste any of the precious time we had together. Her plane landed at 6:30 and we were breathlessly making out by 6:45. \n\n\"I've missed you so much, babe,\" I told her as I held her against the wall, heedless of the stares we were getting. Carly had dressed in a pair of short shorts, a tank top and a pair of wedge heels. Around her neck was a silk choker that was the icing on an already delicious looking cake. \n\n\"I can tell, Master,\" she murmured into my mouth between kisses as she ground her hips into me. \"I'm beyond desperate, Master. I don't know how I lasted without your glorious cock. I need it. I need it so bad.\"\n\nAnother passerby came a little closer this time and heard the tail end. They probably thought she was some strung out junkie looking for a fix. We didn't care. \n\n\"You'll get it all weekend, slut. I'm going to use all your holes until you can't take anymore.\"\n\n\"I'll never hit that point, Master. I'll never NOT be able to take your cock.\"\n\n\"Good girl,\" I said as we untangled ourselves and clasped hands. \"What do you want for dinner?\" \n\n\"Your cum,\" she said with a big grin.\n\n\"Seriously,\" I said, smiling back.\n\n\"I really don't care. Something quick so I can be filled up the right way as soon as humanly possible.\"\n\n\"It can't be quick, slut,\" I told her. Her brow furrowed, puzzled.\n\n\"Why not, Sir?\" she said as people buzzed around us.\n\n\"It won't give me enough time.\"\n\n\"Time for what?\"\n\n\"Time to get to know your sister,\" I told her matter of factly. \"You're going to invite her to dinner.\"\n\n\"You're going to start seducing her tonight?\"\n\n\"No you dumb, silly slut. YOU'RE going to start seducing her tonight.\"\n\n\"Oh my God, Jay... Sir... Master... \" she babbled before pulling close to me. \"I swear I've never gushed so hard. I love that you're just taking what you want from me... in every way imaginable.\"\n\n\"I'm glad. Because, Carly, from now on, I own you. I have you on recording promising to give me anything and everything,\" I told her, doing my best to sound intimidating and threatening.\n\nShe simply looked me straight in the eyes and said, \"I know, Master. That's exactly what I wanted. I wanted to throw my hat over the wall and commit to you. Commit to us. I meant what I said. I trust you. I know that you would let me back out if I really wanted to. That you won't abuse it. But it's also really important to me that you understand, I intend to deny you nothing. Teach me to be perfect for you. And I will be, Master.\"\n\nI grabbed her and kissed her again as people hurried by us in the hallways, shooting us annoyed looks. \"Good girl. How long do you think it will take before I'm violating your little sister?\"\n\n\"If she's like me? Maybe by the end of the weekend.\"\n\n\"No. You'll have her riding me and giving herself to me by tomorrow night or you'll spend the next month edging without cock or orgasm.\"\n\n\"Master? A month?\"\n\n\"That's what I want. Are you complaining, slut?\"\n\n\"No, Master. I would never complain. I just thought I might have misheard you.\" She smiled sweetly.\n\n\"Words are hard for dumb little fuck bunnies,\" I told her with my most condescending voice. She giggled at me.\n\n\"I'll do everything I can to get my sister impaled on your cock, Master. EVERYTHING,\" she said emphasizing the last.\n\n\"No drugs. No forcing,\" I told her. \n\nShe looked at me before giving me a big grin, \"I know, Master. And it's the fact that you'd say that that reinforces my decision to trust you. I will do anything that you ask me to do. I also know you won't ask me to do dangerous or immoral things.\"\n\n\"Outside of a little lesbian incest,\" I whispered with a grin. \n\n\"Lesbian incest isn't immoral for well bred Asian whores. It's just practicing for our strong, white Masters,\" she said letting just a hint of an accent into her intonation.\n\n\"Mmm... I like the way you think... When I'm not fucking you and turning off that little brain.\"\n\nWe grinned at each other. The flirting and dirty talk just felt so natural to me and I could tell she felt the same. She picked up her phone and dialed her sister, \"Sherry? Hey. It's me. Yeah... I'm in the City. Can we take you to dinner? What? Who's 'we'? Uhhh... Yes... Yes... Yes, you can meet Mr. It's Complicated... Yes... No... Okay... Yeah, we'll meet you at Ippudo? Uhh... 7:30 or 8? Then we can go back to his condo and hang out... No... No it's not far... NO, he's not rich. East 68th... I'm sure you would... We'll see you in a few. Oh... wear something nice... don't dress like a total slut... Fuck off... bye\" she finished and hung up the phone. \n\n\"What was that last bit?\" I asked, confused.\n\n\"You want to see her dress slutty don't you?\"\n\n\"Well yeah, but you said... \"\n\n\"You don't have sisters. Especially little sisters. I just guaranteed that she'll be the sluttiest girl there.\"\n\n\"Well... second sluttiest, maybe,\" I said and I grabbed her ass. She squealed and leaned into me. We finally got out to the cars and grabbed an Uber. Getting over to Manhattan at this time of night was a painful experience. Worth it, but painful. Carly and I made out like teenagers in the car. Her pants were just loose enough that I could slide a finger up the leg and finger her wet cunt without taking them off. Which was good because in the mood I was in, they would have come off right there in the car. New York drivers are way more jaded than Orlando ones though so this one didn't even say anything. I'm sure he enjoyed the view but he knew better than to chance his tip on interrupting us. \n\nWe got there just before 8 and headed in. I tipped the driver who chuckled and said, \"I shoulda tipped you\" before driving off for his next stop. Carly and I laughed at the guy and his almost certain case of blue balls. That's when I caught sight of Carly's little sister. Don't get me wrong, Carly is hot as fuck and might just be the most beautiful girl I've ever scene. But Sherry was sex on wheels. She was short and stacked but unlike Kyrsten, who had that sort of athletic cheerleader build, Sherry was almost an obscene hourglass. And she knew it. She was wearing a short jean skirt and a cutoff shirt that showed off both her very large for her frame boobs and her super thin waist. This girl looked like she must train in the Dita Von Teese school of corsetry. She shook her hips as she walked over to us and gave Carly a big hug.\n\n\"Ohhh... I see why 'it's complicated' sis. Does Dad know?\"\n\n\"She really gets to the heart of things doesn't she, Carly?\" I asked from behind my girlfriend. The hug I just witnessed already giving me ideas.\n\n\"Yeah... she's kind of a bitch that way... No, Dad doesn't know... and we're NOT telling him yet, okay?\"\n\n\"You secwet'sa safe with me sistor,\" she said in a mocking asian accent. The change to the sing song rhythm surprised me. \n\n\"Don't be like that. Dad's gonna kill me isn't he?\"\n\n\"No... he's mellowed. Probably just maim you a little,\" her sister joked. I was really starting to worry about their father. \"Oh... and hey... what's with telling me not to dress slutty when you're dressed like a Fobby Ho.\"\n\n\"Am not,\" Carly said reflexively, then looked at me. I was just enjoying the sisterly banter between the two. \"Fine... maybe a little. Jay likes it when I dress a little... slutty.\"\n\n\"Oh and you couldn't handle the competition? You know I can out slut you anytime old lady!\"\n\n\"No... Jay likes eye candy and I knew you'd do the opposite of whatever I told you. I'm not worried.\"\n\n\"Oh c'mon sis. You know all the white boys want this young asian pussy,\" she said. This girl was brash and blunt and I liked her a lot. I shot Carly a glance over Sherry's head. Carly just shrugged a little as if to say, \"she's weird... what can I say.\"\n\nAs we walked inside, I leaned into Carly and whispered, \"What's Fobby?\"\n\nShe whispered back. And as an aside, let me just mention how erotic it is to hear a woman you're fucking whisper in a sultry voice into your ear. Her voice hissed softly into my ear, \"F-O-B... Fresh Off the Boat, Master. Very insulting.\"\n\n\"Oh,\" I said intelligently.\n\nWe sat down for dinner which was quite enjoyable. The restaurant was great and the Hibachi show was cheesy but well done. As we waited for our deserts, we got around to trading stories. Sherry seemed hellbent on trying to shock me about Carly's past.",
        "\"We're pretty sure she went full LUG in college.\"\n\n\"I was a BUG thank you very much. Don't you remember, Jimmy?\"\n\n\"Jimmy wasn't gay?\"\n\n\"Oh no... not even a little,\" Carly said with a wistful smirk.\n\n\"I'm sorry... what's BUG? More secret Asian culture code?\"\n\n\"Bisexual Until Graduation... versus,\" Sherry said with a laugh.\n\nI interrupted, \"Lesbian Until Graduation... didn't realize that had a name.\" \n\n\"It's pretty common at the Ivies,\" Carly said.\n\n\"Wow, we've been together for a week and this is the first time you dropped the Ivy bomb... and you didn't even mention the school. That is uncharacteristic restraint, in my experience.\"\n\n\"Live in Boston awhile. You get so tired of people saying 'Hahvahd' that you can't help but keep it to yourself.\"\n\n\"She went to Brown. It's like 90% female so... It's LUG or celibacy,\" Sherry said, still trying to surprise me with the idea that her sister might like pussy. A fact I was already well aware of.\n\n\"It's only like 55-45... but there's some real duds in the 45. But some excellent choices in the 55,\" she said sticking her tongue out at her little sister.\n\n\"Well I'm glad I got the best one,\" I said cheesily as I leaned in and gave her a kiss.\n\n\"Eww... old people kissing,\" Sherry said.\n\n\"Hey! We're only like 9 years older than you,\" I shot back and grabbed Carly's thigh high up almost near her pussy. I could feel heat radiating off of it. I'm sure Sherry saw.\n\n\"Yeah, well... Old guys are fine. But young girls are better,\" she said, now trying to shock me with her flirting.\n\n\"Uhhuh... you'll have to work to convince me of that. You want to come back to my place for a few drinks?\"\n\n\"I'm not 21,\" she said as she grabbed her purse.\n\n\"Oh yeah... I'm sure you've never drunk. Well come have your first beer at my house little miss innocent.\"\n\n\"I like him, Carly, he's cute,\" she said to her sister.\n\n\"He's a lot more than cute but thanks. It's nice to know I'll have an ally with Dad,\" Carly handed me her purse, \"Keep an eye on her while I use the bathroom, Sir.\" The last word escaped her lips without her realizing. She was two steps away when I noticed the tiny hitch on her step as she realized what she'd said. We'd agreed it might be a little early for that with Sherry.\n\nSherry noticed, however. She raised an eyebrow at me, \"Sir?\"\n\n\"Just a little game we play. She likes to be a little sassy,\" I tried to play it off. Sherry shrugged. I still wasn't seeing any signs of her being the submissive Kyrsten had seemed certain she was.\n\n\"Whatever... What I really want to know is if you're just another creepy white boy with yellow fever chasing my older sister,\" she said accusingly.\n\nI stuttered a little, \"What? No. I've never really thought about dating an Asian girl much before Carly,\" I told her truthfully.\n\n\"So you only date white girls?\" She asked turning it on me quickly.\n\n\"I bet you only date Asian boys. Isn't that what your dad wants?\" I snapped back defensively.\n\n\"I don't do everything my dad wants. Carly's always been the Daddy's girl,\" she replied, avoiding answering the question.\n\nI looked down at her, trying to discern something. I stepped just a little closer before saying, \"So you're the bad girl of the family?\"\n\n\"Sometimes... but I'm trying to be better. I'm only dating good little Asian boys now.\" The response was an attempt to be pithy but the sense of sadness in her voice was notable.\n\n\"Do you miss it?\" I asked, leaning a little closer.\n\n\"Ye...,\" she started to answer before stopping herself, \"What?\"\n\n\"White men... white cock,\" I told her matter of factly. I was close to her now but not trying to threaten her. Not yet.\n\n\"That's a pretty rude question from my sister's boyfriend. Is that why she's dating you?\" She asked.\n\n\"Yup,\" I said and paused while her eyes got big, \"Carly loves rude people.\" I laughed and enjoyed her expression changing from shock to annoyance.\n\n\"Fuck you,\" she said but laughed too.\n\n\"You'll have to get permission from your sister,\" I said. She took it as a joke but I enjoyed pondering the truth behind it. Sherry was so different than Carly and I liked it. \"Your big sister is really wonderful and special to me.\"\n\n\"Older sister,\" she said. It seemed to be a sore subject.\n\n\"I mean sure. But she's taller than you too though. Right?\" I asked teasingly.\n\n\"Yeah but my tits are way bigger. Doesn't that count for something.\"\n\n\"I'm more of an ass and legs man,\" I said.\n\n\"Well who has the nicer ass and legs?\" she asked flirtily, pivoting to show me her exquisite plump ass. \n\nJust then, Carly walked up and said, \"What's going on here?\"\n\n\"Nothing. Jay was just flirting with your younger sister,\" Sherry tried to throw me under the bus.\n\n\"Your little sister was asking whose ass and legs were better,\" I replied.\n\n\"And what's the verdict, lover?\"\n\nI gave her a quick peck, \"Further research is required.\" I took Carly's hand and skipped away with her as we both laughed. Sherry just humphed and followed, clearly annoyed at her inability to win points at her sister's expense. \n\nCarly laughed, \"Subway or cab?\"\n\n\"Cab... I want to spoil you two tonight.\"\n\nCarly leaned in and whispered, \"Both of us, Master?\"\n\n\"Yes, slut. Both...\" I whispered back forcefully and she shuddered as Sherry walked up. I signaled for a cab and ushered Sherry into the yellow car first, sliding in beside her and pulling Carly in to my right. As we drove off I put my right hand on Carly's leg and slid it up, pushing her skirt aside as I boldly approached her hot, wet cunt. Her breathing got quicker as I leaned in and kissed her, slowly and sensually. My fingers creeped along her sopping wet slit, causing her to squeal into my mouth. \n\nWhile she was doing that, I reached over with my left hand and put it on Sherry's knee. I gave it a squeeze and heard her sharp intake of breath. I kept kissing Carly while fingering her pussy and simply massaged Sherry's knee. I felt Sherry spread her legs and my cock surged in response. That was the moment I knew I was going to fuck her. The only question was what kind of lover she would be. Submissive like her sister? Like Kyrsten? Or maybe not submissive at all. Feisty and fiery like she was, maybe she was aggressive in bed. Would I be okay with that given how spoiled I'd become with Carly? I wasn't sure but my cock really wanted to find out.\n\nThe ride back to my condo only took a few minutes but they were excruciating for Carly and I as my cock was getting more and more desperate while Carly's cunt clearly showed how unbelievably turned on she was. When the cab arrived, I leaned over and opened the door, giving Carly a kiss on her exposed cleavage as I did. When we got out, I took Sherry's hand in mine to help her out then placed my hand on the small of each of the girls' backs and escorted them in. My doorman, unused to seeing me with one hot woman, let alone two, gave me an appreciative smile and nod before ushering us into the building.\n\nWe rode the elevator up in silence. I took a moment to think about the contrast between the last elevator ride I had with two hot women. That time, the sexual tension was palpable. I knew that Kyrsten was going to be mine and so did Carly. This time it was more nervousness. Some on my part, though I was fairly certain Sherry was willing, but mostly on Carly's part. I could feel the sweatiness of her hand in mine. I gave her a quick peck and said out loud, \"Remember your promise, Carly.\"\n\nSherry gave us a glance, confused, but Carly simply nodded. I placed my hand on the small of Sherry's back and guided her towards my condo. It wasn't much, just over a thousand square feet that I'd lucked into during the Great Recession. Like most people working twelve hours days in the City, I had a maid service that kept it neat and the overall impression, especially to a poor college student was probably of upper middle class opulence.\n\n\"It's very nice, Jay,\" Sherry said.\n\n\"It's absolutely lovely,\" Carly said as she leaned in and whispered, \"a perfect home.\" She kissed me sweetly on the ear and smiled, squeezing my hand.\n\nWe all sat down in the rather antiseptic living room outside the more welcoming bedroom. \n\n\"I'm glad you both like it. Though I think it needs the touch of women, myself,\" I said giving Carly a wink. \"How do you imagine spending your time here, babe?\"\n\nCarly looked at me, \"I'm just looking forward to spending time with you.\"\n\n\"Uhhuh... I'm sure that's what you were thinking, sis,\" Sherry said with a grin. \"I noticed how little luggage you brought. Not planning on changing clothes much?\"\n\n\"Maybe... \" her sister stuttered out with some embarrassment. That reminded me that Sherry didn't really know about her little sister yet. \n\n\"Sherry, stop teasing your big sister.\"\n\n\"Older sister,\" she said snappily as she stared at me. Her expression was hard to read.\n\n\"I guess that's true. She did leave for college when you were pretty young. How well did you keep up while she was gone?\"\n\n\"I didn't make it home for summers most years and so really only got to see her and my parents a couple times a year. I'm sorry I missed so much, Sher.\" Carly looked sad when she said it and I felt bad for her. I'd had similar things happen in my life. It was always painful when you realized that there were people that you truly enjoyed that you wouldn't get to spend as much time with as you'd like.\n\nSherry paused for a moment before replying earnestly, \"It's okay, sis. Hopefully Jay living here gives you an excuse to come visit more frequently.\"\n\n\"I...,\" Carly started.\n\n\"No... I didn't mean that like it sounded,\" she interrupted. \"I didn't meant to make it sound so bitchy.\"\n\n\"Well why don't you start getting to know her now. How'd you enjoy high school?\" I asked, trying to move the subject along to wear I wanted it.\n\n\"It was okay, I guess... Ups and downs, same as any kid's... \" she said trailing off.\n\n\"Were you popular? Sexy as you are, I bet you had to beat the guys off with a stick.\"\n\n\"Well not a stick... \" she said sticking her tongue out.\n\n\"Sherry,\" Carly gasped.\n\n\"Oh shut up, Sis. Like you're some prude. I'm sure as soon as I leave he's going to be pounding you while my sexy ass goes home alone,\" her tone was both snarky and flirty and I felt my cock begin to stir.\n\n\"So you have lots of boyfriends then? Lots of sisters bond over stories of their boyfriends. What kinds of guys did you date, Sherry?\"\n\nFor the first time, Sherry looked a little embarrassed. She eyed me, trying to figure out if I knew something. \"Why do you ask?\"\n\n\"Well just based on what you and I talked about earlier... \"\n\nCarly looked between her sister and I. \"What did you kids talk about?\" she asked curiously.\n\n\"About how your sister used to be bad but she's trying to be better... I think you and her might have had some commonalities in male interests.\"\n\nNow Sherry looked very embarrassed and Carly turned towards her with a grin, \"You dated a white guy in school?\" she asked trying to contain her eagerness.\n\n\"Maybe one or two?\"\n\n\"More than one? What did Dad say?\"\n\n\"He didn't know. I kept them secret until the last one. He exploded when he found out. Practically threw me out,\" she said. She hugged herself with her arms and rocked back and forth. I could tell that reliving it was bringing back a lot of bad memories and I squeezed Carly's knee. I didn't need to worry. She'd already sensed the same thing and backed off.\n\n\"So you don't have a problem with me dating a white guy then?\" she asked, shifting the subject.\n\n\"Of course not. I like Jay.\"\n\n\"It sounds like you like white boys,\" she said.\n\n\"Or maybe just white men,\" I said with a leer. Carly studied me in response before licking her lip unconsciously. Her eyes made an unmistakable flick south. I certainly noticed it and I'm sure Carly did as well.\n\n\"Maybe...\" she said. But she recovered quickly and gave herself a little shake, \"But not just any white guy. I'm not some pathetic little Chinese girl that only goes for white guys.\"\n\nSherry moved over to her sister and gave her a little hug. She brushed Sherry's hair to the side and, outside of Sherry's vision, ran her tongue visibly across her lips for my benefit. \"What do you look for in a guy?\"\n\n\"Well ever since dad blew up at me...\"\n\n\"No, sweetie, before that. What do you look for in a white guy?\" Carly said, moving behind her sister and making sure she was looking at me when she talked.\n\n\"I... uhh... I like guys who know what they want,\" she said.\n\n\"MMm... I like that too,\" Carly said as she flashed a tit at me. My cock stirred again inside my pants. Pants that seemed to be getting tighter by the minute. \"When Jay and I met in Orlando, I was really impressed by how quickly he let me know what he wanted.\"\n\nI smiled at my seductive little slut as she continued, \"What else do you like in a man?\"\n\nSherry squirmed. She was already so turned on that she wasn't fully processing everything that was happening. \"Well... I need a guy to be good in bed,\" she said with a smirk.\n\n\"Oh yeah... I need that too... Jay made me cum... uhh... I don't even remember how many times he made me cum last weekend. It was a lot. What do you like in bed, sweetie?\" Carly said as she placed her hands just below her breasts at the bottom of her rib cage. I could tell by Sherry's reaction that she was starting to feel desperate for stimulation of any kind.\n\n\"I like to be able to let him... you know... control things. I don't like to be in charge... \"\n\n\"Oh isn't that the best? Jay comes up with all these super sexy rules for me. Like I can't wear underwear or I can't cum until I do something specific.\" Sherry shuddered at Carly's words. Her sister's lips were right next to her ear as she spoke like some dirty phone sex girl, trying to get her client off.\n\n\"You didn't answer the most intriguing question though, Sherry. Why white guys?\"\n\nSherry squirmed and Carly whispered into her hear, \"Oh yes... little sister. Why White guys?\"\n\nSherry stared at me, blinking and confused. Her mind had gone into arousal overload and she was not thinking straight. Behind her on the couch, Carly pulled her shirt silently off, showing her hard pink nipples to me. \"Answer me, Sherry,\" I said firmly.\n\n\"I... uh... I like the idea... Uhmm... I just like the idea of white guys and asian girls together.\"\n\n\"Is that really it? Do you think that's the real reason, slut?\" I said to Carly.\n\n\"No, Master. I think my little sister isn't being truthful.\"\n\n\"I don't either. And I think that's especially bad, Sherry. Because look at me. Why should you be truthful and obedient to me?\"\n\nShe stammered, confused, turned on, desperate. \"Because... fuck... I promised,\" she said warring with herself.\n\n\"You promised your father that you wouldn't be that girl?\"\n\nShe nodded.\n\n\"You promised Daddy that you weren't some pathetic Asian stereotype?\" Carly said, pressing her tits into her sister's back and playing with the bottom of her sister's shirt.\n\n\"You promised your dad that you wouldn't subjugate yourself to another white man?\" I said as I stripped my own shirt off.\n\n\"Yes,\" she said, staring at me. Her mouth was agape and I could tell she was ready. I gave Carly a little nod and she started slowly pulling Sherry's shirt off. No resistance was offered.\n\n\"Or that you wouldn't allow yourself to be dominated by another thick, white cock?\" I reached into my pocket for something and pulled my own pants down a the same time. When Sherry's shirt was off, she instantly saw my cock proudly sticking straight at her. She moaned.\n\n\"Carly, why do you call me, Master?\"\n\n\"Because I was bred for your cock, Master.\"\n\n\"And if you were bred for my cock, what does that make true of your sister?\"\n\nCarly smiled with a giant grin as she cupped Sherry's tits and presented them to me, \"That she was bred for that thick,white cock too, Master.\"\n\n\"Good girl,\" I told her cupping her chin. I said and I dangled the \"slut\" collar in front of Carly. She grabbed it quickly while her wide eyed sister watched her put it on with trembling hands. Sherry saw her topless sister behind her and became aware for the first time of what was happening.\n\n\"Please... I'm trying so hard to be, good?\"\n\n\"Shhhh... why did you invite your little sister to dinner, Carly?\" \n\n\"Because I can't be here to serve your cock every day Master. And you deserve a well bred, yellow fuck slut who can take care of you when I'm not around.\" Carly said and Sherry's eyes rolled.\n\nI turned back to Sherry, \"Does it sound like I want someone good, Sherry?\" Sherry shook her head as I continued, \"I have your sister for my good girl. I don't want that from a hot, young little sex bunny like you, do I?\"\n\n\"What do you mean...?\" Her words were slow and clear but there was fear behind them.\n\n\"I think you know what I mean you dumb, chink.\"\n\nShe snapped her eyes from me to Carly and back. \"Don't call me that... \" she said in barely a whisper. Her voice was pleading but her hips were practically thrusting at me already and her nipples were rock hard.\n\n\"What my owner means, little sister...\" she said as she kissed Sherry's ear from behind. Her fingers teased around Sherry's large areolas, expertly, \"Is that it's okay with him that you're a pathetic Asian cumsluts,\" she told her sister as she tweaked her hard nipples making her moan. \"He likes tight, yellow pussy,\" her hand pulled up Sherry's skirt, giving me a view of the sodden panties she wore.\n\nMy cock felt full, hard and powerful and Sherry's eyes couldn't stop staring.\n\n\"We were bred to be holes for our betters and my Master has proven he's worthy of my complete submission. He can use me... \" she paused and and two fingers into her sister's quim, \"or my family in whatever way he wants. It's his right.\"\n\nCarly's fingers squelched inside her sister as I walked forward. My cock was inches from Sherry's face as she stood glassy eyed. \"You can have my hard white cock once you tell Carly what you are.\"\n\nSherry paused, still struggling internally, her eyes closed and I realized I was holding my breath. Finally, after what seemed like minutes, she opened her eyes and shuddered as she whispered, \"Your younger sister is just like you. She's a submissively bred, chink fuck doll for white cock. How may this set of yellow holes best please you, Master?\"\n\n\"MMm... you're a very bad girl\" I said with no judgement at all in my voice. I moved my hand to the back of Sherry's head. I pulled her forward, guiding her gaping mouth to my rigid shaft. She effortlessly went down on it. The whole time I stared Carly in the eyes. She never broke eye contact, instead she watched me with love and adoration. \"I adore you, slut.\"\n\n\"Thank you, Master. And I worship you completely.\"\n\nWe stared at each other, wordlessly, as I built up a rhythm. My cock sliding in and out of her sister's mouth as a essentially used her to masturbate. I looked down at the beautiful blank expression of the slut expertly felating me. My cock surged down her throat as I felt my orgasm bubbling up. \"Fuck me with your sister's mouth, sweetie.\"\n\n\"Yes, Master,\" she said and grabbed her sister, forcing her face to fuck me faster. Sherry simply gurgled contendedly and took my shaft deeper.\n\n\"Faster slut,\" I told her with an evil grin.\n\n\"Anything, Master,\" she said returning my smile. She started roughly forcing her sister onto my cock, holding her for a moment before pulling her back and repeating even harder. I quickly felt my orgasm approaching and after a couple more thrusts I pulled out and stroked my cock twice, blasting the two sisters upturned faces with what seemed like a gallon of cum. \"Thank you, Master,\" Carly said as she stared up at me, face covered in cum. \"Thank you for using you and making us beautiful for you.\"\n\n\"Clean your sister up, my pet. I have two more holes to use,\" I told Carly. She dove onto her sibling, heedless of her own cum covered mess of a face. She licked every bit of my cum from Sherry's visage as I watched.",
        "\"Carly is my girlfriend, Sherry. But she's also my obedient little fuck doll. I told her I want you as my personal cock socket when she's not here. Do you understand?\"\n\n\"Yes, Master. Whatever you want Master. My tight, young Asian holes are yours.\"\n\n\"That means I will ruthlessly, mercilessly, cruelly use you,\" I told her as I punctuated each demeaning word with a thrust of my fingers into her cunt.\n\n\"Oh you're so lucky, bitch,\" Carly whispered to her as she licked and kissed her sister's messy face. \"To have our Master use you without reservation or caring about you. So hot.\"\n\n\"Yes please Master. Let me show you how good a set of holes I can be for you. Please Master. Please. I'll be your 24/7 fuck puppet\"\n\n\"No, slut. You won't. You still have school to attend and you'll not fuck that up.\"\n\n\"But Master. You said it yourself. I was bred to be a little yellow slut for your cock. I don't need school. Just your thick, hard, white cock.\"\n\nI grabbed Carly's hair and slapped her face, \"Is your pathetic cunt of a sister already displeasing me?!\" I said with menace.\n\nCarly looked at me then turned back to her sister. \"You're bred to please him, bitch. If he wants you to be educated then you'll fucking do it,\" she told her sister as she pinched the younger girl's tits.\n\n\"Of course, Master. I'm sorry. What can I do to please you, Master?\"\n\n\"Spread your legs and let your sister prepare your other hole for me. Are you on birth control, bitch?\"\n\nShe hung her head, \"I am Master. I'm so sorry. I'm sorry you can't breed me right away. I'll quit them tomorrow, Master. I promise.\"\n\nI slapped Carly again, \"Is your sister stupid or just selfish, cunt?\"\n\n\"You can't get pregnant while you're in school,\" Carly explained to her sister as she licked the smooth cunt between her sister's spread legs. \"Master wants to fuck you and get to know you before he blesses you with his seed. You'll have to earn the right to have his child. Just obey.\"\n\n\"Fuck. I'm so sorry, Master,\" she moaned as her sister resumed licking her snatch in earnest. \"I'll try to do better. I'll stop thinking with my tiny, horny chink brain and just obey Master. I will. Oh God that's good.\"\n\n\"I know, baby. Learning to be a cheap whore is hard. Learning to be a brainless, obedient concubine is probably harder.\"\n\nThe talk and the image of Carly slurping at her sister's cunt had me hard again already. I walked up and pushed Carly roughly to the side, \"Don't touch yourself, slut.\"\n\n\"Yes, Master. I will never touch your property without permission.\"\n\nI nodded and spread Sherry's cunt with my thumbs. \"Beg,\" I said simply.\n\n\"Please. Please make me useful, Master. Please use me how you want. In whatever way you want. I'll be your slut, whore cunt, cock socket, rape meat. Whatever you want. Whenever you want. I swear it. I'm so fucking tired of being good. I need a big, fat white cock to make me bad again. God I need to get railed...\" she shouted desperately.\n\nI rammed my cock home and she screamed. My fingers dug into her soft, smooth thighs as I held her legs wide and took what was mine. I pounded in and out, fucking the sassy little cock teasing bitch I'd met only a couple hours earlier.\n\n\"You like that, cunt? You ready to stop making choices and just be a cum bucket?\"\n\n\"Fuck, Master. Please. Harder. Hurt me. Use me. Don't let me have pleasure. I'm such a bitch. Show me who owns me.\"\n\nHer words spurred me on. I leaned forward, grabbing her tits and mauling them as I tried to shove my dick further into her young, tight cunt. I looked over at Carly who had her hands balled in fists and was trembling from her resistance to touching herself. \"Do you like what you see Carly?\"\n\n\"Yes,\" she choked out.\n\n\"Tell your little sister what you see.\"\n\n\"I see a cheap, pathetic, wanton, yellow whore getting pounded by a white god. I see a stupid chink who spread her legs immediately because she knew she wasn't allowed to say 'No'. I see a fuck toy who has no idea how lucky she is to be allowed even one thrust from that glorious prick.\"\n\n\"Good girl. You can edge yourself now while I unload in this nice young cunt. No cumming for either of you tonight, though.\"\n\n\"Yes, Master,\" Sherry grunted underneath me, \"Don't ever let me cum. I'm a greedy bitch but I crave... oh fuck... So fucking good... denial. Master, punish me with orgasms... Fuck me!! Reward me with denial.\"\n\n\"You are a pathetic cunt,\" I told her as I hammered her even harder. After only another minute, I jammed my hips into hers one last time and filled her up with my juice. As I rolled off of her, Carly dove in, instantly slurping my cum from her sister's gaping, leaking cunt.\n\nI caught my breath while watching Carly work at her sister, \"Please don't make me cum. Please don't make me cum. Please don't make me cum,\" she babbled as her sister sucked my spunk out of the abused hole. She teased her sister too, clearly relishing this new discovery of her sister's denial fetish.\n\nWhen she had fully cleaned her up, I yanked her off her sister and flung her unceremoniously onto the couch. Then I grabbed a handful of Sherry's hair and drug her to the bathroom. \"Crawl in here, cumdump,\" I called after Carly. I heard her desperately horny voice whisper her ascent as I marched her well used sibling into my bedroom. \"Have you ever been fucked in the ass, bitch?\"\n\n\"No, Master. I won't give it and nobody's ever been man enough to take it.\"\n\n\"Good... at least some part of your pathetic body was saved for me,\" I looked into her eyes. She searched mine, looking for... something. I really wasn't sure. I pulled her into bed with me and let her lay across me. Carly crawled to the edge of the bed and kneeled, watching us. \"Carly, I'm going to fuck your sister's ass and then send her home. The sooner that happens, the sooner you can have me to yourself. Does that sound fair?\"\n\n\"Of course, Master. You should always claim a new concubine's holes as soon as possible. May I help to speed the process, Master?\"\n\n\"Of course, slut. Get my cock hard and your chink sister's ass ready.\"\n\nI knew my own limits and two orgasms in fifteen minutes was close to it. Carly was going to have to work hard. She simply nodded and smiled before sliding onto the bed. Instead of diving onto my cock, however, she started licking her sister's ass.\n\n\"Oh. Master. She's licking my ass, Master. Oh it feels nice, Master.\"\n\nCarly placed her left hand on my cock, just teasing and stroking it. I could see the top of her head bobbing along her sister's perfect little ass.\n\n\"Are you glad to be bad again, cunt?\"\n\n\"Yes, Master. Soooo glad.\"\n\n\"Did you miss being dominated by white cock?\"\n\n\"Master, I've never been dominated by white cock. If I had, I never would have been able to give it up. The boys I fucked in high school just knew how to be selfish dicks. Which was fine. I got off on that. But not like you, Master. Not like this. Nobody would have ever had the balls to make me do this. God this is what I needed.\"\n\n\"And what about your Dad?\"\n\nShe frowned. \"I understand why Carly is scared. This is everything he hates. Colonial white men taking the best submissive Asian brides as wives and whores. I don't know, Master. I'm scared for Carly...And for me. Will you tell him about me?\" She asked me. She was being vulnerable and I knew this was difficult for them. \n\n\"No, slut. I won't. We'll tell him about Carly and I eventually but you'll be my little secret geisha girl.\"\n\nShe cooed and rubbed her big tits into my chest, \"Me love you long time, Mastor\" she accented. I felt my cock stir.\n\n\"Are you like your sister? Do you like rules, bitch?\"\n\n\"Yes, Master. I need them. I'm a disorganized, chaotic mess without a strong man to make decisions for me.\"\n\n\"From now on you keep your cunt shaved smooth. No panties. In fact, throwout all of your underwear when you get home tonight. I'll be buying you all knew underwear that's all you'll be permitted to wear.\"\n\nShe shuddered against me and my cock stiffened and twitched. Carly sensed my growing arousal and switched her mouth over, effortlessly taking me into her mouth.\n\n\"I'll buy you some clothes too. You will never wear them unless coming to see me. You'll give me your schedule and if you're not in class or studying you will be available to me at my while. Night or day.\"\n\n\"Yes, Master.\"\n\n\"You will never ask or expect to sleep here while Carly's here. She's my girlfriend. You're a convenient set of local holes.\"\n\n\"Fuck yes, Master. That's all I want to be. Don't ever treat me as anything else.\" Again my cock stiffened in her sister's mouth. I could feel it begin to invade her throat and she murmured happily.\n\n\"You can keep dating Asian boys to keep your Dad happy but you will never get them off with your holes. You'll jerk them off and let them eat you but you'll fake your orgasms. Understand?\"\n\n\"Yes, Master.\"\n\n\"All other cock is off limits but you have to promise that if you ever want something more, you'll tell me. I can't abide cheaters.\"\n\n\"I promise, Master. My holes are for you and you alone.\"\n\n\"If you find a friend who's like you, you can have a strap on though,\" I said with a grin. The image in my head made my cock grow to full length, filling Carly's throat and causing her to gag briefly. \"Your job is to do well in school and practice to become the perfect little chinese sex doll you were meant to be,\" I said and gave her a quick kiss. \"But right now, I'm going to fuck your ass, slut. No...\" I paused, and pulled her face to mine, \"I'm going to TAKE your ass.\" I licked her cheek lasciviously and enjoyed her nearly orgasmic moan. With my free hand, I used her sister's mouth to pump another couple thrusts before pulling her off me and sitting up. \"Lube up that bitchy little sister of your, Carly. I don't want to damage my new toy.\" I gestured towards the drawer of my night stand.\n\n\"Yes, Master,\" she said as she crawled over to the drawer and found the bottle of lube. She squirted a heap into her hand and then started applying it to her sister's flexing asshole. She shoved a finger in, then two, then three. Thrusting and twisting as her sister grunted and groaned. Carly's had slipped her shorts off at some point and her empty cunt gaped at me. I slid my cock between her cunt lips and she moaned a long, \"Thank you, Master. Thank you for filling my useless hole.\" She kept working on her sister until I pulled out. She turned to me and ran her hands along my cock, getting all of the lube she could onto my rigid shaft. \"Enjoy, lover,\" she said and gave me a toe curling kiss that conveyed more emotion than I had thought possible. \n\nI reached under the bed and grabbed a pair of handcuffs from my toy chest. Then I grabbed Sherry's feet and yanked her to the edge of the bed before grabbing her hips and pulling her to her knees. I roughly grabbed her hand and pulled it behind her before cuffing it and repeating the process. The cuffs were tight and allowed little flexibility so she was now on the bed, ass in the air, face in the mattress, perfectly available for my cock.\n\n\"You ever eat pussy before, bitch?\"\n\n\"No, Master. I'm not a dyke like my older sister,\" she said saucily.\n\nI whipped my hand down on her ass five times in rapid succession. \"You don't get to talk badly about my girlfriend like that, whore.\" My voice growled at her. I surprised myself with the ferocity of the reaction and I looked to Carly who stood there practically swooning.\n\n\"You made her ass all pretty and red, Master. That's how it should always be.\"\n\n\"Spread your legs for your dumb cunt of a sister, baby. She's going to learn to please you just like she pleases me.\"\n\n\"Thank you, Master,\" both girls said to my surprise. Sherry was breathing heavily as Carly positioned herself at Carly's prostrate head. \n\nI yanked her head up with a handful of hair, \"Lick her clit good bitch.\" She didn't hesitate.\n\n\"Oh fuck. I needed that. Thank you, Master.\"\n\n\"Remember, baby. No cumming tonight.\"\n\nShe fought off her frown, \"Yes, Master. Thank you for reminding this brainless bimbo, Master. I'm such a dumb cunt I'd completely forgotten your merciful rules.\"\n\nI smiled at her and she returned it, enjoying the game immensely, trusting me that she would get pleasure when I was ready. I grabbed the narrow waist of my new little fuck slut and spread her ass cheeks with my thumbs. Her hole winked at me as I slowly pushed my cock into her tight ass. She let out a long groan and I cautioned her, \"Just relax, slut. I'm fucking your ass whether you like it or not but you'll enjoy it more if you relax.\"\n\nShe murmured something but it was muffled by her sister's cunt and drowned out by her sister's moans. I began to saw back and forth into the hot, tight hole, enjoying the difference between this and her warm, wet cunt. I gave her slow, steady strokes, allowing her to get used to the new feeling. Her moans of pleasure told me I didn't need to worry too much but I knew from experience that different women had different tolerances for the types of anal sex they enjoyed. \n\n\"Fuck yes, Master,\" she managed before Carly jammed her face back into her snatch. I took that as encouragement that she was enjoying it and started increasing my speed. Her moans and screams told me I read it right.\n\n\"Fuck that's amazing, Master. Pound the bitch and make her scream in my cunt some more.\" I complied with the perfectly reasonable request of my girlfriend and increased the force of my thrusts, slamming her head into Carly's cunt and making her scream more. \n\n\"Such a perfect little cumdump,\" I said, gripping her hips and driving hard and fast into her. I fucked her sweet little ass for another ten minutes before I felt my orgasm bubble forth. \"Oh fuck yeah,\" I said as I gave her another last thrust, filling her up. I casually rolled off of her and padded into the restroom to wash myself up. \"Come clean yourself up, whore, and get out of here so I can spend some time with my girlfriend.\"\n\n\"Uhhhhh... yes... Master,\" she said as she pulled herself out of bed. She got cleaned up after me while I watched her.\n\nI saw her pick up her clothes and look at her bra, \"Throw your underwear away, slut,\" I told her as she started to get dressed. Carly giggled as she cuddled next to me.\n\n\"Yeah you dumb bitch. Don't you remember your, Master's rules?\"\n\n\"Yes, Master. I'm sorry, Master. My brain isn't quite working right.\"\n\n\"Isn't it glorious?\" Carly said with another laugh as she nuzzled my neck. \"I so love being reduced to a brainless bimbo because of this glorious white cock,\" she said as she teased around my spent shaft.\n\n\"Fuck you two are, hot. So I'm free to lez out, Master?\" she said as she stepped into her shoes.\n\n\"Only with girls you think are likely candidates to fuck me. And you have to be the dominant and them the submissive. Understand?\"\n\n\"Yes, Master. My cunt is only to be used for the ultimate purpose of pleasing you... \"\n\n\"Well said, slut. You have a very good attitude. Now go get some rest and meet us back here tomorrow at 2pm. I have some things I want to do to you.\"\n\n\"Yes, Master. Anything you want, Master.\"\n\n\"We're going to test that attitude tomorrow, cunt. Come here for a second,\" I said as sudden inspiration flashed. \"Turn around,\" I told her and grabbed a black marker from my night stand. I pulled her skirt down slightly and wrote just above her ass, \"White Owned Holes\". I pulled the skirt up and smacked her ass. \"You can look and see what I wrote when you get home. Don't wash it off. I'll check tomorrow, cunt.\"\n\nShe bowed her head submissively and let herself out of my condo. I grabbed Carly and pulled her close, \"Tell me what you're thinking, babe,\" I whispered to her. Now that all the adrenal and arousal had slipped from me, I wanted to be absolutely sure I hadn't pushed things too far with her.\n\n\"Master, I've never been more aroused in my life then watching you claim her like you did. I love that. It pushes every fucking one of my buttons.\"\n\n\"Because she's Asian?\"\n\n\"Noo... not quite... I mean that helped... don't get me wrong. That was hot as fuck. But no... Just watching YOU... just... ughh... TAKE what you want. You can't understand how hot it gets me,\" she said as she writhed against me, rubbing her soaking wet cunt along my leg.\n\n\"So you'd want me to do that again? With other people?\"\n\n\"Yessss,\" she said undulating her hips again.\n\n\"With her young little college friends?\"\n\n\"Uhhhuh,\" she said and closed her eyes in pleasure.\n\n\"Or with your friends?\"\n\n\"Oh, God yes... \"\n\n\"And you're okay with me humiliating you when we do it?\"\n\n\"Fuck... Master... Yes... But... Oh God, Jay... honestly I didn't feel humiliated,\" she said dropping her tone slightly into a vague resemblance of a serious voice.\n\n\"Really?\"\n\n\"Yes, really. You whipped her ass viciously when she talked down to me. What's hot is that YOU treat me like an object but you also protect me from other people treating me that way. It makes me wet whenever I think about it.\"\n\n\"And you didn't mind... you know... doing things with your sister?\"\n\nThis time she blushed, \"I... I've been thinking about it all week. I like women, Master. She was right about me in college. I was nearly an exclusive rug muncher for four years with very little cock. I'd never thought about her as being sexy... partly because she's my sister and partly because, until recently, she was in the part of my brain that marks her as underage. But when you said you were going to fuck her, I... I couldn't stop thinking about how hot she's become. She's unfuckingbelievably sexy. So curvy she's practically obscene. She's like an Asian Jessica Rabbit and i couldn't get those images out of my head. That's... uhmm... that's what I've been edging to this week. Beach pictures of her from Spring break she sent out.\"\n\n\"I'm glad, babe. I was worried I might have pushed it too far.\"\n\n\"No, Master. You were perfect. You're always perfect. I've yet to be unsatisfied.\"\n\n\"And how do you feel about me doing things with your sister?\"\n\n\"I already told you, it's hot as...\"\n\n\"No... sorry... how do you feel about me doing things TO your sister. Making her do things. Treating her like a fuck toy. She seems to get off on that even more than you.\"\n\n\"You noticed that, huh? It sounds like she's a bit of a denial slut. And maybe even more into the humiliation than I am. I trust you. I think you'll only do things that you know she gets off too. If she wants to be treated like gutter trash by her white Master than that's how her owner should treat her.\" \n\n\"God you're amazing. You're fucking perfect, Carly. We've got to figure out this living situation because I don't like spending 5 days away from you every week.\"\n\nShe looked sad for a moment, \"I know, Master. I have some ideas. But let's not ruin the night with real world talk. Can we just lay here?\"\n\n\"Absolutely, babe,\" I told her as I squeezed her. I closed my eyes and started to drift off before remembering one last thing. \"Your legs and ass are the best, b-t-dubs.\"\n\n\"Mmm... thanks Master,\" she said and she was out just moments later."
    ],
    "authorname": "Masterful_Husband",
    "tags": [
        "incest",
        "sister",
        "cuckquean",
        "asian female",
        "submissive",
        "romance",
        "denial",
        "threesome",
        "raceplay",
        "interracial"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/carlys-wmaf-fantasy-pt-07"
}