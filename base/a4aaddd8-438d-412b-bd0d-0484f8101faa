{
    "title": "Alex and Emma Pt. 13",
    "pages": [
        "===========================\n\nPART 13: ONE FOR THE BOOKS\n\n===========================\n\nIt was my turn to stroke my fingers over Alex's face and see him wake up slowly.\n\nI'd left him alone for over an hour, though I had checked on him twice. He'd been out of it, both times. His head tilted to his left shoulder, drool trickling out of his parted lips. His hands hung limply in the cuffs. And there was no tent in the covers.\n\nThe first sign he was awake was a raising of his chest akin to trying to stretch his back, which would have been difficult with his bindings. Then his arms moved, rattling the chains still tethering him to the headboard. His feet twitched under the comforter before his neck twisted side to side while he moaned.\n\nThere was the slightest movement under his eyelids, and then they flickered open. Turned to where I sat beside him on his right. A sleepy smile stretched across his face. \"Mmm. Hi, Mistress.\"\n\n\"Welcome back, Loverboy. Did you sleep well?\"\n\nHe closed his eyes momentarily while he nodded, his grin stretching across his face. When he stared back up at me, his gaze was still half-lidded. But it grew wider when there was movement in the middle of the bed. Right where his hips were. Then he whimpered while yanking on his wrists, his breathing growing sharper.\n\nI kissed his forehead and rose, smiling at his sounds of helplessness. Deliberately, I pulled back the comforter and revealed his cock. The pearl-beaded cock ring was snug against the base, and it looked lovely with the end of the purple prostate vibe sticking out of his lovely asshole.\n\nAlthough he probably couldn't see either items from how he was lying, he would definitely be able to feel them.\n\nTurning back to him, I unbuttoned his black-and-white striped dress shirt I'd kept on until the only buttons still secured were the two right below and over my breasts. I parted the sides, revealing I was wearing nothing else underneath. Then I gave him a mischievous smile. \"Are you ready to play? Mistress wants you nice and hard before she fucks you.\"\n\nThe thought of how I was going to continue the torture made me moan. Oh yes, I had lots in store for him before I sent him off to school for the week. Maybe then he'd think harder about holding out on me when he wanted to switch. At least when he dragged out the sessions with me, I found release multiple times. Then again, I was a woman. It was frustrating and somewhat exhausting, though, when I tried every trick I could think of and he still didn't come. All because he had such control over it.\n\nNow? He was going to want to come but wouldn't be able to.\n\nAlex moaned, writhing sensually under my gaze. He gasped suddenly, licking his lips before he finally nodded in answer to my last question. Was he leery or excited about the prospects of using the toys? Maybe both?\n\n\"Good boy.\"\n\nHis whimpers grew louder, the emotion on his face rapt attention.\n\nI lightly dragged my fingers across his chest. At his nipple, I circled it with my first nail. The redness had faded, but the teeth marks still remained. Interesting. I hadn't realized I'd bitten him so hard.\n\nHe moaned breathily, softly pushing his body into my fingers. Apparently reveling in my touch.\n\n\"Arch your hips for me. Show me how much you want me.\"\n\nThe image of him doing it in an instant made him look like a...well, a complete slut. Hips thrusting up, his cock swollen already, standing at full-staff. What a showman.\n\nI grabbed two pillows from the chest I'd found in the closet\u2014the man was prepared to make someone very comfortable if needed\u2014and shoved them under his hips. It created quite the picture with his back almost bowed now and his arms and legs tethered to either end of the bed. \"There, that should stop you from moving.\"\n\nHis expression was pure bliss...until he tried to wiggle his hips and must have realized he couldn't. A shadow came over his eyes, and his mouth dipped into a frown for a moment. His cock twitched, he let out a soft groan, and then he licked his lips.\n\n\"Are you thirsty, Loverboy?\"\n\nAt his nod, I crawled onto the bed and over his body, pausing while straddling his chest to undo the remaining buttons but leaving the shirt on. Then I knelt on the pillows beneath his head with my feet wedged under his shoulders. I gradually lowered my pussy to his mouth, leaning forward so my breasts rested against his outstretched hands, and purred, \"Drink.\"\n\nI felt his mouth open wide, his lips wrapping around my wet pussy. Lapping up my arousal. His moans vibrated my own swollen flesh while he rolled my nipples in his fingers.\n\nRocking against his mouth and hands, I moaned, \"Be a good boy. Make me come.\"\n\nHis lips found my clit, sucking and licking at once. His moans increasing while his hands tried to squeeze the flesh I'd pressed into his palms.\n\nRocking. Shivering. So very close. I struggled with my own breathing. \"Oh! What a good boy!\"\n\nHe seemed to increase his efforts, tugging on my clit with his teeth, his nose rubbing into my mound.\n\nThe feeling of his tongue flicking against me. His lips. His breath. Mmm. What a delight. I circled my hips over him. Moved forward a little. \"Fuck me with your tongue.\"\n\nThere was a resounding moan and a nod beneath me before a tongue slid backwards through my pussy and rubbed over my opening before pressing inside.\n\n\"Yes, Loverboy! Yes!\" I ground harder against his mouth. Gripping his fingers now, mine laced through his. Shaking so hard when I came that I fell forward, panting.\n\nHis muffled moans continued, his tongue not letting up. And I thought I heard him yell the word \"plug.\"\n\nI rolled off on his left side to recover, my head resting by his hands.\n\nHe was whimpering and gasping, his body shuddering.\n\nA quick look down proved he was still hard as a rock and hadn't come, though his cock waved invitingly. It was probably throbbing. The vibrator in his ass had to play a part in his own reaction.\n\nI was sure with my release that his own muscles must have been contracting as well. And with the shape of the vibe, it also worked as an anal plug. While he would normally have been able to squeeze it out if he'd tried hard enough, the pillows under him prevented it. What a conundrum!\n\nFeeling tingly all over still, I rubbed my foot against his side and curled up next to him. Jut like I had this morning before his nap. But now, my breasts rested by his face.\n\nHe took the cue and turned his head. Suckling sounds accentuated by soft moans filled the air when he captured my right nipple in his mouth.\n\nI stroked his head...his hair. Aftershocks rippled through me, and I held him to my bosom. Felt his smile against my flesh. Which made me smile. He was happy he'd satisfied me.\n\nRecovered for the most part, I finally got up and kissed him softly. Moaning when I tasted myself on his lips. I cupped his face and deepened the kiss, sliding my tongue into his mouth. My breasts heaved against his shoulder. Wetness lingered from his attention, allowing me to glide against his skin.\n\nAlex's mouth opened wider under mine. Letting my tongue take ownership of him. His body tried to press up to mine.\n\nOn a whim, I slid a hand down the front of his neck, squeezing lightly beneath where the collar lay...testing if he liked that or not.\n\nHis cock twitched in response. And his teeth captured his lower lip, though it did little to stop the moan my action coaxed out of him.\n\nI kept my grip on his throat\u2014just enough pressure to keep him from lifting his head, which was currently the only part of his body he could move due to the restraints\u2014and kissed him long and hard.\n\nHis moan cut off when his breathing tightened, his neck stretching. It allowed my hand to fully spread out across his taut skin. To feel his blood pumping beneath my palm.\n\nBreaking from the kiss, I trailed my tongue up his jaw to his ear and whispered, \"God, you make me so fucking wet, Loverboy!\"\n\nHe shuddered under my mouth, gasping, \"Mistress!\"\n\nThough pleading, it wasn't a frightened sound. Or strained in a concerning way. Rather, the word was\u2014without a question\u2014a call of desire. The man was insatiable.\n\nI slipped my other hand between my legs then brought my fingers to his lips, my thumb stroking his throat where I still held his neck. Then I nuzzled his neck below his ear, licking and nipping at his carotid that was straining under his skin.\n\nThe whimper that came from him was more of a cry. His head turned, exposing himself further, his body tensing and relaxing with each of my whims. Surrendering completely.\n\nMy hand on his throat flexed. Caressed. Then I held him tighter for a moment, the back of my hand pushing the metal collar up under his chin while I stared down into his pleading eyes. \"You are mine, Loverboy. Mine.\"\n\nHis moan at my words was long and loud. A tear trickled out of his eye when he pushed his neck against my hand, the smile on his lips telling me he loved the feeling. His tongue darted out a few times before he managed to rasp, \"Then take me.\"\n\nI released him, stroking the reddened skin with my fingertips, which made him sigh and shiver. When I finally abandoned his throat, I sat up and trailed my hand along his side down to his exposed hip, propped up in the air by the pillows.\n\nHis cock was still at full-staff, red and swollen looking. Most likely, painfully hard.\n\nCaressing him there with my palm for the briefest moment, I watched his body strain to rise more when I moved away. His cock twitching in my direction as though following my hand.\n\nHis whimper was one of obvious frustration now, his wrists and ankles tugging at the cuffs. His hands reaching for me. But it was all in vain. And it made sweat trickle down his forehead.\n\nI smiled at how hard and thick his cock looked in its own private restraint. How it jerked from its extended post. I placed my right palm parallel just beside but not touching the tip again where a single bead of precum bubbled out of the slit there. I watched it roll across the smooth head and then be captured by the rim of his foreskin where it remained, the trail behind it glossy.\n\nI could feel the heat of him. See the tension in his face now that he clenched his teeth. The cock ring was doing its job. Keeping him from coming, no matter how badly he craved it. I watched his eyes, which were watching my hand. Begging me to touch him.\n\nA small part of me laughed at the irony of the situation. At how I'd been opposed to this almost two weeks ago but found pleasure in my control over him now. There was definitely a rush. I could see how he could enjoy it when he was overpowering me, restraining my mind if not my body as well.\n\n\"Tell me?\" I murmured, moving my hand around his cock but still not touching. My voice sounded a bit like Smurf's on \"Animal Kingdom\" when she talked down to her adult boys. \"Come on. Tell me what you want, Loverboy.\"\n\nAlex moaned brokenly and bit his lip; apparently had been for a while by the red indentations I could see. He started to shake his head but stopped. Maybe it was my glare because he was trying to resist me, or maybe he just knew this time he wasn't going to win. Either way, he cried softly, \"P-please take me Mistress! Please claim me however you want!\"\n\nWith his eyes on me while he was begging, I moved my left hand between his legs and turned the vibe on low the second he finished.\n\nHis body arched hard, his last two words higher pitched as they morphed in to a sharp yelp. His eyes went wide, mouth gaping. A moment later, the vibe jerked violently against my left palm where it had remained at the end sticking out of his ass. He must have clenched down on it. His reaction brought the tip of his cock closer to my right palm, brushing it against my soft skin.\n\nThe silent scream on his face was enthralling. The way he tried to thrust closer. To press against both of my hands in turn, one way then the other. I took pleasure in watching his body writhe on the bed. The way his eyes shot daggers at me, possibly from my denial. The way his cock leaked more precum that just pooled around the rim of his foreskin like a cup about to runneth over.\n\nThen there were the sounds... His moans. Groans. The rattling of the chains that resisted his attempts to move, arousing me even more.\n\nWhat the hell was wrong with me? Had I traded my submissive ways for sadistic ones?\n\nGranting a little mercy, I turned off the vibe and watched him recover.\n\nAlex collapsed back to the bed, as much was allowed. He lay there, sniveling and shivering. The latter slowly ceasing while the former continued.\n\nSo I turned the vibe back on, noticing how it affected him like an electric jolt.\n\nAnd just like that, he humped the air like a porn star, his hips trying to angle his cock while I moved my hand around it without touching.\n\nOnce more, I shut off the vibe.\n\nHe collapsed again, his face a twisted conglomeration of relief and defeat with a glimmer of pleasure, because honestly, we both knew he was loving it. Though that pout accompanied by a whimper...\n\nWith a quick twist, I turn the vibe back on but to the second setting. Using the distraction, I quickly straddled his waist and impaled myself on his rock-hard cock. His screams were lost to my moans of pleasure. The heat of him made me cry out as well when it pierced into my own furnace. I was so wet, he slid in with ease, though my pussy gripped his shaft along the way.\n\nI came on contact, shaking so hard I couldn't remain sitting up. I fell forward onto his chest, panting heavily. Holding onto him, I felt the vibrator in his ass sending pulsations up through his cock into me. Prolonging my release. My own words were at a loss.\n\nThe way I had his hips propped with pillows, he was also prevented from thrusting up into me. Once I recovered a little, I rocked back and forth on him until I could sit upright again.\n\nInside me, I could feel his cock shaking, his balls hard under my ass while they pushed up against the cock ring.\n\nHis cries sounded frustrated now, his head rolling from side to side. His body just lay there beneath mine, his hips still between my knees while his cock felt like a molten, steel pole sliding in and out of me. Stoking my fire with this own.\n\nI bit my lip, trying to concentrate. Rocking slowly, I pushed my hands against his chest until I was finally sitting up straight. Only to let out a loud growl because he buried deeper inside of me at that angle. I could feel the cock ring rubbing within my pussy lips. The damn vibrator pulsing like a third heart.\n\nFor a very long moment, I could only sit still, feeling my blood pumping in my ears as it also moved through my walls below that continued to grip and release his cock. My chest heaved, missing a few breaths. My vision went blurry. I gripped his chest with my fingernails, his sharp groan reminding me there were two of us here.\n\nI blinked and look down at him. So much emotion was written in his eyes...his face...his taut body. It made my breath catch in my throat. Because the expression he reflected back said one thing: he was utterly owned by me. And I knew he would put up with anything I threw at him if only to make me happy.\n\nIt was difficult, but I pulled my gaze from his and followed his outstretched arms. Licking my lips at the way his muscles and tendons strained under his skin leading up to his fisted hands on the other side of cuffs that had left red marks around his wrists.\n\nI managed to slip a finger between my legs then brought it\u2014dripping\u2014to my mouth, my eyes locked on his again while I slowly licked my cum off. Sucking on my finger like my pussy was still sucking on his cock. My left hand cupped my breast, squeezing it. Pinching my nipple and rolling it between my fingers. Rocking back and forth again, but not up and down, I kept him buried within me. Watching him watching me fondle myself.\n\nAlex licked his own lips. Occasionally darting his tongue out, indicating he wanted a taste. But mostly, he pouted up at me while he drooled. His eyes were riveted to mine. His cock throbbed in the confines deep within me, unable to find release yet.\n\nOh, I knew he could do it eventually with enough effort. A cock ring didn't prevent ejaculation completely. It just prolonged it. Relief was evident. It was just a matter of when. And my methods of tiring him out helped, as well.\n\nTo further torture him, I slid my hands up and down my body. Over my breasts, lifting them to him, though he couldn't possibly reach them. Not even with his mouth. Licking my lips, I contracted around him below. Preventing him from doing anything but pulse inside me.\n\nHis breathing was hard and ragged. Punctuated with soft cries. His eyes followed every move I made while his face became a mess of his own slobber.\n\nMy hands glided over my hips, across my thighs. Back up and around to squeeze my ass. Down to stroke his inner thighs behind me. Closer and closer to the base of his cock. His balls. Resting my right hand beside his leg so I could arch back, I tweaked my nipple then quickly reached behind me with my left hand and turned the vibe up to full blast.\n\nI cried out, the vibrations trembling harder through him to me.\n\nIt took a moment to collect myself before I raised and lowered my hips. Leaned back as I was and with his head propped up on the pillow, he would clearly be able can see his cock slipping out of my pussy with my gentle thrusts. And the cock ring was surely soaked now with my dripping fluids.\n\nShifting my weight to my left hand behind me, I caressed my breast with my right. Squeezing, pinching, rolling. Then I snaked my hand down between my legs. My fingertips touched his cock as it continued to invade and withdraw from me.\n\nHe made no sounds at all now. His breaths were tight, and he seemed to hold it for long periods while I continued to ride him like a living, breathing Sybian where the shaft remained stationary.\n\nMy eyes on his face, I stroked my ultra-sensitive clit. Knowing he could see me rubbing it...using his cock to masturbate in front of him. My knees hugged his hips. My ass bouncing off his toned thighs.\n\nAnd then I felt myself come undone again. Screaming out, \"Oh God, Loverboy!\"\n\nThough my body continued to clench around him inside throughout my orgasm, I stopped moving on top of him. My release made it impossible to move, frozen in an upright, riding position. I could hear the chains rattling again. His body shaking beneath me while he tried to get free. A thought flitted through my brain, wondering if he tugged hard enough could he break the chains or the hooks?\n\nBut his whimpering and sobbing broke through my haze again.\n\nHe was so fucking hard inside me. Vibrating as though his cock was a dildo. I wanted to feel that it wasn't just a toy to be used.\n\nFinding a surge of energy, I leaned forward, pressing my breasts to his chest for a moment to catch my breath. It was a bit of a struggle with both of our weights on them, but I managed to yank the pillows out from under his hips. Then I cried out when his body fell back to the bed, which withdrew his cock further than he'd been able to today.\n\nUnable to move, I just lay panting on top of him, propped up on my knees. Moaning at the lack of fullness I'd felt until now. He was still inside me, but not enough. On that last scrap of energy, I reached up and kissed him softly.\n\nMy voice hoarse, I begged him, \"Sweet Loverboy, fuck me as best you can. Fuck me until you come.\"\n\nThere was a loud groan, and then his cock slammed up into me, almost bucking my body off his. He seemed to be taking out all of his frustration now. Ramming into me as hard as humanly possible. His balls slapping against my ass. Every thrust completely filling me, pushing me past my capacity.\n\nI was so exhausted, I could only lay on him. My hands gripping the sweat-soaked sheets beneath his shoulders. My mouth lazily moving over his, my tongue playing.",
        "He hummed and kissed me back aggressively, thrusting his tongue into my mouth, pushing my tongue out of the way. Fucking my mouth just as he was pummeling my tight pussy. Apparently making me feel just as used and owned and fulfilled as I had tried to make him.\n\nYet no matter how hard he fucked me, he didn't come. Was it the ring or his own goddamned stamina?\n\nI moaned helplessly into his mouth. Rubbing my breasts against him. Sliding sweat on sweat. I struggled to reach up and grip his hands.\n\nHe laced fingers with me. Without the pillows under him, he was able to bend his legs and force himself up into me even harder.\n\nI didn't know about him, but I needed more. I needed his hands on me for this last leg. Reluctantly unraveling one hand from his, I found the release button on each of the metal cuffs, freeing his hands. I was going to try to massage his shoulders a little, knowing his arms were probably sore from being stretched and restrained for so long. But he surprised me.\n\nThe second the cuffs fell away, he growled and surged up, his fingers digging into my hips. And then he was bouncing me violently on his cock.\n\nI wrapped my arms around his neck, hanging on for dear life. He proved once again that despite all I'd done to him, he was still stronger.\n\nOne hand pulled my hair, jerking my head back. His need shone through his eyes. His jaw clenched, and sweat soaked his hair up top, dripping down the sides of his face. There was fire and desperation in his grip, in the way he moved beneath me.\n\nI just gasped, feeling him just thrusting shallowly, his ass still buzzing wildly beneath us. Eventually, he released my hair. I nuzzled my face in his neck, the hardness of his collar pressing against my cheek while I tried to find my voice. I kept having to pause to swallow and take breaths, his pounding below making me jerk.\n\n\"Sweet Loverboy... Do you want me to release your ankles so you can fuck me on my back?\"\n\nHe kissed my neck, marking every inch with his lips and teeth, nodding. Then he growled, \"I'm going to destroy you.\"\n\nOh, God! Yes! Please!\n\nI licked my lips and somehow managed to say, \"Be still for a moment.\"\n\nIt surprised me when he obeyed, though he was trembling between my legs. I leaned backwards on the bed between his legs so we didn't separate and unbuckled his left ankle. There was a loud clatter, but I ignored it, twisting to reach the opposite side.\n\nAs soon as the buckle fell from his right ankle, his arms grabbed mine, helping me sit up.\n\nI noticed his collar was gone the moment before I stared hazily into his stormy-blue eyes. Both indicated the tides had changed. I choked on my next breath and whispered, \"Destroy me, Sir.\"\n\n### "
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "dominance",
        "submission",
        "bdsm",
        "bondage",
        "switching",
        "toys"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/alex-and-emma-pt-13"
}