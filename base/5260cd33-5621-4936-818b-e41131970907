{
    "title": "Balance of Power Ch. 03",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n***\n\nPart 11 - The Results\n\n\"It wasn't even close.\" I said forlornly. Everyone groaned, but some were still watching me most very closely, especially Our Sheriff.\n\nI couldn't hold it back any longer. I grinned and said \"Only the Sheriff won by a wider margin than we did; the new Charter passed, 61.8% to 38.2%.\"\n\nThe room erupted into applause. Then the roar of applause in the main room outside could be heard as KFXU announced the results: \"And the results are in!\" said Catrina Pierce. \"The new Town & County Charter passed by a strong margin of almost 62% voting in favor, while 38% voted against...\"\n\nThere was much hugging and shaking of hands as we all celebrated. And then everyone but the Commission Members left and joined the now-large audience in the main room. Sheriff Griswold and Daniel Allgood walked to the podium, to large cheers.\n\n\"It's a great night for our Town & County!\" said the Sheriff. \"And now let's bring out the group that made it happen. Ladies and Gentlemen, the Charter Commission!\"\n\nI don't know why, but I had a fleeting flashback of being in a line to jump out of a perfectly good aircraft as we lined up to go through the door and on stage. The Rev. Williams went first, followed by Edna Carter, then me in the middle, then Edward Steele, then Savannah Fineman. The applause was huge, and the lights in our faces were bright, making it a bit hard to see.\n\nPer prior arrangement, Town & County Councilman Edward R. Steele went up to speak for us. \"Thank you all for coming, and for your support in this process, and getting it through the vote. We could not have done this without you!\" Everyone cheered.\n\nThen Mayor Allgood came up. \"We asked these five Citizens to take on a tremendous task. They devoted hours of their time over several months, and worked tirelessly to produce a new Charter that will govern our lives for years to come. On behalf of the Council, the Assembly, and the People of the Town & County, as Mayor I would like to give you these tokens of our esteem.\"\n\nFive young persons brought out five plaques, engraved on a silver (or chrome) plate with a wood background, that commemorated and thanked us for our service in the successful completion of writing the new Charter. The Mayor called out each name, and the audience cheered as they went up to receive their plaques. Mine was last.\n\n\"And last, but certainly not least,\" said the Mayor, \"the Commission Chairman who put it all together and led the Commission to the successful completion of its goal, Don Troy!\" Everyone cheered as I went up and received my plaque, which was like the others except for two things: it noted me as Chairman, and there were 'J' hooks attached to the bottom that curved forward.\n\nThe Mayor invited me to speak. I went up to the microphone and said \"This was truly a team effort. My four colleagues on the Commission gave up hours of their time to work on this, and worked very well together out of diverse backgrounds to write this Charter for you.\" The audience cheered.\n\nI continued: \"And we had help from so many of you. We received input from many of you that took the time to attend our hearings, and that input was so valuable to us. I know that Mrs. Carter greatly appreciates the input from the County's teachers---\" A huge round of applause broke out; I now knew where all the teachers in the room were.\n\n\"The input from our teachers was greatly helpful.\" I said. \"I also appreciate the help of a great man, who has forgotten more than most of us will ever even know about this County's history, Sheriff Antonio Griswold!\" Very loud applause for Our Sheriff. \n\n\"Thank you for your help, and for your votes.\" I said to finish, and began stepping back. I did not get far. And it did not take much deduction to know why those hooks were in my plaque.\n\nThe Reverend Williams had come up and put his hand on my shoulder to keep me in place. He said \"If I may, Mr. Mayor...\" he said. Daniel extended his hand towards the podium, and the Rev. Williams came up and said \"No one worked harder on this Charter than our Chairman, Donald Troy.\" Applause broke out, then Williams continued: \"Don Troy guided us through these waters and herded the cats, and the strength of his leadership is what led to our success. So on behalf of my fellow Charter Commission Members, I'd like to present you with this token of our esteem.\"\n\nHe held up a crowbar, only about a foot long and thin. But it was plated in brilliantly silvery chrome, and was designed to fit and hang under the plaque on the hooks. I accepted the crowbar and held it up for all to see as the audience applauded. Rev. Williams extended his hand, but that was not enough. I hugged him, then hugged the other four Commission members.\n\nThen I went back to the podium. \"This is technically our last Charter Commission meeting, and I announce that the Charter Commission is adjourned sine die!...\"\n\n* * * * * * * * * * * * * *\n\nOur formal celebration party would be Thursday evening. The party began breaking up right after our speeches. I was quickly surrounded by the Press for comment, and I tried to bore them by saying the successful result was due to my Commission teammates and the People of the County. I didn't really answer the questions they were hurling at me.\n\nIt was after midnight when we finally got home to The Cabin. Teresa and Todd had come by and picked up their boys. After a few minutes of talk about the vote results, Molly and Maggie went to the other bedrooms to get some sleep. Paulina was already here, and staying for the night in the master bedroom with Laura and me.\n\nLaura went up to bed, and I went out on deck with a celebratory single malt Scotch. As I sat in my usual place, watching the stars in the sky and the twinkling lights of the Town in the valley below me, I crossed my legs in the 'English' style, like a figure-4... \n\n*PLOP!*\n\nI looked down to see that Tiger Mom had jumped up onto my lap, and was now lying her body in a circle around my legs. I could feel that she was perfectly balanced, and I thought to myself that cats must just know how to do that. I began gently stroking her, and was rewarded with some of the loudest purring I'd ever heard; it was like a powerful motor somewhere inside her. \n\nIt was the first time Tiger Mom had ever let me pet her, and I availed myself of the opportunity for a long while...\n\nPart 12 - Discipline\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded MILF reporterette at 7:00am, Wednesday, September 25th, from the rooftop of the building at Riverside and College, with the Civic Center across Courthouse Square as the background. \"The new Town & County Charter is now in effect!\"\n\nBettina began: \"In a stunning surprise result, the Town & County Charter proposal passed by a 61-38% margin, despite less than 20% approval in the northern County suburbs. We have with us Karl Frazier of Public Policy Polling to break it down for us. Karl!\"\n\n\"Thank you, Bettina.\" said Karl Frazier from what looked like a political 'war room' in KXTC studios. \"As you said, the overall result was 61.8 to 38.2 percent for the new Charter. The dismal results in the northern suburbs was more than offset by large approval majorities in the middle-class and relatively poor districts. Also, blacks voted for the Charter in surprisingly large numbers.\"\n\nBettina: \"Karl, can you tell us why minorities voted for the Charter, when it does away with Boards of Inquiry that protected minorities from Police brutality?\"\n\nFrazier: \"Bettina, our exit polling showed that the overwhelming reason stated by minority voters yesterday was the new School Board. Blacks valued better education for their children over all other issues.\"\n\nBettina said \"Thank you, Karl!\" then to the viewers: \"Not everyone was happy about the result last night. Roll tape.\"\n\nTape rolled, showing one of the leaders of the NEA, the powerful Teacher's Union, saying in a speech at the losing gathering the night before: \"Tonight was a devastating defeat for our hardworking teachers, and for education in the Town & County. But the NEA will continue the fight on behalf of our teachers and our children!\" The tape cut off so that the weakness of the applause was not shown.\n\nBettina: \"And in other news, Fire Chief Patrick Quinlin has called for a Press Conference at 8:00am, but did not give details of what it would be about. Sheriff Antonio Griswold had previously called for a Press Conference at 9:00am. KXTC will cover both Press Conferences.\"\n\nBettina: \"The new Charter is now the cornerstone of the law, but many of its new provisions will not go into effect until January 1st. The Town & County Council will meet tonight, and they are expected to call for elections for the new School Board, Inspector General, and other newly created positions. These elections will be non-partisan free-for-alls, and will be on Election Day, Tuesday, November 5th. Runoff elections, if needed, will be on Tuesday, November 26th. Those wishing to run in the election must register no later than 5:00pm, Tuesday, October 8th.\"\n\nBettina: \"And Channel Two News has learned that the Council may also ratify the new Police structure so that rank changes and promotions can take place on November 1st, if not sooner. They may also exercise a clause in the new Charter that will allow the Fire Department to use traditional bugle insignia of rank as well as gold insignia instead of silver in some instances. The Sheriff's Department will also receive those exceptions...\"\n\n* * * * * * * * * * * * * *\n\n\"Chief Quinlin's presser? What's that about?\" I asked as we drank coffee in the Chief's Conference Room.\n\n\"I'm not sure.\" said Chief Moynahan. \"The Sheriff is not here now because he said he had called Fire Chief Quinlin and Battalion Chief Tucker to his office for a meeting at 8:00am. Looks like Quinlin doesn't want to be therrrrre.\"\n\n\"Looks like Chief Quinlin is trying to get a jump on things.\" said Cindy Ross. \"I'll bet he announces his immediate retirement, so he can collect his pension.\"\n\n\"He can tryyyyyy...\" said Chief Moynahan.\n\n\"What about Battalion Chief Tucker?\" Teresa Croyle asked. \"He only has 18 years, and no MOV upon which he can base a retirement claim.\"\n\n\"He's going to be summarily fired.\" said the Chief. \"The Sheriff may give Quinlin the option to retire, but if he's not at that meee-tinnng...\"\n\n\"So, Don,\" said Cindy, \"congratulations on the Charter. How do you feel?\"\n\n\"Thanks\" I said. \"I feel... well, mostly relieved. But it feels a lot like our criminal cases. We work on it, we finish it, and that's that and we move on to the next case.\"\n\n\"And your next case,\" said the Chief, \"is our meeting with D.A. Walters at 11:00am. I had invited her to lunch, but she said she preferred to meet here at the Police Station.\"\n\n\"That's so she can get up and leave if you start giving her any lip about whatever she's going to do.\" Teresa Croyle very astutely said.\n\n\"I am surrrre,\" purred the Chief, \"that both of my Crowbar Commanders will be on their very best behav-yorrrrr...\"\n\n\"Yes sir.\" I said. \"My very best behavior.\" Somehow, I don't think that gave the Chief a warm and fuzzy feeling.\n\nJust then there was a knock on the door. It opened to reveal Lt. Jerome Davis. \"Commander Troy,\" he said, \"can you come to MCD for a moment?\"\n\n\"Uh, sure.\" I said. I did notice as I followed Jerome into the hallway that the Chief and my Angels were following us.\n\nAnd when we got to MCD, I knew why. When I came in, a large contingent of Detectives burst into a round of applause. Precinct Captain Hewitt and Lieutenant Rudistan were there, also. Along with doughnuts, there was a cake that had been brought in, a nice caramel cake. In white icing on the top, it said \"Congrats on the Charter!\"\n\n\"Aw, thanks guys.\" I said. \"And I gotta admit: I need the sugar rush, so cut me a piece of that cake!\" Everyone cheered, and a small morning party commenced.\n\n* * * * * * * * * * * * * *\n\nAt 8:00am, my Angels and I were in my office. I turned on the monitor to KFXU.\n\n\"And here's Chief Quinlin to speak now.\" Priya Ajmani said. The camera turned to focus upon Fire Chief Quinlin, who was standing in front of Fire Department Headquarters.\n\n\"The People have spoken.\" said Chief Quinlin. \"I accept their decision and the result of their vote. But I cannot in good conscience abide by the decision to create a new EMS that is not under the full and complete control of the Fire Department. Therefore, I have submitted my resignation and my papers to retire, effective immediately. I want to thank the Officers and Firefighters of this great Fire Department for their support while I had the honor to serve as their Chief. I'll be taking no questions at this time.\"\n\nAs he walked back into Fire Department Headquarters, the camera turned back to Priya, who said: \"And there you have it! Chief Quinlin has resigned over the creation of a new EMT service...\"\n\n* * * * * * * * * * * * * *\n\nAt 9:00am, Sheriff Griswold came out the front doors of City Hall to the 'front porch', as it was colloquially called, and to the podium upon which rested a bank of microphones. A gaggle of Press were in a semi-circle in front of him.\n\n\"Thank you for coming.\" growled Griswold. \"I am announcing that I am not accepting Fire Chief Quinlin's resignation, and am putting on hold his retirement papers. This is for the purpose of bringing up Chief Quinlin on several charges, which include insubordination, as well as wearing his Fire Department uniform for a political ad with the intent to be seen as representing the Fire Department. I have begun the process of firing Chief Quinlin as well as summarily firing Battalion Chief Tucker. As part of that, Chief Quinlin will be stripped of his pension. What are your questions regarding this situation?\"\n\n\"Sheriff!\" shouted Priya, \"why didn't you take action immediately after Fire Chief Quinlin made that ad?\"\n\n\"The ensuring controversy might have affected the plebiscite on the new Charter.\" growled Griswold. \"That would not have been fair to the People of the County nor the Charter Commission that worked their butts off writing the new Charter. So I delayed taking action until today.\"\n\n\"If the Charter had failed to pass,\" asked an Indian reporterette that no one recognized, \"would you still have fired them?\"\n\n\"Yes.\" said the Sheriff. \"I only delayed the action so that a fair vote on the Charter could be held. The result was not an issue, just the timing.\"\n\n\"Do you expect the Fire Captain's Union to grieve your actions, Sheriff?\" said Bettina Wurtzburg.\n\n\"If they do, we'll deal with it at that time.\" said Griswold.\n\n\"Sheriff, who will you be naming to the Fire Chief position?\" asked Keith Madden.\n\n\"I'll be making a nomination to the Council soon.\" said Griswold. \"Assistant Fire Chief Davies is Acting Chief in the interim.\"\n\n\"Sheriff, do you expect the Firefighters to strike over the creation of a new EMS?\" shouted Bettina.\n\n\"No.\" said the Sheriff. \"A strike would be illegal, and I would fire any strikers. And any Firefighter that does not like the new EMS can signify so by raising their hand and saying 'I resign.'.\"\n\n\"Sheriff, who are you going to name as the new EMS Chief and Assistant Chief?\" shouted Priya.\n\n\"We'll be having an announcement on that soon.\" said Sheriff Griswold. \"I've already got some people in mind, and I just need to get them to accept my offers,. Then we'll go to the Council with the names.\"\n\n\"Sheriff, will you support a Board of Inquiry for Commanders Troy and Ross regarding the accusations of Police brutality in the wake of the attacks on AFC Davies and his fianc\u00e9e?\" asked Bill Hacosta.\n\n\"As far as I'm concerned, my Police Officers acted properly and did not use excessive force to apprehend the alleged attackers, who we know have ties to the NEA, the powerful Teacher's Union.\" growled Griswold. \"The Council will have to call for a Board of Inquiry.\"\n\nWith that, the Sheriff said \"Thank you, everyone.\" and walked back into City Hall. Within an hour, the Fire Department Captain's Union filed a grievance on behalf of Fire Chief Quinlin and Battalion Chief Tucker.\n\nPart 13 - Reward and Punishment\n\n11:00am, Wednesday, September 25th. District Attorney Miriam Walters entered Police Headquarters and was escorted to the Main Conference Room. Already present were Police Chief Moynahan, Deputy Chief Ross, Police Commander Troy (me), and Captain of Detectives Tanya Perlman. The Chief was sitting at his usual place at the near end of the table. Cindy was to his left, and I was to hers. Miriam Walters sat to the Chief's right, her back to the door, and Tanya to her right.\n\n\"Thank you for coming, Ms. Walters.\" said the Chief after Miriam sat down. \"The Sheriff sends his regrets; he's putting out fires in the Fire Department, pun fully in-tenn-dedddd.\"\n\n\"I understand, and thank you for having me.\" said Walters, who did not even crack a smile at the Chief's joke. \"And congratulations, Commander Troy, on the Charter passing.\"\n\n\"Thank you.\" I said politely. \"ADA Fineman contributed greatly to its success.\"\n\n\"Yes, she did very well.\" Walters said, making me feel like I'd made a mistake in praising Fineman.\n\nGetting right down to business, Walters said \"The reason I'm here today is to let you know the changes I'm making to the District Attorney's Office. These changes bring us into line with many other D.A. offices in the State, and some of them will affect our interactions with the Police Force, especially the Detectives.\"\n\n\"Do you have a presentation that you need to connect to our screen?\" asked the Chief.\n\n\"No, it's verbal.\" said Miriam. She settled in, then started: \"First, I'm hiring two Investigators. As you know, they will not be full Law Enforcement Officers, but they can and will investigate new leads we might develop in cases that have come to us from you, question or re-question witnesses or other people, work to clarify situations as needed, and help prep witnesses for trial.\"\n\nShe looked around the room, possibly not having expected the silence that greeted her. I noticed she kept glancing towards me out of the corner of her eye, as if judging my reaction. I was keeping my face a mask of iron passivity.\n\n\"No comments?\" asked Walters.\n\nTanya took up the bit: \"Please just make sure we know who they are, and that they work with us and not at cross-purposes. I don't want them and our people stepping on each other's toes.\"\n\nChief Moynahan said \"I hope you'll consider having them work with Sheriff Grizzzzwold. He will teach them everything from crime scenes to questioning people, just as he teaches our De-tec-tives.\"\n\nMiriam said \"That's a good idea. Also, per the State Code, our Investigators can get warrants for your Officers as well as Sheriff's Deputies.\" I worked hard not to glance at Tanya; that was a big part of her desire to bringing an Intelligence Division into existence.\n\n\"The second part concerns the structure of the District Attorney's Office.\" said Walters. \"It is common, especially in this State, to have Deputy District Attorneys as the main prosecutors working with Law Enforcement and in the Courts, and for Assistant DAs to be supervisors and the DA's representatives, so to speak. Because of potential... 'optics' issues, I believe the best way to go about this restructuring is to have every current Assistant DA be re-designated Deputy DAs. At some point in the future, supervisory ADA roles would be filled as needed.\"",
        "Miriam continued: \"As an example from the past, after the Merger there were two Police positions that were not filled at the time: Commander and Deputy Chief. Over time, as the Police Force grew along with the Town & County, those positions were effectively filled. That probably should've happened with the DA's office, but they named them ADAs instead of DDAs. So we're just following some precedent in all this.\"\n\nI again had noted that Miriam had glanced over towards me every few seconds, to see how this was going over with me. As she finished, she was understanding the concept of the silence in the room being 'deafening'.\" I also noted that everyone else had been glancing over at me, and I was getting the sense that Cindy was really trying to reach into my mind and read me.\n\n\"Any comments?\" asked the Chief, looking right at me. But it was Cindy who spoke first.\n\n\"When will you be making promotions to ADA from DDA?\" Cindy asked, her voice sounding calm, but her ice blue eyes boring into Miriam Walters's beady black peepers showing otherwise.\n\n\"That will be months down the road.\" Miriam said. \"And not until it's determined that there is a need for that layer of supervision.\"\n\nThen Walters attempted another line: \"One other thing... you and your Detectives will be working with our DDAs, not future ADAs, once this is put in place. I know you have your opinions on who is best, and I'm not here to argue that with you. But by making this change now, you get to continue to work with the same people. They just have different titles and locations on the org chart.\"\n\nShe's trying, I thought to myself. She's a good politician; she's twisting the English language around to suit her agenda. She's even clutching at the straws of examples of my own promotion to suit her cause. But it's an insult to my intelligence to tell me that demoting Paulina is the best if not only way we get to continue to work with her. Fortunately for her, the Chief asked and the Sheriff ordered me to 'be nice'.\n\nAll eyes were now on me, and I knew I had to speak. I said \"I've been asked to be nice, so I won't ask what happens if Savannah Fineman loses the Solicitor race to Ted Mason again. What I will say is this.\"\n\nI straightened up in my chair and said (calmly) \"Something I learned in the Army, as well as in my first civilian job, was that you can always give more, but to take away creates enmity. If you give someone a raise, that's good, they'll be loyal. But if you come back a month later and say 'we have to take your raise away', you'll create enmity, and disloyalty will result.\"\n\nI continued: \"And not just with the person you're taking from. You'll create enmity, or at least distrust, with those who remain. Most of them will wonder in the back of their minds if they're next, or if more will be demanded of them if they get to keep their raises.\"\n\n\"You made the example of my own promotion.\" I said. \"Let me counter with another example from the Police Force: when we restructured to align the Detective ranks more similarly to other Police Forces in the State and the Nation, we did not demote anyone. At all. Those who were Senior Detectives, which outranks Sergeants, were left in those positions, and they're grandfathered in. The new structure only applies to new, incoming Detectives. By doing that, we did not create ill will within the Detective Corps.\"\n\n\"And sometimes nothing works to prevent enmity.\" I said. \"When the Fire Department Battalion Chief position was scheduled to be reduced to the same level with Superintendents, we made clear it would not apply to the current Battalion Chiefs. But they still whined about it. So we went the other way; we upgraded the Superintendent position. The Battalion Chiefs whined about that. And then we raised the AFC and Fire Marshal positions, and the Battalion Chiefs called that a demotion of the Battalion Chiefs.\"\n\n\"My point to all this,\" I finished up, \"is that if you take away, if you demote, if you elevate others and leave someone behind, or even just the appearance of it, you create enmity. And a plague of boils ensues. The Fire Department is about to erupt into chaos. And I believe it's the same with your ADAs... or could be. You have four left: Washington, Patterson, Fineman, and Gregory. If you demote any or all of them, you will create enmity, ill will, and not just with them. Make the structural changes if you wish. But don't take away from anyone, or leave them behind.\"\n\nThe Chief and Cindy were nodding vigorously in support of my words. Tanya's eyes were sparkling, which I knew meant she approved. However, I might as well have been talking to a slab of black marble as I looked into Miriam Walters's beady black eyes... as I saw that my words had no effect... or perhaps less than zero effect... on her.\n\n\"Thank you for your input, Commander.\" Walters said icily. Then she said to everyone \"That's all I have. If any of you know anyone that might be a good Investigator for us, send me their r\u00e9sum\u00e9.\"\n\n\"Thank you for coming by, Ms. Walters.\" said the Chief. \"I look forward to working with your new people.\" He got up, then the rest of us did, indicating the meeting was 'ovah'. He personally escorted the District Attorney to the front lobby...\n\n* * * * * * * * * * * * * *\n\n\"Thank yooooo, Mr. Crowbar,\" said the Chief, \"for not taking the District Attorney's head, even though she would have very much deserved it.\"\n\nThe Chief, Cindy, and I were eating lunch in the 'command' back room of the Cop Bar, which we had to ourselves; there was no one from the Fire Department's leadership in the room. I was having the Double Breakfast Cheeseburger Plate, Cindy was having the Fish and Chips basket, and the Chief was consuming a massive Chicken Salad.\n\nCindy said \"And what you said was very good, maybe the best thing you could have said to her.\"\n\n\"I did not like it that she was trying to use yooooo as her example to demote the ADAs.\" said the Chief.\n\n\"Neither did I.\" said Cindy. In case you're wondering, I was not answering because I was stuffing my face with the delicious burger that had been expertly cooked to my most very happy satisfaction. \n\nI finally said \"Walters was just practicing her political skills, which are considerable. But she was clutching at straws, really reaching to make justifications for what she truly wants to do. And she did not like it one bit that I countered her example with one of my own.\"\n\n\"Do you think you changed her mind, at all?\" Cindy asked.\n\n\"I may have delayed the inevitable.\" I said. \"But that's all. She's going to do what she wants to do. But I'm not really concerned about that right now. I'm wondering what's going on with the Fire Department. And we have the Council meeting tonight. I will make my public report that the Charter is passed, and with that the Charter Commission will cease to be.\"\n\n\"I can tell you where the Fire Department is.\" growled the voice of Sheriff Griswold, followed by him coming up to our table. \"If I can join you, that is.\"\n\n\"By all means, Sheriff.\" said the Chief. \"Have some fries until you can order.\"\n\n\"I placed my order at the bar.\" said the Sheriff, taking some fries anyway. \"As to the Fire Department, the Union grieved my actions to disallow Quinlin's retirement and to fire him without a pension, and to summarily fire Tucker. Both are suspended without pay. I thought it would take some time, but the Union agreed to meet with us and decide things tomorrow morning.\"\n\n\"That's good.\" said Chief Moynahan. \"They're not going to wait for the Council to have input? Or a Board of Inquiry?\"\n\n\"Who knows what the Council is going to do.\" growled the Sheriff. \"My sources tell me that the Union knows they're going to lose, so they want to get it overwith and move forward. I suspect they want to force themselves to be the EMT's Union, as well. So... as you like to say, Crowbar: teachable moment! What would you two young whippersnappers do if you were me?\"\n\nCindy said quickly and with alacrity: \"I'd rip them both new ones, and fight the Union all the way. You can't let the insubordination go, Sheriff, and you delayed it for the election. If it were me, I'd bring the hammer down, and take Quinlin's pension away. I'd fire Tucker, and take away his years of service towards his pension, so that he can't get a County job for two years and get a pension.\"\n\nThe Sheriff nodded, then turned to me and said \"Crowbar?\"\n\nI said \"You might be surprised to hear this, Sheriff, but I might not act too hastily. First, I would hammer Tucker. Like Commander Ross said, I'd summarily fire him, and in such a way that if he gets another County job, his years with the TCFD cannot count towards a pension. Maybe even bust him down to Firefighter Apprentice and then put a boot in his ass.\"\n\n\"As to Chief Quinlin,\" I continued, \"it depends on several factors. His years and record of service vs. the seriousness of this incident; how the Fire Department overall is going to take whatever you end up doing to him; and finally, the Union negotiation tomorrow.\"\n\nI finished: \"If it were me, I'd go in guns-blazing, then do the back and forth with the Union and work them down to my ultimate goal of allowing Quinlin his pension, but at a reduced rank, such as Captain... kind of like what Chief Moynahan did to Della Harlow. In exchange, the Union throws Tucker under the bus and you make a huge example of him.\"\n\n\"I like that.\" said Griswold. \"And that's likely what is going to happen.\"\n\nAt that moment, the Sheriff's Double Cheeseburger Plate came, and we talked Police 'shop' as we ate our meals...\n\nPart 14 - Ranks and Files\n\n7:30pm, Wednesday, September 25th. I was in civilian clothes, though with my badge on my belt and my holstered gun under my armpit under the suit jacket. Teresa Croyle was in her 'black' uniform. We didn't know if there would be trouble tonight, and it was possible a lot of 2nd Shift Patrol Officers were patrolling right near City Hall.\n\nI noticed that the crowd filing in was fairly large. There were a large number of blacks of various ages, but very few of them were wearing red t-shirts; most were nicely dressed. There were also a good number of people I recognized as schoolteachers. And there were a few unkempt persons, mostly young and white, wearing green PCGW t-shirts.\n\n\"What's with all the schoolteachers?\" I asked Teresa.\n\n\"If you don't know, sir, I sure don't.\" Teresa replied.\n\n\"Well, keep your eyes peeled.\" I said. \"It might be some NEA protest. If anything starts up, I want it shut down very, very quickly.\"\n\n\"Roger that, sir.\" Teresa replied, very eager to implement those instructions should it become necessary.\n\nThe Council Members filed in and took their seats. Mayor Allgood addressed the audience: \"Because of the passage of the new Charter last night, we're going to have a lot of work to do tonight. So we're not going to have speakers address the Council tonight, except for the one that is required by law to do so. If you have an issue that needs quick redress, please fill out one of the forms in back, and someone will contact you.\"\n\nThe Mayor called for the lawsuits and other papers to be presented, and they were moved along. Then he said \"Charter Commission Chairman Don Troy is recognized to speak.\"\n\nI moved to the central podium and said \"It is my duty and my pleasure to report to you that the new Charter was approved by a vote of the People of the Town & County yesterday. I have submitted a written report of the Charter Commission's actions, as well as another report that outlines what the Council needs to do in preparation for the implementation of the new Charter. And with this report to you, I am pronouncing the mission of the Charter Commission completed, and that the Commission is herewith dissolved.\"\n\nThe Mayor said \"Without objection, enter that into the record.\" There were no objections. The Mayor said \"Chairman Troy, on behalf of the Town & County Council, Assembly, and People, I thank you and your Commission for your hard work and the successful result of it.\"\n\nSomeone began clapping, and soon everyone was standing up and applauding. The people in the audience that were teachers were the first to rise up out of their seats, and the blacks in the audience did, as well. I would learn later that they were so happy with the School Board that they came to the meeting just to applaud me.\n\nBut it was not all good: the green-shirted environmentalist punks of the PCGW did not sand up, and I noted that Kelly Carnes and Malinda Adams stood but did not join in the applause...\n\n* * * * * * * * * * * * * *\n\nWork began being done. The Council ratified the call for an election of newly created positions on Election Day, to fill a one-year term until the regular election, after which the terms would be two years, like most Town & County elected offices. The elections would be 'jungle style', where everyone runs on one ballot, with political affiliation listed by the person's name, and the top two in a runoff unless one person got 50% + 1 votes.\n\n\"I move,\" said Reginald B.F. Lewis, \"to go into Executive Session, for the purpose of bringing back up and discussing the proposed promotions within the Police and Fire Departments. The Sheriff has also submitted names for the leadership of the new EMS, which will require ratification.\"\n\n\"Without objection?\" said the Mayor. There was one objection, by J.P. Goldman, who requested and required a recorded vote. That vote was 10-0; Goldman was just being ornery. \"Will Commander Troy and Captain Croyle join us?\" said the Mayor...\n\n* * * * * * * * * * * * * *\n\nI don't know how he did it, but as I walked into the private Council Chamber and turned sideways to sit down in one of the chairs against the left side wall, Sheriff Antonio Griswold had appeared out of nowhere and had come in right behind me. He sat down next to me, to my right. Teresa was on my left side, and the Sergeant-At-Arms was sitting a couple of seats down from the Sheriff.\n\n\"Can we get a report from the Sheriff on the status of the Fire Department, please?\" asked Kelly Carnes. The Mayor looked over at Sheriff Griswold, who nodded and came up to the podium at the far (from the doors) end of the table.\n\n\"The Union grievance will be heard tomorrow morning.\" growled Griswold. \"It is very likely that at the end of that meeting, the Fire Department will need a new Chief. I am submitting Assistant Chief Warren Davies to you for promotion to Fire Chief, in the event the vacancy comes open tomorrow.\"\n\nMayor Allgood said \"I think we may have to wait until the vacancy is assured, meaning we'll ratify it next Tuesday, unless you guys want to have a special session.\" There were murmurs of general agreement over that.\n\nReginald B.F. Lewis then said \"We have received a formal complaint as well as a lawsuit concerning TCPD excessive use of force in the arrest of six persons who attacked AFC Davies and his lady friend. While the initial motion to call for a Board of Inquiry was defeated, I am making a new motion---\"\n\n\"Point of order!\" snarled J.P. Goldman. \"We voted that down already.\"\n\n\"The initial BOI request, yes.\" said Susan Weston. \"But a new request based on the lawsuit would be considered a separate item.\"\n\n\"And I second that motion.\" said Kelly Carnes.\n\n\"You were not recognized, Mrs. Carnes.\" said the Mayor woodenly. \"Let's get the legalities of this straight first.\"\n\n\"Here's a precedent.\" said Malinda Adams, sliding a file folder across the table to the Mayor. Daniel Allgood examined the contents.\n\n\"I have a different Point of Order.\" said Dagmar Schoen. \"With the new Charter passed, aren't Boards of Inquiry a thing of the past, now?\"\n\n\"No.\" I said, speaking up. \"Though I'll be the object of the BOI, I'm compelled to say that the Boards of Inquest are part of the new Inspector General's Department. An Inspector General must be elected, and in general the Boards of Inquest won't be in effect until January 1st. So until then, it'll still be the old way of doing things.\"\n\n\"You're too damn honest for your own good, Crowbar.\" growled the Sheriff.\n\n\"It is what it is, Sheriff.\" I quietly replied. Then I spoke more loudly: \"But I'll remind everyone that the Police Union will grieve any BOI that includes Finneran in any capacity based upon new evidence against him, and it'll be tied up for months. That's not a threat, just predicting the future.\"\n\n\"Commander Troy and his cover-up Union won't have a choice.\" said Kelly Carnes. \"So what are you going to do, Mayor? Are we just going to sit here all night?\n\n\"Mind your tone, Mrs. Carnes.\" Mayor Allgood said flatly as he finished reading the material. \"Yes, this case from several years ago might be a precedent, but it also could have been a wrong precedent. I think we need to get an opinion from the City Attorney.\"\n\n\"Why don't we come back to this?\" said Reginald B.F. Lewis. \"Since my motion was not seconded, I withdraw it.\" Teresa and I glanced at each other; we could both tell Lewis had something up his sleeve.\n\n\"Okay, let's talk about the Police structure, which will include some promotions.\" said Mayor Allgood. \"The way this works is that the new Charter requires that all Precinct Captains are automatically promoted to full Captain at the New Year, and Supervisors and brevetted Lieutenant are promoted to full Lieutenant. Our mission, if we choose to accept it, is to make those promotions effective November 1st, if not sooner. Any particular date you'd like, Commander Troy?\"\n\n\"October 1st.\" I said. \"We have to have new badges made, and that'll take a few days.\"\n\n\"Including yours, Commander?\" asked Reginald B.F. Lewis derisively.\n\n\"Including mine.\" I replied, not rising to the bait. When Teresa looked at me quizzically, I whispered \"Tell you later.\" She nodded.\n\n\"Does this include the promotion to Operations Commander?\" asked Susan Weston, also derisively.\n\n\"If you pass the new rank structure, yes.\" I replied.\n\n\"If this doesn't pass,\" said Sheila Sorrells, \"will there be repercussions? Any problem for the Police Force?\"\n\n\"Not really.\" I said. \"But we like getting our candy, and Sheriff Griswold wants his four-star candy.\" Laughter erupted, and the Sheriff peered at me and then guffawed when he saw me grinning at him. Susan Weston looked furious; she knew that was a direct shot across the bow at her repeated comments about the TCPD giving out medals like candy.\n\n\"I'll tell you what.\" said Reginald B.F. Lewis. \"I'll vote to pass this... as long as there's a provision in it to disperse the Detectives to the Precincts.\"\n\n\"Not gonna happen.\" I said. \"And just so you know... even if you passed that, I'll just have all-day meetings and training sessions for the Detective at Headquarters. I will get around it. But it's not going to pass, because it will harm the Police Force... and only you and Mrs. Carnes actively want to harm the Police Force.\" That got me an ugly look from Carnes... but she did not deny it out loud.\n\n\"Why the hell not?\" Lewis almost screamed. \"What do you have against dispersing the Detectives? Why do you think that's such a bad thing?\"\n\n\"Because if they're scattered like a covey of partridge across the County, they can't talk to each other face-to-face about their cases!\" I all but yelled back. \"They're a unit! a team!\"\n\n\"I can wait until New Year's Day for my candy, Lewis.\" growled Griswold. \"Your 'fake news' offer is a non-starter.\"\n\n\"How about this, then?\" said Sheila Sorrells. \"We pass the structure and promotions, effective October 1st.. if we get our Board of Inquiry.\"\n\n\"And Commissioner Finneran as lead examiner!\" Kelly Carnes happily added...\n\n* * * * * * * * * * * * * *\n\n\"My badge says 'Commander'.\" I said to Teresa as we left after the meeting ended. \"My new one will say 'Police Commander', since we now have Commander and Lt. Commander ranks, and 'Chief of Operations' and 'Commander of Operations' positions. So I'll be getting a new badge.\"",
        "\"What will my badge say?\" asked Teresa. You can tell by the form of our sentences that the rank structure passed. So did the BOI referral.\n\n\"It will say 'Lt. Commander'.\" I said. \"And congratulations, Commander of Operations Croyle!\"\n\n\"And you're a star now... literally.\" said Teresa, with as much of a grin as we were going to get from her. \"And that was hilarious, what you said about the Sheriff wanting his candy.\"\n\n\"Damn right, I want that.\" said Sheriff Griswold, who was walking right alongside us back to Police Headquarters.\n\n\"Our Sheriff will now have the uniform he deserves, and that the People need to see.\" I quipped.\n\n\"You're going to look great, Sheriff.\" Teresa said, in an excellent display of asskissing.\n\n\"Har.\" said the Sheriff. \"So what did you young whippersnappers think of my nominations for the EMS Chief and Assistant Chief?\"\n\n\"The Assistant Chief did not surprise me.\" I said. \"But you totally got me with the EMS Chief nomination. I had no idea that was coming...\"\n\n(Author's note: Can you guess who the EMS Chief and Assistant Chief will be? Keep reading for the answers...)\n\nPart 15 - Resolutions\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded MILF reporterette at 7:00am, Thursday, September 26th, from the rooftop of the building at Riverside and College. \"Commander Troy will be required to face yet another Board of Inquiry regarding accusations of Police brutality!\"\n\nBettina began: \"The Council referred a complaint and an NEA lawsuit of Police brutality to a Board of Inquiry, to determine if Commander Donald Troy and Deputy Chief Cindy Ross used excessive force in arresting six protesters the Police said were assaulting Assistant Fire Chief Davies and another person. Some Council Members insisted that Commissioner Finneran be on the Board of Inquiry and the lead examiner, but it was not clear if that would actually happen.\"\n\nBettina droned on about the case, then finally got to other news: \"We will be having breaking news throughout the day. Council Member Reginald B.F. Lewis will be issuing a statement this morning. Inspector General Horace S. Wellman, brother of University President Sidney P. Wellman, will hold a rally as he announces that he will be running for the I.G. post, which under the new Charter is an elected position in the newly independent Inspector General's Office.\"\n\nBettina: \"District Attorney Miriam Walters will be holding a Press conference this morning to outline changes to the District Attorney's Office. Channel Two News has learned that one of those changes could be the demotion of ADA Paulina Patterson, who is black, in favor of ADA Savannah Fineman, who is white and a close friend of D.A. Walters.\"\n\nBettina: \"And Sheriff Griswold will be holding a news conference this afternoon, from which we are expecting to hear a resolution to the punishment of Fire Chief Quinlin and Battalion Chief Tucker. The Union grieved the Sheriff's attempts to separate both men from the Fire Department, and the hearing will be this morning. Sheriff Griswold also said that he will reveal the names of the leadership of the new EMS leaders at the Press conference, which the Council approved last night, but redacted the names until they accept the nominations and are announced by the Sheriff.\"\n\nBettina: \"And the Council passed a resolution to allow the branches of the Public Service Department to implement the new rank structure outlined in the new Charter on October 1st. Among those changes, the Battalion Chiefs are demoted to the equivalent of Superintendents instead of being on par with the Assistant Fire Chief and Fire Marshal. Also, Precinct Captains will now be full Captains in the Town & County Police Department...\"\n\n* * * * * * * * * * * * * *\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\nIt was my Police iPhone ringing as the Command Group and my Angels drank coffee in the Chief's Conference Room. \"Hello, Ms. Walters.\" I said as I answered.\n\n\"Commander, did you tell Bettina that crap about me demoting Paulina?\" Walters angrily asked.\n\n\"No, Ms. Walters.\" I said. \"Scout's Honor, it wasn't me. And you know I don't speak to KXTC at all.\"\n\n\"Who the hell was it, then?\" Walters practically shouted.\n\n\"If I knew, I would tell you.\" I said. \"And I do wish I knew, because I hate leakers in the Police Department more than you can possibly know.\"\n\n\"All right, then.\" said Walters. \"My apologies. And what that bitch Wurtzburg said is totally 'fake news'. She has no idea what I'm going to say.\"\n\n\"That's never stopped her from lying on the air before.\" I said. That lightened Miriam's mood considerably. She apologized again, told me to watch her news conference, then we disconnected.\n\n\"Wow.\" I muttered as I set the phone down on the table, and related to everyone what had been said.\n\n\"If you'd leaked that, Bettina would not have run with it.\" Tanya Perlman astutely said. \"And judging by the racial overtones in the way Bettina reported it, she's trying to gin up something.\"\n\n\"The silver lining to this,\" said Cindy Ross, \"is that judging by Miriam's phone call, she doesn't intend to demote Paulina.\"\n\nTeresa replied \"Or she did intend to do it, and now Bettina has laid the table to make a racial issue out of it.\"\n\n\"What do you think, Mr. Crowbarrrr?\" drawled the Chief.\n\n\"I think...\" I said, \"... that I need more coffee, and we'll find out what Miriam has to say when she gives her Press conference.\" After pouring more coffee into my mug, and everyone else's that needed it, I said \"Oh, one more thing: I had thought Reginald B.F. Lewis was going to resign days ago. But apparently he waited to see what the Charter vote would be, so I expect his presser today is to announce he won't run again.\"\n\n\"Good call, off on the timing.\" said Cindy. \"But if you were perfect, you'd have been writing the Ten Commandments instead of the Charter.\" Amidst the laughter, a red crowbar was waved in her general direction.\n\n\"Did my proposal for an Intelligence Division get acted upon?\" Tanya asked.\n\n\"Yes.\" I said. \"It was submitted, and the Council referred it to the Committee of the Whole, which is their way of being able to get together and talk about something without having to go through the hoopla of, or most of the hoopla, of the Rules of Order, and having to keep transparency notes.\"\n\n\"Darn.\" Tanya said, her spirit deflating at the news. \"I was hoping it'd sneak through.\"\n\n\"Don't be upset.\" I said. \"There was a lot going on at that Council meeting last night. If they had to have done it last night, it would've failed. I think they really do want to consider it, and it'll get a fair shot.\"\n\n\"Does the Council even have to pass it?\" Cindy asked. \"Why can't the Chief do it unilaterally?\"\n\nI replied \"Because it creates a new Lieutenant position, which will require the Council's approval to fill. And even though there was an anonymous gift to buy the equipment for it, the money has to be authorized to be spent, and the positions created. We can laterally move Lt. Mary Milton to the Intel Lieutenant slot, but then the Council has to approve whoever we put in the Vice slot...\"\n\n* * * * * * * * * * * * * *\n\nMy Angels and I were watching in my office as Reginald B.F. Lewis came before the television cameras set up in the Atrium of City Hall. \"Thank you for coming.\" said Lewis. \"I am announcing today that I will not be running again for my seat on the Town & County Council. The actions of the racist, illegitimate Mayor and his sycophant Police Force have made it impossible for me to serve my constituents and protect their rights as minorities in a way they have a right to expect. As of now, I intend to serve out my current term on the Council, continuing the fight to stop the illegitimate Mayor's racist policies. I'll be taking no questions at this time. Thank you.\"\n\nAs we watched on TV as Lewis walked on into the secure areas of City Hall, ignoring the Press's shouted questions, I heard Tanya hiss \"Yessss!\"\n\n\"Are you the reason he's quitting?\" asked Teresa to Tanya.\n\n\"Sure, I'll take the credit.\" Tanya said with a wicked grin.\n\n\"You can, but what he said to you was just one of the final straws that broke his back.\" I said. \"I happen to have some inside information that Lewis knows he's been neutered by that suspended sentence hanging over his head like the Sword of Damocles. I think he'd just resign from the Council, but that would leave the Republicans with a 5-4 advantage until the next election.\"\n\n\"Miriam's presser is coming up at 9:00am.\" said Cindy.\n\nTeresa said \"Someone who shall remain nameless told me that Geiger said that he turned down Miriam's offer to be a D.A. Investigator because he, and I quote, 'didn't trust her motives'. He said that the way she asked questions as they discussed the job gave him a bad vibe about what she wanted him to do.\"\n\n\"Which is what?\" I asked. \"To go behind our backs in some way?\"\n\nTanya spoke up and replied: \"Or make sure we don't sabotage Savannah Fineman if and when Miriam demotes Paulina. And yes, I heard that about Geiger turning down the job, also...\"\n\n* * * * * * * * * * * * * *\n\nAs the Union grievance hearing began in a room in City Hall, Senior Deputy Sheriff Louis Bailey, an older man that had been with the Sheriff's Department for over a quarter of a century, came up to one of the Union's lawyers, the 'Junior Adjutant' as he was derisively called. They began the negotiation...\n\n* * * * * * * * * * * * * *\n\nAt 9:00am, Town & County District Attorney Miriam Walters went to the Press Room in City Hall. As the propagandists... er, journalists settled into their chairs, she said \"Thank you for coming. This press conference will outline changes to the District Attorney's Office, which will bring our DA's Office into closer alignment with most of the others in the State.\"\n\nWalters announced the new Investigator positions, then said \"The other major change is with respect to Deputy DAs. All new hires of prosecutors and related attorneys will be Deputy DAs instead of Assistant DAs. The current Assistant DAs will remain in their positions, though there may be a shifting of roles.\"\n\nMiriam then detonated the nuke: \"I also want to say that this morning there was a news report that was not only false, but malicious in what I believe was an attempt to instigate racial tensions. KXTC's dishonest fake news was disgusting, and shows why journalists are one of the three most disrespected and despised professions in America. KXTC owes me, my Assistant DAs, and the People of this County a retraction and an on-air apology.\"\n\n\"Hold your breath waiting for one!\" shouted Lester Holder, standing up. \"We stand by our reporting! Just because you changed your mind to hide your racist intent doesn't mean we lied. We stand by our story! You owe us an apology!\"\n\n\"Get that race-baiter out of here.\" said DA Walters. To Holder she said: \"We have not forgotten the racist names you called my ADAs daughter, Holder. And neither has the Iron Crowbar!\" There were gasps in the room as two Deputy Sheriffs came up. Holder did not resist, and willingly left with them...\n\n* * * * * * * * * * * * * *\n\n\"Wow.\" said Cindy as she and I watched in my office. \"She backed off. Maybe what you said did have an effect.\"\n\n\"Yeah,\" I said, \"she kicked the can down the road. But like I also said in the earlier meeting, we'll have to see what happens if Savannah Fineman loses the Solicitor election next year. Miriam is counting on Savannah winning that. I'm far less certain.\"\n\n\"How'd you like that exchange with Lester Holder?\" Cindy asked with a gleam in her ice-blue eyes.\n\n\"I cannot believe he did that.\" I said. \"I'm just wondering if he gets so triggered whenever Press dishonesty is called out that he just can't help himself.\"\n\n\"Just between us,\" said Cindy, \"are you the one that leaked that to KXTC, in spite of what you told Miriam?\"\n\n\"No.\" I said, shaking my head. \"Seriously and genuinely, I am not the one.\" \n\nCindy peered at me, then her eyes relaxed and she just nodded slightly. \"So who do you think did leak it? Because I have reason to believe Miriam was going to go through with demoting all four ADAs. I really do suspect that Miriam backed off only after Bettina put that out there this morning.\"\n\n\"I don't know.\" I said. \"There are a lot of logical candidates. We shall see what's going on with that...\"\n\n* * * * * * * * * * * * * *\n\nI met Jack Muscone at the Cop Bar for lunch. \"So now it's crazy for you guys while we Feds are sitting back and twiddling our thumbs.\" he said as we sat down.\n\nI chuckled. \"Yes, it is.\" I said. \"But in a good way. And now we can concentrate on Tanya's plan for an Intelligence Division.\"\n\n\"You like that plan?\" asked Jack. \"I thought it was a good idea. The SRIC (State Regional Intelligence Center), like everything else that the SBI touches, is sketchy.\"\n\n\"True.\" I said. \"And I've noticed a small but persistent increase in drug traffic flow into the County. It could really become an issue, and an Intel Unit could really be good to fight that. So what's going on Federally?\"\n\nJack said \"First, I wanted to say that I heard about Reginald B.F. Lewis not running again. I'm extremely glad to hear that, especially after what he said to Tanya. But it got my hackles up that he's not running again.\"\n\n\"He's hamstrung by that plea deal he made.\" I said. \"If I were politically incorrect, I'd say he's made a lot of money for himself as a civil rights politician, and he's too much of a coward to put it on the line and risk jail time by violating that plea deal. He made the plea deal out of cowardice in the first place, as well. The only problem I have with him not running again is that we may get saddled with someone worse.\"\n\n\"That's true.\" said Jack. \"And I wanted to apologize if we stepped on your toes over that Guru Stevens situation.\" said Jack. \"Tanya asked me to do a routine check on him to make sure he wasn't one of our guys on an undercover mission. He's not, and as far as we can tell he's not undercover with anyone at all. But an issue came up: we found out that someone accessed our search on Stevens. We thought it was Melina... and yes, I know you asked her to look into Stevens... but it wasn't her. It was someone in Washington, D.C. Then the Rovers BAU unit started checking him out, and not being discreet about it at all.\"\n\n\"Hmmm.\" I said. \"I guess I should be worried under the 'there are no coincidences in the Universe' concept, but since Stevens is just a nutjob wannabee cult leader, I don't feel like wasting any time on him.\"\n\n* * * * * * * * * * * * * *\n\n2:00pm. Sheriff Griswold stepped onto the portico of City Hall and up to the bank of microphones. There were a good number of people to both sides of him, including Chief Moynahan, myself, Cindy, Teresa, AFC Davies, Fire Marshal Zoe Singer, and Fire Lieutenant Roy Easley, all in Duty Dress uniforms. Public Health Officer Beth Paige, University President Sidney P. Wellman, Dr. Richard Searles, and my wife Dr. Laura Fredricson were also in attendance. A gaggle of journalists faced the microphones.\n\n\"Thank you all for coming.\" said the Sheriff. \"I have two major announcements today. First, we have come to an agreement with the Fire Captain's Union and Fire Chief Quinlin. Quinlin has accepted a deal whereby he will be demoted to Fire Captain, and he will be allowed to retire with his pension based upon a Fire Captain's salary. I made that offer based upon Quinlin's years of service to the Fire Department versus the violations he committed, and it was agreed to by all parties.\"\n\n\"In exchange,\" said the Sheriff, \"the Fire Captain's Union withdrew its grievance of the disciplining of Battalion Chief Tucker. Tucker was stripped of his time-in-grade, meaning his time with the Fire Department cannot be counted towards a pension should he attain another County job. Tucker was also summarily fired from the Town & County Fire Department.\"\n\n\"As a result of the Fire Chief vacancy,\" continued Griswold, \"I will be nominating Assistant Fire Chief Warren Davies for the Fire Chief post.\" All the crowd except the Press applauded. They didn't want to show anything but 'neutrality', of course.\n\nSheriff Griswold: \"My other announcement is to name the new EMS Chief and Assistant Chief, which was ratified by the Council last night. Your next EMS Assistant Chief is a lateral transfer, as Fire Marshal Zoe Singer has agreed to take on the new role. Zoe would you please come up?\" There was applause as Zoe came up to the podium, but we were wondering why the Sheriff had her come up before naming the EMS Chief. We found out quickly enough:\n\nSheriff Griswold said \"I have a special award for Ms. Singer today. She has served our Town & County for many years as an EMT then as Fire Marshal. The Fire Marshal job is like Internal Affairs as well as investigating Arson crimes, and she set a very high bar with her examples of integrity and leadership. So it is my honor to present her today with the Public Safety Distinguished Service Award!\"\n\nThere were 'oooh's and 'ahhhh's as the Sheriff pinned the third-highest award in the Public Safety Department on Zoe's uniform jacket, and everyone except the Press applauded.\n\n\"And now let's introduce your next EMS Chief.\" said Sheriff Griswold. \"I feel very lucky to have gotten him to accept this post, but he's never backed away from a challenge. His hard work and examples of integrity throughout his career are of the highest caliber. He saw harrowing combat in Viet Nam, and was awarded the Navy Cross. He rose to the rank of Admiral, and has done wonderful work as our University Hospital's Administrator. And he has now agreed to take on the challenge of building a new EMS for us. Ladies and gentlemen, may I present your new EMS Chief, Admiral Leonard R. Cordell!\"\n\nWe all erupted into applause as Dr. Cordell came up to the microphone and shook hands with the Sheriff. Griswold put him in front of the microphone, and he spoke in his gruff voice:\n\n\"Thank you, thank you.\" he said. As the applause abated, he said \"I want to thank Sheriff Griswold for giving me this opportunity. I want to thank Zoe Singer for accepting the transfer to work with me in building for you the best EMS service ever!\" Much applause.\n\n\"In taking this job,\" said Cordell, \"in a way I am going back to my roots. I was a Navy Corpsman in Viet Nam, treating and evacuating wounded soldiers. Now I have the privilege of leading a team of people that will be treating injured persons and getting them to the medical care they require.\" More applause.\n\nCordell: \"And while I was in Viet Nam, I had the honor of being attached to a distinguished unit led by a great, great man. He was awarded the Medal of Honor for his actions that saved an entire unit. And when his equally courageous and accomplished daughter, Captain... soon to be Commander... Teresa Croyle asked me to consider accepting this challenge, I just couldn't say no.\" \n\nThere were gasps of surprise, and then applause started as Admiral Cordell looked over at Teresa and gave her a thumbs-up. I'm not sure how much of it Teresa saw... she had tears in her eyes. After a final \"Thank you.\", Cordell came over and gave Teresa a hug then stayed with us as Sheriff Griswold resumed the microphone.\n\n\"It's hard to follow that,\" growled Griswold, \"but Ms. Singer's transfer leaves open the Fire Marshal spot. We are fortunate to have a young man of great bravery and outstanding integrity to fill the role, as Roy Easley has agreed to accept the job.\" Everyone applauded as Medal of Valor recipient Easley came up and shook the Sheriff's hand.\n\n\"I'll leave these Fire Department and EMS people here to answer your questions.\" said Griswold. The rest of us followed him inside.\n\n\"Soooo...\" I said to Teresa as we walked down the hallway toward the Sheriff's Office for a small party with a couple of cakes, \"convinced the Admiral, eh?\"",
        "\"Har!\" growled the Sheriff happily, his mustaches quivering. \"Yes, I asked her to come with me to talk to Cordell. She was the one that persuaded him.\"\n\n\"I sure did.\" said Teresa. \"When the Sheriff told me he wanted Dr. Cordell for the job, it was an epiphany, like a light bulb turning on in my head. And he said it himself... he gets to lead the civilian version of Navy Corpsmen again. I suspect we'll have a few Navy Corpsman veterans working for us in a few months.\"\n\n\"Is Roy Easley ready for the Fire Marshal job?\" asked Beth Paige. I couldn't help but grin at that. Teresa saw it and grinned, too. \"What?\" Beth asked.\n\nTeresa said \"I'm reminded of a Medal of Valor recipient who was promoted straight from Lieutenant to Commander without ever being a Police Captain. And was Acting Chief of the whole Police Force for a while.\"\n\n\"That's right.\" growled Griswold. \"With Don Troy as an example to look up to, Easley will be fine. And Zoe has been training him and prepping him for this for some time...\"\n\nMeanwhile, Admiral Cordell was answering questions from the Media. \"Yes, I've informed President Wellman and the Hospital Staff of my decision. I've enjoyed the opportunity to serve as Hospital Administrator, and I'll still be on Staff as a trauma doctor if they need me, but the EMS is like a calling for me...\"\n\nPart 16 - Polling Data\n\n7:30pm, Thursday, September 26th. We had the back room of The Steakhouse to ourselves for the Charter Commission's party. Edna Carter and her husband came, as did Rev. Joseph E. Williams and his wife. Edward Steele came with his wife, Professor Stephanie Steele, and his daughters Selena and Marie. I came with Laura, and we brought Carole since Marie was going to be there. Savannah Fineman was also there, and her 'date' was Sheriff Griswold; we'd invited him because of all the help he gave us in writing the Charter.\n\n\"So what is the Hospital going to do, with Dr. Cordell leaving?\" Stephanie Steele asked Laura.\n\n\"He'll be helping with the transition,\" Laura said, \"but I'm not sure who we're going to get to replace him. I understand him wanting to rebuild the EMS, but it's going to be a big hole to fill at the Hospital.\"\n\n\"I've given a name to Dr. Cordell and President Wellman.\" I said. \"Y'all may remember Donny Tate, who was one of Kendra Luskin's victims?\" (Author' note: 'Falsely Accused', Ch. 05.) \"He's an accountant, and if I don't miss my guess, I think he just might fit into that job very well.\"\n\n\"It's a 'done deal', then.\" Laura said.\n\nStephanie grinned, then said \"Don, did you ever hear any more about that serial killer that was using my graphics as his pattern?\" (Author's note: 'Four Square', Ch. 03.)\n\n\"No, I haven't.\" I said. \"Detective Beale in Atlanta emailed me a few weeks ago, and said they'd had no more serial killings since Cindy and I visited them in Atlanta. And with all the excitement going on around here, that had totally slipped my mind. Why? Anything new on your end?\"\n\n\"No.\" said Stephanie. \"But my paper that had that pattern is going to be published next week. I hope nothing bad will happen, but you might want to have them watch out.\"\n\n\"I'll send out some emails, and alert Jack Muscone.\" I said.\n\nAs the party was winding down, two six-year-old girls came up to the end of my table, with several drawings they'd made. \"Daddy,\" Carole said, \"we have the results of the latest polls!\"\n\nEveryone grew quiet and watched as I said \"Oh really? What are those results?\"\n\nMarie held up her drawing, showing some bar graphs and a pie chart. Carole pointed to it with her drink straw as she announced importantly: \"In a poll of local six-year-olds, one hundred percent want longer recess at school, later bedtimes, and no stringbeans at dinner.\" Everyone chuckled.\n\n\"Hmmm.\" I said. \"I wonder what your brother Jim's Stringbean Lobby is going to say about that!\"\n\nCarole replied \"My polling says that little brothers are annoying.\" Everyone burst out laughing at that.\n\n\"My big sister would agree.\" I said with a grin. \"What else does your poll say?\"\n\n\"Our polling says that dads who let their daughters stay up late and watch more TV are more popular than dads that don't.\" Everyone 'ooooh'ed at that.\n\n\"I'm all for that.\" said Selena Steele.\n\n\"Don,\" said Edward Steele, \"I think we need to poll those dads and see what they think.\"\n\nI replied \"I think we need a Commission to re-write those rules. Only dads of six-year-olds get to be on it, and they want earlier bedtimes and more chores for those household six-year-olds.\"\n\n\"Uh oh!\" said Carole, as she pretended to be on the phone. \"There's new data coming in! Daddy, your household ratings have gone down fifty per-cent! You should give your voters more ice cream to make up for it.\" Everyone was howling with laughter by now.\n\n\"The dentist lobby would love that.\" said Edward quietly. I got the subtle joke... Kelly Carnes's husband, under investigation for financial crimes, was a dentist.\n\n\"Carole, I think we better get you home and to bed before any more polls come out that will damage my good reputation with these voters.\" I said, wondering how my six-year-old was picking all this up so fast...\n\nPart 17 - Epilogue\n\nMonday, September 30th. I was sitting in my office with Cindy after the Angels meeting.\n\n\"How was the retreat?\" Cindy asked. Laura and I had attended a couples retreat with Dr. P. Harvey Eckhart and other couples at 'The Vision' compound in Coltrane County.\n\n\"It was good.\" I said. \"It was really good to get some alone time together. And Dr. Eckhart's processes were really good for all the couples there. Thanks for suggesting it.\"\n\n\"My father didn't charge you, did he?\" Cindy said.\n\n\"No, as a favor to you.\" I said a bit wickedly. He wouldn't have charged me as his nephew anyway.\n\n\"You know how much he charged those other couples that were there?\" Cindy asked. \"Ten thousand dollars per couple.\"\n\nI nodded. \"And all of them have gone through his full course of programs, too. That's another ten grand per person. But he does over-deliver. His stuff is really good.\" Cindy nodded.\n\n\"So what did you do over the weekend?\" I asked.\n\n\"Spent some alone time with Betsy.\" Cindy said. \"Callie flew to California and got back late last night. Her porn business is raking in the cash, and she shot a cameo appearance on 'Days of Promise'. Benny Black flew to the City with her on the flight, and stayed there in the City, but I'm not sure why.\"\n\n\"Hmmmm.\" I said, making a mental note to check on Melina's whereabouts. \"Okay, then. Are we ready for tomorrow?\"\n\n\"Yes, yes we are.\" said Cindy. \"The bling is in. Is this going to be formal or informal?\"\n\n\"It won't be a full meal deal like the normal ceremonies.\" I said. \"I did think about making Teresa wait until November 1st...\"\n\n\"Yes! You should make her wait.\" Cindy said.\n\n\"We-ll, she convinced Dr. Cordell to take the EMS Chief job, so there's that.\"\n\n\"Pul-eeze!\" muttered Cindy. \"She didn't need to convince him. He would've begged for that job if they'd have wanted him to.\"\n\nI grinned, then said \"Well, we're promoting the Precinct Captains today instead of waiting, so it's only 'meet and right' to promote Teresa, too...\"\n\n* * * * * * * * * * * * * *\n\nTuesday, October 1st. It was little Pete Feeley's fifth birthday, and we'd be attending a birthday party for him late that afternoon. But before we would give him presents, we'd be giving ourselves some presents. New insignia!\n\nEven though I'd not been particularly enthusiastic about it all, I did feel a bit of excitement as I came into Headquarters. More for the actual promotions than the other insignia changes. or so I told myself.\n\nThere is a small wardrobe/coat closet/locker that was in the back left corner of my office, between the back wall and the book cabinet to the right of my desk, where the 'I Beat Slender Man' trophy held sway. Inside were my semi-formal jacket and leather 'bomber' jacket that I'd sometimes wear with my duty uniform in cold weather. It was with considerable nostalgia that I began removing the oak leaf clusters from those jackets. In a way, the new stars seemed to take me further away from what I loved to do most: be a Detective in the field, solving crimes.\n\nThe excitement was building in MCD, so I went in there and watched Bettina's worthless report with them. All she could talk about was the upcoming Board of Inquiry, and that Finneran had been named to it. But that was later this week...\n\n* * * * * * * * * * * * * *\n\n\"There's a new constellation of stars in the sky.\" I said loudly as Sheriff Griswold came into MCD, wearing his brown Sheriff's uniform with four gold stars on the epaulettes of each shoulder and each collar of the khaki shirt beneath his jacket.\n\n\"May I?\" Griswold said to Cindy, and everyone chuckled as a green crowbar was waved in my very specific direction by Our Sheriff. \"And you're about to be the Dog Star in my constellation, Crowbar.\" he growled.\n\n\"The Dog Star: the brightest star in the night sky.\" I said. \"That fits.\"\n\n\"Sheriff,\" said the heavily pregnant Joanne Warner, \"Commander Ross is the Bulldog star. Commander Troy is the Wildcat star.\" Trying to start trouble, she was. Succeed, she did.\n\n\"And compared to the Wildcat star, the Bulldogs star is very dim right now.\" I said. A green crowbar was again waved in my direction, this time by its owner. Yep, it was college football season.\n\n\"And speaking of stars...\" said Teresa Croyle as she led Fire Chief Davies, Zoe Singer and Roy Easley into the room. Chief Davies already had his two gold stars on the shoulders and collars of his Fire Department uniform, and Easley had the gold star of the Fire Marshal on his dark navy blue Fire Department jacket... along with the silver-bordered red rectangle that denoted the Medal of Valor, and the purple rectangle that denoted the Purple Order.\n\n\"Nice uniform, Chief Singer.\" I said. Zoe was wearing the new EMS uniform. It was a lighter blue, like Air Force blue, lighter than the deep blue Police uniform and even darker navy blue (almost black) Fire Department uniform. The piping on her sleeves and pants was dark blue, almost black. Zoe was also wearing a rectangle denoting her recently-awarded Distinguished Service Medal. And the star on each of her shoulders was silver; the new EMS was making every effort to distinguish itself from the Fire Department.\n\n\"Don't y'all wear stars on your collars?\" Fire Marshal Easley asked.\n\n\"We can.\" I replied. \"But I'm wearing soft shoulderboards on my shirt under my jacket.\"\n\n\"I'll be wearing either soft shoulderboards or a metal star on my shoulder epaulettes.\" Cindy said. We both had 'TCPD' pins on our collars.\n\n\"Soft shoulderboards for me, toooooo.\" said Chief Moynahan as he came in.\n\n* * * * * * * * * * * * * *\n\nWe went to the gymnasium for the 'ceremony'. Connie the Police photographer was there and would be taking pictures for us. She reminded us that we would have to have new official portraits taken, as well, which is one reason why I had more uniform jackets in the wardrobe in my office.\n\nThe Sheriff and I fitted the silver two-star insignia onto Chief Moynahan's collars for the ceremony. He was already wearing the stars on his epaulettes: the stars were individual, but a bar on the underside with holes aligned them properly. Stars on the collars, like the Sheriff's, were actually touching and connected, and therefore easier to do, so of course we took the path of least resistance.\n\nThe Sheriff and Cindy pinned a silver star on each of my shoulder epaulettes, the star going where my oak leaf cluster had been... towards the shoulder and not in the middle. The Sheriff also affixed my new badge onto my jacket, a clip that fit into a little buttonhole slit. Then the Sheriff and I did the same for Cindy for the stars. Her badge said 'Deputy Chief' and so did not change.\n\nCindy and I pinned silver oak leaf clusters on Teresa's shoulders as the Chief read her promotion proclamation, and Cindy affixed her new badge to her jacket. The Chief and I pinned the same new rank on Internal Affairs Chief Orosco's shoulders, as well. \n\nThen came the Precinct Captains Abram and Hewitt, who were promoted to full Captains, leaving behind the gold Captain bars for silver ones. And with that, gold Captain's bars were permanently retired from TCPD uniform wear.\n\nJerome Davis came up, and I put his new badge on his uniform, which said 'Lieutenant'. He was no longer brevetted, but a full Lieutenant. Then I pinned upon the Senior Detectives their new silver bars with three black squares, the former Supervisor insignia.\n\nThen came a surprise. Sheriff Griswold read a proclamation promoting Julia Rodriguez to Detective Sergeant as Cindy and I pinned her rank on her collars, Sergeant stripes with one rocker beneath, the same as an Army Staff Sergeant. And we did the same for Roy McGhillie, also a promotion to Detective Sergeant.\n\nAnd then we did what Police Officers do... brought out the doughnuts and consumed them!\n\n* * * * * * * * * * * * * *\n\n6:00am, Wednesday, October 2nd. I was driving through Town as the first light of dawn began illuminating the buildings, the streetlamps still on. I loved driving through my Town at the break of a new day. Truth be told, it was mornings like this that motivated me to accept the task of re-writing the Charter, and of course being a Police Officer here.\n\nI came into Headquarters and went to check on the Duty Desk, per usual. The Duty Desk Patrolman was hanging up the new photos of the command structure on the wall. The Duty Desk Sergeant was briefing me on the duty log entries when the phone rang. I pointed to him to answer it.\n\nHe noted the time in the duty log and made notations. Then he hung up and said \"Sir, that was the 9-1-1 dispatcher. Someone called in and said there are people at Point Hollow... dead people, sir...\"\n\nFinis... for now."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "drama",
        "iron crowbar",
        "mystery",
        "police drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/balance-of-power-ch-03"
}