{
    "title": "Storm of Shadows Ch. 06",
    "pages": [
        " Sorry for the bit of a longer wait. Hope you enjoy the chapter. \n\n*\n\nThe vampires came from nowhere. One moment, Mila was frantically trying to keep Dante alive and the next, the male wolves were running back to the camping ground as if all the demons from hell were on their tale, scooping up the female that was just heading out to track them down. The vampires arrived mere seconds after that, at least a dozen of them, their intent plain.\n\nIt didn't cross her mind to stay hidden. How could she, when the Justice Seeker's mate was in the campground, as well as children? Mila could only hope that her warning about the attack would spur Kothari to return to protect the wolf pup he'd rescued earlier. Perhaps then, some of them would come out of the attack alive.\n\nMila jumped from the treetop, landing squarely on her feet and rushing head first into the clearing without pausing. She had barely a moment to survey the area, before one of the attacking vampires turned on her. There was already one dead male wolf, and two females. This was going to be nothing short of a massacre. \n\nShe ducked as the male vampire swiped talons in her direction, kicking his legs out from under him and decapitating him as he fell backwards. It was an easy kill, but then the Youngling was barely three decades old. She wasn't under any illusions that the others would be so easy to dispatch.\n\nThe remaining wolves were in animal form, snarling in a circle, protecting a single tent. Mila was sure that the girl and the wolf pup were within the tent, that the lone female alive was likely the girl's mother. A male sprang at the circling vampires, howling in agony as talons pierced its side, a second before fangs sank deep within its neck. Vampiric toxin was deadly to wolves. The male died instantly.\n\n\"Leave them alone!\" she screamed, running towards the tent, and launching herself in the air before she reached the vampires. She sailed over their line, landing in front of the two remaining adult wolves, spinning to face the attackers.\n\n\"You cannot have them! Leave now before you all die.\" Mila didn't expect them to listen to her, but hopefully she could buy some time for reinforcements to arrive. She prayed she had read Kothari right...that he would come to protect the child. If he didn't...well Dante was going to be extremely pissed at her for getting herself killed.\n\n\"Stand aside, female. This is none of your business.\" \n\nThe leader of the coven was wearing clothes stained with old blood. Mila could only presume that he'd had something to do with the earlier altercation with the Justice Seeker, at least she hoped he had. \"He is coming back,\" she announced, putting as much conviction in her tone as she could. \"You will all die if you are still here when he arrives.\"\n\nThe vampire glared at her, hatred in his eyes, and more than a hint of insanity. \"He will be too late,\" he laughed. \"Let him return and see what happens when he fucks with me and mine.\" He turned to his coven. \"This interfering bitch is mine. Kill the rest of them...\"\n\nShe had hoped to frighten them and make them leave. They evidently had no intention of being thwarted from their task. \"Stay behind me,\" Mila ordered to the wolves, shifting the weight to the balls of her feet as she tried to try to anticipate how the vampires would strike. She had no idea if the wolves would listen to her, it was a wonder they weren't snapping at her as it was. They must have been able to sense that she wasn't a threat to them, however, that seemed a moot point. There was no way in hell she could hold the vampires off for any length of time. They were all doomed, unless the Justice Seeker came.\n\n*****\n\nAgony's fury was like a cold, hard razor scything through his entire body. He had finally found a promising lead to where his parents had gone, and he now had to put it on hold to return to the place he'd left the wolf pup. He had given Pippa his word that the pack would protect her, and that he would return. He kept his word, always, though he hadn't anticipated needing to return so soon.\n\nParadoxically, it was Kothari who was the one opposed to this course of action, his other half demanding to be heard though he ignored the faint voice swirling through his mind. The boy wanted their parents and fought him to change course. Agony was well aware of why Kothari nagged at him. They both knew that once their parents were discovered alive and well, there would be no need for Agony to have dominance within their body. Agony refused to be swayed though, continuing on through the trees as the scent of blood and death grew stronger. They would discuss dominance at a later date...for now, he had a wolf pack to protect.\n\nThere was no doubt in his mind that the attack came from the vampire he had allowed to live as a warning. Clearly, stupidity was rife in the European covens, or perhaps his own arrogance that the vampire would listen to him was to blame for this turn of events. Either way, Agony would end this little episode as swiftly as possible, and then he would return to his main goal of tracking down his parents.\n\nBursting into the clearing that held the decimated campground of the wolf pack, Agony quickly took in the scene. A female vampire was dragging herself from the ground, blood pouring from a gash in her head. One arm hung awkwardly, and her left side was a gaping wound right down to the bone, but she surged forward despite her injuries, talons swiping wildly at a male's exposed neck.\n\nBehind her, a male wolf was trying to protect a female, but his efforts were in vain, as one of the attackers slipped passed the line of defence, and drove talons into the female wolf's side. The animal howled in agony, and her mate tried to help her, but another vampire overcame him...the Elder catching him around the throat and sinking toxic fangs sinking into his neck.\n\nDeath was instantaneous, the wolf's agonised howl cutting off almost before it started. The she-wolf instantly shifted back to human, her anguished scream renting the air, as she dragged her wounded body over to her dead mate. \"Roland!\"\n\nHer cry distracted her vampire protector enough to have her half turning from her target, the move clearly unwise as her attacker gained an advantage in their fight. The male's talons should have removed her head from body, however the female, who could only be the Mila from the phone call, moved the barest of fractions of an inch, and that saved her life. It didn't prevent her from receiving an almost mortal wound to her neck though, and she screamed in agony and fell backwards...leaving clear access to the she-wolf sobbing over her dead mate, and the tent unprotected.\n\nA girl burst from the tent, her hair wild, a baseball bat in her hand. \"Mama! Look out!\" she yelled, swinging the bat haphazardly at the approaching vampires, her voice laced with fear even as she tried to defend her mother.\n\nIt took less than a second for Agony to realise that she human, and to acknowledge how foolish she was thinking she could somehow cause damage to the attackers with a piece of wood. It took another second for him to admire her determination to protect her pack, and the child he had brought to them to look after.\n\nHowever, she and the pack had clearly done a piss poor job of protecting the girl. He would have to take matters into his own hands, and that meant there would be nothing but blood and carnage when he was finished. Things were about to get very messy...the dozen or so vampires between him and the child had no idea of the death that was about to come their way. \n\nAgony took a step closer to the vampires...his talons out, his blood a cold fire in his veins. Deep within, he could feel his inner most monster rising, the approaching surge of power reaching dangerous levels with his increasing rage. They had no idea what was about rain down on them and he gloried at the knowledge that he could release his fury with no need to hide it. They were all about to witness what he truly was...and by the end of this fight, anyone left still alive would forever be terrified of him...as they should be.\n\n*****\n\n\"Mila!\" Dante pushed away Louis' helping hand, and staggered to his feet, already half running, half-staggering towards the open doorway. He had to get to her, had to help her. The need to reach his love's side was all that he could think of! He stumbled and screamed in fury as he fell, his body still trying to heal itself, even as his mind registered the fact that he had no idea where she was, and Agony was long gone so he couldn't follow him.\n\n\"Dante, you need to heal first,\" Louis said, coming to his side, his expression troubled. \"I don't know what the fuck is going on here but you're also not going anywhere until you tell me all you know.\"\n\n\"There's no time!\" Dante yelled, fear for Mila suffusing his soul. \"If the vampires don't kill Mila, there's no telling what Agony will do to her. He's fucking insane as it is.\" Dark eyes met equally dark eyes, a hint of a plea in Dante's. \"You have to help me, Louis. Please...you have to help me save her.\"\n\nThe coven leader's expression turned deadly, fury blazing from his eyes. \"I don't have to help you do anything, Castillo. My allegiance is to my coven, the very coven that you brought a maniac into with your secrets and lies. You should be thanking me for not completing the job that lunatic started. It is only because I need answers from you that your head is still attached to your body.\"\n\nIn normal circumstances, they would have been evenly matched, but Louis had only had to recover from some broken bones. Dante knew he wouldn't stand a chance against his friend right now, not when his neck wound was taking so long to heal and he'd lost so much blood. \n\n\"How about everyone calms down and takes a deep breath?\" A cool female voice said from the doorway, causing both of them to turn in that direction. The stunning blonde standing before them appeared relaxed and unconcerned, and Dante quickly guessed that this could only be Joshua's Dara Romanov as neither of them had detected her approach.\n\n\"Who the fuck are you?\" Louis growled, though some of Agony's parting words appeared to have seeped into his furious mind, as he didn't immediately attack the stranger.\n\n\"I am what will ensure Kothari doesn't return here to your coven and massacre the lot of you without breaking a sweat,\" Dara replied with a small smile, completely unfazed by the venom in the coven leader's tone. There was so much confidence oozing from her neither of the two vampires were under any illusion that she was as deadly as the other V\u00e2rcolac. \n\n\"I am not your enemy, and I will do what I can to mitigate Kothari's bloodlust, however, to do that, I need to know exactly what has transpired since he's been here. It really would be in the best interest of your coven not to detach Dante's head, Louis. I find myself in need of his assistance at the moment.\"\n\nLouis watched her with narrowed eyes for a long moment, as if mentally calculating the odds of a battle with another V\u00e2rcolac. He appeared to reach a conclusion pretty quickly, his stance turning less belligerent though he didn't leave Dante's side. When the coven leader nodded his head once in acknowledgement, Dara walked over to them, and crouched down in front of the wounded vampire. \n\n\"I can heal your wounds with my blood in less than a second. I can also track Kothari's path to help you find your friend Mila. I presume this was the reason for Joshua's reticence to reveal everything? That he gave his word to you to hide her existence to keep her safe?\"\n\nShe paused for a moment waiting for him to answer, however he remained silent and her gaze narrowed slightly. \"I understand that need to protect those you love, Dante. However, you must understand mine too. Kothari is mine to protect and he will always come first, but that doesn't mean that we can't work together to assist each other. I need to know what I'm walking into, and in return for your help, I will do my utmost to protect your friend. This can work out to both of our advantage. Please don't waste precious time being stubborn about things.\"\n\nTime was ticking away, endless seconds speeding past where Mila was alone and unprotected. Dante had to make a decision and quickly. He had to decide whether to trust this woman when trust was almost impossible to him. He did have faith in Joshua though, and his friend had spoken up for Dara Romanov. Add in the fact she could also heal him in an instant, and track Agony's movements, there really was no decision to make, not when Mila's life hung in the balance. \n\nDante nodded painfully, taking a sharp intake of breath as pain rocked through his body. \"He calls himself Agony now,\" he wheezed out, trying to find a position that was more comfortable. \"He's insane, Dara, seeing threats everywhere. He was trying to find Gard and Rayne. He didn't believe we didn't know where they had gone. On his travels, it appears that he stumbled across a vampire attack on a small wolf pack, the sole survivor being a young child. He rescued the child and sent her off in the direction of a larger wolf pack nearby. Mila was tracking that pack, trying to find a human girl that lives among wolves. When the shit hit the fan here, Mila called to say the pack was under attack by vampires. Agony left then to go protect the child he'd saved earlier.\"\n\nDara's head cocked to the side, curiosity alighting in her eyes as she considered what she'd heard. She held out her wrist to Dante's mouth, another small smile gracing her lips. \"Drink; my blood will heal you.\" As the vampire did as he was told, her expression turned more thoughtful. \"What is the importance of the human girl, and why was your friend trying to find her?\"\n\nHe finished drinking at her wrist, stifling a sigh of relief as her intoxicating blood sped through his veins, enhancing his own regenerative powers exponentially. Dear God, the hybrid's blood was the most potent he'd ever tasted. If they were all like this...the sheer power they had at their disposal was terrifying. He would have to be a complete fool not to see the potential of having the V\u00e2rcolac as allies, not just to save Mila, but also to help stave off the worst of the coming invisible war.\n\n\"Mila is special,\" he finally answered, reluctant to reveal everything in front of Louis but having no other option if he wanted Dara's trust. \"She was blind when turned to a vampire, and her natural sight never returned on the change. She does have a different kind of sight though, and she has developed into a very powerful Seer. Mila had a vision of Agony's coming, of blood, death and the ultimate destruction of the vampire nation here in Europe when he arrived. The only hope to prevent that was a human girl living among a pack of wolves. We have been searching for her ever since, and only just found her now.\"\n\nDara rose up and held out her hand, helping him to his feet, her gaze intent. It was as if she were searching for something within his expression, something that she appeared to find when her half smile blossomed into a huge one. \"Thank you, Dante. I know that was difficult to do, and I do appreciate that you told me the truth. I, too, know a powerful Seer, which makes me intrigued to meet your friend. However, that is secondary to my mission at the moment, and I do have one last question before we head off. Please, please tell me this human girl is Kothari's mate?\"\n\n\"Mila believes so. She is certain the girl is our salvation.\" Dante wasn't expecting the open relief that danced across the V\u00e2rcolac's face. It piqued his own curiosity. \"You appear relieved?\"\n\nDara nodded, turning away from them and heading back towards the open doorway. \"We have a chance of reaching Kothari now. If he acknowledges the mating pull and doesn't remain confused about me.\"\n\n\"I thought you said you were the only thing standing between Kothari and the annihilation of my coven,\" Louis barked out, having remained silent but watchful throughout their conversation. His belligerence was back tenfold, his expression antagonistic.\n\n\"Until this turn of events, I was, coven leader,\" she quipped back. \"I was merely pointing out that we now have a much more potent ally to assist us. I strongly suggest you come with us, Louis, though I will not demand it. I know how infuriated Alpha males become when they are ordered around. Nevertheless, you should consider doing so. There can be no harm in showing Kothari that you are a friend rather than a foe.\" Dara walked out of the house, leaving the two vampires alone.\n\n\"You know I'm going, Louis. Nothing will keep me from helping Mila, but I think you should heed Dara's advice. Your friend Freya would probably like you to assist the V\u00e2rcolac too, seeing as they are all part of the same pack.\" Dante didn't wait to see if the coven leader would follow. They had wasted far too much valuable time as it was. They had to get to the pack before anything happened to Mila.\n\n*****\n\nBlood; thick and warm, and oh so sticky against his hands. The beautiful symphony of agonised screams; the sweet cacophony of sound sending exhilaration flowing through his body. Agony flowed through the outer ring of vampires, his eyes flaring orbs of red, his talons long and wicked, slicing off limbs with barely any exertion required. He didn't pause to kill the fallen though, his goal to reach the tent and the child hidden deep within.\n\nIt didn't take long for the vampires to realise the threat from behind, half the remaining number turning to meet the coming storm. Agony hardly registered them, his gaze firmly fixed on the coven leader from earlier, the one he had warned and who was now stalking the human girl to gain access to the tent.\n\n\"Pippa, remain inside, child,\" Agony said loudly enough for all to hear. His tone was emotionless and chilling, his gaze never leaving the coven leader. \"I will be there shortly,\" he continued. \"I am just taking care of a little pest problem at the moment.\"\n\nHis words had most of the group turning to look in his direction, and he smiled a cold smile as he took the head of an Elder vampire who got too close. His movement was so casual, his head not even turned in the vampire's direction he'd just killed, that a few of the remaining coven took a step back, clearly recognising a predator more deadly than themselves.\n\n\"Stay and die, or flee and hope I don't come looking for you when I am finished here. The choice is yours.\" \n\nTwo of the attacking force appeared to seriously consider his words, but then their coven leader growled a warning, and their expressions hardened, and they moved towards him. Agony smiled another chilling smile, his bloodlust rising further. \"Your funeral then.\"\n\nAgony hit his true killing edge, that perfect place where only death and destruction lived, where he was unshackled from all human constraints. He caught two vampires by the throat and smashed their heads together with such force, their skulls crumbled in a pulpy mess. As he released them, he twisted his hands negligibly, their heads falling a short distance from their bodies.\n\nBehind him, he sensed movement; however, he didn't turn but maintained his focus on what was happening in front of him. The coven leader continued on his path towards the child, and this only served to infuriate the V\u00e2rcolac further.\n\nThe male wrenched the baseball bat from the human girl, and backhanded her across the face, sending her crashing to the ground a distance away. Something about that act resonated deep within Agony's soul...something breaking within...the monster he thought he controlled suddenly rearing up with a power that superseded anything he had ever experienced before.\n\nNo time! No time left. The bastard had laid hands on her. He had laid his filthy hands on her! Agony took flight, a graceful, deadly leap that took him sailing above the heads of the vampires and directly behind their leader. The male was trying to get inside the unguarded tent, inside where a child wept in terror.",
        "He had laid hands on her...and he sought to lay hands on the child. There was only one outcome to the situation. The vampire would scream his suffering for the world to hear. Agony ignored the stabs of pain he felt at his back, using his innate abilities to quickly heal all wounds he received. They closed as soon as they were given, the vampires at his rear nothing but a minor annoyance.\n\nGrabbing the coven leader by the scruff of the neck, Agony flew across the clearing with his prize, his talons sinking deep within the other male's torso, the sound of screaming permeating the air. He stopped long enough to hack the limbs off a dead vampire, dropping the coven leader long enough to scrape flesh from the limbs to leave the bones uncovered. He casually knocked aside another attacking male, before he reached for the wounded vampire at his feet, raising him high enough for their faces to be level.\n\n\"I will be back in a moment,\" he promised, a split second before he drove a thigh bone through the vampire's torn chest, impaling him to an ancient oak tree. As the male cried out in pain, he quickly speared the other bones into his chest and shoulders, applying so much pressure; it would take another V\u00e2rcolac to release him from his captivity.\n\nAgony spun around, satisfied with his work, and turned his attention back to the remaining vampires. One tried to run, but she was far too late in realising the imminent danger coming their way. No one would leave this place alive...no one.\n\nAgony threw his head back and bellowed loudly. A faint word whispered through his mind...control...control, but he had no concept of what that word meant. All he had was his bloodlust, and the fire in his veins, a raging inferno that screamed for release that he would no longer deny. Jagged incisions rent down his arms and his face, dark red blood oozing from the wounds, his black T-shirt becoming wet and sticky from the hidden scores to his chest. His eyes pulsed crimson red...a swirling maelstrom that changed to silver, a split second before a shaft of pure energy burst forth and incinerated the fleeing female.\n\n\"Run...run...try to run...\" he crooned, as the last of the coven screamed in terror and darted off in different directions. His deadly gaze tracked each one of them, cold fire vaporising them as they tried to flee. One...two...three...the last one...they were all gone now apart from their leader, but he was going nowhere.\n\nA movement to the north of the campground had his attention turning in that direction. Two more male vampires were there, and a female. She was a wolf...no, she was a vampire...no, she was both, and she was familiar. It would appear Dara had finally found them, but to what end was her pursuit? \n\nHis friend stood there, surveying the scene before them, her expression one of abject horror. He failed to see what she found so horrific though, a slight frown marring his brow. All the vampires were dead and the wolf pup was safe. He had achieved his goal...well, he still had to torture the male behind him, but for the most part, he had succeeded in his task. What exactly was Dara's problem? He met her gaze silently, waiting for her to speak.\n\n*****\n\nDara fought to hold down her last meal, but it was hard...oh so very hard. Her stomach heaved, her eyes watered, and she couldn't move as she surveyed the carnage in front of her. There was blood and body parts everywhere, wolves and vampires, the stench of death sickening. On top of that was the scent of charred remains, and the sounds of the last remaining vampire moaning in agony where he was impaled on the tree.\n\nArriving at the end of the battle, and seeing the terrifying power that Kothari unleashed on the fleeing vampires had been bad enough, however adding the additional slaughter of the other vampires...there were just no words to describe it, there were no words to describe him! \n\nOh sweet Jesus, what had he done? What had Kothari done, and what had he become? \n\nHer friend was staring at her unmoving, his clothes soaked in blood, his eyes no longer silver bolts of energy but swirling masses of red fire. She didn't know what to do so she remained as still as he was, checking the rest of the campground as she whispered to the two stunned vampires at her side. \"Whatever you do, do not move, or speak, not until I tell you it is safe to do so. I mean it, Dante...Mila is not mortally wounded so please heed me or she will watch you die.\"\n\nTo her left there was a weeping she-wolf, with Mila lying close beside her. Not too far away was an unconscious human girl, and she could scent a child inside the tent. The wolf required immediate attention or she would likely die, but Mila did appear to be slowly healing. Dara had no idea if the human girl was mortally wounded without checking her over, but her heartbeat sounded good and strong so she presumed she was merely unconscious.\n\nKothari didn't appear to want to hurt the females still alive, and Dara could only hope to that he felt the same about her. Taking a deep breath, she began to walk through the carnage, heading over to her friend, and trying to work out the best way to deal with the situation. She needed him to see her, to recognise her as being pack. That really left only one way to handle the stranger in front of her. Dara stopped before him, and prayed that Kothi was somewhere inside, and not totally subjugated by Agony. \n\n\"What the hell do you think you're playing at, Kothari?\" she demanded, lacing her tone with a liberal dose of irritation, exactly what her friend would expect from her. \"You have the pack in turmoil, and Rafe spitting nails that you masked his Alpha bond and disappeared. You know how he reacted when Lily did similar...you are in so much trouble when we get home. And just what made you think that it was smart to head off to Europe on your own to search for you parents? You should have come to us, Kothi. You know we would have helped you. We are pack after all.\"\n\nDara ignored the annoyance that crept across his face, letting out a weary sigh as if she was dealing with a petulant child who had tested her patience to the limits. She had no idea if this tack was working, but for the most part, he remained motionless; though he was alert to her every movement. \"As if that isn't bad enough you've had me running around Europe trying to track you down, and now I find you knee deep in blood and gore with a vampire impaled to a tree with bones! Put that male out of his misery now and help me see to the wounded over there. Your medic skills are better than mine, and I'm reasonably certain that female has just lost her mate. If we don't so something right now, she's going to go rogue.\"\n\nHe remained still for a moment longer and then he leaned down to her height and pinned her with his fiery gaze. \"Have a care how you speak to me, Dara Romanov. Kothari is not here right now, and I don't think you will like who is in residence if you test my patience.\" There was more than a hint of menace in his tone, but she held her ground, refusing to show any weakness.\n\n\"Oh, I know it's you who has dominance at the moment, Agony. I have Kothi's journal so I know all about you. If you think I am afraid of you because of what I have just seen you do, then you're sadly mistaken. You see, it doesn't matter who has dominance. It doesn't matter how badass you think you are, or how much destruction you can rain down on all of our heads. Nothing will ever change the fact that you, Agony, as well as Kothari, are not only pack, but are also V\u00e2rcolac. That makes me yours to protect and it makes you mine to protect. Therefore, you can threaten all you like, but I know you will never hurt me. You may not need physical protection from me, but you sure as hell need psychological protection, so that's what I am going to do for you, my friend, whether you like it or not. Now, stop pissing about with that vampire and fucking help me, idiot!\"\n\nDara turned her back on him, frantically employing calming techniques in her mind to stop her legs from shaking and to help keep her breathing as even as possible. Truth be told, Agony scared her witless, but she couldn't show it, couldn't allow him to see that fear. She had to keep him engaged until he accepted her presence as a non-threat to his mission. It was difficult walking away without looking backwards, but she kept putting one foot in front of the other, motioning to Dante and Louis who had thankfully heeded her words and stayed where she left them.\n\n\"Dante, check on Mila. I will be over to donate a little blood to help with her healing if she requires it. Louis, can you start clearing up some of this mess before the human girl wakes up, the gore might be a bit hard for her to cope with even if she does run with a pack. Kothi, when you're ready, I could use your help with the she-wolf.\"\n\nShe watched the vampires move, Dante speeding to his friend, and cradling her gently in his arms. A half smile tilted her lips as she heard his opening words to the other woman.\n\n\"When you've healed, you and I are going to have a very long talk about the definition of NOT putting yourself in any danger, woman.\"\n\n\"Don't be mad at me, dear Dante. I saved the girl, didn't I? She is safe...isn't she? She wasn't hurt?\" Mila tried to twist around to see where the girl was, but Dante held her too tightly, a finger trailing down one cheek. \n\n\"Her heartbeat is steady,\" he sighed with a resigned smile. \"And yes, you did save her. Lie still and heal just now, Mila. I will check on the girl and give you an update in a moment.\"\n\nLouis nodded to Dara, keeping half an eye on Agony on the other side of the clearing. \"I'm going to call in some of my coven to help sanitise the area. Do you think he will have an issue with that?\"\n\n\"Probably, but as long as they stay to the tasks you assign them and don't approach the tent or any of the females, everything should be fine. Just make sure they all fully understand that. He can't perceive them as a threat in any way or the killing will start again.\" Dara hoped what she was saying was true. She was going by gut instinct alone, but so far, everything appeared to be working out okay.\n\nDropping down beside the weeping she-wolf, Dara extricated her from her fallen mate as gently as she could. The female fought her, struggling to hold onto the dead male, but Dara persisted until she had the distraught woman in her arms. \"He's gone, lovely. There is nothing you can do for him anymore,\" she whispered softly. \"I'm so sorry for your loss, brave wolf, but we need you here with us. There are others you need to care for; little ones who need a strong, brave wolf such as yourself. Stay with us, lovely. Don't give into the grief and loss.\"\n\nHer words fell on deaf ears, the wolf too distraught, the first signs of madness beginning to appear in the depths of her eyes. She was going rogue, and Dara didn't have the experience or know how to prevent it. She wanted to weep at the loss and suffering done to this small pack. Her heart broke for the loss of life, and she also didn't want to be responsible for ending the she-wolf's life if they couldn't pull her back. She needed Kothi at her side, needed him to help her try to pull the she-wolf back from the brink of madness, but he remained where she left him, silently watching them move around the campground with an expressionless face.\n\n*****\n\nAgony couldn't work out whether he wanted to kick Dara's ass or kiss her. The way she spoke to him, as if he were some kind of errant child, irritated him greatly, and yet there was a familiarity about it too, a feeling of belonging that usually only Kothari experienced with her. For so long he had been hidden from the pack, a guilty secret that must remain untold, for fear that he, that they would be rejected and cast out. \n\nNow, his pack mate had seen him, seen what he was capable of, and instead of rejecting him, she had castigated him as she usually would Kothari, treating him as no different to his other half. It was annoying, and yet it was comforting too, to know that there was one person who had looked upon his face, and still wanted to know him. Perhaps he was less of a monster than he thought? Looking around the blood-soaked clearing, he knew that was wishful thinking on his part.\n\n\"Are you just going to stand there?\" Dara called, a hint of concern in her eyes as they met his. \"I'm losing her, Kothi...or Agony, or whatever you want to call yourself. I need help here.\"\n\nHe continued to stare at the scene around him, and then he spun quickly and sliced the head off the wounded vampire behind him, pulling out the bones and dragging the carcass over to the pile one of the vampires was building with the other corpses. Dropping it on without a word, he met Louis' gaze, and the handful of other vampires that had appeared at his call. Judging them not a threat, he turned towards Dara, and the reason he was here in the first place.\n\n\"The wolf pup is safe?\" He phrased it as a question, though he could sense the child still hidden inside the tent, her pulse erratic but her fear the normal fear of a child, with no scent of hurt or blood around her.\n\n\"It's best that she remains inside for now, away from all this death, but she is safe,\" Dara answered, relief dancing across her face as he knelt down beside her. \"I can't reach her, Kothi. I'm not Cassia or Mallen, my healing skills are not up to their level. I wish Aaron were here. He would know what to do. He has the best success rate at keeping wolves from going rogue.\" \n\nShe was alluding to the pack's second in command, Rafe's head beta, a male respected as highly as their Alpha. Agony agreed with her sentiment, if Aaron were here then there was a chance the she-wolf could be saved, however he wasn't, and that meant there was no real hope for the woman.\n\n\"She should be put out of her misery before everything she is has been lost forever,\" he said coldly, acknowledging the instant denial in the other V\u00e2rcolac's eyes, but knowing it needed to be done for the good of all innocents the rogue wolf might encounter when they moved on.\n\n\"We have to try, Kothi...\"\n\n\"It will be a mercy, Dara,\" he countered reaching to take the woman from her arms. \"I will do what is necessary. Go now, and succour the other wounded while I do.\"\n\nHe would take no pleasure from this killing, not as he had taken from the others. He was merely better equipped to deal with the problem than Dara was. It cost him nothing to take the she-wolf's life, he would lose no sleep over the mercy kill, though his fellow V\u00e2rcolac would.\n\nA shrill scream from behind them blasted the air, and then a ringing blow hit the back of Agony's head. It took a faction of a second for him to realise that he'd just been hit with a piece of wood, and then his anger sparked that someone would dare do this and he spun around to find himself face to face with the human girl who was clutching at her arms as if they hurt.\n\nSeriously? A pathetic human girl thought she could strike him and live to tell the tale? He would make her writhe in agony...he would detach her limbs with surgical precision and cauterise her wounds so she remained alive as long as possible. She would regret ever hitting him with a baseball bat by the time he was finished with her.\n\nA memory tugged at the back of his mind, something so nebulous he couldn't grasp what it was. He pushed it aside as inconsequential, taloned hands reaching for the girl.\n\n\"Kothi, no!\" Dara screamed, throwing her arms around him and barrelling him to the ground. \n\nHe roared in fury, head-butting Dara to disorientate her enough to break free. He didn't want to mortally wound his pack mate, but he would do what was necessary to reach his target.\n\n\"Kothari!\" Dara groaned, rising as quickly as she could, as Agony reached once more for the girl. \"Kothari...remember! Please...remember! I need you!\"\n\nDara did the only thing she could think of, she shifted to wolf form and ran between the girl and the V\u00e2rcolac. \"Remember, Kothari...remember that day in the forest.\" She pressed her large wolf's body against his legs, using the touch of her wolf to try to reach him.\n\n\"Dara...Dara,\" Kothari chanted deep within his mind, savouring the feel and sound of her name. He could smell her scent; feel the softness of her fur brushing against his legs. She was here, his beautiful angel, the very reason for his sanity and he wanted to be with her, wanted to talk with her. \n\n\"No! \" Agony hissed inside their mind, pushing down the boy as he tried to rise. \"This is my time, not yours. You had your chance and you let out parents be kidnapped. Get out of my way, Kothari, before I remove your very existence forever. Do not test me on this, boy. You know I have that power!\" \n\n\"Kothi, remember...you have to remember...\" Dara's words echoed in counterbalance to Agony's, stressing the word remember as if it had some special connotation. What did he need to remember? What was so important that Dara repeated the word? He cast his mind back to that day in the forest...that day when he had placed his hands on his angel...when she had shifted to wolf form to reach him and he had...\n\n\"NO!\" Agony screamed, his talons swiping wildly, catching Dara in the neck in his fury. She howled and shifted back to human form, wrapping a hand around the wound to try to stem the blood flow. \n\n\"You lose, Agony...you lose,\" Kothari whispered, and then he did what he hadn't done since that day. The air shimmered around him, and he called forth the being that his monster hadn't paid any attention to, the one he hadn't locked down as securely as he had his human side.\n\nKothari shifted into animal form, the beautiful black panther sailing over the head of the human girl to land behind her before spinning around to face his friend on the forest floor.\n\nShe was bleeding! He had hurt her! The panther stared at his angel in misery, self-loathing flooding through him. He had hurt her...he had...another had laid hands on her. The odd thought that crept into his mind confused him and he shook his head to clear his thoughts. That didn't make sense, no one had touched Dara apart from himself, and yet, a memory was fighting to be heard, and he was afraid of what that memory might do to him. \n\n\"Dara...I'm so sorry. Please...forgive me.\" \n\n\"Kothi? You're back? He's gone?\" Dara was pulling herself back to her feet, moving to place herself between the panther and the girl, clearly unsure of just who was in control. She deliberately spoke out aloud, to help the others know what was happening, but also because she didn't want to be inside Agony's head should he return. \n\nAs she saw the reason within his eyes, her posture relaxed and she knelt before the animal. \"Everything is okay, Kothi. I'm fine. Look, I'm completely healed. Kallum would kick my ass for allowing myself to be caught off guard so easily anyway. So, I won't tell if you don't?\"\n\nDara was safe, the words kept resounding in Kothari's mind, his relief rising as they slowly sank in. Agony was also gone for now, but he didn't know how long that would last, or if he had the strength to keep him at bay. What had he done? What had he allowed to happen by his weakness, his pathological need for his parents to be safe and well? The human girl had her arms wrapped around the she-wolf, calling to her mother...to the woman he had been a hairsbreadth away from terminating.\n\nThe strange memory returned in a flash of pain, the coven leader striking the girl as she fought to protect her mother. Rage...fury so deep it burned his soul blossomed in the pit of his stomach and he hissed out that rage, his eyes whirling dangerously. He had laid hands on her!  He had hurt the girl...this strange, brave human girl who fought for those she loved. The coven leader had laid hands on the girl and Agony had lost all reason from that point onwards.",
        "No! Oh, dear God, no! He had almost killed her mother. He had almost killed her in his madness. If Dara hadn't intervened...\n\n\"Kothari...Kothi!\" Dara cried out as he hissed again and spun away.\n\n \"Protect her, please protect her, Dara. Do what I cannot do. Guard my heart for me.\" \n\nKothari took off into the trees, running as fast and as far as he could from the human girl cradling her mother's anguished form. He had almost killed her and he didn't deserve to be anywhere near her. He truly was a monster, the very worst kind of monster in the world, because only a true monster would have come so treacherously close to murdering the one woman put on this planet for him. He had almost killed his mate...he had almost killed his mate.\n\nTo be continued..."
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "werewolves",
        "mating",
        "love",
        "hybrids",
        "paranormal romance",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/storm-of-shadows-ch-06"
}