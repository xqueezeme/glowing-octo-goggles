{
    "title": "Succubus Summoning 209",
    "pages": [
        "Phil felt the same degree of trepidation he always felt when entering N\u00ffte's domain. In contrast to the rest of the succubi's castle\u2014where the decor was opulent and sensually decadent\u2014N\u00ffte's area resembled a dungeon, or the headquarters of a perverse and sadistic satanic cult. As he walked down the stone corridors he imagined he could hear the ghostly screams of past torment.\n\nHe was here because N\u00ffte had insisted she be involved with his extra tuition. Phil was not altogether happy with this.\n\nHe paused at the obsidian side entrance to her throne room and gathered up the courage to open the door. He took a deep breath, walked inside and was about to approach N\u00ffte's throne when he realised that\u2014once again\u2014he'd managed to walk in on something else.\n\nPhil glimpsed a large, bulky figure making its way up the central path. He ducked away out of sight behind one of the many black pillars that lined the central walkway.\n\nNot a warlock this time. Or even human. He watched as a corpulent daemon ambled along the path towards where N\u00ffte sat waiting on her black throne. It was white-skinned, hairless and wrinkled like a mole, and grossly obese. Oddly, the face was out of keeping with the rest of the daemon's grotesque body. It was handsome in that rugged way that used to be commonplace amongst the leading men of old movies. Apart from the eyes. They were vacant and together with a slackness of expression suggested some degree of mental retardation.\n\nIt definitely wasn't human. A long appendage, like an elephant's trunk, dangled from its waist. The organ was white and wrinkled. It resembled a giant maggot and dragged on the floor between the monster's legs. Phil's felt a shudder of revulsion when he realised it was the daemon's enormous penis.\n\nThe thing walked with a bow-legged gait and as it passed Phil's hiding spot he saw the reason why. An enormous pair of hairless testicles, as big as footballs, swung between the daemon's legs.\n\nN\u00ffte shifted position. Her black eyes shone with interest as the daemon approached her throne and went down on one knee in supplication. Phil's gorge rose as he realised the daemon was carrying a severed head. Its meaty paw was wrapped around a twisted rope of ginger hair and the rest of the head hung underneath like a ghastly morning star. The daemon held up its hand and presented the head to N\u00ffte as if it was an offering. Then, its gift delivered, the corpulent daemon stood up and ambled back down the central pathway between the obsidian pillars. Its gargantuan sex organ dragged between its legs, leaving a glistening trail in its wake.\n\nThe succubus examined her gift. The severed head was closer to a skull. Most of the soft tissues had already sloughed away. N\u00ffte kissed the head on the remnants of its lips and the remaining flesh blackened and disintegrated into fine ash. N\u00ffte held aloft the bleached white skull, a cruel smile of triumph on her black lips.\n\n\"You can come out now,\" she said, not even bothering to turn her head to look at Phil.\n\nHe shuffled out from behind the pillar.\n\nN\u00ffte inhaled a deep breath and closed her eyes. \"I do like the smell of your fear,\" she said. \"It will be a pity when we've trained you up enough to not be frightened of a minor equuphalloid incubus.\"\n\nPhil looked the other way down the path towards where the daemon had exited. \"That was an incubus?\" he said.\n\n\"A more primal and brutish type, but yes, an incubus.\"\n\n\"I thought they were supposed to be . . . well . . . sexy,\" Phil said.\n\n\"Don't be too hard on our equuphalloid friend,\" N\u00ffte said. \"You didn't see him at his best. Equuphalloid incubi are prodigiously endowed. When fully erect they look rather buff. When not erect . . . well that extra blood has to be stored somewhere, hence our friend's rather flabby appearance.\"\n\nPhil pictured that monstrous cock fully erect and immediately wished he could scrub the image from his brain.\n\nN\u00ffte laughed at Phil's disgust. \"The full range of what people find sexy is broad and varied. The Dominion of Lust caters to all. Personally I find equuphalloid incubi to be a little too simple-minded, and simple-minded beings are so limited in how you can play with them. Equuphalloid incubi do have their uses though.\"\n\nShe tilted the bleached skull in her hands, examining it from different angles as if it was a piece of fine art.\n\nPhil's vision wavered and he thought he saw some kind of shadowy miasma floating around the skull. It even looked like a . . .\n\nOh dear fuck.\n\nIt was a face. The mouth was open in a soundless scream of fear and pain. The soul. It was the soul of a person, now trapped within the lifeless shell of their skull.\n\n\"Oh, you see it,\" N\u00ffte said. \"Good, that means your attunement is growing.\"\n\nShe tossed the skull aside. It joined the other skulls heaped around the legs of her throne.\n\n\"I wouldn't shed a tear for that one,\" she said.\n\nPhil looked at the pile. All of the skulls possessed the same shadow image of a face. They stretched and tugged, but were unable to escape their bone prisons. Trapped, they screamed in eternal torment.\n\nN\u00ffte bounced off her throne and ran a long nail along the line of Phil's jaw. \"I was hoping I might have your skull one day,\" she whispered in his ear.\n\nPhil blanched. He looked at the pile of screaming skulls heaped around N\u00ffte's throne. He saw too that the pile didn't begin at the floor. There was a pit dug out beneath the black chair. He didn't want to think how deep that pit went or how long the bottommost skull had lain there.\n\n\"Oh, I wouldn't put you there,\" N\u00ffte said. \"That's for the trash.\"\n\nShe took his hand and led him to a set of heavy black drapes at the back of the room. She pulled them aside to reveal an alcove containing a set of shelves. Each shelf contained a neat row of bleached white skulls.\n\n\"I'd make space for you here.\"\n\nThe shadow faces on these skulls were calmer. N\u00ffte plucked a skull from the shelf and passionately kissed its rictus grin. The shadow-soul face returned the kiss with the same ardour. It was smiling when N\u00ffte placed the skull back on the shelf.\n\n\"So many,\" N\u00ffte said. \"I do worry I neglect some of them sometimes.\"\n\nShe drew the drapes back. Phil wished he could do the same to his memory of that alcove filled with row after row of living skulls.\n\nN\u00ffte put an arm around Phil's waist and turned him back towards the exit.\n\n\"I really do like the way you smell when you're terrified. It gives me the strong urge to ravish you right here and now.\"\n\nShe gave his waist a squeeze.\n\n\"But that will have to wait until later. There's the second part of your business to conclude.\"\n\n* * * *\n\nDarvill cursed himself for his stupidity as soon as he stepped through the door. Too rash. Too hurried. He'd expected there to be security measures put in place by the portal creator to prevent unwanted intrusions. He'd searched for the obvious traps\u2014things to maim and kill\u2014but the portal creator had been more subtle than that.\n\nHe'd felt the shift in destination and the others being pulled away from him the moment they'd entered the door. He understood too late. The countermeasures hadn't been designed to prevent intruders from entering, but to scatter them and leave them isolated on the other side. Vulnerable. Easier to pick off. It was a subtle redirect hidden within the operations of the portal, but one he would\u2014should\u2014have spotted had he not been in so much of a rush.\n\nRash. Stupid.\n\nAnd now they were all dead.\n\nOr might as well be. Four novice warlocks, alone with only their daemons for company, in hell. He didn't like their chances.\n\nAt least he hadn't been teleported right into the lap of a lust daemon. He'd materialised in a luxurious bedchamber, thankfully empty. There was an enchantment on the enormous and inviting bed\u2014presumably to charm the weak-willed into climbing in and staying there until the succubus returned to fuck out their soul. The charm wasn't very strong. Darvill ignored it and sat cross-legged in the centre of the room. He cleared his mind, focused, and carried out a weaker form of the soul divination ritual they'd used to locate Gary Dever. This time he was looking for the others as well as Gary.\n\nHe felt responsible.\n\nMorally, he knew he should have come alone. This was too dangerous for novices, even accomplished ones.\n\nPragmatically, he knew he needed the support of Herbie and the others. The odds of him being able to do this on his own were far too slim.\n\nNow, through his carelessness, he had the worst of both worlds. He'd put them all at risk and he was on his own.\n\nHe dripped blood into the bowl of water he'd placed in front of him. A swirl of a finger revealed complex and baroque schematics. This was a large structure, maybe some kind of castle. He found Herbie and Joey. Herbie was about three or four floors up, same as Darvill, but on the far side of the building. Joey was about two or three or floors below ground level, possibly in some kind of basement or cellar. Jack took longer to find. The portal had deposited him some way outside the main building and the little glowing dot indicating his presence was some distance removed from their location.\n\nHe found Gary as well. Maybe. The signal was blurry and indistinct. It should have showed up stronger now they were on the same plane. It was possible there were a lot of other souls in the same area interfering with the divination. That could be a good thing. Maybe he was being held with other humans as food for the daemons to consume later.\n\nLater was better than already consumed.\n\nThe signal was also close by, maybe a couple of floors above him and over to the north. Of the four of them, Darvill was the closest.\n\nIt wasn't just about finding Gary. They also had to find a way back to Earth.\n\nDarvill grimaced as he opened up another cut in his arm and dripped more blood into the bowl. This time he was looking for the telltale folds and rents in the fabric of reality that indicated the presence of stable portals.\n\nOh wow, that was complex. An extra-dimensional system of tunnels and shortcuts was revealed to him. They permeated through the building like some kind of twisted root system. It was the central branch Darvill was after. He didn't have the power to open any of the sub-branches from this side. The central branch would be permanently open, though, otherwise the whole portal system would collapse.\n\nAnd there it was. Almost right in the centre of the building and not far from Herbie. Secretly Darvill was relieved it was further away than Gary. It lessened the temptation to do the rational thing and head straight for the exit.\n\nThe lines in the bowl started to shift and blur. Darvill's brow furrowed. His puzzlement changed to alarm as the lines resolved into the face of a young girl with spiky hair and horns. Curious, she looked up out of the bowl at Darvill.\n\nHe knocked the bowl over, spilling the contents onto the plush carpet and terminating the divination ritual. That was an unpleasant surprise. He hadn't known it was possible to look back through a divination spell and see the caster.\n\nHe stood up and rolled his shirt sleeves further up his arms. Using his knife he carved an anti-lust ward in each forearm. He assumed the others had carried out the same divination ritual he had. They would be heading here to find him. In the meantime he would look for Gary, pull him out if he could, wait for the others if he couldn't.\n\nIt was a plan. He didn't like his chances, but at least he had a plan. All that was left was to execute it and hope the obstacles in the way of that plan were not beyond his ability to overcome them.\n\n* * * *\n\nN\u00ffte led Phil through a series of corridors and then out through a metal door at the base of one of the towers. They were outside. The pink sky was far above them and a slight breeze carried faint traces of sultry perfume. This side of the castle was perched on a rocky promontory. Rough-hewn steps in the stone wall curled down to a round structure that resembled a miniature coliseum. As they descended Phil was able to peer over the circular walls and see an arena floored with black sand.\n\nIt looked like\u2014\n\n\"Is that a fighting arena?\" Phil asked.\n\nN\u00ffte nodded. \"One of my favourite parts of the castle.\"\n\nThat the succubi's castle had its own fighting arena didn't come as that much of a surprise to Phil.\n\n\"This is more of that catering to all kinds of fetish thing, isn't it?\" Phil said.\n\n\"Yes,\" N\u00ffte said. \"Some like to play with themes of submission and dominance in a more physical manner. Our little arena makes a perfect playground. I like to spar here with daemons from the other dominions as well. I believe succubi should extend their abilities beyond the arts of pleasure.\"\n\n\"We're going to spar?\" Phil asked, dreading her answer. He knew from experience N\u00ffte took a lot of pleasure in inflicting pain.\n\n\"Not today,\" N\u00ffte said in a way that implied they would at some not-quite-so distant point in Phil's future. \"You have some unfinished business to attend to first.\"\n\nPhil was still pondering what she meant as they reached the base of the steps and walked up a short flight of steps that terminated in a massive curved gate that resembled a giant vagina. Steps curled away along the inside of the walls and up into the stands on either side of the entrance. N\u00ffte carried straight on down a wide tunnel and took Phil through a small door on the left. They walked along a narrow stone corridor and then entered a small stone room where the other succubi were waiting for him.\n\nWith them was a figure Phil recognised. It looked like a young man in baggy blue jeans, a Slayer T-shirt and a knitted blue bobble hat. He was wearing an oversized pair of headphones. Phil knew him. His name was Carnivrillarofax. He was a Kullockian rage daemon and a good deal more fearsome than his mild art-student appearance suggested.\n\n\"'Sup,\" Carny said to Phil.\n\n\"Hi,\" Phil said back.\n\nWhile Carny was a terrifyingly deadly rage daemon, he'd never been anything less than friendly to Phil. Actually, for something that was capable of tearing a person's arm off in the blink of an eye, Carny was a pretty decent bloke.\n\n\"Carnivrillarofax is our special guest,\" Nurse Honey said.\n\nC\u03adr\u03bcl\u0259a, back in her little girl form, bobbed excitedly in front of the older succubus. \"We have a surprise for you,\" she said. \"And Carny's here to watch.\"\n\nGood surprise? Bad surprise? Phil looked at the faces of the daemons. They weren't giving anything away.\n\n\"I'll go and get it ready,\" N\u00ffte said. Her high heels clicked against the stone floor as she left the room.\n\n\"What combat magic do you know?\" Carny asked. \"I never got a chance to see it when we last met.\"\n\nWhen they'd last met Phil had spent most of the time semi-conscious on the floor while Rosa and Carny had torn through a pub of hooligans.\n\n\"A little,\" Phil said. \"I know some defensive shields\u2014magic and daemon\u2014and some summons and dismissals. At Wargsnouts we don't get to learn offensive magic until the 3rd year. I've been learning some fire magic with C\u03adr\u03bcl\u0259a, though.\"\n\nCarny looked alarmed. He looked at the other succubi. \"Are you sure he's ready for this?\"\n\n\"Yeah, he'll be fine,\" Rosa said. \"He responds best under pressure.\"\n\nCarny continued to look doubtful.\n\n\"Okay okay, I'll give him some extra fire magic to help out,\" Rosa said.\n\nShe walked over to Phil and held out her hand. A little ball of fire popped into existence and floated above her palm.\n\n\"So you know how this bit works?\" she asked.\n\nPhil nodded. \"It's an extension of the soul,\" he said.\n\nRosa looked aghast. \"C\u03adr\u03bcl\u0259a!\" she turned and glowered at the little daemon with spiky blue hair.\n\nC\u03adr\u03bcl\u0259a looked at the floor. \"Sowwee,\" she said. \"I started with the simple explanation, the one that college tells their first and second years.\"\n\nRosa shook her head. \"The soul can't generate that level of energy. The fire is summoned from the Elemental Plane of Consumas Infernum that lies at the intersection of the Dominions of Lust, Gluttony and Wrath.\"\n\n\"We can always postpone this until he's had more time,\" Carny suggested. \"I'm okay with that.\"\n\nRosa ignored him and carried on with her explanation.\n\n\"The fire isn't truly sentient, but it can respond to its summoner's will. For beginners there are various words that aid in focusing and transmitting their desires.\n\n\"Flambasglob.\" Rosa threw a fireball at the stone wall.\n\n\"Flambas-Ejaculax.\" A tongue of flame jetted out of her palm and licked the stone wall.\n\n\"Shelduk nidafacii Flambastinaai.\" Flames span and formed a Catherine wheel shield about a foot and a half in diameter.\n\n\"Gladucx nidafacii Flambastinaai.\" Flames extended in her other hand to form a sword.\n\n\"There's also Immolatum nida Flambastinaai.\" A flickering nimbus of flames surrounded Rosa's body. \"The flames won't burn the summoner's flesh, but they will set fire to your clothes and anything else around you.\"\n\nShe closed her hand into a fist and the flames flickered out.\n\n\"Get all that?\" Rosa smiled at him.\n\n\"Uh,\" Phil said. The words span around in his brain and fell down a black whirlpool of misapprehension. He wasn't sure he liked where all this was going.\n\n\"Oh, and this is important,\" Rosa said, holding up a finger. \"The flames nibble on the spiritual energy of the summoner as the price for summoning them. Summon too many or run out of energy to feed them and your soul will catch alight and you'll burn to a crisp. Many a stupid warlock has gone out that way.\"\n\nPhil's eyes boggled in fear.\n\n\"Really, I can do this some other time,\" Carny said.\n\nRosa put an arm around Phil and smiled at the rage daemon. \"He'll be fine,\" she said.\n\n\"There are other forces you can call on,\" Verd\u00e9 said. \"The heart of the Qi\u0161tu is close to here. It will listen to even the quietest and most inexperienced voices. \u011ci\u0161kimiti za bursa\u011d ul Urp\u00e2du ni Guberim li I\u0161duum Qi\u0161tu.\"\n\nShe held out a hand and tugged upwards as if pulling on an invisible rope. Vines erupted out of the stone floor and tangled around Rosa's ankles and lower calves.\n\n\"Don't confuse the poor boy with too much,\" Rosa said. She snapped her fingers and the green tendrils caught fire and burnt to ash. \"They're weak to fire, so he should use that.\"\n\nThey?\n\nPhil wished someone would tell him what was going on. Instead Rosa steered him through another door and then down some steps that terminated in a corridor leading out to the arena floor. The daemons left him there. Verd\u00e9 was last to go. She blew him a kiss that tingled on his lips.\n\nPhil looked ahead at the archway. His heart fluttered anxiously in his chest. He knew by now that turning around and running away was not an option. He took a deep breath, walked through the archway and stepped out onto the black sands of the arena floor.\n\nAnd it was an amphitheatre\u2014a coliseum in miniature. The central arena was a circle of around thirty metres in diameter. It was surrounded by a stone wall about ten feet high. Above the wall, stone benches provided seating in rising concentric rows. Metal portcullises were set into the wall at regular intervals.\n\nNo cheering greeted Phil as he entered the arena. Most of the seating was empty. The succubi and Carny were sitting together up on the top row to his left. C\u03adr\u03bcl\u0259a sat perched on the edge of her seat, her hands pressed against the sides of her face. Rosa lounged casually next to her. Carny sat in the middle and looked as chilled as ever. Nurse Honey sat next to him, looking regal despite wearing a fetishized nurse's outfit. Verd\u00e9 joined them and sat elegantly on the end. N\u00ffte was missing.\n\n\"Savour this,\" Rosa called down.\n\nThe succubi weren't the only audience. Puff and Pfaffle were sitting in the middle row on the other side of the amphitheatre. They acknowledged his presence with a languid wave.",
        "Phil's heart continued to thud loudly in his chest. He had a horrible feeling they expected him to fight something and he felt woefully unprepared. Wargsnouts students were strictly forbidden from engaging in magical duels until their fifth year.\n\nA heavy black portcullis slammed down behind him and Phil jumped. Well that was that. Definitely no running away now.\n\nN\u00ffte emerged on the other side of the arena. She was not alone. Walking next to her was a daemon that was half human and half spider. A naked, pale-skinned female torso rose up out of a black bulbous abdomen. She walked on eight spindly legs.\n\nPhil recognised her.\n\nFuck  L'mactia.\n\n* * * *\n\nThis was so gay, Jack Stone thought.\n\nHe looked around and saw he was surrounded by lush, verdant jungle. Vast trees rose up into the sky. Long creepers dangled from their branches. Exotic blooms exploded all around him in a profusion of riotous colours.\n\nSome would have been awed by the spectacle. Not Stone. He hated the outdoors. It was wet, smelly and icky.\n\nNo, he'd rather he was back in his room playing Xbox and sharing a fat roach with his righteous buddy, the Pholi Xonz.\n\nHe wished Joey and Herbie hadn't been so quick to agree with Darvill. He hadn't wanted to go through the portal\u2014busting into hell, fuck that crazy shit\u2014but once the others had said yes he didn't want to be the odd one out.\n\nWhere were they anyway? Where was this?\n\nStone had expected the Circle of Lust to be like the set of an expensive porno\u2014big beds, soft divans, perfumed cushions, gauzy silk curtains blowing in a sultry breeze. He hadn't expected to end up in some fucking reeking jungle. Maybe all this plant growth was a representation of fecundity or some other shit like that.\n\nStone didn't like it.\n\nSomething must have gone wrong. Maybe Darvill had screwed up. They must have gotten separated after passing through the door in Rowling's room.\n\n\"Where now, buddy?\" he asked his righteous buddy, the Pholi Xonz.\n\nThe hairy slothxren pointed in the direction of a narrow trail winding through the massive trees.\n\nStone sighed. He hoped the others hadn't been ported too far away. He hated walking. As he walked down the overgrown trail he decided the smell of the jungle wasn't as horrible as he first thought. There was an earthy, musky taint to the air that made his balls itch pleasantly.\n\n* * * *\n\nL'mactia was the arachne that had attacked Phil in the showers at Wargsnouts. She recognised him and also looked surprised to see him there.\n\nN\u00ffte had her on a leash. It was attached to a black collar L'mactia wore around her pale neck. The collar was the only thing she wore\u2014the rest of her upper body was totally naked. Her skin was unnaturally pale and possessed a bluish tinge that marked her out as a creature more at home in the dark cracks between realities. As with the other succubi, her upper half was as generously proportioned as a typical glamour model\u2014slim at the waist, voluptuous at the chest. She had the high cheekbones and sensual lips of a gothic beauty. Three pairs of red orbs adorned her forehead and temples. They could have been mistaken for body jewellery, but Phil knew they were additional eyes.\n\nWhat was she doing here?\n\nSurely they didn't expect him to fight her. Arachnes weren't an approved summon until at least the fifth year. Later even than succubi.\n\nN\u00ffte addressed the audience like a circus ringmaster announcing the next act.\n\n\"This is the lowly daemon that ambushed Master from the darkness and nearly took his life and soul. We bring her here and present her to him, to deal with as he deems fit.\"\n\nPhil didn't think it was going to work out that way. More likely they'd just given the daemon a second opportunity to finish the job.\n\nN\u00ffte unhooked the leash and whispered something in the arachne's ear. Then she opened her great black wings and flew up to the top row of seating to join Verd\u00e9 and the others.\n\nThat left Phil alone in the ring . . . with L'mactia.\n\n\"You're still alive,\" L'mactia said. Her blood-red lips curled up in a smile.\n\nPhil watched the spider daemon warily. He tried to remember what he knew about them. They hadn't been covered in his usual studies, but he remembered seeing them in one of the bestiaries of lust daemons he'd flicked through with Jake.\n\n\"What kind of pervert would summon one of them for sex?\" Jake had joked as they'd looked at the pictures. It wasn't the most helpful of memories.\n\n\"I thought I'd left you dead for sure,\" L'mactia said. \n\nEven though she'd been captured and brought here against her will, she still regarded Phil with amusement, as if he was nothing more than an entertaining little diversion.\n\nShe shrugged. \"I did warn her that such things were not precise, that it would be better to let me suck and suck until nothing was left of you but a pretty little shell, but she was most insistent on the matter. I did not think much of her, in truth. She was not as skilled as she believed herself to be.\"\n\nAs she rolled her tongue around suck Phil felt a traitorous throb of interest in his crotch. L'mactia sensed it too. Her full lips came together in a seductive pout.\n\n\"I think you want me to take another suck,\" she teased.\n\nShe tensed as if about to pounce and Phil instinctively jumped backwards, almost losing his balance in the process.\n\nL'mactia laughed. \"So skittish. I know your cock wants it. It wants to be buried in my softest, wettest silk while my abdomen sucks and sucks and sucks.\"\n\nHer bloated black abdomen pulsed obscenely. Sticky white liquid dripped from the tip and puddled on the floor.\n\nPhil's traitorous penis bulged out in an erection. It remembered and wanted more. Phil tried to push the distraction out of his mind.\n\nL'mactia sensed the conflict and laughed.\n\n\"Mmm, let me prepare some really soft silk for you. She sucked on a finger while her abdomen throbbed with lewd intent.\n\nPhil threw a fireball at her.\n\nL'mactia formed a circular shield of energy and swatted the fireball away.\n\n\"Feisty.\" She smiled.\n\nPhil just about had time to summon an anti-daemon shield before L'mactia was on him. Or rather, all over him. Or at least would have been if it hadn't been for his shield. She wrapped her long black legs around it and reared up over him. He felt the pressure of her body around his protective sphere transmuted to an invisible force pressing down on his skull. \n\n\"I don't know what they thought they were achieving by bringing me here,\" L'mactia said. \"You're barely a novice. This shield is about as useful as a soap bubble.\"\n\nShe placed a hand flat against Phil's protective sphere.\n\n\"Dakshel exnida tanja vaarsta Magique.\"\n\nPhil's shield dissipated as L'mactia dismissed it. At the same time the tip of her bulbous abdomen flicked forwards and sprayed a thin stream of fine silk. Her webbing found the gap in Phil's robes and adhered to his crotch and inner thighs.\n\nHe really needed to steal a pair of underpants.\n\nL'mactia flexed her abdomen back and Phil was yanked off his feet. She dragged him beneath her body. He looked up between the half-moon globes of her pendulous breasts and saw her smile triumphantly.\n\n\"There will be no revenge for you today,\" she said.\n\nHer abdomen quivered obscenely before spitting out a thick glob of webbing that glued Phil to the floor.\n\n\"Or maybe that was never the intention,\" L'mactia said. \"Maybe you enjoyed the taste of my silky pleasures so much you wanted more.\"\n\nShe reached back and rubbed her slowly throbbing abdomen.\n\n\"Very well, I'll give you some of my special silk.\"\n\nPhil heard a lewd sound like thick cream bubbling out of a nozzle. He felt a warm substance envelop his erection. He felt his penis jerk as the spider daemon bobbed her abdomen up and down. She manipulated Phil's cock with threads of silk like a master puppeteer, causing a surge of blood and pleasure to rush to his crotch. He tried to think of a way to escape this predicament, but L'mactia's expert tugs kept breaking his concentration until his breath became ragged and exited his mouth in low pants.\n\n\"This time there are no special clauses,\" L'mactia. \"No interruptions to disturb our pleasure.\"\n\nHer abdomen dropped lower. Two chitinous plates at the front of her body\u2014where her human half met her arachnid half, and where the vagina would be on a normal woman\u2014slid open and her labia, puffy and swollen, emerged. The strong musk of her arousal flowed out and covered Phil's face like a smothering pillow.\n\n\"My kind's reputation for cruelty is undeserved,\" L'mactia said. \"Your end will be a sweet one. I'll bury your face in my luscious pussy while I drain you.\"\n\nThe wet silk entwined around Phil's cock changed, became a tube of pulsing dark energy. It stroked up and down his erection, gently coaxing his own energy out. Phil shivered as unearthly pleasures pulled at him. All the tension had fled his body. He felt like he was floating on a bubble.\n\nOverhead he watched Verd\u00e9 fly through a sky the colour of aroused flesh. Her wings flapped, carrying her away from the arena. Phil didn't blame her. He hadn't put up much of a fight.\n\nL'mactia bent her legs and lowered her body down on him. Her labia, puffed up like soft cushions, quivered in excitement. Her abdomen expanded as she inhaled his energy. L'mactia gave a low sigh of pleasure . . .\n\n. . . which was cut off with a harsh exhalation of surprise. She staggered. The connection between them was broken. Freed of the soporific weight bearing down on his mind, the cogs and gears of Phil's brain clicked into life.\n\n\"Immolatum nida Flambastinaai!\"\n\nA nimbus of fire surrounded him and ignited the webbing in an explosion that knocked L'mactia aside. The restraining silk burnt away and, free now, Phil rolled away. As he stood up he realised he was still on fire, although he felt no heat or any kind of burning sensation.\n\nWow, this was so cool, he thought, looking at the flames flickering over his arms like busy snakes. This was magic. This was what he'd wanted ever since Recruiting Officer Garner had given him that demonstration behind the McRestaurant. \n\nNo time to bask in the elation. He still had the spider daemon to worry about. He'd caught her in the explosion. Patches of pale skin on her right side were blackened and singed. It was little more than a scratch for her. The burnt patches of skin were already healing and fading away.\n\n\"Gladucx nidafacii Flambastinaai.\"\n\nHe focused on the flames flickering over his arms and willed them to form a sword.\n\nSuper cool.  Unfortunately, L'mactia had backed off to the rear of the arena and was preparing magic of her own. She recited words Phil tried to pluck from the air, but these were too alien, too quixotic. They slithered through the grasping fingers of his mind and were gone. What they left behind was far more frightful.\n\n\"You could have had such a pleasant end,\" she said.\n\nA ball of dark energy formed in her palm and swelled up. It hit football size and grew further still. Green light, the colour of pus from a septic wound, flickered within the roiling ball of shadow. A horrible, overwhelming sense of determination emanated from the ball. Phil got the impression it was sentient. And hate-filled, so malevolently hate-filled. The ball wanted to smash him from existence and Phil sensed that even if he was able to get out of its way the ball would simply change course and continue to follow him. It would chase and follow him and not stop until it had utterly obliterated him.\n\nWhat now?\n\nIt didn't matter. On the verge of completing the spell, L'mactia staggered as if hurt and cried out in pain and frustration. Her loss of concentration had disrupted the summoning and the ball of blistering dark energy evaporated before it could fully manifest in this plane.\n\nPhil didn't know what had caused her lapse, but he knew he had to take advantage. He charged . . .\n\n. . . and was nearly decapitated by one of her lashing legs.\n\nStupid. Reckless.\n\nHe had to limbo beneath the scything limb, but in the process lost balance and tumbled on his ass. Fuck, now he was totally open.\n\nL'mactia didn't take advantage, instead retreating along the curve of the arena wall. Phil got back to his feet and was surprised to find himself in the role of aggressor. He advanced and L'mactia backed away. Could it be fear of the flames? Rosa said they were vulnerable to fire.\n\nAnother clumsy swing\u2014sword-fighting was much harder than how it looked in the swashbuckling films\u2014gave L'mactia opportunity to put more distance between them. She twisted her abdomen and squirted a thick strand of gooey silk at him.\n\nPhil moved his hand in a circular motion. \"Shelduk nidafacii Flambastinaai.\" The living flame swirled and formed a shield in front of him. The strands of silk hit the flickering flames and burnt away in harmless sprays of ash.\n\nHe threw fireballs at L'mactia with no success. She moved in a skittering stop-start manner that made it difficult to track her movements or predict where she'd be at any one moment. At best his fire kept her on the defensive, but for how long.\n\nHe was conscious his internal temperature was rising as he allowed more living flames through the portal he'd opened in his soul.\n\nBurn her! the flames cried as they flowed out of his core and raced through his veins.\n\nSet her on fire!  Set everything on fire!  Phil remembered Rosa's words. Summon too much flame and the warlock would be consumed by it\u2014roasted and blackened like a chunk of charcoal. He sensed that moment was approaching. The flames wailed their frustration as Phil slowed their flow to a trickle. The fire raging all over his body died right down. No more fireballs for him. He'd have to finish this with sword and shield.\n\nL'mactia continued to keep her distance. Why wasn't she attacking? Or using magic?\n\nPhil was happy to get a break from her attacking. It was stalemate though. She was too fast and agile for him to get close to and she seemed reluctant to push the fight to him. Unfortunately, he suspected the stalemate would last only until he was forced to put out the flame completely. He needed to do something before then.\n\nIf only he could get her to stay still. \n\nThen he remembered Verd\u00e9's parting advice.\n\nHe went for another attack, but this one was a feint. While L'mactia dodged backwards he took the opportunity to crouch down and lay a hand flat on the sandy floor. Yes, he could hear it, feel it moving beneath him in the ground.\n\n\"\u011ci\u0161kimiti za bursa\u011d ul Urp\u00e2du ni Guberim li I\u0161duum Qi\u0161tu,\" he called out to it.\n\nL'mactia cried out in shock and surprise as green tendrils erupted from the sand beneath her and tangled around her legs and abdomen. She was yanked to the floor and bound by tangling roots. She bucked and swayed as she tried to pull her body free. Now there was fear in her eyes as she saw Phil approach.\n\n\"Sheldak nida Magique.\"\n\nAn anti-magic shield surrounded her. Phil placed a hand on it . . .\n\n\"Dakshel exnida tanja vaarsta Magique.\"\n\n. . . and the shield dissipated into shards of light.\n\nThe flame sword in his hand was burning down and losing intensity. It would still be enough. L'mactia frantically muttered words of magic. They backfired. She yelped in pain as sparks burnt livid welts in her pale neck. Phil raised his sword . . .\n\nHe noticed the black collar around her neck. Electric blue sparks crackled around it.\n\nHey, wasn't that . . . Oh.\n\nIt all made sense now.\n\nHe lowered his burning sword. \"This was never a fair fight,\" he called up to the succubi in the stands.\n\nHe recognised the collar as the one Brennan had made, supposedly to keep daemons under control, although it had failed to protect Brennan from N\u00ffte. It was much more effective on L'mactia. Her face contorted in agony as the collar crackled and scorched her. Segmented legs twitched spasmodically as magical sparks fizzed through her.\n\n\"It could never be a fair fight,\" N\u00ffte said. \"L'mactia has killed many experienced warlocks. You're just a novice. Without the collar you'd already be dead.\"\n\nPhil knew that. He realised now why L'mactia had focused on defence. The collar had prevented her from mounting any attacks. It had never been a fight. The succubi had set it up to look like one, but in reality it had more in common with the slaughter of a muzzled and hobbled beast.\n\n\"What now?\" Phil asked.\n\n\"That's up to you,\" N\u00ffte said. \"Her life is in your hands. You can slay her in revenge. Or spare her and let her go. What do your teachings tell you?\"\n\nPhil remembered The Scrote's lessons. A warlock should always be ruthless, he'd said. Kill a defeated foe rather than giving them a chance to come back stronger.\n\nThe theory was easier than the reality.\n\nL'mactia was sprawled before him. Her head was bowed. \"I won't beg,\" she said.\n\nHe couldn't do this. In the heat of battle, to defend himself, yes. But not this. Not the cold-blooded execution of a defeated and helpless opponent.\n\n\"Where's your anger?\" N\u00ffte said. \"She tried to give you a slow and lingering death and nearly killed you. Don't you want revenge?\"\n\nPhil looked at the defeated spider daemon. One quick blow to the neck. It would be fast.\n\nWhat revenge was this anyway? The person who'd wanted him dead was Emma Brennan and he couldn't kill her because someone else had already killed her. L'mactia was a tool. Raging at her was as pointless as raging at a gun.\n\nHe thought it but recognised it for the feeble dissembling it was. He couldn't do this. Not in cold blood.\n\nHis flaming sword flickered out of existence. The flames surrounding him died away.\n\n\"Nope. Can't do it. Not murdering a helpless individual.\"\n\nHe walked away. What a shit-poor excuse of a warlock he was.\n\nL'mactia looked up in surprise when the killing blow failed to arrive. She struggled free of the tangling vines, but rather than charge Phil she ran away and skittered up one of the arena walls. It was N\u00ffte she ran to. And not to attack. She prostrated herself before the succubus in black. Then she got up and they shared a passionate kiss. Afterwards she sat next to N\u00ffte and rested her head in the succubus's lap. To Phil it looked like she was trying very hard not to cry.\n\nN\u00ffte ran her hand through the spider daemon's black hair. She took the collar off and placed it around her own pale neck. She smiled down at Phil and gave him a little nod.\n\nThis left Phil thoroughly confused. Had he been supposed to kill L'mactia? Or not?\n\nThe portcullis rose behind him and he hurried out of the arena before the succubi decided to give him an even worse daemon to fight. He went back to the changing room even though he had nothing to change or change back into. His robe had burnt away when he'd set himself and L'mactia's web on fire.\n\nHe sat on one of the stone benches with his head between his knees. He had to get away from here. And Wargsnouts. He wasn't a warlock and would never be one.\n\nRosa walked in with Carny. \"Not one of yours then,\" she said to Carny. \"Are you disappointed?\"\n\n\"He never was,\" Carny replied. \"You wouldn't have set such a hard challenge if you'd thought otherwise.\"\n\nHe walked over to Phil and offered a good-natured fist bump.\n\n\"Fine showing there, dude,\" he said as Phil tapped his knuckles.\n\n\"It was all fake,\" Phil replied morosely. \"She couldn't fight back.\"\n\n\"Well, yeah,\" Carny said with a laugh. \"Human versus daemon normally only ever has one outcome. That's why you guys summon us to fight for you.\"\n\nPhil felt soft and weak. He couldn't even kill the spider daemon that had tried to kill him.\n\n\"Did I do the right thing?\" he asked.\n\nThe rage daemon shrugged. \"Hard to say with these things. The consequences of mercy are difficult to predict. Today's beaten foe might become tomorrow's ally. Or the indignity of the defeat might linger and fester away until they become an implacable nemesis that cares only for revenge. There are no right choices. Either outcome is possible. Only time will tell.\"",
        "Phil shuddered at the thought of an arachne like L'mactia becoming his nemesis.\n\n\"I think you'll be fine,\" Carny said. \"I doubt she'll bear a grudge any more than she'd have shed a tear over your death. Her kind are known for their detachment.\"\n\nCarny was hunkered down as he stared into Phil's glum face. He frowned. He put his hands on either side of Phil's head and peered more intently.\n\n\"Oh,\" he said. \"Verd\u00e9 you silly girl,\" he murmured, more to himself. His face brightened and his usual easygoing smile returned. \"Not your fault,\" he said to Phil. \"It was her choice to make. Maybe it was the right one.\"\n\nPhil wondered where Verd\u00e9 was. C\u03adr\u03bcl\u0259a and Nurse Honey had also entered the room. Verd\u00e9 wasn't with them. He asked the succubi where she was.\n\n\"Intruders,\" C\u03adr\u03bcl\u0259a said with exaggerated seriousness.\n\nIntruders? Did that mean they were under attack?\n\n\"Who?\" he asked.\n\n\"Some students from your college found the portal,\" Rosa said. \"It's okay. There are safeguards. Any unwelcome guests are separated and redirected to random locations within the castle grounds.\"\n\n\"That was my addition,\" C\u03adr\u03bcl\u0259a said, beaming with pride.\n\n\"One landed in the outer forest,\" Rosa added. \"Verd\u00e9 flew off to find them.\"\n\n\"Oh, that's good,\" Phil said. \"That place is dangerous. They'll need a helping . . .\"\n\nHe saw the expressions on the faces of the other succubi.\n\n\"She's not gone to help him, has she?\" he said.\n\n\"Well, they are intruders,\" Rosa said.\n\nPhil grimaced. \"They're fellow students. Can we at least find out why they're here first?\"\n\nRosa shared a glance with Carny. He was smiling.\n\n\"It's unusual, but I suppose we could do that,\" Rosa said.\n\n\"I'll look for Verd\u00e9,\" Nurse Honey offered. \"She likes to take her time with her prey. There's a good chance I can get there in time.\"\n\n\"Where are the others?\" Phil asked.\n\n\"I can do a divination to find them,\" C\u03adr\u03bcl\u0259a said.\n\nThey rushed from the room, nearly bowling N\u00ffte over in the process.\n\n\"We've got to go rescue some novice warlocks,\" C\u03adr\u03bcl\u0259a explained excitedly.\n\n* * * *\n\nJack Stone hated the outdoors. He hated the sun. He hated mud. He hated the smell. He hated the noise. He hated the trees. As he trudged along an overgrown path he hated every sliver of misfortune that had brought him to this hateful place.\n\nHe walked into a clearing and saw a sexy chick waiting for him. She was hawt. Long silky green hair billowed around a beautiful face with full sensual lips. Her billowing green robes left little to the imagination and her sexy figure matched anything between the pages of the porn stash he kept under his bed. She looked like a beautiful elf princess . . . with a really dirty mind.\n\nStone did not hate that.\n\nBehind her a weird plant peeled open and revealed a soft white inner layer. It looked like a giant king-sized bed with a luxurious, super-soft mattress. The top leaves were translucent and curled over to provide shade.\n\n\"You look hot and bothered,\" the girl said. \"Why don't you rest here for a while?\"\n\nShe patted the white surface as if it was the bed it resembled.\n\n\"With me,\" she added. Her green eyes glittered with the promise of sex.\n\nThat sounded like a really good idea. It was fucking hot. She was hot. He was sick of walking. It would be good to lie down for a while, especially with a chick with a bodacious body like that.\n\nWho had horns.\n\nStone's brow wrinkled. She had horns, wings and a tail.\n\nSuccubus!  Fuck, she must be trying to glamour him or some other mesmeric shit like that. Luckily it hadn't taken hold.\n\n\"Flambasglob!\"\n\nFlames sprang to life in his right hand and he tossed a fireball at the lust daemon. Her seductive smile vanished and she yowled in pain as the ball of fire burst against her side.\n\nStart of a kill streak, yeah baby.\n\nNot quite, although he'd clipped her pretty good. She held her side and grimaced as she got back to her feet. Damn, he thought he'd put her down for good. Now he'd have to hit her with something else.\n\nOr maybe not.\n\nThe succubus gave him a fearful glance and then dashed off between the trees.\n\nWinner!\n\nSo much for their killer rep, Stone thought. It was as they said, if you were able to resist a succubus's charm magic there wasn't much else to be afraid of.\n\nOh wait. He recognised that succubus. She was one of Rowling's. Didn't she sometimes have blonde hair and wear a rubber nurse outfit. He bet she knew where Dever was.\n\nHe should probably try and catch her or something. That meant\u2014\n\n\u2014sigh\u2014\n\n\u2014running after her.\n\n\"C'mon!\" he called out to the Bodacious, Pimptastic Pholi Xonz.\n\nPholi Xonz ambled after him as he dived into the vegetation. Slothxren were not exactly built for speed.\n\nNeither was Stone. He'd clipped her though. That should slow her down. And if it didn't, he could at least say he tried.\n\nHe saw the succubus ahead of him. She was sleek and lithe as she slipped past ancient twisted tree trunks. She was also wounded. She clutched at her left side and the membranes of her left wing were frayed and tattered.\n\nThe ground fell away and opened out into a large clearing. Gargantuan pinkish-white puffballs dotted the open space. They looked like gigantic tits pushing up out of the forest floor. The succubus's wing was too damaged to allow her to fly. Instead she bounced from puffball to puffball, each jump triggering a spout of pink spores from the nipple-like tips of the giant round balls.\n\nShe was injured. He could catch her. A surge of excitement ran through Stone and he charged after her, picking his way between the giant pulsing puffballs.\n\nHalfway across the clearing he felt another surge, this time in his underpants. The air was thick and close, and reeked of sweat and sex. Running suddenly became a little harder with an iron bar stashed away in his pants. He felt the urge to drop his trousers and rub his dick against the soft heaving flesh of one of the giant puffballs. Rub his cock against it until he came and sprayed the lush pink flesh with thick ropes of cum.\n\nStone slowed down and shook his head as if it would shake out all the pornographic imagery that had suddenly bubbled up in his brain.\n\nFucking Circle of Lust. This must be a field full of lust 'shrooms, all spurting their filthy lust spores up in the air. That's why the succubus had led him through here, to distract him.\n\nIt wouldn't work. Stone thought sex was overrated anyway. He'd rather smoke a fat joint and play Xbox than screw some landwhale full of neurotic bullshit he couldn't be bothered to deal with.\n\nThe chick with green hair wasn't too far ahead of him. She was still favouring one side. Stone shook off the pornographic haze clouding his thoughts and sprinted after her. He knew that was a bad idea when sudden pain flared up in his side.\n\nArgh. Fucking stitch. There was a reason he hated running.\n\nIt slowed Stone down enough that he couldn't catch the daemon with green hair before she reached the edge of a cliff and jumped off. He reached the edge and looked over just in time to see her land right on another monstrously large lust 'shroom. Her impact sent a thick plume of spores up into the air. It was a scary drop but the giant puffball looked big and soft enough to cushion the fall, like a giant airbag. From this vantage point the resemblance to a gigantic boob was even more obvious. This lust 'shroom was even bigger than the ones in the field behind him\u2014maybe as much as ten metres across.\n\nThat was good. Plenty to aim for. He leapt off the edge of the cliff.\n\nThe succubus rolled off the edge of the puffball. Rather than running for the trees as Stone expected, she placed her hands flat against the sides of the round fungus. It gave a convulsive shiver. The nipple-like aperture at the centre opened up and another thick plume of spores, the column thick enough to be semi-solid, geysered up at Stone. Shapes resembling hot nymphs formed within the cloud and clutched at him as it surged past.\n\nTheir attentions were enough to upend him. He landed ungainly on his butt. The soft surface of the lust 'shroom\u2014it even felt like flesh\u2014sank beneath him and then rebounded and swayed as though he'd landed on a Godzilla-sized waterbed. The nipple-like structure at the apex opened up again and released another fountain of spores with a rude pfthh.\n\nIt was a pretty sweet bed, Stone thought as he waited for the pitching surface to settle down. He wouldn't mind having a bed like this, although he'd never be able to get out of it in the morning in time for class. Not that he made morning classes anyway.\n\nHe sat up and stitch gnawed away at his side. He flopped back. Let's take a breather for a moment. Get our breath back.\n\nThis thing was really comfortable to lie on.\n\nHe turned his head and saw the injured succubus slip away into the dense undergrowth.\n\nAh fuck it. He'd never find her in there and even if he did he'd hardly be able to do much all panting and out of breath.\n\nNah. He was done running. The others would understand. He'd clipped her and nearly caught her. He'd made a good effort.\n\nNow he'd lie back here and rest a while. He put his hands behind his head and looked up at the pink sky.\n\nYeah, chill out for a while. He deserved it.\n\nShame about all these shitty spores in the air. Stone was covered in the glittering pink shit. When he tried to wipe the fuzz off his clothes came away with it, as if the spores had rotted the fabric away. It didn't do anything to his skin. Actually, it gave him a pleasant little tingle wherever it came into contact with his exposed flesh.\n\nStone felt more than a little chilled. His thoughts were clouded in a warm fug and he felt that same sweet buzz he got from smoking strong weed.\n\nHe wondered if it was the spores.\n\nHe kicked down with his heel. The giant puffball\u2014that looked and felt like an enormous titty\u2014shivered around him. The centre bulged and then dropped as the nipple squirted another glittering pink cloud into the sky.\n\nWeird. It looked like the spores were coalescing into the form of a naked and buxom babe.\n\nThey must have a hallucinogenic effect as well.\n\nSweet. He was tripping out on lust 'shrooms.\n\nThe cloud floated down onto him and he imagined the weight of the buxom babe settling in his lap. She smiled down at him and caressed his cheek with a barely substantial hand. His skin tingled pleasantly in the aftermath of her touch.\n\nThis lust 'shroom shit was the bomb, Stone thought.\n\nHe felt so horny he wanted to take his dick out and have a big fat wank.\n\nHe bucked his hips up and down as if he was fucking the cloudy apparition straddling his crotch. His movements set off the puffball again and the giant nipple gave another loud pfthh as it sprayed more spores into the air. These seemed heavier and the cloud denser.\n\nA strange thing happened. The sexy hallucination tipped her head back, pushed out her boobs and gave an erotic sigh. Her form sucked in the cloud of floating spores. As if her body had inhaled them. They filled in her shape, making it clearer, making it more solid.\n\nThe hallucination had taken complete hold of his brain. It really felt like there was a weight straddling his hips, pushing him down into the sagging puffball. It bounced in his lap, causing the soft surface beneath him to sway and rock. He knew that must be his own movements.\n\nThe giant puffball puffed again. This time the cloud didn't even disperse. It flowed towards the buxom naked girl and added to her form, packing in closer and closer until she lost her cloudy immateriality and became solid. Pouting seductively, she bounced harder on his lap and triggered another explosion of pink spores from the erect 'nipple' at the peak of the puffball. The sexy chick drew the spores into her body and her boobs swelled outwards with the influx of each cloud. Her breast size moved up the alphabet from D to E to F.\n\nStone giggled. This shit was amazing. He'd hallucinated a naked chick that looked so real he felt he could reach out, grope her big tits and feel their heavy softness in his hands.\n\nIt grew even more amazing when she shifted position in his lap and he felt his erect penis slide up into something wet, warm and tight. Really wet and squelchy. Soft walls rippled around his cock in a gentle tugging motion. It felt like a hot mouth was sucking on his dick as though it was a popsicle.\n\nWow, this shit. He needed to bag it up and take it back. He'd make a fortune selling it to the students and staff. So fucking real. He could feel this hot chick's pussy wrapped tightly around his cock. He could feel her weight in his lap as she rode him.\n\nFuck, did she ride him. Her hips bobbed up and down and those big round boobies swayed with her. Stone added to the motions as he pumped up into her. Every time she bounced upwards he felt her tight pussy suck at the end of his cock. And then she came down, burying him deep in her luxuriously soft sex. Each time she landed, the force of her body coming together with his triggered tremors beneath them as the puffball released another cloud into the air. It wasn't even a cloud now. The glittering motes were gripped by a vortex and funnelled directly to the buxom chick's body. So many of them the vortex became dense enough to resemble a fleshy pink umbilicus connecting her to the pulsing nipple.\n\nStone didn't really care or notice. He was enjoying too much the sensations of her vagina rubbing against him as she rose up and down and rolled her pelvis against him. The tight wet sheath of her sex sucked on him as if it was a hot mouth. She was so wet her juices were spilling out and spattering his lap. It felt better than that. It felt like she'd been joined by friends and they were sucking on his crotch with soft, moist lips.\n\nStone glanced down and the hallucination tumbled off the road and fell right into bad-acid tripsville. Thick tendrils had grown out of the woman's inner thighs and covered Stone's groin and upper thighs. They looked like a clump of albino deep-sea worms. As Stone watched with mounting horror, the tendrils pulsed like exposed blood vessels and little bubbles flowed up into the woman's body. She clutched her substantial breasts and sighed as if orgasming. More tendrils squirmed out of her crotch and latched onto his exposed flesh. He couldn't see where his cock entered her body any more. He could feel it though. Soft wet walls of meat undulated around and rhythmically tugged on him. It left him feeling pleasantly\u2014unnaturally\u2014relaxed.\n\nThis wasn't a hallucination.  A distant voice at the back of his mind called out to him as if through thick fog.\n\nIt's a lust daemon.  Stone tried to move his hands. The surface of the puffball had softened beneath them to the point of stickiness. He glanced over and saw more albino worms had grown out of the puffball and attached to his hands and wrist. They throbbed like veins.\n\nPanic flared in Stone's chest. He lost his rhythm for sex as his movements became struggles. The buxom babe that wasn't a hallucination leant over him. She pursed over-plump lips and blew a cloud of glittering spores into his face.\n\nStone's head fell back onto the soft surface of the puffball. He grinned. This trip was the bomb. He was stoned out of his mind and being fucked by a hot chick on a waterbed. This was so righteous. He didn't even have to do anything. She rode him with slow waves and the undulating bed did the rest.\n\n\"Would you like release now?\" the pale girl with enormous tits whispered.\n\nFuck did he.\n\nIt felt like two silk-slick hands were sliding up and down his shaft. He nodded and felt the soft walls of her pussy contract around him. He came in a long slow flow.\n\nRelaxed.\n\nThat's what it was.\n\nTotally relaxed.\n\nThe girl placed warm hands on Stone's chest. She rocked her pelvis and he released another long, slow ejaculation into her. This one kept going\u2014a gentle flow from him to her.\n\nSo relaxing.\n\nHe lay back and closed his eyes. White tendrils grew out of the girl's hands and covered his chest.\n\n* * * *\n\nThe giant puffball that resembled an enormous boob ebbed and swayed. A voluptuous and naked young woman sat on top of it and moved up and down as if in the middle of lovemaking. Her partner was hidden beneath a dense mass of pulsing white tendrils and couldn't be seen. A knotted tube, thick like a trunk, grew out of the nipple-like opening at the heart of the puffball and merged with the back of the young woman.\n\nVerd\u00e9, clutching her burnt side, walked up to the side of the slowly pulsing fungus. With her was a short hairy daemon with stumpy legs.\n\n\"After you've finished extracting the soul give it to the slothxren here,\" she said to the voluptuous girl on top of the giant fungus.\n\nThe pale girl looked down at the succubus and nodded her assent. Then she went back to her slow fucking. She tossed her head back and gave a sultry moan of ecstasy as the mass of fibrous white growth shuddered. The giant fungus pulsed beneath her. The motions were different this time, like a film was being played backwards and the enormous puffball was sucking in spores rather than expelling them. The twisted knot of fleshy cable attached to the voluptuous woman's back throbbed like a loathsome perversion of an umbilical cord.\n\nVerd\u00e9 walked away.\n\nThe short hairy daemon remained. Its beady black eyes glittered hungrily. "
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "monster girl",
        "arachne",
        "fungus",
        "spider",
        "magic",
        "warlock",
        "demon",
        "webbing",
        "spores"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-209"
}