{
    "title": "St. Clair Ch. 02.5: Succubus",
    "pages": [
        "A couple plotlines I really liked but that aren't going to fit in \"St. Clair CH 3: Angel\" so I peeled them out. Normally it would go into Lesbian with the rest of Saint Clair, but TJ and Tammi's relationship just doesn't figure much here. Note that while this is a chapter of Saint Clair, it works as a standalone story. There is no graphic sex in this story line. Special thanks to sbrooks103x for editing and beta reading it for me. Any remaining errors are entirely mine - probably added after his assistance. And thanks to everyone for the encouragement and support. \n\n***** \n\nSaint Clair CH 2.5 Succubus: Night shift on a full moon \n\n***** \n\nHe walked carefully up to the back of the house. He'd \"visited\" earlier, long before nightfall when the house was deserted and quietly oiled the hinges on the gate and the back door. He knew she always left the back door unlocked. He watched her for a second through the window from the darkness. She was scrubbing dishes like she always did this time of night. Like he watched her do so often. He pulled the ski mask down over his face and slid the long hunting knife from his belt... This had to be perfect. \n\n*** \n\nDeputy Tina James - TJ - rubbed her thumb along the edge of her eyepatch, chasing a persistent itch. Nightshift had barely started and she already had that just-under-the-scalp headache from not enough sleep and too much coffee. She'd set up in the open, more to encourage people to slow down than actually catch them for speeding. The police-modified crew cab F250 - the Beast - was clearly visible and clearly what it was; if anyone was still speeding by the time they got close, it was probably best to at least give them a warning. The Sheriff wanted to try to slow everyone down a bit, three one-car accidents in the last two weeks had been a bit much. \n\nStill, she was hoping for a slow night. Pulling night shift on a full moon was always a pain in the ass. \n\nShe stretched, flexing the stump of her leg to ease the angle of the new prosthetic leg. She still wasn't quite used to this one, still adjusting after losing the old \"peg\" in that fiasco on the dam with Angie. \n\nDamn lucky that was all she'd lost all things considered. \n\nThe radio suddenly blasted and she reached over to turn it down, picking up the mike. \n\n\"253 253 this is Dispatch\" \n\n\"This is 253 go Dispatch\" \n\n\"D&amp;D off on T Highway near Big Blue station. Nude woman reported walking in the middle of the highway\" \n\n\"Roger D&amp;D on T Highway near Big Blue station\" \n\nTJ hung the mike back on the mount in shock. \n\nWhat the holy fuck? A Jenny call? \n\nThe only drunk exhibitionist they had in the county was Jenny, and Jenny had been doing fine since she'd started seeing Swede. Hell, TJ'd just talked to Swede. The big blonde deputy had just come on shift after dropping Jenny off at her place. \n\nBesides, Jenny only went her rum-fueled naked benders after a break up. Everybody knew that. \n\nEspecially Jenny. \n\nTJ just had time to drop the Beast in gear to head back toward T Highway when the radio snapped to life again. \n\n\"Dispatch Dispatch this is 246\" \n\nThe grim voice was about half a degree above absolute zero. Swede. A very, very, unhappy Swede. \n\n\"This is Dispatch go 246\" \n\n\"246 responding to D&amp;D on T Highway\" \n\nThere was a moment of hesitation. Melanie at Dispatch knew damn good and well that Swede shouldn't technically be responding to a call on his own girlfriend. \n\nBut she also knew Swede was about as far from being an asshole as a guy could get. TJ decided to let the dispatcher off the hook. \n\n\"Dispatch Dispatch this is 253 I Just had an engine light kick on unable to respond to call at this time\" \n\n\"Roger 246 is already responding he WILL notify if he requires back up\" The relief in Melanie's voice was pretty obvious, but so was the warning to Swede. \n\nTJ pulled off the side of the road. On the log she'd report the gas cap as loose, prompting the engine light. \n\n*** \n\nHer clothes lay in a shredded heap on the floor. He'd caught her so easily - her struggles had been almost useless against him. Gagging her had been the hardest part, as he'd expected. She'd managed to nip him once on the hand before he'd forced the ball gag in. She really struggled as he sliced her clothes off her and shredded them in front of her wide eyes. She still struggled as he tied her up even more securely, especially when he paused to fondle her. As he secured the black cloth hood over her head, he glanced out the back window checking for cars in the alley. Cars other than his, of course. \n\n*** \n\n\"All Units All Units this is 246 require assistance at base immediate\" \n\nSwede sounded decidedly distressed. And given the massive deputy's recent run of luck that was a bad sign. \n\nTJ flipped the lights and sirens and blasted toward the station, the Beast's engine roaring. \n\n\"All Units this is 253 inbound ETA three minutes on North County Road\" \n\nA second later Unit 229 called in. That was Don, heading in from the south and running just a little slower than TJ. \n\nThey practically arrived at the same time, finding Swede's car parked askew in the vehicle bay almost right next to the entrance to the station. Swede and Melanie were staring incredulously at the back seat as a loud keening swelled louder and louder in the bay accompanied by almost-manic thumping sounds. \n\nTJ and Don padded over to them. \n\n\"Well, she's a little too white to be Jenny,\" Don observed laconically. \n\nA flash of long blonde hair and pale skin showed through the window for a second. \n\nSwede scowled at him. \"Ya think?\" \n\nFor a second a howling rage-twisted face with reddened eyes glared out at them, then pulled back into the car. \n\nTJ looked into the car noting chunks of seat foam scattered through the back of the car, \"Any idea who she is?\" \n\nDon and Melanie shook their heads. \n\n\"No idea. Stark naked, just walking calmly along T Highway. Got in the car with no trouble then totally lost it about a mile out. Screamed she was one of the Vampires of Atlantea, whatever the hell that means, and began pounding the shit out of my cruiser from the inside.\" \n\nA bare heel slammed into the window, webbing it with cracks. Melanie jumped back. \n\n\"I'm going to see what's holding Kathy up with that restraint chair.\" \n\nShe bolted inside. \n\nA second heel strike bulged the window out dangerously. \n\nDon nodded. \"Be safest to Taser her.\" \n\n\"Did that already, just managed to shove her back inside the cruiser and get the door shut while she was laughing at me.\" \n\n\"Damn. This is gonna suck.\" \n\nKathy - one of the jailers - and Melanie pushed the restraint chair out the door and ran it to them just as a third heel strike split the window partway. A blood red eye peered out the crack for a second as the keening scream changed abruptly to an unhinged, throaty laugh. \n\n\"Door!\" \n\nSwede yanked the door open and a streak of maniacally laughing blonde madness slammed into Don like a wrecking ball. \n\nThe next forty-five seconds were absolute insanity as the three deputies and the jailer fought to control the demonic blonde. \n\nAt last she bit down on Don's chest and held on like a pit bull, shaking savagely, finally allowing the heavy deputy to pin her into the chair with his weight. \n\nSwede, Kathy and TJ captured limbs one by one then managed to fasten the head and body straps onto the raging woman. \n\nDon pulled away, long strands of Kevlar fiber hanging from the body armor on his chest. \n\n\"Another few seconds and I think she'd have been through.\" \n\nThe keening scream began again. \n\n*** \n\nHe pressed the accelerator to push the car faster up the road, a creeping sense of urgency growing. The flash of headlights from oncoming vehicles was eerily strobe-like and disorienting. The muffled voice of the woman in the back seat was getting louder, a little more persistent. He caught a glimpse of his own eyes in the mirror. He looked so normal, so plain. Nobody would ever think he was capable of... this. A glance in the mirror, he could barely see the hooded, naked form of the woman - there was no chance she'd get free of the ropes, he'd been so careful, so cautious. \n\n*** \n\nTJ leaned back in her seat just glad to be away from the screaming. She had almost five minutes of peace before the radio erupted again. \n\n\"253 253 this is Dispatch\" \n\n\"This is 253 go Dispatch\" \n\n\"Trucker reported suspicious activity at truck stop near Benton off-ramp. Possible abduction. Black four door, possibly older model Ford with woman tied up in back seat. Possibly heading toward Saint Clair Highway. Highway Patrol is covering the Interstate.\" \n\n\"Good copy Dispatch. Moving to Intersection where Saint Clair Highway and Route W split.\" \n\nTJ listened to Melanie direct Don and Swede to other possible intercept locations while she pulled out of the turnaround where she'd been sitting and headed toward the intersection as fast as she could safely push the Beast. It took ten tense minutes to reach her goal. \n\nJust as she pulled off the road, a black car slid past, running right at the speed limit up the curve toward Route W. \n\nShe slammed the Beast into gear and grabbed the mike. \n\n\"Dispatch Dispatch this is 253. I need a unit to block W at Big Bend immediately. In pursuit of suspect vehicle, running silent until we have a blocking unit in place.\" \n\nIf they missed the stop at Big Bend it would be exponentially harder to trap the car in the back roads. She'd wait to light the lights because she didn't want to push him faster toward their best hope for clean stop. \n\n\"Dispatch Dispatch this is 229\" \n\n\"This is Dispatch go 229\" \n\n\"Cutting through Big Bend frontage road should reach Big Bend in less than five\" \n\n\"Roger 229\" Melanie's voice paused \"frontage road is pretty bad right now be safe and stay out of the river\" \n\nSwede called in a second later, confirming he was en route to act as backstop if something went wrong. \n\nTJ tried to hang back as far as she could to give them time. \n\n**** \n\nThe night suddenly blazed with lights ahead of him, a nightmare collage of brilliant white and flashing red and blue. He frantically looked for a way out. Brilliant arc-white light tore the night open behind him where only a distant set of headlights had been. There was no heading back. \n\nNowhere to go. \n\nHe couldn't let them see her. Not like this. If he got to her first, he could do... something. \n\nHe slammed the brakes on and stopped just short of the police SUV, reaching for the door handle. \n\n*** \n\nTJ stopped the Beast and slid out, stepping quickly around the front, drawing her weapon and leveling it. Using the nose of the F250 as cover. She could see Don moving up. \n\n\"Freeze. Hands in the air!\" \n\nThe black clothed man pivoted wild-eyed toward her from the front seat, stepped and spun toward the back door of the car. \n\nTJ felt the icy calm hit her and cleared the sight picture in her mind, feeling the tip of her finger tension on the trigger. If there was a hostage back there, TJ couldn't let him get to her. \n\nThe snap and stutter of Don's Taser sounded like music to her. The man stiffened, board-like with an animal howl that cut off as he fell rigidly forward. A second electric chatter as Don hit him with another dose of current while they closed, just in case. \n\nHe was obviously out when they reached him. Swede pounded up from behind Don's SUV. \n\nTJ nodded over to the back door of the car. \"Let me check.\" \n\nShe yanked open the door to find a small woman with a black hood over her head struggling desperately against what looked like a mile of intricately tied rope. TJ pulled her to sitting and yanked the hood off. Tear filled green eyes flared through a cascade of red hair as the woman fought to talk through a red and black ball gag. \n\nTJ paused in shock. \"Ellie?\" \n\nShe managed to fumble the ball gag loose. \n\nEllie began to plead immediately, \"Harlan? Where's Harlan?\" \n\nTJ closed her eye for a second. \"Shit.\" \n\n*** \n\nHe stared stonily ahead, feeling every breath. There was a screaming wail that rang off the tile walls. It filled the air, but it seemed to be a million miles away. The big deputy seated across from him under the bitter fluorescent light was talking, but he didn't bother to listen. Everything was ruined. All the effort, all the work. And it had failed. The humiliation alone would ruin him, much less the charges. \n\n*** \n\nEllie huddled under the blanket, a study in abject misery. \n\n\"This is all my fault.\" \n\nTJ just sat, letting Ellie talk. \n\n\"Jenny, Johnny and the triplets. I just wanted to...\" she trailed off for a second. \"I love the kids, Harlan loves them. But they take over everything. And I didn't want to...\" \n\nShe stopped staring down at her bare feet. \n\n\"Didn't want to what?\" \n\nEllie set herself, her angular jaw flexing. \"Harlan was virgin when we met. I wasn't. I tried pretty much everything.\" She caught herself and studied TJ's face for a second. \"Good Lord, she told you, didn't she?\" \n\n\"Tammi and I don't keep secrets Ellie. It was a long time before I met her. And maybe your experimenting made me and her possible, so it's okay. Really.\" \n\nEllie smiled weakly. \"You're a lucky woman, maybe as lucky as I am...was. Anyways. Harlan has always been a little reserved, and I just wanted him to know that even with five kids, I'm not just a mom. We can barely find time to be alone together most of the time, but I wanted him to know, really know, that I'm his woman, all his, completely.\" \n\n\"So this is all your idea.\" \n\n\"God, yes. Harlan would never have asked me to do something like this. When I met him, I thought he was too sweet, too kind, that it had to be an act. But it's the real him. I wouldn't want him any other way.\" \n\nHer eyes lost focus and a slight, warm smile showed for a second before dropping away. \n\n\"I told him I had a fantasy about being kidnapped and tied up, spanked and made to do... things. I thought if we did that, he could just really cut loose and do whatever he wanted, know just how much I really am his. That's my real fantasy. It was working, I've never been so excited in all my life. But now...\" She paused, eyes glassy. \"Now it will never work, it took me six months to talk him into this.\" \n\nTJ grimaced. \"I'm sure if you talk to him, he'll get it.\" \n\nEllie shook her head. \"I convinced him that it was okay, but now it probably feels like he's being punished for it. Punished for listening to me. I screwed everything up. He should have married a better woman.\" \n\nTJ reached over and took her hand for a second. \"I'll be back in a few minutes, you just wait here. \n\nShe walked out into the hallway, the piercing scream of the \"vampire\" hadn't fallen off at all. \n\nShe looked over at Kathy who stood outside that holding cell. \"Hard to believe she can keep that up.\" \n\n\"Nonstop since we put her in the chair, I swear, I think she may be a vampire.\" \n\nTJ stepped over and looked into the cell and tapped on the grated window. \n\n\"Hey! Sunshine! You are standing on my last raw nerve. I don't know if you really are a vampire or not. But we're going to find out in the morning. As soon as the sun comes up, I'm going to wheel your butt outside. If you burst into flames, I'm sure there's a government agency that needs to know, but you won't be our problem anymore.\" \n\nThe scream stopped abruptly. The blonde woman glared silently back at her with absolute hatred. \n\n*** \n\nTJ walked back to the main office where Don and Swede waited, and relayed what Ellie had said. \n\nSwede nodded with a grimace. \"Harlan isn't talking at all. I know him. He'd rather go to prison than say anything that could even look bad for Ellie.\" \n\nDon held up Harlan's cell phone. \"The pictures do look 'posed,' like she was cooperating. And I've never seen anybody tied up quite that 'artistically' before.\" \n\nSwede studied the pictures for a second. \"That makes sense, I thought there was something odd about the way she was tied up - those are Shibari knots, they're used in Japanese Kinbaku erotic bondage...\" He stopped as TJ slowly turned to focus on him. \n\nTJ stared at him incredulously for a moment. \"Go ahead. I'm just trying not to judge you.\" She paused for a second. \"And failing.\" \n\nDon cocked one eyebrow. \"I'm not trying. I am definitely judging you.\" \n\n\"Hey, I have the internet. And I was between girlfriends.\" \n\nTJ struggled to keep a straight face. \"It's okay. Really. You can look at all the Japanese tentacle stuff you want...\" \n\n\"It wasn't... fuck you guys. Never mind. The point is that Harlan always tries to do the best at anything he does for Ellie. It's never a bouquet of gas station flowers, its three dozen roses. Never a box of cheap candy, always Godiva's chocolates. If she told him she wanted to be tied up, he'd look it up and try to do it the best he could for her.\" \n\nDon shook his head. \"So now she's bawling her eyes out in the interview room and he's sitting in the holding cell like a statue. So much for date night. We need to let them go and work this out at home.\" \n\nTJ sighed. \"I should call Tammi, she's been friends with Ellie for a long time. Maybe she'd be able to help.\" \n\nSwede grinned \"What Would Tammi Do? WWTD? Hell, she'd probably put on a cheerleader outfit and cheer them on.\" \n\nDon nodded sagely. \"Tammi would look awesome in a cheerleader outfit.\" \n\n\"Oh, she does, trust me.\" TJ smiled suddenly, a distinctly wolfish smile. \"Who said date night is over?\" She glanced back toward the holding cells. \"Has AJ bought their car back here yet?\" \n\n*** \n\nHarlan sat rigidly as the one-eyed black clad deputy stalked in. She sat directly across from him. \n\n\"Harlan, you don't know me. I don't know you. But I'm sure you've heard about me and Tammi. Can't imagine anyone in the county hasn't.\" \n\nShe held a hand up as if to prevent him from talking. \"And I'm sure you - like everybody else - has an opinion about us. Nearly everybody has chosen to accept us for what we are, even though it isn't 'normal' - whatever that is - around here. They just let us be us. What that means, right here, is that I'm in no position to judge anybody.\" \n\nShe began placing items on the table. Cell phone. Wallet. Keys. \n\n\"Ellie told me everything. And I believe her. I said I can't judge anyone, but I do have an opinion. She really wants this. And your kids aren't back until Sunday.\" \n\nTJ dropped the black hood, the ball gag, and then placed her spare handcuffs and keys on the table, sliding them over to him. \n\n*** \n\nShe sat waiting at the table listening to the wall clock. Each tick seemed louder and slower. At least that screaming had topped. \n\nShe could dimly hear movement in the hall outside the room. She sank a little deeper into her misery, a feeling of loss moving sickeningly through her. \n\nThe lights flickered for a second. Then went out. The heavy door popped open and a dark form backlit by dim emergency lights came in silently. \n\nEllie suddenly felt herself lifted and pushed forward over the table, the blanket stripped from her. Cold metal clicked into place around her wrists and something was stuffed into her mouth. \n\nShe was yanked to her feet and pushed out naked through the darkened, deserted police station. Brought up abruptly just at the door, a hood yanked down over her eyes. The smell of Harlan's cologne wrapped around her, and she could feel a smile fighting its way past the gag. \n\n*** \n\nTJ walked into the station, exhausted, the too-bright light of the morning sun creeping in around the edge of her sunglasses. That damn headache was still hanging on. \n\nRay glanced at her over his glasses. \"Swede's already gone, Don's on his way in. You got anything?\" ",
        "\"Nope.\" \n\n\"So vampire girl back there and a false alarm?\" \n\n\"Yeah, Harlan and Ellie were out for a drive, she got sleepy and laid down in the back seat, somebody's imagination ran away with them. That's pretty much it.\" \n\n\"Yeah, Swede reported it. Pain in the ass. Still explaining that to the Highway Patrol.\" \n\nRay pulled a sheet of paper from the pile on his desk. \"A guy got his ear bit off in Springfield. Seems somebody sold him something they said was GHB to use on a girl. It wasn't and she went berserk. We're thinking our little monster might have been given something like that and wandered away before it took effect. So the Doc took blood from our creature of the night. Maybe LSD. Maybe one of those synthetics. Maybe PCP. Her vitals are good, he's been checking on her regularly. Said to keep her here till it wears off, too dangerous to try to put her in an ambulance. I'll send Terry along T Highway to see if there's a car there, she got there somehow.\" \n\n\"Any plans to charge her?\" \n\n\"Not unless something else comes up.\" \n\nRay went back to his paperwork while TJ continued on down the hall. \n\n\"Excuse me. Miss, uh, Officer?\" \n\nTJ turned to the holding cell. \n\nA bewildered blonde girl sat strapped to the restraint chair. \n\nShe started a bit when she noticed TJ's eyepatch. And probably her expression. \n\n\"I'm sure there's some reason I'm here, but could you tell me what's going on?\" \n\nTJ sighed. Night shifts on the full moon suck. \n\n*** \n\nTwo Days Later \n\n\"Thanks for coming by.\" \n\n\"No problem, Tammi wanted to come too, but she's stuck pulling soil samples.\" \n\nEllie slid TJ's plate onto the table and put her own coffee down on the other side and sat down, wincing a little. Catching TJ's hint of a smile she responded with her own broad grin and wicked glint in her eyes. \"Ass hurts. Inside and out.\" \n\n\"So I guess everything went okay?\" \n\n\"As sore as I am, Harlan can barely walk. I think I about wore him down to a nub after he let me loose. Rode that man like a two dollar pony. I think we kind of shocked each other.\" \n\nTJ tried to stifle a laugh at Ellie's cat-that-ate-the-canary smile. She wasn't entirely successful. \"I'm glad we could fix what we screwed up.\" \n\n\"That was our fault. Next time we'll borrow a van.\" \n\n\"So there's going to be a next time?\" \n\n\"We settled on a special date night once a month.\" She shifted her butt, wrinkling her nose \"Need time to recover.\" She cocked her head to the side. \"I just wanted to tell you for me and Harlan that we really appreciate everything... Oh, wait.\" \n\nShe fumbled with her purse for a second and pulled out a paper bag that gave a definitive metallic clink as she slid it across the table to TJ. \"Your handcuffs. I cleaned them and oiled them.\" \n\n\"Thanks.\" TJ didn't even want to ask why they had to be cleaned. \n\n\"Seriously, if you ever need anything, let us know.\" \n\n\"Thanks, we will.\" \n\nEllie rotated her coffee cup for long moment. \n\n\"Can I have one more favor? Do you... do you have an extra eye patch I can borrow for a little while?\" \n\nTJ was very, very glad she'd just put her coffee cup down. \n\n*** \n\nPost production notes: The Vampire and Abduction stories are actually based off true events. In the abduction case, the Highway patrol was apparently much more of a pain in the ass about letting it go once it became apparent what had really happened. They wanted to see somebody charged with something, but had to learn to live with disappointment. In \"Vampire\" case, a college freshman girl at her first party was dosed with LSD by a guy who thought it was date rape drug. In the real case it took six deputies and jailers to restrain her, and there was truly spectacular damage to the police cruiser, and the deputies and jailers were pretty banged up, although none seriously. There were plenty of charges filed, just not at her."
    ],
    "authorname": "Todd172",
    "tags": [
        "saint clair",
        "humor",
        "police",
        "wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/st-clair-ch-02-5-succubus"
}