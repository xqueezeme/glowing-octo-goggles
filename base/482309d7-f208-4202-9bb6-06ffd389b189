{
    "title": "A Matter of Blood Pt. 09",
    "pages": [
        "==============================================\n\nCHAPTER TWENTY-FIVE\n\n==============================================\n\n\"We can't find Raisa,\" Adewyn said, meeting my remaining eye, \"I don't know if they kidnapped her or not. Her room looked like it had seen a fight, and there were two dead assassins in it. She put up a fight at least.\"\n\n\"Gods dammit. They got Caliban too. Gwyn,\" I said, turning to my niece, \"can you feel her at all?\"\n\nShe found herself the focus of all the attention in the room and turned a bit shy, but shook her head no after a moment of concentration. Then she asked me questions that I really should have anticipated but had forgotten about in my haste and worry.\n\n\"Are you all right? Will it heal? Does it hurt?\"\n\nGwyn's little face was filled with compassion, and I looked around I saw it mirrored in others.\n\n\"Yes, I'm all right,\" I said, forcing myself to smile, but it wasn't that hard when I was surrounded by my family, \"I don't think it will heal, at least no time soon. And it hurts, but not too bad.\"\n\nGwyn reached out and held my hand in sympathy. I appreciated it. \n\n\"They must have wrapped Caliban in chains of Cold Iron,\" Merwyd said, \"that would keep her from doing, well, anything. It's the same thing used to capture Pureblood criminals to keep them from utilizing magic.\"\n\n\"Nothing we can do about it for now,\" I said.\n\n\"Should we run or should we fight?\" Mother asked with her typical directness. She knew the difficulties of entering the castle as well as I did. As mother asked me the question, however, Adewyn gave me a peculiarly intense look.\n\n\"We fight,\" I said, \"we have no choice. The more time we give him the more Bayrd will kill and the more his forces will grow. That is what he meant by time favoring his army and costing ours. And then he'll just pick us apart as we run. The more time we're near to Marche Grodayn the more likely that we can think of a way to get to Bayrd.\"\n\nI was having difficulty focusing due to the intensity of my pain and sudden fatigue. \n\n\"Mother, you're going to protect Gwyn and Artan tomorrow. I have no one else I trust and you know how to kill anything that gets close to them. Adewyn, you already know this but you're in charge of all maneuvers tomorrow. If I make it out there I'll just be for show and magic. Make sure everyone knows not to expect me. Merwyd, do whatever you can to help Adewyn, but be aware that Bayrd will be hunting for you specifically from high up in Marche Grodayn. He'll probably be in the men's sanctuary since it has excellent sight lines and will give him cover. Next to me you're the most powerful mage here and you definitely have superior skill and control so I know you can help.\"\n\n\"All right, love,\" Merwyd said, smiling at me and taking Gwyn's hand, \"I'll do what I can. Be careful.\"\n\nI caught the scent of her fresh from the bath and longed for more time with her. With all of them. With Raisa, especially.\n\nBefore they all left I had one more thought. \n\n\"No one sleep in the same place tonight. Find somewhere else or just get new tents set up. We can't assume that they won't try again.\"\n\nEveryone nodded and left. Adewyn and I were alone.\n\n\"Raisa's alive I think, but she didn't want us spreading the news around. I found this in her tent. I read it but I probably shouldn't have.\"\n\nIt was a small piece of hastily folded paper with very familiar writing on it. It had my name on it but I wasn't too upset that Adewyn had looked.\n\n\"Finn,\n\nI have a chance to pursue the surviving Seyla back to wherever they exited from the castle. With luck I can slip in with them and help tomorrow. I hope you and the others are all right.\n\nI saw that one took Caliban away in chains. I almost saved her but then I decided that maybe I could do something about that as soon as the battle starts tomorrow. If I can't get to Caliban, then I'm going after Bayrd. You wouldn't want me to but you know that it's what you would do so don't be a hypocrite.\n\nPlease keep this to yourself. I'm sorry I didn't get a chance to say goodbye. \n\nI love you,\n\nRaisa\"\n\n\"Fuck!\" I was finally frustrated enough to be visibly upset. Losing my eye was one thing but I couldn't handle losing Raisa.\n\n\"I thought you'd be happy,\" Adewyn noted.\n\n\"I'm happy she's alive, or was to write this letter anyway. I'm less happy knowing that my pregnant wife is in the enemy fortress with a diabolist who would like nothing more than to torture her or worse.\"\n\n\"Finn, am I wrong or does she intend to do something specific tomorrow morning?\"\n\n\"You aren't wrong. She was vague here but I think I know what she intends.\"\n\n\"So you won't be seen by the army at all? That will be bad for morale.\"\n\n\"If things go as I expect them to, they'll know I'm fighting alongside them even if I'm not in front of them, precisely. Things will probably be pretty loud and obvious. How are the wards doing?\"\n\nAdewyn smiled.\n\n\"The Seyla that Bayrd hired aren't as good as our Raisa. Some soldiers on the line noticed some men acting suspiciously and thought they were possessed so they sounded the alarm and killed them before they could do more than erase a few lines. The wards were repaired to full power before mages even showed up.\"\n\n\"I'm guessing that tomorrow he'll try to erase them all at once and overrun us. It would explain why we haven't seen any flying bastards lately. He's saving them for one big push.\"\n\n\"Finn,\" Adewyn said gently, \"let me worry about that. You can't carry everything on your back. Merwyd can cover the magical side of things, and you know she's been thinking about what to do if the wards fail en masse. Do what you have to. Now rest, I know you spent time with Merwyd tonight, and you've lost a goddamn eye.\"\n\n\"Hey, it's not gone, just broken,\" I said, laying back down and trying to ignore the deep pain in my face, \"I've got one spare left in any case. Good night, wife.\"\n\n\"I'll wake you before things start. Sleep well, husband,\" she said, blowing out the lantern. \n\nWhen she left the last light left with her.\n\n* * *\n\nThe battle would be today. This would be the end. The attempted assassinations from last night might make our victory possible, although I hadn't really planned it that way. We could not take the castle by siege. Not with that army of howling madmen between us and it. \n\nI woke to Adewyn standing over me, gently touching my shoulder. My head ached as if I'd been hit by a boulder. I was alive and able, and perhaps our enemies thought that I was incapacitated or dead.\n\nI sat up and made a noise rather like that of a surprised pig. The pain was...impressive at first, but it lessened quickly. My concern for Raisa made the pain seem much less important.\n\n\"Are you sure you want to do this, Finn?\" Adewyn asked. Her tone was...afraid.\n\n\"Part of me does not. Part of me just wants to go out with you and fight that army of the damned with my own army behind me, but we both know I can make much more of a difference elsewhere.\"\n\nShe sighed.\n\n\"I don't want to be a widow, Finn. I don't want Artan to grow up without a father. I don't...I don't want to have to answer to Bayrd. More importantly, I don't want cry over the grave of my dead husband because he decided to be a hero. Do you understand me? I won't forgive you if you die. I can't. I'll hate your fucking ghost forever,\" she said, making no attempt to conceal her tears.\n\n\"I'm coming back, Adewyn,\" I said with confidence that I did not feel, \"I'm afraid, and I don't want to go, but I have to kill him. I have to kill him so he can't get to you, or Artan, or anyone else.\"\n\nShe sighed, but then she smiled. It was grim, but it was real. There was belief in it. Belief in me.\n\n\"This is why I am proud of my husband. I...I have to go lead the other battle, although I'd rather be going with you. Good hunting, Finn.\"\n\nShe kissed me once, intensely, and then turned and walked out like a goddess from the old legends. Even this close to death and danger, I was still distracted by her ass as she left. Gods help me but I loved that woman with an intensity that was almost frightening to me, even now.\n\nDammit, I should have asked her to send me some help. I had to do this next part quietly. I didn't want anyone to see me but I wanted some of my things. And I wanted some things from Raisa's tent too. I was wondering if I could really sneak around the camp like some sort of cut-rate Seyla when my saviors arrived. \n\n\"Bartles! Gwyn!\" I really was pleased to see them besides my need for help. Gwyn ran in and I gave her a big hug.\n\n\"We're just stopping by, before we go and stay near your mother,\" Bartles said. She was obviously nervous but it mixed with a certain confidence that made her more attractive. Sometimes it was difficult to be married. \"I...I can fight a little too now, and the things don't seem to like my magic one bit. It kills them fast.\"\n\n\"The power of the Wyld is pure and strong,\" I said, glad that she'd be there do help my mother with defending Artan and Gwyn, \"I'm sorry to say I need some help with something if you have a moment.\"\n\n\"We'll help!\" Gwyn volunteered for both of them.\n\n\"Wonderful!\"\n\nI sent Bartles to my tent to fetch my old mercenary armor and the short sword that I wore before I found Caliban. I wanted protection today but I didn't want to wear a shiny breastplate or anything that would draw extra attention. I sent Gwyn to Raisa's tent for some of the little bottles I knew she kept there, full of the potion she gave me to rid me of fatigue after I nearly died that night many years ago. I figured she'd need the energy after being up all night. I probably would too.\n\nThey both came back shortly with everything I'd asked for. I hugged Gwyn again and thought about having Bartles deliver a message to my mother, but she already knew that I loved her.\n\n\"Bartles, thank you for taking care of my family. This won't be forgotten.\"\n\nShe blushed adorably when a slight green tint.\n\n\"Come on Gwyn, we need to get back, the sun's nearly up.\"\n\nThey left, and I could see the light peeking over the horizon. I drank one of the flasks while I waited. It's acrid taste belied its quick effectiveness. I had to be ready, because we all knew that once the sun rose, we'd be under attack. I wished my family and my army the Goddess' luck and the Gods' protection. Then I felt it.\n\nRaisa had been successful. I answered the call and disappeared.\n\nBefore this the farthest I'd ever been called to Caliban was across the camp. Even then I'd managed to see just a flash of something. This time, I had a longer look. Truthfully it was much longer than I had wanted. I was flying but I wasn't entirely myself. It felt like I was lighter, and less coherent, as if I was made of a cloud. But that wasn't the disturbing part.\n\nWhat I saw was a black, rocky desert. There were rolling hills but many had their tops sheared off at odd angles, as with an enormous blade. Sitting on some of them were things that looked like pale towers, if towers grew like fungus. It seemed to be night, with a starless sky. Hanging there was a single great red-orange flame, circular and oppressive. It was a sun, but not ours. Rather I recognized it immediately. It was the single light of the Sitra Ahra, from where man fled when things went wrong. It was the Tyrant Star which gazed over Belial's Realm. \n\nThose who made Caliban must have known to traverse this place, and use it to travel quickly in our own plane. I'm not ashamed to say that it frightened me to be there, and my fear only heightened when I saw the strange crawling figures on the hillsides. Were they demons? Or were they the last descendants of the poor humans who couldn't make it out? Things like the Karrash but even more changed by this unwholesome hell. Thankfully, I spent no more time there.\n\nI appeared next to a very surprised guard who holding a blade to my sister-wife's neck. This did not amuse me and he died quickly as his blood turned to ice. The man behind him turned to run but was propelled much faster than he intended, slamming into a wall and falling prone and unmoving. I recognized where we were. About halfway up the western tower, near the living quarters of my family, in an area meant for secure stores. The stone here was a familiar old grey of mountain granite, worn after many centuries of constant use. I was amazed at how nostalgic it made me. \n\nI looked at Raisa and took her head in my hands. She was kneeling, and looked tired, a small scratch on her forehead bleeding freely. She was sweating all over. Gods she was beautiful.\n\n\"Are you all right?\"\n\n\"I am now,\" she said, smiling and standing, before frowning worriedly and touching the side of my face with great care, \"but what happened to your eye?\"\n\nI ignored the question.\n\n\"What the fuck is the matter with you? Running off and coming here? By yourself!?\"\n\nShe opened her mouth to reply but I didn't let her. I found to my surprise that I was very angry with her.\n\n\"I can't believe you. You're pregnant! And you're running around like you're Andraste returned to the firmament! You aren't immortal, woman!\"\n\nHer mouth dropped open in shock, and she looked like she might cry for moment, then I could see her grow angry and ready to shout back, and then she looked over my shoulder to see more men-at-arms standing in the hallway, some looking at their fallen ally while the rest tried to figure out who Raisa and I were and whether they should arrest us.\n\n\"Listen you bastards, just wait over there! I'm not done...hey!\"\n\nRaisa rolled her eyes dramatically and ran towards them, effortlessly and acrobatically rolling between them, a previously unseen blade flickering out and cutting throats and arteries. All of them died rather messily but she ended up on the other side of them, untouched and clean.\n\n\"Get your pretty little ass back here, wife! I'm not finished admonishing you. You are insufficiently admonished!\"\n\n\"So you're saying you think I'm pretty?\" was her only reply before she turned and swayed away, a smug little smile on her face. \n\n\"Gods dammit is this how you feel whenever I do something stupid? Ugh!\"\n\nI heard her chuckle as she rounded the corner. For once, I had to run to keep up. The worst part was that yes, I did think she was pretty just then. Very pretty.\n\nGods dammit.\n\n* * *\n\nIn my haste I had forgotten to call Caliban to me, so I did so, apologetically. She expressed some discomfort to me, in the manner of someone trapped in a small space with quarreling lovers. I blamed Raisa but she reminded me that Raisa had heroically rescued her and made my arrival a possibility.\n\nWomen always stuck together.\n\nRaisa was waiting for me, up ahead in a small room that was used by the servants as a place of worship. I entered and shut the door behind me, the candles within casting strange shadows behind the many idols and symbols set up on small altars around the octagonal room. She looked at me, arms crossed, but calm.\n\n\"Are you done?\" she asked, her eyes narrow.\n\n\"Yes. For now.\"\n\n\"Good,\" she said, staring at my bandaged face with real compassion, \"now what happened to you?\"\n\n\"I had to stop some Seyla from getting at Gwyn and Merwyd. The latter got a little banged up but Gwyn is fine. In the process I appear to have lost the sight of my left eye. Might end up getting the vision back or I suppose I could end up losing it if it dies completely. The priests weren't sure and I didn't have time to recuperate properly.\"\n\nRaisa looked so sad when she embraced me, but I oddly didn't feel too bad about the loss. I probably just had too much on my mind to care about at the time. Later I would be annoyed at my reduced vision but it would never truly grieve me. \n\n\"I'm sorry, Finn, that's awful. I should have...I don't know, maybe if I had stayed...\"\n\nI sighed.\n\n\"If you had stayed we'd be in a worse position than we are now. Much worse. The fight is going on now, and hopefully Adewyn is doing well. Unless I miss my mark she's going to be feinting or even trying some assaults on the castle walls today. As it stands all we really lost in the attack was an eye. You're alive, as are the rest of my family. I can be bitter about this later I suppose, but for now, I can still fight, and I've got you if I need more eyes, Raisa. Oh, and I brought you this.\"\n\nI handed her one of the little flasks full of potion that she used to stave off fatigue. She drank it down, eagerly, then she stepped back and smiled. How did she look so good right now? She was worn out, sweaty, and bleeding a little, but also amazingly sexy. Her fiery red hair was stuck to her forehead, her green eyes bright. The flush on her cheeks made her look even more alive and appealing and her lips seemed even more full. I couldn't take my eyes off of her. The way her tight leather pants held her ass didn't hurt, and gods if her breasts hadn't started to get bigger. Her swelling belly was barely visible through her shirt, and that both aroused and worried me even more.\n\nI leaned in and kissed her, really kissed her, like I was going to fuck her. I almost did, but she pushed me off of her, laughing.\n\n\"Finn, calm yourself! We're supposed to be taking the bloody castle!\"\n\nShe was smiling though, and had her hands on my chest. I understood. I was holding her waist and I didn't want to stop touching her either, or put her in danger, but this fight would require both of us. I took a deep breath and re-focused.\n\n\"All right. We both know I'd love nothing more than to have you wait somewhere safe but there isn't anywhere like that and, to be honest, I won't be able to do this without you. Just...please be careful. Please. I couldn't stand it if you died. It would make any victory taste like ash.\"\n\n\"Finn...\" she said, looking at me with genuine adoration, \"All right. What do you need me to do?\"\n\n\"I have to fight Bayrd myself, alone. Not just because I want to kill him personally. I'd be happy if you did that. I just have a strong feeling that he's found a way to gain true magical ability on par with mine, through his new friends. I think he's doing most of the summoning himself. I have a hard time seeing him trusting any mage enough to call up things like that. And I have to believe he has protections against Seyla assassins, given what kind of man he is.\"\n\n\"I agree.\"\n\n\"Good. So while I'm doing that, I need you to keep the rest of the castle off of me. If it gets hairy enough I won't even be able to call up enough attention or magic to protect against arrows. If you can open a gate, or even just convince the garrison that they need to defend somewhere else, then that would be ideal. If it comes to it, and I die or am captured, I want you to flee. Get everyone to safety if you can, if you can't, grab Artan and Gwyn and run by yourself. You have the best chance to escape and protect them.\"\n\n\"Finn...don't...gods don't say that. And I couldn't abandon my sisters or your mother...or even Bartles.\"\n\n\"You can if you have to. You're strong and smart enough to have reached these decisions on your own. I just want you to know that its what I'd want. Also...\"\n\n\"That isn't enough grim talk?\"\n\nI sighed.\n\n\"No, Raisa, it isn't. I did some talking with Octavius recently, over some beer after I taught him warding. It turns out he served at the Temple of the Law before he became a healer. I wrote up a new succession, in case I pass away. It puts Adewyn as High Queen, then you, then Merwyd. The order isn't based on ability, or love, because I think you could all do it, but on who is most likely to be accepted by the army and people. This isn't a regency, but a full succession. If I survive we can restore the original and make Artan heir or we can try to change the way things are done. I just needed you to know, in case.\"\n\nShe was stunned. At first I was worried that she was offended that I'd made Adewyn the first heir. It hadn't been an easy decision. But, it turned out, she was just moved. She hugged me.",
        "\"I knew you were better than the others. Adewyn and Merwyd know too, but I knew even when I was small. I knew that you had magic in you too, but that wasn't important. The way you treated your mother, Adewyn, Merwyd, and me, even as a child, it was different. I knew it.\"\n\nShe took a moment to compose herself and wipe her eyes. I did the same. I guess she wasn't done though.\n\n\"If you die, though, I'll never forgive you. I'll hate your ghost forever, I swear it. And I'll make sure your tomb says 'Finn the Lusty' in big letters, with an unflattering engraving of you.\"\n\nI laughed, despite myself. Before I could say more, she kissed me again.\n\n\"I'm off, love. Bayrd's in the men's sanctuary, like we thought he'd be. I'll draw the garrison's attention elsewhere and see if I can kill some of his mages on the way. Good hunting.\"\n\nAnd she disappeared.\n\n\"Good hunting, Raisa,\" I said, hoping that she could still hear me, \"you are the love of my life.\"\n\nI'd never play favorites, never intentionally, but I was closer to her than anyone else. There was no sense denying it. Being separated from her now was far worse agony than losing my eye could ever be.\n\n==============================================\n\nCHAPTER TWENTY-SIX\n\n==============================================\n\nI decided to wait a few minutes before I got started. My patience was rewarded by shouts and running bootsteps. After a while, all was silent. Raisa had done well with whatever distraction she had chosen. I wasn't surprised. I set out.\n\nIt was a strange mix of nostalgia and fear to be here again. I was constantly on guard, waiting for more guards, Seyla assassins, or even demons. There weren't any. There were servants, however.\n\nI saw them and they saw me. There was no doubt. There were three of them, two maids and a footman. I recognized the footman and all three of them recognized me. I couldn't place the maids, not yet. I had decided before I came that I wouldn't kill anyone who I didn't have to. The question here was one of necessity. These people were no danger to me, individually, but they could talk. They could tell guardsman, mages, or even Bayrd himself.\n\nThe footman's eyes grew large with fear. I honestly had no idea what kind of rumors or \"official\" information might have made it back to him about the things I'd done, or was blamed for doing. And here I was, in my worn armor, left eye bandaged, carrying a spear. He looked to be about to run. \n\nThen the maid to his left grabbed his arm. She was much shorter than he, and couldn't have stopped him with force, but he looked down at her in surprise. What she whispered to him, I don't know, but he looked back at me, differently, almost reverently. \n\nAs I grew closer I recognized the maids. One had cleaned my rooms fairly regularly. I thanked the gods that I had been polite to her and remembered to give her Saturn's Gifts every solstice. The other...the other had had been Merwyd's handmaid. I hadn't recognized her in the dour black uniform. She was clearly demoted after my sister's escape. \n\nAs I walked past the footman bowed and the maids curtseyed. Merwyd's handmaid smiled at me. \n\n\"Thank you,\" was all I said to them as I passed. It was all I could to for their service and help. Later I would have to find other ways to reward them. I had two other run-ins with the staff. The first one went much like this, and second one featured a young page boy who ran into a closet in terror at the site of me, closing and locking it. \n\nI told him that I would not hurt him and to my surprise he opened the door, hesitantly\n\n\"Are you King Finn?\" he said.\n\nI laughed.\n\n\"We'll know for sure soon.\"\n\n\"They said you were coming! Watch out upstairs. Lord Bayrd has...his things...hiding there, in the shadows. He no longer trusts men to guard him, only monsters.\"\n\nI nodded, grateful.\n\n\"Come find me or my sisters when this is over. We'll find some way to reward you for your loyalty. Now be off with you and do your regular duties. Don't want you raising suspicion about yourself.\"\n\nAfter this last encounter, I stopped a moment and...I don't know...just listened to things. I'd been afraid before, but that was natural. I was afraid before every fight, and this one was important. But now that I was really paying attention, there was an aura of fear about the place, and it was getting worse the higher I went. This wasn't simply me. Bayrd had brought the unnatural to our home, and it was taking root. Gods damn him.\n\nI finally reached the steps that had featured so prominently in my dreams and nightmares for years now. Here was where mother had led me up, gossiping with me and chastising me to be respectful. Now I was in the broad hallway, and I could see the great doors to the men's sanctuary up and to my left. They stood open. I watched the shadows. \n\nThere. One, to my right, flattened behind the tapestry and with many legs like a great spider. And another, above me, crawling on the vaulted stone ceiling. They struck at once, in concert, like some monstrous wolf-pack. \n\nI struck faster, white fire spraying from my hand, above and then to my side. The things, hairy with midnight-dark carapaces and green eyes, died screaming almost like men, which made it all the worse. The smell of them burning has never left me, and reminded me of the waste behind an alchemist shop. The fire lit up the rest of the hall, and I saw no more lurking things. Well, I wouldn't have the advantage of surprise any more, if I ever truly did.\n\nFlashes of lightning and deafening thunder rocked the hallway, but I was not under attack. It came from the sanctuary. Bayrd was no doubt raining the fire of the gods down upon my allies and family. I stepped in, Caliban raised defensively in front of me. \n\nBayrd stood there, facing away from me, at a window overlooking the lake and the battlefield. I wasn't fooled into thinking that he was unaware of me. I was walking almost silently, but he still turned to face me when I was thirty paces away.\n\nI felt a wave of nausea, similar to that that I had felt in the cave on my journey. I shook it off. For a moment I thought I saw...no. No, it was only Bayrd.\n\n\"You look well, uncle,\" I said, keeping my voice as neutral as possible. He did. He'd lost the belly fat that had plagued him in his late adult life, and he looked stronger. In fact, he looked younger. His beard and hair were near solid black instead of a mixed white and grey, although that could have been dye. But he no longer sported a bald spot, and the wrinkles had vanished from his face. He had been perhaps fifty-eight when I had left, but looked five years older due to his manner of living. Now, he looked like he was in his early forties. Even his teeth looked whiter. \n\n\"Thank you Finn. You don't,\" he said, laughing, \"but you do look stronger. Commanding. You've grown into yourself, lad.\"\n\nI stood still, holding Caliban as one might hold a staff. He had a sword at his belt but he had made no move to ready it. He moved to his left, walking in such a fashion as to face me without the window at his back, but not closing the distance.\n\n\"How did you get in here, boy?\" he asked me, at last, \"I can't say that I'm entirely surprised, but I did try to take that spear away from you to keep you from doing your trick of appearing anywhere it is. It's a shame that I had no time to learn its secrets. I closed all of the old secret ways, except for a new one that I had built after your little trip to the lake.\"\n\n\"Caliban is a woman, and we have an understanding. A few chains of cold iron weren't going to keep us apart, not when she missed me so.\"\n\nI wasn't going to be telling him the truth of Raisa's presence. It tore at me that she was here in the first place and I wouldn't do anything to endanger her further.\n\nHe laughed.\n\n\"I missed you, Finn. I won't enjoy killing you. I do promise to treat your mother and sisters they way they like, even if does cause some tears. I'm sorry to say that Gwyn and young Artan will have to be drowned for the sake of the new succession, but we can't have fresh rebellions, can we?\"\n\nHe probably was telling me the truth. He would keep as many of the women alive as possible, even if he intended to simply use them as breeding stock. He would almost certainly kill my children, although to himself he would justify this as \"being practical\". He was telling me to unsettle me with both his knowledge and intentions. Bayrd wanted me angry and stupid. I couldn't really blame him for trying. For all his knowledge about me, he hadn't spoken to me since my much more impulsive and immature days. I was still capable of great rage, but it was a cold rage, measured. He would learn this soon enough.\n\n\"I mean, sure. You're going to do this and that. Rape women and murder babies, make a dynasty of your own. I hear your words, but I don't believe them. I don't believe them because I'm still alive. I always got along with you better, but I see now that father was the right choice as heir.\"\n\n\"Why? Because he was born five years before me?\"\n\n\"No. Because he knew how to lead. And, for that matter, give women pleasure. I'm not really sure you ever figured either of those things out.\"\n\nThat touched a nerve. Bayrd drew his sword. \n\n\"You used to be more respectful,\" he said, as its blade turned from dull steel to an impossibly dark void. That was a new trick.\n\nI assumed my stance. Right foot forward, left foot back. Caliban loosely held in both hands, her blade held proudly high, pointed towards my enemy.\n\n\"My mother used to have a right arm. Things change.\"\n\nThere was a much more distant rumble of thunder. This time it came from the now-grey and dark sky. Bayrd smiled.\n\n\"Soon the rains will come. Not the light rains of spring but a torrent. My friends taught me how to do that. It will be enough to wash away many of the wards. Not all, but I imagine it will be enough. Then the dead will get inside your lines and your men will learn what it is to be consumed. Unless you spare them this fate by surrendering...\"\n\n\"I'm not sure that would spare the kingdom the same fate. The army is more dedicated to my cause now that they've seen the alternative.\"\n\n\"Nonsense. The dead are a tool. And I might add, a tool that will make the new Cymru even stronger.\"\n\n\"Is that really what you think? Did they promise you that? Or have they simply been obliging or easy to manipulate. You and I both passed the trials, Bayrd. I've never thought you stupid, and I don't now, but these things...they aren't foolish or simple. At least the ones who lead them aren't. At some point they'll turn on you, and make this world like our old one.\"\n\n\"No. I have them well in hand. They devour crumbs because it is all I will allow them, and it is more than they've had in centuries. I don't even call that many. They can be commanded, and those that aren't simple, as you put it, have taught me many secret magics which put me at least on par with you. And they have restored my youth and strength.\"\n\nLightning flashed again in the distance. I had no idea if this was from the clouds or from a mage, but the room was lit up, for just a moment, as if it were in brightest sunlight. There, behind Bayrd. I saw it clearly. A tall figure, impossibly tall. Ten feet? Twelve? Harder to tell with one eye. Skin black and wet as pitch, frame muscled and well-proportioned, as if in mockery of men. No mouth, nose or ears but eyes scattered everywhere on its body, hungry and searching. Then it was gone. \n\nI wondered if it was really here or only in spirit. I wondered if Bayrd was truly aware of it or not. I wondered why it seemed so familiar to me. Bayrd noticed my distraction, and took the opportunity, as any good combatant would.\n\nI narrowly blocked the dark magic, green light washing off the pure blue-white of my shield, then moved right, circling him again, trying to get his back to a window. After a moment I pushed him hard with a wave of force. I didn't expect it to work precisely but I did expect it to be hard to block.\n\nInstead, Bayrd seemed to cut it with his sword, and his clothes barely fluttered, although an idol to his right crashed to the floor. Dammit.\n\nHe pointed it at me and I felt deep pain starting in my chest before I walled myself off with greater magic. He'd been trying to kill me the same way I'd killed Tyr, and rather than be subtle about it, he had simply overwhelmed my shielding with his power, which was tremendous. I knew then what the figure behind him was doing. As I channeled the magic of my world and emotions, it was providing its own unclean energy to him.\n\nWas there a limit? If so I imagine that I would break before Bayrd reached it. But he wasn't as skilled in its use, hopefully.\n\nI threw lightning at him. Powerful, but diffuse. He protected himself and the energy coursed around the room, filling it with thunder and blinding light. Not incidentally, it poured out of the windows. Anyone below would have been able to see it and know that it wasn't directed at the battle on the ground. That was a big part of why I did it. If there was enough evidence then perhaps the men would know that I was fighting alongside them.\n\nWhile the remnants of the flashing light lingered, I threw a stream of fire at him, which he blocked, barely, via deflection into another part of the room. This gave me an idea. He had power but his reaction time was limited by his skill. For better or for worse, killing with magic was part of my nature by now. I followed up with Arrows of Light, curving the projectiles slightly to make them slightly more difficult to intercept. He still did so, but he backed up a step.\n\nI kept up the assault. I didn't try for a single killing stroke but fought ceaselessly, without rhythm or style. Caliban provided defense by drawing on my strength, and at my request she deflected rather than stopped many attacks. In this manner I kept him off balance and I could see his face reddening with the effort of keeping up with me. This required effort on my part but I was far from tired.\n\nA wave of force pushed him back two paces. He countered but it his lightning went wide. He was where I wanted him to be. I threw fire and he deflected it away from him, but he had a solid stone idol twice his size right next to him this time, and some of the fire and heat was reflected back at him. He yelped in pain as his right arm and face were singed. First blood to me.\n\nHe abruptly changed tactics and moved towards me with preternatural speed. Apparently this new vile energy he drew did more than make him young, it made him better than he ever had been. Before I could do more than throw a bit of lightning at him he was within striking distance with his sword. Now that he was close I could see no blade at all, just empty darkness. \n\nMy weapon was longer but he was faster. He darted in so the tip of the blade was a threat to me then struck and faded back away. I had some practice with my spear so I was able to keep a good distance, most of the time. \n\nBecause I did not understand the nature of the blade, I tried to avoid blocking or parrying, but eventually I had no choice. I was pleased that Caliban's blade easily knocked aside Bayrd's without visible damage, but I felt a wave of pain emanate from her core. She projected to me a deep sense of profound cold and...absence. The void of the outer dark. \n\nRealizing that his attacks were picking up in speed rather than slowing, I attempted to throw fire at his feet. He bounced away, spinning and landing with a flourish. He was showing off now, playing with me, or at least trying to convince me that he was. The old Finn would have lost his temper here and died. I kept my head so I would live at least a little longer. \n\nI decided at this point to see if I could stop his source of power. Presuming that the thing that I had glimpsed earlier was providing a channel of some sort to him, I began to search the room for it. Unsurprisingly I failed to see anything. I was distracted enough that I failed to notice that Bayrd was closer than I thought. The tip of his blade carved a shallow furrow in my chest as he passed. I grunted in surprise and pain. I'm surprised I did not scream.\n\nThe cold was intense, and radiated off of the wound, which did not bleed. I knew that had I looked down then it would have been covered in frost. I felt my heart slow for a moment before it picked back up. Gods, would any of this be simple? \n\n\"Ha!\" Bayrd shouted, just as a child winning a point in a pretend fight with wooden swords might. \n\nI took the moment of his triumph to thrust Caliban forward and at the same time throw fire to where I thought he would have to move to. It worked. His trousers and the lower part of his shirt caught fire and his already-injured hand was burned again. For the briefest of moments he shrieked and cursed, before the fire went out entirely, the life sucked out of it.\n\nBayrd's eyes were wild now, crazed. I had hurt him, twice, and he knew he was due to skill, rather than power. I began to draw more heavily on the power of air, given the heights we were at, anticipating needing it to deflect a new magical assault. It was only because of this that I survived.\n\nI felt the air, and was briefly pulling on it, drawing it within me. I had trouble, however. Resistance that I wasn't familiar with, and not from my opponent, or near him. Behind me there was a void of energy that I could not draw from. No, two voids. I moved to my right, diving to the floor. Because of this, the clawed hand narrowly missed me.\n\nTwo winged monstrosities were there, either one could have been a sibling to the thing that maimed my mother. Had they been in the room all along? I doubted it. Had he brought them forth now, as we were fighting, that quickly? I feared that the answer was yes.\n\nIf so, and he could call more at will then he had simply been playing with me. I was just a bit of sport before he crushed my army and made my sisters his own. I had to believe that there was some limit, either in total numbers or the amount that he could draw to our world at once, or else it was all for naught.\n\nThere was no more time for thought. The creatures leaped at me, cautious enough to fear my spear and cunning enough to try and flank me. Bayrd was concentrating, clearly about to attack me. I stood and barely knocked aside his volley of green energy, staggering. As I did I narrowly dodged the claws of the thing to my right as I held the one to my left at bay with Caliban. More green energy impacted my defenses, and I felt them cracking. Caliban sent fear to me, not for herself, but for me. I realized that she was panicking. She had probably seen previous companions die in this fashion, perhaps even to magic identical to this.\n\nI could not keep this up, I needed space. I threw a great deal of ice at both monsters and before it hit, I hit it with a burst of lightning and fire. Mist and steam billowed out around me. I couldn't assume that it would stop the creatures that had no visible eyes, but hopefully Bayrd was relying on sight still.\n\nI stepped back and thought, reaching out again to the power of air, this time just drawing a trickle. I felt for the voids that I sensed earlier. There they were! One of the monsters came at me directly, assuming I was unaware. I ran it through with Caliban and it died immediately, collapsing in blue sparks and gray, rank-smelling ash that made the room smell of noxious rot. As I had suspected, Caliban was made for killing such things, and she did a fine job of it. I felt satisfaction bloom within her. The other withdrew briefly, doubtlessly waiting for Bayrd to assault me. The mist was clearing, fast, but Bayrd wasn't waiting. I saw green lights flicker through the fog as he sought to kill me blindly. \n\nThe room was large but there was limited space, so I thought it was a possibility that he could. I moved swiftly to space that he had already attacked and began to draw more strongly on the magic of air, expanding my senses to the entire room. I couldn't sense Bayrd, but I detected a disturbance that could have been him, moving, breathing. I still sensed the void of the remaining demon.",
        "There! Next to Bayrd, there was a void, but it was gone again. And again! Just a flicker, just a moment, as if the thing could only truly be here for brief moments in time, or was observing then leaving rapidly as a means of protection. I cast lighting at it but by the time by spell was complete it was gone.\n\n\"That was a wide miss, boy,\" Bayrd said, then laughed, thinking it was meant for him.\n\nGreen energy arced over my shield, causing me pain like a torn muscle, an ache deep in my body. I was fading now. The vile magics that Bayrd was using were more draining than I had thought. I tried to think, keep steady. The thing flickered in and out at regular intervals. I could track that, fairly easily, even distracted. It was just a matter of timing, like dancing, and I'd always been a good dancer. The physical position was the tough part. \n\nGreen flame buffeted my shield in a stream that Bayrd kept up. He saw me and was dedicated to using raw force to destroy me now. As I desperately held my place I tried to focus, and also ignore the demon creeping up on me, slowly and cautiously.\n\nWait, there! The void had appeared in a place that it had been before! I saw it, the pattern. I struggled to hold the torrent fire back as I memorized it.\n\nIn front of me and to the left. Then far behind Bayrd. Then close to the door. Then immediately outside one of the windows. Then to my right. My outstretched hand began to singe and burn.\n\nIt was time to act. The flying demon was close now, within striking distance, just in front of me and to the right. I feinted left and dove right, under its claw. Bayrd kept up his stream of green flame and it washed over his creature, incinerating it. I threw Caliban as I fell, calling upon the strength of desperation. Bayrd moved his hands so they pointed at me. His flame sputtered, then died.\n\nI was a little early, as it turned out. The thing had materialized as Caliban passed through its space, and the weapon designed to kill monsters interacted with the creature that was Bayrd's conduit to other realms. The thing screamed. It was not a cry of a man, or a beast. It was the grating of a rusty blade on an old shield, or the sound of rocks splitting during an earthquake, or ice breaking in the sea. It made me more frightened than I have ever been in my life. I saw it clearly again, solid, but floating in the air. It did not die as men do, nor did it turn to ash as these lesser creatures. It simply faded away, like mist before the sun, leaving Caliban triumphant.\n\nBut it was gone, and with it, Bayrd's endless reserves of power and skills. I stood up as he aged and stooped, clutching his chest as if in pain. He went to his knees, although I do not think it was precisely meant as submission.\n\nI walked towards him, drawing Caliban to my hand where she seemed fairly hum with grim delight at serving her intended purpose so well. I kept my guard up.\n\nHe raised his hand as if to draw magic, but when nothing happened, he turned it into the open palm of surrender and peace. He was an opportunist even to the end.\n\nThere were no witnesses and I've never spoken of what happened, but I will tell you, as perhaps you may find it important. At one time, after I had lost my hatred but when I still thought Tyr could be cured or \"corrected\" in some manner, I might have shown my brother mercy, had my sisters been forgiving. Bayrd was not mad, in my opinion. His decisions were poor, but he had acted on his own selfish desires. Father had turned him from a friend to an enemy, but he alone had decided to prey upon his own sisters.\n\nHe opened his mouth to speak, doubtlessly to explain to me why I should show him mercy. I had thought of many reasons, some of them even good. \n\nHe was, however, a monster who would never stop hurting women. And neither Caliban nor I can abide monsters. \n\nAs I thrust forward with Caliban, her blade slipped into him with ease, as one would into a familiar lover. I withdrew her from him and gouts of blood and steam poured from the wound. He collapsed in a heap and curled up slightly. There wasn't even a single twitch or motion of breath after that. \n\nYou may have heard that rather than be captured he killed himself by cutting his own throat or throwing himself out of a window. You may have heard that he tried to use magic in a last ditch effort to kill me and that I was forced to slay him in self-defense. You may even have heard that I tried to take him into custody for trial but one of my sisters or my mother, angered by the crimes they had suffered at his hands, murdered him in a rage.\n\nI allowed these rumors to spread, although I was sure that they would be disbelieved by most if not all of my subjects.\n\nThe truth is that I had considered this moment many times over the prior months. It was good to always have the plausible cover of alternate events, but I also wanted all to know that I was as ruthless as my father, and more so if needed. Cross my family, and you will die, even if I once called you uncle, or brother. I will do it with my own hand if necessary, in a sanctuary of the gods. And unlike Tyr, I will succeed. \n\nThis act of murder was also a statement, and an old one. As my ancestors said to those who would be their subjects after bringing them to heel with primal destruction: \"Kneel, for the Flame is my Friend and the Lightning my Brother. I am of the Pure Blood.\"\n\n* * *\n\nI left to inform the castle that the war was over and assist Raisa in any way I could, but in fact the entire valley knew that Bayrd was dead. His allegiances with the demons were personal. He was both the negotiator and the gate. With his life ended, the unnatural could not remain here.\n\nThe screaming started not long after that. Howls and cries that men hadn't heard in at least a thousand years if not more. The wails of the damned returning to their doomed home in the Sitra Ahra. The screeching of defeat and death. Belial would not be victorious this day, and his armies collapsed, rotting in the field.\n\nThe war was over. Now to let everyone know.\n\nWhen I found Raisa, Marche Grodayn had already surrendered to her, which I think she found most flattering. The marshal of the castle saw the end of the battle outside and he was unwilling to fight to the bitter end for a man he feared rather than respected. The guards I met were quick to lower their weapons. The slaughter I had anticipated never happened. There was but one successor now, and he stood before them, with an army outside. \n\nWithin a half hour the gates were open and my troops occupied Marche Grodayn. Everything felt strange and new and wonderful. But something was missing. Eventually, in the abandoned western tower we found Cedyr, Raisa and Merwyd's mother, and Seigaldia. The former was overjoyed when she saw that her daughters were alive and well. The latter was pleased to be released and happy that Adewyn was well, but her smile disappeared in my presence. I'd killed her only son, and no amount of justification on my part nor defense by her daughter would change that fact. Mother arrived soon with Artan and Gwyn, and seeing them brought her smile back. I suspected that she would at least maintain civility with me, if only for the happiness of her daughter and grandchildren. Adewyn told me that she would never seek revenge, and that she supported her son but not the things that he had done. I'm not sure how she made the distinction, but I wasn't going to complain. In the past such old grudges could lead to betrayals or preemptive killings, but I wanted to try a new way. Hopefully, it wouldn't backfire on me.\n\nWhen I met Raisa's eyes I knew that I had to bed her right away. I'll not write of it here because there was no pretense or foreplay. We went to my old rooms. I loosed my cock as she pulled her pants down and had her from behind. It was not rough or emotionless, but quick and full of need. We loved each other and each of us was happy that the other was alive. We celebrated as she shuddered and trembled and came on my cock as it filled her with my fluid. It was over quickly, but necessary, somehow. Her surrender to me was the final victory of the day. I felt as though it was a rite of old, Raisa being the goddess of spring and I the lord of the underworld, my seed planted in her already fertile womb. I was only able to hold her briefly before I had to get to the business of being a king worth my name. \n\nIf I regret one thing about this day, it is not spending more time with Raisa. The duties of kings and queens are never-ending, but love is when you find it.\n\n==============================================\n\nCHAPTER TWENTY-SEVEN\n\n==============================================\n\nWe burned the bodies. All of them. We did it swiftly and there were no complaints from the army for having to do it immediately after their victory nor from the relatives of the dead. All simply wanted the threat to be gone and forgotten. Merwyd and I assisted with magic as much as possible. The ash was used to fertilize our fields, as the temples commanded it should be. Thus the dead would be returned to life in defiance of the way that they had been defiled.\n\nIt would take years to resettle the empty land, but my people would do so. There would be attempts to maintain inheritance of property when possible, but otherwise we'd make grants to landless folk and ensure that some of them were skilled farmers. As it turned out, most of the fields were producing crops as early as the next year. A few even managed to harvest winter wheat. The death toll was not enough to truly damage the kingdom, but it did cause impoverishment that led to suffering. I considered the restoration of prosperity to my people to be my first trial of leadership.\n\nI was astonished at how busy victory made me. There was a coronation, but I had control over it so it lasted about five minutes. Everything else was honest to gods work. Assigning new offices, figuring out who needed to be exiled, executed and imprisoned (this was fortunately a short list), reading reports on what, precisely, was actually going on in various corners of Cymru, receiving oaths of allegiance from my vassals and respect from foreign delegations. Throughout it all, my sisters and mother assisted and were quite understanding.\n\nMostly.\n\nI'd been maintaining a bit of a breakneck pace for a week solid. I'd been sure to check in with each of my family members after the battle and throughout the week, showing affection and making time when they came to see me. Unfortunately I did not have any real time for sex or sleep. I assumed my wives would understand why this was necessary. After all, once immediate needs got squared away, and promises to all the people who assisted me on my journey were fulfilled, I could get to my responsibilities with my family,\n\nI assumed incorrectly.\n\nI only realized it when I noticed my many functionaries, half of which had always worked at the castle and half of which had been transferred over from my army, left the room that I had converted to my temporary chamber of government. It was all very coordinated, and I briefly considered that I was about to be assassinated. I prepared myself.\n\nInstead, my mother and Adewyn entered, and they looked serious. I was not prepared for this, and this time there was no convenient window to leap from.\n\n\"Mother. Adewyn. You're both looking lovely today.\"\n\n\"Don't try and charm us, Finn,\" Adewyn said, her eyes stony.\n\n\"All right, no charm. What do you need?\"\n\n\"We need you to take your position seriously, son,\" mother said, firmly, but not angrily, \"and attend to your more important responsibilities.\"\n\nI looked around the room at the scrolls and parchment filled with the various requirements and actions required of me. The decisions that I thought required my personal attention. The petitions from my people harmed during the war. The endless payouts and gifts and tax relief and donations for services rendered. Establishing funds for my aunts to live their lives as free women, unbound to men in my family. Building hospitals and homes for veterans who could no longer care for themselves. The process of getting Bartles a knighthood.\n\n\"I rather thought this is what I was already doing,\" I said, making no attempt to hide my annoyance, \"does this look like my bloody idea of enjoyment?\"\n\nIn my defense, I hadn't had enough sleep or sex. I hadn't even really taken time to recuperate from my eye and wounds sustained from battle with Bayrd, although I was healing.\n\n\"We're all pleased to see you take this on, but you could delegate some to your officers and family,\" Adewyn said, gesturing around her. \"We are not less important than your other duties, and you seem to have forgotten everything related to tradition in your immediate quest to prove yourself better than Bayrd.\"\n\nPureblood women guarded royal tradition and custom. I knew this, from my lessons. I'd seen some of it when Artan was born. Truthfully, however, I had no conception of how deep it went nor how much power they wielded, at least when someone like Bayrd wasn't in charge. Before I responded I considered my position. I could appoint people to make many of these decisions. Merwyd could handle much of the administrative streamlining as she was trained to do so, and filter the most critical items to me. Mother could receive diplomatic missives and do likewise. Adewyn could handle the military and Raisa was more than capable of being my spymaster. And I had a host of both young and experienced bureaucrats eager to serve my will.\n\nI took a deep breath. I didn't want to fight.\n\n\"I felt that it was very important for these early days to not repeat the mistakes of Bayrd. Or father. I need to be aware of what is happening in Cymru to keep her safe. To keep you safe. To ensure the legacies of Artan and Gwyn and my child with Raisa.\" \n\n\"We know, son, and we are all honestly impressed, which is why we didn't approach you sooner,\" mother said, \"but you have a series of responsibilities, no less important, that you have ignored entirely. Some of which should have been completed days ago. And while your functionaries may not be telling you about it, I can assure you that the women of the castle, the lesser nobility, and even the cities and fields are paying attention. These are matters discussed in taverns across the kingdom, and when done properly will make you appear more legitimate than any amount of proclamations ever could.\"\n\nI sighed and sat down, too exhausted to fight them. \n\n\"All right. Sit down. I'm listening.\"\n\nThey sat. While I didn't disagree with anything they were about to say, I will state that I did feel a bit like a defeated general agreeing to demands.\n\nMother remained rather formal but Adewyn smiled at me, warmly. I got the impression that she had expected me to fight her. I also realized rather suddenly that she was leading this delegation, and would be the guardian of tradition of this generation of women, much as mother had been for the latter. Wonderful, something else to argue over. At least I knew that she'd take it seriously.\n\n\"Don't look so glum, Finn,\" Adewyn said, \"we're here because we want you to succeed and be happy. You haven't been resting enough, and you know it. No-one but your wives, and perhaps Octavius, would be brave enough to tell you that, however. You better than anyone know that it is wise to consider the needs of your family first.\"\n\nI forced myself to relax.\n\n\"Go on.\"\n\n\"For starters,\" Adewyn said, \"there's Raisa.\"\n\nI sat up, worried. Had I missed something? Was there something wrong with our baby?\n\n\"Is she all right?\"\n\nAdewyn laughed.\n\n\"She's fine. If she wasn't so utterly devoted to you, she'd have been in here though she shouldn't have to be. She's the First Wife, Finn.\"\n\n\"Um...yes?\" I agreed.\n\n\"Have you underwent the Compact? Has she had her Bridal Night? None of the rest of us can until she does. Has she been given any of the traditional gifts? Have you even spoken to her for more than five minutes at a time since you took the castle and had your way with her before dismissing her like barmaid after a drunken tumble?\"\n\nAdewyn could be insufferable when she was right.\n\n\"Now wait a minute, I didn't have a lot of time but I never just tumbled her and kicked her out. I love Raisa! And how the hell do you even know about that?\"\n\nShe ignored my question.\n\n\"We know. But you need to show it a little better. So, tonight you rest, because gods help you if you fall sleep on her Bridal Night before she's truly well-fucked. Tomorrow will be your compact day, where you will pledge yourself to her and make her the appropriate guarantees, then the Bridal Night. What are you planning on giving her?\"\n\n\"Dammit Adewyn, I must have some secrets.\"\n\n\"Humor us,\" mother said.\n\n\"It's still not here. For Raisa, I was having a silver and green crown made. Not something very formal, but more like a tiara. It was In the shape of entwining ivy and set with sapphires to offset her eyes. The gems are old Pureblood treasures, they warn and protect from danger, and can even call forth weapons. Deceptively simple but beautiful and dangerous, like her. I had it commissioned before we came south, but haven't been able to even find out if its complete yet. I have things for all of you but some won't be done for gods know how long...\"\n\nIt was true, I had given it a lot of thought and had ideas for all of them. A sword for Adewyn (clich\u00e9 I knew but I was having one made to match Caliban in style and had a sage reading about how Pureblood artifacts were made to see if we could enchant it in a similar way later), a cunning silver arm for mother which would give her a measure of function (and again I later hoped to enchant for further use), and a cabinet with many books in it for Merwyd (truthfully a library as it was enchanted to hold much more than its size should allow, stocked with the kinds of books that she'd been telling me she wanted to read since we were children together, including grimoires and books from the old world).\n\nBoth mother and Adewyn nodded appreciatively at my choice for Raisa.\n\n\"Good, Finn, but don't wait. Have the night for each of us and give us salt and honeyed bread, as is traditional.\"\n\n\"That...seems a little underwhelming. I wanted this to be special for her\"\n\n\"Don't worry,\" Adewyn said, \"we know that you want to give us more. This has happened before. Give the traditional gifts and then just tell us about the other ones. These things take time, sometimes women don't get their 'real' gifts for years after the Bridal Night. The important thing is that you've given it thought and you want to spend time with us. You do want to spend time with Raisa and your other wives, don't you? Or have you tired of us already\"\n\n\"Gods. I'd pay almost anything to spend a half hour with any of you right now. And I don't just mean making love. Just talking and relaxing with no one trying to murder us sounds like heaven.\"\n\n\"Well, then, this is good news,\" Adewyn said, smiling, \"Merwyd is taking over royal business as of now and for at least the next days. You're going to go rest and then tomorrow morning show up outside Raisa's rooms. We've got the whole thing planned out for you, so don't worry.\"\n\nI was worried. I was fine with spending time on things that my wives deemed important to them, but if Adewyn decided to have a day full of traditional rituals neither Raisa nor I would be happy. \n\nIn any case, there was nothing for it. If I wanted to maintain peace in my family, then this is what I had to do. I agreed and left for my rooms. I felt exhausted and empty, as if my motivation had left me with the end of the struggle. For the first time in six years, I had no plans to fight anyone, and I suddenly realized that I had come to expect it as other people think of their craft. I missed it, and that made me feel a bit sick. I ate some bread, drank some wine, and then slept like the dead.",
        "* * *\n\nMy new footman, the lad who'd hit in the closet from me a week ago, woke an hour or two after dawn, which felt like the most decadent luxury after all the time I had spent in the field. To my surprise, I found an entire black and forest-green outfit already picked out for me. Fortunately, the clothes were relaxed with clean lines that made me feel a little more serious. I looked like hero from the old romances that all of my sisters loved, although some denied it, and I thought Raisa would like the way it fit me. There was even a comfortable eyepatch.\n\nI appeared, as requested, outside of Raisa's rooms. All I had with me was a small parcel carrying honeyed sweet rolls and salt. Several maids slipped out of the door, giggling at the sight of me and for a moment I was worried that I didn't look as good as I thought. I realized suddenly that I was almost as nervous as the first time I had been alone with Adewyn, many years ago. I laughed at myself and knocked.\n\nI expected a servant to open the door, given that this was a somewhat planned occasion. Instead, Raisa was there, looking...amazing. She, too was dressed in semi-formal shirt and pants, but unlike the sharper edges of my clothes, her green shirt and black jacket hugged her curves, drawing the eye to her small breasts and the subtle swelling of her belly. I'm sure that some men find their wives less appealing when they are pregnant. I am not one of those men, and this made her even more desirable to me. Her bright red hair was braided up in a complex fashion and she was wearing...cosmetics? Her green eyes were lovely and smokey in a simple way, her lips a slightly brighter red, and her cheeks just barely rosier. She'd never worn any with me before, and the effect combined with her outfit was stunning.\n\nFor a moment we just stared at each other, unaccustomed nervousness reflected in our faces. Then I smiled, and she giggled charmingly and blushed a little. I leaned into kiss her, but she held her hand out, a mischievous grin on her face.\n\n\"Oh no, Finn, we mustn't have any of that,\" she said, mimicking Adewyn's commanding tone with remarkable accuracy, \"no kissing or embracing until past noon and no lovemaking of any kind until twilight has passed. Anything else would be simply unacceptable!\"\n\nI laughed despite my disappointment.\n\n\"Well,\" I said, holding up the parcel \"at least you'll have some lovely breakfast.\"\n\n\"Hmm, tempting, but I'm not allowed to eat those until you've 'sowed your seed within me'. Those are her exact words. I think maybe you've given her too much power.\"\n\nRaisa took the parcel and put it in her apartments, then came back out and took my arm.\n\n\"Shall we?\" she asked.\n\n\"I would be delighted to go anywhere with you, but I will admit that I have no idea of our destination.\"\n\n\"Oh, it seems like no one has told you anything at all,\" Raisa said with false innocence that fooled me not one whit, \"well, that's a shame. I guess you'll just have to do as I ask. All day. And night.\"\n\nShe smiled up at me and I could not resist smiling back, despite my slight frustration at being unable to take her right then and there as I suddenly wanted to. She led me down a series of stairs and hallways which might have been confusing to some, but were amongst the most commonly used by us as children. They led to the courtyards, where we often played, and the old grottos of worship with their idols of divinities long forgotten, and the marshaling yard, where we practiced with sword and magic. Below that was the women's sanctuary, where Raisa would disappear to towards the end of her pregnancy.\n\n\"I haven't been down this way since we took the castle back,\" I said, feeling the pull of nostalgia as I began to recall bits and pieces of old memories. Tyr and I had a fistfight in that badly-lit corner, although afterward we were fast friends again. Over there was the tutoring room where I overheard my teacher tell father that I was skilled at magic but lacked any sort of real power. That old storeroom was where Merwyd and I used to meet in secret to kiss. I felt her up there for the first time, my hand on her breast and her's holding it there.\n\n\"I know,\" she said, \"and I think that's why Adewyn had us come down here. Do you remember the Garden of Andraste?\"\n\n\"I do. I ended up cleaning it for six months as punishment for sneaking out of March Grodayn to flirt with women in town.\"\n\nRaisa snorted.\n\n\"You did more than flirt, Finn. We're lucky we're not drowning in your bastards at this point.\"\n\nI ignored Raisa's provocative remark.\n\n\"I also remember that while I cleaned, I would catch a small red-haired thing watching me from behind bushes and in the trees. Eventually she came out of hiding and started to help me with my work and tell me about all manner of things. I pretended to be annoyed but I began to look forward to that every day.\"\n\n\"Really? I always thought that I was a nuisance, but it was so nice, having you to myself for a few hours. And you really listened and asked questions.\" Her voice hitched a tiny bit. \"I think that was when I really fell in love with you.\"\n\nShe held my arm a little tighter and I was very aware of her soft, firm body pressed against mine. I wanted more than that. \n\nWe arrived at the Garden we had just been discussing. It had some rather exotic fruit trees, limes and oranges, surrounding a small lawn of moss, with a stream passing through it. There was a fine white linen laid on the ground for us to sit upon, and food and wine laid out. It was cool outside but it never truly became cold here due to the ancient enchantments of our forefathers.\n\nWe sat and ate and reminded each other of the events from our childhood. Of times both better and worse. \n\n\"I knew early that I shouldn't be alone with Tyr or Bayrd,\" she said, suddenly.\n\n\"Really?\" I said, dreading in my heart the reason why.\n\n\"Yes. I was small and quiet and paid attention. I saw Tyr with Adewyn and how when he wanted something he'd just grab her. I saw how Bayrd watched your mother and mine, and Merwyd, so hungrily and without any love. That's why I ended up around you so much. At first it was just because you weren't dangerous.\"\n\nI sighed without thinking.\n\n\"I'm glad that nothing...like what happened to them, happened to you.\"\n\n\"I didn't mean to bring the mood down. I just...you know, wanted you to know that I knew then. That you were good and decent and safe. Even if you were a bit of a whore.\"\n\nI was drinking wine as she said the last bit and I spit it out, laughing.\n\n\"You did that on purpose, you brat,\" I said, leaning towards her to hold her and perhaps tickle her a bit. \n\nShe wagged her finger at me like a teacher with a naughty child.\n\n\"Ah! No touching! Adewyn said.\" \n\n\"You've been touching me,\" I pointed out.\n\n\"I'm allowed to hold your arm and such. You're not allowed to do so much as embrace me. I'm sorry, but I don't make the rules.\"\n\nRaisa's eyes glinted with merriment at my frustration, and I must say that she did not look sorry in the least. Seeing my disappointment, she took my hand and stood up. \n\n\"Come on, we have to go do the next part. It's over by the grove.\"\n\nWe'd been in the Garden for over an hour but it had seemed like minutes. I was, unexpectedly, very much enjoying myself. Well, not so much the restrictions on my behavior. I thought it would have been quite nice to have made love to Raisa in the place where we'd first begun to truly bond.\n\nRaisa led me to the Grove. Trees, pines and aspen, were left standing here from when the castle was built. They were never touched out of respect for the ancient and unknown gods of this place. They were huge, easily a hundred paces high, and surrounded a pool of water that was always clear.\n\nWhen we arrived I saw that there was, incongruously, a couch for reclining. On it were towels and small scrolls.\n\n\"This is where we do the Compact,\" Raisa said, picking up one of the scrolls and handing the other to me. Both had been sealed, one with the sign of the King's Wyvern, for me, and the other with the sign of the Queen's Leopard, for her.\n\nWe broke the seals and read the words to ourselves, quietly. It was the first time either of us had seen the words.\n\n\"Is this it?\" I said. There were only a few lines, and I memorized them immediately.\n\n\"It is,\" Raisa said, suddenly removing her jacket and shirt, \"but we must do it sky-clad, in the pool.\"\n\nRaisa smiled at me as she stripped down the rest of the way. Not for the first or the last time that day, I was struck by her beauty. She was still quiet young, and girlish in her fashion, but in transition to the maternal. I am not a poet, and I cannot describe how this affected me properly, only that it seemed that I loved her more each time that I saw her. As I took in her glory, she dove into the water, sleek and fast, swimming out to a rock out in the center which allowed one to stand up.\n\nI tightly controlled my expectations. It was not yet noon so I wouldn't be allowed to so much as kiss her, much less do what I wanted to do to her in that perfect blue pool. What I increasingly felt as need rather than want. \n\nI took off my clothes, and made no attempt to hide my manhood standing proudly. Raisa didn't even pretend not to look, and despite the cool water her cheeks flushed and her lips parted slightly. Her desire was building as well. I dove in and swam out to her, less graceful but plenty strong. I had always been a good swimmer. The water here was warm due to the magic of the mountain. As I reached the rock something occurred to me.\n\n\"Do you remember when we all used to swim out here together?\"\n\n\"Of course!\" Raisa said, excitedly, \"We'd come out here and have water fights and our parents would leave us alone, for a little while.\"\n\nShe blushed a little, and I knew why.\n\n\"Do you remember when we were out here alone?\"\n\n\"N...no...\" she stammered ineffectively. She was always the cutest when flustered.\n\n\"Let me remind you. I came out after a long day learning the sword, which mostly meant getting beat up by Adewyn. I wanted to soak so I wouldn't be too sore the next day. And I caught you out here, swimming like some kind of water nymph, wearing almost nothing at all. Do you know why I remember that?\"\n\n\"Because you saw how scrawny and bony I was?\"\n\nRaisa was embarrassed, but she had no reason to be.\n\n\"No, because it was the first time I saw how beautiful you were. I mean, you were always pretty, that was obvious, but I never thought of you as a beautiful young woman, with curves and hips and...amazing breasts, small or not. It shook me a little, since up till then were always my cute little sister who I loved and felt protective of. After that day...well. It felt different after that whenever you cuddled up to me and wanted my arm around you. I felt a little guilty of pulling you so close after that. I never told you because I never wanted you to think that you couldn't just be with me as a brother and a friend. If I'm honest, I think I started to love you then, although I buried such feelings deep within.\"\n\nI realized that I had never shared that with anyone, except Adewyn.\n\n\"Oh,\" Raisa said, turning bright red. She reached out to touch my face and caught herself inches away. I could tell that she wanted to kiss me a great deal. She was truly gorgeous in her want.\n\nI decided to say the words of the compact, right then. I'm not sure why. It just felt right.\n\n\"Sister, you who are most beautiful and cherished to me, who lights the night as the evening star and the morning as the new sun of spring, I declare this to you my Compact. I will love you until death, and will never allow harm to come to you. You will stand above all others, first in my heart, first in my bed. I will take you and make you mine.\"\n\nMy breathing was ragged by the time I was done saying the words. I felt my heart racing and the familiar feel of magic drawn into myself. The words had power. She spoke, smoothly and with love, in her soft way.\n\n\"Brother, you who are most handsome and precious to me, who guards me as the wolf protects his mate and pleases me as the moon favors the sun, I declare this to you my Compact. I will love you unto death, ever faithful and true. You will stand above all others, first in my heart, first in my bed. I will make of myself a gift to you.\"\n\nWe moved close to each other, instinctively, our bodies nearly touching, our lips inches away, before we pulled back, barely. We were frustrated, filled with passion and denial, aching for each other, our bodies demanding each other and it wasn't even noon yet.\n\nSince we couldn't do more, we swam and played, splashing each other, laughing, remembering past adventures and mistakes. I had a lot of the latter and she remembered all of them, but miraculously it only seemed to increase her affection for me, as if my flaws somehow improved me. For my part, I remembered every time she had been adorable or unexpectedly kind, all the injured animals she brought home and cared for or the times she stood up to one of us over how we treated a servant or commoner, and how many times I had been proud of her for such acts.\n\nEventually we grew more serious, our shared looks more intense, and I think both of us knew that if we continued we'd end up making love right there and then, regardless of the rules. We got out in silence, watching each other with heat, then we toweled each other off. It may have been cheating, but we weren't quite touching each other. Then, we dressed, regretfully. \n\nDespite being unable to touch, I felt closer to Raisa then I ever had. I felt the magic of the compact settle on us, and we were bound together more deeply than ever before. \n\n\"Where to next, love?\" I asked, genuinely curious.\n\n\"Lunch, finally.\" She said, smiling at me. \n\nNoon at last. I knew she was looking forward more to the kissing than the food, because I was as well.\n\nWe arrived in the marshaling yards, which I thought was a rather odd place for food. They were simple, fenced areas used for training and military purposes. They also held the stables, which is where we were actually headed.\n\nTwo horses were already saddled for us. One, I recognized was an old favorite of Raisa's, and it seemed to have some loaded saddle bags as well. The other was, shockingly, the horse I rode away on the night of my escape. She seemed none the worse for wear and whinnied a little as I gave her nose a rub. Then we both hopped on and I followed Raisa down the narrow and curving siege corridor and out the gates. \n\nWe rode for about a half hour. I was hungry but not overly so, and it was pleasant. We started on one of the main roads that went past the castle town, and then turned off twice until we were on barely more than a game trail. Oddly, we passed several people on it, common folk, most of them older and with packs and walking sticks. They got out of the way and bowed or curtseyed with respect, so they evidently recognized us.\n\nWith a shock I recognized the trail. I had last seen it in the dim light of the moon as I was slowly bleeding to death. It was the same trail that I'd used to confuse any pursuers. Eventually we came to a small clearing. It had been here before but it appeared that the area had been cleared of larger plants and a small open shed was there. Upon getting closer, I realized that it was not a shed but rather a shrine. We dismounted, so this must have been our goal.\n\n\"Oh gods,\" I said under my breath as I finally understood what this place was.\n\nRaisa laughed, warmly.\n\n\"You surely cannot be surprised, not after all that has happened to you,\" she said.\n\nI walked up to the shrine and read the sign that had been crudely carved and stained to preserve it.\n\nFinn's Way - Here is the Path That The Rightful King Took in the Night of His Escape, Long May He Live. May He Return Soon.\n\n\"How long has this been here?\" I asked in wonder.\n\n\"It went up almost immediately after you were revealed to be alive. I don't know who made it, and as far as I know I was the only one who tracked you. I came out here to investigate it at Merwyd's insistence. The only thing that we could figure is that someone saw you that night and kept their mouths shut for a long time.\"\n\n\"Whoever they were, they probably died,\" I said with regret, \"I would have liked to have at least bought them some ale or whiskey.\"\n\n\"Possibly,\" Raisa said as she started to unload food and wineskins from her saddle bags, \"but a surprising number of people from the valleys escaped to the mountains when Bayrd started ordering villagers killed. They remained there for months, until word got to them of your return and victory. They've been trickling back.\"\n\nShe handed me bread and we ate it in silence. It was simple but fresh, very good stuff. The wine, too, was excellent. It was from the red grapes that grew on the mountainsides that faced the sea. Rich and full of flavor and slightly sweet. I had just finished and turned to ask her a question when she kissed me. \n\nIt was sudden but gentle. She didn't reach out to hold me, and just as it deepened she pulled away. I instinctively chased the kiss, leaning forward, but she ducked away, giggling. \n\n\"You're enjoying teasing me far too much,\" I muttered.\n\nShe ignored my remarks.\n\n\"So those were pilgrims that we passed on the trail,\" she said, in her best tutor's voice, \"it is believed that if you pray at the shrine you can restore your virility or gain good fortune for your family. Because everyone knows that Good King Finn is both lucky and lusty.\"\n\n\"Oh dear gods,\" I said, truly embarrassed.\n\nWe ate as the pilgrims we had passed arrived to pray at the shrine. It was a bit surreal for me, and only got more so as an older woman approached me, her eyes full of uncertain emotion.\n\n\"Sire, may I touch you?\" she said with undisguised reverence.\n\nI looked over at Raisa and she shrugged. Neither of us expected this.\n\n\"Um. Of course you may,\" I said, sounding much more certain than I was.\n\nI needn't have worried. She merely brushed her fingers against my shirt sleeve. Raisa looked as she might burst out laughing until the old woman turned and asked permission to touch her jacket. \n\nAs she began to leave, Raisa stopped her by holding her arm, then went back to the horse and got more bread and wine out, which she gave to the old woman. For a brief time we passed out food and wine to pilgrims, and they touched our clothing and one young lady even asked Raisa to bless her. We spoke to them and they told us of their families and losses during the war. They never asked us for any material aid but we passed out some coin that was in the saddlebags.\n\nWe watched as they left, and Raisa reached out and held my hand. I looked over at her and she was, to my surprise, crying.\n\n\"Are you all right, love?\"\n\n\"Yes, Finn. Being here...brings back some memories. And these people have so much faith in us. It's overwhelming.\"\n\n\"I guess I'm lucky. I remember pain and fear, but in the grand scheme of things it wasn't the worst. In fact it was the first time that things let up a bit for me. Of course I had no idea that I was being tracked by an assassin.\"\n\n\"Lucky that you were, else you would have died. Bayrd told me to find you and kill you, if you were still alive. He said that you'd tried to kill Tyr and fled. I didn't believe it, but even if it was true I didn't want to do it. I still can't believe that I...\"\n\nShe let go of my hand and looked into the woods anxiously, as if expecting a monster to come out at any moment.\n\n\"You can't believe what?\" I prodded, gently.\n\nShe sighed.\n\n\"I can't believe that I had my knife to your throat before I stopped and thought about what I was doing. I didn't want to do it, I hated the idea. But I hadn't really decided not to until right then, when my dagger touched your skin. You didn't notice, but you had the tiniest cut, and I realized that I had drawn blood from a man that I told myself that I loved. I couldn't even think, I was so disgusted with myself. Then you woke up and took my blade away. I decided not to resist.\"",
        "She looked me in the eyes, turning to face me and holding both of my hands in hers. She opened her mouth several times to speak, but nothing came out. Her eyes grew sad.\n\n\"I know,\" I said, and kissed her. I pulled her to me and pressed her to my chest but forced my hands to behave. There, in those woods, as midday passed into afternoon, I felt new. \n\nWe walked for a time, holding hands, this time discussing the future. What we would name our child, how we should raise them. Where Raisa would like to go for our first anniversary. How she felt about continuing to serve as spymaster. None of this would particularly interest you, but it was nice and good and proper to speak of these things as husband and wife, rather than just relatives or lovers. Hours passed but they felt like minutes. We were lost in the world of each other for a time. \n\nWe left around mid-afternoon, riding back a little faster. Raisa was supposed to be monitoring the time, apparently, and she had let it slip by. I had no complaints. We went back to the marshaling yards, and left the horses. \n\nRaisa looked up at me.\n\n\"Thank you for a really amazing day. I know you don't really have time to spend with me right now, so it means a lot...\"\n\n\"I should always have time for you, lovely. Maybe I don't make enough time. I'll change that.\"\n\n\"All right, I have to go and get ready for dinner. Meet me down in the Red Room at twilight.\"\n\nHuh. Hadn't expected that. I wanted to go check up on the business of the realm but I knew that if I showed up in any of the governmental rooms that there would be hell to pay, so I decided to go back to my rooms and maybe read a bit. There was a note waiting for me on my favorite chair.\n\nYour bath is ready and your evening wear will be laid out for you when you are done.\n\nAs much as I was enjoying this day, I truly hoped that the evening would be less regimented. Regardless, I followed my instructions. I bathed, found some much finer evening wear, still simple blacks and greens, this time with a jacket of the sort I had seen father wear at formal occasions. I arrived exactly on time, although I still felt bad for not having Raisa's true gift ready. I opened the door and was surprised, in the most pleasant way. If her outfit today had been attractive, the one tonight was divine.\n\nI was suddenly very glad that many months ago I had recommended the green gown and not the golden one.\n\nIt had been modified slightly, the better to provide comfort for her expanding belly, but other than that, it was exactly as I had imagined it would be, if not more so. The bust was low and plunging, making it appear as though she would fall out of it at any moment. The bodice itself was transparent lace everywhere save some strategic locations for the sake of 'proper modesty'. It was long but constrictive so her hips and curves were shown as she moved or shifted. It made her look more like a creature that flowed rather than walked. And every step she took opened the slit on the side that went nearly to her hip, exposing pale thigh that I needed to touch soon or I thought I would go mad. Earlier her hair had been intricately braided, but now it was down, smooth and straight, falling to her shoulders. A simple silver tiara held it back.\n\n\"You look...\" I started, momentarily at a lost for words.\n\n\"Ridiculous?\" Raisa said, obviously nervous.\n\n\"I was going to say devastatingly beautiful and dangerously alluring. I've never imagined such a vision. I know it is in your nature to be humble about such things, but you look amazing. I rather want to take you right here and now.\"\n\nShe blushed.\n\n\"Finn! There are other people here!\"\n\n\"I hadn't noticed.\"\n\nI hadn't, but there, in the middle of the carpeted floor was a small table before a fire, appointed with delicacies that both of us preferred. There were two servants, who I recognized, one with wine and the other, presumably, to serve food. They did not react to my inappropriate speech, because they were consummate professionals.\n\nI walked around and pulled Raisa's chair out for her. She smiled appreciatively and sat down. I wasn't the sort to behave like a gentleman and she wasn't sort to prefer one, but it was a nice novelty for both of us. I walked back around to my side and sat down. On cue we were served warm spiced wine and food was placed in front of us. I was surprisingly hungry. We ate together and spoke of nothing, laughing at silly jokes. Eventually a comfortable silence settled on us.\n\n\"I almost asked Adewyn to change the room,\" she said, \"because of what happened here. But then I thought about the day as a whole...and I think that's why Adewyn had our dinner set here.\"\n\n\"What happened here?\"\n\nShe sighed with a little trepidation.\n\n\"This is where we met when it was revealed that you were alive. I had orders to kill you already, and I knew that Bayrd would be sending others so I had to leave soon. Before that, I knew that I needed to meet with at least Adewyn and Merwyd before I left. I wasn't going to reveal anything yet, I just needed to know where they stood. I had suspicions, but I hadn't trusted anyone, not really, since you went out the window. The meeting didn't go well.\"\n\n\"Why not?\"\n\n\"Merwyd wanted to take Gwyn and get somewhere safe, and then reach out to you. It wasn't really logical and eventually Bayrd's people would have caught up with them. Adewyn wanted to go find father and get him to pardon you and, maybe, remove Tyr as heir and exile Bayrd. Merwyd then argued for all of us leaving together, knowing that I cared for her and Gwyn, and then father would be forced to go along with us if he wanted the family line to continue. Adewyn argued that we would all be traitors and that father was certain to kill you, Finn. They both looked to me for my opinion. They both knew that I had a crush on you long ago, but I'd made myself appear cold to you, if not hostile. Despite this I think that they knew I could be persuaded to help you. But I ended the conversation there.\"\n\n\"Why?\"\n\n\"Because their plans were terrible. Both of them would expose all of us to retribution and neither would truly help you. By the time we got Gwyn out or found father (assuming that he was alive), you would be dead. I realized that I had to act alone, and I didn't want to lose my cover yet so finally I told them that I had orders to kill you, and that I intended to carry them out. They could do as they wished but I warned them not to interfere. I appeared to be very serious about it, which was easy because I couldn't stop thinking about the killers looking for you even then. Then I just disappeared. To their credit, Merwyd looked like she was about to try and stop me with magic and Adewyn was ready to tackle me to keep me from going, but I was gone and neither of them understand how to counter Seyla arts. I left and I found you in Troyes and tried to save you but I underestimated my enemies. You know the rest.\"\n\nI smiled at her, took her hand and kissed it.\n\n\"What was that for?\" she asked, smiling.\n\n\"For saving me, so many times. For going it alone when there were safer ways. For risking everything for me for over five years. For believing in me. For carrying my child with love and devotion.\"\n\nShe flushed and it was visible on her face, down her neck, and to her almost exposed bosom. \n\n\"Are you done with dinner?\" she said, with a slight quaver in her voice.\n\n\"I am, although I hunger for other pleasures. I fear that you may not get much rest tonight.\"\n\nShe laughed, smooth like water flowing down a stream, then stood up and walked with effortless grace over to a door that she opened and entered. I rose slowly and followed, closing the door behind me. It was of only moderate size, but it had what we needed: a fine and comfortable bed with many pillows, some wine and other refreshments on a table near to us. There were some delicacies on the table: oysters, chocolate, and foxberries. They were all aphrodisiacs.\n\n\"I know why Adewyn chose this room,\" I said, with a sly smile spreading on my face. \n\n\"Why?\"\n\n\"This is known as the Crimson Room. It's traditionally where Pureblood women were stripped and then deflowered on the bed. Typically by one of their brothers. It could be tender but it could also get pretty intense.\"\n\n\"Oh,\" she said, simply, her flush spreading as she looked at the bed in new context.\n\nI stepped behind her and put my arms gently around her waist, then I put my mouth to her ear.\n\n\"I still think about the night that I took your innocence, you know. Its a fond memory of mine when I'm feeling lonely. Perhaps tonight we're repeating the process, but as a sacred rite.\"\n\nShe made a noise deep within her throat. A murmur of desire and anticipation.\n\n\"Am I to be an offering upon the altar? Are you the Horned God tonight? Does that make me your prey?\"\n\n\"Yes,\" I whispered in her ear.\n\nI began to unbutton the back of her dress, deliberately delaying after each button, taking the time to build her desire. Her breathing was getting more ragged. When I was done, rather than take her dress off right away I ran a single finger from the base of her neck to the small of her back. She shivered, then rolled her shoulders forward and the dress fell from her body like an emerald waterfall.\n\nShe spun and stepped away slightly, so I could take in the view.\n\nSeeing Raisa like this was a revelation. She wore a fine brassiere and panties of transparent black lace from the continent. With her firm and swelling breasts held up and the red hair above her mons highlighted rather than covered by her small clothes, she took on a new appeal to me. She had a shining silver chain around her waist, and wore a single anklet that matched it. They stood out on her pale skin and flashed in the candlelight and both were hung with tiny bells that chimed slightly when she moved. She had always been beautiful and desirable, she was also now exotic and full of mystery.\n\nRaisa knelt before me, like a concubine-slave from the old stories, the chain around her waist showing her status as my property, my woman. She had read the same books I had, so she must have known the effect it would have on me. She put her fine and delicate hand on my cock, stroking it gently on top of my pants.\n\n\"Can I have it now, husband?\" she said, her voice the little girl I grew up with but full of the promise of carnal pleasure. She pouted after she said it, as if I had been denying her some delicious desert.\n\n\"Of course, wife,\" I said, my own voice deepening with want. I needed her now, and she knew it.\n\nRaisa locked eyes with me as she unbuttoned my trousers. She did so agonizingly slowly, then finally reached inside and drew my hard cock out. For a moment she nuzzled against it, kissing it and placing it against her cheek. It was the most erotic view I could have imagined. \n\nShe took me in her mouth, sucking me in as though I was the most delicious thing she had tasted all day. I put my hands on her head, in her soft hair, but she required no guidance from me. She knew what I needed, and what she wanted to provide. It became evident to me almost immediately that this was no warm up. She wanted to draw the seed from me and drink it like wine.\n\nRaisa manipulated the lower part of my shaft expertly with her small hand while she took me swiftly and deeply into the tight wetness of her mouth, her tongue moving in patterns that drew moans and groans from me, almost against my will. She responded with moans of her own, and I realized that she was touching herself even as she pleasured me, which I approved of greatly. I was close. She began to push me to the climax, and then drew back off of my cock.\n\nShe looked up at me, her old mischievous grin on her face.\n\n\"Did you need something more than that, dear brother? You seem a bit frustrated.\"\n\n\"Raisa, you cruel little thing, you know what I need. I need your lush lips wrapped around my cock. I need to you to drink my seed. I need you, dammit.\"\n\nShe smiled deeply and sinfully.\n\n\"As you wish, husband.\"\n\nThen I was back in her mouth, and she continued to work me like that. She'd take me fast and then deep, and even into her throat, and then as I was about to cum, she'd slow down again, keeping me on the knife-edge of pleasure and tension. Every stroke became the most excellent torture. Then she stopped again and I wanted to scream.\n\n\"Your precum tastes delicious, brother. I've always loved all of your many flavors.\"\n\n\"If you don't finish me soon I'm going to go mad, Raisa. I can't take much more of this.\"\n\n\"Hmm...\" was all the reply she made as she took me into her mouth again. \n\n\"Raisa, oh gods. Oh gods, I love you, so much. I'm...\"\n\nI didn't make it any further. I began to cum, and I think even Raisa underestimated how much I would give her. My cock pulsed again and again, sending my seed deep down her throat, filling her petite mouth, until she could not swallow fast enough. My cock came out of her mouth and painted her face with several ropes which dripped off of her chin down onto her fine and flawless breasts. Finally, l was empty.\n\nRaisa giggled, always playful.\n\n\"I must look quite a mess right now.\"\n\n\"You look...amazing to me. Seeing you marked with my seed like this makes me love you all the more. Stay right there, I'll clean you up.\"\n\nI stripped the rest of my clothing and went to a nearby basin, moistening a towel. I spoke a word and heated it, then brought it back to her. I knelt beside her, and slowly, gently, with great care, I wiped my seed from her face and body. Each part that I cleaned I kissed. When I was done I kissed her on her beautiful lips. I tasted a bit of myself on her lips, but it just reminded me of how well she had pleasured me.\n\n\"Lay down on the bed, wife and part your legs for me.\"\n\n\"Oh. My husband is so firm and commanding tonight,\" she said. She obeyed my instructions, laying down and making herself open for me. I climbed on the bed, and found to my delight that her lingerie had no crotch, and thus gave my tongue access to her most precious places.\n\nI leaned down slowly, taking the deep scent of her musk. Her panties and crotch were soaked. I wondered how badly in need she was.\n\n\"Finn, please. I can feel your hot breath on my quim. Gods...you know you drive me wild already, you don't need to be meeeeaan...\"\n\nShe drew out the last word the same way as she used to when I wouldn't let her eat part of my sweet roll or when I picked her up and wouldn't put her down. I suppose that her need was great, as I wasn't even trying to tease her.\n\nNot yet, anyway.\n\n\"Don't pout too much, love, or I might have to stop. Wouldn't want that, would we?\"\n\n\"No, husband. Don't worry, I...I'll be good.\" Raisa looked at me, and her smile said that she wanted to be anything but good.\n\n\"Will you cum for me?\"\n\n\"Oh gods yes, Finn. I'll cum so very hard for you. I need your...oh...oh gods...\"\n\nAs she spoke I kissed my way up Raisa's soft, smooth inner thigh, to her labia, then tasted her softly up to her clitoris, which was just exposed by the open panties. I hovered over it and slowly kissed and licked around it, making her gasp. She ran her small hands through my hair and wrapped her thighs gently around my head. \n\nI began to kiss her lower lips passionately, tasting every flavor, letting my tongue dart inside her. Her breathing sped up. I began to lightly lick and kiss around her clitoris, and her exhalations turned to whimpers and my name being spoken softly. I inserted a finger and, to my surprise, she came for the first time. It wasn't large, but her quim gripped me, her back arched, and fresh fluids bathed my face.\n\nI kept it up, inserting another finger and varying the pace, plunging it in her and building her up then letting her calm down again. I licked her clit, but very gently, gradually raising her tension. Soon she was beyond whimpers and into moans, and then she was pushing my face into her crotch and writhing beneath me.\n\nAs I began to speed up my fingers, she started making constant noise, whimpers to moans to sighs to squeaks when she began to peak again. Now I stopped varying and kept the pace up, while I paid a great deal of attention to her clitoris. I knew she was cumming by the new liquid that I felt rushing over my hands and face. \n\n\"Finn! I...I love you! Gods, how are you...\"\n\nThen there were no words. She screamed, loud and hard, back arched, hands pushing my face into her crotch as she still ground against me roughly, legs clamped hard around me to keep me where I was. I felt her stomach fluttering and her small body vibrating. At last, it ended and she relaxed her grip on me.\n\nI sat up as she fell back, limp and panting, a soft sheen of sweat all over her form. Her arms outstretched to her sides, her legs parted, one foot moving over my chest, as if she wanted to stay in contact with me. I moved up her body and she kissed me eagerly. She must have tasted herself on me but it did not bother her. Eventually she lay back down and I leaned against the headboard for a bit, running my hand through her hair, just happy to have pleasured her.\n\nI was about to ask her if she needed to rest when she noticed my cock was hard again. She bit her lip, then gave me a crooked little smile and rolled over onto all fours. She laid her head down on her pillow while turning her head over her shoulder, giving me a smoldering look. \n\nI did not need further invitation. I got behind her, running my hands down her sides, slowly, keeping my cock close but not entering her. Raisa looked at me with falsely sad eyes, gave her butt a little wiggle, as if to remind me of what I was supposed to be doing. I laughed.\n\n\"I could never deny you anything, sister,\" I said as I slid inside her. She felt amazing as always, and she whimpered as I bottomed out. I took hold of her hips, firmly but gently and she moaned, knowing what was coming. I began to fuck her, long, slow strokes, completely filling her. \n\nRaisa groaned, loudly. I'd never seen her get that aroused that quickly.\n\n\"It feels so different...now. Oh gods...what...what are you doing to me...\"\n\nIt did feel different. It had from the beginning but I assumed that was all from the mutual teasing and frustration from being unable to touch or kiss or fuck for much of the day. Now that I was paying attention, I felt the magic that had settled on us, enchanted us. It was not some false compulsion, no, it was more like there was cloud of mist over both of us, and it connected us. When I was inside her or we were pleasuring each other, the gentle vapor turned to a storm-head, and it was as though there some great fire between us, raising our level of mutual awareness and arousal.\n\nI could almost feel Raisa as she was feeling me inside her, and she must have felt the same. It was a loop of pleasure, of love, and right at that moment it was making it difficult for me to focus. I sped up, filling her faster and faster, desperately trying not to fuck her too hard, reminding myself that she was carrying my child. This only aroused me further. I growled, deep in my throat, involuntarily. She began to let out little exhalations and high-pitched but soft cries each time that I filled her. I groaned and moaned with each stroke.\n\n\"Finn...oh gods...when you make those noises...I...oh gods...\"\n\nShe came, violently shuddering under me, her little fists grabbing handfuls of the sheets, her loud cries echoing in the small room. I kept fucking her, faster and faster, as her orgasm went through her like ceaseless lightning. I felt my cock bathed in fresh fluids. She cried out again and again, shaking and pushing back against me, fucking me even as I fucked her. I felt her love, truly felt it as her sweat-slicked body impacted mine. I was close, but held on, barely, slowing down a bit.\n\nI realized then that I was tired, much to my chagrin. How long had I kept that up? It felt like mere moments but could have been much longer. Raisa looked back over her shoulder at me.",
        "\"I want to be on top to finish you, love,\" she said, her eyes half-lidded in pleasure, \"I want to give you what you've given me.\"\n\nI gladly left her and lay down. She rose slowly and straddled me. \n\n\"Gods, Finn, look at how wet you've made me,\" she said as she rubbed her slit over my cock, getting revenge for my teasing. I moaned loudly at the sensation as she repeated the movement. \"Be good, love, and tell me what you need,\" she said, wicked delight in her eyes, her small hand running through my chest hair. Every sensation was driving me. I needed to be inside her like a drowning man needs air.\n\n\"Raisa...I need...your quim...please...\"\n\n\"Good boy. Don't worry, your little sister will take care of you,\" she said, as she led gravity impale her on my cock. Oh gods, it felt better than it ever had. My toes curled and my hands roamed on their own, clutching her hips, running gently over her belly, and squeezing her firm, small breasts.\n\nShe moaned as I pinched and tweaked her nipples. I did so harder than normal, because I could feel that was what she wanted, what she needed. I pulled on them in a way that wouldn't have before as my other hand found her clit, gently stroking it with my thumb as she rode me. Her hands gripped my chest suddenly, her eyes taking on a desperate intensity as they locked with mine. I felt her cum again, rolling her hips and rising and falling quickly on my cock. The wet noises she made with each stroke were intoxicating. She rode me out, as wave after wave took her.\n\nAs this happened we kept eye contact, as though our souls were bound together. I couldn't hold out any longer and I felt like I exploded within her. The old magic of the Compact lit up between us, and rope after rope of my seed filled her, bathed her quim and mixed with her fluids. It went on and on, even after my cum was spent, I was dimly aware that I was moaning loudly.\n\nFinally, our mutual pleasure ended, both of us panting heavily, eyes locked. Raisa leaned over me and kissed me, this time slowly, languidly, her tongue exploring my mouth. It felt like the final part of the rite, the true sealing of our bond. She was my Wife, and I her Husband, and this was as real a thing as the bed we lay on or the sky far above March Grodayn. This was deep and old magic, and I had been foolish to be dismissive of it. At last I understood why Raisa wished to be First Wife so much.\n\nShe rose off of my cock, and this time it was me who made a noise of loss. I loved her so deeply that to be separated was a wound. I knew that I would never be voluntarily apart from Raisa again, and I have not been. She cuddled up to me, placing her head on my chest and her leg over mine. I put my arm around her, protectively, and she made a noise of deep contentment. I stroked her back to help her to fall asleep. My little sister was and is sacred to me.\n\nAs I held Raisa in my arms, both of us exhausted, sated, and loved, I understood the good of the Bridal Night. I was glad to have devoted this time to the great love of my life, and as I felt her chest rise and fall against me, I knew that tonight, at least, we were one soul in two bodies. Our child would be special, I thought, if only because of the bond her parents have. We slept like that, and woke once more during the night to make love again, this time languid and gentle, simply facing one another. Thankfully, we were left alone to sleep late into the morning the following day, whiling it away in each others arms.\n\nThat very morning the heralds began to announce that Raisa had been declared First Wife. I learned later that the scholars date my rule from that day, rather than my coronation. A man could call himself king, but without his family's support, he was nothing. I had learned that lesson well.\n\nThis then, is where I will end my account. The war was over, the greater conflicts resolved. The kingdom was healing and its people ready for peace. A new generation of our family was already being born. \n\nAnd, of course, you were finally safe and surrounded by those who loved and cared for you, which is at least as important as anything else.\n\n* * *\n\nThe hours and then the days passed. I was king but in truth my wives and I ruled together, as I imagine it must have been in the oldest days, before men like my grandfather tried to make the women their chattel. Artan had his rites in the men's sanctuary, with me as both officiator and witness. His magic responded to the lightning that passed through both of us, and I knew he would be both strong and wise. I wed Merwyd and she, Adewyn, and my mother had their Bridal Nights. The days turned to months. Raisa gave birth to Yula and mother to Wynn and Elaine. You were present for these blessings, as you have helped to care for all of them. The months turned to years. Peace ruled Cymru, though at times uneasily. \n\nAll might end at any time, so I am grateful and give thanks for every day I have with my family, which quite naturally includes you. I leave this to you, that you might know all that happened during the war, and learn from my mistakes. It will be a gift to you, upon your majority, although not the only one.\n\nWhatever else you may learn here and elsewhere about yourself and your family, whatever hate your father and I carried for each other, you are my family, Gwyn, and are loved. Remember this above all else. \n\n-Finn\n\n==============================================\n\nAFTERWORD\n\n==============================================\n\nFirst of all, I just wanted to say thank you for coming with me on this journey. Originally I set out to write something that seemed at the time to be almost ridiculously long, a fantasy erotica story with three acts, twenty-seven chapters, and a target of 90,000 words. What you are reading now is much closer to 125,000 words, which is roughly the equivalent of a 500 page paperback novel. I'm humbled that anyone stayed with me for that long, and I hope you found it both satisfying and enjoyable.\n\nYour votes, favorites, as well as respectful comments and feedback have been invaluable to me as both inspiration and as learning tools, and I welcome them now. Please let me know what you thought, and how I could do better. \n\nTwo epilogues follow this. I kept them separate as they are optional to the main story. The first tells of the family's status as of ten years after these events. The second is a very short glimpse of what life is like for the next generation as some of them reach adulthood, roughly eighteen years after these events.\n\nPS - There's one big mystery that I left intentionally open. If you noticed it or wondered about it, good on you. If I ever get to a sequel, the answer will be its key. \n\n==============================================\n\nEPILOGUE ONE\n\n==============================================\n\nThe Status of the Royal Family of Cyrmu - Ten Years After the War\n\nThere is a great deal to say, and not much time to say it. My family has grown and changed quite a bit, very quickly. I worry about them constantly, fight with them sometimes, but I love them always. \n\nI am king, undisputed and feared. I do not prefer this reputation, but a man doesn't slay both his brother and his uncle without some complications. It has, however, greatly assisted the Kingdom of Cymru in negotiations and confrontations. The sight in my left eye recovered, in a certain fashion. I can't see out of it the way others do, but can see magic, clear as day. I wear a patch most days, as it can get pretty distracting. I am still known as \"Finn the Lusty,\" much to Raisa's amusement and my consternation. I may have four wives but I am a faithful family man! At least the songs they sing about me are humorous.\n\nRaisa remains First Wife and Spymaster. Nobles in other lands may call me \"kinslayer\" and accuse me of brutish violence, but they do so quietly, because they fear the Wraith-Queen of Cymru. She uses this reputation but dislikes it as by nature she is still kind and forgiving. When she does strike, it is with great care and precision. She is more beautiful than ever, and I would die for her.\n\nRaisa gave birth to Yula a few months after the war ended, and she is now nine. She was born a bit late, but healthy. As we expected, she is a Weirdling, but we do not conceal it and none of us are ashamed of her. Somewhat more problematically, she developed the ability to call forth gossamer wings of magic before she was a year old. Unlike grandmother, who could just float a bit, Yula flitted like a hummingbird before she could walk. Let me tell you, if you think trying to get an infant to sleep is difficult, try getting one down from the bloody chandelier. She misbehaves but primarily out of insatiable curiosity rather than to cause actual mischief. Her hair is a deep ocean blue and she is regarded as the kingdom's great beauty in high society, although she doesn't let this go to her head and finds it more embarrassing than anything else. Yula and Artan are inseparable, and both of them follow Gwyn around. \n\nAdewyn got her Bridal Night and I have been careful that she of all of my sisters gets every traditional honor that a wife is entitled to. It would annoy Merwyd and anger Raisa to have to deal with a sudden pilgrimage to an obscure temple in the north, but after I discovered this was the old way to celebrate a fifth anniversary, I knew Adewyn would love it and it remains one of our fondest memories together. She still keeps the military running and me honest. We fight passionately and then we fuck passionately. Our love has not wavered, and she has become known as my right hand and conscience. She has been an excellent mother to both of the children we have together.\n\nArtan is quiet, thoughtful, and sincere. His magic is both excellent and powerful, and his hair has already begun to turn at age ten. He does not throw tantrums nor does he start fights. Unlike his father, he observes and learns prior to acting. He is sometimes intimidated by his mother and I, but has a deep reserve of bravery and wisdom. Others wish for a more warlike king, but he is a fine heir, and is far less arrogant than either I or Tyr. He is exactly as capable with a sword as he is required to be, and to his mother's consternation has no interest in the arts of battle, save that which involves magic. To his mother's pride, he is respectful of all, especially women, and is unquestionably on the path to being a better man than I. I do, however, note that he is the target of many shy smiles and kisses from a variety of girls, which fills me with what his mother deems inappropriate pride. Never mind if she guards her baby boy's heart with the ferocity of a mountain lion. Adewyn is certain that he should be paired with Yula, and I swear that Raisa and her have been planning the wedding since the latter was born.\n\nAfter a very recent pregnancy that was a bit of a surprise to all of us, Adewyn gave birth to a healthy girl that we named Boudica after a queen of legend. She has not been here long but she is a blessing to all of us, and well liked by our other children. \n\nI did marry Merwyd, and she is quite happy in her role as Wife. She still sometimes has anxieties about being distrusted and the things she had to do in her past, so perhaps puts a bit too much pressure on Gwyn to behave, but it comes from a place of love. She still always makes time for Octavia, our daughter together, and is a good tutor for all of my children when required. Her primary focus is preparing our Kingdom and Home for the inevitable war with the Armies of Belial, so that our descendants have all the magical weapons that they will need to win. We still feel a deep connection that has only intensified with years of being married and trust. Others suspect that she keeps secrets from me, and that is possible, but only because I don't demand that she tell me everything. Similarly I respect the privacy of my other wives.\n\nGwyn knows that I killed her father. Merwyd worries that she might carry some lingering resentment towards both of us, and me in particular. I've never seen any sign of it, however, and continue to treat her as my natural daughter. She is a polymath, good at riding, excellent at fighting, and very skilled with magic, especially healing, although not one hair has turned white. When she worries about this I remind her that mine didn't change until I had been an adult for years. Even at the age of fifteen she is expert at questioning the hypocrisies of her elders, including me, which Merwyd disapproves of but her Aunt Adewyn encourages. She has been a bit of a holy terror and a heartbreaker in her teenage years, but then again, so was I. She is possessed of a mixture of passion and resolve which I admire. If the laws were different she would make a fine heir and queen. She also has a bit of a harmless crush on me, but I suspect that will pass with age.\n\nMerwyd later bore me a daughter that we named Octavia after the priest who has been our family's healer and my friend for some time now. It took quite a bit of effort for her to conceive again, not that either of us complained. Octavia has just turned five and is somewhat quiet like Artan, but fae and a bit otherworldly. She sees things that the rest of us do not, which some find unsettling but I think is wonderful. She greatly admires her older siblings and reads voraciously, even at her young age. \n\nMother leads all diplomatic efforts, and is publicly my wife. This raised a bit of a stir but neither of us particularly cares. I found an Ironblood from far to the southeast, where he was serving some petty warlord and offered him more money to create and build as he wished. My first commission to him was to animate the miraculous arm of ebony and silver which was her bridal gift. It is almost as dextrous as the original. She still goes to great lengths to keep me satisfied and I end up spending as much time bedding her as I do my sisters. She finds time to take an active role in raising our twins, and is probably the only one besides Bartles that they listen to.\n\nIt surprised everyone but me when mother gave birth to Wynn and Elain. They look like us, obviously, with dark hair and strong features. They are a few months younger than Yula and tend to be overly clever pranksters. I have no idea where they get that from. I thank the gods daily for our nanny's efforts at keeping them under control. They would have burned down half the kingdom if not for Bartles. Although I worry, there is nothing but love between Wynn and Artan, and I see no sign of the same poisonous rivalry that I had with Tyr. I will do all I can to ensure that continues by ensuring that no one is denied love. Wynn has taken an interest in the army which pleases Adewyn, and I think he will end up paired with Boudica if not also Octavia. From time to time Raisa catches Elain sneaking into her rooms, and I suspect she wants to be like her favorite aunt when she grows up. Now that I am older and wiser I've noted that she follows Artan around much like Raisa used to with me.\n\nBartles' remains our nanny, part-time tutor, and friend of myself and my family. Her different style of magic is also invaluable for many reasons. Artan has an entirely understandable crush on her. Her beauty initially led to some suspicion that I was keeping her as a mistress but that is simply untrue.\n\nParla and Sari are now a permanent part of our army, although we give them latitude as to how they run their company. We've hired a great deal of talent from the continent through them, including quite a few Karrash, who Merwyd assures me will be invaluable should we ever have to face the likes of Belial's Army ever again.\n\nCaliban remains by my side, but she has been \"introduced\" to all of my children. She has good relationships with all, but most definitely prefers to be held by my sons. In as much as an intelligent spear can, I believe that she has designs on Artan. Merwyd jokes and calls Caliban my \"fifth wife,\" which amuses her to no end.\n\nGeneral, now Duchess Kyrza has been elevated to the lesser nobility, and her daughter stands to inherit good lands in the south that were left empty after the war. She remains our loyal servant and Adewyn's good friend.\n\nThere has been no further demonic incursion since Bayrd made his infamous agreement. We do not let our guard down.\n\nOrder of Birth for Finn's Children and Relative Ages as of Ten Years After the Succession War of Cymru\n\nGwyn (f, adopted by Finn, birth parents Merwyd and Tyr) - 15\n\nArtan (m, Adewyn) - 10\n\nYula (f, Raisa) - 9\n\nWynn (m, Syrlin) and Elaine (f, Syrlin) - 8 (close to 9)\n\nOctavia (f, Merwyd) - 5\n\nBoudica (f, Adewyn) - 6 months\n\n==============================================\n\nEPILOGUE TWO\n\n==============================================\n\nEighteen Years After the War\n\nGwyn\n\nI woke up, feeling a bit hung over, but that wasn't really a surprise given how much wine I'd had last night. What was a surprise was the man sleeping next to me.\n\n\"Ari, oh for fucks sake, wake up. We can't let your mom or mine find us here. We're not supposed to be...\"\n\nMy lovely cousin made a noise like a dying boar and then rolled over. Gods dammit.\n\n\"Wake up, you lazy fucking bastard,\" I said, with heat if not precisely affection. I hit him on the head.\n\n\"Ow. Gods dammit, Gwyn, what the fuck?\"\n\n\"How did you end up here, again?\" I asked, annoyed.\n\nHe just laughed. It would have been more annoying if he didn't do it a great deal like his father. Well, that was one of the things he did like his father...\n\n\"I'm fairly certain it had something to do with you dragging me in here promising to 'ride me until my balls were as dry as the desert,' fair cousin.\"\n\nFuck. That did sound like me. Drunk me, anyway. \n\n\"Seriously, you have to go. You know you aren't supposed to be...with me. I'm not your sister and both of our mothers have forbidden it. And to be honest Aunt Adewyn terrifies me when she's angry.\"\n\nHe rolled over to face me, his white hair flashing in the sunlight. Goddammit, why did he have to be so cute right now? He had an oddly intense look to him.\n\n\"No. I mean, yes, I'll go, because you asked. But I don't like that rule and I won't follow it. I know why, but I don't care. I care for you. And who are you supposed to fuck, anyway? You're beautiful. And perfectly healthy and what, you're just supposed to live like a temple maiden? No. It's bullshit and I'm talking to father about it.\"\n\nOh...oh god no. I did not want that conversation to take place. But...I knew that he loved me. I loved him as well, even if I had trouble saying it. He was raised as my brother. His father had adopted me. So why couldn't we lay together? The answer was tradition and he was unmarried and probably the heir and ugh. It was always tradition and purity of lineage in a Pureblood family. Always.\n\nAnd his mother had wanted him to wait until Yula came of age in a few months. She was supposed to have been his first. And she loved him, and he did care for her dearly. But he was a man! He had immediate needs and he...he just said I was beautiful, didn't he? \n\n\"Say that again.\"\n\n\"What?\" he said, confused, \"That it's bullshit?\"\n\n\"No...that I'm beautiful.\"\n\n\"Oh come off it Gwyn. You know you are, you don't have to hear it from me.\"\n\n\"Puh-leeaasssee?\"\n\nHe sighed, but he looked at me, again intensely. Gods his ice-blue eyes made me melt.\n\n\"Gwyn, you're the most beautiful woman I know. I love how you look like this, naked in the sunlight. I love the way the light flares off of your hair and reflects in your eyes. Your breasts are perfect, with just the right upturn and bounce. Your ass is...its magnificent. I get hard just being near you, and catching your scent makes me forget what I was doing. Happy?\"\n\nYes. Happy was a word I could use to describe how I was feeling. Horny was also a good word. I jumped him, kissing him as though I might devour him, my hands finding his tight behind and pulling it into me. His cock was...oh god so hard, and trapped under my belly. It twitched as my hands ran over his back. We...we were so good for each other. And we were so closely related, not even really cousins, our parents were all siblings. Purebloods even had a word for it, \"half-blood marriage\". If only our mothers weren't so damn conservative. Raisa wouldn't have cared one whit. And of course I'd share Artan with Yula...I mean, our mothers had prepared herself for such situations as soon as we were able to understand Pureblood relationships.",
        "And it isn't as though I'd never kissed Yula, either.\n\nFor now though, I continued to kiss Artan as I knew he liked. Deep and intense, then upon his finely muscled chest and down his body. By the time I reached it, his cock was hard as a rock. I slipped it into my mouth as I looked up at him. I saw my love for him reflected in his eyes. His taste was indescribable to me. Even then it was like the epitome of manliness to me, and it aroused me to have it on my tongue. I started out with quick strokes and worked the bottom half with my hand. He moaned my name, which turned me on even more. \n\nAs I took him into my throat I began to finger myself, roughly. I couldn't believe how wet I was already. I was sore in places which meant that I had probably been well fucked last night, and Artan wasn't one to leave me unsatisfied. He entwined his fingers in my hair but not harshly. Nothing he did was harsh, although he would fuck me hard if I asked.\n\n\"Gwyn, that feels so good. And you look so beautiful like this.\"\n\nHearing those words made my mouth and fingers speed up. I moaned with him in my throat. I felt his hands pulling me off of his cock and I whimpered, confused, but he pulled me up his body and kissed me again. I knew what he wanted. I got on top of him and put his fine cock, still wet with my saliva, at my entrance. \n\n\"I'd be happy if this was the only cock I had for the rest of my life.\"\n\nI let gravity pull me down on him, enveloping him. My interior muscles held him and his cock twitched inside me.\n\n\"Oh, fuck. Gwyn...you feel so good. Like the first time we fucked, its always like this. You're perfect.\"\n\n\"I love the things you say when you're inside me, Artan.\" \n\nI began to move up and down, letting his cock fill me and leave me, moaning louder and louder. His hands gripped my waist tightly and he began to assist moving me up and then pulling me back down. I rolled my hips in the way he liked, and he rewarded me with another deep groan, and we both sped up. He reached out rather suddenly with his left thumb and stimulated my clitoris directly. I jumped a little and stopped, distracted.\n\nI looked down at him and he was staring at me, his eyes hungry, his smile like a wolf. His father's smile. \n\nI didn't have time to complete that thought before he rolled me over with surprising strength. Before I knew it he had my thighs spread wide and my arms pinned above my head. I was powerless underneath him as he ravished my neck and breasts with his mouth. Gods I loved it when he did that. Then he started fucking me, really fucking me.\n\n\"Artan, I can't..oh fuck I'm going to...\"\n\nI came, much faster than I expected. Harder, too. He was getting better at pleasuring me, at understanding my moods and needs. As he plunged into me mercilessly, over and over, my orgasm crashed down on me. It took me and made me shudder deep inside, arch and clench, made it hard to breathe and impossible to think. That's probably why I said what I did.\n\n\"Gods, Artan, I love you...\"\n\nIt was in a breath, not a shout, but he heard it. I know that he did because he locked eyes with me in surprise, and then started cumming immediately. Gods he looked amazing when he came. I felt his warmth rush inside me, and it was like he said he loved me back. I was happy to be taking Bride's Bane, because I was sure that otherwise he would have gotten me with child. \n\nWe looked at each other, panting heavily, both of us understanding that I'd crossed a line that neither of us had intended to. This was supposed to be fun, perhaps only a distraction for him until Yula came of age. It was much more than that for me, although I tried to keep that concealed. If I was lucky I could end up as his concubine, maybe. If not, I'd just be on the outside looking in at him and Wynn, unable to be anything for either or them. I didn't want to fill Artan with guilt over something that wasn't his fault.\n\nThen he kissed me, deeply and passionately. He released my hands so he could hold my head gently and I wrapped mine around his neck. We'd never kissed like this before, and we'd kissed in a lot of ways. This reminded me of the way Finn kissed Raisa when both of them thought that no one was looking. This one said a lot more than my unintentional words ever could have. My eyes were moist when we were done and I'm sure I had a dumb smile on my face.\n\nUnfortunately, in our reverie, we failed to notice the door to my room opening. I'm not even sure that I had locked it last night.\n\n\"Gods, I knew it. I knew I'd find you here. You two are going to mire this family in disgrace.\"\n\nAunt Adewyn and my mother stood there, both with grim expressions on their faces.\n\nThis wasn't good. Both of our mothers. Both of them. And I saw in Artan's eyes that he'd finally had enough. He was slow to anger but once he did he was as bad as his mother. He'd be fighting with Aunt Adewyn this time, somehow he'd grown up without being afraid of her, god knows how. Maybe he was like Finn and just didn't have a strong survival instinct.\n\n\"Get up, Artan. You're done spending time with Gwyn. You've done enough.\"\n\n\"No,\" he said, softly, but firmly. \n\n\"Artan,\" I started, \"don't make things worse for yourself. This is my fau...\"\n\n\"I'm not asking,\" Adewyn said, in her dangerously quiet fashion, \"I'm telling you, this is how it's going to be. You and Gwyn are done. Over. If it means we have to be cruel and separate you, so be it. You can't be trusted to do the right thing on your own.\"\n\n\"No,\" Artan insisted, \"we won't be separated. You may be my mother, but you're both being hypocrites, and you must know it. I'm not leaving Gwyn behind because she has the wrong father. That's not what father would do and I'm not doing it.\"\n\n\"Gods dammit son, you know it isn't that simple. It's bad enough that she was your first, but to carry on like this despite our pleading and our warnings... And frankly, your father has nothing to do with this. He may be the king but he isn't your mother, and he makes mistakes.\"\n\nFor a moment, things were quiet. Artan and Adewyn glaring at each other. I looked over at my mother, expecting her typical style of cutting words. However, she looked too busy to really tear into me the way I could tell that she wanted.\n\n\"Get dressed, girl. Your king has summoned you.\"\n\nOh.\n\nThat didn't sound good. I shared a brief look with Artan as I got dressed in uncomfortable silence and as we closed the door behind us we heard the argument restart.\n\n* * *\n\nMother said that she didn't know why Finn wanted to see me, which made me both suspicious and nervous. Adewyn and Artan had still been shouting at each other when we'd left, however, so it was probably safer to be in his office right now.\n\n\"Be respectful,\" she insisted as we walked down the broad halls, which I suppose was understandable given my reputation, but I still chafed at it, \"he doesn't dislike you but if he believes you've been disloyal or god help us Raisa said something to him, he might want to exile you or similar. It isn't fair but it's the price you pay for being my daughter. And being so willful. Speaking of which we'll talk about your unacceptable relationship later.\"\n\n\"There's nothing to say about that, mother. We love each other. I don't know how you and Aunt Adewyn can be...so cold to the idea of us.\"\n\n\"I don't want you to be apart. I truly don't. But there is more at stake than simple love. Gods I hate all of this. Artan must be viewed as legitimate. He must be regarded to be absolutely and completely pure and unquestionable, because of recent events. And for similar reasons you must not be regarded as a threat to any succession. Just because Finn doesn't agree with us doesn't mean we're wrong. For gods' sake even Aunt Syrlin agrees with us, and she's normally all about forbidden love.\"\n\nI laughed, despite myself. Mother smiled.\n\n\"But...he needs someone, mother. And so do I. I don't know what things were like for you. I never will. I just...I know I love him and before him I was unbearably alone. And to have him torn from me and given to another, even Yula. I just...I don't know if I could stand it.\"\n\nMother stopped and looked at me. Really looked. For a moment, I saw genuine sadness in her eyes.\n\n\"I'll do whatever I can to keep your separation as brief as possible. We all know Yula doesn't mind you as fellow-wife. If Artan claims her as soon as she's of age, then, hopefully, Adewyn will concede.\"\n\nAs usual, she thought she knew best. Internally I was so angry at how wrong she was. Still, after all this time she thought she had to prove her loyalty and that I was simply a rebellious girl. Didn't she know that almost everyone, herself excluded, went through a troublesome phase? Didn't she understand that Finn had never judged me except by my actions, and had forgiven all of my youthful insults? I suppose only I knew how Finn felt about me.\n\nShe should have known that, but, I admitted, she couldn't have known the rest. And I never wanted her to. \n\nMother accompanied me to the room where Finn did all his administrative work and saw petitioners. She wouldn't go in with me, which made me anxious. Despite her worries, he trusted her. Worse, Aunt Raisa was waiting outside as well, and everyone knew that she was by his side for almost all of his meetings, even if you couldn't see her. If anyone loved Finn more than my mother, it was her. She smiled at me and I smiled back. I was still quite close to her and I saw concern in her eyes. It's always a bad sign when the Wraith-Queen of Cymru feels worried for you.\n\nI opened the door and Finn waved me in impatiently, while finishing scrawling something down on a piece of paper with his other hand. I closed the door behind me and sat down. The room was really nothing but a desk with writing supplies, and places for about five people to sit, and of course a beautiful view of the valley and lake just outside of home. People said that he had jumped into that lake from the men's sanctuary years ago to escape being murdered by my father. It seems in character for both of them, but I've never asked.\n\nHe looked up at me and smiled. I felt the butterflies in my stomach act up. Even in a Pureblood family there are rules. You aren't supposed to be in love with your adopted father and uncle, not really. You might end up laying with him, but you save your heart for your brothers. And you really weren't supposed to fall in love with the man who killed your actual father, even if he was a hateful bastard who liked to hit you. Most especially, you weren't supposed to be jealous of your own mother.\n\nI hadn't been with Finn in years, and I was true to Artan, but you can't just kill your feelings, unfortunately.\n\nI guess I was breaking all kinds of rules. Finn saw the worry in my face and tried to console me, even if he didn't really understand the turmoil that I was feeling.\n\n\"You're not in trouble, unless you want to be,\" he said.\n\nI smiled, despite myself, and felt my face grow hot. Was he implying that he wanted me again? Doubtful, but a girl can hope.\n\n\"What I mean is,\" he continued, dashing my hopes, \"that I need someone to undergo a task for me. You'd be perfect for it, and part of the reason why is that everyone thinks that you despise me and that I distrust you.\"\n\n\"I don't hate you!\" I said, a little too quickly.\n\n\"And I trust you with my life, never doubt my love for you,\" he said. Why did he have to say things like that? It wasn't fair.\n\n\"But...if I were to leave, suddenly...people would just assume that I was fed up and ran away. Or that I was fleeing justice? Is that it?\"\n\nHe smiled very widely now.\n\n\"Exactly,\" he agreed, \"and Artan would have to be in on it, as your affair with him would be rumored to be the cause of your exile.\"\n\n\"Is my relationship with him really that well known?\" I said, without thinking. Fortunately Finn just chuckled.\n\n\"It's the worst kept secret in the castle that you two are sleeping together.\"\n\n\"Gods, and here I thought we were being subtle.\"\n\nNever mind that we were deeply in love.\n\n\"I sympathize with you,\" Finn said, as if reading my thoughts, \"but I do think separation would be wise, at least for a time. Also it would give you some time to meet other people and decide if being bound to Artan is what you really want. Your position as cousin may seem to close doors but it opens them as well...\" Finn trailed off. That wasn't like him.\n\n\"Are you saying you want me to marry someone from outside of the family?\" Hearing this from Finn was like being rejected twice. \n\n\"No, of course not. But consider your mother. She was always going to be with one of us, no matter what. You might be with Artan, but you'll be sharing him with at least two other wives, most likely. That isn't for anyone.\"\n\n\"Mother never complained about being with you. Neither did I.\"\n\nHe blinked. It was dirty of me, to remind him that he was my first. There was no one else for me, though, and...and it was wonderful while it lasted.\n\n\"I don't regret it, Gwyn,\" he said, \"and I never will. But I let it go on too long. You know I did.\"\n\n\"You treated me like a wife but wouldn't marry me. That's what made mother angry. When you decided to let me go, it broke my heart, but I understood. Then Artan and I found each other. Now mother and Adewyn want that to end too. There's no place for me here.\"\n\nHe sighed.\n\n\"There is, I think. I adopted you for a reason. Go complete this task for me, take time to think. Have some fun on the continent. When you get back things will have changed, I think. Even if they haven't I'll support you if you still want to be with Artan.\"\n\n\"And if he doesn't want me anymore?\" I said, with a slight tremble in my voice.\n\n\"You underestimate your effect on him. Or men in general. Trust me. When I saw your mother after five years it was as though no time at all had passed for us.\"\n\nFinn didn't talk about their separation much and neither did mother. I sighed.\n\n\"All right. What would my king have me do?\"\n\nHe smiled.\n\n\"Good, so, the short version of what I will be asking is to deliver a series of messages to royals in several nations on the continent, not just the Purebloods, but the Sanguid dynasties as well. Half of the message will be contained in letters and the other half will secretly be memorized, by you. No-one, not your mother, not Raisa or even Artan, will know about the secret portion of the message. That is to be shared only with a monarch or their heir, directly.\"\n\n\"Gods. This must be important. What is this about?\"\n\nHe sighed and looked at me for a long time. I grew uncomfortable, but something in me loved the way he studied me. I knew he found me appealing. He had proven that to me before. At last he spoke.\n\n\"Has anyone ever told you about the Journey?\"\n\n* * *\n\nThe explanation was long and he had to stop occasionally and relate it to his experiences during the Succession War, from many years ago. I mostly remembered it as a fun camping trip with some very frightening moments. Oh to be a child again.\n\nWe'd just reached the point where I had been asking questions when our conversation was interrupted by the door opening and slamming against the wall. Aunt Adewyn came in like a beautiful storm cloud, her eyes flashing like lightning. I jumped up and went around the desk to stand behind Finn. Just in case. Fortunately she wasn't angry at me. Artan followed her in, Aunt Raisa close behind.\n\n\"Bartles!\" she shouted.\n\n\"Bartles?\" Finn said, confused. How was he so calm? I suppose that they'd been married for a long time, but still.\n\n\"Bartles! That's who your son gave himself to first. Not a family member at all. Gwyn would have been bad enough, although completely understandable. And with only months until Yula reaches her majority! Your son has insulted both of them!\"\n\nWell, I had been upgraded from \"unacceptable\" for her son to \"bad enough, but completely understandable\". I wasn't sure if I should have been insulted or pleased. Raisa looked vaguely unhappy as well, but it was hard to imagine her being upset at violations of tradition, being that she was the least traditional First Wife in all of Cymru's history. Of course, she was probably thinking of her daughters feelings. Come to think of it...\n\n\"Bartles?\" I said, as it finally processed in my mind, cutting Finn and Adwyn off abruptly, \"You fucked our nanny first? Before me or Yula? Really? And you never told me? Why the hell not?! I thought I was special! Was I just a good time?\"\n\nI guess I also had a bit of a temper, but can you blame me? He just got done telling me how beautiful I was, and I just told him that I loved him. I couldn't believe that he let me think that I was his first. Don't get me wrong, I liked her. Hell, I loved her like a second mother, but...ugh. There were only two men in our generation and one wouldn't reach his majority for a number of years still. We couldn't have Artan spreading his seed with a Wyldblood. I, er, we had needs!\n\nArtan looked as though he wished that he could disappear into a crack in thew all and I suddenly felt very badly for him. I got angry quickly but I calmed down quickly too. I wouldn't hold a grudge.\n\nMostly.\n\nFinn cleared his throat. He looked as though he was questioning the merits of having a large family.\n\n\"All right, everyone out,\" he said, softly but firmly, \"except Artan and Gwyn. I have words for both of you.\"\n\nAdewyn looked like she was about to protest, but she closed her mouth and left with Raisa. Only Finn could do that, and even then only rarely. When the door shut everything was eerily quiet.\n\n\"You know,\" he started, looking at his son, \"I always thought you were smarter than I was. What in the name of all the gods possessed you to tell your mother, the self-appointed guardian of all Pureblood tradition, that Bartles was your first?\"\n\nFinn didn't look surprised in the least. I wondered if he had known.\n\n\"Uh, well. Mother just kept telling me who was and was not appropriate, and talked about how Gwyn was an unacceptable first for me and that until I was married properly we'd have to be separated. Then she said that Gwyn could never be a wife to me, 'only a concubine,' and I got mad and...well...it just slipped out.\"\n\n\"More like it just slipped in,\" I said under my breath, \"you dog.\"\n\nEveryone stayed silent for a moment, then Finn laughed at my inappropriate joke. Soon we were all laughing. \n\nIt's hard to believe, looking back, how much my life changed after that day. I'd be on the continent in weeks and it was the last I'd see Artan for months. By the end of the day we'd have agreed that it would be best to break up at least temporarily, so I wouldn't have to act like a temple maiden on my trip while he stayed comfortable at home and bedded Yula. I'd feel lost, cut off, but also, for the first time, free. I also knew that I would return to Finn, my aunts, mother, brothers, and sisters. This was where I belonged.\n\nThings were complicated here. Sometimes we disagreed or fought. Sometimes we were separated. But we always came back together. After all, in the end, we were family."
    ],
    "authorname": "LateStageInfernalism",
    "tags": [
        "epic",
        "fantasy",
        "magic",
        "love",
        "romance",
        "incest",
        "brother",
        "sister",
        "little sister",
        "pregnant"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-matter-of-blood-pt-09"
}