{
    "title": "Learning Through Porn Ch. 11",
    "pages": [
        "Mark and Max were relaxing by the pool already when Angela and Kitty made their entrance. The late afternoon sun warmed the wooden deck. The golden brilliant light made the well-designed gardens around the pool seem like a scene from a fairy tale.\n\nMax had been wondering just what his mother was getting up to with his new girlfriend. They had been gone for quite some time. He had never before imagined that his straitlaced mother, his sweet suburban Mom might be into some of the stuff he had seen on the internet, but this week had changed his views on a number of things. Even while he carried on a lively conversation about the NFL with his host, his mind was filled with illicit images of the two of them together.\n\n\"Hi, guys,\" came his mother's voice from the deck. Both men looked over at the back door of the house. The two women sashayed towards them. Each looked gorgeous, and yet, in his heart, Max was a little disappointed. This was hardly the outrageous appearance he had anticipated.\n\nAlthough Kitty was wearing a string bikini, it was nothing that you would call out of place on a family beach. And Angela, his Mom, had a boring old one-piece swimsuit. Maybe nothing had happened upstairs. Maybe nothing was going to happen tonight.\n\n\"Hey, sweetie,\" Angela said to her son, leaning over to kiss him gently on the cheek. It was at that point that he caught a whiff of something musky, something familiar, arousing, coming off of her... face? She pulled back, and winked.\n\n\"Just a little idea of what's to come,\" she whispered. Max' mind went blank for a second as he registered that he had just smelled his girlfriend's juices on his mother's face. That could only mean...\n\nAngela laughed to herself as she went to sit on an empty beach chair next to Mark. He was certainly a handsome man, she mused. That would make the rest of the plan easier.\n\n\"Max, you look as if someone had just goosed you,\" giggled Kitty, sitting next to her boyfriend. He blinked and looked over at her.\n\n\"Goosed? Me?\" He shook his head, smiling. \"I think we both know who's been goosed, girl.\" He waggled his eyebrows, and guffawed when she blushed.\n\n\"Meanie,\" she smiled, and punched him in the arm. \"Put some sunscreen on my back, 'kay?\"\n\nShe pulled her hair into a ponytail, and then lay on her stomach, handing him the bottle. He squirted some into his hands, rubbing them together. Casually, she reached behind her and untied her top behind the neck and in the middle of her back. She pulled it out from under her, lying there in front of the three others in just her little string bikini bottom.\n\nHe palmed her slim back with both of his hands, greasy from the sunscreen. Slipping his hands around in circles, he slowly massaged the firm muscles, kneading and caressing in equal measure.\n\nMark watched his daughter getting oiled up by her new boyfriend, and his mouth went dry. Oh, the things I could do in that situation, he thought. What I could see! So much to touch.\n\n\"Mark, would you be so kind to do me the same favor?\" Angela laughed to herself as he flushed, turning to her. She kept a calm demeanor however, and turned to lie on her stomach like Kitty. Carelessly, she pulled the shoulder straps of her dowdy one-piece down her arms and off her hands. As if modest, she held the sides of the swimsuit to her breasts as she got herself comfortable. Then, she let her arms dangle off of the sides.\n\nMark looked in some confusion at the semi-naked body in front of him. He had to be careful here not to let his excitement over his daughter's body interfere with politeness. This was the wife of a man in whose business he had major interests. He couldn't let anything get out of hand.\n\nWith trembling hands, he squirted some oil into his palms and approached Angela's slight frame. Her skin felt hot under his touch, and he found himself marveling at its softness.\n\nMeanwhile, Max was having a grand time. His hands had spread all over Kitty's back, and he worked up the sides now. His touch was firm so as not to tickle her. He went over her ribs, feeling each groove, and then felt the underside of her breasts. They had looked so enticing, so lovely in the restaurant, their symmetry without blemish. He had not had the chance to touch them then. Now he did.\n\nKitty warmed to his touch. He was so wonderful with his fingers, so knowing. And when he confidently came up her sides, she lifted her torso slightly so his fingers could dip underneath. How exciting it was to know that her boyfriend was feeling her up with her father only feet away.\n\nMax' hands cupped each tit lovingly, rubbing his fingers across her nipples. They were heavy, full in his hands, filling each palm completely. He was hard in his trunks, and he made sure he was turned away from his mother and Kitty's Dad. He couldn't help but push against the outside of Kitty's thigh with his erection.\n\n\"Mmmm,\" she purred. She was in heaven, such exciting times, all in one day. \"Don't ever stop that, Max.\"\n\n\"Why should I, Kitty?\"\n\n\"I don't know. Maybe because my Dad's right over there?\"\n\n\"I think he's got his own hands full at the moment,\" Max joked. Kitty looked up at him, then lifted up on her elbows to look over at her father.\n\nMark was unsure of himself, and that was an unusual place for him to be. On the one hand, Angela had invited him to put the sunscreen on him. On the other hand, all of her signals were of a friend, properly covering herself. And yet, her tits bulged out on each side of her torso, and she was wriggling under his touch like a kitten. Every time he approached territory that should have been forbidden, she sighed happily.\n\nAnd like a well-trained terrier, he found himself with his fingers caressing the sides of her breasts, smoothing the oil over areas best left untouched. And, like his young male compatriot, he was hard. Hard as steel in his trunks.\n\n\"Ooooh, Mark,\" Angela sighed, her eyes closed. \"You have a lovely touch.\"\n\nMax and Kitty shared a glance, and the girl giggled. Max squeezed her breasts warningly, his eyebrows raised. She stifled her laugh and rolled her eyes.\n\n\"Your Mom is too much,\" she whispered, before settling down again. \"Don't forget to put sunscreen on my ass, right?\"\n\nMax' heart leaped. What an invitation. He quickly got the bottle from beside Mark and put more lotion in his hands. Mark was too caught up in his own ministrations to take much notice of the others.\n\nWith smooth caresses, Max started on his girlfriend's upper thighs. The approach to her ass was outstandingly sexy. Each leg rose up to the butt cheek in a sweet curve, a continuation of line from knee to the peak of the ass. Max let his fingers linger on their way up to tease at the tender skin between her thighs.\n\n\"Nice, sweetie,\" Kitty murmured. His hands swept up to hold each cheek in his grasp. It was incredible to be fondling this girl right in front of her father. He suddenly wanted, needed Mark to know what was going on. Deliberately, he pushed the bottle off of the lawn chair so it spun across the deck.\n\n\"Oh, Mark,\" he said, absent-mindedly. \"Could you get that for me?\"\n\n\"Uh, what? Oh. Sure, Max.\" Kitty couldn't believe Max' audacity. How would her father react? She wanted and didn't want to know. Max' fingers were under her bikini bottom, frankly massaging her ass with his strong fingers.\n\nBlindly, Mark pulled his hands finally away from the sexy young mother's breasts. He had been fondling her for God knows how long. What could he have been thinking? He got the bottle and walked over to where Max was sitting next to the outstretched form of his lovely daughter.\n\nAnd there he saw the young man with his hands under his girl's bikini bottom, moving in circles. He stood, astonished, watching as the boy started to move his hands out and in, pulling the sexy cheeks apart and then pushing them together. The tiny bikini bottom had mostly settled into the valley, and the father could see hints of the darker skin around his daughter's asshole.\n\n\"Just put it beside me, would you?\" Max had let his thumbs slip into the middle of that wonderful valley, pushing the bunched up fabric together. Kitty wriggled delightedly under her boyfriend's intimate touch. Mark was bewildered. How was he supposed to react? After all, was this any less than he would have done in the same situation?\n\n\"Okay,\" he rasped. \"Here you go.\" He turned away, seeing red for a few seconds. But what right did he have to be jealous of the young man? After all, Kitty was his girlfriend. And yet, Max was way beyond 'only what he could see.'\n\nKitty's pussy started to tingle as soon as she heard her father turn away. With his unspoken approval, she felt free to express her arousal. She began to moan with each movement of Max' hands.\n\n\"Mark?\" He was now standing, looking off towards the house. \"Mark,\" Angela repeated, leaning up. \"Is everything all right?\" She knew perfectly well what was going on. Mark looked down, his eyes clouded, and then clearing. The young mother's right breast was nearly completely exposed, right down to the pink nipple pushing against the towel on the chair.\n\n\"Um. Right. Yes. Everything's fine.\"\n\n\"Look,\" Angela said, a concerned frown on her face. She slipped her arms back into the swimsuit, and stood up. Her nipples pushed against the old fabric, clearly evident through it. \"Let's go up to the house and get some wine. What do you say?\" She rolled her eyes towards the young couple who were now both breathing heavily.\n\n\"Right. Okay.\" He let himself be led away up to the house.\n\nAs soon as they were gone, Kitty sat upright, her breasts swaying in the golden light. She launched herself at Max, throwing her arms around his neck, her tits squashed against his chest.\n\n\"Oh, you sexy, sexy boy,\" she breathed, and mashed her mouth against his. He enthusiastically returned her kiss, delighting in the feel of her lithe body against his.\n\n\"You ain't seen nothing yet,\" he husked, when she pulled away finally.\n\n\"Will you fuck me? Here? Now?\" She palmed his hard cock through his trunks, stroking up and down the distended rod.\n\n\"I would love nothing better, Kitty. But I have a feeling something even hotter is going to happen before the night is through.\" She whined in disappointment.\n\n\"But I need this. I need it now.\"\n\n\"Patience, girl. Patience.\" He slipped his fingers down the front of her bikini bottoms and felt the hot wetness of her hard clit. \"Mom and I have plans for this, you see.\"\n\n*****\n\nWhen Angela and Mark returned from the house with a tray of wineglasses, two bottles of wine, and cheese and crackers, the two lovers were sitting calmly next to each other, sunning their hard young bodies. Angela raised her eyebrows at Mark.\n\n\"See?\" She nodded knowingly. \"Nothing to worry about here.\"\n\nSoon the four were laughing together, talking about various topics. The wine flowed freely. Angela had meant to lay off the alcohol as much as possible. She needed to keep her wits about her if she was to orchestrate the final part of her plan. But her anxiety had caused her to drink more than she had meant to, and she was feeling the effects of the potent wine on her thinking. Still, sometimes you just had to let things take their own course.\n\n\"And he stepped on the ball!\" She finished her anecdote, and as everybody broke out laughing, she made a big gesture with the hand holding her glass. Wine sloshed out all over her front, staining the swimsuit a deep purple in seconds.\n\n\"Oh, shit,\" she gasped, standing quickly, holding the suit away from her front.\n\n\"Wait, wait,\" Kitty laughed, tears in her eyes. \"Let me help you with that.\" The girl jumped up and grabbed a napkin to blot at the front of Angela's swimsuit. She was feeling no pain herself, and she patted the older woman's chest ineffectually.\n\n\"Uh, I don't think you're helping much,\" Angela said, an amused glint in her eyes. Max watched in disbelief as his girlfriend moved the napkin in little circles over his mother's breasts. He could see her hard nipples pushing out through the stained fabric.\n\n\"What do you mean? I think I'm doing a world of good here,\" Kitty winked. She could feel her own nipples pushing hard against her bikini top. She wanted for all the world to just strip down, here, in front of these three wonderful people. Why couldn't she just be allowed to express her love for them?\n\nMark was feeling very mellow, happy to see his girl so content. How could he have felt so jealous before? Who wouldn't want to possess such a sweet girl? He smiled paternally at Max, who smiled back tentatively. Still, that Angela was one hot number. The way Kitty was trying to sop up the wine from her swimsuit was pulling it even further away from her chest. If he leaned over like this, he could almost see Angela's tit...\n\nAngela noticed Mark leaning over with a glazed look in his eyes.\n\n\"Kitty?\"\n\n\"Hmmm?\" The girl was not even pretending to wipe up the wine any more. She was frankly rubbing the hard nipples right in front of her. Her tongue, pink and pointed, licked her full lips.\n\n\"Maybe I can borrow another swimsuit? Then we can take care of this one the way it needs to be taken care of.\"\n\nKitty looked up, and Angela winked at her. Her face brightened.\n\n\"Right! Great idea!\" She leaped up onto the deck, practically dragging Angela behind her. \"I've got just the suits for us to wear.\"\n\nMark and Max watched the two women run into the house. Mark's face took on a confused look. He turned to Max.\n\n\"Suits? Plural?\"\n\nMax shrugged.\n\n*****\n\n\"Wait 'til they see us in these,\" Kitty giggled. Angela's head was spinning. Synchronicity was one thing, but she could never have planned on Kitty getting in on the act so easily. Or that she would have suits like these.\n\n\"Are you sure you're okay with your Dad seeing you in this?\"\n\n\"Don't be silly, Angela,\" the girl scoffed. \"He's already seen me in less.\"\n\n\"Less than that?\"\n\n\"Well,\" Kitty blushed. \"Didn't I say on the phone that I'd been teasing him?\"\n\n\"You call this teasing?\"\n\n\"Uh, yeah, I do,\" Kitty insisted. \"As long as it's innocent. As long as he stays strong.\" She couldn't believe how she was opening up to Angela. Her senses felt a little dulled. Perhaps it was the wine. Maybe it was her lust. Either way, she knew she needed to get outside, and soon.\n\n\"Come on, Angela!\" She pulled on the woman's arm. \"Let's go!\"\n\n\"All right, all right, already. I'm coming,\" Angela laughed. Still, this was the first truly dangerous step. If Mark reacted badly, she would have to back out somehow. But she had seen how he had looked at Max and Kitty earlier. She had a hunch he would go along with this.\n\n*****\n\n\"Whoo-eee,\" Mark heard Max whistle. \"Now, if that's not a sight for sore eyes, I don't know what is.\"\n\nMark had been working at the grill, cooking up some burgers for dinner. His back was to the deck, so he didn't see his daughter and her boyfriend's mother emerge. He turned to see what had piqued Max' interest.\n\nThe sight before him blew his mind. He had never seen two women look sexier or more desirable than Kitty and Angela did at that moment. His heart pounded, his cock swelled in his trunks. How could they wear those suits?\n\nAngela was wearing a bikini in the sheerest black material. The tiny bra provided enough material to cover her nipples barely, and the darker skin of her areoles showed around the edges in every direction. Her perky tits stood proudly on her chest, fortunately able to stand on their own, for they got no support from her top.\n\nThe bottoms were larger, but that only served to show off the full bulge of her pussy. The little tuft of hair at the top of the slit was displayed through the sheer bikini. The gap between her thighs was neatly filled by her prominent labia, the crease between them obvious to all observers.\n\nHer trim body left nothing to be desired, her pretty face set off by her shining blonde hair. She was a goddess, an avatar of the female sex, and the sexuality that goes with it. She was clearly excited to be wearing the suit, if her hard nipples were any indication.\n\nBut if she were the archetype of sexuality, Kitty was the icon of lust. She was wearing the most ludicrous excuse for a bathing suit Mark had ever seen. It was made up of several thin electric blue straps wrapped around her young teenaged body. There were two strings that ran from a choker around her neck down the slopes of her breasts, and two around the top part of her torso. These several strings came together to form tiny patches that were perched over her hard nipples. Her breasts, larger than Angela's, were essentially entirely uncovered. Their curves formed a breathtaking pair of arcs on her chest.\n\nFrom those two tiny patches came two more strings that went down over her flat stomach to come together in her crotch. There, they met in a tiny piece of fabric over her pussy, the front so low cut that her dark pubic hair simply sat above the little pouch. You could see her pubic mound all the way down to where the hint of the start of her little slit peeked out. There was nothing on her waist or hips, simply bare golden skin from the lower curves of her breasts to her toes.\n\n\"Daddy?\" Her seductive voice floated across the yard to where he stood, frozen, his mouth agape. He stared at his gorgeous daughter, her eyes looking at him from under her bangs, her lower lip caught between her white teeth. \"Do you see anything you like?\"\n\n\"Uh, Kitty,\" he stammered, \"do you think you ought to be wearing that outside?\"\n\n\"Don't be silly, Daddy,\" she murmured, walking slowly towards him, her breasts swaying gently with each step. It was mesmerizing. \"I don't think I have any reason to be ashamed to wear this among friends and family. Do I?\"\n\nAngela went to stand next to her son, watching the sexy girl sauntering towards her father. From the rear, the suit looked like a single string running from the choker straight down her back to disappear between her round ass cheeks. The two straps that held the nipple patches in place tied underneath the vertical string. Otherwise, she was entirely naked. Any other body might not have looked so hot, but Kitty's was designed for this kind of exposure.\n\n\"That's some girl you've got there, Max,\" she whispered. She leaned against him, turning in so that her breast pushed up against his side.\n\n\"Don't I know it, Mom,\" he whispered in reply, putting his arm around her torso. \"But I've got a hell of a woman here, too.\" He kissed her gently on the top of her head, then turned back to watch the show.\n\n\"Ashamed?\" Mark was struggling to come up with an appropriate answer to his daughter's question. Shouldn't she be ashamed? She was prancing around practically naked, in front of her father, and her boyfriend's mother. Was this the way kids acted nowadays?\n\nYet, he couldn't step up and stop her from doing it. And why? Because he was hypnotized by the sight of her. He was completely under her spell. In any case, as long as it remained innocent, as long as it stayed within her rules, then he was just being a good father, right? Right?\n\n\"Uh, no. No, I guess not, Kitten,\" he finally managed to say. Kitty finished her little prowl and stood next to her father. He was so cute when he became flustered.\n\n\"Mmm. I thought not,\" she murmured, and put her arms around his neck. Her lithe body pressed up against his, pushing her nearly naked breasts against his bare chest. With her lower belly against his groin, she felt the thrilling hardness barely concealed in his trunks. All because of her. How awesome was that?\n\n\"I love you, Daddy,\" she purred, and kissed him gently on the lips. His hands, unsure of themselves, fluttered behind her, before tentatively coming to rest on the bare skin of her lower back.\n\n\"I can see a lot, Princess,\" he whispered raggedly.\n\n\"I know,\" she replied, her eyes glinting mischievously up at him. His hand slipped lower on her back, to the top of the outward curve of her butt. She wiggled against him, her groin rubbing against his erection.",
        "\"Isn't that so sweet,\" came Angela's voice from behind them. Mark startled. He had forgotten about their guests, and here he was practically feeling his daughter up in front of them. \"It is so wonderful to see how close the two of you are.\"\n\n\"It's true, Kitty,\" Max said. Just like Mark, he had his hand on his mother's ass, but it was hidden from the view of the other two. It was incredibly exciting to fondle her in front of other people. He had discovered that at the restaurant. But how much more exciting here, where the observers knew what their relation was.\n\n\"I know, right?\" Kitty melted into her father's embrace, laying her head on his chest. \"But, Daddy, shouldn't you be paying more attention to the grill?\"\n\n\"Oops,\" Mark grinned, blushing, embarrassed. He turned away from the obvious interest of Max and Angela, and starting flipping burgers. Kitty stayed pressed against his side, but he kept his hand at an appropriate level, neatly tucked around her waist.\n\n\"Now, Max,\" Angela whispered. \"You have to behave here.\"\n\n\"Aw, Mom, how can I help myself when you look like that?\" His hand slipped inside the sheer bikini bottoms to caress her skin of her ass.\n\n\"Don't mess things up, Mister,\" she hissed. \"We've got to take things slow, you hear?\"\n\n\"Just one quick kiss. Please? I'm dying here.\" How could she resist him? He was so damn sexy. And those eyes! Just like his father's. Too much.\n\n\"All right. But make it quick!\"\n\nKitty glanced over her shoulder and saw Max incline his face down towards his mother's. Angela had her eyes closed, her lips slightly parted. She could see how hot she was, how overheated. Kitty held her breath as the mother and son came close together. Their lips met, softly at first, and then more demandingly. Angela's body went limp in her son's arms, supported by his strong grasp, one hand on her ass, the other supporting her upper body.\n\nKitty's whole body felt hot and shivers ran through her, centering in the depths of her sex. She felt tingly, lightheaded, tipsy, all at once, as she observed the intense kiss that her boyfriend shared with his mother. She should have felt jealous. She should have felt outraged. But all she felt was excitement. Without thinking, she pulled her father's hand up to her breast, all the while gazing at the couple making out behind them.\n\n\"Honey?\" Mark looked down at his daughter, who seemed to be breathing awfully quickly. His hand was now cupping her left breast, so much of which was uncovered. \"Are you all right?\" He looked over his shoulder to see what she was looking at, but all he saw was Max and Angela, standing next to each other. Had he been less confused, less thrown by the fact that Kitty had placed his hand on her breast, he might have noticed the flush on their faces, the way that Angela's hair was mussed.\n\n\"They can't see where your hand is,\" Kitty whispered urgently. \"Just... just hold me there, would you?\" His hand felt so wonderful on her, so gentle in the way it surrounded her breast, so fatherly in the way he avoided her nipple (the rules, the rules, he couldn't see it). She was shivering actively now.\n\n\"Kitty! Maybe you're cold? Shouldn't you put something on?\"\n\n\"Shh,\" she urged him. \"D\u2014don't say anything, don't... don't do anything else... I'm about to\u2014to... ooohhhh...\" and she felt the orgasm crash over her, a little one, but intense. And she hadn't even touched herself. It was all from the visual stimuli and the feel of her father holding her, all here, in their backyard. Oh, God, it was addictive, what they were doing. How could she ever stop?\n\nMark looked down at his girl, shaking in his arms, her face creased in concentration, her lower lip caught in her teeth. He couldn't believe it. She had just cum, right here, while he was holding her. She blinked and looked up at him, her eyes loving, large, deep blue.\n\n\"My God, Kitty,\" he said, wonderingly. \"How in God's name did you get to be like this?\"\n\n\"Oh, Daddy,\" she fluttered her lashes. \"It's all because of you, you silly man.\" His heart melted within him, and he lightly squeezed her firm breast in his hand.\n\n*****\n\nThe late afternoon had passed in a blur for all four. There had been dinner at one point, but none of them could remember what the food had tasted like. Wine had flowed freely, and all four were far more comfortable than any would have thought possible. \n\nMax couldn't help but feel that the scene was surreal. Here was his mother, in a see-through bikini, his new girlfriend in a set of strings that could barely be called a swimsuit, and he and his girlfriend's father were acting as if nothing were out of the ordinary. How could he sit across from Kitty at the outdoor table, watching her tits sway with any movement? How could her father sit next to her and not have his hand between her legs? There was only the smallest amount of material there anyway.\n\nMark was similarly floating through the evening. Kitty had her leg against his there at the table. He only had to glance down and he would be afforded a view of her neatly trimmed bush at the junction of her thighs. And, for crying out, was that the hint of one of her labia peeking out next to the ludicrously tiny scrap of fabric over her mound?\n\nKitty was having the time of her life. She had never felt so free, so open, so loving. She loved all of these people! So her brain felt a little muzzy from all of the wine, but everything seemed so obvious to her now. She loved them all so much that she wanted to do things with them, things to show her passion. Including her father, her sweet, silly father. Maybe especially him. She put her hand on his leg and squeezed it, smiling at him.\n\nAngela could see the love between the girl and her father, but she could also see the confusion in the man's face. He was feeling things, things he thought he oughtn't to feel. It was so important, so necessary to help him past that.\n\n\"Let's get in the hot tub,\" she said. Her speech was a little slurred, but no one else seemed to notice. Kitty jumped and squealed at the idea. The little patch that covered her right nipple slipped off, showing her dark pink areole and the hard nub that capped it. Mark's eyes were fixed on the forbidden sight, and Angela giggled to herself. She grabbed Max' hand.\n\n\"Come on, you,\" she urged, pulling him towards the waiting hot tub. Behind them, she could sense a tension between the other two.\n\n\"Uh, Kitty, your... uh, your,\" Mark stuttered.\n\n\"What is it?\" Kitty sounded a little exasperated.\n\n\"Your tit,\" he blurted. Kitty giggled.\n\n\"My... tit?!\"\n\n\"Oh. Oh, dear God. Did I just say that?\"\n\n\"What can you see, Daddy?\"\n\nMax smiled to himself as he stumbled to the hot tub, pulled by his mother. He knew the hint that Kitty was giving her father. Oh, he wished he could just watch and see what Mark would do. He stepped into the hot swirling water after his mother. She pulled him down to her, and he folded her in his embrace. All afternoon the lust had been swirling just like the water, as hot and confused.\n\nAngela let herself be taken by her son. His mouth found hers, his tongue forcefully entering her mouth and entwining with hers. Her heart pounded. How could she be so crazy, so loose? So easy? But her lust shouted her rationality down, and she slipped her hand into his trunks, grasping his hard cock with her cool hands.\n\n\"You've got to get Kitty to take this. Here. Now.\" She gently twisted her grasp around his shaft, feeling the extraordinary length of him. \"Do you think she'll be willing?\"\n\n\"Are you kidding, Mom? She wanted me earlier this afternoon. I think she'll be willing to do more now than she was then.\"\n\n\"Just start slow, okay? We can't spring everything on Mark at once.\"\n\n\"Whatever you say, Mom.\"\n\nBehind them, Mark was frozen, standing across from Kitty, looking at her in a way she had not seen him do yet.\n\n\"Kitty, Kitty,\" he whimpered, his hand halfway to his nearly naked daughter, who stood there so bold, so wanton. \"Oh, God. You know exactly what I can see. What the fuck are you doing to me?\"\n\n\"Nothing you don't want, Daddy,\" she whispered, stepping closer to him. His hand came into contact with her side, and he slid it up to that temptation, the luscious fruit of her womanhood. With trembling fingers, he caressed that naked globe, feeling the heat emanating from her. She sighed contentedly as he found her hard nipple. With wonder he felt the evidence of her excitement. Everything about her was so perfect. He was in love, so deep.\n\n\"All right, Daddy,\" the excited girl said, forcing herself to step back again. \"We better not keep them waiting any more.\" Mark nodded, as Kitty slipped the patch back over her nipple.\n\nShe led the way in front of him, her sweet ass undulating. His eyes were locked on her lower back, the thin string sweetly caught by her round cheeks. She smiled over her shoulder at him as she climbed the three steps. At the top, she stopped and leaned over to test the temperature of the water. Her ass was pushed out towards him, her legs slightly parted. The little bulging pouch between her thighs stood out in the electric blue suit.\n\n\"God help me,\" Mark muttered. He was relieved to see her finally slip in next to Max, leaving him a seat next to Angela. The lovely blonde woman was leaning back against the side of the tub, her eyes closed. The water had caused the sheer bikini to adhere closely to her skin. He was thankful that she wasn't watching him enter, because he knew for a fact that his erection was causing his trunks to tent massively in front of him.\n\n\"Mmm,\" Angela murmured, as she felt Mark sit down next to her. \"This is just the thing, isn't it?\" She leaned into her host, resting her head on his shoulder.\n\n\"Uh, yeah,\" he said, nervously. \"It's nice.\" Max and Kitty had their heads pressed together. They were whispering, but he couldn't make out what they were saying.\n\n\"Put your arm around me, Mark,\" Angela said calmly. Dazed, he did as she asked, and she wriggled tighter into him. The feel of her against his side was a panacea against the confusions of the evening.\n\n\"You know, you're an awfully sexy man.\" The whisper was accompanied by a light touch on the inside of his thigh. He looked down to see the intense green eyes of the woman in his arms. \"I thought it was incredibly erotic when you were touching the sides of my tits earlier. And with the kids right there, too!\"\n\n\"Uh, Angela, I don't\u2014\"\n\n\"Hush. Let me return the favor a little.\" The hand on his leg crept up towards his crotch. He knew he should stop this. He knew he shouldn't let her continue. But his mind was muddled. He looked back over at the other side of the hot tub. There, only a few feet away, Max and Kitty were deep in a passionate kiss.\n\n\"See? They won't notice anything we're doing over here,\" the sexy whisper continued. The hand had moved up to tease over his erection, dancing with feathery touches across the outside of his trunks. His arousal was taking over all of his reason. He started to caress her side with the hand he had around her. Her skin was incredibly soft, warm even in the heat of the hot tub. \"In fact,\" she went on relentlessly, \"I don't think you can see anything that's going on under the water.\"\n\nHer hand reached the waistband of his trunks and slipped inside. She felt the length of him with her slim fingers, the girth, the steel hardness.\n\n\"Oooh, you're a big one, Mr. Clifton,\" she giggled softly. \"Just lift up your hips for a second, would you?\" He seemed unable to deny her anything. Lifting himself, he felt her deftly pull his trunks down around his ankles.\n\n\"Oh, Christ, Angela,\" he said in a strangled voice. \"I can't do this...\"\n\n\"Nonsense,\" she said in a matter-of-fact voice. \"We're not doing anything that we don't both want to be doing here. There.\" Her hand found his erection again, now lightly caressing it from the base up to the inflamed head. \"Isn't that much more comfortable?\"\n\nMark tried to wrap his mind around what was going on. Here he was, naked, feet away from his daughter and her boyfriend, who were apparently making out without a concern. In fact, he was pretty sure that Kitty had her hand in Max' lap, doing just exactly what Angela was doing to him. And the way the boy was leaning back showed how much he appreciated the attention. The straps had come off of Kitty's tits again, as well, he noted. God, how sexy she was.\n\nThe hand on his cock was holding him more firmly now, stroking him fully, twisting gently as it approached the top. He was pushing up into her hand as she pumped him, so much that he noticed the tip of his cock breaking the surface of the water. The head appeared huge.\n\n\"My goodness, Mark. You are excited, aren't you? Is it my touch on you that's causing you to get so aroused?\" She paused in her ministrations. \"Or is it the sight of your gorgeous young daughter making out with my handsome boy over there?\"\n\n\"No. No, what are you talking about?\" She couldn't learn his secret. She couldn't find out how perverted, how disgusting and outrageous he was.\n\n\"Mm. I don't know. Maybe it's the way you've been unable to keep your eyes off of Kitty's sweet sexy body.\" She stroked him again, deliberately stopping after one movement. \"Or maybe it's the way you put your hand on her ass by the grille.\" Oh, God. She noticed. Another stroke. \"Or the way she had you hold her tit in her hand while she came, came hard while leaning on you in your own back yard.\"\n\n\"Oh, fuck. Fuck me, Angela. Yes. All right? Yes. It's both you and her. The two of you, all afternoon long.\" The hand started moving more affectionately now.\n\n\"Would you fuck her if she asked you to?\"\n\n\"God help me.\" The tortured man looked down at his tormentor. \"God help me. I would. I would, if she asked me to.\"\n\n\"Let me stand in for her,\" Angela murmured, swinging her leg over Mark's lap. Facing away from him, she lowered herself onto his hard cock. She had divested herself of her bikini bottoms for just this occasion. And when his burning hard rod came into contact with her pussy, she sighed in contentment. She had never thought of herself as a slut. But things had a way of turning in life. And the only thing you could do was to hang on for the ride.\n\n\"Look,\" Max whispered. \"She did it.\" Kitty blinked, her lust-fogged vision coming clear for a second. There, not two feet away, Angela was sitting on her father's cock. The two teenagers watched in amazement as the thick rod of her father split his mother's pussy lips and sank deep inside with one fluid motion. Somehow, Angela had maneuvered Mark up onto the side of the tub so that nothing was hidden from their view.\n\nKitty gasped. Her dad's cock was immense, seeming to take forever to come back out of the beautiful shaven pussy. She twitched the crotch of her swimsuit to one side and backed onto Max' lap herself.\n\nMax felt his cock find his girlfriend's center for the first time. At last, he was going to feel the depths of his sexy new sweetheart. Inch by agonizing inch, his erection was surrounded by her tight heat, the velvety walls of her pussy sucking him into the very deepest part of her.\n\n\"Ooh, lover,\" she whispered, leaning back over her shoulder to find his mouth and kiss him deeply. \"That's so wonderful.\" She loved that her first time with Max was here, in the company of her father and his mother. How much more perfect could it be? She was about to find out.\n\nMark's view of the scene unfolding in front of him was blocked by Angela's body as it rose and fell on his cock. His eyes were closed, in any case. He didn't think he wanted to know everything that was happening.\n\n\"Kitty,\" Angela hissed. The girl looked over at her, her eyes half-lidded in ecstasy. \"Now. I want it now.\" Kitty looked confused for a second. Then she recalled her promise from earlier in the afternoon.\n\n\"Now?\" She wasn't sure that this was the way she wanted things to happen.\n\n\"Now.\" The command was firm. Kitty leaned forward, maintaining her position on Max' cock all the while. Max saw where she was going, and his heart started to pound in anticipation. He shuffled forward on the seat in order to help her, holding onto her waist with both hands. Angela paused in her motions as Kitty came nearer and nearer.\n\nKitty's vision was filled with the obscene sight of her father's cock deep buried in Angela's pretty pink gash. The lips were distended by his girth, and a froth was worked up around the joining of their organs. Above, Angela's hard clit poked out, forced forward by the thick monster in her canal. The skin was so neatly shaved, so perfectly clean. And below, my God, below, there were her father's balls, thick and heavy. Was ever a daughter afforded so gorgeous a sight?\n\nHer hesitations overcome, she leaned in, the odor of their fucking overcoming her senses. With her tongue extended, she made contact with Angela's clit. Just that, she reasoned. Nothing more. She would lick Angela, and not her father.\n\nAngela saw her doubts, and allowed her to stay where she was. She moved in a little circle on Mark's cock, feeling the father deep inside her while the daughter stimulated her clit. She looked over Kitty's back at the son, who was beaming back at her.\n\n\"My God, Mom,\" he whispered. \"You're twisted.\" She smiled at him, and started to move slowly up the length of Mark's erection. Kitty struggled to stay with her, her mouth encircling the tiny bud while her chin dragged along the underside of her father's cock. She knew what she was feeling, but refused to acknowledge it. Max' cock meanwhile, continued to work in and out of her, his hands stroking her sides.\n\nAngela returned down to the base of Mark's cock. Kitty stayed with her. Then, with a fast movement, she pulled up again, leaving Kitty's tongue directly on her father's cock. Mark jerked as he felt a different sensation over his length, but kept his eyes closed, his mind focused on the hot cavern of Angela's pussy enveloping his head. \n\nConfused, Kitty lapped at the hard shaft in front of her, then managed to catch up to Angela on the way down again. This was difficult work. She had to concentrate as hard as she could, but every move was made more difficult by the intense feelings she was receiving in her pussy. Every move that Angela made seemed to put Kitty more and more into contact with her father's cock.\n\nFinally, she gave up trying to avoid it. It was useless. Everything was too close together. The taste of them filled her mouth, and she knew she was swallowing her father's pre-cum, mixed with Angela's copious secretions. She even allowed herself to be pushed down by Angela's hands to find those big balls in her face. Lovingly, she accepted one into her mouth, sucking gently on it. After all, how different was this from what she had done that morning with him?\n\nIt was time for the denouement, Angela decided. She pulled Kitty's face back up to her pussy, holding it in place as she moved up and down again. The tongue against her clit was delightful, as were the sensations from the immense erection in her pussy. How sad to give all that up. But how much she had to gain as well.\n\nWith delicate timing, she moved up and off of the erection as she pushed Kitty's mouth over it. The sudden movement caught the girl by surprise, and she found her mouth filled with the head of her father's cock, wet, thick, oozing pre-cum over her tongue.\n\nMark looked down at the change in sensation, finally opening his eyes. To his amazement, he saw his daughter's thick brown hair at his crotch, her lips wrapped around his cock.\n\n\"Oh, fuck, Kitty!\" He thrust forward reflexively, his cock driving deep into her mouth. He placed his hands on her head, holding her in place. He was too far gone to do otherwise. Angela had timed her move perfectly. He was about to erupt, and he was going to do it down Kitty's throat. His cock didn't care in what receptacle it was going to place its deposit. And so, neither did he.",
        "Kitty tried to adjust her thinking to accept the fact of her father's cock in her mouth. At the same time that Mark had thrust forward, Max pushed against her from behind, pushing her deep onto her dad's cock. From so much practice in blowing guys during her checkered high school years, she automatically took his cock deep into her throat. It wouldn't go all the way in, but she swallowed around his monster, her throat muscles caressing his length in rhythmic patterns.\n\nHis first shot went straight down her throat. She didn't taste a drop of it. But she felt the jerking of his organ on her tongue. She pulled back, and started stroking him with her hand, urging the ejaculation out of him and into her mouth.\n\n\"Oh, Kitty, oh, fuck, Kitty, sweetie, princess,\" he babbled, her sweet eyes looking up at him with love, only love.\n\nThe second blast filled her mouth with the salty bitterness of her father's sperm. As she felt the sticky juice coat her tongue, she suddenly started coming herself. She swallowed quickly, gasping, her body shaking in the throes of orgasm. His jerking cock spurted forth several more ropes of sperm that coated her face and dripped down from her chin.\n\nAstonishingly, Max had held out, pushed deep into Kitty's pulsating pussy. As she came down from her climax, he pulled out. Angela smiled at her thoughtful son, and eased herself down onto his still throbbing erection.\n\n\"Now, that's a sweet boy,\" she murmured.\n\n\"All for you, Mom,\" he whispered back. In a second, the two came in a crashing orgasm together, the son's sperm spewing deep into the mother's hot and receptive pussy, a balm to soothe the heat that had been building up inside of her ever since that morning.\n\nAs mother kissed son deeply, their tongues wrapped around the other's, father lifted daughter to her feet and embraced her warmly and lovingly. "
    ],
    "authorname": "columfa",
    "tags": [
        "father-daughter",
        "mother-son",
        "lesbian incest",
        "cunnilingus",
        "fellatio",
        "exhibitionism"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/learning-through-porn-ch-11"
}