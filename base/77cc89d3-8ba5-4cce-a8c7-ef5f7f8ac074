{
    "title": "CvsN 28: Robin's Revelation",
    "pages": [
        "CvsN 28 - Robin's Revelation\n\n========\n\nJack reestablishes his role in the house, openly with Debbie. Robin drops a bomb.\n\n========\n\nAmie jogged up to Debbie who was starting work on dinner.\n\n\"Jack's hard again. Do you mind if Robin and I play with him a while?\"\n\nAmie's new beau had left before I made it out of the bedroom. Understandably, it was almost noon. I was determined to relax, and refuel. The last few days had been both strenuous and stressful. I was taking it easy, watching some pre-season football, when Amie showed up with a cold beer. She sat with me, putting her feet in my lap, and I quizzed her on Eric. She was content to fill me in on their rapidly advancing relationship. She was also doing her best to get me worked up. When Robin found us sitting alone, she joined in and they teased and tempted me to no end. I readily admit it, I'm weak. If I were Superman, pretty young girls would be my kryptonite.\n\nNo surprise that I was showing more than a little physical interest.\n\nRobin was right behind Amie, \"Please, just a little?\"\n\nFrom my seat I could see across the house, where my housemates were trying to butter-up she-who-controlled-the-penis. It was never stated as such, but was common knowledge.\n\nThe girls rushed back to me, giggling and dragging me off to our bedroom. \"Deb says we can have 30 minutes. She can barely walk as is, and poor Beth is hiding in my bedroom, with a cold compress between her legs. You've practically ruined them both,\" Robin laughed.\n\nIf I wasn't sure of her intentions, her latest t-shirt message made it clear. \"You're on my list of things to do today.\" \n\n\"How about me? Don't I have any say in this. My poor cock is almost ready to fall off,\" I argued.\n\nAmie was already undressing me. \"We'll be gentle, I promise. Let's go, the clock is ticking.\"\n\nTwenty minutes later, I was still taking turns on them, when Beth wandered into the room.\n\nAmie jumped up from where she'd been playing with Robin, while I had my way with the naughtier sister. \"Beth! Come play!\"\n\nBeth scrambled quickly across the room. \"No way! I'm taking a long bath, and relaxing. I've got a lot of recovering to do. You forget that I'm going to have to climb back in that bed tonight.\"\n\nAmie was not that easy to get rid of. She had run over to Beth and was hugging her. \"A little while, that's all.\"\n\nBeth laughed. \"That's what he said this morning.\" She turned on the water in the tub, then stood in the doorway, undressing, watching me drag Amie back into the bed, and climbing on top of her. \"That's the last time you travel alone, buster. Shit, if you'd been gone two weeks, I'd probably be in a wheelchair now, ruined for life.\"\n\nThe truth was I was exhausted, and really needed a break. But after Cathy's morning lecture, I felt the need to re-establish myself as Jack the insatiable, and undeniable.\n\nI pulled out of Amie, and went to my favorite teenager. \"The bath will take a couple of minutes to fill. Play with us.\"\n\nI grabbed her hand and dragged her to the bed, while she resisted lightly.\n\n\"Jack, I'm so sore,\" she whined.\n\n\"I'll be gentle. Just a minute, Ok?\"\n\nShe sighed, and let me draw her down. \"Get her ready?\" I asked Amie.\n\n\"Mmm. Love to. She's so sweet.\"\n\nI pulled Robin into my lap, where she used her mouth to make sure I was equally ready. That's what I loved about Robin. So willing to play whatever part she was asked to, and always giving it her all.\n\nWhen Amie moved aside, I pulled her over and kissed her. \"Thank you. Keep an eye on the tub, please.\"\n\nThen I was between Beth's legs, slowly, gently opening her up and sliding back inside of her. She grunted once, from soreness, then relaxed.\n\nI leaned over her, kissing her lips softly, holding steady inside her. \"That wasn't so bad, was it?\"\n\n\"Couldn't you be happy with the wild ones?\" she asked, a smile letting me know she wasn't really complaining.\n\n\"They're fun.\" I leaned down and whispered, \"But you make my blood boil. I love being inside you.\"\n\nI started stroking her gently. \"I'm sorry. I couldn't help myself. Seeing you standing naked in that doorway, that's just too much. You know that.\"\n\nShe gave me a tender smile. \"I know. I guess part of me knew what would happen if I came in here.\"\n\nI was long-stroking her, enjoying her for the few minutes I had her. \"Are you really that sore?\"\n\nShe nodded, \"I don't know how Debbie takes it.\"\n\n\"I'll be gentle tonight. We can use the back door, if the front is out of order.\"\n\n\"Oh great. You're going to destroy both my holes,\" she complained, with an exaggerated eye roll.\n\n\"You don't want Debbie to have to take it all, do you?\"\n\nShe gave me a smack. \"Lube. Lots of lube tonight. Got it?\"\n\n\"Got it. And I'll try to be gentle.\"\n\n\"Like you were last night?\" She turned to Amie who had shut off the water to the bath, and was returning to us. \"Ames, take care of this please. And don't let him make you sit in his lap. He almost killed me that way last night.\" I gave her a soft kiss, and let her retreat to her bath. Amie pushed me onto my back, and climbed onto my hard wet cock.\n\n\"It starts like that,\" Beth said, watching her best friend ride me. \"All sweet and loving. Then he fucks you to death, making you come and come until you completely black out. Then I think he sticks a baseball bat up your cunt, so when you wake you're completely ruined down there.\"\n\nShe smiled, and it felt like she was bragging. \"I mean, really? When a girl's unconscious, couldn't you give her a break?\"\n\n\"You know what you do to me,\" I told her. \"And there was no bat. Debbie wouldn't allow that.\"\n\n\"Thank God for Debbie. Could you imagine if I was as hot as her? After he fucked me to death, he'd probably go on fucking my corpse until I was cold.\"\n\n\"Go on. That's crazy talk,\" I told her, while Amie did her best to tame me. \"If you were dead, I couldn't enjoy that mouth of yours. It wouldn't be the same. I'll never let you die.\"\n\n\"God, Jack! You are so bad!\"\n\nAmie moaned. \"Fuck! If this is bad, I don't want to know good.\"\n\nThat got Robin laughing, and Beth retreated to her bath, but not before looking over her shoulder and wiggling her tight little ass at me.\n\n\"Do that again, and I swear I'll drag you back in here and fuck that butt until you pass out again.\" I called out to her.\n\nShe smiled, wiggled her ass again, then quickly ran to her bathtub. The little tease.\n\nRobin leaned in close and whispered in my ear. \"We've got a few more minutes. I wouldn't mind a little back-door action.\"\n\nDamn. The things a man has to do, to keep up appearances.\n\n* * *\n\nKaren had the kids all day, so I could have a, supposedly, quiet day of recuperation, but she brought them by after dinner. We retired to the living room, all of us pretty well worn out. The kids were zonked, and were quickly put to bed.\n\nJim was retrieving the last of Karen's things, and putting them in his jeep, while we enjoyed our adult milkshakes. They were decadent things, with lots of vodka and Bailey's to give them a kick. \n\nLet's face it. Between Spain, and Deb's cooking, my diet wasn't going all that well. At least I was getting a little exercise.\n\nBeth had retreated to the far side of the couch, letting Amie take her place. When Debbie settled in next to me, she frowned. \"What are you doing over there?\"\n\nBeth looked at me cautiously. \"Trying to stay alive. I know if he gets hard again, it'll be the death of me.\"\n\nThat got a good laugh out of everyone. \"Did passing out really bother you that much?\" Debbie asked with concern.\n\n\"Hell yeah! One minute you're having the best orgasms of your life, and then they won't stop. He won't let them. You're coming and coming, and you can't see, can't breathe, your head is bursting, your entire body is on fire, and then you wake up in bed, with no idea what happened in between.\"\n\nDebbie went over to her, hugging her. \"When you blacked out he picked you up and laid you in your place in bed. He was very gentle. He didn't do anything crazy. He wouldn't, you know that. Even if he would, you have to know I wouldn't let him.\"\n\nAmie had her hand in my lap, playing. \"Come on, Beth. Was it worse than the night he took my ass for the first time? He went on for hours with both of us. I tried to get away twice, but he kept dragging me back for more. I don't even remember how it ended, I was so out of it. I just remember waking up being held. That wasn't so bad.\"\n\nBeth gave us a small smile. \"Jeez. Do I remember? He was bad that night.\"\n\nIt seemed like a night for one-upmanship.\n\nKaren laughed. \"You're telling me. When we moved into Jim's, they both took turns on me for hours and hours. They double teamed me a half dozen times, and wore me out, front and back. I remember being on top of Jack, while Jim filled my ass, and then all I knew was that I was lying on Jack, while he pounded into me from below. I completely lost it with both holes filled. I was used up, and Jack still wouldn't take no for an answer, and filled my poor aching butt again. It was insane. I swear, when they finally gave up, neither one of them able to perform, I felt like I'd conquered Everest, even if couldn't remember half of it.\"\n\nRobin looked over at Debbie, \"How about you? I can only imagine what he does to you.\"\n\nDebbie smiled. \"Whatever he wants, however he wants, for as long as he wants. I love the feeling of drifting off while he's inside of me. And waking up to the feeling of him still taking me. You have no idea what that does to me.\"\n\nRobin pouted, \"I feel so left out. Nobody ever fucks me unconscious.\"\n\nThat got another chuckle from the crowd. Jim spoke up, \"I think we can take care of that.\" He turned to Debbie, \"With Jack's help of course, if that's Ok with you?\"\n\nDebbie flushed. \"Why do you guys always say it's up to me? It's not like it's my cock doing the fucking.\"\n\nShe looked around and saw that nobody was going to let her get away with that. She finally giggled. It sounded so cute from her, she wasn't much of a giggler. \"Alright. It IS my cock. Happy?\"\n\n\"As long as you share, now and then,\" Amie laughed.\n\n\"We don't even have to have him to ourselves,\" Robin said.\n\nEven Karen had to get in on the action. \"But that's Ok, too.\"\n\nBeth came to Debbie's defense. \"Come on guys! She shares a lot.\"\n\nThat got a response from the peanut gallery. \"Easy for you to say. You don't have to get permission,\" Amie reminded her. \"Yeah, she shares with you every night.\" Robin added.\n\nI think that the teasing was getting to Debbie. I put my arm around her, and pulled her close. \"Alright. Enough teasing. Keep it up, and I won't let her share me with anybody. I'd be perfectly happy to save it all for my two roommates.\"\n\nBeth piped up. \"Oh no you don't! We need a break sometimes.\"\n\nDebbie gave me a hug. \"Speak for yourself, wild child. I will never, ever say no to him.\"\n\nShe turned to me, giving me a kiss. \"Look at you. Hard again.\" She grinned and took off her shirt. \"Do you want me now, handsome? Here, now, in front of everybody?\"\n\n\"God, Debbie. I always want you.\" My voice cracked like I was going through puberty.\n\nLooking around the room I saw a wide variety of responses. Jim looked excited, Robin looked surprised. Beth was wearing a huge grin. I think Amie's was the best of all. \"I love watching you two. Do her, Jack.\"\n\nShe started clapping her hands. \"Do. Her. Do. Her.\"\n\nRobin and Beth joined in, while Debbie undressed, then pulled my shorts off. I was definitely able, and God knows when it came to Debbie I was always willing.\n\nKaren reached over and grabbed her sister's hands. \"Quiet, everyone. You'll wake the kids. Then we'd miss the show.\"\n\nDebbie smiled for me, then climbed on my lap, straddling me. \"Let's give them that show.\"\n\nShe lowered herself onto my cock, then rode me for our friends. Amie was still beside us, and couldn't keep her hands off of Debbie. \"Jesus, you two are hot,\" she said. Debbie was exaggerating her movements, grinding against me, arching her back, stroking her own impeccable body. I heard poor Amie moan.\n\nDebbie reached over and stroked her red hair. \"Kiss me, Amie, for Jack.\"\n\nAmie got up on her knees, and kissed my naked Goddess. I held her hips still, and thrust up into her, enjoying my own show.\n\nWhen Amie backed away, Debbie kissed me. She leaned in and whispered in my ear, \"Go crazy on me. Use me hard. Give them the show of a lifetime.\"\n\nI slowly stood, still fucking her, moving my arms under her legs, then lifting her up and down on my cock. I lifted her high, and dropped her down, letting her own weight impale her.\n\n\"See,\" Beth said to nobody in particular, \"That's how it starts. That's what almost killed me.\" She sounded just the slightest bit jealous.\n\nDebbie's bigger than Beth, and even as small as she was, she was tiring me. \"Pillows,\" I gasped. \"Coffee table.\" I nodded to Jim.\n\nHe got up, and I saw his cock was out. Nice to see someone was getting attention, not just me. He put a couple of seat cushions on the coffee table, and I placed Debbie on them. With the weight off my arms, I smiled down at my gorgeous lover, my face lowered until our noses just touched. I gazed into her eyes, trying to communicate all I felt for her. I slid in and out of her, deliciously, letting her feel how much I loved her. She lifted her lips to mine and I kissed her, first softly, then more intensely. \n\nAs much as she loved that intimacy, I knew this wasn't the time for that. \"Ready?\" I whispered.\n\nShe nodded.\n\nI hammered her. Full length. Pistoning away like I was trying to fuck right through her. Jim had stayed nearby. I realized that he'd never seen Debbie naked, so it was understandable that he would be enthralled. Amie had followed us over, and her hands were busy again, touching and stroking Debbie. The others soon followed suit, gathering around the coffee table, and touching Debbie. There was a sea of hands caressing her skin, a few of them fondling her breasts. \n\nI lifted her legs into an obscenely wide 'V' and started long-stroking her, plowing her thoroughly. I saw her excitement peaking, whether it was what I was doing to her, or being the center of so much attention. I pushed her legs back further, so I could probe her more deeply, and lowered my hips to make sure I worked her g-spot. We were like a well oiled machine, my familiarity with her body making things easy. I knew what she liked, and where her magical places were. I played her like a virtuoso. Fitting, since she'd put a Stradivarius to shame.\n\nShe was squirming under the multitude of hands, and I saw her tense up, feeling her orgasm building like winding a steel-spring. Her breath sped up, the tell-tale gasps and gentle moans, announcing her impending release. When she cried out it was beautiful to watch. Beth moved over her face, kissing her upside down. Damn, as if I wasn't excited enough already.\n\nDebbie squealed cutely when I lifted her bodily, straining to hold her in the air by her heavenly hips, flipping her over and putting her on her knees. I slid back inside of her, and fucked her easily, enjoying the change of pace for a moment, getting my strength back, and taking the edge off of my own need. I noticed that clothing was coming off, and some of our audience was sitting on the coffee table, to get closer. Amie was standing beside me, leaning over and holding Debbie's fine ass for me. She was opening her cheeks, spreading her wide. Her face lowered and rested on Debbie's butt, kissing her softly, then she turned to look up at me, and opened her mouth, practically pleading. \n\nI almost grinned, at her willing presentation. We were making a sexual demon out of her. I hesitated for a moment, then recalled Cathy's admonition. Man-up.\n\nI pulled out of Debbie, and slid my cock between Amie's lips. She sucked Debbie's juices off of me, and I entered Debbie again, fucking her harder. Every so often, I'd pull out and let Amie suck me, before I hammered Debbie some more. I was getting more aggressive, pulling Amie's head firmly onto my cock, pressing into her throat, making her gag. A stream of saliva spilled out of her lips, and ran down the crack of Debbie's ass. As I fucked my dream, it pooled on my cock and slid into her.\n\nI saw that Robin had wedged her head underneath Debbie, and was working on her tits. Things were heating up.\n\nBeth was seated opposite me, and was stroking Debbie's hair. I saw that Jim's hand was underneath Debbie, caressing her breast, and I smiled when Karen grabbed his head, and pushed him underneath the blonde beauty. Jim stretched out on the coffee table, and Karen sucked him, while he butted heads with Robin, each gobbling one of her impeccable tits.\n\nI felt Debbie's trembling, and could sense another big one was coming. I also knew that I wasn't going to be long after her.\n\nBeth could see it coming as well, \"She's going to come for you Jack,\" she said softly.\n\nDebbie was moaning now, one arm clutching Beth. \"Close,\" she gasped, arching her back, pressing her tits down onto her oral admirers.\n\nI gently pushed Amie away, grabbed Debbie's hips, and fucked her like a demon. She cried out, her whole body tensing, and I could feel her pussy squeezing me. It was a huge one, and as she came down from it, I knew how I wanted to finish.\n\n\"I'm moving her,\" I announced, and almost laughed watching all of our playmates scamper out of the way. \n\nI put her on her back again, then laid over her so I could look her in the face. \"You drive me crazy,\" I told her, leaning down for a kiss. I felt a hand guiding me back into her, and looked back to see Amie doing the honors. \n\nI turned my head and Beth was there, inches away. I kissed her deeply, while Debbie wrapped her legs around me, and I took her again. Beth alternated kissing the two of us, then moved back so I could have Debbie for myself. \"I'm getting close,\" I told her.\n\n\"Not yet,\" Debbie pleaded.\n\nHands were squirming their way between us, grasping Debbie's tits. Another was brushing the top of my cock, moving around Debbie's clit. Somebody was rubbing me from behind where I was entering her, and I felt a naughty finger slide inside her with me, and then another, making the tightness almost unbearable. \n\nI couldn't hold back any longer. \"I'm going to come for you, Debbie,\" I groaned, lifting up and grabbing the back of her thighs. I fucked her hard, as deep as I could, each thrust setting her incredible tits in motion, under the questing hands of our friends.\n\n\"Come on her, Jack,\" Beth urged. \"Cover her with your cum.\"\n\nI hated the idea of pulling out of her. There was nothing I loved as much as emptying myself inside of her, but she had wanted a show.\n\nAs I passed the point of no return, I pulled out and leaned over her. For a moment her body was open, untouched, everyone watching. With a mighty groan, I came, my first shot nearly reaching her neck. I leaned over further, shooting on her beautiful pale tits, finishing over her smooth tanned stomach. I moved back between her legs, and pushed up inside of her, the spasms finishing inside of her. No way I was done with her yet. \n\nFor a few seconds she lay there on display, my juices branding her. Beth leaned over and licked my cum off of Debbie's upper chest, and that seemed to open the flood gates. Karen and Robin set to work licking and sucking Debbie's chest clean, while Amie laid claim to her soaked belly. \n\nDebbie was staring at me, her eye's opened wide. She gasped and then I saw her coming again. \"Jack!\" she cried out, her hands reaching for the sisters, pulling their heads down against her tits. \n\nIt was one of the most exciting things I'd ever seen, and any chance of my hardness wilting was eradicated.\n\nAmie moved down closer, her head sideway, her mouth open for me again. She was a little minx. I pulled out and gave her a taste, before returning to Debbie's warm nether embrace.",
        "Jim had gotten braver, and was sharing Debbie's tit with Karen. While I watched she ceded that perfect melon to him, and squirmed between his legs so she could get to his hard-on.\n\nI wondered if I shouldn't feel jealous, but there was something worshipful about their attention, that I understood. It was only fitting.\n\nBeth came around the table to me, and pulled me down for a kiss. I slid my cock back between Amie's willing lips, until Beth finished. I started to slide back inside of my dream woman, but Beth stopped me. \"Let her ride you for a while. Everyone should get a chance to see that once.\"\n\nI gave her a quick kiss, and announced my intentions, so our playmates could clear out. Debbie looked well used, but still willing. She moved to the side so I could lie down, then she quickly mounted me, several hands at working helping me back inside of her. She took her time getting positioned, carefully placing her knees on the cushion beside my hips.\n\nI looked up and grinned, seeing her beautiful smile. She lowered herself onto me, then leaned forward. Her hips moved up and down, taking my full length, then rising up, up, up until I thought I'd pop free. Then she slid back down, taking it all over again. \n\nI heard Jim moan, \"Oh God!\" I didn't see him immediately, then looked around Debbie to see him sitting on the couch, Robin's head in his lap, while he watched us from between our legs. I bet that was a hell of a show. I saw Robin move away and her sister's face slid into his lap. Lucky boy.\n\nBeth and Amie were on each side of me, their hands wandering over my body. They took turns kissing me, and occasionally Debbie as well.\n\nDebbie turned to Beth. \"I want him in my ass,\" she said softly.\n\n\"You sure?\" Beth asked softly, cautiously.\n\n\"Completely,\" Debbie said with a wicked smile. \"The show must go on.\"\n\n\"Lube?\" Beth asked.\n\nDebbie nodded. \"Please.\"\n\nBeth took off for the bedroom, while I let the excitement build. When she came back, she moved down beside us, and I could feel Debbie responding.\n\n\"What is she doing?\" I asked her, softly.\n\n\"One finger, lots of lube, deep,\" she said with a smile. She gasped, \"Two fingers, no, three. Three fingers.\"\n\nI could only imagine the view from the box seats. I looked over at the couch crowd and almost laughed. I wouldn't have to imagine. Robin had her phone out and was recording the show for posterity. If that went online, I'd kill her.\n\nDebbie looked down at me. \"Ready? I'll start.\" I nodded.\n\nShe rose up off of me, then lifted off of my cock. She shifted her legs forward a couple of inches. \"Beth? Help us?\"\n\nI felt my sweet teen playmate's hand on my cock, while Debbie lowered herself. I entered her easily, the lube doing its job, and Deb slowly slid down, taking the whole thing first try.\n\nI heard Jim groan, and Robin's angry whisper. \"Share, damn it!\"\n\nDebbie giggled, and I reached up and cupped her tits, tweaking her nipples. \"And that's just from seeing it. He has no idea how good it feels.\"\n\nShe grinned, \"And never will.\"\n\n\"Poor boy,\" I said.\n\n\"I think he'll survive. With two sexy, horny sisters to take care of him.\"\n\nShe gave me the wickedest grin. \"I'm going to turn around for a bit. It's show time,\" she whispered to me.\n\n\"Rotten thing,\" I told her, giving her perfect tits one last squeeze.\n\nShe settled down until I was fully sheathed in that magical ass. She slowly turned, keeping me in her, working her way around until she was facing backward.\n\nShe paused, then rose up on her knees until I was almost totally exposed. \n\nIt was difficult, but I rose up on my hands, and fucked up into her, pounding her at the top, imagining how her breasts were responding for our enraptured audience. She lowered herself a little, making my job easier, if a little less visually enticing.\n\nDebbie put her hands on my hips, pushing me down. I watched her start fucking me, faster and harder, until she was bouncing on my cock like a madwoman, her tightness nearly overwhelming. \n\nWhen she slowed down from the exertion, I pulled her back against my chest and drew her legs back until they were almost to her ears. I fucked her ass deeply, smiling when Amie came over and started rubbing Debbie's pussy. \n\nBeth moved in and pushed Amie out of the way, the lube in her hand, pouring it onto my cock, making the motion easier again. Moments later she was using her mouth where Amie had used her hand. Debbie moaned for us. \n\nThat seemed to be a signal, soon the girls were taking turns licking her, while my cock continued its ownership of her flawless ass. A few kind souls would allow their mouths to wander lower, licking me where I was entering my anal Angel.\n\nKaren came over and sat beside us. She put her hands on Debbie's tits, massaging them nicely. \"Can Jim have a little taste?\" she asked cautiously.\n\nDebbie nodded. \"But that's all.\"\n\nKaren leaned in and gave her a kiss. \"Thank you.\"\n\nI watched her return to Jim. She hugged him, then gave him a nudge. He moved in and I watched his head lower. \"That's Jim,\" I whispered to Debbie, while her head lolled back against my shoulder. \n\nShe giggled. \"I know. A little eager.\"\n\nIt was incredible. Five people taking turns licking her, while she rode my cock.\n\n\"They're going to make me come,\" she told me softly.\n\n\"Good,\" I told her, straining to kiss her.\n\n\"Stop a moment,\" she moaned, \"all the way inside me. Let me feel it.\"\n\nI pushed in deep and held still. Someone was caressing my balls. I hoped to God it was one of the girls down there.\n\nI felt her tell-tale tremble, heard her sweet gasping, and then she was coming. It felt great around my cock, her ass pulsing wildly. She came hard. She was normally hard to get off, and I couldn't remember so many huge orgasms coming from her. No doubt about it, she was getting off on being the center of attention. \n\nWhen she was done, gasping, she groaned. \"Can you finish for me?\"\n\n\"Not quite yet,\" I told her.\n\n\"Put me over the end of the couch then, and ream me raw.\"\n\nShe sat up, and pushed her oral admirers away. \"Moving,\" she said, a soft chuckle escaping her lips. She got up and stood at the end of the couch, bending over for me. I walked up behind her, and called Beth over. \"Lube us, beautiful?\"\n\nShe found the lube, and worked us over well. I pushed back inside of Debbie, ready to finish our show. I started out slowly, but soon was fucking like a rabbit, my hips a blur. I'd never taken her ass so hard or so fast. The slapping of our skin was echoing in the room. I had her cheeks in my hands, opening her wide, while I concentrated all my efforts on screwing her as thoroughly as I could. \n\nMy legs were burning, and I could feel the sweat starting to drip down my chest. I changed up, giving her long hard thrusts. I pounded harder and harder, pausing and grunting with each stroke. I felt the couch slide in spite of having three people seated on it watching. I was worried for her thighs, remembering Cathy's ordeal. At least this couch was much more padded on the ends.\n\nI ignored the room, gazing down at where I entered her. All my attention was on her stretched ass, clinging to my cock on each stroke. I pulled all the way out, leaving her gaping, then slammed back inside of her. I did that several times before hunching over her and jack-hammering her again, feeling myself finally getting close. \n\nI was reaching the end of my endurance, both physically and sexually. The sweat was dripping off me, fat droplets splashing off of her immaculate skin. My hips were pounding away, the urge was growing stronger and stronger. My breath was labored, as if I'd been running a marathon. I grabbed her hips, pulling her back against me as I went faster. There was nothing in the world but my cock and her sweet, giving ass.\n\nMy hands were on her lower back, my arms fully extended, pinning her mercilessly to the couch. My strokes were measured, long and full, pounding, hesitating just a moment when I was buried in her. I was there, so close, holding back. Just a little longer, don't let it end. Never let it end.\n\nMy breath was coming in heaves, my legs shaking. My vision was tunneling, only aware of that small hole I was plundering mercilessly. \n\nI could hold back no longer.\n\n\"God!\" I groaned, turning my head to the heavens, burying myself to the very limits. I felt my balls erupt, flooding her ass, burst after burst painfully shooting into her, straining to push deeper. I couldn't see. I couldn't hear. I couldn't breath.\n\nI pulled back, my legs wobbling, and fell to the ground.\n\n* * *\n\nI was lying with my head in Beth's lap. I looked up past those breasts I knew so well, to see her smiling at me. \"Serves you right. See how you like it.\"\n\nI felt movement down below, and raised my head. Karen had a facecloth in her hand and was cleaning me up. I was so sensitive and raw it hurt. \"Gentle, please,\" I moaned.\n\nAmie was peeking over the end of the couch. She giggled at my predicament. \"Now I've seen everything. Two people passed out and still fucking. This should be in Guinness.\"\n\n\"I didn't pass out,\" I argued. \"My legs gave out. I had to rest.\"\n\nBeth laughed at that one. \"Almost five minutes. Dead to the world. I was getting worried for you.\"\n\nI felt myself turning red. \"It was only a few seconds.\"\n\nShe laughed even harder. \"It's Ok, Jack. A lesser man would have died. And gone to heaven knowing it was worth it. Probably bragging to St. Peter.\"\n\nI was looking around trying to sit up. Beth pushed my shoulders back down, settling her sweet tits onto my face. \"She's alright. She was only out for a few seconds. I think. She might have been out for the whole time you were abusing her poor butt. But once you finished she was back with us after just a bit.\"\n\n\"Debbie?\" I called out.\n\nI saw her walk around the edge of the couch, kneeling down and looking at me. Her smile was gorgeous. Her hair was wet with sweat, stringy, and her body looked like she'd stepped out of a sauna. She was stunning.\n\n\"Any time, any where, any way, right?\" she reminded me.\n\nI nodded.\n\n\"Scratch that. My butt's off limits now,\" she told me pouting. \"God only knows for how long. That was over-the-top.\"\n\nI smiled weakly. Karen's head was in my lap, my poor worn out cock in her mouth. \n\n\"It was worth it,\" my Goddess said sweetly.\n\nOur little party ended, with me getting dragged into the shower before being allowed in bed. I was surprised to find myself being tended to by Amie, while Debbie soaked in the tub a few feet away, and Beth cleaned up.\n\nAmie was sweet, and loving, pressing her body against me, while she did a pretty good job of cleaning me up. The water was soothing, but not near as much as her gentle touch.\n\n\"Anytime, Jack. Anytime you want to do that to me, same rules. Where ever, however. That was incredible to watch.\"\n\n\"You should try being on my side of it,\" I laughed.\n\n\"I'd love to be on the other side of it. Anytime. Please.\"\n\nI turned to her and kissed her softly while the hot water washed over us. \"I'd like that. I'd love to go crazy on you.\"\n\n\"There wasn't a dry seat in the house. I know I came at least half-a-dozen times, just watching. Fuck, that was hot.\" Her soft hand was caressing me and I was surprised to feel a response. I wasn't hard, but I was no longer soft.\n\n\"Damn Amie, you are amazing. I didn't think I'd be able to get even that hard for another week.\"\n\nShe reached behind me and turned off the water, then dropped to her knees and took me in her mouth. She was gentle but insistent, and I leaned back against the glass, watching her in amazement. \n\n\"Get hard for me, that's all I want. Just to feel it.\"\n\nShe sucked me for a good while, but I couldn't get much harder, and I saw she was tiring. I pulled her up. \"In the bed.\"\n\nShe hugged me, and dried me off outside of the shower. Debbie was sound asleep, and Beth must have still been shutting things down.\n\nI climbed in bed beside the gorgeous one, and Amie settled in between my legs. I closed my eyes and relaxed, letting her play with me. \"Gentle,\" I reminded her when she got a little more aggressive.\n\nBeth came in and found us that way. \"Not likely,\" she teased.\n\nAmie leaned back with a smile, holding my brand new partial erection up for display. \"Come play. He doesn't mind.\"\n\nBeth patted her friend on her naked butt. \"You have fun. You earned that one.\"\n\nShe climbed up next to me, and moved in close. \"That was pretty amazing. I didn't think it was possible to wear Deb out.\"\n\n\"I needed the help of five other people. You all taking turns between her legs was pretty fucking intense.\"\n\nBeth chuckled softly, \"Wasn't it? I was jealous. Hell, I think everyone was.\"\n\nI held her, enjoying what was going on below. \"I'm sorry about last night. I didn't mean to scare you.\"\n\n\"I know. Water under the bridge. After watching tonight, you can fuck me senseless anytime.\" Her eyes were closed, and she was speaking softly, half asleep.\n\n\"I love you, Beth.\"\n\n\"Mmmm,\" she purred.\n\nAmie sucked me for an eternity. I almost fell asleep in the middle of it. Beth had rolled over and was snoring softly. Too cute for words. Debbie was dead to the world. I looked over and it was only 10 o'clock.\n\nAmie climbed up and kissed me. \"My jaw hurts.\"\n\n\"That was beautiful. I didn't think it was possible for me to get hard again tonight.\"\n\n\"Can I try something else? I'll be gentle.\"\n\nI nodded. \"I think I'd love that.\"\n\nShe moved down and eased herself onto my cock. I wasn't rock hard, but it was enough. Her pussy was soft and very wet, bathing my abused cock. She rode me, gently, true to her word. I was sensitive, and had to slow her down a couple of times, but she was patient with me. On and on she went, pleasuring me sweetly. I was still amazed that I could stay hard for her.\n\nWhen her breathing was ragged, she laid down on me, resting her weight on my chest. \"You feel so good in me, Jack. Thank you.\"\n\nShe reached down and pulled the sheet over us, reaching out to make sure it covered everyone. \n\n\"You're so sweet,\" I told her. \"Sweet and nasty. A hell of a combination.\"\n\nShe moved back and forth gently, my cock sliding effortlessly inside of her. When her movements slowed, I took over, pushing into her.\n\nI relaxed and held her sweet ass in my hands, while I eased in and out of her tightness. \n\nShe moaned softly. \"Don't stop, please. If you keep that up I'm going to come for you.\"\n\nSpent, I still wanted to reward her for her herculean effort. She was breathing hard, pushing back against me, her hands clutching my shoulders. \"So good, soooo good,\" she murmured, soft little sounds of contentment escaping her.\n\n\"You're getting harder,\" she gasped, feeling me thrust deeper.\n\n\"Of course. I'm inside of you, sweet girl. I don't know anybody else who could have done this to me. Jesus, you turn me on.\"\n\nHer body was rocking harder, shaking the bed a little. No chance of waking the two girls sharing it with us, not in their current state. \"Oh God, Jack! I'm going to come for you!\"\n\nI squeezed her ass and thrust up into her with the last of my strength. \"Do it. Come for me. Now. Come for me now.\" I urged her.\n\nShe whimpered, than gasped. \"Coming,\" she moaned. \n\nAmazingly, I was about to come as well. I thrust into her, feeling her tremble. Again and again, hearing her sweet gasps. \"Come for me, Jack. Please? Please?\"\n\nIt was weak, but undeniable. I pushed into her, groaning, and felt my release inside of her. She cried out softly, and I felt her tight young pussy squeezing me dry.\n\n\"Incredible,\" she murmured.\n\n\"Yes you are,\" I teased, kissing the side of her sweet face.\n\nI closed my eyes, holding her close. I pulled the sheet up to cover her shoulders, and gave myself over to exhaustion and much needed sleep.\n\n* * *\n\nIt was dark. I opened my eyes, barely able to make out the tangle of wild red hair. I was hard inside of her. I don't know how she'd done it, but she was fucking me softly, quietly.\n\nI thrust back against her, half asleep, and let her ride me to sweet oblivion. I awoke with a start as I came inside of her again.\n\nShe sighed sweetly, kissing my chest. I brushed my fingers through her hair. \"Nice,\" I murmured.\n\nShe purred for me, already half asleep.\n\n* * *\n\nI normally sleep like a log, especially after a day like that. Not that night. When Amie left for her own room, it was around 3:00 am and I had been sleeping restlessly. Beth got up around 5:30 for her swim, pulling out of my arms and pushing me toward Debbie. When Debbie got up around 7:00, I was still restless and exhausted. I rolled over and prayed I'd be able to get a couple of more hours sleep. I set my alarm for 10:00, even though I'd told Chris I'd be in by then. I figured I'd earned it.\n\nI woke to a familiar feeling. A warm mouth getting me hard.\n\nGroaning, I was tempted to beg off, but I was determined to stake my claim on one-and-all, in spite of the soreness and aching of my poor body. Never mind my 8 inch partner in crime.\n\nI let myself slowly come alive, trying to guess who was giving me my morning treat.\n\nDefinitely, not Cathy, or Debbie. I could tell those two after just a minute or so. Not Beth either. I relaxed, enjoying my mystery fellatrix. \n\nIt was a game to me, working it out. I thought about it. Karen had already dropped off her kid last night, and would be at work. Amie should have been dealing with the new kids since it was supposed to be the grand opening of the day care center.\n\n\"Good morning, Robin. That's nice.\"\n\nI felt her mouth release me as she slid upward. I watched the sheet slide back, exposing her sexy body while she slid me home.\n\n\"I hope I'm not disturbing you.\"\n\n\"Not at all beautiful. I was getting up anyway.\"\n\n\"Staying up for a while, I hope,\" she giggled.\n\n\"With you? That'll be hard.\"\n\nShe laughed again, kissing me softly. \"Good. I like it hard.\"\n\nThat's how she got it. I took my time with her, since we so rarely had any time with just the two of us. The rest had done me well, and I was feeling little after effects from my marathon of the day before, other than a general soreness.\n\nRobin was a sweet little fuck. Very accommodating, and very flexible. She was the skinniest of the girls, at around 5'7\" and a little over 110 lbs. It made her tits look huge on her slender frame. I always thought of her as young, still being in college, but she was older than me. You'd never know it from her performance in bed. Robin was like a kid with a new toy, laughing, giggling, tickling, playing. She was so fun, I regretted not playing with her more. She made all her openings freely available to me, and I enjoyed their use, immeasurably.\n\nShe was lying against me, her breath still uneven. \"Have fun?\" she asked.\n\n\"What do you think?\"\n\n\"I think it's about time I finally got to show you thanks for letting me spend the summer here.\"\n\n\"You're welcome?\"\n\nShe laughed easily, her hand playing with my chest. As her laughter died out, she turned serious. \"Ron asked me to move in with him.\"\n\nRon? Wow, I wondered how Amie would take that. \"You guys getting serious?\"\n\n\"Maybe. I wasn't planning it. It just sort of happened.\"\n\n\"You're good for him. Hell, you'd be good for anybody, given half a chance.\" I'd been playing with her boob, and I tweaked her nipple. \"Very good. Very, very good.\"\n\n\"I guess that's a helluva compliment coming from you. I'd say you know 'good' if anyone around here does.\" She climbed out of my bed. \"Taking the day off?\"\n\n\"No, as much as I'd like too.\" I stood and took her in my arms, kissing her. \"You planning on doing it? Moving in with Ron?\"\n\nShe gave me a hug, then beat me to the bathroom. I followed her, turning on the shower. \"I think so. This Friday. I don't know if it will stick. I'm still going back to school in less than a month. At least we can give it a try.\"",
        "\"Happened pretty fast,\" I mentioned casually.\n\n\"Ha! This from the guy that let's a different new love interest move into his house every couple of weeks!\" \n\nShe had me there. \"I hope it works out. This mean you're off-limits?\" She was on the toilet, and it struck me as funny how intimate that seemed. More so than what we'd just done.\n\nShe giggled, coming over to me for another warm hug. \"We'll see. At the very least I won't be adding any more 'friends' to my already full dance-card.\"\n\nShe stroked my cock, threatening to make me even later than I already was. \"Does this mean that your girls will let you out to play now? No more supervised visits?\"\n\nI hadn't even thought about it. I really was an asshole sometimes. I'd been telling myself I was going to stop playing around, and I still had Amie in my bed last night, with both my roommates sleeping, and now a long carefree romp with Robin, without thinking of Beth or Debbie's reaction. \"I'll have to verify that, but it's the assumption I'm going by.\"\n\nShe gave me one last kiss before heading back to the bedroom. \"Good. I'm hoping for a pretty spectacular last week, if you're up for it.\"\n\nI slipped into the shower while she was speaking. \"Looking forward to it.\" I shouted to her above the noise of the water.\n\nI thought I'd have mixed feelings over her leaving, but I realized that once the sister thing was worked out, she was nothing but a pleasure around the house, and I knew I was going to miss her. And not just that tempting ass she was so eager to get stuffed whenever possible.\n\n* * *\n\nI stopped by the 'business', before heading out. Debbie wandered over to me. \n\n\"Getting a late start,\" she observed.\n\nI gave her a kiss. \"Worn out. How are you feeling today?\"\n\n\"Sore, a little embarrassed, and very very happy.\" She gave me a poke. \"You were a little rambunctious, and awfully free with letting our friends tease me.\"\n\n\"I believe your words were 'Go crazy'?\" I reminded her.\n\n\"You certainly did that. You've never been that hard on me. I wasn't expecting it.\"\n\n\"Regrets?\"\n\n\"Never. They wanted a show? They got a show. I know it's kind of mean, but I wanted them to be jealous. All of them. Maybe even scare them a bit. Let's see them survive that.\"\n\nI pulled her into my arms. \"You know that none of them mean anything to me, not compared to you.\"\n\n\"Except for Beth,\" she reminded me. \n\n\"You know the truth. There's you, and then there's Beth, and then everyone else. I love Beth to pieces, but you are everything to me. Don't forget it, and never doubt it.\"\n\nWe were interrupted my Beth coming over to join us. Debbie gave me a kiss goodbye and returned to toddler herding. \"Morning, handsome. How we feeling today?\"\n\n\"Thoroughly worn out,\" I admitted.\n\n\"How was Robin?\" she teased.\n\nI guess that cat was out of the bag. \"Fun. Your idea?\"\n\n\"No, hers, but I thought you were due for something a little less energetic. She promised to take it easy on you.\"\n\n\"I thought you were going to keep her on a tight leash,\" I reminded my favorite teen.\n\n\"That was before, back with all that crap with Karen. She's been behaving, and with the Ron situation the way it is, I figure she's not really a threat to try and worm her way in permanent like.\" She seemed almost embarrassed to admit it.\n\n\"Fat chance of that. Adding a third full time bedroom partner would likely kill me. No thanks, I'm quite happy with my two loves.\" I finally realized what she'd said about a 'Ron situation'.\n\n\"You know about her moving out, then?\"\n\n\"Friday. It'll be quieter around here. I think I'm going to miss her. Isn't that weird?\" Beth laughed.\n\n\"My thoughts exactly. But she's different when her sister's not around.\"\n\n\"Have your fun this week, cause when it's over, it's over,\" Beth announced.\n\n\"As long as I find you in my bed each night, I think the fun part is guaranteed.\" I pulled her back in for a hug. Looking up I saw Amie waving goodbye to me, while trying to line up the kids. \"Looks like you're busy.\"\n\n\"Never too late to say hi, but I guess I should run. This is more hectic than it should be. Once we have a few patterns established it'll be better. Have fun at work.\"\n\n\"You too,\" I smiled, giving her tempting butt a squeeze. \n\nIt was Monday. Beth's night. I was looking forward to getting my hands on her.\n\n==========\n\nThanks for taking the time to read this, the latest chapter of Convenience Vs. Need.  "
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "oral",
        "anal",
        "group",
        "sisters",
        "passing-out",
        "sharing",
        "polyamory"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/cvsn-28-robins-revelation"
}