{
    "title": "Senior Year Memories Ch. 23",
    "pages": [
        "(Usual Disclaimer Time: Even though this story almost entirely takes place in a high school setting, all the characters in this story are 18 years old or older, and since we're living in the wide wonderful world of porno-land here, where clich\u00e9s roam free and things might get a little unrealistic from time to time, please remember it's all in good fun. This story is highly serialized, and though it's not 100% necessary to have read the whole story up until this point to enjoy the content of the chapter, it's definitely advisable to understand some of the ongoing plots.)\n\n(Author's Note: I know it's been a long, hard road to get here, but at last the Christmas arc of SYM comes to an end. Thank you all for your patience in this long, strange arc; going forward I'm aiming to have some less complex arcs so I can get chapters out to you sooner. I'd like to again thank MisterWildCard for acting as a second set of eyes on this chapter and for his honest editing and fantastic suggestions, especially for this chapter that had some language I definitely needed to clear up. Please check out his story, \"Brooke's Wild Ride\" in Erotic Couplings, as it acts as a canonical side story to Senior Year Memories starring Regan Hills High's favorite blonde cheerleader.)\n\nPreviously, on Senior Year Memories: 18-year-old Ryan Collins' quest to do something nice for each of the nineteen women he's had sex with this senior year before Christmas has continued at a swift pace. When Addison Gonzalez called on him to make a sex tape for revenge against her vile ex, Kyle Bowman, Ryan was all too glad to help. His goth girlfriend Josie Wong revealed that she'd be leaving town for a few weeks after Christmas to spend time with a sick family member, but still promised to help Ryan provide cosplayer Mallory Dourif with quality glamour shots. Wanting to make sure he checked Josie off his list before it was too late, Ryan sought out her estranged best friend, emo rocker Mia Roth, and convinced the two to reconnect. Then he had sex with her, because this is that kind of story. Returning home exhausted, Ryan ended his day by exchanging notes through the window with the pretty and mysterious new girl who moved in next door.\n\nWith four names remaining on his list for good deeds, will Ryan be able to finish in time for Christmas?\n\nNames Remaining on Ryan's Christmas List: Jade, Kaitlyn, Nadia, Sophie\n\n***\n\nI'd been at this for almost a month now, and with only a few days left to do my last few good deeds before Christmas, I was finally seeing a light at the end of the tunnel. I'd spent a lot of money, run myself ragged and had some pretty amazing sex, but with a few days left and still time to screw something up, I was being careful.\n\nUnfortunately, the words \"careful\" and \"Kaitlyn Pruitt\" very rarely went together.\n\nAs usual when we were together, Kaitlyn and I were in my room, and we were naked. With her tight cheerleader's body, round ass, DD tits that just begged to be sucked on, and straight, silky black hair, she was a knockout by all definitions. The kind of girl I'd have never dreamed about seriously being with, to be honest. We shouldn't have been in the same room together, let alone naked in the same room together, and yet here we were. If it weren't for that fateful tutoring session back in early September when she tried to take a shortcut out of tutoring by offering me a handjob that escalated into so much more, I'd have had a much different year.\n\nTo say I owed her a lot would be an understatement, and on any other day I'd have had her on the bed, screaming with pleasure as I gave her every bit of my ten-inch long, thick cock. She loved it, I loved it, we both looked forward to those moments when we'd get to fuck each others' brains out.\n\nI don't think she expected that today's \"tutoring\" would involve me handing her a hefty multiple choice test, one that I made her take and then graded in front of her. The Kaitlyn I'd started out this experience with would've probably been flirting with me, distracting me and trying to play to my sympathies to get some extra points. That I'd seen Kaitlyn completely naked and laid bare, that I knew her as well as I knew any of my other best friends these days, let her know that none of these would work.\n\nWhile I sat and graded her test, she sat on the edge of the bed looking worried.\n\nUtterly gorgeous and lusciously naked, of course, but worried.\n\nWhen I finally tallied up her results, I set the test down.\n\n\"So, I graded your test...\" I said, my voice completely even.\n\nWithout even waiting for me to finish, she darted up from the bed angrily. \"And I failed, right? I fucking failed your goddamn history test because it's bullshit, right? It's bullshit that I'd ever learn anything because I'm not the kind of girl who learns anything, because all I've got is a hot body and some slutty skills and that's all that I'm made for, right? You tried to teach me and I didn't learn shit about your precious American Revolution or Civil War or New Deal because I can't learn! I'm stupid and I suck at this and...\"\n\nShe trailed off, but I could see that she was on the verge of tears. This wasn't exactly what I intended when I made this test as her Christmas gift, but knowing Kaitlyn this was something that I should've expected. She was bright, but had a tendency to underestimate herself as so many others had. I wanted this test to be hard, but also a way of showing how far we'd come in our tutoring sessions together.\n\nThat's why I smiled when I tossed the test onto my bed.\n\n\"Ninety-two percent,\" I said.\n\nKaitlyn looked down at it. \"You're joking.\"\n\n\"I'm not joking,\" I said.\n\nShe looked down at the test, then flipped through the pages looking for all of my red marks to verify that I had indeed graded her down.\n\n\"With the exception of one question I gave an extra point on because I fucked it up while writing it (since this is the first test I've ever written), you got ninety-two percent. It's not quite an AP exam, but I tried to make it close, and you need to brush up more on your Cold War history, but if this were a real test, you'd have gotten an A,\" I said.\n\nShe looked down at the test, then back at me, then back down at it so she wouldn't have to look at me. \"I bet you're proud of yourself, aren't you? Accomplishing the impossible?\"\n\n\"I'm more proud of you,\" I replied. \"When Mrs. Lynn first told me I was going to tutor you, I thought you'd be hopeless. When you and I first started for real, I knew you had it in you even when you were fighting me every inch of the way. Somehow, despite your best efforts otherwise, you managed to learn something from our time together other than how many orgasms you were capable of having during a study session.\"\n\nI meant this last part as a joke, but not the rest of it. Kaitlyn, for all of her arrogance, was someone I knew to have a lot of doubts about herself. The gift of a test where she could show herself how much she truly knew was admittedly one of my stranger ideas, and one that I didn't fully know how she'd take, but it was one I felt a great fit for her.\n\nI watched her look at that test a while longer, formulating the rest of her words before she fully knew what she was going to say.\n\n\"Thank you,\" she whispered. Her eyes, still uncertain, had a brightness to them that I liked. Maybe she still had a hard time believing in herself, but having someone else believe in her was a step in the right direction.\n\n\"No problem,\" I said. Then, deciding to end on a joke, I added, \"Now if only we could get your grades up in your other classes...\"\n\n\"One battle at a time,\" she said, her voice brightening by the moment as she approached me while I sat in my desk chair.\n\n\"I did it. I did it. I can do it. I can do it... FUCK YEAH!\" she cheered with greater enthusiasm as her victory sunk in, jumping up and down and twirling around excitedly. Tits bouncing with every step, she jogged over to me, hopping into my lap and kissing me enthusiastically.\n\n\"Thank you! Thank you! Thank you!\" she exclaimed, shaking her hips slightly in my lap. Her pussy, though not quite wet yet, rubbed against my already very hard cock, and she was groaning at the contact.\n\nI wrapped my arms around her, pulling her close and getting a hold of as much of her large breasts as I could while I kissed her. Kaitlyn cooed, especially as I started to grind up against her more, searching for entry.\n\n\"This is good, but we can do better,\" she said, disentangling herself from my arms and going over to retrieve something from the nightstand.\n\n\"Better?\" I groaned needily.\n\n\"Better,\" she said, proudly showing off one of my extra bottles of lube.\n\n\"Right, better,\" I amended, understanding her logic entirely.\n\nKaitlyn knelt between my legs, playfully licking and sucking on my cock for a few seconds before squeezing a large dollop of lube into her hands.\n\nI yelped from the cold as she placed her lubed hands on my cock and started expertly jacking up and down. Though her body and individual skills may not have matched some of the extremes of other girls I'd been with, that Kaitlyn was one of the all-around hottest and most skilled girls I'd been with was close to indisputable. Pure porn star perfection, she handled my cock and balls so perfectly that she'd have been able to get me to do pretty much anything then and there.\n\n\"I'm gonna fuck your ass, aren't I?\" I asked.\n\n\"Uh huh,\" Kaitlyn confirmed, standing up and turning around, squatting down over my cock. I helped hold her cheeks open wide while she angled herself down onto me, aiming her tight, almost cute little hole onto my massive erection.\n\n\"Yeeeeeeessssssssssss,\" she hissed through gritted teeth as the well-lubed head first met resistance, then broke through. I was far less eloquent than her, grunting loudly with pleasure, for there were few pleasures in life quite like fucking Kaitlyn Pruitt's perfect ass.\n\n\"Nobody believes in me, nobody's ever believed in me, nobody but you,\" she moaned as she took inch after inch of my cock in her tight ass.\n\n\"That's not true. People believe in you. People love you,\" I said.\n\n\"But nobody ever thought I was better than I thought I was, they always thought I was who I showed them. Why'd you believe in me?\" she asked as she settled completely down on me, rocking her ass back and forth provocatively.\n\nReaching around her to grab her tits, pulling her in close, I kissed her passionately. \"Because earlier this year, you took a chance on me. You believed I could be more than just another background nerd, that I was destined for more. You brought me into this new world I never thought I was worthy of. It seems that the least I can do is give you as many of the same opportunities as I can.\"\n\nSmiling joyfully, she kissed me. It was a long, sweet kiss, the kind bearing a sweetness that would've seemed completely foreign to Kaitlyn just a matter of months ago. It was a sweet kiss of thanks, of promises for many more adventures to come, of want, of desire, and yes, maybe a little love. It wasn't love like what Josie and I had, but it was still nice all the same; definitely something past normal friendship (as if my cock buried in her ass weren't a clue already).\n\nBracing her feet on the ground, Kaitlyn started to raise and drop herself on my cock. The look she gave me was one of pure lust, one that promised an encounter that was bound to be epic even by our usual standards. I dropped my hands from her tits to her hips for better support, and though I wanted to get lost in the moment, I couldn't help but mentally check her name off my Christmas list.\n\nX - ADDISON - X\n\nX - BROOKE - X\n\nX - HALEY - X\n\nX - HOPE - X\n\nJADE\n\nX - JOSIE - X\n\nX - KAITLYN - X\n\nX - MALLORY - X\n\nX - MARIE - X\n\nX - MRS. LYNN - X\n\nX - MRS. MCNEIL - X\n\nX - MRS. SULLIVAN - X\n\nNADIA\n\nX - NOA - X\n\nX - RACHEL - X\n\nX - ROSE - X\n\nX - SARAH - X\n\nSOPHIE\n\nX - TORI - X\n\nThree to go, and only a few days left.\n\nI could do this. Until then, I grabbed Kaitlyn Pruitt's hips and prepared to fuck her for all she had.\n\n***\n\nThe last day of school before Winter Break officially began looked like something out of a very festive post-apocalyptic movie. With classes more or less an afterthought at this point and a large portion of the school already called out \"sick\", there was only a skeleton crew of students and staff shuffling around, waiting for the end of the day when everyone could hit the road.\n\nIf I wanted to, I could've taken this opportunity to ditch with a lot of my fellow senior class (and probably had some impressively wild sex with some of them), but with attendance as good as mine and old habits hard to break, I kept to school on that day.\n\nIt was fun in its own strange way, watching all the teachers as checked out as they were, like Mrs. Addams in English who just showed us How the Grinch Stole Christmas, or Sra. Lopez in Spanish who showed us How the Grinch Stole Christmas dubbed in Spanish. Mrs. Chan, my science teacher, at least had some creative fun by taking us out to the parking lot and launching a miniature plastic Christmas tree using a Diet Coke and Mentos bottle rocket. She got herself soaked in the process, but since Mrs. Chan had the kind of body that could make even a lab coat look good, I was hardly complaining.\n\nThough I was enjoying the emptiness of the school and the half-assed festive environment that had taken over for the day, I was a man on a mission. I'd worked long and hard to check this next name off of my list, and I meant to check her off definitively. She wasn't easy to impress, but I thought today I might have something that'd catch even her attention.\n\nWell, I hoped I did anyway.\n\nShortly after the lunch bell rang, I walked purposefully over to the Puma Press offices. With the USB drive I'd taken from my backpack grasped tightly in hand, I took a deep breath and entered.\n\nYes, I know facing Nadia Barclay is nothing like facing whatever mythical beast it sounds like I was preparing to confront, but with how much I'd neglected my Puma Press duties this last month, I thought it didn't hurt to be prepared.\n\nWhen I went inside, the Puma Press offices were nearly empty. Nadia was, as ever, inside, hunched over someone's shoulder while they sat at a computer. Though intense as ever, the dark-skinned beauty with her long hair, wire-rimmed glasses and expensive-but-not-too-expensive clothing gave this place an air of confidence that managed to make it feel so much more real and important than I thought a high school newspaper would ever feel.\n\nThe girl she hovered over was a slender brunette with short hair, a short-sleeved shirt that showed off a small tattoo on the inside of her left arm and a much nicer smile than she might've otherwise had for how close Nadia was to jumping in and doing the job for her.\n\nNica Dubois. I didn't know her as well as a lot of other writers on the paper, but I was enjoying the show.\n\n\"I know what I'm doing,\" Nica said evenly.\n\n\"Just because you do doesn't mean I don't,\" Nadia said forcefully but professionally, reaching over to touch a key.\n\nGently, Nica pushed her hands away. \"Were you jumping in on my text?\"\n\n\"No... not quite,\" Nadia said.\n\n\"Touch my text and you might get cut,\" Nica said, her tone joking and her smile sweet yet some of the threat still real.\n\n\"You don't have the balls,\" Nadia returned.\n\n\"You don't need balls to cut,\" Nica replied sweetly.\n\nI'd seen the two of them like this before, and while it always proved entertaining, I wasn't here today for entertainment.\n\nI cleared my throat. Nadia looked up, while Nica continued on what she was doing.\n\n\"Hey, Ryan,\" Nadia said, not looking too terribly happy to see me.\n\n\"Saved by the penis,\" Nica mused. \"Could you keep her out of my hair for maybe... ten minutes, Ryan? That's all I need to get this article past the point where even she can damage it. Take her to the Dark Room, tie her up, make her scream, I don't care I just need that ten minutes.\"\n\nNadia rolled her eyes. \"Ever since Damon left and Nica got promoted to assistant editor, suddenly she's all full of sass.\"\n\n\"The sass was always there, just muted until I made my play,\" Nica said. Through the reflection of the screen on her conservative glasses, I could see that she was making some pretty rapid progress.\n\n\"Congrats, Nica,\" I said. \"I didn't come here today for... that, really...\"\n\n\"Merde,\" Nica muttered.\n\n\"...but I did come to talk to you, Nadia, if you've got a few minutes? Maybe ten?\" I said, much to Nica's amusement.\n\nNodding softly, Nadia said, \"Yeah, I'd say it's about time we had a talk. Let's grab a table.\"\n\nNadia and I navigated ourselves through the cramped quarters of the room before finding a table that was almost clean and far enough away from Nica to actually let her get her work done.\n\n\"I've been wanting to talk to you for a while,\" I said.\n\n\"And I you,\" Nadia replied. \"A month ago, you and I had a talk about how what went down between Tori and you wouldn't affect your work on the Puma Press. That if you did let it interfere with the operations of this paper, I'd make you regret your choices. Tori has held up her end of the bargain. You haven't.\"\n\n\"Need I remind you that I offered to quit?\" I said.\n\n\"You did,\" Nadia replied. \"And maybe it was my mistake that I decided not to let you go. I like you Ryan; you're a solid writer and really great in the sack, but I like to think I'm a woman of my word. I've seen barely more than a couple hundred words from you all December, not even a single interview, and yet my sources tell me you've been running around like a chicken with your head cut off doing everything but helping out the Puma Press. So, I've gotta ask you: is working on my paper something you really want to do, or must I find someone else to cover the Current Events section and make you regret your choices?\"\n\nThis was it. The moment of truth.\n\nI slid the USB drive across the table at her. Nadia picked it up.\n\n\"What's this?\" she asked.\n\nI took a deep breath. \"You said you haven't seen more than a couple hundred words and any interviews with me since the beginning of the month, that right there is me making up for lost time. That's a few thousand words and eight interviews. Good interviews with good (well, some of them are mostly good) people that with a little editing might meet even your lofty standards.\"\n\nNadia toyed with it, obviously conflicted. She clearly wanted to be upset with me still for spending so much of the month off the grid, but having spent a good chunk of that time pulling together interviews with some of my sources might have had a way of making it up to her.\n\n\"I'm listening,\" Nadia said.\n\nI took another deep breath, not wanting to have to say this again if I could afford to. \"Interviews with Mallory Dourif, Izzy Barnes and Mia Roth on their respective scenes: pro-cosplaying, pro-gaming and the indie music scene around Regan Hills in particular. An interview with Noa Kanzaki on what it's like to be an aspiring Ninja Warrior, and one with Jade Alvarez about the insane level of charity work she's done. For the less high-minded and niche crowds, I got an interview with the color guard captain, Daphne O'Connell, and even though it's late one with our beloved Homecoming Queen, Addison Gonzalez. Probably my favorite, though, and one I think you'll enjoy as well, is the Sarah Kent interview. From shy band girl to the newest Regan Hills High School senior cheerleader? It's trite enough to be a teen movie all on its own yet perfect for us because it's really happening. These are good stories; not enough to win awards on their own, but enough when put in a good high school paper with some other solid articles and amazing editing that it could be part of an award-winning team.\"\n\nI didn't have to play to her ego, but it certainly didn't hurt. The way she looked at the USB drive, I knew she was torn. On the one hand, she wanted to be upset with me for not pulling as much weight as I might have been around here for the last month, but on the other hand I'd just given her about two months or more of work to sift through. She knew I was good at this. Not great, but definitely good, and that of the eight interviews I'd done, at least a few of them would be worth publishing.",
        "The corners of her lips curled into the slightest ghost of a smile.\n\n\"Nice work, Ryan. I'll take a look at this. Now get the hell out of here, grab yourself some lunch and don't bother me while I try to make sure Nica doesn't fuck up our next issue,\" Nadia said.\n\n\"Get off my ass and nothing'll get messed up!\" Nica shot back.\n\n\"Mr. Hopkins?\" Nadia said with a raised voice.\n\nThe head of our faculty advisor stuck out of his office door briefly, as attentive to our dealings as ever. \"Whatever she said, that's right!\"\n\nNica grumbled. Nadia looked full of herself.\n\nI was just happy to extricate myself from the situation, having made Nadia proud. It wasn't the most ostentatious of my Christmas gifts, but it was one of the ones I'd worked hardest for, and I was happy to see that it'd gotten the reaction I'd hoped for. \n\nAs I slinked out of the Puma Press office to the wondrous sounds of Nadia and Nica arguing, I pulled the list from my pocket and crossed off Nadia's name.\n\nX - ADDISON - X\n\nX - BROOKE - X\n\nX - HALEY - X\n\nX - HOPE - X\n\nJADE\n\nX - JOSIE - X\n\nX - KAITLYN - X\n\nX - MALLORY - X\n\nX - MARIE - X\n\nX - MRS. LYNN - X\n\nX - MRS. MCNEIL - X\n\nX - MRS. SULLIVAN - X\n\nX - NADIA - X\n\nX - NOA - X\n\nX - RACHEL - X\n\nX - ROSE - X\n\nX - SARAH - X\n\nSOPHIE\n\nX - TORI - X\n\nSeventeen down, two to go.\n\nThe next one would be one of the trickiest yet and would take something of a miracle to pull off.\n\nGiven that this was the season of miracles, however, I was getting hopeful.\n\n***\n\nI'd had a lot of unexpected girls spend some time in my bedroom since September, but after my new normal had been established I doubt there were few quite as unexpected as Sophie Cusack.\n\nI'd been with plenty of popular girls and plenty of the more offbeat crowd, but a conservative, religious girl was not exactly at the top of my expectations list. She'd proven herself more than capable sexually back in October when Josie and I stumbled upon her extracurricular interests while trying to get her to cancel a planned Halloween protest, but seeing her actually in my room... that was something I never expected.\n\nEspecially at about mid-morning on Christmas Eve.\n\nIt was a cool, crisp morning, the air smelling of pine and feeling thick with good spirit and cheer. It was a morning when everyone should have been with their families enjoying holiday traditions, not... well, here. I had the excuse of Dad wanting to finish up a few last minute projects at the office before cutting off in the afternoon, but Sophie...\n\nAs if echoing my thoughts, Sophie said, \"I shouldn't be here.\"\n\nIn my room of toys, games and posters for pop culture she'd probably never been exposed to, this assessment was spot on. At 5'2\", she wore a plain sweater that wouldn't look out of place on a grandmother, a small gold cross that settled promisingly between her nice, large breasts and a long, loose skirt that might have been handmade. Her pretty, pale face had once seemed smug to me, but now looked vaguely worried, though since we'd last met her midback-length dirty blonde hair was no longer in a braid, but simply tied back in a loose ponytail. She still had some of that arrogance from before Halloween, but only a ghost of it.\n\nI also couldn't help but notice she still wore her purity ring. She'd tossed it aside during our October encounter, so I had to imagine it was to keep up her image around her family and peers.\n\n\"You said you wanted to meet here,\" I said.\n\n\"You said you wanted to meet,\" she shot back.\n\n\"You said yes,\" I retorted.\n\n\"I did...\" she trailed off. \"I shouldn't be here, not in this den of...\"\n\nSophie looked me up and down, her fingers toying with her purity ring before finishing, \"...temptation.\"\n\nI'll admit to smirking a little, if only because I was glad that I'd made an impact. Sophie had been an uptight virgin with a surprising interest in both art and pornography when Josie and I first met her, and by the time our meeting was done, Josie and I had exposed her to some pretty impressive depravity, I like to think. We didn't take advantage of her or anything like that, merely opening up something that was already inside of her, ready to burst. One of my big regrets of the year was not better following up with her, especially as she was wrestling with these new emotions we'd helped unlock.\n\nI tried to ease her in with a joke. \"Den of temptation? I honestly think that's the first time this room's ever been called that.\"\n\nSophie wasn't much in the mood for joking. \"All appearances to the contrary, it's rather apt. You leave an impression, one that's been hard for me to shake.\"\n\n\"A good impression?\" I asked.\n\nHer face did not look like the face of someone who'd been left with a good impression.\n\n\"My parents would kill me if they knew I was alone with a boy,\" Sophie said. \"I chose to meet you here because I have no other place where it's safe. I chose today because you said you wanted to meet before Christmas, and today is the only day I've got even a small window of free time away from the church for tonight's celebrations. I'm indulging you because... I'm not even fully sure why, but while I'm here, I'd like to know why you asked after me.\"\n\nI was proud of how much progress I'd made on my Christmas Good Deeds list, but seeing the state I'd put Sophie in almost took it all away. What I was doing was supposed to be good for all the women I'd been with, not like this. Though it'd hurt my pride (and keep me from marking every name off the list), I knew what I had to say.\n\n\"I'm sorry. I don't want to get you in trouble. If you want to leave... that's up to you. I've got something for you, kind of a Christmas present, nothing you need to be worried about, but it can wait until we get back to school,\" I said.\n\nPride kept trying to stop me with every word, but I managed to get it all out.\n\nSophie seriously looked like she was considering leaving, but before she did, she let out a breath and said, \"No. I've got the time. I need a break away from... I need to clear my head. If you want to talk, give me a present... I've got time.\"\n\nNervously, I walked over to my bedroom window. I should've had the curtains drawn completely, but curiosity made me keep them open a crack. I looked out out to the window of the house across the way, and though I was hopeful, once I saw the note I cracked a true smile.\n\n'YOU'RE HAVING A BUSY WEEK'\n\nI didn't even know the name of the new girl who'd moved in over there (which was, admittedly, part of the fun), but we'd been exchanging notes almost every day now. Nothing much, nothing major, but it was fun in its mysterious way.\n\nStill smiling, I closed the curtains fully.\n\nI walked back toward my desk. \"If you're worried that I wanted to get you alone to seduce you, you needn't worry. That isn't my intent. I said I wanted to give you something for Christmas, and that's really the only thing I wanted to do.\"\n\nSifting through the papers on my desk, I found the red envelope and handed it over to her.\n\n\"I know it's cheesy, and I'm not really good at the whole Christmas card thing, but it's the best idea I had,\" I said.\n\nSophie looked at me and the card incredulously. \"All of this... and you invited me over for a Christmas card?\"\n\nIf looks could kill, I'd have been dead on my feet. Sophie had gone from abjectly terrified to being angry about being abjectly terrified so quickly, I could swear she was about to get whiplash.\n\nWanting to steer into the skid, I said, \"It's what's inside the card that's important.\"\n\nStill shaking with a mix of fear and anger, Sophie tore open the card and looked inside. Ignoring the pictures of the dancing snowmen looking for a lost carrot, her eyes quickly scanned the short message I'd written inside the card.\n\n\"A phone number?\" Sophie asked, confused.\n\n\"For Rose Ferris,\" I said. \"Do you know her?\"\n\n\"Barely,\" Sophie said, still confused. \"Why did you give me Rose Ferris' phone number?\"\n\nThere was a chance that this next part would take a little time, and not wanting to make her uncomfortable I guided her to sit at my desk chair while I sat on the bed.\n\n\"You remember how this all started before Halloween, right?\" I asked.\n\nSophie nodded. \"You and Josie came by to view the Hell House, and then we...\"\n\nI stopped her. \"Right before that, when we were in the Hell House. You'd been in charge of the Lust room, and Josie and I noticed the sketches you'd covered the room with. The ones you'd gotten from... you know.\"\n\nI didn't want to make her uncomfortable, but it was hard getting around the fact that she'd made dozens, if not hundreds, of sketches of sex acts from some pretty hardcore pornography to decorate her Hell House room with.\n\n\"I do,\" she whispered, sounding embarrassed.\n\n\"Well, among other things, those drawings were good. Really good. Not even considering the subject matter, I could tell that you're a really good artist. It's something you have a passion for, isn't it?\" I asked.\n\nHer eyes looking down at the ground, she still only could barely manage a whisper, \"It doesn't matter.\"\n\n\"What doesn't matter?\" I asked.\n\n\"Drawing, sketching, art, whatever you want to call it,\" Sophie said, her voice rising with a sad strength. \"It's only an idle hobby with no true meaning, no greater purpose than to tantalize the senses momentarily before greater concerns need be focused on.\"\n\nShe said the words almost mechanically, repeating them like a parrot would. Her parents words, no doubt, or the words of someone else with an influence in her life she wasn't fully on board with.\n\n\"Do you really believe that?\" I asked.\n\nFor the way she looked at me, I might as well have slapped her in the face. \"Do I have a choice?\"\n\n\"There's always a choice,\" I said.\n\n\"Not for me,\" she said.\n\n\"For anyone,\" I replied.\n\n\"What makes you so sure?\" Sophie asked.\n\n\"Because... when I started this year out, I was on a preordained path. Everybody knew where everything was going to be for me, everyone knew who I'd end the year as, and that was that. Opportunity came knocking for me, and I couldn't be more grateful. This year's been insane, and I've made mistakes, but I wouldn't trade it for anything. It's difficult, sometimes, stepping off the path that everyone expects, and if they can't handle it it's their problem, not yours,\" I said.\n\nSophie laughed humorlessly. \"You say it as if it's just that simple. As if I haven't spent my whole life absolutely certain of who I was and where I'd end up? I'm supposed to graduate high school, if I'm lucky attend Regan Hills Community College to get a degree that will afford me a clerical job until I'm married with some boy from the Young Christian Purity Brigade. Then I'm supposed to lose my virginity on my wedding night, say goodbye to any aspirations and spend the rest of my life as a good Christian housewife cooking and cleaning and pumping out babies. That's the life I'm destined for. That is not a life of... art.\"\n\n\"Bullshit,\" I said, evenly.\n\n\"Bullshit?\" she asked, scandalized.\n\n\"Yeah, bullshit. I get that you got people in your life who aren't exactly supportive, people who might even make it difficult for you to follow your dreams, but... if you don't follow your dreams while you've got them, you're going to end up resentful and regretting all of your choices. You'll lead that life that's expected of you, and you'll hate every minute of it because you'll know you could do so much more. Is that what you really want to do?\" I asked.\n\nSophie wouldn't meet my eyes. I doubt this is how either of us expected Christmas Eve to go, but now that it had started, we both had something to think on. She tried and stopped herself a few times from saying something. I could see the battle raging on inside of her, and I only hoped that when it was won, it was by a side that she could be happy with.\n\nShe sighed, looking back down at the card. \"I'll ask again: why did you give me Rose Ferris' phone number?\"\n\n\"Two reasons. First, because she's one of the best artists I know and someone with a ton of resources and motivation. If anyone in this school can help you follow this as a passion, without judgment and with nothing but support, she's the girl you want to go to. The second... she's someone who knows what it's like to follow a different path than everyone around them. She's disappointed people, fought against the grain, and she's all the better for doing it. I think, on the surface, you two have pretty much nothing in common, but if you get the chance to actually talk with each other... I think you'll find that you two have a lot in common. I think the two of you might be able to help each other quite a bit, actually,\" I said.\n\nSophie pondered this. \"I'm not going to turn my back on God.\"\n\n\"No one's asking you to,\" I said.\n\nShe continued. \"I've had some questions, some serious internal debates, ever since Halloween, about who I am and what that means for me and my faith. I still choose to walk a path of righteousness in the light of Jesus. I also know now that I don't agree with much of what's been told to me over time by the people in my life, especially about who I am and... of sex.\"\n\n\"Oh?\" I asked.\n\nSophie almost blushed. \"I used to think the pleasures of the flesh were meant as a temptation, for us to be better people and rise above it, but when I experienced it with you and Josie, I saw only light. Anything that wonderful, that feels so good while hurting no one, that cannot be wicked... it must in some way be a gift granted to us by God.\"\n\nWhile I was hardly a religious person who had much in the way of understanding, let alone interpretation of such issues, that wording made me smile. \"Good. That's really good to hear you say that.\"\n\nNow she was definitely blushing. \"I know there are many people who would call what I did with you and Josie sinful, but I cannot agree with them. Nor with what I've done... since.\"\n\n\"Oh?\" I repeated.\n\n\"I shouldn't say anything,\" she said, even though she clearly wanted to.\n\n\"Well, they say confession's good for the soul,\" I said.\n\n\"Wrong denomination,\" Sophie corrected.\n\n\"Sorry. I am a heathen after all, this is all new to me,\" I said.\n\n\"I never called you that... or did I?\" she asked.\n\n\"Not that I remember, and if you did... well, it probably wouldn't be that inaccurate. Anyway, continue, this was sounding good,\" I said.\n\nSophie blushed. \"I can't believe I'm admitting this to you, but I have to tell someone... I've been... naughty.\"\n\n\"Naughty how?\" I asked.\n\nThough still looking rather embarrassed, her eyes darted from the floor to me every so often, her smile curling into a look that might very well have been pride.\n\n\"After everything we did before Halloween... you and Josie left an impression. I thought at first, that it was a moment of weakness, that it was something I could ignore and then it would go away, but then the carnal thoughts wouldn't go away. At first I could put them at bay by... touching myself... finding release... but after a time, that wasn't sufficient anymore. I needed more. So I went to my friends at the Brigade...\" she trailed off.\n\n\"And they're not quite so pure anymore?\" I finished.\n\nShe nodded. \"The boys fumbled, they didn't know what they were doing. The girls were better, but everyone seemed to lack a certain amount of imagination. I thought it would be a challenge, but either they weren't as devoted as I initially thought, or I'm more persuasive than I expected.\"\n\nFrom experience, knowing her amazing ass and her insane F-cup tits, I said, \"Persuasive is one way of putting it.\"\n\nBriefly, I saw a look of her old anger flash across her face, but it became a smile quicker than I think even she expected. \"So, you think I'm... attractive?\"\n\n\"Attractive doesn't even begin to scratch the surface when I think of you,\" I said. \"Why is that even a question?\"\n\n\"Well, you've a reputation with some very beautiful girls...\" Sophie trailed off.\n\n\"And you don't think that you're one of them?\" I asked.\n\n\"I... I don't know. There's a lot I don't know anymore. I used to know everything, but now there's so much uncertainty. Some is exciting. Too much is frightening,\" she said. It looked like she was stuck in thought, but biting her lip, I could see her screwing up her courage. \"There's one thing I'm not uncertain of.\"\n\n\"What's that?\" I asked.\n\nHer breathing was slightly heavier, the swell of her breasts pronounced as she leaned forward, almost conspiratorially. \"Ever since the three of us met, I haven't been able to stop thinking about you and your...\"\n\nShe'd trailed off, the word she wanted to say clearly uncomfortable. Taking a stab at it, I finished for her, \"...cock?\"\n\nLicking her lips slightly, Sophie nodded.\n\n\"It leaves quite an impression,\" she said.\n\n\"It seemed to,\" I replied.\n\n\"The other boys... they didn't know what they were doing, and none of them could match up to you. I can't stop thinking about being your 'cumslut' again, because it was so much fun last time,\" she said, putting special emphasis on the title Josie had thrown at her while she shuffled uncomfortably in her seat.\n\nThough I wasn't fully sure she really understood what that term meant and kind of wanted to talk to her about it, I couldn't help but look down at her shifting. I had a fair guess as to why she was moving this way. \"You're wet, aren't you?\"\n\n\"Quite,\" Sophie replied.\n\n\"Do you want to do something about that?\" I asked.\n\n\"Yes...\" she whimpered softly. \"Do you?\"\n\nI glanced down at my pants, beckoning her to do the same. Though the jeans I wore weren't the best at showing it off, my straining erection was still quite visible.\n\n\"What do you think?\" I asked.\n\nNervously, Sophie smiled shyly, standing up from the desk chair. She shuffled out of her shoes and tossed her purse on my bed. She approached me slowly, each step done with the greatest hesitation and anticipation.\n\nThis was probably why I yelped in surprise when she practically launched herself at me, knocking me flat on the bed as she fell next to me. Even with the wind knocked out of me, it was easy to start laughing along with her.\n\nIt was even easier to start kissing her when she went in for it. Sophie may still have had more enthusiasm than experience, but she was a lot better than she was when we first got together. Fooling around had done her well, and with her luscious lips now crushed against mine, her tongue playfully dancing with mine as they ran up against each other, I had to admit that she was much improved.\n\nWith a body like hers, I couldn't keep my hands off of her, cupping her massive tits through her sweater with one hand while my other reached down and squeezed her beautiful, round ass. Her hands explored me in equal measure, with one rubbing up against my chest and the other reaching down for my cock.\n\n\"Oh my goodness... I've been wanting this again for so long,\" Sophie moaned.\n\n\"All you had to do was ask,\" I said, kissing her back passionately.\n\n\"I've been in torment, fighting with myself and everyone else, but I know who I am and I know what I want now,\" she said. Sophie hiked up her skirt just enough to let her swing one leg over mine, then rotated her entire body so she was straddling my hips. Looking up at her in her conservative clothes, that little gold cross still prominent between her breasts, her face a look of pure serenity... I had to say she seemed about as close to angelic as I've ever experienced.\n\n\"What's that?\" I asked.\n\nShe pulled off her purity ring and set it on my nightstand. \"I want you to keep that so I can stop lying to myself. I want to be righteous and good with God, but I want to follow my own path. I want to be a good person without denying myself the pleasures this world has to offer.\"\n\nSophie leaned over, pressing her massive breasts against my chest so she could whisper into my ear. \"I want to be a slut. Won't you help me?\"",
        "Who was I to turn down a request like that? \"Gladly.\"\n\n\"Wonderful,\" she said, sitting back up on my hips. She reached down and pulled her sweater and shirt over her head, revealing her amazing bra-clad tits. I'd been with girls with tits as big as Sophie's, and one with even bigger, but that didn't make me any less appreciative of how utterly insane they were.\n\n\"Wow,\" I whispered in appreciation.\n\n\"Thank you,\" she blushed, looking down at them. \"I always used to think they were a nuisance that brought me a lot of undue attention, but now... I've started to like them. Especially how sensitive they are when they're in the right hands. Are yours the right hands?\"\n\n\"Only one way to find out,\" I admitted.\n\nWith more than a little pride, Sophie smirked, then reached behind to undo her bra. Though gravity definitely had an effect on tits this enormous, that was hardly a turnoff as I took in Sophie Cusack's bare breasts. Her areolas were wide and flat, about the size of the palm of my hand, with a fiercely hard nipple standing proud in the center of each. I couldn't help but reach up, caressing and toying with each nipple, squeezing them, rolling them between my thumbs and forefingers.\n\nSophie closed her eyes. \"Mmmm, that's nice. Keep doing that, keep doing that...\"\n\nI had no problem with continuing doing just that. When life gives you a pair of mammoth breasts to play with, you appreciate them and treat them exactly how they want to be treated. I was going to do exactly that, bringing Sophie the kind of pleasure and release that she needed, and if I happened to enjoy myself a little while doing so? Well, that was icing on the cake.\n\nI leaned up, lips parted to take one of her nipples into my mouth...\n\n...when her phone's ringtone nearly scared me half to death. Not just from surprise, mind you, but from the intense church choral song she'd set as the ringtone.\n\nHer eyes widened in surprise, for a moment, but rather than completely lose herself to fear she merely reached over for her purse. \"I have to take this.\"\n\nShe unlocked her phone and put it to her ear. \"Hello? Oh, Mrs. Cobb! Yes, I'm still around, just working on some other projects before the service tonight!\"\n\nI couldn't help but notice that she was still straddling my cock, topless and looking perfectly luscious. I'd leaned back down the moment she took her call, my hands falling by my sides. Sophie looked down at me, annoyed, before grabbing one of my hands in hers and placing it back on her breast.\n\nWell, if this is how she wanted to handle things.\n\nI went back to taking a tit in each hand, squeezing and massaging them in a way that made her smile and bite her lip in appreciation. She looked down at me with a conspiratorial grin and shot me a wink, nodding approvingly at what I was doing with her tits while she ground her groin against mine.\n\nSophie continued with her call. \"Yes, we received that new projector bulb you ordered for the projector; it's in Pastor Miller's office. We haven't tested it out yet because Mr. McCambridge hasn't been around, but he should be back today. Just call him and ask him to bring his ladder so you can test it out. You did save the warranty info for it, right? Because I told you we should've ordered OEM instead of equivalent, and if it doesn't work...\"\n\nI squeezed one of her nipples, causing her to stifle a moan. She looked down at me chidingly, but her eyes were full of more approval than disapproval.\n\n\"...yes, Mrs. Cobb, I'm sure it'll work. Alright, I'll see you soon too!\" Sophie said, ending the call and tossing her phone back on her purse.\n\n\"Was that really necessary?\" I asked.\n\n\"Hey, you've your responsibilities, I've mine!\" she declared, leaning down to kiss me. \"I'm helping out with organizing the Christmas Eve service at the church tonight, and if I don't answer my phone, folk will get worried and send out a search party, especially ones as nosy as our high and mighty church secretary Mrs. Cobb. Can't have that when I'm having my virtue defiled in a den of temptation, can I?\"\n\nSarcastically, I replied, \"You know, you really know how to add romance to a situation.\"\n\nWith a mocking pouty look on her face, Sophie sat back up and crossed her arms under her breasts, bringing them together in a positively hypnotic sight. \"Well, I'm sorry I broke the mood. Oh, is there anything I can do to make it up to you?\"\n\nFor emphasis, she ground herself against my cock even harder.\n\nI got her meaning. \"I can think of a few ideas...\"\n\n\"Let me see if I can read your mind...\" Sophie said proudly, climbing off of my hips. Kneeling beside me on the bed, she quickly undid my belt and zipper, pulling my pants down and fishing my cock out of my underpants. Taking my massive tool in her small, delicate hands, Sophie slowly jacked it. With her jaw slack, she brought her face in close to get a real good look at it.\n\n\"Oh my goodness! It's even bigger than I remember!\" she declared.\n\nI wanted to come up with something witty in response to that, but when she dove in with the same enthusiasm she tackled me with earlier, licking my shaft and sucking my balls, jacking me with such energy I was soon slick with precum, I didn't feel a witty comeback was all that necessary. I leaned back, enjoying the show as this busty girl played with my cock with her mouth, doing everything shy of giving me a blowjob but getting closer, oh so teasingly close. The way she looked into my eyes, I knew she knew exactly what she was doing, and rather than be annoyed I found myself oddly proud with how well she'd taken ownership of her sexuality. This wasn't the unsure, repressed girl Josie and I had first met. Sure, she had a long way to go still, but she was more confident, more in control, and overall more talented than before. I didn't know what she'd be like by the end of the year, but I was looking forward to seeing the woman she'd become.\n\nWith her body perpendicular to mine as she played with my cock, it gave me ample opportunity to reach behind and play with her amazing ass. It took some doing, pulling up her oversized and dowdy skirt until I'd bunched it all up around her waist, but once I did and was granted access to her nice round butt and everything beneath, I went to town on her. I stroked, I squeezed, I brought my fingers agonizingly close to her panty-covered pussy without diving in. If she was going to tease me, I was going to tease her.\n\nThe way she was whimpering and moaning as I ran my fingers over her inner thighs, it was little surprise to me that she was the first to break.\n\n\"If I... if I stop playing games and suck your cock... will you finger my cunt, please?\" she asked.\n\nI didn't let up with my teasing.\n\nShe whined. \"Pretty please?\"\n\nI grinned, pressing my fingers lower and pushing her panties aside, thrusting two deep into her steaming slit.\n\n\"Oh yes, oh yes, OH YES!\" she cried out, diving in and taking my cock in her mouth.\n\nShe may not have had the expertise of many girls I knew, but she was definitely learning, and definitely far better than she was the last time we'd been together. Sophie sucked my cock with gusto, timing her bobs almost perfectly with the thrusts of my fingers as I pleasured her cunt.\n\nFor how intense a moment it was, us sharing this, there was an undeniable sweetness to it too that I couldn't ignore. Looking down in Sophie's pretty eyes whenever she flitted them up toward me, I could see an intense and distinct gratitude that pierced to my core. I didn't know what kind of person Sophie Cusack would end this year as, but that I had a part in making her a different (and happier) person she was at the start of it was something that warmed my heart.\n\nWe stayed like that for I couldn't tell you how long, fingering, sucking and just generally making each other feel good because it was fun to make each other feel good. There was still much that needed to be accomplished today, so we couldn't have stayed there like that forever, but for the time being it felt pretty fucking amazing.\n\nOn one of her many moments of finally coming up for air, Sophie looked at me and smiled, kissing the head of my cock seductively. \"There's something... I wanna try. Something Josie did that...\"\n\n\"Sure,\" I said, \"whatever you want to try.\"\n\nSophie smiled at me a little sheepishly, but then climbed off the bed. She reached under her skirt, wiggling her hips slightly in a maneuver I knew all too well as a girl pulling off her panties. Seeing where this was going, I made the last few necessary maneuvers to get completely naked on the bed, letting her guide the action in a way she felt comfortable with. Sophie Cusack still had a lot to learn about communicating and doing what she wanted, but whatever help I could be, I was going to be.\n\nShe sauntered on over to me, climbing up on her knees onto the bed next to me. With her beautiful, bare breasts hanging down beneath her, Sophie crawled over to me.\n\n\"I'd be lying if I didn't tell you I've thought a lot about what went down in that Hell House room. Almost every night since, honestly. I think about what you and Josie did, and I can't help but touch myself. The feelings... they're confusing, but the memories, I know what they make me feel. You'd think I'd have the fondest memories of this cock...\" she said, lightly stroking me as she passed. I shivered at her touch.\n\n\"...and while they are... very fine... memories, the kinds of memories I'm hoping we'll be able to recreate soon, there's one thing that's haunted me even more,\" Sophie said, stopping with her knees beside my head.\n\n\"What's that?\" I asked.\n\nShe hiked her skirt up around her waist, giving me a tantalizing view of her pussy lips and the untamed, dark thatch of pubic hair above it.\n\n\"Your mouth,\" she said, inexpertly swinging one of her legs over my head so she was straddling my face, her steaming and hot pussy descending upon my mouth as she fully sat on my face.\n\nI remembered that Sophie tasted particularly sweet, and our reunion did nothing to change that opinion. She settled down onto me, grinding her hips against my face as I ravenously ate her pussy, taking control in her own slow, confidence-building way.\n\n\"Yes, yes, yes, right there, oh my goodness, yes, right there, please, keep going, keep going,\" she whined, pressing herself down harder onto my mouth. I didn't need any further motivation to give her the best oral possible, but it certainly didn't hurt any.\n\nI brought my hands up, reaching blindly for her breasts. Thankfully, she seemed to know exactly what I was looking for and grabbed my wrists. My hands were brought to her tits, and once again I enjoyed having free reign over her tits, her nipples, playing with the sensitive nubs and using them to bring her even closer to the brink of orgasm.\n\n\"I shouldn't have... fuck... I shouldn't have let myself be in such torment... this is... this is divine... this is amazing... there's no way this can be wicked... I want to do it all, I want to do it all the time, I want to do it with you and... oh my goodness, it's sooooo gooooooooood, so close, please, don't stop, please let me cum, make me cum, I'll do whatever you want just make me cum, please, keep going like that, right there, oh fuck, fuckfuckfuckitssogood, please, right there, yes, now, cumming soon, soon, soon... OH!\" Sophie cried out, her thighs squeezing my head as she came hard.\n\nMy tongue and mouth were able to keep up with the copious flow of juices from her pussy, but the way she squeezed my head only tighter and tighter, her body bucking wildly with the power of her orgasm, I thought there was a very good chance she might choke me out. I knew, rationally, that she didn't want to hurt or kill me or anything like that, but hey, accidents happen, especially before we all get a lot of experience.\n\nShe didn't hurt me, though, and I didn't lose consciousness. Once she'd finally slowed, Sophie crawled off of me and fell onto her back on the bed. Looking up at her, breathing heavily and flushed from a good cum, her chest rising and falling and jiggling her tits ever so slightly, it was the kind of sight that might drive a man wild.\n\nBeing a man who was fully capable of being driven wild, you could say it did the job for me.\n\nI rolled over onto my knees and pulled her skirt off, throwing it beside the bed and leaving her lushly and beautifully naked (save, of course, for that little gold cross that hung around her neck). Neither of us said anything, knowing exactly what was going to happen next. Her eyes were expectant and a little nervous, darting from mine, to my cock, back to mine again. Her lips were parted slightly, her hips still rocking, her thighs separating and drawing me forward. I didn't know how much fooling around she'd done since she'd lost her virginity to Josie and me, but I had my doubts that any of the guys had a cock like mine.\n\nI crawled between her legs, lining my cock up with the entrance of her pussy. I rubbed the head up against her slit, loving the anticipatory moan that pulled from her mouth. Even with only the slightest pressure, I knew that she was still almost impossibly tight, and that this would be a challenge.\n\nThankfully, when it came to sex, it was rare that I wasn't up for a challenge.\n\n\"Do it,\" she commanded, her voice low and husky. \"Please!\"\n\nI pushed forward, fighting through what resistance she had and forcing the head inside. Her eyes went wide and she moaned, loudly at the invasion. I might've joined her, it's hard to say, but pushing on, forcing in a little bit at a time, we could've been screaming for all I cared. It felt so good, and the way her beautiful face lit up as I buried more and more of my cock inside of her... well, I was just about in heaven.\n\n\"More, more, more, please!\" she whined, wrapping her legs around me and pulling me in deeper. The last few inches found their way inside of her somehow, and for a moment I just lay there on top of her, once again marveling at how my cock could fit inside of a girl this tight.\n\n\"Fuck,\" I groaned.\n\n\"Yeah,\" she agreed, looking down to the point where our two sexes met. \"That's... amazing.\"\n\n\"I kind of want to just stay here in awe of it for a moment, you know?\" I said, looking down myself, admiring both my handiwork and the insane beauty of her body.\n\n\"I do, but I think I want you to fuck me more. You helped me find my slutty side and now I want to feed it,\" Sophie said, squeezing my cock with her pussy.\n\n\"You know what you're asking for, right?\" I asked.\n\n\"I'm not asking,\" she said, kissing me sweetly. \"I'm telling.\"\n\nI smiled, kissing her back. \"Someone's learning how to take charge.\"\n\nShe rocked her hips, trying to coax me to start moving. Slowly, I did. She groaned, \"I've always loved to take charge, I just didn't know how to take charge with my own body. I'm definitely beginning to enjoy it, though...\"\n\nThough it may not have looked like it with me being the one on top, I had to agree that this was definitely her show. Whatever she wanted, I wanted to be here for, and whatever fun was to be had I was glad to let her set the pace. Call it a bit of the Christmas spirit, call it wanting to help someone discover a side of themselves that I'd only recently become familiar with in myself, call it whatever you want, but with the two of us on my bed everything felt perfectly natural and absolutely fun. Here I was, fucking one of the most unexpectedly hot girls in school (and that's a competitive fucking list, let me tell you), buried balls deep in her pussy while I got to look down at her bouncing tits and sublime smile.\n\nEarlier I might've said that I felt \"just about in heaven\", well, this had to settle it. This right here was its own special heaven, the kind reserved for the oddballs and the unlikely who'd been given a chance by improbable fate and took it. Neither of us should have been here doing this now if the year had gone on its most likely path, but now that it had diverged in our favor we were doing everything to take full advantage of it.\n\nSo I fucked her. I fucked her hard. I fucked her until she moaned as loud as she screamed, her vocalizations only cut off when we made out.\n\nOr when she had something to say.\n\n\"Harder... faster... deeper!\" she groaned, parting her legs as widely as she could to allow even more of my cock inside.\n\nTaking a cue and having an idea, I shifted into a semi-kneeling position and grabbed her legs, locking them over my shoulders before I leaned down and really started to fuck deeply into her cunt. If she'd thought I had a good angle before, this was a new depth entirely that filled her pussy. At first, her eyes slammed open in shock, her mouth dropping open in disbelief at this new, seemingly impossible position. Thankfully, she was quite flexible, and as I kept fucking down into her, she got more into it with each passing moment, urging me on, encouraging me, wanting so much more...\n\nI was building up to a pretty epic cum, I'm not going to deny, and I wasn't sure I'd be able to match her. My balls felt swollen, so in need, I was going to cum soon, so soon, so hard, deep inside of-\n\nHer ringtone once again nearly scared me half to death. It almost sent me flying off of her, but seemingly unperturbed she held onto me, grabbing her phone and answering it while I sat stock-still, cock still buried deep inside my pussy.\n\n\"Oh, hello?\" she answered, doing a surprisingly good job at not letting on that she was naked and with a cock buried deep inside of her cunt. \"Oh, hi Pastor Miller!\"\n\nStill listening to the man droning on on the other end of the line, Sophie rolled her eyes at me and mouthed, 'Keep going.'\n\nNow, I'd been in a lot of surreal situations over this past year, but being balls deep inside a sexy as fuck religious girl after she'd snuck away from church on Christmas Eve day, while she fielded a call from her pastor about the night's service... well, that one was a strong contender for the weirdest thing I'd done yet.\n\nBut if she wanted me to keep going, I'd keep going. I kept a slow pace, one that wouldn't make too much noise, I hoped. Though I knew I should've stopped, I was so close to cumming that this felt like a fine idea as stroke after stroke kept me inching closer and closer to cumming.\n\n\"Yes,\" she said, stifling a groan. \"Mrs. Friedkin? I don't know why her phone's off, but I assure you she has been working on the nativity costumes, uh... oh! No, sorry, I'm just, busy, moving around a lot, trying to get things ready, you know how it goes!\" \n\nShe giggled.\n\nI was starting to wonder if I'd be going to Hell for this.\n\n\"She said there was nothing to worry about, some scraped knees she fixed, a couple tears, some stains from when one of the Blatty twins threw up on the other, but nothing that couldn't be taken care of. She's going to have them ready for tonight, I'll check on her myself once I'm done on my current errand. Was there anything else?\"\n\nI really hoped there wasn't anything else, because I was about to burst.\n\n\"Oh, there is something else?\" Sophie said.\n\nI groaned in frustration. Sophie mouthed, 'Sorry!'\n\n\"No, that's not a problem at all, what's going on?\" Sophie asked.\n\nI couldn't hold it back any longer. I mouthed to her, 'Cumming soon!'\n\nShe bit her lip and nodded, mouthing, 'Do it!'\n\nI didn't fully trust her judgment, but I really didn't have much of a say in the matter anymore. For a moment, I fucked her harder, quickening my pace so I could finish the inevitable. Her face was one of ecstatic agony, of a woman who desperately wanted to join in but couldn't for reasons of her own making. I felt for her, I truly did, but that didn't stop me from doing what I had to do.\n\nWith a few final, conclusive thrusts, I came and I came and I fucking came, flooding her pussy with what felt like an entire river of cum. I was sorry that she couldn't enjoy it as much as I did, I promised myself I'd make it up to her, and maybe, still maybe part of me wondered if I was going to Hell for quietly fucking her while she fielded a phone call from her Pastor, but still I came. I came so hard it was as if my entire self drained into her, and though I desperately wanted to collapse on top of her and go into the darkness for a bit, I didn't. No, I still held on by my knees and elbows, waiting for my energy to return so I could return the favor to her once the phone call ended.",
        "Or earlier, if it kept going on like this.\n\nSophie looked positively pleased with herself as I unloaded into her, for somehow she managed to hold back any sound that might have given away what she was doing while she still fielded the call from her pastor. I'd known some girls who really knew how to multitask, but let me tell you, I think Sophie might have been able to give some of them lessons.\n\n\"Mercedes can take care of that, easily. If you can't find Mr. McCambridge, ask her and she'll do it; that girl will do anything if you light a fire under her,\" Sophie said proudly.\n\nMy cock was still buried inside of her and beginning to lose hardness, and Sophie still had yet to cum. This was something I meant to remedy promptly, even if she still hadn't finished her call. Propping all of my weight on one arm, I reached down with the other and started fingering her clit. At first, her eyes bugged out and her mouth dropped open as if I'd handed her a great betrayal, interrupting her call by trying to get her off. When I tried letting go, though, she shook her head and simply mouthed, 'Don't stop.'\n\nSo I kept going. I kept going while she did her best to hold onto her conversation with her pastor. I kept going as her body started to shudder and shake from my ministrations, never once breaking eye contact with this beautiful girl.\n\nTo her credit, she was really good at keeping a straight face on the phone.\n\n\"I know... oh... I know it seems like it's a lot to worry about... but we've... oh my goodness... no, nothing at all, it's just, we've got it under control, Pastor Miller. You don't have anything to worry about at all, just focus on your notes and the rest of us will... can I set you down for just one teensy second? Thanks!\" Sophie said, setting the phone down and grabbing one of the pillows from my bed. She shoved it over her face and pressed hard, screaming and cursing into it to muffle her orgasm. I could tell she was trying to get it over with to finish her call, but her body and my fingers didn't allow her that luxury. She was going to ride out her orgasm, and she was going to ride it out well.\n\nThe tension finally drained from her body, she collapsed and tossed the pillow aside.\n\nShe grabbed the phone again. \"Sorry about that, Pastor Miller; just had to drop off some Christmas cheer. I'll be back shortly, and I'll make sure everything goes off without a hitch, alright? See you all in a bit.\"\n\nEnding the call, she tossed the phone aside. Smiling, she exclaimed, \"You are evil!\"\n\nConsidering how passionately she kissed me after this pronouncement, I was pretty sure she meant it in jest. \"I have my moments.\"\n\n\"Pretty good moments. Nice and... wicked...\" she growled, kissing me again rather fiercely.\n\nI pulled my mostly deflated cock from her, then rolled over and lay down next to her. The river of cum that fell from her pussy meant I'd have to do laundry today, but with the number of girls who'd been through this room I'd gotten pretty good at laundry lately.\n\nWe lay next to each other, breathing heavily and rather satisfied for the vigorous, if unconventional, sex we'd just had. Eventually reality would have to set in, and both of us would have to get back to our Christmas Eve plans, but right now it felt nice to lounge next to one another.\n\nRolling onto her side, her breasts looking absolutely amazing as they stacked on top of each other, Sophie ran her fingers down my chest and purred, \"So... was I a good little cumslut for you, Ryan?\"\n\nThis brought me back to a thought that had been in the back of my mind since this encounter started, and was as good a time as any to bring it up. \"I gotta ask you; do you even know what that word means?\"\n\nSophie paused. \"I thought I did until you asked me. I thought it was about girls who enjoyed being shameful and... Why? What should it mean?\"\n\nI racked my brain for a good answer to this question, and it was harder to do than I'd thought. I'd spent a lot of time with a lot of girls who proudly called themselves 'sluts', and had to admit that by all definitions I was pretty much a slut myself, and had come to find a more nuanced and layered definition of that word than I ever would have expected before senior year began.\n\n\"It's... normally, it's a bad word. A word to demean and diminish women who have a libido and take pride in their bodies. Man, that word's more loaded than a gun, I swear. Around here, with all I've seen, all the girls I know, all the proud 'sluts', it means something more than that, I think. I've had my own experiences with the word, but here's what I think,\" I said, rolling over to face her.\n\n\"There's girls I know like Kaitlyn and her friends, they call each other sluts with a big smile on their face, they mean it in a completely different way from most people, I think. They use slut to describe women who own their sexuality, who enjoy sex and refuse to let anyone shame them for it, because sex is not shameful, at least, it shouldn't be. I think... I think they want to reclaim it. They don't want the word slut to be derogatory, they want to take it back and mean something positive, or at the very least fun and playful. And some people get off on doing stuff they think they're not supposed to do, as I think you've figured out,\" I continued.\n\n\"That... that makes a lot of sense,\" Sophie said.\n\n\"It's complicated, and weird, and a lot of it sucks because society sucks about shit like this, but... here's what I definitely know, Sophie. You can call yourself whatever you want, slut, cumslut, whore even if it suits you, but I hope that when you do you're not trying to hurt or shame yourself when you say it. Don't punish yourself because you think you've done something wrong. There's nothing wrong or sinful about wanting to enjoy sex, no matter what anyone else says. They'll want to call you these things because they want to pigeonhole you into one box, but being a slut, that's just one part of the rich tapestry of whoever you want to be. I mean... I'm not a theology major or anything, but you said it yourself, if it feels so good, maybe it's a gift to use from a higher power? I don't know, I'm rambling...\" I trailed off.\n\nFor the first time in a while, her eyes didn't meet mine. \"It was a good ramble.\"\n\nI took one of her hands in mine. \"I just don't want you to be hurt, by you or other people's expectations of you, okay?\"\n\nShe looked into the distance, thoughtful for a long while more. Though I still held one of her hands in mine, her other hand had drifted up to her cross, stroking it thoughtfully.\n\n\"I'll call Rose. If she knows... if she knows as much as you say she does... I think she sounds perfect to help me discover my new path,\" Sophie said.\n\n\"Cool. I think... I think the two of you will have a lot to talk about,\" I said.\n\nSophie smiled, softly. \"Talk about or, 'talk about'?\"\n\nIt wasn't the best attempt at a joke, but it wasn't a bad one either. \"Primarily the first. Maybe the second. Depends on how well you two hit it off, I guess.\"\n\n\"I guess,\" Sophie replied.\n\n\"Seriously, though, she's one of the best people in school to talk about anything. I owe her... I owe her a lot, and I think, if you give her a chance, she'll be willing to do a lot for you too,\" I said.\n\nSophie's smile was hard to read, but I took it for grateful. She still had a long way to go, but with the right people by her side she could make a lot of progress.\n\nShe rolled toward me, closing the gap between us enough that she could kiss me. I kissed her back. We began to make out, slowly, with a passion that hadn't been there from our previous, more frantic fuck. I knew in my heart of hearts that Sophie Cusack was a girl I'd never fully understand, but one that I'd always have a strange, unique connection with. Maybe it was because I'd been there when she'd lost her virginity, or maybe it was because I'd talked her through some tough times, or maybe it was just some greater destiny, but there would always be something between us that wouldn't be matched with anyone else, and that was fine by me.\n\nOur making out had intensified slightly, our tongues exploring each others' mouths as our hands took on each others' bodies. Without saying a word, Sophie broke our kiss and crawled down the bed, taking my cock into her mouth and starting to blow me again. Again, there was a slowness, a sensuality to it that spoke to a new side of Sophie that she was still exploring. It was an unbelievably erotic sight, the way she looked at me, and it was one I meant to encourage.\n\nThankfully, my cock had no trouble encouraging her in her attempts at getting me hard, as I was soon ready for what she had to offer. At once confident and timid-looking (a combination I wouldn't have thought possible, but she found a way), Sophie straddled me and sat on my cock, burying me deep in her pussy once more. Still as heavenly a feeling as ever, I worried that we'd once again be interrupted by her phone, but that wasn't meant to be this time. She rode me slowly, rocking her hips and angling herself for maximum penetration.\n\nSophie closed her eyes and bit her lip as she rode me, her face a mask of pure concentration. Her hands dropped to her clit and started rubbing it urgently. Eager to help her find the release she was looking for, I reached up and cupped her swaying, bouncing breasts, squeezing them gently and rubbing her hard nipples with my thumbs.\n\nSophie groaned, looking down at me with half-lidded eyes as she rode me a little faster. Though I was definitely here and definitely enjoying myself, this was very much her fuck and I was not going to deprive her of it. She rode me only slightly faster, but enough to send her breasts swaying in my hands.\n\nHer massive tits were too much to hold on at this point, so I dropped my hands to her hips, helping her keep pace and giving me the perfect opportunity to squeeze her ripe, perfect ass.\n\nHer voice nearly a whisper, Sophie intoned, \"Almost, almost, almost, so close, please, almost, keep going, so close, almost, almost, almost...\"\n\nThis orgasm didn't hit her as hard as the last one did, but with a heavy grunt and a groan, she shook and collapsed against me. Her hips still rocked, still urgently fucking me while she came, even though she herself was a blubbering mess, groaning and kissing me as she came down from her second heavy cum of the day.\n\nWith one final, lingering kiss, she said, \"Thank you.\"\n\n\"My pleasure,\" I said, squeezing her ass playfully.\n\nShe giggled, then flexed her ass against me. \"I should really get going soon.\"\n\n\"Alright,\" I said, a little disappointed, but understanding since I had a schedule of my own to keep.\n\n\"But... I'd really like to take care of you first,\" she continued. \"And I was thinking about something Josie said...\"\n\n\"What?\" I asked.\n\n\"Well...\" Sophie responded, climbing off of me and getting onto her knees beside me. Slowly, she jacked my cock, keeping me ready for whatever it was she had in mind. \"She said if I thought it felt good with you in my pussy... that I should wait until I felt you in my ass.\"\n\nMy disappointment evaporated swiftly. \"Really?\"\n\nA little nervous, Sophie nodded. \"I haven't done much with it, I put a couple of my fingers in, the handle of a hairbrush, even made one of the boys from the Purity Brigade lick it while I touched myself for a very long time (he really liked that), but never a cock. I... can't lie that thinking about having that in me is a little scary, but I want to know what it's like to have a cock in my ass. Please... won't you to fuck my ass, Ryan?\"\n\nIt was impossible for me to ignore the sheer weight and responsibility of Sophie's request, especially if she'd never actually had a guy fuck her in the ass before. I won't say I didn't want to do it, because with an ass as magnificent as hers that would be a huge fucking lie, but her question did hit me in a way I hadn't fully expected. This was something she was clearly looking forward to, something she wanted to have fun with.\n\nI had to be careful.\n\n\"Get on your hands and knees,\" I said, playfully yet firmly. Sophie smiled a very pretty smile and did as I directed, turning around and getting on her hands and knees so that her ass faced me. Her ass, so nice and round, parted naturally in anticipation, her tight little hole waiting so perfectly. Whatever plan I had went out the window on seeing that utterly perfect sight, and I decided that I'd have to improvise.\n\nStill, when improvising meant sitting up and planting my mouth on that perfect little asshole, was that really such a bad plan?\n\n\"Oh my, oh my goodness!\" Sophie exclaimed as I ate her ass, licking and probing gently while I gently slid two fingers into her pussy. I was going to take it slow for her sake, but still have some fun. I purposefully slid my fingers in and out of her tight, wet pussy, lubing them as much as I could on our comingled juices while I got her ass nice and wet with my mouth.\n\nTruth be told, I went at it a lot longer than I probably had to because, well, her ass was positively delectable. That I'd be fucking it shortly only upped my enthusiasm, which only elicited greater sounds of pleasure from Sophie.\n\nEven probing her hole with my tongue, I knew this would be a tight fit, but since she seemed about as ready as ever I pulled my fingers from her slit and pressed one against her tight hole.\n\n\"OH!\" she groaned as the pressure against her changed. Thank god for her readiness and wetness, because my index finger slid in with surprising ease.\n\n\"That good?\" I asked.\n\n\"So good,\" Sophie moaned. \"More... please.\"\n\nI wanted to take this slow, but if she wanted more I wouldn't say no. Pulling my index finger most of the way out, I put my pussy-slicked middle finger alongside it and inserted both of them into her tight ass. Sophie moaned more loudly, beating her hands against the bed as I fucked my fingers in and out of her asshole. I twisted and curled them, testing and probing her and seeing how ready she was to take my cock.\n\nThe answer was, \"not very\", but she could've been a lot worse off if she hadn't already been experimenting some. It'd be a tight squeeze, but with enough lube it would definitely be possible.\n\n\"Please, oh... please...\" Sophie pleaded.\n\n\"Please, what?\" I asked, as much wanting to hear her say it as wanting to be sure that she was sure this was what she wanted.\n\n\"Please, Ryan, please fuck my ass. I'll beg if I have to, but I want it, so bad,\" she moaned.\n\n\"Okay. If you say so,\" I said teasingly, reaching over to my nightstand and pulling out my oh so trusty bottle of lube. I squeezed a generous amount into the palm of my hand and jacked it up and down my cock, making sure I had good coverage. To be safe, I also squeezed a little between her ass cheeks and pressed it into her tight hole with my fingers.\n\n\"Oooh, that's nice,\" Sophie groaned, looking back at me and biting her lip.\n\n\"Well, wait until you get this in you,\" I said, showing off my erection.\n\n\"I'm ready,\" she said.\n\n\"Good,\" I replied, crawling between her legs. I lined up my cock between her ass cheeks and rubbed it between them, savoring the valley of her perfect ass around my cock. Playfully, Sophie squeezed my cock with her ass.\n\n\"You've been looking forward to this,\" I said.\n\n\"You have no idea how much,\" she said, squeezing my cock with her ass again.\n\n\"I think I might,\" I said, grabbing my cock and rubbing the head up and down her asshole. She groaned deeply, so instead of rubbing it against her sensitive hole, I started to press forward. Just a little bit at a time, just enough to stretch her out slightly.\n\n\"Oh, wow,\" she said as I pressed against her.\n\n\"Good wow?\" I asked.\n\n\"Very good wow,\" she said through gritted teeth.\n\n\"We can stop anytime if it gets to be too much,\" I said.\n\n\"I know,\" she replied, determined. Then, softening slightly, she said, \"Thank you.\"\n\n\"Don't mention it. Especially since this is gonna get a lot more intense... right... about... NOW!\" I exclaimed, pressing forward and sliding the head of my cock into her impossibly tight ass.\n\n\"FUCK!\" we both cried out in unison. Sophie pounded the bed in a mix of agony and ecstasy. For how painfully tight she was, I might have done the same if it weren't for the fact that the only thing I had to pound on was her ass, and I probably would've destroyed her for how hard I wanted to slap that ass. It was a shock, for sure, how tight she was, and if she'd given any indication she wanted me to stop I would have then and there. I could've sworn she would've, since this must have been painful for her.\n\nThe funny thing, though, was that she didn't ask me to stop.\n\nThe two of us just stayed like that, the head of my cock buried inside of her asshole, getting accustomed to each other until we grew used to the sensation. It was quiet in the room right then, save for our mutual heavy breathing.\n\nThen Sophie looked back at me. Her face was a mask of fear and desire. This had to be a lot for her.\n\nAnd then she gritted her teeth in concentration and pressed back against me.\n\nSlowly, she began to push inch after inch of my cock into her unbelievably tight asshole.\n\n\"It's... goodness... it's tearing me apart, it's not supposed to be like this, but it feels so... fucking... good!\" Sophie exclaimed.\n\n\"You want me to keep going?\" I asked.\n\n\"I don't want you to ever stop!\" she cried out as she pressed another inch inside.\n\nIf she insisted...\n\nCarefully, I grabbed her hips and started pulling her back onto me. It was slow, agonizing going, every bit as much pain as pleasure, but this ass was a challenge worth conquering, for both of us. Inch by inch, groan by exquisite groan, the pleasure building as more and more of me was gripped inside of her hot... tight... perfect... ass...\n\n\"Wow,\" I said, marveling at the sight of my cock bottomed out inside of her amazing ass.\n\n\"Wow,\" she repeated. \"That's... that's it... that's all of it...\"\n\n\"Yeah,\" I said. \"Pretty cool, huh?\"\n\n\"It's... it's something...\" Sophie said.\n\n\"You want me to stay here like this, for a little while, let you get used to it?\" I asked.\n\nSophie looked back at me. \"No. I want you to fuck me. I thought I was clear about this?\"\n\nI smirked, grabbing her hips a little tighter. \"Just wanted to give you the option.\"\n\n\"I think I- OH FUCK!\" Sophie yelped as I pulled nearly my entire cock from her ass and slammed it back in. Though it took her by surprise, I gave her another, similar stroke not long after, making her yelp with pleasure again.\n\n\"Oh fuck, keep going, like that, don't want it to stop, oh my...\" Sophie wailed as I began to seriously fuck her ass. I grabbed her by the hips, helping her slam back onto me as hard as I was thrusting into her, giving her the assfucking she was looking for by the sounds she was making. Though I was worried she didn't know what she was going for at first, when she leaned into the bed and reached down to finger her pussy, I knew we were on the right path.\n\nSpending a good period of Christmas Eve day with a hot girl, buried balls deep in her impossibly tight ass, I had to admit it was a pretty perfect moment.\n\nToo perfect for the laws of chance that my life seemed governed by. Something was bound to ruin it, and Sophie's ringtone once more filled the room.\n\nShe groaned in frustration almost as loud as I did, propping herself back up on her hands. Looking back at me with one of the most lustful faces I'd ever seen, she said, \"Whatever happens, don't you dare stop!\"\n\n\"Okay,\" I said, slowing my pace only slightly as she reached for her phone. After our last couple interruptions, I would've thought I'd be ready for anything.\n\nWhen she cheerfully answered, \"Hi, Mom!\", that was almost enough to stop me. If she hadn't been looking into my eyes almost threateningly as I continued to fuck her ass, I probably would have, but I wouldn't dare deny that look anything.",
        "\"No, I know, I know where I'm supposed to be, it's just... had an errand to run... it's a surprise, I swear it'll be... no, I'm fine, I'm fine, just working hard. Really hard,\" Sophie emphasized, looking back at me and almost rolling her eyes. I'd slowed my thrusts considerably, but even that wasn't enough to keep the fucking out of her voice. I hoped for her sake that she'd be able to keep quiet, but she was doing a good job of it so far I thought.\n\n\"No, you don't have to put him on, I'll be fine and back to church soon and, yeah... and, no, you don't have to- HI, DADDY!\" Sophie practically yelped as I gave her one heavy thrust. \"No, I'm fine, just thought I pulled a muscle, but, I'm fine. Yes, I'll be back at the church soon, I promise; just doing something I need to do, I won't let Pastor Miller down. Okay? Love you guys too, be there soon!\"\n\nShe ended the call, tossing the phone aside and screaming, \"FUCK ME HARDER, POUND MY SLUTTY FUCKING ASS AND CUM INSIDE OF ME, RYAN, FUCK, FUCK, FUCK!\"\n\nI pulled her up so she knelt in front of me as I fucked her, grabbing and squeezing her massive bouncing tits. She turned to kiss me, her hands dropping down to her pussy as we both furiously worked toward what would no doubt be our final orgasms with each other for the day.\n\nI didn't know how much what I did here would change Sophie's life, but I hoped whatever happened for her it was welcome. When our final, catastrophic orgasms came, when she tensed and bucked against me with what was no doubt the hardest cum of her life and I filled her ass with semen, I was still proud of everything we'd done today. I'd delivered her gift, and it sounded like it was welcomed.\n\nMaybe it was a Christmas miracle, maybe it wasn't, but when we collapsed next to each other on the bed, panting and laughing and making out as we came down, I couldn't help but do a little bit of mental math.\n\nX - ADDISON - X\n\nX - BROOKE - X\n\nX - HALEY - X\n\nX - HOPE - X\n\nJADE\n\nX - JOSIE - X\n\nX - KAITLYN - X\n\nX - MALLORY - X\n\nX - MARIE - X\n\nX - MRS. LYNN - X\n\nX - MRS. MCNEIL - X\n\nX - MRS. SULLIVAN - X\n\nX - NADIA - X\n\nX - NOA - X\n\nX - RACHEL - X\n\nX - ROSE - X\n\nX - SARAH - X\n\nX - SOPHIE - X\n\nX - TORI - X\n\nOnly one name to go. I could do this.\n\nKissing Sophie passionately, I then said, \"Merry Christmas, Sophie.\"\n\nKissing me back sweetly, she replied, \"Merry Christmas, Ryan.\"\n\n***\n\nMe: I'll be there in two minutes\n\nMe: Where should I meet you?\n\nJade: In the parking lot\n\nJade: I'll find you\n\nMe: Cool. See you soon.\n\nI pocketed my phone as Josie and me turned the corner toward Blair Valley's Open Hands Shelter. It was in a complex a few shades better than a strip mall, built between a couple warehouse-looking operations and hardly looking homey in its own way, but if the work they did was as good as Jade claimed it was, what it looked like on the outside hardly mattered. A small handful of people manned tables out front, and a large number were lined up out front to receive various care packages of supplies from them.\n\nI'd never really done any serious volunteering in the past, so I was a bit nervous at the prospect, but with Josie at my side, I knew I could do anything.\n\n\"So this is the place?\" she mused as she pulled her car into the parking lot and found us a space.\n\n\"Yeah,\" I replied, getting a nice, long look at her. Josie hadn't changed her gothic look in the slightest, even for Christmas Eve, but with her customary coat a rich, dark red and her lipstick a dark emerald green, she was making more of an effort than I'd have expected.\n\n\"Do you think Jade's got any idea what's coming her way?\" Josie asked.\n\n\"I sure hope not; then it won't be a surprise,\" I said, keeping my eyes scanning for her.\n\nAfter a few seconds, the front doors to the Open Hands Shelter opened and out strode Jade Alvarez. A busty and beautiful Latina cheerleader, in a roundabout way she was one of the major people responsible for my whole Christmas season extravaganza. If it hadn't been for her and Hope's timely intervention when I was feeling pretty low, I don't know what this last month would've been like.\n\nI had a lot to thank her for, and a lot to pay back; I was just hoping what I'd arranged today would be enough.\n\nJosie and I got out of the car in time for the festively dressed Jade to meet up with us and throw her arms around me in a hug.\n\n\"Thank you, thank you, thank you!\" Jade exclaimed. \"We're really short-handed tonight for some reason (it probably rhymes with isthmus), so, seriously, thank you guys for making it out here!\"\n\n\"It's our pleasure,\" I said.\n\n\"Doing good on Christmas? What's not to like?\" Josie said.\n\nJade smiled. \"That's exactly the kind of attitude we need! If you guys're ready, follow me, I'll get you with our volunteer coordinator and get you settled in. We got a lot of care packages to give out, food, toys, clothes, personal supplies, all sorts of things. We've got packages that need to be made and packages that need to be handed out, never enough to go around, but every extra pair of hands help!\"\n\nBefore she could pull us over to the building, I gently grabbed her by the wrist and said, \"That's... that's partly why I wanted to talk to you before we go inside.\"\n\n\"Oh?\" Jade asked.\n\n\"You... you've been a lot of help to me this month. More than I ever could've expected. You helped me pull off something crazy, and I think I want to return some of that crazy to you,\" I said.\n\n\"That didn't come out right, did it?\" Josie asked me.\n\n\"No, it did not,\" I said after some thought. \"But... the point's the same. I've... I've wanted to do something special for you especially.\"\n\n\"You don't have to. Honestly,\" Jade interjected. \"You and Josie being here? That's a lot right there. That's more than I could've asked of anyone really, especially on Christmas Eve.\"\n\n\"Yeah. I figured you'd say something like that,\" I said, pulling out my phone and sending out the text from my phone's drafts folder to the group chat I'd set up. \"That's kind of why I already set it in motion, so you might not be able to convince me otherwise.\"\n\n\"What?\" Jade asked, an eyebrow raised. \"What've you got up your sleeve.\"\n\nI turned the phone to face her, showing her the simple message:\n\nMe: Time for a dramatic entrance\n\n\"You've... got me interested, but what's that supposed to mean?\" Jade asked.\n\n\"Wait for it,\" I said, hoping that nobody had trouble with traffic or got held up by family.\n\nIt was a minute before the first car pulled into the lot, barely having time to pull in and park before the driver came flying out and practically tackled Jade.\n\n\"Hey Jade! Merry Christmas!\" tiny blonde cheerleader Brooke King exclaimed as she threw her arms around her friend. \"We came soon as we could!\"\n\n\"Who's 'we'?\" Jade asked, extricating herself from her pigtailed cheerleading teammate.\n\n\"The rest of Fox Force Five! We got the band back together! Pretty, like, sweet, right?\" Brooke asked, motioning to her car as beautiful brunette Kaitlyn Pruitt, stacked redhead Haley Campbell, and blonde hipster Rose Ferris stepped out. They weren't nearly as enthusiastic as Brooke (since I doubted anyone was), but the way Jade's eyes goggled at them I knew they didn't have to be.\n\n\"You guys! I tried asking you for weeks, and you show up now?\" Jade chided, a little angry but mostly ecstatic.\n\n\"What can we say? Ryan's persuasive,\" Kaitlyn mused.\n\nJade looked at me. \"I should ask for your help more often.\"\n\n\"Wait for it; there's more coming,\" I said.\n\n\"More?\" Jade asked.\n\n\"Oh yeah,\" I said as the next car pulled in.\n\nOr, should I say, cars.\n\nThe first to pull in was a van that held Josie's friends, busty emo rocker Mia Roth, meek blonde dancer Sarah Kent, stunning track star Fatima Hassan, gawky band geek Hope Harris and her new girlfriend, redheaded color guard captain Daphne O'Connell.\n\nFollowing them were a pair of cars, the first holding another busty Latina cheerleader with Addison Gonzalez, the second carrying tight-bodied aspiring Ninja Warrior Noa Kanzaki. Only a few seconds behind Noa was the ancient, coughing Vespa that held motormouthed, blue-haired gamer Izzy Barnes, who probably could've given Brooke a challenge in the energy department.\n\nThe last car in the caravan I saw come in held Nadia Barclay, and a face I didn't expect to see with her. Utterly gorgeous even with her shaved head, cosplayer Mallory Dourif was friends with Nadia once upon a time until they'd had a falling out over how Nadia behaved when Mallory's brother got sick. Seeing them share a car... it felt like they might have been trying to fix things.\n\nIt wouldn't be the first Christmas miracle.\n\nJade just couldn't help but stare at the incoming flood of people with slack-jawed wonder.\n\n\"Some of them can only stay for an hour or so because of Christmas, but this is one of those 'many hands make light work' situations, right? Tell us where we need to be, and we'll be there,\" I said.\n\nAs if finally noticing me for the first time since the others started flooding in, Jade quickly turned to me, wrapped her arms around my neck and kissed me long and hard on the lips. It was the kind of kiss with fire and passion that most people only dreamed of, the kind that made me really grateful that Josie wasn't the jealous type for the fire in it.\n\n\"Wow,\" I said when our lips parted.\n\n\"You're the big 'wow',\" Jade said. \"Giving me a lot of work to do, helping everybody out...\"\n\n\"Hey, this is your show. I just did some networking. Do your thing. Be the hero everyone should know you are. I'll be wherever I'm needed,\" I said.\n\n\"Thanks,\" Jade replied, then raising her voice. \"Alright, new volunteers! Follow me! We got a lot to do and not a lot of time to do it in; let's get that Christmas spirit flowing!\"\n\nWith some mixed cheers from the group and more than a few girls shooting me glances before they followed her, Josie and I moved to pick up the rear.\n\nAt least, we almost did, until Brooke grabbed me by the arm. \"Hey, Ryan! Can we, like, talk for a sec!\"\n\n\"You got it all together?\" Josie asked.\n\n\"Totally,\" Brooke replied.\n\n\"Got what together? You two colluding on some evil scheme?\" I asked.\n\n\"Not evil,\" Brooke replied.\n\n\"Yeah, who do you think we are?\" Josie replied.\n\n\"Though, if you say collude but mean 'we fucked and then thought of something totally sweet for you for Christmas' then, yeah, we did that,\" Brooke said.\n\n\"You and her?\" I asked Josie.\n\n\"Yeah. You jealous?\" Josie joked.\n\n\"Only that I wasn't there,\" I said.\n\n\"Next time!\" Brooke said cheerfully.\n\nPassing by Addison as we went, I smiled and nodded at her. In response, she had an even more devilish smile and said, \"Heads up: after what we did last time, Kyle's been crying like a little bitch and actually sicced his mommy on me to try to get me to stop being mean to him. She's probably going to be after you soon too, so, you know, be careful.\"\n\nI shook my head. \"Just what I need. Thanks.\"\n\n\"Hey, thank you! You have no idea how fun this is for me right now,\" Addison said, walking after the others into the Shelter.\n\n\"What was *that* about?\" Josie asked.\n\n\"Long story,\" I said as we arrived at the back of Brooke's car.\n\n\"Do you wanna, like, explain it, or, like, should I?\" Brooke asked.\n\n\"Listening to you explain things is more fun than it ought to be, blondie; this one's all you,\" Josie said.\n\n\"Woohoo!\" Brooke exclaimed, popping her trunk and pointing proudly to the cardboard moving box with a pink ribbon wrapped around it inside. \"Merry Christmas, Ryan!\"\n\n\"It's a box. Just what I've always wanted,\" I joked, getting an elbow to the rib from Josie for my efforts.\n\n\"It's more than a box, it's, like, it's kind of our thank you to being, like, so totally awesome to us this last month, and it's not like it's anything as special as anything you got us, but , the idea we had was to kinda make the rest of this year as awesome for you as possible,\" Brooke explained without really explaining anything.\n\n\"Maybe I should explain so we can get inside,\" Josie said.\n\n\"I got this!\" Brooke exclaimed. \"I can totally do this!\"\n\n\"Okay, okay, then do it so we can get inside,\" Josie said.\n\n\"Okay... look, it's no secret anymore Ryan that you're totally having sex with like so many of the yummy chicks in school and out, and you're talented, and you got all sorts of skills from a lot of us, but you're gonna, like, run outta tricks eventually, so Josie and me put our big brains together and talked to a lot of the girls you've been with and we, like, put together one big and shiny sexy care package for you! Each of us chipped something in; it's got all sorts of toys and goodies you can bust out to really impress the girls, or that the girls can use while you're busy with another one, and, like, everyone can have so much fun like you wouldn't believe!\" Brooke exclaimed.\n\nI looked back at the box, impressed. I wasn't expecting or asking for anything in return for my Christmas good deeds. I just wanted to do the good for the people who'd made my year special. This, though, set up by two of my favorite women in the world?\n\n\"Thank you. Both of you. All of you,\" I said, first kissing Josie, then Brooke, then rather enjoying watching the two of them kiss.\n\nWe really had to do something about that one of these days.\n\n\"Hey, our pleasure! Doin' good and sharin' stuff feels, like, totally sweet!\" Brooke said.\n\n\"Speaking of which...\" Josie said, looking over at the Shelter. \"...Jade's probably gonna come looking for us if we don't get in on orientation soon. Shall we?\"\n\nTaking one of them on each arm, I said, \"Let's!\"\n\nAs we walked toward the building's entrance, I couldn't help but notice that one last car had pulled up. Its occupants had already stepped out and prepared to follow us into the building. One was a shorter girl with wavy blonde hair, the other a redhead with an untamed mop of flaming red curls that I'd notice anywhere.\n\nApril Martel and Tori McNeil.\n\nI'd sent the invite to April, since we still chatted from time to time, but whether she'd show and whether Tori would show with her after all that had happened between us was something I was unwilling to bet on.\n\nBriefly, Tori's and my eyes met. There was no smile, but on seeing me she gave a brief nod of recognition. It was the most cordial we'd been in close to a month, and though there was every chance this softening came more from Christmas spirit than any form of reconciliation, I returned the nod.\n\nThere may have been room for some drama in the near future, but I wasn't planning on letting that take over the afternoon.\n\nIt was Christmas, and we had work to do.\n\n***\n\nAt the end of the day, I was tired, I was sore, but I was satisfied.\n\nIf I could've, I would've stayed with Jade and the rest of the volunteers at the Open Hands Shelter all night. I didn't exactly know what I was doing, but I was good at following orders, being where I needed to be when I needed to be there and dispensing whatever supplies they had on hand to the people that needed dispensing to. It was a powerful, humbling experience that I won't go into too much detail on here because that's not why you're reading this, but when Jade made the offer to have me help out some in the future, I eagerly took her up on it.\n\nJosie and I lasted longer than most of the girls who had to go back to Regan Hills and spend Christmas Eve with their families (save for Mia and Fatima who didn't celebrate Christmas), but eventually I had to give in and bow out so Josie and I could spend Christmas Eve proper with Dad.\n\nSince Dad and I didn't have the best history of making holidays work, you can say I was glad to retire to my bedroom with Josie so we could sit on the floor and sort through the box of goodies Brooke had delivered. Even though Brooke had given me fair warning about what was inside, it didn't make the sheer breadth of the sex toys inside any less surprising.\n\nPulling out a purple vibrator with an attachment on it that made it look like a cock designed by H.R. Giger, I asked Josie, \"This one's from... Addison, and... what would you call that Lovecraftian horror?\"\n\n\"Oh, sweet!\" Josie exclaimed. As usual when she was spending the night, she was dressed in a comfortable and loose t-shirt and pair of sweatpants, her hair tied back. It didn't exactly fit her usual overly made up Goth appearance, but since she was comfortable she was beautiful to me.\n\nTaking the vibrator from my hand, Josie explained. \"This one's a 'rabbit' vibe; the weird-looking protrusion thing hits the clit and it's... well, it's pretty great.\"\n\n\"So, add it to the 'Fake Cock' pile?\" I asked.\n\n\"Definitely,\" Josie said.\n\nI set Addison's rabbit aside with the other dildos and vibrators, including Sarah's RC vibe, Jade's bullet vibes and the double-ended dildo that Mia provided and Josie assured me would be a lot of fun when we had another girl over. Though Josie got excited with every toy pulled from the box, the one that got her going the most was the Hitachi magic wand that Kaitlyn provided. Though it looked less like a magic wand and more like R2-D2's dick to my eyes, I remembered even Tori talking about how they were one of the top-sellers at the sex shop she worked at, so I took her as a fair authority.\n\n\"You got some kinky friends,\" Josie mused, pulling what looked like a collection of handmade masks and blindfolds with a tag saying \"From Mallory\" on them before tossing them in the \"Kinky\" pile.\n\n\"I like them,\" I said.\n\n\"Me too,\" Josie said. \"And your dad...\"\n\n\"My dad's not kinky. At least, I hope my dad's not kinky,\" I said, rather hoping to not get any more into this than I had to.\n\n\"I wasn't saying that, it's just... it was a nice dinner, that's all. I didn't know that he was such a good singer. It was a lot of fun to listen to,\" Josie said.\n\nI smiled. \"Ah. Yeah, Dad was part of a hair metal band back in the 80s. Back when he had hair. They were terrible musicians, but he was always a good singer.\"\n\nI reached back into the box and pulled out what appeared to be a large box of KY from Costco. Of course, this most practical of presents had to come from Nadia, but it would definitely get some use. I put it in the \"Miscellaneous\" pile, along with the non-slip shower strips that Rose had provided (if it finally made shower sex practical, I was all for it), Noa's recipes for stamina improving shakes and smoothies, and the stack of used Far Cry games that Izzy provided.\n\nWith Izzy, I didn't know if she hadn't gotten the message for the care package's theme, or if they were just for fun or a sex thing, but since I enjoyed a good shooter like anyone else, I wasn't complaining.\n\nJosie also wasn't complaining, though for very different reasons. She sorted through the \"Kinky\" pile with a look of glee on her face. In addition to Mallory's masks, we had a brand new set of vibrating nipple clamps courtesy of Haley, a collection of restraints from Daphne, a book on safe bondage practices from Hope, and Josie's own contribution: a truly epic collection of butt plugs.\n\nHolding up a pair of handcuffs, she said, \"Admit it, you're gonna miss me while I'm gone.\"\n\n\"Of course I'm gonna miss you,\" I said. Not long after Christmas, Josie was supposed to travel with her family to visit her grandmother in Hawaii who was going to be recovering from cancer surgery. She'd be gone for a couple weeks at least, and it was really an absence I wanted to think about as little as possible.\n\n\"Really? Even with all the girls you're gonna be slinging that cock around to in the meantime, you'll still be thinking about little old me?\" Josie teased.\n\nI crawled over to Josie and pressed her against the bed, kissing her hard. \"As much as you're gonna be missing me while you try to get a surfer gangbang off the ground? Yeah, I'm definitely gonna miss you.\"",
        "Josie smiled at me sweetly. \"Touch\u00e9.\"\n\nI sat down next to her, wrapping an arm around her shoulders and pulling her in close. It had been a crazy month, but I honestly couldn't think of a more exciting period in my life. I didn't know what life would have in store for me next, but I was looking forward to some good, solid relaxing time. I'd have preferred it with Josie by my side, but if that wasn't an option, I'd do the best I could to make do.\n\n\"So, has it been a good Christmas for you?\" Josie asked.\n\n\"Well, it all depends on what tomorrow has in store, especially after we visit your folks to drop off presents, but I'd say yeah. You?\" I asked.\n\n\"I've never really been a Christmas person, but with you? Yeah, it's been pretty fun,\" Josie said, kissing me on the cheek. She craned her neck, looking into the box. \"Looks like one more present. You want the honors?\"\n\n\"Sure,\" I said, reaching inside. I pulled out what was an impressively large gift basket wrapped in cellophane. Though the bows and ribbons around it were very cute and Christmasy, all of the contents inside of it were bright pink. Dildos, vibrators, nipple clamps, anal beads, a strap-on, handcuffs...\n\n\"Brooke doesn't half-ass anything, does she?\" I mused, setting the gift basket between the various toy piles.\n\n\"Totally,\" Josie teased, doing a pretty good impression of Brooke's ditzy tone. \"You know who else doesn't half-ass anything?\"\n\n\"Who?\" I asked.\n\nStanding up, Josie dropped her pajama bottoms and panties to the floor, bending over the bed and spreading her ass cheeks to better show me her tight hole. Jokingly, she said, \"This ass!\"\n\nI smiled. \"You want me to fuck your ass?\"\n\n\"At least once. More if Sophie didn't wear you out too much earlier,\" Josie said, looking back at me.\n\n\"I can do that,\" I said.\n\n\"Excellent,\" Josie said, hopping into bed and tossing her shirt at me so she was completely naked before sliding beneath the covers. \"And if you've still got it in you - or if you don't - I've got half a mind to try out some of those new toys.\"\n\n\"Sounds like fun,\" I said, standing up.\n\n\"So, are you gonna just talk about it, or do something about it?\" Josie asked.\n\n\"Just one thing I gotta do first,\" I said, going over to the chair where I set my pants.\n\n\"Well, I'm gonna start fingering myself, hurry it up if you wanna take part in my first cum!\" Josie said, her hands dancing between her legs under my blanket.\n\nI found what I needed in a hurry, the well-worn list of names I'd been working off of this past month. I still hadn't crossed off Jade's name, and found myself looking for a pen so I could finally finish it off. When I realized what I was doing, I crumpled up the piece of paper and tossed it in my trash can. I turned on my heel and walked over toward the bed, stripping off my own sleep clothes as I approached Josie.\n\n\"Merry Christmas,\" I said, climbing into bed and kissing my girlfriend.\n\n***\n\n(Author's Note 2: Writing this story is something I do in my spare time for fun, so if you're enjoying this, please, please, please drop some stars, reviews or shoot me some feedback, as they really keep me going (and please vote on any earlier chapters you enjoyed if you haven't already!). Though I may not always respond, I do love hearing from all of you and seeing that you're enjoying the series. It motivates me to continue writing more. You've all been wonderful and I can't thank you enough for all of your kind words and encouragement and yes, even the constructive criticisms!)"
    ],
    "authorname": "aimingtomisbehave33",
    "tags": [
        "anal",
        "big breasts",
        "big cock",
        "cheerleader",
        "christmas",
        "creampie",
        "high school",
        "oral",
        "slut"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/senior-year-memories-ch-23"
}