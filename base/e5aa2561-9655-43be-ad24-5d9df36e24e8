{
    "title": "I Say Ass, You Say Arse...",
    "pages": [
        "I say ass, you say arse... let's call the whole thing an excellent idea!\n\nThis is written in a mix of American and UK English, depending on who is speaking or thinking at the time.\n\n-\n\nEmily's supervisor told the crew about the new guy who would join their lab in London the next week.\n\n\"Sandy's lab in Boston has been having problems getting our PCR primers to work, so they're sending us one of their students for a month.\"\n\nThe chosen student was Bradley. He'd been recently dumped by his girlfriend, so was delighted to head to the other side of the Atlantic, far far away from her. It was sad, but he'd known from the off they hadn't had enough in common for it to last.\n\nPerhaps he could have a brief fling with an English girl? He'd love to hear one of those sexy accents in bed. Or a one-night-stand, at least.\n\nHe was embarrassed to admit it, even to himself, but he couldn't prevent the thought coming back again and again: a girl who was up for a one-off sexual encounter might also be the kind who would like it in the ass.\n\nThat was his big fantasy, that threatened to take over his mind, sometimes. He'd never once had it come true, which meant he kept thinking about it all the more. Bradley liked to think he was a decent guy, wouldn't pressure anyone, and definitely wasn't the kind of man who would 'oops' into the wrong hole, but it didn't mean he wasn't sometimes tempted.\n\nHe reminded himself: any woman getting an unexpected dick in her ass would be incredibly unlikely to be enthusiastic about it. It wasn't just his cock in a snug little hole he wanted, after all. What he craved was a woman who wanted it. One who would beg for it, push herself against him, rock and moan and love it...\n\nHe'd heard such women existed. Just needed to meet one. Jed's psycho ex Maria, who'd screwed Jed out of hundreds of dollars, didn't count. 'Don't stick your dick in the crazy,' Jed had said. Bradley wouldn't have been averse to a one-time dick-sticking deal, but Maria had disappeared shortly after ditching Jed.\n\n\"She was a fucking bitch, man, but man was she good at taking it in the ass!\"\n\nBradley had found himself looking up porn with a resemblance to Maria. There was a lot of it, showing large light-brown asses, curvy and bubbly, highlighted for the camera as a guy slowly held those globes apart, revealed a glistening lubed-up asshole, and approached with a big cock...\n\nHis own cock wasn't that large. It wasn't small, either -- he'd reassured himself of that in high school showers -- but he hoped that not being oversized would make a woman more amenable to some backdoor activity, sometime.\n\nIt hadn't worked with Gina, though. She'd been his first proper girlfriend that he'd had regular sex with -- relationships that hadn't got beyond making out didn't really count. All good, until they'd agreed not to bother maintaining a long-distance relationship when they went to different colleges. They'd hung out a few times during spring breaks and, when they'd both been single, fucked a few more times too, because why the hell not? Gorgeous Gina was way sensible like that, not prudish or anything.\n\nBut as far as Bradley was concerned, she was totally unreasonable about one thing. Nothing went into her ass. Not even one little finger, and when he'd slid behind her to try his tongue instead, she'd simply snapped at him.\n\n\"Brad! That's disgusting!\"\n\n\"You just had a shower,\" he pointed out. \"Your ass is so cute! I just wanna eat it all up!\" He did a playful munch on one of her wonderful little butt-cheeks, to push home the point.\n\n\"I know I've got a cute ass! I do not have a cute asshole! No-one has a cute asshole! Assholes are for poop to exit, and no damn entry!\"\n\nHe didn't even try to argue that her tight little asshole was adorable, all tiny and crinkled and hiding in her ass-crack. She'd never believe it. His attempt to persuade her to try anything once, that all those copies of Cosmopolitan couldn't be wrong, backfired completely.\n\n\"Are you basically saying you want something in your ass? Or is it, you aren't really into pussy? Are you really gay and that's why you're obsessed with anal? Is that it? You want a finger and cock up your ass and to fuck another guy's? Huh?\"\n\n\"No!\" His instant denial might have convinced her, though she carried on joking about it forever. That kinda got on his wick, even though he pretended it didn't bother him, but for sure it was certain: ass was nowhere near the menu.\n\nNot that he would object if a girl did try fingering his ass -- apparently lube made it quite cool, but he was darn sure he didn't want a man, and he definitely didn't want a cock there! Which meant he could see Gina's point of view, but it didn't mean he had to like it.\n\nHe'd had a few other girlfriends since then, plus a couple drunken nights where he'd copped off, but not got as far as that 'would you do anal' discussion. He was all too aware that if the girl wasn't mentioning it, it probably wasn't an option -- only with that small hope that she might be as reticent as he about raising it.\n\nHe should have suggested it to Jenni before they'd called it a day.\n\nAh, well. Maybe he'd try online dating in the future, set out his stall out front. In the meantime, a few weeks in England should be cool.\n\nHe'd have his laptop to watch porn on. Though he didn't like most of the porn stars, coated in make-up and fake tits and fake enjoyment. The real bodies, usually claiming to be 'viewers' girlfriends', the modern version of readers wives, appealed much more.\n\nThe owner of the house he'd be staying in had left him to set up his computer and sleep off his jet-lag. So Bradley dozed, then dealt with his fuzzy head with some new videos of Tanni Bubble, all sweet innocent face, fingers in her ass, then a plug while she was teased, then a ceremonial withdrawal of the plug, a zoomed-in shot showing her gaping hole, and then the finale: a thick cock ploughing it.\n\nOh, yeah, Bradley wanted to do that. He'd be gentle and careful and all, but god, he wanted his cock surrounded by a tight ass. Even if, after a few days in London, he'd settle for anything other than his left hand.\n\nThe people were fine. A friendly bunch of scientists and support staff. He was given the materials to replicate the failed experiments in his home lab, and expected to get on with it. It was slow to start with, while he needed to ask a thousand questions -- where can I get an ice bucket? Where do I find dry ice? Where do I dispose of this? What paperwork do I need to fill out for the radioactivity? - but soon sped up.\n\nA week in, he stared at his first result, Verity the lab head and Emily the PhD student looking over his shoulder. He cursed under his breath.\n\nVerity wasn't so polite. \"How the fuck do you manage to make the negative control work but not the positive? Fuck knows what those results show. Do it all again. Emily, you watch over his every move to see if you can figure out what's happening. Brad, you'll have to help Em with her genotyping and tube labelling -- she's got to write up her thesis soon so doesn't have time to waste. Well go on, both of you, get on with it!\"\n\nEmily smiled at him, trying to reassure. \"Welcome to science. 99% repeating what you did last week, in the hope of getting a different result!\"\n\n\"Isn't that the definition of insanity?\" observed Roland the avuncular technician.\n\n\"Doing a PhD is the definition of insanity!\" Emily retorted.\n\n\"Observe the mating call of the final-year doctoral student in her native habitat,\" Roland jibed.\n\n\"Mating call? What is happen to zat Ben you were living with, eh?\" This was Marion the French post-doc chiming in, proving labs were the same the world over when it came to everyone knowing way too much about each other's lives, from all those hours doing routine manipulations at the bench, passing the time with all sorts of conversation.\n\n\"Still with him. Though, I don't know...\"\n\n\"He not good enough for you, huh? Foolish boy.\"\n\nIt wasn't so much that, Emily thought. Ben was kind and generous, supported her working long hours to get the final results she needed to write up her thesis for examination, really, a great catch, but...\n\nBut the butt.\n\nIt probably made her horribly shallow, but did she really want to spend the rest of her life with a man who seemed repulsed by her arse?\n\nIn fact, it wasn't just that. He'd done anal sex with her a couple times, but the expression of distaste on his face as he'd gingerly removed the remarkably-clean condom, leaning as far back from it as he could, had jolted her out of her post-coital happiness. He hadn't even been great at it, either -- sliding in and making it as obvious as possible he didn't really want to be there. It was just as well Emily had been facing away from him at the time, as looking at him would probably have put her off completely.\n\nThinking about it, Ben really wasn't up for any interesting sex. If it wasn't his cock in her mouth or pussy, he wasn't interested. It was a big disappointment to Emily.\n\nWas a good dose of receiving oral and the occasional good fucking up the arse too much to ask for? Was she too demanding, like he said? Or was he, maybe, just a bit selfish?\n\nThe previous night, she'd wheedled for him to slide backwards into her tighter hole.\n\n\"Go on. You've got a condom anyway because of my period, so why not? Feel me all tight around you...\n\n\"God, that's just sick!\"\n\n\"What?\"\n\nHe'd made a disparaging gesture. It looked like talking about menses was pretty similar to shit, in his book.\n\n\"Come on, love,\" Emily encouraged. \"Sex is meant to be dirty! Filthy, even.\"\n\n\"No, it's not. It's only mentally 'dirty'. If it were physically dirty, that's just another word for unhygienic. Bleurgh.\"\n\nCould he even be more patronising?\n\nShe'd said forget it, and he'd rolled over in bed and gone to sleep.\n\nThey'd made up the next day; Ben had done those things with his fingers that had made her fall for him in the first place, all cheeky confidence and ego. But doubts had been sown.\n\nDid she want to spend the rest of her life with Ben? She knew, now, the answer was no. The only real question was how long the relationship could limp along, buoyed up solely by the size of his cock.\n\nBack in the lab, after two weeks Bradley had finally made the materials work for him. Result!\n\n\"That's what you lot get for relying on bought-in solvents and not making up your own,\" Verity told him, not unkindly, having already taken out her schadenfreude on his boss Sandy. \"Just because you Americans have money to waste.\" Different levels of lab funding from their respective government grants was always a sore point.\n\n\"It claimed to be the same ingredients! How could it be such a different pH? Even if we hadn't put it on ice?\" Bradley still didn't understand why, but prayed that the amendments to the experimental protocol would still work back home.\n\n\"No-one knows. That's why they call it cutting-edge science,\" Emily reassured him. \"If it was easy, someone would have done it already. You wouldn't believe how many experiments only work with someone's lucky ice bucket...\"\n\nIt was true -- as sceptical and practical as scientists were, put them in high-stress positions with unpredictable results, and they became as superstitious as any Ancient Roman.\n\n\"Don't laugh,\" Emily told him. \"If I thought human-sacrificing anyone would have helped my DNA plasmid stick together, after nine months of trying, I'd have done it!\"\n\n\"It only worked after I prayed to Ganesh for you,\" commented Dev, who had wandered in from the adjacent lab. \"You heard, Brad! Don't laugh! After eight months of failure, I felt she needed divine intervention from the god for hopeless causes. We wrote down the exact process of sticking sequences together and I put the paper in his box in the temple and lit a votive candle. The next week she repeats the same process, and presto -- it worked!\"\n\n\"Nothing to do with processing 96 samples for her one last go, instead of thirty-two, now, I'm sure,\" Verity said sarcastically.\n\n\"Like I said, you'll try anything,\" Emily defended herself. \"Anyway, what else did you want to learn while you're here?\"\n\nHis main task completed, he had a flight back to Boston in ten days.\n\nCould he wangle a one night stand in that time?\n\nIt would be difficult, mainly as while the various students and young post-docs and technicians had a thriving social life which he was dragged along on, yet despite getting tipsy most nights, and telling him about all the affairs at the institute, they were a remarkably sexless crowd. It seemed almost all were already in established relationships and not looking to change that.\n\nWhich was a shame. Especially once Emily had shown him some of her fluorescence microscope work.\n\nThe rule with equipment more expensive than the cost of a student was that its comfort was way more important was that of mere humans. Students were infinitely more replaceable. So the five-foot tall scope resided in a small room well-insulated against vibration, noise, or change in temperature. Around it was just about enough space for two people to sit, looking down the two eyepieces. The room also had to be completely blocked to all light, enabling the faintest flicker of fluorescent red or green to show.\n\nWhile he truly was fascinated by how the patterns of two different proteins overlapped, forming yellow, Bradley was equally enjoying how her thigh pressed against his, both with their other legs against the concrete walls. Her voice was breathy, near his ear, in the pitch dark.\n\n\"What I'd really like is to use DAPI staining at the same time, to get a clearer picture of where this red and green is in relation to cell nuclei... Besides, three-colour fluoro, four if you include the yellow overlap, looks so cool in photos! Like, someone goes 'what did you do for your PhD?', you can show them a photo. Bingo, they're impressed.\"\n\nBradley laughed. \"I'm sure.\" He forced himself to concentrate on her words rather than the scent of her hair in his face, her head close enough to kiss, and on their meaning. \"But wouldn't a Hoechst stain be better than DAPI, given it's less cytotoxic?\"\n\n\"The other stains wouldn't work on live cells anyway. Really, it's just what I'm used to, DAPI stain. Main reason, I think the pale blue would show up better than dark fluoro blue. And we've got it in stock. My budget's run out for consumables! So if I can avoid ordering any new chemicals while I write up, Verity and Roland would appreciate it!\"\n\n\"I guess. I could mail you some if you did need it, though.\"\n\n\"Very kind. I'd give you an acknowledgement in my paper.\" She squeezed him on the leg, and he thought he could see a grin in the dark. Presumably just friendly gestures. Or was she flirting? \n\nEmily herself didn't know the answer to that one, though when they emerged, blinking, into the bright corridor, she added, \"There was a couple having an affair, here, who managed to shag repeatedly in there. I still have no idea how they did it!\"\n\nBradley considered, moving his hands about and going 'nah...' s few times. Finally, he got it.\n\n\"Standing. The only way.\"\n\n\"Even so, which way?\"\n\n\"Eyepiece in the... yeah, that would be bad!\"\n\nShe giggled and he blushed a little, caught having been thinking about it. They both realised that now, yes, they were flirting.\n\nBoth also knew they weren't doing anything about it, which freed them to have leisurely lunches together, chat in the lounge while their cells replicated or stained or some DNA ran slowly along a gel, and to hang out in the bar or local pubs or at Marion's house in the evenings. It was fun.\n\nEmily's boyfriend Ben was less impressed. \n\nAnd after yet another night where Emily had got home at midnight, this time because her staining had finally worked and she'd had to spend hours photographing every slide in every manner possible before it faded, he'd accused her of seeing someone else.\n\nWhich was when she'd snapped, realising that it was sort of true: she'd been seeing all her colleagues in preference to him. A sad, tired conversation had them both agreeing it wasn't working. He could move out, soon. \n\nBut in the meantime, they might as well prove they were the mature types who could stay friends, with some final fucking.\n\nOn her adrenalin high, from getting the final results she needed for her thesis, Emily figured getting fucked five ways to Christmas sounded like a bloody good idea.\n\n\"Mm. I love your big thick cock,\" she breathed. \"Oh yeah... Hey, if it's the last time, slide it in where it'll be extra tight. Go on. Fuck your filthy slutty ex!\"\n\nEven as she said it, she realised the dirty words weren't turning Ben on. Off, more like.\n\n\"Sorry,\" he sing-songed sarcastically. \"I don't want a filthy slut that's been round half your building. I've heard the stories! Forget it. I'm going to crash at my brother's -- you sick slut...\"\n\nHe banged the door on his way out.\n\nEmily burst into tears. Then, realising it was 1 a.m. and too late to call anyone, she dug out her Hitachi magic wand and power transformer from a drawer, and decided if she was a slut -- clearly an insult in Ben's book -- she was going to damn well start enjoying it.\n\nShe'd save her butt plug for the next night.\n\nIt was gone nine when she awoke, grateful for the flexible hours of the lab, when her experiments didn't demand otherwise.\n\nShe was less grateful for the curiosity of her colleagues.\n\n\"Late night, love? Doesn't look like it was much fun,\" Roland observed.\n\n\"That Ben been a bit crap again? Dev asked.\n\n\"You look like sheet,\" Marion stated with her typical lack of tact. \"Did you dump him or did he ditch you?\"\n\nWhich was when Emily ran out in tears.\n\n\"Oh, for goodness sake, Marion! Do you have to be less subtle than the average sledgehammer?\" Verity shucked her nitrile gloves and ran out after her student.\n\n\"What?\"\n\nBradley tried to explain the phrase to Marion, while worrying about Emily. His friend Emily, he realised.\n\nVerity and Emily returned to the lab half an hour later, both carrying fortifying coffees purchased from the canteen, with crumbs from pastries round their lips. \"Must have been serious, if Verity coughed up for breakfast,\" Roland muttered.\n\nVerity tapped her pen on a glass saline bottle to gain attention. \"Right, to avoid Em having to tell everyone, she and Ben split up last night, and he was quite unpleasant. That's all. Now, Marion, how are the images for your paper coming along?\"\n\nEmily forced a weak smile. Now she was getting over the shock, she was striving to look forward.\n\n\"So, guys, still on for a night out tonight? It's our Brad's last night in the country, after all!\" From Verity, it had the status of an order.\n\n\"Of course! You're all packed, right, Bradley?\" Emily sounded nearly as cheerful as usual.\n\nHe nodded. \"I've booked a cab for midday tomorrow, to the airport.\"\n\n\"Fab. Thanks so much for your help with my imaging last night. Do you have anything left to do today, or could you give me a hand sorting the photos and picking ones for a paper?\"\n\n\"Sure. Which journal are you going for?\" Bradley asked Emily.\n\nEmily looked startled; she'd spent so much effort on getting her results she hadn't yet considered how she was going to present them. She glanced up at Verity.\n\n\"Start with NCB, worry about rewriting if they reject you,\" was the terse advice.\n\nBradley could tell Emily was pleased at her boss's suggestion her work was good enough for a Nature paper -- albeit Nature Cell Biology, just because the wider world wouldn't care so much -- and figured this Ben chap must be a real asshole to ditch such a lovely smile. Not to mention the rest of her.\n\nHe'd really enjoyed working with Emily. And now she was single. A fling on the rebound might be good for her, right?",
        "But not something to be pushed while at work. He knew all gossip would follow him for the rest of his career. It was the currency that kept science running, even more so than grant funding. Roll on 4 p.m. and adjourning to the bar, then wherever Dev had lined up for food and more alcohol.\n\nHe'd have to keep an eye on that. They'd introduced him to Fuller's Special a couple weeks earlier. It was great stuff, but he hadn't realised until too late it was 8.3%, nearly double that of the beers he was used to. There were embarrassing photos of him doing karaoke, that he was in no doubt had been sent to Sandy and the lab back home.\n\nIt could be worse. It wasn't a video. Also, he'd seen presentations where rival labs' work were dismissed with 'and also, here's a photo of X clearly having an affair with Y, so do you really want to believe anything he says?' All's fair in love, war and science...\n\nAnything he did, he'd have to be sure he couldn't be embarrassed by it 20 years in the future. Of course, sometimes the game backfired on the person showing the blasts from the past. Like the asshole who had said 'and this mechanism was discovered by Sally Smith. Of course, she looked a bit different then and called herself Solomon Smith, look, like this, can you believe it?' That had been along with various disparaging comments on Smith's current looks, and was received with a ripple of disapproval and a lack of collaborations being renewed. Bradley hadn't realised Smith was one of the most famous trans people in the world, let alone their field, and had asked Sandy, \"What's he saying about this Sally Smith? What's the story?\"\n\nSandy had merely grunted, \"She does good work. There is no story.\" Bradley had more respect for Sandy, after that.\n\nMeanwhile, Emily was getting more and more excited over her pictures, as they added arrows and labels to the colourful images. Her cheerful enthusiasm and clear competence were striking him as increasingly attractive.\n\nShe went to fetch the Guidance for Authors at one point, at which point Bradley noticed her cute curvy backside. It was getting warm in the lab -- air conditioning was a luxury in England, only for the tissue culture rooms -- so she'd shed her fleece, and was wearing just a stretchy T-shirt tucked into belted jeans. Cute little tits poking out the front, perfect rounded butt at the rear. Not that he'd ever mention that, but now with no more experiments to worry about until he got home, it was something he couldn't stop thinking about.\n\nThey all drank to his career in the bar, wishing him well, then another round of drinks, cheering Emily's results and the fact that she could finish writing up her thesis now.\n\nAnother bottle of wine for the women and beers for the men -- and some vodka shots all round, thanks to Alexei coming by to pass on messages for Bradley to give to Sandy and to confirm that 'young Brad' could make it as a scientist. Bradley was only a second year grad student despite being a year older than Emily -- the broader American system made everything take longer -- so he was in his first year of actual research. Thus the compliment was much appreciated, especially coming from surly Alexei.\n\n\"Where shall we eat? Brad, you choose!\"\n\nHe thought about a curry house, which tended to be the top choice when the British wanted to have lots of drinks and cheap filling food, but he considered the onion breath and decided against. The local Chinese was a bit sedate, the Mexican restaurant a travesty of Mexican food, the nearest pub a travesty of multiple cuisines.\n\n\"The Black Swan?\" Bradley suggested. \"I like the pies.\" Meat plus thick meaty gravy, in flaky savory pastry, was one of the better British inventions. He also liked the beers and the enthusiasm of most of the clientele for drinking liberally, especially when the karaoke started up. Anyone would argue that drinking was essential to cope with Marion's caterwauling.\n\n\"Best get walking, then. Or they'll be too crowded to get a table,\" Verity warned.\n\nDev looked up. \"I've just booked one online. Don't worry, mate.\"\n\n\"Come on, Emily! Let's go celebrate!\" Bradley took her arm to guide her, then dropped it before he looked like a creep.\n\nTwo hours later, Bradley was full of steak-and-ale pie and three veg, and working on topping up with the guest ales. His companions were getting quite merry, too. Verity and Roland headed home by ten, but he and Emily, plus Dev, Marion, and others lacking children or spouses stayed. Dev liked karaoke, and the others encouraged him, so as to reduce how often Marion got an opportunity.\n\nAcross the table, Emily's friend Rachel was gently quizzing her about what had been the last straw with Ben. \"I mean, I'd always thought he was a bit of an arse, but what was the clincher for you?\"\n\nEmily burst into tears again. Bradley couldn't hear what she said, but heard clearly Rachel's disbelieving response, \"He thought you were a slut? Jesus Christ, what is the man on? Has he met you, sweetie? I mean, seriously, why?\"\n\n\"A woman should be a slut at home. As long as she is respectable outside, like our Emily,\" Marion sniffed.\n\n\"Like you'd know about respectable,\" Dev laughed at her. Marion huffed in an exaggerated Gallic manner.\n\nWhile Marion was distracting folk from her, Emily whispered in Rachel's ear, blushing. Rachel, already three sheets to the wind, laughed at her. \"That all! My god, what a dickhead...\"\n\nBradley's curiosity burned. But how could he ask?\n\nMarion turned to him, wobbling a bit. \"I think you should try to cheer Emily up. Her man was... Not good for her confidence. You can cheer her up tonight, no?\" The method for cheering her up was strongly implied. with vigorous gestures.\n\nHe grimaced and suggested that while of course he'd love to, surely it was up to Emily? He tried to sound casual, rather than betraying his actual desperation to jump on her. \n\nEven a bit pale with red-rimmed eyes, she was beautiful. A touch of lipstick to detract from the red -- he really did like British girls' subtle approach to make-up -- and he was rather glad to be sitting behind a table, not out in public!\n\nHe'd thought it was just the mad French woman, insisting that of course Emily would want to 'shag' him, if not now, then after another bottle of wine. But then when Marion went off to destroy peoples eardrums, with Dev and Emily as backup, Rachel came round to perch next to him.\n\n\"She could really do with a quick rebound shag. Fancy obliging?\"\n\nStartled at the blunt English, basically offering up her friend for sex, he stuttered, \"I.. I hadn't thought about it!\"\n\n\"Bollocks you haven't! You've got eyes, you're a guy, you've been squeezed in enough dark-rooms with the girl. Do you want to fuck her tonight or not? You go back to America tomorrow, don't you? Last chance...\"\n\nHe tried to make one of those non-committal shrugs that suggested that if he were asked, of course he'd be delighted to help, that the English were so good at, but then thought it best to use his words. He spoke quietly, checking no-one else was around. \"Yeah. I'd love to.\"\n\n\"Good, 'cos Dev's gone and got himself a girlfriend! Right, well, you can be a gent and make sure she gets home safely, can't you? Once you're there it's up to you, but trust me, just be kind and there shouldn't be a problem. She's too nice for her own good -- should have told that Ben to fuck off months ago!\"\n\n\"Okay. I'll do that. But, tell me -- what was it Ben called her a slut for?\"\n\nRachel shook her head. \"I can't say. Just he was being a right twat.\" She watched Emily spin on the dance floor, who was now laughing as she grabbed Dev for balance. \"She's got a great arse, hasn't she? No, don't worry, the girl's not the least bit interested in me. More's the pity.\"\n\nWas that a hint, mentioning Emily's bottom?\n\nBy midnight, Dev and the others had vanished, while Marion and Rachel were insisting that a rather drunken Emily needed an escort home from a young gentleman.\n\n\"I don't need it!\"\n\n\"It would be my pleasure,\" he told her firmly.\n\nShe went a bit pink and giggled. \"Well, in that case...\"\n\n\"Come along, Rachel. You need to get home to that nice girl of yours. I will go to the Tube with you. Brad, bonne chance with your doctorate and we will meet at conferences, ha? Emily, I will leave you and him for the mercy of the 239 bus...\"\n\nRachel merely winked as they left.\n\n\"Okay Emily, which way? This bus stop, or across the road?\"\n\nShe really was quite drunk, but a ten-minute wait followed by the bus's lurching returned her to near-sobriety. \"Here's us. Our flat -- my flat -- is just up there.\" She pointed, keeping a grip on her voice.\n\n\"Come in. Oh!\"\n\nBradley looked round the apartment and guessed the problem. The TV stand lacked a TV, loose cables stuck out from its compartments, shelves above had DVDs at one end but large empty spaces where a hi-fi would have stood. A few other odd gaps in the clutter. Ben had clearly cleared out.\n\nEmily stalked around the small flat methodically. \"Huh. I suppose he hasn't taken anything that was definitely mine. Though he could have said, the bastard.\" She sat down on the sofa, Bradley beside her, and even as she moved to rest her head on his shoulder, she started to cry again.\n\nWithin a moment, though, even as he gingerly out an arm round her, she was back in control. \"Fuck him! Or, y'know, not. He was mostly shit anyway.\" She turned her head to Bradley. \"You'd make sure a woman enjoyed herself, wouldn't you?\"\n\n\"Uh... yeah, sure... I'd try my best!\"\n\n\"Good.\" She said no more, simply leaned forward that bit further so her mouth was upon his.\n\nHe really wasn't going to complain. He managed to put both arms round her and pulled her onto his lap so they could keep the kiss going in comfort.\n\nHe was a good kisser, she decided. Firm, holding her close, enthusiastic, but no drool. She could keep doing this... but given this was their only night, she didn't want just this. She tugged at his shirt, loosening it from his trousers; he reciprocated.\n\nSome time later, she pulled her head away. \"We're both adults, right? We want to fuck, I've got condoms, lube if we want, let's get to bed, yeah?\"\n\n\"Hell, yeah. You're stunning and lovely and I want whatever you're offering!\" With her long hair swinging over her shoulder, lacy bra exposing a deep cleavage he longed to put his hand in, such words coming out of her mouth, she was the sexiest thing he'd ever seen.\n\nShe seemed thoughtful as she nodded. \"Good. A drink? Got most spirits -- oh, no, I fucking don't have most spirits because that fucking bastard has gone off with most of them! Bailey's or Bushmill's? Or tea, instant coffee, water... I'll have a tea, myself -- I don't want to fall asleep, now, do I?\" Emily grinned coquettishly as she skipped to the kitchenette, breasts bouncing in her bra, her ass in practical cotton panties being muscular enough not to bounce at all.\n\n\"Hey, can I get some water?\" He was thirsty after all.\n\n\"Coming right up, mate. See you in the bedroom.\"\n\nHe didn't need a map to find the bedroom -- it was the only other room that wasn't the cramped bathroom. One wall was mirrored floor-to-ceiling closet, both halves' doors ajar, one half completely empty. \n\nAt least Ben didn't seem to have damaged anything of Emily's, apart from her confidence.\n\nBradley vowed to boost that in any way he could. It wasn't like he'd be suffering at all. It certainly wouldn't be lying to say she was both hot and amazing.\n\n\"You're beautiful,\" he told her as she came into the room, somehow made sexier by the non-matching underwear she clearly hadn't expected anyone to see when she'd thrown clothes on that morning. She only went slightly pink that time, and gestured towards him, reclining on the bed in his jersey shorts.\n\n\"You're not bad yourself,\" she said, and he recognised, now, that British understatement that meant a great compliment. She set her tea down. \"Come here.\"\n\nMaking out with a gorgeous girl in lingerie, on her large double bed! Always amazing, but this time, after twenty-nine days of celibacy... He had kept count.\n\nOh, yeah. He rutted his stiff cock against the fabric of her briefs, soft gentle cloth over his increasing excitement. And she was equally up for it, rubbing back against him, reaching to grip his buns, gasping as they coordinated over the right spot, then she moved one of his hands to her bra strap in a clear signal she wanted it removed.\n\nHe obliged her immediately, casting aside the obstacle and putting his mouth over one of those adorable little pink nipples, sucking in the whole area. Two perfect pert breasts pointing at him. He squeezed the other gently, and when he got no complaint, moved to delicately pinch the nipple.\n\n\"Aah...\" A happy, if sleepy, gasp. And a stunning smile. Good start.\n\nMoving his mouth to that tit, he reached down. Those panties were in the way.\n\nThose panties were also suddenly damp in the crotch. Knowing he'd made her wet there got him even harder than he had been.\n\nHe pushed them down all around, she wriggled against the sheet, and soon her pussy was exposed. She reached to push the cloth below her knees and extracted one leg, opening her thighs wide.\n\nIt wasn't anything to do with making a good impression, now. Bradley saw that pussy, saw lips glistening with moisture, a neatly-trimmed triangle of short curls above, and just had to shove his face in it.\n\nHis hands wrapped round her legs, fingers pressing up into that softness of each thigh, and he vowed to give the best lick-out of a woman of his entire life.\n\nThat heady rich scent was all round his face, the moist sneaky wrinkles of her cunt all round his mouth and nose, oozing glistening tasty juices all over, slowly opening to admit his tongue inside various shadowy grey folds. He sucked upon some sensitive skin while she moaned, in clearly a good way.\n\nThe dampness on the tip of his nose reminded him of what she might really want, and he raised his head a couple inches, then wriggled her below him slightly so he could land his mouth over the right point.\n\nAt first, she tensed slightly. He applied more spit, lubricating the area, and then it emerged -- her beautiful sensitive clit, rising up between his lips to be squeezed and slurped and loved.\n\nHe wouldn't call himself any expert on oral sex, but by God he was going to be an enthusiastic amateur! Emily was squirming under him, now, moaning and even emitting low screams, but under those was a constant undertone, \"don't stop don't stop please don't stop oh please...\"\n\nBradley was not going to stop.\n\nNot until she'd screamed and jerked all her limbs as he'd hung onto this amazing bucking bronco ride and collapsed, panting, before she managed her usual voice to whisper, \"that's enough...\"\n\nHe lifted his head to smile; she did the same without lifting.\n\n\"Oh, that was so good! But now... do you want a blow-job or get straight to the fucking?\"\n\nThat sweet, kind voice, in what he'd learned was an English accent, not a British one, and a South-Eastern one at that, sounding so high-class even though she had assured him it wasn't -- saying such things -- it did things to him.\n\nHe gripped the base of his cock before it could lose control. \"Oh fuck... fucking, please... Whatever you want, like you said...\"\n\nThat thoughtful look crossed her face again.\n\n\"One moment. I'll be back in a sec.\"\n\nShe needed to use the bathroom, he guessed. Bradley stroked himself up and down, all slow and gentle, wanting to neither get too near the edge nor too nervous to stay hard.\n\nWhen Emily returned, a stunning nude, his cock leapt out of his hand of its own accord.\n\nShe saw, and smiled. \"Hi there, gorgeous.\" Suddenly, she seemed nervous.\n\n\"Hey, honey. You okay?\" He wanted to reassure her, for her sake, he realised, not just because he wanted his cock in her. Maybe he'd make it to Heaven after all. \"I'm not going to hurt you or nothing.\"\n\n\"No, no, I'm not worried about that. Just...\"\n\nShe was worried about something, for sure.\n\n\"It's okay, Emily! We don't have to... Just do what you want! Whatever you want, is fine by me.\"\n\nHe knew they were the right words, but fuck, if he didn't get off, he would be having to get his rocks off in the bathroom immediately and probably be jerking off during most of his flight...\n\nShe seemed to make a decision, lips pressed tight. She opened her mouth, inhaled, then spoke fast. \"Thing is, I really want you to fuck me, right, but I just got my period, and it wouldn't be good, so...\" She lowered her eyes and stopped meeting his gaze.\n\nAfter an eternal silent second, she murmured, even quicker, \"so would you mind fucking me up the arse instead?\"\n\nShe raised an eyebrow. All scared, he realised, and he bounced across the bed to get his arms back to hugging her.\n\nHe had to check. This was his fantasy. He was pretty drunk. She wasn't exactly sober. \"Emily, let me double check I heard that right. You'd like me to fuck you in the ass?\"\n\nShe gave the tiniest nod, face scarlet. \"But only if you want to.\"\n\n\"Well duh! I'm a guy, I've seen your ass... Of course I want to!\"\n\n\"Really?\"\n\n\"Yeah! Hell, yeah...\"\n\n\"You... you don't mind anal sex?\"\n\nHe wasn't sure why she was so scared -- though anal was supposed to hurt the girl a bit, maybe that was it?\n\n\"You don't have to, you know. You had condoms, right?\"\n\n\"But I want to,\" she pouted. \"Still with a condom, though.\"\n\n\"Uh-huh. If you'd love to, I'd love to.\" She seemed much more at ease, suddenly. He had to say. \"Only one thing -- I've never done it before.\"\n\n\"Sex?\"\n\n\"No! I've had sex... Just not... never anal. Never met a willing girl.\"\n\nShe rubbed an eye. Was that a tear? \"Hey, I'm all willing! All right? Just it's so much harder than you might think, to find a man who actually wants to do it!\"\n\n\"Are you serious?\"\n\nShe sniffed. \"Yeah, sadly. They all make jokes about it, some will try once, but finding a guy who really wants to... Most of them just kind of push away, or get limp. I suppose, if you've never...\"\n\nHe couldn't bear that sad voice. \"Em, darling! I know I've never done it, but if you knew how much I'd thought about it... especially once I'd seen you in those tight pants this morning, your cute little butt just begging for it... Please, can I?\"\n\n\"Oh, bloody hell! Why didn't I ditch Ben a month earlier?\"\n\n\"He... wouldn't?\"\n\n\"He did. Twice. But always acting like he was picking up dog shit, or something the cat brought in. He said... he said I was a sick slut...\"\n\n\"Oh, Em!\"\n\nBradley took her in his arms. \"There's nothing wrong with wanting it in the ass! I mean, I don't think so. Not that I want anything in my ass, but yours... man, your ass is awesome!\"\n\n\"We can be sick sluts together, you reckon?\" A wry tone.\n\n\"Hey, if you wanna be a slut for me...\"\n\n\"Then you can be a slut-boy for me? I can work with that.\" She looked down at Bradley's rock-hard dick, laid her hand on it. \"You'd like that great thick cock up my arse?\"\n\nHe was going to get hard every time he heard an English girl say 'arse' in future, he knew it.\n\n\"Oh please, yeah... please let me fuck your ass, I'll be so good to it...\"\n\nSuddenly all her anxiety vanished, and the beautiful English rose Emily transformed with a simple grin into the sexiest siren he'd ever seen.\n\n\"Come here, and play with my arse. Get your fingers in! God, this is so hot -- an anal virgin gagging for it! You really want my tight little hole?\"\n\n\"God, yes! I've wanted a woman's ass for years! But like I said, I never found one who wanted it.\"\n\n\"Until now.\"\n\n\"Until now,\" he agreed, leakingly desperate to give it a try.\n\n\"Mmm... Let's just check you're ready to sodomise me, all hard and up for doing filthy, disgusting stuff.\"\n\nHer cheeky grin made clear that she wasn't disgusted at all, just getting off on the words. Exorcising that Ben with every one.",
        "Emily came forward on her knees, met his eyes, then sank her mouth down over his cock.\n\nHe could never compare blow jobs he received. The most recent was always the best, but he would swear this innocent-looking English woman going down on him really had to be the best ever. Above her head, he could look along her back and watch her butt rocking, as she sucked him off.\n\nOh man, he was in heaven, just staring alternately at that butt and that face!\n\nHe felt his balls clench. He couldn't decide whether coming in her mouth would be the best thing ever, or a bitter disappointment as then they'd have to wait before he could get to her ass.\n\nShe'd pre-empted him, squeezing his base harshly so he groaned, dragged away from the edge.\n\n\"Don't want you too carried away,\" she informed him sweetly.\n\n\"I could get hard again,\" he moaned, frustrated.\n\n\"I'm sure you would. But I haven't had anyone fuck me up the bum in over a year, and I'm not waiting any longer!\" She did that barely-restrained hysterical grin again. \"Don't worry, we can wash you off and I can finish sucking you after...\"\n\nIt was just as well she was still gripping his base so firmly.\n\nShe rummaged in a drawer of the cluttered nightstand, clearly 'her' side of the bed as 'his' was empty. Plastic pump bottle dumped on the bed, various squares scattered by it.\n\nEmily pulled herself to the head of the bed and lay back, her legs wide, that wonderful pussy on full display, and, below it, a dark shadow promising amazing mysterious delights.\n\nBradley flipped himself into his front and put his face back between her thighs to closely examine what he was being offered.\n\n\"Come on! Play with me!\"\n\n\"Play with what? You've got me spoiled for choice, ma'am!\" If she could tease him, he could tease too.\n\n\"Get some lube on my arsehole now, and bloody play with it!\"\n\n\"Ohhh...\" He faked dumb. He got a blob of the gloopy lubricant on one finger and brought it to an inch from her hole.\n\n\"Go on!\" She tried to lift her groin up to him, but he held her in place with both forearms.\n\n\"All in good time, honey,\" he admonished. He lowered his chin to the sheet and gazed at the darker skin all round her hole, goose-flesh making it a fascinating texture. At the center, that tiny wrinkled brown ring, so tight but so stretchy -- or so he'd been told.\n\nIn awe at his first welcoming asshole, he tentatively stuck out his tongue and took a delicate lick.\n\n\"Oh, my god,\" Emily breathed. \"More!\"\n\nBradley tugged her body down closer to his face and applied his tongue again. It was a strange taste, sort of familiar from going down on women, but with a hint of meaty oiliness and soap scent that was all new but not unpleasant.\n\nEmily's small squeaks of pleasure were far from unpleasant either, but he figured she was gagging for more just like he was. More of that goo on his finger -- two fingers -- and now, time to penetrate a woman's ass.\n\nHer ring seemed to open easily to let in his sticky finger, so he was surprised by how tightly it then clung onto him. He actually needed force to move his forefinger at all. Would his cock actually fit?\n\n\"Come on, another one,\" she pleaded.\n\nIf that what she wanted, and she thought it would fit...\n\nHe added more slick to his middle finger, pulled the first most of the way out, was somewhat relieved to see it looked clean, then tried to wriggle both fingers together into Emily's ass.\n\nIt was like a portal flickered into existence for a microsecond, just long enough to swallow his fingers. He could move them, just, but all her flesh held him in place. Like the heavy weighted blanket his young cousin had. He bent both digits, and Emily made a soft keening noise, the sexiest sound he'd heard in months.\n\nUnlike watching porn, he knew, 100%, Emily really was loving it. Loving him in her ass.\n\n\"Please, fuck me,\" she whimpered.\n\nHe swung his cock to his fingers, and compared the widths.\n\n\"Not yet, baby. Another finger, then you'll be ready.\"\n\nHe had no idea, really -- if she thought she could taken his cock now she was probably right, having the experience, but stretching her as wide as his cock before applying that blunt instrument seemed wise. It was hardly like she was suffering during the wait.\n\nOkay, she might be muttering under her breath about exquisite torture and calling him a fucking bastard, but that was in a good way, right?\n\nHe considered his ring finger, then went for a different plan. One fat thumb could press lovingly inside her. Emily's arched back and groan made it clear that that hit some good spot.\n\nThen he pressed his other thumb to join in. And then spread his thumbs apart.\n\n\"Oh!\" That was a scream. A good one.\n\nWhen he blew gently in between his thumbs, the pitch of her squealing went ultrasonic.\n\n\"You sure are an ass slut, aren't you girl? I can't blame you. What an awesome asshole, all sweet and wanting to play. Yeah, baby?\"\n\nShe seemed semi-conscious, murmuring to the ceiling, \"yeah, I'm an ass slut, a great big ass slut...\"\n\nThe 'ass' sounded odd from her mouth, but he couldn't say 'arse' with a straight face to suggest she say that instead. \"Hell yeah, the most beautiful wonderful ass slut in England! And a great big beautiful asshole.\" A last check that she was sober enough to know what she was doing, despite all his distraction. \"You want that wonderful asshole filled with my cock, honey?\"\n\n\"Fuck, yeah.\"\n\n\"Come on, tell me what you want. Do you want my dick?\"\n\nA smile across the unfocused face.\n\n\"Hell yeah. Your cock in my tight wee arsehole, you gripping my arse... Just fucking do it now!\"\n\nShe'd shouted at him, gentle sweet Emily. She'd become her alter ego superhero, awesome ass-slut Emily...\n\nOnly one thing to do. Get his cock clad in a condom, slicked up with her silicon lube, and do what she demanded.\n\nHer gaze was focused again, now, on his cock.\n\nHe was ready. Would it live up to expectations?\n\nBradley had no idea if he'd prefer anal to pussy, but was sure this was going to be good.\n\n\"Are you ready?\" she asked him.\n\n\"Yes. You? Tell me what you want, how to do it... How do you like it?\"\n\n\"Just slide forward. Oh yeah, feel that, the end of your cock on my hole?\" She wriggled, and as ever, he loved his cock-tip getting attention. Any touch from anything not his own hand.\n\n\"Good, right,\" she told him. \"And I'm all wet and slippery for you. So, just push gently, one, two, and go...\"\n\nOnce more, her hole had magically stretched, to allow a good inch of his cock inside, now with her walls holding him tight. It was... so intimate, her body accepting yet controlling him.\n\n\"Don't get too excited yet, she warned. Now, just keep rocking,. pushing maybe half an inch more... Slowly! Slowly does it, little more...\"\n\nShe rocked on him, gasping, every few seconds somehow gaping wider for him to slide further. The frill of flesh surrounding him was now stretched, not wrinkled as it had been, and the fact that that tiny ring was changed beyond recognition by his cock seemed totally obscene.\n\nSick, twisted, disgusting, perverted, and totally, utterly wonderful.\n\n\"Oh god,\" Emily moaned, thrusting herself up against him, desperate to fill her arsehole with his meaty prick. \"More! Shove it in!\"\n\nCautiously, he pushed himself in further.\n\nThat feeling, that slide as his cock slipped between tight muscle... that was what he'd dreamed of for so long, only better, smoother, a stronger hold...\n\n\"Oh yeah!\"\n\nHe watched Emily's face, normally so polite, almost impassive, now red and panting, and she was begging him.\n\n\"Please, just fuck me? Hard?\"\n\nThere was no man on earth who could resist that. No matter how delightful the slow slipping inside her was, his cock responded instantly, bypassing any brain function.\n\nWith Emily's knees bent up and hugged to his chest, Bradley stepped up and rocked himself happily against her, his balls tapping the base of her ass cheeks and air wafting over them, his entire length held firm in her wonderful ass, his eyes flicking from Emily's delighted face to her lovely tits, all beautiful.\n\nShe moaned more intently. \"Braaad...\" went the groan, all beyond her control.\n\nAnd that was it. He couldn't help it, coming harder than he had in years, thrusting deep inside this perfect place.\n\nHe felt more aftershocks than usual, her spasms round him triggering more of his own, and all he could say was, \"Emily...\"\n\nHe collapsed in sweat upon her. There was a minute of silence.\n\nThen she made a small giggle under him. \"Mmm. So good. Was that good for you?\n\n\"Uh, what? Yeah!\"\n\n\"Just checking. Was it 'OK but now you've done it once, you'll stick to cunt, thanks very much'?\n\nHe shook his head, feeling still spellbound, and more so when she carefully removed his rubber, careful not to spill it en route to the wastebasket under the bed.\n\n\"No, that was... Awesome. Just awesome, in every sense.\" He knew she'd understand. \"I was just thinking, I'd be happy to do that again, any time.\"\n\n\"Really?\" He did love her smile. \"How long until you're hard again?\"\n\nHe shrugged. \"Who knows? With this kind of incentive, ten, twenty minutes rather than half an hour?\"\n\n\"I'll see if I can speed it up,\" she offered. Because,\" - that was a blush again - \"I have this desperate urge to be on all fours, offering my arse up to a great big cock, like a bloody great slut, and you're the only one who can help!\"\n\n\"Oh no! Well ma'am, take it from me: you are a bloody great slut, and your ass is first in line when I'm ready for any plowing... Literally bloody, I suppose. They say orgasm helps with period cramps -- are you feeling better now?\"\n\nShe seemed confused a moment. \"Oh, that. Worked a charm. I couldn't feel better! Not until you start ramming me, that is...\"\n\n\"You know, I'd started to wonder if girls who liked anal were just a myth, you know, some would go along with it, but the screaming enjoyment was just something you see in porn...\"\n\n\"Nuh-uh. I know some others. We've all bemoaned the lack of interest from most menfolk.\"\n\n\"That's just tragic. Well, if they're going to be at Cell Sciences in Vegas in October, let me know.\"\n\n\"I might. If you're nice to me. You look like you could be very nice to me, right now.\" She meant, he was hard again.\n\n\"Porn star dialogue? Okay, turn over, ass slut. He could tell they were both creating new associations -- ass-ociations? - for the word in her mind. He'd always liked the word, but now he suspected just hearing someone whisper 'I'm a slut' in his ear would leave him hard and aching.\n\nSuch a great butt! Smooth, soft ass-cheeks... He rubbed his hands and face over them, then down her crack, then pulled her cheeks apart.\n\nIf only he had a third hand to hold a camera! Ah well, other assholes were on the internet and looked similar. What made this one special was it was desperate to be fucked.\n\nBy him.\n\nRight now.\n\nShe was still all sticky from their previous round, but he squirted generous amounts of lube to be on the safe side, all down the allegedly-lubricated condom. Everything he'd ever heard said not to skimp on that.\n\nShe gasped, and wiggled happily, those two round globes up in the air as sexy as all get-out. He'd be a fool not to give her what she craved.\n\nTwo fingers, straight in that slightly-stretched pucker, making her gasp and pant.\n\n\"Yeah! Now, do it! Fuck me up the arse!\"\n\nIt was what she wanted.\n\nIt was what he wanted.\n\nBradley thrust into Emily's ass. Arse. Whatever.\n\nThis time, they were both shouting and gasping in pleasure. He was balls-deep in a beautiful sexy woman, who was pushing herself into him, gasping about how good he was. She was so tight, so hot, all around him. Her round butt rubbed against him. He could hardly move with the way her glorious asshole was gripping him. The alcohol seemed to return to his head as everything floated again.\n\nHe came with a yell, then collapsed on top of her. \n\nHe fell asleep.\n\nBradley awoke, suddenly terrified he'd missed his flight and lost his life's savings.\n\n\"Hey there. It's only been, like, five minutes. You OK? Here's your water.\"\n\nHe drank, gratefully. \"Man, that was so good!\" They both knew he wasn't talking about the water.\n\n\"Wasn't it.\" She scoffed. \"I really should have listened to Rach and Marion and dumped the patronising bastard earlier. We could have been doing this all month!\"\n\nBradley thought of his many solitary jerks off, and sighed.\n\n\"On the other hand, I'd have been distracted from my work and might not have got those results. So I rather have to take it.\"\n\n\"I suppose.\"\n\nShe glanced sneakily at him. \"The night is yet young.\"\n\nHe could see her digital clock. \"It's gone two a.m.!\"\n\n\"So? It's the weekend, and all you're doing later is sitting on a plane. Might as well stay up now and sleep then.\"\n\nHe chuckled. \"I cannot refute your argument, ma'am. Did you have anything in mind?\"\n\n\"A few. A whiskey, a shower. Sucking you off...\"\n\n\"If you insist. I could cope, I'm sure.\"\n\n\"Good. Then -- might need to wait til morning -- I bet you'd feel great in my cunt...\"\n\nHe hesitated. \"I guess. I could. Didn't you just start bleeding, though?\"\n\nHe wasn't expecting to see her blush again. Maybe she liked it, blood and stuff everywhere? It was her bed, after all; he could oblige if she really wanted...\n\n\"Ah. I have a small confession to make. Er... right... Sorry. I didn't have my period at all. I just really, really wanted to be fucked up the arse...\"\n\nThe implications of this slowly percolated through his tired mind. \"Uh huh. Guess that Ben was right on one thing, then. You really are a sick ass slut.\"\n\nThen he whispered in her ear, \"that's sick as in really good, like the kids say, and slut in a really, really good way...\"\n\nEmily grinned back at him. \"Yeah. And like we say about the Yanks, over-paid, over-sexed and over here -- none of which are bad...\"\n\nHe sighed. \"How many times do I have to tell you, I'm not a 'Yank' any more than your Welsh friend is English?\"\n\n\"I know. I'm just 'yanking' your chain... and just be glad I'm not calling you a Seppo. Come on! Septic tank, Yank...\"\n\nBradley was not going to miss rhyming slang, most of which he swore was made up on the spur of the moment just to confuse visiting Americans. \"You know, that great ass of yours might look even better spanked red...\"\n\n\"Promises, promises,\" she simpered, as erotic as any fake student in a porno. \"Shower first?\"\n\nThey had the shower together, and the whiskey, and he fell asleep as soon as he came in her mouth, but they made up for it in the morning. He was amazed she could walk after what she'd got him to do to her. He was exhausted, despite his pride in how many times she'd managed to coax his cock back into action. She went with him in the cab to the airport, 'to make sure he didn't fall asleep,' she said.\n\nHe thought of something. \"Those results of yours. They'd be worth presenting at Cell Sciences, wouldn't they?\"\n\nEmily nodded. \"I'll submit an abstract next week. Verity thinks I should be able to get at least a slot for a poster presentation. Assuming I've submitted my thesis by then, I should be eligible for funding for the travel.\"\n\n\"Okay. I mean, don't save yourself or anything, but... it would be good to see you in Vegas?\"\n\nShe gave him a goodbye hug. \"Yeah. You too. Of course, 'what happens in Vegas, stays in Vegas'!\"\n\nBradley smirked and waved as he departed for his flight."
    ],
    "authorname": "Kumquatqueen",
    "tags": [
        "anal",
        "anal sex",
        "rimming",
        "anal fingering",
        "cunnilingus",
        "drunk sex",
        "rebound sex",
        "one night stand",
        "british",
        "transatlantic"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/i-say-ass-you-say-arse"
}