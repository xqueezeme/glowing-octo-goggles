{
    "title": "Road Trip Pt. 05",
    "pages": [
        "... continuing from the previous chapters ...\n\n<p align=\"center\">Chapter 22\n\nTexas</p>\n\nCrystal bounded into the living room of the suite I'd found reserved for us at the Four Seasons when I arrived the evening before; she launched herself into my arms. I caught her without falling over, and we hugged and kissed each other over and over. Behind her, a hotel bellhop slowly removed her luggage and one of her guitars from a cart, piling up things in one corner of the spacious living room.\n\nAs I hugged her, I told Crystal, \"I have missed you so. Somehow, we've got to see each other more often than every few weeks. I think we've even been lucky so far with our schedules.\"\n\nCrystal kissed me passionately, \"Me too. We need to figure out a way to be famous and for you to take the rest of your road trip. We'll talk about it later, after I fuck your brains out.\"\n\nThe bellhop looked highly interested at Crystal's words, but dutifully stood by the luggage and his empty cart trying to keep his gaze off of us as we fawned over each other. Finally, I took the hint. I pulled a twenty from my wallet and gave it to him. I got a big smile, and he backed out of the room clearly hoping to catch another scene of us kissing before he pulled the door closed. \n\nCrystal turned to me and said, \"Come and make love to me. Before we do another thing, I have wanted you physically and spiritually and in every other way I could think of since we left Branson.\" She tugged me to the bedroom that opened onto the living room, and that I had obviously used the night before. Another bedroom also shared the space on the other side of the suite. Did someone foolishly think we'd sleep apart? We were known in the press to be an 'item' ever since the day I first met Crystal.\n\nI helped Crystal dispose of her boots and clothing. Just for kicks, she put her western boots back on and posed for me in front of the fake fireplace in the room. I took her picture with my cell phone - a little memento for our next time apart.\n\nI then pulled Crystal to the middle of the bed, we knelt, and I made oral love to her breasts for a while. As I did, Crystal started to undress me with a sense of urgency. I quickly stripped the rest of my clothing off, and in seconds, my cock was embedded deep inside Crystal's warmth. I thought how l felt loved and at 'home' with Crystal, even though I felt homeless and a vagabond during my road trip. Home was being with someone I loved.\n\nWe were eager, impatient even, to bring each other pleasure. Remarkably, we restrained ourselves and played for over an hour, each of us occasionally enjoying an orgasm, until I decided to do a 'big cum' into her folds. We synchronized our peaks, and so Crystal went to her heaven as I went to mine and left my essence inside her.\n\nAfter we had floated down to a more normal physiological state, Crystal pushed me off and sucked me clean. As she finished, she kissed the tip of my penis. She asked, \"And how many pussies has Mr. Happy been in since we last fucked? You had a typo in your email about Oklahoma; it made me laugh - you said you fucked thirty-five women. What was it, three or five?\" She laughed, and started to masturbate me. I responded well to her ministrations.\n\nI grinned at her and said, \"Nope, that wasn't a typo.\"\n\nCrystal's jaw dropped open. She said, \"Surely, you jest.\" She jabbed me in the ribs, \"Come on, give! Details!\" She asked, \"What'd you do, fuck a whole sorority?\" She laughed, and I took that as a good sign, or at least a sign that my ass wasn't grass for getting deep into my 'man slut' role again and fucking so many women - most in one night.\n\nI told her, \"No, just most of debutantes at a party in Oklahoma celebrating their coming out, plus a few others - alumni of similar parties in past years.\"\n\nCrystal was smiling now. \"Oh, great! Now, you'd better tell me all the hot, erotic details.\"\n\nI spent a half hour telling her about the Fine Arts Ball, Heather, the debutantes, the alumni, and the orgy they had after the formal ball. I described particularly the round robin fuck sessions in some of the hotel rooms, and told her that was how I'd built up my 'numbers.' As we talked, the two of us enjoyed a slow fuck.\n\nAfter that, I passed along more details about my visit to Jed's home in Iowa, and being with Sally, Gail, Lena, Nicky, and Camille. I shared a few new points about Brite, the photographer in Minnesota, plus Mitch and Ashley's wedding pictures - and about the foursome we shared.\"\n\nCrystal said, \"And then you went to the Dakotas, and ran into that tornado?\"\n\nI reminded her about my 'concert' and one-night stand with Shaye, the few days with Mils and Connie, and then Midge in Kansas.\n\nCrystal suddenly said with surprise, \"Hey, you mean you didn't get laid in Nebraska?\"\n\n\"Nope,\" I shook my head.\n\nShe punched me. \"Well, you are really slacking off. You missed a state. You'd better not do that again. I have high expectations for you, Lover.\" She laughed, but pumped her hips into my groin a few times, each thrust burying my dick deeper and deeper into her already sodden pussy.\n\nCrystal gave me a shy look, and then began telling me about how she had sex with two guys at a bar she worked at before she became famous, detailing how she got seduced, how she got past the idea there were two guys, and then the pleasures they showered on her body for eight hours until they all had to sleep from exhaustion.\n\n<p align=\"center\">* * * * *</p>\n\nHours later, Crystal and I sat in the large living room of the suite. We'd dressed, and she wore her western boots, the shortest Daisy Duke shorts in the world, and a loose man's shirt tied in a knot beneath her breasts. My God, she looked sexy. I tried to concentrate on something other than sex as she talked, and that after nearly three hours of non-stop sex.\n\nCrystal told me what she knew about the half-time concert we were to give on Sunday to eighty thousand Dallas Cowboys fans crowded into Cowboy Stadium. My knees shook, and my stomach knotted over the crowd size and the potential for embarrassing myself. She told me the band had arrived and were staying closer to the stadium, because they'd reserved a special room at their hotel to rehearse - something about perfect acoustics. Terry and Ellen were due the next day, and that they would be occupying the other bedroom in our suite.\n\nCrystal and I were the half-time entertainment, singing our two hits and a medley of other country music songs. As the first half ended and the teams left the field, the stadium crew would race into action, creating a stage on the field in fewer than two minutes. Band instruments, props, and lights would be added, plus a large stairway. Crystal's band would take their places and launch into the opening bars of 'Flirty, Flirty Cowgirl,'  Crystal's big hit, that still held onto a place in the Top Ten. Crystal and I would arrive at the stage seconds behind the band; she'd sing most of that hit, and then we'd segue into  'Texas Dawn.'  We'd perform all of that song, and then do the medley - something that we'd have to spend some time rehearsing. We had to pick what we'd do before Friday, so everyone connected with the show would know - us, the band, the stage crew, the lighting crew, sound crew, and on and on. As we finished, there'd be fireworks over the stadium, Crystal and I would wave and race off stage, followed by the band members. The roadies would strip away the instruments, amps, and stage, and the second half of the football game would start exactly thirty minutes after the first half ended. \n\nWe ran through the schedule a couple of times, talking our way through the steps we'd go through until we'd internalized what the twenty-six-minute halftime would be like for us.\n\nCrystal said, \"What songs should we do in the medley after our openers? What would you like to sing?\"\n\nI went to one of my saddlebags from the motorcycle, and pulled out my laptop and some crumpled pieces of paper that had somehow managed to survive through the tornado in Kansas.\n\nI turned to Crystal, \"I've been writing music in my spare time. I don't know whether it's any good, but I'd love to play it for you. I think it'd be a good duet. It'd need a few words of introduction in the stadium, particularly since no one would have heard it before and the song has a real American Indian flavor to it. If you don't like it, I can save it for something I do alone some other time.\"\n\nCrystal urged me to sing the song so she could see what it was all about. I picked up my small travel guitar, adjusted the strings, and then started in on the song I'd written,  'The Wolf On Lone Wolf Mountain' starting with the chorus: \"There's a wolf on Lone Wolf Mountain, Keeps me awake most every night. He leads me along the paths, To places I need to go.\"\n\nCrystal seemed spellbound during my short song. When it was over, she came and kissed me in a very tender way. \"Jim, you have talent at this. I love it. May I sing this with you?\"\n\nI nodded and said, \"That was my hope. You mean you like it?\"\n\nCrystal kissed me and said, \"Absolutely. It's great, and about time we got some Native American flavor to some of our repertoire.\" \n\nWe messed around with the song for an hour, changed the key as well as few words and notes so we could blend our voice better as we sang. Our duet sounded better and better. We agreed we should get other opinions, for instance from Terry, about the song.\n\n<p align=\"center\">* * * * *</p>\n\nThursday morning, Crystal and I rode my motorcycle to Cowboy Stadium for a rehearsal and to familiarize us with the set and surroundings. She knew that a dry run for the set up crew had been scheduled for ten o'clock. Crystal and I seemed unusually bubbly and excited about the day, a point I chalked up to us being together again.\n\nStadium security let us ride the Harley right into the arena, with the admonition to stay off the playing surface. I parked at the end of the tunnel just at the edge of the field. A few Dallas Cowboy players were warming up, loosely running plays without any hard physical contact. \n\nA golf cart came down the sideline at us as we walked towards the fifty-yard line. I broke into a smile as I recognized one of the two people in the cart - Tina Devoe, a woman I'd given a first-class sexual massage to at a spa in Michigan about two months earlier. She got out of the cart with an older man who I didn't know. As introductions were made Tina gave me a lip lock and kiss that melted some of the Astroturf around the two of us. Just before we parted, Tina whispered in my ear, \"I want us to get together while we're here - and you know what I mean!\" Just the thought of that activity gave me a twinge in my nether region.\n\nCrystal looked amused. Tina was about fifty, looked thirty, oozed sex appeal, and had a body movie stars would die for. I noticed some of the crew and band members leering at her. She wore tight jeans that left little to the imagination, spike heels - my favorite, and a designer top that had apparently been designed to reveal almost all of the wearer's generous tits. Tina had generous tits; I knew firsthand - I'd massaged them until Tina had an orgasm.\n\nAs our kiss broke, Crystal grinned and said, \"I knew you guys would like to see each other again. This is a treat to meet one of your Michigan 'acquaintances.'\"\n\nSince I'd met her, we'd discovered that Tina Devoe had a job 'high up' in Sony Entertainment. I wasn't sure what that meant, but I suspected she'd fast-tracked the release of my music album entitled  'Road Trip' from Sony music. The album had been available online and in stores for a couple of weeks. Tina congratulated me on my album breaking into the top ten in that short time period, something I didn't know. Some duets with Crystal were also on the album.\n\nAlan Roswell, the gentleman who had ridden up with Tina, turned out to be responsible for the half-time entertainment on behalf of the Dallas Cowboys, who managed the stadium for the City of Arlington - the stadium owners. About sixty years of age, he wore glasses with coke bottle lenses and sported a short gray ponytail. I thought he might be gay, since - unlike every other male in sight - he displayed little interest in either Tina or Crystal's hot bodies.\n\nAlan walked us through his expectations for the halftime show, a description that meshed perfectly with what Crystal had told me the previous afternoon. He'd called for a dry run by the roadies and some of our band members so they could assess the set up of the mid-field stage and all that went into having the show ready to launch in a matter of seconds after the game stopped at half time.\n\nAbout that time, twenty young men and women between the ages of twenty and thirty walked out from one of the tunnels giving access to the field. They all wore silver t-shirts with the blue Cowboy's star and the word 'Crew' on the back in large letters. Three of the men in the group came over and joined us; Alan informed us they were squad leaders. Alan had a few words with them, and then they started with their rehearsal.\n\nCrystal, Tina, and I watched as the three squads maneuvered several portable platforms in front of the stands, behind where the Cowboys players' bench stood. Alan nodded to them, blew a shrill whistle, started a stopwatch, and the crew went into motion.\n\nSections of the stage poured onto the field from the sidelines. Some were carried, and others were on large dollies. The squads moved at a run. Vertical sections were flipped over, legs dropped, and somehow in seconds a large stage materialized before our eyes. From one of the tunnels a large wide-tired forklift truck appeared carrying an eight-foot square platform with the band's amps, keyboards, and a drum set, ready to play except for the electrical hookups. The platform was set atop part of the newly erected stage, and the forklift folded over and neatly tucked itself beneath the stage. One crewmember brought an electrical cable from the sidelines to the stage and in one single move connected the stage to the stadium for power and sound.\n\nAs the crew ran off the field, a couple of our band members hustled up the newly erected stairs onto the stage, and pulled their instruments into position from the large pallet. Seconds later, I heard the opening bars to  'Flirty, Flirty Cowgirl.'  \n\nBeside us, Alan clicked his watch to a stop, glanced at the dial, and yelled to the sidelines, \"Yes! Wonderful everyone. That took two minutes eight seconds - a record. If you can do this Sunday, we'll all be very happy.\" The crew looked proud, and clearly valued his praise. I saw several give each other high fives.\n\nAlan turned to us and said with a smile, \"OK, get up there. Try it out.\" \n\nCrystal and I ran across the field, up the stairs, and onto the stage. I looked around and nearly froze. Suddenly, I imagined eighty thousand fans yelling and cheering in the stands - looking at me. They were eighty thousand critics. I felt my knees shake again. I wasn't used to this stuff.\n\nCrystal picked up our wireless mics, and handed one to me. She broke into the opening bars of  'Flirty Cowgirl.'  I waited and tried to get into the music. About three minutes later, I heard the band segue to  'Texas Dawn.'  I moved up beside Crystal, and we started the duet. My voice cracked, and the echo around the stadium made me stutter and pause awkwardly. I tried to focus on the music, and things got a little bit better, but it wasn't a stellar performance - Crystal carried the day.\n\nWe took a break in our singing after  'Texas Dawn.'  Crystal insisted to Alan that we both get fitted with a headset that blocked the delayed sound so I could only hear my own voice and not the confusing reverberations in the stadium. I'd worn one like that at the two concerts I'd given a couple of months earlier, and had done all right. Alan made a cell phone call, and in five minutes a young woman came racing across the field with the requisite headsets. \n\nWhile we'd waited for the headset, Crystal and I had walked the band through the music I envisioned for the song I wrote,  'The Wolf on Lone Wolf Mountain.'  As I put the headset on, Clark Reynolds, the lead guitar player, said, \"Hey, let's try this new one, and see how close we can get on it.\" There were a few test cords and transitions the band tinkered with, as I sang a verse here and there without the amplification to give them a taste of the song.\n\nClark flicked a dozen switches on his mixer, and my new headset went 'live'; and the band started the introduction to my song. Crystal and I were both playing acoustic guitars. The two of us sang the new song, and much to everyone's amazement the rendition turned out well given it was the first time through for the band. Some of the crewmembers who had waited for the tear down trial applauded and shouted their appreciation for the song. After that song, Crystal and I did a few others with the band working them into a medley. Gradually, I got used to performing in the large stadium, a luxury I hadn't had at the other two large venues I'd sung at previously. That said, I couldn't imagine what it would be like when it was full of fans.\n\nAlan coached us about how the last song should end, including the pyrotechnics. We ran off the field, and Alan again timed the crew in the tear down activities. The stage disappeared with the same speed it had appeared.\n\nOn the sidelines, Tina cornered the two of us; \"Where'd that song about the wolf come from; I loved it. It touched me in an interesting way - it has roots with Native Americans, yet it's mystic and had a message. I like it.\"\n\nCrystal stood tall, turned to me, and announced to Tina, \"Jim just wrote it. He's got yet another talent we didn't know about.\" Then Crystal looked at Tina and grinned like a proud mother.\n\nTina asked about recording the song so they could release it as a single. I started to answer, and Crystal jumped in and said that our agent, Terry, needed to be in such a discussion. I'd just learned something, so nodded wisely, and Tina apologized for any breach of protocol.\n\nI got interested in part of the sound system and the stage set up, so I wandered around with Alan asking questions. Tina and Crystal seemed to bond quickly, and soon were having a hushed conversation. They frequently looked up and gestured in my direction, often with conspiratorial looks. Twenty minutes later, when I returned to the pair, Crystal said, \"I told Tina I knew all about the massage you'd given her when you met in Michigan. I also told her about some of our sexual games and adventures, and our little adventure with the paparazzi in Missouri and the romp with your sister-in-law. I even told her that you liked fucking my sister almost as much as me.\" She gave me an evil grin, and so did Tina as she joined us. \"We've been comparing notes ... notes about your sexual prowess. Now, doesn't that turn you on?\"\n\nIt did, and I could tell the two of them had made themselves horny too. \n\nAs if the thought had made the individuals materialize, Terry and Ellen walked out of one of the portals onto the field. They saw us, waved, and hustled over to us. I made introductions, going so far as to catch Terry's eye and try to signal to him behind Tina's back that Tina was an important person for us. He remembered that Tina was an executive with Sony Entertainment, and an influential person regarding the promotion of our music.\n\nEllen gave me a sensual kiss and full-frontal hug with hip thrusts. She bluntly whispered in my ear that she wanted some 'cock time' with me. I could feel my erection trying to escape.\n\nAfter the stage tear-down exercise, Alan announced to us that a buffet lunch had been laid out for everyone in one of the sky boxes; he pointed 'up' towards the stratosphere in the stadium.",
        "The eight members of the band, Tina, Terry, Ellen, Crystal, and I followed Alan through the maze of corridors under the stadium to some elevators that whisked us up to the sky boxes. A buffet table had been set up in one of them, and we filed into the attractive wood paneled room for lunch. A row of high stools sat against a counter that looked down on the field for an unparalleled view of every bit of the action. Several sexy 'stewardesses' were in the skybox to help with anything we needed, according to Alan. During the conversation, I learned that the skyboxes are usually corporate rentals: a twenty-year lease with thirty skybox season tickets netted the stadium forty million dollars! My jaw dropped open at the cost.\n\nI watched as Terry and Tina got into deep conversations. Initially, I thought it was about our music and recording new tracks, but then I watched as the two started to place their hands in strategic locations as they talked in increasingly hushed tones. Tina's hand would stroke up Terry's thigh. Terry's fingers stroked up Tina's arm, wandering slightly to the sides of her full breasts. The both looked content at their interactions. Everybody seemed to be getting horny, yet there was work to be done.\n\nWe rehearsed with the band in the afternoon. We felt comfortable with the various songs we chose, started to iron out the transitions in the medley, and took a large step to getting the one I'd written ready for prime time. Alan arranged for drinks and dinner at the Four Seasons. After a long and busy afternoon, we had cocktails and ate outside on the patio at the hotel.\n\nAfter dinner as we left the table, Tina pulled me aside; \"Jim, I'm in that room over there just off the pool, why don't you come by in a few minutes?\" This blatant offer of sex had much appeal. I now had three women who wanted 'cock time,' and I wasn't sure how to respond to Tina's offer, particularly after I knew that Crystal and she had a revealing conversation about our sexual predilections. I had started bumbling my indecisive reply when Crystal appeared at my side. She turned to Tina and said in a low voice to Tina, \"Terry, Ellen, and I are having a little party after the party in our suite; I think you two would really like it. It'd give you and Jim the opportunity to get to really 'connect' with each other again - really well, plus you could share your assets in a group setting. Do you enjoy group settings?\" Crystal winked at Tina.\n\nTina smiled and said, \"Oh, this sounds like so much fun. Let's get started.\"\n\nI offered my arms to Crystal and Tina. We strolled from the large patio to our suite.\n\n<p align=\"center\">* * * * *</p>\n\nTina fit right in with the four of us. We started on the bed with me fucking Tina as Crystal sat on her face and got eaten. Terry and Ellen were in a sixty-nine position next to us in a way so that I could watch Terry eating Ellen's sweet pussy and get whiffs of her sexual smells. They were making all sorts of erotic slurping noises that proved to me that a lot of body fluids were involved in their good sex. Our next 'configuration' involved me deep inside Ellen as she ate Tina's cunt. Terry rammed into Crystal's pussy from behind as she unsuccessfully tried to also eat Tina's twat. Eventually, Crystal succeeded, and at one point, I could also lean over Ellen and tongue Tina's clit along with Crystal. A lot of moaning and groaning went on.\n\nThe living room had a large round table whose top rotated like a Lazy Susan. Terry and I removed the lamp, vase, and magazines from the table, and covered the table with folded blankets to make it a softer surface. Soon we had the three women on their backs on the table with their pussies at the edge. Terry and I stood a few feet apart and sank our dicks into two of the women, initially Crystal and Tina. After a minute, we eyeballed each other and pulled out of the women we were fucking. We rotated the table a third way around. Terry started fucking Ellen, and I sank deep into Crystal. Some giggling and then more serious moans resonated in the room. Whichever woman didn't have a cock in her pussy, started to masturbate. Soon, between the laughs and giggles, the moans started.\n\nAnother minute, and we jerked ourselves from our current fuckmates and rotated the table again. I could then fuck Ellen, and Tina became the benefactor of Terry's generous endowment. Terry and I really started to pound heavily on the women we were fucking. We went longer and shifted again. We kept up the rotation of the table for over twenty minutes. I coached Terry on how to hold off and how to manage the sensations he felt rather than climax.\n\nEach of the women enjoyed a few orgasms as we teased them in our miniature orgy. Eventually, Terry gave me that desperate look of someone who would like to hold off, but can't manage it. He jetted his cum into Crystal's pussy, pulling out after the first blast and coating her pubes with his man juice. Crystal simultaneously frigged her own clit with her fingers, until she joined him in those instants of bliss. The two kissed frantically, betraying not only the obvious lust they felt for each other, but also the deeper feelings and emotions they felt. I felt happy for her.\n\nI went around the table twice more, skipping Crystal. I'd decided that I wanted to fill Ellen with my liquid explosions when they came. I'd missed her, and I wanted to share an orgasm with her, but I also wanted to deliver pleasure to Tina. I started to frig Tina with several fingers, as I fucked Ellen. The friction of Ellen's vagina walls rubbed and massaged the sensitive head of my cock as I pistoned into her body. Soon enough, I reached the same point Terry had been in only moments before. I came in buckets. My first surge of cum went into Ellen's pussy and triggered her orgasm; she jerked and writhed beneath me. Tina started to cum right beside her. I pulled out of Ellen, and my second and subsequent cum surges shot across both Ellen and Tina's bodies leaving a trail of white semen from their pussies to their full breasts.\n\nEllen cooed at me as she came down from her peak. She started to rub my semen into her skin; however, Tina stopped her as she hopped down off the table. \"I want that on my tongue, not rubbed into your skin until it disappears.\" Tina's tongue started lapping, pausing around Ellen's nipples to bring them to a state of high arousal. When Tina got close to Ellen's pussy, Ellen spread her legs and pulled Tina's head to her cunt. Tina's tongue went into high gear. Lapping up my cum became a secondary goal for Tina; she wanted to deliver pleasure to her new sex partner. As Tina hummed, rubbed, stroked, and jammed tongue and fingers into Ellen's cunt, Ellen groaned and jerked and writhed beneath her in heavenly responses to the attention she was receiving.  \n\nTerry and I escorted Crystal back to the bed and got on either side of her, stroking her breasts and cunt, as she rubbed and massaged our flagging cocks. When we'd hardened a bit, she alternated sucking on each of us until Tina and Ellen came over beside us. Ellen sat between me and Crystal. Tina extended a hand to Crystal's snatch, burying her fingers in the diva's hot pussy as her tongue and her other hand assaulted Ellen's twat. I had a close-up view. \n\nCrystal started writhing from all the attention. Terry and my cock hardened back to their full and ready states, thanks to Crystal's oral talents and then the sapphic display of affection next to us. Before either of us could take further action, Crystal said to Terry and me, \"I want you both ... at the same time ... one in each hole. Please, just 'do' me.\"\n\nTina and Ellen moved to an easy chair to watch us: Ellen in Tina's lap, as Tina's fingers sank into the other's cunt. A tube of Astroglide appeared, and Terry applied a generous dose to Crystal's ass. Crystal rose above Terry's rigid pole facing me, and slowly slid down his shaft, ass first. When she bottomed out, she slowly lifted and repeated the process, apparently until it became not only comfortable, but also erotically stimulating and pleasurable to her. I got a smile from her.\n\nAfter two minutes of her anal fuck by Terry, I moved in front of the pair. I put one finger into Crystal's cunt as I thumbed her clit. Through the walls of her peritoneum I could feel Terry's cock slowly moving back and forth in her ass. I shifted forward and sank my cock into Crystal's pussy. Crystal squeaked in pleasure and pulled me deeper into her cunt. I started to fuck her with more deliberate strokes. Terry and I started to alternate strokes of pleasure for her.\n\nCrystal and I kissed, our tongues running wild as they met in each other's mouth. At one point, after a particularly passionate kiss, we pulled apart and used our hands to touch each other's faces. Crystal looked at me with the most adoring eyes, and whispered, \"Jim, I love you.\"\n\nI nodded to her and said, \"Crystal, I love you. You're the love of my life.\" We kissed again, almost dismissive of everything else going on around us and even the other penetration of her body by her friend, lover, agent, and sister's boyfriend. Terry turned her body slightly so his mouth could reach one of Crystal's breasts; he sucked on a tit as we kissed.\n\nI pulled out after a couple of minutes. Ellen took my place, replacing my cock in her sister's pussy with her mouth, tongue, and fingers. Terry continued to ass fuck Crystal as she sat on his lap facing outward; Ellen ate her sister and diddled her clit.\n\nTina gestured for me to bring my cock fresh from Crystal's cunt to her mouth. She sucked me clean, and then gestured that I should fuck her. I did. She told me, \"This time, I want your cum in me. No sharing.\" She paused for a moment. \"James, you are one special man ... and you are a magnificent lover. Very special.\" Her words seemed to carry more import because of her English accent.\n\nI focused on Tina and her pleasure. In turn, she brought me pleasure. I didn't try to prolong our lovemaking session. After Tina had her second orgasm, I waited as I felt her building up to a third. I allowed myself to build up in parallel with her, and as she started to writhe her way into her next orgasm I exploded into her pussy, pulling her with me in her cum. \n\nTerry, Crystal, and Ellen had already collapsed in a mass of bodies. They watched with prurient interest as Tina and I had continued to completion. Now, the two of us lay beside them in repose on the bed. We looked at each other and laughed at our sexually exhausted bodies, sticky with cum, girl juice, and the sweat of hard sexual work.\n\nEllen said, \"That was fucking fantastic, but I need to sleep. I'm exhausted. It's so late.\" \n\nI glanced at the clock on the faux mantle in the room. The clock read one in the morning. I agreed with Ellen. Soon, we all made go to sleep noises.\n\nI learned how inclusive Crystal could be in the next instant; she asked whether Tina wanted to share our bed overnight, sleeping with the two of us. I would have expected Crystal to become possessive and want me to be exclusively by her side. Instead, she wanted to be inclusive, so long as I was happy and, in this case, Tina was happy. \n\nTina joined us. Terry and Ellen slid away to the other bedroom. Only seconds later, everyone was asleep, and I had two nude and sexually sated hot women beside me.\n\n<p align=\"center\">* * * * *</p>\n\nCrystal cranked one eye open and said in a hushed voice, \"What are you doing?\"\n\nI said, \"I'm going for a run, and a meditation. Do you want to come?\"\n\nA long silence ensued as I laced up my running shoes. Soon, I watched the covers move and Crystal's lithe and full-breasted nude body came from under the covers. She stood beside the bed and stretched to the ceiling. I felt my penis swell with interest at her erotic body. I realized in that instant, I could never tire of her body, even as we aged.\n\nCrystal rummaged in her suitcase and produced a jogging suit and sneakers. Just as she finished dressing Tina's head lifted slightly and she looked at us readying to go and exercise. In her strong British accent she said, \"You Yanks are fucking insane.\" Her head fell back to the pillow, and she was gone into dreamland again.\n\nCrystal and I started to run the perimeter of the golf course near the hotel, slowing here and there to watch as the slanted rays of the rising sun first lit a corner of some glade or reflected off the dew on a putting green. Our Nikes were wet with the morning dew.\n\nAt the edge of one beautiful pond, I took a small envelope from my pocket. I opened it and allowed a small amount of Karen's ashes to flow into the slightest of breezes. I silently thanked Karen for being who she was, and now who she was in spirit; I again had a vision of her orchestrating the new relationships I'd forged along my cross-country road trip as well as my new career path. As the ashes floated away, Crystal reached out and tenderly touched my shoulder in a supportive and loving gesture. I reached across my body with my other hand and held her hand there.\n\nAs we turned, I looked at Crystal. She had tears in her eyes. I gave her a puzzled look. She said in a halting voice, \"I hope someday that you'll love me as much as you loved Karen. You are one great guy.\"\n\nI pulled her to me. A ray of sunlight glistened through her gorgeous hair. I said, \"Crystal, I do love you. I can't say it's more or less than I ever had with Karen, but I love you so dearly. You are my home base and my future. I want to be there for you always, and I hope you feel the same way.\"\n\nWe kissed. Crystal was crying and trying to smile simultaneously. She squeaked out, \"I love you\" through her tears and buried her face in my chest. We both cried.\n\nSoon, we pulled ourselves together, and started walking as we held hands. Neither of us spoke, but in those seconds, I felt a new connection with Crystal that hadn't been there before. A hundred yards further on, I said softly, \"This is new ... and different, isn't it?\"\n\nCrystal looked at me and smiled. She said, \"Yes, different ... very different ... and very loving in a really crazy way. We're getting serious ... and I'm glad.\" \n\nWe walked some more, and then she pulled me into a jog and we finished our circuit of the golf links in silence and headed back to the hotel. In that silence, I felt closer to her that I'd ever felt to her before. I could tell she felt the same way.\n\n<p align=\"center\">* * * * *</p>\n\nThe next couple of days were spent in predictable fashion. Crystal and I would get up and exercise, roust out the others, rehearse, eat, fuck, rehearse, fuck some more, eat, and then fuck some more. Tina endeared herself to all of us by being as oversexed as we were. Once, when we got back from our morning runs and an hour in the hotel's exercise room, Tina, Ellen, and Terry were going at it hot and heavy in their bedroom. We joined in after watching their erotic encounter for five minutes, and getting each other heated up after we stripped for our showers in the doorway to their bedroom.\n\nI wondered if the 'old me' would have ever responded to such a situation or the other group activities we enjoyed. Would Karen have ever coaxed me into a group setting? Would I have been jealous or gotten my nose out of joint? Now, such situations, even seeing people I loved involved with other people, didn't upset me in the least so long as they were happy.\n\nRegarding the concert, as long as we were in the suite or the band's practice room, I felt pretty confident about my ability to accompany Crystal, on key, and on tempo, without forgetting the words. The 'eighty thousand fan' reality still bothered me. In jest, Terry told me that the band and all of us were all in that headcount, so the numbers would only be seventy-nine-thousand-nine-hundred-something. That was supposed to make me feel better.\n\nSunday morning arrived, and between our fivesome orgies the day before and my worry over the concert, I didn't feel I'd gotten much sleep. The game was to start at seven-thirty that evening; thus, we'd go 'on stage' around eight-thirty. \n\nEllen and Crystal ran with me in the morning. After showering Tina captured Terry and me, not for sex, but to talk about my next album. I had to laugh at myself because I had misread her intentions. Crystal sat by my side and held my arm in a most loving way. I felt a lot of support and integrity around the table. We talked about a concert tour for me too; I insisted if there were going to be a tour, that Crystal had to be part of the package, and it had to take place after I'd finished my road trip in San Diego, at my sister's home. Crystal liked that idea.\n\nTina also talked about me appearing in a movie of some kind. I laughed aloud at the idea of being a 'Hollywood Actor,' but she seemed serious and told me we'd talk in greater depth once I got to the west coast. \"By then, things will be clearer about what we want to do with you,\" she jested with a lewd smile that clearly showed she had some additional lascivious thoughts about my body.\n\nAfter our meeting, we were standing around. I suggested to Crystal that we take a motorcycle ride. Tina lit up at those words; \"Hey that gives me a great idea for your entrance into the stadium tonight. Would you two be willing to ride your motorcycle in and out of the stadium, maybe with a police escort?\"\n\nI shrugged and said, \"Sure;\" and checked with Crystal to be certain she agreed with my acceptance of the offer.\n\nTina said she'd set up the arrival, and Crystal and I left for a ride.\n\nJust as we got situated on the motorcycle, I glanced up to see a photographer taking our picture with a telephoto lens from about sixty feet away. I mentioned it to Crystal, and so the two of us turned to him and waved. He waved back. As the camera came away from the man's face, I recognized Bart Kenesis, the paparazzo who had almost ruined us with the pictures he took in Branson. \n\nI'd no sooner had that flash of recognition than I heard Crystal behind me say, \"Hey, I'm pretty sure that's the guy that's been stalking me at home.\"\n\nI stopped the engine and started to get off the bike by sliding off in front of Crystal. When I got firmly on the ground, I saw Kenesis running away from us between the parked cars in the lot. He ran into the hotel. There were too many hiding places in there to follow. I did call Terry on my cell phone and alerted him to the presence of our unwanted paparazzi member.\n\n<p align=\"center\">* * * * *</p>\n\nCrystal and I dressed for the concert in the hotel. She'd been told to be perky and sexy. Her answer to that mandate was a pair of Daisy Duke shorts that looked rather tattered, a red-checkered shirt at least two sizes too small, her glittery western boots she usually wore for concerts, and a western cowgirl hat. Crystal had great legs, and most of them showed; no wonder she'd been named the 'Sweetheart of America.' She looked so perky and sexy that I felt a stirring in my loins, but she always did that to me.\n\nWe rode the motorcycle from the hotel to Cowboy Stadium where Crystal's large tour bus had been parked for the past week. Tina, Terry, and Ellen were already there, along with a few aides who launched into our hairstyles and makeup.\n\nI made the mistake of asking why there was such concern about my makeup, since we'd be over a hundred feet from the nearest fans in the stadium. Tina said, \"Oh, that's so you'll show up better in the television close-ups while you're singing - and on the big projection screen in the stadium.\"\n\n\"WHAT TELEVISION CLOSE-UPS,\" I said in a much louder than normal volume. Everyone turned and looked at me with grins on their face. I had forgotten we'd be on TV. Certainly no one had mentioned any close-ups.\n\nTina said in her best British uppity tone, \"The football game is being telecast nationwide, Silly. Plus, most of what goes out to the telly will get projected up on the large high definition projection screens that are inside the stadium. You're handsome, everybody wants to see you - up close and personal.\"",
        "In a quieter voice I said, \"I forgot we'd be on TV. Your words just caught me by surprise. How many will be watching?\"\n\nTina said, \"If it's like the last couple of Cowboy games and like most Sunday Night Football, somewhere in the vicinity of twenty million viewers.\"\n\nI started to stammer and stutter again, \" TWENTY Mo ... Ma ... Me ... Mil ... Million!\"\n\nTina caught on to my anxiety about that time. She tried to calm me, \"Jim, you won't even know it's happening. The camera guys are barely noticeable as they move around you. Just focus on ... on Crystal! Sing to her, not to the stadium or the cameras. The rest will take care of itself.\"\n\nI became glum for a few minutes and grumbled around the inside of the tour bus while Crystal had her face put on. I thought she had looked good before. I got the treatment too, even eye makeup. A hair stylist worked on my unruly locks for twenty minutes, most of which would be under a western hat part of the time. A very naked Heather had done my last haircut only a few days earlier; I took some solace in that fact.\n\nA caterer brought a dozen trays of small sandwiches and hors d'oeuvres to the bus. We spread them around inside, and I migrated from tray to tray sampling all the goodies. Eating made me feel better - comfort food. On the bus' TV, we all watched the kickoff for the game. New England had won the toss and opted to kickoff.\n\nAt the end of the first quarter, Alan Roswell, the man in charge of the halftime show for the Cowboys, banged on the door and entered the bus. He looked happy but serious. \"Alright everyone, we're all set for the best halftime show ever! Now, Jim and Crystal I need you on your motorcycle. There's an escort outside the bus and they will take you to a holding point. You'll wait there until the cue to start riding into the stadium; just follow the escort right to the bottom of the stage stairs, dismount, park your motorcycle, walk up the stairs, and you're ready to sing. Your wireless mics and headsets will be handed to you at the bottom of the stairs; you can put them on as you climb to the stage.\"\n\nCrystal asked, \"What about timing with the stage crew?\"\n\nAlan answered, \"We've timed the trip from the holding point. The police escorts you're with know the details. The blimp overhead will cover your journey, and we'll project that on the stadium screens to build excitement. You should arrive just as the stage is completed and everyone else - the band and stage crews - is ready to start. This is a great idea, because it puts the focus on your arrival instead of the crew setting up the stage. As you arrive at the bottom of the stairs, you should hear the lead in to  'Flirty, Flirty Cowgirl.'  After your show, just reverse everything and exit behind your escort.\"\n\nCrystal and I stepped down out of the van. Four motorcycle cops were waiting for us along with a crowd of fans. We waved to everyone, and introduced ourselves to the motorcycle officers. I heard a thousand cameras start to snap as we shook hands with them. To one side of the crowd, I caught sight of Bart Kenesis again, but things were too hectic to do anything about him.\n\nWe mounted up and fell in line behind two of the motorcycles. Crystal held the hats we'd wear while we sang. The other two patrolmen followed us. They had all their warning lights blinking, and occasionally would turn on the sirens to clear a path for us. The crowd parted, and we slowly rode away from the stadium. \n\nThe police phalanx led us about a half-mile from the stadium onto a residential road. Four more motorcycle policemen met us there. We were organized by a senior officer into a two-two-one-two-two formation, where Crystal and I were the 'one.' With all the lights blinking we were unmistakably important people. Crystal pointed up at the blimp. I could also hear the chatter on their police radios about the estimated time to the start of our short trip to the stadium.\n\nAt eight-thirty, we got the \"Go\" command. We started up our bikes, and I followed the four motorcycles in front of us as we wove out of the treed neighborhood onto some of the streets and parking lanes that led to the stadium. We maintained a nice even pace, maybe about ten miles an hour. Every light on any motorcycle in our entourage had been turned on; our formation blinked wildly with red and blue emergency lights as we approached the gated tunnel that led onto the field. The blimp circled us overhead. I could hear the crowd noise over the sounds of the cycles.\n\nWe were waved through the tunnel by several private security guards. Our entire formation rode into the stadium with sirens and all the lights blinking. The crowd went wild. Even over the noise of the nine Harley's, we could hear the screams, whistles, and shouts. We rode two-thirds of the way around the perimeter of the playing field on a path that had been cleared for us. \n\nAs promised, our escort led us right to base of the stairway leading up to the stage. We got off, the bike, got our mics and headsets, donned our hats, and ran up the stairs onto the stage. The segue music for  'Flirty, Flirty Cowgirl' had started and a huge spotlight lit up Crystal. I faded to the background and tried to look useful by cavorting with the lead guitarist. The motorcycles had all been turned off and darkened. The focus and spotlight were on Crystal.\n\nAs Crystal sang her song, I peeked up at the rows and rows of people in the stadium. I couldn't see an empty seat in the place. I thought, \"So, this is what eighty-thousand people look like.\" I found the scene scary on the one hand, and empowering on the other. I chose to dwell on the latter emotion. If I'd remained a computer geek, would I have ever found myself in such a situation and in front of so many people?\n\nAbout three minutes passed, and I heard the band start the musical bridge into  'Texas Dawn.'  Crystal turned to me, and I moved up beside her into the main spotlight. We gave each other a little kiss before we started. The crowd went wild with cheers, and a thousand more cameras flashed.\n\nWe sang the opening line to  'Texas Dawn' - 'Texas dawns come early, when you've been awake all night' - and the crowd noise rose in a huge crescendo, so loud I could barely think. We were singing about Texas to a Texas crowd, and they loved it. They quieted slightly as we got into the song. After that, I gave a brief introduction to  'Lone Wolf Mountain' and we sang that. I couldn't tell whether it had been well received or not. Lots of people were screaming anyway, so it was hard for me to tell appreciation from general exuberance. As we sang, I watched six guys dressed like Ninja's with wireless television cameras sneaking around us on the stage and below the stage on the playing field. We segued into our medley that ended with a jived up version of  'Dallas' that bought the stands to their feet cheering. Tina had it right; she'd said, \"Always play to the home team.\" \n\nAs we finished, we gave a wave to the stadium, ran down the stairs, took off our hats, handed off the wireless mics, and hopped back on the motorcycle. Our police escort had been waiting for us in the shadows of the stage with their engines and lights off. As we mounted the bike, all the blinking lights came back on and all the cycles started and revved their engines. We motored away from the stage, as the stadium crew started to dismantle the structure.\n\nWe completed the rest of the loop around the stadium and left the way we came in. As we cleared the stadium parking area, most of the motorcycle patrolmen waved and departed our group. Two patrolmen stayed with us, and led us back to the secure parking area and the tour bus. We stopped, thanked them, and shook hands. Crystal kissed each one on the cheek; they left us with big smiles on their faces.\n\n<p align=\"center\">* * * * *</p>\n\nIn the tour bus, Ellen raced up to me and lavished several great kisses on me, several with lots of tongue - my kind of kiss. Terry hugged Crystal as Tina stood by. I got a 'knock your socks off' kiss from Tina too. Everyone had a lot of praise for our performance. \n\nTina said, \"Great job everyone. Now, let's get these two ready for the Press Conference.\"\n\nCrystal and I said simultaneously, \"Press Conference?\"\n\nTina explained, \"Yes, about fifteen minutes after the end of the game, the Cowboys want you to spend a little time with some of the press. You can both promote your albums, and you'll field questions from the press - probably about twenty of them according to Alan Roswell.\"\n\nI asked, \"But, aren't the press more interested in the coaches and players.\"\n\nTina explained, \"Yes, and they're having their own press conference in another room. You two are talking to the 'social' press - you know, the people that focus on rumor, gossip, and innuendo in the music and movie industry.\"\n\nPeople in the bus started milling around, mostly watching the third quarter of the football game.\n\nI pulled Crystal aside, \"We better talk and get our stories straight.\" She nodded and came with me to the bedroom area; we left the door open, and sat on the bed in the tight quarters.\n\nI told her, \"There are two questions we've got to have 'pat' answers for. One might not get asked; the other is a sure thing.\"\n\nShe asked, \"What's the sure thing - our relationship?\"\n\n\"Exactly,\" I told her. \"Are you two serious about each other? Are you still dating? Are you seeing others? Are you engaged or married? Are you exclusive? What are your intentions towards each other? The questions will sound something like that.\"\n\nCrystal fixed me in her gaze, \"And how would you answer them?\"\n\nI reached across the bed and took Crystal's hand, \"Crystal, I think of heaven as being in the same room as you, let alone being able to hold you. I told you on the golf course that I love you, and I mean it. I want us to be serious.\"\n\nShe said somberly, \"And, I know that now is not the time.\"\n\nI shook my head, \"For me, it's too soon. I know other celebs marry the day after they meet, but I just can't. I feel that there would be a lot of negative publicity for us if we do anything other than say we're casually dating until after more time has passed. We can still be 'an item' this way too. I wish it were otherwise, but I don't want it to look as though you've captured some wounded bird, or that I bounced out of Karen's death in a cavalier manner.\"\n\nCrystal stared at me a long time. I kissed her hand. Finally, she said, \"You're right and thinking this way is part of why I love you. So what are we - for the press?\"\n\nI said, \"One answer is 'We're best friends, dating, and learning about each other - more so everyday, and if things keep progressing the way they are, at some time in the future 'something interesting' might happen.'\"\n\nCrystal said, \"What about your motorcycle trip?\"\n\n\"Right. I've got to finish my road trip - it's a 'get over my late wife' and mid-life crisis 'right of passage' for me. What would you add?\"\n\nShe said, \"We're both at the start of our careers with new albums and for me lots of public appearances - you'll do more when you finish your trip. Oh, and we see each other when we can, which hasn't been that often since we met.\"\n\nCrystal squirmed across the bed and kissed me. \"We're so good at PR ... and I do love you with all my heart.\" We necked for a minute, and then she pulled away; \"Hey, what's the other question?\"\n\nI grimaced and answered her, \"Is it true you two were involved in some kind of sex orgy at Table Rock Lake in Branson, Missouri?\" I also knew that Bart Kenesis would ask the question if he was allowed into the press conference.\n\n<p align=\"center\">* * * * *</p>\n\nThe press conference started a half-hour after the end of the game; Crystal and I were both a little nervous, although we'd talked about the questions we might get asked. About twenty-five different members of the press filed into the large room as Crystal, Terry, Tina, and I took four chairs behind a long table at the front of the room. Alan Roswell, the Cowboys' halftime coordinator called the press conference to order and introduced us. \n\nBefore any questions got launched, Alan talked about the outstanding work the stadium crew had done in the set up and tear down of the halftime show. This was not what the various press people wanted to hear, however, they patiently waited for him to finish his spiel. He then opened up the floor for questions. About that time, I saw Bart Kenesis slip into the back of the room with his camera. He immediately took several shots of all of us lined up at the table. I smiled.\n\nA woman in a tight black jump suit with a gold lam\u00e9 shawl took the portable mic and said, \"Diedre Rank, US magazine. There's been lots of speculation about the intensity and details of the relationship between Crystal and Jim. Could the two of you comment on what's really going on?\"\n\nCrystal jumped in and said a few words, almost word for word what we'd rehearsed. I improvised another sentence or two beyond that. A dozen follow-up questions came flying at us: 'Have you talked about marriage? Children? Have you met each other's parents? Do you have the same friends? How do you handle both being on the road in different cities? Will you buy a diamond engagement ring, and if so, when and how big? Where will you live when you settle down?' I admired the detailed thinking that went into the questions. Most of them we laughed at and explained that our relationship and thinking hadn't gotten anywhere near that far along. For the most part, the tabloids were disappointed.\n\nAs things slowed down, I saw the microphone get passed to our secret nemesis, Bart Kenesis. He said, \"Brad Kenesis, Freelance Journalist. This question is for Jim Mellon; you were in Army Special Ops up until a decade ago; have you used any of those skills recently?\"\n\nI laughed dismissively at the question, guessing that he'd reasoned that I'd used those skills in Missouri to take the memory card from his camera - the card with the salacious pictures of our outdoor orgy. After my artificial laughter, I said, \"I'm in my late thirties now, and to tell the truth getting a little pudgy here and there. About the only skills, I use today involve staying in shape. I try to run three to seven miles most days, occasionally putting in runs as long as twelve miles. I use a gym if there's one available, watch my diet, and ... I try to remain sharp enough to counter any threats to the people I love ... but, overall, no, I haven't had to use any of my old Army skills - well maybe a few camping skills though.\" I hoped he'd internalize the dig I'd made about protecting the people I loved.\n\nKenesis jumped in again before relinquishing the mic; \"Could you comment on the sexual escapades you, Crystal, and another couple enjoyed in Branson, Missouri, about seven or eight weeks ago?\" A buzz circulated among the other members of the press, and everyone leaned forward to hear my answer.\n\nI answered nonchalantly yet seriously, and directly at Kenesis, \"Well, that sounds like fun but I'm afraid you have the wrong group of people.\" I paused, frowned, and said, \"If you posed a 'suggestive and loaded question' to impugn our reputations and start a rumor; I take your statement as a personal insult and consider you to be a promoter of yellow journalism at its worst, and probably libel and defamation of character if you persist. Your fellow members of the press in this room should castigate you ... although I'd prefer if they castrated you.\" \n\nThe other members of the press chortled at my play on words.\n\nI smiled in a strange way at the photographer, a dangerous way guaranteed to intimidate that I'd mastered as a Green Beret; I added as I gave him my most pernicious stare, \"Anyone that would persist in such a rumor just might incur the wrath of my Special Ops alumni.\" I turned to the rest of the press, and laughingly added, \"Those of you who know the capabilities of the Green Berets know that no one would ever want to incur their fury.\" I turned back to Kenesis, locked eyes with him so he'd know I'd just leveled a serious threat at him. I turned again and smiled at the rest of the press in the room to keep the mood light. As far as I could tell, people accepted that he'd been baiting us, and that there was no story there.\n\nOne woman wrenched the microphone away from Kenesis with a nasty look at him because he'd gotten away with asking more than one question. She fired a question at Tina in her role as Executive VP of Talent Development for Sony Entertainment. They had an animated discussion about our next albums and how sales of our current hits were going. Another reporter captured the microphone next. He said, \"Roy Gallant, Dallas Morning News. Many of us want to know where you're headed next on your road trip? We've been following your journey across the country - plotted out by where you've been sighted, and it looks like a drunken chicken walked across the map. We hear about where you've been after you've left. So, my question is where are you going next?\n\nI responded with a chuckle, \"The next state I'm headed to is New Mexico, but there's a lot of Texas to cross to get there, and I'm not exactly sure about my route or stopovers. Texas has a lot to offer on the way. The weather determines most of that, particularly this time of year. And, yes, I'm ultimately heading for California.\" The reporter gave me a 'thank you' sign, and sat down. I looked at Crystal and added, \"It'd be nice to have a riding companion for the next leg of my trip.\"\n\nCrystal made reached over and took my hand to show she appreciated the offer. A few cameras flashed at her gesture.\n\nQuick as a flash, another press member jumped to her feet: \"Gail Redstone, Vancouver Sun. Jim, have you ever thought about a Trans-Canadian trip - we have ten beautiful provinces and three fascinating territories up north that I'm sure you'd enjoy.\" A ripple of laughter occurred.\n\nCrystal jumped in and said with a big smile, \"I love Canada. Maybe we'll honeymoon up there someday real soon.\" She laughed aloud as the entire room gasped, and their pencils started to scribble, and then they all simultaneously realized her second comment was more of a tease than a juicy piece of gossip. She laughed harder and waved her hand dismissively to indicate she'd been toying with them. The whole room laughed with us.\n\nWe got a couple of other questions about our albums, upcoming concerts, and willingness to experiment with other genres of music like rap. When we started to get repeat questions, Alan stepped in and ended the press conference. We'd been questioned for forty-five minutes. Crystal and I posed for a few pictures at the front of the room, some with members of the press, and then we started to head back to the tour bus.\n\nAs we left the room, Bart Kenesis blocked our passage in the hallway. Only a few other people were nearby. He said in voice dripping with venom, \"You fuckers know what you did, and you stole property from me worth millions. I'll get even big time.\"\n\nCrystal and I both feigned shock. So that others nearby could hear, I said, \"Mr. Kessis is it? This is the second time tonight you have insulted my friends and me. We have done nothing to you to deserve your ire, and if you persist in making up stories about us I will take legal action to stop your attacks including a restraining order. I take it from your remarks that you saw something going on somewhere and think we had something to do with it. Make sure about what you saw before you make accusations.\" I'd purposely mispronounced his name.\n\nOthers started to gather around us as Kenesis started to speak again, but I held the floor. I poked my finger into his chest hard and said; \"Tonight, Crystal identified you to me as someone who has been sneaking around her house, acting like a Peeping Tom, stalking her, and trespassing on private property.\" I lowered my voice to a near whisper only Kenesis could hear, even leaning in towards his right ear, \"If I catch you in such an act, you will have not only the police to worry about - I will apply every special skill I ever learned ... and some of them can be deadly.\" I returned my voice to normal, \"When she returns to Nashville, I've advised Miss Lee to get a restraining order against you. I consider you a bodily threat to her, and we will act accordingly. Please don't come near us again.\"",
        "I turned to a cluster of some press members and said, \"Ladies and gentlemen of the press, it appears you have among you a liar, pervert, and a Peeping Tom in this man. I don't know what he thinks he saw, I guess he thinks that we wronged him in some way. He appears to me to be a reckless journalist, a pervert trying to sneak lewd photos of one of the country's prettiest women in her home by peeking in her windows with camera in hand, and a threat because he's a stalker and he's dangerous - you just heard him threaten us. I suggest you all watch whom you're dealing with. I know that from today on we will.\" I was friendly enough with them so they didn't feel any animosity from me except about Bart Kenesis' character. \n\nSeveral people turned to Kenesis, wanting more details and corroboration about my pervert and stalking comments and his reaction to my counter threat. He backed away a step. A few other cameras flashed, this time taking pictures of the photographer. Fortunately, none of the shots caught the two of us together. Kenesis might tell them what he saw that night in Missouri, but I'd damaged his credibility, alluding to the story as his fabrication. Further, he knew it; we had much greater credibility than he did.\n\nI held my breath, but Kenesis glared at me, turned, and stomped away in the opposite direction. Several members of the press yelled after him, \"Hey, what gives? What were you two really arguing about? Are you really stalking Crystal - peeking in her windows?\"\n\nAlan Roswell took Crystal's arm and led her from the awkward encounter. I followed them down in the elevator and out of the stadium to the tour bus. Tina and Terry were close behind. We were all silent as we walked, and ignored a couple of shouts in our direction of 'Hey, what was all that about?' Fortunately, most of press corps hadn't heard the interchange. I hoped it wouldn't appear on the front page of some tabloid.\n\nOnce we were out of sight in the bus, Crystal laid a big kiss on me. \"You were magnificent.\"\n\nTerry agreed; \"We've worried about him for weeks, and now you've put a lid on the fallout from our outdoor games.\"\n\nI shook my head. I said to Terry, \"No, that wasn't any kind of 'lid.' That was only the first salvo. We have not heard the end of that man.\"\n\n<p align=\"center\">* * * * *</p>\n\nCrystal and I motorcycled back to the Four Seasons hotel; the others took a limo. In the suite, Tina gave me a hot kiss and said, \"I'll see you in the morning, I still have some calls I have to make to the west coast.\" She gave Crystal, Terry, and Ellen hot kisses too, and then she left for her own room. We headed to our bedroom; Terry and Ellen went off to theirs. \n\nCrystal and I had a romantic coupling, knowing it would likely be our last for a couple of weeks. As we got naked, Crystal said, \"You told me a little about Heather, the nymphomaniac you played with in Oklahoma. Well, I want to hear some Heather stories. I think I have a very strong inclination toward nymphomania, and I want to see if I qualify for that beautiful adjective.\" I recalled Heather's hot body; the fact we spent most of the previous weekend fucking, and how I enjoyed every minute of our time together.\n\nI started by describing my first impression of Heather, and how she amazed me with her intellect, intelligence, and her intense desire for non-stop sex. As I told Crystal, I started to use my mouth, fingers, and tongue on key body parts. Her body would go limp, and then I'd hit a pleasure spot again and she'd become rigid and pushing into my hand. I gave her a complete description of what would make a nymphomaniac, touching each important qualifying place on her body.\n\nCrystal moaned, \"Oh, God, this is wonderful. I ... Yes, I am definitely a nymphomaniac ... I'm your nymphomaniac. I want to fuck ... all the time. You ... Oh, fuck, I'm cumming again.\" Before she could get the complete thought out, another orgasm wracked her body so consuming that most of her body arched upward from the bed. I glanced at Crystal's face to find her mouth open in a round 'O' of pleasure; I could almost feel her pleasure vicariously. We kept making love and talking about Heather and then the debutantes for another hour.\n\n<p align=\"center\">* * * * *</p>\n\nMonday morning, I woke up with two gorgeous female bodies curled up against me. We were nude. Crystal was on my right, and Ellen on my left. Ellen cranked one eye open, saw me looking at her, smiled, and squirmed up a little so she could kiss me. I could feel her erect nipples against my arm, a sensation that made my cock twitch.\n\nShe whispered, \"Terry had to leave. He had an early flight to New York.\" She kissed me again. \"I thought I'd come keep you guys company, maybe see what develops.\"\n\nI asked, \"What time is it?\"\n\n\"Eight-thirty\"\n\n\"Uh oh. Crystal told me last night she has an eleven o'clock flight to Miami? I had thought she'd be going back to Nashville, but Terry reminded her of a TV interview she's doing down there tomorrow.\"\n\n\"We better get her up.\"\n\nSoon, we were all roaming around the suite in our nakedness, showering and packing up our belongings. I think we postponed putting clothes on, just so we could titillate each other.\n\nI heard a knock on the door, and subsequently let Tina into the suite. She took stock of the three nude bodies hovering around suitcases and packing, and said, \"If I'd known you were having a come as you are party, I'd have dressed for the occasion.\"\n\n\"What's up?\"\n\n\"I come with news.\" She flopped down on the sofa, as I pulled on my briefs and blue jeans. Tina looked disappointed.\n\n\"First, the papers gave you and Crystal five stars for the half-time performance. They thought it was the best show in Dallas for at least the last five years, and that's high praise.\" Crystal stood in the doorway listening to the news, the light from the window accentuating the curves and gentle bumps on her body. I watched Tina lap her lips; Crystal's sex turned her on. I liked that about Tina.\n\nShe went on, \"Second, there's nothing I could find in any of the morning press about that little exchange you had with the photographer that caught you in Missouri. That said, there are about twenty paparazzi hanging out near your motorcycle downstairs - including Mr. Kenesis. I did notice the others are keeping their distance from him. Some of the press seem intent to follow you out of here on your motorcycle for photos or who knows. They've got their cars all lined up in the parking lot. If they chase you, just be careful - remember Princess Diana was running from the press.\" \n\nTina grimaced and said, \"Now, unfortunately, I have some bad news. Jim, someone slashed the seats on your motorcycle to shreds, right down to the metal backbone of the seat. I'm sorry. If you want to leave before replacing it, my recommendation is that you use a half-dozen bath towels to replace the padding that's been torn asunder.\"\n\nI muttered under my breath, \"Kenesis getting some revenge.\"\n\nCrystal said, \"Jim, take the towels. I'll pay the hotel for them when I checkout.\"\n\nI nodded.\n\nCrystal said in a worried tone, \"I don't want you to have another confrontation with that man ... or even with the press. They all want to hound both of us, but Kenesis is the one that scares me. I've never been stalked before, or had people peeking in my windows. I'm worried he sees me as the weak link, and will follow me to Miami to harass me.\"\n\nI observed, \"If you were going with me, he'd just follow me, or try to.\"\n\nShe said, \"But I have to be in Miami this evening and again tomorrow morning.\"\n\nI said, \"What if we did some kind of switch? I don't think it's too late to do a little deception.\"\n\nEllen had come into the room; \"What do you mean?\"\n\n\"Look, no one except Terry and a few others knows about your Miami appearances; they're not public knowledge. What if you supposedly rode out of town with me on the motorcycle? The press, including Kenesis, would launch out after us - even follow us to New Mexico maybe. The real Crystal could slip out of the hotel, get to the airport in cognito, and leave for Miami, hopefully, unnoticed. When they figured out what was going on, it'd be too late to do anything about it. You'd be on gone.\"\n\nWe all turned and looked at Ellen.\n\nTina said, \"That might work. You're both the same height and about the same body shape.\"\n\nEllen said, \"But we don't look exactly alike; our hair color and styles are different. Crystal's older than me too.\"\n\nI thought a second and said, \"Wait, I know how to deal with that.\" I explained my idea to everyone in the room.\n\nA half hour later, the sisters were both wearing tight blue jeans, and identical white shirts tied under their breasts to draw the appraising eye away from their face. The lure of a seeing a naked breast would divert attention from whose breast it was.  \n\nI went out to the motorcycle with the towels, my saddlebags, and two duffle bags - one with Ellen's change of clothes and cosmetics in it. I strapped the first part of our cargo on the back of the motorcycle. Crystal came out behind me with a couple of other duffle bags, my travel guitar, and the bedroll I'd acquired to replace the one that disappeared in the Kansas tornado.\n\nCrystal and I stood by the motorcycle and waved to the paparazzi; cameras clicked. We ignored the questions the press yelled at us and just smiled. We posed and hammed it up a bit. I saw Bart Kenesis frantically taking pictures of the two of us along with several other photographers, but tried to ignore him. We just waved again as we went about our business.\n\nCrystal and I each took our motorcycle helmets and put them on our heads with the facemask open. Crystal started to tuck her hair up under, using a colorful scarf around her neck as well. Suddenly, I asked her so a few of the press corps could hear, \"Hey, where's your purse?\" \n\nShe thanked me for catching her omission, and ran back into the hotel wearing the motorcycle helmet. \n\nI knew what was happening inside in the ladies room not too far from the side door entrance to the hotel we were using to go in and out. Crystal would shuck off her trademark western boots, the scarf, and the helmet. Ellen would put those on, tuck her hair up under the helmet, and sling her sister's quirky purse over her shoulder. The scarf around the neck would cover the last vestiges of Ellen's different hair color. A bracelet, necklace, and wristwatch would go from one sister to the other as well. Crystal would then check out her sister to be sure there were no obvious signs that a switch had been made.\n\nI started the Harley, turning the bike around so we could make a quick exit from the parking lot before people got too detailed a look at my passenger. \n\n'Crystal' came bounding out the side door, helmet on her head with the visor down. She had sunglasses on inside the helmet. She looked ready to go. She slid onto the motorcycle behind me, I revved the bike, the press gave us a corridor through them, and off we went.\n\nI checked in the rearview mirror and saw Bart Kenesis leaping into an airport rental car. He started to follow us along with four other cars that followed him out of the hotel parking lot. I wasn't too concerned; Ellen really did look like Crystal, given the attention to detail the two had made. Moreover, when I was ready, I knew how to lose anyone following us in the Monday morning traffic around Dallas.\n\nRather than use the Interstates, we took the slow route out of town. We even allowed some of the cars full of paparazzi to catch up to us - even Kenesis, and take photos as we drove along the local highways heading west. They all waited patiently near one intersection where I stopped to fill the bike with gas. Ellen remained seated on the bike with her helmet on.\n\nA few miles further on, I got tired of the game. I put a hundred yards between their lead car and the bike by weaving through traffic. Almost immediately, I made it through a traffic light just as it changed. Kenesis and the other members of the press had to stop. The last they saw of 'Crystal' and me; we were heading west towards New Mexico. Ellen hugged my body, and I welcomed the opportunity to get to know her better.\n\n<p align=\"center\">* * * * *</p>\n\nEllen and I deviated from the obvious route we'd chosen out of town. I had a reputation for traveling the back roads, so we got on the Interstate for ninety miles to put as much distance as fast as we could between us and the paparazzi, going a little faster than we should have. We then left the highway and headed southwest on a route that wasn't the most direct way to go from the middle of Texas to Albuquerque, even if we were on back roads.\n\nEllen rode comfortably behind me, hugging me in an affectionate way and often rubbing her erect nipples across my back, a highly distracting gesture even with two layers of clothing between us. We'd spent enough time together to know we liked each other a lot. We'd been intimate with each other, and our affection wasn't a secret from Crystal with whom I had a growing long-term relationship. As we departed Dallas, Crystal even told me to keep her sister very happy.\n\nThe past week Crystal and I had both expressed our love for one another - we'd used the 'L' word in a serious way. This was a milestone in my relationship with her - with anyone since the preceding February when Karen lay dying and I told her those words over and over. I had other women tell me they loved me; however, I'd been guarded in my reply despite strong feelings of affection. Before saying 'I love you' to Crystal, I had said those words to Kim. They both knew it and approved of the other being a love interest.\n\nEllen and I camped out by a lake north of Abilene. We made love in the open in the daylight and later beneath a panoply of stars. After dark, the air was cool, just the right temperature to offset the heat we generated from our energetic lovemaking. We spent over an hour and a half making love. Ellen decided she liked having me fuck her while she reclined on my motorcycle. She said, \"I feel so wanton doing it this way, like I'm a motorcycle slut or something.\" I assured her she was exactly that, and we screwed even harder as she called me various names in our sex game. \n\nWe cuddled together as we went to sleep. I found kissing her hair and inhaling her scent irresistible. I was falling in love with Ellen too. I wondered what Crystal would think about that when I told her. I wondered what Karen would think - Lauren? Anna? Kim? By my old standards I should only love one person at a time, but I'd changed dramatically and this felt so right. I could almost hear Karen in one of teasing moods saying, 'Sisters? You're nuts.'\n\nI thought, but I've been with Karen's sister, and we really liked each other; Lauren even said 'I love you' to me. And then I thought of June and Kim, especially Kim who I could easily have spent the rest of my life with. She was already in love and married, but it didn't seem to stop us from using those magic words with each other. Lacie and Lindy - mother and daughter - behaved like sisters, and I liked them - and now, Crystal and Ellen. I'd told Crystal I loved her, and as I cradled Ellen's sweet naked body to my own I knew I'd also tell Ellen someday soon.\n\nAll these incestuous relationships led me to my own feelings about my sister. I was only a few weeks away from seeing Anna now - maybe two months. I wondered what she'd think about my thoughts about her. I didn't dare write them to her. I had to be there, to explain and to soften the harsh reality of what I wanted to do with her. I wanted to be able to sell her on the idea. I could finally think of the words in their boldest form: 'I wanted to make love with my sister.' I wanted to have an intimate relationship with her now and always. I hoped Anna felt the same way about me.\n\n<p align=\"center\">Chapter 23\n\nNew Mexico</p>\n\nEllen and I made love constantly when we weren't on the motorcycle. A couple of times, we even pulled off the road at some scenic spot in west Texas or eastern New Mexico and made love. If we hadn't cared much about each other when we started, we sure did by the time we reached Albuquerque. For two nights, we kept Crystal amused by texting her snapshots of the two of us in various stages of undress and pictures that blatantly proved our sexual activity. Crystal wasn't shy about sending pictures of herself in what can best be described as compromising situations. Crystal, Ellen, and I had phone sex, the two of us coaching Crystal through her masturbation to an orgasm as the two of us fucked and described our erotic acts to her.\n\nOn our fourth morning together, I drove Ellen to the Albuquerque International Sunport so she could take a flight back to Nashville. We were discrete in our goodbye on the sidewalk at the airport. The serious goodbye had happened behind closed doors at our motel a half-hour earlier. I looked longingly at Ellen from curbside until she vanished inside the airport. I felt a hole in my life now that she was gone, although I knew I'd see her again sometime soon.\n\n<p align=\"center\">* * * * *</p>\n\nThe trip from the airport to Santa Fe took about an hour and took me past even more interesting terrain, including mesas and deep ragged gullies. I took the Interstate so I'd have more time at that day's destination, the well-known artist community full of art galleries and a unique plaza full of specialty shops and sidewalk merchants. Sunset would be early, and while the daytime temperature had been around sixty, the Weather Channel forecast temperatures in the high twenties overnight. Softie that I'd become, I opted not to camp out.\n\nWestern scenery seems so foreign to a New Englander. You can see across the rolling hills for huge distances. There are few trees, but copious amounts of scrub brush. In the distance, you can see mountains and mesas and other geological formations absent in the northeast. Streams are modest, yet they flow in broad deep cuts through the landscape that signal severe runoff part of the year or after colossal thunderstorms. Cuts through the landscape or the sides of steep cliffs or mesas leave visible evidence of the earth's formation in the hardened strata. Dinosaurs had roamed this landscape a hundred million years earlier after it had risen out of a prehistoric ocean.\n\nI parked the motorcycle on the downtown plaza in Santa Fe. The radical differences with traditional east coast downtowns magnified for me as I stood on one corner of the plaza and looked around. The adobe buildings from decades earlier had survived modernization so that they still signaled the western, Anglo, Native American, and Spanish heritage of the region. At a welcome center, I picked up a map. I roamed from gallery to gallery, admiring the art that talked to my soul - paintings, sculpture, rugs and tapestries, and jewelry. I wanted it all. Outside the shops on the plaza, yet beneath a broad protective overhang, dozens of merchants displayed their handiwork - jewelry and crafts were spread out on blankets on the ground or folding tables.\n\nTurquoise jewelry on one table especially caught my eye. I'd seen hundreds of other pieces, but these were intricate and exceptionally done. For myself, I picked out a belt buckle, watchband, necklace, and a ring, all silver with a delicate filigree and an artistic inlay of perfectly chosen turquoise stones that balanced with the silver. For the women in my life, I picked out pins, belt buckles, rings, necklaces, and some headbands and combs of the same beautiful caliber.\n\nAs I finished choosing my gifts, I looked to see where I should pay for the jewelry. The door to the silversmith opened, and a gorgeous dark skinned woman came out wearing an artistic top, skirt, and moccasins that signaled 'Native American.' She greeted me with a pretty smile, \"Have you completed your shopping? May I help you further? There are a few more pieces inside.\" ",
        "Here was the most beautiful distinction to the southwest. I instantly became spellbound. She was tall and lean, with jet-black hair down her back to her waist that had a luster to it that only heritage and care could give. Her facial features were angular with beautiful smooth dark skin and high cheekbones. Her deep dark eyes watched me studying her until I broke eye contact, slightly embarrassed for staring. She broke into a smile, and I caught a flash of pearl white teeth behind her lush lips. She radiated warmth to the world.\n\nI told her I'd finished shopping, passing the wicker shopping basket of items to her. She looked surprised that I had picked out so many things. I studied her face as she reviewed each item, carefully peeling the price tag from each, and noting on a carbon invoice what the purchase had been. She looked up at me several times, each time catching me studying her beauty.\n\nAs though she read my mind she said, \"I'm Tama, and before you ask, I'm Native American or Indian, if you prefer. My name means 'Beautiful Thunderstorm,' but you'll figure that out the longer you know me. I'm Navajo - one hundred percent. I made all the jewelry you're buying; it's my avocation and vocation - I love the creative outlet.\" Her voice sounded like a thousand angels singing. I was smitten.\n\nAt the risk of insulting her, I said, \"You're beautiful. I wish I had a picture, but I shall remember you forever.\" I instantly thought how corny that sounded, but did nothing to retract the statement.\n\nShe laughed. \"That's the nicest thing anybody's said to me in weeks - maybe years. Thank you, and you're not too bad looking yourself cowboy ... and, if you want, we could get our picture taken together by someone. Somehow, I know you'd always look back at it and remember this moment. What do you say cowboy?\" She teased with a broad smile.\n\nNow, I was the one who laughed, for there I stood in my ruddy western boots, faded jeans, a checkered shirt, and a crumpled western hat. I did look as though I'd been an extra in some John Wayne movie or other oater. As I laughed, she laughed again. I could tell a special rapport had already developed between us.\n\nI arranged with her to ship most of the jewelry to Anna. I carried little of value on the motorcycle except my travel guitar, and didn't want to worry about jewelry. When I got to California, I could arrange to appropriately gift the items I'd bought to Crystal, Ellen, Tina, Anna, Lauren, Kim, and a few special others I'd met along my road trip. \n\nThe late afternoon sun and the buildings nearby left this part of the plaza in long shadows. Few people roamed nearby as the air got a new chill. We completed the expensive credit card transaction. Tama put the new watchband on my watch, and the belt buckle on a new polished brown belt I'd chosen. I wanted to wear each of those items as well as a masculine looking necklace and ring I'd bought. Tama looked pleased that I liked her work so much. As she worked on the items, I raved about her other work, even picking out several more pieces I hadn't seen earlier. For some reason, I made sure Tama knew that the shipping address was my sister.\n\nAs I turned to reluctantly leave, she touched my arm, holding me for a minute. I turned and gazed into her beautiful eyes. She fixed me with a long penetrating stare. We locked eyes and she stared into my innermost being. After a full minute during which we were motionless, she continued to touch me and her eyes got glassy. Eventually, she said, \"You have been in pain, it is healing and soon you'll have only good memories and feelings. You have replaced one lost love with more than one - several. You know of loss, love, intimacy, and ...\" She paused, and added in a whisper, \"Sexuality. You have taken a new direction in your life - maybe a new job? You are on a journey, an important trip, and you are nearing the end. You're postponing some decisions until you complete your journey, but whatever you decide will yield a good outcome - even if you decide not to do anything.\" Tama suddenly shook her head, and looked away, as though to regain her perspective on the plaza.\n\nI turned to face her. I asked, \"Did you read the magazines and newspapers about me?\"\n\nShe gave me a puzzled look, \"No,\" she said, \"should I know you?\" She dropped her hand from my arm.\n\nHer confusion looked genuine. I modestly said, \"In some places, I'm becoming increasingly well known. I thought you might have recognized me.\"\n\nShe put her hand out in a firm handshake that almost commanded response and said, \"I am Tama Nizhoni. Now, you must tell me who you are.\" Her smile demanded a response.\n\nI held her hand in both of mine, \"I am Jim Mellon.\" I paused, and there wasn't even a glimmer of recognition of the name in her eyes. I went on, \"I am a new country music singer, and I have a new album - my first album. I do many songs with Crystal Lee. I think we're very popular.\" Again, there was just a blank look. I asked, \"Do you listen to music?\"\n\nShe said in an embarrassed tone, \"I'm terrible about that. I do listen, but I pay no attention to who's singing or even the names of the songs. So, I'm sorry but I don't recognize you or your name. I apologize.\" She blushed.\n\n\"Oh, please don't apologize. I'm trying to keep from developing an ego about this singing business. So many people in the industry seem to have egos about the size of a city block.\" I thought for a moment and then returned to the statements she'd made that took our conversation off in this direction. \"Your comments before - about me - where'd they come from? What made you tell me about loss, intimacy, and all? Are you a fortune teller?\"\n\nShe hesitated and looked down and away from me. In a low voice she said, \"I am a seer ... a shaman. I 'get' messages about some people - only a very few. Usually, they're people who are supposed to come into my life for some reason, or I am to come into theirs. I don't understand this gift. It's strange and sometimes scares me.\"\n\n\"Say more,\" I encouraged her, now curious about her gift.\n\n\"As you started to walk away, I felt compelled to explain that I just had a 'flash' about you. I had seen inside you, and in that minute I knew a lot about you. Oh, not the details as if I know your big secrets, but I read the emotions you've felt recently ... and don't worry, I won't tell anyone, I promise, but you've got to tell me whether I was right or close to being right.\"\n\nI nodded and said, \"You are very right. Scary right.\"\n\n\"Will you share the details with me? These skills are somewhat new to me - they matured in only the last couple of years, and they aren't there every day. Tell me the reasons for those feelings and why those feelings came to me?\" She thought for a moment and added, \"Oh, dear. I'm being terribly presumptive. You want your privacy, and I've just invaded it. I'm sorry.\" She backed away from me.\n\nI chuckled at her concern. I knew that as I became more of a public figure, my privacy would all but disappear. The dying rays of the sun made me look at my watch; it was almost six o'clock. I said, \"Let me buy you dinner or a drink or a cup of coffee, and I'll tell you some details. What time does the store close?\" I gestured to her store.\n\nShe smiled again, and said in an excited tone, \"Whenever I want, it's my business. Just let me close-up.\" She left and returned with a large box. She carefully lifted each tray of jewelry from the battered sidewalk table and placed it in the box, stacking them one atop another. After she removed a dark blue tablecloth the scarred top of the plywood table was revealed. Tama took the box inside the shop, came out a few minutes later, and locked the door. She made a gesture, as in 'What way should we go?'\n\nI shrugged and said, \"I just got here this afternoon; I don't know the restaurants. You must be the expert living here?\" I paused and added, \"Oh, and I need a hotel for the night.\"\n\nTama pointed across the plaza to a building with a discrete sign proclaiming 'La Fonda on the Plaza.' She said, \"There's your hotel, and they have a good chef in their restaurant as well.\" We slowly walked in that direction, and she played tour guide to the sights around us.\n\nA few minutes later I'd checked into the hotel, and we had a dinner reservation. I explained that I wanted to get the luggage from my motorcycle before we ate. Her eyebrows went up at my mode of travel. Maybe now she understood the 'cowboy' style of my clothing. She patiently waited in the lobby while I moved my bike behind the hotel, locked the helmets to the bike, and brought my gear in on a hotel trolley: saddlebags, helmets, three duffle bags, and my travel guitar. As I walked by her pushing the cart, she looked intrigued. She gave me another bright smile.\n\nOver wine and tapas, I told her about my life story, and how it related to what she'd 'seen'; my wife's death, the road trip, Kim, Summer, Crystal, the others, and my entry into country music, plus even the affectionate feelings I had for her.\n\nTama asked, \"But I felt you had multiple loves now - was I wrong?\"\n\nI stammered slightly, \"Well, I have several women I like ...\"\n\nQuick as a flash, Tama interrupted, \"No, you love them ... a few - to some many. Others you are close to loving, but in a different way ... with a different intensity.\" No sooner were the words out of her mouth, than she jerked her hand up to her mouth in a gesture of embarrassment. She slowly said, \"I'm sorry. I must learn to hide my gift instead of just blurting out what I see or feel as it comes.\"\n\nI reached beside me in our dinner booth and held her hand. The moment seemed romantic at that instant: our deep eye contact, our touching, the light jazz of a piano player in a corner of the dining room, the dim and intimate atmosphere of the nearly empty restaurant.\n\nI said, \"Tama, you are right ... and please don't hide what you see or know.\" As an afterthought I asked, \"You've indicated you can see the past. Can you also see the future?\"\n\nTama nodded. \"This place is too distracting, and I should warn you I'm unpredictable ... or rather, when I 'see' something about someone, there's no knowing whether it's accurate or not. Let's find a quiet place after dinner, and I'll see whether I see anything about your future.\"\n\nI spoke and said with a warm smile, \"Well, I can see the future too ... and I see us dancing out there with the other couples in about sixty seconds.\" Tama laughed, and accepted my hand as I helped her out of our booth and onto the dance floor. She was comfortable and easy to dance with. She read my dance steps perfectly, and I'm no Fred Astaire. For certain, as we danced, we liked being in each other's arms. When we saw our entr\u00e9e arrive, we had to stop. We affectionately held hands as we walked back to the table.\n\n<p align=\"center\">* * * * *</p>\n\nAfter dinner, we walked into the lobby of the hotel. I asked, \"Where would you like to do my reading - about my future; the town square?\"\n\nShe shivered at the thought; \"The temperatures drop really fast in these mountains - you're a mile-and-a-half above sea level here. It's down in the thirties outside by now. How about your room? You haven't had time to mess it up too badly yet have you?\" She teased.\n\nShe was correct that I hadn't had an opportunity to clutter up the room, except for dropping the things from my motorcycle on the floor. We meandered through the hotel to my room.\n\nTama looked around and spied a radio beside the large bed. She walked over and tuned in a station playing Native American flute music. The sounds were restful, peaceful, and meditative. She adjusted the volume so the tones were barely audible. She dimmed the lights so that only a light from a bath nightlight lit the room. The room felt intimate and close.\n\n\"Jim, you lie down and shut your eyes. Stay conscious and aware, though. No sleeping!\"\n\nI did as she instructed. Tama sat beside me and laid her hand on my chest. I watched her briefly, and she closed her eyes and listened. I shut my eyes and tried to clear my mind, a practice I had developed when I'd learned to meditate.\n\nSeveral minutes went by with only the melodious sounds from the radio filling the void. I focused on the comfortable wavering sounds of the flute. I went into a trance, not asleep, for I could hear the music, and I was aware. I could feel vibrations between Tama's and my body, like an electric current flowing between my chest and her hand as though we were trading secrets and feelings.\n\nTama spoke in a near whisper; the tone of her voice tentative and halting. \"You will finish your long trip with a happy feeling - a feeling of completeness and wholeness. The pain and emptiness you feel because of your wife's passing is going away now; it will become a remembrance of love before the end of your trip. Issues you've had with her won't matter any further, even though you may learn about other interesting things she did.\"\n\nAfter a pause she continued, \"There's something about ashes - I don't understand. OH! She ... Oh, my God. Oh, my God.\" I opened my eyes as though struck; even in the dim light I could see the tracks of tears on Tama's cheek. \"She is grateful that you still think of her, but she doesn't want you to grieve any longer. She wants us ... wait ... I'll come back to that.\" Tama's voice cracked, as though she was on the verge of crying.\n\nShe let another minute go by before continuing. I watched her pretty face as it concentrated in some unearthly dimension. \"You have someone following you - a white man. He is mean ... nasty ... and a real threat. He is dangerous and may hurt you. You must be vigilant. Do not hesitate to respond.\"\n\nAfter a long silence Tama went on, \"You have other women to meet. Some you already know, and they will reappear in your life in surprising and joyful ways.\" After a pause, she said, \"You won't marry soon, but you will make deep commitments to the people you love - one particularly. You will have unusual and good relationships. Your sexuality is ... strong; it is a vital part of who you are.\" She paused, and I wondered about her vision on that subject.\n\nTama's eyes popped open and she looked at me. \"You will become a father several months from now. The baby is ... will be healthy ... a boy baby. Do you know this?\"\n\nI nodded, \"Yes, but not that the baby would be a boy.\"\n\nTama's eyes closed again. I felt her hand push hard against my chest. \"Jim, your new career will ... far exceed your expectations. Through it, you will find ways to help others that you don't know about yet - many others. You will be a leader. You will find ways to save others, possibly including someone dear to you after a troublesome time. There are talents and abilities you are just now starting to find; you will hone them as you continue your spiritual journey.\"\n\nAfter a long silence, I felt Tama lean across the bed and kiss me. I wrapped my arms around her and kissed back. She said softly, \"I see no more for now. I might see more later; I'll tell you if I do. I get flashes and then breaks and then more flashes sometimes.\"\n\nI sat up, and held Tama's hand, stroking her palm with my fingers in a sensuous manner. \"You hesitated on something about my sexuality; what was that about?\"\n\nShe kissed me again, an unusual move given we'd met only a few hours earlier, yet so consistent with what we both apparently felt. \"I saw a great deal about your past and future sexuality in that instant ... and before dinner. You are talented and creative in this part of your life.\" She smiled slightly embarrassed.\n\nI stroked the brown skin along Tama's face and long neck, and she went on, gauging my reaction in the dim light. I briefly thought she'd started to purr as she leaned her head into my hand. \"You have sometimes judged yourself in harsh terms about your sexuality. Your values in this area have changed dramatically in a short period of time - become more forgiving and liberal.\"\n\nI nodded, amazed at her insight, and she continued. \"You worry about yourself when you measure yourself with your old values, yet you have done nothing wrong and deep inside you may know this. You are now seeing yourself as a sexual creature, and now appreciating the pleasure and delight sex gives you and your partners; do not make it otherwise for yourself. Sex, affection, and love are forces for good. Don't buy into others' opinions that tell you otherwise. Don't change your new directions in this area of your life.\"\n\nI nodded to encourage her to continue. She looked into my eyes and even in the dim light I felt she could see into my soul, \"You are caring and mindful of your partners, always yearning to create positive experiences for them. You think of them from a spiritual base. This is the place to put your self-judgment, not on your ... voracious ... appetite for sex or ... on the proliferation of partners you have mutually shared sexual joy with. Allow yourself to treat sex as desirable, a way to bring happiness and joy to others - as well as yourself, and for the intimacy that the erotic acts arouse.\" She shook her head almost as though the words had come through her instead of from her.\n\n<p align=\"center\">* * * * *</p>\n\nI allowed a brief silence and asked another question in a hushed tone, \"Did you hear my wife - my dead wife - speak? You reacted strangely at one point.\"\n\nTama looked deep into my eyes. \"Yes, briefly, sort of. I didn't 'hear' her speak; I felt the messages or words she wanted to impart to you through me. She is happy - elated even. I could feel it. It touched me deeply - the deepest I've ever felt something like that. She wanted you to know that she is in a better place - the best place, and that you two will interact again. There was something about ashes too - her ashes?\"\n\n\"Yes. You couldn't have known that. I've been spreading a small amount of her ashes in each state I've visited. It's become a ceremony for me, a way of grieving and a way of keeping her memory alive.\"\n\nTama nodded. \"I had the feeling she liked what you were doing.\"\n\n\"She wanted us to do something?\" I asked innocently.\n\n\"Yes,\" Tama said hesitantly. \"She wanted us to make love. Her spirit touches your spirit when you love consciously. She has been the inspiration or muse for many of your relationships.\"\n\n\"Wow!\" I exclaimed. \"I wondered.\"\n\nTama used both hands to touch my chest, and then to begin unbuttoning my shirt. Between each button, she leaned forward and kissed me. Her lips seemed so sensuous. I rubbed my lips against hers, just for the erotic sensation. She liked that.\n\nAfter the next button became unlatched, our tongues met in a delicate duel between our kisses. Tama liked it when I ran my tongue across her closed lips, gently stimulating her. Our breaths became heavier.\n\nThe next button popped open by her fingers. I reached across and ran one of my fingers down her neck into the cleavage her western shirt afforded. As I stroked her upper chest, we got into longer and deeper kisses. The two of us were now a runaway train, without a hope to stop anything that might follow. If Karen orchestrated this, perhaps she was expressing her love for me through this gorgeous Native American woman. I felt a whole atmosphere of love surrounding me - us - filling the room.\n\nSoon, my shirt had been opened completely. I shrugged the garment off my shoulders. Tama ran her fingers across the muscles in my chest, making them ripple in response to her stimulation. She held her hands still on my chest as though she was listening again.\n\nShe whispered between kisses, \"Something tells me I will really enjoy the next few hours with you.\" We kissed deeply, and each succeeding kiss became increasingly more passionate and compelling to the act we both desired.\n\nI unlaced the rawhide ties holding the front of her top together. Before I finished, she stopped me and pulled the piece over her head in one smooth motion. She wore no bra. Even in the dim light, I could see the contrast of her brown skin and my Caucasian whiteness, even with my tan. Her areolas were dark and inviting; her breasts full and high. Her body epitomized beauty and love. I couldn't resist; I reached up with both hands and gently fondled her full breasts. Before I even started both nipples were rigidly erect. She said, \"Kiss them. Lick and suck them. Bite them. Make me know that you are real and not a shaman's dream.\" I followed her instructions perfectly.",
        "After a few minutes of our petting, Tama stood in front of me. She carefully undid the ties that held her skirt together, and allowed the pleated garment to fall to the floor around her. She kicked off her demi-boots, and stood proudly nude before me with her arms reaching forward in a loving manner.\n\nSitting on the edge of the bed, I ran one finger from between her breasts in a curvy line down her body and into the darkness of her untrimmed dark pubic hair, feeling the cleft of her sex. I rubbed my finger against where I thought her clitoris should be. Tama's head rolled back, and she groaned in response to the sudden pleasure. I repeated my track several times.\n\nI stood, and she eagerly worked to remove my boots and then my pants and briefs. She became satisfied only when the two of us stood naked and face-to-face only inches apart. We each allowed one finger to trace out interesting contours of the other's body.\n\nIn a low voice, she asked, \"What happened here? This looks like a fresh wound.\"\n\n\"I was shot a few months ago in Alabama. Four men had just started to rape a young woman, and I stopped it. One of them pulled a gun and shot me; the bullet went through me.\"\n\nShe looked surprised, but went on; \"And here? Another bullet?\" she asked.\n\n\"I planted some explosives on a bridge in a foreign country during a war. Before I could get far enough away, they detonated. I got hit by a piece of shrapnel.\"\n\n\"And here?\" she asked at another scar on my chest.\n\n\"I had to fight someone ... a very bad person. He had bodyguards. One of them had a pistol\" I pointed to another wound, \"I got shot here too. I had rescued a hostage in a Middle Eastern country, and we almost made a clean get away.\"\n\nI paused and said, \"Tama, I was in the Army - Special Operations. I did many distasteful things, and almost all of them I now deplore. I see the world differently. I have found that if you view the world as full of threats, then every day you will have to deal with threats; if you view the world as loving, then there are many loving experiences to enjoy.\"\n\n\"My people have learned the same lessons the hard way, as well,\" Tama said. She reached down and fondled my tumescent cock, pulling on its length, and rubbing the rod between her two hands.\n\nI fondled her breasts with one hand, and had started to massage the nub I felt rising from its hooded hiding place with my other hand. We kissed over and over again, now all pretext at conversation lay behind us.\n\n<p align=\"center\">* * * * *</p>\n\nI maneuvered Tama to the edge of the bed, and gently pushed her back so she reclined with her femininity fully exposed to me. I knelt between her legs, and with the tip of my tongue raced in a zig-zag path along her thighs and into her sex. My tongue found what my fingers had discovered moments earlier. Tama nearly expired in those few seconds when I first touched her orally. Her breath became short, she moaned wildly, and pleaded with me to stop ... and then to never stop. She'd grab my head and force me to stop, and then push me to start again with greater intensity. I fingered her cunt as I sucked at her sex and tongued deep into her body.\n\nTama came in torrents. Orgasm followed orgasm as I pleasured her pussy. Several times, she emitted a rich fluid that tasted like a divine wine. Tama pushed me away, and took command of our lovemaking. I found myself on my back, in a sixty-nine position with her on top. I could continue to lap at her cunt, but now she engulfed my shaft with her mouth to return the pleasure. I had to concentrate to use Tantric techniques so that I didn't climax.\n\nTama decided when it was time for me to penetrate her body with mine. Her breasts conveniently came near my face, lips, and tongue. She bounced and roiled and writhed above me as we started. I changed our position several times, seeking increased stimulation for Tama's body. I helped her crest to more orgasms over the next twenty minutes before I joined her by exploding the fluids from my core into her body.\n\nI lay atop her body for a moment and then moved to remove my weight from her. \"Don't move,\" she exhorted. \"I want to feel you on top of me, to enjoy your maleness more, even though we're not fucking ... not making love for a moment. I like your weight; you're not too heavy.\" I stayed, and we kissed and licked at each other. Occasionally, I would move and surge my tumescent maleness still in her body just to briefly recall the passion we'd just shared. Soon, however, all that stimulation of remaining in her body caused my cock to harden again, and the soon we were making love again without having ever separated.\n\nThis time, after our orgasms, I rolled onto the bed beside her, pulled her partly onto my body as we remained coupled. She told me, \"You have supernatural sexual powers. No one has ever loved this Mystic the way you have. I have never cum like this ... so many times and with such intensity. I never want to stop.\" She kissed me passionately, her mouth trying to devour me.\n\nI had a premonition as to the reason. I suggested, \"Go inside, to where you were listening to messages and tell me what you find.\"\n\nTama closed her eyes in concentration for a long time. I could feel her pussy twitch occasionally. The soothing music from the radio continued to fill the room. I probably distracted her as I toyed with her left nipple. Suddenly, Tama spoke; \"Oh ... it's ... it's Karen, your wife - your late wife. She smiled at me and faded away. She knows you love her - loved her deeply.\"\n\nI spoke, \"Did she augment our time together in some way?\" The moment took on a particularly eerie tone; I'd not mentioned Karen's name before, only referring to her as 'my late wife.'\n\n\"Maybe. She didn't talk. I just sensed ... that ... she was there ... smiling in joy at you ... at me ... at us.\"\n\nI asked, \"Could she really be a sexual muse of some kind, a goddess that presides over my lovemaking so that maximum pleasure is achieved and delivered. Before this trip, I never had such intense orgasms nor could I last as long as I do. I have been thinking it was what a friend taught me, but now I question whether it might be Karen - my muse and angel watching and inspiring me in some way. Maybe both.\"\n\nI let those thoughts roll around in my head, wondering how a left-brained person could release enough of my skepticism to accept the possibilities about Karen being some kind of angel, Tama's insights, other dimensions in time and space, and the possibility of a spiritual sexual muse. \n\nBeside me in the dim light, Tama stretched her lithe body across the bed.\n\n\"You are beautiful,\" I told her. \"It may not be politically correct to say, but your brown skin is so exotic and bewitching.\"\n\nTama laughed, \"It's all right to tell me that, White Man.\" She tickled me, and soon we were both laughing. After we quieted down again, she said, \"I've never been with a white man before. In fact, I've only had a few partners.\"\n\n\"But you're stunning. You could certainly have any man you set your eyes on.\"\n\n\"I guess I'm picky.\"\n\n\"But, you picked me without much information to even get picky about.\"\n\n\"Ah, but you are the embodiment of my ideal man.\"\n\n\"White? Motorcycle dude? Singer? Computer jock?\"\n\n\"No, silly. I don't care about those. Let me try to explain; first, we resonated immediately, back at the jewelry shop. I knew right away in my first look that you were special in my life, and now I am sure of it. You certainly expressed caring, concern, and tenderness towards me, but there was something much deeper and beneath the surface, something non-physical between us. Seeing into your soul and reading your future gave me the strangest experience I've ever had, in a positive way. No one like Karen has ever talked or communicated to me ... through me - as though I'm a medium. I guess my messages came from somewhere or someone, but because of her presence, I think I instantly became infused with things she knew and felt about you. I instantly knew you were different and exceptional - someone I needed to be close to in every possible way, including our making love.\"\n\n\"I am touched. I shall try not to let those remarks go straight to my ego.\"\n\nTama chuckled. \"Oh, about your ego, don't worry, you are humble enough. Do you know the Cherokee story about the two wolves inside each of us?\"\n\n\"No, please tell me.\"\n\n\"A father tells his son about the huge battle between two wolves inside him. One is evil. It is anger, jealousy, guilt, inferiority, lies, arrogance, and ego. The other is good. This one is joy, peace, hope, serenity, kindness, empathy, truth, faith, and most of all love. The old man is quiet for a while, and the young son asks, 'Which one wins the fight?' And the old Cherokee tells him, 'The one you feed.'\" Tama studied me for a moment and added, \"Jim, don't worry, you're feeding the good wolf.\"\n\nI spoke, \"Tama, this is strange ... and scary. 'Wolf' was my nickname in the military.\"\n\n<p align=\"center\">* * * * *</p>\n\nI lay awake in the morning light admiring the ravishing woman beside me. I slowly pulled the sheet from her body so I could bask in her beauty. I wanted to wrap Tama up in my soul so I could share her with the other people I loved. She must have felt my telepathy of affection for her: her large dark eyes opened, and a radiant smile emerged on her beautiful angular face. I leaned down and kissed her. \n\nI said, \"It's seven thirty. Do you have to work?\"\n\n\"No. I just quit for the day. I'm my own boss. I want to be with you. You're more important to me than selling some of my jewelry. Is that all right? What were you going to do today?\"\n\n\"I had planned on going up to Taos. Will you be my tour director?\"\n\n\"I'd be delighted. Can you take me on your motorcycle? I have few opportunities to ride, and I love the wind. Taos is about ninety minutes from here. I even have a leather jacket at home.\" She looked enthused at the idea of riding. She sat up and hugged me, her naked breasts pushing against me.\n\nI asked with a touch of humor, \"In a skirt?\"\n\n\"No, I'll go home and change. You come too.\" Tama stood, nude and trim, her natural body color giving her the appearance of deep and dark tan all over. I pulled her back into the bed. We had sex; this time taking pleasure in the morning light to see each other's bodies and our expressions of lust and love in more detail. Afterwards, we showered and dressed. Tama joined me for a light breakfast in the hotel coffee room. \n\nTama's home was only a mile from the plaza where she worked and where the hotel was. Like many others in the town, the home had been modeled after an adobe. Inside, her Navajo roots and art mixed with western comforts. In one corner of the living room, her silver work held sway. In another contrast, I noted a statue of Buddha on a shelf, obviously in a place that encouraged meditation.\n\nTama pulled me into her bedroom while she changed clothing. \"I want you to watch me dress - to see my body again in a way that excites you. I want you horny, so aroused that you can't wait to make love to me again. I have loved every second of our time together.\" She stood, naked in front of me, and it took every ounce of willpower not to hurl her onto her bed and plunder her body again. Slowly, she slithered into a thong, tight jeans, boots, a colorful shirt, and a leather vest. I recommended a scarf as well. Lastly, she slipped on a beautiful leather jacket.\n\nTama had driven her car to her house as I followed on my motorcycle. I presented Tama with my spare helmet, and put my own on as well. In minutes, we were heading north to Taos. We prowled around Taos Plaza, sampling many art galleries and visiting every souvenir shop we passed. I bought more things to ship to my sister's home for later distribution to friends and lovers. I arranged with each store to ship what we bought. We had lunch at Doc Martin's Restaurant, taking our time over a gourmet lunch. After seeing some more galleries, we drove by Kit Carson's home, and then headed back to Santa Fe.\n\nAfter dinner and our evening's dalliance had left us breathless, happy, and wonderfully mellow, I flipped on the television while Tama went to take a shower. The late news was on. Several stories rolled by about state politics, speeding cars near some school, and then the Hollywood gossip started with some remarks about J. Lo. After that brief item, to my surprise, appeared a film clip of Tama and me roaming the streets of Taos earlier in the day, holding hands, and acting very cozy together as we shopped. The voice-over said,  'Country music singer Jim Mellon was sighted today in Taos, with an unknown and amorous beauty who apparently played tour guide for the motorcycling star. Mellon appeared last Sunday at a concert with Crystal Lee - his recent girlfriend. We aren't sure who his lady friend is, but they seemed close and had fun shopping, dining, and kissing up a storm in the famous town. The pair left Taos on Jim's motorcycle in the late afternoon and headed towards Santa Fe.'  The film clip showed us shopping, laughing, and then briefly kissing as we walked along. The voice-over ended, and a different news clip about drugs in the entertainment field started.\n\nTama stood naked at the door to the bathroom with a towel, leaning against the doorframe in a provocative pose. \"Are you in trouble?\"\n\nI shrugged but smiled, \"Yes and no. It depends on who's judging.\"\n\n<p align=\"center\">* * * * *</p>\n\nGiven the time difference between Santa Fe and the east coast, where Crystal was, I thought I'd better just send an email and ask her to call me ASAP in the morning. I slept with Tama curled up by my side and my cell phone on the nightstand.\n\nMy phone rang about seven o'clock the next morning; it was Crystal. \"What's up? Emergency? Your email sounded worrisome.\"\n\n\"Unknown paparazzi caught me being sweet and lovey while I was shopping with a beautiful new partner in Taos. They got a video of the two of us shopping, holding hands, and at least one kiss - no sound apparently - and it showed up on the Albuquerque channel last night on the late news in the celebrity gossip segment. I thought you should know, so you don't get blindsided. I can imagine the press will make something of this.\"\n\nIn a stroke of clarity and change of subject, Crystal asked, \"Are you in bed with her now?\"\n\n\"Yes.\"\n\n\"Is she a sweet fuck?\" I could hear the lilt of laughter in her voice.\n\n\"Very,\" I teased.\n\n\"Well, keep your wick wet, Lover. I was just thinking that no one at that press conference we did in Dallas ever asked whether we were exclusive. All they wanted was stuff to write about. So, if the question comes up, and I'm sure it will, I'll just say 'We're not exclusive ... yet, and we're both free to date whom we please.'\"\n\n\"We'll still make the tabloids. I'll be the bad guy, I guess.\"\n\n\"No, I have an idea that'll equal things out. I'll get back to you.\" She paused and added, \"Now, go have your morning fuck and get your ass in gear. Keep you head down today and be tolerant of what I might do.\"\n\nWe said our sweet goodbyes and hung up. I wondered what Crystal would try. Somehow I knew it would be daring and sexual. The thought aroused me.\n\nI did follow Crystal's advice about a morning fuck, again relishing not only the beautiful carnal act, but the dark skinned beauty I found so easy to be with and pleasure. We had room service bring us breakfast, and then made love again. We couldn't get enough of each other.\n\nAbout noon, I got an email from Crystal:  \"If you can, keep a lid on things until tomorrow. I've got a high profile date tonight that'll at least even things out in the press. I might even get laid. ;-) Enjoy your honey. I'll trade you ALL the details later. Love. C.\" \n\nI laughed at the email and countered by emailing Crystal a discrete profile photo of Tama sitting nude on the windowsill in my hotel room. She had her head on her knees and was looking at the camera with a Mona Lisa smile. It might have been the best photograph I ever took.\n\nA few minutes later, I got a reply:  \"Bring her home. She's stunning. XOXOX. C.\" \n\n<p align=\"center\">* * * * *</p>\n\nTama left the hotel to head home and prepare a lunch for us. I planned to stay overnight with her. We had no particular afternoon plans. I loaded my various duffle bags, saddle bags, bed rolls, and helmets on a luggage cart and took the elevator down to the lower level to load them on my motorcycle that I'd parked behind the hotel.\n\nI stared in shock at the bike. The front tire was flat. A large Bowie knife stuck out of the middle tread at a ninety-degree angle. I could see where the vandal had tried other places to penetrate before he found the resting place for the knife. The tire was ruined.\n\nFortunately, Santa Fe had a Harley Davidson motorcycle store and repair center. I called and explained my situation. I also called Tama to tell her I'd be delayed and why. She expressed her concern. An hour later, a motorcycle recovery truck pulled up, and I helped him load the wounded Harley on the bed of the truck and anchor the bike. He told me I could pick up the bike after five o'clock. Besides the tire, he'd also be able to replace the seat Kenesis had shredded in Texas.\n\nI called Tama. She drove around behind the hotel, I loaded all my gear into her car, went and checked out of the hotel, and then rode home with her. Needless to say, the sanguine mood I'd been in all morning had vanished. I struggled to reclaim that calm space, probably just what my nemesis wanted besides the inconvenience he'd caused.\n\nI had no doubt but that Kenesis had found me in Santa Fe, and reflected that it might have been him who caught Tama and me in Taos. He took the video with his camera, added his own indicting words to the film, and either sold or gave it to the local news channels so I'd be embarrassed.\n\nI sat staring out Tama's window wondering what would happen next.\n\nTama said in a pleasant voice, \"What now? You hungry?\" \n\nI gave her a lecherous grin, and she grinned back, but said, \"Now, wait a minute. If we keep doing this, you'll wear me out. I'm not used to having a man slut around.\" She poked at me, but I could tell she wanted sex as much as I did.\n\nI tucked my libido away for a while. We had lunch. I wanted to go shopping and get warmer clothing for the next several legs of my trip that would take me through the mountains. I'd spent much longer in each locale than I planned, sometimes for good reason, for instance, getting shot in Alabama. Thus, I created the best disguise I could from my clothing options, and Tama took me to several western wear shops and the Harley Davidson store that offered leather goods.\n\nTwo hours later and almost two thousand dollars poorer, I stood in my new leather riding wear in Tama's living room. I wore insulated black leather from head to toe. The only other thing I could do to make myself warmer would have been to custom order pants and jacket with heating wires running through them so I'd be wrapped in an electric blanket. I'd also bought some new regular clothing more aligned with winter than summer.\n\nAfter verifying that the weather for the next few days would be precipitation free but chilly, I repacked every bag on the motorcycle, filling them with my new warmer clothing. I asked Tama to donate some of my things to a local charity, and prepared a parcel of a few favorites to send to myself care of my sister. Tama looked through some of my rejects. She pulled a couple of my shirts from the pile; \"Jim, may I keep these, please. They ... you wore them ... and it'd mean so much to me to be able to wear them ... maybe at night to sleep in.\"\n\n\"Oh, Tama, of course. I'm touched.\" I went and held her, and gave her a dozen very tender kisses. I could tell she'd miss me when I departed.\n\nWhile I puttered around her living room using my laptop and repacking things, Tama had started cooking. She explained that she didn't often have someone to cook for, so she appreciated the opportunity to have me around for another evening. The aromas of various spices wafted through the house as the late afternoon arrived."
    ],
    "authorname": "TLCgiver",
    "tags": [
        "romance",
        "incest",
        "group",
        "threesome",
        "polyamory",
        "love",
        "motorcycle trip",
        "harley",
        "revenge",
        "halloween party"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/road-trip-pt-05"
}