{
    "title": "My Blue Pill with Green Eyes Ch. 03",
    "pages": [
        "This starts the morning after Chapter 2.\n\n~~~\n\nChapter 3: Life Twists and Turns\n\nMay 17 to June 4, 2015\n\nI awoke lying on my back. I could hear birds chirping and feel the sunlight. It was a glorious morning! I recalled the previous night and all of the amorous activities I shared with Jo over the weekend, bringing a well-deserved smile to my face. These thoughts did nothing but strengthen my already straining morning wood, saluting the open air.\n\nI rubbed and then opened my eyes, looking around to find the bed devoid of the little spitfire that shared it with me the night before.\n\nThen I noticed the door was open.\n\nJoanne was slowly closing it while staring at me... and not at my face!\n\nShit!\n\nI quickly threw on the clothing from the previous two days and went to the bathroom. I then out into the main area, seeing Joanne sitting at the kitchen island. \"Where are Jo and Jonas?\" I asked.\n\n\"Out taking a walk. Sit,\" Joanne softly ordered me.\n\n\"I want to apologize for, ah, waking up... well, for the condition in which you saw me.\"\n\nDid she smile just a little? \"Forget that. What are your intentions with my daughter?\"\n\n\"Forgive me Joanne, but didn't Jo already tell you about us?\"\n\n\"She did, but I need to hear your side.\"\n\n\"Well, my intentions are to see where this leads.\"\n\n\"Meaning...?\"\n\n\"Meaning Jo was just my roommate until a week ago. Her feelings toward me grew strongly while she lived with me, and mine...\"\n\n\"Don't even try to tell me that you had none towards my daughter!\" Joanne interrupted.\n\nI shook my head. \"I won't demean you by lying, I'd never do that. What I'm saying is that beyond the typical boy-girl attraction...\" Joanne mumbled something. \"What was that?\"\n\nShe looked away and repeated herself a little more loudly. \"I said you're no boy.\"\n\nMy face reddened from the... compliment? I cleared my throat. \"Well, regardless, I denied anything further until Jo...\" What? Became so forward that I'd have to be a eunuch not to respond? \"...told me how strongly she felt for me.\"\n\n\"She seduced you?\" a perceptive Joanne asked me with a mixture of feelings on her face that was hard to read.\n\n\"Yes.\"\n\n\"I don't believe you,\" Joanne said sitting back, looking away, and crossing her arms.\n\nI'm not sure it was really my place to convince her, but I felt I had to try. But how? The only thing I could think of was to say, \"She told me about her years after high school,\" Joanne glared at me, \"and I accepted them for what they are: past.\"\n\nJoanne studied my face for a moment, unsure of my true meaning. After a minute or two she relaxed. \"So how do you feel toward my baby?\"\n\nI looked Joanne dead in the eye. \"I don't know. I don't want to rush anything. She told me that she loves me, but I'm not there yet.\"\n\n\"And why aren't you there yet?\"\n\n\"I don't want to repeat my own past mistakes by moving too quickly. Jo deserves better.\"\n\nJoanne studied me a little more before nodding. \"Fair enough. But I don't want my baby going through what I went through. I don't want her suffering the social stigma that I did.\"\n\nI nodded. \"We haven't seen any backlash yet. I'm not going to believe that even in the new millennium people are fundamentally more accepting than in the 90s. I tried to tell Jo it could get bad, but she didn't believe me.\" I said shaking my head and looking down. \"I suggested to Jonas that the two of you talk to Jo about it.\" I paused hoping she was on board. \"Mind if I take a walk when they get back?\" I asked looking back up at her.\n\nJoanne smiled a little. \"Yes, please.\" She paused, thinking. \"But what if we scare her enough that she doesn't want to continue your relationship?\"\n\n\"Then I'd step aside. I only want her to be happy.\"\n\nJoanne smiled even wider hearing this and nodded. She put her hands over my one that was on the kitchen island. \"Thank you, Gary. I know I'm overprotective but she's my little girl, and just recently came back.\" She paused. \"I am glad she found someone as nice as you.\"\n\n\"Thank you.\"\n\n\"Would you like some breakfast? Everyone else already ate,\" Joanne said getting up and walking toward the refrigerator.\n\n\"Sure, but I can make my own,\" I said starting to stand.\n\n\"I'm sure you can. How about eggs and bacon?\"\n\nI nodded, sitting back down. \"That'd be nice, thanks.\"\n\nJust after Joanne served me, Jo and Jonas walked back in. Jo gave me a hug and a kiss and stole one of my strips of bacon.\n\nJoanne and Jonas moved aside and chatted a bit, waiting until I was almost finished before asking Jo to join them. Joanne nodded to me.\n\nI quickly finished and said that I wanted to go for a walk. Since I didn't know my way around the woods or where the property lines were, I just walked down to the lake and went around the shore. It was fun to skip rocks across the lake again.\n\nAbout an hour later Jo came outside and yelled out my name. We waved at each other as I started walking back. When I made it to the deck, Jo rushed up to me and gave me a kiss.\n\n\"Gary, it's been a pleasure getting to know you,\" Jonas said shaking my hand. \"We're going to leave now to give you two some alone time. We'll come back tonight after you've gone.\"\n\n\"You don't need to do that,\" I said. \"We'll probably head back soon anyway.\"\n\n\"We want to go into town, so stay as long as you want!\" Joanne said. Joanne hugged her daughter and approached me to give me a hug. \"Thank you, dear. You take good care of my baby,\" she said in my ear.\n\n\"I'll assist her in taking good care of herself,\" I likewise said in hers.\n\nJoanne smiled. \"Bye honey,\" she said to Jo.\n\nJonas shook my hand again, and with that they left and drove away.\n\n\"What did you say to Mom?\"\n\n\"I just answered her questions about us.\"\n\n\"She really likes you now. It was almost as if she was daydreaming when she talked about you.\"\n\n\"Oh, that!\" I said with a chuckle and a roll of my eyes. Jo shot me a quizzical stare. \"You left the door to the bedroom wide open and your mom got a full body view, stout flagpole and all. She didn't seem to mind,\" I said shrugging.\n\n\"Whoops!\" She giggled. \"Well, maybe Dad will get really lucky tonight! But for now I want to get lucky!\" She started pulling me toward the bed we shared the previous night.\n\nI looked outside and saw the bright sunshine. \"Wouldn't you rather go outside?\"\n\nJo didn't change her trajectory. \"It's too cool outside this morning for my taste,\" she said walking past the door.\n\nI stopped when I was next to it, realizing her where her morning tastes really were. \"Where do you think you're going?\"\n\nJo turned with a wicked grin on her face and I was already shaking my head. \"Aw, come on!\"\n\n\"Some schoolgirl fantasies can wait.\"\n\n\"Fine,\" she pouted and walked toward me to push me into the second bedroom. We each stripped the meager clothing from the other and had a little last cabin fun... for a few hours. At least this time she could yell all she wanted!\n\nWe changed the sheets, picked up our things, and grabbed a bite. We were about to leave and I, unlike Jo, started dressing.\n\n\"What are you doing?\" Jo asked.\n\nI looked at the shirt in my hand and back at her, shaking my head at her obvious question. \"Getting dressed.\"\n\n\"Why?\"\n\n\"Well, when I walk outside naked, people throw garbage at me.\"\n\n\"Ha! No, I mean why don't we drive home naked?\"\n\nI walked up to her and kissed her. \"I have a more novel idea. Why don't we try driving there with clothes on?\"\n\nJo was disappointed but she dressed, and we headed for home.\n\nWhen we hit the highway I brought up the conversation Jo had with her parents. Jo said they set her straight on what to expect, but she still didn't believe them completely. She did enjoy getting to know her parents a lot better in the meantime.\n\n\"So they didn't scare you out of the relationship? The thought of changing my diapers when you're still a viable woman doesn't scare you? Waiting for a doddering old fool while you feel like fast-walking a marathon isn't a turn off?\" I half-expected a slap.\n\nJo laughed. \"It doesn't scare Mom, so I've got a great teacher!\"\n\n\"Well, I guess we'll see how you feel in 20 years.\"\n\nJo's astonished face snapped to look at me. \"Is that a promise?\"\n\n\"I... ah...\" I glanced over and saw her smiling. \"Knock that off!\"\n\nJo giggled more, and then deftly changed the subject. \"When will I finally meet your daughter? Maybe for her birthday?\"\n\nI figured it was about time that I came clean, since her birthday was less than a month away. \"If she has time for me, sure,\" I said a little sadly slumping my shoulders.\n\n\"You don't get along?\"\n\n\"We fought some and then she moved out. She wouldn't even tell me what it was about. I think she just wanted to be with her boyfriend and didn't know how to tell me. Since then she doesn't talk to me much.\" I shrugged.\n\n\"Were you close before that?\"\n\n\"I thought so, yes. Moral of the story: keep your parents in your life. Especially after the bombshell we dropped on them this weekend.\"\n\n\"I can do that.\" She kissed me.\n\n\"Hey, what was the special thing you packed?\"\n\n\"Something I now get to save for another trip!\"\n\nJo didn't pay attention to the road now that I knew my way back. This freed her up to strip completely again, but she reclined her seat so as to not thrill too many passers by. Eventually my hand was dueling with her hand to give her pleasure. We skipped the dangerous actions on the driver this time.\n\nI pulled into the garage and Jo jumped out of the car au naturel before I had a chance to close the door. Jeff was across the street doing some yard work and immediately stared into our garage. Jo just looked at him, smiled, and waved.\n\nI started closing the door. Just before it shut, I could see Jeff drop what he was doing and run toward his house.\n\n\"You had to do that, didn't you?\"\n\n\"You wouldn't let me show off on the ride home!\" she teased me.\n\nI had just put a hand on or meager bags to see Jo running up to me, ready to attack. I had to leave the things where they were.\n\nOne of her arms went around my head to draw me in while her other hand worked to quickly free me from my shorts. There was a rapidly growing impediment in the way, but it didn't slow her at all.\n\n\"Are you... ever... off?\" I asked between lip smacks.\n\nJo jumped up to straddle my midsection, her legs expertly clasping around my backside. I had to quickly grab out around her rump to hold her.\n\nJo let my face go for a moment, breathing lustily into my face millimeters away. \"Tomorrow I will be. But for now get that thing into me!\"\n\nI reached down under her and aimed true. She was ready for me, slightly off my body and ready to sink down. One stroke, the weight of her body impaling her on me!\n\nI grabbed her ass again to help her rise and fall on me. Jo was quickly yelling out and I was getting tired. But her passion had my balls boiling in no time, filling up her snatch with a strained groan joining her screams.\n\nWe eventually made it inside and continued.\n\n~~~\n\nJo was right. The next day indeed started her monthly off time. We were starting to fall into a pattern of sorts together and it was nice.\n\nOn Thursday, however, Jo called me at work to say that her car wouldn't start. She had to take the bus to work. I promised to pick her up so she wouldn't have to ride it back.\n\nAfter work I went back home and asked Jeff from across the street to help me figure out what was wrong with her car. We poked this and prodded that and Jeff announced that it wasn't good. The oil and antifreeze were gone, and there was oil stuck to the sides of the antifreeze reservoir.\n\n\"I'm guessing that the head gasket's to blame, possibly a lot more,\" Jeff said.\n\n\"How bad is that?\"\n\n\"Well, about 2 grand bad nowadays,\" Jeff said.\n\n\"Jo's gonna freak! I'm not sure she has that kind of money lying around to fix a car with 120,000 miles on it!\"\n\n\"If she decides not to fix it I've got a number for a pick and pull place that'll pay her $300 for it.\"\n\n\"Yeah give it to me. I'm sure she'll be using it. Thanks for the help,\" I said shaking his hand.\n\n\"Hey, how's it going with the two of you?\"\n\n\"It's going pretty well.\"\n\n\"That's it?\"\n\nI shook my head smiling. \"I'm not going to kiss and tell.\"\n\n\"Well apparently show and tell isn't off the table for the two of you!\" he said with a shit eating grin.\n\nI laughed. \"Did you enjoy the show on Sunday?\"\n\nJeff laughed through his widening grin. \"The wife didn't mind, that's for sure!\"\n\n\"Well, glad it could benefit you!\"\n\nHis face grew a little more serious after a moment. \"Tell me one thing I couldn't figure out for myself, though.\" He leaned closer and lowered his voice. \"Does the carrot grow underground?\"\n\nI had to laugh. That was something he was bound to figure out for himself soon enough anyway! \"Yes. She's a carrot through and through.\"\n\nJeff's grin returned and he clapped me on the shoulder hard. \"You're one lucky fucker!\"\n\n\"You're telling me!\"\n\nI arrived at Jo's store at 8:30 and went in to wait for her. It wasn't busy and she bounded up to me, excited to see me and surprised I was brave enough to walk into a woman's clothing store alone.\n\nShe gave me a quick kiss. \"I won't be done for another 45 minutes, you know.\"\n\n\"I know. I just wanted you to know I'll be out there when you're done,\" I said thumbing over my shoulder.\n\n\"Ok. As soon as I lock up the place we can leave,\" she said giving me another quick kiss.\n\nAt that moment another associate walked up to us. \"Aren't you going to introduce us?\"\n\nJo's face soured just a little. Paula didn't catch it. \"Sure. Paula, meet Gary.\"\n\nPaula was a two-punch knockout. Jo was a flick of a finger in the air knockout, but I might be biased!\n\nPaula was tall and slender, about two inches taller than me in heels and weighed probably a buck 10 at most. She wore a very tight fitting grey dress that accentuated her large breasts and showed off most of her extremely fit legs. I tried not to stare, which was made easier by her platinum blonde hair. I was never all that fond of dye jobs; especially ones that made hair look as fake as hers.\n\n\"Nice to meet you, Paula.\"\n\n\"Likewise, Gary.\" She held out her hand as if she wanted me to kiss it. I looked at Jo and she shrugged so I played along. \"Ooh, a gentleman. Good job, Jo!\"\n\n\"Well, I'll be out there when you're done,\" I said quickly. \"Ladies,\" I said with a bow and a sweep of my arm, turning toward the hall.\n\n\"He really is nice! You hit the jackpot!\"\n\n\"Thanks. He's mine, remember!\"\n\n\"I know, I know!\"\n\nFrom out in the hallway I saw it: Paula was checking Jo out. Then she'd look out at me, and when she saw me looking back waved. Paula's eyes were, however, mostly on Jo.\n\nAt 9:30 Jo and Paula finally came out. \"Sorry, problem with the registers. All set! But...\" She looked up at Paula and then back to me, \"could Paula get a ride home? She rides the bus,\" Jo said.\n\nI nodded. \"If you ride it like that you're braver than most people,\" I said.\n\n\"That's what pepper spray is for!\" Paula said smiling. \"But actually, I need to go to my second job. I work at Euphoria. They called me in tonight.\"\n\n\"Rather late for a Thursday,\" I said.\n\n\"Someone called in sick and they're busy. Why don't you stay there for a while? They have a great band playing tonight: Puppets for Hire.\"\n\n\"You're kidding? I didn't know they were in town!\" I said a little too loudly.\n\n\"You know that band?\" Jo asked unbelievingly.\n\n\"Yeah. I've seen them a couple of times. They're really good!\"\n\n\"Well then, I guess we're going out,\" Jo said to Paula.\n\n\"Spectacular!\" Paula said.\n\n\"What time do you have to be there?\" I asked.\n\n\"By 10:00. I couldn't make it on the bus.\"\n\n\"I guess not!\" I responded.\n\nWe reached my car and piled in. Jo and Paula got into the back seat and I drove off. Then Paula surprised us both by undressing, leaving Jo no way to get away. I, of course, used the rear view.\n\nPaula was wearing a half cup bra, unashamedly showing her nipples and quite a lot of breast. She also appeared to be naked below that. She lingered after removing her dress to talk to Jo about something. It was just an excuse.\n\nLooking into the rear view I saw Paula lick her lips a little while staring into the mirror at me.\n\nWe approached the club and she finally pulled on her clothing. I stopped the car and Paula gave Jo a slightly lingering kiss before getting out in jeans and a bar t-shirt.\n\nJo looked toward the club while she was getting out and saw some of the people milling about. \"Are we dressed ok?\" Jo asked. She was overdressed from work in a stunning green dress, and I was in my slacks and dress shirt from work, minus the tie.\n\n\"You'll both look fine. Quite fine,\" she added with a little too much flourish. \"Don't worry.\"\n\nWe walked into the club and right in behind Paula, skipping the cover charge. \"Whatever you want it's on me,\" she said as she got behind the bar. We barked out our soda orders. \"Nothing more festive?\"\n\nWe both shook our heads. \"Nope. We're both non-drinkers,\" Jo replied.\n\n\"Fair enough.\" She got the drinks. \"Enjoy!\"\n\nWe found a table and Jo got into the groove of the band.\n\n\"What the hell was that in the car?\" I asked.\n\n\"Paula's becoming more direct about what she wants now that she's met you. Paula wants you,\" Jo said.\n\n\"With the way she was staring at you tonight and the kiss, I think it's you she wants the most.\"\n\nJo stared off into the crowd.\n\nI got her attention again. \"Did she use her tongue when she kissed you?\"\n\n\"Um, yes.\"\n\n\"Dirty birdy! What was with her stripping in the back seat and staying that way?\"\n\nJo stared unfocused again somewhere into the club. Her face tightened. \"Did you enjoy the view?\" The look on her face told me I should tread carefully.\n\n\"A naked woman in clear view? Yes. I'm a guy and I noticed.\" Jo was shocked by my admission. \"She didn't hold a candle to you.\"\n\nJo smiled at that a little. \"It was a bit surreal, wasn't it?\"\n\n\"You can say that again!\" I glanced at her and slowly asked, \"Did you enjoy it?\"\n\nJo blushed and looked away, putting the knuckle of her index finger against her teeth.\n\n\"I thought so,\" I said putting my hand on her back. \"Was she wearing anything besides that almost bra?\"\n\n\"No,\" Jo said looking away again.\n\nWe danced a little and had some fun. No one bothered Jo this time and I think she was happy and disappointed at the same time. I think she secretly missed the attention from her own club... some of it anyway. That's not to say that all eyes weren't on her again.\n\nWe decided to call it a night after an hour so that I could get some sleep for the next day. Paula seemed disappointed that we didn't stay. She surprised both of us by saying good night with a kiss and a hug.\n\n\"Paula's very... affectionate,\" I said walking away.\n\n\"She's a giant flirt! But she's a friend.\"\n\n\"Why Jo, have you developed friends away from home?\"\n\n\"I believe so. It's nice, even if she does have an agenda.\"\n\nWe got into my car and started for home. Jo seemed worried about something and was looking out the window. She didn't seem herself.\n\n\"What's wrong?\" I asked.\n\n\"Nothing,\" she said in an unconvincing tone.\n\n\"I don't believe you. Come on, open up.\" She looked at me and there were tears in her eyes. \"Now I know there's something wrong. Please...\"\n\nShe still didn't talk. Instead she started crying. I took her hand and held it, waiting.\n\n\"I'm afraid...\" she started.\n\n\"Of?\"\n\n\"I'm afraid you'll leave me for Paula. For someone else...\" She let loose again with the tears.\n\nI tried to take her hand but she moved it away. \"Honey, please. That's not going to happen.\"\n\n\"How can you know that for sure? You're a man, she's a hot woman. That's what men do!\" she said sobbing this time.\n\n\"Please look at me.\" She eventually did. \"I'm monogamous by nature, not one to sleep around. Paula is an 8, maybe a 9. Well, let's call her a 7 at best with the off white hair.\" Jo chuckled a little. \"You're a 15! Even without the red hair you'd still be a 12!\"",
        "She smiled weakly through the tears. \"But...\"\n\n\"But nothing. I have you and as long as we're together that is how it will be.\" I looked at her and saw her smile a little more. \"Besides, I'm the one that should be worried.\"\n\n\"Why?\"\n\n\"You could have anyone you want. What you're doing with a 4 like me I'll never know!\"\n\nJo hit my chest playfully. \"You're a perfect 10 in my eyes!\" she said giving me a kiss on my cheek.\n\n\"Well, necessary vision test not withstanding,\" she hit me a little harder that time, \"with the way Paula was staring at you all night you're more likely to be seduced by Paula than I am. I can stay away from the store and you can't.\" She blushed at that. \"I knew you've noticed it, too!\"\n\n\"Yes I have. Paula is very... outspoken!\"\n\n\"See? I have to worry that she'll steal you away from me!\"\n\n\"No. That won't happen. Even if...\" she trailed off looking away.\n\nI waited. \"What?\" She shook her head. \"What?\"\n\n\"Even if she seduces me I'd never leave you. But I'd never cheat on you with either a man or a woman.\"\n\n\"Somehow I don't think that's what you were going to say.\"\n\n\"I can't.\"\n\n\"You can.\"\n\nShe looked at me as if weighing her options. \"Sometimes I crave a woman's touch. But I'm with you. I won't act on it,\" she said somewhat unconvincingly.\n\nI pretended to think about what she said for a moment. Truth is that there wasn't much thought involved. \"I tell you what. If you start to strongly crave it, come and talk to me first. We'll work it out.\"\n\n\"You'd do that?\" she asked, astonished.\n\n\"Yes,\" I said.\n\nJo's face lit up seductively. \"Are you one of those guys with a porno fantasy of watching two women get it on?\"\n\nI couldn't help but laugh. \"I'm a guy. Which of our half of the species hasn't dreamed of that?\" I said smiling.\n\nWe were nearing home, so I decided to kill the mood and break the bad news. \"Jo, I'm afraid Jeff thinks your head gasket needs replacing in your car.\"\n\n\"What's that?\" she asked swinging her head toward me.\n\n\"A $50 part that costs $2,000 to fix, that's what. And that's assuming that's all that's wrong with it.\"\n\n\"What? I can't afford that! Not on that old junker!\" Isn't it funny how a costly repair changes your outlook on your precious car? \"What am I going to do now?\"\n\n\"Only two options I'm afraid. Get it fixed or look for another car. If you fix it, remember that it's old and there's no telling what'll go next.\" I looked at Jo, seeing her wrestling with the options. \"I thought you saved a lot of money?\"\n\n\"I have a new semester to pay for soon and with my,\" she looked at me and then down and away, \"other expenses it's dwindling quickly.\"\n\n\"Jo, we can talk about the rent,\" I said pulling into the garage.\n\nShe looked at me with a very serious look and said, \"Not on your life! I made a commitment and I will honor it. I just need to find a better paying job and more hours...\" She looked away.\n\n\"I take it you don't like searching for a new job?\"\n\n\"No. Does anybody?\"\n\n\"Well, you're in school and doing extremely well. Maybe you can find something in your field?\" I asked shutting off the car and closing the door.\n\n\"I only have a year in. I don't think that'll get me anywhere. Plus I have summer classes to worry about scheduling around.\"\n\nI thought for a moment. Then it dawned on me. My company's pretty big... \"I could put out some feelers at work and see what I could find you. Who knows, I might even be able to find you something in your field.\"\n\nJo looked at me and almost smiled... almost. \"You don't need to do that. I can do it on my own.\"\n\n\"Yes, you can. Of that I have no doubt. But if I find something you'll still have to interview. So you'll be getting the job on your own regardless. I'll only help you find it.\"\n\n\"I don't know...\"\n\n\"I will not pull any strings for you. Besides mentioning your academic accomplishments I won't say another word.\"\n\nThat made her smile. \"I can live with that, thanks!\"\n\n\"Of course, I'll require a finder's fee. We can work that out on a barter system.\"\n\n\"You mean you'll require me to perform... certain services in exchange?\" she asked with a sexy look, fingering the buttons on my shirt.\n\n\"I will. Let's just say that you'll have to work it!\"\n\nShe got a flash of revelation and a big smile. \"Oh, I think I know how you want me to work it!\" She said pushing out her chest and putting her index fingertip in her mouth, biting it sexily.\n\nJo was, however, preoccupied and after a while she said, \"I just don't know how I'm going to get to work and classes. The bus won't be able to get me from one to the other fast enough.\"\n\n\"We can work it out with my car. Some days you can drive me to work and pick me up. Other days I may have to ride the bus.\"\n\n\"You'd... you'd do that for me?\" she asked incredulously.\n\n\"My schedule is variable but far less complicated. Drive to point B, return to point A. Plus it's safer for me to ride the bus if need be.\"\n\n\"How did I ever deserve you?\" Jo asked looking dreamily into my eyes.\n\n\"I could ask the same,\" I said smiling into hers. \"When do you work tomorrow?\"\n\n\"Until 5. Why?\"\n\n\"I'll take the bus in the morning and then you can pick me up after you finish. How does that sound?\"\n\nJo reached out to hold my face. \"It sounds like someone deserves to get lucky!\" Then her face changed and was difficult to read. \"Should I get a bra like Paula's?\" Jo asked. \"Would that turn you on?\"\n\n\"Babe, you could wear an outfit made from unsprung mouse traps and it'd still turn me on!\"\n\nI did get lucky. I just wish I could have reciprocated that night.\n\n~~~\n\nThe next day, Friday, I took the bus and it wasn't as bad as I'd remembered it. When I arrived at work, I spoke with a friend I had in HR. Since I was a manager, I had plenty of contacts so that when I hired I could get the job done right.\n\nSally was very helpful and came up with a few possibilities. When I told her what an overachiever Jo was, Sally brightened and gave me another, telling me to try that one first. I thanked her and waited until quitting time with the good news.\n\nI told Jo about the opportunities as soon as we were in the car, and she was thrilled! She planned to go in on Tuesday to apply since Monday was Memorial Day.\n\nJo was planning on working on her r\u00e9sum\u00e9 that night, but that was not to be. Joanne and Jonas were waiting for us when we got home, surprising us with a visit. Something about the way Jonas walked and appeared was a little off, but I might have been imagining it.\n\n\"Mom! Dad! What are you doing here?\" Jo said as she ran to hug each one.\n\n\"Dad wanted to look at your car,\" Joanne said.\n\nJonas was already in the garage looking, and barely seemed to do so. \"I'm afraid Gary's probably right about the head gasket. This car is going to start eating away your savings if you fix it,\" Jonas said.\n\nJo looked defeated. \"I was hoping you'd say it was something simple.\"\n\n\"Afraid not.\" Jonas looked at his wife and she nodded, again speaking volumes without a single word! \"Honey, your mom and I never got you a present for a very successful year at school. We're very proud of you and all you've accomplished in the last two years! We'd like to take you shopping, maybe at that store you work in?\"\n\n\"You don't have to.\"\n\n\"We insist. Come on, get in the car.\" The three of them started moving toward Jonas's car and I stood my ground. He looked at me. \"Gary, would you join us?\"\n\n\"I wouldn't want to impose...\"\n\n\"It'd only be an imposition if we didn't ask. Come with us son.\"\n\nI don't know if that was a slip of the tongue or his acceptance of me, but there was no way I could refuse. \"I'd be happy to!\" I said with a smile.\n\nWe started driving towards her mall, but didn't get very far before he veered off course. \"Daddy, you're going the wrong way.\"\n\n\"Oh, so I did. We'll still get there. Let's call this the scenic route,\" Jonas said.\n\nA short time later we were pulling into a car dealer's lot. \"Let's do a little browsing here,\" he said.\n\n\"I can't afford anything here, Daddy. The used lot is two blocks away.\"\n\n\"Oh, well... No harm in looking,\" Jonas said. Joanne smiled a little.\n\nI caught on but Jo still hadn't. Her parents were incredible people!\n\n\"Your mom and I are looking for a new car anyway. I'd hate to waste a trip,\" he finished.\n\nWe all got out with the two couples going separate ways. Jo eventually gravitated toward a car in the showroom. \"I like this one,\" she said to me. \"I wish I could afford it.\"\n\n\"Get in, take a look inside,\" I said.\n\n\"I can't. I don't want to get attached to something I can't afford.\" She said this, but she wasn't moving or looking away. She was ogling the car in a way that suggested she thought it'd disappear if she blinked.\n\nWe stood there for a bit. I looked over at Jonas and Joanne and they were talking with a saleswoman, motioning toward us. She nodded her head and moved away. 10 minutes later the identical car drove up in front of the show room. Jo wasn't noticing any of it because her eyes never moved away.\n\nJonas and Joanne joined us. \"Find something you like, honey?\" her dad asked.\n\n\"Just admiring a dream. It's nothing I can afford.\"\n\nThe saleswoman, whose name was Petra, approached us. \"I couldn't help but notice you admiring this car,\" she said with a slow, sensuous sweep of her hand hovering over the hood. \"Would you like to take a test drive?\" she asked, sexily extending a key to Jo with her other hand. I'm sure Petra was a successful saleswoman!\n\nJo looked up from the car and saw its twin outside. Her face brightened and then she deflated. \"Thank you but I can't. It's way out of my price range.\"\n\nPetra smiled and said, \"We're having a sale today for well qualified people. No money down and nothing per month.\" She glanced at Jonas and he smiled.\n\nJo was like a deer in headlights: speechless, stunned, and about to get hit! Then she did. She snapped her head over to her dad and said, \"No! You can't!\"\n\n\"I can and will.\"\n\n\"It's too much!!\"\n\n\"For my little girl and all her accomplishments, it will never be enough!\"\n\nJo ran to her parents thanking and kissing them.\n\nJo looked at Petra and said, \"I will take that test drive, thank you!\" She held out her hand and said to me, \"Come with me baby?\"\n\nPetra gave me a strange look while she checked me out. Her eyes settled on mine and she smiled with a slight nod.\n\nJo, Petra, and I piled into the car and took the test drive. The Prius was very quiet and had all the options. Jo was in love! It was even the color she wanted: forest green.\n\nWe returned to the showroom and Jo immediately went to her parents. \"I love it! But seriously, you don't have to do this!\"\n\n\"No we don't. We want to. We never gave you a present for graduating at the top of your class. Somehow that seems like nothing compared to how far you've come lately. We're proud of you!\" Jonas said.\n\nJonas, Petra, and Jo sat down to do the paperwork. Joanne and I hung back and ate a few complimentary cookies. After a while we went back to join Jonas and Jo, seeing her beaming from ear to ear and moving like she had ADHD.\n\nSoon the transaction was complete. Jo was jumping up and down with her new keys, possessed with a level of exhilaration that I'd not yet seen -- and that was saying something! It was amazing to see her like that! She jumped up and hugged her parents and then Petra. Petra returned the hug happily, closing her eyes with a sigh.\n\nJo jumped into her new car with her mom. That left Jonas and me together. Just before I got into his car Petra stopped me with a hand on my forearm.\n\n\"Hey, how did a handsome guy like you catch a gorgeous creature like Jo?\"\n\nI sniggered and shrugged. \"If I only knew myself...\"\n\n\"Well, if either of you should ever need or want anything else, please don't hesitate to call me,\" she said extending a card in her fingers to me.\n\nI took it and saw her business card. I looked up and Petra twirled her finger, so I looked at the back of the card to see her personal number. I looked up again to see her smiling and biting her lip. Then she turned to walk away. I placed the card in my shirt pocket.\n\nWe left but were only a few blocks away when Joanne called me and told me that we were taking a detour along the way. We went to an Italian restaurant, Jo's treat! We had a great time together and most of us had our fill. Jonas ate very little.\n\nWe arrived home and Jo, Joanne, and I pushed Jo's old car out of her stall into the driveway with Jonas steering. That's when we noticed the real reason the car would no longer start. \"Jo, look,\" I said.\n\nShe saw the black stain on the cement. \"Is that oil?\"\n\n\"Yeah. It's probably bad hoses or a cracked engine or who knows what. I'm pretty sure this car is toast.\"\n\nWe all finished pushing it out into the street. No worries about it leaking with an empty crank case.\n\n\"Gary, let's go pick up some supplies before the stores close,\" Jonas said. I nodded and we ran to buy some oil stain remover.\n\nJo and I quickly applied the product that promised to only take 30 minutes. Then she took the opportunity to take her dad for a spin in her new car. He didn't have a chance at saying no.\n\n\"Joanne, it's incredible for you and Jonas to do this for her,\" I said.\n\n\"It was the least we could do for our baby.\" She looked away and started to cry a little.\n\n\"What's wrong?\"\n\n\"Nothing. Everything's fine. I'm just happy that Jo is doing so well.\" The look on her face said it was something more, something serious. Her tears flowed more freely.\n\nI wasn't sure what to do, but reached out to hug and comfort her while she cried.\n\nAfter a while she moved back and wiped her face. \"Please don't say anything to Jo.\"\n\n\"I won't,\" I said with a reassuring smile. \"Want to go out and see how the spill looks?\"\n\nJoanne nodded and we did. I started cleaning up the spill and chemicals. It did quite a nice job getting most of it out. Jo and Jonas arrived shortly after.\n\n\"That's one quiet car! I can see why she likes it,\" Jonas said to Joanne, walking up to her and putting his arm around her. \"We're going to get going.\"\n\n\"What? No! Not yet!\" Jo cried out.\n\n\"Afraid so. When do you work tomorrow?\" Jonas asked Jo.\n\n\"Until 5, why?\"\n\n\"Come by the house tomorrow for dinner. Both of you if you can make it?\" he finished looking at me.\n\n\"Of course,\" I answered.\n\n\"Sure, Daddy.\" She jumped up and hugged him hard. \"Thank you again! I love you so much!\"\n\nThanks, hugs, and kisses all around, Jo's parents left and we went inside the garage.\n\nJo stopped next to her car, staring at it like it was the most intensely pleasurable thing she'd ever seen. I was right behind her, putting my arms around her midsection to hold her and my head next to hers.\n\nJo opened the back door and quickly turned, roughly shoving her tongue into my mouth. She frantically worked my belt, button, and zipper trying to free me of my pants, soon sending them and my underwear to my ankles. Her next action was to drop her skirt and break the kiss.\n\nShe fell into and across the back seat and the invitation couldn't have been clearer. It's a small car, but with our legs hanging out it could be done. I ducked, weaved, and fell on top of my ball of energy. Her hand guided me into her flooded pussy in one push. We both moaned out loudly.\n\nJo was pushing up at me while I was furiously pushing into her, skipping the foreplay and going straight to frantic. Jo came first, second, and third, but they were quick and furious, primal. I was grunting into her and she was only making similar noises, not her usual loud self.\n\nOn her fourth orgasm, my continuously building high hit a plateau and I blasted into her. Only then did Jo start screaming out my name. I bucked hard but slowly, burying myself deep into her while I spent myself. Jo was holding me tightly to her while another blast shook her to the core.\n\nBreathing hard and hanging half out of her new car, my senses started to return to me. Only then did I realize that the breeze hitting me was not what I should have felt at that point. I reached to her visor as best I could with Jo clinging to me, and clicked the button to end our public show.\n\n\"That w-was intense!\" Jo said with a last quake going through her body.\n\n\"I'll say! Was that your way of breaking your car in?\" I chuckled while I lifted my head away enough to look at her.\n\nShe was smiling at me. \"I'm just trying to get rid of that new car smell!\" she said planting a kiss on me again.\n\n\"Well, now it's new car/fresh fucked. I wonder if someone's tried to bottle that one.\" I asked with a smile.\n\n\"Mmmm. I'd buy the fresh fucked part of that!\"\n\nWe eventually made our way inside. But I had an idea. \"Put on a bikini...\" Come to think of it... \"I assume you actually own one?\"\n\n\"Yeah, why?\"\n\n\"New car and a hot babe!\" I said holding up my phone. \"It may not be a sports car but with someone as hot as you no one would ever notice the car!\"\n\nJo's face turned to lust. \"Only if the photographer doesn't bother with a suit!\"\n\nI laughed. \"House rules!\" I started stripping.\n\nJo kissed me and flitted off to find her bikini, forgetting where she put it. Eventually she walked out in something that defied imagination. My eyes were bugging out and my jaw was full open. Her landing strip was clearly visible but what little fabric that was present was barely covering the naughty bits, and I do mean barely! Minute fabric triangles and some slight strings were all that could be seen.\n\nShe walked up to me with the sexiest wiggle I'd ever seen. Her finger closed my maw. \"Careful, you might catch flies that way.\" She looked down. \"I can see that you like what you see?\"\n\nI nodded, I think. \"F-fa-wow fan-fucking-tastic!\" I shook my head clear of at least one cobweb. \"Imagine you on a beach wearing that...\"\n\nJo smiled. \"Only if you're willing to go out in a banana hammock!\"\n\nMy dick jumped at the thought, even as my face reddened.\n\nJo took my hand, reminding me about what I'd just asked and led me out into the garage. She immediately sat on the hood of the car and laid back to stretch across it. I dumbly lifted my phone and started taking pictures.\n\nJo started moving into different poses and I kept snapping, eventually taking the lead and directing her. Luckily the internal lights were fairly bright, but even still it wasn't the best lighting to flatter the beauty on the business end of the camera. On the car, in the car, everywhere we could think I just kept hitting the virtual button.\n\nThen the bikini top slowly came off and we repeated many of the same shots. When the bottoms were eased down, the nature of the shots changed a bit. We started by doing some of the poses quickly, but Jo's finger soon found its way onto and into her. My favorite was her lying gingerly across the hood, feet on the front corners, and her hands busy. I was only too happy to capture these moments!\n\nIt was obvious we found the best of the shots, and I needed a better camera! I did many close ups of her pleasuring herself and of her face as she screamed out.\n\nThen I had enough of the camerawork and buried myself in her again, bringing us to another fast and furious screamer in the back of her car!\n\nI ended with a couple of cream pie close ups, Jo's fingers in the pie, and the taste test.\n\n\"Those pictures...\" Jo started.\n\n\"Are never going to see the light of day. They are ours and ours alone,\" I finished.\n\nJo smiled. \"I trust you. I'm just disappointed we didn't have a complete set...\" A wickedness spread through her face. \"We need a cameraperson!\"\n\nI laughed. \"Have someone in mind?\"\n\n\"Oh, maybe...\" she said dreamily looking into my eyes.\n\nI smiled at her, my heart going further into the deep, happy hole I'd never be able to leave. \"You're going to be the death of me, and I'd rather go no other way!\"",
        "Jo and I continued to work some of our excess energy off that night. Now that she was back on and excited, her level was infectious and impossible to refuse. The count for the night was Jo: 13, me: 3. I'd never before been happier to get the lowest score!\n\nJust before we fell asleep, I mentioned to Jo, \"Before we left, Petra gave me something.\"\n\n\"What was that?\"\n\n\"She handed me her card. She said if we ever want anything to give her a call.\"\n\n\"Anything for a sale, I guess,\" Jo said.\n\n\"No, I mean she called you gorgeous and gave us her personal phone number.\"\n\n\"Oh really? What did you do with the number?\"\n\nI reached over on the bedside table and retrieved the card, handing it to Jo. She looked at it and smiled. \"Put that somewhere safe,\" she said.\n\n~~~\n\nJo pulled up in her car at home after work on Saturday and honked the horn. I ran out quickly and we drove to her parent's house. We called ahead to let them know that we were on our way and found dinner waiting for us. Joanne outdid herself making the meal; it was incredibly delicious! Somehow, even with our beaming compliments, she wasn't really happy.\n\nAfter dinner we all left the mess and went into the living room at Jonas's request. Jo and I sat on the couch while Jonas took up a recliner. Joanne kneeled on the floor next to him and took his hand. She started to cry before he even began to speak.\n\nJo and I quickly became worried.\n\n\"What's wrong?\" Jo asked.\n\nJonas took a deep breath and gripped Joanne's hand strongly. \"Dear, I have some bad news,\" he started.\n\nJo grabbed my hand tightly in both of hers. I put my free hand over hers.\n\n\"I have cancer,\" Jonas said. Joanne had her head buried against his leg and we could see her body shake from the sobs. \"Although in this case,\" he sighed, \"it might be more accurate to say that cancer has me.\"\n\nJo's own tears were already starting, not even knowing much about it. \"What? What do you mean? How bad is it? How long have you known? What are they doing about it?\" she blurted out in a rush.\n\nJonas was waving his hands in the air to indicate to her to calm down a little. \"I found out about it a little over two weeks ago and have already had two weeks of chemo. They didn't wait to start the treatments.\"\n\nHe looked at Jo and took another deep breath. \"I'm afraid it's very serious. I went in yesterday for more tests. They wanted to see if the chemo helped at all so far.\"\n\nJoanne was wailing at this point and Jo ran over to hug her. I just sat there stunned.\n\n\"Why haven't you told me until now?\" Jo asked.\n\n\"I didn't want to scare you, dear. A couple of weeks ago they said I had at least six months unless the chemo worked.\" Jonas hesitated and looked down sadly.\n\nJo caught on, especially to his silence. \"And what about after yesterday's tests?\"\n\nJonas took a deep breath and closed his eyes. \"A week. Maybe two.\"\n\n\"WHAT? WHY?\"\n\n\"The cancer spread to several other organs even with the harsh chemo cocktail they were giving me. My doctor consulted with several others around the country and everyone agreed...\"\n\n\"WHAT?\" Jo asked again at his hesitation. I moved behind her to try to help her calm down a little.\n\n\"Anything else they could do for me would most definitely quickly kill me anyway, and I'd be miserable in the short process.\"\n\n\"NO! You have to fight it, Daddy! You have to beat it and prove them wrong! If anyone can do it, you can!\" Jo exclaimed, jumping up to hug him in the chair.\n\nJonas wrapped his arms around his little girl and stared at me. His head shook slightly and then he looked at Jo and back at me. I understood. I hated understanding what he said without a word. I nodded to him, and he responded by blinking slowly and curling his tightly closed lips into a smile.\n\n\"Dear, I've already put up the good fight. The doctors have done all they can for me. We need to be prepared.\"\n\nJoanne collapsed onto the floor hearing this. I went to her, drawing her into my arms to try to comfort her. Both ladies were in shambles, and I have no idea how long we spent like that letting them cry.\n\nJo spoke up as best she could. \"Daddy, I'm cancelling all my classes for summer and taking off work. I'll be here to take care of you!\"\n\n\"You will not young lady! I am so very proud of you and will not have you stopping your life because of this. You can visit as often as you like but you must continue your life! I want to know that you'll someday be the success I always knew you would be. Promise me?!\"\n\n\"My life includes you, Daddy! I don't want to waste another minute we have left!\"\n\nJonas just stared at her, finally nodding. \"But you will continue your classes. I insist.\"\n\nJo nodded. \"I'll switch them to online then.\" She looked at her mom. \"I assume I can stay in my old bed, Mom?\"\n\nJoanne nodded between sobs and got up to hug her husband and daughter.\n\nI was left alone on the floor and stood up to go sit on the couch. This was their time and I felt like an intruding outsider. Jonas saw me and motioned for me to come closer. He held out his hand and took mine, putting it on top of Jo's back with his hand over mine.\n\nThe group hug started to loosen and Jonas spoke up. \"Dear, would you and Jo go and get some of that ice cream I like so much? I need to speak with Gary alone.\"\n\nThe ladies and I were all confused, but they kissed Jonas and did as he asked. Jonas looked out at the driveway and waited until they left. I sat in the chair closest to him.\n\nHe asked, \"Do you love Jo?\" The expression on my face must have said a lot. \"Still haven't decided, eh?\"\n\n\"I feel very strongly toward her. I believe what I feel is love, but I'm just not ready to call it that it yet.\"\n\n\"That's good enough for me. I'm sorry I didn't have enough time to get to know you, son. You've done so much for Jo in such a short time. Thank you for getting her a shot at a great job.\" I nodded. \"And thank you for making her so happy. You've impressed me, and that's no easy task.\"\n\n\"I gathered that,\" I said with a little roll of the eyes and we laughed a little.\n\n\"I have a favor to ask you,\" Jonas said pausing. \"Well two actually.\"\n\nI nodded saying, \"Anything.\"\n\n\"First, I need you to be strong for both my wife and daughter. This is going to be very difficult for them. They'll need someone who can help see them through this.\"\n\n\"Of course. It'd be my honor.\"\n\nJonas smiled a little, but quickly adopted a serious look. \"The second favor's going to seem a bit odd, but I want someone to do this that can commit to it.\"\n\n\"What is it you want?\"\n\n\"I want you to deliver my eulogy.\"\n\nBlood rushed from my head as the shock hit me. \"You what? Me? Surely there are people who know you better or for a longer time who would be happy...\"\n\nHe held up a hand to stop me. \"I am asking you. I wrote something I want you to say to Joanne and Jo in the eulogy and the rest is up to you. They won't be able to get through it.\"\n\n\"But me, sir?\" He shot me a disapproving look. \"Sorry, Jonas.\"\n\n\"Please. I insist.\"\n\nI thought about it and had a better idea. \"For you, anything.\" I proceeded to tell him about my idea.\n\n\"I knew I picked the right man for the job!\"\n\nWe spent some time going over my plans and preparing the eulogy. I texted Jo to stay away for another hour, having a great start by the time the ladies returned. I hoped that I had at least a week, but there was an awful lot to do.\n\nJoanne and Jo returned, and Joanne called out from the door, \"Did you boys get to know each other better?\"\n\n\"We sure did,\" I said exchanging a knowing look with Jonas.\n\n\"I want to go to the old car show tomorrow, and then your mom and I are going up to the cabin one last time,\" Jonas said to Jo.\n\nI walked over to Jo and pulled her into a hug and kiss. \"I'll get going so that you can spend time with your parents. Do you mind if I use your car to get home?\"\n\nJo latched onto me. \"Stay, please?\" She looked so fragile, so ready to fall apart with the slightest provocation.\n\n\"I'm not sure that's...\"\n\n\"Mom, can he stay with us tonight?\" she asked looking into my eyes.\n\n\"Oh, I don't know, honey,\" Joanne said looking at Jonas. Jonas blinked and Joanne turned back saying, \"It's decided. Gary?\"\n\nJo was pleading with her eyes. Jonas made me promise. \"I would be happy to.\"\n\nIn her little twin bed that night, Jo asked me, \"What were you boys doing while we were away?\"\n\n\"We were discussing selling you ladies to Dubai as sex slaves to pay for everything. It's definitely something you'd excel at!\" I cheekily responded.\n\nJo thumped my chest with her fist for that, and I deserved it.\n\n\"Seriously though, it's something you'll eventually figure out. But for now let's just call it a surprise, ok?\" Jo nodded against my chest. \"Are you doing all right?\"\n\n\"I don't know. It's hard to take...\"\n\nI kissed her forehead and hugged her close, which was easy since she had to be practically on top of me in that small bed. \"Make the most of the time you have with him.\"\n\nWe all had a wonderful day together on Sunday, going out for brunch and looking at all of the beautifully restored antique cars. Jonas even found what looked like his first car, down to the paint job and interior. He started to cry at the memories and the thought of everything that had happened since. The owner of the car practically begged him and his ladies to sit in the car after he found out what was going on. I took up the camera duties.\n\nJoanne and Jonas left straight from the show and Jo and I returned home. She went to work on her r\u00e9sum\u00e9 while I went to work on my task. I had to find a way to get more time alone to work on it since it was something Jonas made me promise to keep as a surprise. Luckily Jo kept her work hours for Memorial Day and Tuesday. Even still, there weren't enough hours.\n\nI took her out to eat at an Indian restaurant. I'd been talking about it enough since she moved in, but Jo wasn't enthused about trying something that new. For some reason she agreed that night. Thankfully she enjoyed it and even said she wanted to go back!\n\nThat night we just talked and cuddled. Jo, understandably, had too much on her mind.\n\nI got a lot done on Memorial Day because Jo was working the entire day straight through. I also spent a little time setting up an idea I had, something simple but one that was going to require a bit more time.\n\nJo went the next day to hand in her application for the positions that I told her about. I went in early and spoke to Sally to let her know. She insisted on knowing what time Jo would arrive and what she looked like. I happened to be going to a meeting at the same time. From the second floor I watched while Sally greeted a surprised Jo as she entered the building, walking her in and leading her back for an interview.\n\nI arrived home that night to an empty house. I quickly took care of the yard work and went in to make a late meal. Then I continued my work on the eulogy.\n\nWhen Jo came home she seemed a little angry. \"Did you pull some strings to get me a job?\"\n\n\"I only told Sally this morning that you were coming in. That was the extent of my involvement today and you already know the rest.\" She looked at me sternly. \"I swear that's it,\" I said defensively. \"Why?\"\n\nShe softened hearing that. \"They offered me a position doing graphics design! Entry level but I wouldn't have expected anything else. They'll even work with my school schedule!\"\n\nI stood and went to hug her. \"Jo, that's wonderful! Congratulations!\"\n\nShe held out a hand to keep me away. \"Are you sure you didn't have anything to do with it?\"\n\n\"Not a thing. Did you go in with your portfolio?\"\n\n\"Yes, such as it is,\" she said in a way that suggested that even she wasn't impressed.\n\n\"Sally is a tough interviewer and has never failed me when I needed a qualified applicant. If she offered you the position, then you deserved it!\"\n\nJo relaxed. \"Thanks for getting my foot in the door!\" she said as she reached out to hug me.\n\n\"When are you going to quit the store?\"\n\n\"Not right away. After I start I'll just go weekends for the time being. The discount is too nice to quit right away. There are a couple of things I have waiting for me that I want to get.\"\n\nJo went off to pack a couple of bags and I followed her. \"I'm off the rest of the week and am going to Mom &amp; Dad's tonight so that I can be there in the morning.\"\n\n\"When did they get home?\"\n\n\"Around noon. Dad's pain started today, or at least the pain he's told Mom about.\" Jo looked over at me. \"Will you come with me?\"\n\n\"No. You should be with your parents. I'll only be in the way.\"\n\n\"You'll NEVER be in the way!\"\n\nI smiled warmly. \"If anything happens call me and I'll get away. I'm sure Ron'll be happy to take over.\"\n\nThis seemed to help and we kept chatting while she packed.\n\nHer bags in the car, she came back into the house to embrace me and give me a big kiss. \"I'm going to miss you,\" she pouted.\n\n\"I'll miss you, too. But I'll see you soon.\"\n\nJo nodded and turned to walk to her car, stopping along the way. She rushed back into my arms and said, \"I love you!\" with the tightest hug of all.\n\nI never wished I was ready to say it more than that moment, but all I said was, \"I know.\"\n\nShe did give me another tight squeeze before turning and getting into her car. It seemed like she was having a hard time looking at me while she was driving away.\n\nI had a hard time sleeping that night. Not only because I was alone, but also because I couldn't get the look of her disappointed face out of my mind.\n\nI was awake long before my alarm so I went in extra early. That way I could get out earlier and do some more work on the eulogy... before I went over to Jo's parents' house.\n\nAt 9 my phone was ringing. It was Sally. \"I assume that your roommate told you about the position?\" she asked.\n\n\"Yes she did, and thanks for offering it to her.\"\n\n\"Oh, it wasn't all me. Her new boss practically begged me to hire her. He said he'd never been so impressed with the way an entry level candidate handled herself in an interview. She'll be going places in no time!\"\n\n\"She'll be glad to hear that. I can't thank you enough, but especially for making sure she did this on her own.\"\n\n\"Gary, I don't normally meet external applicants at the door. You did have some influence to get the ball rolling, but only that. I, um, I hope you'll remember that.\"\n\n\"I will. I owe you one.\"\n\n\"Yes you do.\"\n\nAt lunch I tried calling Jo but she didn't answer, so I texted her. 'Hi baby, how's your dad doing?'\n\nHer reply took a while. 'He's doing ok but his pain is increasing.'\n\nI instantly replied, 'How are you doing?'\n\nTen minutes later, with my head swimming in fear the whole time, I finally received her response: 'Ok.'\n\nMy heart sank. I stared at my phone and imagined all kinds of subtext to the one word. I searched for a response. 'Call me please?'\n\nA half hour went by with no response.\n\nNo response? I couldn't concentrate on work.\n\nRon saw it and at 3:30 told me to go early. \"Go and save this thing. You were never really happy until you met her. Don't screw it up!\" he told me.\n\nHe was right. \"You got this?\"\n\n\"Don't worry, of course I do.\"\n\nI shook his hand and ran out the door to my car, quickly driving to Jo's parents' house. I parked on the street because there was another car in the driveway besides Jo's, and knocked at the door.\n\nJo answered it and was surprised to see me so early in the day. \"What are you doing here?\" she asked with a slight scowl, pushed me back a little, walked outside, and closed the door behind her.\n\nI was worried. \"I wanted to be here for you and your family,\" I said quietly. Jo looked at me expectantly, or what I perceived as such. \"And I couldn't get the way you looked hurt last night out of my mind. I'm sorry...\"\n\nJo silenced me with a finger bisecting my lips, and then her lips. When she pulled away she was smiling at me. \"Forget that. Too much going on and I crossed the line...\"\n\n\"No, you didn't,\" I said interrupting. \"I never should have... I should have...\" I said fumbling for what to say.\n\nJo again silenced me and held me tightly. \"I won't say it again. Not until you can,\" she said with her head on my shoulder. \"I'll just show you how I feel instead. Is that good?\" she finished looking into my eyes.\n\nMy heart swelled, warming my entire body. I immediately hugged her in a bear hug, never wanting to let go, and rocking her slightly.\n\nSoon enough, Jo broke the hold. \"Come on, let's go inside. I want to introduce you to someone.\"\n\nShe pulled me inside and I found out why there was another car in the driveway. All eyes turned to us.\n\n\"Gary, meet Rick and Rita. They're two of my parents' oldest friends,\" she said looking at me. Then she turned to the guests and added, \"This is my boyfriend, Gary.\"\n\nRick and Rita stood to greet me. Out of the corner of my eye I saw Jonas mouthing something and pointing. I nodded. We all exchanged pleasantries and the guests said they were leaving. I made an excuse that I had to get something out of my car and went out with them.\n\nFive minutes later I was back inside with two bouquets of flowers and my laptop. It was a good thing that my mind was so scattered and I did actually leave them in the car.\n\nI handed a bouquet to each of the ladies and received a warm embrace from each. Joanne even kissed me on the cheek. \"How are you feeling?\" I asked looking at Jonas.\n\nHe chuckled. \"I've been better,\" he said wincing in pain. \"Oh, by the way thanks for helping Jo with her job search,\" he said beaming at me as best he could. \"I'm so proud to have someone who'll look after my girl like that.\"\n\n\"I only gave her a foot in the door. She kicked it open and took charge!\"\n\n\"That's an odd way of saying it,\" Jonas said.\n\n\"Not really. I spoke with Sally, her interviewer, and she said she and her new boss were blown away by Jo. It takes a lot to impress her,\" I said looking at Jo.\n\nJo was standing by her dad. He reached out and took her hand, squeezing it. \"That's the way, dear. I knew you had it in you!\" He said this with a strangled look on his face betraying his pain. Jo turned and hugged him.\n\nI moved closer to Joanne and quietly asked, \"Is the pain medication not working?\"\n\nShe shook her head and tears started dripping down from the corners of her eyes. \"We have to keep increasing it and he was getting upset that he was in la la land. So he's decided to grin and bear most of it.\" The look on her face was one of frustration mixed with helplessness.\n\nCourageous. I just nodded. \"Is he, um...\" Joanne was looking at me, almost begging me to continue. \"Before his time comes, is he...\"\n\nJoanne caught on to my inability to express myself properly and looked away. \"He's staying here until the end.\"\n\n\"That won't be hard for you?\"\n\nJoanne shook her head slowly, looking down. \"Don't tell Jo, but as soon as it happens I'm putting the house on the market. Jonas and I agreed. I just can't live here... after...\" Joanne finished crying.\n\nI pulled her into my arms and tried to comfort her. \"I won't say anything.\" When she calmed down I asked, \"Have you been eating much lately?\" Joanne shook her head. \"Tonight I'll make dinner and you and Jo can spend time with Jonas, ok?\"\n\nJoanne looked up at me. \"Thank you.\" She placed her hand on my cheek. \"Jo's so lucky to have you.\" She moved back to hug me again and mumbled something.\n\nJonas was looking at us and smiling.\n\nJo saw us and walked over to join the hug. She said in a soft voice, \"Why are we hugging my man?\"\n\n\"I was just telling him how lucky you are to have him. He's making us dinner tonight.\"\n\n\"Mmmm. It's no wonder I lo...\" Jo halted and corrected herself. \"You're so right, Mom!\"\n\nWe all chatted for a while with periodic visitors stopping by as the day progressed. Eventually I went and made dinner and brought it to them on the couch where they were watching a movie together. I stayed back and worked on my project. I didn't have a lot of work to do, but was motivated to finish it quickly in case...",
        "It was awkward sleeping together in Jo's twin bed again, but it was nice. Even a night away from Jo was hard.\n\nThe next day I went in early but claimed that I needed to stay later because of leaving early the day before. The truth was that I left earlier than usual (4:30 is early for me) and went home to do more work.\n\nAt 8 I called Jo and said that I was done with work. She said that her parents were already asleep and her mom told her to go home for a night.\n\nWhen she arrived, she was angry. She looked into my face, and hers changed as she attacked me. Our clothes flew in every direction. It had been almost a week since the last time Jo and I were intimate, and this surprised me. It started off nice and caring but soon turned into a thrash fest. I guess Jo wanted to forget, if only for a little while.\n\nWhen we were finished, she started crying.\n\n\"What's wrong, baby?\" I asked.\n\n\"I'm happy and mad and sad! I just want to get away from all of this! I don't know what to do!\"\n\n\"You're doing all you can do. You're there for your dad and mom. Spend as much time with him as you can.\"\n\n\"Hrmpf,\" she groaned out. \"It's so damn hard to watch him in this much pain!\"\n\n\"I would never doubt that.\"\n\n\"He actually yelled at me today. He's never done that before! I just don't know what he wants anymore,\" Jo cried out.\n\n\"That's the pain talking, not him,\" I said as she sobbed against my chest. \"But as for you, all he wants is for you to live your life and be successful and happy, just like he said. Whether your dad is around or not, he only wants the best for you and your mom.\"\n\nThat seemed to soothe her a little.\n\n\"Remember what I told you about my parents, how they died?\" I added and she nodded. \"I never got to say goodbye. Heck, I barely even got to know them. Whatever happens with your dad you need to remember how lucky you both are to have this time.\"\n\nShe nodded, hugged me, and cried. We held each other until she was tired enough to stop crying and fall asleep.\n\n~~~\n\nBy Friday I had most of what I needed, and Saturday I was finished. I went over to the house. Jonas asked the ladies to go for a walk so that we could have some \"man time.\" I presented him with my work.\n\nWhen I finished he said, \"I always wanted to attend my own funeral. Thanks f-f-fff...\"\n\nI waited for the sentence that never finished, and said, \"My pleasure. Was it what you hoped for?\"\n\nHe smiled weakly. \"Better.\"\n\nThe ladies came back shortly after that and saw him crying. \"What did you do to him?\" Joanne asked.\n\n\"Nothing, dear. He made me very happy, that's all.\"\n\nJo stared at me trying to get me to divulge the secret, but I wasn't about to budge.\n\nJoanne smiled and looked at me. \"Did you bring your things to stay tonight?\"\n\n\"Yes. But are you sure you wouldn't like to be alone as a family?\"\n\n\"Whether it's official or not, or however things work out in the future. You are family right now,\" Joanne said and the other two nodded.\n\nAt 3 am alarms started going off because the cancer claimed him. I called 911 while Joanne and Jo screamed in agony, comforting them both as best I could.\n\nAll arrangements were already made except for the date. Joanne called the funeral home to set that for Wednesday.\n\nThen Joanne said she was moving out of the house, which was, of course, only a surprise to Jo. Joanne had to work to convince Jo that it was the best thing to do.\n\nJo and I looked at each other, smiled, and nodded slightly.\n\n\"Joanne, you could come and live with us. Jo's bedroom is all yours,\" I said.\n\n\"No, I couldn't. I don't...\" Joanne started.\n\n\"I insist,\" said Jo.\n\n~~~\n\nWednesday came and Jo had me stand in the receiving line with her. I felt awkward because I didn't know anyone there except for Joanne and Jo. I met Jonas's brother and his wife who were the only other people in the line. I stood behind Jo and she made a point to introduce me to everyone. The ladies were very strong considering the circumstances, but the hard part was yet to come.\n\nWhen it was time, some words were said and the attendant asked for anyone to approach if they had something to say. No one stepped forward. Then the attendant said, \"Jonas asked a friend to speak on his behalf at this time.\"\n\nI stood up and approached the podium. Joanne and Jo were stunned.\n\n\"I've only known Jonas a short time, and for that I'm sorry. He was an incredible man who I wish I would have known all of my life. He was strong, loving, kind, protecting, and incredibly generous in these and other ways. He and Joanne could say more with a look, a nod, or a wink than most people could say in a book.\n\n\"But most of you knew him far better, and many of you shared your thoughts.\" I looked up at one of the directors and he started the first video.\n\nWith Jonas's help, I had called several of his friends and asked if I could meet them for a moment to record them relating some fond memories of Jonas. I watched those gathered and knew where the ones currently on screen were by the movements.\n\nWhen that finished, I added. \"Lastly, Jonas himself has something to say.\" I looked up again and the second video started, showing a still-smiling Jonas.\n\n\"My friends, thank you for coming today. I can't tell you how much I wish I was there with you instead of in a pine box.\" A few weak laughs sounded out. \"You've all meant the world to me through the years in so many ways that I can't even express them. I want to thank each of you for the kind words that you shared on video. Please know that I watched it and can never express in words what it meant to me.\n\n\"Joanne, my darling. You are my light and my stars. The day we married was the happiest of my life, until the next, and the next. Every day with you was a miracle I am happy to have shared. Always know that I am with you wherever you go and that I love you far beyond these mortal bonds.\n\n\"Jo, my wonderful little girl. The day you were born I was reborn. Being your father has made me proud and complete. Watching and helping you grow was a privilege I cherished and never a chore. Through our ups and downs only one thing remained true: I would never give up on you. I am happy you are becoming the person I know you can be and are finding happiness in your every day. When you become a parent, remember these things and always know I'm part of you.\n\n\"To both of you, I love you always. I wish nothing but the best for you and hope you live your lives to the fullest. I wish this to all my family and friends.\n\n\"To all of you here today: do not mourn me. Celebrate the joys of life and make every moment count. Thank you all for making my world complete.\n\n\"Seize the day and live each like it's your last. Because before you know it, it will be.\"\n\nI walked back to my seat. Jo leapt up crying hard to thank me and hugged me tightly before I got near. Joanne was right on her heels doing the same. Both took my hands and leaned on each side of me after I sat down.\n\n~~~\n\nThat night when we got home, I played Jonas's video again for the ladies on TV.\n\nJo turned to me afterwards and said, \"Thank you! You've made me happier than I could have thought I'd be today.\" She hesitated, staring deeply into me. \"I...\" she started, biting her tongue.\n\nAnd that's when I realized \"I love you too.\"\n\nJo looked like she was about to faint. \"You... you what?\" she asked, her jaw hanging open in disbelief.\n\n\"You heard me,\" I responded, playing a game.\n\n\"I think I did, but I want to hear it again to make certain.\"\n\n\"I'm not repeating myself.\"\n\n\"You'd better!\"\n\n\"Fine, if I must.\" I pulled her on top of my lap, straddling me. \"I love you,\" kiss, \"I love you!\" I paused and stared longingly into her eyes. \"Mon coeur t'apparient!\" Jo melted into me and we locked on for a breathy and passionate kiss. It lasted for all time and for just a few moments.\n\nEventually Jo reached down to free herself of her clothing and I stopped her.\n\n\"Your mom,\" I whispered as reality came floating back to us.\n\n\"What?\" Jo said lost in a dream. She wasn't quite off cloud 9 yet.\n\n\"Your mom. She's here, remember?\" We looked around and Joanne was nowhere to be found. \"I guess she's very perceptive. But we should retire to a more private venue.\"\n\n\"I don't want to go anywhere,\" Jo said kissing me.\n\n\"I don't either, but it's not the right time to push boundaries,\" I said choosing my words carefully.\n\nOne last kiss and Jo stood, extending her hand to me. She led me to the bedroom where we closed the door, resuming our previous intentions.\n\nIn time we desired more so Jo started unbuttoning my shirt. \"No.\" She looked at me questioningly. \"My turn.\" She smiled. It was actually our turn because we slowly and methodically stripped the black clothes from each other, using our hands to peel underneath. It was a labor of passion, of love.\n\nIn time we stood before each other in our underwear, acting like virgins. Jo had one leg up, bent slightly with toes touching and the heel above her other ankle and covering her sex. Her arms were trying to shield her covered breasts from my view. She was even sexily biting a little nail while acting somewhat scared.\n\nI reached out and moved one of her arms aside. I cupped her bra and felt around it while she stroked my arm and acted shyly. I reached up and pulled her strap off of her shoulder and she felt my chest. I pulled down the other strap and her other hand joined the discovery.\n\nI slowly turned her around to undo the clasp and she held her arms tight to her side. Turning her back around, I slowly pulled from the top of both cups while she hesitantly released her arms, removing the black bra from her completely. I was staring at her breasts like it was the first time, biting my lip.\n\nI slowly reached out and held one of them, feeling its softness and weight. My thumb gently brushed her nipple and Jo's head shot back with an \"OH!\" I did the same with the other breast, then both at the same time. I, in turn, put a thumb in her mouth and returned it to the vacated nipple to slide around more easily.\n\nJo was getting very excited by this time and I could tell that she was fighting back her desire. I lifted one hand to her neck and pulled her willingly into a kiss, pressing our bodies together. Jo was moaning. The kiss started with closed mouths, and then my tongue poked out to trace her lips. Eventually her tongue joined mine, revealing her sticky mouth to me.\n\nWe started exploring each other's backs with our hands as we made out like it was the first time. My hands eventually reached her panty covered rear and the shock of it made her pelvis shoot forward hard against mine. I slid my hands up and back down, this time enveloped in the pocket between her derriere and panties.\n\nThat was enough for Jo as she, with one arm around my neck and the other holding my head, jumped up and put her legs around me. Luckily I caught her and walked over to the bed with my precious cargo. When my legs hit the bed and I stopped moving. Jo stopped kissing me and just gave me a look. I bent to place her on the bed sitting.\n\nJo reached out to my underwear and started tracing around my manhood. She continued and looked up at me with a pleading look, licking her lips. I nodded slightly and she slowly lowered my black underwear, getting a slap in the face from the very excited part of me that was uncovered when the waist band was low enough. Her girlish giggle made it jump against her face.\n\nShe moved like she was about to devour me. But she stopped herself and stared at my rod, slowly circling her hand around it. She looked up at me doe eyed, and stared into my eyes while her tongue slowly extended from her lips to lick the head. I moaned in encouragement.\n\nJo's tongue circled around my head, and she never took her eyes from mine. Her head moved slowly forward to take the head inside her mouth, and her eyes stayed locked on mine. Her tongue moved mercilessly inside her mouth against me and her sucking was intense. Yet her eyes stayed on mine.\n\nI reached out and caressed her beautiful red hair, and smiled into her eyes. She was barely doing anything and it was already incredibly erotic. Her hand started stroking me at the root while her face moved forward, and her eyes bored into me with desire and love.\n\nI was so close too soon. But I didn't want it that way, not then. I gently moved my hand to indicate it was time to move to the next glorious step and she pulled off of me with a pout.\n\nI guided her to lie down with her legs hanging off the edge of the bed. I knelt in front of her and rested my palms upon her knees and slowly stroked them up, dragging my nails ahead of them, reaching her black underwear. Jo anticipated my next move incorrectly by lifting her bottom off of the bed. I placed my fingers above the waistband over her legs and traced around the periphery. Then I felt down along the outside of the lacy, partially see-through panties to just below her labia. I joined my fingers in the middle and paused.\n\nJo started to raise her head and at the same moment I felt up along the outside middle of her panties, pressing slightly as I went. She moaned. I repeated my tracing once more and elicited another, stronger moan.\n\nThis time my fingers went along the waistband to the outside of her legs and hooked inside. I started pulling down and her pelvis shot up, demanding to be free of the garment. I slowly and agonizingly complied with the unspoken command, slowing more when I reached her feet. After they were free I pulled them up to my face and sniffed them deeply before her smoldering eyes, then tossed them over my shoulder with a smile.\n\nJo started reaching for me. She had enough and wanted to skip ahead but I was not ready. This was our first time, after all. I wanted to try it all. I moved in to find the source of the wonderful smell I had just barely experienced as she reached for my head and tried to pull me up.\n\nI decided to skip the teasing and zeroed in on target, hoping to get her to forget her absolute desire for just a moment. I lapped, kissed, and sucked on her button trying to turn on her light. I also put two fingers into her, one from each hand. One went up to G, the other went down to \"oh Fuuuuck!\"\n\nShe was no longer pulling at my head, instead holding it in place as she sang her song in G and F###. I kept her song going as long as I could, until she started pulling at my head once more. I looked up at her to see a passion in her eyes I hadn't seen before, so I lifted my head and removed my fingers.\n\nShe scooted back onto the bed away from the edge. I crawled onto it between her legs and she reached out to grab her favorite part of me, just as I put one finger into each of our mouths. She closed her eyes and sucked my finger as I sucked on the other one, tasting her. Then she licked every trace of herself from my face, sharing it with me when she was done.\n\nA short moment later I was being enveloped in an incredibly wet and warm passageway and pushing forward to explore its depths. When I reached bottom I stopped. Jo and I looked into each others' eyes and I said one thing: \"I love you!\"\n\nShe is an incredible woman. Those three words were the spark to another scream of passion! I took my cue and added physical stimulation to her orgasm of the mind. I kept her high on the plateau for as long as her body seemed able. During one of her throes or at the end of one large one, I added my own groan to her beautiful song and spilled forth into her. I came more than I ever had in my life and was actually starting to leak out of her tight embrace.\n\nWe just lay there breathing hard and enjoying the closeness. After a moment, Jo blearily opened her eyes and I repeated myself. \"I love you.\" A large aftershock shot through her at that moment and she reached around me to hold me as tightly as she could.\n\n\"I love you too,\" she said out of breath. She tried to kiss me but air was in short supply so I rolled off of her with a loud sucking noise. We laughed a little as she rolled to my side.\n\n\"Lift your leg,\" I politely commanded.\n\n\"Why?\"\n\n\"Please?\"\n\nShe did, looking at me funny. I would spring the surprise later. Jo then had her dessert and moved down to lick the icing from me to finish cleaning the both of us off. She tiredly crawled back up to me and we held each other.\n\n\"That was a good 'first time',\" I said.\n\n\"It really was!\" Jo said smiling dreamily. \"What made you...\"\n\nShe paused and I finished the thought. \"I realized that everything I've done lately I'd only do for someone I truly love. My feelings were strong enough, but when it hit me I knew it was right.\"\n\n\"How long did you know?\"\n\n\"The moment I said it.\" Jo smiled and we kissed. \"How did you cum just by me saying it?\" I asked.\n\n\"The most erotic organ in the body is the mind, baby. Your words were like pure sex at the right moment!\"\n\n\"How many times did you cum?\"\n\n\"I have no idea. Twice? Continuously? I'd never felt that before!\" she said stroking my face.\n\n\"It was nice playing virgins with you; that was a perfect touch,\" I said\n\nShe just pressed into me and moaned an \"mmm-hmmm.\"\n\nI waited a moment and then decided to spring the surprise. \"Honey, I have something to confess.\"\n\n\"What's that? You're not married, are you?\"\n\n\"Um, sorry. I...\" I paused for dramatic effect, \"am not.\" Jo swiped down my nose and smiled. \"I don't know if you noticed some new items around the room?\" I asked pointing toward the small HD cameras.\n\nShe looked around where I was pointing and didn't quite catch on. Then she saw one of them. \"You didn't!?\"\n\n\"I did. I hit the button to record when we entered the room.\" She was awash with conflicting emotions and didn't respond. \"I figured our own porno stash on a computer that'll never be on the Net would be something you'd enjoy. I'm really happy it captured our 'first time'.\"\n\nThe conflict in her mind ended and she smiled. \"You kinky devil!\" She paused and looked into my eyes. \"I can't wait to see it!\" She started to kiss me, stroking the fires and me again. \"I wish I had the energy.\"\n\n\"And I wish I hadn't drained the tank.\"\n\n\"That was quite a lot of cum! My belly is full! I guess once in a while a little abstinence is a lot of fun!\"\n\n\"Some other time under different circumstances.\" Why did I say that? Jo looked away and remembered. A short time later she smiled a little. \"What?\"\n\n\"I know we just buried my Daddy, but I realized something.\" I looked at her quizzically. \"Dad kept telling me to live my life and be happy.\" She looked up at me. \"And you made me VERY happy! Thank you for helping me to fulfill his wish.\" She kissed me. \"Even if it was today.\" We kissed for a bit and then she rested her head on my chest, tracing invisible lines.\n\nAfter a few minutes she said, \"You don't think Daddy would be mad, do you?\"\n\n\"From what I know of him, I don't think so. Plus I think after he found out that we've gone a step further together he'd be thrilled.\"\n\n\"Why do you say that?\"\n\n\"He really wanted to know you'd have someone to love. The day he asked me to do his eulogy, the first thing he asked was if I'd fallen for you yet.\"\n\nShe smiled and looked down. \"What if it doesn't work out between us? I don't want to hurt his memory,\" she said sadly.\n\n\"If that happens then you'll find someone else to be happy with. Or you'll be happy to be alone. Your dad wanted your happiness, wherever you find it.\"\n\n\"Well, I find it right here,\" she said hugging me. \"I'll work hard to keep it.\"\n\n\"I will too.\"\n\n\"I love you,\" we both said in unison. Our eyes instantly locked and we both smiled. Then we kissed passionately, trying to rekindle things perhaps a little too soon. Perhaps. Jo was diligent and tender.\n\nShe looked down and back up at me. \"I can't believe you're ready again.\"\n\n\"I can't believe the things you do to me.\"\n\nShe climbed on top while we tenderly kissed, slowly rocked, and quietly popped one more time together. Sleep washed over us in a loving embrace.",
        "~~~\n\nSomeone was knocking lightly on the door. No. There it was again. Where was I? There's something heavy on me. I blinked and took in my surroundings. Bedroom, yes. Jo on top of me. Yes! Clock says 6:48. NO!\n\n\"Jo, baby. Wake up.\" I said stirring her. \"Jo...\"\n\n\"Too early. Leave me alone,\" she slurred.\n\n\"I can't. I need to get to work.\"\n\nShe looked up at me. \"Work? What?\"\n\n\"I'm going to be late.\"\n\nShe looked at the clock. Panic hit her, too, and she gave me a quick kiss as she bounced off of me and the bed. I ran into the nearest bathroom and took a shower. Thankfully she did not join me. I quickly dressed and was out of the bedroom in record time.\n\nI arrived in the kitchen to a wonderful smell. \"Is that?\"\n\n\"Eggs Benedict,\" Joanne said. \"I wanted to make this morning special for the two of you after...\" she trailed off smiling.\n\n\"Oh yeah, sorry,\" I said sheepishly.\n\n\"Are you kidding? I was there to hear you tell my daughter that you love her for the first time! You gave me something special. I quickly left before I saw something special,\" she said blushing.\n\n\"No worries, Mom. We made it to the bedroom!\" Jo announced enthusiastically.\n\n\"I heard,\" she blushed more. She sighed heavily and continued. \"I'm going to move out. I don't want to be a third wheel around here and cramp your budding relationship. I'll find a temporary apartment or move in with a friend.\"\n\nJo and I said together, \"No!\"\n\n\"You don't have to do that, Joanne. We enjoy having you here. After all, as you said, we're family,\" I said and Jo nodded hugging her mom.\n\n\"I'd be in the way and I'm not sure I can take the...\" Joanne said searching for words, \"...amorous activities in the next room.\"\n\n\"Mom, we'll keep it down. I really like having you here.\"\n\n\"After last night you two need time to get to know each other better,\" Joanne said.\n\n\"After the last couple of weeks, I think we all need time to get to know each other. At least stay until you find something more permanent,\" I said.\n\nJoanne looked between us and considered my words. \"Ok. I'd be happy to.\" Then to Jo she said, \"Jo, I'm putting the house on the market today. We'll have to go and start cleaning it out.\"\n\n\"Are you sure, mom? It's your home and there are so many memories there.\"\n\n\"Yes. With...\" she said with tears forming in her eyes, \"...with your dad dying I can't face being alone in the place we shared. I need something else. Your dad and I discussed it at length before he passed and he agreed.\"\n\n\"If you're sure...\"\n\n\"No, I'm not. But I'm sure it'll be too painful for the foreseeable future.\"\n\nI quickly ate the breakfast Joanne prepared and it was good. The ladies were discussing the house and what to do with it. I said my goodbyes, giving Jo a kiss and Joanne a hug while she thanked me.\n\nWhen I got to work, Ron ran up to me. \"Did anything happen? You're not early as usual...\"\n\n\"No, just forgot the alarm.\"\n\n\"Yesterday was a bitch, eh? I'm surprised you came in today.\"\n\n\"It was and it wasn't,\" I said smiling.\n\nHe stared at me, reading my face. Then the light bulb turned on. \"You dog! How did you accomplish that on a day like yesterday?\"\n\n\"I told her I love her.\"\n\n\"Why would you do that?\"\n\n\"Because I finally meant it.\" Ron and his high 10s! \"How are you doing with your gal?\" I asked, changing the subject.\n\nHis face turned sour with that question. \"So about the project...\" Message received.\n\n~~~\n\nGary's daughter definitely makes her appearance in the next installment.\n\nPlease comment or message me. I'd really enjoy the encouragements to persuade me to continue this story, a couple of others I began, or one of the couple dozen new ideas I have flitting around my head.\n\nThis story is not even half way through what I wrote last year... It's only getting started! "
    ],
    "authorname": "WokeUpOneDay",
    "tags": [
        "redhead",
        "exhibitionism",
        "public sex",
        "creampie",
        "multiple orgasms",
        "love story",
        "bareback",
        "older man",
        "younger woman",
        "public nudity"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/my-blue-pill-with-green-eyes-ch-03"
}