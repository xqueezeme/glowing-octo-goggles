{
    "title": "I Thought I was Up For It Pt. 01",
    "pages": [
        "\"Oh, Paree,\" Clark sighed, leaning back in his chair leisurely and tilting his face up to the sun. A breeze crawled across his skin, jostling one strand of hair across his face. My heart did the ol' \"skip,\" giving my ribs a gentle punch from the inside.\n\n\"I'm very happy,\" I said, leaning over the table, \"to be across from you right now.\"\n\nHe smiled, dimples shining devilishly. \"I know,\" he smirked. It wasn't the smirk of an asshole, thankfully\u2014it was the smirk of a boy, teasing: playful. I was up for it, I thought to myself. As I examined his face, I took in the details. It wasn't necessarily classically beautiful, as you might classify James Dean or George Clooney. But the charm that oozed from every pore of Clark's being made up for any discrepancies, rendering me rather useless in his presence. I had been lusting after this man for so long\u2014too long. His current proximity reminded me of years worth of yearning. How had I been able to stand it?\n\nI scraped the food around my plate, my appetite beginning to rage in a manner very unrelated to food. I would keep my cool, I swore to myself. Hell, I would outcharm this unattainable seducer.\n\n\"Serveur,\" I called, raising an arm to the waiter. He spun at the sound of my voice, bustling toward me with a broad smile.\n\n\"Mademoiselle?\"\n\n\"I'm ready for the check,\" I purred.\n\nHe winked at me and nodded, reaching for my plate. I tapped him on the shoulder and he bent down toward me. I moved close, my lips just inches away from his ear.\n\n\"Le repas etait delicieux,\" I whispered, smiling. The waiter grinned, nodding and hastening away for the bill.\n\nI peeked at Clark to find him watching me with an intense gaze, appearing both amused and intrigued.\n\n\"You're devastating when you flirt, did you know that?\" I perceived a small sigh escape from him.\n\n\"I did know,\" I replied, mimicking his easy posture and leaning back in my chair. \n\n\"So what does the day hold for us, Clark? Are you going to take me on another tour of the city? Or will it be wine tasting again? No, I know\u2014today we can sample the finest baguettes that France has to offer!\"\n\nWith each suggestion, I leaned in marginally closer, my eyes never leaving his face. Clark responded in kind, drawing to me until I could feel the heat of his skin radiating onto my face.\n\n\"I was thinking of a different kind of tour,\" he breathed, pausing for a moment. \"A different kind of...taste.\"\n\nI stared at him, momentarily paralyzed by the desire welling up in me as a response to his suggestion. I recovered quickly, and chuckled in reply. \n\n\"So\u2014pizza?\"\n\nMy flippant flirtation awoke the beast. His hand was behind my head in a moment, closing the distance between us. His first curled around my hair as our lips met\u2014my mouth open, hungry, my hand immediately gripping his shirt.\n\n\"Ahem!\"\n\nOur heads snapped up as we broke apart, the waiter holding the bill sheepishly. I smiled, running a thumb around the periphery of my lips where I was sure lipstick had smeared. Signing the bill with the flourish, I thanked the waiter in his native tongue.\n\n\"Tout le plaisir \u00e9tait pour moi,\" he responded bowing graciously.\n\n\"I do believe you just broke our waiter's heart,\" Clark said, rising to pull out my chair. I stood, turning to face him, momentarily at his eye level in my heels. I looked directly into the warm pools of coffee, shimmering with flecks of gold and black in the sun.\n\n\"The waiter's heart, eh?\" As I felt him moving in for another kiss, I slyly pecked him on the cheek\u2014it took all my willpower to do so. If he was stunned or disappointed, he didn't show it.\n\n\"So, pizza-hunting it is,\" he said smugly, placing a hand gently around my waist and guiding me away from the table. We stepped out of the restaurant patio onto the quaint cobbled sidewalk, my senses suddenly tuning back in to the gentle hum of Paris bustle.\n\nI didn't want to pizza hunt.\n\n\"You know, I've tasted pizza,\" I said as he hailed a cab. \"The best, in fact.\"\n\n\"You've tasted the best pizza?\" he asked, grinning in amusement.\n\n\"Yes\u2014and call me crazy, but I really don't think anything that we find in Paris is going to top...Little Caesars.\"\n\nClark threw his head back, laughing heartily. \n\n\"Then what can we possibly do?\" he asked, sweeping me into the cab. \n\nAs I leaned forward to enter, I felt him take hold of my ass firmly through my sundress, guiding it in. His grip was pristine: a thumb slipped just between the crest of my cheeks, dangerously near asshole arousal. The size of his hand cause his remaining fingers to nearly touch my hip, and an electric current of possession and need immediately ignited. My heart punched my ribs again, harder this time. When we landed side by side in our seats, he appeared innocent as a lamb.\n\nI fiddled with my hands in my lap for a moment as Clark directed the driver. I didn't hear the destination, but I desperately hoped it was back to our hotel. As a thin sweat broke on my chest, memories flickered through my mind.\n\nWe began as coworkers, a relationship that quickly morphed into friendship. Shared lunches became happy hours, happy hours became game-nights. Attraction soared, chemistry bubbled, but nothing had ever happened...nary a kiss, not even a peck. Possibly because I had never gotten Clark alone until this moment, a moment granted to us when our mutual friends had to cancel their Paris travel plans last-minute. It was like a gift from God\u2014and I was certain that I was up for it.\n\nI side-glanced Clark, who appeared as cool as a cucumber in his seat, watching Paris through the windows. I noticed his hand was creeping from his lap toward the edge of my sundress, which lay just below my knee. I seized his wrist gently and pulled it toward my silk stocking\u2014when in Paris, after all\u2014which was held by a garter belt tight around my waist. I could already feel my lace panties moistening, and I said a silent prayer of gratitude for my regular shaving-and-sexy-undies routine. Clark's attention was now on me, and I was still learning to carry the weight of his intensity. It felt like being under a spotlight, under close scrutiny.\n\nI played it cool, guiding his hand beneath my dress and to the lip of my panties. His eyes never left mine. We were locked on each other as I felt his hand slip between the fabric and my skin, moving on it's own now. As he felt my wetness, his dimples peeked out and his lips parted ever so slightly. I blinked, my lids becoming heavy with pleasure. His finger had found my clit, and was beginning to roll over it ever-so-slowly.\n\nI stifled the sounds welling up in my throat, the product of arousal building between my legs. The driver remained completely unaware, humming as he turned streets and honked at passersby. His presence created an urgency in the car, an urgency for privacy and space.\n\nClark's tempo increased, but only just so. His gaze shifted from my eyes to my lips, but we both knew that if we kissed, all subtlety would be lost. As the scenery became familiar, I knew we were nearing the hotel. My breathing had already changed, and I could no longer control my body's responses. My clit was hot, swelling with blood flow. His touch on the outside of my body was heaven\u2014I wanted\u2014no, needed\u2014to feel his touch from the inside. \n\nWith enormous regret, I pulled Clark's hand from my sweet rose and met his eyes once more. Then, in the briefest of gestures, I brought his fingers to my lips and sucked his index fingertip ever so gently, my tongue lingering just enough to capture the sweet nectar that clung there. Now, his breathing changed\u2014his chin leveled with mine immediately, any playfulness left in the mood now evaporating, chased away by pure, animal lust.\n\nIn divine timing, we pulled up to the hotel. Clark was already pressing a generous amount of cash into the driver's palm, and was at the outside of my door in seconds. I'd never moved faster. My heels weren't meant for the speed of walking that I was forcing upon them, but a broken ankle was the least of my concerns. I was hoping for other broken body parts by the time this afternoon was over.\n\nAs we reached the lobby of the hotel, options greeted us\u2014stairs, and the elevator. Privacy seeming to be the most pressing necessity of the moment, and Clark seized my hand.\n\n\"Elevator,\" he breathed, and we ran toward it as quickly as we could without raising cause for alarm from the bystanders.\n\nAs we entered the small space, Clark punched our floor level in and then took hold of my hips, pushing me against the back wall of the elevator. The look in his eyes was new, as if I was seeing a new man\u2014a man who was prepared to manipulate my body for his own pleasure. He paused for one moment, and his posture and grip silently communicated the possession he now had over me. As he leaned in\u2014\n\n\"Ahem!\" The elevator doors had opened, and between them stood a small, study old lady rocking a cane and Prada sunglasses. She stepped into the elevator and punched in her floor number. Clark stepped away, standing beside me. There was no humor in this, no smiles exchanged between us. We stood in perfect stillness, the only movement was a bead of sweat dripping from the back of my neck. \n\nFinally, with a ceremonious ding, we arrived on the fifth floor\u2014our floor. We moved like ghosts, feet barely touching the floor, fumbling for the room key, swiping it hastily on the wrong side. When the door burst open, all restraint fell away.\n\nThere was no time for dialogue. Clark grabbed my waist, directing me to the kitchenette counter. He lifted me onto the counter surface while holding my dress, so when my asscheeks touched the counter I squealed at the cold. In a swift movement, he grabbed my underwear at the center and yanked them off, tearing them half. A mental note was made\u2014lacey garments on clearance, not the most resilient. He tossed the remnants away, gazing at what was left behind\u2014my shaven pussy and a black garter belt, holding two nude stockings.\n\nClark's eyes glimmered with approval, and his hand flitted toward my cunt, a thumb resting back on my clit. As he rubbed, he slid my heels off one at a time, and I heard them hit the tiled floor with a thud.\n\n\"I want to see your toes curl,\" he whispered, his other hand finding my mouth. \n\nMy breathing was ragged now, tearing out of me as the speed of his hand increased. A finger, quickly followed by another, slipped into my wet vagina, and I could feel his fingers instantly grip the beveled edges of my pussy wall. Ahh, the g-spot. He met it like an old friend. Rhythmically, he rubbed, circled and pushed, my pussy like wet clay in his fingers. With my wet lips, I sucked and licked his fingers, unable to see through my clenched eyes but only feel. Feel.\n\nI could feel the orgasm arriving. It had been building since the cab, now reaching its peak on the kitchenette counter. My body was rocking against his hand, his hand was now around the crease of my neck, both supporting my body and pinning me in place. I wanted more of his hand inside me. I wanted all of him inside me. My hunger, my thirst\u2014it was unquenchable. My hands snapped to my sides, pressing against the counter so that I could push my pussy harder against his hand. And then\u2014I came.\n\nMy eyes rolled back as the heat rushed through my vagina. Every sense I had was focused on my pussy, as it quivered and pulsed. My legs trembled as the electric current ripped through them, causing my toes to curl in pure ecstasy. \n\n\"AhhhhhHHHHHHHHH!\" I cried out as my body shook and then sank onto the counter, breathless, helpless. There was no recovery time. His arms were around me in an instant, propping me up against the counter to unzip my dress. It fell to the floor in a heap. Next thing I knew, we were both on the floor beside it, and his mouth was on mine.\n\nIt was the first uninterrupted kiss. His tongue was in my mouth, finding mine, our lips pressing against each other. We breathed like heathens, panting into each others mouths, kissing as if we were each other's source of life, of breath. He froze for a moment, looking down at me.\n\n\"Clark,\" I murmured, mustering all the level headedness I could. I hadn't forgotten my little game. \"What are you waiting for?\"\n\nIt was the only challenge I could think of, and I delivered it with all the sass I had left. It was enough. The fire ignited in his bones.\n\nI reached down to pull off his belt as he kissed my neck, and I was unable to yank it off quickly enough. He stood, making short work of his clothes. Within seconds, his naked body was on mine, and the heat of it took me to a new level of desire. His skin was scorching, just the way I'd always imagined. I ran my hands over his back, his shoulders, his ass, and I pulled his hips toward mine.\n\nI felt the hard head of his dick over my belly, and his eyes snapped to mine.\n\n\"Now!\" I urged, pulling my own hips up to meet his.\n\nClark didn't hesitate. In one moment, I felt his head nosing at the entrance of my vagina, hot, thick and and pulsing. Half a beat later, he pushed into me, filling me deeply.\n\n\"Oof,\" I gasped, my back arching in response to the sudden assault. It was painful for a moment, the recent orgasm leaving me sensitive; the mouth of my pussy being stretched to its full capacity. I felt so full that a deep, foreign satisfaction rose in me immediately\u2014having never been this filled before, it was new. My belly seemed to be full, my body felt complete. Leaning over me, Clark began to thrust tentatively, watching my expression. My face shifted to reflect pleasure, my moans confirmed the sensations.\n\n\"Mmm,\" I groaned. \"Ugh. Yes. Yes.\"\n\nClark began with a slow rhythm, not fully pulling himself out, but instead, rocking our torsos together. I felt his head deep inside of me, pushing against my cervix. The push was painful\u2014and pleasurable. I wanted it harder.\n\nHe sensed it. His speed began to increase, as did the strength of his thrusts. I could feel his shaft against my walls, the texture of it stimulating every nerve within me.\n\n\"Yes!\" I cried, reaching for something to hold. \"Ye\u2014es-es!\" My body was rocking, my breath shortening as he pounded into me. Now he slammed my cervix, slammed my pussy. My pussy dripped with my own cum, and the sound of it aroused me further. I lifted my hips to meet him, to receive his thrusts. Together, we met\u2014his dick pounding into me to the hilt, filling me completely. My body fell against it, continually rising back up, hungry for more. The lips of my vagina hit is skin, his testicles slapped my vulva and perineum. I screamed as the heat increased even higher, higher.\n\n\"YES!\" I cried, arching my back, screaming for more. He rose to his knees, gripping my asscheeks and pulling me against him. Another orgasm was coming\u2014and I didn't know if I could survive it.\n\nI could hear him moaning now. He had been holding out, but it was too much for him. As my cunt began to tighten, I could feel the throbs of him inside of me, the cum that was welling up inside of him. With incredible self control, he halted his thrusts briefly. My eyes widened, confused, dazed, angry.\n\nHe lifted my torso and in two steps, I was on the bed, level with his penis.\n\n\"Flip,\" he commanded.\n\nI complied immediately. There was that ass grab once again, the grab that started it all. This time, however, there was no sundress to get in the way, and I felt his thumb brush my asshole. He pulled my ass up so that I was resting hands and knees on the bed.\n\nThen, he pushed his dick back into me, filling me once again in that delicious way. The base of his dick was thick, and it pulsed against the entrance to my cunt, stretching it thin. Heat spread through my abdomen, and he began to pound once more.\n\n\"Ungh--unggg\u2014-ungg,\" I moaned in time to the beating, my pussy becoming sore and yet reveling in its takeover. From this angle, he filled me even deeper. I could feel myself stretching, tiring, but the orgasm became to return, building again.\n\nGrabbing my hips, Clark gave it everything for the final round. He pulled me against him, and I responded in kind, pushing back, receiving him into me. Our bodies pushed against each other again and again, his seeking to penetrate me deeper, mine opening for him to enter.\n\nWe groaned in unison. With a final thrust, I took his hot cum, it filling me deeply. I felt the heat high up in me, swimming around my cervix, fighting to go further. Clark separated himself with a quiet slurp, and I fell face first into the bed, my body quivering. My pussy was so sensitive and battered that I was afraid to move it, for fear I would trigger another orgasm. I panted, my sweat dripping onto the pristine white sheets. Clark lay next to me, breathing heavily.\n\nWhen a few minutes had passed, I could speak again.\n\n\"My God,\" I breathed. \"I didn't want it to be over.\" I turned to look at him.\n\nClark stood, a bottle of lube in his hand. His penis was suddenly erect again, and he smiled down at me. \n\n\"Over? Who said it was over?\"\n\nTo Be Continued"
    ],
    "authorname": "TheLittleEgg",
    "tags": [
        "hetero",
        "seduction",
        "for women",
        "teasing",
        "fun",
        "lighthearted",
        "paris",
        "story",
        "consensual",
        "humor"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/i-thought-i-was-up-for-it-pt-01"
}