{
    "title": "Living for Myself",
    "pages": [
        "Prologue\n\nIt was my old friend Leigh Nicholls that told me to start living for myself. We have always been there to pick each other up since we were at junior school. She has always been part of my life and I love her like a sister.\n\nAs we sat in her favourite restaurant on that fateful July evening, it seemed like she was the only thing I had left in my rapidly diminishing world.\n\nThe things she set in motion that night helped to transform me. She was my saviour.\n\nWe've shared a lot in the last forty-five years.\n\nI can't wait to get home and tell her what an absolute slut I have been for the last few months.\n\nI took her advice and aged fifty, I have finally started living for myself.\n\nAnd God, has it been fun!\n\nOne\n\nAs I waited for the final divorce papers to come through, everything seemed fine with the world. It had gone on too long and I wanted closure. Eighteen months of solicitors, arguments, counter-arguments and finally a compromise agreement that left both of us relatively satisfied and anxious to move on. I got the house, so the feeling of rejection was tempered by at least having a roof over my head. The rest of the settlement meant I would want for nothing for the rest of my days as long as I wasn't too frivolous.\n\nThen the envelope landed on my doormat and I was about to crack open the champagne. When I read the contents, the only thing that cracked was me. I was in floods for days and felt utterly empty, bereft and alone.\n\nI was coming up to the dreaded fifty and I was all by myself in this great big, unforgiving world. The kids had flown the coop -- one settled in New Zealand with her partner and twins, the youngest doing his Post-graduate degree in Edinburgh. My ex-husband was off with his new, younger model -- a clone of me as I had been some fifteen years earlier according to the bush telegraph.\n\nRobyn Hall-Evans aged forty-nine and three-quarters. Welcome to your new life on the scrapheap. Life hadn't begun for me at forty -- it had started the downward spiral that led me to where I was now. What chance had I as I approached fifty?\n\nThe first thing I did was to ditch the Hall-Evans part of the equation and after twenty-six years, went back to being Robyn Christie again. It felt cathartic for a while, then merely reminded me of how far I had travelled in that time to arrive back in exactly the same place I started.\n\nMost of the so-called friends we had made over the years made all the right noises about 'poor old Robyn' then quietly forgot about me. A single woman didn't suit the demographic of their insular little worlds of genteel dinner parties and bridge nights. It bothered me at first, then I realised I was better off without them.\n\nI didn't even have work to distract me. My ex-husband was a very well-paid, senior executive and once the kids were old enough to go to school, I just seemed to fall into the role of mother and housewife and my old, unlamented job was never mentioned again. In the early days, it suited me and after a few years I began to get involved in village life -- the usual round of committees, organising fetes and fund-raisers.\n\nNow I could barely raise the enthusiasm for that, as I began to see in the older single women, the very thing I was destined to become myself. It quite frankly terrified me and I found myself making excuses not to be part of that world anymore.\n\nI felt like I was in a giant bathtub that was emptying rather too rapidly -- the current whirling about me, dragging me ever closer to the plughole, down which I was about to disappear without trace.\n\nJust about the only thing I managed to keep up with was my gym work. I started after having William as I found it hard to keep weight off and had stayed with it ever since. It became just about the only solace in my life -- the ten minute drive to the gym in a nearby town, flogging myself into the ground for an hour, doing the machines or pilates or yoga, then a leisurely shower, a skinny latte and a few words with some of the ladies I knew by sight.\n\nThen it was back to my idyllic little cottage on the edge of the village green with the gin bottle screaming at me from the drinks cabinet. My next challenge was to see how long I could let it scream without me screaming back. Some days it didn't take long and those were the days I hated myself more than ever.\n\nAs for sex, I had barely even thought about it for a long time. It had not been a pleasant menopause and that contributed in part to an already rapidly declining relationship. I was not easy to live with, but a complete lack of understanding of my condition made a bad situation even worse.\n\nI was in regular contact with Leigh during that period and even though she lived sixty miles away we saw each other regularly. I put on a brave face at our meetings, but Leigh being Leigh, and having known me since I could form basic sentences, knew I was in a bad place.\n\nAbout a month into my new-found 'freedom', we sat in a pub garden halfway between our respective homes one Friday afternoon. At least the drive meant we weren't tempted by wine or gin. We sat, nursing spritzers as we always did, making them last so we could chat once our lunch was done.\n\nLeigh looked at me over her half-moon glasses. Four kids and two marriages had left their toll on her, and over the last few years she had gone from being a head-turner to looking her age.\n\n\"So, you're looking good on the surface, babes. That gym work is obviously paying dividends.\" She patted her ample tummy. \"Wish I had the willpower. So which rich village bachelor has our Robyn got her beady little eyes on then? Must be fighting them off with a shitty stick, I reckon!\"\n\nI knew she was probing me and the beady little eyes she referred to rolled in my head in exasperation. \"Give over, Leigh. The only thing I'm fighting off has 'Gordon's' writ-large on the label. I'm down to marking the fucking bottle each night. How sad is that?\"\n\n\"So no-one riding across the village green on a white charger to fall at your feet in supplication?\"\n\nI barked a mirthless laugh. \"Hardly. Most nights it would be me falling at their feet, but bloody dead drunk.\" I closed my eyes for a moment. \"What a fucking mess I am, Leigh. Going through the motions of keeping fit, then drinking myself into oblivion.\" I took a drink of warm wine and soda. \"And I don't even think about sex because if I did...\" I trailed off for a moment, tears welling in my eyes. \"Christ, Leigh -- this fucking fa\u00e7ade I'm wearing. My drinking, my exercise kick. It's all for one reason and I am so fucking scared, I can barely think straight.\"\n\nShe held out a hand to me. \"Come on, tell Aunty Leigh everything. You know it always works -- I'm here for you and you're here for me.\"\n\nI took a deep breath and looked around the garden to make sure no-one would overhear me. I moved closer to her and kept my voice low. Somehow I got it all out without crying.\n\n\"Leigh, I haven't been touched intimately for almost two years. I am forty-nine years old and the damned thing is so under-used it has virtually healed up. I am scared to touch myself. I am scared to even think about sex. Every time I see something on television that is remotely sexual, I switch over. I've stopped reading in case the characters get it on. I can barely use the internet because I long to open up one of the websites I know Charles used to visit. They are still there in the History.\"\n\nShe laughed ruefully. \"Then just do it. Don't think about it -- let it come naturally. Get it out of your system, girl!\"\n\nI shook my head. \"I can't, Leigh. It's like the gin or the exercise - I know that if I start, I won't be able to stop.\"\n\n\"I recall a nineteen-year-old bombshell coming home from University or her gap year, telling me she couldn't stop either. She was fearless, beautiful and sexy as all get out. Thirty years on, she's still the latter two, but she got scared somewhere along the way. We need to change that and change it very quickly.\"\n\nWith a deft motion, she dug in her handbag and palmed something into mine. I may have led a sheltered few years, but even I knew it was a small pocket vibrator. The next few words echoed with me all the way home.\n\n\"So, when you get home later this afternoon, you are going to pour yourself an industrial-strength glass of gin, then you are going to open one of those websites and you are going to watch porn, drink gin and fuck yourself silly with that little contraption until you are unable to walk. Then do it again tomorrow and the next day. Get it out of your system.\"\n\nShe fixed me with a gimlet eye. \"Coz at the moment, you are damaged goods and you are no good to anyone. If anyone does come knocking on your door, you'll run a mile. You need to get back in the game, girlfriend - and it starts today. Got that?\"\n\nI didn't know what to say. We had always been open with each other, but this? \"Leigh, I can't. I just can't...\" I tailed off again, looking down at the table.\n\nShe took my hand in hers, her voice low. \"Worked for me after Terrence left all those years ago. A weekend of no self-control. Do whatever the fuck you want. Watch something completely out of your comfort zone. Group sex, lessies, trannies - anything you like. Get drunk and above all, remember what it is to orgasm, because that is one addiction that you should feed regularly.\"\n\nResistance was futile with Leigh. \"Ok, but only coz it's you telling me.\"\n\nShe nodded slowly as if in thought. \"Good lass - right -- Phil's away next weekend with his golfing buddies and Josie and Katie are off on a school hockey tour, so I'm all on my ownsome. At least I was until my bestie Robyn decided to pay me a visit for a long-overdue girly weekend that will include some long pub lunches and plenty of wine and gin. Oh, and of course - a sordid little recap of what she did when she finally remembered that her pouting little tuppence was designed for other things than making wee-wee.\"\n\nAs we reached our cars, I was in a complete daze. We hugged and I got behind the wheel and started the car before I had even registered we had left our seats. Leigh wound down her window and gave me a big wink.\n\n\"See you next Friday - go hard!\"\n\nShe backed out with a screech of gravel and roared off up the narrow country lane. I sat gazing at the pub sign for a long time before I burst out laughing. It seemed quite appropriate given the advice I had just been given.\n\nThe Nag's Head. \n\nTwo\n\nIt was a lovely evening and we sat in Leigh's back garden, a bottle of Chablis in a cooler, the last few crusts of a delivery pizza curling in the late sunshine.\n\nAfter the previous cathartic, cleansing weekend I had proved I could do things in moderation once more. Leigh was right -- it had been a revelation. Once my sexual tension had been released and the floodgates opened, I was able to control my drinking and it was now at a pretty manageable level.\n\nWe had skirted the issue since I arrived in the late afternoon and now the food was out of the way and the wine flowed, I could tell she was itching to find out all my naughty little secrets.\n\nNot that drinking gin and getting off by my own hand was exactly material for a porn movie, although I had seen a few women doing just that over the last few nights as I began to widen my - until now - very narrow viewing horizons.\n\nIt had been a very long time since Leigh and I discussed matters of a sexual nature. Twenty-five to thirty years ago, it had almost been our sole topic of conversation. We began by comparing our first kisses and admitted to our schoolgirl crushes. Later we would describe in detail our first, less than stellar encounters. Once we got started, every meeting was laced with a 'who, what, why, where and when' and no detail was left out. It was only when marriage tamed us both that - as Leigh had once so succinctly put it - our 'discourse featured less intercourse'.\n\nShe didn't have to say anything -- I just opened up to her and let it all out. \"You were right, Leigh. I needed that so badly. The first time was like my virginity -- it bloody hurt and I had to force myself to go through with it. I put three measures of gin in a pint glass, topped it up with tonic and hit a few random lines on the History tab.\"\n\nShe grinned. \"An eye-opener, huh?\"\n\nI laughed back. \"Some of it made me close mine very tightly -- especially when it involved having cum in them!\"\n\n\"Yes, I always prefer it below the eye-line. Lost a contact lens once years ago, but that's another story!\"\n\n\"Yuck, too much info, Missy! Anyway -- it was a bit uncomfortable the first night after so long, so I went into the pharmacy in town on Saturday and made sure I used the self-serve till as I had three bottles of lubricant in my basket. Let's just say Saturday night was a lot more fun.\" I sighed. \"That's when I watched an older woman take two young guys, one at each end. I searched for ages to find someone that looked a bit like me.\"\n\n\"And?\"\n\nI closed my eyes for a long moment and took a deep breath as I recalled the slim, fifty-something honey-blonde being tossed like a rag-doll. \"Leigh, I have just turned fifty and I shocked myself that night. By the end, I was almost crying; willing myself to become that woman. I wanted to feel those two guys doing what they were doing to her.\" I drained my wineglass. \"I still want it so badly, Leigh. It's gone right to the top of my bucket list. The Great Barrier Reef, the Taj Mahal and the hang-glider over the Grand Canyon have all just dropped one place each. Now, number one on my bucket list is being fucked at both ends by two young studs until I cannot remember my name.\"\n\nHer reply threw me as she refilled our glasses. \"So what are you going to do about it?\"\n\nI expected at least a burst of derisive laughter. \"Nothing. Dream. Wish. Not going to happen, is it?\"\n\n\"Why not?\"\n\n\"Oh come on, Leigh -- I'll just wander into the village pub, jump up on the pool table and invite all-comers to have their fill, shall I? Get real, babe -- how is a middle-aged woman in a tiny Cotswold village going to fulfil her new, all-consuming fantasy of being spit-roasted?\" I hung my head. \"And all the other fantasies I have suddenly accumulated in the course of five days of surfing the morass of sin readily available to the chosen few.\"\n\nShe nodded. \"Hmm, when you put it like that. So what other things took your fancy then?\"\n\nBy the time I had told her, she said I needed a new separate bucket list for things sexual. \"Jeez, you are a little dark horse, Robs. No wonder you've been repressed and buttoned-up for so long, holding all that inside.\"\n\n\"I never knew it was inside, that's the problem! The other problem is there's no way I can see of getting it outside either.\"\n\nShe picked up on something I had mentioned on my rapidly expanding bucket list. \"Do you really want to do it with another woman?\"\n\n\"Yes, but don't worry, I'm not going to come on to you. Be like kissing my sister. But yes I do and it scares me and turns me on at the same time. All of it does.\" I sighed. \"Anyway -- it's fantasy and that's how it will stay. At least I've remembered what my 'pouting tuppence' is for again, and while I liked your pocket rocket, look what arrived on Wednesday in a very discrete package!\"\n\nI thumbed to a webpage on my phone and held it up to her. Her eyes went wide.\n\n\"Robyn, you dirty old mare! Fucking hell, it looks like a bloody model spaceship!\"\n\n\"G-spot and clit stims. As one of the reviews so eloquently said, 'vibrates like a muthafucka!' Two-hundred quid, but worth every penny already!\"\n\n\"How much? Fucking hell, you could get an escort for that money! Got it with you?\"\n\n\"Yeah, its upstairs. Want to borrow it tonight?\"\n\n\"Is it clean?\"\n\n\"Ish..\"\n\n\"Oooh go on then! More wine, my dear?\"\n\nIt was just like old times after that. I felt as relaxed as I had done in many years and Leigh said the change in me was very noticeable.\n\nThere was a very noticeable change in her the next morning too and when I offered her pocket rocket back in exchange for my new toy, she shook her head. \"Ooh no -- that was a gift for me putting you back on track... wasn't it?\"\n\n\"Not exactly...\"\n\n\"Oh, ok then. Must have got my wires crossed.\" She took the smaller vibe from me and handed mine back with a sulky look on her face. \"Hmph, some friend.\" Her face cracked into a huge grin. \"Fuck me, that was good, Robs. Surprised you didn't hear me!\"\n\nThe look I gave her stopped her in her tracks.\n\n\"Oh shit, you did, didn't you! Oh well, best have it back then as I can at least hide my little playmate quite easily. That contraption would be a bit difficult to explain away to a husband and seventeen-year-old twins. Just stay more often and bring it with you each time, that's all!\"\n\nThe rest of Saturday was just like the previous night -- like old times and we had great fun on a horse trek as we used to do way back. After we showered and put on our finery, we walked the short distance into the centre of town for a belated fiftieth birthday meal.\n\nShe was clearly well known at the restaurant and introduced the waitress to me. Lorraine was a pretty, bubbly woman of about thirty with an alluring West-country accent. As she left, Leigh grinned at me. \"What about her for your first girl?\"\n\n\"No, Leigh. Stop it. She's far too pretty and cute. I would need someone with experience.\"\n\nThe girl returned with our aperitif gins and as she left I looked at my friend. \"Bloody hell, Leigh -- that's now an image I can't shake off. Is she?\"\n\nLeigh did a facepalm. \"You are so easy to wind up. No, she's happily married with two adorable little twin girls. Twins - must be something in the water around here, eh?\" She held her gin up to me. \"Here's to sorting out my bessie mate.\"\n\nI touched my glass to hers. \"Cheers Leigh. And thanks for sorting me -- it's been a revelation!\"\n\n\"Glad to hear it -- but don't thank me yet -- I've hardly started, my dear. You were happily married for a fair few years and gave everything to bringing up two great kids while that dissolute arse you married swanned about the globe like a Master of the Universe. You always had my back when we were young. Now we're not so young, I've got yours. You've lived for other people for too long, milady.\"\n\nShe held out her glass once more. \"Right -- let's drink to the new Robyn Christie who's new life officially starts today. It's time to start living for yourself now, Robyn -- and I'm going to help you do just that!\"\n\nShe reached into her bag and handed me a large envelope. \"Your belated birthday pressie. Welcome to the Half-Century club, babes.\"\n\nLeigh co-owned a small travel agency, but even so, I was stunned when I opened the envelope to find she had gifted me a ten-day cruise in the Mediterranean, embarking from Southampton and ending in Marseilles after visiting various interesting ports.\n\n\"Be good for you. Plenty of rich divorcees looking for fun. Get some sun, see some sights.\" She leaned in, her voice low. \"And spend some time on your fucking back. Or on top. Wherever you like -- just fucking get laid, Christie - or you'll pay me back every penny.\"\n\nI was too shocked to argue and Leigh was a nightmare to argue against. By the end of the evening, I had vowed to her I would do my best to be a naughty girl and after she insisted, I told her that, yes, I would book myself a stay in Paris afterwards to try and relive a small part of my gap year.\n\nAs we paid the bill, we were more than a little merry. Leigh fixed Lorraine with a stare. \"How old d'you think my friend is, Loz? Not bad for a mother of two and a granny, is she?\"\n\nThe girl had been funny and flirty all night and made us laugh with her introductions to each course. She even pretended to set a place for herself when we ordered our desserts as she 'loiked them both'. She looked at me appraisingly, hands on her hips, then turned to Leigh.",
        "\"Well you was in here for a big birthday meal a few months ago, so I reckons she's like you -- mid sixties?\" She burst into laughter. \"Only kiddin'. I assume if you've known each other so long you must be the same age, but honest, ladies -- I'd have said not a day over forty.\"\n\nI looked at Leigh in amazement. \"You tell her to say that?\"\n\nThe girl looked most put out. \"Hoi, I mean it. Lovely ash-blonde hair. Wish mine were so soft. I'd kill for skin like that and don't get me started on that figure. The twins saw to mine, so they did. Well them and the cakes and the chocolate and the wine boxes, but hey-ho, a girl's gotta have her excuses, eh?\"\n\nShe leaned towards me as I sat in shock. \"Any pal of Leigh's is a pal o'mine, and you are what we call around here, 'fuckin' lush', lady!\"\n\nShe nodded to Leigh. \"Happy now?\"\n\nLeigh pointed to me as I sat open-mouthed. \"Someone's happy!\"\n\n\"Glad to hear it.\" The girl walked away shaking her head. \"I'll struggle to look half as good as that when I'm bloody forty, never mind fifty!\"\n\nThree\n\nThe apartment was everything I had hoped for. The view was as advertised and I could look out over Paris from the small balcony at the Ile de la Cit\u00e9 to my right, the Eiffel Tower away to my left and the bulk of Montmartre dead ahead across the Seine as it twisted into the distance.\n\nI had a week to refamiliarize myself with the sights, but I had little hope of emulating my younger self when at nineteen, I spent six months in the City of Light, having what at the time seemed like quite a racy rite of passage, but in retrospect was relatively tame. I got a taste for French food, cheap champagne and bed-hopped energetically for a while before a guy I had a crush on slept with my flatmate and I retreated back home with my tail between my legs.\n\nI had a plan mapped out -- museums, art galleries, a bateau-mouche ride and had a few nice solitary meals booked. The cruise had been wonderful, but my lukewarm attempts to 'get back in the game' were pretty uninspiring. I didn't hold out much hope for an improvement in my situation as my week progressed and as per usual, my nocturnal activities were confined to solo flights of fancy.\n\nIt was the third night that things began to change. I had been to Montmartre and Sacre Coeur and had a very nice rustic meal in a restaurant on the edge of the seedy Pigalle district. I returned to the apartment with a bottle of fine Bordeaux and settled down for a quiet evening of wine and a bit of catching up on social media.\n\nAs I lounged on the sofa, I was aware of raised voices from the apartment next to mine through the wall behind me. It took me a moment to realise that this was not a domestic. I knelt up and put my ear to the wall and recoiled in shock as I heard a staccato French voice and the creaking of bed springs.\n\nThe sounds went on in a breathy, singsong voice for what seemed like an age. The girl was obviously enjoying herself far more than I had in my Starboard cabin. My bedroom French was not exactly up to scratch after so long, but I could envisage the girl exhorting her partner to go harder, to come in her mouth and on her face. I knelt there way longer than I should as things subsided into gentle purrs and thought I may have to bring my scheduled vibe session forward a little.\n\nInstead, I refilled my glass and went out onto the balcony. I leaned on the rail and took in the spectacular view of Paris as I savoured the wine and the amazing panorama in front of me.\n\nI had no idea who she was or what she looked like, but I wanted to be the girl next door. I wanted to see her lying there with her face covered in cum, her chest heaving, a contented smile on her face.\n\nI was about to go back inside when I heard a sound away to my right. The door to the adjacent balcony opened and light flooded out, illuminating the small area. My heart stood still as she emerged into the night. She was tall and elegant, wearing a silky silver robe and long brunette hair tumbled down her back in a thick plait. The look on her face said it all -- it had been as spectacular as it sounded and she looked utterly stunning in the moonlight.\n\nShe walked the short distance to the rail and stood as I had done. She stretched her neck and sighed as she ran her hands through her hair, a long, low purr emanating from her throat. Her lovely face lit up in a mesmerising smile and I felt a deep pang of envy as I wished I could be that young, beautiful and happy once more.\n\nAs I made to go back inside, she turned and saw me as I watched her with rapt attention.\n\n\"Oh, pardon. Bonsoir, ca va?\"\n\nThe voice was every bit as singsong and melodic as it had been using her gutter language earlier and I shuddered at the thought of this beautiful girl doing the things I had heard.\n\n\"Bonsoir aussi. Je vais bien, merci. Et vous?\"\n\nShe smiled again and it seemed to light up the night. \"Oh, English, yes? Sorry -- I hadn't realised the apartment was occupied. It seems to be vacant a lot of the time.\"\n\nHer English was heavily accented, but otherwise perfect.\n\nI smiled back. \"Yes, English. And as usual our French neighbours put us to shame with their linguistic skills!\" I didn't add that they put us to shame with their other skills as well.\n\nShe moved towards the dividing rail between the balconies, looking like she should be on some catwalk in Milan, given the grace and natural beauty she exuded. \"Ah merci. I studied English in London before settling here in Paris. Are you en vacances -- on holiday?\"\n\n\"Yes, just staying a few nights, taking in the wonderful sights. Been a long time and it's nice to be back.\"\n\nShe narrowed her eyes in surprise. \"You are alone?\"\n\nI smiled ruefully. \"Yes, just me. A little solo tour to celebrate a significant birthday and something else I won't go into.\"\n\nShe inclined her head. \"Then joyeux anniversaire et bienvenue a Paris.\" She held out a slim hand across the rail and I took it, trying not to think of what she may have held in it a few minutes earlier.\n\n\"Nicole.\"\n\n\"Enchant\u00e9, Nicole. Robyn. Comme le petit oiseau!\" Like the little bird. \n\nA wicked smile crossed her face. \"Well, little bird -- I hope we didn't disturb you and ruffle your feathers earlier.\"\n\nI squeezed her fingers gently and laughed. \"Don't worry - I can remember what it was like to enjoy it that much. Just.\"\n\nShe gave a Gallic shrug. \"Pardonnez-moi, I get a little -- carried away.\" She gazed out into the night and shivered slightly. Her voice was quiet. \"Fuck, it was good.\"\n\nHer head snapped back towards me and a hand flew to her mouth. \"Oh Mon Dieu! I did not mean to say that out loud!\"\n\nHer sweet giggle sent chills through me and I laughed to cover another little frisson of envy. \"Oh to be your age again, Nicole.\"\n\nIn answer, she gestured to the door behind her. \"He's gone. Come round for a glass of wine?\" She leaned forward conspiratorially. \"Maybe help me cool down a little?\"\n\nMy heart almost stopped. Had a girl half my age just come on to me? I began to stammer and bluster, making no sense at all.\n\nShe sensed my discomfort and began to move away. \"Ok, no biggie -- just a suggestion.\"\n\nI managed to find a coherent sentence. \"Sorry, I'm not that way inclined but thank you for the offer. It's very flattering at my age.\"\n\nShe shrugged again. \"Pah, what is age? What does gender matter? If I see someone I like, I make an offer. I rarely get a refusal, but I won't take offence in this case.\"\n\nShe backed away towards the door. \"Don't worry - I won't disturb you tomorrow. I am being wined and dined across town, so I will need to work very hard to repay his generosity.\"\n\n\"I'm sure you'll manage. Oh and Nicole?\"\n\n\"Oui?\"\n\nI pointed to a spot on my left cheek. \"You missed a bit...\"\n\nTouching the same spot, she burst into laughter, a gamine grin lighting up her face. \"Tres amusant! I like you, little bird. Numero Huit if you change your mind.\"\n\nShe gave me a wink as she closed the door. \"I hope you do!\"\n\nI finished my wine and went back inside cursing myself for my craven cowardice. Just a few weeks earlier, I had boldly declared my new fantasy of making out with another woman to my best friend. I'd just had the chance in the palm of my hand to get it on with a stunning French girl half my age and I dismissed it without a second thought.\n\nThree times I almost got up to go and knock on the door of Apartment Eight, but each time my courage failed me. Or more correctly, I just did not have any courage at all. If I had, maybe I'd have spent the night in the arms of a nubile, Gallic babe instead of once more cranking up what, thanks to Leigh, I now thought of as my Spaceship.\n\nAs Leigh had ordered me to after our pub lunch, I went hard. As I arched off the bed, screaming silently at the ornate ceiling, in my mind's eye a long-haired French girl nodded at me with narrowed eyes as she rubbed herself before holding out glistening fingers towards my mouth.\n\nThe next morning, I did my planned trip to the Louvre and spent hours in the long corridors, losing myself in the exquisite artwork in a bid to get the girl out of my mind. It was late afternoon as I returned to the apartment building and settled into an outside seat in the caf\u00e9-bar at the foot of it -- a typical Parisian affair with crowded tables along the pavement and virtually no-one inside.\n\nI ordered an Americano and began to watch the world go by. I love people-watching and as I sat, I gave little life-stories to some of the teeming masses. One woman was on her way to an affair with her husband's best friend. A seedy looking man was waiting for a bereted, Gauloise-smoking hooker to arrive and blow him in a back alley. A third woman, sitting alone as I was, hoped a handsome stranger would sit down opposite her before taking her upstairs to make passionate love to her.\n\nIt was only when her boyfriend or husband arrived a few minutes later that I realised I was the one hoping, not her.\n\nI was on my second coffee when I looked up and saw Nicole speaking to a waiter at the caf\u00e9 entrance. I couldn't discern what she said but clearly heard her melodic voice above the general hubbub. The waiter shook his head apologetically and held his hands out, gesturing to the full tables.\n\nObviously wanting an outside seat, she reluctantly began to follow him inside when she glanced in my direction. Her face lit up as she grabbed him by the arm and pointed at me.\n\n\"Ah, c'est mon ami! Espresso, s'il vous plait, Albert.\" She made a bee-line for my table and without a word, plonked herself down in the seat opposite and gave me a huge smile. \"So, enjoy your day, little bird?\"\n\nI recovered my composure a little. \"Bon apr\u00e9s-midi, Nicole. Yes, you can sit there -- I'm not expecting anyone and I've had a fine day at the Louvre, merci bien.\"\n\nThe waiter put her coffee in front of her and she nodded her thanks. \"Pah, le Louvre -- it is a dull place. Musee d'Orsay or Centre Pompidou are much more fun.\"\n\nSlightly miffed at her intervention, I shrugged back. \"They are on my list, thank you. I still have three days left here.\"\n\nShe sipped her coffee. \"Ah bon -- three more days to get you into my bed. Three more days to hear the little bird sing!\"\n\nI swallowed hard and tried to hide my discomfort. \"Dream on, dream girl. I told you I'm not interested and besides -- I'm old enough to be your mother.\"\n\nShe gave me a sly grin. \"I haven't seen my mother in a long time, but if she is now as she was then, she is forty-one years old and still fucking anything with a pulse like a rabbit in heat.\" She winked at me. \"How does the saying go? The apple does not fall far from the tree.\"\n\nFeeling rather discomfited, I changed the subject and we made small talk for a few minutes as she asked me about my day. I looked at this beautiful girl opposite me in the late afternoon sunshine. Her long hair shone, her grey eyes sparkled and her wide mouth frequently broke into a life-affirming smile. I was mesmerised by her voice, her accent, the way she tucked her hair behind her ear.\n\nI recalled the sounds she had made the night before; the language she used in exhorting her lover on. I envied her youth and beauty. I'd had a year, maybe two of it back in the day before I succumbed to conformity. She was in the midst of it and by the look of her, had a lot more to come.\n\nI very rarely feel envy, but I realised that I was beyond that and into the murky waters of pure jealousy.\n\nAs I finished my brief summary of my day, she fixed me with a beady eye. \"So why is a very attractive lady of a significant age all alone in gay Paris?\"\n\nI laughed. \"If I am honest, to see if I can recapture a fleeting moment of my youth. My best friend bought me a ten day cruise of the Med for my birthday and as it finished in Marseilles, I added a few days on here to complete the trip instead of flying home. I was here for a while on my gap year a long time ago. I was more like you in those days - though not quite as pretty or adventurous.\"\n\nShe sipped her drink. \"So how was the cruise? Any exciting liaisons?\"\n\nHer forwardness should have shocked me, but I was so entranced by her, I couldn't help myself. I felt almost compelled to unburden myself to a complete stranger. \"There were... liaisons, yes. Two of them, but unfortunately neither were exciting; and certainly not as earth-shattering as yours last night.\"\n\nShe made a little moue with her mouth. \"Ah, quel dommage! Pourquoi?\"\n\nI shrugged. \"I've been out of the game for a long time, Nicole. The first guy was nice, but he had been out for even longer. He talked a good game but was even more nervous than me. I barely had time to get the condom on him. After that, every time I saw him on board or on one of the excursions, he ran a mile.\"\n\nShe put a hand to her mouth. \"Pardon, I shouldn't laugh, but - oh, pauvre petit oiseau!\"\n\n\"Poor me indeed. The second was a little better but the only movement I got was from waves rocking the ship and not him. I was as much to blame. As I said - out of practice and a little unwilling to use the skills I learned in my gap year. Had I done so, it may have ended better, but...\" I merely shrugged.\n\n\"Half-hearted sex is like the Louvre. Dull and worthy. You deserve better, Robyn. You are a beautiful lady -- elegant and sexy. Don't settle for the Louvre -- it is the same painting done a million times over. Be like those other mus\u00e9es I mentioned -- bright and vital, daring and bold.\"\n\nShe paused. \"You said this trip was for a significant birthday, oui?\"\n\nI nodded ruefully. \"The big five-oh.\"\n\n\"I would have guessed at forty.\" She gestured around us. \"I've lived here a few years and I know a lot of these women. When they are fifty, they will not be able to hold a candle to you. Have you really never been with another woman, Robyn?\"\n\nOh shit, she was off again. I recalled my nineteen-year-old self in a small bedsit somewhere in the Latin Quarter in the latter part of the previous century. It really did seem like ancient history. I recalled my flatmate Odette and a boy named Louis I had a crush on. I recalled stumbling in on them one night as Odette bounced energetically on Louis and exhorted me to join them.\n\nI then recalled that silly little Robyn ran away like a scalded cat and moved out shortly afterwards.\n\nThirty-one years on, silly little Robyn still regretted her decision and often wondered what would have happened had she stayed.\n\nBack in the present, I shook my head, my voice firm. \"No, Nicole -- I have not.\"\n\nShe downed the rest of her coffee. \"Then come along, Robyn -- come up with me now and find out what it's like.\"\n\nI gritted my teeth. Ninety percent of me wanted to say 'yes' and spend a blissful evening in her arms, but somehow the other ten percent stayed dominant. Thirty-one years of regret and 'what-if's' had seemingly not taught me anything. In my supposed Voyage of Rediscovery, I'd had two less-than-stellar bunk-ups with men near to my own age. Now when offered the chance to make love to a stunning girl in her twenties who could probably change my life, I was still in denial.\n\nOnce more, I screamed at myself in silent anguish as the words I didn't want to say came out in a rush. \"No thanks, Nicole. Flattered once more, but I've told you twice now and I won't say it again.\"\n\nA pair of steely grey-eyes sparkled at me. \"You won't say 'non' a third time because you'll say 'oui'. I can see it in your eyes, Robyn. You want to, I know it - but something inside is stopping you. I've seen it so many times. I was like that once myself.\" She gave a wicked little chuckle. \"Well, for a few minutes, anyway!\"\n\nI stared at her mutely for a moment as anger welled in me -- more at myself than at her. \"So last night I was going to be your cooldown. This afternoon you want me to be a warm-up for your evening of debauchery. Great -- let's make your first time extra-special, Robyn. Let's make you the support act to the divine French girl getting wined, dined and shagged to pieces, shall we? Well thanks, but no thanks, Nicole.\"\n\n\"If you wish, but it will be red-hot, not a warm-up. I don't do dull sex.\"\n\nI sneered. \"So you want to bed me, but only as a sideshow to your main event.\"\n\nShe narrowed her eyes. \"I just want to bed you. Full stop.\"\n\nI didn't trust myself to say anything more so merely shook my head.\n\nNicole gathered up her bag and tucked a ten-euro note under the saucer. \"Tomorrow, I have no plans after four. You would be the main event, not a sideshow -- not an aperitif or a digestif. I finish work at the same time. I will be here for my usual espresso at the same time.\"\n\nShe stood and leaned forwards, her face close to mine. I could smell her musky perfume, the scent of her hair. The air seemed charged with pheromones. \"If you are here at the same time, I will take that as a sign that you have reconsidered and wish to spend the rest of the evening making love with me and drinking wine on the balcony. If you are here tomorrow, petit oiseau, I will make you sing and fly!\"\n\nIn dumbfounded silence, I watched her walk away. Her long hair tossed in the sunshine, her pert bottom strained at her tight black jeans. Heads turned as she walked the short distance to the main door of the apartment block. At the doorway, a smouldering look lasered into me across the intervening distance before she disappeared inside.\n\nThe waiter approached and I shook my head when he asked me if I wanted another refill. I knew if I didn't act now, I'd still be regretting my decision in another thirty-one years. If I reached eighty-one, I didn't want to look back in anger or regret.\n\nAs he turned away, I stopped him and asked if it was possible to book tables.\n\nHe nodded. \"Oui, madame.\"\n\nI pointed at the table and my watch. \"Bon. Le meme heure - demain?\"\n\nHe nodded once more. \"Oui, madame. D'acors.\"\n\n\"Merci.\"\n\nI got up in a daze and left him a generous tip.\n\nNicole's perfume permeated the air in the elevator.\n\nI prayed that tomorrow at this time, she would be with me and my heart raced at the thought of it.\n\nFour\n\nI was up early and into the galleries of the Mus\u00e9e d'Orsay as its doors opened. Nicole was right -- it was bold and vibrant and I found myself mesmerised by the modern art on display in the wonderful, converted railway station a kilometre or so down the Southbank from my apartment. I spent a few happy hours in there, now with a sense of resolve following my actions the day before.\n\nI was comfortable in my decision and felt at ease. I'd had two recent lovers, both of whom passed over me in a shallow dive. Whatever I got from my forthcoming liaison with Nicole, I was pretty sure she would not come the instant I touched her and had every hope that I would get a great deal of pleasure at hands that were not my own for a change.\n\nMy only slight worry was that she may not turn up or the table would be double-booked. I decided to keep the uncontrollables out of my thoughts and concentrate on things I could influence.",
        "Like making myself look good and making sure I was on time. As I returned to the apartment, I checked on my booking on the way up to make sure and was assured the table was mine from four-thirty.\n\nAs I did my makeup, I took a long look at myself in the mirror and tried to appraise myself with neutral eyes. Lorraine was right -- my skin was that of a woman twenty years younger. My rigorous regime saw to that and I almost needed another suitcase for my big-name brand potions and unguents. When my daughter was in her early teens, she used to call me Professor Snape -- the potions master from her beloved Harry Potter books, thanks to my penchant for expensive little pots of magic.\n\nOk, it cost me, but I had to admit the results were damned good. I would have preferred to have my hair done but asking for something in a foreign language I had largely forgotten was a recipe for disaster, so I saw to it myself. I had been away for almost three weeks, but thanks to the beauty salon on the cruise ship, my roots remained hidden and my honey-blonde hair was nicely streaked with lighter, ash-blonde highlights. It fell in gentle waves onto my shoulders. Nicole already said she liked it, so I was happy.\n\nI applied a tiny amount of eye-liner and nodded at my reflection. I wasn't sure if I looked nearer forty than fifty, though given some of the women of my age I had seen being ravaged on the internet, I felt heartened when I realised I could easily pass muster amongst them.\n\nI was good to go.\n\nSo I went.\n\nShe was fashionably late -- fifteen minutes, and of course there was no apology. She just breezed into the caf\u00e9 and with an airy wave, gestured to the waiter. \"Espresso, s'il vous plait, Albert!\"\n\nShe slumped down opposite me in a very unladylike manner. She looked utterly stunning in a tight black leather jacket and matching knee-length boots over wet-look leggings. Her hair was tied up in an elaborate, colourful bandanna and she filled a replica French rugby shirt very nicely indeed. If my resolve had shown any sign of faltering, the sight in front of me now would have reaffirmed it in an instant.\n\nOnce settled, she appraised me through narrowed eyes. \"Tres elegante! You look sensational.\"\n\nI thanked her, and as though nothing of any great import was about to pass between us, we chatted a little about her job and all manner of things including my divorce. I was surprised to say the least that she was an English teacher in an elementary school. We talked like old friends for fifteen, twenty minutes, not two people who barely knew each other. She was warm, friendly and good company but something didn't seem to add up and I felt she was holding back - skirting something that maybe she felt was best left unsaid.\n\nAs we finished our second coffee, she signalled to the waiter and glanced at me. \"Wine?\"\n\nIt sounded like a fine idea. \"Pourquoi pas!\"\n\nAs with many other men in the caf\u00e9, it was clear the waiter had the hots for her. As he left, she held out her little finger and wound the strap of her shoulder bag around and around it. She giggled and put her hand to her mouth.\n\n\"Nicole, it is highly likely you have most men wrapped around that little finger. Some women too, no doubt.\"\n\nShe deadpanned. \"Oui -- Colette over there for one. Francine behind you. Old Madame Duberry who is in here most days. Any more you can think of?\"\n\nI thought for a moment. \"I hear there is an Englishwoman of a certain age that recently began to frequent the place. Though I hear on the grapevine that she is interested in wrapping something wet and more intimate around your fingers than a bag strap.\"\n\nNicole took a deep breath, her nostrils flaring. \"Is she now? And did she tell you why she changed her stance from yesterday?\"\n\nI put my chin on my hand and stared at her. \"What did the great Madame Piaf say? 'Non, je ne regrette rien'. Well I regret something, Nicole. Something I didn't do before you were born. If I don't do it now, I never will. For me, it is unfinished business.\"\n\nI paused as the waiter brought the wine. He ostentatiously poured two glasses and held them out to us. \"Mesdames!\"\n\nWe thanked him and I held my glass to Nicole's. \"I don't intend to finish that business this evening - I intend to start it. It's time to be me again. So I would be very grateful if once we have finished this wine, you take me upstairs to Apartment Eight and show me what I have been missing for so long.\"\n\nShe touched her glass to mine, her eyes misting over. \"Oh, petit oiseau, I will wash away the hurt and the regret. It will be my pleasure and my honour to induct such an elegant, lovely lady into our world. Salut!\"\n\n\"Cheers!\" We drank and a little shiver ran down my spine. I wanted to text Leigh but didn't want to spoil the moment. \"So, how was last night?\"\n\nNicole looked around us. \"Here -- in the street? I'd be arrested! Maybe over a glass on the balcony later to get us in the mood for more?\"\n\n\"Deal. It's funny, I had you pegged as a model from the start. Just that poise, elegance, natural beauty. It seems strange to think you are a teacher. I'm sure the catwalks of Europe are poorer for your absence.\"\n\nShe was silent for a long moment then looked at me pensively from over the rim of her wineglass. \"Robyn, you seem like a very open-minded, level-headed lady. I don't normally pour my heart out and tell my sad little tale to people I barely know, but somehow, this is very different. May I?\"\n\nI considered my response for a moment. \"Nicole, you said you would be honoured to induct me into your world. In return, I would be honoured to listen to your story. I like to think I never judge people, so please -- in your own time. I'm not going anywhere.\" Smiling, I looked up at her balcony, far above us. \"At least not for a while.\"\n\nShe sat in silence for a moment. \"Merci, Robyn. Ok - I started out working as a teacher a few years ago but something has always played at the back of my mind. I was always told I could be a model and despite being happy, there is a deep desire in me to be something else. Someone else. It took me a long time, but eventually, like you, I realised I have made a decision I regret.\"\n\nI looked at her wide-eyed, unsure as to where things were going. When I found out I was almost speechless.\n\n\"Just after I started teaching, I received an offer that almost tore me in two. I had applied to a major production company a few months earlier -- sent them some solo work in the vain hope of being accepted. There was no reply and I almost forgot about it. Four days into my teaching career, they contacted me and I blew out their offer of an audition. I wanted both jobs so badly. I had wanted to teach for as long as I could remember. The other job had become something of an obsession. One of them had to give and I couldn't let it be my lifelong ambition. If I had gone down the other road while still teaching and was found out -- as would undoubtedly have happened - it would have caused such a scandal.\"\n\nI was surprised that this young girl would take me into her confidence so readily. \"I assume this wasn't just straight modelling?\"\n\nShe took a drink and looked at me levelly. \"No, Robyn. As you have no doubt realised, it was an adult movie production company.\" She raised an eyebrow. \"Twenty-one year-old Nicole Bouvier had just been accepted as a probationary English teacher to elementary school children. And she had also been offered an audition for a major European producer of pornographic images.\"\n\nShe closed her eyes for a moment as though it was hard for her to bring back the memory. \"As time has passed, the desires grow. I see girls like myself in movies and keep wondering. It began to nibble at me like 'une petite souris' - a little mouse. Very soon, that little mouse became a pack of feral rats gnawing at me constantly. My childhood ambition was overtaken very quickly by my adult ambition, but now it is too late. I blew my chance years ago.\"\n\nThere was a long silence. \"Regrets, eh? Madame Piaf was lucky to have none -- we all have them.\" She shook her head. \"No, she wasn't lucky. She died aged forty-seven.\"\n\nAs she lapsed into another silence, the waiter passed our table and saw the bottle was almost empty. \"Une autre?\"\n\nDespite wanting to sink into her soft embrace, I felt there was a little more she had to tell me. Her revelations had not exactly shocked me, but I was very intrigued. \"Well I for one am enjoying getting to know my new friend a little better. The night is still young.\"\n\nI took hold of her hand and she squeezed my fingers gently as she turned to the waiter. \"Oui, merci Albert -- une autre!\"\n\nAs he left, she turned back and gave me the same stare she had given me from her doorway the day before. It tore into my soul. \"Robyn -- when I tell you who I really am -- what I really am, I would not be surprised if you run upstairs to your apartment and hide under the bed.\"\n\nI gripped her hand even tighter. \"When I go upstairs, I go with you, Nicole. Please go on.\"\n\n\"Merci, Robyn.\" Our glasses refilled, she lowered her voice even though the tables around us were now vacant. \"You are obviously an intelligent and observant lady. When you see my apartment, I am sure you will wonder how I can afford it on a teaching salary. I have been in the apartment you are staying in -- I viewed it before I saw the one I now own. It is a little faded, old fashioned and tired, is it not?\"\n\nI had to agree with her. It had seen better days, but I forgave everything thanks to the view.\n\nShe went on. \"Mine is the opposite -- clean, modern. Tres chic... but way above my pay grade.\" A hand covered her face for a moment as she gathered her thoughts. \"The gentleman I was with the night I met you on the balcony. Did it not seem to you a little odd that my lover would leave so quickly after our... denouement?\"\n\nSuddenly, it all became clear. \"He left because his time was up, didn't he?\"\n\nA shy smile played on her lips. \"He was a little over, actually. I am quite generous.\"\n\n\"And last evening. Your dinner date.\"\n\nI thought she was going to down her glass of wine in one hit. She coughed a little as it caught in her throat. \"Robyn, when you are - not to put too fine a point on it - a raving nymphomaniac like I am, and a handsome, well-endowed older gentleman is willing to pay me one-thousand Euros to dine with him at a Michelin-starred restaurant then stay the night with him, it is quite hard to refuse.\"\n\nWhen I stayed silent, unable to believe what she had just said, she took hold of my hand, her big grey eyes wide in fear. \"Say something... please!\"\n\nI swallowed hard. \"Well, we've already had Edith Piaf, so how about I quote Kylie Minogue this time? 'I should be so lucky!'\"\n\nHer smile lit up the caf\u00e9 and heads turned at her lovely, natural laugh. \"I take it that you won't run and hide then. Thank you for not judging me. Oh, and just to be clear, it is my night off so I will waive my usual fee!\"\n\nI held her hand to my mouth and kissed her fingers. \"No judging, Nicole. I take it the decision was yours to embark on such a... career? No coercion from anyone, I hope.\"\n\nThat lovely long, auburn mane shimmered as she shook her head vigorously. \"Very much my decision. A friend did some escorting when we studied in London and got me into it. It may not be my dream job, but it is a lot easier to keep it discrete, so I can still do the other thing I love. I would be doing the things I do anyway, so c'est parfait.\"\n\nThe girl intrigued me more and more with every word. \"I envy you your youth and freedom.\"\n\nHer face changed abruptly, as though a cloud had covered the sun. \"I never really had a youth. I grew up in a strange little commune in a tumble-down old chateau in the Loire Valley. My mother had drippy-hippy ideals. Free love and endless supplies of dope were all that mattered to her. I was an inconvenience -- an impediment to her hedonistic lifestyle. Looking after a precocious brat didn't sit well with stoned group-sex sessions every night.\"\n\nShe drained her glass and refilled it and topped up mine. \"So you can see where I get it from. I somehow wonder how there is a respectable part of me left!\"\n\nI stared at her in wonder. \"Oh my God, Nicole -- what a life you've had already! I can't imagine what it would be like to live in an environment like that.\"\n\nShe stared off into the distance. \"When it's all you know, it just becomes your little world. You think that is all there is. As far as we were concerned, there was nothing outside of our grounds and the local village that interested us. It took me a long time to adjust to the real world when my mother threw me out.\" She gave a mirthless laugh. \"I was glad to get rid of the dope, but the group-sex is harder to kick!\"\n\nI was utterly horrified. \"Threw you out? What happened?\"\n\nNicole scratched her chin, gazing out into the traffic on the busy Boulevard. I thought that maybe she wasn't going to answer as she gathered up her bag and drained her glass. Mine was nearly empty and I followed her lead. The way the conversation had gone, the wine had not lasted long.\n\nShe beckoned the waiter over to pay and turned back to me, her face impassive. \"I was beginning to be more popular with her gentlemen friends than she was. She didn't like that. I won't tell you how old I was, but it is why I prefer older lovers.\"\n\nThe speed with which she stood and left after paying, it was clear she wanted to move on. \"Right, if you're still with me?\"\n\nI caught up with her as she opened the heavy outer door to the apartment. I put my hand on her arm. \"Nicole, thank you for confiding in me. I can see it took a lot to say what you did.\"\n\nShe stroked my cheek. \"I like honesty. I survived and it made me what I am today, so I should be grateful.\" Long fingers closed around my left wrist and I was dragged into the hallway. I stumbled over the worn doormat and surprisingly strong arms held me up.\n\nShe pressed the elevator button. \"Time for someone else to be grateful...\"\n\nFive\n\nIt should have felt alien and wrong to embrace her slim body -- to feel her breasts press against mine in the rickety old elevator as our lips met for the first time. If I hadn't known it before, I knew at that first contact it was going to be an utterly unforgettable experience. I had kissed a fair few men in my time, most of them a long time ago, but nothing prepared me for Nicole's featherlight touch, her soft lips, her gently probing tongue. I felt as though I were sixteen again and kissing Harry Ingram at the school disco as the elevator rattled to a halt.\n\nIt was 1985 again and Robyn Christie was about to lose her virginity. As Nicole took me by the hand and led me to her apartment, I half expected to hear Wham! or Whitney Houston playing as they had that fateful night. It felt as though I was walking on air, just like when Harry led me out of the school hall and we found a secluded spot behind the science block.\n\nWhen she opened her front door and led me inside, reality crashed back in on me. This was not 1985 -- it was 2020 and I was now fifty years old, not sixteen. Before my cruise ship dalliances, the last time I had meaningful sex with someone that wasn't my husband was in 1992. That was before Nicole was born. She was younger than my daughter, the same age as my son, who would no doubt lust after her.\n\nI shivered as doubt welled up in me. Then I thought of my bold assertion to Leigh about wanting to sleep with a woman. Usually when I kissed a woman, it was a fleeting brush on her cheek or an air-kiss accompanied by the inevitable, 'Mwah' sound. I had just felt Nicole's tongue probe between my parted lips and I loved the feel of it. The tingle in my groin had not been there during either of my brief horizontal moments on the ship. There, I had been reserved and mechanical. The contact I had with those two men was the thing that felt alien and wrong. My fleeting contact with Nicole just felt so right that I could barely contain my emotions.\n\nAs Nicole stood gazing at me in her hallway, her voice came to me in a breathy whisper. \"Are you sure, petit oiseau? You really want to do this?\"\n\nI held my hand out and took hers. \"Nicole, I didn't even feel this way thirty-something years ago when a young man took my maidenhead. Yes, I am sure. I want this more than anything.\"\n\nShe nodded slowly and raised my fingers to her lips. \"That's good, because so do I! It has been my pleasure to introduce some curious ladies to Sapphic sex in my evening job, but I think this will be much more fulfilling. Let me know if I go too fast or if there is something you do not like.\"\n\nIt was now my turn to drag her towards me. \"Oh, you beautiful girl, just fucking fuck me. It must be ten years since I came properly at someone else's hand. Do whatever it takes, and I'll do everything I can to reciprocate. I want to come harder than I have ever come in my life and I want to make you come so hard, you'll never forget this night either.\"\n\nHer smile lit up her face. \"Well, if you put it like that!\"\n\nAs we came together again, there was no more doubt, no more panic, no second thoughts. I just yielded to her and let her flow over me like silk on a breeze. She was gentle, her lips and fingers feather-light on my skin as we slowly undressed. We kissed for a long time before she began to touch me more intimately. At first I was almost disappointed that she didn't make any moves in that direction, then realised she really was breaking me in gently -- getting me used to the feel of another woman. After all, she was the expert. I was the novice despite our relative ages. I let myself fall under her spell and went with the flow, wherever it took us.\n\nWhen her lips closed over my left nipple, some fifteen minutes after our first touch, it was as if someone had passed an electric current through my body. Her hand cupped my pudenda as she teased me with nibbling teeth and soft lips and made me squeal in delight as she stretched it between her teeth further than it had ever gone before.\n\nThen she left a long, slow, wet trail down my body, her lovely eyes never leaving mine as her tongue worked its magic down my breasts, over my ribs and tummy. It wiggled in my belly-button as I stroked her long, thick hair, then began the last leg of the journey. I suddenly wished I didn't have such an unruly tangle of hair down below, but she didn't seem to mind. I wondered if she were clean-shaven, trimmed, or full bush.\n\nIf touching my nipples with her mouth gave me electric shocks, words cannot describe the feeling as her tongue ran over my labia. I was propped up on pillows so I could get the best possible view and I ran my hands through her hair and over her silky smooth shoulders, hoping she would feel the same when it was my turn. Again, it was slow but insistent and I felt like I wanted it to go on forever.\n\nAfter a few minutes of sheer bliss, she raised her head, her lips wet and sticky and spoke for the first time since we started. \"You taste good, little bird. Heady and musky. May I go inside?\"\n\nI took her hand. \"You may, young lady -- but only if I can taste you first.\"\n\nShe breathed in as her hand went down between her legs and if I had any doubts that she may be enjoying our liaison, they were dispelled as she held sticky, wet fingers up to me. I inhaled her aroma then parted my lips as she slipped them inside my mouth. She could have fed me all night. I had always liked my own taste and I knew hers was like a fine champagne as opposed to my 'vin ordinaire.'\n\nAs I sucked her dry for the fifth time, she slipped a finger inside and I shuddered as the tip pressed on my G-spot. Her voice was low and breathy. \"Let me make you come, Robyn.\"\n\nI shook my head. \"When we come, we come together, Nicole. Just keep doing that -- I'm in no hurry.\"\n\nShe kept doing it and kept adding fingers as her mouth worked on my clit. Once I had got over the fabulous sensation, I whispered to her. \"Surprised you could find it in that jungle!\"",
        "A wicked grin crossed her face and a tug on my hairy muff made me squeal again. \"Don't worry, it won't be there much longer.\" She wriggled around and took my hand. \"Soon it will be like this...\"\n\nI gasped as I felt between those long legs for the first time. Of the three options I had envisaged, it was the first -- smooth and clean and very warm and wet. I slipped a forefinger inside and she moved back up so we could kiss as we worked on each other. Her conical breasts were mesmerising and I took her puffy little nipples in my mouth and tried to be as gentle as she had been.\n\nA tap on my shoulder was followed by a wagging finger. \"Non, non! Bite, Robyn. Nibble. Suck hard. Pull them, make me squeal.\"\n\nI did and she did and our fingers became more urgent for a few minutes before she took my head in her hands. \"Down you go -- your turn now. Taste me properly.\"\n\nIt had been years since I did the old 'soixante-neuf,' and had never been a huge fan of mutual oral sex. I had always preferred them separately to fully enjoy each sensation. But now, I became an instant convert and wriggled in delight as Nicole's tongue went deep and I tried to emulate each move she made.\n\nWe went on for a long time and it was fabulous, but I felt the inevitable tide coming in fast. Her insistent probing and roaming hands became too much for me and I knew I couldn't hold back any longer. We knelt up on the bed, facing each other, fingers darting in and out as our lips mashed together. I could barely breathe as I shuddered to a shattering climax that had been building under her expertise for almost an hour. I fell backwards as she went ever harder, her mouth back on my clit, her fingers a blur.\n\nI let out a piercing scream that rent the night air and shocked me to the core. I was so used to being quiet during sex, I had barely made a sound until that point.\n\nIt had been amazing and I wanted it to be amazing for her too. I put a finger back inside, but she gripped my wrist. \"Quatre, little bird. Four fingers. Hard, fast. Kiss me and make me fucking come.\"\n\nFor a moment, I thought that maybe I wasn't going to be able to fulfil hers wishes. Being unused to this sort of activity, my arm ached and I didn't think I could go hard enough. Then her body went rigid in my grasp and her keening moan spurred me on. She shook violently three, four times, her eyes rolled back in her head, then slumped back down, almost my whole hand still inside her.\n\nMy fingers slipped out with a sticky plop and we lay in a panting heap licking them clean.\n\nFinally, she looked at me with a lop-sided, very satisfied smile. \"Goodness me, a fifty-year old virgin just made me come so fucking hard! How was it for you, little bird?\"\n\nI could still barely catch my breath. \"Nicole, I finally flew. I finally fucking flew, and I went so high, I'm not sure I'm going to be able to get back down again.\"\n\nShe snuggled into me. \"You've barely reached the clouds yet, little bird. Once we've had a glass of wine, I am going to shave you and get a proper look at that lovely pussy of yours. I don't want to trap any hairs when I use my favourite toys on you.\"\n\nI shivered. \"Ooh, what sort of toys?\"\n\n\"Strap-ons, vibes, dildoes. Things that buzz and vibrate. Things that throb and tickle. Things that are going to help me take you way past the clouds and into the stratosphere. What do you say?\"\n\nIt sounded a little frightening, but I was prepared to go with it. \"Only on one condition.\"\n\n\"Oui?\"\n\n\"Your balcony is not overlooked by anyone, is it?\"\n\n\"Non.\"\n\n\"Then do all you need to get me into orbit. Hard, fast, slow, gentle -- as long as we are lying on a blanket on the balcony as the sun comes up, making gentle love to each other.\"\n\nShe shivered in my embrace. \"Then it is a deal! Oh, je t'aime, petit oiseau -- je t'aime!\"\n\nSix\n\nThe two nights I spent with Nicole were utterly magical, but 'all good things', as they say. My short time in Paradise was about to end almost as soon as it began. I lay in her arms knowing my time was up -- she had an assignment that evening and I was leaving for home the next morning -- back to my mundane existence in my lonely cottage.\n\nI sounded like a sulky teenager as I articulated my frustrations. \"I don't want to go home, Nicole!\"\n\nShe kissed me on the top of the head. \"Then don't!\"\n\nI had already checked the website for the property I was staying in. \"The apartment is booked for the weekend. I need to be out by ten tomorrow.\"\n\n\"Fine, that gives you plenty of time to move your gear into my spare room right now. It is perfect as I am out of town for two nights of sheer debauchery, so we can resume this position on Sunday.\"\n\nI tried to argue, but it was futile and my heart was not in it. I desperately wanted to stay and when offered such a lifeline, I was not going to turn it down. It took me a long while to thank her and once we were up and dressed, I went back onto the website and re-booked my apartment from the Monday morning. As the main holiday season was coming to an end, it was available for a few weeks. I chose an end date two weeks from now but Nicole brushed my hand away, smiling.\n\n\"Mais non, little bird. Trois semaines or the deal is off.\"\n\nI kissed her fingers and re-entered the date, my heart singing as I did so. \"Three weeks it is, Nicole. You're the boss!\"\n\n\"I am indeed. Now, go and get your belongings -- I have one more thing to arrange.\" As I left, she was by the open balcony door, tapping at her phone. \"Ah, bonjour Yves, ca va?\" Thereafter, any nuances were lost as her quick-fire chatter was drowned out by traffic; not that I would have understood much anyway.\n\nFeeling better than I had done in years, I walked next door and quickly packed my case. Ten minutes later I wheeled it back along the corridor to find Nicole at the breakfast bar, a coffee cup in her hand and a huge grin on her face. \"All arranged!\"\n\nI sipped the fresh coffee she poured for me. \"What is?\"\n\n\"Your dinner date tonight. Rest assured, Yves will not treat you as a speed-bump in the road. He is a very handsome man and a very accomplished lover.\" She winked and held her hands apart about a foot. \"C'est magnifique!\"\n\nI looked at her in horror. \"Nicole, surely not!\"\n\nHer hands moved closer together. \"Ok, maybe this big then?\"\n\nI was in an utter daze. \"Nicole, that's not what I meant and you know it. Have you really just set me up with a blind date?\"\n\nShe stroked her chin. \"Oui, I suppose I have. Don't worry, you can mess up my bed as much as you like and I give you a personal guarantee that you will come just as hard as you did with the delightful owner of said bed!\"\n\nI was barely able to construct a simple sentence. \"Nicole, I can't. It's... oh, girl what have you done? No, I can't-\"\n\n\"Why can't you? Your best friend bought you a holiday so you could get laid by a nice hunky guy. So far, you've managed two piss-weak fumbles in the dark and a stellar liaison with a beautiful girl.\" Long fingers tapped on my hand. \"But no hunky guys. You have not yet repaid your friend's kindness and it is a condition of our three-day lease agreement that you fuck Yves Marchand in my bed tonight. It is a sub-condition that you fuck him until you scream the house down and your eyes pop out. Blowing him is optional but recommended and his pussy-licking skills are legendary. I will consider three times or less an insult to my hospitality, four barely tolerable and five merely approaching an acceptable level.\"\n\nIf it was futile to argue about staying at her place, there was no way I was going to win this one. In truth, once the initial shock died down, the prospect of dinner and a night of passion with a handsome Frenchman did have a certain appeal. I held out my hand. \"Fucking hell, you are a naughty girl, Nicole Bouvier. Ok, I agree but only if you come out with me this morning and help me choose a new dress. Then I treat you to lunch before you are spirited away for your dirty weekend. Over said lunch, you can tell me all about the man that is apparently going to fuck me more times in one night than I've been fucked in the last six years.\"\n\nWe shook on the deal. \"Go for two nights. He has amazing staying power!\"\n\nI raised an eyebrow. \"He may, but I'm not sure I have!\"\n\n\"I'm sure you'll manage once you see him.\" She drained her coffee cup and tilted her head towards the door with a smile. \"Come on, petit oiseau -- let's go get you a guaranteed fuck-me dress!\"\n\nWhen I saw the shop she chose, I thought it was out of my league. The merchandise was extraordinary, but so were the prices. Then my eyes lighted on a Chinese-style silk dress in deep blue with a high collar and beautiful floral patterns on the front. I didn't dare look at the price tag, but as I walked towards it, Nicole merely nodded. There were a few words with the assistant and I found myself in a changing room almost frightened to touch the exquisite material.\n\nWhen I emerged a few minutes later, Nicole stood impassively, her face giving nothing away. I ran my hands over the exotic fabric and looked at her, hoping for her approval. \"Well?\"\n\nIn answer, she called out through the curtain between the changing area and the main shop. \"Ariane, s'il vous plait?\"\n\nThe curtain parted and the assistant joined her. Nicole and the woman entered into a quickfire discussion and my new friend turned to me with a shake of her head and a steely glint in her eye. \"Robyn, please go back into the change room and take off that dress.\"\n\nI loved the feel of it and I loved the look. I was utterly crestfallen. \"Oh, does it not suit me?\"\n\nThere was another brief exchange between the two women and this time it was Ariane who spoke. As with Nicole, her English was perfect and her lilting accent sent shivers through me.\n\n\"Madame, if you do not do as my friend Nicole says, neither of us will be responsible for our actions. Whoever the gentleman is, he is one lucky S.O.B. As a friend of Nikki's, I would be delighted to offer you a small discount.\"\n\nAs she spoke, another customer of around my own age came through the curtain and nodded at me. \"Oui, c'est parfait.\" She put a hand on my bare shoulder and leaned towards me. \"As you Brits say, 'you will knock his socks off.' He is indeed a lucky man.\"\n\nI was hardly able to process the reaction of these three ladies, one of which I barely knew and the other two I had never seen until moments before. I gave a little bow and hoped my now slightly improved French would pass muster. \"Merci, mesdames. Vous etes tres gentilles. I only hope the gentleman thinks he is lucky too.\"\n\nThe woman squeezed my shoulder, her voice a husky rasp. \"Oh, he will, trust me!\"\n\nAfterwards, as I sat in a rustic little bistro with Nicole, I still couldn't take in what was happening to me. She visibly brightened as I asked her what my dinner companion was like. \"So you want to know... all about Yves?\"\n\nIt took a moment to register her joke and I gripped her hand as I laughed. \"Yes, I do Nicole. So spill the beans, or...\" I tapped at my phone for a moment beneath the table, calling up Google Translate. \"Renverser les haricots, s'il tu plais.\"\n\nHer laugh filled my soul with joy. \" Mon Dieu, I love you Brits. You play strange games like cricket and you are shit at rugby and speak French like Martians, but you are so loveable. OK, here is a quick pen portrait of Yves Marchand.\"\n\nFive hours later, as I walked the few hundred yards to the restaurant just north of Nicole's apartment, I hoped she would be accurate in her glowing assessment of my dining companion. Despite the awards that adorned the walls of the foyer, including two Michelin stars, I felt eerily calm as I checked in with Charles, the Maitre'd. I confidently told him in his native language that I was dining with Monsieur Marchand. If I made any mistakes, he was too polite to point them out.\n\nHe ushered me into a sumptuous room full of beautiful people dining on amazing food at no-doubt ridiculous prices. The quiet, restrained buzz of the diners seemed strange to me and I recalled my raucous, fun evening with Leigh in her local hotel restaurant and the rustic charms of the lovely Lorraine. That seemed to have happened in another world as a Frenchman in a tailcoat and white bow tie led me through the throng.\n\n\"Madame!\" He held his arm out, indicating Yves Marchand's table. It was a mere five metres away, but I knew before the man rose from his chair and extended his hand towards me that Nicole was indeed correct. He took my outstretched hand and brushed his lips across my fingers.\n\n\"Enchant\u00e9, Robyn. Je m'appelle Yves. It is a pleasure to meet you and please allow me to say that you look simply stunning.\"\n\nI took his hand and thanked him. \"Enchant\u00e9 aussi, Yves. Very kind of you to say so. I have Nicole to thank for my attire. She has exquisite taste.\"\n\nA smile lit up his handsome, slightly rugged face. \"She does indeed -- both in her dress sense and her friends.\"\n\nYes, I was in no doubt whatsoever that I was going to sleep with him - assuming he wanted to sleep with me, of course.\n\nIf he did, I just hoped I could live up to Nicole's expectations.\n\nHe was charm personified and I immediately felt comfortable in his company. An impressive mane of silvery-grey hair fell almost to his shoulders, accompanied by a wide smile and soft brown eyes. As we talked, my initial reaction was reinforced and I only hoped that Yves felt the same way towards me. It was fine for Nicole to assume we were a nailed-on certainty, but I was still a mere novice in my second life and while I was sure, there was no guarantee he would be.\n\nHe guided me through the potential minefield of a ten-course tasting menu with practised ease and when I expressed a moral and physical dislike of foie gras, he gallantly forwent it himself and requested a substitute dish from the waiter. The food and accompanying wine flight were sensational and the company even better.\n\nBetween courses, we discussed how we had come to know Nicole. He was most amused by my story of her seduction. We were both grown-ups, so I left nothing out. When I concluded my tale, he gave a little chuckle.\n\n\"She is a formidable lady -- very persuasive as you have found out. Add in her other, more obvious charms and we have, in my opinion, someone utterly irresistible.\"\n\nI had to agree. \"And in mine.\"\n\nHe sipped his wine. \"So, if I may ask -- was your first time with another lady special? If I am being rude, please forgive me and we will change the subject.\"\n\nI took his fingers in mine, the first time we had touched since his lips brushed my fingers, despite raising our glasses to toast each course. \"I am extremely happy to discuss it, Yves. So far, I have only spoken to my best friend in England about it. It was so good I want to stand on a chair on Nicole's balcony and proclaim my happiness to all of Paris through a megaphone.\"\n\nHe squeezed my fingers gently and I felt a little frisson run through me. \"She should have pursued her first choice of career. She is wasted in teaching. Anyone can teach; very few possess her other talents.\" Looking perplexed, he quickly checked himself. \"She has told you of her dilemma, oui?\"\n\nI smiled and nodded. \"Yes, Yves she told me. I am by no means an expert in the world of adult entertainment. However, from the little I have watched, she would enhance any production and would stand shoulder to shoulder with any leading lady I have seen. May I enquire as to how you met her?\"\n\nFor a moment, I thought he was going to refuse to answer. He took a deep breath and gazed off over my shoulder for a moment. His voice was pensive when he spoke. \"I met her when she was just embarking on her journey. A few months before she began what she calls her 'evening job.'\"\n\nI laughed to break the sudden tension. \"It seems more an afternoon job at the moment. And weekends!\"\n\n\"The school holidays allow her a little more freedom and no doubt you will soon hear of her exploits this weekend.\" He glanced at his watch. \"I can only guess at what she will be doing as we speak. Anyway, Nicole was, even six years ago, a remarkable talent. She got me through a very dark period in my life. I take it she told you I am what I suppose you would call 'minor nobility?'\"\n\n\"Yes, she did.\"\n\n\"But maybe not that I lost my wife seven years ago?\"\n\nI went cold. \"No, she didn't mention anything. I am so sorry to hear that, Yves. It can't have been an easy time for you.\"\n\n\"No, it was terrible. Although it did not seem it at the time, it was a mercy. All I will say is that life was not kind to Natasha, so in the end, it came as a relief. Our home -- I should say my home, is a small chateau in the Champagne-Ardennes region; its size befitting my lowly rung on the ladder of aristocracy. I rattled around in it for months, wallowing in my grief and attempting to drink the wineries of the region dry single-handedly. I needed a change, so I came to Paris. At first there were a few girls to help me forget. Then there was Nicole Bouvier.\"\n\nThere was a pause in our conversation as another course arrived, along with the carefully chosen wine to accompany it. For a few minutes, the talk was a little less serious as we enthused over the food and only resumed when the plates had been cleared.\n\n\"So, Nicole and I.\" Yves steepled his fingers together as he resumed his story. \"We soon became very close despite the age difference -- forty-two and nineteen is quite a gap -- and she made me realise that life is in fact worth living. It was not just thanks to her skills in the bedroom either. She was a true friend, a confidante and a pillar of strength for me.\" He looked a little rueful for a moment. \"As a gesture of thanks, I paid the deposit on her apartment when she started her 'other' job. It seemed the least I could do. We have remained good friends ever since.\"\n\nI thanked him for his honesty. \"And lovers?\"\n\nHe swept a lock of hair from his eyes, a shy smile on his face. \"D'acors! Are you shocked?\"\n\nI shook my head. \"Nothing shocks me anymore, Yves. She was there for you and saw you through -- you showed your appreciation of her kindness. You are still friends after all these years. It shows you are both genuine people who care for each other. I like that.\"\n\nHe raised his glass to me once more. \"Merci, Robyn. To Nicole Bouvier, femme extraordinaire.\"\n\nThereafter, the conversation drifted back to more genteel topics, and as the meal drew to a close, I decided it was time for me to take charge for once. \"Yves, this has been a delightful evening, but I insist that we split the cost.\"\n\nHe held his hands up in apology. \"I am not such a chauvinist that I would refuse a lovely lady's request, but I have an account here and Charles will have already done the necessary.\"\n\nAt least I was a 'lovely lady.' \"Very well then, may I thank you for your hospitality by offering you a coffee at Nicole's? I am not sure if I can work her machine, but I will try.\"\n\nHe glanced at the espresso cup on the table. We had already demolished the petits fours. \"I think I have enough coffee here, Robyn. If I drink any more, I will be awake all night.\"\n\nI took a sip from my tiny cup and held his gaze. \"That was the idea, Yves.\"\n\nHe tapped a finger on his cheek. \"Then let me put it another way. My heart is already racing at the company in which I am lucky enough to find myself. Any further artificial stimulation would not be good for me.\" He thought for a moment. \"Well, maybe a small cognac on the balcony to get us in the mood?\"\n\nI suddenly felt empowered. \"I'm already in the mood, Yves. I have strict instructions from Nicole. You know how persuasive she can be. You wouldn't want to disappoint two lovely ladies in the same evening, would you?\"\n\n\"Jamais -- I would not be able to live with myself.\" He rose and took my hand with a radiant smile. \"So, the bill is paid -- shall we?\"",
        "I felt a million dollars as he took my arm as we walked through the busy restaurant and out onto the wide boulevard. I hoped the ride up in the lift would be as memorable as my trip with Nicole, but an elderly lady scuttled in through the entrance as the doors were closing and Yves was ever the gentleman and held them for her.\n\nI scowled at him playfully as she grunted her thanks and mouthed, \"I can wait!\"\n\nHe put an arm around my shoulders and mouthed back. \"I cannot!\"\n\nMercifully, the old crone alighted with more muttering on the floor below Nicole's. When the lift doors opened at her floor, I could already feel Yves' erection pressing against my stomach as we kissed like teenagers on a first date. I was beginning to like that elevator very much indeed. It was old and rickety, but nice things happened to me in it.\n\nOnce I had negotiated the three locks on Nicole's front door, it literally was a race to the bedroom. Had it not been so expensive, I would have discarded my dress in the hallway and left a trail of underwear as we went. In the end, I was glad I didn't as it gave me the not inconsiderable pleasure of Yves and I slowly undressing each other as we caressed and rolled on the huge bed. Hands explored, tongues flickered and lips mashed together gently as clothes seemed to melt into thin air. I held my breath as I tugged at his shorts. In my mind's eye, I could see Nicole laughing behind her hand as I revealed a beautiful, but decidedly average-sized erection. I forgave her little joke as I took it in my hand. I was aroused enough with this gorgeous man in my bed and I knew that this time, it was going to be special and she was right -- it would not be a brief slap and tickle.\n\nFor the first time in many a year, I closed my mouth over the head of an erect penis and ran my tongue over the silky smooth skin. Long fingers caressed my breasts and I purred in delight as he tweaked my nipples gently and his other hand slid between my parted legs. I desperately tried to fight down thoughts of how long it had been since this sort of thing happened to me and to live in the moment. His hand cupped my pudenda and I took him a little deeper as we both moaned in pleasure.\n\nAs I warmed to my task, the past slid away and all that mattered was the here and now. It was amazing to be back in the saddle and to remember what it was like to feel the thrill of the first time with a new lover. Things I thought I had forgotten came back unbidden and the touch of an experienced and almost empathic partner brought little sighs and moans from me as I recalled Nicole's instructions to be more vocal.\n\nBy the time I was able to agree with Nicole that Yves' pussy-licking skills were legendary, we had already been going longer than my two cruise-ship liaisons put together. I wished Leigh could see me and sent out a silent thought of thanks to her across the miles.\n\nA few minutes later, when I held myself open and Yves entered me, I fought against every instinct and wrapped my stockinged legs around his buttocks and held him there before he could begin to move inside me. I kissed him. \"Just hold a moment, please Yves. There's just one thing I need to do.\"\n\nHis eyes narrowed and he nodded, unable to work out where I was going.\n\nI lay with him deep inside me, my legs wrapped tightly around him and took a deep breath. My words came out in a rushed whisper. \"Thank you, Leigh Nicholls, you are the best friend a girl could wish for.\" I released my grip on him, my legs now sticking up vertically in the air. \"Right, that's done. Now fuck me, you lovely minor aristocrat. We can't let Nicole down, so make me fucking scream.\"\n\nHe did just that and didn't need coffee to stay awake all night. We did drink cognac, but it was between the third and fourth times as we leaned on the balcony rail at three in the morning, his arm around my shoulders as we gazed out over moonlit Paris. By the time he came in my mouth as the sun rose, we had gone way past Nicole's 'acceptable level.' I felt like I was twenty again and was so glad Nicole had persuaded me to stay.\n\nMy disappointment was palpable when Yves said he had an appointment the next evening. He assured me it was with an elderly relative and not another woman. I didn't mind if it was. I had no hold over him and although disappointed, I'd had one of the best nights I could remember for so many reasons. We exchanged phone numbers and I expected that would be the last I would ever see of him.\n\nThen he phoned me in mid-afternoon to see if I was still available, as he had changed his plans and met his relative for lunch instead of dinner. We ate in a humble bistro that specialised in Basque food. It was earthy, fresh and delicious and I paid the bill.\n\nThen we made sure that when Nicole returned, her bed really was a mess.\n\nSeven\n\nThe apartment door crashed open in mid-afternoon, waking me from a well-earned little doze. I had lunched in the caf\u00e9 downstairs after Yves made his weary way home and wondered if I had anything left for Nicole's return.\n\nWhen I saw her slumped against the front door looking slightly dishevelled and very sleepy, I wondered if she had anything left for me.\n\nShe gave me a little wave and her goofy grin lit up the hallway as I watched her from the living room doorway. She looked about fifteen years old and I knew that despite the fact I had only known her for a few days, I loved her with all my heart.\n\nShe slowly sank to the floor beside her overnight bag and closed her eyes. \"Nicole sleepy.\" She blew me a kiss. \"Night night, petit oiseau.\"\n\nI cleared my throat and knocked on the door frame. \"Excuse me, Mamzelle Bouvier -- we have salacious tales to tell of nights of unbridled passion over glasses of wine.\"\n\nShe made a grumbling noise and shivered. \"Oh merde, not more sex.\" Then her eyes opened wide and she sprang to her feet grinning from ear to ear. \"Fuck, what a weekend, little bird!\"\n\nLike a French Rugby winger, she ran full pelt down the hall and swept me up in her grasp. We tumbled backwards into the room and ended up in an undignified, tangled heap on her sofa, laughing and giggling like her charges from her day job.\n\nHer questions came out in a rush. \"How was it? How many times? Did you scream? Isn't his tongue wonderful?\"\n\nOnce I had answered a few of her questions, we started on coffee to help wake her up, as after her brief burst of activity, the excesses of the weekend once again took their toll. She promised to give me chapter and verse on her misdeeds once I had given her all the naughty details of my nights with Yves. By the time I finished my tale, we were well into a bottle of Chablis and she was curled up at one end of the sofa, me at the other. I had never really talked about sex to anyone other than Leigh and to give this gorgeous, vivacious young thing all the gory details and see her genuinely delighted responses was almost as good as the acts themselves.\n\nThen she told me about her weekend and it suddenly seemed as if I had attended a Women's Institute meeting in my local village and not come incessantly at the hands of one of the best lovers I could ever imagine.\n\nWhen she described La Maison Des Reves I couldn't believe such places existed. It was a bolt-hole for rich people with sophisticated sexual requirements, where they could indulge every whim and fantasy -- for a cost.\n\nA true House of Dreams.\n\nShe had gone at the request of one of her longest-standing clients and it was her third visit. \"Oh, Robyn, the things that go on there. The food is every bit as good as the restaurant you and Yves ate at, and afterwards -- ooh la la! There are rooms to cater for every foible, fetish and kink you can think of; some by invite only. There are group sex sessions, pre-arranged gatherings, impromptu couplings at the drop of a chapeau. Nothing is out of bounds and the only limit is your imagination.\"\n\nWhen I said it seemed a little out of my league, I found myself on the end of a hard stare. \"A week ago, you thought I was out of your league. You didn't think you would fuck a complete stranger over ten times in two nights or sleep with a woman half your age. Don't underestimate yourself, little bird. You have learned to fly at last. Stop looking down. See how high you can go!\"\n\nI replenished our glasses. \"Even if I were that adventurous, how would I ever get to go somewhere like that?\"\n\n\"Never say never!\"\n\n\"Sounds amazing. So come on, what did you get up to?\"\n\n\"Later, in bed. Right now, my ravaged little puss needs some TLC and your tongue is going to apply it. I forgot to tell you it was another condition of the lease agreement.\"\n\n\"I like your lease conditions, Miss Bouvier. I think they should be enshrined in law.\"\n\nEyes wide, a hand flew to her mouth. \"Oops, I assumed they were the law. No wonder I get strange looks!\"\n\nAs I got to work, her long legs draped over my shoulders, I wondered how many people had been in my position in the last forty-eight hours. When I found out later, I was staggered at the number. I hadn't had that many lovers in my life, never mind a weekend.\n\nAfter all the feverish activity, it was almost a relief to get back to my former domicile on the Monday. The cleaners kindly knocked on Nicole's door to let us know it was ready and I moved back in. Nicole had a busy couple of days ahead of her and our only liaisons would be over afternoon coffees at our usual spot downstairs.\n\nI luxuriated in the bath for a long time and felt so sated and relaxed, I didn't even feel the need to use my vibe or my fingers. I went back to being a tourist and took a day trip out to Versailles and the next day, queued for a long time to get up the Eiffel Tower. Sightseeing over, I sat in my now favourite spot in the caf\u00e9 and awaited Nicole's arrival.\n\nUnfortunately, it was a brief encounter as she was, as she delicately put it, 'between jobs' and needed to shower from her exertions before her evening liaison.\n\nAs she got up to leave, she stopped as if suddenly remembering something. \"Oh, pardon -- I forgot. I am not working tomorrow -- it has been cancelled for some reason.\" She stood, waving her hands in the air. \"I don't suppose?\"\n\nI smiled. \"Glad you could fit me in. What time?\"\n\n\"Six, see you then!\" This time, when she reached the entrance of the apartment block she didn't look back at me longingly. She poked her tongue out at me and ran in to the building laughing.\n\nI hadn't realised that Albert the waiter was hovering until he spoke. He gazed at the now closed door. \"Elle est fou!\" He gathered up her empty cup and for the first time spoke to me in English. \"Mad but beautiful, non?\" He pointed at my almost empty cup. \"Une autre madame?\"\n\n\"Oui, merci Albert. And she is most definitely both of those things.\"\n\nAs I strolled through Montmartre the next day, I could barely keep my mind off what was to come later. I sat sipping wine, watching beautiful young people going about their business and wished I were their age and not trying to live my dream almost thirty years too late. Then I caught myself and realised that not many people get to live their dream at all. I was sitting outside a caf\u00e9 in Paris, drinking wine and musing about what my young female lover had planned for me later. I had just enjoyed the steamiest, most adrenaline-fuelled, sexy weekend of my life with a gorgeous man who had liked me enough to come back a second night.\n\nI may be fifty, but I didn't feel it and apparently Yves and Nicole didn't feel it either. There was life in the old girl yet.\n\nLater, when I lay on Nicole's bed and she produced a blindfold, I knew she had something special in mind. If I had known just how special, I wouldn't have moved from my apartment all day and probably camped outside her door to make sure of being on time.\n\nShe flexed the stretchy fabric in front of my eyes. \"Have you used one before?\"\n\nA distant memory flashed into my mind. \"Yes, Nicole -- back when things were exciting. But not for a long time.\"\n\n\"But now things are exciting again!\" She took hold of my left hand and wrapped something soft around my wrist. With a deft movement, she tied the other end to one of the rails on her headboard. She repeated her actions on my right hand and I lay spreadeagled, unable to move. I trusted her implicitly and waited with bated breath for what was to come.\n\nShe fitted the blindfold gently, making sure my hair was not trapped and I recalled the thrill of not knowing where hands, tongues and - back then -- stiff erections were going to go. Then I shuddered as her tongue ran across my lips and began a slow, deliberate journey down my body. It worked in little circles, darting, flickering, teasing and I began to pull at my restraints wishing I could embrace her. The sweet torture went on for long minutes as she nibbled and sucked on my nipples before resuming her downward journey. By the time she got to the promised land, I was whimpering and moaning.\n\nShe lapped at me for an age and gentle but insistent fingers probed. I longed to look down and see her sparkling eyes, her wet lips, her now slippery fingers, but somehow not being able to see it was all the more erotic.\n\nThen it all stopped. The beautiful waves of pleasure she created drained away from my shores and I rattled the headboard in my frustration. \"Oh, please Nicole -- don't stop. Don't fucking stop!\"\n\nHer voice was soft in my ear and her hot breath made me shudder anew. I could smell myself on her lips as she whispered. \"I'm not going to stop, little bird. I've barely started.\"\n\nI moaned again as her tongue began to tease my nipple once more, then cried out in utter shock as a second tongue flickered against my now slick, wet pussy lips. My cry turned to an elongated, racking sob as strong hands gripped my hips and something long, hard and hot slid effortlessly into me. Nicole removed my blindfold, her mouth still clamped to my nipple and I gazed up into Yves soft brown eyes, his handsome face split in a huge grin.\n\n\"Bonsoir, petit oiseau. I hope you don't mind the intrusion?\"\n\nI could barely catch my breath. \"Intrude all you like, you beautiful man. Oh Nicole Bouvier, you are one devious, naughty girl. Now please untie me!\"\n\nShe bit hard on my nipple, making me squeal. \"No, not yet. A bit more teasing first!\"\n\nI screamed in frustration as Yves pulled out, then was tortured unmercifully as Nicole took him in her mouth inches from my face. I finally got to see what the girl was capable of and why she had men in the palm of her hand. Despite my predicament, it was utterly breath-taking and I felt a pang of sorrow for her that no-one would ever get to see her do this onscreen. She was an absolute natural and to watch her do it right in front of me almost seemed like a privilege. She worked on him for at least five minutes and it was all I could do not to plead with her as the two of them completely ignored me.\n\nThen she took him from her mouth and stared down at me. \"Oh, sorry -- forgot you were there, little bird. Like to share?\"\n\nI was too aroused to even scold her and took him eagerly as she at last untied me. I then had the unbridled pleasure of sharing him with this beautiful girl and Yves was in raptures as we ran our tongues down his shaft before returning to the top and kissing each other with the head of his cock between our lips.\n\nI started to come as Yves took me from behind and I sucked and licked at Nicole's slippery crack, her pungent aroma filling my nostrils, her hands in my hair, urging myself and Yves on. As my orgasm went on and on, she wriggled from my grasp and kissed my sticky, wet mouth as I screamed down her throat. As I subsided and lay panting alongside her, she rolled Yves onto his back and impaled herself on him.\n\nHer long hair flew as she rode him furiously and I recalled hearing her through the wall on that first fateful evening as her urgent cries and moans filled the room. She fixed me with an almost desperate look as she slammed down on him. \"Please, Robyn -- hold me!\"\n\nThe words sounded like they were being ripped from her throat and I knelt up and took her in my arms as she now screamed into my open mouth and her slim body shook and trembled in my embrace. As she came, I thought I may know why men were prepared to pay her a fortune to spend even a short while with her.\n\nThen she took Yves back in her mouth and as he ejaculated over her smiling face and breasts, I fully understood why they paid her a fortune. She turned to me, her face aglow, rivulets of sticky jizz running down her left cheek, coating her soft pink lips and dripping down from her chin onto her breasts. She repeated her words from a few moments before.\n\n\"Like to share?\"\n\nI had seen it on the internet and wasn't sure if it was my thing or not. My husband and one or two earlier boyfriends had come in my mouth a few times over the years, but I had never had it on my face.\n\nWas it my thing? There was only one way to find out. The fact that it took us fifteen minutes to stop playing with the stuff led me to believe it probably was my thing and by the time we had licked, sucked, spat, dribbled, kissed and swallowed it into oblivion, Yves was ready for round two and I sat astride him as Nicole straddled his face.\n\nThereafter, it was a long, languid night and as I had been at the weekend, I was sad to see Yves go when he left in the early hours. I lay in Nicole's embrace and began to cry.\n\nHer voice sounded sleepy as she stroked my hair. \"Hey, little bird, whassup?\"\n\nI sniffed back a tear. \"Oh, nothing Nicole. Nothing other than I've just fucked the two most beautiful people in all of France and I am the happiest woman in the world. That was utterly magical. I can't believe you arranged that, you sneaky thing. Did I ever tell you that you are a very naughty girl?\"\n\n\"Only a few times. It's nice being naughty, no? Anyway, you told me that it was your fantasy to be spit-roasted in a threesome, so I thought I'd go one better and substitute guy number two with the most gorgeous, sexy call-girl in all of gay Paree!\"\n\nI purred. \"Oh, it was wonderful Nicole, but I still have a yearning to do it with two guys.\"\n\nShe put her nose next to mine. \"Then you are in luck. On Saturday I am seeing two regular clients -- businessmen from Marseilles who are in town every month or so. I will bump my usual partner Naomi and you can join me!\"\n\nI opened my mouth to speak but she put her finger to my lips. \"Only joking. I am not about to make a whore of you, little bird. I'm sure your little fantasy will come true one day!\"\n\nI hoped so myself, but the thought of becoming a Parisian hooker for the night did have a certain appeal to it.\n\nEight\n\nOh to be in England, William Wordsworth once said. He desired to be in England in April. Fuck that malarkey. This was November in the Cotswolds and I wanted to be in France. I thought it would be difficult to return home after my strange few weeks with Nicole and Yves, but it wasn't difficult at all.\n\nNo, it wasn't difficult - it was fucking impossible and it was killing me.\n\nHow many nights did I lie there, wishing that it had never happened? How many mornings did I wake, aching for the feel of Nicole's svelte body by my side or Yves' rugged smile asking if I wanted coffee before or after our first workout of the day.\n\nMaybe it would have been better to come home more or less celibate than to have experienced the things I did. On one of her rare visits to Casa Christie, Leigh was sympathetic to my cause.\n\n\"Oh, bloody hell Robyn - I have created a monster, have I not? I sent you on this incredible journey and I'm glad I did, but I'm so sorry it has come to an end. Is there really no-one in the village?\" My unspoken reaction said it all. \"Sorry Babe, thinking out loud again. So, how do we unlock these doors that were briefly opened to you but now seem so impenetrable?\"",
        "By the end of her stay, we still hadn't come up with any answers. We had shifted a lot of gin, curry, pizza and wine but I was still back to being poor old, celibate Robyn. The deprivation I now felt weighed on me far more than before Nicole fortuitously walked into my life. I was still in touch with her, and she rejoiced in regaling me with her naughty tales, but I missed her more than I could have ever imagined.\n\nI also missed Yves. He too had left a lasting impression on me. As the end of another year approached, it was almost as if my brief glimpse of this amazing netherworld was a cruel joke. A tantalising, fleeting brush with a parallel universe that had, for a split second, touched mine before spiralling off at the speed of light, leaving only cherished memories and a burning desire for more.\n\nIn the seemingly vain hope of returning to France, I took an intensive online course in French. I would never be fluent, but it came back to me better than I expected and soon I was conversing with Nicole on social media solely in her native language.\n\nThen, two weeks before Christmas, the spiral galaxy I had inhabited so briefly bounced off a few stray constellations, collided with the Starship Enterprise, changed course and re-entered my timeline via Stargate SG-1.\n\nI was elated to find that even after what seemed like millennia, this strange universe was still inhabited by Nicole Bouvier and Yves Marchand.\n\nWhen Yves called me on that miserable, cold and wet December morning, I tried not to act like I had when Harry Ingram led me to my first meaningful encounter with the opposite sex. Just the sound of his voice filled me with joy and when he requested my presence at his Chateau over the festive period, I was reduced to a gibbering wreck, barely able to respond to his urbane tones and soothing voice.\n\nWithin moments of ending our call, Nicole was on my case. She demanded that I spend some time with her to top and tail my visit to Champagne-Ardenne. Clearly there had been some collusion between them, and I was so grateful that I cried my eyes out at the thought that these two wonderful people who had given me so much pleasure wished to see me again.\n\nI could barely contain my excitement as I booked first-class Eurostar tickets. I drank champagne with my breakfast and Yves had a limo waiting for me at the station in Paris. Our reunion a few days before Christmas was blissful and settled me in nicely for the forthcoming festivities.\n\nIn my early married years, we held some spectacular bashes for friends and family at Christmas, but the festive season with Yves was like no other I had experienced. This was in a different league and the food, wine and surroundings were beyond comparison. His friends were delightful, his family welcoming and if his dear Maman did not approve of an English lady in his life, she hid it well.\n\nThe afternoon get-together on Boxing Day was almost as good, with friends and relatives of all ages in attendance. As Yves had told me, the two formal holidays were an excuse to get the more genteel parties out of the way before the 'real' festive season began. I was assured that now the family affairs were out of the way, it would be wall to wall naughtiness from there on in.\n\nAnd of course, if there was naughtiness to be indulged in, then no-one was going to keep Nicole Bouvier from the action. She breezed in one mid-afternoon on the arm of a handsome forty-something gentleman and I wondered if she ever made love to anyone her own age anymore. The four of us sat sipping Chablis, making small talk and studiously ignoring the fact that in a few hours, Yves drawing room would become a heaving den of iniquity.\n\nThere were twelve of us in all. Yves claimed it was a 'modest' bash. I tried to imagine an immodest one and failed miserably. As I already had sexual knowledge of Yves and Nicole, that left a further nine people I would more than likely be involved with in an intimate manner.\n\nI wasn't even sure if I'd had nine sexual partners in my life before I embarked on this little odyssey. I did a quick count up and just about got there, but it was touch and go. Whatever; if they were all like Yves, Nicole and her partner Jean-Pierre, it would be an evening to remember.\n\nIt could not have started in a more diametrically opposed way to how it ended. Twelve immaculately dressed, responsibly behaved and well-mannered adults ranging between mid-twenties and early fifties; conversing, eating, drinking and making merry as the hired caterers scurried around us, providing splendid provender. When the caterers left we withdrew to Yves drawing room. Knowing what was to come, I imagined gentler times when the gentlemen enjoyed their cognac and cigars and the ladies made small talk and crocheted the night away.\n\nFor the first twenty minutes or so, the conversation continued in a subdued, genteel manner and I thought crochet would be an exciting alternative. I was in a discussion about the merits of the Cotswolds with a very elegant lady of around forty, while her husband and Yves tried to outdo each other with their tales of derring-do on the golf course. It was all pleasant enough, but I could see one or two people becoming a little agitated at the lack of action.\n\nThen, a tall, younger woman in a tuxedo unravelled herself from her chair and stretched herself like a cat. She winked at me and mouthed, \"It's time!\"\n\nWhile everyone else in the room was in a cocktail dress or lounge suit, Nicole had of course dressed to be noticed. The tux jacket was only part of a mismatched ensemble that should have looked so wrong, but on her looked utterly sensational. A bowler hat was perched at a jaunty angle on her tangle of brunette hair and her dress shirt was open half-way to reveal her glorious cleavage. She wore it outside her trousers so that the tails hung down below the level of her jacket. A bow tie that had begun the evening in its proper place now hung down from her collar.\n\nEvery pair of eyes in the room turned to her as she stood in the midst of us, hands on her hips. She ran her hands across her thighs and my heart stood still as the flicker of a hundred candles was reflected in the sheer black PVC of her trousers. Spike-heeled, red leather ankle boots completed her attire and I felt a lump in my throat as I thought of the things I had done with this exquisite, enigmatic creature. She was a wet dream on PVC-clad legs and I had to pinch myself that I called her a friend and lover.\n\nHer face was a mask of concentration as silence fell and she looked around the room as if appraising us all. Then her gaze snapped back to a gentleman on a chaise longue and she extended a long, languid arm and beckoned him towards her. He hesitated for a moment before his partner pushed him in the back with a huge grin on her face and he stepped forward to a small round of applause.\n\nNicole sank to her knees and unzipped him. There was a whisper in my ear. \"I think maybe we will continue our discussion of the gentle Cotswolds another day, Robyn?\"\n\nThe sigh I let out was as deep as the one that emanated from the man in the centre of the room as Nicole took him in her mouth. \"I think you are right, Sylvie. It looks like the party has begun at last!\"\n\nSylvie's hand caressed the inside of my thigh as Nicole worked her magic on her willing victim, all eyes glued to the little tableau in the centre of the room. Satisfied the man was fit for purpose, she pulled off him and pointed towards a lady away to her left and pushed him towards her. Smiling, the woman held out a hand and took his erection willingly as Nicole now gestured to Sylvie's husband, Alain.\n\nHe was already erect as she took him all the way. Sylvie gripped my arm, her voice a husky rasp. \"What a fucking turn-on that girl is.\" She turned to Yves. \"Yves, you are the host. Two ladies need attention here, so get fucking hosting!\"\n\nAs Yves stood and Sylvie extracted his erection from his trousers, I got a brief glimpse of Alain being sent on his way towards another woman, her mouth wide open in anticipation. Sylvie's full, soft lips closed on mine and her hand slid further up my thigh and under my hemline. At the moment she took Yves in her other hand, I once again fought down a brief shiver of panic. Then, as I had done with Nicole and Yves, I screamed at myself inwardly that this was why I was here. Her tongue probed and she rubbed Yves' erection across our cheeks as long fingers eased into my panties.\n\nI pulled off her briefly to catch my breath. \"Fuck, Sylvie -- you're only the second woman I've ever kissed.\"\n\nGrey eyes gleaming, she raised an eyebrow. \"And?\"\n\nI waved an arm around the room. \"Four more lovely women here -- I'll have kissed six soon. Now stick your fingers in me and we'll suck Yves' cock together, because I've never been to a party like this in the Cotswolds.\"\n\nBy the end of the evening I was sure I could never attend another 'normal' party again. I had heard of swinger parties in England and never even considered that I could take part in one, but here I was being tossed between partners of both sexes like a rag-doll and relishing every moment. At times, I had no idea who was doing what to me or who I was attending to orally, but it added to the frisson of it all -- the sheer excitement, the occasional slight pang of fear, the desire to push myself further and further as the night progressed.\n\nI didn't know whether it was at Yves' or Nicole's instruction, but Sylvie took me under her wing. She made sure I was fine with everything and checked on me with little nods of her head. Once she heard my delighted purrs, moans and gasps I think I convinced her I was enjoying myself. When I took a well-earned break from proceedings to cool down, clean up and grab a drink, she followed me into the kitchen.\n\n\"You all good, Robyn? Seem to be taking to it like a duck to water!\"\n\nI took a drink. \"My God, Sylvie - a few months ago, I never thought I would be capable of anything like this. Now I think I'm addicted and the thing that scares me most is how I am going to feed my addiction back in England. I may have to resort to male escorts!\"\n\nShe smiled. \"The way you are fitting in, you'll be back here a lot. Same happened to me over twenty years ago. In my late teens, I came from a small village to Paris to have some fun and thought I'd never fit in.\" She sighed contentedly and her heavy breasts shook. \"I'm still here and still having a blast!\"\n\nWe both turned as a voice carried from the kitchen door. \"So get in there and blast then, Mesdames!\" Nicole tipped her bowler hat to us as she reached for the drinks trolley. The hat was now all she wore. \"Sylvie -- Robyn here has a burning desire to experience what the Brits call 'spit-roast'. Jean-Pierre is ready for another round, so fire him up and get this lovely lady working hard at both ends and get another tick on her bucket list!\"\n\nOh, did she get me working hard at both ends? She took tender care of Jean-Pierre, her thick mane of jet-black hair bobbing, grey eyes glazed with lust as I fingered her and took on her husband Alain. In his mid-fifties, he was a good deal older than Sylvie, but still in good shape. I thought that there must be something in the water - or maybe the wine - in this region that meant the older men were popular with the younger women.\n\nHer fluffing of Jean-Pierre an unqualified success, Sylvie moved away and he entered me from behind, big strong hands gripping my hips. Even with my restricted view, I was aware that people were looking on, watching it all unfold as they took a break from proceedings. Nicole stood in the kitchen doorway, a little smile on her lips. Yves gazed down at me with his arm around Sylvie and nodded his approval. I assumed he also approved of the way her hand moved on his erection as his hand slid down and squeezed an ample breast.\n\nI was suddenly the centre of attention as nine people watched on as I was ravaged by two middle-aged Frenchmen. For a fleeting moment, I felt like running a hundred miles away, then I realised something with the utmost clarity.\n\nIt was one of the moments of my life. I was on my knees in the middle of a drawing room in Central France and two men were rutting into me like stags in heat as I fulfilled a fantasy that had almost consumed me at times. Nine other people watched on, stroking each other, getting off on watching me -- fifty-year-old Robyn Christie - as I fucked two complete strangers.\n\nIt was the most empowering and thrilling moment I could recall and when Sylvie licked Jean-Pierre's cum from my face and Nicole sucked Alain's from my sticky, wet pussy and we shared it in a three-way kiss, I knew with all my heart why Nicole wanted to be a porn-star. It was utterly exhilarating to have those things done to me, but for people to be watching and getting off on my fantasy fulfilment gave me even more of a kick.\n\nAfter that, I was afraid of nothing. When we did it all again a few nights later at a grand New Year party at friends of Yves, Nicole was back in Paris. Our hostess Beatrice had been at Yves' party and took me to one side as we sipped champagne and asked me if I would be the one to 'break the ice'.\n\nI almost refused, but had what Leigh refers to as a 'What the fuck?' moment. I was flattered, Bea was charming and I knew Nicole would be thrilled if I took up the offer and disappointed if I said no.\n\nI could never hope to rival Nicole, but as I knelt in the middle of the floor with an erection in my mouth while Yves and almost a dozen strangers looked on, I knew this was where I belonged. I was not done until every man in the room had been in my mouth. Just before I released the sixth one, I wriggled out of my panties. I then turned, hoisted the hem of my dress and he entered me, both of us almost fully dressed. Now my view was restored, the place was rocking. Others joined us, my clothes seemed to melt away into thin air, and once again I let myself go on the tide and went wherever it took me.\n\nThe countdown to New Year was unforgettable. At the behest of Bea, the six of us ladies got down on all fours, facing each other in two rows of three. At fifteen seconds to midnight, our own partners entered us from behind and we counted down, each number accompanied by a hard thrust. As the chimes of the town clock struck, we were oblivious to the fireworks going off outside. We had indoor fireworks of our own.\n\nBack in England, I would have been in a circle singing \"Auld Lang Syne\", shaking hands, air-kissing and wishing everyone a Happy New Year. Here the menfolk moved in a circle around the six of us until we had all been with everyone's partner. We then formed a line of six and took them by turn in our mouths, before we lay down and they reciprocated on us. Finally, one by one, we lay on our backs as every other lady straddled us and we lapped at them for a few moments, all overseen with expert attention by Bea, who conducted us like a symphony orchestra.\n\nAs a way of seeing in the New Year and making new friends it was unique to me, but so many New Year parties were lost in the mists of time. This one would be with me until the day they put me under the earth.\n\nOur little round-robin over, we briefly stopped to drink a glass of champagne, then all hell broke loose and a dozen individual bodies became one writhing mass of flesh. Fuelled by fine wine, lust and sheer joie de vivre we were somehow still going as dawn broke. It was the best New Year I'd ever had and I just hoped the rest of the year could live up to it.\n\nAs Yves and I lay in an exhausted heap the next morning, he told me he had a confession to make. My heart sank for a moment until I saw the glint in his eye.\n\n\"Sorry, little bird, but I did not tell you that Alain and I have a golf challenge on the second day of each New Year. Eighteen holes, come rain, snow or shine. We have been doing it so long, our wagers began in Francs, not Euros. We still have some token Francs to exchange to this day.\"\n\nI stroked his chest. \"You go, Yves. I could do with the rest. Play your golf tomorrow, then come back and I'll make you squirm with lust.\" I tapped his nose. \"But only if you win!\"\n\nHe smiled. \"I always win. But no rest for you, little bird. Sylvie has invited you over for canapes and wine.\"\n\nI sat back in mock horror, covering my breasts with a sheet. \"What, that terrible woman who cum-swapped with me and Nicole? The one that made me do all those awful things to all those poor people? Do you mean that Sylvie?\"\n\nHe nodded, trying not to laugh. \"Oui, le meme.\"\n\n\"Only one question, Yves.\"\n\n\"Oui?\"\n\n\"Why don't you play thirty-six holes?\"\n\nSylvie and Alain's place was only a little less ostentatious than Yves'. The driveway seemed to go on forever and given the depth of the gravel in front of the house, I hoped Yves did not spin his tyres on the way to the golf course, otherwise the glazier's bill would be astronomical. Two well-built gardeners tended to the borders alongside the path and it never occurred to me that it was hardly the time of year for gardening.\n\nWhen the men left, the fun started. It was a good job I loved Chablis and Champagne given the region I found myself in, and Sylvie assured me it was not vulgar to drink vintage Champers at eleven in the morning. I recalled my gin-fuelled 'bad days' with a little shudder and told myself things were different now. As we drank, I was happy to speak solely in French -- I was becoming more fluent by the day and any opportunity to practice was fine by me.\n\nI had struck up an immediate rapport with Sylvie at Yves' party and had been disappointed she was not at the New Year bash. When I asked her about her party, she yawned ostentatiously and told me how jealous she was of the rest of us, as she saw the year in with relatives.\n\nShe shrugged. \"They never liked me -- see me as a gold-digger, fifteen years Alain's junior. I love him just as much now as I did at twenty-five.\" She winked. \"You saw why the other night!\"\n\nI had to admit, he had been every bit as fine a lover as Yves.\n\nSylvie took a sip from her glass. \"So, Robyn. Tell me more about the Cotswolds.\" The look in her eye told me the game was on. She had a naturally mischievous nature and after a lifetime of jousting with Leigh, I was ready to play too.\n\nI gave what I hoped was a decent gallic shrug. \"Oh, nice little hilly area with lots of pretty villages and pubs. Very English.\"\n\n\"That's it?\"\n\n\"That's it.\"\n\n\"Ah, ok. Hoped you'd say more. So in that case, would you like to brush up on your conversational French?\"\n\nWhen I responded, she sucked in her cheeks, trying not to laugh at my apparently garbled misuse of her native tongue. Roughly translated, it came out as, \"We is talking French very much good, thank you please.\"\n\nShe gave me a wry grin. \"We is indeed. Like a native. So, as your conversational French is so impeccable, how is your bedroom French?\"\n\n\"Needs work.\"\n\n\"Want to work on it?\"\n\n\"Fuck yeah!\"\n\n\"That was English.\"\n\n\"You understood it, though.\"\n\n\"Fuck yeah!\"\n\nJust to show we were not hanging out for it, we had another glass each, then took the rest of the bottle upstairs with us. We were just nicely settled and getting into nipple nibbling when she sat up with a start.\n\n\"Merde, I clean forgot something!\" She got up and dashed to the window, her long hair flying, big boobs bouncing very alluringly. She was a buxom lady and quite a handful, and I wanted my hands full at that very moment.\n\nTo my dismay, she opened the window, despite the temperature outside being just the right side of freezing. Then I realised why there were two hunky gardeners on duty.\n\n\"Mattieu, Krystov -- time to do what I really pay you for.\"\n\nShe returned to the bed as though nothing had transpired and resumed her nibbling. Then she looked up at me as I lay there in sheer dismay. \"What? Didn't really think I need gardeners this time of year did you? The size of those two, it will be one hell of a spit-roast. I swear they will meet in the middle somewhere in your tummy!\"",
        "It certainly did feel that way as we cavorted for an hour with two handsome men, who genuinely seemed to relish making out with older women. Krystov was a dream-boat with long, curly blond hair and the biggest cock I had ever had the pleasure of. The way Sylvie took him in her back passage left me in awe and I resolved that I needed to up my game in that department. It had once been a fall-back during the monthly curse in my younger days and I had endured it at first but came to enjoy it. Now I was not cursed any more, it was time to start enjoying it again.\n\nJust not with two guys who would render me unable to sit down for a week afterwards.\n\nWhen Sylvie thanked them for their services, I was utterly sated and despite the chill of the air, we were slick with sweat and bodily fluids. We caressed tenderly and she gave out a little laugh. \"Oh those poor men of ours, chasing a little white ball around the countryside with a stick. I think we got the better of the deal, Robyn.\"\n\nWe certainly did. Back downstairs, we sat in a heated conservatory overlooking the grounds and were soon into a second bottle -- this time, Chablis.\n\nSylvie poured us a generous glass each. \"So, how would you describe what just occurred in bedroom English?\"\n\nI thought for a moment, parts of me still tingling from their onslaught. \"They fucked us into the middle of next week!\"\n\nHer smile was wicked. \"Not sure about that. It's only the second of January, but I think they fucked us into the middle of next year! So, you forgive me my little subterfuge?\"\n\nI held my glass up to hers. \"Absolutely, Madame Dupont. That sort of subterfuge is fine by me.\"\n\nI even forgave her as she lit a cigarette and drew on it deeply. She saw the look I gave her. \"Don't tell Alain, please!\"\n\nI knew perfectly well what she meant. There was a time many years ago when I loved to smoke after a good romp. I tried to sound incredulous. \"So, you mean Alain doesn't know about the gardeners?\"\n\nShe laughed. \"Of course he knows. It is my dirty little habit I refer to.\"\n\n\"Which one?\"\n\n\"Sex is not dirty, Robyn - nor is it a habit. It is good clean fun, and a necessity of life.\" She inhaled once more. \"Ok, it is a complete addiction, but what the hell? Did you see that large mirror upstairs on the wall to the left of the bed?\"\n\nI rolled my eyes. \"Sylvie, I couldn't take my eyes off the fucking thing. It gave me a perfect view of the utter filth we just got up to with those fine young men!\"\n\n\"Indeed. But it is not just there for that. It is a two-way mirror. Behind it is a comfortable leather chair, adorned with straps and restraints. Alain and I tease the living shit out of each other bound in that chair. Me with the gardeners and others, he with various of our willing friends. We love watching each other. I prefer to tease and deny him. He remotely controls a vibe in my panties. Maybe you can join us one day?\"\n\nI sincerely hoped that would be the case, but somewhere in the back of my mind was the thought that maybe I was Cinderella and all too soon, my carriage would turn back into a pumpkin. Would I be able to cope if that happened?\n\nWhen the men returned, Alain proclaimed himself the winner by two holes and held up a rumpled old banknote in triumph. Sylvie looked unimpressed. \"We were level on holes and they got filled very nicely. We were both winners.\"\n\nYves was crestfallen at his rare defeat. \"So I won't have to make you squirm with lust then.\"\n\nSylvie stood, downed her wine and put a consoling hand on Yves shoulder. \"Don't worry, Yves -- I will! Right, Alain - get another bottle going and give me fifteen minutes to get the canapes together. Then what could be better than to follow your round of matchplay with a nice session of foursomes?\"\n\nWe had so much fun, we stayed the night. When we left the next afternoon, after another long, languid morning session, Sylvie hugged me. \"Come back soon, little bird -- if I may call you that?\"\n\nI kissed her. \"You may. It seems to have stuck and I quite like it!\" Then my heart sank. \"I hope I'll be back someday soon.\"\n\nShe looked at Yves through narrowed eyes. \"Will she?\"\n\nHe hugged her. \"What do you think? Now she can fly, this little bird will be hard to keep out of my garden!\"\n\nNine\n\nMy third visit to Yves place had come and gone. As ever, I felt a mixture of euphoria and sadness.\n\nIt had been a wrench leaving. I was becoming more and more smitten by his charms and there was definitely a chemistry between us that made me feel young and alive once more. I loved the freedom we had within our burgeoning relationship and sharing the things we did made it all the more special.\n\nNo sooner was my bag dropped off at Nicole's, we were back downstairs in the caf\u00e9 and she sat with rapt attention at our favourite spot as I regaled her with my tales of fun and games with Sylvie, Alain and the others. She was genuinely delighted it had all gone so well and it was lovely to be able to recount my salacious deeds to this beautiful girl who had, after all, almost single-handedly been responsible for my transformation.\n\nBut as we went back up to her apartment, I sensed a slight tension in her. Nothing I could pin down, but she seemed a little uneasy for some reason. As with when I left Yves, I put it down to the fact I was going home the next day.\n\nBack in the apartment, she headed straight for the balcony, which surprised me. \"Come on little bird, let's look at your favourite view of Paris!\"\n\nShe led me to the balcony rail and I was surprised to see a champagne bottle in a cooler near the door. \"Celebrating?\"\n\nI loved her Gallic shrugs. \"Peut etre. Maybe. Always an excuse for champagne, no?\"\n\nI hugged her. \"It is not too dramatic to say I love you, Ms. Bouvier. You are a very special lady.\"\n\n\"Et tu, little bird. Je t'aime aussi. You have learned to fly and I am so proud.\"\n\nI turned back to the view and took a deep breath as I leaned on the parapet. \"I think Yves likes me as well, Nicole. Thank you for introducing us. He means so much to me.\"\n\nShe put an arm around my shoulders. \"I have news for you, little bird. Yves does not like you at all.\"\n\nAs my chest began to tighten, she turned me around to face the balcony door. A tall figure was silhouetted there and as my heart stood still, he began to walk towards us.\n\nHis soft voice sent shivers through me. \"No, he doesn't like you, little bird.\" He knelt at my feet, a small box in his left hand, which he held out towards me. \"He loves you with all his heart and would be honoured to make you the second Madame Marchand.\"\n\nTime appeared to stand still as I gazed down at the beautiful ring, sparkling in the last rays of the sun. Nicole's arm was still around me and she was trembling while I felt an icy calm.\n\nI now knelt down and extended my right hand towards him. \"And I love you too, Monsieur Marchand, but I would prefer to be the first Madame Marchand-Christie.\"\n\nHe slipped the ring onto my finger with a huge smile on his face. \"Pas de probleme. So it shall be!\"\n\nThere was a flash from Nicole's phone camera and when I looked up at her she was practically bouncing on the spot, tears coursing down her cheeks. She ran to the champagne bottle and as Yves and I embraced on our knees on her balcony, there was a loud pop and the cork flew out into the gathering gloom of a Paris evening.\n\nWe downed our first glass in one, as once again I told her what a wonderful but naughty girl she was. She poured us a second glass and when I asked her for a chair, she looked puzzled but returned with one and I placed it beside the parapet.\n\nI handed Yves my glass. \"I said I wanted to do this a while ago. I haven't got a megaphone, but what the hell.\" I stood up on the chair and put my hands to my mouth and yelled at the top of my voice.\n\n\"Ecoutez moi, Paris. Ecoutez moi, tous le monde. J'aime Nicole Bouvier. J'aime Yves Marchand. I am a little bird, and I can finally fly!\"\n\nI stepped down and fell into their joint embrace sobbing with joy. We were there for an eternity before Nicole said she would give us a few minutes.\n\nI told Yves I had not been so happy for so long and his proposal was a dream come true. I had been hiding my love for him in case nothing came of it. Now I was the happiest woman on Earth.\n\nHe put his hands on my shoulders. \"I have a table reserved at the restaurant where we first met. It is for three people, is that ok?\"\n\n\"Yes Yves. There is always room for Nicole Bouvier in my life. Is it illegal for the three of us to marry?\"\n\nHe laughed. \"She will always be somewhere near, little bird. But the reservation is not until nine. It is not yet seven o'clock. What can we possibly do to while away the time?\"\n\nIt was my turn to attempt a Gallic shrug. \"I really have no idea, Yves. But Nicole seems a resourceful girl. Shall we go and ask her?\"\n\nShe was so resourceful we were half an hour late. None of us cared, least of all me. I'd had many incredible nights over the last few months to make up for years of being there for others.\n\nMy second life was taking shape very nicely indeed.\n\nEpilogue\n\nI turn off the shower and wrap a huge towel around my body and wind another smaller one around my head. Marie will be here in twenty minutes to do my hair and make-up. As I gaze out of our bedroom window across the vast rear grounds, I cannot believe how far I have come in such a short space of time.\n\nLeaving the Cotswolds was a wrench, but the Champagne-Ardennes area is a fair swap -- still handy for Paris and a delight in its own right, being home to my two favourite wines, Chablis and Champagne.\n\nOut in the garden, the activity borders on manic, with caterers scurrying here and there as one team erect the marquee in which we will dine and another lay out the area that we will occupy after we have sated our appetites. This area comprises a huge, rubberised inflatable mattress that, when it is finished, will be festooned with cushions and ringed by love seats, sex benches and racks of toys and restraints.\n\nIt is a sort of bouncy castle for adults. There, we will satisfy other base appetites long into the warm night. It is there that I will finally fulfil what is now an all-consuming fantasy when I kneel in the middle of everyone present with my arms tethered to metal posts and allow them to do as they wish with me.\n\nNothing will be off limits. For thirty minutes, I will be a human fuck-toy to be used and abused at their whim. At the end of my time, they will throw me into the swimming pool to cleanse the filth from me.\n\nI have fantasised about it for so long now and I cannot wait.\n\nYves strides around the scene, directing, assisting and probably getting in the way a lot, but it is his home and his party, so I am happy to let him have free reign and it keeps him out of my hair. I have had a fair bit of input, as has Nicole, and we all agree that if it goes well, it should be an evening to remember.\n\nAs Yves glances up at the window, I hold the towel open. Even from a distance, I see his nostrils flare. He blows me a kiss and continues on with his supervision. I am already wet at the thought of what is to come, though I will need to put a lid on my emotions, as the real fun will not start for another four to five hours and my self-imposed ordeal will come much later in proceedings.\n\nI glance at the ring on my right hand and kiss it as I behold the scene before me. When Leigh set me on my journey, I never expected I would get back into the game, let alone allow myself to fall head-over-heels in love. I wish she could be here tonight but I look forward to welcoming her to my new home for a slightly more genteel weekend soon. I think she will gladly forgo our usual village pub for a tour of the Chateaux of the region and maybe her visit will re-kindle the spark that she and Matthew seem to have lost of late.\n\nShe was utterly thrilled for me when I told her that my dreams had come true and my knight on a white charger was a widowed, minor French nobleman - not some rich villager from the Cotswolds.\n\nYves crept up on me by stealth. He is a wonderful lover and a great friend, but I never expected him to propose to me, especially so quickly. I am proving very popular with his large circle of fine friends and we have our first trip to The House of Dreams planned in a few weeks.\n\nI cannot wait to see Nicole. She has been insanely busy, so I have not seen her for a while and long to congratulate her in person on her new career. She has already made her first movie, though it will not be released for some time yet. I have seen a few stills from one of the two shoots she has done for the company's website and the word 'incendiary' hardly does them justice. She and the blonde Eastern European girl set the screen alight and I cannot wait to see the conclusion of their slowly-intensifying session with two well-hung studs. Nicole looks utterly stunning in a deep red leather basque and long boots and gloves. She and her partners have a magical chemistry that leaps out of the screen and takes the viewer by the throat.\n\nAs part of her re-submission to the production company, Yves arranged for her to do a photo-set with Danielle, a photographer friend of his. Nicole asked Naomi, the girl she does her foursomes with, to be her co-star. I watched on in awe that day and the beauty of it is etched on my soul. I have three framed photos from the shoot on the wall of my private dressing room off the main bedroom, but my pride and joy is one that Danielle took after the main shoot. It shows me staring open-mouthed at the camera as Nicole and Naomi flick their tongues at my nipples.\n\nLast I heard, the production company were interested in doing a test shoot with Naomi. I hope it works out for her as seeing her and Nicole in a professional shoot would be mind-blowing.\n\nWhen I showed my photograph to Leigh, she let out a little whimper. \"Fucking hell, Robs -- you lucky old cow. I've never been tempted by another woman but you may have just changed my mind!\"\n\nI have no doubt whatever that Nicole Bouvier will be a huge star -- or at least her alter-ego will. I am proud to say that I had a major part to play in her decision to re-apply to the production company.\n\nWe were in our favourite spot in our favourite caf\u00e9 and the conversation inevitably came around to my transformation from a sad old divorcee into something of a sexual adventurer. I told Nicole in no uncertain terms that if I could do it, then she should follow her dreams and transform herself. She couldn't afford to wait as long as I did -- she would never get to be a porn star at fifty.\n\nSomehow I convinced her. The company still had her original application in their system. She went for an audition and left her job as a teacher at the end of the following term.\n\nNikki Boo was born and is destined for stardom.\n\nA soft knock at my door shakes me from my reverie. Marie is right on time to help make this old woman look beautiful for her guests. Her work will only last a few hours and by midnight I will look as if I have been dragged around the grounds of Yves' mansion by wild horses.\n\nBefore I answer the door, I let the towel fall open once more and gaze at my reflection in one of the many full-length mirrors that adorn the bedroom walls and ceiling -- very little goes unnoticed in this room.\n\nI run my fingertips along my hip bones towards my belly-button and trace the three words that are tattooed there on each side -- the same words in two different languages.\n\nThe words on the left are in French.\n\nI smile as I trace the English version on the right, because it tells those special people that get to see it that I am finally doing what I should have been doing for years.\n\nLiving For Myself"
    ],
    "authorname": "BarracudaSwordfish",
    "tags": [
        "english",
        "french",
        "awakening",
        "older woman",
        "younger girl",
        "romance",
        "group sex",
        "salvation",
        "lesbian sex"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/living-for-myself"
}