{
    "title": "Becoming Her Wife Ch. 07",
    "pages": [
        "The next morning I heard the annoying ringing of the telephone. At first I wasn't sure where I was till I felt Josie rise up from my chest and I felt her dildo move inside me as she reached for the phone. She thanked who ever was on the other line then hung up the phone. By this time I had open my eyes to see her staring down at me. She still hadn't move from where she had laid all night. But I could feel the dildo move inside of me as she wiggled her hips slightly. \n\n\"Good morning my sweet wife. I love you so much.\" She said \n\n\"Good morning my love, I love you too. More now then ever before.\" I told her. Then I pushed back to her with my bottom before asking. \"Can we do it again before we leave?\" \n\n\"I would like nothing but to make love to my sweet Nikki again, but our fight is scheduled to leave in two hours and breakfast will be here in thirty minutes. We need to get ready.\" She told me as she started to pull out of me. I was disappointed but I knew she was right. \n\nOnce Josie had pulled out of me, which was not the most pleasant experience I ever felt. She when into the bathroom as I struggled out of bed. As I was getting up I noticed a camcorder attached to the wall opposite the bed. I looked around and saw there were five other camcorders around the room. I studied the cameras and realized they all pointed at the bed. At first I thought we were being spied on, but then I realized that it must have been Josie that put them there. \n\n\"Would you like to tell me about the cameras in the bedroom?\" I asked once I was in the shower with Josie. \n\n\"I told you I wanted to remember last night for the rest of my life. Now we can in every detail. Your not upset are you?\" \n\n\"No not at all as long as the tape doesn't end up in some adult video store somewhere.\" I told her \n\n\"Oh it won't unless you cheat on me then I just may sell the rights to it to my sister.\" She said with a laugh. \n\n\"I don't think that will be a problem.\" I told her \n\nWe fooled around in the shower some before getting out. While Josie did her make and hair I got dressed. Since I was already dressed I let room service in while Josie finished. When Josie came in from the bedroom wearing a white knee length, leather skirt and a white pull over sweater and white leather jacket. The white of her outfit seemed to make her skin look even darker. She sat down across from me. She seemed happy but I could tell she wasn't all that happy. I asked her what was the matter she told me nothing was wrong.\n\n\"Josie I can read your moods pretty well by now and I could tell your not happy, now please tell me what's wrong.\" \n\n\"Do you really want to know you may not like the answer?\" She asked. I told her I did, \"If you really must know I miss my Nikki. I know you're really Nikki and I really love you, but I truly miss Nikki when she's not around. \n\nI thought about this for a few seconds then said, \"You love Nikki more then you love me don't you. You would rather she was around more then I am?\" \n\n\"It's not that, I feel more comfortable around Nikki.\" \n\n\"I know you do.\" I told her, \"When I'm Nick you seem more on edge like you waiting for me to do something, but when Nikki's there you seem more relaxed. With Nick you are more in control, or at lease you want to show it more to Nick then to Nikki.\" Josie stared at me in shock for a second before she said. \n\n\"Nick its not like that I love you I will always love you.\" \n\n\"It's ok I except that. I told you I would do what ever makes you happy. If you want me to be Nikki more often I will. Some times I'd rather be Nikki because I have more fun as Nikki then as Nick. Do you even realize that you have never shown me the plans for the new house? You never even told me about the wedding except what to wear and when to be there.\" \n\n\"Now your being silly you know I've showed you the plans and asked you how you like them. And I'm sure I talked to you about the wedding.\" Josie told me defensively\n\n\"No you haven't. Everything to think you told me, you told to Nikki.\" \n\n\"But you're Nikki. If I tell her I'm also telling Nick.\" \n\n\"I thought so too until last night.\" I told her. You could see she was going to argue with me then she hung her head and said \n\n\"What do you mean by that?\" \n\n\"I feel that last night was the first time you made love to me. I know what your going to say we make love all the time, but after last night I don't think what we do is making love it's sex. Now don't get me wrong I love what we do. What we do is the greatest sex I've ever had and I don't want to change that. You have to admit that what we did last night was very special and I want more of that too, a lot more.\" \n\nJosie studied me for a minute then asked, \"What do you want? Why did you bring this up if your content with what we are doing?\" \n\n\"I told you the day I begged you to take me as your husband. I want to make you the happiest I possibly could and if that means you want Nikki around a lot more, then I do it, in fact I'd love to do it. I find we have a lot more fun together when I'm Nikki.\" \n\n\"How come I feel there's a big but come right about now?\" Josie asked. \n\n\"I don't have any buts, but I think Nikki does.\" I told her \n\n\"Ok what kind of buts does Nikki have?\" Josie asked with a giggle.\n\n\"Well for one she doesn't like dressing up all the time. It's okay when she has to go out, but around the house does she always have to look like she going on a date or out to a club. Can't she wear shorts and tee shirts like you do. And instead of wearing heels all the time can't she have some tennis shoes and anklet sox.\" I told her. Josie was having a fit of the giggles about this then she came over and sat on my lap and said \n\n\"Ok my love, we'll adjust her wardrobe some, but no shorts, we'll get her some skirts that are comfortable to wear around the house. With your bulge it'll look like she wearing a super-duper maxi pad all the time and it wouldn't look right. Now is there any thing else she wants?\" \n\n\"Speaking about going out, we never go anywhere except to one of your sister's houses. Now don't get me wrong I really like your sisters and their husbands, but let's face it they can be pretty boring. All they ever do is watch movies and play poker. Can't we go to some of the clubs that you told me about when we first met?\" I asked her in Nikki's voice \n\n\"Sure my love we can, do you want to go as Nick or Nikki?\" Josie asked when she heard Nikki's voice come out of me. \n\n\"I'd like to go as long as we can go with out having to worry about somebody finding out I'm not really what I look like. And you should take Nick out sometime too I don't want him getting jealous of me.\" I told her again in Nikki's voice. Josie burst out laughing before saying.\n\n\"Okay can we eat now so we can get to the plane. You were right about one thing I do love Nikki more then Nick. I think it has to do with the fact I created Nikki. Nikki would never have existed with out me. Just remember I love you both with all my heart. I could never chose one over the other.\" She told me before we kissed.\n\nTwenty minutes later we were in a limousine that would take us to the airport. Josie had arranged for Frank and Mike to pick up my new car and all the rest of our belongings at the hotel. All we carried with us was our make-up cases. Josie's new strap-on was in her make-up case seeing hers was bigger then mine was. I just didn't know how she was going to get though customs with out them seeing that strap-on. Even though she told me not to worry, I did any way. \n\nInstead of going to the main passenger terminal as I had expected the limo took us to the private aircraft entrance. We were then taken to a two-engine Lear jet that was already running. Once on board Josie introduce me to the pilot and his copilot.\n\n\"Nick this is James Morgan our pilot and his co-pilot and wife Jill. Jim, Jill the love of my life and my husband Nick Ward.\" James and I shook hand and his wife kissed Josie on the lips and me on the cheek. They both congratulated us on our marriage and then Jim said. \n\n\"Once you're ready we'll take off. We have to stop in Hawaii for fuel then on to Tahiti. There's food in the galley along with your choice of beverage. Is there anything you would like before we take off.\" \n\n\"I'll take care of my husband you two go fly the plane.\" Josie told him before shooing him and his wife into the cockpit. \n\nSeeing we had just eaten breakfast neither of us were hungry so we sat on a couch together and buckled up just as the plain was taxiing. With a quick call from the fight deck to tell us we were about to take off we were air born. \n\nWe were cruising at thirty thousand feet for about an hour when Josie crawled into my lap and started kissing me. We made out for a while till Josie started to remove my jacket. Then we kissed some more as she started to open my shirt. \n\nI was starting to get a little nervous seeing I was wearing stockings a garter belt and a camisole under my suit. When Josie had my shirt open she removed her jacket and sweater. Under that she was wearing a white bustier. When she leaned in to kiss me once more I asked.\n\n\"What about the flight crew?\" \n\n\"I thought it would be just the two of us for now, but if you want one of them I'll see if they're busy. \" Josie told me as she reached for the phone.\n\n\"I mean won't they see what we're doing. I mean if they come in here they'll see what I'm wearing under my suit.\" I told her putting my hand over the phone to stop her.\n\n\"Sweetheart I told you I would never put you into a situation that would humiliate you. If Jim or Jill came in here they wouldn't think anything is strange about the way you're dressed, or what they may see us doing. I'll bet, right now Jim is wearing panties and stockings too. Now which one of them would you like to join us? Jill has a really sweet pussy, but Jim has a nice long cock.\" \n\n\"What? You would want them to join us? How do you know what he's wearing?\" I asked unable to tell if she was serious or if she was teasing me. \n\n\"I don't want them to join us now, maybe later. I wanted to initiate you myself, you did say you wanted to go to some of my clubs didn't you.\" \n\n\"Club what club is this?\" I asked now completely confused.\n\n\"Surely you've heard of the mile high club haven't you? I'm a regular member, so are Jim and Jill. If you would quit asking so many question you'll be one too.\" She told me. I could see she was starting to get annoyed with me.\n\n\"I sorry I was just afraid they would see me. How do you know them?\" \n\n\"I've know Jill for about five years now. She's been a copilot on my mother's plane since I was nineteen. We've spent quite a few nights together since then. She met Jim two years ago while he was flying for TWA. She found he was just what she was looking for, a submissive man who also was a pilot. Now they have the best jobs in the world, Flying for me and their able to do it together.\"\n\n\"For you? Do you own this plane?\" I asked my surprise must have shown on my face. \n\n\"I do now. My mother gave me the plane as a wedding present. She bought a new one after I agreed to marry you and she gave me this one.\" She told me as if it was a used car.\n\n\"She gave you this. I guess you're a lot richer then I thought.\" I said \n\n\"I'm sure you can't comprehend how wealthy my mother is, let's just say the Kennedy's are poor compared to my mother. Now do you want Jill of Jim to join us?\" \n\nI knew she was trying to change the subject because she knew I wasn't comfortable with the subject of her money and she doesn't like to flaunt it. Money was not a subject we talked about, she knew what she was doing and I just let her manage it. \n\n\"I told you all I ever need is you, but if you want one of then to join us then go ahead.\" I told her waving toward the phone.\n\n\"Good because I want you all to myself for right now. We'll enjoy Jim and Jill later this week.\" \n\n\"Then they're staying in Tahiti too?\" I asked \n\n\"Of cause, no sense them flying back to the states. Besides we may get bored with Tahiti and decide to go somewhere else. Now where were we?\" Josie said as she started to kiss me once more\n\nIt took Josie very little time to have us stripped down to my undies and her mouth wrapped around my cock. I was sitting on the couch with Josie kneeling in front of me. Over the last six month Josie's been in this position several times a week and it still amazes me how good she is at giving head. I can't help but watch as her full lips slide up and down my cock as she looks up at me with her brown eyes. \n\nWhen she had me on the very edge of orgasm Josie took my cock out of her mouth and pulled me to the floor. She wasted very little time before she was firmly sitting on my face. Her clit was erect as the small gold ring dangled from it. I flipped the ring with my tongue, which caused Josie to sigh. \n\nI took her clit into her mouth and sucked hard on it. Josie squealed as she dug her nails into my scalp. The next time Josie squealed she shoved her pussy forward covering my mouth with it and then pressed down trapping my head between her and the plane's floor. \n\nAs my mouth was being filled with her cum I watched as her stomach rippled with her orgasm. While I watched I saw her hands come up and grab her breast and give them a tight squeeze. Her next orgasm hit her so hard when she squealed again it seem to bounce off the walls of the plane. \n\nAfter her second orgasm she moved back enough to keep her pussy out of my reach. When she could breath normally she spun around so that she was now lying on top of me. We kissed for several minutes when we stopped she said.\n\n\"I do know I love you very much. I never realized that I when we made love together I was treating you like I treat my Brothers in law. I'm sorry I did that. When we make love, if it's Nick or Nikki, I want you to know I making love to you. I don't want you to feel used, like some paid whore.\" \n\n\"I never felt that way. I love how we make love, I didn't mean anything by what I said earlier.\" I told her \n\n\"I know you didn't, but you were right. I do tend to seek out my own pleasure and I shouldn't do that with you. So for now on you can touch me whenever you want while we're making love to each other. Just remember I'm in control.\" She told me before we started kissing once more. \n\nWhile we kissed Josie maneuver so that she took me deep into her without stopping our kiss. We both moaned into each other's mouth as she slid down my cock. Josie kissed my face as her pussy slid up and down on me. She next moved down to my sensitive nipples and licked and sucked them playing with the rings that were pierced though them. \n\nWhen she did sit up she took my hands with her and placed them on her firm breasts and allowed me to squeeze them and to pinch her hard nipples. I played with her breast as she continued to ride me. \n\nThrough out this she would make sure to look at me, and her hands were always touching me. When she moved into a half prone position she pulled my head up and we kissed while she keep sliding my cock in and out of her. \n\nWhen she sat up next I went up with her and took one of her ripe nipples into my mouth. Josie groaned when I did this and started to kiss my face. Meanwhile my hand slid down her back, past her bottom and between her legs. \n\nI could feel where we were joined, where my cock penetrated her hot wet cunt. I could feel her cream pouting out of her and it fell on my hand. With in seconds my fingers were drenched with it. Josie purred in my ear as my hand rubbed where we were joined. \n\nWhy I did it I don't know, but I felt the urge to slide my hand up to her firm round bottom. My fingers slid easily between her cheeks till they touched her puckered ass hole. Josie moaned when my slick finger made contact with her hole. I felt her body tremble as my finger massage her tight anal opening. She looked me in the eye as her hips picked up speed and I could see she was waiting for what I was going to do next. As gently as I could I slid my middle finger into her tight hot anus. Josie squealed instantly and I was afraid I had hurt her till she said. \n\n\"Oh god yes fuck my ass, fuck me Nick. Fuck me in the ass with your finger.\" \n\nI slide my finger in as far as it would go. Josie's hips sped up to an unbelievable rate as she pounded herself on to my cock, as my finger thrust in to her at the same speed. Josie was moaning and squealing like never before as her body was racked by one orgasm after another. Her cum was pouring out of her like a river as it soaked my thighs and balls. Her pussy clamped down on my cock so hard I was worried that I couldn't wait for her command. She must have seen my discomfort.\n\n\"Now baby cum with me, cum deep inside my fucking cunt.\" Josie screamed as her body was seized by another tremendous orgasm. \n\nWith finally getting her permission to cum my cock flared out and I felt cum race out of my balls, up the shaft of my cock and squirt out the head. Over and over I came deep in my wife. On each and every squirt Josie chirped a squeal as her body trembled in my arms. Unable to sit upright Josie fell on to me and pushed me to the floor. \n\nWe lay there panting for breath when we heard; \"Now that's what I call fucking. Dam you two should make movies.\" \n\nJosie and I were both startled by the sound of the female voice. We both looked behind Josie and found Jill sitting in a chair with her shorts and panties down around her ankles and her right hand resting between her legs. Her shirt was off and her right breast was out of her bra. The nipple on it looked red and sore as if she had been squeezing it. \n\n\"What a pervert you are sitting there playing with yourself while my husband and I make love to each other.\" Josie told her still unable to move off of me. \n\n\"That's what you get when you fuck on my plane. You two better clean up we'll be landing soon.\" Jill told us as she reached for her shorts and panties. \n\n\"Ready to clean me up?\" Josie asked me with a giggle.\n\n\"Always my love.\" I told her\n\nJosie eased off my softening cock and turned around. When she was in position I quickly licked up all our combine cum I could find, while I did this I felt Josie pull my legs apart. Just as Josie sat up so more cum would flow out of her I felt a tongue start to lick up cum from around my cock. I knew it wasn't Josie, her body was bent in a way that wouldn't allow her to do it. I felt a pair of lips surround my cock and then I felt someone suck on my cock. When I felt the lips pull off my cock I her Jill say. \n\n\"Dam you two tasted great together. What's your secret?\" \n\nI felt Josie sit up straighter on me just before I felt another pair of thighs between my legs. When I heard Josie and Jill moaning I knew they must be kissing. All I could do was lick my lovely wife. This lasted for a few minutes till I heard the phone ring and Jill say.\n\n\"Dam we must be getting close I have to go. I hope we can continue this again later?\" \n\n\"I'm sure we can. How long before we're on final.\" Josie said as she eased off my face. I watched as Jill went to the phone and asked Jim.\n\n\"You have twenty minutes before you have to be back in your seat. I suggest you get busy.\" \n\n\"Thanks we'll talk over dinner or should I say lunch.\" Josie told her \n\n\"I guess that means you'll be leaving the plane during refueling?\" \n\n\"I was hoping to, is there a problem?\" Josie asked her \n\n\"No problem I just need to know so Jim can file a flight plan. Are we all going to lunch together?\" \n\n\"I was hoping so.\" \n\n\"That's good for me I can use some food. You only have ten minutes left. Why don't you put on a robe and you can shower after we land and while we're refueling. Jill told her, then to me she said, \"Are you going to lay there all day?\" \n\nI stood up with Josie and Jill's help. Jill excused herself and left Josie and I alone. Josie went to the back of the plane and brought back two silk robes. After putting on the robes and buckling up Josie said. ",
        "\"I'm really glad we had that talk this morning. Making love to you the way we just did is so much better then the way we use to do it. I'm glad you said something.\" \n\n\"So you're not upset with me?\" I asked \n\n\"No my love I'm not. Having you touch me was what I've been missing I just didn't know it. If you have any other problems don't be afraid to tell me about it.\" Josie and I kissed then held each other until we were on the ground.\n\nJill and Jim did their checks of the plane and started the refueling process, while Josie and I went to take a shower in the back of the plane. There was a small bedroom and bathroom in the back. When I say small I really mean tiny. The bed was smaller then a double put bigger then a single. The bathroom was a toilet and a shower and that was about it. The shower was too small for two though we did try to squeeze in. \n\nWhen we were done in the shower we brushed each other's hair. Josie put mine in a ponytail and I braided hers. Josie wore shorts and a tee while I wore khakis and a pull over. This time I only had to wear panties, which was nice though I didn't feel quite dressed. \n\nAfter the refueling was done Jill and Jim change cloths. We went to a restaurant that Josie knew about for lunch. Josie ordered the meal for the two of us while Jill and Jim ordered separately. \n\nI found out that Jill spent two years in the Air force as a fighter pilot till she was found in bed with another woman and was asked to resign. Jim flew for the Navy for six years then resigned his commission in ninety-two. He flew for TWA for three years before meeting and falling in love with Jill. I also found out he was thirty- two years old though he looked twenty-five. \n\nJill was twenty-six and she was absolutely stunning. She had long blond hair bright blue eyes. Her tan skin was with out blemish. She was what every man thought of when thinking of California girls. Her breasts compared to Josie were very large. Thirty-eight double D's if I had my guess and her nipples poked out the silk fabric of her blouse. \n\nWhen Jill sat she was as tall as Josie was, but when she stood she was taller then Jim or I are. So you knew she had very long lean legs. She stood two to three inches taller then I, which would have made her five ten.\n\nJim was an inch or so taller then I. He also had that California look as well. His blond hair came down to just below his shoulders. He's vibrant blue eyes were almost hypnotizing in a way. I felt myself being drawn to him by those eyes. From what I could see he was very thin almost gaunt, but not to thin as I would find out later. His fingernails were long for a man even longer then some women I've seen. I later found out that he could wear nail polish with out having to use press on nails.\n\nWhen lunch was over and the bill came, Josie pushed the bill over to me so I could pay. This was the first time that she didn't try to pay first. Even though I was paying with the credit card that she had given me I felt more comfortable being the one who paid.\n\nAfter leaving the restaurant the four of us did some shopping for what the girls called Island cloths. The girls did the shopping while Jim and I just waited and told them if we like what they were showing us. Little did I know that most of what Josie was showing me was meant for me. \n\nWhile Jim and I waited for the girls to try on outfits the subject of Jill's dominance over Jim came up. He told me about it so I wouldn't be surprised by anything that may happen. I also told him I was submissive to Josie he said he thought I was but wasn't sure. \n\nNot knowing anything about fight rules I asked why he was the pilot and she was the copilot if he was submissive to her. \n\n\"It just easier if I'm the pilot. Then we don't get any strange looks from the other pilots or the ground crews. Make no mistake about it she is always in charge whether on the ground or in the air.\" He told me a bit offensively. \n\n\"I didn't mean to imply anything. I was just wondering if there was a reason why she couldn't be the pilot?\" I told him \n\n\"No she can be the pilot, she can fly a plane better then I can and I'm pretty good. I wouldn't mind if she was the pilot, as long and I'm the one who flies along side her. She just likes it that way and what she wants she gets.\" \n\nI told him I understood where he was coming from. He looked me over for a second and nodded his head. Nothing more needed to be said. When the girls were done with their shopping we returned to the airport and boarded the plane. Once we were back in the air and leveled off Josie and I lay down on the bed and fell asleep. It was a tight fit, but one both of us enjoyed seeing we were both wearing only our panties.\n\nWe slept for what felt like only a few minutes when I felt Josie move off of me so I open my eyes and said. \"Can't you sleep?\"\n\n\"Not anymore. We've been asleep for hours. I need something to drink and I have to go to the bathroom.\" She told me as she got off the bed grab her makeup case and went into the bathroom.\n\nI lay on the bed thinking what a lucky guy I was. Sure I had to do things Josie's way but that wasn't so bad. She truly loved me and said she would never do anything to hurt me or cause me to be embarrassed. So far she had lived up to her word. I was so content that I was about to dose back off when I heard the door to the main cabin open. Jill stuck her head in the door and said \n\n\"Oh good your both awake, now I can finally go to the bathroom. Jim will be happy to hear you're up too. I told him if you two weren't up yet I was going to have to use his mouth as a toilet.\" \n\nThe shock of what she had just said must have shown on my face because she started to laugh and said, \"I was just kidding I would never do something like that to my sweet Jamie.\" Jill sat on the edge the bed and said, \"I see your ready to go again, or are those pretty panties just to much for you.\" \n\nAs I looked down to where she was looking I saw my erection pushing out the front of my red satin panties. \"Mostly I have to go to the bathroom.\" I told her as my face turned red with embarrassment.\n\nShe took my hard on in her hand and said \"Mmm not bad, not as big as Jamie's clit but nothing to be I embarrassed about.\" She next leaned over and kissed me on the mouth. \n\nI wasn't sure what to do with Josie in the next room so I tried to pull my mouth away only to find myself pressed down on the bed with Jill half covering me. Her tongue slid into my mouth as her silk covered breasts rubbed against my bare chest while her hand worked on my cock. \n\n\"What's going on in here?\" I heard Josie say from the doorway to the bathroom. \n\n\"I'm trying to seduce your husband but he's playing hard to get.\" Jill told her after she took her mouth from mine. \n\n\"Don't let me stop you. Make sure you ride his mouth he has a very talented tongue and he really knows how to use it.\" Josie told her with a giggle. \n\n\"You have a nice tongue too sweetie.\" Jill told her as she stood next to her, \"Maybe I'll see which one of you eats pussy better?\" She said as she took Josie's naked body in her arms and kissed her. \n\nJosie pushed Jill away and said, \"Don't try that dominate shit on me remember who signs your pay check now.\" \n\n\"So that's how it's going to be. I have to grovel to you now.\" Jill dropped to her knees and said, \"I'm sorry Missy I don't mean to make you mad Missy. I promise to never do that again Missy.\" Josie burst out laughing before saying. \n\n\"Now that's more like it. While you're at it you can kiss my ass. Just so I know you know your proper place.\" Josie told her as she turned and presented her bottom to Jill's face. Jill gave me a smile before sticking out her tongue and with a wink she slid her tongue between the cheeks of my wife. \n\n\"Mmm yes I going to like being your boss. You can keep that up till I tell you to stop.\" Josie told her as she pushed her bottom into Jill's face. Jill pushed Josie bottom away and said \n\n\"If I keep this up for too long I going to pee on the floor. That's why I came in here in the first place.\" \n\n\"If you do your going to clean it up, not Jim.\" Josie told her. \n\nJill stood and said, \"I may lick my bosses ass to keep my job but I'll be dammed if I'm going to scrub carpets too.\" With that Jill ducked into the bathroom. I'm sure she heard Josie's giggles while she was peeing. \n\nJosie sat down next to me grabbed my still hard cock and asked, \"Did Jill get you all excited or do you have to pee too?\" \n\n\"I had a hard on because I have too pee, but what just happen in here sure didn't help matters much. I just didn't know how you would feel about what we were doing.\" \n\n\"I could see that Jill was forcing herself on to you and you resisted. That's okay with me I know she can be very pushy when she's horny. But for now on I think you should ask before you give yourself to someone. I'd like to keep you all to myself but I know I have to share you with others. After all every women I have ever been intimate with has share her husband with me. It's only fare I share you with them, but I've become possessive of you especially after last night. So if you don't mind I would like it if you would ask me first. I'll make sure I say something to you before I go off with some one else.\" \n\n\"I told you before I only need you, but I also know you like to watch me with men so I'll gladly perform for you and be with who ever you want me too. Just so long as I know that in the end you'll still want me.\"\n\n\"You do like doing other people don't you? If I asked you to lick Jill's pussy you would enjoy it as much as you like licking mine don't you.\" \n\n\"Of cause I like doing it, but I don't think I would enjoy licking her as much as I enjoy licking you. I will enjoy it just not as much.\" I told her \n\n\"As long as you don't feel it's chore.\" \n\n\"I could never feel giving pleasure to anyone as a chore.\" I told her. \n\n\"Good because I think Jill's just about ready to have sex with someone and I pretty sure she's thinking both of us.\" \n\n\"You got that right sister I'm past ready.\" Jill told us from the bathroom doorway. \n\nI could see that Jill was fresh from the shower by the water drops that glisten on her skin. With cloths on she was gorgeous but naked she was breathtaking. Her two huge breasts stood high on her chest, not the slightest bit of sag. Her left nipple was pierced with a gold ring as well as her navel. As I said before her legs were long and very lean and they seem to stretch on forever. This girl would have made a fortune on the modeling circuit. I felt someone touched my hand then Josie whispered in my ear as I continued to stare at Jill. \n\n\"I know she's gorgeous sweetie but please close your mouth. You look like a school boy who just seen his first naked women.\" I quickly closed my mouth and swallowed the saliva that had formed in it.\n\n\"I guess I still have it?\" Jill said with a laugh. \n\n\"As if there was ever a doubt in your mind.\" Josie said with a sight irritation in her voice.\n\n\"It's always nice to have a second opinion.\" Jill told her \n\n\"Nick you better go to the bathroom now. It may be a while before you have another chance.\" Josie told me \n\nI knew I had better leave the room because I screwed up by staring at Jill for too long. When I got in to the bathroom I realized that I had to take a dump and I knew that Josie would want to be the one to put the enema in me she always wanted to do whenever she was around. So after I finished voiding myself I called for Josie. She came in with a smile on her face. \n\n\"Do you need to be cleansed, my love.\" She asked when she saw me sitting. \n\nI nodded my head before saying. \"I'm sorry I stared to long at Jill.\" \n\n\"Oh don't be she's gorgeous. I'd start to think there was something wrong with you if you didn't stare at her. I was upset at the way Jill flaunts her body. Believe me she knows exactly what she was doing. She is quite the show off.\" Josie told me this as she prepared the enema bag. \n\nAfter two cleansings Josie went back to the bedroom while I took a shower. After my shower I shaved as close as I could seeing that was the way Josie liked it then I put on the purple satin panties I found on the sink. \n\nWhen I walked into the bedroom I found a sight that would cause any man to get a raging hard on. Jill was laying on her back with my beloved wife's knees on each side of her head. Josie was in a prone position with her face between Jill legs. You could almost hear the sounds of tongue on wet pussy over the moans of both women. I stopped dead in my tracks not wishing to disturb such a beautiful sight. \n\nI saw Jill look at me as she continued to run her tongue around my wife's wet pussy. If Josie had any idea that I was in the room she gave no sign of it as she concentrated on what she was doing.\n\nAs I stood watching these two beauties giving each other oral pleasure I couldn't stop myself from giving my cock a few quick strokes through the satin panties I was wearing. Not enough to make me cum. Though it wouldn't take much to have me squirting in my panties. I knew that was not an option without my love's approval. \n\nI have never been forbidden to masturbate though I have been told not to cum with out Josie's permission. Over the six months I have known Josie I never felt the need to take matters in hand with all that she offered in the way of sexual release. Even when she had her period she always made sure I came once a day and more likely several times in one day. \n\nI could see that both girls were close to cuming as their bodies started to shake. Josie was grinding her pussy onto Jill face with a passion. Jill, not to be out done, was pushing her mound up to Josie's face with equal zeal. Josie was squealing now, which was a sure sign that she was close to cuming. Jill on the other hand was groaning, though all you could hear was a muffle noise from between Josie's legs. \n\nBoth women collapsed as Josie rolled off of Jill. They both lay there panting for air as I watched their ample chests rise and fall. I also had a perfect view of Jill pussy from where I was standing. Her legs were still spread lewdly and her pussy was spread before me. It was red from the attention that my wife had just given it and I could see cream that dripped out from between her lips that spreads open like the pedals of a flower surrounded by a light dusting of very fine blond hair. \n\n\"Instead of just staring at it why don't you put that cock inside of me. I could really use a good fucking right about now.\" Jill told me when she saw me staring at her pussy. \n\nI looked over to Josie and saw her nodded her head. I was so use to being the one on the bottom by this time I wasn't sure what I was suppose to do seeing the was no room left on the bed for me. \n\n\"Just climb on and fuck me, I know Josie always likes you on the bottom but I'm to exhausted to move right now.\" Jill said to answer my dilemma. \n\nBeing it had been awhile since I was in this position I felt kind of out of place as I took my place between her legs. Josie turned over on to her side and pulled down my panties and took my cock in her hand. She gave it a quick lick with her tongue and then pushed it into the slit between Jill's legs. \n\nJill gave off a deep moan as I slid into her. She wasn't near as tight as Josie was, which worked to my benefit seeing how excited I was by this time. Once I sank into Jill my instincts took over as my hips started to rock back and forth on their own. \n\nJill was moaning softly as I thrust my hard cock into her. Josie turned around and took one of Jill's hard nipples into her mouth and sucked on it like a baby looking for food. Her right hand moved down and started to caress Jill's pubic hair lightly. Between what my cock was doing and what Josie's mouth was doing, we had Jill on the edge of another orgasm very quickly. \n\nI knew I was close as I started to pound my cock into Jill with all the strength I could muster. Josie saw that I was close and started to finger Jill's clit rapidly. Jill started to squeal as wave after wave of orgasm racked her sweet body. I keep jamming my cock in and out of her trying to drive her toward another orgasm when I felt that familiar tingle deep in my balls that signaled my approaching orgasm.\n\n\"Josie I can't go much longer I need to stop or cum soon.\" I told Josie.\n\n\"Don't let him cum in me Josie you know how Jim likes it.\" Jill cried \n\n\"Pull out Nick.\" Josie told me I pulled out instantly as Josie grabbed my slick cock and started stroking me while pointing the head of my cock at Jill's pubic hair. \"Cum now sweetie. Cum on Jill.\" \n\nHer command was all I needed, a deep groan roared out of my mouth as the first of so many squirts of thick white cum jumped out of my cock and onto Jill's pubic hair. Josie continued to pump my cock till I was completely empty then she smeared the cum with the head of my dick so that Jill's pubic hair was completely matted with cum.  \n\nJosie took my now softening cock in her mouth and cleaned it with her tongue. Once I was clean she sat up and kissed me with cum still in her mouth mixed with the flavor of Jill's pussy. While we kissed Jill staggered to the door leading from the bedroom to the main cabin. When I asked Josie where she was going she said \n\n\"She's bringing Jim the present you left him. I'm sure he'll like it.\" She told me with a giggle. \n\nWe took separate showers and we were almost dressed when Jill came back for another shower and to collect her clothes. \"Jim really liked what you left him he said he can't wait to get it while it's still warm and straight from the tap. Unless that's off limits?\" The last sentence was to Josie more then me. \n\n\"No there isn't much off limits as far as the four of us is concerned. Though tonight Nick and I will be in bed together alone. There is something I promised him and I can wait to give him.\" Josie told her as she wrapped her arms around my waist and I did the same to her. \n\n\"So he's going to pop your cherry tonight. I hope you enjoy it I love it when Jim does me. And I know Cathy and Sue loved it when their husbands did them the first time.\" Jill told her.\n\n\"I know they couldn't stop talking about it and they still wouldn't let me do it till I was married the bitches.\" Josie told her \n\n\"Just think how special it will be when your husband does it to you first. I know Jim felt honored that I saved myself for him. To tell the truth I was too scared to let anyone else do it, but I knew he would be gentle and I was right. He was perfect.\" You could see the love in Jill's eyes as she said this. \n\nJill took her leave after this saying that she was going to have to take over the controls so Jim could use the bathroom before we were in Tahiti air space. Josie and I went into the main cabin to wait before we landed. \n\nAn hour and a half later we were on the ground following a small truck with a custom's flag fling from it. The truck guided our plane to an area where all the other smaller planes where parked. When we were stopped I heard the engines wined down just before Jill came out from the cockpit to open the door.\n\nWhen the door was open a rather large gentleman came on to the plane. You could see he was of Polynesian decent, Where I thought of Polynesian people as short, compact people this man was huge. He stood six foot six and had to weigh close to three hundred pounds. He had very broad shoulders and a rather small waist. I guess his age to be around forty by the slight graying of his temples but I couldn't be sure. \n\nWith out a word to Jill he went straight to Josie. Josie and I were standing, her left arm held on to my right. The customs agent came to us and took Josie hand in his and said before kissing Josie hand \"It's so good to have you back Miss Swanson.\" \n\n\"Thank you it's good to be back, only now I'm Mrs. Ward. Nicholas may I introduce Chief customs agent for Tahiti, Frances Nitto. Frances, my husband Nicholas Ward.\" ",
        "\"So you are the man that stole my women from me?\" He asked taking my hand in his.\n\nI expected my hand to be crushed by this giant of a man but surprisingly his grip though strong did not hurt, but he left no doubt that he could crush me if he chose. At first I thought he was serious then a wide toothed grin lit up his face. Then he said \n\n\"You are one lucky man if I had meet her before I married my Linda I would have married Josie in a heart beat.\" \n\n\"You did. I think I was six the first time we met.\" Josie told him. \n\n\"Yes we did met then and you were beautiful even then. Now let us get the paper work out of the way so you can start your honeymoon.\" He said reaching into his brief case. \n\nHe handed us each a custom formed that we filled out and signed then he stamped our passports. Once the paper work was out of the way he handed Josie three envelopes and took his leave of us. Josie stuck the envelopes into her purse and then took my hand as we left the plane. \n\nWe rode in a limousine to the house that Josie's mother own. It was large, though not as large as Josie's sisters homes but large enough to house Josie's family quite comfortably. There were ten bedrooms a large dining room and a very large kitchen. There was a veranda that faced west looking out over the ocean. When the sun was setting it was very lovely. \n\nThe first night there I didn't see the sun setting seeing that we arrived after dark. When we did arrive we were greeted by the house hold staff which consisted of one housekeeper a cook and a maid. Josie dismissed the staff once she had introduced me to each one. She said that she didn't want to anyone in the house that night. \n\nSince we arrived in Tahiti I had noticed a change in Josie's behavior. Where she always seemed confident and sure of her self, now she seem unsure almost as if she was frighten of something or someone. \n\nWe went into the master bedroom to get changed. The bedroom was very large, there was a king size bed, three dressers, two make up tables and two walk in closets. There were also a couch a love seat and two armchairs. \n\nJosie's unusual behavior continued. Where she would always remove her cloths before going into the bathroom this time she grabbed her make up case some cloths and quickly ran into the bathroom. If I didn't know better I would have to say she was acting like a virgin bride on her wedding night. \n\nWhen she came out of the bathroom wearing a floor length white silk robe and from what I could see very little, if anything else. And as always her exotic beauty struck me. The way her deeply tanned skin showed up sharply against the pure white robe was breathtaking. \n\nWith out even realizing it I had move to her and slide my arms around her slim waist. When she melted into me as her arms reached up and around my neck I felt her tremble. But this tremble was different from the trembles of pleasure I always felt from her. This was one was more from fear then pleasure. When I looked into her normally large eyes I saw that they were even larger then normal. She looked as if she was about to start crying any second. \n\n\"What's wrong my love? You look so scared.\" I asked \n\n\"I am scared, I'm about to do something I've never done before.\" She told me. \n\n\"If you talking about me taking your cherry we don't have to do that if you don't want to.\" I told her giving her a way out if she was that worried about it. \n\n\"No I want to do it, I've wanted to do it for a long time now. What I'm afraid of is giving up my control to you. I've never done that before and it scares me to be so vulnerable. I know you'll be gentle with me. \n\n\"You have always been a kind and considerate lover, always think about what I want and how you can please me. This time it'll be different, this time you'll be the one in control and you'll decide how fast we go. I just hope you can control that dominant side of you, seeing this is the first time I'm going to see it. I'm also worried that you'll like me too much in the submissive role and you won't like being submissive again.\"\n\nI just about laughed, but seeing how serious she was I held it back. \"Josie you don't have to worry about any of that, I love you. I love the relationship we have. I would never do anything to jeopardize our love. And as far as me being too aggressive, I'm not even sure I can do what you want me to do tonight. I know how much it could hurt you if I go to fast or to hard. The last thing I'd ever want to do is cause you pain.\" \n\nA smile came to her lips and she said. \"Now I know why I love you so much.\" We kissed after she told me this and it was one of those special kisses that we share from time to time. When our lips did finally part she told me. \"Shower and meet me in the small dinning room. I'll get dinner ready.\" \n\nIf that small confession I just made had helped her or not, I'm not sure, but she did seem to physically relax. We kissed once more then I went into the shower. It wasn't until I was in the shower that I realized that she had said that she would get dinner ready. I presumed she meant that she would put it on the table, because I knew that she couldn't cook worth squat. In the six months that I have know her, Josie never once tried to cook anything. She once told me if she was meant to cook then why were there so many restaurants. \n\nAfter my shower I found a black silk robe and a pair of black silk boxers waiting for me on the bed. At first I was thrilled to see the boxers, but once I had them on I felt uncomfortable. They didn't hold my package as tight as the panties did and over the last six months I really have become accustom to that feeling. \n\nOnce I was dressed I made my way to the small dinning room. This room was meant for intimate dinners between two people and no more then four. The room was now dark, lit only by two candles on the table and half a dozen more scattered around the room. There was a large window that looked out over the ocean that glittered in the light of the full moon. \n\nJosie was deep in thought as she stared at one of the candles on the table. Before she could break her concentration I covered the distance between us and took her head in my hands and bent over to kiss her. She jump with surprise but responded instantly to my kiss. \n\nJosie stood as we kissed, our arms embraced the other as our hands moved over each other. And still after six months together we both still felt that tingle when our bodies touched. Though we had gotten use to it by this time we still felt breathless when we end our kiss. \n\nJosie had me sit down then served me dinner. This felt extremely odd seeing I was the one that always served her before sitting down to eat myself. Josie told me that the meal was cook by the house hold cook before she was dismissed for the evening. \n\nDuring the dinner conversation Josie in formed me that two of the three envelops that she received from the customs official were invitations. One was from the American Ambassador inviting us to the Fourth of July celebration at the Embassy. The second was an invitation from the Governor of the local providence for dinner. The third was from the local orphanage thanking her for her latest gift. \n\nDinner consisted of fish, vegetables and rice. It wasn't an elaborate meal but it was sufficient for Josie and I. Josie and I are not big eaters, preferring to eat several small meals then one big one. \n\nOnce we had eaten our fill Josie put the left over food in a refrigerator that was built into the serving buffet and the dishes went on to a serving cart. When she was done I pulled her onto my lap where I kissed and caressed her. For Josie part she returned my kisses but her hands never strayed from my neck. \n\nI realized that if we were going to move to the bedroom that I was the one that was going to have to make the first move. Josie was deep into her submissive role and quite content to have me make all the decisions. \n\nI wanted nothing more then to pick her up and carry her to the bedroom but I knew I didn't have the strength to carry her all the way. So instead I stood us up and after placing my arm around her we slowly walked to the bedroom. When we were outside the door to the bedroom I scooped her up and carried her across the threshold. This brought a smile to her face in fact she was beaming.\n\nInside the bedroom I put her down on her feet and kissed her once more as I pulled the belt that held her robe closed. When I released her lips I slowly removed her robe. I saw a slight blush come to her cheeks as I took in her beauty, as always she was magnificent. Under her robe she was wearing only a pair of white lace panties. \n\nHer breast though smaller then some would like, were perfectly shaped and they stood proud on her chest, there wasn't even the slightest hint of sag. Her nipples were hard little bullets sticking out and the areola's were dark brown almost chocolate in color. \n\nI couldn't stop myself as my hands reached out and took one breast in each hand. Josie made no move to stop me with the exception of closing her eyes when my hands surrounded them. When my thumbs slid past her nipples she merely sighed with contentment. \n\nI fondled Josie's breasts for a few moments before removing my own robe. My own aroused state was evident the second I open my robe. My cock was pushing out the pant leg of my boxers. There was also a large wet spot where the head of my cock was. \n\nWhen I looked at Josie I saw her smile and her tongue darted out and licked her ruby red lips. When she saw that I was looking at her she quickly composed herself and looked down at the floor, but that smile never left her lips. \n\nI pulled her to me once more and we kissed. When this kiss ended I very gently pushed on her shoulders. Josie took my signal and went to her knees. With out hesitation she rubbed her face over my cock.\n\nJosie rubbed her face over my silk covered cock for a minute or so then she started to kiss and mouth my cock. She even tried to suck the head through the boxers. When she had enough of that she looked up at me as if asking what should she do now. \n\n\"Take off my boxers.\" I told her \n\nJosie very slowly eased the boxers down my legs until I could step out of them. My cock was sticking straight out from my body pointing straight at Josie's face. I once more I saw her lick her lips before looking away. \n\nI grasped my shaft in my right hand and Josie's head in my left. Then I leaned forward and let the tip of my cock touch Josie's lips. She could have pulled away if she wanted to and I'm pretty sure she didn't want to, but she didn't open her mouth to take me in either. \n\n\"Kiss my cock Josie. Kiss it then take it in your mouth.\" I told her \n\nJosie's lips parted slightly as she kissed just the tip of my cock. Then her lips surrounded the head and I felt her tongue lick at the slit. That was as far as she would go so I pulled on her head ever so lightly pushing her mouth down on to my cock. \n\nJosie looked at me with a sight bit of fear in her eyes till she realized that I wasn't going to force too much into her mouth all at once. When I stopped just short of her throat she relaxed and sucked as she pulled back off my shaft. \n\nWe did this for a few minutes till I pulled my cock free of her mouth. I had enjoyed what we did but I much prefer it when the person sucking my cock wants to do it instead of doing it because I'm making them. I knelt down on one knee and kissed her.\n\n\"Did I do it ok? Did you enjoy me sucking your thing?\" She asked eagerly. I told her she did, a smile came to her face, but her eyes called me a liar. \n\nWe kissed again as we stood then I picked her up and carried her to the bed. I laid her down gently before lying down next to her. We kissed for a few minutes as our hands caressed each other's body. \n\nI next kissed her face, her eyes, cheeks and nose, then I moved to her ears and throat. I moved on down to her chest and lovely licked sucked and bit every inch of flesh I could find. I avoided her nipples as much as possible preferring to tease her. When I did pay attention to her nipples I did so teasingly first by licking the areola until I could feel the skin become bumpy. \n\nWhen my tongue caressed her rock hard nipple Josie squealed but cut it off quickly making it sounded more like a chirp. When I did finally suck on her nipple Josie backed arched off the bed cramming as much tit into my mouth as she could possibly get. She moaned then groaned before ending up squealing with delight. Her body trembled violently as if she was having a seizure.  \n\nI made love to her breasts for as long as I dared before moving down to her hard flat tummy. Josie's tummy was not a sensitive erogenous zone for her but she did like having me kiss and lick it. After leaving a trail of licks and kiss on her tummy I moved down to her legs bypassing the womanhood altogether. \n\nI know she expected me to lick her pussy next, but I decide to give her something she had never asked for. Leaving her soak and wet panties in place, I started to kiss and lick her legs. First down one thigh to the knee, then the other one. Then I moved down each leg till I reached her tiny feet. \n\nJosie had beautiful feet they were small, fitting neatly in my hand. I loved looking at her feet especial when she wears open toe heels. She never once asked me to kiss her feet, something I loved to do with other women I've been with. \n\nI first licked each foot on all sides then moved to her toes. Her toes I licked and nibbled on before taking each toe into my mouth and sucking it like a tiny cock. If Josie liked the treatment I couldn't say, but she did ooed and ahhed a lot during it. \n\nAfter her feet were properly worshiped I turn Josie over on to her tummy and kissed and licked my way back up her body till I was kissing and nibbling on the nape of her neck. This she really seem to enjoy for each time I nipped at her neck her bottom would come up and grind itself against my cock. \n\nI rested there a short time as Josie, now back on her back, and I kissed. She still had made no demands on me or offered any word of encouragement besides her squeals moans and groans. I could tell she was pleased with the way it was working out by the gleam in her eyes. \n\nAfter a short rest I kissed my way down her chest and tummy tenderly but quickly. Leaving little doubt where I was going and what I was going to do when I got there. When I pulled off Josie's wet lace panties my nose filled with her scent. The smell that rose off her crotch was almost more then I could handle. \n\nOnce her panties were off and out of the way I nestled myself between her thighs with her legs over my shoulders. I first started to lick the cream that coated her labia before sinking my tongue into her hole. The smell was addictive and her cream was the nectar of the gods. I don't know if a man can survive on just eating pussy cream. I knew I would like to give it a try, as long as it came from my sweet Josie. \n\nI licked out her hole of all her cream I could find. I know that a woman's clit is the most sensitive part of her, but I couldn't resist licking up all her cream first. When I couldn't find anymore cream, I went to work on her clit. Josie clit was standing hard and proud with it's gold ring glistening in the candle light. \n\nI first ran the flat of my tongue up her slit passed her clit. The roughness of my tongue on that sensitive organ had Josie squealing. I did that once more before I started batting her clit with the tip of my tongue. When I clamped down on it with my lips and sucked, Josie whole body seemed to vibrate as her legs stiffen up squeezing my head like a vise. No matter how hard she tried being the docile bride, her dominant side came out.\n\nI sucked hard driving her on to another orgasm then another till finally her legs released their grip on my head and fell open. This gave me the chance to once again to lick out her hole of her fragrant pussy cum. \n\nI knew what I wanted to do next and I was sure it was what Josie wanted next too. I just could decide how to go about doing it. Should I just push her legs forward, doubling her over, or should I flip her over onto her tummy once more. I figured I'd flip her over onto her tummy, which would be the most comfortable for Josie. \n\nOnce Josie had calm down some, I eased her over and went after those two firm globes of sweet tender flesh. I spread her legs as much as possible and then lay down with my face inches from my intended target. My hands went under her then around her waist till they each grabbed one firm cheek. \n\nI slid my tongue along her crack, which earned me a moan from Josie. On each pass up her ass split my tongue would go in a little deeper till finally my tongue touched her sweet hole. Through out this Josie was panting and moan, as her bottom would push up into my face trying to get my tongue deeper in her crack. When I finally did touch her sweet puckered ass hole Josie wailed with pleasure. Her bottom couldn't stop moving as my tongue ran circles around her anus. \n\nWhen I pierced her ass hole for the first time Josie body went completely stiff. For a second I thought I had done something wrong, but then a very quite moan that grew into a screech came out of her mouth. When I felt a gush of fluid splash on my arm I knew that she just had an orgasm.\n\nI continued to plunge my tongue into her hole till it grew tired. Then I kissed and nibbled on it for a few moments more. Knowing I was going to have to do what she wanted, I pulled my face from her lovely derriere. When I knelt up between her spread legs I felt Josie tense up. \n\nDuring my tongue's assault on her bottom Josie had pulled all the pillows on the bed close to her and now she hug them to her like a big teddy bear as she looked back at me. I smiled at her trying to reassure her. She smiled back put you could see her heart wasn't in it. \n\nI reached over to the nightstand for the bottle of anal lube that Josie must have put there. Josie watched my every movement as I poured a generous amount of lube on to her exposed anus. My next move surprised her as I slid my hard cock into her pussy. \n\nHer pussy was so hot I thought I would cum instantly, but surprisingly with the tingling I felt my orgasm subsided quickly. Once I was firmly embedded deep in her pussy my fingers went to work on her bottom. \n\nI slowly eased one finger into her hole, Josie moaned at this. When my finger was in up to the third knuckle. I started to rock my hips, thrusting my cock in and out of her pussy as I match the same rhythm with my finger. I did this for a few minutes until Josie seemed comfortable with it then I slid in a second finger. Josie seem to be getting onto this as her hips were moving back to meet my forward strokes. When I slide my third finger into her Josie didn't seem to notice Except for a slight moan. \n\nI knew that I needed to pull out of her pussy soon because I could already feel my cum starting to rise. I also knew that once I pulled out, she would know that I would next try to put my cock into her ass and that would make her tense up again. I slowly backed out of her by not going in as deep as I was on the previous stroke. This put more attention on her ass then on her pussy. By the time I was out of her, Josie was pushing up to meet my hand instead of back to meet my cock. \n\nThe next part was really going to be tricky getting my fingers out of her and my cock into her. I placed the head of my cock at the entrance to her ass hole as my finger continued to move in and out. When I pulled my fingers out, her hole remained open long enough for me to slide the head of my cock in without causing much pain. Josie had not realized what I was doing till she noticed the slight difference in girth. \n\nJosie stopped all movement as she took in this new feeling. I in turn pushed my cock in an inch or so, till I saw a slight grimace on her face, which caused me to pull out just slightly. I then started fucking her with an inch or two of my cock till Josie relaxed and started to move again. ",
        "Once she started to meet me on each thrust I started to feed more of my cock into her. Josie seem to be enjoying this as she moaned each time I pushed my cock into her and she would whimper each time I pulled out. It didn't take long before I was in as deep as I could go, as my hips met her ass cheeks. Still Josie offered no words of encouragement.\n\nOnce I was all the way in her I pulled back until just the head of my cock was in her then I coated my shaft with more lube and slid back in. I slowly started to fuck her ass going all the way in and all the way out. Josie was meeting me thrust for thrust with groans of what I hope was pleasure, on each in stroke. \n\nWhen I picked up speed Josie's moan became more squeaks then groans. When I reached around her and started playing with her clit those squeak came out as oh shits. When her body started vibrating and she started to lose the rhythm I knew she was on the edge of a big orgasm.\n\nI was close too, so close I could almost feel my cum starting to boil inside of me. When Josie started to cum her ass clamp down on my cock so hard I found it hard to move. I could also feel her ass trying to suck the cum right out of me. \n\n\"I'm going to cum Josie. I'm going to fill your bottom.\" I shouted to let her know, so her could stop me or have me pull out. \n\n\"Me too love, me too.\" She said. \n\nTaking this as sign that it was ok to cum I released my hold on my orgasm. Instantly I felt my balls pull up as cum race up the shaft and fired out the tip. Josie must have felt it splash into her, for as soon as my first load shot out of me she came as well. \n\nHer orgasm was much more violent then mine was. Her whole body shook and the noise that came out of her mouth sounded more like a lion then a person. Her head thrashed about before she collapsed on to the bed. I followed her down trying to keep myself in her and also because I was exhausted too. I turned at the last second so as not to fall on her. When I turned I took her with me so that I lay on my side with Josie in my arms. \n\nWe lay there panting for breath, as sweat pouring off our bodies. I held on to Josie for dear life. I wanted so badly to ask her if she enjoyed what we just did and if I had done a good job, but I knew that was one thing a woman hated the most. So I keep my silence and just told her I loved her. \n\nJosie said nothing at first I thought I had done something wrong till I realized that she had fallen asleep. I couldn't believe it at first till I realized what we had been through in the last few days. The last thing I remembered was my soften cock being expelled from her bottom just as I dosed off. \n\nPlease continue to the next part"
    ],
    "authorname": "Scribler",
    "tags": [
        "enjoy licking",
        "nikki voice",
        "cum josie",
        "legs josie",
        "nikki nick",
        "josie put",
        "kissed josie",
        "shown face",
        "bottom jill",
        "nick nikki"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/becoming-her-wife-ch-07"
}