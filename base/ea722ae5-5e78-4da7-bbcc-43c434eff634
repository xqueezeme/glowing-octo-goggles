{
    "title": "Naked Punishment",
    "pages": [
        "Author note: This is a slow-burn romance also containing exhibitionism and humiliation. All characters are older than 18 years old.\n\n1 The Good Girl\n\nMandy packed her bags while her Mom was still at work.\n\nShe was alone and naked. She loved walking around the house without clothes and fantasized about her neighbors seeing her through her window.\n\nAt this moment, she never imagined these fantasies would become very real, taking her beyond her wildest dreams!\n\nAnd, she never imagined they would change her life.\n\n--\n\n\"What will it be like to live with James?\" she thought. \"Has he thought of me as much as I have of him?\"\n\n\"Mandy, you are a stupid girl!\" she reprimanded herself. \"Why would James think of you other than Jenny's daughter? You are so stupid Mandy!! He only knew you when he lived with me and Mom. After Dad. He probably never thought of you after that.\"\n\nHer Mom and her ex-boyfriend James remained friends after their breakup. He had been a friend from college and became intimate with Mom after Dad died. They separated on good terms and remained in contact through the years, despite being on opposite sides of the country.\n\n---\n\nMandy was just about to hide her vibrating dildo in her suitcase. Could this be seen in the airport scan? Probably. Good thing she was checking the luggage. It would be embarrassing if the airport control officer saw the vibrator with her standing right there.\n\nThe vibrator was a new purchase. She had bought it online and had to make sure that her mother didn't find out about it. Now she turned it on and rubbed it down her tummy. She imagined him taking her. She imagined it entering her.\n\n\"Please, James, put it in me,\" she whispered in a low voice and closed her eyes. \"I need it so bad.\"\n\nSince her Mom mentioned she spoke to him and she could stay with him, she imagined them having an affair. She remembered how handsome he was and she began to have fantasies.\n\nThe dildo rubbed against her moist lips. She pushed it slowly back and forth as it tickled her with vibrations. Then, she suddenly shifted its angle with her wrist and pushed with force.\n\nIt entered her hard.\n\n\"Uhh,\" she gasped.\n\nShe slipped it out slowly and then plunged it in further with all her force, trying to make it hurt as if punishing herself.\n\n\"That's it, please cum inside me,\" she whimpered.\n\nHer imagination made her recurring fantasy come to life. He was behind her. His strong hands gripped her ultra skinny body, grasping her pelvis bone, moving her back and forth with a force and constant rhythm.\n\n\"Oh, please make me cum,\" she pleaded as her body doubled over and she needed to gain her balance by holding onto her bedpost.\n\n--\n\n\"Mandy, are you there?\" she heard her mother down at the foot of the stairs.\n\nJust as she was about to reach orgasm, her mother had entered the front door and started ascending the stairs.\n\n\"Yes,\" she said flustered. \"I'm just packing.\"\n\nShe quickly hid the vibrator under her clothing in the open suitcase and ran to the other side of the room where her nightgown was thrown on the floor. She heard her mother's footsteps arriving at the top of the stairs. In a few seconds, she would be in the room. What would she do if she saw her completely naked? She pulled the nighty over her head and tried to act as natural as possible. At that moment, her mother entered the room. It was a close call.\n\n\"Hi, Honey!\"\n\n\"Hi Mom. What are you doing at home?\"\n\n\"I thought I would leave the office and help you to pack. Besides, I'm not going to see you for a while.\"\n\nMandy smiled.\n\n\"Are you ok, Honey? You look flushed. Is there something wrong? Are you becoming emotional?\"\n\n\"No, no. I was just bending down and moving too quickly. Maybe it made me a bit dizzy.\"\n\n\"What a lame explanation,\" she thought.\n\nBut she couldn't think of anything else. Her mother didn't seem to suspect anything. She never had any need to question Mandy. Mandy was always honest about \"most\" things. Their relationship had been strong, especially ever since her father died many years earlier.\n\n--\n\n2. Arrival of the Familiar Guest\n\nJames listened to his favorite piano piece, the Chaconne (partita BMW 1004) by Bach for the left hand when the doorbell rang. He had been expecting it. Soon he thought his peaceful solitary life would be interrupted by Jenny's daughter who would come to stay for a while until she became established. He hadn't seen her in person for more than six years.\n\n\"Now she is 22 years old,\" he thought. \"Christ! Has it been so long?\"\n\nLeroy jumped off the couch and barked with the sound of the doorbell and his tail wagged, anticipating any type of new excitement and experience.\n\n\"How time has flown by,\" he thought as he walked toward the front door of his condo. She had been a good kid back when he lived with her and her Mom.\n\n--\n\nJames had been alone since his girlfriend left him for a guy at work. It had been a year and a half. A relationship that lasted three years ended with a handwritten note, consisting of two short sentences; the first phrase stating bluntly, \"I no longer love you.\"\n\nNow, he didn't want to be in love ever again. Since Bella left him.. \"Who needs the hassle?\" and \"I'm better this way!\" he convinced himself. The truth was, however, he was deeply hurt.\n\n--\n\nHe pushed these recurrent thoughts out of his mind and focused on the music.\n\nBach wrote the Chaconne, perhaps the most emotional and sublime work in Western music, just after his wife died. Written originally as the second partita for solo violin, many great composers adapted this piece to the piano, the most famous versions by Busoni and later by Brahms for left-hand.\n\nAs James listened to the recording for the thousandth time, his mind became lost in the connected harmonies; the tumultuous sadness of the first movement that suddenly gave rise to an uplifted middle section offering hope and continuity from the rubble of despair. It is a testament to the supreme genius of Bach, that through his music created so long ago that the message without words continues to reverberate -- that in sorrow, there must still be hope and renewal.\n\n--\n\nHe had promised Jenny that Mandy could live with him until she found a job and another place to live. However, James also thought that this may not be a place for a young person. Condo complexes like \"Las Playas\" were not designed with young people in mind. There are many older retired residents and all kinds of restrictions and rules.\n\nNo, this was an exclusive condo community that relished in the \"peace and quiet\" that only \"old people\" could enjoy. Scattered amongst the old hags were a few well-off professionals, like James, but children were banished from this kingdom -- except the perfunctory grand-children, that by imperial decree could visit on sparingly few occasions.\n\n--\n\n\"Well Jenny,\" James said to his ex-girlfriend a month previously on the telephone, \"You know I would love to have Mandy here, but you know how it is here with kids.\"\n\n\"James,\" she responded as if to bring him back to reality. \"Mandy is not a child anymore. She's 22 years old and very responsible.\"\n\n\"Yeah, I know, but maybe she might feel quite restricted here,\" he tried to invent some other excuse.\n\n\"You know how she absolutely adores you, James,\" his sister reasoned. \"She has never stopped talking about you since you left six years ago. You know she thinks the world of you and loves being with you?\"\n\n\"Yes, I know,\" he responded now without further argument. This last part had disarmed him completely. \"OK, but if she doesn't like it here, I can find somewhere else for her to stay.\"\n\n\"Thanks, James. I appreciate it and Mandy does too. It is really helping me out because it would be too complicated to bring her with me to Dubai now that I had to sell our place. Also, I am sure you will be a big help until she decides what to do in life. She doesn't listen to me much these days.\"\n\n\"Mmm,\" he responded.\n\n\"Besides, you need this as much as she does. You are very alone after Bella. She'll be a good companion. You'll see.\"\n\n--\n\nThe image he had in his head of Mandy was that of a boyish almost androgynous teen. Her short brown hair, flat chest, and petite body appeared as if she never would be a woman. But she was the warmest person that he ever knew. And for a kid, she was very intelligent and mature. She must be very different now. All these thoughts streamed through his mind in the split seconds it took to walk to the door and open it.\n\n\"Hi James,\" Mandy said, smiling and pleased to see him as he swung open the door.\n\nJames was taken aback. That androgynous boyish teen had turned into a young beautiful woman. He had seen photos of her that Jenny sent, but nothing was like seeing her in person.\n\n\"Mandy! Come in,\" he responded happily. \"It is so good to see you. Wow, have you grown up!\"\n\nMandy was so happy to see him that she rushed into the apartment and gave him a big hug, raising up on her tip-toes to put her arms around his neck and large broad shoulders. She stayed like this for a long moment. James felt her soft face against his. She smelled fresh and her touch was warm.\n\nShe wore her brown hair cut just below her shoulders and it smelled like fresh coconut. In this brief moment, a million thoughts coalesced through his mind, with the overwhelming feeling that he had missed the touch of a female. And, he had forgotten how much he truly had missed Mandy, even if when he knew her she was quite young.\n\nLeroy couldn't contain his excitement and moved from side to side. While he had grown into a full-grown labrador over the past year and a half, he was still essentially a puppy.\n\nMandy was dressed in jeans and a simple white blouse. She wore a choker collar around her thin neck that made her look like an older version of Natalie Portman in L\u00e9on the Professional. She had a leather backpack and a large red hard-shell suitcase.\n\n\"Thanks,\" she said as she started to wheel the suitcase in.\n\nLeroy attempted to jump on her.\n\n\"Don't mind him,\" James said, referring to Leroy. \"He won't hurt you. He just loves to play.\"\n\n\"Oh, I love dogs,\" she said, petting his head. \"He is so cute. I just love white Labs!\"\n\nShe patted his head and rubbed his ears as he jumped up on her.\n\n\"Hi, boy!\"\n\n\"Leroy, stop jumping. You are going to scare Mandy.\"\n\n\"No, he's ok.\"\n\nLeroy moved around nervously and tried to jump up on her in excitement many times.\n\n\"Leroy!\" James yelled, pulling him away.\n\n\"He's ok. Poor boy,\" Mandy said giggling.\n\n\"Here. Let me help you with that,\" he quickly reached for the luggage to help her enter the foyer.\n\n\"How was your trip?\" he asked as he grabbed the bag.\n\nMandy tried to respond but was still occupied petting Leroy as the dog wagged his tail furiously and moaned with excitement. He was still young enough that he didn't realize his strength and Mandy did all she could to prevent him from pushing her over and making her fall down.\n\n\"It was good.\"\n\n\"I had expected you to call so that I could get you at the station.\"\n\n\"That's ok, it was easy enough to get an Uber.\"\n\n\"I will bring your bag to the guest room. I'll be right back.\"\n\nJames quickly disappeared to the back room with the luggage. All the while, he thought about how beautiful Mandy had become. Mandy had turned into one of the hottest girls he has ever seen. She was so pretty, that he suddenly became nervous talking to her.\n\n\"Damn, why does she have to be Jenny's daughter?'' he scorned.\n\nHe realized he was immediately attracted to her. He imagined her now in a sexual way.\n\n\"What are you thinking?\" he said to himself as he scurried off to the guest room to collect his thoughts. \"It's Jenny's daughter! It would be so awkward, for God's sake. So stop thinking about her like that!\"\n\n--\n\n3. Recalling old times\n\nThey talked for a while on the sofa about Mandy's college days and about the last time that they had been together. Back when he lived on the East coast with her and her Mom.\n\n\"We had some good times, didn't we? Do you remember when you took me to the zoo?\"\n\nHe thinks back and can't seem to reconcile that this beautiful girl sitting on his couch is the same person as that androgynous boyish kid that he took to the zoo. For a moment, he can see that kid in her, but it is difficult to maintain the similarity.\n\nHer face was beaming with energy as they talked about that trip.\n\n\"Do you remember when we held the parrots in our hands?\"\n\n\"Yeah!\" he responded.\n\n\"I couldn't believe how their claws felt like human hands!\"\n\nThey laughed and talked about other anecdotes of their trips and the different things they did together. Her mom was always busy with work on the weekends, so James often took her places to get her out of the house.\n\n\"James, do you remember the Australia outdoor exhibit and the kangaroos?\n\n\"How could I forget? They were a bit sexed-crazed!\"\n\n\"Haha, I remember you trying to explain to me what they were doing! Poor James! I can just remember you trying to explain away what those animals were doing!\"\n\n--\n\nFor a moment, after he said that his mind began to wander. He thought that everything about Mandy seems to bubble sex. It is not that she is slutty, quite the opposite. It is just her very nature. He remembered the description of Bijou in a story by Ana\u00efs Nin. She wrote, \"Her mouth was not meant for speaking, to eat.... it seemed more like a prelude to a kiss.\"\n\nThis was Mandy. The soft blush of her white skin, the shape of her mouth, her thin and delicate frame. It hat the effect that she had been formed in a spring garden this morning for the express purpose of personifying sex and sensuality.\n\n--\n\n4. Settling in\n\nHe made dinner while she was in her room unpacking.\n\nWhile he set the table, Mandy had been converted in his mind into a beautiful long-lost girlfriend. Those three years with Bella seemed to vanish; relegated to an unimportant interlude -- a cosmic blip that no longer mattered. Bella didn't matter anymore, but \"of course, sex with Bella was incredible,\" he thought parenthetically.\n\nHe set the small table in his kitchen for two with a candle in the center.\n\n\"What am I doing?\" he thought. \"She's Jenny's daughter, not my girlfriend.\"\n\nYeah, that might be true. But, Mandy had affected him.\n\nHe looked into the fridge for something to drink on the table. There was a bottle of Chardonnay. \"Why not?\"\n\nHe pulled out the bottle, opened it, and placed it on the table. He then fetched a few wine glasses.\n\n--\n\nThey talked about the latest films and series. Mandy described the fact that she wanted to be a writer. It was her biggest dream.\n\n\"Wow, that is great that you like writing. What do you write? Fiction?\".\n\n\"Mmm. A bit of everything. But, I just finished my third book. My first was a children's novel, but the second two were more serious literary novels.\"\n\n\"I would love to read them,\" he responded, generally interested. \"Do you think this is what you want to do for a living?\"\n\n\"Not sure,\" she said, sipping her wine. \"I don't really know. That's why I didn't want to go to college right away,\" she paused looking into her glass. \"Besides, I have a few books and stories that I want to write this year.\"\n\n\"That's great! Besides, you are young and still have a lot of time to explore.\"\n\nThis was not a moment to start to lecture her as her mother suggested. There was a lot of time for them to breach this subject. Anyway, what opinion could he possibly have? He still is getting to know her once again.\n\n\"Can I tell you a secret?\"\n\n\"Mandy, you can tell me anything!\"\n\n\"Please, don't mention this to my Mom.\"\n\n\"I wouldn't mention anything we talk about to your Mom without you wanting it.\"\n\nShe sipped another glass of wine to try and muster the courage.\n\n\"Well, it is nothing. In reality, it is no big deal and rather silly and maybe you will think I am just a stupid girl,\" she paused. \"I have been writing erotic stories and posting them on a sex site.\"\n\n\"Really? That's amazing. And no, I don't think you are a stupid girl. Quite the opposite.\"\n\nShe blushed and looked down.\n\n\"Yeah. Well, it is kind of funny! I just write about some of my silly sexual fantasies and put them in the context of stories.\"\n\nJames' face was one of surprise. He never would have imagined that Mandy would write sex scenes or even have such fantasies. She seemed so...well, proper.\n\n\"How did you start?\"\n\n\"I don't know. I was looking for some way to post stories and get people to read them. People like sex, so people read these. Previously, I posted a few of my serious fiction on a literature site, but practically nobody read them. It was a bit disappointing. Then, I found this site that has erotic literature. Now, I get lots of feedback. To be honest, it is kind of fun!\"\n\nShe sipped some wine and continued.\n\n\"Some people tell me how hot my stories are. I kind of like it,\" she said, trying to hide her true enthusiasm. \"And,\" she added, \"I get to write about me and my antics in the context of a story. Some are true, but most are exaggerated! You know? like smoke and mirrors.\"\n\n\"What do you write about, if you don't mind me asking?\" he asked almost hesitantly.\n\nMandy blushed, giggling nervously. Perhaps, the wine had helped her be more honest.\n\n\"Mostly about girls -- well, really mostly about me -- that like to expose themselves. Do you know? exhibitionists,\" she laughed. \"And have sex, of course!\"\n\nHe laughed nervously, almost incredulously, along with her.\n\n\"Are you serious? Uff... Sounds highly erotic and sexy. Would you let me read them?\"\n\n\"Hahaha... maybe after I drink a bit more wine!\"\n\nA brief moment passed.\n\n\"I think the idea of exhibitionism is super erotic,\" he said after a silence.\n\n\"Mee too. That's why I write about it,\" she paused with a mischievous grin. \"Amongst 'other' things, as well.\"\n\n\"Sounds mysterious.\"\n\n\"Ha-ha,\" she giggled. \"No, not anything strange or perverted. Just a bit of submission mixed in here and there as well.\"\n\nJames' cock twitched in his pants. That was his hot spot. That is what secretly turned him on. \"I can't believe she just said that,\" he thought to himself. \"It is so hot!\"\n\nHe finished the glass of wine, took the bottle, and poured more into her glass and then his. As he did this, he thought about how he likes walking around the house naked and with his hard cock pointing upwards. He could never tell her this, but his fantasy is that someone would look through the window and see his hard cock.\n\nHe was amazed that Mandy must also fantasize about such things. This put all types of his thoughts into motion.\n\n---\n\nMandy only ate a few leaves of salad and pushed the rest of the food from one side of the plate to the other. Perhaps that is why she is so skinny, James thought.\n\n\"Don't you want some rice?\"\n\n\"No, I'm good. I ate a big lunch,\" she answered, telling only a half-truth to avoid further scrutiny. She simply was never hungry. Not knowing what she would do with her life made her nervous. Also, a breakup with her last boyfriend had produced self-doubt and insecurity. This had the effect of eating less and less.\n\nBut, she sipped at the wine during their dinner conversation. With each sip, she had become more lightheaded and a little bit giddy. At least it relaxed her and she felt more at ease than before.\n\nShe thought about how happy she was to be here with James. She hoped that James was as pleased as she was.\n\n--\n\n\"What type of food do you like? Do you like Japanese?\"\n\nHe seemed to touch the magic word, and her face beamed with delight. \"I love Japanese food!\"\n\n\"Great. Me too,\" which seemed obvious given his Japanese descent. \"There is a restaurant in town. It is the best sushi that I know. Maybe someday we can go?\"\n\n\"Oh, can we go tomorrow night? Please! That would be so cool. I would love that!\"",
        "\"Sure. Tomorrow, then! It's a date,\" he smiled and was genuinely pleased.\n\nShe continued to pick at the leaves of salad on her plate but left most untouched while they changed the subject to other topics. Mandy was animated telling him about her friends in the city and their typical outings in the Village and Soho. James could envision Mandy in that eclectic and artsy environment that suits her demeanor. As she spoke, he thought of how much he loved her personality.\n\n--\n\n5. Showing more than she should. Maybe?\n\nAfter dinner, James suggested that if she wanted, she could watch some TV while he finished some work. He took out some papers that he had to review from his briefcase and sat on the couch.\n\n\"I think I will just put on my nighty,\" she said going to her room. \"Do you mind, James?\"\n\n\"No, not at all. Feel free to get comfortable. This is your house now.\"\n\nLeroy followed closely behind Mandy as she went to her room. Within just a few hours, it seemed that Leroy had abandoned James for this newer, more beautiful companion.\n\nEven though James didn't normally watch TV, he turned it on and left it on a channel that he thought she might like.\n\nWhen Mandy emerged to the den, she was wearing a very thin nightly pajama. It was so thin that it was nearly transparent. James looked up. With the lamp behind her, as she moved, James realized that he could just make out her naked body underneath the fabric. She didn't even have panties.\n\n\"Hi, again. Are you sure the TV won't bother you? If you need to work, I can turn it off.\"\n\n\"No, not at all,\" he said as he realized that he had been looking at her body. \"It is fine really.\"\n\nShe sat on the floor. Leroy followed her wagging his tail. She grabbed the TV remote and began surfing through stations. After finding something she liked, she changed her position so that she was lying down on her tummy on the carpet a couple of meters in front of James. Leroy licked her face and wagged his tail.\n\nJames remembered when he lived with them, that would watch TV like this six years ago. They would watch the TV together exactly like this. James would be on the couch and Mandy liked to lie on the floor. It was like time had been returned to those moments. But now Mandy was a young woman and had the body of a young woman, not a young girl, even if she was extremely skinny.\n\nShe shifted her position so that her legs were bent up moving back and forth. This had the effect of separating her legs slightly. Her bum was still covered with her thin nighty, but the fabric fell between her legs. With her legs swinging in the air.\n\nJames did all he could not look at her with erotic thoughts as she was lying right in front of him. He turned back to the paperwork that he had on his lap, then gazed at her, then again at his paperwork.\n\nIt was helpless. How could he concentrate with this amazing 22-year-old girl lying on the floor in front of him practically nude? Each time her legs moved back and forth, swinging in mid-air, he hoped the thin fabric would move so that he could get a peek of her naked pussy.\n\n\"James, pull yourself together,\" he scolded himself. \"You shouldn't be looking at her like this! It's Jenny's daughter, for Christ's sake! If Jenny knew I was thinking of her daughter like this she would kill me.\"\n\nBut, Leroy continued to nudge her neck and wag his tail to play with her. He seemed to have forgotten all about James and was now focused on this new younger and more beautiful companion. She giggled as she pushed his muzzle away as the dog tickled her neck.\n\n\"Stop that, Leroy,\" she said, pushing him away playfully and giggling.\n\nThis only encouraged Leroy more. Now he walked around her, temporarily blocking her view of the television.\n\n\"Leroy, stop!! You're not letting me watch TV.\"\n\nShe pushed him away so that he went to the other side of her. Her legs continued to swing back and forth and Leroy invented a game and tried to catch her foot as it swung back and forth. Not only was she startled, but the dog's wet nose touched her foot. It was ticklish and made her laugh as she reacted to his touch.\n\nMandy turned quickly to push Leroy away but in the process, her nighty rode up her bum and exposed her naked pussy.\n\n\"Bad boy!\" James said, but still staring at Mandy's nakedness.\n\nAt that split second when James spoke, Mandy looked up at her James slightly embarrassed, realizing that he had inadvertently seen her naked bum and probably her pussy. She quickly covered herself and then turned around to her television show.\n\n\"I am sorry, James,\" she said. \"I hope I am not interrupting your work!\"\n\n\"No, don't worry.\"\n\nAfter this incident, James tried to concentrate, but he couldn't get the image of Mandy's naked pussy out of his mind. Even though this was Jenny's daughter, he couldn't deny that his cock was hard and he couldn't keep his eyes off of her.\n\n--\n\n6. Bedtime for Mandy\n\n\"Good night, James,\" Mandy said as she closed the door to the guest room, which was now her room again. \"Thanks for letting me stay here with you.\"\n\n\"Good night, Mandy. No problem. I'm glad that you are here. See you in the morning.\"\n\nJames also wanted to retire to bed. But, it was the first time this evening that he really thought about the busy day at work he had ahead of him. With all the distractions of Mandy, he hadn't finished the report for the morning meeting. He had no choice but to sit at the kitchen table and work.\n\nAfter a couple of hours, he had finally finished his work and went to bed, leaving his door slightly open so that Leroy could come and go as he normally does during the night. While he was lying there, he began to imagine Mandy laying on the floor. He thought about the thin fabric that revealed her slim nude body underneath. It was a light blue and he could see her hard nipples with her small deep brown areolas that were the size of a quarter.\n\nHe recalled his brief moment when he saw her pussy. It was burned into his mind and he was surprised that she was practically hairless. \"Does she shave there or did she have it permanently removed?\" he thought. \"Or is she just like that?\"\n\nHis cock became immediately hard again. He slipped his hands under the covers and touched himself. As he was imagining her, he heard what seemed to be moaning.\n\nHe stopped his own movements so that he could listen more intensely.\n\nHe heard it again. Then again. This time, the low moan was punctuated by a gasp.\n\n\"My God. Mandy is masturbating\", he whispered.\n\nHe began to stroke himself as he imagined how she was pleasuring herself. In any other situation, he would have become completely naked, but with her in the house and with his door open, he slipped his cock out of his boxer shorts. The moans continued and he stroked harder. Then for a time, it seemed that the moans had stopped. He continued to stroke his cock.\n\n---\n\n\"James?\" a soft voice said from the entrance of his door.\n\nHe opened his eyes and saw Mandy in her thin nightgown at the entrance to his darkroom. The backlight behind her that spilled out of her room allowed him to see the contours of her naked body underneath her nighty.\n\n\"Mandy? What's wrong? Are you alright?\" James responded concerned and surprised.\n\n\"Oh yes. Sorry. I am sorry to bother you or wake you,\" she said apologetically.\n\nJames still had his hand wrapped around his cock under the covers. It was a good thing that it was dark so he was sure she didn't realize that.\n\n\"It's just, well, kind of silly, but I was having a nightmare.... And, well, I was wondering if I could make something hot in the kitchen like tea?\"\n\n\"Of course,\" he said softly. \"I'll get up and be with you.\"\n\n\"Oh, no. You don't have to. Really. I can do it.\"\n\n\"It's no problem. I don't mind.\"\n\nShe continued to apologize profusely as they both walked towards the kitchen. James put the low light on and could see that Mandy's face was completely flush. He began to heat some milk on the stove.\n\nMandy sat at the table and pushed her hair behind her delicate ears. James looked at her and could only admire how beautiful she was. While he prepared her hot milk behind her, she lazily flipped through an Art Gallery magazine that was on the table.\n\nAs she sat at the table sipping her hot milk, James told her some stories of when he was younger and the bad dreams he often had. His voice was soft and soothing. For good or bad, his stories and warm tea made her drowsy and she suddenly had an overwhelming desire to sleep. James thought that perhaps the afterglow from her recent orgasm also contributed to the onset of her sleepiness.\n\nJames took her hand and led her to the guest room.\n\n\"Good night, James,\" she said again. \"And thank you.\"\n\nHer smile made him melt as she closed the door and she gave a cute wave with her delicate hand.\n\n--\n\n7. Sights in the Early Morning\n\nThe next morning James had finished his morning ritual of a shower, shave, and lavatory. When he emerged from the bathroom to make breakfast, Mandy's bedroom door was slightly ajar. Perhaps she had awoken when he was in the shower but went back to the bed.\n\nHe peeked into the room through the crack of the door to see if she was still sleeping. She was there on the bed sleeping on her tummy with her nighty ridden up around her waist revealing her bare bum and between her legs. The quilt was bunched up so it partially covered her pussy. As he watched, she suddenly moved, pushing the quilt down so that it fell off the bed, then bent one of her legs upward to her chest and shifted on her side, which had the effect of fully opening her bum and fully revealing her hairless pussy. James just stared at her and was filled with desire.\n\n\"If she wasn't Jenny's daughter!\" he whispers to himself as he finally walks towards the kitchen. \"But that would be a huge problem!! Anyway, what interest would this girl have in me.\"\n\n----\n\nAs he was making breakfast, Mandy suddenly appeared in the kitchen. She looked sleepy and her hair was disheveled.\n\n\"Morning,\" she said half asleep.\n\n\"Good morning. Why did you wake up? You could stay in bed. It's so early.\"\n\nShe sat in the chair opposite him.\n\n\"Do you want a coffee and some breakfast?\"\n\nShe shook her head. \"I'm good.\"\n\n\"OK, when you are more awake, feel free to make whatever you want.\"\n\n\"Thanks.\"\n\n--\n\n8. Mandy and Her Hair Pulled Up\n\nJames finished getting dressed and returned to the kitchen. Mandy was still sitting at the table, drinking orange juice from a large glass but without anything to eat. Even though she was still dressed in her nighty, the impression she made on James was quite different from even moments before.\n\nAfter a minute he realized it was because she had her hair pulled up, revealing her ears and the back of her neck. Her small well-shaped pink ears gave the impression that they had been made only moments ago. It was the first time that he had seen her with her hair up and it seemed a profoundly more intimate moment than they ever had.\n\nJust then, the morning sun entered the kitchen and a ray of light fell across Mandy. With her thin nightgown, the sunlight appeared to make it completely transparent revealing her dark hardened nipples. She did not seem to notice and James tried with all his effort to look away from her breasts but to no avail.\n\n\"I have to go now, Mandy. You should be alright here. If you need anything, just call my cell phone, OK?\"\n\n\"Uh-hum. Thanks, James.\"\n\n\"Oh, I almost forgot,\" he continued. \"The pool key is here. It's open after 10 am. And well, there are the usual rules... You know! The neighbors are very picky! There are rules for this and rules for that. But, anyway, I am sure you won't have any problems.\"\n\n9. Mandy's Morning Alone\n\nWhen James had left, Mandy figured she would take a shower and then get ready to go to the pool. She looked down at her thin delicate and bony arms. There was only the hint of blonde hair. \"I am so white! I really need a tan,\" she thought.\n\nShe went to her room and removed her nighty to go to the bathroom. Just then, she saw her image in the mirror. She went over and analyzed herself for a moment, looking at her small breasts and thin figure.\n\n\"One is never fully happy with their body,\" she whispered. \"A little more here, a little less there. Who cares?\"\n\nShe thought about the previous night and her masturbation session with the dildo. Perhaps it was the thrill of almost getting caught or when she realized that she was moaning so loud to her orgasm, but she immediately became horny again. She felt the familiar tingle between her legs and her nipples became hard.\n\nThat's it. It was the idea of risk. It was the thrill that James was in the next room and she was there masturbating. Imagine if he walked into her room and he saw her rubbing her pussy.\n\nWith this thought, she pushed a finger between her legs and between her lips.\n\n\"How is it possible? I'm already wet.\"\n\nIt was the familiar thoughts she always had. She almost wanted to be seen and be caught. Here, so many neighbors would be able to see her naked body. Much more than her house back home.\n\n\"What if?\"\n\n----\n\n10. A Courtyard, Some Games, and Something to Show\n\nThe living room of Jame's apartment had a large sliding glass door that went out onto a terrace that overlooked the pool area and the courtyard. There were many apartments in the complex that also had balconies overlooking the courtyard.\n\nShe walked into the living room naked. A unit of the apartment buildings could have a view inside so she would need to be careful. Perhaps, she thought, with so much sun outside reflecting off the windows, it would be hard to see inside the apartment\n\nShe plopped down into the couch.\n\nLeroy came over to her wagging his tail. He tried to jump on her again to play. He was still such a puppy. She pushed him away.\n\n\"Leroy, be a good boy,\" she said. \"Don't you see, you are not a puppy anymore!\" and she laughed.\n\nShe began to rub herself.\n\nOnce she had become so horny, she lost logical rationality. She wanted to be seen. She never realized that she was an exhibitionist. But, the idea was turning her on.\n\nFirst, she just went close to the sliding glass door for only a split second and then retreated inside the room. She did this several times, looking out at the other apartments to see if anybody could be watching her.\n\nEach time she became bolder.\n\nFinally, she became even bolder and opened the sliding glass door. Now any possible reflection of the glass that would shield her naked body was gone. If somebody were to look at the apartment by chance, they would see her completely naked.\n\nAt first, she just stood there and then retreated once again.\n\nEach time she retreated into the apartment she rubbed herself. Leroy liked the game too. He wagged his tail and seemed to be having a grand time. He ran back and forth with her as well as if he were chasing after a ball.\n\n\"C'mon boy!\" she would cox him on. \"You love playing, don't you?\"\n\nBut, Mandy was getting so turned on from showing her naked body in front of the window. She wondered what it would be like if one of the neighbors saw her completely naked.\n\n----\n\n\"Go out on the patio,\" her inner voice commanded her.\n\nThe idea was crazy. If she walked out completely onto the patio, nearly 50 or 60 apartments had a view from the courtyard and the pool area. The chances of her being seen would increase considerably.\n\n\"That's crazy! I can't do that.\"\n\n\"Yes, you can! And you will. You know that you are a horny slut and this is turning you on!\"\n\nShe struggled with her sex-charged alter-ego. There was no rationale behind this. She had never exposed herself like this before. But, she couldn't deny, she was excited by being seen.\n\nShe thought about how she had blatantly shown her body to James. It was so hot.\n\n\"No, it was by accident that her nighty was so thin,\" she said.\n\n\"It was not an accident that your pussy was open and visible with your bedroom door open!\" her alter-ego chiding her \"good side\".\n\n\"That's not true!\"\n\n\"Yes it is and you know it. You are a slut. You loved that James saw your pussy. Now, go out on the patio. Now!\"\n\nShe mustered all the courage she could and walked through the sliding glass door and out onto the terrace. She acted to be doing something natural like looking at the plants and looking out onto the pool. She tried to carry out these mundane tasks without being conscious that she was completely naked.\n\nThe truth was that her pussy was leaking from her excitement. She moved from one side to another.\n\nWhile she was acting to take care of some plants on the balcony, with her legs slightly parted and on tip-toes, Leroy moved around furiously wagging his tail and nudging her with his muzzle so that she would play with him.\n\n\"Leroy, stop it!\" she reprimanded but giggled at the feeling of his wet nose on her leg. \"You have to be a good boy, or you will stay in the apartment!\" she said pushing him away and then returning to the plants.\n\nShe never exposed herself like this before. It was as if she discovered the most exhilarating experience of her life. Just the thrill that maybe somebody is seeing her naked made her more excited. She imagined one of the neighbors watching her through their windows. She was normally very shy and reserved. Now, it is as if she were having a sexual awakening.\n\nTo act naturally, she decided to water the plants.\n\n--\n\nShe went back into the apartment and the kitchen for some water.\n\n\"Come on boy, let's go and get some water for these plants,\" she said to Leroy enthusiastically.\n\nHer small firm breasts bounced from side to side as she skipped into the kitchen, while Leroy followed quickly behind to not miss a beat.\n\nThey returned to the terrace. Mandy was ever conscious of the fact that she was completely naked. Nonetheless, this time, she made all attempts not to look out to see if anybody might be watching her. She imagined that someone might be there and this excited her even more. For all she knew, the next-door neighbor only a few meters away could be looking right at her.\n\nShe watered the plants that were on the terrace balcony, while Leroy continued to walk around her wagging his tail with excitement for the next part of their new game.\n\nEven though it was still just beginning mid-morning, the sun was already starting to become hot. She decided to sunbathe there in the nude. She returned inside to find some sunscreen lotion.\n\nThis time, she would have to make sure that nobody was looking directly at her. With the metal bars of the balcony, she would be exposed.\n\nShe sat in the chair. Originally, she thought of moving it so that it only faced the side. That way even if someone was watching, they wouldn't see between her legs while sitting in the chair. Leroy sat in the shade next to her.\n\nThen she became even more excited thinking of exposing herself more. She moved the lounge chair so that it was closer to the metal rails of the balcony. It also exposed her nakedness to the entire neighborhood.\n\nThe risk only excited her more. She sat there a few moments rubbing sunscreen lotion on her tummy, her bare breasts, and the delicate white skin of her nearly hairless mound.\n\n\"Mandy, you are turning into such a slut,\" she whispered. \"But, now you have to sit here at least for a few minutes. You deserve to get caught.\"\n\nShe closed her eyes and let the sun beam down on her. Coupled with the fact that the warm sun felt so good against her skin and she was quite tired from not sleeping much and waking up so early, she dozed off to sleep. A few minutes turned into a half-hour.\n\nShe awoke to the sound of people working in the pool area. It was then that she realized that she had fallen asleep completely naked and sitting in the chair facing the pool area and all the other apartments. If she stood up now to enter the apartment, the workers would surely see her naked body. So she decided to wait until they left.",
        "She stayed with her legs closed and her hands covering her breasts for another fifteen minutes. Finally, when the coast was apparently clear, she rapidly stood up and went inside.\n\n--\n\n\"I can't believe I did that!\" she reprimanded herself as she entered her room.\n\nJust thinking of the fact that she was sleeping in a chair facing the entire neighborhood made her so horny.\n\n\"What if my legs opened while I was sleeping?\"\n\nShe looked at herself in the mirror. Her eyes were still recovering from the different lighting on the terrace as compared to in her room. She moved closer to the mirror and looked at her nipples. They were extended and looked like pencil erasers. As she pinched one of them with one hand, she ran the other down her tummy and pushed a finger between the wet lips of her kitty.\n\n\"My God, I am so wet.\"\n\nIt was decided.\n\nShe searched through her bag to the secret that she had stored away in a compartment of the suitcase. It was a dildo.\n\nLeroy came into the room, sat down, and looked at her.\n\n\"Go to the living room, Leroy,\" she commanded.\n\nBut he didn't have any intention of moving. He wanted to watch her. He wanted to see what his new companion was going to do. Maybe she was going to play with him. But for the moment, he waited patiently and studied her intensely.\n\nEven though she felt strange being watched, he was just a dog. He wouldn't understand and anyway, she had to masturbate. She sat on her bed and fell back to lay down on her back. She then brought her legs up and slipped and rubbed the dildo up and down the outside of her pussy just like she did in the morning in her bedroom back home.\n\nIt didn't take long before she had an orgasm.\n\nDuring the entire time, Leroy sat and watched her. He seemed mesmerized. Despite being a dog, he knew that it was more pleasurable to watch this new companion orgasm than interrupt her and be sent away.\n\n--\n\n11. Poolside Companion and Trouble\n\nMandy took a shower so that she could prepare to go to the pool. As she showered, Leroy was lying down just outside the bathroom door. When she finished and dried off, she walked naked into her bedroom to put on the new string bikini that she just purchased recently.\n\nShe took out the bikini from the drawer -- the only bathing suit that she brought -- and put on a disappointed face.\n\n\"Uff. How did Nancy convince me to buy this?\" she lamented.\n\nIt was a thin white fabric. Too thin. And small. Mandy indeed had a skinny body; her mother would always pester her that she should eat more. \"You are on the verge of being anorexic, and if you don't eat I will take you to see a doctor,\" her mother would threaten her. But, Mandy felt that it was overreacting.\n\nBut, she couldn't deny, the bikini made her skinny naked body seem essentially naked.\n\n--\n\n\"You look great,\" Nancy said in the changing room with her in the department store.\n\n\"But, it is practically see-thru when it is dry! Imagine what it will look like when it is wet!\"\n\n\"Oh, don't be such a baby. You have a great body. You have to show it. And you look so pretty in it.\"\n\n--\n\nBut now she had her doubts. Her small breasts had no problem fitting into the minimal triangles, and the fact that she had practically no pubic hair was a lot of luck. But the bikini bottoms consisted basically of two minimal triangles, held together by thin strings. Her hips were completely exposed.\n\n--\n\n\"But Nancy, what if they were undone?\"\n\n\"When did you see anybody lose their bikini on the beach?\" her friend assured her. \"You are too cute with this bikini, and that is final! You have to buy it.\"\n\n--\n\nMandy was ready to leave to go to the pool, but she saw Leroy looking at her with sad eyes with the prospect of staying in the apartment. He began to whine and whimper.\n\n\"You stay here, Leroy, and don't cry.\"\n\nHe seemed to understand that he would be losing his companion and would be alone in the apartment.\n\n\"Oh, Leroy, you are making me feel bad leaving you here. Maybe you can come with me if you promise to be good.\"\n\nShe went to the balcony. Nobody was in the pool area. She decided to take him. Besides, it will only be for a little while and she will try and hide him under her lounge chair. She grabbed the leash and they walked out together. Once she closed the door to the apartment, she fastened the key to the dog leash so that she wouldn't lose it.\n\nWhen she entered the gate of the pool area, there was a large sign with different icons establishing the rules. There was one with a dog and a big red cross.\n\n\"It will only be for a moment. Ok, Leroy? But we have to hide you under my chair. OK?\"\n\nShe went to a lounge chair at the far side of the pool. She left his leash on and just threw it on the floor without fastening it but made him sit underneath her. With the heat of the sun, Leroy seemed to prefer this position because it gave him some shade.\n\nThe lounge chairs were a Chaise type with vinyl straps. They weren't the most comfortable pool loungers. Also, she had forgotten to bring a towel with all her horny thoughts so now they would leave stripes on her body. But, she didn't feel like having to go back to the apartment and come down again.\n\nShe reclined in the lounge chair and looked down at her body. From this angle, she liked how the bikini looked on her skinny body. She always felt that the combination of her wide pelvis bone and flat tummy was a particularly erogenous and sexy area. Now, with the bikini, looking down, it produced a gap so that from her point of view, she could see part of her nearly hairless mound.\n\nMaybe she was too skinny as her mother had said. Anyway, she pushed these thoughts out of her mind.\n\n\"Who cares?\" she thought. \"I am the way I am. Besides, nobody has to look at me if they don't want to!\"\n\nAfter she applied some sunscreen, she closed her eyes and felt relaxed in the warm sun. Underneath her, Leroy was content to be there and not in the apartment. He seemed to like being in the shade that she and the Chaise provided.\n\nAfter some time, Mandy decided it was time to tan her back. She turned around so she was lying on her stomach. So that she wouldn't have tan lines on her back, she undid the strings of the bikini top and let the straps fall over the side of the Chaise.\n\nWithout realizing it, the strings fell right in front of Leroy's face. In this position, the strings on her bikini bottoms also fell between the vinyl straps and dangled on Leroy's head. Without Mandy knowing it, he tried to push them away with his mouth.\n\nBetween the sun and her sleepiness, Mandy was beginning to fall asleep as Leroy was playing with the strings. He seemed to think this was a game and he now started to play with the string as if were an animal, chewing on it, and acting like he was attacking an adversary.\n\nAs he became more engrossed in his own invented game, at a particular point, he grabbed one of the strings and pulled on it undoing the tenuous knot. He then yanked on it as if it were his prey.\n\nBut, doing this, he undid the bikini and now that he yanked on it he pulled it from under Mandy leaving her bottom completely naked. The bikini was hanging from Leroy's mouth when Mandy woke up realizing what was happening. She made a rapid movement that scared Leroy. At that moment, he jumped from under the lounge chair and his muzzle fell between Mandy's bikini top as well.\n\nLeroy ran very fast with the bikini bottom in his mouth, and the bikini top around his neck.\n\n\"Leroy, come back!\" Mandy yelled after him as she tried to stand up and go after him.\n\nShe was completely naked and didn't have anything to cover herself with. She ran after Leroy who had now made it to the gate entrance of the pool area. He ran through the gate and behind some trees in a garden next to one of the condos. Moments later, the workers from the morning were returning and arrived at the gate. Behind them was an older couple also about to enter the pool area. Leroy had been so fast, that they certainly wouldn't have seen him\n\nMandy was running towards the gate when she suddenly encountered the people entering.\n\nUpon seeing them, she stopped abruptly and stood there in front of the four of them completely naked.\n\n\"Oh, I... Uhm.\"\n\nShe stopped and they all looked at Mandy stunned without saying anything. By now, Leroy was well out of sight.\n\n\"I was here sunbathing and a dog took my bikini,\" she started to say, realizing that this sounded like a grade-school student that had not passed in his homework.\n\nThe four looked around to see if they could see a dog, but there was none.\n\nMandy tried to cover herself but realized it was pointless.\n\nThe older woman, perhaps envious of this precious young girl and the reaction she was producing in the men, said \"Young lady, skinny dipping and nudity are not allowed in this complex. This can not be tolerated!\"\n\n\"But, it is not my fault,\" Mandy tried to explain.\n\nNobody seemed to offer her any clothing. The men just stared at her and were mesmerized. Despite the older lady, Mandy saw the effect she had on the men and she liked it. She decided to not cover herself and be more confident about her nudity.\n\n\"If that is what they want, then I will show them everything,\" she thought.\n\nShe decided to enjoy the moment even if the old lady would report her later.\n\n\"OK. I will only stay a little longer,\" she said. \"I will just take a dip in the pool, dry off with some sun, and then leave.\"\n\nSince the keys to the apartment were on Leroy's leash, and she would need to search for Leroy, she decided to make the best of the situation and at least enjoy being completely naked and exposed.\n\nShe went and dove into the pool. It felt incredible. And it felt erotic to be watched and swimming in the pool naked. She felt free as her breasts moved through the water unimpeded by a bikini top. She swam to the end of the pool and ascended the steps. The workers were acting to be fixing something, but couldn't keep their eyes off Mandy.\n\nThe nasty woman's husband tried to act as though he was not looking to please his wife, but also couldn't concentrate and stole glances at Mandy's sleek wet body moving through the water.\n\nMandy swam the length of the pool to the stairs. The older couple was sitting only 2 meters from the stairs and Mandy decided to make a complete show of this.\n\nShe slowly walked up the stairs, with the water dripping down her. When she was at the top of the stairs, she turned around facing the pool and bent down with her legs completely straight, acting to be fixing something on her foot.\n\n\"Now, I will show this woman's husband my body,\" she thought.\n\nShe knew perfectly well that this provided a clear view between her ass cheeks and her hairless pussy from behind. She imagined that the nasty woman was furious as her poor husband salivated at the mouth for something he hadn't had with his wife for a century! Mandy later felt bad that she was so vindictive. It wasn't the poor man's fault.\n\nShe then went to her lounge chair to dry in the sun. She made sure to keep her legs open. At one point, she even bent both her legs upward, facing the workers with the knowledge that this was a way to expose herself as much as she could.\n\n\"Mandy, spread your legs more so that they can see everything between your legs,\" her alter-ego commanded her.\n\n\"But, I will get in trouble if they tell James.\"\n\n\"Shut up and just do it.\"\n\nShe spread her legs. She acted to be changing her position, but she spread her legs outward. She had no idea if they were watching her or not\n\nWhen the men had finished their work after fifteen minutes or so, Mandy pushed her heel up towards her pussy. She silently pushed herself into it without the older couple realizing it. They couldn't have known that it was her secret masturbation method and she was about to have an orgasm only meters from where they were seated.\n\nShe rocked back and forth slowly against the heel of her foot, grinding on her clit. In only a few minutes, a gasp escaped her mouth and her body tensed.\n\n--\n\nMandy finally arrived with Leroy in the apartment after searching for him for 20 minutes completely naked through the courtyard. She was able to hide from countless encounters and was lucky that when she came up the elevator nobody was there.\n\nAs they walked, she reprimanded Leroy as if he was a child for humiliating her. However, in reality, it was the most exhilarating day of her life.\n\n\"Leroy, you were a bad boy.\"\n\nWhen she entered the house, she figured that she would get dressed and all this would come to an end. However, she didn't want it to stop. She was now so horny with all that happened.\n\nShe decided to sit out on the balcony again as she did in the morning. She wanted to be good and not partake in the practices of the morning, but the urge became too great. She wanted to stay naked so that some other neighbors could see her. Just the thought was making her wet.\n\nSince James would be home soon, she decided against any further antics. She had a small orgasm in the pool area next to the older couple that had served to calm some of her sexual energies. Instead, she decided on a shower.\n\n--\n\nUpon emerging from the shower, she sat on the couch with her hair still wet and with her laptop. Mandy opened an editor and started writing a new erotic story that she would submit to the erotic literature sex site.\n\nShe began writing the title: \"Naked adventures at James' Condo.\"\n\nBut, then she realized something. All good stories start from the end. Sometimes, we think that stories begin from the beginning, but it is not like that at all. No! Absolutely not! We have to know the end.\n\nShe closed the laptop. This story was far from the end.\n\nEven Mandy, the girl wrapped up in this adventure, was smart enough to know that this story was far from over. And, she still didn't know what pivotal role she would play in all of this.\n\nSo, she had to wait. She had to wait until it happened.\n\n--\n\n12. Neighbors Tell All and Mandy's Punishment\n\nBefore James came back from work, Mandy was on the couch with her Kindle. She was reading a story from the literature sex site that she contributes. She had become so turned on that she had undone the button to her shorts.\n\nThe story was of a married woman who received a message from her co-worker. It was carnal and about raw sexual desire. But it was also about something that they shouldn't be doing. This heightened the desire.\n\nMandy could identify with this story of forbidden and risky love. The married woman was taking such a risk. She could identify with this couple for how she felt about James -- and about what seemed like a taboo and forbidden love.\n\nThey are co-workers and begin to exchange sexy text messages and decide to meet at his place. She went to his place in the evening, knowing that it was to have sex, after telling her husband that she would need to work late.\n\nThe story described their hot sex and how he came inside her multiple times.\n\n\"I really have to go,\" the woman said, cleaning the cum from her red and swollen pussy lips. \"My husband will be expecting me. It is already so late.\"\n\nMandy could imagine this slutty married woman entering her house with her pussy filled by another man. Would her husband suspect? Imagine that she goes right to bed and he wants to make love. Would she make him kiss her pussy knowing that her coworker had filled her with his cum all evening?\n\nAfter hours of sex, the couple had become more and more raunchy. In the scene that Mandy was reading, it is revealed that the woman has a large clitoris.\n\nThe man says, \"I want you to fuck me with your large clitoris. It is like a small cock\"\n\nThe woman responds, \"Oh yes, I want to fuck you with my large clit. Would you like that?\"\n\nThis blew Mandy's mind. \"My God,\" she says gasping as she plunges her finger into her entrance as she reads on.\n\nShe never thought about her clit -- or any other woman's -- in this way. After reading this and with her finger rubbing up and down between her pussy lips, she started to explore her hardened clit. It wasn't large, but now in this brief moment, she wishes that it was. What would it feel like to have a clit like a small cock? It must be so erotic.\n\nBut, she liked her pussy and clit the way it was.\n\nNonetheless, she imagined that she was the woman in the story. Even though her clit was very small, just like her pussy, she imagined that it was large and used two fingers to rub up and down her \"shaft\" as if it were larger like a penis. Then, she imagined that she was like the woman and used it to \"fuck\" her lover.\n\nThe next scene described how the woman got up from the bed after he came inside her another time and went to the bathroom to pee. At that moment, the man appeared to watch her.\n\n\"I want to watch you,\" he said.\n\nThe woman opened her legs and began to pee as he touched her breasts. He then kneeled down while she was still peeing and asked if he could taste her.\n\nFor some reason, this turned Mandy on. She should be grossed out because it was so perverted, but instead, it opened her mind to a new fantasy. She rubbed herself furiously imagining the scene.\n\nMandy's mouth opened, just as the tip of her finger penetrated her entrance, tempting to fill her, but then retreating.\n\nJust as she gasped, she heard the key to the front door and James entered.\n\nShe quickly removed her hand from within her shorts and she straightened out her shirt. Her finger was wet from her juice and she whipped it along the side of her shorts.\n\n--\n\n\"Hey Mandy,\" James said without enthusiasm and with a heavy tone. He didn't seem angry, more like he was carrying a burden.\n\n\"Hi, James,\" she said happily, turning around.\n\nHer smile quickly disappeared when she saw his long face.\n\n\"What's the matter?\"\n\n\"Oh, nothing. I just ran into Mrs. Stevens down the hall.\"\n\nMandy's heart sank. She could only imagine who Mrs. Stevens was. Maybe it was that nasty uptight hag and the swimming pool.\n\n\"And?\"\n\n\"She mentioned that she saw you today.\"\n\n\"Oh that,\" Mandy's face was sullen. \"I was going to mention that to you.\"\n\n\"I...,\"\n\n\"I can explain everything. Leroy didn't want to be alone and then I took him and then he escaped and....\"\n\n\"Mandy,...\"\n\n\"...and then my bikini, well Leroy took it, and...\"\n\n\"Mandy, I am not....\"\n\n\"What else did she say?\"\n\n\"She saw you...., well, skinny dipping in the pool,\" he said with embarrassment. \"And then naked on the terrace... well, touching yourself.\"\n\n\"But, that's what I mean.... I,\" she started.\n\n\"Mandy, you don't have to explain...,\" he tried to say to calm her worries. He thought it was so hot.\n\nHe explained about the interaction with the old lady. He told her that the woman was indignant. James looked at the husband, who didn't seem to want to protest-- he was more embarrassed that his old wife was making such a big deal about it. James found this amusing and became tired of the old hag protesting about a beautiful young girl being naked.\n\nHe also said that another neighbor came and said that her girlfriend should be more careful because she was nude on the balcony. She said it wasn't good because she has her grandson and maybe he will see her. She said she saw her with her hand between her legs and was touching herself on the balcony.\n\n\"I told her that you are my niece and that I would talk to you and punish you,\" James said. \"But, to simply....\"\n\n\"You told her that I was your niece?\"\n\n\"Just to...\"\n\n\"I'm so sorry, 'Uncle' James,\" she said with her head down. \"I feel so ashamed. Please don't be angry with me.\"\n\nJames was about to say that he said this to the stupid woman in order to shut her up. But now she seemed to twist this into a role-play. It blew his mind that she called him \"uncle\".\n\nOf course, James was really not angry at Mandy. On the contrary, he thought she was the sexiest and most mysterious girl he had ever known. She apparently realized that he was not so angry. Otherwise, she wouldn't turn this into a role-playing game.",
        "\"Well, we can get into a lot of problems. People here can be quite unreasonable. Besides,...\"\n\n\"I will do anything to make it up,\" she said nervously and cut James off. \"Maybe if you make me humiliate myself to teach me a lesson. Maybe if you make me get naked right now, then you will let me stay here!\"\n\nJames never thought of that or even punishing her. He would never punish her. And of course, it never entered his mind to send her away. It was her house too as far as he was concerned.\n\nBut now the very thought of her getting naked right now in front of him turned him on, even though he shouldn't let her do this.\n\n\"Well,...\"\n\nShe interrupted him again, \"Uncle James, maybe if you take all my clothing and hide it away -- as punishment until I am good -- that I will learn my lesson.\"\n\nHe thought about this as he organized some things on the table. This was a new dimension! This was becoming part of an interesting game.\n\n\"Yes. I think that would be a good punishment.\"\n\n\"And if we go out, I can only wear my dress uniform from St. Andrews. That would be so humiliating that I will never do what I did today again. It would be a terrible punishment!! It would be so awful. Then, 'Uncle', would you let me continue to stay here?\"\n\nJames decided to play along with this new \"game\". Of course, he had no intention of ever telling her to leave. But he wondered where all this would lead.\n\n\"Yes. Immediately get undressed right now. Everything!\" he said, trying to act stern, but without being rude or angry. \"And then march to your room and put your clothing in a suitcase. Even all your panties. If you are good, then I will give them back to you and you can continue to stay here.\"\n\nIn her role, Mandy tried to put on the face of one that was unhappy to be punished. However, she also could not hide an elation. This was so sexy! Her nipples were rock hard and she felt the familiar desire to touch her clit. She must have been so wet.\n\nAs he looked at her in anticipation as to whether this new \"game\" was going to continue beyond \"verbal play\", she began to unbutton the top button of her shorts. Standing in front of him, while he sat on the couch, she then unbuttoned her blouse and without looking at him took it off, as she draped it over the couch. She reached behind her, as she has now done hundreds of times, and undid the clasp of her bra. She let it fall to the floor.\n\nShe looked at him.\n\n\"No, Mandy,\" he said calmly but sternly. \"You must take everything off.\"\n\n\"Everything?\"\n\n\"Yes.\"\n\nShe looked down and undid the top button of her tight denim shorts. She then started to pull the zipper down. Her pink panties could be seen underneath.\n\nShe looked up at him as if she were awaiting a reprieve and he would tell her to stop.\n\n\"Everything,\" he said.\n\nShe clasped both sides of her shorts and pulled down while she wriggled her sexy hips to help ease the tight shorts and panties off. Once they cleared her hips, she let go of the fabric, and both her shorts and panties fell to the ground with gravity, accumulating in a small pile around her ankles.\n\nShe stepped out of them.\n\n\"Turn around,\" he said.\n\nShe obeyed him.\n\n\"Keeping your legs straight,\" he said. \"I want you to bend down slowly and pick up only your panties.\"\n\nShe bent down knowing that her pussy would be less than a meter from him. He had a clear view between her cheeks and her slit. When she stood up, she turned and looked at him.\n\n\"Now do the same, and pick up your shorts.\"\n\nShe picked up her shorts in the same manner.\n\n\"Do you like being naked?\"\n\n\"No.\"\n\n\"Are you embarrassed and humiliated?\"\n\n\"Yes.\"\n\n\"Good. You shall be humiliated like this for a long time.\"\n\nShe put her head down, playing the role of a humiliated girl that had been bad and deserving of punishment.\n\nOf course, she did not answer him honestly. He knew this. He knew that instead of making her embarrassed, it had the effect of turning her on beyond belief. Not only was she excited about being naked in front of him, but it was his calm commands and her submission that drove her to new heights of erotic experience.\n\n--\n\n\"Now, go to your room and put all your clothing in the suitcase and bring it to me,\" he said. \"I will put a lock on it so that you must stay nude until you have learned your lesson.\"\n\nShe continued the role-play and acted as if she was being scolded. In reality, she knew that James was also playing a role and was not angry with her.\n\nShe turned around so that her bum was facing him once again and then bent down to pick up her sandals on the floor. She knew that this once again exposed her hairless pussy to him. She knew that he would be able to see how excited and wet she was. She then walked to her room to carry out her task.\n\n--\n\nJames remained on the couch. As he listened to Mandy opening and closing drawers in her room and hearing hangers moving in the closet, he wondered if he was going too far. Maybe this was turning into a crazy role-play that he should have stopped several minutes ago. He would never want to hurt Mandy in any way. He also didn't want to ruin their relationship.\n\nHowever, the whole situation was the most erotic moment of his life. His cock was as hard as ever and he had a great desire to pull it out and masturbate right there.\n\n--\n\nAfter 15 minutes, she came back into the den rolling her large suitcase. At first, Jame's heart sank thinking that in reality she was pissed and was packing to leave. But, she was still completely naked and pushed the large red plastic suitcase in front of the couch.\n\n\"Here are all my clothes, 'Uncle' James,\" she said looking at him and then looking down at the floor.\n\n\"Very good,\" sternly. He tried to maintain appearances and his role in this new game. \"Are you sure that included everything? Even your panties? Your punishment is that you won't be able to have any clothes at all.\"\n\nShe nodded but didn't say anything.\n\nJames stood up and fetched a suitcase padlock from the utility cabinet. He came back and locked the suitcase.\n\n\"I will put this in my office in the backroom,\" he said. \"Do you understand?\"\n\n\"Yes,\" she said. She put one of her arms to hide her chest and she closed her legs tightly.\n\n\"You will get it back when you have learned your lesson. Do you agree?\"\n\n\"Yes, 'Uncle' James. I was very bad today. I promise, I won't do it again,\" she said looking down at the floor.\n\n\"Then, put your hands at your side and stand naturally without closing your legs like that. To be fully humiliated, you can't hide your body.\"\n\nShe immediately did as he said. Her face was a bright red.\n\n--\n\nHe finished locking the suitcase and rolled it down the hallway to the spare room. She heard him close the room and lock it. Leroy sat in the middle of the den and looked perplexed. He had no idea what these humans were doing. Why was his new companion completely naked like before and not playing their previous game of coming in and out of the apartment? He just watched her.\n\n\"My God, what have I gotten myself into?\" she thought. \"This is real.\"\n\nBut she felt a warm liquid start to drip down her legs. It was from her sexual excitement. She couldn't deny that this humiliation was so erotic that it was driving her mad.\n\n\"What would happen next? How long would I be naked like this? I hope I don't ruin my relationship with James and he thinks that I am too weird.\"\n\n--\n\nJames came back to the den. He turned on the TV and tried to create the same situation as the previous night, but this time with Mandy completely naked.\n\n\"If you would like, you can watch some TV before dinner while I review some papers. Is that ok?\"\n\n\"Oh, yes. Thank you, 'Uncle' James.\"\n\nShe sat on the floor and James sat on the couch. As before, Leroy came to her with his tail wagging. He felt that she was sad and simply tried to console her. He didn't understand this new game the humans were playing.\n\nWhen she found a station that she wanted, she lay down on her tummy and supported herself with her elbows. Now nothing was covering her. Her legs were completely open and right in front of James. This was surreal. Not only had he never seen a naked girl as beautiful as Mandy, but he had never been in a situation like this.\n\nIn reality, Mandy was completely humiliated. But, she was enjoying every second of it. Even though she was behind her, she felt his gaze. She knew that he must be staring at her. She wondered what he was thinking. With Mandy totally exposed like this, he, like James, could only think about the jewel between her legs.\n\n--\n\n\"Do you want to have dinner now?\" he asked after a half hour. \"What would you like me to make?\"\n\nStill, on the floor watching TV, she turned around and answered, \"I thought we had a date to go to the Japanese restaurant?\"\n\nHe looked at her slightly perplexed. \"How are we going with you naked like that?\"\n\nShe seemed disappointed. He felt like a real jerk. But this game was just too fun.\n\n\"I still have some clothing in my closet that my sister left here when she stayed with me,\" he said.\n\n\"Are you serious? What did she leave here?\"\n\n\"Oh, just a few odds and ends -- a school uniform from the private school she attended a few t-shirts. But, I don't know, they probably might fit you. You are petite. \"\n\n\"I could try them.\"\n\n\"But, you won't have any panties or a bra. You would have to go without them. You know that?\"\n\n\"I deserve it, right? It will be more humiliating. You should punish me and make me go like that.\"\n\nJames stood up and went to his room. He couldn't hide the large bulge in his pants. Mandy heard him opening the closet and the bureau. He then returned with uniform from a private prep school, St. Andrews, and a plain white blouse.\n\n\"Try these on.\"\n\nShe thought just how small they were. She was petite, but these seemed a couple of sizes too small. It was a good thing that she was so skinny. She was sure the skirt would just fit around her waist, but the length would barely cover her. If she sat, it would ride up and reveal her nakedness underneath.\n\nShe stood up and took the clothes that were still on hangers. She draped the small blouse on the chair and took out the skirt, extended it, and then stepped into it. As she suspected, it covered her just below her bum. Any strange movement and her pussy would be completely visible even as she walked, never mind sitting.\n\n\"It fits perfectly,\" she said to her James. \"Now hopefully the blouse fits.\"\n\nShe took the blouse off the hanger. She looked at it and remembered it. It had an insignia on the left side breast pocket. She then turned it around and undid the buttons. This was a very thin fabric and was meant to be used with a bra or camisole underneath. She put the shirt on. Good thing her body was ultra skinny, but it was short yet fit sufficiently well that it didn't look strange. Even though her breasts were small, they filled out the shirt and her nipples were on clear display.\n\n\"What do you think?\" she said as she was dressed.\n\n\"You look amazing.\"\n\nShe smiled and looked down.\n\n\"So, can we go to the Japanese restaurant?\"\n\n\"Mandy, are you sure that you want to do this?\" he asked off-script from their game. \"You don't have to if you don't want to. You know I would never make you... I mean, this is just....\"\n\nShe cut him off abruptly. \"Yes!! 'Uncle' James, you should punish me. I deserve it. This is part of my punishment for being a naughty girl,\" she quickly forced them back 'on-script'. \"I need to be humiliated. Right?\"\n\n\"Yes, you are right. You have been very disobedient, and you need to be punished.\"\n\nShe smiled back at him, making an indication that they were both in agreement on the rules of the game.\n\n\"Hopefully, somebody sees that you are not wearing anything underneath that short skirt,\" he added.\n\nHe gave her a very nice leather purse that she could use to carry what she might need to powder her nose or whatever. Also, it might come in handy later. Who knows?\n\n--\n\n14. The Price of Sushi\n\nThey arrived and entered the Japanese restaurant. Fortunately, the restaurant was dimly lit, so even though her nipples and bare chest could be seen through the shirt, it was dark enough that nobody noticed as they walked through many areas towards their table.\n\n\"Do you like the restaurant?\"\n\n\"It is really nice,\" Mandy responded very enthusiastically. She had forgotten all about her embarrassing short skirt and tight nearly transparent blouse for the moment.\n\nWhen they entered the dining area, the restaurant was filled with people and the tables were relatively close together. Their table was in the center.\n\nShe knew that when she sat down, she had to be careful because the fabric would ride up exposing her bare pussy underneath. But, even if she was careful, there simply was not enough fabric to cover her. If someone looked at her, they would notice that she was naked underneath.\n\nThey sat down. She draped the strap of her bag on the back of her chair.\n\n\"Sit with your legs open and pull your skirt up,\" James said in a low voice.\n\n\"What?\" her eyebrows raised. \"People will see me.\"\n\n\"That is the idea. It is your punishment, remember?\"\n\n\"But,...\" she tried to interject but was cut off.\n\n\"You do want to get your clothes back, don't you?\"\n\nShe felt resigned and did as he said. In reality, she loved the fact that he was \"forcing\" her to do this. She craved being submissive and now it was happening.\n\nCasually, she shifted position and lifted the skirt so that it was pulled up around her waist. Now, her bare bum was now sitting directly on the chair and her pussy was visible.\n\n\"Open your legs,\"\n\nShe looked at him in disbelief, but obeyed, opening her legs so that each leg was nearly falling off opposite sides of the chair. Her hairless pussy was now on display in public. Her face was completely red.\n\nThey both loved it.\n\n--\n\nThe waiter came and took the order. James was well-versed in Japanese food. He said that he came here often so knew what he liked. Many of the things he ordered were not even on the menu.\n\nHe said a few things in Japanese to the waiter. The waiter looked at Mandy. He bowed his head with reverence and respect and then turned back to James. Mandy took note of the fact that the waiter spoke in a soft voice and James responded in a softer voice than he normally speaks. It was at that moment, that Mandy took special notice of the serenity and silence in the restaurant despite it being filled with people. It is as if this were a code of honor between all the patrons.\n\nAfter this introduction, James switched to English and started to order the food, perhaps in courtesy towards Mandy.\n\n\"We shall start with a miso soup with wakame seaweed and green onions to start,\" he said as the waiter wrote rapid notes in Japanese on his small pad of paper.\n\n\"Then, we shall have a grilled sun-dried mackerel accompanied by tofu flavored with ginger, a grated chunk of daikon radish, and some other green vegetables.\"\n\nThe waiter said something in Japanese. James responded in English.\n\n\"No, we should like the rice to be accompanied by turnip slices and a few pickled plums.\"\n\nThe waiter bowed and left quickly.\n\nJames turned to Mandy and smiled. \"I hope you like what I ordered.\"\n\nHe then looked down at her legs and noticed they were closed. \"You don't have your legs open!\"\n\nShe quickly opened her legs as before and pulled up the material of the dress that now slightly covered her. They looked at each other and laughed.\n\n\"By the way, I didn't remember that you can speak Japanese so fluently, James?\"\n\n\"It is a long story, but I lived in Tokyo with my grandparents when I was younger.\"\n\n--\n\nDuring the first course, while Mandy was sipping miso soup, she looked up and realized that a group of people opposite her at the other table had noticed that her legs were open and she was flashing her pussy to all the people in the restaurant. With an automatic reaction, she closed her legs.\n\n\"What are you doing?\" James asked.\n\n\"What?\"\n\n\"You closed your legs.\"\n\n\"People are looking at me over there.\"\n\nJames turned around and saw that three of the men and a woman on the other table were looking right at Mandy and talking amongst themselves, some with faces of disbelief. James turned back at Mandy and looked into her eyes.\n\n\"Only look at me, and open your legs,\" he said softly. \"Also, undo two buttons of your shirt.\"\n\nMandy's eyes widened. After processing what he said. She continued to look straight into his eyes as she adjusted the fabric of her dress again so that it was hiked up around her dress. This time, she not only opened her legs but also spread them out on either side of the chair. As she continued to look at him, she unbuttoned the remaining two buttons. She then pulled the shirt open to reveal the outlines of her bare breast.\n\nAfter doing this, she focused on eating looking down at her soup and if she looked up, she only looked at him.\n\n\"Unbutton two more buttons,\" he said.\n\nShe obeyed while she kept her legs open. She knew that not only the other table could see her pussy, but now her bare breasts were partially out of the blouse.\n\n--\n\nMandy was so preoccupied with her nakedness, that she had lost the little appetite that she had. She picked at the grilled sun-dried mackerel, taking only one small bite, and had a few bites of the vegetables.\n\nBut their conversation was lively, and they had several glasses of wine.\n\n\"Aren't you going to have rice? Are you feeling ok?\"\n\n\"I am perfect. I have never been happier in all my life, James.\"\n\nThis was incredible. She was showing herself to the entire restaurant, and they were genuinely having a great time lost in their small world. They talked silently about many topics and her latest stories.\n\n--\n\nAt the end of the meal, James ordered Sake, which he drank in a flat porcelain saucer-like cup, called a \"sakazuki\". She tried a little from his cup but didn't like the taste.\n\nWhen they were finished and were about to get up, the restaurant was still filled with people.\n\n\"Did you like the meal? You hardly ate anything.\"\n\n\"It was really good. I am full,\" she said, smiling at him. \"I love being with you.\"\n\n\"I also love being with you.\"\n\nThere was a bit of silence as they looked at each other. James raised his hand to the waiter and asked for the bill. The waiter came with the bill and put it on the table. He looked briefly at Mandy's shirt that was still open exposing her chest but quickly turned away.\n\nWhile James paid with his credit card, he spoke to the waiter in Japanese. The waiter responded then bowed his head and said a few words that seemed to show reverence. James answered him again and also bowed his head.\n\nWhen the waiter left, Mandy asked, \"What did you say to him?\"\n\n\"I told him that very soon, you would be naked. I said that you were being punished and must be humiliated. I said in a moment you would take all your clothes off, put them in your bag, and would be completely naked. You would then walk with me slowly out of the restaurant. I asked him if this was ok and if he wouldn't mind. I also told him that if there were any problems, I would make the appropriate compensation.\"\n\nMandy looked at him with a blank stare. Nothing could have prepared her for this. But this had gone beyond her wildest imaginations.\n\n\"So, are you ready?\"\n\nMandy looked at James with a blank expression. He couldn't be serious. Now, she would truly be humiliated. It wasn't just one or two people noticing her without panties, it would be more than a hundred people watching her get naked in a public restaurant.\n\nBut, she loved it. It was like a dream and a fantasy that had come true.\n\n\"Mandy, follow my instructions, OK?\" he paused going off script a moment, \"Are you ok with this?\"\n\nShe simply nodded affirmatively, as if she were in a dream.",
        "\"Stand up slowly.\"\n\nShe did as she was told and stood by her chair looking down at him across the table.\n\n\"Now, remove your shirt and fold it slowly, placing it in your bag.\"\n\nMandy looked down at her blouse and then at him. She couldn't look at the people around her. She undid the remaining three buttons and then pulled her shirt off. While she did this, she could imagine everybody looking at her.\n\n\"Mandy?\" he said to catch her attention. She looked at him. \"Everybody is watching you.\"\n\n\"Now fold the shirt and put it into your bag.\"\n\nShe did as told and continued with the instructions, slowly folding the shirt and slipping it into her small bag. When she finished, she stood waiting for the next instruction.\n\nJames was making this humiliation last as long as possible. They looked at one another as she stood next to the chair with her back straight and her small pointy nipples sticking straight up and defying gravity.\n\n\"Turn around slowly.\"\n\nShe obeyed him and tried not to look at the people in the restaurant.\n\n\"Everybody is watching you.\"\n\nShe felt completely embarrassed. But she just stood there without her shirt waiting for his next instructions. Finally, after what seemed like several minutes, he spoke.\n\n\"Now, unbutton your skirt slowly and let it drop to the floor.\"\n\nShe reached for the clasp and undid it. She held the waistline of the skirt, while she pulled the front zipper down. When it was fully pulled down, she released her grip on the skirt and it fell off her skinny body and onto the floor. She was now completely naked.\n\n\"Very good, Mandy. Now open your legs slightly and bend down to pick them up. However, when you do this, I want you to move around in a circle so that everybody in the restaurant can see between your legs. Then, stand up, fold them, and put them in your bag.\"\n\nJust as instructed, Mandy did as he told her. When she finished. She stood there in front of him waiting for the next instruction.\n\n\"Now, I want you to turn and look at all the people, making eye contact with each and every one of them. When you do, I want you to bow slightly in reverence to each one of them. When you have done this, I will stand up and we will walk out together, and not before.\"\n\nEven after doing all that he told her, this was the most humiliating. While performing all the other tasks, she didn't look at the people and acted as if the room were empty. Now she would need to look each and everyone in the face.\n\nShe turned and looked at the people in the restaurant. It was then that she realized that all activity had stopped. Everybody, men and women, had stopped eating and talking and were only looking at her. Their expressions were that of being dumbfounded as they watched the erotic show that this girl was putting on in front of all of them.\n\nShe then started to look at each individual, making eye contact with all of them. After several moments she finished and then looked back at James.\n\n\"I finished,\" she said.\n\nJames stood up, took her hand, and they walked slowly and quietly out of the restaurant and went to his car.\n\n--\n\n15. Mandy Gives In\n\nWhen they returned to the apartment complex that evening, Mandy was still naked in the car.\n\n\"Shouldn't I take out the blouse and skirt and put them on before entering the building?\"\n\n\"No, I don't think you want to,\" he said, smiling at her. \"Do you?\"\n\nShe smiled back, \"No, I guess not.\"\n\n\"Besides, you are still being punished. You need this humiliation.\"\n\nThey got out of the car and walked up to the front door. Another car had pulled into the parking lot but maybe hadn't noticed Mandy.\n\nThey opened the door and entered the building, waiting for the elevator. As the elevator opened, an older man walked out. He looked right at Mandy and then at James. However, they entered the elevator and the door closed, leaving the man staring at Mandy.\n\n--\n\nWhen they entered the apartment, Leroy was happy to see them. He wagged his tail and jumped on both of them.\n\n\"If you want, we can watch some TV before going to bed,\" James said.\n\n\"How long will I continue to be punished, James?\"\n\n\"A bit longer, so that you learn your lesson.\"\n\nMandy seemed to like that decision and tried to hide her pleasure.\n\nThey entered the den and watched TV for a while as they always did: James on the couch, Mandy lying on the floor in front of him (but this time naked), and Leroy next to Mandy trying to play with her.\n\nAs before, he licked her face and licked her neck. When she pushed him away, he came back with more determination, wagging his tail to continue their typical game as before.\n\n\"Leroy, stop!\" she said. \"Don't you know that I am now very tired and had a long humiliating day?\"\n\nHe walked around her figure lying on the floor, as Mandy tried to ignore him and watch the TV. She pushed him away a few times, but her efforts were futile. Then, Leroy lay next to her and wined so that she would play with him. But she lacked energy.\n\nJust lying on the floor overtook her with a tremendous desire to sleep and she drifted off to sleep.\n\n--\n\n16. What the Moonlight Sounds Like\n\nJames tossed and turned. He worried that he was too hard on Mandy. In reality, of course, he was not angry with her at all. Quite the opposite. Mandy awakened a yearning that has turned his world upside down. He thought he was falling in love with her -- for real.\n\nAs he lay in bed, looking through the window at the full moon, he thought of how cruel life can be. Why is it that the young woman that he is most attracted to in all his life is precisely a woman that is out of reach? Surely, she was just having fun. She would never want an old guy like him. Here he was, almost 35, with nobody that has excited him more than this 22-year-old creature. But, she was also a lot more mature than most 22-year-olds.\n\n\"But, it's not her age. It is because she's Jenny's daughter,\" he chided himself. Maybe, this is how she thinks of me as well. James, you are a fool.\"\n\nWas the world a simulation? Maybe this was just a strange algorithm that has been designed by the programmers to create cruel perturbations in the \"agents\" being simulated?\n\n\"Maybe this is just a sexual game for her and nothing else,\" he thought. \"It is all just a way of carrying out her fantasy. I should enjoy it and not think so much!!\"\n\nThese thoughts slowly dissipated and he was on the verge of falling asleep when he was awoken suddenly by a noise. He turned his head, still sunk in his pillow, and saw Mandy at the entrance to his room. As to be expected, she was completely naked.\n\nHe noticed how the backlight from the hall outlined the soft contours of her body while the rest of her body was in shadow. Her silhouette also accentuated the gap between her legs and he could just make out her bald pussy lips.\n\nWithout saying anything she approached the bed.\n\nThey looked into each other's eyes in the penumbra of the darkened room.\n\n\"Will you hold me?\" Mandy whispered.\n\n\"Hold you?\" James asked.\n\n\"You don't want to hold me? You don't like the idea of holding me?\" Mandy asked as if feeling dejected.\n\n\"No, it's not that. That's not it at all. It's just that -- I...\"\n\nMandy pulled the covers back and slipped into the bed next to him.\n\n\"I want to be here with you,\" she whispered to him. \"Will you let me stay? Please.\"\n\nShe lay very still as the light from the moon suddenly illuminated her face and her sweet delicate ear. James shifted his position and put his arm under her so that she cuddled under his arm. Her body felt warm and soft and he was not sure what was happening. He was not sure if it was her desire to be held for protection or to be his lover. But she was here next to him like this completely naked! What else could it be?\n\nJames suddenly worried that she would feel his erection. If she was here for comfort and reconciliation, then it would be badly interpreted. He tried with all his effort to not have an erection. It would make the situation uncomfortable if it were simply consolation between them.\n\nMandy continued to lie in James' arms without saying a word or move. James said nothing either. But James could not deny the sexual desire he had for her. They both didn't move. He just held her and she rested her head on his chest.\n\nHe felt her warm ear and neck pressed against him. He smelled her sweet natural fragrance that only a young woman still in the process of formation can exude, like moist petals in a morning garden.\n\nMandy then moved her hands over his chest and down his tummy. James still wore his pajama bottoms. As she ran her hands over his body, James could not control his urge and his cock started to twitch and harden. He did all he could to suppress it. He tried to think of other thoughts.\n\nShe ran her hand over his briefs. She felt his cock stir. She felt it trying to grow and break free. She sensed his effort to suppress his urge. She read his mind.\n\n\"I don't mind if you get hard,\" Mandy whispered.\n\n\"You don't mind?\"\n\n\"No. It is natural for it to get hard. I would like to feel it when it is hard.\"\n\nHe had lost all notion that this girl was Jenny's daughter. With this reassurance, James no longer needed to suppress his natural reaction to this young beautiful woman touching him. He suddenly had a hard erection and she rubbed her hand over the fabric of his briefs feeling its length.\n\nJames could feel Mandy's warm breath on his chest gradually increase in rhythm and intensity. He wanted to kiss her, but he didn't want to scare her. He would let her determine the pace.\n\nThrough his briefs, Mandy tried to wrap her delicate hand around his cock. She rubbed it up and down, still not moving her position, but her breathing gradually became more accelerated. She released his cock and then began to pull his briefs down, but couldn't with this angle.\n\nShe lifted her head, shifted her body so that she was resting on her elbow, and looked up into James' eyes with the moonlight that entered the room. After a moment, she turned and began to remove his pajama shorts; he helped by pushing them down with his foot.\n\nThey were both completely naked. Together.\n\nMandy shifted her position so that she was lying on top of him. He felt her breast against his chest. The same small and firm breasts that he had so much desire to touch, seeing her naked. Her nipples as he had seen before were hard and elongated. They were perfect. With her on top of him, he could feel her pubic mound against his leg and the fact that she was almost completely hairless. It was smooth.\n\nShe pushed herself up so that she looked into his eyes.\n\n\"Hold me tight,\" she whispered.\n\nJames hugged her. After the hug, she pushed herself up slightly so that they were looking into each other's eyes. Her legs were open and he knew that her entrance was very close to his erect cock. If she moved slightly, it would rub against her pussy.\n\nShe then bent down and kissed him on the mouth. As she bent down, her body shifted down, and his cock rubbed between her moist and slippery pussy lips. She moved her hips extremely slowly so that the tip of his cock moved back and pushed against her engorged clit.\n\nShe gasped with each movement as she kissed him sensually on the mouth. He felt her tongue enter his mouth. She kissed him with more passion than he had ever felt in his entire life.\n\nShe moved her hips slightly at a different angle and he felt the tip of his cock enter her entrance. Even though she had moved this way, the sudden penetration shocked her and she jerked momentarily, making sure that the tip did not enter too much. Her entrance was tight. It seemed impossible that his large thick cock could enter her. It was much bigger than her dildo.\n\nHowever, she moved her hips up and then very slowly, with the same inclined angle, she pushed it down, taking more of his head into her entrance. As it entered, she pushed her tongue further into his mouth, and he sensed her gripping the sheets harder as if trying to absorb the pain mixed with the pleasure of his penetration.\n\nShe then shifted her weight so that she could grab the side of his face with both hands and kiss him more intensely. With her weight completely on him, more of his cock entered her. She increased the rhythm so that millimeter by millimeter it stretched her entrance.\n\nIn a quick movement, she pushed herself down on his large cock so that it entered her nearly completely. She let out a moan and then started rocking her hips down onto him.\n\n\"Oh James,\" she said between pants. \"Oh, please take me. Stay inside me. Push it into me.\"\n\nAs his cock entered her, she released him from the kiss and gasped. She rocked up and down slowly making his entire cock enter her. Her pussy was so tight that it took time for his cock to be completely within her.\n\nThey began to rock together, their hips thrusting in unison.\n\nShe suddenly stopped.\n\nHe looked at her. He became concerned.\n\n\"Mandy, are you ok?\"\n\nShe smiled and continued to look into his eyes. His cock was deep inside her. She was on top of him and she kissed him slowly.\n\n\"Mandy, I....,\" he said, thinking that he had gone too far. \"I am so much older than you.\"\n\n\"I don't want to be with anybody else.\"\n\n\"I think that I am in love with you.\"\n\nShe put her head down between his neck. They stayed like this for several minutes. He kissed her neck, while his hard cock remained within her. They made only slow gyrations of their hips, but each could feel his cock inside.\n\nAfter some time, Mandy started to rock her hips more. She began to move them with increased rhythm and he returned by pushing his cock in and out of her. He knew that he would cum at any moment and started to pull out of her. She sensed this and pushed her hips down on him harder.\n\n\"Cum inside me...\"\n\nShe was approaching her orgasm. She wanted to cum when he did. She moved her hips with increased speed, matching his movements.\n\nAll of a sudden, she felt the first waves of her orgasm overtake her. Just at that moment, she felt him cum inside her. It was so intense, that another wave of her orgasm made her tremble and she collapsed into his arms.\n\n--\n\nHe remained inside her as she drifted off to sleep. It was the most absolute feeling of bliss that she ever had in her life.\n\nJames wanted her to remain on top of him forever. He held her sensual body in his arms and never wanted to let her go.\n\nHe had fallen in love with Mandy. That was undeniable.\n\n--\n\nMandy continued to sleep as his cock slowly fell out of her and he rolled her onto the bed. He fixed the pillow so that she would sleep comfortably. Her sleep was profound and she looked like an angel as the moonlight fell across her beautiful face.\n\nJames was on his side admiring her. He followed the beam of moonlight falling on Mandy to the window and looked at the moon. It was full, and the night was clear and peaceful.\n\nHe heard in his mind the second movement of Bach's Chaconne. It was as if Bach had communicated to him across the centuries. It was as if at that moment, he spoke to him from the heavens, saying, \"See, I told you. There is rebirth and renewal after sorrow.\"\n\nJames felt a renewed hope in love. He was in love with Mandy. And he knew that she was in love with him. It seemed that a miracle had occurred by her returning into his life at this very moment.\n\nHe looked back at her face as she slept. He smiled. He now believed in love once again.\n\n--\n\n17. It's Morning in \"Las Playas\"\n\nHe had returned from the shower and entered the kitchen. As usual, Mandy was sitting there with a glass of orange juice, while Leroy sat on the floor next to her.\n\nShe was naked.\n\n\"Morning,\" James said.\n\nShe smiled with a sleepy expression and responded with a hoarse voice, \"Morning.\"\n\n\"Do you want some coffee or something to eat for breakfast?\"\n\n\"I'm good.\"\n\nHe nodded and went to make coffee for himself. As the coffee machine boiled the water he looked at her from behind. Her hair was pulled up and he admired her ear and neck as he did the other day, but now she even looked more beautiful since her naked back was also more exposed.\n\nWhen his coffee was finished, he came and sat opposite her.\n\n\"Is my punishment over today?\" she asked.\n\nHe knew her. It was subtle. Only he could detect and read her mind. She asked with overtones of disappointment.\n\n\"Oh, I think it will last at least another week. Don't you think so?\"\n\nA mischievous grin replaced her lethargy. They looked into each other's eyes and she smiled.\n\n\"Or, perhaps it might take at least a month,\" she said with a pause. \"I have a feeling that I will be naughty again today, 'Uncle'.\"\n\nThe End."
    ],
    "authorname": "mandywoods",
    "tags": [
        "naked",
        "humiliation",
        "bikini",
        "slow-burn",
        "romance",
        "kink",
        "skinny-dip",
        "masturbation",
        "role play"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/naked-punishment-1"
}