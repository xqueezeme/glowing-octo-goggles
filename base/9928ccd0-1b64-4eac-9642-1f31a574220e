{
    "title": "Pledging Tau Geta Delta Pt. 02",
    "pages": [
        "Jiggling. Something was jiggling on my chest. That was the first thing that struck me as I started to work past that groggy sleepiness. I had rolled over and something had shifted that normally didn't do that. My hand slid up to check and instead of finding my normally hard muscles, my finger sank into soft flesh. I can't say I'm quick witted in the morning, but when I gave a pinch to the thick nipple I found, everything came flooding back.\n\nI was lucky not to have banged my head into the ceiling when I shot up out of bed. For a split second, everything felt insanely strange. I had breasts! My cock was gone! My mind swirled before the last vestige of sleepiness burned away and I remembered last night. That didn't exactly help calm me down. I was a girl and I'd let a guy fuck me!\n\nI'd managed to stumble back to my room after that last night. I'd stripped down and slid into my bed before the afterglow of my first feminine orgasm had faded. Too much had happened too quickly, and I had been exhausted. Now, I was quickly trying to assimilate everything in one gulp.\n\nThe panic faded as I sat there, staring down at the perky breasts now jutting from my chest. I couldn't say why staring at them helped, but I managed to calm down and think things through again. I was only going to be a girl for six more days, until the end of pledge week. No matter what happened, I'd get to turn back into a guy, but if I didn't back out of any of the challenges I would be turned back into a guy and allowed to join the Tau Geta Delta fraternity.\n\nThe trouble was, the challenges were nothing like I had expected when deciding to pledge. They were all going to be sexually based, and seeing as they turned me into a girl it would mean six days of doing things no guy ever considered doing. Last night was the first, all I had to do was pick a guy and sleep with him. It had been weird, but actually kind of fun at the same time. I couldn't deny that the sex had been amazing once I let myself get into it. I'd certainly never felt anything like that before. Still, it was easier knowing that Tom had been through the same thing when he'd joined the Taus.\n\nI did worry a bit about what else the challenges would consist of. The one good thing was that they allowed us an out. If I didn't want to go through with it, I didn't have to. Sure, that meant washing out as a pledge, but I'd get to go back to being a guy and life would go on.\n\nNow that I had myself in order, that left me with one more dilemma, I was basically naked and I needed to fix that before I headed off to the dining room for breakfast. I climbed down from the loft with my sheets wrapped around me. I'd completely forgotten to close the curtains last night, and I didn't want to give anyone a show. I just hoped that they'd laid out a few more clothes for me than the dress I'd worn last night.\n\nI breathed a sigh of relief when I opened up the closet. They'd really thought of everything. There was a nice selection of clothes, from basic shirts and jeans to revealing dresses. A good as it was to have the options, I had to admit that I was faced with a new dilemma. Usually, I didn't pay much attention to my clothes, I'd just grab a pair of jeans and a shirt and go. Now, I had actual choices, skirt or pants, blouse or t-shirt. I wasn't used to making those kind of choices, or having to worry about how I would look.\n\nThat was a concern as well. I was a girl now, and I knew just how much attention a coed with nice curves could draw. Hell, I'd stared at too many girls with low tops or short skirts. The worst part was I knew that I'd be plenty of attention regardless. I was well inside the safely sexy range of body types, with a cute face. I could go out wearing a potato sack and guys would drool.\n\nI still wasn't sure what to think about that, but it did make things a bit easier. I might as well be comfortable for my first day as a girl. I decided to pick out what would have been normal for the old me; a nice t-shirt and blue jeans. The panties and bra were easy picks as well, I just grabbed the plain ones. I shuddered, looking at the frilly options though. I wasn't sure I was ready for that kind of lingerie quite yet. It was one thing to know guys would be staring at me, it was another thing to be trying to get their attention.\n\nNow, it was time for my shower. I was almost getting tired of all the choices, but here I had the pink bathrobe from yesterday and Tom's bathrobe. I decided to embrace the girly and wrapped myself in pink. It still felt pretty strange walking around like this, but it wasn't going to be public.\n\nThe shower wasn't much more exciting today than yesterday. There was a nice sign on the door directing the male members elsewhere, so inside it was pretty much just girls. A few of the others were talking, but I just slipped into a stall and disrobed. I wasn't quite ready to talk to the others yet.\n\nMy new body still felt pretty alien to me, from the jiggling breasts to the emptiness between my legs. It was just something I'd have to get used to, but I took my time to enjoy my shower a bit. It really did feel more sensual having the water flowing over my soft flesh. I even took a moment to rub between my legs and explore my new pussy.\n\nIt wasn't any different than a normal girl's mound, but I had to stifle a whimper from the feelings my fingers managed to excite. My new clit really was sensitive, and it even felt good just running my fingers along my fleshy pussy lips. It was all still pretty strange, but I could get used to this.\n\nI stopped myself from going too far, but I could hear that other girls weren't so restrained. There were at least a couple of lustful moans coming from other shower stalls, and I was tempted for a moment to join them at that level of self exploration. The truth was, I had classes to get to, and I couldn't goof off too much.\n\nSo I toweled off and shot back to my room. I dried my hair and then got dressed. It still felt strange having my crotch cupped by silky panties, but the bra was the worst. I'd managed it easily enough yesterday, but it took a bit more fumbling today, and after all that, I was left with the feeling that I'd been forced into some kind of medieval torture device. It took me a moment to realize I needed to adjust it, and then proceeded to fix the straps. Having my chest all wrapped up was still kind of weird, but I knew better than to go out braless.\n\nWhen I finally left my room, I didn't get very far.\n\n\"Whoa! Sorry!\" I heard a yelp before nearly tumbling when a girl bumped into me. I managed to catch myself on the wall as she grabbed on to help keep from falling. I turned to see a deeply blushing Alex staring back at me. The spunky girl from last night had dressed up in a nice pink blouse, short baby blue skirt and heels that were at least a couple inches too tall for her. Her curvy frame was wobbling as she tried to stand and pull her blond hair out of her face.\n\n\"Are you okay?\" I asked as she struggled to retain her balance.\n\n\"Oh, yeah, I'm just trying to get used to these heels...\" She wobbled a bit too far and I managed to help catch her. \"Sorry, I just kind of missed being taller, so I thought this could help.\"\n\nI smiled at that. I'd lost a good four inches and I was noticing it. Alex was a few inches shorter than me, which would be even more disconcerting.\n\n\"Not if you slam face first into the sidewalk.\" I laughed as I held her steady.\n\n\"That is totally true.\" She giggled. Alex seemed to be embracing her new womanhood a lot more than I was. \"Can you help me back to my room and I can try something a bit less dangerous?\"\n\n\"Sure.\" I helped her turn around and we stumbled back towards her room.\n\n\"So, I saw you head off with a nice hunk at the party last night. Did you have a good time?\" She asked as she sat down to switch her shoes.\n\nI blushed. I was a bit embarrassed simply by the fact that other people simply knew what I'd done. I'd never been a braggart when it came to sex, and this was an entirely different circumstance. \"Yeah, it was good. How about you, I assume you found someone.\"\n\n\"Oh yeah!\" She giggled again. \"I met Barry, one of the seniors. He was really nice, like a gentleman and all. Of course that was until we got to his room and then he fucked me silly! It was kind of crazy, but it felt amazing!\"\n\nI could see that she was pressing for me to respond as well. I just blushed as she fumbled through her shoes. She managed to pick out a pair of platform shoes before I summoned up the words to answer her. \"Yeah, it was really weird, but I'm happy to try it again.\"\n\n\"That's right! Hopefully we'll get a good chance today. I wonder what the challenge will be?\" She strapped on the shoes and then took a few tentative steps. \"Okay, this I can manage, shall we?\"\n\nI just nodded and followed her as she stomped out of the room. This time we made it down to the dining hall, which was filled with pledges and regular members as they grabbed some food before heading off to class. Just as we were about to walk in, the fraternity president Hamilton Prescott stepped over and stopped us.\n\n\"Good morning, ladies! I hope you enjoyed last night.\" He paused for us to nod. Alex was a fair bit more enthusiastic than me, but I managed to agree while trying not to blush too much. \"Well, please grab some breakfast. I want you to stick around until all the pledges are here so I can make my morning announcements and then you can get to class.\"\n\nWith that, he waved us on, and went on to greet the next pledge behind us. I quickly grabbed myself a banana and a glass of orange juice and tried to slip into a quiet corner of the dining room. Alex wasn't about to let me get away with that though, and popped into the chair across from me and waved over a couple of the other girls.\n\n\"Okay, Alison, no need to be shy, we're all in this together right?\" Alex smiled widely. \"That's the whole fraternity thing, you know brotherhood through thick and thin.\"\n\n\"I suppose so.\" I nodded. She did have a point. As much as I was doing this for the benefits of being a member, one of them was the camaraderie. I had to admit I wasn't always the most social guy around, but if ever there was a time to make changes, this was it\n\n\"That's the spirit.\" Alex seemed to be bouncing in her chair and then turned towards the other two girls. \"Alison, this is Megan and Brittany. Girls, this is Alison.\"\n\nThe two girls giggle a bit. It seemed that Alex had snared the two other pledges who seemed to be embracing their new femininity. Megan was a rather tall, and nicely stacked brunette. She'd also gone all in with the skirt and low cut blouse that showed off her perfect cleavage. Brittany was a bit more subdued, aside from the long mane of red hair that flowed down to the small of her back. Her breasts were small and perky and pushed out the front of her t-shirt in a way that no guy could ignore. She'd also kept to a pair of blue jeans, but the way they were hugging her curves, they looked virtually painted on.\n\n\"Hi.\" I gave them a subdued wave. Even on the best of days it was hard for me to take the level of enthusiasm that Alex exuded.\n\n\"So, has Alex completely driven you crazy yet?\" Megan sat down and cracked open a cup of yogurt.\n\n\"Maybe a little.\" I smiled.\n\n\"Yeah, she was even like that before the whole change thing. Always ten times more excited than anyone had a right to be. Though it was really creepy when she was a guy.\" Megan squealed when Alex gave her a soft punch in the arm.\n\n\"So you knew her before?\" I leaned in a bit.\n\n\"Yeah, we were roommates, and she talked me into pledging. The strangest thing though, I remember being roommates with her and both of us are girls.\" Megan turned serious for a moment. \"I couldn't even tell you what she looked like as a guy. It's really crazy.\"\n\n\"Just try and think back to something in your past, and you remember it like you were a girl then. You can still remember what really happened, but it's like something you read in a book, not like real life.\" Brittany added. Her eyes turned a bit vacant at that, staring off into space.\n\nI had to admit I hadn't really thought about that before. I'd been so wrapped up with what was happening now, that I hadn't thought about my past at all. As I peeled my banana, I took a moment to look back, and shuddered as I realized it was just like they said. Everything had switched around, and I found it hard not to review the changes, from being a girl scout to a star softball pitcher. The harder bits to swallow were those of a dating variety, right down to the gown I'd worn to my senior prom. I knew it was all just magical back fill, but it felt real.\n\n\"Woah, that's trippy.\" I grabbed onto the side of the table to keep myself from sliding out of my chair.\n\n\"Yeah, whatever they hit us with is like heavy duty magic or something.\" Megan nodded. \"Now, the question is, are you girls in it to win it? We're going to make it through to the end right?\"\n\n\"Damn straight!\" Brittany gave a hearty shout.\n\n\"No fraternity punks are going to get the best of this woman!\" Alex laughed and slapped the table. Then the three turned to me with bright, confident smiles. It was hard not to be moved.\n\n\"I'm no quitter.\" I banged the table as well. If there was one truth about me, that was the one I most wanted to be true.\n\nBefore the other girls could say another thing, Prescott shouted out for our attention. He stood up on a chair at the far end of the room and waited for everyone to quiet down before proceeding.\n\n\"Okay, ladies, it's just about time for you to head off for your first day of class as a Tau pledge. But, we don't want you to forget just what college life is all about. We're all here to learn, and the experienced Professors and teaching assistants of this university are all doing their best to fill your empty brains with knowledge. Now it's time for them to teach you another lesson, and for you to give a little back to this fine institution. For today's challenge, you need to seduce an instructor and share a bit of intimate fun. Now, good luck and have fun!\" Prescott gave everyone a wave and jumped off the chair.\n\nThe room filled with harried gasps and whispers as everyone digested the goal. I gulped a bit. It wasn't so surprising, given the general theme, but now I had to consider what to do. After just sharing a moment of raw enthusiasm, I actually felt ready to take on the dare. Sure, it was crazy, but everything about this was crazy. It did leave me with one uncomfortable choice though.\n\nI wolfed down the rest of the banana and my glass of juice. \"Okay, ladies, I guess that means I should get a change of wardrobe. I'll catch up with you later.\"\n\nI left them as they started chattering about their first notions of a plan. I wasn't quite there yet, but I had an inkling. The first thing I needed to do was put on something more feminine. I had resisted the idea before, but if I was going to get through these challenges, I knew I'd have to take Tom's advice and embrace the girly. A skirt combined with a top that would show off my breasts would certainly make seducing an instructor that much easier.\n\nThe hard part would be picking an instructor. I pondered that question while I changed and then raced off to my first class. I didn't need to be late on top of everything else. It wasn't an easy choice though. Half my instructors were well past their prime, and a couple I weren't even sure if they'd ever had a prime.\n\nThat gave me another chance to listen to the advice I'd been given yesterday. Meredith, the sorority girl who'd helped me after the change yesterday, had told me to trust my feelings. So I tried to do just that. As hard as it was, I tried to think about each of my male instructors and let my new instincts make the choice.\n\nIf only it was that easy. I spent the first two classes of the day lost in uncomfortable attempts to fantasize about my professors. It was a lot harder than I would have thought. Whenever my body started to react, I'd start to over think things and end up more confused than when I started.\n\nIt wasn't until my lunch break that I managed to get a handle on things. I'd grabbed a sandwich and picked a good tree to lean against in the quad and just let my brain hash it out as I enjoyed some excellent grilled chicken and bacon. Letting myself get lost in the delectable flavors had a way of just letting my subconscious fight through the options and decide for me.\n\nSo that's when I picked my target. I just sat and stared up at the blue sky that was dotted with a few drifting puffs of white. It was kind of a relief, even though I knew what making that choice meant for my afternoon. Luckily, I only had one more class after lunch, that would give me a bit more time to consider my plan. Naturally, it didn't seem like I'd need a lot of scheming. I was a rather attractive girl now, and I knew for a fact it wasn't hard for an attractive girl to talk a guy into sex.\n\nAt least that's what I thought. Caleb was a reasonably buff graduate assistant in charge of my circuits class. For reasons I didn't quite want to admit to yet, my new pussy seemed to get all tingling when I considered him. So in my effort to listen to my new instincts, he seemed like an easy choice. I even had memories of him checking me out during my lab sessions, so he had at least some attraction to me as well.\n\nI strutted into his office after taking a trip to the bathroom to primp a bit. I tried not to think too much about exactly what I was doing. This was a mission, and I wasn't going to let myself get squeamish.\n\n\"Alison! Good afternoon!\" Caleb looked up a bit surprised when I came to a stop next to his desk and then leaned over it in such a way that he had a very clear view of my cleavage. I tried to manage acting like it was unintentional, but I'm sure he was too busy to notice as he tried to figure out if he should stare or not.\n\n\"Hi, Caleb, I was hoping you could help me with a little something.\" I tried out my best impression of a husky voice while I reached up to pull my hair back behind my ear.\n\n\"Really? You've been doing very well in class. What's the problem?\" He pulled back a bit. I could see that he was blushing and fighting not to just stare down my shirt. That was a strange thrill. Just by showing a bit of skin I'd completely flustered this guy. Obviously, I'd never managed anything like that when I was a guy.\n\n\"Well, I actually had a bit more personal of a problem I was hoping you'd help me with.\" I replied as I hopped up onto the edge of his desk and lifted up one of my legs so that he could almost see my panties. He certainly had an excellent view of my silky thighs as my skirt rode up.\n\nThat brought another flush of red, and his eyes bulged a bit. For a moment, I thought I had him. All I needed to do was close the noose, but just as I started to move in for the kill he shot up in his chair and started to laugh. It was a nervous chuckle at first, but quickly escalated to a heartfelt belly laugh as he smacked his hand onto the desk.\n\n\"Wow, you almost had me. I forgot you were pledging with the Deltas this week. What is some kind of trick the TA thing?\" He shook his head. Now it was my turn to blush while my leg slowly slid back down to the ground. He wasn't exactly right, but it was close enough to just completely derail me.\n\n\"And you remember I have a girlfriend right?\" He jabbed in a way that really drive my defeat home. I'd totally forgotten about that, but now that he mentioned it, I remembered him talking about her a few times after class. While I knew it wasn't impossible to seduce a guy with a girlfriend, it did make things a lot harder, especially when the guy was as honest at Caleb.\n\nNow, I was just fidgeting on his desk. I didn't exactly know how to make a dignified exit at this point, and I suspected that there was no such option. He quit laughing and then looked up at me with a rather wry smile.",
        "\"You do know that Professor Barrington is single right? I bet you could totally zing him, and I have it on good authority that he can take a joke, especially from a cute coed.\" Caleb offered. I could see he was offering me an olive branch and a way out. I suppose it was one of those benefits of being a girl, he wasn't planning on holding this little stunt over my head. Instead, he was trying to work his way into my schemes.\n\n\"Hmm...\" I nibbled at my lower lip a bit. \"That is an idea, thanks.\"\n\nI hopped off his desk and waved goodbye before the awkwardness grew any more intense. I took a deep breath once I was out of his office, but as much as I was relieved, I thought about his suggestion. I'd not really considered the professor. He was on the young side, probably in his mid thirties, and my feminine senses did tingle a bit when I thought about him.\n\nFirst, I need a tall glass of something, but I had to make do with a water fountain. I don't think I'd been so thoroughly embarrassed in quite some time. My stomach was still swirling a bit, twisted from what I'd tried to do and what actually happened. I decided I needed to take a nice walk around campus before giving things another attempt.\n\nThe fresh air did me good, and so did the moderate pace I chose as I swept through the lesser used paths. I wasn't quite in the mood to deal with all the groping glances I seemed to be drawing today, and I managed to avoid a lot of attention. I was used to jogging to clear my head, but I didn't want to work up that kind of a sweat, so I settled for a slightly fast walk that only got my heart beating a bit faster. It wasn't nearly as satisfying, but it gave me a chance to cool down a little.\n\nMy subconscious must have been guiding me though, because before long I was standing right in front of the professor's house. It was a quirk of the university that they had a few blocks of houses dedicated for their professors, they weren't the fanciest places, but since they came free with the position most of the schools top educators happily resided there.\n\nProfessor Barrington's house was little different than the others. From the outside, it was a slightly run down red brick house. The lawn was mowed, but the flower beds were unkempt and an open window and the sound of classical music told me that the professor was home. I paused there for a moment, the music was soft, and I listened for sounds of conversation. It wouldn't do any good if he had company.\n\nBefore I could summon up more courage, I heard a rough squeaking of wood and metal and looked up to see the professor pulling open the window screen and then leaned out slightly from the second floor and looked down at me. \"Hello, Miss Sterling. Is there something I can help you with?\"\n\nI stood there staring up blankly for a moment. There was something unnerving about being interrupted while trying to psych yourself up. I clenched my fists and forced a smile. \"Yes, professor, can I come in?\"\n\n\"Certainly, the doors unlocked.\" He popped back inside and closed the screen with the same teeth gnashing noise. I didn't give myself time to back out. I quickly skipped up the steps and slipped inside. I did take a moment to lock the door. If I really went through with my plan, I didn't want anyone to interrupt us. This was nerve wracking enough without having to worry about creating a scandal.\n\nThe inside of the house wasn't in much better shape than the outside. It was clear he was a bachelor from the lack of decor. What furniture he had downstairs was simple, purposeful and completely uncoordinated. For some reason I felt an odd shudder at some of his rather clashing color choices. I'd never worried about that kind of thing when I was guy, but now it was actually bugging me!\n\nI couldn't resist thinking about how I would redecorate this place if I had the chance. The basic architecture was classic, and had clearly been restored not too long ago, and thankfully with a rather tame paint job rather than some of the more garish wallpaper that would have probably been there originally. As I found my way to the stairs, I was silently placing paintings, end tables and accenting plants in my mind. It was a rather twisted way to keep my mind off of what I was about to do.\n\nOf course, it wasn't a perfect distraction. The truth was, the closer I got to the top of the stairs the more aroused I became. As nervous as I was, the memories of last night in Tom's bed were pushing me forward. I couldn't deny just how good that had felt, and the prospect of feeling that way again was enough to get me to do just about anything. The fact that Professor Barrington was a reasonably fit and certainly attractive man didn't hurt a bit either. I was learning how to keep my rational male thoughts from getting in the way of those feminine instincts.\n\nFinally, I came to the door of his study. He'd left it open and I stepped inside the threshold. This room was the one that actually looked lived in, and even decorated! His taste was rather eclectic though. One wall was covered in a blown up poster of a space shuttle flying over the earth. The wall next to me was lined with shelves that were covered in a mix of technical books and various computer and electronic parts. A long corner desk sat under the window and along one wing of the space shuttle, with a computer on one side and a half built piece of electronics on the other. Along the final wall were a pair of soft sitting chairs and a record player that was built on top of a small cabinet was still belting out Brahms.\n\n\"Vinyl?\" I asked.\n\n\"Naturally, and not a bit of solid state chicanery either, it's all vacuum tubes.\" He smiled and hopped over to open the front of the cabinet. I stared at the rather archaic looking piece of equipment. I simply nodded as he showed me his handiwork.\n\n\"It's my own design, I wanted something a bit more refined than the classic models. I'll have to write up the schematics sometime so I can get them out to the hobbyists.\" He beamed. I could sense the pride in his work and I leaned in to take a bit of a closer look. I'd not done much more than simple circuits in my classes, and the craftsmanship inside that cabinet blew me away. He knew his stuff.\n\n\"Sounds good.\" I smiled. I didn't know what to say. I wasn't exactly big on musical equipment. Sure, I knew the wattage of my stereo speakers, and just how long books could stay on my shelves when I cranked up the volume, but that was about the end point of my knowledge. If not for the silly humanities requirements that had forced me to take a music appreciation class, I wouldn't even have known he had Brahms playing.\n\n\"Please, take a seat and appreciate it while I get us some drinks.\" He nudged me towards one of the chairs and then strutted off towards the kitchen. Not knowing what else to do, I took a seat. I fidgeted for a moment, not used to my hips or the way my skirt rode up my thighs as I tried to get comfortable. It had been an issue all day, and I had given in to sitting with my legs crossed in typical feminine fashion and tugged down on the hem of my skirt.\n\nI sat back and listened. I couldn't have told you which composition it was, but I had to admit it was relaxing. My ears couldn't tell the difference between this and the much less elaborate stereo that had been used for my music appreciation class. That was a point I was going to be careful not to mention to the professor.\n\nThat's about when my thoughts caught back up to my original mission. I sat up and took a deep breath as everything came back into focus. This was the time I realized that I didn't really have a plan. Sure, I had a big flashing 'let's sex up the professor' but I didn't have a clue how to get from here to the bedroom. Well, that's not quite true. There were only about a dozen different brazen notions that flashed through my head.\n\nI could just strip down and when then professor came back to see a relaxed, naked woman sitting in his study, well he couldn't help but take the hint. Just the idea had me blushing, as did every other thought of direct action. I couldn't just come out and say I wanted to fuck him. Or could I? Did it really matter? In a few days I'd go back to being a guy and all this would just be a memory for me and everyone outside of the fraternity wouldn't remember.\n\nThere was simply no way I could summon up that kind of balls. Granted, I was kind of lacking in that department, and giggled at the notion. What did girls really say to themselves when they wanted to 'woman up'? I had a hard time thinking of anything that would have been anatomically appropriate, but then I was a bit focused on sexual differences at the moment.\n\nBefore I had a chance to distract myself with more pointlessness, the professor returned. He was sporting two glasses, he handed me the tall glass of iced lemonade and he kept the tall glass of something far darker with a rather thick head. I wasn't a huge drinker, but I had to admit part of me was debating asking for something to calm my nerves. Of course that was when I remembered that I was still 19 and this was a university professor. The way things have been lately, he'd probably get in more trouble for giving me booze than sleeping with me.\n\n\"I hope lemonade is all right.\" He sat down across from me, and gave me a quick once over. I'd started to get used to guys doing that, even when they refrained from staring down my shirt, they had to at least get one good look at the whole package. I squirmed a bit in the chair. The fact was, I kind of liked the way his eyes had lingered a few moments longer on my chest and bare legs when he checked me out.\n\n\"Oh, just fine, thanks.\" I blushed a bit as he gazed at me. His smile was warm, but his eyes were deep, penetrating, and they pulled me in a bit more than I'd expected. I felt my whole body flush, and I took a big gulp from my glass just so I could tear my eyes away from his. With just one look, he'd cut right through to the core of my new found womanhood and lit a fire deep inside me.\n\n\"So, what can I do for you today? You've been doing very well in class, so I'm going to guess you're not looking for help with your studies.\" He pulled back to take a measured drink from his glass. I blushed some more, he'd cast out the classic move. I really was a good student, and I couldn't pretend to seduce him for a better grade or anything.\n\nThat got me to think about class, and just how different my academic career had been from that of my former self. As Alison, I'd been just as smart and just as likely to slack off when I shouldn't, but I'd also had to prove myself more. A girl in computer engineering was rather out of place, and a lot of the guys made me aware of it. Between the bad attempts at flirting, snide remarks and just juvenile crap, I was a little surprised that I'd actually kept to it. I might have lacked balls as Alison, but only from an anatomical perspective.\n\nThat did lead me to one other set of memories. I'd not really thought about how Professor Barrington had conducted class as I came over here, but now that my memory was triggered, I realized that he was a bit of a womanizer. It wasn't that he was pushy or anything, it was more like he just planted a few subtle hints and let the feminine mind do the rest. That and since I was a girl, I got to hear all the sordid details about the male professors that I'd never really known when I was a guy.\n\nI took another gulp of my lemonade when I realized he was waiting for me to reply. I also blushed at least another shade of red as I reviewed my memories of being Alison. It still took a bit of effort to differentiate between the two sets of information that was shuffled in my head. Now, I realized that he must now be assuming that I was here with one particular goal in mind, especially given my rather awkward behavior so far.\n\nDespite how embarrassing it was, I felt like I could actually go with it. All I had to do was drop a few less than subtle hints that I was here for a bit of special education and he'd do the rest of the work for me. Or at least I kind of hoped so. Now the question was exactly how to make sure to get him on the right page without being too brazen.\n\n\"Well...\" I fidgeted with the end of my hair as I struggled to find the right words. \"I've... I've heard from some of the girls that you sometimes offer special lessons.\"\n\nHe sat back and glanced over me again, this time taking his time as he sipped at his glass. I squirmed again under his gaze, but I tried not to keep from losing control after pretty much spilling the beans in one go. I did remember hearing about other student affairs with him, and that he could be a bit kinky but fun at the same time. I hadn't quite meant to say it like that, but my nerves had gotten the better of me.\n\n\"I see.\" He sat up slowly and placed the glass onto a corner of his desk. Then he leaned forward and looked at me, his expression was a bit odd, even as he looked into my eyes again. \"I would be pleased to give you a very private lesson, my dear Miss Alison Sterling. I do however require that you state clearly your consent and willingness to let me direct you. In exchange, I shall endeavor to show you a different kind of pleasure.\"\n\nI gulped at the sudden seriousness of his tone. Did I really want to do this? Just what exactly was I agreeing to? I quickly sought out more details from my faded memories of sordid conversations, but I really didn't get much more than the fact that my girlfriends seemed to have enjoyed whatever it was that they'd done with him. I did still have a challenge to go through with, and nothing I'd heard gave me reason to back out now.\n\n\"Okay.\" I closed my eyes and bit my lip a bit as I summoned up the willpower I needed to actually say the words. \"I, Alison Sterling, consent to a private lesson from Professor Martin Barrington, and I agree to follow his directions.\"\n\nI felt a bit silly saying it that way, but he chuckled. I just couldn't let the serious tone go without taking it a bit further to the absurd. This was so far past any reality I'd been a part of, that I didn't know how else to react.\n\n\"Excellent. Now, shall I show you to our classroom?\" He stood up and held out his hand. I stared at it for a moment before I realized what I had to do. Then I placed my hand in his and let him help me from the chair like I was some kind of refined lady. I blushed a bit, enjoying the attention and yet feeling helplessly awkward at such a feminine routine. It wasn't hard to think back to Tom's advice about accepting the girly. It was only the male part of my identity that was second guessing everything. At this point the female half of my brain was rather excited, and enjoying this little performance with the attractive professor.\n\n\"Lead the way.\" I managed to say without stammering. It was a force of will not to let my nerves now work their way into my speech.\n\nHe pulled me along gently, and I followed. His house wasn't very big, so we barely had to turn a corner before we got the room. It looked at first glance like just a regular bedroom, but I quickly did a double take. First, there were mirrors almost everywhere, on the walls and ceiling. The bed itself was ordinary enough, but the metal loops that were bolted to the headboard and footboard quickly got my attention.\n\nI'd never been particularly kinky in the sack. Heck, just getting a girl past second base was rare enough that I didn't even think about any extended options when it came to sex. Sure, I wasn't ignorant about their being more options, I just never felt confident enough to even consider exploring them.\n\n\"Now, this is an introductory lesson, Miss Sterling, so I promise not to do anything too extreme. However, should you find yourself uncomfortable and you wish to stop, then I want you to say buttercups.\" He said.\n\nI couldn't help turning back to him and had to fight down a giggle. \"Buttercups?\"\n\n\"Indeed. I've found that choosing memorably strange words help girls to remember the safe word.\" He smiled and pointed back towards the bed. \"Now, if you'll excuse me, I need to make a few preparations. While you wait, would you be so good as to remove all your clothes and place them on the table in the corner. I expect to see you standing at the foot of the bed when I return.\"\n\nWithout another word, he turned and closed the door behind him. I let out the stunned gasp I'd managed to hold in when I'd heard his directions. I knew he was serious, but was I really going to do this? I wavered for a moment, torn between a twisted kind of curiosity and the fact that this was not at all what I'd expected. It boiled down to the question of whether I trusted the professor and the girls who'd previously taken his special classes.\n\nI shook my head. There was no use in arguing over it. There was no good reason to back out now, and I did trust him not to go too far. I was sure that I' wouldn't have come here if I'd known this was what would happen, but I was here now and had a challenge to fulfill.\n\nI tried not to think too much as I stripped out of my clothes. It wasn't until I was stepping out of my panties, that I realized that it was a bit chilly in the room. The temperature was low enough that it was noticeable, but not enough to make me immediately uncomfortable. I guessed that once we were in the midst of things I'd warm up well enough, but for now it made my nipples stand out lewdly from my breasts.\n\nFor the first time since my transformation I got a full view of just what kind of girl I had become. Sure, I'd seen my reflection and had a first person view of my body, but the mirrors lining the room gave me a full and rather intimate view of my new shape. The remarkable thing was just how ordinary I looked. I was pretty, but not stunning, though my body was hot, I couldn't say that I'd stand out from the crowd.\n\nThe self assessment brought forth a slew of Alison memories. All those showers after gym class and practice over the years. The girl part of my mind hadn't found anything erotic about being surrounded by other naked girls. Rather, it was all comparisons, who had the biggest breasts, the longest legs or roundest ass. There was a mix of envy and pride at the various comparisons and everything wrapped around how I'd use that anatomy to help me get the attention of the right guys.\n\nIt was a strange feeling, and when it all mixed together with my more masculine thought process, I felt an odd bit of validation. I could understand just how hollow all that false insecurity was, and how little all those petty differences with other girls made to the male mind. Sure, extremes were an issue, but I could feel my old male mind telling Alison that she was just as attractive as any of those girls she'd been jealous of. It wasn't enough to completely mask the lifetime of feminine insecurity those memories dredged up, but it filled me with a strange sense of self assurance that I knew I'd never felt in my girly past.\n\nThe sound of the door opening brought me straight back to the present. As crazy as it sounds, this was the moment I actually felt naked, as I watched the professor appear when the door swung out. I was completely bare ass naked, standing in the middle of the room and he could see me! With Tom, my nudity had been gradual and mixed in with everything else. Despite a wavering arousal at the wickedness I was in the midst of, I was basically clearheaded, and completely exposed.\n\nAs a guy I was used to being naked around other guys. Alison, however, had only managed to do that a few times and always while in the rabid throes of lustful abandon. So I tried to summon up my masculine nonchalance, but instead got hammered by a gut twisting wave of embarrassment. I managed to keep myself facing him and my hands clenched at my sides despite the urge to cover my girly bits. My feminine modesty was at war with the rational part of my brain that proclaimed it ridiculous to be so bashful given the circumstances.",
        "He just stood there with a wry smile as he watched me fidgeting in front of him in the buff. The professor had changed out of his regular clothes and into a simple Heffner style robe. I kept my eyes north of the equator. I wasn't sure if my nerves could handle seeing his erection outlined on the brown terry cloth.\n\n\"Very good.\" He smiled and then held up a long black length of cloth as he approached. It took me a moment to realize it was a blindfold and my stomach twisted a bit again. Just what did he have planned for me? I took a deep breath and took it from him.\n\n\"Now, hold it over your eyes and turn around.\" He stood before me gazing into my eyes with that soul searing intensity he could do so easily.\n\nI gulped and did just as he asked. My nerves flared as everything became dark. Despite all the signs that told me I could trust him, it was hard not to panic a bit at being naked and blindfolded. He stepped up behind me and grabbed the ends of the cloth and I felt him knot it firmly around my head. It wouldn't be hard to remove, but it would stay in place unless I actually made the effort.\n\n\"Hold up your left hand.\" I heard each around the room. I complied and felt him take my hand. His other hand came to rest on my hip, and he guided me around the edge of the bed. After he came to a stop, he pulled my hand down until I could feel the soft covers.\n\n\"Climb onto the bed and roll onto your back.\"\n\nI felt strange doing all this while being unable to see. It wasn't unlike stumbling back into my dorm room while my roommate was sleeping, but it wasn't easy to manage in strange places. The real nerve wracking part was the fact that I could feel the cool air against my bare skin and my breasts jiggling freely as proof of my continuing nudity. I didn't let that slow me down though, and was soon resting in what I hoped was the middle of the bed.\n\nI heard him moving over to my left and felt the his hand grab my wrist. He pulled my arm up until it must have been pointing at the top left corner of the bed, and I felt a soft cloth being wrapped around my wrist and tightened. I shuddered a bit as I realized what he was doing, but I fought down any urges to bolt. It probably sounded crazy, but I was actually intrigued almost as much as I was nervous.\n\nIt didn't take long before I was fully strung up. The professor had me spread eagle on the bed, and a light testing of the bonds told me that he hadn't left much slack. I was surprised to feel a thrill at the whole notion, I was completely exposed, and totally vulnerable, and it was making me aroused.\n\nWhen he finally slid one of his hands down my side, I shuddered from the unexpected tickle of his finger outlining my curves from the hollow under my arm to the fullness of my thigh. He didn't stray, didn't do more than tease, but it had me quivering. The anticipation had me seething. Just what would he do next?\n\nHe continued his almost casual caressing of my flesh. His fingers ran along my arms, under my breasts and over the curve of my ears. His touch was always light, almost fleeting, and I could do nothing but quiver in anticipation. Despite his fingers never touching my breasts or the folds of my womanhood, I was as aroused as I'd ever been. I'd never imagined this kind of sensuality or just the kind of effect it could have on me.\n\nJust as I started to whimper and moan from the pleasure of his roaming digits, he pulled back. I heard him walk across the room, open something and then walked back to the bed where I was still on display. It was so strange relying on just my hearing to gauge what was about to happen, and just how limiting that was.\n\nSo when I felt something light and feathery suddenly flutter over my breasts, I couldn't help but let out a loud gasp as my nipples were wickedly tickled. He didn't stop there, the ticklish fluttering rolled across my stomach and then down one thigh and up the other. I did my best to resist the vicious sensation, but when I felt that feather run right over my tender nether lips I started to convulse with laughter.\n\nI tore at my bonds, trying to escape the tickling as I shook with uncontrollable laughter. The assault was just too much, and my composure just melted away as I tussled from side to side, trying in vain to escape.\n\n\"Please! I can't take it...\" I broke into laughter again as he attacked the soles of my feet with two feathers. I convulsed, crying as I pleaded for relief.\n\nWhen he suddenly pulled the feathers away, I was left panting, and to my amazement, utterly in need. That restrained helplessness had set my pussy alight, and I squirmed on the bed again, this time trying to do something to relieve the growing heat between my legs. The fact that my bonds kept me from even rubbing my thighs together just stoked my flames hotter.\n\n\"Oh, oh yes!\" I moaned when I felt his hands sink into my thighs. My body was aching to be touched, and when he slid his hands up my inner thighs, I was simply quivering in anticipation, but he held back. I could feel his breath flow over my burning pussy, but he held back his fingers as I quaked with need.\n\n\"Almost.\"\n\nThen he pulled back and again, I was left, naked, helpless and delirious with need on his bed. I cried out, in anguished desire. I'd never been teased like this, and the sound of my heart pumping in my ears kept me from sensing his movements.\n\n\"Oh, god!\" I moaned when I felt a pair of lips wrap around a nipple and start sucking. His tongue flicked at the sensitive tip as he nibbled at the tender edges. It wasn't just the skill of his mouth, it was the fact that he came without warning, and just as I pressed my chest towards the pleasure of his suckling he pulled away.\n\nI waited again for his next strike. My entire body quivering with anticipation.\n\nThen his tongue slip up the side of my neck and I whimpered as he began nibbling at my earlobe. It was impossible for something so simple to make me this hot, but the aching void between my legs could not be denied for much longer.\n\n\"Please, oh... please...\" I panted. The bonds were all held tight. If he would have untied me, I would have pounced on him, but as it was I was awaiting his deliverance.\n\n\"Now.\" His voice echoed around the room, and with no more warning, I felt his weight on top of me. His chest pressed into mine, and his thighs moved between my open legs. When his lips touched mine, I felt his hardness part my nether lips. I gasped into his mouth, unable to do anything to speed or slow him.\n\nI wailed when he thrust into me. My seething, hungry flesh yielding to the hard invader as I pulled at the cloth holding me in place. The same restraint that had sent me to the height of need only amplified the raw sensation of being penetrated. The impossibility of movement left me unable to focus on anything beyond the intense feeling of his flesh moving into the depths of my being.\n\nThere were no words for the pleasure of that moment, and I found myself eagerly kissing him as he filled me completely. That one grace of freedom was taken in full and I showed him with my lips and tongue all the depths of pleasure that I was feeling.\n\nJust as he'd taken his time to warm me up. His love making was equally restrained. His thrusts were deep and full as his hands roamed my flesh, caressing and squeezing, rubbing and pinching. His fingers would go from twisting a tender nipple to massaging my tender clit and then sliding back up my hips and waist.\n\nMy moans and gasps echoed around the room as he played my body like an instrument. I was finely tuned, and his touch was expert. He seemed to know just when to squeeze or rub or thrust to leave me quivering at the very edge of release without breaking through that final, wonderful tension.\n\nWhen I felt him reach down and then up, I was confused for a moment at the sudden tug at my wrists and ankles. Then it hit me. I was free! I barely wavered before I wrapped myself around him, pulling his flesh to mine.\n\n\"Fuck me! Oh god fuck me hard!\" I ground my hips against his cock. There was simply nothing I needed more than to feel him pounding into me, thrusting his hard shaft into my eager flesh.\n\nHe didn't say a thing, but he gave me exactly what I wanted. He pulled me tight, and we rutted like animals. Our pants and moans echoed around the room as I was lost to everything beyond the hammering pleasure of his cock inside me.\n\n\"Yes, oh, oh yes!\" I moaned when he buried himself inside me and pulled me tight. He ground against my clit and as his cock twitched inside me, I felt my own orgasm rip through me. It was shattering, and my whole body shook from the pleasure as I gripped at his back. My whole world dissolved into ecstasy, wrapped in his warmth and filled with his hardness.\n\nI panted with him as my breasts tingled and my pussy went numb from the feeling of raw pleasure. I was simply lost to the sensations, and even when he finally pulled away from me, I simply melted back onto the bed, unable to summon the strength to move for several minutes.\n\n\"You can remove the blindfold.\" He said after several minutes must have passed. \"The lesson is complete.\"\n\nI tossed to the side for a moment. With all the pleasure I'd forgotten I was still blindfolded and naked. I blushed a bit at realizing how exposed I was, but resisted the urge to cover myself. After all, he'd just had free reign over my body for much of the afternoon. It wasn't like there were any mysteries left for him. It was up to me if I was going to retain some dignity or not.\n\nI rolled over and sat on the edge of the bed for a moment and wondered just what I should do now. I was still hovering in a world brimming with warm pleasure.\n\n\"There is a shower through that door if you'd like. I'll be in my study.\" He nodded and stepped out. I wasn't sure if I should feel slighted or if he was simply deferring to my modesty. I decided it must be the later. I had noticed that he'd maintained a very clear decorum during the entire lesson, one of dominance and command, but fundamentally of respect as well. He'd promised to show me a different kind of pleasure, and I had to admit that he'd done just that.\n\nI decided to go for the shower. I didn't need to linger, and was soon standing in the door of his study, back in my comfortable outfit. I hadn't expected how comfortable it would feel to be back in a skirt, but after everything that had just happened, I welcomed the familiar feeling of clothes over my skin.\n\n\"Thank you.\" I smiled as I looked over to the professor as he worked on his electronics project. I really was grateful, I wasn't quite sure just how to say it beyond those simple words. It was grossly inadequate, but English didn't really have a demure way to express gratitude for having your brains fucked out.\n\n\"My pleasure, Miss Sterling.\" He turned back and returned my smile. \"You did very well with this first lesson, and if you're interested in continuing I would be pleased to see you return.\"\n\nI blushed a bit at that. I wasn't quite sure just how to take his directness. \"I'll have to think about it, but I just wanted to thank you for everything. I should probably be going.\"\n\n\"Of course.\" He nodded. \"I'll look forward to seeing you in class tomorrow.\"\n\nI pulled away from his door and showed myself out. It wasn't even dinner time yet, and I was still basking the afterglow from my first experience with a little bondage play. It had been kind of fun, I admitted to myself. If not for the fact that I'd be changed back to a guy in a few days I might have even considered going back. As it was, I was one challenge closer to becoming a Tau, and after what I'd been through so far, I was starting to look forward to the next kinky expedition.\n\nAfter all, if I was going to be a girl for only a week, there was no reason not to keep having this much fun!\n\nThe End (Part 2)"
    ],
    "authorname": "Farleven",
    "tags": [
        "gender bending",
        "fraternity",
        "magical change",
        "college",
        "pledge",
        "initiation",
        "sex games",
        "light bondage",
        "student teacher"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/pledging-tau-geta-delta-pt-02"
}