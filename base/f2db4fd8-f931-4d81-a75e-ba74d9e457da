{
    "title": "Two Hundred Dollars Ch. 07",
    "pages": [
        "169 Dollars\n\nBailey managed to avoid Kent for the rest of Thursday and on into Friday. She spent a lot of that time trying to figure out whether she cared about what had passed between them.\n\nBy Friday afternoon, after a great deal of deliberation, including the consultation of several online dictionaries while browsing in incognito mode, she had definitely decided that her actions in no way constituted prostitution.\n\nDespite this clarity, she avoided Kent, which didn't take too much work with his weird schedule keeping him in the lab into the early evening hours.\n\nWith everything buzzing around in her mind, she also decided to skip out on Friday. She knew she could have gone to visit him in the afternoon, or even the late evening, but his schedule had already made her squeeze three dollars into Thursday and she thought she deserved a break. That especially seemed true every time she remembered his twitching penis in her hand.\n\nBailey made sure to get to bed Friday night before Kent got home.\n\nLying in bed, she figured it shouldn't really bother her, all things considered. She'd almost always masturbated after and she'd assumed Kent did, too. Bailey had never pretended to herself that paying her debt with her ass cheeks didn't turn him on.\n\nNo, it didn't bother her, per se.\n\nBut it had changed things, somehow. The sexual undercurrent had crested, become different, and the undertow threatened to draw her under the waves into... another place. Every time she thought of that other place, her chest tightened and she had trouble swallowing. She would then remind herself to breathe again because nothing really pressed down upon her breast.\n\nSaturday afternoon, she slipped out of the apartment, deciding she needed to visit a library on campus so she could focus better on her next midterm.\n\n=============================\n\nKent breathed easier the moment he heard Bailey unlock her bedroom door. He practically deflated when she went up the stairs and left the apartment entirely.\n\nHe had no doubt she'd noticed his orgasm that time. He'd leaked right through his pants.\n\nBut she had driven that forward by turning her hand and clutching at his erection as he came, and that had made things even more confusing.\n\nWhat did she mean by that? Did she plan any of it?\n\nIt hadn't felt planned, not by anyone.\n\nTheir original design had focused on the whiteboard, a device which demonstrated she still had one hundred sixty nine dollars to pay him. The intention, clearly stated by Bailey, was to pay off this debt by offering her cheeks to his hand (and once, a wooden spoon).\n\nThat such would turn him on, they both took as a given.\n\nHe shook his head to clear his thoughts.\n\nJerking him off hadn't started out as part of the deal.\n\nBut she'd definitely bitten into his neck, driving him to spank her even harder with every count. He still had a mark where she'd sunk her teeth in. On top of that, she'd thrust into him to push him onward, and, once he'd started coming, she'd grabbed a hold tightly enough that his semen soaked through his boxer and sweatpants.\n\nOf course, she hadn't asked for extra money for that, had she?\n\nAll of which left him wondering, why had she done it?\n\n=============================\n\nOn a cold Saturday afternoon, Bailey gave up on studying and began to walk towards her apartment. She took an unnecessarily circuitous route, as if orbiting the house rather actually setting it as her destination.\n\nWe learned about orbital mechanics in Physics. It takes energy to get into an orbit, and it takes energy to come down out of it.\n\nShe remember the exception to that rule.\n\nUnless you can burn up in the atmosphere.\n\nIt took her a while to accept where her feet had actually decided to take her. With a grimace, she pulled out her phone and sent a text message.\n\n\"You home?\" she wrote.\n\n\"Studying. Yes.\" Laura wrote back.\n\n\"Can I come by?\"\n\n\"kk\"\n\nWhen she received the last message, she stood only a few doors down from her friend's place. Laura had it good, by some standards, living with parents within walking distance of the university. They couldn't afford a large house, but Laura had her own room in the basement and she never went hungry, so she counted her blessings.\n\n\"Come on in,\" Sarah Anderson waved Bailey through. She called out, \"Laura, your friend is here.\"\n\nLaura thumped up the stairs from the basement and stuck her head out of the open door. \"That was quick. You just texted.\"\n\n\"I was around,\" Bailey hesitated.\n\n\"You look cold, dear,\" Laura's mother observed. \"Would you like some tea?\"\n\n\"Oh, sure. Thanks, Mrs. Anderson.\"\n\nAt some point in the last couple of decades, children had stopped referring to adults with the prefixes \"Mr.\" and \"Mrs.\" throughout most of the country. The same could not be said for the state of Utah and, her parents having immigrated so recently, Laura had warned Bailey about this before her first visit.\n\nIt seemed to Bailey that Mrs. Anderson must have had a kettle of water ready because she had started pouring by the time Bailey had shed her boots and jacket.\n\n\"There you go, dear,\" the kindly woman said. \"You just sit tight and warm up. I'm on my way to run a few errands.\"\n\nLaura and Bailey sat at the kitchen table quietly, waiting until Laura's mother had left.\n\n\"You have an awful lot of pictures of Jesus,\" Bailey pointed out while collecting her thoughts.\n\n\"Yeah, well,\" Laura shrugged, \"We're Mormons. Technically.\"\n\nLaura waited.\n\n\"So,\" she leaned in closer to Bailey. \"How are things?\"\n\n\"Good,\" Bailey replied distantly. \"Just popped by school. Y'know, library. Studying. Books.\"\n\nBailey sipped her tea, not making eye contact.\n\n\"Normally we can talk about things,\" Laura observed. \"But we can't, and I think that's you. So you're having problems.\"\n\nBailey felt her cheeks flush.\n\n\"Things got... a little weird,\" Bailey volunteered, staring into her teacup and taking a sip.\n\nLaura nodded patiently. \"Things were already weird, though. All things considered.\"\n\nBailey raised her eyebrows but didn't look up.\n\n\"I mean,\" Laura went on casually, \"With the whole, 'paying a debt with spankings' and what not.\"\n\n\"Okay,\" Bailey rolled her eyes. \"A little weirder.\"\n\nLaura became very wary suddenly and sat up straight, \"Wait, he didn't.. make you do anything, did he?\"\n\n\"No, no,\" Bailey answered instantly. \"Not like that.\"\n\n\"But... 'weird'... regardless?\"\n\n\"Yeah,\" Bailey sucked in the left side of her lips and bit down.\n\nLaura waited a little longer. \"But you don't want to tell me how weird.\"\n\nBailey's eyes bugged out for a moment. What did she want to tell Laura?\n\n\"It's not dangerous or anything, okay?\" she managed to stammer out.\n\n\"Okay.\"\n\nShe looked Laura in the eyes.\n\n\"It's just made things a bit awkward.\"\n\n\"Awkward?\" Laura's eyebrows rose. \"You can take your pants off and crawl into a guy's lap, and yet there's something that can make you feel awkward around the guy?\"\n\nBailey shrugged and sipped her tea, not meeting Laura's eyes.\n\n\"And then you came here?\"\n\nThis time she looked up into Laura's eyes, knowing the pleading look she gave her friend.\n\n\"So-o-o,\" Laura concluded. \"How long has it been since The Awkwardness?\"\n\n\"Thursday.\"\n\nLaura nodded. \"And you've been avoiding him?\"\n\nBailey gave a roll of her eyes that meant, somehow, an affirmative.\n\n\"So, would it be less awkward if, perhaps,\" Laura paused dramatically, \"you had some company to break the ice?\"\n\nBailey sighed with relief, squeaking out, \"Yes, please.\"\n\nShe admitted to herself then why she had come, but it had taken a lot of Laura's digging for her to really understand why.\n\nAt least I didn't have to tell her what happened, she thought, followed by, although it can't be hard to figure out.\n\nTo her credit, Laura didn't appear the least bit haughty about it. She could have taken the moment to sneer or hold it over her friend, especially after making such a big deal out of not letting her drop by on her own. But Laura didn't appear to hold a grudge, instead leaning forward eagerly.\n\n\"I'll help out,\" Laura said. \"One on condition.\"\n\nBailey froze, wondering what her friend could possibly want.\n\n\"The Awkwardness happened on Thursday?\"\n\n\"Ye-es.\"\n\n\"When was the last time you did it before that?\"\n\n\"Monday.\"\n\n\"Alright,\" Laura firmed up her voice. \"You tell me how you did it Monday, so you don't have to tell me about the awkward thing, and I'll help you.\"\n\nBailey's breath caught in her throat. How much could she tell?\n\n\"I did three on Monday,\" she volunteered. \"No pants.\"\n\nLaura nodded. \"When on Monday? Morning, noon, night?\"\n\n\"All three.\"\n\n\"What?\"\n\n\"I, sort of, spent the whole day in my underwear,\" she couldn't meet Laura's eyes. \"And he just, got me whenever he wanted.\"\n\n\"Whoa,\" Laura's eyes brimmed with admiration as she steepled her fingers together. \"I want details on that.\"\n\nBailey embellished her account somewhat, judiciously editing out several parts, like the outdoor spanking, the two shots with the wooden spoon and the bit at the very end, where she had ground herself into Kent's lap.\n\nWhen she finished, Laura nodded in wide-eyed appreciation. It took almost a minute for her to collect her thoughts.\n\n\"Okay,\" she said, finishing her tea. \"Just walking over there for spankings won't cut it. We need a plan.\"\n\n\"A plan?\" Bailey wondered aloud.\n\n\"Yeah, Captain Obvious,\" Laura's voice filled with sarcasm. \"Something cool, and something to overcome this Awkwardness that you won't describe to me.\"\n\n\"Oh, okay,\" Bailey kept her voice flat.\n\n\"And the first step is those clothes,\" Laura waved a derogatory hand at Bailey's entire body.\n\n\"What's wrong with my clothes?\" Bailey felt indignation rise up in her voice.\n\n\"Nothing, nothing,\" Laura said. \"They're just -- except for the panties -- always the same.\"\n\n\"Oh.\"\n\n\"It's no biggee, though,\" Laura pointed. \"We're not exactly the same size, but I'm sure I have something, maybe from a couple years ago?\"\n\n=============================\n\nThey rehearsed their plan as they walked over.\n\n\"Why do we have to drink my alcohol?\" Bailey asked, shivering as they travelled the few blocks back to the apartment she shared with Kent.\n\n\"Do you know how hard it is to hide alcohol in my house?\" Laura replied. \"Besides. You're the one feeling awkward.\"\n\n\"And you're just along for the ride, I get it.\"\n\nBailey hugged her folded up blue jeans to her chest. She'd have preferred to get changed after she got home, given the air temperature after sunset, but they'd decided they didn't really have a choice. The architecture of the apartment gave her no way to get to her room -- or any room - to change without walking past Kent's door. And since Kent generally left his door open, that couldn't happen.\n\nSo she'd changed at Laura's and now had to walk home wearing her beige fall boots, her fall jacket and an emerald green, pleated skirt that went just past her knees.\n\n\"I don't wear skirts,\" she protested for the third time.\n\n\"So you've said. Repeatedly,\" Laura rolled her eyes.\n\nBailey looked at her friend, respecting her ability to pull off a skirt.\n\nSome people have the hips for that, or the walk for it, or the... whatever the hell I don't have... for it.\n\n\"You look fine,\" Laura soothed, as if detecting the envy in Bailey's thoughts.\n\nA cold breeze worked its way under the skirt, chilling its way up her thighs.\n\n\"Why couldn't I have the ankle-length skirt?\"\n\n\"Because you have the tiny waist,\" Laura explained. \"This one wouldn't fit you.\"\n\n\"Jesus Christ,\" Bailey cursed.\n\nLaura coughed uncomfortably. \"Do you really have to blaspheme like that?\"\n\nFor a brief moment, Bailey forgot every other trouble in her life.\n\n\"Are you kidding?\" she hugged her jeans closer. \"We're on our way to get spanked and get half-drunk and you think Jesus is going to care about words?\"\n\nLaura exhaled a snort through her nose, almost indignant.\n\n\"It's just... not right.\"\n\nBailey raised her eyebrows, but another breeze wiped out her expression of disbelief in place of another shiver.\n\n\"I hope this is worth it,\" she said as they rushed up her driveway.\n\nThe door had remained lock, probably, since she'd left. Bailey quickly unlocked it and waved Laura in before her. The warm air rushed up inside her skirt as she stepped into the apartment and swung the door closed behind her. In a second, the door was locked and the girls tiptoed down the stairs.\n\nWhen they reached the bottom, Bailey looked down the hallway. Kent still had his bedroom light on, but Carson's room and the kitchen stood dark in the distance. The living room hosted no one either.\n\n\"It's just us and Kent,\" Bailey whispered.\n\n\"You're sure?\" Laura asked warily.\n\n\"Sure.\"\n\n\"I'll wait here,\" Laura nodded and Bailey walked towards his door.\n\n=============================\n\nKent had heard the door open but otherwise tried to ignore what it might mean. Whoever had come in had used a key and otherwise stayed very quiet. He had no way to tell which of his roommates had just come home, but figured that Carson had no need for this level of stealth.\n\nIt had to be Bailey, and he could imagine only one reason for keeping the sounds of her entry so quiet: to avoid running into him.\n\nSo it came as quite a surprise when Bailey's cheery voice called out, \"Hey, Kent!\"\n\nHe turned his head with a twitch and looked in time to see her pass in the hallway, a flowing wave of shimmering green.\n\nBailey never flows, he thought, in the brief moment before she disappeared from view.\n\nAnd he could have sworn she'd not just flowed, but done so in some kind of shiny, dark green number that perfectly worked with her beige jacket and short, reddish hair.\n\nHis heart seemed to lurch to a stop in his chest. While Bailey seemed quite chipper, he still felt a chill under his clothes, a tremor in his hands, as he thought about their last, messy incident.\n\nWhat must Bailey think of me?\n\nEchoing down the hallway, he heard the sound of clinking glass. Bailey, it seemed, intended to have a drink.\n\nIs that how she plans to recover from this?\n\nHe didn't really like the idea of covering embarrassment with alcohol, nor did he like the idea that she might use drunkenness to go farther than she meant to go while sober. The thought of this did nothing to ease the heartbeat that fluttered irregularly in his chest.\n\nAs he considered this, his eyes betrayed him for a moment and he shook his head as movement came from the left side of his door instead of the right.\n\n=============================\n\nLaura timed it so she stepped into the doorway just as Bailey came in with her bottle of schnapps in one hand and three shot glasses in the other. In a testament to just how carefree she felt, Laura noted that Bailey held the little containers by sticking her fingers into them. She didn't pay attention to that, though, for her eyes were on Kent.\n\nShe caught her first glimpse of him the moment she peeked around the corner. He almost jumped out of his chair, which made sense given he hadn't expected her. But, before he even reacted, she could see the tension in his body in the bunch of his shoulders and the compression of his lips. His dark hair, normally somewhat neat, seemed slightly unkempt.\n\nEven as her friend swept by in a slightly ungainly stream of emerald fabric, Laura watched Kent's eyes attach hungrily, but without arousal, to her own eyes. His shoulders dropped. He exhaled. That body language could have signalled disappointment at Laura's presence, but she knew relief when she saw it. Kent greeted her happily as a bulwark against whatever had got itself between him and Bailey.\n\nSo, she thought, the Awkwardness flows both ways, does it?\n\nLaura followed Bailey into Kent's room, dimming the lights as she went, and Kent's eyes had already shifted to Bailey.\n\n\"Nice skirt,\" he complimented, his gaze taking in the boots and the short jacket she still wore.\n\nShe still felt stunned, despite the length brisk walk over, by Bailey's description of her personal way of celebrating Canadian Thanksgiving Day (which, she noted, she ought to just get over and start calling \"Thanksgiving Day\"). She couldn't imagine prancing around in her panties all day with somebody else in the apartment. Her parents just hadn't raised her that way, especially back in Utah when they still wore those extra garments under everything.\n\nLaura shook her head as Bailey had already laid out the shot glasses on the desk. She stepped past Kent, who had turned in his chair to watch Bailey, and leaned up against the bed, crossing her tall, black boots at the ankles.\n\n=============================\n\nKent adjusted his pants as subtly as he could, but he didn't pretend neither of the girls noticed. He watched as Bailey poured the amber liquid and Laura took a seat on his bed. She seemed to want everyone to see her boots.\n\nOn the other hand, while both girls had half unzipped their jackets, neither had actually removed her jacket.\n\nBailey held up the three shot glasses clutched together in her hands and held the first one out to Kent.\n\n\"First one's on me,\" she said, carefully avoiding any spillage. She looked Kent in the eye, \"Next one's on you.\"\n\nKent nodded as he took the glass and watched Bailey hand the other glass to Laura.\n\n\"What are we drinking to?\" Kent asked.\n\nLaura and Bailey looked at each other, and Laura spoke a heartbeat later, \"Bottoms up?\"\n\nKent laughed, but held up his glass.\n\n\"Bottoms up!\" they chorused and downed the sharp liquid.\n\n\"Ai-yi-yi!\" Laura slapped her forehead with the palm of her hand repeatedly. \"What do I normally shoot that doesn't burn like this?\"\n\n\"Creamy nonsense, probably,\" Bailey replied, shivering slightly as the alcohol ran through her.\n\nKent closed his eyes and inhaled deeply, knowing the alcohol would hit his blood in a few minutes.\n\n\"Long week, huh?\" Laura asked.\n\n\"He had a very large project, with some very stupid people,\" Bailey explained and turned to Kent. \"And whined about it like a baby.\"\n\n\"Those were very stupid people,\" Kent enunciated. \"Like trying to get monkeys to build a Lego set, but all they wanted to do was throw shit at each other.\"\n\n\"Excellent analogy,\" Laura closed her eyes and shook her head. \"Vivid use of imagery. A-plus.\"\n\n\"I'm feeling graded,\" Kent lowered his eyebrows and glared at her.\n\n\"You're feeling degraded?\" Bailey asked.\n\n\"Graded. Just graded.\"\n\n\"No, seriously,\" Laura slapped her shot glass down on Kent's desk and held up a threatening finger. \"You technical types usually suck with words... and talking.\"\n\nShe stood and peered off into the hallway. \"But imagine: a whole troop of chimpanzees surrounding a table with a pile of building blocks and a -\" she opened an imaginary book \"- sheet of instructions. And then they just start throwing poop at each other.\"\n\n\"Brilliant,\" she announced, leaning over toward Kent and padded him gently on the cheek.\n\n\"Hitting her pretty fast,\" Kent observed, starting to feel warmth in his body.\n\n\"Al-ways does,\" Bailey drawled out.\n\nLaura sat back down on the bed and folded her arms, defiantly declaring her sobriety.\n\n\"Are we going to start now?\" she asked.\n\n\"Fine,\" Bailey walked past Kent, took the marker and made one tick mark on the board.\n\n\"Just one?\" Kent asked.\n\n\"For now,\" Laura sang out.\n\n\"Are you sharing it?\" Kent wondered aloud.\n\n\"Basically,\" Bailey tilted her head. She held out her hand, signalling Laura to remove and hand over her beige scarf. Moving behind Kent, she placed it over his eyes. \"We're going to find hiding spots somewhere in the apartment.\"",
        "As Bailey tied the scarf behind Kent's head, Laura explained, \"You find us by touching us, you lift up our skirts and you...\"\n\n\"Spank us,\" Bailey firmed up the knot.\n\n\"When you get to five,\" Laura said. \"That's your dollar.\"\n\nKent exhaled. The scarf, made of some extremely fluffy material, didn't even allow him to cheat the way scarves normally did. He saw nothing at all, even looking straight downward past his nose. Lack of sight forced him to pay a lot more attention to what he heard. His skin tingled and he noticed every shuffle of their feet. He listened quietly as -- he supposed -- they finally discarded their jackets.\n\n\"Wa-ait,\" he warned.\n\n\"Hm?\" Bailey asked.\n\n\"The deal with taking off your pants -- or your skirt -- was the part where I see you, remember?\"\n\n\"Right,\" Bailey said. \"But when I was bare in the dark, you said it was five, remember?\"\n\n\"You had no panties on in the dark, and it was still five, remember? As if you still had them on?\"\n\n\"Oh,\" Bailey let out a short gasp of realization.\n\nKent got the vague sense that the girls were gesticulating to each other in some fierce, sign language based negotiation. He heard a whisper or two from behind him.\n\n\"Okay,\" Laura said. \"How many more do you think it should be, since you can't see us?\"\n\n\"Two more,\" Kent put as much firmness into his voice as he could, holding up two fingers that he couldn't see.\n\n\"How about,\" Bailey replied. \"Find us five times, then we'll let you do one more with the blindfold off?\"\n\n\"Deal,\" Kent answered.\n\nHe heard Laura's boots thump as she came off the bed.\n\n\"Oh,\" she paused after one stride. \"We gotta lose the boots or he'll hear us.\"\n\n\"Right,\" Bailey said.\n\n\"Full Ninja mode, then,\" Kent sat back in his chair and patiently listened to the girls stripping off their boots.\n\n\"Oh,\" he said, \"Don't go up the stairs, eh? I'm blind here.\"\n\n\"I wouldn't go up there anyway,\" Bailey said. \"In case Carson comes home. We also aren't using his room.\"\n\n\"Right.\"\n\n\"Okay,\" Laura said. \"We're ready.\"\n\nOne of them opened his bedroom door and he heard their stocking feet swish out of the room.\n\n\"Count to ten,\" Bailey said, then added sarcastically, \"Slowly.\"\n\nThe door closed and Kent began counting in his head, but realized he really ought to do it out loud, as if they were kids playing hide and seek.\n\n\"One, two, three,\" he pitched his voice to fill the apartment.\n\nHe wanted to make sure that not only could they hear it, but also that he drowned out the sound of them scurrying around the place.\n\nOnce he got to the end, he announced, \"Ready or not, here I come!\"\n\nHe slipped out of his room and listened carefully in the hallway. If either of them hid nearby, he couldn't hear her breathing. Kent used his hand to find the doorway into the bathroom and leaned his left ear into the space. He heard nothing.\n\nWith his left hand on the wall, he walked down the hallway and into the living room. In his head, he imagined the layout. He checked the nearest corners of the room first, then the back of the couch, feeling along it's edges to where it butted against the left wall. He moved around it to the right, worried the girls might move while he searched.\n\nWith his arms spread, he swept over the surface of the couch and the table in front of it at the same time. Walking carefully, he came around the side of the table toward the television.\n\n=============================\n\nLaura, trembling, watched Kent slowly sweep toward her. She'd thought about trying to move when he first came into the room, perhaps slide past him while he checked the corner behind the couch. But she'd found him too wary, and so stayed pinned in the corner standing with her face to the wall, pressing herself in as far as she could.\n\nWatching over her shoulder, she inhaled as his left hand snaked along the walked, hissing against the surface.\n\nHe paused, just a hand's span from her, and she saw a smile on his face.\n\nHe heard me breathe, she realized.\n\nKent's hand resumed moving, now with greater certainty, and met her elbow.\n\n\"Gotcha,\" he said.\n\n\"Okay,\" she acknowledged. \"Just don't smack your T.V. by accident.\"\n\nHiding in the corner next to the screen had not, she realized, been all that great an idea.\n\nKent reached down to the ankle length hem of her skirt and lifted it up.\n\nUp and up and up, Laura shivered as he bared her flesh. He couldn't see anything, but she could see her naked cheeks in the pale light from the hallway.\n\nI should have dropped my panties, she thought, this was a perfectly good chance to try that again.\n\nInstead, she pushed her hips back into his hand, telling herself she did it to keep his television safe.\n\nNo one can see this but me, Laura felt a chill go up her spine as he squeezed her left cheek. His fingers sank deep and hard into her and then released. She determined that she would watch the whole thing happen.\n\nHis hand reared back and she heard a squeak of trepidation escape her mouth a moment before that hand came cracking down, stinging her flesh and sending a harsh echo through the silence of the basement.\n\n\"One,\" she murmured, then louder, so Bailey could hear it, \"One!\"\n\n=============================\n\nA wave of satisfaction ran through Kent as his hand struck Laura's flesh. He'd worried that his ability to deliver a solid swat to their asses might falter under the blindfold. But the strike had felt good and Laura had gasped as if he'd done it right.\n\n\"Now what?\" he asked, releasing her skirt.\n\n\"Now I hide again,\" she said. \"You count.\"\n\nKent counted as she slipped away.\n\nWhen he'd finished, he swept out of the room, checking the end of the hall where it went up the stairway first, wondering if Bailey might hide right next to the stairs. Nothing met his hands. The little niche under the stairs proved empty as well, so he tried the bathroom next.\n\nHe waved his hands in the air over the toilet and counter top, making sure neither of the girls crouched on top, then checked the corner. He pushed the shower curtain out of the way and waved his hands over the space in the tub.\n\nSomething sounded wrong, though, like the tub didn't echo properly.\n\nKent realized suddenly what that meant.\n\nHe knelt down and reached into the tub and immediately ran his hands into a soft, velvet like material covering someone's skinny ass.\n\n\"Dammit,\" Bailey groaned.\n\nWith a quick groping scan, he realized she'd curled up in a ball at one end of the tub.\n\n\"Here,\" she said with resignation, and lifted her hips up into his hand.\n\nThat made it easy for Kent to pull up the soft fabric of her emerald green skirt and push it over her back. A quick caress of her cheeks told him that, first of all, she'd lain herself out left to right, making the spanking awkward for his right hand. Second, she'd worn a narrow pair of underwear for the occasion and he let his hand go back and forth across her ass before he settled on the farther away left cheek.\n\nA quick, hard snap cracked out across her cheek and Bailey hissed.\n\n\"Two!\" she called out loudly. \"Bastard.\"\n\nHe hadn't been able to get the most force on the slap because of the angle, but the way she'd bent her hips had more than compensated.\n\nKent listened to her crawl out of the tub and he counted to ten again so she could find a new hiding place.\n\nThe first place he had to check, he knew, was his own bedroom. One of them had to imagine herself very clever, thinking that doubling back would make a good place to hide.\n\n=============================\n\nBailey watched Kent enter his bedroom.\n\nDammit, why is he checking here?\n\nHe hadn't even paused in the hallway, just rushed directly at her as if he could smell her or something.\n\nShe realized instantly, by the speed of his progress, that Kent knew his own bedroom far better than the bathroom. She could only remain standing on the corner of his bed, up on her tiptoes, pushing her upper body into the ceiling.\n\nWatching him work his way toward her, she saw him check the far corner of his bed, nearer the desk where his head usually rested. He then went down on his knees to check the little bit of space in the corner of the floor between bed and desk.\n\nThis is my chance, she thought, and carefully stepped over, tiptoeing to the part of the bed he'd already examined.\n\nAs fortune had it, Kent stood up and moved around his bed, ignoring the spot where she now stood in favour of the part he hadn't checked.\n\nHis head turned side to side, though, as if he'd somehow felt her presence. He started to move back toward her, rechecking the corner.\n\nIn the hallway, Laura whispered by, moving into the bathroom.\n\nKent stopped suddenly and turned around, listening intently.\n\nHa! Bailey shouted triumphantly in her mind. She was too loud. He heard her!\n\nShe watched Kent, moving like a particularly intent ghost, glide across the room, through the hallway and back into the bathroom.\n\nLaura, realizing he'd marked her movement, stood in a frozen panic right in the middle of the small space.\n\nA moment later, Kent had her in his grasp.\n\nBailey watched as Laura turned her body to face the hallway. Their eyes met as Laura bent over and put her hands on her knees while Kent lifted her skirt up. From her vantage, Bailey couldn't see Kent squeezing Laura's cheeks, but she could hear the small moan it elicited and see how Laura closed her eyes.\n\nWhen did we all decide he got to grope us this much before the spankings? Bailey wondered, although it does seem kind of fair, since he's blind.\n\nDisregarding that, Laura's eyes opened the moment Kent's hand moved off her rear and locked with Bailey's eyes.\n\nKent's hand reared back and landed a mighty slap on Laura's right cheek.\n\nBailey gasped with delight at the same time Laura cried out in shock, \"Three!\"\n\nKent backed into the bathroom and covered his ears while he started counting to ten again. Laura ran off down the hall towards Bailey's room and the kitchen.\n\nI don't know if I'm safe here, Bailey thought, is he coming back?\n\nShe hesitated and, before she knew it, Kent had already counted to six. Bailey knew she had no chance of slipping past him in the hallway at that point, so she just stepped off the bed into the little corner between the bed and the desk and backed up as far as she could.\n\nUnbelievably, Kent came directly back into his bedroom, that magical nose of his leading him directly to her. He swept through the room in reverse order this time, first checking the top of the dresser, then the bed corner and catching her right on the hip on his way over to the desk.\n\n\"Dammit,\" she hissed. \"How did you even find me?\"\n\nKent let out a good imitation of a super villain laugh, a noise she'd not thought him capable of making, as she crawled out over his bed and then planted her feet on the floor so she could bend over the bed properly.\n\nHe followed this without difficulty and pulled her skirt up to expose her.\n\n\"Ready?\"\n\n\"Ye-es,\" she intoned angrily.\n\nHe let her have a solid slap on her right cheek and dropped her skirt back into place.\n\n\"Four!\" she shouted out.\n\n\"Ten more seconds,\" he warned her, and she darted off immediately.\n\nIn the hallway, she looked left and right. Knowing which way Laura had gone, and the thoroughness of Kent's searching, she basically had a fifty-fifty chance of taking the last spanking. Even if she went to the right, she'd have to see whether Laura had taken the kitchen or the bedroom, and then take the other.\n\nThat's still a fifty-fifty chance, based on which room Kent hits first.\n\nKeeping her sigh on the inside, Bailey went to the laundry room and developed a bold idea. The laundry machine itself rested under the stairs. Beside it, a small counter for sorting clothes ran the width of the small space. But, just above its surface, a small ledge supported several containers of mostly empty detergents and fabric softeners.\n\nActing on impulse, Bailey pulled herself up on the counter, turned to face the room and spread her legs across the small space. Her right foot rested on the laundry machine, while her left supported a smaller amount of her weight on the ledge, hidden behind several containers.\n\nKent finished counting his ten and she watched, from the ceiling, as he immediately went to recheck the bathroom.\n\nMoment of truth now, she thought, who is he going to catch?\n\nHe turned toward her, running his left hand along the wall, passing with a couple of steps of her, and going to the living room. Bailey wondered if she could jump down quickly and quietly enough. Her best chance now lay in moving somewhere else. Kent would surely check the laundry room next, the moment he left the living room.\n\nShe tried to shift her weight, but heard a squeak coming from the little ledge.\n\nDammit, did Kent hear that?\n\nHe evidently hadn't, for he finished his search of the living room and came out carefully and patiently, running his hands through the air next to the stairway. Bailey counted her blessings, because she'd considered hiding right in that corner, but Kent hadn't overlooked it.\n\nKent paused and inhaled deeply through his nose, his head turning left and right.\n\nShe watched him move then, taking another strange, deep breath.\n\nSon of a bitch, she thought, he is smelling us!\n\nBailey saw him start to move, coming toward her. She realized that, if his hands started waving around in the laundry room, he'd catch her skirt. Since she needed her right hand to brace herself against the railing of the stairway, she used her left to yank the front of her skirt up all the way to her chin, which served to lift the back of it above her waist.\n\nAt least that makes the air space safer, she thought, although he'd now be eye level with my crotch if he didn't have the blindfold.\n\nKent's hands ran along the side of the stairway and then over the laundry machine, but she'd tucked her right leg in so far back under the stairs that he missed it. His hand passed directly between her legs. Bailey held her breath, watching those hands scanning the air just inches away from her crotch. She felt herself wanting to pant, seeing how close he came to touching her. He swept the entire counter after that, touching several of the bottles on the ledge, but missing her ankle and foot which she'd hidden behind the bottles.\n\nA moment later, he finished his examination and went down the hall.\n\nBailey quietly exhaled in relief.\n\n=============================\n\nAs he passed his own room, Kent caught a stronger whiff of Laura's perfume.\n\nShe went down here somewhere.\n\nHe'd thought he had Bailey, having caught what he took for the distinct, floral scent of her deodorant, but all the cleaning products in the laundry had probably fooled him. One of them must have matched it too closely. He had Laura now, for sure. He skipped Bailey's bedroom, but kept his ears open in case she tried to slip out of there the way she'd tried to sneak into the bathroom behind his back.\n\nBut, no, the scent of her perfume ran stronger toward the kitchen. Unless they'd figured out how he tracked them, that had to be her hiding place.\n\nA cursory check of the kitchen found Laura curled up on the small amount of counter space the kitchen offered, squatting over the dish rack.\n\n\"Get down off there,\" Kent chided after he made contact with her thigh.\n\n\"Shoot,\" she said, and dismounted. \"Alright, let me have it.\"\n\nHe heard her moving around and picked up a strong, fresh waft of her perfume as she came down beside him. He had to find her body again so he could lift her skirt up and bare her ass. After a quick squeeze, he chose the left cheek and slapped her hard and low.\n\n\"Ow!,\" she shouted. \"Five.\"\n\nWith some relief, and feeling a flush of success, Kent pulled the scarf down from his eyes immediately. This quick action rewarded him with a brief glance at Laura's reddened cheeks, taut from her bent over position, threaded by a narrow pair of black panties.\n\nAfter dropping her skirt, Laura rubbed her cheeks. Kent noted that her sweater, a beige v-neck, fell past the waistline of her skirt, and covered a white blouse of some type underneath.\n\n\"Alright,\" she said. \"We're done with that.\"\n\nKent smirked and the two of them walked back down the hall to his room where Bailey already waited, wearing a black sweater over her velvety skirt.\n\nWhere was she hiding? he wondered.\n\n\"We're not quite done,\" Kent said. \"Someone owes me one more.\"\n\n\"Oh, right,\" Laura's eyes widened. \"That'll be me.\"\n\n\"Why you?\" Kent raised an eyebrow.\n\n\"Because I lost,\" Laura sighed and rolled her eyes. \"Three to two.\"\n\nKent puffed out an, \"Oh,\" then added, \"I didn't know it was a contest.\"\n\nShe turned her back on him, lifted up the front of her skirt far enough to put her hands on her bare knees, and waited.\n\n\"The last one is still a bare-ass spanking,\" Kent pointed out.\n\n\"Oh, yeah,\" Laura nodded, as if this was obvious, and her chin ticked at Bailey.\n\nHer friend came over and reached down to gather up her skirt until she revealed her cheeks.\n\n\"There ya go,\" Bailey's triumph sounded clearly in her voice as she held Laura's skirt. \"Spank away!\"\n\nBailey watched eagerly as he squeezed Laura's cheeks, first left, then right, then left again. Kent caught a smile on her face as he chose the left, and reared back his hand.\n\nHe struck with solid force, watching the undulation spread down her thigh.\n\nBailey let out an, \"Ooh!\" of admiration as Laura shouted out, \"Six!\"\n\nKent paused a moment after that, looking over Laura's cheeks, and was surprised to see that Bailey performed the same eager inspection.\n\n\"Alright, alright,\" Laura shoved Bailey away with her hips and let her skirt fall back over her cheeks. \"You won that one. No need to gloat over my butt.\"\n\nLaura turned around and sat on the bed while Bailey leaned up against the desk. Kent, standing in the middle of the room and folded his arms, looking at the two girls.\n\n\"Oh, not yet,\" Bailey glared back at him. \"You owe me a drink. Hell, you both owe me a drink.\"\n\n\"I don't buy alcohol,\" Laura's voice came back loaded with indignation. \"It's against my religion.\"\n\nThis forced a laugh from Kent as he went to his closet and pulled out his bottle of Crown.\n\n\"The hard stuff, eh?\" Bailey lined up the three glasses so he could pour three generous shots.\n\nThe girls took their glasses they clinked all three together.\n\n\"To victory!\" Bailey announced.\n\n\"Haha,\" Laura retorted, but it served as a good enough toast for all three of them to drink. \"What the hell!?\"\n\nLaura held her mouth open and gasped in horror before fanning her throat with her hand. Her voice stammered hoarsely before she hissed out, \"What was that?!\"\n\n\"The very finest whisky,\" Kent replied, slamming his glass down on his desk.\n\nBailey went first to the board to make a mark while Laura followed, still making faces regarding the taste in her mouth.\n\n\"Panties on or off?\" Bailey put her left hand on her hip and faced Laura.\n\n\"On,\" Laura retorted instantly, \"I told you-\"\n\n\"Uh-uh,\" Bailey waved a finger, \"Kent told me what you did when you came here. You have done it without panties before.\"\n\nLaura's eyes bugged out and she looked at Kent, \"Oh.\"\n\nKent shrugged in reply. \"Didn't know it was a secret at the time. Sorry.\"\n\nLaura inhaled and exhaled very slowly.\n\n\"That was different,\" she explained. \"It was just me and you and ...\"\n\nBailey waited patiently, her arms folded.\n\n\"Look,\" Laura started again, raising a finger in Bailey's face. \"It was different. He couldn't really, y'know, see me. Not the way we could see you that time.\"",
        "\"That's kind of true,\" Kent acknowledged.\n\nThe fact that Bailey weighed so little meant you could actually see space between her thighs, even if she kept them together. Laura, with her medium build, had taken her spankings standing nearly upright. For that reason, even without panties, he hadn't \"seen\" that much of her because her cheeks and thighs hid her genitals.\n\n\"Bailey bent over a lot more,\" Kent offered, avoiding all mention of the weight difference. \"That's why we saw a lot more of her.\"\n\nLaura and Bailey shared a glance. \"We're gonna bend over though, right?\" Laura pleaded. \"Pretty far?\"\n\nBailey sighed in dramatic disappointment, \"Fine. Panties on.\"\n\nHer friend replied with a sigh of relief.\n\n\"You could always take your panties off,\" Kent looked directly at Bailey. \"Nothing stopping you.\"\n\nWhile Bailey thought about this, Laura walked past him and stepped back into her boots. She handed Bailey hers, which the other girl slipped on without buckling. The girls shared another brief glance before Bailey made her decision.\n\n\"No, no,\" Bailey spoke airily and waved both hands over her head as she stood beside Laura at the bed. \"I don't want to embarrass her.\"\n\nKent met Bailey's eyes for a moment, thinking he'd missed something. He knew the girls must have had some serious conversations on the way over because of how thoroughly they had planned the hide and seek contest. That meant that they'd laid out this next bit as well, but never managed to clear up the matter of their underwear.\n\nOnce the two girls faced away from him, Bailey on the left, Laura on the right, he couldn't discern anything from their expressions.\n\n\"Ready?\" Laura asked, turning her head slightly to face Bailey.\n\nBailey nodded and the two of them unlatched their skirts.\n\n\"Three, two, one,\" Laura spoke sharply on the last count and both skirts slid down their legs into a pile on the ground around their booted feet.\n\nLaura, as Kent had already seen, wore a narrow-backed pair of black panties, neatly matching her boots. Bailey had chosen to wear a similar pair, black and lacy.\n\nWith considerable confidence, Bailey pushed down on Laura's shoulders to bend her over until Laura's breasts touched the bed. This surprised Kent a little. He'd expected, as before, that the girls would stand side by side for their spankings and he could go back and forth between their cheeks as he pleased.\n\nHe wondered what they had planned this time. Maybe they wanted him to do their asses one at a time? Kent had noticed how much enthusiasm Bailey had shown in watching him spank Laura.\n\nBut, no, the girls had another surprise coming.\n\nBailey climbed up on the bed, first putting her left knee beside Laura, then throwing her right leg over and planting her right knee on the other side so she straddled her friend. She then bent herself at the hips and brought her body down on top of Laura's.\n\nKent felt a gasp escape from his lungs.\n\n\"C'mon,\" Bailey looked over her left shoulder, \"Let's get going.\"\n\n\"Al-\" Kent stammered. \"Alright.\"\n\nThe manner is which they'd displayed themselves exaggerated the difference in their builds. With Bailey bending her hips almost doubled over, she'd drawn all the muscles in her cheeks taut, where Laura, of more reasonable frame, showed a lot more flesh and stretched it less.\n\nAlmost as if she sensed this, Laura went up on the toes of her long, black boots and arched her back down into the mattress. She looked around at him over her right shoulder, under Bailey's arm.\n\nIn a way, Kent felt glad for their panties. They made for a certain artistry in the way the curves of black fabric ran from Bailey's waist, over her cheeks, narrowing down to her crotch and widening again underneath her body where it touched Laura's panties, at which point the coloured fabric thinned and widened again. They looked like a two staged hourglass. The bare space of Laura's thighs made a nice break before the glossier black of her almost knee high boots. He approached and first touched Bailey's left cheek, eliciting a shiver.\n\n\"Is my hand cold?\" he asked, touching her right.\n\n\"Maybe a bit,\" Bailey defended.\n\n\"Laura,\" he asked, sliding his hand across both her cheeks.\n\n\"Ye-yeah,\" she stuttered.\n\n\"Are we ready?\" he asked.\n\n\"Yes,\" they chorused back.\n\nAlthough his hand lay on Bailey's left cheek at that point, he reared back and, seeing Bailey cringe in anticipation, decided to surprise Laura and struck her left instead.\n\n\"Ha!\" Laura cried out in shock. Her breath gasped out of her, perhaps from fear, perhaps from Bailey's weight on her back, and she said, \"One!\"\n\n\"It's 'seven',\" Bailey pointed out with a sigh. \"We went over this. Now it doesn't count.\"\n\nKent, busily rubbing circles on Laura's cheek, froze in shock.\n\n\"Doesn't... count?\" Laura giggled.\n\n\"You counted wrong,\" Bailey told her imperiously. \"You have to do it again.\"\n\n\"Oh,\" Laura sank down on her heels, but set herself up high again. \"Alright.\"\n\nKent whacked her left cheek once more.\n\n\"Seven,\" she enunciated clearly.\n\nHe whacked the same spot.\n\n\"Oh,\" Laura whimpered, \"He's doing that focused thing again. Eight.\"\n\n\"You want a nice red spot, don't you?\" Bailey asked.\n\nLaura whimpered in reply and Kent wondered once again what sorts of conversations the girls had when he wasn't around.\n\nHe switched to Bailey's left cheek, though, and hammered her twice there to shake her tense body.\n\n\"Nine, ten,\" she called out, one after the other.\n\nDown to Laura's left cheek, he gave her one more slap low and hard.\n\n\"Eleven,\" she panted.\n\n\"Twelve,\" Bailey called out, the instant he gave her another shot.\n\nKent stepped back a moment and looked at their cheeks. Their right sides stood bare and white, nearly untouched except for the one spanking they'd each taken during hide and seek. Their left sides both contained pinkish-red patches low where they sat -- Laura's much redder for the damage she'd taken.\n\n\"Finish up,\" Bailey scolded over her shoulder. \"This is uncomfortable.\"\n\nKent smirked and came to her again, hand on her left cheek. \"Count fast,\" he said.\n\nHe laid a hard slept on her left cheek, then her right.\n\nEven as she counted out, \"Thirteen. Fourteen!\", he struck at Laura's ass, right then left, completing the cycle.\n\n\"Fifteen!\" Laura cried out, \"Sixteen!\"\n\nBailey rolled off Laura's back, kicked off her boots, leaned against the wall to sit cross-legged on the bed, apparently passed the point of shame where the partial transparency of her panties went. Laura, still a little more conservative, turned herself over more gently and leaned against the bed with her booted ankles crossed.\n\n\"Well,\" Laura wiggled her butt trying to get comfortable. \"That was certainly something.\"\n\nBoth girls breathed heavily and Kent became very conscious of the way his erection strained in his shorts. He wondered if they planned more spankings, or if the festivities had reached their end. Given the way his last encounter had gone with Bailey, and their mutual embarrassment, he figured she would at least want to bolt.\n\nLaura closed her eyes and leaned her head back to look up at the ceiling, breathing deeply in a way that made him, for once, notice her breasts -- even through her shirt and sweater.\n\n\"This is uncomfortable,\" she said, and began unbuckling her boots, giving him a look down her shirt into her cleavage.\n\nWhen she finished, she laid herself sideways on the bed, her head to Kent's left so that her right cheek was down.\n\n\"Better now?\" Bailey asked, giving her some space.\n\n\"Yes,\" Laura giggled, looking at her bare cheek over her shoulder.\n\nBailey, still cross-legged, put her elbows on her knees and rested her chin in her hands. She raised an eyebrow at Kent and asked, \"Maybe she needs to cool off?\"\n\nKent laughed and Laura looked back and forth between them.\n\n\"What did I miss?\" Laura asked.\n\n\"Did you tell her about Thanksgiving?\" Kent asked.\n\n\"Some.\"\n\n\"What'd you do?\" Laura insisted.\n\n\"I was expecting him to spank me when he got back from groceries,\" Bailey said, \"But he put a bag of ice on my butt instead.\"\n\n\"It was funny, that's all,\" Kent said.\n\nLaura pursed her lips, but said nothing further, opting to rub her sore cheek with her hand.\n\n\"How are you sitting like that?\" she finally asked Bailey.\n\n\"Dunno,\" Bailey shrugged. \"I do this more often? You got spanked more just now?\"\n\nLaura rolled over on her back, twisting in place to avoid Bailey, and bent her left leg to keep the sore part of her cheek from touching the surface of the bed. A smile of contentment came across her face and she closed her eyes. Kent rolled his chair closer and slouched down so he could put his feet up on the same corner where Laura rested hers.\n\n\"So you spent all of Monday,\" Laura said dreamily, \"prancing around in your panties.\"\n\n\"Prancing around in all her panties,\" Kent said.\n\n\"What?\" Laura's eyes opened.\n\n\"I, uh, changed underwear every time,\" Bailey didn't meet anyone's eyes, but nodded toward the whiteboard. \"Hung up the ones I'd already worn over there.\"\n\n\"Oh,\" Laura said, and Kent caught the bare edge of envy in her voice. \"Show off.\"\n\n\"Yeah, it was a weird day,\" Bailey admitted. \"But it took care of three dollars for just 12 spankings.\"\n\nLaura hummed noncommittally in response and closed her eyes again, saying, \"I might do another one. But I'm afraid he might just go after the same spot again.\"\n\nKent started to speak, but paused when Bailey speared him with a glance over Laura's bare legs. He'd already won an extra spanking when Bailey had called out Laura for counting wrong, so he understood the virtue of shutting up at the right time.\n\n\"It's his dollar, after all,\" Bailey pointed out.\n\nLaura grumbled at this, but didn't argue. Kent, wondering what Bailey had planned, didn't argue either. As long as he had two half naked girls in his bedroom, he'd let it go.\n\n\"I still can't believe this is what a dollar gets you,\" Laura giggled. \"Honestly.\"\n\n\"We don't all live with our parents,\" Bailey shoved at Laura's hip defiantly.\n\n\"Do we look rich?\" Laura retorted. \"Have you seen our house?\"\n\nBailey looked up at Kent, \"There are a lot of pictures of Jesus in that place. A lot. Those can't be cheap.\"\n\n\"We should do this at my place sometime,\" Laura offered dreamily.\n\n\"Don't think I can handle the judgment,\" Bailey replied. She looked at Kent seriously, \"All those Messiahs staring at me.\"\n\nLaura rolled over a bit to the left, flashing her butt at Kent as she glared at Bailey.\n\n\"There aren't any in my bedroom.\"\n\n\"Which is why you're here getting spanked, I suppose?\" Bailey asked.\n\n\"Insufficient Jesus Error,\" Kent put in. \"Please try again.\"\n\n\"You computer nerds,\" Laura sighed and rolled over on her side again to face him.\n\n\"We make the world go round,\" Bailey said. \"If we wanted it easy, we'd enrol in... what do you take again?\"\n\nThe banter went on for a while like this, and eventually worked its way back to money.\n\n\"The point is,\" Laura said finally, staring up at the ceiling in exasperation, \"I don't have any more money than you do. That's why I'm lucky we live so close to the university.\"\n\n\"Fair enough,\" Bailey agreed. \"You're as poor as we are.\"\n\nLaura nodded.\n\n\"Okay, Kent,\" she turned her head toward him, \"How about we make a deal?\"\n\n\"I've been known to make deals,\" Kent agreed.\n\n\"I want to do one more for Bailey,\" she said and rolled over so she could rub her left cheek, \"But I want it on the right side, because the left is too sore.\"\n\n\"I see,\" Kent kept his voice noncommittal.\n\nUp to this point, any complaint about striking a particular part of their asses always meant he'd strike there more, not less. He'd basically assumed they used the whole \"protesting\" thing ironically.\n\n\"In exchange,\" Laura let her voice trail off suggestively, \"You can have six instead of five.\"\n\nKent paused thoughtfully, \"How many have you done on the left so far?\"\n\n\"Um, lessee,\" she started counting on her fingers, \"Two for hide and seek. One more because I lost the game. Then, counting the one that didn't count, five more. So, uh, eight, I guess.\"\n\n\"And how many on the right?\" Bailey put in.\n\n\"Well ... two.\"\n\n\"Alright,\" Kent said. \"Make it seven and I'll do them all on the right, so it gets even more than the left.\"\n\nLaura thought about this, glanced at Bailey, then tenderly touched her left cheek.\n\n\"You're going to do the same thing to my right, aren't you?\" Laura's voice sounded worried.\n\n\"It is my dollar.\"\n\n\"And you,\" she looked at Bailey, \"Are you doing one more?\"\n\n\"After you?\" Bailey confirmed with a sharp nod, \"Definitely.\"\n\nLaura grimaced, but stood up and walked past Kent to put her mark on the whiteboard.\n\n\"Um?\" she gestured to Kent.\n\n\"Yes?\"\n\n\"Over your lap?\"\n\n\"Ah,\" Kent said, and vacated his chair to take a spot on the bed.\n\nBailey grabbed Kent by both shoulders and pulled herself up onto her knees so she could watch from behind him as Laura crawled over Kent's lap.\n\n\"Do you remember what number we were at?\" Kent asked.\n\n\"We've done sixteen so far,\" she answered and took a deep breath.\n\n\"Right cheek,\" Kent confirmed.\n\n\"Right cheek.\"\n\n\"Wherever I want?\"\n\nLaura inhaled, replied, \"Yep\", and compressed her lips together, watching him.\n\nKent squeezed her left cheek first, checking on the sensitivity of her flesh there before moving to the right. He had concentrated all of his spankings on the lower part of her cheek, sensing that, somehow or other, the discomfort she would experience sitting down for the next two days would count as a mark of pride.\n\nHe spanked her on the right cheek, three times in rapid succession: high, middle and low.\n\n\"Seventeen, eighteen, nineteen!\" she moaned, wiggling her ass back and forth.\n\nKent squeezed her right cheek to steady her, then slapped her low again.\n\n\"Twenty,\" Laura waited breathlessly.\n\nTwo more hard strikes low.\n\n\"Twenty-one, twenty-two,\" she moaned again, then complained, \"He's going low again.\"\n\n\"Of course he is,\" Bailey said over Kent's shoulder. \"It's what you wanted.\"\n\nLaura pouted but did not issue a denial.\n\n\"Last one,\" Kent warned.\n\n\"Mm-hm,\" Laura nodded and turned her head to push her face into his pillow.\n\nKent struck hard at that same spot again, bringing out a nice crimson flush to match the left side. Laura, for her part, let out a long, hissing growl into the pillow. Her body heaved with panting for several seconds before she turned her head toward him and Bailey.\n\n\"Twenty-three,\" she squeaked out. \"Can I have that cold -- ice -- vegetable bag thing?\"\n\nBailey chortled, \"It's in the freezer. You want to get it or should I?\"\n\n\"I can do it,\" Laura said, carefully standing up.\n\n\"That is some nice redness,\" Kent admired.\n\n\"Hmph,\" Laura replied, but he caught a smile on her face before she turned away for the door.\n\n\"Not gonna put your skirt on?\" Bailey asked.\n\n\"You managed for a whole day,\" Laura replied, warily checking the hallway in both directions.\n\nAs Bailey moved to the whiteboard, they listened to Laura swish down the hallway rapidly, open the freezer and make her grab. She came back a moment later, pressing a small blue ice pack to her rear. Every time she touched herself, though, all the muscles in her legs tensed up, pushing her hips away from it.\n\n\"Hooo,\" she sang out. \"I'm not sure this is better.\"\n\nBailey murmured her agreement as she made her tick mark.\n\n\"Last one for tonight, Kent,\" she advised.\n\nKent nodded. \"How you want it?\"\n\nBailey took a deep breath and said, \"Something different.\"\n\nShe took a seat on the bed, facing him and Laura with her legs extended, feet side by side. With a glare at Laura and another deep breath, she rolled onto her back and pulled her legs up into the air. In the end, her legs -- and even her toes - pointed straight up at the ceiling and she kept her knees unbent to display the full length of her long, thin legs.\n\n\"Oh, my,\" Laura whispered, whether out of surprise at the position or because Bailey's panties had shifted enough to show a little bit of hair, Kent couldn't say.\n\nBailey did adjust her panties, though.\n\n\"Ready,\" she sang out.\n\n\"I can only get the underside of your cheeks from here,\" Kent crowed.\n\n\"I know.\"\n\n\"And that left side is already pretty red.\"\n\n\"If I were scared of you,\" Bailey snarked back, \"I wouldn't be here.\"\n\n\"Hunh,\" Laura let out another surprised breath as Kent laid his hand on the pinkish part of Bailey's left cheek.\n\nTo get a good angle, Kent had to put one leg up on the bed beside Bailey.\n\n\"Ready?\"\n\nBailey nodded and inhaled.\n\nKent slapped her cheek immediately.\n\n\"One!\" Bailey shouted in surprise, then, \"I mean, uh, twenty-four?\"\n\n\"That doesn't count,\" Laura chided.\n\nBailey frowned at Laura, but rolled her eyes and let out a sigh of resignation. Kent struck her cheek again.\n\n\"Twenty-four,\" Bailey glared at Laura.\n\nKent took a look at Bailey's cheeks, threaded as they were by her panties, and decided he didn't like the uneven look. He took a hard shot at the right cheek.\n\n\"Ah!\" she cried out in surprise. \"Twenty-five.\"\n\nHe slapped her twice more in rapid succession, getting the same spot on the right cheek, really the only spot he could get in the position she'd chosen.\n\n\"Twenty-six, twenty-seven,\" she hissed out the last word, still staring at him.\n\nKent took a moment to watch the way Bailey's chest rose and fell as she panted. Seeing the direction of his gaze, she too looked down at herself, took a deep breath and arched her back to thrust her breasts out.\n\nHe took that for a queue and spanked her right cheek one last time.\n\n\"Twenty-eight,\" she announced, and then let out a giant breath of relief.\n\nBailey rolled forward off the bed, stood back up and slowly lowered herself until her many-times abused cheeks just touched the bed sheets.\n\nShe let out a long slow breath as she let her weight shift onto that flesh, but she settled at last.\n\n\"That's five dollars,\" she said, a trace of satisfaction in her voice.\n\n\"At this rate,\" Kent pointed out, \"You could almost be done by Christmas.\"\n\n\"Oh, when Jesus was born,\" Bailey took a break from panting to point out helpfully.\n\n\"Thanks,\" Laura still gently shifted the ice pack from one cheek to the other while she stood in the centre of the room. \"I'm gonna go wash this off and put it back in your freezer.\"\n\nShe started to walk out into the hallway when she heard the door at the top of the stairway rattle as someone tried to come in.\n\n\"Oh, Christ,\" Laura cried out, then slapped her empty hand to her mouth.\n\n\"Now we have her blaspheming,\" Bailey said proudly as Laura closed the bedroom door.\n\nLaura's reddened face turned toward them, \"He could have caught me out there in my panties!\"\n\nKent laughed, seeing her face. Bailey laughed, having heard her curse.\n\n\"Well, put your skirt back on, then,\" Bailey said. \"And if you don't want to seem suspicious, open the door.\"\n\nWith a frustrated glare, Laura swept up her skirt at the same time Bailey did and the two girls redressed in a flash. Laura opened the door the moment she could and tried to stand casually next to the doorway while Bailey stayed leaned up against the bed and Kent sat in his chair.\n\nCarson came down the stairs heavily.\n\n\"Hey guys,\" he called down the hallway, \"What's up?\"\n\n\"Just drinking,\" Kent replied.\n\n\"Hi,\" Laura squeaked out.\n\n\"Hey,\" Carson replied to her. He took in the scene, but didn't look interested in joining. \"I'm gonna hit the sack. Try not to be too loud, eh?\"\n\n\"No problem,\" Kent answered.\n\nCarson disappeared with a nod and moved on down the hallway.\n\n\"I was done with being spanked anyway,\" Bailey said when Carson's door closed. \"It would probably wake him up.\"\n\nLaura giggled at this and handed the ice pack over to Bailey. \"You can take care of this?\"",
        "\"Sure.\"\n\n\"Good,\" Laura said firmly. \"Alright, I'm headed home. You guys, uh, let me know if you need me.\"\n\nLaura slipped into her boots and out of the apartment in an embarrassed rush.\n\n\"The night air will cool her ass off,\" Bailey observed.\n\n\"Probably,\" Kent asked. \"What about you?\"\n\n\"I'm fine.\"\n\nA short pause followed, in which two people maintained perfectly natural expressions on their faces.\n\n\"Yeah?\" Kent asked again.\n\n\"Yeah,\" Bailey said as she stood up and looked down on him. \"Good night, Kent.\"\n\n\"Good night, Bailey.\"\n\nIn a swish of emerald green skirt, Bailey left the room, closing the door behind her.\n\n=============================\n\nBack in her own room, Bailey dropped the skirt and went to sit on her bed. Facing the mirror, she rolled on her back as she had for the last set of spankings.\n\nI should have made him come in here, she thought, then I could have watched it in the mirror.\n\nBut she'd had way too much enthusiasm to wait any longer.\n\nAt least now she could see how she looked, with her panties tucked so tightly between her cheeks, and her ass so red everywhere. Unlike Laura, she savoured the feeling of her mistreated flesh taking on her weight. An ice pack would have ruined that.\n\nExamining her rear in the mirror, she went over the nights high points.\n\nShe'd beat Laura at hide and seek, and the part where she'd narrowly avoided him in the laundry room had gone perfectly. She'd even lifted Laura's skirt up, holding it out of the way while Kent took an extra shot at her.\n\nDelicious.\n\nAnd then stacking herself on top of Laura, stretching her muscles out as far as she could so her body wouldn't have any give when he spanked her?\n\nPerfect.\n\nShe had worried for a moment that Kent might accept Laura's request to choose which cheek to strike.\n\nHe has to know that deals like that come with a cost. It's only fair. We have rules.\n\nThey'd done that right.\n\nBailey rolled over on her back and jammed the hard corner of her pillow into her crotch. Catching Laura in a miscount had worked out, too. And when she saw the look on Kent's face, she knew she had to do the same thing.\n\nShe regretted only a little that Laura had caught her out. How much better to have Kent enforce the rule, demand an extra shot at her poor cheeks.\n\nAnd, once again, he'd surprised her at the end by pounding at her right cheek instead of just hammering at the left.\n\nAn artist instead of a brute, she thought, he wanted symmetry.\n\nBailey imagine her flesh as a canvas, painted by her roommate's hand. What else might he want to do? That brought thoughts to he mind of how he might use the wooden spoon on her again. How would that look?\n\nHer body raced ahead of her mind and she let out a moan of ecstasy as the pillow finally did its job on her clitoris, and the body racking seizures of her orgasm took her away.\n\nAuthor's note:\n\nBae was the least sure about this chapter as she's ever been, especially the hide-and-seek part, so your input on this one would be most welcome.\n\nThank you,\n\n@XavierTorch"
    ],
    "authorname": "xtorch",
    "tags": [
        "hide",
        "seek",
        "spank",
        "spanking",
        "masturbation",
        "strip",
        "stripping",
        "nudity",
        "payment",
        "exhibition"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/two-hundred-dollars-ch-07"
}