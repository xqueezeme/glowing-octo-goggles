{
    "title": "Little Star",
    "pages": [
        "Debbie stared off in a distance as she sat in the passenger seat of her husband's car. The ground was covered with snow that December in Wisconsin. Her body was in one place, but her mind was in another. Debbie and Travis drove in silence just listening to the sound of the car engine roaring away. \n\nOnce they arrived home, it was the same ritual. Travis would go and watch TV and Debbie would go to their bedroom and read. She'd managed to read over 75 books in the last six months. Reading was a way she escape her reality. \n\nIt was three days before Christmas, and she dreaded that more than anything. She'd forced herself to go to the mall a few times to buy gifts for her family but every time stepped in the mall, a few minutes later she'd run out crying. \n\nIt had been a painful six months. Thinking about everything that had happened, brought tears to her eyes. She was trying to get lost in one of her books, but instead she found her mind wandering. She was remembering last Christmas. Oh it had been a wonderful time. She could still hear the laughter of the children as they surrounded Debbie's father, George, who was dressed as Santa Clause. \n\nApril, her precious little girl was wearing her pink Barbie princess little dress. She was twirling around dancing and saying she was going to be an actress and be as beautiful as Barbie when she grew up. Debbie remembered the glow on her face. She looked like a little star full of life and hope. \n\nTravis' eyes showed so much emotion that day. His family as well as Debbie's family was all gathered together at their house celebrating Christmas. Debbie's nieces and nephews were playing with April. They all adored her since she was Debbie and Travis' only child. \n\nApril was that kind of little girl. She was charming, funny, and sweet as can be. Debbie and she were close as best friends. April had just turned eight in late November. She was getting to be more beautiful each day with her long, silky brown hair that she inherited from her mother and her amazing blue eyes that she got from her father. She was doing so well in school and in her ballet class. Everything was looking so good and Debbie was the happiest she'd ever been.\n\n\"Honey? Are you hungry? I was going to cook up some beef stew,\" Debbie opened her eyes hearing her husband's voice and realized she had tears running down her face.\n\n\"W-what? Oh I-I I'm not that hungry. You can go ahead and eat,\" She said weakly hoping Travis wouldn't ask her once again what was wrong. She was tried of everyone always asking her that. \n\nHe looked at her with sadness in his eyes. He wasn't that tall, being about 5'7\" and his shaggy blonde hair was getting long almost covering his eyes. \"Ok then. I'll have some ready for you whenever you want to come and eat.\" With that he walked out the room closing the door behind him. \n\nDebbie sighed and continued to try and concentrate on her reading. \n\n* * *\n\nIt was Christmas Eve morning and Debbie woke up feeling exhausted. She'd stayed up late reading while Travis had fallen asleep on the couch. She tried to feel happy, but it was no use. Christmas was going to be so hard on her she just felt like taking sleeping pills so she could sleep her way through the day without having to think of April. \n\n\"I miss you my little star,\" Debbie said looking up at the ceiling. She'd get up every morning and whisper the same thing as if she was talking to April. She smiled as she looked up as if she could see her daughter. Luckily she still had memories of her beautiful daughter to keep her going. Photos as well, lots of photos that were decorated with April's beautiful smile.\n\nDebbie got up and went to wash up. The house was silent as it had been for the last six months. She was already getting used to the quietness. She looked out the window and saw the white snow on the ground and the next-door children making a snowman. Quickly, she looked away not wanting to remember anything at the moment. \n\nAfter washing up and getting dressed, she went out into the living room and saw Travis fast asleep on the couch. He had the remote control in one hand and the TV was still on. He looked so peaceful asleep. It seemed that sleep was their only time to have peace. She took the remote from his hand and turned off the TV. She put the soft blanket that was almost falling off his body and covered him up. He was cold. The entire house was cold.\n\n\"I love you so much Travis. I really do,\" She whispered hoping he'd hear her. She ran her fingers through his hair and watched him sleep. He was all she had now and she had been feeling so guilty for not having paid much attention to him lately. It'd been months since they had last made love. She wanted him at times but the sad memories kept holding her back. He was a loving husband having had so much patience with her. \n\nHe had been in his own depression the last six months but somehow he seemed stronger than Debbie. He was the one comforting her and taking care of her. She appreciated him more than anything. \n\nDebbie went on and cleaned up a bit. She knew that tomorrow her family would be calling her or maybe they wouldn't. It seemed that they had become rather estranged after everything that happened. \n\n\"Daddy. I miss you. I forgive you Daddy. I love you,\" Debbie said these things in her mind but never managed to tell her father. She had wanted to pick up the phone and tell him how much she loved him for such a long time but she couldn't. She felt so strange even talking to her father.\n\nShe was about to start making coffee, when the telephone rang. She felt her heart stop for a minute but quickly ran to answer it so it wouldn't wake Travis up. \n\n\"Hello?\" She answered in a nervous tone.\n\n\"Debbie? Sweetie it's me,\" She heard her mother say.\n\nDebbie sighed. \"Hi momma.\"\n\n\"Hi. How are you doing? I haven't heard from you in a few days.\"\n\nDebbie stayed quiet. \n\n\"Debbie?\"\n\n\"Yes momma I'm sorry. I was distracted. I've been busy with work and all,\" she lied.\n\n\"Well tonight's Christmas Eve and we're having a family get together. I really hope you and Travis can make it.\"\n\nDebbie's heart sank. She knew she couldn't possibly make it. How could she be around all her brother's and sister's watching them be able to play with their children and she would be there without April? There was just no way she could handle that.\n\n\n\"I don't know if I can make it.\"\n\nHer mother was silent for a few seconds. \"Well I really hope you and Travis can make it. I really want you here and so does\u2026..so does your father,\" She said almost hesitant to say it. \n\nDebbie felt tears roll down her face. \"I'll think about it momma. I have to go but I'll call you later.\"\n\n\"Ok sweetheart. Please do call.\"\n\n\"I will.\" \n\nDebbie hung up the phone and sobbed softly. She wanted more than anything to see her family on Christmas Eve. It was a tradition that all family gets together at one house, sleep there and everyone wake up on Christmas morning together. It was a wonderful tradition that Debbie felt she couldn't handle. \n\n\"Debbie? Who was that?\" Debbie turned around almost startled by Travis' voice.\n\n\"Oh Travis! You scared me,\" she said wiping her tears.\n\n\"Honey?\"\n\nShe smiled weakly at him. \"It was just my mom. She was inviting us to go over tonight for the traditional Christmas get together.\"\n\nHis eyes searched hers. \"Are we going?\"\n\nShe nodded. \"No. At least I'm not.\"\n\nHe moved closer to his wife putting his arms around her. \"Well I'm not going if you're not going. I want to be with you.\"\n\nShe held him and fought back her tears. She knew she'd only worry him if she continued to cry. She'd cried so much that she felt as if her eyes would dry out.\n\n\"I think I want to stay home today. Let's just stay here. Me and you OK?\" She asked.\n\nTravis ran his hands through her hair. \"Yes honey. We'll stay here. Just the two of us.\"\n\n* * *\n\nThe couple spent the morning basically reading the newspaper and cleaning up the house. Debbie wanted to finish reading her book that she began to read the night before. Travis had informed her that he was going to visit his parents for a while that afternoon. Debbie felt somewhat relieved to have the house to herself. She enjoyed the time alone. It gave her time to think and to be able to talk to April without having Travis find her talking to herself and thinking that she'd lost her mind.\n\nShe got in her most comfortable sweat pants and sweater. She lay on her bed reading her book. It was a little past one in the afternoon and she could hear children playing outside. She kept trying to block out the laughter and screams of the children but she couldn't. Once again she found herself remembering April. \n\n\"Momma, my teacher thinks I'd make a good Claire for the nutcracker,\" April came home from ballet class one evening beaming with joy.\n\n\"Of course you would. You are a wonderful dancer sweetie!\" Debbie put her arms around her daughter. April looked so excited and she started to dance around the room. \n\n\"So is my little star going to audition for the nutcracker?\" Debbie asked smiling.\n\nApril was almost breathless and laughing. \"Yes I am. And I'm going to make it momma. I am.\"\n\nDebbie smiled remembering how excited April was and how lovely she looked on stage dancing around in her pink little ballet outfit. Everyone was so proud of her and Debbie knew that. \n\n\"I hope you're doing well my little star. You know this Christmas isn't going to be a real Christmas without you here,\" Debbie spoke out loud.\n\nShe put her book down and felt her eyes heavy. The sounds of the children playing outside slowly faded and she fell in a deep sleep. It seemed like only a few seconds passed and she felt a soft hand on her shoulder. \n\n\"Mom? Mom? Wake up!\" The sweet little voice said.\n\nDebbie woke up in shock to see her precious April standing there looking and smiling at her. Debbie blinked and couldn't speak. She was numb looking at her daughter. April was wearing a long white dress and a white ribbon held her hair up with dark curls hanging down. \n\n\"April?\" Debbie asked softly.\n\n\"Yes it's me momma. Why are you so sad?\"\n\n\"I'm sad because you're not here with me. I miss you so much!\" Debbie burst into tears. \n\nApril put her hand on her mother's face. \"I miss you too momma. I miss daddy too and grandpa. I miss you all. You have to understand it wasn't grandpa's fault. It was an accident momma.\"\n\nDebbie held her daughter's hand. She felt so warm. \"I know I was just upset. I was upset that you had to go.\"\n\n\"You need to talk to grandpa. You need to let him know that it's not his fault. He thinks it is but he's innocent.\"\n\nDebbie knew her father wasn't guilty and she felt awful for having yelled at him that day. It was early June and he was taking April fishing early one Sunday morning. It was still dark outside and the fog was heavy. They were driving and suddenly were hit by a truck that struck on the passenger side where April was. April died instantly and Debbie's father survived with a few minor injuries. \n\nDebbie screamed at her father for not being careful and how could he have let it happen. She yelled and went almost insane that day after discovering her daughter had passed away. She left her father in tears and had him feel guilty for something that wasn't his fault. \n\n\"Yes I know he is innocent, but I just feel I hurt him too much.\"\n\n\"Momma, please talk to him. I've talked to him a few times already and he knows it's not his fault but needs to hear it from you.\" April's blue eyes danced with anticipation\n\nDebbie raised herself off the bed and sat at the edge looking at her daughter. She was an angel. \"I will talk to him I promise. I wish things could be the way they used to be. I wish you were still here with us.\"\n\nApril beamed. \"I know I wish I was here too. But momma I'm in a really neat place. It's wonderful up there. The people are kind and I can play outside at night and not have to worry about anything bad happening to me. It's great!\"\n\nDebbie laughed. \"Oh you look so precious my little star.\" Debbie put her arms around her little angel. It was like heaven to be able to hold her again.\n\n\"This is a dream isn't it sweetie?\" Debbie asked her daughter.\n\nApril nodded. \"Yes it is but it's a way to let you know that I will always be around momma. And momma? Please talk to daddy. He needs you and you need him. He needs to know that you still love him and that he's important to you.\"\n\nDebbie wiped her own tears and nodded. \"Yes baby I will tell him. Anything for my little star.\"\n\nApril looked at her mother with love. \"I love you momma and I miss you so much. I know one day we'll be together again. You, daddy and me once again. I promise to visit you more often in your dreams.\"\n\n\"Yes please do. I love you so much honey and I want to be able to see you as much as I can. Even if it's just in my dreams.\"\n\nApril hugged her mother once again. \"I have to go now momma. I know you'll be OK. Maybe you can have another baby?\"\n\nDebbie blushed. \"No sweetie I can't. I'm 43 years old and I had a hard enough time trying to conceive you. After you were born the doctors said it was going to be impossible to have another child.\"\n\nApril shrugged. \"You can't trust doctors all the time momma.\"\n\nDebbie kissed her daughter on her cheek and stroked her pretty face. \"You'll always be my little star. My everything. I'll never stop thinking about you.\"\n\nApril kissed her mother back. \" I won't stop looking after you momma and make sure that you and everyone else is ok. Goodbye momma. I'll see you again in another dream.\"\n\nDebbie cried now with a smile on her face. \"Goodbye my love. Take care. I love you.\"\n\nShe watched April disappear slowly until she was completely invisible. She took a deep breath and opened her eyes. It was almost 3 that afternoon. She got up immediately and changed. She knew what she had to do.\n\n* * * \n\n\"Debbie? Debbie are you home?\" Travis called out as he walked in the house.\n\nIt was quiet. A little too quiet. His heart pounded with fear hoping Debbie hadn't done anything to herself like she had tried to after April passed away. He heard a small sound and saw Debbie standing there wearing a beautiful long green velvet dress. Her long brown hair was pinned up with curls dangling from the sides. Her brown eyes sparkled with joy. His mouth dropped open.\n\n\"Debbie?\" He asked almost unsure if that was his wife.\n\n\"Yes it's me. Travis I want to go over to my parents tonight.\"\n\nHe grinned and walked over to her putting his arms around her. \"You look beautiful honey.\"\n\nShe kissed his lips softly. \"Travis I'm ready to start over again. Life goes on and I can't be this way forever.\"\n\nHe felt like crying not of sadness but of joy. He had his wife back again. That's what he always wanted. \n\n\"Well get dressed honey. We got a Christmas get together to go to,\" Debbie said happily. \n\nTravis nodded and rushed to go get dressed. \n\n* * * \n\nGeorge was sitting in the living room reading his grandkids a book when he heard a car pull up. His heart raced and he felt so nervous. His wife, Sara looked out the window and her eyes widened. \n\n\"She's here!\" She shrilled.\n\nGeorge put the book down and everyone rushed to the door to greet Travis and Debbie. He got up and waited until everyone cleared the way so he could talk to his daughter. Debbie's eyes met with her father's. Everyone stayed silent and she just put her arms around him and they both cried together. \n\n\"I love you daddy. I love you so much and I'm sorry for everything I said,\" Debbie cried. \n\n\"I love you too honey. I'm glad you're here,\" George sobbed. \n\nEveryone got teary eyed but felt so much joy. They sat around remembering April and laughing at all the wacky things she did. They celebrated Christmas Eve as a family once again. \n\n* * * \n\n\"I love you Travis. I'm so happy to have you as my husband,\" Debbie whispered as they lay in bed together that night. They had to be quiet since everyone else was fast asleep in the other bedrooms. Debbie and Travis lay together in a small bed holding each other.\n\n\"Debbie I've missed you. I've missed seeing you smile and hearing you laugh,\" Travis said kissing his wife's lips.\n\n\"Merry Christmas darlin',\" Debbie said softly.\n\nTravis traced his finger on her lips. \"Merry Christmas honey.\"\n\nDebbie put his hand on her heart. \"See how you get me. My heart is racing and it's because of you.\"\n\nTravis felt himself blush. \"I want to make love to you.\"\n\nDebbie touched his face and kissed him. \"Please do.\"\n\nThey made love that night and little did they know that a miracle happened. They created another little star. "
    ],
    "authorname": "jessy19",
    "tags": [
        "ballet class",
        "love debbie",
        "debbie sighed",
        "cried love",
        "debbie put",
        "asleep couch",
        "april looked",
        "debbie knew",
        "put book"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/little-star"
}