{
    "title": "Traditions Ch. 03",
    "pages": [
        "Hey guys. I am SO SORRY about leaving you guys high and dry. I was trying hard to find an editor for my story, but you know how it is sometimes, life just keeps you busy. So I've decided to just submit this one in as it is. You'll find some typos and errors, but like I said, it's hard to find an editor with time to spare. \n\nI do want to thank you guys for your great comments and support. I have really been taking them to heart. Hopefully this chapter will hold you over until the next installment. \n\nI would like to warn some of you that there is one part in the story that might seem strange to you. Declan, at one point, talks about one of his former love interests that is extremely young for him. In the Traveler culture, girls tend to marry young with older husbands (although probably not as old as Declan). However, I will say that nothing sexual has happened between them and nothing is hinted about it either in later chapters. I repeat, NOTHING sexual happened. \n\nAnyway, I hope you guys enjoy it. Keep the comments coming, there like crack to me. Chapter four is coming soon!\n\n\n\n\nDeclan was sitting on the couch with his father, watching the game on TV. The twins were occupying themselves, Joanne with her dolls and Patrick with his monster trucks. It had been a couple days since he had really spent any quality time with his family. Seeing how hard he had been working, Fergus had given him the next two days off to just relax. Sitting at home on the couch, Declan was doing just that.\n\n\"Oy, Margret,\" his father yelled toward the kitchen, \"could ya grab a couple of cold ones for me and Declan over har.\"\n\nDeclan heard a door open and close before he saw his mother walk around the couch with two beers in her hand.\n\n\"I swear, I married one lazy man and raised another.\" She jokingly smiled at them.\n\n\"Eh, but you love us all da same.\" He reached for the beer in his mother's hand.\n\n\"Well, of course I do.\" She walked over and handed her husband the beer before sitting on the arm of the couch. \"I got ta be loved and taken care of by two of da best men in the world.\" Margret rapped one of her arms around Ducky's broad shoulders. \n\nDeclan had those same shoulders, broad and powerful. He and his father were pretty much built the same way, tall and heavily built. Upon first seeing them, most people thought he and his dad were exact replicas of each other. But once you got past Ducky's swollen boxer face, you wouldn't see much of a resemblance. Declan looked more like his mother in that regard. Both of them shared the same high cheek bones and green eyes. His mother was a real beauty, even though age had begun to creep up on her. Declan could start to see a bit of grey growing on the sides of her black hair.\n\n\"How's the game?\" She asked.\n\n\"Uhh,\" Ducky grumbled. \"It's the kids these days. None of them know how to play. Patrick could do better than they can.\"\n\nHearing his name, Patrick lifted his head and gave them his toothless grin. \"I'd beat them all, too.\"\n\nDucky clapped his hands and laughed at his eight year old son. \"I bet you would, my boy. I bet you would.\"\n\n\"Don't encourage him like dat.\" Margret playfully hit her husband's shoulder. \"I already have one boy ta worry about.\" She said, inclining her head towards Declan.\n\n\"Oh you ain't got no'ting to worry about. We were just talking about sports. That aint no'ting compared to being in the ring. Declan's tough as nails when it comes to fighting. That's pure talent he's got. That thar is what's gona take him to the Championships, and I'm gona be sitting here watching him on TV and cheering him on when it happens.\"\n\n\"I've got ta make it past the semi-finals first, dad.\"\n\n\"You will. I know you will.\" Ducky lightly patted his wife on the ass. \"Why don't you go whip us up a couple of sandwiches for us?\"\n\n\"Of course dear.\" Leaning down, she kissed her husband sweetly on the mouth before standing and heading toward the kitchen. Declan smiled as he watched her walk away. He had always admired the simple love his parents had had.\n\nUnconsciously, his hand began fingering the phone next to his knee. It had been about a week and a half since he had last seen Cheyanne at the caf\u00e9. They had exchanged numbers before they parted ways, each promising they'd contact the other when enough time became available. Three days past, then another, then seven, and here it is, a Tuesday, eleven days later without even a word from the other. \n\nDeclan wasn't really bothered by the lack of communication between the two of them. They had each agreed to contact the other when enough time had cleared up on their schedule to hang out. Their agreement did not require that they text or call one another in between that time. No one needed to check up and see how the other was doing. No sir that was not the type of relationship they had. Then again, if that wasn't the type of relationship they had, what did they have?\n\nDeclan quickly scolded himself for even thinking such a thing. They didn't have anything. She herself had even said that they shouldn't try to put a label on anything. So why was he sitting here getting all worked up about it. It's not like she was anything special. As far as he was concerned she was just some girl; some girl he had sat down and had lunch with, some girl who he had told more than one Traveler secret too. Damn it. None of these stupid thoughts had even bothered to occupy his mind until he saw his parents together. Why would seeing the two of them bring up thoughts about Cheyanne?\n\nTurning his phone over, he clicked on an icon and opened up a new text message. His thumb hesitantly hovered over the first letter when Darcy decided to march into the front room.\n\n\"Hey daddy. Hey Dec.\" she plopped herself next to her brother. \"How's the game?\"\n\nDeclan looked at his eighteen year old sister and sighed. Just like him, Darcy favored there mother, relatively short and curvy. She did, however, have a longer face then the rest of the McCarthy children, a face that she got from her dad. Over the years she had gone from a skinny freckle faced girl to a full figured young woman, and the result scared him. Many boys had begun noticing her more, and Declan had had to chase off quite of few of them. Right now she was wearing a tight white tank top with lime green shorts. \n\n\"Fine.\"\n\n\"Who ya texting?\" She casually leaned over and tried to get a better look.\n\nDeclan quickly locked his phone and shoved it in the front pocket of his jeans. \"None of yar business.\" \n\nDarcy huffed and flipped her black hair over her shoulder. \"I was only asking.\"\n\n\"Like I said, it's none of yar business.\" He turned back to the TV. \"Mom's in the kitchen, shouldn't you be helping her with something.\"\n\n\"Yes, but I have a question to ask you first.\" Angling her body towards him, she leaned in a little and placed her chin on his shoulder. \"George Anne is gona have this big party for her sixteenth birthday and I was wondering if you'd be willing to come wit me.\"\n\n\"Isn't her birthday in February? Why are you asking me now?\" he asked, still concentrating on the game.\n\n\"It is. She just wants to plan ahead so all the preparations can be done on time. She's planning to make it a Valentine's Day, winter wonderland theme. I'm helping her plan it, and it would really suck if I ended up not going to the party after putting some much work into it.\"\n\n\"What did Da say?\" The only reason he asked was because most Traveler girls weren't allowed to go anywhere without having permission first. He didn't want to her to go to a party, only to find out later that she was forbidden to go. That would mean he'd be getting the brunt of the yelling.\n\n\"He said I'd be able to go as long as I had a chaperone, which is why I need you to take me. If you say no, I'll be missing out on the greatest party of the year.\"\n\n\"There will always be another party Darcy.\" He said simply.\n\n\"Oh, please Dec, just take me. I promise I won't bother yous once we get there. I'll even leave an extra hour early if ya get to bored, and afterwards you can take me back home and go anywhere you want.\"\n\n\"I can go anywhere I want regardless. You forget, I don'a live here anymore.\"\n\n\"You still live on the plot, stupid. Just because you've got yar own camper doesn't mean you can ignore the fact your only ten feet away.\"\n\n\"Did it ever occur to you that I moved those ten feet to get away from you.\" He said simply, turning to give her a disinterested look.\n\n\"Please Declan, just take me to this party. It will be the one everyone talks about, and I'll just die if I can't go.\" Looking at her brother's unwavering face, Darcy sighed. \"You know George Anne really wants you to go.\"\n\nDarcy almost laughed as she watched a deep frown mar her brother's face. \"Why are you looking like that?\"\n\n\"If ya seriously thought tha she would have been enough to tempt me to go to tha stupid party, yar crazy.\"\n\n\"What? I thought ya liked her. She even told me that yous two were talking.\" Darcy moved her eyebrows a little as if she was hinting towards some big secret of his.\n\nDeclan just rolled his eyes. Yeah, he had tried talking to her at one point. Somewhere down the road last year, he had got it in his head that he should try settling down with a nice girl, and had set his eyes on George Anne. He learned quickly how big of a mistake that was. \n\nThis girl had turned him off in more ways than one. She had wound up being one of those attention seekers, and would always whine and bitch to him whenever he didn't cater to her beck and call. She was still a child, and wasn't ready to be in a steady relationship. She still needed time to learn her place a as a woman and how Traveler couples worked. From that experience, Declan realized he wasn't ready for a relationship either.\n\n\"I tolerated her. There is a difference.\"\n\n\"Fine.\" Darcy huffed and crossed her arms. This was going to be harder then she thought.\n\nSuddenly an evil smirk crossed her face. \"Ya knows what, its fine. I'll find some other party to go to. Ya know...I think one of yar friends might be having a party before then anyway.\"\n\nDeclan's interest peaked. \"What friend?\"\n\nShe ignored him. \"Yeah, I think it might be a New Year's party. That should be fun.\"\n\n\"What friend, Darcy?\"\n\nShe turned to her brother and smiled. \"Um...I think his name was...Jagger.\"\n\nDarcy tried hard not to laugh at the angry expression on her brother's face. Immediately his cheeks became red, and his jaw became tense. He began to look much like their father would whenever his anger flared. Both of them had the same quick temper, and were easily annoyed by anything.\n\n\"Are ya out of yar fuc-,\" he caught himself and quieted his voice. \"Are you crazy? Dad is sitting right over there. If he hears ya talking about a boy like that, he'd beat yar arse til it bleeds red. Don't think he won't. And if you think I'd let you get near that son of a bitch, ya must be out of yar damn mind. The second I tell dad about what a cunt this guy is, he won't even hesitant to forbid you from seeing him. So don't even bother trying to work up the courage to ask him to go to that stupid party.\"\n\n\"God, Declan, would you relax.\" She looked down at her siblings and then at her father to make sure no one had heard her brother's whispered rant. \"George Anne and her mother are going out of town that week to try and see if they could find a dressmaker for the party. Now, they did ask me to go wit them, but if I'm not going to be attending the party I guess...\"\n\nDeclan could see where his sister was hinting at. Damn her. He didn't want to go to some frilly party. He had past that stage in his life where these types of celebrations were entertaining. But he'd be damned if he let his baby sister anywhere near that asshole.\n\n\"I'll take you.\" Darcy squealed and raped her arms around him. \"But don't expect me to stay there the entire time. If I go, you go.\"\n\n\"Oh, thank you, thank you, thank you, you're the best brother ever.\"\n\n\"Whatever,\" he detangled himself from her grip and push her off. \"Now go help mom in the kitchen.\n\nShe kissed her brother on the cheek before popping up and heading toward the kitchen. \n\n\"And you need to learn how to act when a man says no ta ya.\"\n\n\"Maybe when I'm married.\" She said over her shoulder before she disappeared.\n\nMarried. Ha. He couldn't even imagine his sister as a married woman. She had a bit more fire in her then most guys would like, and that had proven to her disadvantage. Most girls her age would have been married by now, or at least engaged. He wasn't worried though. She still had all the time in the world to find a husband, and he wasn't too keen on the idea of having her married off just yet. To him, she was still his baby sister.\n\nThinking about his sister dating brought to mind his own current situation. Sticking his phone in his pocket, he brought out his phone and stared at the screen. \n\n*****\n\nCheyanne sighed and stared down at her Chemistry homework. She had been staring down at the same equation for the past ten minutes and still couldn't quite figure out what it meant. It was safe to say at this point that chemistry was not her best subject. \n\nThrowing down her pencil in frustration, she pushed her books away in fell backwards onto her pillow. She knew that she would get it eventually. She was a smart girl and she wouldn't stop until she got it right. She was just upset that it wasn't coming to her as easily as it was to some of the other students. \n\nCheyanne had always been a great student. She had graduated from her high school with honors and had gotten into the University of Liverpool with an academic scholarship. Most of her frustration, however, wasn't brought on by her schoolwork. It all stemmed from the fact that she didn't know what she was going to use her broad education for. The few friends she had back home all had their lives planned out by their junior year of high school. Here it was, her first year of college, and she still had no idea what she wanted to do with her life.\n\nCheyanne knew that a lot of people went into their first year with no set major in mind, and that she was no different. But she would have thought that she would have at least found a subject she was interested in. Even Hannah knew what she wanted to major in. Fashion. Go figure. \n\nAll she knew was that she wanted to get the most out of life. Even though she lived in a big, thriving city like Dallas, she had never traveled anywhere else. When the university offered her a scholarship, she jumped at the chance to study abroad. She wanted to see more of the world. Maybe she'd find a job that allowed her to travel internationally. \n\nA humming noise coming from her desk jolted Cheyanne out of her thoughts. Sitting up on her elbow, she reached over and grabbed her phone. She pulled back a bit when she realized who the text was from. Declan.\n\nHi.\n\nThe simple message surprised her a little. He hadn't bothered to contact her in the days that followed there strange lunch date together. She had pretty much given up on the idea that he would even bother trying to see her again. She wasn't exactly saddened by his silence, but she had been a little disappointed when more than a week had past and she still hadn't heard from him.\n\nShe sent back a small greeting.\n\nHey.\n\nA few seconds later she received a response.\n\nHow u been?\n\nFine...u? She texted back.\n\nPretty well.\n\nOkay where was this conversation going, she thought to herself. \n\nThat's good. She sent back to him.\n\nWhat r u doin?\n\nNothin.\n\nA minute past before the next text came.\n\nYou want to see a movie 2 nite?\n\nWhoa. Cheyenne was not expecting that. This just came out of left field.\n\nHow do u know I don't hav plans? She asked him.\n\nA couple more minutes past before the next text came.\n\nCuz the last time we talked, u said havin lunch wit me was the most fun u had since uve been here. Correct me if I'm wrong, but if lunch was the most exciting thing uve done then u must not get out much.\n\nCheyanne was almost shocked. It was like he was reading her mind or something. How does he know these things about her? Was she just easy to read?\n\nHer cell phone vibrated in her hand.\n\nI'm I wrong? It read.\n\nReluctantly, she texted back. No.\n\nThen come out wit me.\n\nShe didn't respond immediately. She was a little skeptical about agreeing to it. True, she was the one who had suggested they go out again, but that was before he ignored her for a week. Then again, she didn't try to contact him either. \n\nGrunting she smacks herself on the forehead. This was ridiculous. She was acting like a fourteen year old. She had put herself out there when she asked for another opportunity to see him. Now that opportunity had arisen, and she was second guessing herself. She wasn't one to punk out, and she wasn't going to start now.\n\nOkay.\n\nA few seconds later she got a text. I'll pick u up at that caf\u00e9 we were at round 7.\n\nI'll be there. She sent.\n\nGetting up from her bed, she started to remove her work and place them back on her desk. She started to head toward her closet to pick out her outfit when her phone vibrated again. Picking her phone back up, she read the text.\n\nI'm lookin forward to it.\n\n*****\n\nCheyanne waited patiently outside the small caf\u00e9. It was seven o-six, and the sun had just started to dim, creating a soft orange glow across sky. She had spent a little more time fretting over her outfit then she normally would have, but eventually came to a sound conclusion. Since they were just going to see a movie, she figured casual was in order. She picked out one of her favorite sun dresses, with a blue and white floral print that came down to her knees. The colors went great with caramel her skin tone, and she completed the outfit with some honey colored boots and a light jean jacket.\n\nShe fiddled with her hair, which she had put in a ponytail, and prayed that it would behave while she went out. She was so nervous, even though she knew there was no reason for her to be. It wasn't officially a date, but just the prospect of seeing him again gave her goose bumps. \n\nIt was now seven fifteen, and the light was starting to darken more. It was probably better for her to wait inside since it looked like he would be running a little late. Just as she was turning to enter the building, an old grey pick up saddled up next to the sidewalk in front of her. The engine shut off and a tall figure stepped out of the driver's side.\n\n\"Sorry I'ma bit late.\" Declan said as he approached her. \"I was havin a bit of trouble ge'ting my car ta start.\"\n\n\"Oh, no that's okay. I wasn't waiting long.\"\n\n\"Good.\" He gave her a crooked smile and stared at her for a moment. \"Ya look nice.\"\n\n\"Thank you. You look nice, too.\" Boy did he look nice. He had dressed himself in ripped jeans and a simple button down shirt over a black wife beater. The black jacket he wore was made out of some tuff material and looked kind of heavy, but on him, it just made him look gruff and sexy.\n\nCheyanne had to catch herself from staring to long. \"Well, shall we?\"\n\nDeclan stepped back an extended his arm to the truck. \"Yar carriage awaits.\"\n\nShe smiled and walked with him around the truck. Opening the car door, he made sure she got into the car and was secure before heading around to the driver's side.\n\n\"Now I've got ta warn ya,\" he began while buckling himself, \"the truck here's a little old. It might cry and cuss at us along tha way, but I promise it will get us where were going.\"\n\nShe was a little skeptical. \"How old is it?\"\n\n\"Uh, well the owner I bought it from had it about fourteen years before me, and he had bought it used so...pretty old. But I promise dis t'ing is like a tank. Hasn't failed me yet.\"\n\nWell that was comforting.\n\nThe two of them road across town for few minutes, barely speaking a word to each other. Neither of them could think of anything interesting to say, and there wasn't anything interesting that either of them wanted to talk about. For fifteen minutes, they sat in awkward silence.",
        "Great. Just great. If this as any indication of how their night would be, then they had a long night ahead of them.\n\nStaring out the window, trying hard not to notice the awkward tension between them, Cheyanne began to notice the city start to disappear behind them.\n\n\"I thought we were going to the movies?\"\n\nSuddenly hearing her voice after sitting in silence for so long surprised Declan a little bit. \"Huh?\"\n\nShe laughed a little. Clearly she had caught him off guard. \"I was wondering where we were going. I thought we were headed to the movies?\"\n\n\"We are.\" He said. \"Thar's a drive in a couple miles outside of town. Not a lot of people know about, so it's not too crowded. Most of me friends like to hang out thar.\"\n\n\"Oh,\" she nodded her head and turned back to the window. \"I've actually never been to a drive in before.\"\n\nOne of his eyebrows raised in a questioning look. \"Really? I thought they had drive ins back where yar from?\"\n\n\"Well, they do, there just not as popular as the regular movie theatres I guess. People would rather buy expensive tickets to see 3D and imax movie's then sit in a car and watch a projection.\"\n\n\"Yeah, it's a little different out here. The drive in we're going ta normally plays old or independent films. It's pretty nice when yar not in the mood to pay a lot for a couple of seats in a cold theatre.\"\n\nCheyane nodded. \"Do you know which movie we're seeing?\"\n\n\"No. We won't know until we get thar.\"\n\nAbout five minutes later, they pulled up to this big open field with five large screens spread out across the area. Several cars were parked in front of each screen with a different movie playing one each one. At the edge of the field were two small buildings. Several people were standing in front of one of the buildings sipping drinks and eating popcorn. Cheyanne figured that it had to be the food stand. Declan drove the car to the other building, which was placed slightly in front of the food stand.\n\nSlowly, Declan stirred the truck gently and saddled up next to the open window of the ticket booth. Reaching over, he twirled the little handle on the side of the door and rolled the window down.\n\nLeaning out the window, Declan reached out and knock on the window of the ticket booth. Quickly, a lanky freckled face man popped up and swiftly opened the window. He seemed a little surprised to see them.\n\n\"Hello, how can I help you two?\"\n\nDumb ass question, Declan thought. \"What movies are ya playing tonight?\"\n\nTurning back around, the skinny man dug into one of his draws and pulled out a small sheet of paper. Leaning back out, he handed Declan the sheet.\n\nDeclan scanned over the short list of movies and wasn't really impressed with the selection. Two of them, he could to tell, must of have been pretty old. In the small description off to the side, they listed a few of the actor's names. Most of them were dead. The last three were independent films and were all action based. Turning to Cheyanne, he handed her the card.\n\n\"What would ya rather see?\" He asked.\n\nCheyanne studied it a moment. None of them were really appealing. Declan watched as her brow furrowed while she scanned the list. He thought that the look on her face was made her look like a confused child trying to read a long word. He didn't know how, but it only made her seem more appealing. The way she poked out her lips just made her look cuter.\n\n\"Hmm,\" she read the list one more time before handing the sheet back to Declan. \"The last one looks good.\"\n\nDeclan read the sheet and widened his eyes once he looked at the title. \"My Lover's Dangerous Escapade's? Are you sure?\" He hadn't expected her to pick such a risky movie.\n\nShe nodded her head and shrugged. \"Out of all the other ones, it seemed the best pick. Who knows, it could end up being really good.\" She gave him a hesitant smile.\n\n\"Yeah but...,\" he glanced over the description an inwardly cringed. \"Are ya sure this is what ya want to see?\" \n\n\"We did come all this way.\" She turned her gaze out towards the movie screens. \"It would be ashamed to just turn back around.\"\n\nThinking it over for a moment, Declan eventually had to agree with her. He turned back to the guy in the booth and told him which movie they wished to see. Handing him the money, the man quickly rolled off two tickets and a parking pass and indicated which screen would be showing their movie.\n\nOnce they pulled off a bit, Cheyanne turned and whispered to him. \"Did he seem kind of jittery to you?\"\n\nHe shrugged. \"Probably was jacking off back thar and thought he'd got caught.\" \n\nHe could have bit his tongue for saying such a horrible thing in front of her. He usually knew better than to say such a crude thing in front of most girls. It's not the kind of things gypsy girls needed to here. So it surprised Declan when all he heard was muffled laughter next to him. Looking over, Cheyanne was unsuccessfully trying to hide her laugh by covering her mouth with her hand.\n\n\"I'm sorry,\" she choked out. \"I shouldn't be laughing. That was such a bad thing to do.\"\n\nHe merely looked at her and shook it off, as if it wasn't that big of a deal.\n\nDeclan switch gears and gently drove the truck toward the second screen. Once he'd found their parking spot, he turned off the car and threw his keys on the dash.\n\nThe previous movie had just ended, and it would be another fifteen minutes before the next one started. Unlocking his door, he stepped out and walked to the back of his car to retrieve the blanket he had packed earlier. Walking around to the passenger side, he opened her door and handed it to her.\n\n\"I can't afford to keep the car on cause my battery could die. It gets a bit cold sometimes so I figured ya might need this.\"\n\n\"Thanks.\" She took the blanket he offered and placed it on her lap. The material felt soft under her hands.\n\n\"I'm going ta get something to eat. Do ya want any'ting?\"\n\nShe shook her head. \"No, I'm good.\"\n\n\"Okay. I'll be right back.\" \n\nThey hadn't parked that far from the entrance, so it wasn't that far of a walk to the food stand. Even though she had said she did want anything, he had planned to get them a large bag of popcorn to share just in case. Walking towards the stand, Declan saw a few other gypsies hanging around the area, a few of them he recognized from the gym he trained in.\n\nThat simple thought stopped him in his tracks. If any of them bothered to notice him, they'd ask him why he was here. He had no problem lying and telling them that he came by himself, but then that would raise questions as to why he came alone. He didn't want to have to tell the truth; that he was out with someone. That would only raise questions about who he was with. Things would only get bad if they found out he was out with a gorger, a non-traveler. Word would eventually get out, and then his family could end up hearing about it. He couldn't let that happen. No one needed to know he was here.\n\nQuickly, Declan turned around and headed back to the truck. \n\nIt had been a couple of minutes since Declan went to get food. Cheyanne sat there patiently waiting, looking around the inside of the old truck. From what she had gathered, he wasn't much of a music lover, as there was only one CD in glove compartment. She had found an old pack of cigarettes in the compartment as well, along with a lighter and an outdated road map. Hanging off of the rear view mirror was a handmade lanyard, with a wooden cross dangling off of it. The knot work was pretty impressive, and it made her wonder if he had spent the time to make it himself.\n\nA few more minutes past, and Cheyanne began to wonder what was taking him so long. It was probably best to go check in him, she thought. He might have been having trouble carrying the food.\n\nReaching for the handle, she opened the door about a fraction when the driver's door swung open. Cheyanne jumped a little as she saw Declan quickly slide into his seat and slam the door. He had leaned back and took several deep breaths with his eyes closed.\n\n\"Are you okay?\" She finally asked. \"You were gone awhile.\" She looked down at his hand and notice they were empty. \"I thought you went to get food?\"\n\nHe opened his eyes a little and inclined his head towards her. \"I changed my mind. Not hungry anymore.\"\n\nCheyanne narrowed her eyes and stared at him. He knew she wasn't exactly buying into his story, but he didn't really care. He wasn't about to tell her otherwise. Eventually, she gave in and let the burning question she wanted to ask go.\n\nThe movie started five minutes later, and as he predicted, the movie completely sucked. Correction. It sucked ass. The whole film was centered around this American spy who was forced to keep a secret identity and live a double life. The entire time, he's trying to find this clich\u00e9 bad guy who wants to start another world war while trying to maintain his two love lives. Apparently he's been fucking two different girls; one a simple Manhattan waitress, and another, a sexy Russian intelligence agent. Right now they were at the part where the bad guy has captured the sexy Russian, and the good guy has to save her.\n\nThe fight scene was completely fake, with over dramatic martial arts tricks and blood spurting everywhere. The movie couldn't get any worse at this point.\n\nDeclan didn't bother to turn to see if Cheyanne's shared the same bored expression.\n\n\"Hey, I'm sorry about this whole t'ing.\"\n\n\"What?\" She asked, not taking her eyes off the screen.\n\n\"Dis movie sucks. We should'a gone somewhere else.\" He felt like an idiot. He should have taken her somewhere better. She was probably use to more upscale dates then this. She was probably hating it right now, having to slum with the Travelers. This was a mistake.\n\n\"Are you kidding me?\" She asked, surprised. \"This is great.\"\n\nDeclan whipped his head around and gave her a confused look. \"Really?\"\n\n\"Absolutely.\" She continued to stare at the screen. Declan could tell that she was honestly interested in it.\n\n\"But why? Dis film is complete shit.\"\n\nShe shrugged and turned to him. \"Well, yeah, if you look at it like an action movie. But as a comedy, this thing is hilarious.\"\n\n\"What?\" Now he was completely lost.\n\nCheyanne could tell that he wasn't quite sure what she meant, so she tried to break it down for him. \"What I'm trying to say is that everything in this movie is completely over the top and ridiculous. All the action and the people are over exaggerated, just like in a comedy. Look right here.\" She pointed to one of the guys the spy had just gunned down. \"Do you see how crazy his face looks? It's like you could tell he's thinking 'Oh my God, I think I just got shot man. I think I should die right about now'.\" She pointed to another guy who was bleeding profusely on the floor. \"And that guy is probably thinking 'Damn, my knee hurts so bad. It hurt's even more the bullet in my chest'.\" Cheyanne busted out laughing and Declan couldn't help but laugh along with her.\n\nShe was right, in fact, this movie was hilarious. The two of them made jokes through the entire fight scene, each one going back and forth making up strange commentary to go along with the characters.\n\nWhen the Russian woman was freed from her bonds, Cheyanne jumped in and began imitating the character. \n\n\"Oh thank you for coming to save me, sexy spy guy. I'm just so exhausted from screaming for three hours straight.\" She had to hold back a giggle from laughing at her own bad Russian accent.\n\n\"That's okay, baby,\" Declan jumped in as the spy. \"I'm her to save ya. I'll get ya some cough drops for yar sore throat.\" \n\n\"Oh thank you, spy guy. How will I ever repay you?\" Cheyanne pleaded.\n\n\"Well, I'm pretty sure that there's a sex scene coming up soon. I think you can repay me by giving me a good fuck.\"\n\nIn her best sultry voice Cheyanne spoke. \"Oh but, how do you know I'm not saving myself for that one special guy.\" She turned to Declan and gave him the most lustful look she could conjure up.\n\nHe turned to her and gave her a cheesy heroic smile. \"Cause, baby, with tits like yars, there's no way you haven't been fucked.\"\n\nThe two of them bust out laughing. At this point it was almost uncontrollable. Looking at this movie now, there was no way ether of them could take any of the action seriously. \n\nDeclan continued to stare at her as more laughter bubbled out from her. The sound of her soft chuckle grabbed him for a moment, causing him to take a good look at her. Her laugh was definitly the cutest he had ever heard. At one point, she had even managed to snort, which only invoked more laughter from her. The smile that had spread across her face revealed two small dimples on the sides of her cheeks. He didn't know how, but watching her sit there, she had somehow become even more beautiful.\n\nCheyanne finally calmed down enough to compose herself. She hadn't laughed like that in a long time, and she felt great knowing she was having fun again. Feeling eyes on her, she looked up to see Declan gazing at her. Something about the way he was staring at her seemed different. Like he had just noticed something he hadn't seen before. The look started to make her feel a little self-conscious, as well as a little flustered.\n\nClearing her throat, she directed there attention back to the movie, effectively snapping Declan out of the trance he was in. Just as he had predicted, the couple had found their way into a bedroom and began stripping each other of their clothes. The tension in the car immediately got thicker. \n\nWatching the man on the screen carefully peal each piece of clothing off of his woman raised thoughts in Declan's head. What would it be like to be able to strip every piece of clothing off of the woman sitting next to him? To be able to see the honey colored skin beneath the surface? To be able to feel her underneath his hands? Sensing movement in his peripheral, he turned his gaze ever so slightly to see her pulling the blanket off her shoulders and shimming out of her jacket. Without the small piece of fabric covering her, he was able to get a glimpse of the modest amount of cleavage that her dress revealed. From where he was sitting, he could see that her dress had ridden up over her thighs a bit more, and was now showing a considerable amount of leg. God, how they looked so smooth. Declan tried to look forward and concentrate on the movie. But each flash of naked skin that he saw only made more aware of the woman next to him.\n\nCheyanne was having a difficult time trying to watch the couple on the screen. Looking at the explicit sex scene before her didn't help her ignore the man next to her. She had become extremely aware of the tension that had built between them when the couple in the movie began grinding upon one another. Each sigh that emanated from the woman's mouth only reminded Cheyanne of the first night she had met Declan, about how the dance on the floor of the club, about how the kissed one another. \n\nFeeling a little warm, she had taken off the blanket and jacket she had on and placed them on the floor of the cab. Suddenly she got this definitive feeling of being watched. She didn't need to look to know whose eyes were now fixed upon her. Desperately trying to ignore him, Cheyanne kept her eyes forward and continued to watch the scene. The man was now lavishing the Russian's breast's with kissing, effectively causing her to let out a long moan. Images of Declan touching her in such a way had caused a warm feeling to pool in her panties.\n\nDeclan could have almost died when he heard a small sigh pass her lips. It made the already hard member in his pants twitch. She probably was not even aware that she had done it, which made it all the more arousing for him. Looking back down at her legs, he noticed that she had begun rubbing her thighs together. No doubt trying to find some sort of release. It made him wonder if her pussy was wet. Slowly, he began to inch his hand forward.\n\nGod, she didn't know how much more she could take sitting there with him. The scene had gone on for more than six minutes and she was beginning to wonder if it would ever end. A part of her didn't want it to. A sort of pressure was beginning to build within her, and she unconsciously began to rub her legs in order to relieve some of it. It wasn't really helping though. She was so wound up at this point, that she barely even registered the light brush at her thigh. \n\nInch by inch, Declan's hand moved across Cheyanne's thigh until he had his whole hand rapped around it. The firm muscle felt so smooth, just as he imagined. He didn't linger there, however. Slowly his hand move higher to its intended destination. \n\nCheyanne's breathing had started to pick up. She knew where Declan's hand was going, and she didn't make any move to stop it. On the screen in front of them, the scene had begun to reach its climax, with the woman ranting and begging for her lover to go faster. Cheyanne wanted so bad to tell Declan to touch her more and beg him for the release she craved. A his hand moved up her leg higher and higher, the scene before her built higher and higher, until the woman let out a long scream. Declan took that moment to plunge his hand in and grab a hold of her pussy. Cheyanne couldn't take the pressure, and let out a small moan of her own.\n\nDeclan could feel how soaked her panties were. When that soft moan escaped her lips, he knew he couldn't take it anymore. Reaching out, he grabbed hold of her and crushed her to him. Before Cheyanne was even aware of it, Declan had taken full control and was now ravishing her with kisses. Never had a man tasted so good to her. She could feel the ruff stubble of his facial hair rubbing against her chin as he crushed his mouth to hers.\n\nDeclan had never removed his hand from between her legs, and was now furiously rubbing his palm against her panty clad mound. The sensation he was giving her caused her to moan, allowing Declan the chance to dip his tongue into her awaiting mouth. God, how he wanted this woman. Removing his hand from between her legs, he placed his hand behind her knee and pulled her leg over his waste. The action perfectly placed her pussy on his hard dick. Not once did he manage to remove his mouth from hers. \n\nHe knew he shouldn't have been acting this way. She deserved more than this. But dammit, would he be lying if he said he didn't want this. She wasn't like most girls, and he didn't dare try to compare her to the others. None of them had ever caused such a fire to start within him. And he liked it.\n\nCheyanne lost herself within the kiss that Declan was giving her. She became frighteningly aware of the hardness between her legs and was aroused by it. While her hands moved up to rap themselves in his dark hair, her lower body began slowly grinding against him. The repetitive movement caused a low groan to slip past his lips. Suddenly, Declan grabbed onto her hips, and in one switch movement, lifted her to straddle his waist. She wanted to grind her body against his, and feel his hard member rub against her sensitive pussy, but before she even got a chance to sit down, her butt collided with the steering wheel and hit the horn.\n\nThe sudden blast of the car effectively caused the couple to separate, causing each one to jump and return to their own respective side of the truck.\n\nBoth of them were breathing heavily, and each one was more than a little flustered. Tension began to build back up again. But this time, it was not from the every growing arousal between the two of them. This one was different. The air in the cab was now filled with embarrassment as well as the scent of their close interaction. Neither of them could manage to look at the other.\n\nCheyanne had no idea how to handle this. This was now the second time she had lost control in front of him. There was no telling what he must be thinking about her.",
        "With a shaky breath, Cheyanne somehow found her voice. \"I'm sorry.\"\n\nShe stopped a moment, hoping that he would jump in and say something. When he didn't respond she continued.\n\n\"That shouldn't have happened.\" She said quietly.\n\n\"I know.\" He said. His voice was low and husky.\n\n\"I don't know what's come over me.\" She took another deep breath and sighed. \"I usually don't act that way.\"\n\n\"I know.\" He said again. \"Neither do I.\"\n\nHearing his confession only made Cheyanne feel more ashamed. \n\n\"I shouldn't have done that.\" Her voice was stronger. \"We shouldn't have done that. We barely even know each other. I'm mean look at me. I'm only nineteen years old, and your...\"\n\n\"Twenty-two.\" He answered for her.\n\n\"Twenty-two.\" She said a little shocked. \"Great.\" She didn't know why she had thought he was closer to her in age. She realized her mistake now, and scolded herself for being such an idiot. \"This shouldn't have happened tonight. For God sake's, I don't even know your last name. This was all a mistake. I'm sorry.\" She sighed again and turned from him.\n\nA long moment past without either of them saying a word. \n\n\"McCarthy.\"\n\nCheyanne turned her head to him. He was still staring away from her, so maybe he wasn't intentionally speaking to her.\n\n\"W-what?\" she asked hesitantly.\n\n\"My last name. It's McCarthy.\" He turned to her. \"And I'm not, sorry that is.\"\n\nReaching out to her, he placed his large hand around the nape of her neck and pulled her face towards his. The kissed they shared this time was soft, not as fast and as fiery as the one they had just shared moments ago. This new exploration of each other continued until the end of the movie.\n\n****\n\nDeclan drove her back to her school after they left the drive in. Cheyanne's fingers were firmly laced with his and gently resting on his heavily muscled thigh. The ride back into town was quiet, with neither of them saying much. Nothing really needed to be said. Both were very content and at ease.\n\nAs quietly as he could, Declan drove through the entrance gate of the school and started making his way down the winding narrow streets to her dorm building.\n\n\"That's it over there. You can just drop me off here.\"\n\n\"Are ya sure?\" He was a bit hesitant to leave her outside this late at night. \"Do ya want me to walk ya to yar room?\"\n\n\"No, it's fine. I'm not supposed to have visitor's this late, anyway.\" \n\n\"Oh,\" He nodded his head. \"I guess that's a good t'ing.\"\n\n\"Why?\"\n\n\"Cause then I won't have ta worry bout some guy sneaking into my woman's room at night.\" \n\n\"Your woman?\" She quirked. \"Don't you think your being a little too possessive?\"\n\n\"No. The men in my family are very protective over the things we own.\" \n\nShe raised her eyebrow. \"Own?\" She didn't like the sound of that. \"I'm not a piece of furniture that you just bought.\"\n\nHe slowly shook his head. \"No yar not. Yar my woman,\" he turned to her and gave her look that quickly silenced the protest in her mouth, \"and I protect what's mine.\"\n\n\"Yours?\" She thought about it and gave him a soft smile. That sounded a lot better than being owned. But she had to wonder, did being owned and being his mean the same thing.\n\nLooking back up into his face, she noticed that his eyes had become hooded and were staring right at her. The way his eyes longingly gazed at her caused a fire to burn beneath her skin. \n\n\"Come here.\" Placing his hand behind her neck he pulled her face closer to his and gave her the softest of kisses. In that small moment, it seemed like their lips barely even touched. But the fire that had slowly begun to build with in her suddenly died at the contact. The way his lips moved over hers made it seem like he was trying to memories the feeling of them. She could have stayed out there in his car all night if she wanted to, but she knew someone would eventually run across them, and that would only make for an embarrassing situation.\n\nAll too quickly she pulled back from him. At the absence of her lips, Declan leaned forward to reclaim them once more.\n\n\"I have to go.\" She whispered to him. \n\nDeclan groaned a little. Reluctant as he was to let her go, he slowly leaned back and ran a hand through his disheveled hair. Looking at her, he could tell that she was flustered as well. Her lips were red and pouty, a result from there intense kissing throughout the night, and a few loose curls had fallen free from her pony tail and over her face. It was so sexy.\n\nJust as she had reached the handle to open the door, Declan clasped her other hand.\n\n\"I want to see you again.\" He stated.\n\nShe blushed a little at his forwardness. \"I do to.\" She stated just as strongly. \"The next couple of days are kind of busy for me, but I think that Saturday...\"\n\n\"No, tomorrow.\"\n\n\"Tomorrow?\" She shook her head. \"I have school tomorrow.\" She said, and turned to leave. She had opened the door just a fraction of an inch when Declan's big arm came across her and slammed the door shut.\n\n\"After school then.\"\n\nHis sudden aggressiveness and demanding tone of voice were starting to get the better of her. Seeing him take charge like this wasn't all that surprising to her. Cheyanne knew from the beginning that Declan was the type of man that liked to be in control. She could tell by the way he had talked to her that first night on the dance floor, and by the way he had coerced her into having lunch with him. She knew it by the way he invited her on this date, and the demanding way he had kissed her into oblivion. Declan was the type of man who got what he wanted from his women, and knowing that he was being that demanding with her only turned her on.\n\nLeaning in ever so slightly, she let her lips tease him. He tilted his head back and closed his eyes, waiting for the kiss she was promising him.\n\nHe felt the smile that formed on her lips as she said. \"I have work.\"\n\nTaking advantage of his distracted state, Cheyanne pushed his hand from the door and lightly jumped out of the cab and onto the pavement. She would have shut the door, but Declan had quickly recovered from his momentary loss of control and held open the door before it slammed.\n\n\"After work then.\" The husky sound to his voice let her know just how much she had affected him.\n\nWith a smile, she nodded her head and shut the door to the truck. As she turned and walked to her dorm building, Cheyanne could feel Declan's eyes boring into her back all the way to the front door, and didn't feel that his gaze let up until she was out of his viewing range.\n\n****\n\nDeclan didn't let out the breath he was holding until he saw Cheyanne disappear inside the building. Damn this woman. Not once did he think this night would be so intense. He knew how fiery she could be. He had witnessed that first hand when they had first met. But in the past few times he had seen her, he had learned how warm she could be as well as passionate. She had the power to tease him to know end, as well as make him feel powerful. He didn't know anyone who embodied such a powerful combination of emotions within him. As good as he felt after leaving the university, the emotions he was feeling were new to him...and that made him skeptical.\n\nAs he made his way home, that good feeling he had when he watched her leave slowly began to vanish as the uncertainty of what their relationship was began to grow. No one in his family had ever even entertained the idea of dating a non-traveler, and now here he was fantasizing about the naughty things he wanted to do to her.\n\nPulling into the family plot, he parked his truck a little ways in front of his modest camper. Leaning on his window, he stared at his home for a moment. It had cost him a pretty penny, but at the time he had bought it, he had grown a little tired of living at home with his large family. You couldn't put a price on privacy. It was a fairly large trailer, complete with kitchenette, living area, and a bed/bathroom area. It was definitely big enough to fit two comfortably. The image of Cheyanne standing in the kitchen washing dishes warmly worked its way into his mind. The idea of her in his home was very appealing.\n\nMother fucker, what the hell was he thinking! Declan wanted to smack himself for thinking such a ridiculous thought. There was no way in hell he could bring her here. The fact that he was even contemplating the idea made him realize just how much this girl affected him. Pinching the bridge of his nose, Declan groaned as he began to feel the beginning of a small headache coming on.\n\nReaching into his glove compartment, he brought out the pack of cigarettes and popped one in his mouth. Digging into his pocket, he pulled out his small silver lighter and flipped the lid, causing a small flame to ignite.\n\nAs he was leaning into the flame, the soft light of the fire alerted him to the figure that was approaching the car. Taking a second, he rolled down the window allowing his father to cross his arms and lean into the car.\n\nDeclan's father looked at him for a long moment, studying the contrite look on his face. Declan remembered how his father would use that face on him when he had caught him doing something he shouldn't have been doing. The fact that he was giving him that face now caused him to squirm in his seat.\n\nMomentarily taking his eyes off his son's face, Ducky looked down to the unlit cigarette in his hand. \n\n\"Ya know that's what killed your Uncle Paddy.\"\n\n\"I thought Uncle Paddy was in jail.\"\n\n\"What? No, I'm talking bout yar great Uncle Paddy. Paddy Sr.\" He shook his head. \"I swear he must have smoked at least two packs a day, and then would wash it all down with a six back of beer.\"\n\nDeclan gave half a smile and chuckled softly. \"Must be where ya got yar drinking habits from.\"\n\nDucky laughed. \"Yeah yeah, I guess yar right bout that.\" Reaching his hand in, he plucked the cigarette from between his son's lips. \"But I know also know yar not that much of a smoker. You only use them when yar wound up or worried. Which makes me wonder what's got u in such a tizzy?\"\n\nDeclan sighed and took the cigarette from his father's hand. Cupping the flame of the silver lighter with his other hand he gently lit the cigarette and took a deep breath before letting it out. \n\n\"I just... have a lot on my mind.\" Throwing the pack back into the glove compartment, he rolled the window back up and stepped out of the truck.\n\n\"Funny,\" Ducky said. \"Ya didn't seem to have so much on yar mind before you left home.\"\n\nDeclan shrugged and took another puff off his cigarette. \n\n\"Where'd ya go?\" Ducky asked.\n\n\"No where.\"\n\n\"Who'd ya see?\"\n\n\"No one.\" Declan said nonchalantly.\n\nDucky looked at his son suspiciously. He had never once had to question his son. That was something he usually had to do with his daughter. \"So now yar keeping secrets from me.\" \n\nDeclan shook his head and took another long puff from his cigarette before blowing it out. \"I'm not keep'in any'ting from ya. If it was any'ting important, I would'a told ya.\" The small lie caused a lump to form in his throat.\n\nDucky merely nodded at his boy and turned away, accepting the fact that his son was not being completely honest with him, an occurrence that almost never happened between the two of them.\n\nBoth McCarthy men leaned against the door of the old truck and stared out at the rows of camper's in front of them. The silence between them stretched on for several minutes. The nighttime air was starting to get chilly, the only warmth radiating from the rapidly cooling engine of the truck and the small cigarette in Declan's hand. When the cigarette burned about half way through, Declan rubbed the end of it at the bottom of his boot and threw the remnants across the yard.\n\n\"Hey, it's gett'in late. I'm gona head inside.\"\n\n\"Ya know, I saw the way you were look'in at yar house.\" Ducky's statement caused Declan to freeze just as he opened the door.\n\nHe didn't know exactly how to respond, so he just said. \"Yeah.\"\n\n\"Was there something wrong wit it?\" His dad asked curiously.\n\nDeclan turned to look at his father and shook his head innocently. \"No.\"\n\n\"Huh,\" Ducky stood up from the truck and walked over to his son. \"I never did tell you how much I liked yar home. It was a good pick.\"\n\n\"Thanks.\"\n\n\"It's a bit big though. Not exactly one I would have picked out if I were a single man. This ones the kind of camper I would'a picked out if I was fixin to start a family.\"\n\nDeclan's eyes widened and he quickly turned away from his father. Ducky didn't fail to notice his son's lack of response or the way he seemed to fidget at the idea of starting a family.\n\n\"Ahh, now I see.\"\n\n\"See what?\" Declan asked.\n\nDucky smiled at his son's obvious attempt at playing dumb. He just shook his head. \"Nothing.\" Walking up to Declan, he placed a warm hand on his strong shoulder. \"Now that I think about it, this camper is perfect for ya. Yup, it's just big enough.\"\n\nFinally getting what his father was hinting at, Declan's quickly shook his head. \"No, dad, it's not...\"\n\n\"Hey, you dona have to say any'ting. I get it. Dis is probably not a conversation ya want to be hav'in right now, and to be honest, I dona quite think yar ready for it either. But I will tell ya dis...\" he squeezed his son's shoulder a bit and turned him around to look him in the eyes. \"Whoever dis girl is that's got ya thinking about settling down, must be something special.\"\n\nBefore the protest even began forming on his mouth, Declan stopped and thought back over there night together. Images of her dimpled smile, and the way her caramel skin felt beneath his hands brought the smallest of smiles to his face.\n\n\"Yeah,\" he replied. \"She is.\"\n\nDucky smiled big and gave his son a hard pat on the back. \"Well good.\" Turning away from his son, he casually began walking back to his home with his hands in his pocket. \"Sounds like yah might want to keep a hold of this one, boy.\"\n\nOpening his door, Declan whispered a small promise to himself. \"Oh, I plan too.\""
    ],
    "authorname": "honeyblood",
    "tags": [
        "gypsy guy",
        "black woman",
        "traditions"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/traditions-ch-03"
}