{
    "title": "'Just' Jane Ch. 14",
    "pages": [
        "I am not a writer, far from it. Except for the names and places, the stories you read are for the most part true. Still they are not biographies. Artistic license has been taken to enhance or in some cases minimize the events described. All sexual situations were between consensual adults within the framework of their story. \n\nThis is the ninth of now twelve interviews I have worked on over the last four years.\n\nMost of these stories cover several years. I will try to keep the chapters short. I suggest you save one for reference. None of the stories are mine, any personal friend, or relative. \n\n*****\n\nChapter 14\n\n\"Jane! What the...\" Maureen removed her robe and draped it over me as I got out of the car.\n\nI was still dressed in sheer teddy I wore for Poole. \n\n\"I told him Maureen. Either he tells me that he loves me or...\" I started to cry again. \n\n\"Good for you Jane.\" Maureen consoled me. \n\nSadly hot cocoa only helps so much and Grandmothers can only do so much as well. \n\n\"Things will be better in the morning, you'll see.\" She said. \n\nThe door opened and little feet quickly made their way to my bed. I looked up to find Lela standing over me. \n\n\"Aren't you supposed to be at work?\" I teased.\n\n\"I brought you some clothes to wear.\" Lela smiled. \n\n\"Did you now?\" I sat up exposing the sheer teddy I slept in. \n\n\"Or we could stay here and play hooky.\" Lela reached out and caressed my breast. \n\n\"I would prefer that but I'm not going to make it that easy on Poole.\" I replied. \n\n\"Ok, then I'll go to work with you.\" Lela said without a care. \n\nIt was a bit of a drive to the office. Lela talked and listened to every radio station Poole had stored in memory. No two stations were alike and I was surprised when she ended up with sports. \n\n\"Why did you take Poole's car?\" Lela asked looking around inside. \n\n\"The keys were on the counter so I decided to take this instead of my car.\" I admitted. \n\n\"It's so old.\" Lela laughed. \n\n\"Yeah it is.\" I agreed. \n\nIt was a 1987 Ford Taurus station wagon that Poole drives almost exclusively. Impeccably maintained and cared for it is none the less just a grocery getter. People tease him endlessly about it but I don't think he'll ever get rid of it. \n\nPoole says it fits him, and in many ways it does. \n\n...\n\n\"Jane.\" Poole looked up at me as I stood in line for inspection. \n\n\"Timothy.\" I replied coolly. \n\nThe gasp from the other girls were more notable than when I walked in wearing regular clothes. I was wearing shorts, a blouse, and insisted on wearing a bra. Even Lela thought that was a bit too much. \n\n\"Only got one name. Poole.\" My uncle corrected me. \n\n\"Actually you don't.\" I reminded him sarcastically. \n\n\"So that's the way it's going to be?\" Poole asked quietly. \n\n\"I just turned in my notice.\" I looked back at Max. \"I have some vacation time coming. Unless I hear differently, Friday will be my last day.\" \n\nPoole looked at Max. \"Is that right?\" \n\nSo as not to make a bigger scene Max just held up the paper. \n\n\"Lela invited me to lunch I may be late getting back. You can dock my pay as you see fit.\" I lifted my eyes and looked forward standing at attention. \n\n\"Go ahead get it out of your system.\" Poole leaned back and laughed. \n\nSo that's how my week started. \n\n...\n\n\"Maureen the food is great.\" I said to her as we watched Lela frolic in the pool. \n\n\"It is, isn't it?\" My grandmother bragged. \n\n\"Mom says you really enjoy it here.\" I suggested. \n\n\"She's just happy I'm not living with her.\" Maureen laughed. \"Seriously I wished I would have come sooner.\" \n\n\"So you do like it here?\" \n\n\"Absolutely. The golf course is right here, the city is just a short shuttle away.\" Maureen pointed out. \"As you know the food is great, and I have friends to spend time with.\" \n\n\"Well the pool and common areas are really impressive.\" I offered. \"I see they have activities you can sign up for.\" \n\n\"Of course, movies, bingo, cards, poker, you name it, we even have a few entertainers stop in. Maureen boasted. \"However I will admit we seem to miss Wilma.\" \n\n\"Wilma?\" I repeated.\n\n\"Oh goodness, yes. Never stopped talking that one. Although I didn't care for her much, the others seemed to like her.\" Maureen shook her head. \"Gave them something to gossip about or complain or just well, someone to listen to.\" \n\n\"Did she pass away?\" I asked politely. \n\n\"Wilma? Nah some old fool stepped up and asked her to marry him. Guess he didn't own a radio?\" \n\nMaureen and I laughed. Since they got married they no longer qualified to live at this center. I went and got Lela and after she hustled me for more time we left a half hour later. \n\nLeaving Poole's car at work Bobby drove me back to Maureen's. She left a note letting me know she was at a play with some friends. I made myself some dinner and then called the girls. \n\nCassie admonished me for being so demanding. Cody supported me completely. \n\n...\n\nI looked down and a dark brown hand moved over my tit. I shifted back to find Lela completely naked. \n\n\"Does your mother know you're in here?\" I turned over to kiss Lela. \n\n\"Mom sent me in to wake you up.\" Lela giggled. \"She going to make breakfast in a little bit.\" \n\n\"So why are you naked?\" My hands caressed Lela's body. \n\n\"I need to make sure you're really awake.\" Lela started removing my top. \"Hurry we don't have much time.\" \n\nI pushed my panties down as Lela moved in for a passionate kiss. Kicking the panties off, I moved to my side facing Lela. Knowing time was against us I still wanted to enjoy the moment. \n\nI pulled up from the kiss and grazed Lela's dark brown nipple with my pink one. Lela smiled happily. I caressed her stomach as I moved my hand lower to between her legs. Pulling me down to kiss her again Lela spread her legs thrusting her pelvis up to greet my probing fingers. \n\n\"Please Jane.\" Lela moaned before our lips met. \n\nLela spread her legs wide so I slipped two fingers in her juicy snatch. Lela's pussy thrusted up, she moaned, and then her whole body gave a quick shudder. \n\n\"Shhh, my darling, we're not in that big of a hurry.\" I teased Lela. \n\nMy fingers pulled out slightly and Lela settled back in the bed. I gave her a quick kiss on the lips then slipped my fingers back in her pussy. \n\n\"You're so wet Princess.\" I taunted her. \n\nLela glowed in happiness as my fingers worked deeper. When her back arched I leaned down and sucked on her nipple. Lela ccaressed my back and offered me all of her tit. I raked my teeth over her soft flesh and nibbled her stiff nub. \n\nIt didn't take long for Lela's breath to become rapid and shallow. I enjoyed watching her brown body writhe as my fingers continued to work their magic. Lela gripped my arm hard trying not to announce her excitement. Only the softest of squeaks and moans, told of her impending climax. \n\n\"Jane!\" Lela gasped as her body contorted against the brunt of her orgasm. \n\nLela pulled me tight her lips desperate to find my tongue as her legs clamped shut. Lela held me not wanting to let go. I pulled up from her lips and looked into her eyes. \n\n\"Are you awake yet?\" I teased her \n\nI moved over Lela, my tit's dangling just before her mouth. Placing one leg between hers and one over her thigh. Lela looked at my glistening cunt and then smiled at me. She shifted as I brushed my juicy pussy over her extended clit and her body quivered in response. \n\n\"Jane.\" Lela whimpered.\n\nThe dark brown lips of her pussy mashed against the pink folds of mine. We had done this many times before and we soon found ourselves in a familiar position. Lela early on learned a special move. Shifting slightly Lela tugged her lips open letting my clit settle within the pink insides of her greasy pussy. \n\n\"Cum for me Jane.\" Lela demanded. \"Let me feel you cum in my pussy.\" \n\n\"Oh Princess here it comes!\" I started to moan. \n\nAs usual we shared a sloppy orgasm together that morning. Hugging and kissing Lela, she begged me to stay home again. In the shower I made Lela mind her manners, at least most of the time. \n\n\"Jane you can't stay here much longer.\" Maureen mentioned at breakfast. \n\nI'm not sure she approved of Lela and I making love under her roof. Unlike my mother my grandmother was a bit old fashion. I know she had an affair with a black man at a time when that was strictly taboo, and she had his child, but it was all done with discretion. \n\nFucking your step aunt, her daughter, in her spare bedroom when she is cooking your breakfast just might not be what she would consider discrete. Fucking your uncle, her son, at his house, is completely acceptable. Go figure. \n\n\"How long?\" I asked picking up my coffee. \n\n\"You can stay tonight but after that you can only visit. Just because my family owns this place doesn't mean I can ignore the rules.\" Maureen explained. \n\n\"I'll call Donald and tell him I'll be coming home Wednesday then.\" I replied. \n\n\"No Jane!\" Lela objected. \"You can't go back there.\" \n\n\"Where else would I go?\" I asked.\n\n\"You can come and live with me and Max.\" Lela protested.\n\n\"Thanks Princess, but that isn't an option. Max deserves his privacy. If Poole and I can't work things out then I belong with Donald, at least for now.\" I explained.\n\n\"But what about me?\" Lela argued. \n\n\"You can come stay at the house. Donald won't mind.\" \n\n\"NO!\" Lela folded her arms. \"No boys.\" \n\n\"But Poole's a boy.\" I reminded her. \n\n\"He's my brother.\" Lela explained pursing her lips. \n\n\"Then I'll rent an apartment.\" I suggested. \"Just for you and me.\" \n\n\"And Tina?\" Lela asked unfolding her arms. \n\n\"If she wants. Remember Princess, Tina is Poole's wife. She might not be able to come?\" I explained. \n\n\"She will come, you love each other. She has to come.\" Lela folded her arms again. \n\nMaureen and I looked at each other and knew there was no sense continuing the discussion with Lela any further. \n\n...\n\n\"See what you started?\" Poole waved his arm past the girls in the office. \n\nThey were all wearing regular clothes instead of swim suits. I can't say I was happy but then again I can't say I was unhappy either. I did feel honored. \n\n\"It's time you give this up and come home tonight. Tina is expecting you.\" Poole growled. \n\n\"I will be happy to come if you have something you would like to say. But I warn you, saying it at work would seem a little insincere, don't you think?\" I smiled back. \"I will personally call her and explain why I can't attend.\" \n\n\"HHrmmmmmph.\" Poole grunted. \n\n\"By the way, Lela and I will be joining your mother for lunch again. She sends her love.\" I smirked. \"Should I tell her you send your love?\"\n\n\"Maybe I'll come for lunch and tell her myself?\" Poole taunted me. \n\n\"I'm sure she would 'love' that. I know Lela and I would 'love' that as well.\" I turned and went to my desk. \n\nI was truly disappointed when Poole didn't join us for lunch. I miss him. Not just the sex, well that too, but just being with him. Poole and Tina both were a joy to be around. Tina because we're so much alike and yet so different. \n\nPoole, well, Poole and I could talk for hours. If I didn't know something he took the time to explain it to me in a way I could understand. If I thought something was unimportant Poole had a way of explaining it so you understood why it was important. \n\nNot just business, but also in life. Poole was a great listener as well. I soon learned that if he was getting bored by a subject he would ask you questions to explain it in more depth. If it was really bad he had a way of leading you someplace that was more interesting. \n\n\"Maureen, Poole sends his love?\" I said as we watched Lela swimming in the pool. \n\n\"Thank you Jane, but I know better than that.\" My grandmother replied solemnly.\n\nFrom her body language I knew I had hit a nerve. We had a pleasant lunch but it ended much sooner than the day before. \n\n\"Jane I'm so glad you called.\" Tina said sounding less than happy. \n\n\"I'm sure Poole told you I won't be back.\" I said solemnly. \n\n\"Jane you must come back. Poole really does love you.\" Tina said. \n\n\"Then I need to hear it from Poole himself.\" I explained. \n\n\"What will you do? Where will you live? Don't tell me you're going back to Donald?\" Tina sighed. \n\n\"If I can't get transferred to another department I'll find something. For now I have no choice but to move back in with Donald. I can only stay here at Maureen's one more night.\" I informed Tina. \"Lela said I can stay with her and Max but we both know that won't be fair to Max.\"\n\n\"Jane, please come home we can work this out.\" Tina started to cry. \"You can come work for me.\" \n\n\"Thank you Tina, I knew you would say that, but I'm still your slut, and I love you too much too work with you.\" I reassured her. \"I tried that once before and I can't afford to lose you too.\"\n\n\"But Jane when will I see you?\" Tina continued to weep. \n\n\"I told Lela I might rent an apartment so she could visit. She insists you come visit too.\" I started to get emotional as well. \"Please don't say anything to Poole, I want this to be his decision.\" \n\nMaureen was downright testy Tuesday night. I guess like old fish after a couple of days it's time to throw it out. Lela didn't wake me Wednesday morning. Bobby however was waiting for me just the same. \n\n\"Could we stop by the house and drop my suitcase off?\" I asked Bobby. \n\nHe readily agreed and headed across town. When I realized he was heading to Poole's I stopped him. \n\n\"I'm sorry Miss Jane, I thought you lived at that address.\" Bobby said embarrassed. \n\n\"I did Bobby but not right now.\" I explained. \"It was my mistake not yours.\" \n\nI walked in the house and sat my suitcase down. It had been months since I had stayed here. Except for the girls there weren't many pleasant memories. Not wanting to hold up Bobby any longer I left my luggage and had him take me to work. \n\nI stood in line waiting to be inspected with the rest of the office. Poole wasn't at his desk so the line wasn't moving. After about fifteen minutes Max handed out our tablets and sent us to our desks.\n\nPoole eventually showed up but didn't even look my way. After lunch Max approached and said Poole wanted to see me in his office. This was highly unusual but I agreed to just the same. Before I went up front I stopped to see Claudia. \n\n\"If I'm not back in five minutes will you come check on me?\" \n\n\"Sure thing.\" Claudia agreed. \n\nApproaching Poole's office I was surprisingly calm. Max and Poole had taught me well these past few years and I was planning on using everything I learned. \n\n\"Jane!\" Poole greeted me happily. \n\nWalking around his desk he took my hand. A flood of emotions surged through me like a bolt of lightning. I still loved him, maybe now more than ever. In almost a daze he led me the few steps around his desk and sat down.\n\n\"Here sit on my knee.\" Poole said softly. \n\nAs much as I wanted to I knew it was wrong. Shaking my head I pulled my hand free and walked back around the desk. \n\n\"I think I'll sit here.\" I explained gathering my wits. \n\n\"Jane this has gone on long enough. Please come home. Tina is upset, Lela won't talk to me, my own mother now hates me.\" Poole explained. \n\n\"Are we going to talk about work, I'm on the clock.\" I reminded my boss. \"And your mother doesn't hate you. She's just concerned, and needs to get her life back.\" \n\nI stood up and headed to the door. \n\n\"Just so you know I won't be staying there again. I have imposed on her long enough. This is my problem not hers.\" I then turned and went back to my desk. \n\nClaudia winked as I walked past letting me know she was prepared to come in at any minute. \n\nPoole didn't return to the office after that. I turned in my tablet and let Max know I would be back in a few minutes. I went and saw Morgan at the credit union to go over my finances. \n\nSo far I had played this out fair and square with Poole. But like in business sometimes you need to stack the deck just a bit in your favor. I didn't ask Claudia to come in because I didn't trust Poole, it was because I didn't trust myself.\n\nSince then I trust myself even less. \n\n\"Morgan if I remember right you owe me a favor.\" I grinned at the nervous bank manager. \n\n\"Yes Jane, but I won't do anything illegal or unethical.\" Morgan fidgeted. \n\n\"Well it's definitely not illegal and I doubt it's unethical but you decide, how's that?\" \n\n\"Ok.\" Morgan replied skeptically. \n\n\"I want you to call Poole about some small matter that only concerns him, and when you do just mention I have been in to see you.\" I suggested. \n\n\"And what should I tell him I saw you about?\" Morgan asked anxiously. \n\n\"Nothing in particular, only that we talked about my finances.\" I explained. \"It isn't important he knows what we discussed, just that I was here.\" \n\n\"Oh, I see, well yes I can do that.\" Morgan sighed in relief. \"Jane? When should I do that?\" \n\n\"Tonight would be best. In the morning if that's not possible.\" I replied. \n\n\"Of course, I'll get on that right away.\" Morgan assured me as I left. \n\nI was walking down the hall when I ran into Max. With a concerned look in his eyes he stopped me as I was about to leave. \n\n\"Jane, Lela and I talked. I want you to know you can always come stay with us. I owe you that much.\" Max said.\n\nI moved to Max and gave him a big hug. \"You wonderful, wonderful man.\" I held him tight. \"If it gets that bad I may take you up on that. But for now I have imposed on too many people already.\" \n\n\"I understand but the offer is still there if you need it. Can I give you a ride home?\" Max asked. \n\n\"Thanks but Cassie is picking me up.\" I replied. \n\nYou haven't read much about Cassie and Cody for quite some time. There is a reason, this is my story not theirs. As you can guess there hasn't been much to write about concerning the three of us together. \n\n\"So what happens after Friday?\" Cassie asked after I updated her with the latest. \n\n\"I'm not sure. I guess if he can't make up his mind in a week he never will.\" I sighed. \"How's your father?\" \n\n\"Not doing much better than you I'm afraid to report. It wouldn't surprise me if he's out of a job again soon.\" Cassie looked over from the wheel. \n\n\"Belligerent, blaming others? Drinking?\" I asked. \n\n\"Yes, yes, and I think so.\" Cassie replied looking back at the road. \n\n\"It won't be long then. Maybe it's a good thing I'm coming back?\" \n\n\"No mom, it's not.\" Cassie said sadly. \"He'll just blame it on you again.\" \n\nWhen we pulled up to the house there were two extra cars. \n\n\"I asked TJ and Fred to be here just in case.\" Cassie explained. \"Do you need anything before we go in?\" \n\n\"Maybe a kiss?\" I joked. \n\nCassie leaned over and pulled me into an emotional embrace. Her kiss reminded me she always knew how to make me feel better. \n\n\"Need another?\" Cassie teased me.\n\n\"Maybe from your sister?\" I teased back. \n\n\"Boring!\" Cassie joked. \n\nWe walked in the house and it instantly grew quiet. Donald was in the kitchen with a beer in his hand. Cody was sitting next to Fred, TJ stood and greeted Cassie with a kiss. \n\n\"Hello Donald.\" I said softly. \n\n\"So he kicked your whore ass out did he?\" Donald swung the beer in his hand. \n\n\"Something like that.\" I replied not wanting to argue. \n\n\"Well if you're crawling back on your hands and knees it won't work. You're his slut now let him deal with it.\" \n\n\"I am his slut, and I'm not crawling back. I'm staying here until we get a few things settled.\" I replied firmly.\n\n\"What makes you think you can just walk in here like you own the place?\" Donald sneered. \n\n\"You know why.\" \n\n\"Well if I forgot why don't you remind me?\" Donald slammed his bottle down. \n\nI looked at the girls then TJ and Fred.\n\n\"Because I still make the payments for this house.\" I snapped back. \n\n\"Dad! You told us you needed help with the payment. Where did our money go?\" Cassie screamed. ",
        "Just then my phone rang. I looked at the caller ID, it was Poole. Even with the revelation Donald was ripping off his daughter they all looked at me. \n\n\"Aren't you going to get that?\" Cody asked. \n\n\"No, if Poole wants to talk to me he can do it in person.\" I replied upset. \n\nCassie pulled out her phone and started to text. Moments later my phone buzzed with a text from Poole. 'its me jane pls answer tina' \n\nMy phone rang again, it was Poole's number. \n\n\"Hello?\" I answered. \n\n\"Jane it's me Tina.\" Her voice sounded desperate. \n\n\"Tina why are you on Poole's phone?\" \n\n\"There's no time to explain, he's here.\" Tina said agitated. \n\n\"I just told the girls if Poole wants to talk to me he can do it in person.\" I relayed the message. \n\n\"Jane, that's what I'm trying to explain, he's here, at the house, Donald's house!\" Tina all but yelled. \n\n\"The door's open, you and he can come in.\" I relayed. \n\n\"Jane you don't understand, Poole came, he never goes to people they come to him. I got him this far, please just come outside...he wants to tell you something.\" Tina pleaded. \n\n\"Tina, I love you with all my heart, I love Poole too. Donald just asked me to grovel for him, I refused that invitation and I will not grovel for Poole either. Tell him I am his slut not his property.\" \n\nI hung up the phone and tossed it on the couch. \"Poole and Tina are outside, I'll be in my room if you need me.\" I informed everyone. \n\nJust then there was a knock on the door. My knees almost gave out as I went to open it. As the heavy piece of wood swung open Tina appeared in front of Poole. \n\n\"May we come in?\" Poole asked.\n\n\"Please do.\" I stepped aside. \n\nTina entered, and then Poole. There was an awkward moment as everyone just kind of waved hello. \n\n\"So big man did your whore leave you?\" Donald appeared with another beer. \n\nI thought Poole was going to go over and crush Donald but Tina put her hand in Poole's chest and stopped him. \n\n\"Poole, we agreed.\" Tina stood firm. \n\n\"I am sorry to show up uninvited, but I hope this will only take a minute.\" Poole said to Donald. \n\n\"Good because I'm not sharing my beer.\" Donald plopped down on a chair. \n\n\"Jane can we talk in private.\" Poole asked. \n\n\"You had your chance in private, whatever you have to say, you can say it right here.\" I insisted. \n\n\"Very well...\" Poole hesitated as he looked in my eyes. \"...I love you Jane, Tina and I both do. Will you please come home?\" \n\n\"No...\" I replied.\n\n\"But Jane, Poole just said he loved you! I thought that was what you wanted.\" Tina protested. \n\nPoole's eyes never left mine and mine never left his. \n\n\"It is, or was. But I need him to do something for you.\" I glared at Poole. \"She's your wife, how could you say that to me and not tell her first?\" \n\n\"But Jane...\"\n\n\"No Tina, I want him to explain it.\" I glared at Poole as I held up my hand to Tina cutting her off.\n\n\"He did my love. Before we left the house Poole told me as we made love.\" Tina ran to me.\n\n\"Did you?\" I narrowed my eyes at Poole. \n\n\"I did Jane.\" Poole admitted. \"If you come home now I'll do the same with you.\" \n\nI almost melted in the spot where I stood. \n\n\"He did Jane, I swear it.\" Tina gushed. \"Please tell me you're coming home.\" \n\nI looked at Tina and knew right away she was telling the truth. Overwhelmed with emotions I ran to Poole and threw myself at him. \n\n\"I love you Poole.\" I shouted as he picked me up in his arms. \"I love you, I love you both.\" \n\nI kept repeating as I kissed him. \n\n\"I want to go home now.\" I kissed Poole again. \n\n\"I love you Jane.\" Poole said with one last hug. \"Tina and I'll wait outside while you say your goodbyes.\" \n\n\"To hell with that. Goodbye everyone.\" I yelled. \"Talk to you later.\" \n\nI actually did say a quick goodbye to everyone but Donald. \n\nYou would think I could write a whole chapter about the night Tina and Poole took me home. The reality was much less interesting than you would think. Tina insisted on dragging my suitcase up to my room and emptying the contents on my bed. Taking the suitcase she took it to the storage room to lock it away. \n\n\"Don't you ever leave me again.\" Tina wagged her finger at me. \n\n\"I promise.\" I replied lovingly. \n\nTina and I embraced and shared a kiss. \n\n\"I hear the water running. You should go join Poole.\" Tina brushed my hair over my ear. \n\n\"Are you coming?\" I almost pleaded. \n\n\"Maybe later, I'm still a bit sore from earlier.\" Tina brushed against my lips. \"Jane, I want to thank you for what you did for me.\" \n\n\"Tina, I didn't do it for you, I did it for us.\" I kissed her lightly. \"Now if you'll excuse me, I'm going to go fuck your husband.\" \n\nI made my way upstairs and undressed in my room before entering Tina and Poole's.\n\n\"May I come in?\" I asked opening the shower door.\n\n\"If you don't I'm coming out.\" Poole scanned my body before his eyes met mine. \n\nTaking his hand Poole helped me over the small step into the shower. Poole's lips pressed hard against mine as his arms pulled me tight.\n\n\"I need you in me.\" I gasped grabbing Poole's stiff cock.\n\nPoole slipped his hands under my ass cheeks and lifted me up. I guided his cock between my legs and guided him in my cunt. My legs instinctively wrapped around his waist. Turning me to the wall Poole slammed me into it driving his cock against my cervix.  \n\n\"I love you Jane.\" Poole moaned. \n\nMy heart soared as he spoke the words I longed to hear.\n\n\"I love you Poole.\" I said wrapping my arms around his neck. \n\nStretching down to kiss me the head of his cock threatened to pull out of my pussy. Relaxing my arms I lowered myself keeping his cock from escaping. \n\n\"Poole ...\"\n\n\"Shh, we'll talk later.\" Poole cut me off. \n\n\"You always say that but we never do.\" I complained laughing. \n\n\"Exactly.\" Pooled slammed my ass against the wall filling my cunt again.\n\nI looked up to see Poole happy as he teased me. Holding on I decided he was right. It didn't take long for me to climax, shortly after Poole emptied his balls deep in my cunt. Cum dripped from my pussy as Poole took his time washing my hair and then my body. \n\nTina was waiting in bed when we arrived. Poole slipped in on his side as I walked around and got in on the other side. The three of us were exhausted not only physically but mentally. Little was said when I spoke up. \n\n\"I love you Tina, I love you Poole.\"\n\n\"I love you Jane, I love you Poole.\" Tina said breaking the silence after I spoke. \n\nThere was another silence and then from out of the darkness. \n\n\"I love you both.\" Poole whispered. \n\n\"Close enough.\" Tina squeaked. \"Oh Jane...\"\n\nTina never finished her thought as she pounced on top of me in a passionate kiss. Poole listened to our endless kissing then rolled to his side. \n\n\"Get a room.\" He teased. \n\n\"Never!\" Tina snapped back. \"Now that I know how much you love me I'm never leaving you again.\" \n\n\"Hmmrrrmmph.\" Poole grunted. \"That's when I love you the most.\" \n\n\"POOLE!\" Tina pretended to be mad and spanked his ass.\n\n\"Don't forget to take the slut with you.\" Poole teased again. \n\n\"I can go if you want. I know when I'm not wanted.\" I chimed in. \n\nPoole rolled out of bed and walked to the door. Tina and I sat up in the dim light and wondered what he was doing. Poole closed the bedroom door and locked it. Returning to bed Poole again laid on his back , pulled the covers up and laid his head down. \n\n\"I just told you both I love you. No one is going anywhere, now get some sleep.\" Poole glanced our way and sighed. \n\nTina's eyes grew huge in response to what Poole just did and said. I too was shocked and pulled Tina close. \n\n\"Let's get him.\" Tina whispered in my ear. \n\n\"Really?\" I dared her. \n\nTina grinned widely and nodded her head. I felt her pull my hand and together we pounced on Poole.\n\n\"Hey, this isn't sleeping!\" Poole complained. \n\n\"No but its more fun.\" Tina said as we both attacked our lover. \n\nAs much as he objected Poole quickly joined in as we took turns kissing him and each other. Tina ended up on one side of Poole I snuggled up to the other side. At one point we both had one hand gripping his massive cock. \n\n...\n\nI actually beat Max to the gym Thursday morning. The smile on my face told him everything he needed to know. Lela was on board as a fresh bikini was laid out for me to wear. Seeing me standing at the front of the line in a bathing suit there were few grumbles from the others. Poole happily inspected me along with the others. Fortunately mine was the only pussy he grabbed. \n\nThursday night I slept alone in my bed. Tina and haven't talked about Elaine yet but I knew she was still not happy with the way things went at the convention. Tina has hinted that Mr. Park was looking to make a move in the USA and wanted Tina involved. \n\nKnowing Donald was going back to his old ways I had Cassie start reporting to me daily. I tried to call Donald, but he is still avoiding any help I offered, including professional help.\n\nThere is one other thing that concerns me. I feel I owe my grandmother for her help. Maureen and I have never been real close, but then neither are any of her grandchildren, or her children for that matter. Stubbornly independent and preferring her home to traveling, holidays and special occasions are for the most part when we see her. \n\nPoole asked me to drive him home after work Friday. As it turned out he had an urgent meeting with client he asked me to sit in on. With Max already committed I obviously agreed. Four of us sat down in bathing suits to discuss the issues at hand. Fortunately I knew just enough about the company they represented to be helpful. Poole was happy with the outcome but pissed over the meeting. \n\n\"Can you see any reason this needed to be done today?\" Poole asked me as I drove home. \n\n\"Not really.\" I agreed. \"I mean he had a point about the expiration date, but all she wanted to talk about was terms.\" \n\n\"Exactly.\" Poole said pointing his finger at the road ahead. \"They think by insisting on negotiating at the drop of the hat I will somehow not be prepared?\" \n\n\"Is that what you think?\" I asked surprised. \n\n\"I know it.\" Poole pointed out the windshield again. \"Ah, I guess I can't blame them for trying.\" \n\n\"Well I think you should be happy with the outcome.\" I agreed. \n\n\"Thanks to you Jane.\" Poole looked over and smiled. \n\n\"I'm glad I could help.\" I said proudly. \n\n\"You know I was thinking of someone else that tried to play me.\" Poole looked over with a smirk. \n\n\"Really? Who?\" I took the bait. \n\n\"Morgan from the credit union called Tuesday.\" Pooled mentioned then let it hang.\n\n\"Morgan?\" I acted surprised. \n\n\"Called me after work on my mobile. Something about nothing...\" Poole watched my reaction. \"...then he happened to mention he talked to you about your finances that very day.\" \n\n\"Really? Wait, I believe you're right.\" I tried not to smile. \n\n\"Jane, Morgan has never called me about money. He knows Max handles all of that.\" Poole chuckled. \"And yes I know he told you about Cody's college fund.\" \n\nFor some unexplainable reason my heart sank knowing Poole thought I was playing him. \n\n\"Can you blame me for trying?\" I whispered. \n\n\"No Jane, I commend you for it.\" Poole said seriously. \n\n\"How long were you going to make me suffer?\" I pulled to the side and stopped the car on the street leading to Poole's house. \n\n\"Until Thursday.\" Poole admitted. \"You should have never given me that long to think about it.\" \n\nI put the car in park and looked down at my hands trembling. \n\n\"Why Wednesday then?\" I dared to ask. \n\n\"I knew you would never let me tell you how I felt without telling Tina first.\" Poole reached over and shut off the engine. \"I told her Wednesday the moment I saw her. We made love and afterward Tina happened to mention you were moving back in with Donald.\"\n\n\"I had to, Maureen's facility has strict rules on overnight stays.\" I explained. \n\n\"I know, I made those rules years ago. I guess I forgot them.\" Poole admitted. \"Jane I couldn't stand to think of you spending another night in the same house as that man.\" \n\n\"You really do love me?\" I whispered. \n\n\"I have always loved you Jane. Ever since that day you flashed me in the pool I knew you loved me too.\" Poole explained. \n\n\"And Tina, do you really love her?\" I dared to ask again.\n\n\"I do Jane.\" Poole admitted. \n\n\"Poole, does Tina know about Max?\" \n\n\"Has she seen us together? No. Does she suspect we're lovers?\" Poole said without emotion. \"I don't know, we've never talked about it.\" \n\n\"And Lela, does Tina know Maureen is her real mother.\" \n\n\"Yes, Maureen told the three of us when Penny moved back home.\" Poole explained. \n\n\"Any other secrets I don't know about?\" I asked Poole. \n\nPoole sat quietly and looked out the window. I could see he was torn on what to say. \n\n\"Jane, before this week, I have a feeling Tina has been trying to avoid us both.\" Poole said. \"This business of hers ...she's never been away this much.\"\n\n\"You think she is looking to step away? For us?\" I questioned. \n\n\"It wouldn't surprise me.\" Poole looked deep in my eyes. \"She loves us both that much. Then you ruined it for her.\" \n\n\"Me?\"\n\n\"Tina said you told her if she left so would you. Is that true?\" \n\n\"Yes Poole, I meant it then and I still do. I will not be the one that breaks up your marriage.\" I insisted. \n\n\"I believe you Jane, but Tina is not to be underestimated. If she still feels that way, Tina will try and make it happen. We can be respectful, but we must also be diligent.\" \n\n\"Thank you Poole.\" \n\n\"For what?\" \n\n\"For talking to me...\" I laughed. \"...and trusting me.\" \n\n\"We should get home the neighbors might start to talk.\" Poole winked. \n\n\"You don't have any neighbors.\" I started the car and headed to the house. Parking in the garage the door to the house suddenly opened. \n\n\"Poole, Jane, Great news!\" Tina greeted us. \n\n\"You're pregnant?\" Poole joked. \n\n\"No silly.\" Tina replied quickly. \n\n\"You sure?\" Poole teased her further. \"You seem pretty happy.\" \n\n\"No!\" Tina replied frustrated. \"You're the only kid I ever wanted. Now stop.\" \n\n\"Well?\" I asked to be polite. \n\n\"You know that new restaurant downtown? Well, they have a cancelation for tomorrow night.\n\nI had our name on the list and they called.\" Tina squealed in joy. \"I called Max, he and Lela are going to join us.\" \n\n\"Well there goes my paycheck.\" Poole moaned. \n\n\"Worse than that, you need to go buy a new suit.\" Tina laughed. \"Max is taking you tomorrow. I'm taking the girls to get a new dress. \n\n\"Tina...Lela can wear the emerald dress?\" I reminded her. \n\n\"Oh Jane that's perfect...\" Tina pulled me in the kitchen. \"...now for you.\"\n\nI could only laugh as she closed the door on Poole. \n\n...\n\n\"Jane.\" Poole called up the stairs. \n\n\"She's busy.\" Tina called down. \n\n\"Well you better make her un busy cause we have a problem.\" Poole came up the stairs. \n\n\"What is it?\" Tina asked as she closed the door to my room. \n\nMoments later she knocked on the bathroom door. Standing naked on the other side I swayed impatiently. \n\n\"What is it?\" I asked. \n\n\"Lela wants you, she won't get dressed.\" Tina laughed. \n\n\"Now?\" I moaned in discomfort.\n\nI opened the door so Tina could see the situation. \n\n\"I'll take care of her, you take care of that.\" Tina winked. \"And you two better show up, or else.\" \n\n\"I promise luv, but I really have to go.\" I said clenching my teeth. \n\nPoole was waiting as I came down the stairs. He doesn't dress up often but when he does its amazing. Max of course picked out the perfect suit for Poole down to the last detail. Handsome but manly. \n\n\"Wow.\" Poole said as I stood in front of him. \n\n\"Thank you.\" I turned for his pleasure. \n\n\"Maybe we should stay home?\" Poole teased.\n\n\"Tina will call the police if we do.\" I reminded him. \n\n\"Maybe time for a quickie?\" Poole joke again. \n\nI turned to the living room and returned with a pillow. Dropping it on the floor I turned my back to Poole. \n\n\"Unzip me.\" I spoke softly. \n\n\"Jane?\" Poole replied.\n\n\"It won't be quick if you waste time. Unzip me.\"\n\nPoole pulled down my zipper and I pulled off the dress. Standing in just a G string and high heels I dropped to the pillow. \n\n\"I can be washed. The dress can't.\" I laughed. \"Now the slacks.\" \n\nPoole removed his shoes and then hung his pants over the back of the chair.\n\n\"Whatever you do, don't pull out.\" \n\nIt was the last thing I said before taking Poole's cock in my mouth. We had time but not much. This wasn't a blow job to end all blow jobs. This was designed to remind Poole of things to come. A stress reliever if you will. \n\nWasting no time I hobbed the knob and licked the shaft. I looked up in Poole's eyes and saw how happy he was. \n\n\"Jane it won't be long.\" Poole warned me. \n\n\"Slut Timmy. Tonight I need to be your slut.\" I pulled off and stroked him quickly. \"Remember don't pull out.\" \n\n\"Ok Jane.\" Poole moaned. \n\nI was just about to correct him when Poole thrusted forward. The first blast caught me off guard. I coughed a bit and it shot up my nose. The second blast I was ready for and easily swallowed it. \n\nAfter that I let Poole drain his balls in my mouth and swallowed it all at once. Except for a few drops from my nose it was a neat and tidy. I sucked Poole clean until his cock hung down heavily. \n\nI stood up and slipped on my dress. \n\n\"Zip me please, I need to go brush my teeth.\" I stood with my back to Poole.\n\nThe zipper easily pulled in place and Poole turned me to face him.\n\n\"Kiss me slut.\" Poole growled. \n\n\"After I brush my teeth Timmy, maybe later tonight if you still want.\" I turned and walked away. \"Tina will want to see that.\" \n\nI looked down to see his cock flinch. \n\nPoole and I were sitting at the bar waiting for Max, Lela and Tina. My phone buzzed, looking at it there was a text from Tina. \n\n'where r u' \n\n'sitting at bar with p.' I replied.\n\n'be rite there'\n\nSure enough Max and Tina walked in the door and headed our way. Not seeing Lela I wondered where she could be. \n\n\"Here.\" Tina handed me a small paper bag that weighed almost nothing. \"Your girlfriend is in the car.\" \n\nI looked at Max and he gave that look of defeat. \n\n\"Max, you're a saint, what'll you have? I'm buying.\" Tina stepped up to the bar. \n\nI was tempted to look in the bag but decided maybe I should wait until I got outside. Poole looked at the front door and nodded his head. \n\nWalking that way I went outside and saw Max's BMW. In the back set sat Lela with her arms folded. As I got closer I saw she had on the emerald dress I bought her quite some time ago. Walking around to the other side I opened the door and sat down beside her. \n\n\"Are you coming in Princess?\" I asked softly. \n\n\"No.\" Lela tightened her arms over her chest. \n\nShe quickly looked at the bag I was holding then turned away. Obviously what I held was key to her stubbornness. \n\n\"What's in the bag Lela.\" I held it up for her to see. \n\n\"Tina was mean to me.\" Lela lashed out.\n\n\"Max maybe, but Tina would never be mean to you.\" I defended Tina. I looked in the bag and frowned. \n\n\"She wouldn't let me wear them.\" Lela snapped back. \n\nI reached over and laid my hand on Lela's thigh. Moving it up under the short hem of her dress my fingers reach Lela's pussy. The thin material was silky smooth and not very wide. Lela spread her legs slightly so I ran a finger along her tight black lips. \n\n\"Jane.\" Lela leaned in for a kiss. \n\n\"Very sexy.\" I gave her a quick peck.\n\n\"They're not comfortable.\" Lela complained. \n\n\"So you want to wear these?\" I held up the bag. \n\n\"Tina wouldn't let me.\" Lela pouted. \n\n\"So instead of letting me watch you walk in with this beautiful dress you're going to sit in the car?\" \n\n\"I'll come in if I can wear my panties.\" Lela folded her arms again. \n\n\"I'll meet you half way.\" I dangled the bag. You can put them on but only over the undies you have on.\"",
        "\"Until after we eat? Then I can take this stupid thing off.\" Lela negotiated. \n\nI ran my finger down along her slit a second time. In just the few minutes we were talking her pussy was getting damp. \n\n\"Suit yourself.\" I agreed. \n\nLela threw herself at me attacking my lips. I rubbed her pussy until she moaned. \n\n\"Jane please.\" Lela panted. \n\n\"Put these on the others are waiting.\" I pulled away and handed Lela the paper bag. \n\nI waited outside the car as Lela slipped on her favorite panties, the ones with the cartoon fish. Lela opened the far door and stood pulling the bottom of her dress down. Looking over I noticed she almost exposed her nipples when she did so. \n\nI walked around the car and stood in amazement. Lela was absolutely stunning. The emerald green dress was strapless. With a delicate lace bodice, it had a plunging vee neck that was quite daring. Lela's light brown tits were prominently displayed as were her toned legs.\n\nI couldn't believe Max let her out of the house dressed like this. \n\n\"Princess you're beautiful.\" I reached out and took her hand. \n\nIn the parking lot I swirled her in a circle letting the light pleats of her dress flare out. \n\n\"So sexy.\" I pulled her in tight. \"I want to eat you right here.\" \n\n\"Jane! Were at a restaurant.\" Lela giggled. \n\n\"Hurry we must show Poole.\" I said. \n\nLela held my hand tight as we walked in the front door. The three of them were just where I left them. Poole's eyes glistened as he watched Lela walk in. \n\nPoole looked at Max and nodded his approval. Max didn't seem quite as agreeable. By design Tina and I were dressed much the same as Lela. Attention is one thing, focus would be another. Happily Lela and I garnered equal amounts of attention. \n\n\"Thank god you're here.\" Tina gushed. \"The table is ready.\n\nI didn't know if she was happier Lela was with me or we were going to be seated. It was actually a C shaped booth we were led to. With plenty of room to stretch their legs Max and Poole sat at the ends. \n\nSomehow Tina ended up beside Max with Lela on the other side, then myself beside Poole. With my wine from the bar and a glass for Lela, Tina offered a toast to of all things, family. I had never realized it but in a broad sense we five are all related. \n\nStylish and new I expected to be unimpressed with the restaurant. I knew Poole hated these places. Each new venue was trying to outdo the next with some fancy plate that cost a fortune and left you hungry. Poole actually asked if we could stop and get a burger on the way. \n\nI tried to look it up online but the website was still under construction. Empty promises of comfort food, whatever that is, and fake testimonials were all that was on the site. \n\nWhen the menu arrived I was surprised by the simplicity and selections. Beef, poultry, pork, fish and vegetarian were equally balanced. With just five selections for each category the menu assured you the food would be fresh. \n\nEach meal was accompanied by soup or salad and a recommended side for each meal. Alternative sides were available at no charge. Premium sides were reasonable and clearly marked. The smell of freshly bake bread and breadsticks announced their arrival to the table. \n\nI'll have to admit I was impressed. I knew little of Lela's eating habits outside of camping and then usual lunches we shared. Chicken fingers were a favorite and her standby. At a place like this I wasn't sure how she would respond. Scanning the menu I then saw her look at Max on the other side of Tina. \n\n\"What do you think? Did you see anything you like?\" I asked quietly.\n\nI reached under the table and rested my hand on Lela's thigh. With the short dress I was touching her skin and not the material. It wasn't meant to be sexual just to reassure Lela I was here if she needed me. \n\n\"I don't know. What does this mean?\" Lela asked nervously. \n\n\"Braised?\" I pointed to the menu. \"The meat is usually seared, cooked real fast at a high heat. Then it is covered by seasoned gravy but real thin to keep it moist and taste good.\" \n\n\"I like chicken, do you think I'll like it braised.\" Lela asked me. \n\nKnowing Max and his skills as a cook she probably has had it and just didn't know. I know she wanted to ask Max, and he probably wanted to answer but she asked me. \n\n\"Or maybe the fish?\" I pointed to the braised salmon. \n\n\"Jane, I don't eat fish. I love fish.\" Lela looked down at her lap. \n\n\"Chicken it is then.\" I replied quickly, squeezing her thigh that I approved. \n\nMax and Tina both gave me the evil eye but laughed just the same. Obviously they had filled Poole in as he laughed too. \n\nI was about to move my hand from Lela's thigh but her hand moved over mine holding it in place. Everyone knew but not a word was spoken. I couldn't eat that way but after every course Lela led my hand back to her thigh. \n\nAfter the salad Lela guided my hand to her thigh, only this time she moved it under her dress. Like always the little vamp was pushing the limits. I let her slowly move my hand near her fish covered panties. \n\nWhen I brushed up against the material I pulled my hand from under the table and reached for another bread stick. Lela looked at me in frustration. Fortunately our meals were served. I wanted the fish but didn't want to offend Lela. \n\nI ordered the smaller offering of the filet instead. I knew Poole would eat the leftovers if it was too big. My meal was impressive as were the others. It really was comfort food. Max and Poole ordered the larger sized meals and the portions reflected that. \n\nThe conversation was lively. At work Poole and Max are all business, well at least Max is. It's unfortunate more people don't see him away from the office. He and Poole feed off of each other making for good times. \n\nTina and I finished eating first. I placed a few bites of my steak on Poole's plate. Lowering my hand Lela took it and immediately guided it under her dress. I stopped just short of her goal, Lela fortunately decided not to press on any further. \n\nFor such a little thing, she can at times, pack away the food. With one hand holding mine Lela continued eating her meal. \n\n\"How was the chicken?\" Tina asked as Lela cleared her plate. \n\n\"Better than Max's.\" Lela giggled. \n\nI had a feeling she was kidding but with Lela you're never quite sure. \n\n\"The only way to eat chicken is fried or barbequed.\" Max said acting hurt. \n\n\"Nobody makes better fried chicken than Max.\" Poole boasted. \n\nDuring the exchange Lela tried to bring my hand closer to her pussy. I refused to allow it which only frustrated her more. \n\n\"I've got to pee.\" Lela announced rudely. \n\n\"Lela!?\" I chastised her. \"We are ladies.\" \n\nI wasn't sure if I offended her or not. Instead of waiting to find out I looked to Poole. \n\n\"May we get out? Lela and I would like to visit the powder room.\" I smiled. \n\nNo longer able to keep a straight face Poole slid from the booth. Lela reluctantly followed no longer holding my hand. I stopped and smoothed out my dress and waited as Lela did the same. It's not that Lela doesn't have any manners, she does, but when she gets mad she tends to ignore them.\n\nI held out my hand, Lela thought about not taking it but begrudgingly did. The restroom was bright and inviting. I noticed the handicapped area was on the opposite side of the wall as the regular stalls. It was more like a separate room with a real door. Guessing we could be interrupted I pulled Lela in the large and more private handicapped facility. \n\n\"You're mean.\" Lela pulled from my hand and folded her arms. \n\n\"Oh no my little Princess, you can't have it both ways. I said knowing what this was about. \"Come here.\" \n\nI guided Lela in front of the sink and a large mirror. \n\n\"What do you see?\" I asked firmly. \n\n\"Me, I see me.\" Lela replied confused. \n\n\"Well I see a beautiful woman. I sexy woman...look at that dress...I want to make love to you right here.\" I pointed in the mirror. \n\nLela looked at me in the reflection seeing I was sincere. I reached down and pulled up the hem of her dress exposing the panties with the fish on them.\n\n\"Now I see a little girl that doesn't want to be a woman, or a woman that wants to be a little girl.\" I lowered her dress. \n\n\"But I like them, they make me happy.\" Lela pleaded for me to understand. \n\n\"Fine then wear them. But I will not fondle a little girl, or a make love to a woman that wants to be a little girl.\" I explained. \"I love you Lela, you truly are a princess. But I will only be a lover to this woman, this princess in the mirror.\" \n\nI turned to Lela and pressed my lips to hers. Lela's tongue reached out for mine to reassure her I still loved her. It was a long passionate kiss that needed to end too soon. \n\n\"When you decide, let me know.\" I kissed her quickly one last time. \n\nI left Lela in the handicapped room and closed the door. I used the facilities on the other side and headed to the table. Max and Tina were concerned when I returned alone. Poole on the other hand almost seemed happy. \n\nI took a few minutes before Lela returned. Poole and I stood to allow Lela back in her place. The table was now cleared and desert menus were placed in front of us. The waiter arrived to check in on us. \n\n\"Can Jane and I share a desert?\" Lela surprisingly asked. \n\n\"Oh I was hoping someone would want desert, will you split one with me?\" Tina asked Max.\n\n\"Absolutely.\" Max smiled. \n\nI know he had a sweet tooth and rarely passed the opportunity especially if he can blame it on someone else. We all looked at Poole.\n\n\"Not me, but I will have another beer.\" Poole pointed to an empty glass. \n\n\"And I'll have another glass of wine.\" Lela pointed to her glass. \n\nEveryone looked at Lela but Tina saved the day by ordering another round. The waiter left for the drinks explaining he would take our desert order when he returned. \n\nMax and Tina discussed the desert menu. It too was simple and well laid out. Cakes, pies, ice creams, and sugar free options. \n\n\"What would you like to share?\" I asked Lela. \n\nWith a stealth like move her left hand took my right hand and pulled it under the table. With her right hand she pointed to the menu I held in my left hand. Placing my right hand back on her thigh Lela pointed to what she wanted me to order. \n\nI looked at her somewhat surprised. At that moment she guided my hand under her dress in the direction of her pussy. I looked back at the menu and then to Lela. \n\n\"Are you sure that's what you want.\" \n\nWithout a word but an impish smile Lela nodded and drug my right hand so it would brush up against her pussy. Her naked pussy. Lela had not only taken off her favorite panties she took off the thong Tina made her wear. \n\n\"That sounds delicious.\" I said holding back tears. \n\nI dare not move my hand for fear of arousing Lela more than she was already. I could feel the heat as my pinky finger brushed over her dampness. Fortunately Lela was content I knew what she had done. \n\nThe waiter delivered the drinks and started with Max. He and Tina ordered the cr\u00e8me brulee. \n\n\"And you ma'am.\" \n\n\"We would like to share the chocolate pie.\" I answered with a straight face. \n\nI thought Tina was going to choke on her drink as she started coughing. The waiter seemed to know it was a private joke and smiled. After verifying our orders he smartly left. \n\n\"That does sound delicious.\" Poole joked. \n\n\"Poole, Max is right here.\" Tina was finally able to say.\n\n\"Hey she's my sister too.\" Poole only dug himself a deeper hole. \n\n\"That only makes it worse.\" Tina pointed out. \n\nMax tried to be mad but instead he seemed to accept the fact it really was funny. \n\n\"See what you started?\" I said to Lela laughing myself. \n\n\"How did they know I'm not wearing panties?\" Lela whispered loud enough we all could hear.\n\n\"They didn't. But now you just told them.\" I explained. \n\nIt took a minute but then Lela started laughing too. Surprisingly Lela didn't let go of my hand until desert came. \n\nAfter desert the owner of the restaurant stopped in and thanked us for dining with him. Having been the one who talked to Tina he asked who she might be. Tina introduced herself and then the rest of us. Poole was introduced last, upon hearing his name our host's eyes lit up. \n\nHe had heard of Poole and had always wanted to meet him. Handing Poole his card the owner thanked us once again and moved to another table. It was getting late now, Lela's stubbornness, excitement, and I'm sure two glasses of wine had taken its toll on her. With Lela's head resting on my shoulder the decision was made to leave. \n\nNormally Max would take her home then bring her back in the morning. Tina suggested we take her home so she could sleep in. Lela and I walked out hand in hand to the parking lot. Bidding Max goodnight Poole took Lela in the back seat while I drove home. \n\nSound asleep by the time we got home Poole carried Lela up to her bed. \n\n\"I'll take it from here.\" I stood over sleeping beauty. \n\nPoole closed the door as he left while I slipped off her shoes. Lela's eyes opened half way and she gave me a sleepy smile. \n\n\"Are you staying?\" Lela whispered. \n\nI looked back at the door and turned to Lela. \n\n\"I kind of made plans for the night.\" I leaned in and kissed her. \n\n\"Will you come stay with me when Poole leaves for golf?\" Lela giggled. \n\n\"Maybe sooner.\" I leaned in and kissed her. \"Come let's get you undressed.\" \n\n\"Jane, can you take my dress off later.\" Lela asked. \n\n\"Are you sure Princess?\" I asked caressing her cheek. \n\n\"Maybe then you'll want some more chocolate pie?\" Lela teased me. \n\n\"I know I will.\" I kissed her one last time. \n\nI closed the door behind me. Tina was waiting in the hall naked. \n\n\"Starting without me?\" I chuckled. \n\n\"Me? I heard what you did before dinner.\" Tina laughed. \n\n\"Oh yeah, sorry about that.\" \n\n\"Well don't be, he loved it. Besides if you didn't he would have probably cum already.\" Tina took my hand. \"Come with me slut our master awaits.\" \n\nPoole was propped up in bed his hard cock glistened as it rested on his stomach. \n\n\"Get back here and finish what you started slut.\" Poole growled. \n\n\"Ah ah, not so fast buster we had a deal.\" Tina wagged her finger. \"Patience big guy.\" \n\n\"Patience my ass, get the slut undressed.\" \n\n\"Let me do this Jane.\" Tina whispered in my ear. \n\nStanding behind me Tina lowered the zipper on my dress. With the front falling away Tina reached in and gripped my tits. \n\n\"Poole her nipples are so hard...I think she's ready.\" \n\nThe cups of my dress covered Tina's hands but Poole's cock twitched just the same. \n\n\"I wonder what she's hiding down here.\" Tina pulled her hands from my tits. \n\nOne nipple peaked out as Tina reached down and lifted the back of my dress. Pulling my thong down Tina let them fall over the high heels I was still wearing. Poole's cock jumped again. Tina gripped my ass cheeks and fondle them roughly.\n\n\"Bend over slut.\" Tina pushed between my shoulders. \n\nSpreading my feet as much as the thong allowed I bent forward still looking at Poole. My dress fell away exposing my small breasts. The weight of my nipples hung down stretching the soft skin around them. Poole's cock rose from his stomach straining to be touched. Tina lifted the bottom of my dress.\n\n'SMACK'\n\n\"Ow.\" I replied taken more by surprise than hurt. \n\nTina's hand landed solidly before she rubbed the tender spot. \n\n'SMACK, SMACK,SMACK.' Tina repeated my punishment. \n\nI moaned with each firm contact. Tina caressed my cheeks as I looked again at Poole. Pre-cum was seeping from his cock. Tina slipped her fingers between my ass cheeks and over my puckered hole. Moving lower Tina pushed two fingers in my greedy pussy. \n\n\"God is she wet.\" Tina said in a sultry voice. \"I wonder if your sister knows the affect she has on your niece?\" Tina taunted Poole. \n\nA small puddle of pre-cum was collecting below the end of Poole's cock. I so much wanted to go help him out. Tina pulled her fingers from my cunt and then must have licked them clean as I heard her lips smack. Tracing between my ass cheeks again Tina stuffed her fingers in my pussy hard. \n\n\"Ohhhhhh.\" I whimpered. \n\n\"See that Timmy, the slut is almost ready.\" By calling him Timmy, Tina was pulling out all of the stops. \"Let's see if that ass is ready?\" \n\n\"Please...no ...slut...\" I moaned as her fingers drug out of my pussy. \n\nRimming my asshole Tina probed gently.\n\n\"...yes slut do it.\" I moaned again. \n\nNot one but two greasy fingers attempted entry. I tried to relax as Tina twisted and wiggled her fingers past my sphincter.\n\n\"On your back Poole.\" Tina barked out her command. \n\nPoole slowly moved lower on the bed with just one pillow under his head. With the pre-cum threatening to drip on the sheets, Tina spoke to me.\n\n\"Hurry slut clean that up.\" \n\nWith my thong still over my feet, and Tina's fingers still in my ass, I shuffled the short distance to Poole and lapped up his nectar. \n\n\"Now mount him.\" Tina continued her dominance. \n\nStepping out of the thong but with my dress and high heels on, Tina's fingers in my ass guided me awkwardly over Poole's thighs. I reached down and took his cock. It swelled in my hand no doubt anticipating any contact at all. Pulling the front of my dress up Poole watched as I guided the swollen cock into my pussy. \n\nI pushed down as Poole thrusted up. I felt the fingers in my ass shifting as his cock pushed them aside. \n\n\"Aaarrrrggghhhhhhhh.\" Poole groaned as his cock pressed against my cervix. \n\n\"Don't either one of you cum!?\" Tina yelled as Poole and I tried to fuck. \n\nTina grabbed Poole's balls eliciting a hurtful protest. \n\n\"Stop fucking her.\" Tina pulled her fingers from my ass and then smacked it. \n\nTina moved out of my sight as Poole's hand came down and gripped my ass cheeks keeping me from moving. I could sense Tina moving around doing something. My tits pressed against Poole my pussy was contracting around his cock. \n\n\"Spread those cheeks.\" Tina barked taking me by surprise. \n\nThen without warning a cold hard object pressed against my tight opening. \n\n\"We love you slut. Thank you for coming home.\" Tina whispered. \n\nI felt the dildo no doubt attached to a harness dilate my asshole. \n\n\"Oh god yes.\" My body trembled in desire. \"Fuck me!\" I cried out. \n\n\"Not yet my love.\" Tina hissed through clenched teeth. \n\nWhen the dildo stretched me open, Poole's cock swelled at the same time. I wrapped my arms around Poole below me as his hands continued to spread my ass for Tina to keep moving deeper. \n\n\"Please slut hurry.\" I wiggled between them both. \"Fuck me Poole.\" \n\nJust then I felt the straps of the leather harness press into my ass cheeks. The feeling was something I could never explain. Aside from the intense feelings my body tried to cope with, was the love I was feeling at this very moment. \n\n\"Together now Poole.\" Tina said happily. \"Let's fuck this slut so she'll never want to leave again.\" \n\nThe dildo in my ass was smaller than Poole's cock but still stretched me out. Each thrust from Poole ground my clit against him. Mini orgasms peppered my gushing cunt. \n\n\"You're such a slut.\" Tina hissed in my ear. \"Look at you still in your dress getting fucked.\" \n\nShe was right. For some reason still being somewhat dressed made it feel all the more decadent. \n\n\"Yes Tina.\" \n\n\"Next time we'll take you to a cheap motel and leave the curtains open.\" Tina said painting a picture in my mind.\n\n\"No Tina.\" \n\n\"Don't worry slut, you belong to us now. No one else will be fucking you again.\" Tina growled as she slammed in my ass. \n\n\"Yes Tina.\" \n\n\"I'm cumming.\" Poole warned us. \n\nI relished the thought but was too far gone to care. Tina continued to pound my ass sending ripples of ecstasy every time Poole's cock surged. \n\nI could feel Poole's cum churning in my pussy then flowed past his shriveling cock. My throbbing clit now washed in our slippery love making basked in the new found contact.",
        "\"TINA!\" I yelled. \n\nThe fucking slut buried her fake cock deep in my ass. Like a pot of water on high heat my simmering sex suddenly started to boil over violently. \n\nPoole held me firmly as my body shook as my pussy continued to gush. Then as if Tina threw ice water in the pot she pulled the dildo from my ass. \n\nThoroughly spent I lay on Poole hoping to remember every delicious moment. Tina got off the bed and started doing something again. Below me I felt Poole's cock start to stir. The head was just inside my pussy, I shifted helping it work back inside. \n\n\"Get off him slut.\" Tina demanded. \n\n\"Please no.\" I begged. \n\n\"We're not done with you yet. Get undressed.\" Tina replied. \n\nReluctantly I rolled off of Poole. Kicking my shoes off I stood on the floor and wiggled out of my dress. Cum started leaking from my cunt as I turned to face Tina. She was sucking Poole's cock and by the looks of it was getting the results she desired. \n\nTina pulled up with the harness still on but the dildo no longer there. \n\nShe looked at Poole with as wicked smile. \"Switch.\" \n\nPoole looked up at me and for a moment it didn't register what Tina meant. \n\n\"Now you're my sluts.\" Poole said wryly. \"Jane bring that ass here.\" \n\nI was both terrified and excited at the same time. For the first time in my life I had just been fucked in the ass and pussy at the same time. I wasn't sure how much more I could take tonight. \n\nI moved to Poole cautiously, he took my hand and guided me over his cock facing away. \n\n\"I'll let you do the honors slut.\" \n\nI trembled with desire as Poole guided his cock to my puffy ass hole. I settled in place knowing what I was in for. Tina had stretched me nicely but nothing like what was going to happen now. Wiggling my ass the head of Poole's cock pressed firmly against the opening. \n\nTina watched as Poole's cock started to bend as my ass temporarily defied his entry. Twisting my hips back and forth I could feel Poole's cock working past my resistance. \n\n\"Ready?\" I gasped in anticipation. \n\n\"Yes.\" Poole said as if he was holding his breath.\n\nApplying just a bit more weight, a slight pinch, and then the magnificent feeling of Poole's cock stretching me open. \n\n\"That might be a better feeling than a hole in one.\" Poole said happily. \n\n\"Here comes your trophy then.\" I replied. \n\nWith the head of his cock firmly inside I lowered my ass slowly down the entire length. When my ass cheeks rested on his thighs Poole reached up and grabbed my tits. Pulling me down on top of him I could feel his cock moving in my ass. \n\n\"Ok slut clean that cunt.\" Poole instructed Tina. \n\n\"You pushed it all out.\" His wife teased him. \n\nTina spread my legs outside of Poole's and started lapping at my cunt. \n\n\"Please share.\" I whimpered as I watched Tina enjoy taunting me. \n\nStabbing my pussy with her tongue, Tina drug her tits along my body where she swallowed the whole thing. \n\n\"Beg me slut.\" \n\nPoole's cock swelled in my ass, as Tina drug her tits back down my body. \n\n\"Please Tina, please share with me.\" \n\n\"Again.\" Tina taunted me. \n\n\"Please slut, I'll give you a back rub.\" \n\n\"Oh you tricky little slut.\" Tina laughed. \n\nRunning her tongued between my pussy again Tina again dragged her tits over my body. This time Tina opened her mouth and let Poole's cum drip into my mouth. When the last stringy morsel fell from her lips Tina kissed me passionately. \n\nPoole's cock swelled in my ass again. I was now acclimated to his cock and the need to be fucked started to consume me. With my feet on the bed I raised my ass up and slammed over Poole's cock. \n\n\"So the slut wants to fuck?\" Poole hissed behind me. \n\n\"Yes my love, fill my ass.\" \n\n\"Tina, I think we need some help here.\" Poole laughed. \n\nTina leaned over me and laughed as well. \"You're going to love this slut!\" \n\nWith a quick kiss Tina then moved from the bed. Reaching down she stood up with a thick black dildo with several large ridges. \n\n\"NO!\" I squealed. \n\n\"Oh yes my slut.\" Poole gripped my tits firmly. \"You want to be fucked like a slut but loved at the same time...\" Poole pinched my nipples. \"...well Tina and I are in love with you and now were are going to fuck you again to prove it.\" \n\n\"But it's too big.\" I argued as Tina stroked it with lube.\n\n\"No it's not, it's my favorite when Poole's not around.\" Tina moved closer. \n\n\"But Poole's cock is in my ass.\" I reminded Tina as if she forgot. \n\n\"But I thought you loved his cock in your ass.\" Tina sneered. \n\nWithout waiting or an answer Tina rubbed the black monster against my pussy. With Poole's cock in my ass the opening to my cunt was quite small I guessed. With two fingers guiding it in me Tina pushed the first of several ridges in my pussy. \n\n\"Oh damn.\" I cursed. \n\nReaching out I grabbed Tina's hips and held her in place. \n\n\"Fuck me Poole.\" I groaned. \n\nPoole's hands moved to my lower back and lifted my ass slightly. Tina's cock pushed in another ridge and my body somehow found room for it. \n\nPoole started working his cock in my ass producing a feeling like no other. Still holding Tina's hips I pulled her in another ridge. I took a deep breath as the pressure transitioned from discomfort to pure pleasure.\n\n\"You ok slut.\" Tina asked growing concerned. \n\n\"Do you feel it Poole?\" I squeaked. \n\n\"Yes but I can't do this much longer.\" Poole explained. \n\n\"Let me down I have an idea.\" \n\nPoole removed his hands and my ass engulfed his entire cock. Tina's pulled out two ridges making my pussy explode. \n\n\"Fuck me slut.\" I demanded. Tina pushed back in one of the ridges. \"Fuck me.\" I said again pulling her hips and pushing the other ridge back in my cunt. \n\n\"Fuck me.\" I pulled Tina closer forcing the fourth ridge deep in my pussy. \n\n\"Fuck me.\" I struggled to get out. The two of us pushed the fifth ridge stretching my pussy to the limit.\n\n\"Jane...\" Tina started to pull back. \n\n\"Fuck me slut, drive that cock in my slut cunt.\" \n\nWith beads of sweat forming on my forehead I pulled Tina tight against me. The sixth and final ridge drug past my pussy lips. \n\n\"Now don't stop until I cum.\" I looked up at Tina and threatened her. \n\n\"I love you Jane.\" Tina pressed her lips to mine. \"Cum for us slut.\" \n\nTina slowly pulled the black dildo from my pussy. Each exquisite ridge sent multiple vibrations in my pussy. Poole moaned beneath me as his cock felt the same thing I felt. Tina reached the end and started back in producing different but equally sensational results.\n\n\"Faster slut.\" I growled. \n\nTina now pulled out and back in increasing the tempo of the vibrations. My pussy could no longer keep up. Because of Poole's massive cock in my ass the ridges strummed just beneath my clit. \n\n\"Mmmmmmmmmmmm. Faster slut.\" I begged. \n\nI could feel Poole's cock pressing deeper in my ass. Knowing how frustrated he must be getting only added fuel to the fire. \n\n\"Jane...\" Tina gasped. \"...soon.\" \n\nTina's hips were almost a blur above me. My clit was bouncing off the ridges so fast it was making my pussy contract involuntary. \n\n\"JANE!\" Tina yelled. \n\n\"I'M CUMMING!\" I yelled back. \n\nTina ground her harness covered pussy hard against mine. The throbbing in my cunt matched hers as we shared and explosive orgasm. Tina was spent but Poole was still filling my ass with his long hard swollen cock. \n\nI rudely pushed Tina off taking her favorite sex toy with her. I rolled to the other side taking Poole with me. \n\n\"Fuck that ass until you cum.\" I growled. \n\nWithout a word, and laying on our sides Poole finally got his wish. He could have fucked me for hours if he wished and I would have loved every second. As it was, Poole only lasted about ten minutes before I felt the warmth of his love fill my ass. \n\nMy night with Poole and Tina didn't end just yet. Basking in the afterglow of our adventure, I assured them I loved every minute of their plan. I also explained it was something we should reserve for special occasions for fear I might get addicted to it. Tina laughed but I think Poole suspected it might be true. \n\nI lounged in bed with my lovers for another half hour. We petted and caressed, kissed and laughed. Knowing Poole would be up early to golf I decided then to leave Poole and Tina alone. I went to my room to clean up before heading to bed once again.\n\nEven though I was tired and tender I was actually looking forward to joining Lela. Making my way to her room I found her sound asleep, a night light in the corner cast a soft glow. Lela still wore her dress. Taking it off her in bed presented its own challenges so I decided to see if she would stand long enough to do it. \n\nLeaning over I kissed her cheek. \n\n\"Princess it's time to get undressed.\" I whispered in her ear. \n\n\"Mmm sleeping.\" Lela mumbled. \n\n\"I know baby but we need to get you out of that dress.\" I replied softly. \n\n\"Are you staying?\" Lela asked still not opening her eyes.\n\n\"Yes baby, now come with me it will only take a minute.\" \n\nI grabbed Lela's elbow, still refusing to wake my little black lover stood limply. Moving around her back I dare not let her go. I tugged on the zipper and through the dim light her caramel skin appeared as the sides of the dress peeled away. \n\nI was so moved I leaned in and kissed the nape of her neck. \n\n\"Jane.\" Lela reached over her shoulder and pulled my head forward. \n\nPushing her dress lower my hands wrapped around and cupped her modest breasts. \n\n\"Kiss me.\" Lela insisted still in a dreamy state. \n\nOur lips met awkwardly as my fingers caressed her tits softly. Lela swayed precariously as I continued to bring her pleasure. Afraid Lela might fall I moved my hand lower along her sides. With hips a bit wider than mine and an ass that bubbled slightly the dress resisted further decline. \n\n\"Here let me.\" Lela giggled sleepily. \n\nWith my left arm around her far side my hand pressed lightly on her stomach holding her in place. Lea wiggled her ass and undulated her hips before the last of the garment slid past her toned thighs. Instinctively I ran my right hand over her hip and to the naked pussy she taunted me with all night. \n\n\"Jane no.\" Lela tried to twist in my arms. \n\nI was going to stop but just then Lela pulled one foot from the dress on the floor and spread her legs. I move my hand over the small triangle of course hair that led to her sex. Deftly my fingers ran along her slit before the middle split the folds and drug back up between them. \n\n\"Should I stop Princess?\" I bit her earlobe.\n\nWith her eyes still closed Lela began to sway again. Taking her silence as a yes I pushed two fingers between her dark brown labia's and spread her lips. \n\n\"Ooohhhh.\" Lela mewed. \n\nI bent down and suckled her right tit. Taking the stiff nipple between my teeth I tugged the rubbery morsel taunt. Lela body shivered as it thrust her pussy hard against my hand. \n\n\"I'm hungry baby.\" I teased her nipple mercilessly. \n\n\"What?\" Lela's hand combed through my hair. \n\n\"Chocolate pie, I want to eat chocolate pie.\" I moved up to kiss her. \n\nLela shuffled to the bed and started to sit down. I guided her to a prone position. With her eyes still closed I kissed Lela as her hands moved up to grip my dangling tits. I moved lower and kissed her chin then moved to Lela's neck. Moving between her tits I kissed the soft insides avoiding her almost black nipples. \n\nLela held on to my tits until the last possible moment. By the time I licked her belly button Lela's hands were on the top of my shoulders desperately pressing me lower. Kneeling on the floor I pushed the back of her legs up, my teeth tugged at her curly pussy hair. \n\nLela placed both hands on the top of my head and pushed me lower yet. I nipped at her clit, Lela arched her back and whimpered. \n\n\"Eat me slut.\" \n\nI spread her lips with my tongue. Lela's pussy was oozing a creamy excitement. I lapped it up as fast as it flowed. Lela's hands now gripped her tits as her head slowly move side to side. I pushed her legs up higher, Lela's tight brown hole presented itself. I rimmed it with my tongue expecting an immediate rebuke. \n\n\"Chocolate pie... slut.\" Lela giggled. \n\nOne hand grabbed my hair and drug me back to her pussy. Taunting and teasing her I watched as Lela's body writhed on the bed for my enjoyment. With my tongue getting tired I decided to end her night with a bang. \n\nBy focusing on Lela's clit, getting her off was accomplished easily. Unlike the fireworks, I expected Lela's orgasm seemed to be a long slow burn. With her eyes still closed Lela guided me back over her body. My tits soon pressing into hers where Lela and I shared the most passionate of kisses. \n\nSatisfied and happy Lela rolled to her side and pressed back against me. Without so much as a goodnight my little brown lover went back to sleep. \n\n\"I love you Princess.\" I whispered kissing her shoulder.\n\nTo be continued..."
    ],
    "authorname": "twofourthree",
    "tags": [
        "incest",
        "taboo"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/just-jane-ch-14"
}