{
    "title": "Tears of the Fallen Ch. 21",
    "pages": [
        " Apologies for the long delay. Hope everyone has a wonderful festive period and keep your eyes peeled...for the remaining chapters :)\n\nJaz\n\n*****\n\nPietro closed and locked the main doors to the Dive, knowing he couldn't put off the inevitable any longer. Cassia was upstairs in his apartment, where she had been all night since he'd returned to the nightclub.\n\nHe'd stayed away for as long as he could, finally returning when he received a particularly blunt voicemail message from Andrei telling him to get his ass back to work. Now he had to go upstairs and talk to his wolf, even though he had no idea what he was going to say.\n\nWhat could he say? She had announced that he was her mate and for Cassia, that was the end of any discussion. She was more wolf than vampire, and she followed her animal genealogy. That was what made her so pack orientated. That was why she'd had no choice but to protect Reasa that day. He was finally beginning to understand that a wolf pack wasn't that different from a vampire coven, and his wolf had claimed him as hers.\n\nSighing, he headed upstairs, still stunned by Cassia's revelation but he supposed that explained many things. Like why he had been ready to rip Fox apart for daring to think he had any kind of claim over Cassia; why he had been so unaccountably drawn to the blonde wolf from the moment he had first laid eyes on her. He had been willing to risk Alexei's wrath to be with her, not to mention Andrei's, and that wasn't something he did lightly.\n\nCassia was his mate.\n\nHe ran the words through his mind, testing them out, examining the emotional appeal to them. They brought forth such strong feelings of belonging, and of ownership, only that wasn't the correct word. No, he didn't own Cassia; he belonged to her, as she belonged to him.\n\nShe belonged to him. \n\nPietro let himself into his apartment, his gaze travelling over the living area and finding it empty. He knew she was still there...he could scent her in the apartment. A quick check inside the small kitchenette showed it was empty too though there were clean dishes on the draining board.\n\nCrossing to the refrigerator, he opened it, not really surprised to see the food inside it. Cassia must have gone out at some point. She must have taken the back stairs down to the basement exit, which meant Andrei had given her the code to let herself back in. For a moment he wanted to throttle his friend. Andrei was having too much fun at his expense with this one, but then, he had enjoyed himself when Loretta claimed his friend so he supposed he couldn't really complain.\n\nThat only left one place she could be and he inhaled deeply before he silently opened the bedroom door. Cassia was curled up on top of the bed, the bedspread half covering her lower body. She was still dressed though it appeared that she'd been asleep for a while. Her curls were tumbled across her face, one arm supporting her head as she slept. She looked so adorable he wanted to cross the room and climb in beside her. He wanted to lose himself in her arms and pretend that they didn't have to deal with all the issues complicating everything.\n\nHe couldn't though, he knew that. They had to talk and that meant waking her. Crossing the room quietly, he sat down on the side of the bed, unable to resist the urge to brush her silky curls away from her face. Cassia murmured in her sleep, rolling onto her back as her eyes fluttered opened. \"Pietro.\"\n\n\"You shouldn't be here, Cassia. You should be home safe at the compound.\" He watched the sleepiness leave her face, a small frown marring her forehead.\n\n\"I should be wherever you are,\" she answered, moving to sit up until they were bare inches apart. \"I meant what I said earlier, Pietro. You are my mate.\"\n\nHe hadn't expected anything less than the total conviction in her expression. If only it were that simple, though. Pietro couldn't deny the way his heart sped up at the thought of being mated with her, at how much he longed to know that sense of belonging that only true mates experienced. Yet, how could he make her understand just how difficult this was for him? Yes, she was empathic enough to understand, but she didn't appear to see that the issues they faced weren't that easy to overcome.\n\n\"Cass...even if that's true; you have to know how impossible this situation is.\"\n\n\"I know there are issues we need to overcome, Pietro, believe me, I completely understand that. What I don't understand is why you're not willing to try. You are so convinced that you will fail at any attempt to compromise that you just don't appear to want to even contemplate it. Don't you feel the mating pull? Am I not worth the attempt?\"\n\nIf ever there was a woman who was worth just that and so much more, it was definitely Cassia Romanov, but still he hesitated, still he wasn't sure he could be the man that she believed him to be. \n\n\"This isn't about you,\" he argued, rising from the bed to pace in agitation. \"This is about me, Ni\u00f1a. I am not the forgiving kind. I have spent centuries alone, dealing out justice as and when required. Even before Europe I was this man and I don't know how to be anything else.\" He stopped to look at her, his expression haunted. \"I am flawed, Cassia and it has nothing to do with these scars I wear now. I can't forgive, Reasa, not even for you.\"\n\nCassia stared at him, hearing the subtle plea in his words. He truly believed everything he said and it was hurting him as much as the feelings of continued rejection were hurting her. She wasn't willing to give up trying, though. She wasn't willing to concede that he couldn't learn to compromise for the good of the pack. He wanted her as much as she wanted him, of that she was certain. Well, she would fight for him; she would be his strength even as he doubted himself.\n\n\"I'm not willing to accept that,\" she finally replied, rising slowly from the bed, her hands placed on her hips. An idea was slowly forming in her mind, something so outside the box it would probably call to the vampire within him.\n\n\"I challenge you...\"\n\nPietro frowned, confusion dancing across his face at her sudden change in tactics. \"To what?\"\n\n\"A sparring match, the best of three. If you win, we mate and I live here with you outside the pack. If I win, we mate and you live with me at the compound.\"\n\nHis expression turned incredulous. \"I'm not fighting you.\"\n\nCassia's head cocked to the side, a small smile teasing her lips. \"Scared I will beat you?\"\n\n\"You're V\u00e2rcolac...of course you'll beat me.\"\n\nShe hadn't considered that and her brow puckered as she thought it through. \"Okay, that's a valid point. I will promise only to use one part of me, the vampiric side. That way we will be evenly matched; vampire to vampire.\"\n\nThis had his expression turning thoughtful, and she could see that him wavering. He had never seen her vampiric side. That surely had to tempt his own vampire...the urge to see just what she was when she embraced the other half of her nature. \n\n\"Your wolf is your stronger side,\" he pointed out.\n\n\"Exactly, this way it will be fairer to you and I give you my word not to use any magical abilities as well. We will be an even match, Pietro.\"\n\nHis eyes flashed with excitement and for a moment she thought she had him, and then he shook his head. \"I'm still not fighting you. I can't, Cassia. It goes against everything I believe in. I'm supposed to protect you whether or not you actually need my protection.\"\n\nLord, he was stubborn and utterly frustrating at times. It was all she could do not to let her irritation show. \"You're not fighting me. We're sparring. I spar all the time when we're training at the pack. You'll be honing my self-preservation skills.\"\n\nCassia could see he was going to continue being stubborn so she opted to take the decision out of his hands. Without waiting for his response, she coaxed her wolf down within herself and slowly gave over more control to her vampire. It was an odd sensation given she didn't typically interact with that half of her psyche on a conscious level. She was surprised to find that doing so was actually quite exciting.\n\n\"Cassia, I...\" Whatever Pietro was going to say cut off when she leapt towards his, talons extended. He reacted instinctually, spinning out of her way by dropping low and pivoting to the right. \n\nWow, he was so fast, faster than she had anticipated he would be. This sparring match may not be as simple as she had first imagined. Still, she would keep to her word. If he won...she would leave the pack, however she didn't have any intention of losing so she would have to beat him fair and square.\n\n\"Fine,\" Pietro growled, anticipation crossing his face, as he watched her closely. \"If you're intent on playing, then let's play, Ni\u00f1a.\" He was countering her attack even before he finished speaking, landing a glancing blow to her arm that she didn't have time to fully deflect. It hurt a bit but didn't inflict any real damage.\n\nShe countered with a kick to his side, dancing out of reach before he could counter-strike. He was moving so fast he blurred out of her line of sight before she realised what he intended, and she uttered a shriek of dismay as her legs were kicked from under her and she landed with a dull thud on the carpet.\n\nPietro landed on her chest, one hand encompassing her throat, pinning her in a submissive position. \"One - nil,\" he laughed, delight shining in his eyes.\n\nHe looked so gorgeous as he held her immobile she was almost ready to give up and concede defeat, but her pride wouldn't let her. It wasn't even just about her pride either. Pietro needed the pack more than he knew. He would never completely heal until he had confronted and defeated all his demons from his time in Europe. That meant finding some way to come to terms with Reasa. That meant she couldn't afford to lose to him.\n\n\"Best of three remember,\" she answered, trying to ignore the feel of his hard body pressing so intimately with hers. She wanted to wrap her arms and legs around him until there wasn't even a fraction of an inch between them.\n\n\"Yes you did say that,\" he grinned, jumping up and holding out his hand to help her to her feet. \n\nHe looked so confident, so completely sure of himself that she was tempted to smack his hand away but she didn't. Instead, she accepted his hand and made sure to accidentally rub her body against his. The way his eyes dilated and the sharp intake of breath was all that she needed to tell her he was sufficiently distracted.\n\nCassia spun to the left, twisting Pietro's arm up his back as she kicked him behind his right knee causing it to buckle from the hard blow. As he gasped and sank to his knees, she brought her right hand around his neck. \"One all,\" she whispered, laughing at his outraged snort.\n\n\"I was helping you up! We hadn't started the second round...\"\n\n\"An enemy does not wait for you to be prepared for his or her attack. They strike in a moment of weakness.\"\n\nFor a moment she thought he would continue to protest and then a wicked smile crossed his face as she stepped back to allow him up. His expression sent a chill down her spine when he turned to face her. \"Touch\u00e9, Ni\u00f1a. I will not make that mistake again.\"\n\nOh Lord, she was in for a world of hurt. His eyes told her that she pricked his male ego and any reluctance he'd had about fighting her was a thing of the past. Whoever won the next fight decided their fate. Pietro was determined that he was going to win this one, as determined as she was.\n\nPietro came straight towards her, so fast that she barely had time to move out of the way. The slight tensing of his right leg was all she needed to tell her he was going to leap, so she dropped low, diving forward into a roll as she did. He jumped and she rolled under through his legs, coming back to her feet facing him at the same time he turned.\n\nOnly he didn't pause as he turned, he was flowing back at her in the same movement, and the only thing that saved her was the small armchair to her left that she hit him with.\n\n\"Fuck!\" Pietro yelled as he took the chair full on to his face, but she didn't stop to see what his reaction was. Cassia sailed over the bed in one leap, grabbing the bedside cabinet and cracking him again as he followed her movement. \n\n\"Oh, Ni\u00f1a, you are so going to pay for that.\" This time Pietro took a moment to pause, scrubbing blood from his forehead to clear his vision. \n\nThe healer in Cassia noted that the cut on his brow had healed instantly but she didn't let her sigh of relief come out. If he noted that she was even slightly concerned about any damage she may inflict, he would use that weakness against her. He was crafty like that, and she had been around her father and uncle way too long to underestimate a vampire of his cunning. \n\n\"You would have to actually lay hands on me to make me pay, Pietro. You appear to be having a little trouble in that department. Would you like me to tie one hand behind my back? I mean, I did think I had hampered myself enough with the 'no wolf, no magic' offer but it appears my vamp is a little too much for you too.\" \n\nOh, that bit him deep, so much so, he hissed at her, his hazel eye darkening to almost black. It probably wasn't wise to taunt him but she was feeling particularly reckless...or to be more exact her vampiric side was. Cassia had no idea her vampire was so wild. She filed that thought away for later perusal; she needed to be totally focused on the male before her.\n\n\"I would have thought Alexei and Andrei would have taught you not to poke a sleeping tiger, Ni\u00f1a. Apparently, they were very remiss in your upbringing. Allow me to educate you...\"\n\n\"Shit!\" Cassia feinted left and then left again as Pietro came at her in a flurry of movements that were so fast she was acting more on instinct than any real evasion skills. She ignored the pain in her side where his talons bit deep, and scrambled backwards as they veered towards her face.\n\nHe was cornering her...backing her towards the farthest wall where there was nothing she could use in her defence. If she didn't stop reacting and start acting, he was going to have her boxed in with nowhere to go.\n\n\"Dad! No! Wait!\"\n\nPietro spun around at her shriek, cursing as she jumped onto his back, wrapping her legs around his waist and an arm around his neck.\n\n\"You little...\" He pitched forward, digging talons into her thighs and yanking hard.\n\nCassia shrieked again but this time it was because she was sailing over his head, heading straight towards the large mirrored wardrobe face first. Oh, crap that was going to hurt. Pietro snaked an arm around her waist and spun her backwards before she hit the glass, the move driving the wind from her body.\n\nHe was following her down onto the bed as her back hit the mattress hard, and she knew that if he completed the move, he would win their contest. So she did the one thing that her father had drilled into her since the moment she hit puberty. Cassia brought up her knee and gasped as pain shot through her leg.\n\nThe pain was nothing compared to the roar that issued from her vampire as his groin area connected with her knee, his full body weight behind the blow. She didn't hesitate though. She rolled at supernatural speed, her talons wrapped around Pietro's throat, pinning him to the bed as his eyes watered.\n\n\"Two - one.\"\n\nStill sucking air into her sore lungs, Cassia slid from his body and lay panting on her back beside him. For a long time there was only the sound of their laboured breathing, and then Pietro turned his head to look at her. \"Alexei or Andrei?\"\n\n\"Both.\"\n\n\"That figures.\" \n\nWhen he didn't say anything further, she glanced in his direction to find him staring up at the ceiling, his expression giving nothing away.\n\n\"I'm sorry. That was a bit of a low blow.\"\n\nHis lips twitched a little, and then his head turned and she could see amusement dancing in his eyes. \"No pun intended?\"\n\nNow the match was over, she was starting to feel guilty at the underhand tactics she'd used, even if he did appear to find it funny. Dear Lord, she'd broken furniture across his body, not to mention...\n\n\"I didn't mean to hurt you.\" \n\n\"No, you meant to win and you used everything in your arsenal to achieve that. Don't ever apologise for doing what is necessary, Ni\u00f1a. You do what you must to win. No holds barred. Though I must confess being bested by what is technically a Youngling is quite ego bruising, but your vampire...she is spectacular.\" \n\nCassia laughed, her heart still thudding in her chest. \"She scared the crap out of me,\" she admitted. \"I didn't know I could be that sneaky.\"\n\nPietro half sat up, his head supported by his hand as he looked down at her. \"Yes, the Alexei distraction worked excellently. I can't believe I fell for one of the oldest tricks in the book. I almost had you up until that point.\" Her sheepish grin teased another laugh from him. \n\n\"I didn't know if that would work but it was the only thing I could think of in the spur of the moment.\"\n\nPietro's expression turned serious, his finger lightly brushing her cheek before twirling around a golden curl, his gaze intent on the way it clung to his skin. \"You're completely certain?\"\n\nCassia knew what he was asking her. \"At first I wasn't,\" she admitted, because he deserved nothing but the truth from her. \"My wolf appeared undecided and that confused me for a while but now she has claimed you. You are my mate.\" \n\nHer wolf didn't know. He didn't think that was possible, not from what he'd learned about Weres over the centuries. Cassia's honesty was refreshing, but there was something she was holding back.\n\n\"When did you know for sure?\" He asked the question but deep in his heart he already knew the answer. He could still hear the mournful howl of the wolf that day, when he had rejected the woman lying beside him...when he had accused her of betraying him.\n\n\"Does that really matter, Pietro? We belong to each other. That's the only thing that matters.\"\n\nShe was letting him off the hook, granting him forgiveness for the harsh words he'd said that day. It would have been so easy to accept her generosity but he had never been one to take the easy route. \"It matters, Cass...to me. That last day at the compound, I was so consumed with the need for revenge. I was more than aware of what the pack meant to you, and yet, I still said those things to you, accused you of betrayal.\"\n\nSitting up, Cassia pushed him backwards, until their positions were reversed and she was the one leaning over him. \"I understood. It just took my wolf a little longer to and as you know I tend to follow my animal as opposed to my vampiric side. For a short time I needed to allow my wolf to come to terms with your rejection but I was never in any danger of going rogue. I don't think the V\u00e2rcolac can go rogue, not in the same sense that a Were can. I was hurt but I was never in any danger, Pietro. I need you to believe that.\"\n\nHis beautiful wolf was reassuring him when he was the one who had caused her so much anguish. Everything she had ever done since the first moment they'd met was to think of his needs, to put him first and he had selfishly lashed out and hurt her. She deserved someone so much better than him, someone with far less emotional scars. \n\n\"You did not just say that,\" Cassia laughed, her curls tumbling around her face as she shook her head. \"My dad and uncle are two of your best friends.\"\n\nHe hadn't realised he'd said the words out aloud until she started laughing. Yeah right, who was he trying to kid? She'd grown up surrounded by two of the most emotionally challenged vampires he'd ever known and she'd still turned out pretty amazing. Taking him on would be a piece of cake after that.\n\n\"You're not going to be dissuaded, are you?\" The fierceness that blazed from her eyes was the only answer he needed, her possessiveness making his heart stutter. She was claiming him, and he couldn't deny that he wanted that as much as she did. Cassia had such faith in him, such belief that they could conquer anything as long as they were together. He'd be a fool to walk away from the love she was offering him, and though he may have acted foolish in Europe, he had no intention of continuing that streak.",
        "\"I love you, Cassia Romanov.\" Just saying the words out aloud felt surreal, but he knew they were true, and had been for a long time. When had she crept into his heart? He didn't know. He was just aware that she was firmly embedded there and always would be. Cassia was his heart and soul. She completed him in every way possible, and he would do whatever it took to have a future with her. He would even try to forgive Reasa, because if he couldn't at least try, he may lose his feisty wolf, and he couldn't imagine not having her in his life.\n\nCassia's breath caught as he uttered the words she'd longed to hear, his mismatched eyes glowing with such fierceness it took her breath away. Her beautiful vampire was surrendering; he was willing to compromise for her. It brought tears to her eyes that he could lay himself vulnerable to her after all he'd been through. She knew it wasn't easy for him and that he was willing to try to be with her.\n\n\"I love you, Pietro de la Rios,\" she whispered back leaning down until their lips almost touched, and she could feel his breath teasing her mouth. It set her heart fluttering in a way nothing else ever could. The emotions threatening to overwhelm her in that moment were reserved exclusively for the glorious male lying beneath her. As she exhaled slowly, he sucked her breath into his mouth. When he did the same, she breathed him into her soul.\n\n\"One breath...one heartbeat. My soul is yours for eternity. Will you mate with me, Pietro? Will you complete me?\" Her voice hitched as she asked and she held her breath as she waited, her wolf peering from the depths of her questing eyes.\n\n\"What is it you wolves say when you claim your mates?\" The deep rumble of his voice didn't hide the possessiveness of his gaze.\n\n\"Mine...\"\n\nPietro snaked a hand around the nape of her neck, stealing that last agonising inch that separated them. His touch was gentle, teasing...a slow rubbing of lips in a kiss so tender, her tears overflowed.\n\n\"Mine,\" Pietro growled into her mouth, licking the salty wetness on her lips. \"You were always mine, Ni\u00f1a, from the very first moment I laid eyes on you.\"\n\nHer wolf howled its glee, rejoicing in their mate's acceptance. He was finally theirs. He was finally hers. It was as if she had lived only for this moment, and she was going to remember every single second of it. She had her mate. She had her beautiful vampire.\n\n\"I don't know what to do,\" he whispered against her lips, his vulnerability so endearing her heart felt as if it would burst with love for him. \n\n\"Then let me lead,\" she answered, pulling back so she could read every emotion flickering across his face. \"I promise you will enjoy it.\"\n\nPietro started to laugh, excitement shining from his eyes, mixed in with love, and healthy dose of lust. \"Oh, I have no doubt that I would, Cassia, though I am not so sure how good I will be in the submissive position. It doesn't come naturally.\" \n\nThe sultry expression that crossed her face sent his blood pressure sky high, the wicked smile curving her lips made his body pulse with the need to be buried inside her. \"That's okay, lover. I can hold you down if required. I am V\u00e2rcolac after all.\"\n\nOrdinarily the thought of not being the one in control was total anathema to him, however the way his wolf was looking at him right now...hell yes she could do whatever she wanted if it meant she'd pour her luscious body all over his. \"I'm all yours, Ni\u00f1a.\" Was that really his voice? The words practically purred out of his mouth and from the dilation of Cassia pupils, he could tell she liked them.\n\n\"Of course.\" \n\nCassia's smile turned even more wicked if that were at all possible. He was about to comment on it when his T-shirt ripped down the centre and the cooling air of the bedroom whispered across his bare chest. His heart thudded loudly, his cock flexing in the confines of his jeans. His wolf looked like she wanted to eat him all up, and he wasn't one to deny her base instincts.\n\nGentle fingers touched his brow, tracing the scar down his face, lingering on his neck where his second scar met with his shoulder. Cassia frowned as she touched the ridged flesh, golden highlights reflecting in her eyes signalling her wolf was very much present. \n\n\"Sacrilege,\" she growled quietly, a hint of fury lacing the word. \"This belongs to us. This is where we make our mark. It sends my wolf insane with rage that someone laid hands on you, that someone desecrated what is ours.\"\n\n\"Then claim it back,\" he commanded, surprised at the wealth of emotion in each word as he raised one hand to place it over her trembling fingers. Until this moment, he had never wanted anything so badly in his life. He wanted to sooth her wolf's fury. He wanted to feel her mark him so that it would eradicate the memories attached to that scar and replace it with something so beautiful, that those memories would never haunt him again. \"I am yours, my wolf, now and for eternity.\"\n\n\"Mine!\" Cassia slithered down his body, her lips tracing butterfly kisses against the scar on his cheek, down the hard curve of his jaw, along scarred flesh of his collarbone. Her touch was light, teasing and it made his hips flex upwards, his body seeking the ultimate blending of their souls.\n\n\"Greedy boy,\" she laughed against his skin, kissing her way over his chest, her tongue snaking out to lick and taste him. \n\nEach touch was an exquisite torture, each caress a pleasure like none other. It was difficult to lay there and allow her to do as she wanted, but he was determined to let his sultry wolf have her way with him. This was her moment; this was what her wolf needed. When they mated together, he wanted it to be the most magical experience of her life.\n\nHer lips grazed his stomach, forcing him to suck in a deep breath. The evidence of his need was outlined brazenly against the fabric of his jeans, and he jumped when he felt a lone talon measure his length in the slowest of motions he could imagine. \"Cassia...\"\n\n\"Yes, Pietro?\"\n\nHow the fuck could she sound so sexy and innocent at the same time? The witch was playing with him and loving every moment of it, and he had to admit to himself that it was excruciatingly erotic to be on the opposite side of this kind of foreplay. Perhaps he would allow her to do this again sometime...but not too often.\n\n\"You're playing with fire, Ni\u00f1a.\"\n\nSensual laughter greeted his words, and his patience and blood pressure reached fever pitch.\n\n\"Then I guess you should burn me, my beautiful vampire...\"\n\nHis jeans shredded under her talons and he uttered a low curse. Before he could move he felt her hot breath tease his flesh and then her tongue licked slowly up his throbbing cock.\n\n\"I think I need to kiss you better. I did hurt you here.\" Her muffled laughter cut off as she swallowed him down, his hips rocking up to meet the glorious heat of her mouth.\n\n\"Cassia!\" He roared her name out, clutching at the bedspread to stop his hands fisting in her curls and pull her mouth more fully onto him. This was her moment and he had to give it to her. He had to let her see just how much he loved her, what he was willing to do for her.\n\nIt was sweet torture though, pleasure, and pain all mingled into one. She kept her touch teasing, always promising more, but never fully delivering. Every nerve ending felt alive, his desire stoking higher and higher with each flick of her tongue, each slow stroke of her mouth over his straining flesh. Was this what it felt like when he loved her, when his hands and mouth danced over her soft skin drawing every nuance of pleasure he could? If it was she was getting payback in the bucket load, and he had to concede that it was highly erotic to experience her brand of vengeance. \n\nHer wicked mouth worshipped every inch of his throbbing cock, sliding smoothly up and down in a slow rhythm that had his heart pounding so wildly he could hear the echo in his ears. Soft hands travelled up his thighs, coming to cup his heavy sacs, squeezing them in tandem with her suckling. \n\nDear Lord, he was ready to blow, helpless against her dual assault. She took him completely into her mouth, pressing her wet heat down until he slid down her throat and she massaged his balls firmly. Pietro roared loudly, the sinewy muscles in his neck straining as he threw his head back and exploded. She sucked and squeezed, swallowing down his essence greedily, humming with pleasure as he emptied himself into her willing mouth.\n\nIt was the most amazing thing he had ever experienced. He had heard tales before of how being in love totally changed lovemaking, how that emotional bond heightened the pleasure, made each orgasm so much more intense. He'd never believed it, always having been satisfied with his previous sexual experiences. Now he knew the truth of it. Now his climax was both a physical and emotional release, and he had eternity to lay with his wolf like this.\n\nCassia crawled back up his body, one small hand stroking his semi-hard cock back to full hardness as she kissed him deeply. He could taste himself on her lips but he didn't care. It was so erotic to know that the mouth he was devouring had loved him so intimately, that allowing her to pleasure him that way had brought her as much pleasure as it had him. \"You're so wicked,\" he chuckled against her lips.\n\n\"I'm about to get a whole load wickeder,\" she laughed, sitting up and pulling her shirt off in one move, freeing her breasts to his greedy gaze. \n\nHis hands rose to cup them and she slapped them away playfully. \"You don't get to touch unless I give you permission. Now be a good boy and put those hands behind your head.\" She was rising as she spoke, snapping the button of her jeans, and slowly lowering the zipper as he obeyed her.\n\nLust and laughter danced in her eyes as she wiggled the denim down her hips, taking her panties with it. The bed shook precariously but she managed to keep her balance as she undressed. When she was finished, she stood above him, her heart beating a wild tattoo as she watched the naked lust in his eyes roaming over her body.\n\n\"Come here,\" he growled and she wagged her finger at him as she laughed again.\n\n\"This is my party, remember. We play my way or not at all.\"\n\n\"Seriously?\" Pietro let out a pained groan, frustration building up inside. \"You're killing me here, Cassia. Let me love you.\"\n\nSlowly sinking to her knees, she straddled his body, pressing her wet heat against his hard length. They groaned in unison, Cassia's hands coming to rest on his chest as she teased him with her body, slow languid strokes against his cock imitating what was to come.\n\n\"I can't stand much more of this,\" he warned, his nostrils flaring at the heavenly aroma of her arousal. He meant it too. If she didn't slide herself onto his cock right now he would roll her over and take her hard and fast as he craved to do.\n\nCassia delighted in teasing him, thrilled at seeing the hint of desperation beginning to shine in his eyes. This is what he did to her, how he made her feel when he loved her so dominantly. She knew the torturous build up only heightened the sexual experience, so she continued to grind herself against his cock with deliberate movements.\n\nA scant second before he lost all patience with her, she rose above him that tiny bit higher and slowly slid his cock into her hot core. Oh god, he felt so hard, so thick and strong within her body. It was as if this was the first time they had lain together. The feel of him filling her so completely was the most erotic thing in the world.\n\nPietro kept his hands behind his head though she could tell from the corded muscles in his neck that she probably didn't have too much time left to enjoy her position of dominance. It didn't matter if he failed her demands. What mattered was that he was willing to give her this moment. That he was willing to acknowledge that though he may control their sexual play, he still respected her as his equal.\n\nRising slowly up and down, she enjoyed her moment, riding his body in a dance older than time, and more beautiful than the most exotic work of art. Cassia made love to her vampire with her heart, body, and soul, showing him what he meant to her, what would always be his for eternity.\n\nHe couldn't take it anymore, he just couldn't. Cassia was sheathing his cock so erotically, her breast swaying with each movement that it was inciting his blood lust to rise. He needed to taste her. He had to touch her soft skin and lick her all over before suckling her life's essence into his eager mouth. \n\nPietro raised his upper body up, his arms snaking around her back as his lips zeroed in on one hard nipple and he sucked it deep into his mouth, flexing his hips at the same time to drive himself in deep. He couldn't get a good angle in this position so he lifted her off him, moving to rest on his knees.\n\n\"This is your seat I believe, my lady.\" The roguish grin he shot her turned into a muffled groan as he pulled her back astride him, sliding her back onto his throbbing cock. \n\nCassia's breath gasped out as she wrapped her arms around his neck and accepted him eagerly. \"Oh! I believe you are right,\" she giggled breathily, pressing down to meet his upward movement. \"That feels...perfect.\"\n\n\"Hold tight, Ni\u00f1a.\"\n\nIt was all the warning she got before he took full control of their joining, bucking into her body with hard, fast strokes, sending liquid fire racing through her veins. She was soaring through the heavens, pleasure crashing over her with each deep thrust he gave her.\n\n\"I can't wait...\" he gasped, his fangs already lowered, desperation in his eyes.\n\nShe understood what he meant. Her wolf was baying for her to claim him, urging her to mark him as theirs. Cassia licked at his collarbone, licked against his shoulder. She nibbled at the scar that desecrated their territory, a low growl escaping her.\n\n\"Be mine forever, Pietro.\" \n\n\"Always.\"\n\nCassia felt the heat of her climax building, her body moving faster and harder as she rode her beautiful vampire. She was almost there, almost ready to soar as her passion exploded over her. With another growl she whispered, \"Mine.\" Her teeth sank into his skin, as he slammed into her hard and she shattered, her vision obscured by a kaleidoscope of colours dancing behind her eyes.\n\nPietro's fangs sank into her neck, his body pulsing thickly as he emptied himself into her. She climax again, shuddering wildly as he clamped her body to his and drank from her neck, completing the mating ritual and nourishing his still healing body.\n\nPietro continued to rock into her, mindless to anything but the feel of her wet heat fluttering around his cock and her hot blood flowing down his throat. It had always been good between them but this moment transcended everything they had ever experienced and he didn't want it to end.\n\n\"Cassia...oh God, Cassia.\"\n\n\"I know,\" she gasped out between panting breaths, holding him against her as he kissed the side of her neck, their bodies still joined. Her wolf was ecstatic, preening itself now that they had claimed their mate. She wanted to laugh at its antics but didn't think Pietro would see the humorous side if she did.\n\nPietro knocked away the remnants of the broken chair that was on his pillows and gently laid her down on the bed, lying on his side so they were facing each other. \"Is it done?\" He wasn't sure if he was supposed to feel a wolf inside him or something now she had bitten him. He didn't feel any different so he was worried that maybe it hadn't worked.\n\n\"Oh yes,\" Cassia smiled, her gaze dropping to the spot where she had bitten him. Her smile faltered and a frown furrowed her brow, her hand reaching out to touch his skin. \"That's odd.\"\n\nHer concern made him uneasy. \"What is?\"\n\n\"My mark...it hasn't healed.\" When he shot her a blank look she sat up and he followed her. \"Usually the physical mark disappears though the psychic bond remains. Yours should have too but it's still there.\"\n\nRising to look in the mirror, he saw what she meant. Where she had bitten him across his scar, there was a clear impression of her bite mark. When she said it hadn't healed she hadn't been entirely accurate. The bite mark looked as if it had been there for years. It had technically healed...it just hasn't vanished. It had to have something to do with the scarred area of his body. Something about the Amort toxin had altered those areas of his body so that they would never truly heal.\n\nSeeing Cassia's uncertain expression in the mirror tore at his heart. She was probably afraid that he'd view this as he viewed his other imperfections. She couldn't be further from the truth though. Crossing back to the bed, he pulled her into his embrace, capturing her gaze with his and refusing to allow her to look away.\n\n\"I'm glad,\" he said gruffly, emotion making his voice sound huskier than usual. \"I want to wear your mark, Cassia Romanov. I am proud to wear it and don't you ever think otherwise.\"\n\n\"You're sure?\"\n\nFor an answer he kissed her, long and slow, and with so much love that she would never doubt how much she meant to him. When he let her up for air they were both breathless. \"I'm sure.\"\n\nPulling Cassia down beside him, he covered them with the bedspread and held his mate close. She was his now...for eternity. They were joined together and no one and nothing would ever come between them.\n\n\"Sleep, Ni\u00f1a, while you can because I know I'm going to want to sample your sweet body again in the very near future.\"\n\n\"Greedy, vampire,\" she laughed, cuddling close and wrapping her arms and legs around his hard length. \"Let's see who wakes who first.\"\n\nPietro burst out laughing, kissing the side of her neck before closing his arms and inhaling her sweet fragrance. \"You're on...\"\n\n*****\n\n\"Thank you, Liam, Reasa. What you've done for the Praetorians will be remembered.\" Mac's expression was earnest as he shook first Liam and then Reasa's hands. \n\nLily was standing beside him, beaming with happiness. As usual, she threw formality to the wind and smothered them in affectionate hugs. \"I am so jealous I can't dream walk,\" she laughed, ignoring Reasa's stiffness as she hugged her tightly.\n\nThe former vampire appeared uncomfortable with the open affection but she didn't pull away.\n\n\"I'm still trying to come to terms with the fact I clearly have a weak mind to be affected in the first place,\" Brandon grumbled from below them where he waited at the Jeep. Despite his words there was open amusement on his face as the couple walked down the steps towards him.\n\n\"I'm sorry.\" Liam apologised for what had to be about the one hundredth time, earning him a glare of reproof from the vampire.\n\n\"How many times do we need to tell you to can that shit, Liam? We signed up for this duty and not one of us regrets it. Hell, we got at least a week off from that torture Karn calls training. You did us a favour.\" Brandon grinned at the blond vampire as he spoke, his irreverence drawing a dark scowl in his direction.\n\n\"Glad you enjoyed it, boy, because you've got a week to make up for. I'll see you all around back in half an hour.\" Karn flashed his own grin at the younger vampire, more than a hint of malice in it.\n\nBrandon groaned and rolled his eyes as the others laughed, Liam included. Karn was going to work their asses off, but to see the last shards of guilt fade from his friend's expression was enough of a reward for what they'd be subjected to. He couldn't leave it at that though...he wouldn't be Brandon if he did.\n\n\"So, just to assuage my curiosity...can you explain to us why we even need the Praetorians anymore? I mean, it's not as if the V\u00e2rcolac need any protection. They could take us out with probably only one or two of them breaking any kind of sweat.\"\n\nIt was a valid question despite the fact it was asked in jest. Karn didn't answer, though he did look to Mac. The Praetorian leader's expression was relaxed, his arm wrapped around his mate.",
        "\"We were originally tasked to protect the V\u00e2rcolac, that is true,\" he answered. \"However, the V\u00e2rcolac call the pack their home, and as such, that makes the pack ours to protect by default. Until the Triumvirate give us a new task, we continue as we are. We will be vigilant and on call to either the Armand-Hanlon Pack or the Hanlon Pack. We will help to guard them from all intrusions be they local or from Europe. Our job is not done here; it has merely morphed into a new one. So I suggest you get your ass out back and get training, Brandon.\"\n\nHe laughed as he said the last bit, genuinely fond of the young male his mate had chosen to be her closest friend. It was hard for anyone not to like Brandon, and anyone who made his Lily smile was a friend of his.\n\nBrandon mocked saluted, and winked at Lily before he jogged around the house to do as he was bid.\n\n\"That boy is nothing but trouble,\" Karn groused, though he was smiling as he said it.\n\n\"That's funny, because he reminds me of you when we first met,\" Mac countered, drawing an irritated snort from his second in command.\n\nLiam smiled at the banter, a feeling of sadness coming over him that they were leaving the tight knit community. He'd enjoyed his time there and he could see the good effect it had had on Reasa too. She had loosened up a lot, her walls starting to come down as the Praetorians had welcomed her into their home. Perhaps he would talk to Rafe about allowing them to return to the compound when the threat from Europe has been dealt with. He wouldn't mind living with the Praetorians.\n\n\"Time for us to head back,\" he announced, opening the Jeep door so Reasa could climb in. \"If you need us for anything, let Rafe know and we'll come back.\"\n\n\"You both have our thanks, Liam,\" Mac answered, a large smile on his face. \"You're welcome here anytime.\"\n\nStarting the engine, Liam headed back towards the pack compound. Reasa was quiet beside him, the silence deepening the closer they came to pack lands. He could see her shutting down as each mile passed and he wanted to curse out aloud. He couldn't face taking a backward step, not after the way she'd allowed him closer up at the Praetorian Compound.\n\n\"Do you want to return to Freya's home when we get back?\" He asked the question even though he didn't want to hear the answer. If she retreated from him, he didn't know how he was going to reach her again. When she didn't answer straight away he glanced sideways to see her staring out the side window at the passing trees.\n\n\"Thereasa?\" Her head turned and he couldn't make out what she was thinking. It set his heart plummeting into his stomach. She had retreated.\n\n\"Would your mother be agreeable to me residing in her home once more?\"\n\nIt was the last thing he'd expected her to say, her response surprising him so much he stepped on the brakes to bring the car to a halt. Unclipping his seatbelt, he turned to face her. \"Is that what you want? Think about it before you answer, Reasa. I only want you to say yes if it's what you truly want.\"\n\n\"It is what I want,\" she answered, her expression remaining neutral. \"I find I have become accustomed to spending my days and nights with you, Liam. I do not want that to end.\"\n\nShe wasn't declaring she was ready to mate with him, but it was the most hopeful news he could have expected at this point. Liam would have let her go if she'd asked it of him. He was just glad that he didn't have to. He smiled slowly, his heart feeling suddenly lighter. \"I am sure my mother will be agreeable to you staying with us again. I know she hasn't been exactly welcoming, but you have to understand that she's only concerned about me. She's very protective.\"\n\n\"Ashleigh's reaction is one of the things I do understand,\" she sighed, leaning her head back and closing her eyes. \"You have an incredibly amazing mother, Liam Eriksson. She would walk through fire for you, and lay down her life for you. Being truthful, I am in awe of her. If only my mother had been the same then perhaps my life would have turned out differently.\"\n\nWhen she didn't say anything further, Liam restarted the engine and continued on, a huge smile on his face. Things would get better, he just knew it. His mom was an amazing woman and it filled him with joy that his mate could see that too. Now, he just needed to convince his mother to see how amazing his mate was. He was convinced he could do that, even if it might take a little time.\n\nReasa remained silent with her eyes closed until they pulled up in front of his home. Her gaze turned apprehensive for a moment, her body stiffening when the door opened and his parents came outside.\n\n\"Liam, you're home.\" Ashleigh gathered her son close, laughing as he picked her up and gave her a huge bear hug. \"You did it. You brought them back. I'm so proud of you, honey.\"\n\n\"Yes, you both did.\" Nors smiled as he held the car door open for Reasa to step out. \"You've done an amazing thing, Thereasa. Thank you.\"\n\nShe appeared startled by his warmth, a blush crossing her cheeks as she looked away. \"Liam did all the hard work. I merely helped him to finesse his phenomenal strength.\"\n\n\"Nonsense, you worked just as tirelessly as I did,\" Liam countered, moving to her side. \"And you didn't have the luxury of healing from the physical wounds our bodies took while we were dream walking. Not once did you complain about it. In fact, you never mentioned it once to me. Elina had to tell me that she was healing you while we were working to bring the Praetorians back.\"\n\n\"Your bodies took physical damage?\" Ashleigh gasped, concern spreading across her face. She was aware that Liam wouldn't have been in danger but Thereasa was human now. \"Are you okay? Should we call Mallen over?\" Her concerned gaze was directed at the former vampire who appeared to shrink even further into herself.\n\n\"I am unharmed,\" she muttered, looking everywhere but at the woman in front of her.\n\n\"Come on, let's get you inside before the rest of the pack come out to be nosey. They're still talking about your departure last week, and some of the younger heads still need to cool off a bit. Nors, grab their packs. Have you eaten yet? I can put on some breakfast.\" Ashleigh ushered the couple inside as her mate did as she bade.\n\nReasa turned perplexed eyes to Liam, unsure of how to react to suddenly being mothered by the woman who would have quite happily have seen her rot the week before. He shrugged but grinned happily. \n\n\"Just go with the flow, Reasa. There's no stopping her when she gets in one of her 'mothering' moods.\"\n\n\"I heard that, Liam Eriksson!\"\n\nHe laughed loudly. \"You were meant to, Mom.\"\n\nLiam retrieved their packs from his father. \"I'm going to head up to my room with our stuff. I take it there's no problem with Reasa staying with us again?\" He threw the question out light-heartedly though his gaze was fixated on his mother's reaction.\n\nHis parent shared a brief look and then his father smiled. \"I'll give you a hand, son.\" \n\nThere was no mistaking the fact that he meant for them to leave the women alone for a while to have a 'talk'. Liam wasn't so sure if Reasa was up for that but his father's expression told him that he didn't really have a say in it. With a resigned sigh, he followed him out of the kitchen.\n\nReasa didn't know what to do when Liam left her alone with Ashleigh. For want of anything better to do she sat down at the breakfast table, tensing a bit when Ashleigh sat down across from her. The blonde Were eyed her speculatively for a moment before she gave her a half smile.\n\n\"There's no need to look so concerned, Thereasa. Wiser heads than mine have prevailed.\" Ashleigh paused, looking down at her joined hands resting on the tabletop before she looked back at the former vampire.\n\n\"I love Liam with all my heart,\" she began, that love blazing from her eyes. \"His happiness is the most important thing to me and for a time, I wasn't able to see that too clearly. I was too busy being a mother reacting to her child being in harm's way that I didn't want to see in you what he saw. The only thing that registered with me was that you tried to kill him.\"\n\nShe paused, letting the words sink in. \"I'm not going to lie to you, Thereasa. I am still working on that and it may take me a while to fully forgive you for hurting my son. However, I am willing to try to see past it.\"\n\nReasa knew it had to be hard for her to say that, and it was probably more than she deserved. She nodded her acceptance of Ashleigh's position. \"If it is of any assistance, I do regret that action now, Ashleigh.\"\n\nBrown eyes searched her face for a long moment, and then there was a softening to Were's expression. \"I can see that,\" she conceded. \"I think I even believed it before you headed to the Praetorian compound. I just wasn't ready to have this conversation with you. I needed some more time to work through the emotions I was going through.\"\n\n\"You were a mother protecting your child,\" Reasa answered, her body still tense indicating how uncomfortable she was with the situation. \"I respect and understand your position. If our circumstances were reversed, I would have reacted exactly as you did. You are a good mother to Liam.\"\n\nAshleigh laughed, but there was no humour in it. \"No, I was a selfish mother, afraid of losing her son. The relief at knowing the V\u00e2rcolac were immune to your poison was quickly tempered by Liam claiming you as his mate. In my mind, you had failed to take my son away from me in one way, but were instead going to take him from me in another. No one knows the mating call of a Were better than I do. There is no stronger pull in the universe and Liam follows his wolf. That I rejected his claim and made your time living here untenable is not the act of a loving mother.\"\n\nReasa had expected her time at the Eriksson house to be more of the same when it came to Liam's mother, but this unexpected admission left her in confusion. There was a bitterness to Ashleigh's tone but it wasn't directed at her. Instead, it was directed inward and that wasn't what she'd expected to encounter at all.\n\nHesitantly, she reached out, placing her hand over Ashleigh's. She had done so instinctively and was further confused when the Were didn't pull away but instead turned her hands around to capture her's in a tight grasp.\n\n\"I do not find you at fault for your treatment of me, Ashleigh. I am aware of how much importance you hold in Liam's heart. It is hard not to as I have walked in his memories and seen the love his family have given him throughout his life.\"\n\nReasa blinked slowly, trying to find the words she was looking for. \"I am not good at this kind of thing,\" she admitted, \"but what I do know is Liam has a huge heart, full of so much love and forgiveness. I believe he receives that from you, his mother. Do not hold onto a past action that is but a mere fraction of a second in comparison to the wealth of moments where you have excelled yourself. You do yourself a disservice if you do.\"\n\nShe had never known she had such eloquence or such inclination towards forgiveness. Clearly, Liam was rubbing off on her because she was astounded to find that she meant everything that she said and that she truly did want to assuage the self-loathing she was seeing in the other woman's expression.\n\n\"I am ashamed, Thereasa,\" Ashleigh whispered, a lone tear falling as her grasp tightened. \"Yes, you came here with ill intent but I allowed myself to be blinded by that fact and I failed to see how much you have grown in your time with us. I let hate dominate my heart and I have hurt my family by doing so. It has taken me a while but I am starting to accept that Liam can never be happy without you in his life.\"\n\nSomething twisted in Ashleigh's heart as she said the words; the knowledge that she was part way to forgiving and that it didn't make her a bad mother if she did. Liam had chosen this woman to be his life's mate, and now she was really seeing her for the first time, perhaps that wasn't as bad a choice as she'd once believed. \"You are welcome in my home, Thereasa. For however long you wish to remain here.\"\n\nDid miracles happen? Reasa had never believed in them before but sitting here with Liam's mother was a revelation that astounded her. Ashleigh was willing to welcome her into her home and into her family. Though she hadn't said the latter words, the implication was there. She swallowed hard to dislodge the lump that was suddenly clogging her throat. \"I am grateful for your generosity, Ashleigh.\" She couldn't think of anything else to say.\n\nThe blonde Were scrubbed at her wet cheeks, rising from her seat as she did. \"How about we start again and see how we get on? Make a fresh start for both of us? We both love Liam so we have a strong foundation of commonality.\"\n\nReasa nodded her agreement a split second before what Ashleigh had said fully penetrated her brain. Her heart sank, shock rocking through her body as the full import of what she'd just done registered. She had just admitted to Ashleigh that she was in love with Liam! Now that the thought was out there, she wasn't able to take it back and deny it. She couldn't avoid it, couldn't pretend it wasn't there. Somehow she had fallen in love with Liam Eriksson and she didn't know what to do about it.\n\nHow could she leave him now? Leaving was the only solution to the problem she had been able to come up with and she'd had to go and make it so much worse by falling in love with Liam? She had done nothing but bring irrevocable harm to the pack and their vampire friends. Louis was out to kill her, of that she had no doubt, which meant she would continue to bring harm to the very people who were now welcoming her into their lives.\n\nShe couldn't be responsible for that, she just couldn't. Liam would have to understand. He had to let her go and not come looking for her. It was the only way the pack would ever be truly safe. \n\nThe sound of Liam and his father coming downstairs shook her out of her reverie and she absent-mindedly answered a question about food that Ashleigh had just asked her. By the time the two males entered the kitchen, Reasa's expression was carefully neutral, no indication of that had just occurred visible to see.\n\nShe remained quiet as the family interacted, accepting the food placed in front of her and playing with it rather than eating. She felt sick to her stomach and nothing could have convinced her to eat anything. For the most part, they didn't appear to notice, and she almost let out a sigh of relief when the plates were cleared and Liam and his parents rose from the table.\n\n\"Just how bad are things with the younger pack members?\" Liam was asking his father as they stood.\n\n\"Aaron has them out patrolling the south side of the compound. He's been tiring them out so they don't have too much time on their hands to think. The signs are that it's working already. Quite a few of them have calmed down.\" Nors held his son's gaze. \"Cassia has mated though. She's returning to the pack later today with Pietro.\"\n\nLiam frowned, concerned brown eyes turning to Reasa. The last time they had all been in the pack together Pietro had tried to kill her. Hopefully now the vampire has mated, some of Cassia's pack orientation may have transferred to Pietro.\n\n\"I have to go meet with Rafe now to let him know how we got on at the Praetorian compound,\" he finally said with a half-smile gracing his lips. \"As it's pretty quiet right now around here, why don't you stretch your legs a little and go for a walk around the compound, Reasa? It would probably be best not to head south though.\"\n\nThereasa couldn't believe what she was hearing. Not only was Liam giving her permission to wander around alone but also his parents weren't objecting. Could she really walk around unescorted? Would this be her opportunity to slip away unseen while their guard was lowered? Just the thought of disappearing made her want to weep but knowing the harm coming their way made her heart break even more. She couldn't allow Louis to hurt any member of this pack because of her. \n\n\"If that would be permissible, I would like to see more of the pack,\" she answered, keeping her voice carefully modulated not to show any sign of her tumultuous emotions.\n\n\"Just don't go too far,\" Liam answered, his smile widening. \"There are patrols around all the boundary lines so if you see any wolves out there, do what they indicate they want you to do.\"\n\nHis caution made sense, though she was going to do her best to avoid any wolves she came across. If luck was on her side she could slip passed them. Thanking Ashleigh for breakfast, Reasa kept her emotions locked down tight and headed outside with Liam, walking with him to the Alpha's house.\n\n\"I may be a while,\" he told her. \"Despite the few hotheads around, my pack mates are pretty decent people. Enjoy your walk, and if you feel uncomfortable at all just head back to our place. You'll be fine there.\"\n\nNow the moment was on her Reasa didn't want to leave. Staring up into Liam's smiling face her hand itched to reach up and touch him, to pull his head down and taste his lips once more. There was total trust in his eyes and she was about to break that trust. Even though she knew it was for the best, it didn't hurt any less. \"I will not go far,\" she lied, holding her breath while she waited for him to acknowledge her words.\n\nLiam nodded, heading into the Alpha's house, as Reasa turned towards the tree line. Her feet felt leaden but she took the first step, forcing herself to keep moving. There would likely be no better opportunity than this one and she had to keep going. She brushed a hand over her wet face, lowering her head and disappearing into the trees.\n\nHow far had she travelled already? Had she passed the boundary line? She'd been walking for close to half an hour, being careful to hide her tracks as best as she could. If the wolves came looking for her they would probably find her in the forest, but if she could make it to a road and hitch a lift into the city, then there was a good chance she could evade them. \n\nA sound to the left startled Reasa, and she froze in her tracks. Something or someone was close by, and she hadn't seen any sign of them approaching. Could she outrun them? Had they even seen her? Perhaps if she stayed silent long enough they would leave? Any hope of that happening was dispelled when a male voice whispered close to her ear.\n\n\"You've made my job so much easier, Thereasa.\"\n\nShe screamed, but a hand clamped over her mouth, a thick arm snaking around her body to hold her pinned to a wide chest. The arm was naked, and as she struggled against him she realised he was completely naked which meant he was most likely a wolf as opposed to a vampire. It still made his next whisper so much more confusing...\n\n\"Michael sends his regards...\"\n\nAstonishment stilled her movements, dread washing over her. Michael? What was he doing aligning himself with wolves of all things? He detested all Weres as did the majority of European vampires. This man was certainly a Were. There was no reason for a vampire to run around a forest unclothed.\n\nThe moment of surprise passed, and her fear escalated. Michael excelled at being a vampire. His penchant for cruelty was almost as legendary as Louis', and he had no love for her. If her former coven leader had sent him then that was to be part of her punishment. He wanted her to die in the most excruciating manner possible.\n\nReasa started struggling again, kicking behind her to try to catch her captor off-guard. Her blows were ineffectual though. She was human now and so very weak.\n\nThe Were threw her to the ground, slapping her face as she tried to rise. His blow was hard but controlled. It was enough to cause her head to snap back against the bark of a tree, pain blossoming at the base of her skull. Crying out, she slumped to the ground in a wave of dizziness. ",
        "So, this was what her end would finally be? All it took was one slap to subdue her? Hysterical laughter bubbled up inside even as tears began to flow. They said pride came before a fall, and Reasa was honest enough with herself to admit that the ease of her defeat rankled as much as being caught. When she had been a vampire she could have killed the wolf with one bite, now she was watching him through hazy vision pulling on a pair of sweatpants and reaching for what looked like a phone.\n\n\"The bitch came to me...\" he was saying into the device and she knew he was talking to Michael. He appeared certain she'd be of no further trouble to him and that fuelled her inner rage. \n\nReasa wouldn't go down without a fight. She wouldn't be delivered into Michael's hands. Grasping at a nearby rock, she rose unsteadily and threw herself at the half-clad male.\n\n\"Stay down!\" he growled, backhanding her again.\n\nBlood welled up in her mouth as she crumpled in a heap at his feet.\n\n\"No...it's nothing. Stupid bitch tried to attack me. I thought you said she was a vampire? She smells human...\"\n\nReasa's ears were ringing from the second blow, so much so that it took a moment to realise that something was very wrong. Struggling to fight off her disorientation, she opened her eyes, trying to raise her head up from the ground. Red...all she could see was red. It took another moment to realise what her brain was trying to grasp, and when she did, she rolled forward and vomited up her recently eaten breakfast.\n\n*****\n\nFucking Alpha! Reading him the riot act. Glaring at him with eyes full of condemnation. He could have snipped those eyes out with a flick of one talon. He could have made Rafe Armand-Hanlon weep for death. He hadn't though, he had been a good boy. He had obeyed his parents as they'd asked of him, even though Rafe was the reason they weren't with him. \n\nHe was still furious, still itching to take apart something or someone. So he had headed into the forest away from the compound, where he could destroy something without causing any harm to the pack. Dara had tried to stop him, his beautiful angel. She had tempted him and he'd almost given in but he was too close to the edge, too afraid he would do something to hurt her. \n\nHe could still see the confusion in her eyes, still see the hurt on her face as the words had spewed from his mouth.  \"Stop following me around like a bitch on heat. Don't you have enough wolves to whore yourself with? I'm not interested in sloppy seconds, Dara...or in your case that would be sloppy hundreds, wouldn't it?\" \n\nSo much pain crossing her beautiful face, and then the expected shadow as the light died in her eyes and any compassion she'd ever harboured towards him extinguished. His own pain was like razors scraping down his skin, and he knew he would cut himself a thousand times to try to alleviate that feeling. He deserved it too, for hurting his angel as he had.\n\n\"Fuck you, Kothari.\"  Her voice had been winter frost.  \"As if I'd ever look at you in that way. It will be a cold day in hell before I ever stoop that low. I'm done with putting up with your shit. I don't care what you do anymore; just stay the fuck away from me from now on.\" \n\nHe'd given her his best smile, the one that told a person that they were visiting at the insane asylum and if they were very lucky...they may get out of it alive.  \"You're the one following me with your tongue hanging out, wolf. I can't shake you off no matter how blunt I am. Are you really that desperate? You should have some pride in yourself, Dara.\" \n\nShe had turned around and walked away without another word and she'd taken his heart with her. Only she would never know that now. He had destroyed any chance he may ever have had with her. That fuelled his rage as much as his dressing down by Rafe had. That he'd deserved both was a moot point. Everything was spiralling and he was losing all control. He had no anchor to keep him in check and he was so very, very afraid...\n\nHe heard the voices in the distance and he shadowed himself from view in an instant. No one was supposed to be out this way...it was why he always headed in this direction when his beast rose. The sound of skin on skin assaulted his acute hearing, and a woman's cry was heard. Kothari took off silently in the direction of the disturbance the last of his control ebbing as he moved.\n\nThe girl was lying on the ground when he entered the clearing, her caramel skin bathed in blood. The left side of her cheek was scraped raw, her bottom lip split and oozing blood into her mouth. He knew her from the pack compound. She was Liam's mate...the one who had come to kill them. There was no sign of the other V\u00e2rcolac, there was only a strange wolf talking on a cell phone. \n\n\"No...it's nothing. Stupid bitch tried to attack me. I thought you said she was a vampire? She smells human...\" \n\nKothari's control snapped in that moment and he flowed into the clearing...\n\nHe took the male's arm first, slicing it off at the shoulder. The phone was still clutched in the dismembered limb's grasp as it fell to the forest floor, the wolf's blood splashing all over his face. Kothari licked at the hot nectar, vaguely aware of the other male screaming and spinning away from him. The girl was moaning in shock, vomiting onto the dry dirt but he ignored her and concentrated on his prey.\n\nMoving at supernatural speed, he sliced through a kneecap, glee rising up inside as the wolf howled and dropped to the floor beside the girl. Had the stranger been thinking of raping Liam's mate? Kothari wasn't sure but he took care of that issue with his next cut. The stranger was screaming mindlessly now and it was the sweetest symphony Kothari had ever heard. He would leave his neck until last...so he could enjoy the music. \n\nAnother leg...and then the other arm, he was coated in blood by the time the male was just a head attached to a bleeding torso. The stranger wasn't screaming anymore which was mildly disappointing. Instead, he was uttering a pathetic mewling noise as his chest heaved for air. \n\nStraddling the prone form, Kothi leaned forward, his breath caressing an ear that was still attached to the body. He giggled softly, rapture running through him as the male stilled completely and the acrid scent of terror filled his nostrils. \"If you go down to the woods today, you're in for a big surprise...\"\n\nHe giggled again as he let the ditty trail off, running his tongue over one blood splattered cheek. \"This is my forest, wolf, and that is my pack mate you decided to play with. You should have stayed at home today, stupid boy, but then, I suppose if you had I wouldn't have had so much fun or dined so well...\"\n\nKothari slit the wolf's throat with a talon, opening his mouth over the wound and swallowing down the last of the dying male's blood. \n\n*****\n\nThereasa gagged again, and again, until all she could do was dry heave. She had seen many horrifying things in her time but nothing compared to watching her captor being dismembered by a ghost. Her brain tried to tell her that it had to be one of the V\u00e2rcolac that was doing the damage she'd witnessed, however the sheer brutality on show overwhelmed any reason and all she could do was pray she wouldn't be next.\n\nWhen she heard the giggling and sing-song voice, all breath left her body and her blood froze in terror. She was afraid to look up, afraid to see the madman turn in her direction. Instead, she curled up in the foetal position and prayed that her end would come quickly.\n\n\"Are you seriously hurt or is it just cuts and bruises?\" The seemingly normal tone of voice was at odds with what she'd just witnessed.\n\n\"Liam's mate, do you require serious healing?\"\n\nThere was impatience in his tone now but still a hint of sanity. Taking a deep breath Reasa opened her eyes slowly, pushing her sore body up into a sitting position. Hunkered down beside her was Kothari, his clothes and skin drenched in blood. She had warned Liam about this male only a handful of hours ago. She had been correct in her warning and she feared what he may yet do.\n\n\"It's just cuts,\" she finally answered, her voice sounding weak and small. Her throat was also sore from all the vomiting she'd done, which didn't help her sound confident either.\n\nKothari was silent for a long moment and then he reached out to touch her sore cheek, running his thumb against her bottom lip. \"Drink.\"\n\nShe was too afraid to disobey him, surprised to realise that he had nicked a cut on his thumb and it was his blood she was swallowing. He was healing her.\n\n\"You shouldn't be so far from the pack, Thereasa. You have no inkling of the dangers that are out here.\" His said the words conversationally, though there was weight behind them.\n\nHe was warning her against himself but that was at odds with his current actions. \"Why did you help me?\" Now that he didn't appear to be ready to kill her too, her curiosity was breaking through her fear.\n\nKothi cocked his head to the side, as if he too, was trying to figure that one out. \"I owed Liam,\" he finally answered, nodding his head as he spoke. \"I hurt him when we sparred. I needed to atone for that.\" \n\nWhen she didn't respond, he reached up and took off his glasses, and speared her with a gaze that was a kaleidoscope of red and silver swirls. \"Tell no one what you witnessed here today, and I will tell no one that you tried to run. You won't make that mistake again...will you, Thereasa?\"\n\nThere was no escaping the implied threat in his voice and it sent a shiver down her spine. She tried to answer him but no words would come out so she settled with nodding her head. Her compliance appeared to please him because he rose and the air shimmered around him. When it cleared he was impeccably dressed in black T-shirt and jeans, no trace of blood to be seen. He placed a fresh pair of sunglasses over his eyes and then motioned to her right.\n\n\"I guessed your size but those should fit. Stay away from the corpse and get changed. I will be in those trees while you do.\"\n\nHe strode away as her gaze turned where he pointed, shock rocking through her as she saw a complete duplicate set of her clothes folded neatly in the dirt to her right. How the hell...? Reasa shivered and swung her gaze back to where Kothari had vanished. Someone had to warn the pack about him but she couldn't say anything without giving herself away. Perhaps she could tell Liam. Perhaps he would understand why she'd done what she had.\n\nStripping off quickly, she wiped away a couple of small specks of blood from her shoulder and dressed in the clothes the V\u00e2rcolac had provided. They were a perfect fit and for some reason she found that even creepier than anything else she'd just witnessed. She didn't want Kothari to know her that well.\n\nA sound intruded as she went to rise after slipping on her sneakers. For a moment she couldn't work out what it was and then she realised it was coming from the severed hand still clutching the cell phone...\n\n*****\n\nMichael had listened to everything that had happened. Each scream had sent a shiver down his spine and he'd known he would have to tell the Master about it. The hybrids were more dangerous than they had first thought, but with enough warning, his Master would be able to neutralise them.\n\nHe whispered into the phone when it became apparent the hybrid had moved some distance away, trying to attract Thereasa's attention. He repeated the words endlessly until it got his desired result.\n\n\"Do not say anything, Thereasa, merely breathe twice into the mouthpiece...\"\n\nAfter whispering for almost five minutes, he heard two breaths ring in his ear. Hatred washed through him, but Dante's words were still rattling around in his brain. It was now apparent that his former coven member was too well protected at the pack compound so he would have to get to her another way. If it had just been a case of killing her, he would have risked a pack attack, however maybe Dante was right and there was intelligence to be learned from her? \n\nThe wolf had said she scented as human...that would be something his Master would be interested in and he'd only be able to learn what had happened if he talked to Thereasa before she died. \"Do not speak, just breath once for no and twice for yes. If you alert your companion that anything untoward is happening, I swear to you a thousand vampires will die. Do you understand, Thereasa?\"\n\nTwo breaths resounded once more, and a smile slowly spread over his face. He had the bitch now, and one way or another she would pay for her betrayal. \"I have Louis' best soldiers with me and they're spread out all over this city. Some are even scattered throughout other cities where vampires make their home. Each one of them has enough Amort to kill hundreds of our kind. One word from me and the killing starts, and I know how much you wouldn't want that to happen, Thereasa. Would you?\"\n\nOne breath, as he had expected. Sentimentality towards other vampires had always been her weak spot, though she had counted it as a strength. He had known that one day it would play into his hands...\"Then listen very carefully...this is what you need to do to prevent that from happening...\"\n\n*****\n\nKothari returned to the clearing, his bloodlust abated by the slaughter of the wolf. He found Reasa standing beside one of the tall oak trees, her expression wan despite her bronzed complexion. For a moment he felt a tinge of pity for the girl. How she remained sane after all she had been through was beyond him. Then the moment passed, and he slipped back into the coldness of his soul.\n\nChecking that there was no visible signs of what she'd endured he stepped back and let his gaze run over the clearing. He would fix the mess when she had gone. No one would ever know what had transpired here this day.\n\n\"Go back to the pack, Thereasa, and stay there. You are Liam's mate and as such, you belong at his side. If you ever do anything to hurt him again, I will make you regret it. Are we clear on this?\"\n\nDumbly she nodded, and he gestured her away. He didn't watch her leave, instead he waited ten minutes and scented the air. She was far from the area when he took off his glasses and narrowed his gaze on the wolf's corpse. White fire bled from his eyes, incinerating the body and all the other evidence in the clearing...\n\nTo be continued..."
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "werewolves",
        "mating",
        "love",
        "hybrids",
        "paranormal romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/tears-of-the-fallen-ch-21"
}