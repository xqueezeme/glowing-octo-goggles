{
    "title": "Watching Pt. 03",
    "pages": [
        "This story is a complete fantasy. No one is under the age of 20 and there is no physical hurt or pain.\n\n\n\n  The next day, Bruce worked hard to make sure everything was spick and span for Jennifer's return. It also took his mind off Mr and Mrs Smith. He had been dreaming of them all night.\n\n When Jennifer arrived she was full of the joys of Spring and told Bruce what a wonderful time she and the other girls had had and all the shows and sights they had seen. She scarcely asked what had happened to him over the weekend. It really was all about her.\n\n Then she said \"I have been talking to Marian and Susie about our problem looking for some extra help in the house and garden. With our jobs so busy now Bruce it is becoming a necessity to hire some people.\"\n\n Bruce nodded. At least she was discussing things with him. He said \"Yes, I totally agree, Jennifer. We both have very good jobs so can easily afford to pay someone, the only difficulty is getting someone who is reliable and capable.\"\n\n Jennifer laughed. \"I think Marian has solved our problem, Bruce. It has been right under our noses for some time.\"\n\n Bruce smiled. Marian was a close friend of his wife and taught at the same school since their early days. She was Head of English Literature.\n\n Jennifer carried on \"Marian told me that the school cleaner is looking for extra work and her husband is the School Janitor and she understands that he is quite good at gardening work as well. I know them. They are totally trustworthy and discrete.\"\n\n Bruce smiled his approval. It really did sound too good to be true. \n\n He felt rather differently a few moments later when Jennifer carried on enthusiastically \"I am going into school tomorrow and I will ask Mr and Mrs Smith to call around tomorrow evening for a chat. You will like Malcolm Smith, he is good at lots of things.\"\n\n Bruce nodded dumbly. He felt panic stricken.\n\n The following day passed so slowly. It was difficult for him to concentrate. He was caught between thinking about having Mrs Smith actually in his own house and the thoughts of what Malcolm wanted to do to Jennifer. His greatest fear, was of being exposed. This petrified him.\n\n That evening after they had had tea, the knock on the door that Bruce had dreaded came. Jennifer went to the door and then led Mr and Mrs Smith into the comfortable lounge. They had obviously made a lot of effort to look presentable. Mrs Smith had a nice flowery dress on and Malcolm had his best suit on.\n\n Jennifer made the introductions. Mrs Smith shook Bruce's hand and said respectfully \"Pleased to meet you Mr Rees.\"\n\n Malcolm also shook his hand and again was very respectful. Bruce almost sighed with relief as neither of them had made the slightest sign of recognition. Then they sat down, Jennifer did most of the talking as she explained their duties. She did ask Bruce to give some more details about the garden and some of the outside work.\n\n Bruce managed this OK and Malcolm asked a few questions but it all passed very easily. When the time to talk about money came, Jennifer explained the sort of salary they were prepared to pay.\n\n Bruce noticed that both Mr and Mrs Smith seemed surprised that it was so generous and said so. Mrs Smith even went on to say that it was almost double what they expected. Jennifer laughed \"That's good Mrs Smith, as we want to make sure you are happy. I have a good job at school as you know but Bruce is very successful at his job, so paying you this money will be no trouble whatsoever.\"\n\n Mr Smith did say \"I want you to understand Mrs Rees that we have never earned that much money before. Both my wife and I are very grateful and we will do the best we can to please you.\"\n\n Bruce took some satisfaction out of Malcolm's genuine expression of gratitude. He could see that Malcolm was really impressed with everything. In all of the meetings at the Smiths house, Bruce had been in a sort of 'Little Brucie' situation. Now that he was the Employer, he enjoyed the feeling of a little power.\n\n For the next 3 weeks everything was wonderful. The Smiths seemed to enjoy their work and Mrs Smith even stayed on for a couple of hours extra to cook the evening meals for Jennifer and Bruce. Like everything else she did, the meals were really excellent. \n\n Malcolm sorted out most of the outside emergencies remarkably well and started to get the garden into better shape. When he referred to Bruce it was with the greatest respect and Bruce stated to relax. Everything was working out well. In these new circumstances Bruce found he really liked Malcolm as a person. \n\n It was when he was relaxed, that Bruce started to think of Mrs Smith again. It was a pleasant feeling as he sat in an easy chair reading the newspaper but secretly watching the older woman moving around the room dusting and polishing. \n\n He particularly liked it, if she was reaching into one of the cupboards and had to bend over and stretch. Some of her skirts were not so long and the shape of her bottom was quite erotic. Her big thighs were wonderful. He admired the power in her strong body. He thought a lot bout her plump bottom.\n\n He felt his penis rise as he remembered the first time he had seen Mrs Smith and Malcolm had encouraged him to fuck her. He even remembered Mrs Smith lifting up her big legs so that he could insert his cock in.\n\n Bruce realised that he couldn't do anything like that any more but it was lovely and exciting for him to watch. He knew he was a watcher.\n\n Bruce also realised that both Mr and Mrs Smith must know that he enjoyed little scenes and views. They knew their place in the household and respected their employers. This didn't stop Mrs Smith being a little careless sometimes in the way she sat. She wanted to please her Employer.\n\n The best time was when she actually stood up after sitting in one of the easy chairs. It was almost inevitable that she would open her legs which would show her panties to anyone in the right position. \n\n Bruce was always in the right position and he was always watching.\n\n It was obvious what he was doing and Mr and Mrs Smith must have known. She didn't alter anything and Bruce got the impression that they were encouraging him. It took his breath away and he mostly had to go to the bathroom.\n\n He could also see that Jennifer really appreciated the work that Mr and Mrs Smith were doing. She frequently complimented them to their faces as well as telling Bruce how much she admired them.\n\n Gertrude and Malcolm took everything in their stride. As they were given more and more tasks to undertake they seemed to relish the challenge. On one occasion Jennifer spoke openly when she said \"Mrs Smith you are a marvel. I don't know what we would do without you.\"\n\n Mrs Smith just laughed and joked \"Just tell Aunty what you would like and she will provide.\" Jennifer laughed. She liked that name and after that would sometimes would refer to Mrs Smith as Aunty. Bruce liked it as well.\n\n All four were now on very good terms. Although Mr and Mrs Smith would refer to his wife as Jennifer or Jenny, it was noticeable that they still referred to Bruce as Mr Rees. It was a mark of respect but Bruce started to like the idea of being called by his first name. He did wonder that if that started he may end up as Little Brucie again. \n\n It was very confusing although he started to get stiff between his legs more and more. On occasions Mrs Smith could see it and although she didn't say anything, she would give him an encouraging smile. Bruce wondered if she would let him fuck her and also whether Malcolm would allow it.\n\n She was considerably older than that first time all those years ago but in a way she was even more erotic now. She was bigger of course but now she was wearing much nicer clothes. With the extra money they now received they both dressed more smartly.\n\n Some evenings Jennifer would invite the Smiths to stay for a few hours extra, not to work but to simply have a glass of wine and some biscuits. They were becoming friends although the Smiths were still respectful employees.\n\n The older couple were really good company and Malcolm would make them all laugh with his Janitor tales of mishaps in school. It seemed the most common difficulty was when the girls would get stuck in the toilets. Sometimes it happened to a few of the women teachers.\n\n The boys and the male teachers seemed better able to extricate themselves from any difficulties. Jennifer suggested that some of the females may have been doing it just to attract attention. Mrs Smith smiled \"I think you may have a good point there Jenny.\"\n\n Bruce enjoyed these tales very much and sometimes when the two men were alone in the garden, he would ask Malcolm about those situations and Malcolm woulds tell him even raunchier situations. On one occasion, one of the younger female teachers had become over excited and had actually wet herself. When Bruce told Jennifer later on, they both had a good laugh as the knew the young woman quite well.\n\n The more the two men talked, Bruce found he really liked the older man. Originally he had thought that Malcolm had looked a bit seedy but now he just seemed lean and strong especially for an old man.\n\n As the weeks passed Bruce could see that Jennifer was getting quite fond of Mrs Smith and now called her Aunty more frequently. One evening Jennifer came home from a gym session in one of her badminton skirts. She would normally have changed it immediately but Mrs Smith laughed \"You really do look lovely in that skirt Jenny. Just like my little girl.\"\n\n Jennifer giggled. Bruce noticed that she didn't change her clothes as normal, which meant that throughout the evening there were several 'underwear flashes' which obviously Malcolm could see.\n\n Bruce himself was enjoying the situation as it had that secret intensity about it. He wondered what Malcolm was thinking now about Jennifer's underwear. He smiled to himself as now Malcolm was becoming the watcher.\n\n Bruce was now feeling more confident in his own position as Malcolm's boss. He remembered Malcolm's excitement when he was handed a couple of pairs of Jennifer's knickers. \n\n Actually just thinking about it made Bruce think about Mrs Smiths large breasts. She was looking more and more motherly as the days passed. Jennifer adored her and very often spoke in a very childish way and even referred to her as Mumsie. Mrs Smith didn't discourage her. They were all enjoying the unspoken excitement. \n\n On quite a few occasions, Malcolm had told Bruce how much he appreciated to money that they were paid. It all added to Bruce's feeling of benevolence. He liked Malcolm. \n\n The two men were in the garden one day and Bruce wanted to know how to grow flowers to get the best in appearance and aroma. Malcolm had already done wonders on some of the small plots and explained that sometimes in the early evening it could be very rewarding if you gently open the petals and rub a little moisture into the bud.\n\n It was all very innocent but Bruce found the description quite arousing. He secretly thought about opening up Mrs Smiths underclothes and rubbing her bud. He panted a little as Malcolm added \"You can even use a tool to insert more fluid into the bud.\"\n\n Bruce murmured \"Is there any danger of the flower becoming too moist?\" Malcolm shook his head \"No danger whatsoever, Mr Rees. Flowers like lots of insertions and always respond by opening their petals even more.\"\n\n Bruce was openly panting \"Opening her petals even more. It sounds so wonderful.\"\n\n Malcolm nodded wisely \"She likes the fluid, so the more she opens her petals, the more fluid it is possible to get up her. Big petaled flowers love to be flooded. You can drench her.\" Bruce was on the point of coming when Jennifer called them in for a drink.\n\n As they went into the lounge Jennifer reached over to pick the teapot up but Mrs Smith laughed \"It's OK Jenny, I will be Mother and pour the tea.\"\n\n Jennifer loved this sort of friendly intimacy and responded jokingly \"OK, and Malcolm can be Daddy and Bruce and I will be your children.\" It was all in fun.\n\n They all laughed especially when Mrs Smith added \"And you had better be a good girl Jennifer or Mummy will smack your bottom.\" Bruce noticed that his wife panted a little. It made him feel nice as well as he had never seen a woman spanking another woman's bottom.\n\n Bruce really enjoyed this banter but after the conversation with Malcolm in the garden he looked at Mrs Smith sitting there in her brightly patterned cotton dress and couldn't help thinking that she looked like a lovely big flower ready to have her petals parted. \n\n She was so jolly and chubby that Bruce imagined opening up her petals and injecting loads of fluid. She would probably like some cream up her.\n\n There were several instances like this which were exciting and Bruce noticed that Jennifer seemed really fascinated with Mr and Mrs Smith and seemed to very willingly do little things that the older woman suggested. Most evenings now she would usually be wearing one of her short skirts together with white cotton knickers.\n\n Bruce felt quite confident in himself and didn't resent this in any way. It was obvious that Malcolm could see a lot but now Bruce felt that this was quite fair bearing in mind that Malcolm had let him mount his wife. Bruce wanted to do it again. He hoped that Mrs Smith would be willing.\n\n Very often in the evening as they would all be having a glass of wine, Jenny would be hanging around Mrs Smith who would tease her 'little girl' and would ask her if she had clean underwear on.\n\n Jennifer was almost inviting the older woman to do something and on one occasion as she was bending over the desk next to Mrs Smith. As Bruce and Malcolm watched they saw Gertrude push her hand right up the back of Jenny's skirt. \n\n It was so erotic, Bruce wondered how his wife would react. Malcolm said nothing. Bruce waited with bated breath and then watched as he saw his wife simply open her legs more and bent over the desk further. He realised that it must have happened before. \n\n He realised that Jenny was being felt up and she was enjoying it. Mrs Smith said to Bruce \"I think the little girl is ready for a spanking, Brucie.\" Bruce could feel his penis throb as Mrs Smith waited for him to reply. He knew that he could easily stop things going further. He wanted to go further.\n\n His answer would set the scene for future events. He panted \"Yes, Mummy. She is ready.\"\n\n Mrs Smith looked him straight in the face \"Are you sure, Mr Rees?\"\n\n Bruce couldn't stop now. His voice was trembling but he murmured \"Yes, I am sure Mrs Smith.\"\n\n She whispered quietly so that only Bruce could hear \"You are a good little boy, Brucie.\"\n\n Jennifer was now simply standing there awaiting instructions. Mrs Smith told her \"Pull your skirt up Jennifer and then pull your knickers down.\"\n\n Jennifer didn't argue. She simply pulled her skirt up and tugged her white cotton panties down below her bottom. \n\n Mrs Smith handed her a little leather strap. Telling her \"Give this to Daddy and lay over his lap.\"\n\n \"Yes, Mummy.\"\n\n Bruce watched as his wife, with her panties around her knees, struggled over to where Malcolm was sitting and crawled over his lap.\n\n Bruce knew how big Malcolm's penis was and that in her position spreadeagled over his lap she would also know by now.\n\n He saw Malcolm squeeze his wife's bottom and then push it down so that his penis must be pushing into her belly.\n\n Malcolm whispered loudly \"You have a nice big bum, Jenny.\"\n\n Jennifer was panting as she gasped \"Yes, Daddy.\"\n\n It was so erotic. Bruce wanted to pull his own penis out but decided he had better not. As he watched he was amazed when he saw Jennifer pressing herself down onto Malcolm with her tummy. Bruce gasped as he realised that his wife was actually humping Malcolm. \n\n He could see she was juicing several times.\n\n Bruce wondered how it would end. Mrs Smith was also watching closely. She was too sensible to let things get out of hand in the lounge. She stood up and helped Jennifer dismount before any mess occurred. \n\n Malcolm looked a bit hot and bothered but hadn't actually cum, although it was clear he obviously needed to very badly.\n\n Mrs Smith was very calm as she smiled at Jennifer and said \"Give your knickers to Daddy, Jenny. He will take them into the bathroom.\"\n\n Jenny was looking a little shamefaced as she murmured \"Yes Mummy\" and slipped her panties right off and handed then to Malcolm. \n\n Malcolm was wheezing a bit but couldn't help taking Jennifer's panties and pressing them into his face and inhaling deeply. Then he sloped off into the bathroom.\n\n Mrs Smith smiled and told Jennifer \"He wont be long. He will probably put your drawers in the dirty laundry basket when he finishes.\"\n\n Jennifer smiled a little guiltily but nodded. She excused herself and went into our bedroom to tidy herself and apply some fresh makeup before reappearing.\n\n When Malcolm returned, his wife made them all a nice cup of tea and they had a quiet end to our evening.\n\n After the Smiths left to go home Jennifer and Bruce settled down to quietly watch the television for about an hour.\n\n They didn't say very much about the evening's events although it was obviously on their minds very much.\n\n Bruce was in bed first and watched as his wife slowly undressed in front of him. It was as if she realised that he wanted to watch her. Bruce was very aroused as he knew she was performing for him. She was his wife and wanted to please him.\n\n Nothing was said but Jennifer was smiling at him as she took her skirt and blouse off and then eased her brassiere down a little to display her nipples.\n\n Then she giggled as she dropped her panties down to her ankles and sat on the chair opposite the bed with her knees wide open. She smiled lovingly as she exposed her open pussy to him.\n\n Bruce eased his penis out and stroked it up and down. He knew it wasn't very big but it was very stiff and pulsating.\n\n He did make a little comment about his smallness but Jenny simply giggled that she loved his little cock and pointed at her wide open excited slit saying \"This will always be yours Brucie and tonight it is all yours.\"\n\n When Jenny joined him on the bed they had the most wonderful lovemaking in their entire marriage. Bruce felt so confident in his wife's love and Jennifer was over the moon.\n\n They found that one way that Bruce could keep his smallness up her was when she lay on the back and slung one of her legs over his shoulder. She used her other thigh to adjust the tightness to ensure he stayed up. \n\n The next morning they talked over their experiences so honestly. They didn't want to lose this wonderful time. Malcolm told Jennifer most of the events of ten years ago when he visited Mr and Mrs Smith at their home and how intense it was. Jenny understood everything fully and loved him all the more for it.\n\n She told him about experiences she had had with her friends Marian and Susan in all girl enjoyments in the hotel bedrooms. He loved listening to her. \n\n He confessed he liked watching things like that, and that, from time to time he liked wearing her underwear as it made his little penis stiff and it felt nice. Jennifer gently kissed him on the cheek saying \"I love my husbands little cock.\"\n\n It was ideal. Their marriage was fulfilled and they both knew that all the credit was due to Mr and Mrs Smith. They just hoped that the Smiths would stay with them forever. Apart from the wonderful work they did for them they knew they needed the older couple in so many ways.\n\n They did talk about some of the things that had happened and again honesty was the key note. Actually they had both enjoyed all the little facets and details.\n\n Bruce chuckled as he said \"I loved it Jenny, when you gave him your dirty knickers so that he could go and masturbate. I almost came myself.\"",
        "Jenny laughed \"You should have. As I was across his lap, I squished 3 times as I could feel his big penis swelling and throbbing pushing into my tummy.\"\n\n Bruce spoke seriously \"Actually, Jen, Malcolm has a magnificent prick. You will enjoy it when you see it. He has a big red knob on the end of his cock with a slit at the top where his spunk comes out.\"\n\n Jenny giggled again. The words like 'cock' and 'prick' and especially 'spunk' were really erotic and exciting. The talk helped her to re live all the excitement and she told her husband \"I could feel his big knob throbbing as I pressed my belly down on it. Mrs Smith whispered in my ear and was encouraging me.\"\n\n At the mention of Gertrude, Bruce shuddered \"Oh God, Jenny, she is wonderful with her big Tits and huge thighs.\"\n\n Jenny was breathing heavily \"I like her as well Bruce. It lovely when she pretends she is my Mother and I sit on her lap and she fondles me. She told me she always wants me to wear little white knickers.\"\n\n That thought in itself excited Bruce further. There seemed to be no end to the excitement of Mr and Mrs Smith.\n\n They talked about everything for the next hour. Jennifer confessed she was aware that she had neglected Bruce over the last couple of years but now she felt so complete living with him. Bruce was in a sort of heaven. His marriage to his beautiful wife was much better than it had ever been. It was all down to Mr and Mrs Smith.\n\n The Smiths were due to arrive straight after lunch and Bruce and Jennifer were anxiously awaiting them. It was difficult to control their excitement.\n\n When Gertrude and Malcolm knocked the door, Jenny welcomed them in with her lovely smile. She didn't want to overwhelm them.\n\n They realised quite quickly that things were not all well. Both Mr and Mrs Smith were very serious and sombre. After a lot of coaxing and cajoling Mrs Smith said \"I think we should all sit down to discuss our employment.\"\n\n Jenny and Bruce knew this didn't sound very good.\n\n Mrs Smith started off saying \"I want you to understand Mrs Rees that Malcolm and I feel so privileged to serve you and the money you pay us has transformed our lives which up until now has been pretty poor.\"\n\n Bruce broke in \"We want you to understand as well Mrs Smith, that you have made our lives much more complete and happy and in fact Jennifer and I want to increase your salary by another 20%.\"\n\n Malcolm gasped \"But that is incredible money Mr Rees.\"\n\n Bruce simply shook his head \"You are well worth it, Malcolm, and we can easily afford it.\"\n\n Mrs Smith took up her original theme \"The money and rewards are unquestionably wonderful but both Malcolm and I think that our relationship is too familiar. We have such great respect for you and don't want to take advantage. You are a wonderful young couple and your home is so beautiful that Malcolm and I thinks its like a fairyland. Obviously you can refer to us as Gertrude and Malcolm but we think we should respectfully refer to you as Mr and Mrs Rees.\"\n\n Bruce protested \"But why, Malcolm?\"\n\n Malcolm looked at him seriously \"Because you are my Employer Mr Rees. I depend on you to pay my wages which are truly wonderful. You are my boss.\"\n\n Jennifer looked out out and murmured \"I liked you being my Daddy last night, Malcolm.\"\n\n Mrs Smith did half smile \"And Malcolm enjoyed it as well Mrs Rees and so did I but it isn't good for our long term employment which is what we want. I assume Mr Rees has explained how we first met and the naughty things which transpired. In a way those things were delightful for all of us, but at that time, Mr Rees was in our house and Malcolm and I were in charge.\"\n\n Jennifer felt panicky over the thought of losing the older couple and wanted to make their position clear \"Yes, I know everything about the first meetings Gertrude where Malcolm was watching you undress through the window and then Malcolm invited him in to see you in person.\"\n\n Malcolm interjected \"Mr Rees didn't just see her. I invited him to fuck my wife and he did. I know he is embarrassed about his little cock but both Gertrude and I thought he did very well although he seemed a little embarrassed about being called Little Brucie.\"\n\n Bruce spoke up \"It was a fantastic occasion for me Malcolm. I was embarrassed about being called Little Brucie but not any more. I am much more confident.\"\n\n Malcolm bit his lip \"But even last night we still called you Little Brucie.\"\n\n Jennifer broke in \"But he likes it Mr Smith.\"\n\n Gertrude sounded surprised \"Likes what exactly, Mrs Rees?\"\n\n Jennifer looked at Bruce who nodded. She said \"My husband likes being Little Brucie. We all know he has a small penis. Although it still makes him blush as when he was younger the boys used to call him a little prick. I think its a nice little cock.\"\n\n Mrs Smith nodded \"I think he has a nice little cock as well, Jennifer.\"\n\n Bruce found it strange that they were all discussing his penis, but it was all in quite a kindly fashion.\n\n Malcolm nodded. \"It seems that we are all in agreement and its OK because Mr Rees enjoys being a little prick.\"\n\n They all looked quite pleased although Bruce did find it rather diminutive as he was being described by his employees and his wife as a little prick.\n\n He wanted to make sure that the older couple would stay working for him so he asked tentatively \"So are you agreeable to carry on with us Mr Smith with a salary increase of 20%?\"\n\n Yes, of course we are, and we are very grateful, but you must remember that you are our Employers and Gertrude and myself are servants.\"\n\n Jennifer looked relieved \"Will be our Mummy and Daddy from time to time?\"\n\n Mrs Smith chuckled \"We cant promise that Mrs Rees, but it may be possible on some special occasions. We all have to remember our places in the household and that Malcolm and myself work for you.\"\n\n After that long discussion, things settled down over the next fortnight and it was quite formal with the Smiths respectfully addressing them as Mr and Mrs Rees. \n\n Gertrude and Malcolm were still wonderful at their work and taught the young couple how to cook certain delicious meals and little secrets of the garden.\n\n Bruce encouraged Malcolm to talk about natural issues such as fertilization. Although he found it educational he also thought it was exciting when the older man talked about plants and flowers easing the petals up and injecting the life giving liquids.\n\n Bruce took the opportunity to suggest that it was much the same as human life with men raising skirts of females and pulling their panties down. Malcolm laughed at the analogy saying \"I suppose it is in a way Mr Rees.\"\n\n It was an opening for Bruce and he took it \"I wonder if you could tell me something, Malcolm?\"\n\n \"If I possibly can, Mr Rees, I will.\"\n\n Bruce asked \"Do you remember all those years ago when after you and Gertrude did things for me, you asked me to bring you Jennifer's knickers?\"\n\n Malcolm looked cautiously \"Yes, I remember Mr Rees.\"\n\n \"When I gave them, you pulled her panties up to your face and inhaled. I have often wondered about that night whether you could actually smell Jennifer from her panties and why it would be so desirable for you?\"\n\n Malcolm breathed heavily and thought for a moment before answering \"I could smell her Mr Rees. You have to understand that your wife was a Senior Teacher in our school and very respected whilst I was a lowly Janitor. It was very exciting for me to smell her knickers. She was, and still is far beyond my wildest dreams.\"\n\n Bruce was afraid to push the subject too far but did say \"I just want you to know Malcolm, that if you want Jenny's panties again, I can get them for you.\"\n\n Malcolm breathed heavily. He didn't say anything, but Bruce took some satisfaction from the fact that his offer had not been rejected.\n\n START OF PART 4\n\n That evening he told Jennifer about his conversation with Malcolm. Jenny giggled and looked pleased as she told him \"Be careful not to embarrass him, Bruce. Just make sure he is aware that things are available if he wants them.\"\n\n Even just talking about Mr and Mrs Smith excited them and they Jennifer encouraged her husband to be a naughty Brucie. She wanted to know more and more about what Malcolm had said about her panties and how he had reacted. Bruce embellished the conversation even further.\n\n As they were lying on the bed, Jennifer murmured \"I think Malcolm wants to be my Daddy, Bruce but he doesn't want to offend us.\"\n\n Bruce nodded \"I think so as well Jen. Gertrude feels the same way but she has stronger will power. She would help Malcolm to be stronger and resist.\"\n\n Jennifer murmured \"Sometimes they don't come in together. Sometimes they work on separate days.\"\n\n Bruce could see hat his wife was suggesting. He smiled \"On Thursday, Gertrude is visiting her daughter. Malcolm will be on his own. He will be with us most of the afternoon on his own.\"\n\n Jennifer felt very excited and giggled \"You would have to help him and encourage him.\"\n\n \"Will it be alright if I watch Jen. I would like to watch. It would be like the time all those years ago when I was with them in their house and I was Little Brucie.\"\n\n Jenny gasped \"I want you to be close and watch, Bruce.\"\n\n Bruce was panting now and muttered \"I do love you so much Jen and I am grateful.\"\n\n Jennifer felt incredibly aroused but wanted to make sure of one more thing and said quietly \"Bruce?\"\n\n \"Yes, Jen?\"\n\n \"I know I am 35 now, Bruce but on Thursday, I would like Malcolm to be my Daddy.\"\n\n It added to Bruce's excitement \"He will want to be your Daddy, Jen. You will have to wear that short little pleated skirt. He thinks that is like a school uniform. He likes that.\"\n\n Jenny laughed \"And my little cotton panties. I know he likes them.\"\n\n Bruce was panting \"That's right Jen. Can I be little Brucie?\"\n\n Jennifer laughed her agreement and within minutes Bruce had fucked his wife for the second time. Jennifer felt wonderful. They were so excited they could hardly wait for Thursday."
    ],
    "authorname": "MaryGrangerx",
    "tags": [
        "panties",
        "knickers",
        "mature",
        "age difference",
        "masturbation",
        "exhibitionism"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/watching-pt-03"
}