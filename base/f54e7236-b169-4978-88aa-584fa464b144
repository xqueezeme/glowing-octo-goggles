{
    "title": "Worries of a First-time Werewolf",
    "pages": [
        "Worries of a First-Time Werewolf\n\n\"Hey, Graham, are you alright?\"\n\n\"You're a damn werewolf?!! Exeleron!\"\n\nGraham had been trying to massage a cramp out of his right wrist when suddenly a blast of energy slammed into his chest, forcefully throwing him backwards. Snow had been falling earlier, so the layer of powdery snow on the ground as well as his thick winter overcoat provided some cushioning as he went flying off the gravel pathway.\n\nTwo other young adults had been walking with him--both of them were his friends, and both of them were also senior apprentices at the academy. Cray rushed over to his side. \"Woah, what--?\"\n\n\"Don't go near him!\" Lilly was holding her wand and pointing it right towards Graham. Colourful sparks of residual magic swirled around the tip of that thin metal rod, before dissipating in an instant. \"Cray, get back!\" Lilly gestured again with her wand, and Cray hurriedly stumbled backwards.\n\n\"Oww.\" Still holding his right wrist with his left hand, Graham stared incredulously up at his friends. His shocked look focused particularly on Lilly--she was a short, clever woman who was normally friendly and always smiling, but now her wand was pointed right at him in a clear threat. \"Did you just blast me?\" Graham groaned.\n\nCray glanced between the other two confusedly. \"What? What's going on?\"\n\nLilly's eyes darted around, looking to see if there was anyone else nearby, but they were all alone in this part of the campus. The three of them had been walking back to one of the academy's dormitory halls where they shared an apartment flat, after having finished semester examinations in the morning. Holding tightly to her wand, Lilly looked nervous but her voice was calm. \"I think Graham's a werewolf. Look at his hand. He's shifting!\"\n\nThe ridiculousness of this idea made Graham guffaw. \"Pahaha. What?! What are you talking about?\" he demanded. \"It was just a muscle cramp in my wrist. I had back-to-back essay tests this morning, and I've been writing nonstop. It's ridiculous to... to say... uh...\" His voice trailed off as he glanced down and got a good look at his own hand. Whereas his left hand was still covered by a winter glove, he had earlier taken off his other glove, which let them all see that his right hand was different. His muscles were cramped up and his hand was half tightened into a fist, but that was the least of the problems. Graham could clearly see his fingers starting to shift and distort, with nails lengthening and becoming short black claws. At the same time, the thin, barely noticeable body hair over the back of his hand was darkening and thickening until it resembled a patch of grey fur. It was such an odd sight that Graham didn't even panic--he just frowned at his own right hand, unable to comprehend what he was seeing. \"How unusual. That... is not normal,\" he muttered, which was quite an understatement.\n\n\"Oh. Oh, damn!\" Cray hurriedly searched through his cloak, before reaching into his sling bag to snatch out his own wand. He joined Lilly in pointing his wand at Graham, though his hands were noticeably less stable than hers. \"You're a werewolf? Really?!\"\n\nGraham shook his head, even as he clutched his wrist with his other hand. \"I'm not a werewolf. Don't be absurd.\"\n\n\"It sure looks like you're a werewolf!\" Cray gesticulated with his wand and his other hand, pointing to Graham's hand, which now half resembled an animal paw. \"May the high emperor preserve us. Graham's a werewolf! This is unbelievable. We've been friends for years now and you never told me about that?\" Cray glanced at Lilly. \"This means we've been roommates with a werewolf this whole last year, but I never realized?\"\n\n\"I'm not a werewolf!\" Graham insisted, despite all evidence to the contrary. \"This must be... some sort of curse or illusion spell? Maybe a leftover from one of the practical examinations over the last week?\"\n\nLilly was unconvinced. \"No, I'm reasonably certain that's a lycanthrope transformation. In my arcane zoology class, we once had a werewolf as a guest lecturer, and he transformed as a demonstration. It made everyone very nervous.\"\n\nCray's eyes lit up. \"Ah, I remember you telling us about that. It sounded cool.\"\n\nLilly let out a soft, dismissive noise. \"Eh? Cool? It was a terrifying experience, seeing an ordinary person transform into this strange, huge, wolf beast creature. And when it started, it looked just like what's happening to Graham, except... that was controlled.\"\n\n\"But that's impossible because I'm not a werewolf,\" Graham repeated. He tried to get up, but all his muscles felt weak, and his sense of balance was off. Still lying in the snow-covered grass, he managed to sit up. \"Why are you two pointing your wands at me?\"\n\nCray shrugged, and he lowered his wand. \"I'm just following Lilly.\"\n\nLilly's steely grip on her own wand didn't waver. \"Graham, if you're transforming involuntarily, we can't assume you'll still have full control over yourself while in an altered state. I don't want to be bitten or mauled by some crazy, out-of-control werewolf who's been keeping secrets from his friends.\"\n\n\"I haven't been keeping secrets. I'm not crazy, I'm not out-of-control, and I'm not a werewolf,\" Graham insisted. \"I don't know what this is, but it's not a werewolf transformation. It's just... It is a problem, whatever this is.\" The abnormality had started at his wrist, but now his whole hand looked altered and strange. The tension and energy within his hand was now starting to slowly spread up his arm. Pulling back the sleeve of his shirt and winter coat revealed the effect moving up his arm in a gradual wave, altering muscles and bone while turning hair into white-grey fur. \"Can I get some help, please?\"\n\nLilly and Cray both glanced at each other, then finally Lilly lowered her wand and she slipped her backpack off her shoulder. From her pack she pulled out a silvery metal ring, about the size to fit over a wrist, and tossed it towards Graham. \"Here. This bracelet is telanium-silver alloy. I use it to help focus my spellcasting. It should act as aether flux sink and suppress a magical transformation like a lycanthrope shift.\"\n\nGraham managed to catch the metal bracelet with his left hand, and even through his glove he felt a tingle through his whole body from proximity to the shiny grey metal. Dense, complicated magical runes were etched into the bracelet to help it focus a magician's power. The thick fur now covering his right hand made it hard to pull the bracelet on, but immediately the runes on the bracelet started to glow as the metal touched his exposed flesh, and the tingly sensation intensified vastly at the point of contact. It wasn't an unpleasant sensation, but more like an intense itch or tickle. The inner energy spreading across his body calmed down and faded back into the background, and over the course of a dozen more seconds the transformation reversed itself. Claws became nails again, and Graham breathed a soft sigh of relief as the fur faded away into nothing, with the proportions of his arm and fingers shifting back to normal. Meanwhile the bracelet had started to glow bright white, with not just the runes but the metal itself shining with energy.\n\nGraham experimentally opened and closed his hand a few times. \"That was strange.\"\n\n\"You're telling us?!\" Cray retorted. Strolling forward, he offered a hand to Graham and helped pull his friend back onto his feet. \"So, you're ok now?\"\n\n\"Thanks. It's... it's stopped now. I think I'm back to normal.\" Graham tried taking the telanium-silver alloy bracelet off, but immediately energy rushed up his arm and his muscles starting seizing. \"Oh no.\" Hurriedly he pulled the bracelet back over his right hand just as fur was beginning to reappear over his skin, which fortunately again reversed the process. \"Is this some sort of advanced curse spell?\"\n\nLilly still looked uneasy, and she continued holding tight onto her wand, ready to cast more spells at her fellow apprentice magician. \"A curse? No, you're obviously undergoing a lycan transform. That must be it. An illusion or curse spell would be cancelled out by tel-silver, not just temporarily suppressed. The amount of energy needed to alter a body form is tremendous, and the fact that you start transforming once you stop touching the alloy means something is continuously providing that energy.\" Lilly glanced around. The three apprentice mages were standing on a gravel path scattered with salt to melt snow and ice, and even the closest buildings were a good way off. \"I'm not doing anything to you, and neither is Cray, so the transformation is originating from you. You're a werewolf. Your body is trying to shift into its other, wolf form.\"\n\nGraham didn't like this conclusion. It made sense from everything the academy had taught them about magic, but on the other hand, it made no sense because he was just a normal person. He couldn't come up with any counterpoints other than a flat denial. \"But I'm not a werewolf.\"\n\nNeither of his friends seemed convinced. Cray looked thoughtful, then he stepped behind Graham and helped brush the snow off his friend's coat. Cray also helped to pick up Graham's winter cap and his right glove, which he passed back to him. \"Now what? Should we take you to the infirmary?\"\n\n\"I don't know if that's a good idea. What if seeing an injured person triggers some... some hidden werewolf predator instinct and he goes savage?\" Lilly said.\n\n\"I'm not a werewolf!\" Graham insisted. \"You two have known me for years--I'm not crazy, or savage, or anything. How come you don't believe me?\"\n\n\"Graham, to be honest, I don't know what to believe.\" Lilly pointed at Graham's hand, and to the telanium-silver bracelet. \"That's a lycan shift, barely being suppressed by that enchanted bracelet. The way I see it, there are two possibilities.\" She raised a finger. \"The first possibility is that you've secretly been a werewolf all along and you somehow hid it from us, except now for whatever reason you're losing control.\" Lilly raised a second finger. \"Second possibility is that you truly didn't know you are a werewolf, and you're transforming for the first time. In both cases you are not in control of yourself.\"\n\nGraham pulled his glove back onto his right hand. He also tugged down the sleeve of his winter overcoat, covering up the telanium-silver bracelet and its glow. \"I'm not a werewolf. Or... or at least I don't think I am? But if I was... then what do we do now?\"\n\nLilly was hesitant for a moment. \"We contact campus security?\"\n\nGraham stared at her. \"What?! Why? I haven't done anything wrong.\"\n\n\"I know, I know. But just for the safety of everyone in the academy, maybe you should be in a containment circle? And for your own safety too, until we figure everything out,\" Lilly said.\n\nCray glared at Lilly. \"You think we should have the security golems put Graham in lockup like he's a criminal? Or some beastly animal? I thought you just said you had a guest lecture this semester by a werewolf? They can live normal lives too.\"\n\nLilly shrugged unapologetically. \"Some do, but some don't. Have you seen a werewolf? They're scary. Imagine a huge wolf that can stand up on two legs. I don't know if it's some instinctual human phobia, but that's a scary sight even if it's wearing a cloak, glasses, and teaching us a lecture about arcane zoology.\"\n\nCray chuckled. \"Hahaha. That sounds like discrimination. Are you discriminating against werewolves?\"\n\n\"Werewolves are powerful, and I think some caution and fear is warranted. The simple truth is that Graham is transforming into a magical, feral, beast creature. He's not in control, and that's potentially extremely dangerous for him, for us, and for everyone else nearby.\"\n\n\"I'm not dangerous,\" Graham insisted. He thought about this for a while, then added, \"I hope.\"\n\nLilly crossed her arms. \"I think we should play it safe and report this to campus security. At least we have to inform someone. Prof Drawson would know more about lycanthropy?\"\n\n\"Woah, woah, woah.\" Cray threw his arm around Graham's shoulders in a loose hug. Whereas Lilly was still holding onto her wand and watching Graham cautiously, Cray showed no fear or hesitation and was as friendly as he always had been. \"Graham's our friend, right? Even if he is a werewolf--which he might be, or he might not, who knows?--even then, he's still our friend. If you let word of this slip to anyone, then the secret's out of the bag. Everyone's going to know. Imagine all the gossip that would go around. And there would speculation and stigma...\"\n\nGraham sighed, and he fidgeted with the bracelet around his wrist, rotating it around. \"I don't know what to think. I'm not a werewolf. How can I be a werewolf? It makes no sense. Maybe... let's go back to the apartment first. I need to think about this.\"\n\nCray patted him on the back. \"Sure thing, buddy. Don't worry. You'll get through this.\"\n\nLilly snorted. \"If you start transforming again, or even so much as cough in a way that sounds like a bark, I'm stunning your ass into a coma.\"\n\nCray frowned at Lilly. \"Hey! Show support to our friend here, who is clearly going through a challenging time.\"\n\n\"Bah. The only thing worse that getting mauled to death by a feral, out-of-control werewolf is that werewolf being a friend and fellow apprentice. I'm not getting mauled, or worse, bitten and turned into a werewolf too. No offence, Graham.\" Lilly gestured with her wand, but she smiled faintly. \"Prof Tung said I did very well during my active spellcaster examination today. So I can and will stun you again if I need to.\"\n\n\"How reassuring,\" Graham muttered.\n\n---\n\nThe Royal Academy of Magic was the premier institution for magical studies across the entire Marlander Empire. It attracted magicians of every age and skill level--ranging from young, adolescent novices who could barely do more than cast some sparks from their fingers, up to senior apprentices like Graham and his friends who were increasingly proficient in magical practice and theory, all the way to journeyman, and even fully qualified magicians who did research or were continuing to hone advanced skills.\n\nBuildings across campus came in a wide assortment of sizes and architectural styles, reflecting the different time periods over which they had been built. Rounded, bubbly, organic-looking building designs had once been popular to evoke the concept of magic being mysterious and unusual, but in more recent decades the buildings had been built as more reasonable, rectangular shapes to represent magic being used in practical, industrial applications. The latest fad was pointy wizard towers with spires and dramatic overhanging balconies, for a look that was classic yet distinctly magical.\n\nPaved roads and gravel pathways interconnected the various locations. On their way back to the residential hall, Graham and his two friends passed by training fields where magicians were doing final preparation for the academic year's exams--tossing fireballs at targets or drawing summoning circles into the snow, next to a large greenhouse where plants from various climates where being grown even through the winter cold. They passed by other students and staff, but no one paid Graham any particular attention--a telanium-silver bracelet was not an uncommon accessory for a magician to wear. The bracelet's etched runes were still glowing as they dissipated energy, but Graham kept it covered by the sleeve of his winter coat.\n\nWithout any further incident he managed to make it back to the residential complex, then to the small, messy apartment which he shared with Cray, Lilly, and two other senior apprentices. Graham took off his satchel bag and hung his winter coat on a hook behind the door, then he sat down at the common room table. Cray and Lilly did the same, and then the shared, nervous silence which they had maintained through their short journey home was immediately replaced by more questions and discussion.\n\nCray tapped his palms against the wooden tabletop. \"Ok, now. Give us the details. How did you end up a werewolf?\"\n\n\"I don't know. It doesn't... I still don't know what to think about all this,\" Graham said. He tugged off his gloves and stared at the alloy bracelet around his right wrist--the runes carved into the metallic surface were visibly glowing. Normally magicians would use an accessory like this to help them channel their power while casting spells, but now it was continuously glowing as arcane energy flowed slowly from within him. \"I don't know how this is possible.\"\n\n\"Did you get bitten by something recently?\" Cray continued.\n\n\"Not that I can recall. A mosquito, maybe?\" Graham said.\n\n\"Would that work? Can you contact lycanthropy via mosquito bites?\" Cray wondered.\n\nLilly let out a short laugh. \"Hah. No, don't be silly. Lycanthropy is an advanced, exceedingly rare magical syndrome with a specific means of transmission. Graham, are you very sure you haven't been bitten by a wolf, a dog, or even some crazy person who looked fully human but might actually have been a werewolf?\"\n\n\"Yes, I'm sure. I would obviously remember if that had happened.\"\n\n\"What about... bitten by a coyote, or maybe even a fox? Anything canine looking?\" Lilly asked.\n\n\"No, nothing at all.\" Graham shook his head and raised his hands in a shrug, though he made sure not to let the metal bracelet slip from his right wrist. \"I haven't been bitten by anything or anyone recently. We've all been studying and preparing for the year's final exams--I don't have time to waste with fighting wolves or werewolves or whatever.\"\n\n\"It might not have been recent. Lycanthropy can be latent for months, or even years,\" Lilly added.\n\nGraham searched through his memories, but he couldn't think of any suspicious incident or event. \"No. I... I am pretty sure that throughout my whole life thus far, I've never been bitten by a wolf, dog, or a person.\"\n\n\"Ok. What about--have you ever had gaps in your memory, or times where you've woken up barely remembering the night before?\" Cray took out his wand, twirled it around his fingers in a smooth motion, then he slipped it back into his belt. \"That's certainly happened to me before. I've had more than a few occasions where my whole last night was a blur, all thanks to the oldest of alchemical brews--alcohol.\"\n\n\"That doesn't sound healthy. And no, I don't get blackout drunk,\" Graham said.\n\n\"Speaking of which...\" Cray stood up and strolled over towards the apartment's larder. Opening up the cupboard doors, he snatched out a glass bottle from the collection within. \"Does anyone want some beer?\"\n\n\"I'll pass,\" Graham said glumly.\n\nStill sitting at the table opposite Graham, Lilly scowled at Cray. \"I don't think now is the time to be drinking.\"\n\n\"Why not? We've just finished our exams for the semester, and that's a cause for celebration if ever I knew one. Also, it seems that Graham is a werewolf, which is... bad? Therefore a drink will help ease his sorrows.\" Cray put the beer bottle on the kitchen counter and then he grabbed a piece of chalk to begin drawing a circular enchantment rune on the countertop using one continuous line. It took him about a dozen seconds, but once done with his drawing he took out his wand and jabbed the tip into the chalk line. Magical energy flared, and the enchanted rune glowed brightly for a split-second before all the chalk vaporized in a puff of dust. All that was left was that beer bottle, and now a thin layer of ice had formed around the glass from the frost enchantment's activation.\n\n\"Thank the Emperor that we're magicians!\" Cray muttered. He snatched up the bottle. \"Did you know that in some backward places they still just rely on cutting huge blocks of ice from mountainsides to get chilled beverages. How antiquated.\" Knocking the bottle against the table top to flick off the cap, Cray casually took a swig of the cold beer. \"Mmmh. Oh yes, that's perfect temperature--just cold enough, but not frozen on the inside. If only I'd been able to make such a perfect frost rune for my exam today.\"",
        "\"Acquiring chilled beverage is a secondary priority behind the whole werewolf issue, Cray!\" Lilly grumbled. She was watching Graham wearily. \"We're not taking this seriously enough. A werewolf in beast form with no control is just... is just like a dangerous wild animal. We have to figure something out. If Graham changes fully and he loses control, he could attack us. We could end up dead, or horrifically injured, or even werewolves too. And what if he gets loose on campus? It gets worse from there.\"\n\n\"If I get killed by a werewolf, then at least I won't have to study arcane alchemy next semester.\" Cray took another casual sip from his bottle. \"Graham, if you lose control and maul me to death, at least just make it quick, yeah?\"\n\nGraham raised an eyebrow. \"I most certainly will not. If I really am a werewolf--which I'm still not convinced I am--then I will make extra sure that you suffer greatly when I lose control, turn feral, and go on a mindless killing spree. Your death by werewolf will be slow and horrible.\"\n\nLilly covered her mouth as she chuckled, but then she glared. Through it all she had never let go of her wand, and now she waved it vaguely at her two friends. \"Haha. No, but this is serious! Can you two not joke about this? There's a werewolf in the apartment. A werewolf! I dislike this!\"\n\n\"It is quite unusual,\" Cray conceded, \"but this is still Graham. He is our friend. Even if he's a werewolf, I don't think he would maul us to death. Or at least, hopefully he mauls you first, so I have time to run away.\"\n\nLilly laughed even harder, then she glared even harder at Cray. \"Hahaha... Oh, I hate you!\" she grumbled. \"If Graham goes feral and mauls me to death, my last action will be to throw a magic missile at your fleeing coward back, so that he catches you and mauls you to death too.\"\n\nGraham snorted and shook his head. \"Ok but joking aside, is that a real possibility?\" He raised his arm and gestured to the bracelet. \"The telanium-silver stopped the transformation, right? So, we're all safe? I'm fine?\"\n\n\"You're fine for now. I don't know how long that will last. Maybe we should be taking more precautions.\" Standing up, Lilly reached over the table to take the beer bottle from Cray, and she took a gulp of her own. She passed the bottle back to him, then waved her wand towards Graham, across the table. \"Keep an eye on him. I'm going to look for countermeasures.\" Lilly went to her own bedroom, which like all the bedrooms, was connected directly with the common room, and she unlocked her door with her key.\n\n\"Ok.\" Cray winked an eye closed, then he gestured with one finger from his open eye towards Graham. \"I've got my eye on you. Don't you go transforming into a werewolf now.\"\n\n\"Woof, woof,\" Graham muttered drily. \"Do wolves even go woof? Or is that a dog thing?\"\n\nCray chuckled. He blinked both eyes open again. \"Haha. You've never seen a wolf before?\"\n\n\"I think I've seen them in the zoo, back when I was a young child,\" Graham said. He nodded towards Cray. \"You might have grown up in the countryside, but before I came to the academy, I was from Kadrin. No wolves there.\"\n\n\"City boy. Not that I've seen many wolves myself. My family owns a vineyard, not a dairy or pig farm.\" Cray took another sip from the bottle, then he offered it to Graham. Before Graham could take the bottle, Cray changed his mind and drew it back. \"Actually, maybe we shouldn't be sharing this drink. Because of... hygiene, you know?\"\n\nGraham again raised an eyebrow, and he had to hold back a chuckle. \"Yes, I'm feeling the discrimination now.\"\n\nCray pretended to be shocked. \"Hey. Woah. I'm not judging or anything. But since lycanthropy spreads through bites, that sounds like saliva is the mode of transmission, and so sharing drinks or food might not be safe?\"\n\n\"Ok, that's fair. It makes sense,\" Graham admitted.\n\nCray gestured towards the larder. \"I'll grab you a new bottle if you want, and draw up another frost rune?\"\n\n\"No need. If for whatever unknown reason I'm turning into a werewolf, I don't think being tipsy is going to help with staying in control.\" Graham was quiet for a moment, staring at his own wrist and the bracelet there. \"I still don't understand how I could be a werewolf. I feel... almost like when I first learned I could use magic, because that was baffling and unbelievable too.\"\n\nCray nodded. \"I think I know what you mean.\"\n\nGraham's gaze went distant as he recalled memories. \"At the time I was... maybe sixteen years old? I was reading a newspaper about a new factory that had opened up--they were hiring flame affinity mages to work in the forge. And there was a photograph of them all casting the spell together, with the spellword captioned. I saw that and I read it aloud, just for fun--moctus!\"\n\nGraham snapped the fingers of his left hand, and a small magical flame appeared, burning gently over his index finger as if it was a candle. \"Just like that. I panicked and shook it out instantly, then I rushed to put my hand under an open tap because I thought I'd burned myself. But I was fine, and that's how I realized I had magic.\" The young magician sighed softly. He could feel the gentle trickle of energy streaming out through his finger as he sustained the small magical flame. With a minor mental exertion he moved that point about, causing the flame to leap between his fingers, before landing right in his palm where he snuffed it out by closing his hand into a fist.\n\nCray had been listening, but now his eyes lit up and he clapped his hands together. \"I got it. It's all just the same, isn't it?\" He gestured between Graham's left hand where he had been holding the magical flame, and his right hand where he was wearing the telanium-silver bracelet. \"It's just about control, right? You need to learn how to control your werewolf transformation, just like how you learned to control and use your magical skills. It's all about mental self-mastery and focus, or whatever.\"\n\nGraham frowned. \"I'm not sure it's the same.\"\n\nCray nodded encouragingly. \"It's probably the same. After all, there are werewolves who can shift form voluntarily, not just being limited to the lunar cycles. Do you want to try it out? Maybe... try taking the bracelet off, and see if you can control the transformation just with your mind?\"\n\n\"Really? Is that safe? For you, I mean,\" Graham asked.\n\nCray glanced over towards the bedrooms. Lilly's bedroom door was open and she was visible inside, searching through her cabinets and her storage chest for something. The other doors were all closed, and the other two student occupants of the apartment (besides Lilly, Graham, and Cray) were not home. Cray nodded. \"Sure, I believe in you. Practice makes perfect, and you've always been great with your spell control. Uhh, maybe first let me prepare something though...\"\n\nCray put down the beer bottle and wiped his hands on his cloak to dry them, then he drew out his wand and pointed it at Graham. \"Just in case you lose control, I'll try and freeze you so you don't go feral or whatever.\" After a moment's thought, he stood up and went over to grab a pan from the stove, holding it in his other hand. \"And if that doesn't work, I'll give you a smack with this thing.\"\n\n\"Would getting hit with a saucepan really knock out a werewolf, or would it just make him angry?\" Graham pointed out.\n\n\"That is a good point,\" Cray agreed, but he still held onto the pan. \"Hopefully we don't find out.\"\n\n\"Hah.\" Graham laughed, but he cautiously grabbed hold of the bracelet and prepared to pull it off. He took a couple of slow deep breaths to calm himself and focus. \"Ok. Well, here goes nothing...\"\n\nCray nodded, and he waved his wand. \"Do it!\"\n\n\"Alright, then.\" Graham snatched the telanium-silver bracelet off his wrist, and instantly he felt energy surge through his body. That sensation of power was most concentrated in his right hand, and he could feel his fingers and wrist muscles contracting and moving. Except it wasn't just his muscles, but the rest of his flesh and bones shifting about, transforming into a new form. Graham dropped the bracelet onto the table and clutched his right wrist with his left hand, and he could feel the change as his limb altered itself.\n\nHe tried to fight it. Graham focused his willpower and concentrated on that energy, trying to contain it just like how he could command his magical abilities. He drew on his years of practice with using magic, yet this felt like a losing battle. Attempting to stop all that deep, inner power was like trying to hold a breath forever--the longer he tried to resist, the harder it got.\n\n\"Come on, Graham, you can do it. You can control this, right?\" Cray said encouragingly. \"Oh, am I distracting you? Sorry, I'll be quiet.\"\n\n\"Heh.\" Graham laughed, but then he gritted his teeth as the transformation progressed. \"I don't know if... Blast, this is impossible.\" Just as before, his fingers and hand were the first to visibly change, shifting in proportions. Thick, grey fur started spreading across the back of his hand, until it resembled an animal's paw more than a human hand. As the transformation began spreading up Graham's arm, the young magician shook his head. \"I can't. It's not working. Damn!\"\n\nHe hurriedly snatched up the telanium-silver bracelet with his left hand and yanked it back over his right arm, and instantly the metal alloy flashed with brilliant light. Instead of the energy welling up within him, it poured out through the metal bracelet. Graham could feel heat against his skin, and the runes on the bracelet glowed with such intensity that he had to glance away.\n\nThe flow of energy faded away after a few seconds, and the bracelet's brilliant glow faded until they could both look at it again. \"That didn't work,\" Graham decided.\n\nCray had raised the pan to protect his eyes from the glow, but now he lowered it down again. \"I guess not,\" he agreed.\n\n\"What in the lowest dimensional tiers of hell are you two idiots doing?!\" Lilly strolled back into the apartment's common room, carrying a cardboard box with both arms. She dropped the box onto the table and folded her arms.\n\n\"I was... trying to see if I could control this transformation the same way I can control magic?\" Graham explained sheepishly. \"Uh...\" Unlike before where putting on the telanium-silver bracelet had returned his right hand to normal, now the transformation had halted but it had not reversed. Graham's right hand now fully resembled a canine paw--it was covered in grey fur, but with dark pads over his palm and with his nails now pointed and sharpened into short claws. Turning his hand around, then opening and closing it a few times, he didn't know what to say. The proportions of his fingers had changed and shortened, but he could still wiggle them about, and he had enough manually dexterity to try picking up the bottle from the table, before putting it back down.\n\nLilly looked decidedly unimpressed. \"And evidently that didn't work.\"\n\n\"Apparently not.\" Graham held back a sigh, but then another idea occurred to him. \"Moctus?\" he tried. Driven by the force of his will, he created the small magical flame again, but now over his right hand. The sensation of magic flowing out of his body felt familiar and similar to how it always had, even if his form was altered. Graham gestured towards his hand. \"If you could only see my hand from the wrist down, it would look like a dog was doing magic. Or a wolf, technically. Haha, how strange.\" He cut off the flow of magic, and the flame vanished.\n\nLilly shook her head, and she didn't bother holding back her sigh. \"Uuggh.\" Rifling through the cardboard box she had just brought out, she started dropping various metal objects onto the table, all of which were made from telanium-silver alloy. \"Ok, these might help. Put them on. Put them all on.\"\n\nThere were a couple more bracelets like the one Graham was already wearing, as well as rings, bands in an assortment of sizes, a leather belt with a large metallic brooch that was meant to go around the waist, a smaller belt that was meant to go around the neck, and various other things. The common theme was that all these accessories were either made from or at least contained telanium-silver--a special blend of metals that when alloyed together, were particularly useful for creating magical objects and equipment.\n\n\"Wow. Where'd you get all these from?\" Graham picked up another bracelet and peered at it before sliding it over his right wrist. Unfortunately, the addition of more telanium-silver didn't seem to reverse the transformation of his hand.\n\n\"It's leftovers from my project work in arcane materials class. I was testing out designs to try and create a magical amplifying accessory for cheap. I didn't really succeed, but I did a good report and got graded well.\" Inverting the whole cardboard box, Lilly entirely poured out its contents then slid the box aside. She waved impatiently at Graham. \"Well? Quit staring and start putting on the metal. Hands, legs, neck, head. Everywhere.\"\n\nGraham hesitated, then he did as Lilly asked, putting on the bracelets, rings, and even the belt. The general effect was that instead of a bright, noticeable glow emanating from the one bracelet around his wrist, the glow spread out across all the metal until it was barely even visible. \"I guess the idea is that if telanium-silver can supress a transformation, then more of it will supress it more?\"\n\n\"That's exactly the idea,\" Lilly confirmed. She picked up two small loops of metal. \"These are earrings. Are your ears pierced?\"\n\n\"No...\" Looking down over himself, Graham felt silly. There were some magicians (apprentice or otherwise) who revelled in their status and enjoyed proudly flaunting their wands, staffs, accessories, or even the magician's guild logo on their clothing. In comparison, Graham had always preferred a subtler approach. Unlike some other students, he didn't bother with telanium-silver accessories to try and provide a slight boost to his magical talents--and certainly even the most arrogant, overcompensating magician would never wear this much alloy.\n\nCray picked up a sheet of alloy foil from the table and crumpled it up into a silvery cone, which he passed over to Graham. \"Put this on your head.\" Graham did so, which made Cray chuckle. \"Hahaha. Graham, you look stupid.\"\n\n\"I feel stupid.\" Graham could feel all the metal weighing him down--the necklace around his neck, the rings on the fingers of his left hand, the bracelets around his wrists and ankles, and all the other things.\n\n\"Your fashion is a distant priority behind my desire not to get mauled by an out-of-control werewolf.\" Lilly folded her arms as she looked him over. \"How are you feeling? More in control? Less likely to transform?\"\n\nGraham looked at his right hand. It still resembled a wolf's paw, and even the addition of all this magical metal hadn't made the transformation reverse. \"I feel the same, honestly.\" He adjusted the conical foil hat he was wearing. \"There's still... I don't know quite how to describe it, but there's an energy inside me that feels like it wants to escape. Like a breath I've been holding, just waiting to exhale.\"\n\nCray sat back in his chair and shook his head. \"Graham, good pal, that is not reassuring.\" He turned to Lilly. \"Have you got any more ideas?\"\n\nLilly put her palms together and tapped her fingertips. \"Wait, wait, wait. Let me think about this.\" Strolling to the side of the apartment's common room, she flipped at a calendar on the wall. \"Lycan transformations are supposed to be tied to the lunar cycle. We're still a couple of days away from the full moon.\"\n\n\"What's up with that?\" Graham asked. \"I thought werewolves only transformed on the night of the full moon?\"\n\n\"No, that's a misconception. Werewolves can shift forms at any time if they have enough control. But full moon is when they (or you) are most compelled to be in beast form, and then new moon is the opposite when they're most compelled for human form. That's what I remember from the lecture a few months ago. It's because of celestial sphere alignment which has gravitational effects on the aethereal flux.\"\n\nGraham snatched the foil cone off his head and crumpled it into a ball, then he ran his hands through his hair. \"I really need to start learning about werewolves. The library probably has some books I could read.\"\n\nLilly shook her head. \"If you're already starting to change now and are barely in control, I doubt you'll last for a few more days without going full beast.\"\n\nGraham looked at his two friends. \"So what do I do?\" he asked.\n\n\"We take you to campus security, and have the golems keep you under guard?\" Lilly suggested.\n\nCray raised his hand and gestured with a finger towards Graham. \"But... but if we do that, then there's no keeping the secret. Everyone in the academy is going to know that Graham's a werewolf.\"\n\nGraham wanted to bury his face in his hands, but with his right hand more of a paw, he just settled for resting his forehead against his left hand. \"I still can't believe I'm a werewolf. How did this even happen? Ok. No. If it's between keeping this a secret and keeping everyone safe, then safety is obviously far more important. I hope I can stay in control and keep fighting this transformation, but I don't know. Maybe Lilly's right and I should go to security.\"\n\n\"No, no, no. Hold on.\" Cray waved his hands. \"What if we don't get security involved, but we just keep you here and under guard so that if you do transform and lose control, you'll still be contained? Exams have just finished, so there aren't any more classes to attend for a month.\"\n\n\"And how exactly do you propose we detain a werewolf?\" Lilly drily asked.\n\nCray gestured towards Graham's bedroom. \"Tie him up in his room? I'm sure we can find rope somewhere.\"\n\n\"Your plan is to tie up a werewolf?\" Lilly asked.\n\n\"No, my proposed suggestion is that we tie up Graham to a chair, and then if he loses control and transforms into his werewolf form, he'll still be tied up,\" Cray explained.\n\n\"Even if we could keep him confined, which I'm not confident of because he's a werewolf, we still have the problem of noise. How do we explain the barking and howling? Astrid and Casper would ask questions about all the noise coming from Graham's room, and I doubt they would keep the secret,\" Lilly pointed out.\n\n\"Hm. We could gag him? Tie a cloth over his mouth? Or we tape his mouth shut?\" Cray replied.\n\n\"That's not the only issue. How do we keep him fed and hydrated these few days?\" Lilly said. \"I guess he could go without food for a few days until the full moon has passed. We--\"\n\n\"Ok, no.\" Graham slapped his hands (his hand and his paw) against the table and stood up. \"If I'm going to be imprisoned, you might as well just take me to security.\"\n\n\"Sure!\" Lilly gestured towards the front door. \"Let's go.\"\n\n\"Hey! Come on. No, don't give up. We don't give up on problems so easily.\" Cray was still sitting at the table and he beckoned his friends back. \"Sit down, you two. Sit down, please. I have one last idea. Just hear me out.\"\n\nGraham sat back down, partially because he was wearing so much telanium-silver that even standing up was tiring. \"It had better be a good idea.\"\n\n---\n\n\"I hope this works out,\" Graham muttered, as the three apprentice magicians strolled through the forest.\n\n\"I hope so too,\" Lilly agreed.\n\nA layer of snow covered the ground and all the surroundings, but most of the trees were evergreen conifers that had kept their foliage, adding some dark green to break up the overwhelming white. The forest all around them was starkly still and quiet, with barely any sound to be heard beyond the soft crunch of their boots against the snow. Cray was taking the lead, bringing them deeper into the forest with Graham following behind, then with Lilly trailing in the rear. All three of them were carrying backpacks, but Graham was also wearing the many telanium-silver accessories that were meant to be countering his transformation--the bracelets, belt, necklace, anklets, and various other things. All that extra metal weighed him down, and he stopped for a moment to catch his breath. He exhaled slowly, and his breath was briefly visible as a small cloud of vapour, illuminated by the mid-afternoon sun.",
        "As they'd first been leaving the Royal Academy of Magic, Graham had kept his winter coat tightly drawn around himself to hide all the telanium-silver he was wearing. However, once they had entered the nearby forest, he had soon loosened his coat so he wouldn't sweat as the exertion of their hike warmed him up.\n\nResting against a nearby tree trunk, Graham pulled off his right glove and pushed up his sleeve to check his arm. His hand still resembled an animal paw covered in grey fur, but at least the transformation didn't seem to have advanced in the intervening hours since this problem had first occurred.\n\nLilly came to a stop as well. \"How's your hand?\"\n\n\"Doesn't seem to have gotten any worse, but it hasn't gotten any better.\" Pulling his glove back on, Graham pulled up his left sleeve to check his wristwatch. They had been hiking for about an hour now. Raising his voice, he called to Cray, who had still been walking ahead. \"Hey! Cray, hold up.\"\n\nCray paused, and then he turned around and strolled back towards the other two. \"Are you tired out already? This is a good enough place to stop, I think.\"\n\n\"Are you sure we're far enough?\" Lilly asked hesitantly. She pointed in the direction they had been walking from. \"You can still see the smoke signal from the academy.\"\n\nGraham followed Lilly's point, and sure enough she was right. The clear winter sky was a pale blue shade with not a single cloud to be seen, but there was a thin line of grey smoke rising distantly up into the air. Even as he watched, a faint wave rippled up through the smoke and suddenly the entire smoke plume appeared thick and dark like soot, than another wave moved upwards and turned the smoke bright and white so it resembled a cloud. The waves kept rolling upwards, turning the smoke column black, then white, then black again in a clear pattern.\n\nThe Royal Academy of Magic was an institute for teaching and research in all things magical, and the smoke signal was a simple reminder of that. Thanks to some clever trick of alchemy, each tiny particle in that smoke column was a microscopic crystal that could flip between two states, either absorbing light or reflecting it. Therefore, although the smoke itself was only rising slowly, a simple magical spell would cause a state change to quickly propagate upwards, allowing the whole smoke column to be rapidly switched between white and black. It made for a useful long-range signal, and historically the academy had used it for timekeeping--the light and dark patterns in the smoke were a simple code of numbers to tell the time throughout the campus and even in the nearby city of Tiwani and its harbour. Such a signalling mechanism was centuries old by now, and modern advances with miniaturizing clockwork devices had rendered it obsolete decades ago. The academy still kept it running, though now it was just for show as a bit of history for visiting tourists, and to generally remind the nearby city of the academy's presence.\n\nGraham counted the colour changes of the signalling smoke and did some quick calculations in his head. The value he got matched what he was seeing on his wristwatch--it was mid-afternoon. However, because it was wintertime, there were less daylight hours. \"Sunset's in about an hour. You two should leave me here and start heading home, or you won't get back to the academy till after dark.\"\n\n\"Good point. At least we're a good distance away from the academy, and the perimeter protection spells will stop you if you go feral and try to come back.\" Lilly dropped her backpack onto the ground and raised her arms over her head in a stretch. \"That was a good hike.\"\n\n\"It was! Ok, let's stop here. This is a decent place to set up camp,\" Cray said. Though the forest ground was mostly flat and even, here there was a rock outcrop that was about as high as a person's height. Cray put down his backpack and patted the rocky surface with his gloved hand. \"This'll be good cover against the wind and snow. It'll be just like that camping trip we did last summer, except that you'll be all on your own and also it's the middle of winter--which is normally a very bad idea, but these are extenuating circumstances.\"\n\n\"That's one way to put it,\" Graham agreed. Eastwards from the Royal Academy of Magic was the coastal city of Tiwani and its port, but westwards was a large, forested region marked as a nature preserve. Just earlier that year, Graham, Cray, Lilly, and another five more of their fellow schoolmates had gone on a short, two-day camping trip to this very forest, but that had been during the summer where it was warm. \"I hope it doesn't start snowing again.\"\n\n\"Don't worry. I'm sure you're going to have a great time. I'm almost jealous of you, getting to go on an impromptu camping trip. I would stay and keep you company, except for the huge risk that you turn into an uncontrollable werewolf and murder me.\" Cray reached into a pocket of his winter cloak to draw out his wand. \"But check this out. Since that last camping trip we had, I learned a brand-new adaptive motion spell that will set up the tent easily.\" Cray waved his wand about, then he pointed it at the palm of his other hand. \"Vitarozin exeleron nirro del!\" A stream of magic poured from his wand tip and into his palm, forming a glowing sphere of crackling energy that shimmered and sparked.\n\n\"Uhh...\" Lilly made an uncertain noise and she folded her arms, and Graham agreed with that sentiment. Magicians had a unique power to change the world around them, but the academy tried to impart the general ideology that magical talent was supposed to be a special gift meant for bettering the world and helping other people, not just a shortcut for menial tedious tasks. Of course, every magician still used magic for menial tedious tasks, but there was a limit to how lazy you could get.\n\nMore problematically, magic came in specific affinities which restricted each magician to a particular category of powers--Graham was a flame mage, whereas Lilly had a duality of air and lightning magic. Cray's main specialization was frost magic, but he also had a minor in stone magic and for a few months now he had been trying to expand into the closely related field of metal magic, with varying levels of success.\n\nWhich a flourish Cray tossed the ball of magic right towards his own backpack, which was the one where they'd packed in a small tent for Graham to use. There was a thump sound, then the backpack's top flap flew open as the tent's various components exploded up and out. The tent sheet folded itself into the correct triangular shape, but instead of sliding themselves into the correct slots, the tent poles violently scattered themselves around the nearby area.\n\nGraham lunged backwards as a tent pole bounced off his boot, and the sudden motion made his winter cap fall off his head. \"Hey!\" Meanwhile the tent held its shape for a second, but without any of its poles it immediately collapsed back into a flat pile.\n\nLilly still had her arms folded, and she had not flinched. \"Well done, Cray. Well done.\" She unfolded her arms to clap her gloved hands together--slowly, sarcastically.\n\n\"It worked when I tried it before,\" Cray replied. Looking slightly humbler, he started strolling around the forest and picking up the tent poles, then he began manually setting up the tent.\n\nMeanwhile, Lilly had crouched down to open her own backpack. \"Ok, Graham. You started transforming today, which is about a day and a half before the apex of the lunar cycle since tomorrow night is the full moon. We'll be come back for you in two days' time, when hopefully you'll have finished with being a werewolf and you're back in human form.\"\n\nA nervous shudder ran down Graham's back. He picked up his cap and brushed snow off it before pulling it back on. \"Alright. I... ok. I'll be fine.\"\n\n\"You'll be fine. You only need to stay out here for a few days, until the full moon has passed and you aren't uncontrollably turning into a werewolf,\" Lilly said. She gestured to the three backpacks, which they had hurriedly packed just an hour ago, after they'd decided on this plan and before they had set out. \"You've got plenty of packed food, enough water to last you for a while, and you can always start a fire to melt snow into more water if you need to. It's the winter, but you're a flame mage so you shouldn't have any problem with the cold.\"\n\nBy this time Cray had finished quickly setting up the tent, and he walked over. \"Alright! I've done it. I've got the tent ready, so that should be all, I think.\"\n\nGraham took a deep breath, and he nodded at his two close friends. \"Thanks for all this. I didn't... I never expected this was how my day was going to go.\"\n\nCray nodded. \"That's what friends are for. I'm sure you'll get through this.\"\n\n\"You would do the same if it was one of us who was in trouble.\" Lilly put her hands in her pockets. \"Take some notes on the whole... werewolf experience if you manage to fight the transformation and stay sane. I'll do some research at the library and ask some discrete questions. I'm sure there must be some way to cure or treat lycanthropy.\"\n\n\"Thanks. I appreciate all the help. This has been... I don't even know what to say.\" Graham raised his hand in farewell. \"You should get going, or you won't make it back to the academy before sundown.\"\n\n\"Good luck, Graham.\" Cray raised his hand and gave him an encouraging thumbs-up, while Lilly just nodded her head.\n\n\"We'll be back in a few days. Try not to get into too much trouble.\" Then the two of them turned to walk back the way they had come from, retracing the footsteps they had left in the snow. And Graham was left alone, out in the woods.\n\n---\n\nMagicians traditionally used wands or staffs to focus their power, but it was entirely possible for them to still cast their spells without such tools. Some magicians even preferred not to use a wand or a staff--it required a bit more finesse to project power directly out from the body, but there was the advantage of not having to carry around a magical tool, or indeed even having to bother with buying or making one.\n\nGraham pulled the glove off his left hand, then he made a swift cutting gesture towards a nearby tree at the edge of the forest clearing. \"Moctus pricatan.\" A wave of magical power swept out from his extended fingers, and he focused it into a thin jet of flame. He kept up the flow of magic for a good portion of a minute, directing the flame jet against one of the lower, but medium-sized branches until he had sliced through the wood and the branch dropped it to the ground.\n\nNothing physically constrained him to this small clearing in the forest, but Graham had every intention to respect his brief exile. Until the full moon was over and he was sure he wasn't going to be transforming into a werewolf, he was to be stuck in this forest, right here in this little camp.\n\nHe strolled over and picked up the branch one-handed to drag it closer towards the rock outcropping and his tent. With more time and more exertion of magic, he carefully carved up that branch into a pile of firewood. Then with a snap of his fingers and another whisper of that same spell word--Moctus, meaning flame--he had a small campfire to keep himself warm.\n\nGraham brushed away the snow from a small area next to the rock outcropping, then he sat down and leaned back against the rocks. The campfire was small, but its heat and light were disproportionately reassuring. It wasn't too late in the day, yet the sky was already darkening as the winter sunset got underway. The forest was cold and quiet, but then Graham heard a melodic chirp, and a small brown bird fluttered through the clearing in a blur of motion. The bird was gone in an instant, but the brief sight made Graham smile--most of the birds had migrated away for the winter, but not all of them, and he wasn't truly alone in the forest.\n\nGrabbing one of the backpacks, Graham got out some food. Back at the academy, his two friends had helped him quickly pack some basic essentials for surviving the next few days out in the wilderness. Lilly liked to cook and prepare her lunches for the whole week all on the preceding weekend, before packing the meals into rectangular metal lunchboxes, to be conveniently reheated and consumed each day. She had given several of these packaged meals to Graham for him to tide him through his few days in lonesome exile, for which he was deeply grateful. Tonight for dinner, the menu consisted of stir fried rice with slices of smoked duck and some sort of crunchy green vegetable chopped into cubes. The food was cold, so Graham put the metal lunchbox close to the fire to let it warm up.\n\nAs he waited, Graham couldn't resist the temptation to look. He pulled off his glove and examined his right hand again, taking in that strange sight of a fur-covered animal paw where once he'd possessed a human hand. It was a stark contrast to compare his left hand to his right. Yet despite how different his right hand appeared, it was still his hand. His muscles responded exactly as he wanted them to, and he could easily move his wrist and wiggle his fingers, though his digits were now shorter and had claws instead of nails. Graham touched the back of his hand, and that point of contact almost felt like he was just wearing a fur coat.\n\n\"Weird,\" he muttered softly to himself. One thing he did notice was that the fur was far more insulating than bare skin--his left hand could feel the bite of the cold wintery air, whereas his right hand felt perfectly comfortable. Graham pulled his glove back over his left hand, but he didn't need to do so with his right because the fur provided ample insulation on its own.\n\nGraham looked back towards the east and in the direction of the Royal Academy of Magic. In the fading sunset, he could barely still see the smoke signal rising high into the sky. Civilization was close by, waiting for him to return when he was ready for it.\n\n---\n\nThere wasn't much to do. After eating his dinner, Graham cut down another low hanging tree branch to create more firewood. Then he spent about an hour casually practicing the magical spells he'd demonstrated for his senior apprentice examinations over the past week--focused jets of flame, superheating a tiny region of space between his hands, and various other complex ways of directing fire magic--but eventually he grew bored of that too.\n\nWith nothing much to pass the time, Graham decided he might as well go to sleep. Reaching out with his magic, he sent power into the campfire and suppressed it. First the flames got smaller and smaller until there was nothing but faintly glowing logs and embers, then through continued force of will, he extinguished the fire entirely and it went dark. The wood was still warm, but all combustion had halted.\n\nThe forest was dark and quiet, but not excessively so--towards the east there was a faint glow in the sky from all the street and buildings lights of the Royal Academy of Magic, as well as the city of Tiwani further beyond. Humans, society, and his friends were not too far away. The moon was slowly rising from the horizon, bright and full, and it too provided a source of light to see around the small forest clearing.\n\nGraham unrolled his sleeping bag inside the tent and lay down to sleep. The tent's fabric walls would keep out the wind and the snow, though they weren't thickly insulated as it was meant for use in kind weather, not for the middle of winter. Nevertheless, Graham just kept his winter cloak on as he slid into the sleeping bag. He retained most of his clothing, though he did unlace and loosen his boots as well as pull off his gloves.\n\nGraham was also still wearing all the telanium-silver accessories that were helping to halt his transformation. The metal necklace, belt, anklets, and bracelets made it slightly difficult to find a comfortable sleeping position, but the thickness of his sleeping bag and coat also provided cushioning against all the hard metal. Using his scarf and one of the backpacks as a pillow, Graham went to sleep.\n\nIt had been a long, tiring, and very memorable day for the young mage. Graham fell asleep quickly despite the unusual environment, with his thoughts meandering and memory mixing into dreams.\n\n---\n\nGraham woke up a few hours later. He had left the entrance flap of the tent slightly open, and he could see moonlight now shining downwards, casting dim, whitish illumination onto the snowy ground outside. Raising his wrist, he checked his watch--the timepiece's arms glowed in the dark, but they indicated it was still many hours from sunrise, so Graham rolled over and closed his eyes to go back to sleep.\n\nHowever before he could return to slumber, he heard a faint sound again and immediately realized that was what had woken him up before.\n\n\"Ooowwwoooo!\"\n\nGraham jerked up into a sitting position. In an instant and without even having to use a spell word, magic danced around his fingertips, hot and bright. Graham's affinity to magic was for fire and he knew how to scorch, burn, weld, cut, and do all sorts of useful practical things with fire magic, and now he instantly conjured up fireballs, ready to throw.\n\n\"Aaawwwoooooooooo!\" The howling came again, and Graham remained perfectly still. The only things moving were the magical fire licking at his hands as he kept his power at the ready. Faint, flickering shadows were cast by that fiery light source.\n\n\"Owowoooooo!\" When the howls came a third time, Graham realized that they sounded distant. It was just some far off wolfpack making some noise. The howls came a few more times, but they sounded increasingly distant, and Graham took a few deep breaths. He vaguely recalled some fact he had once read about how the sound of wolf howling could travel very far because of something about the pitch or the harmonics, and perhaps the calm winter air was more conductive to transmitting sound.\n\nIt was no surprise there were other living things out in the woods, even in the winter. The wolf or wolves who were howling were probably far, far away, and regardless, Graham didn't expect they would bother him. Stray dogs and cats sometimes roamed the Royal Academy of Magic, but wolves and other wild things stayed away from humans. And Graham was a magician. He feared no wild animal.\n\nClosing his hands into fists, he extinguished the magical flames and then slowly laid back down. His heartbeat eventually stopped racing and he calmed down fully again, but it took considerable time before he could return to his rest. And he did not sleep very deeply.\n\n---\n\nWhen the morning came, Graham woke up with a startle. He was lying on his side, and through the opening of the tent he could see that the sky was starting to brighten. Graham glanced at his wristwatch to check the time--dawn was approaching and it was a new day.\n\nBecause it wasn't very bright out yet and he was still not fully awake, it took him a few seconds to realize the problem. Graham spent a few seconds lazily watching the miniscule, delicately intricate clockwork mechanisms of his wristwatch whirl about as they kept time. But then he noticed, and his eyes snapped wide open. Thick greyish fur was covering his left arm--not his right arm, but his left. Hurriedly Graham raised both hands, and he now saw that they both resembled animal paws, with short claws and dark paw pads.\n\n\"Oh no.\" Graham pushed up his cloak's left sleeve, then his right, and on both arms he was still wearing the telanium-silver bracelets, but they hadn't stopped the transformation from progressing during the night. With no small amount of trepidation, he sat up and started unbuttoning his winter overcoat. His fingers were shorter and his hands had noticeably less dexterity than before, but with careful movements he undid each button. Shrugging off the thick, waterproof, insulating winter coat, Graham was left wearing a long-sleeved shirt and his pants.",
        "He grabbed his right sleeve and pulled it up even further. The thick fur continued from his hand, past his wrist and the silvery bracelet. Graham pulled his shirt up past his elbow, but his entire arm appeared to be covered by thick grey-white fur. Even more concerning was the fact that the changes went beyond skin deep--his entire limb seemed shorter than before and proportioned differently. Graham pulled down his sleeve again and he reached in through the neck hole of his sweater to touch his shoulder, and he found there was fur there too. Where did it end?\n\nNow with significant apprehension, Graham lifted the hem of his shirt to check his torso, and there was fur there too. \"Oh.\" His boots were still unlaced from last night, and he kicked them off and tugged away his long, woollen socks to discover that the transformation had extended all the way down as well. His feet had shifted to become paws too, now more closely resembling animal appendages.\n\nAnother far more concerning thought came to mind, and Graham raised his hand to his neck. There was fur there too, and on his chin, and... \"Oh no,\" Graham repeated, as he felt up his own neck, then his face. The changes to other parts of his body were slightly easier to overlook--a limb was still a limb, just with fur and different proportions--but his head was all different. Graham grabbed his backpack and searched through it until he found his compass. This compass had a hinged lid to be flipped open, and on the underside of the lid was a small mirror. Graham stared into the mirror, but he did not recognize the face that stared back.\n\nThe reflection showed a wolf. He now had a pointed muzzle ending in a black nose, two triangular raised ears, yellow-brownish eyes, and fur in banded grey-white patterns that completely covered his head. And now that he was thinking about it, he realized that he could even see his own muzzle if he went cross eyed, but he just hadn't noticed before.\n\nGraham turned his head to stare at himself from different angles, but he still struggled to comprehend what he was seeing. His past impression of werewolves was of them being hybrids of half human and half wolf, but now all he saw was no human and all wolf. It almost looked like he was wearing a completely perfect wolf mask over his head, except that it was too perfect--there wasn't a him underneath the canine head and all this fur, because that was him.\n\nGraham opened and closed his mouth, then he stuck out his tongue, which now was longer and larger than before. He blinked his eyes and even managed to wink them. Touching his face with his hand, he stroked the fur that covered his cheek, then tried rubbing his ears. After a moment he realized that he had enough muscle control to move his ears about now, angling them about or even flattening them back against his head. Something about that discovery made him chuckle. \"Hahaha...\"\n\nHis wolf face was still expressive, though less so that his human one had been. Graham bared his teeth and growled into that small mirror. \"Grrr... Big bad wolf. Hahaha.\" Then realization at his situation set in, and he stopped. \"I'm a werewolf. That's... this is... this is strange.\" He could still speak, although his voice sounded less clear than before as his lips and tongue were harder to move.\n\nTaking a deep breath again, Graham put down the compass mirror and looked around. He tried to slide out of his sleeping bag and stand up, but he ended up tangled in his clothing. The proportions of his limbs were different now compared to the rest of his body, causing both his pants and long-sleeved shirt to become baggy and overly long. Frustrated by his now poorly fitted clothing, and curious to see what he really looked like, Graham started to remove his shirt. Taking off the garment required some effort because the neck hole kept getting caught on his snout and his ears. He also shook the bracelets off his wrists--he was already a werewolf now, and the telanium-silver was doing nothing to help him. His chest was narrow but rounder than before, altered in shape and proportion just as his limbs had been.\n\nWith his shirt removed, Graham impatiently started kicking off his pants, but then he stopped himself--what was he doing? He couldn't remove his clothing. It was the middle of winter and far too cold to do without multiple layers of garments, or was it? The air was still chilly, but now his wolf fur was providing natural insulation and he didn't feel cold at all.\n\nThe second concern that then came to mind was whether it was modest for him to be walking about in the nude, but it was still early in the dawn and mostly dark out. Also, it was very unlikely that anyone else would stumble upon his camp out in the wilderness. What did it matter? He was a werewolf. If somehow he was discovered, he was getting into trouble regardless of his pants-wearing status. With his decision thus made, Graham struggled out of his remaining clothing. His underwear slid off as well, allowing Graham to discover that his lower half really did resemble a wolf. The proportions and shape of his legs had changed in addition to all the fur everywhere, and he also had a big fluffy tail coming from his butt.\n\nAnd then he was wearing nothing at all, yet Graham didn't feel naked. None of his skin was exposed--it was all just that thick, grey-white fur all over. Lying on his side, Graham just stared at himself. His body was vastly different from before, yet it didn't feel wrong.\n\nAnother thought arose, born of curiosity and completely undeniable. Graham raised his hindleg to see what was there, and it was... exactly what he should have expected. Even his genitals had been transformed. His testicles and shaft all looked roughly the same size as before, but as was the common theme they were now covered in fur and resembled a canine's anatomy. He stared at his own groin and even tried some prodding, then he lowered his leg. \"Weird.\"\n\nIn a smooth motion he rolled onto his front and tried to stand up. It was harder than before to balance on two legs but still possible, though he ended up hunched forward. Walking on two legs, however, turned out to be more of a challenge. Graham fell forward and landed on his sleeping bag again, but then he tried walking on all fours and found that much easier. It was simply intuitive to walk on all four limbs--one, two, three, four--one, two, three, four--as easy as walking on two legs had once been.\n\nGraham strolled forward and stuck his head out of the tent, but then he hesitated and glanced back over himself again. Standing on all fours, he resembled a wolf in all ways. There was nothing about his appearance that obviously identified him as a human except for that wristwatch still strapped around his left forelimb. Graham sat back on his haunches and raised his watch to look at it. Was that really all that remained of his humanity? He turned his paw around and tried opening and closing it--he wasn't fully sure, but he suspected his digits had a bit more dexterity than was normal for a wolf. And of course, he was able to talk. Graham's experience with canines was mostly limited to having seen stray dogs in his home city or the Royal Academy of Magic, but he was quite certain that speech was not an ability that any normal canine would possess. \"Being a werewolf is weird. But I'm in control. I might have turned, but I am in fully in control. Yes...\"\n\nTurning around, Graham grabbed his winter coat and tossed it over his back like a cape. He wasn't cold at all, but it just made him feel more human. He also tried to put his winter cap back on, but it wouldn't fit over both his large, triangular ears, so he just left it cocked at an angle, covering half his head and only one ear. Then he trotted out of his tent, walking on all fours.\n\n---\n\n\"I bet no wolf can do this,\" Graham muttered to himself. He flipped open the backpack and used his jaws to grab another of the rectangular meal containers. Putting down the container next to the cold, ashen remains of the campfire, he reached for the small pile of firewood he had prepared yesterday and started assembling the campfire again. A slight breeze blew through the clearing, however even without the fire burning yet, Graham didn't feel any cold. His fur kept him well insulated.\n\n\"There's not a single wild wolf that could do this,\" Graham repeated. With the branches and lumber stacked up into a neat pile, he raised a forelimb and gestured. \"Moctus!\"\n\nMagic surged out from his paw and the campfire flared bright, with all the wood instantly catching fire with a crackle. Graham let out his breath in a soft exhale. He had been somewhat concerned about having lost his ability to do magic, but clearly that still worked. He was still a magician, even if he was now also a werewolf. With the meal container's metal lid still on, he nudged it closer towards the fire to warm it up. As he waited, Graham stared up at the clear dawn sky, where towards the east there was increasing light as sunrise approached.\n\nStanding up, Graham slowly strolled around the campfire, then he paced around the clearing and circled his tent. He tried, and it was possible for him to walk about on his two hindlegs, though this was slower and required effort to balance. It was simpler and easier to go about on all fours, and the snow on the ground didn't cause any discomfort to his paws. He padded around slowly, then went back to sitting beside the campfire.\n\n\"One, two, three, four, five. Twelve by seven is eighty-four. Sixty-four over two is thirty-two, over four is sixteen, over eight is eight. Telanium-silver alloy is an aether flux superconductor at ratios between ninety-nine-to-one and three-to-seven.\" Graham started stating random facts aloud, just to fully convince himself that his thoughts and his memories were intact. \"After senior apprenticeship, trainees will take up a journeyman attachment for one to three years under a fully-qualified magician before final qualification assessments. The capital of the Marlander Empire is the City of Kadrin, in the regional district of Drin, through which flows the Kales River towards the Glassy Sea. Uh... yes.\"\n\nHe still felt like he was in control of himself--there was no question that he was a werewolf after how his body had changed, but his mind was still his own. In truth, that was the greatest relief. His biggest concern yesterday with the unexpected revelation of being a werewolf was not about having fur, a quadrupedal form, or even about a fluffy, wagging tail, but instead about losing control. The thought of going feral and mauling his friends, fellow students, or any people at all was just wrong, but Graham felt reassured now. His body might have transformed into this completely animal form, however as long as he still had his mind, then he wasn't really changed at all.\n\nGraham pulled the meal container tin away from the fire. The metal surface was almost too hot to be touched now, but he carefully used his claws to avoid getting burnt. He pushed some snow onto the container's sides to cool it back down, then he lifted off the lid. A puff of warm steam poured from the inside, making Graham recoil sharply which caused his cap to fall off his head, but then he lowered his snout to sniff deeply at the food inside. It had been an instinctual move done without thinking, but the smell ran through his nostrils and slammed into his mind.\n\nWarm, rich, creamy, and fragrant, it was the exact same meal as yesterday yet now it smelled so much better. The food was steamy and delicious, and now it felt like he could individually discern a multitude of different scents coming from the various ingredients--rice, meat, vegetables, sauce, even the cooking oil and garnishing--and all together it blended into an exquisite medley of odours. Graham sniffed again at the food, and the smell was so good that he felt goose bumps--all his fur puffed outwards, making him look slightly bigger and extra fuzzy.\n\nWith the meal container tin resting on the ground, he bent down and stuck his muzzle in to start eating. There was no use bothering with cutlery as he had yesterday since his hands were less dextrous than before. As he was eating, he found that there hadn't been enough time next to the fire for all the food to warm up evenly, so there were some parts that were hot and other parts that were still cold, but Graham didn't care. It tasted just as great as it smelt, and he suddenly found himself ravenously hungry. In the course of just minutes he scarfed down all the food, then he licked the container clean.\n\nRaising his head and sitting back on his hindquarters, Graham felt much better now that his stomach was filled. Orange beams of sunshine were starting to slide over the treetops, and this seemed like a fine start for his first day as a werewolf. However, as he sat still for a moment and took another deep breath of the wintery morning air, Graham realized that it wasn't just the scent of food which had been amplified. He could smell everything now.\n\nThe campfire's smoke was blowing away from him, yet he could clearly smell the deep, smoky odour of burning wood along with the fresh scent of pine needles. Turning his head around and paying proper attention to his new nose for the first time, there was so much to take in that it approached a sensory overload. Back as a human, his sense of smell had been perfunctory--he could smell food in the academy's cafeteria, or the noxious chemicals in the alchemy lab, or sometimes the freshly cut grass whenever the fields were trimmed, but that all that paled in comparison to the depth of his olfactory input now. Everything was a new experience.\n\nSniffing at the backpack with all the various meal container tins, Graham realized that he could discern the contents of each packed meal. Even without seeing or opening up them up, his sense of smell was strong enough now that he could tell what type of food was in each one. Withdrawing his snout from the backpack, Graham then noticed that he could smell the backpack itself. The leather flaps had their own distinctive scent, while the fabric weave had a different odour. The food had been a good, desirable smell, but these scents were more neutral--they were neither pleasant nor unpleasant, but simply informational.\n\nSniffing at the backpack's straps, Graham then found a different scent. This was Lilly's backpack, and he could smell sweat, hair, and even skin oils from the past times she had carried it. Graham then sniffed at Cray's backpack, then his own, and they all smelled different. Every pack had its own unique smell, imparted on it from its owner through physical contact. Graham sniffed at his own winter coat then the rest of his clothes, all of which were now just discarded in the tent, and he could clearly recognize his own scent which matched the scent on his backpack. Graham raised a paw and sniffed at it, then he tried sniffing under his armpit, and even his sides too.\n\nHe found it all fascinating. Certainly, he hadn't expected such an outcome, but it seemed perfectly logical now that he thought about it. A wolf would have a better nose than a human. Graham then pondered all his other senses, wondering if there had been some trade-off. His ears were large and perky, and he could deliberately angle them about to focus in different directions, even backwards, so presumably his hearing wasn't any worse off than before. He had fur almost everywhere now which did dampen his sense of touch, but he could still feel the point of contact when he tried touching one arm with the other.\n\nGraham glanced around, looking at things but not really looking at them to test his eyes. Everything looked sharp to his vision, but overall it was hard to objectively decide if his eyesight was better or worse than before. Looking high in the sky towards the east, Graham could see the faint smoke column that was rising up from the Royal Academy of Magic in the distance. The smoke was already shifting between black and white, moving in a pattern to signal the precise time, and he had no trouble making out that distant signal just as he had done as a human. Some colours also looked muted and less vibrant--the backpacks were dyed in a variety of bright hues, but Graham realized that some shades looked more similar than they should have.\n\nEverything had its advantages and its disadvantages. Graham could smell a whole new world of scents that he hadn't even been aware of before, yet his eyes had lost some ability to discern colours. He now had a thick natural coat of fur to keep him warm in the winter, yet he had to walk on all fours, and his hands had become paws, losing manual dexterity. Yet overall, undoubtedly the most important thing was his mind. He was able to think and react like how he always had, and he was fully in control.\n\n---\n\nShrugging off his winter coat and leaving it on the ground next to the campfire, Graham trotted over to a nearby snowbank and then he threw himself sideways into it. After a moment he struggled back to his feet and stepped backwards to look at the indentation he had created in the snow mound.\n\nThe markings in the snow indicated his new size as a werewolf... and he wasn't very big. Graham estimated his size as being bigger than a large dog, but not that much bigger. He probably was somewhat similar to the size of a normal wolf, and a lot of that was thick fur, not actual muscular bulk. One thing was certain--he definitely did not match his previous mental image of werewolves being huge, hulking, terrifying, half-man half-wolf creatures which towered over people in a bipedal stance, covered in black fur and thick muscles.\n\nInstead, Graham had fur that was shaded in bands of grey that made for better camouflage against snow, trees, or rocks--he had whitish fur for his belly, chin, and paws, then light grey for his sides, and finally a dark grey that was almost black for his back and his head.\n\nAnd he certainly didn't appear to have acquired any more muscle mass. Perhaps it was just hidden under all his fur? To test for any newfound superhuman strength, he strolled over to a nearby rock that was about his size and then shoved it with his shoulder. Despite throwing all his weight at it, the rock didn't bulge at all and Graham felt silly. He wasn't any stronger than before. He was just a wolf, albeit one which could talk.\n\nSnow powder clung to his side from where he'd been lying down. Graham turned around and tried to brush it off with his paw, then he had a better idea and shook himself all over, which easily dislodged all the snow from his fur. It was animalistic action and not something that a human would have done, but it was effective so he didn't care. The way he saw it, he was already obviously not a human in this werewolf form, so there was no need to stick with doing things entirely in a human way if it was inefficient.\n\nAnd then there wasn't much to do. Graham watched the sky as it continued to brighten, then he paced around the forest clearing and bounded up the rock outcropping to stand on the high ground overlooking his campsite, but he didn't have anything to do. All he needed to do was wait around until he transformed back into human, and then he could return to civilization.\n\nGraham sat down next to the campfire and looked through a notebook that he had brought along in his backpack. His own dense, messily scrawled writing contained notes and memos from last semester's worth of learning at the Royal Academy of Magic, but it was not a captivating read. He already knew everything that was written there.\n\nAt the very least this gave some reassurance that his mind remained sharp enough to be thoroughly bored by having nothing to do. Graham sniffed at everything in his camp and discovered a thousand different scents clinging to everything, but eventually even the novelty of using his new nose lessened as he ran out of things to sniff at. He sat down and did more practice with his magic, carefully using a jet of flame from his paw to scorch markings into a fallen tree trunk. He also cut down more branches from the nearby trees and again used a flame jet to carefully slice them up into firewood, making a neat pile.",
        "Surviving alone in the wilderness was an adventure, and yet it was also so boring. Graham ran back and forth through the snow, leaving a trail of paw prints as he weaved and circled across the forest clearing. One area had a thicker layer of accumulated snow, and he used his front paws to dig at the snow until he had created a small pit of exposed grass. He then pushed snow about and formed it into a wall around his pit, forming a little snow fort in which he could sit curled up. The next thing he tried was to make a snow man, but it was awkward and slow because his paws clearly had less dexterity compared to his hands. Eventually with enough persistence Graham had created multiple large spheres of snow. He reared up on his hindpaws to stack the spheres on top of each other and create a snowman, then he grabbed some twigs to give his sculpture some arms. Feeling inspired, he took his winter coat and gloves and put them on the snowman, which made it much more obvious that this was a sculpture and not just a lumpy stack of snow. Graham then tried to create another sculpture right beside the first, but this time he moulded the snow to make it look like a snow wolf instead of a snowman. The snow didn't stick together too well and ended up just looking like a large, four-legged blob beside his snowman. He put his winter cap over the snow wolf's head, which helped a little bit with the appearance.\n\nTaking a step back to reflect on his work, Graham laughed and his tail wagged, as his own creativity amused him. And yet it took him no time at all to get bored again from his isolation. His wristwatch was still strapped around his forelimb--Graham raised his arm and brushed aside some of his fur which obscured the timepiece's face, and he found that it hadn't even been an hour since dawn.\n\nMoving forward on all fours, Graham decided to go for a walk. Perhaps some exploration and exercise would help occupy his time. Reaching out with his arcane power, he infused magic into the campfire and then extinguished it with a push of his will, smothering all the flames in an instant. Picking a direction at random, the magician-turned-werewolf left his camp and headed out into forest to see what he could find.\n\n---\n\nAt first he simply strolled, but gradually Graham picked up his pace into a quick trot, before accelerating into a run. He weaved between trees and leapt over snow mounds or fallen branches, moving quick and fast. Running on four legs felt as natural as running on two.\n\nThe forest all around was covered in snow, with coniferous trees showing their pine needles under a layer of white. Graham spent many minutes running just for the thrill of it, sprinting in different directions but overall heading towards the west until the forest opened up into a wide lake covered by a smooth topping of clear, faintly blue ice. Slowing down his run, Graham padded to a stop right on the bank of the lake. He put a paw on the hard, icy surface and found it firm, and then he stepped out onto the lake. He made a few tentative, slow steps to test if the ice was solid, but he didn't hear any cracks, and soon he started running on top of the ice.\n\nInstead of having to slow down to dodge trees, bushes, and other obstacles in the forest, out on the open expanse of the frozen lake Graham could go at an all-out sprint. He enjoyed the sheer exhilaration of pushing his new body as much as he could, sprinting and bounding across the ice as his claws dug into the smooth, firm surface to provide grip.\n\nGraham ran around the edge of the frozen lake until he came across a stream that was flowing down from a small hill nearby. The sight and sound of moving water made him abruptly aware that his bladder felt full, which was an easily resolvable problem. Graham jumped off the ice and onto the snowy ground again, then he strolled up to one of the nearby trees. At first he tried to urinate the same way he had as a human, standing up on his rear limbs, but this was an awkward position and he found it hard to start. Feeling self-conscious, Graham glanced around--and of course there was no one around, because he was in the wild--and then he turned to urinate like how a dog would. Standing on all fours sideways to the tree, he raised one hindleg and then let himself go. No need to remove any pants or underwear, or stand upright like a human. It was simply efficient to act like an animal because he so very much resembled one.\n\nOnce his bladder was emptied, Graham lowered his leg. Without even thinking about what he was doing, he turned around and sniffed at the base of tree. Part of his mind resisted this action and found it repulsive, yet another part felt curious. He kept some distance and he certainly didn't touch the wet patch in the snow, but his nose could easily pick up the scent--his scent, which was now marking this tree.\n\nGraham chuckled from the silliness of it. \"Haha. Weird werewolf wildness, this is.\" Everything felt so novel. His new body form was vastly altered from before, and it was an adventure just discovering how to use it, beyond the adventure that was simply surviving in the wilderness. He picked up his run again--but this time instead of sprinting across the frozen lake, he ran straight up the hill beside the lake. Moving up a slope was a greater challenge compared to running over smooth terrain, and he slowed down as the increasing inclination required more exertion. Graham finally came to a halt right on the top of the hill, where there was an open patch mostly free of trees. His warm exhaled breath was visible in a vapour cloud as he panted tiredly, but it was a good, satisfying sort of tired.\n\nStrolling around the top of this hill, Graham got a better look of the surrounding terrain from this vantage point. Towards the east he could clearly see where the forest ended and became grassy meadows, which then became the neatly trimmed fields of the Royal Academy of Magic. The outer boundaries of the academy were demarcated by a simple-looking wooden fence, but there were magical defences hidden and unseen. Anything larger than a bird that passed that fence line would be tracked, and anything not human that tried to approach the buildings would be intercepted by campus security--boxy, massive stone golems carved from large blocks of marble which were empowered by enchanted runes etched into their stone surfaces.\n\nBeyond the academy's myriad of buildings there was yet more open fields, then the far larger city of Tiwani, and finally the ocean. Snow covered the fields and the roofs of most buildings, though the ocean was unfrozen and ships could be seen sailing in and out of the harbour. In the other direction towards the west, there was snowy forest and rolling hills as far as the eye could see. In the distance Graham also noticed a layer of grey clouds approaching, gradually obscuring the otherwise perfectly clear morning sky.\n\n\"All alone in the wild,\" Graham muttered to himself. There was a sense of solitude and independence with being out here entirely on his lonesome. A cool breeze gently rolled over the hilltop, making the tree branches sway, and ruffling his fur. He spent several minutes admiring the scenic landscape, then he stood up and turned to go.\n\nThere was a small pond on the top of the hill, also frozen over, but from it flowed the small stream that trickled its way down the hillside. Graham followed the stream back down as it curved left and right, flowing down in a meandering path until it reached the lake again.\n\nAs he came to the base of the hill where the stream fed into the lake, Graham lowered his head to sniff at the water. With the lake all covered in ice, this was the one area where moving water from the stream broke the frozen surface. He was about to start drinking when a flicker of movement across the lake caught his eye.\n\nGraham snapped his head up, but he wasn't sure what had put him on alert. The forest surrounding the lake all seemed calm and motionless, and after a few seconds he decided he had probably just seen a bird, squirrel, or some other harmless small creature flitting about. He dipped his head again to start drinking. The clear stream water was icy cold, but it tasted fresh and clean. The shape of his snout and lips meant he had to lap up water with his tongue, but he quickly got the hang of it and quenched his thirst.\n\nSuddenly there was movement much closer. Graham froze up, with his mouth open and his tongue still in the flowing stream water, as he saw faint motion behind one of the nearby trees. He was being watched. For a moment everything was still, but then a creature came strolling out from behind one of the nearby trees, on the other side of the stream. In form it somewhat resembled a dog, but bigger, and wilder. It was a wolf.\n\nGraham remained motionless as his mind worked frantically, trying to think of what to do. In the past years he had gone camping in this forest a couple of times before, along with his fellow students from the academy. During those trips he had always known that there were wolves living somewhere deep in the forest, but never had he encountered one. Graham could vaguely recall that the advice was either to yell and make himself look big, or to play dead. Or was that for bear attacks? He couldn't remember.\n\nBlinking his eyes, Graham lifted his snout from the water. Wait, why was he even scared of a wolf? He was a werewolf. A normal wolf was just his natural kin, but then again, did that mean anything? It was still a wild animal. It could be savage or rabid.\n\nBy now, all his mental uncertainty had given the wolf enough time to approach. It wasn't running towards him, just trotting over with a quick, casual stride. Up close, there were several things Graham noticed. The first and most obvious observation was this wild wolf was a little bit smaller than him, by about ten to fifteen percent in his estimation, though with the thick fur that covered them both it was hard to be exact. It was still a large creature that would have passed his waist in height if he'd been in human form standing upright, but wolf to werewolf, they were close in size. The wolf had a similar colouration, though with more of a brownish tinge to its fur, whereas Graham's fur was neutral shades of grey and white.\n\nIt didn't look rabid or savage. Instead the wolf appeared healthy and relatively young, with a light-footed stride and no signs of injuries or disease, not even any scars. The wolf slowed down as it approached and it watched Graham closely, with attentive eyes and ears perked up towards him.\n\nGraham slowly backed away from the stream so that the wolf would have to jump over the water if it wanted to attack him. Standing on the opposite side of the stream, the wolf came to a stop and it kept watching him, occasionally glancing around but always returning to stare. \"Ruff,\" barked the wolf casually, and its tail gave a slight wag.\n\nGraham didn't know how to react. \"Ruff?\" he replied, though his voice sounded slightly more like a human saying the word rather than a proper canine bark. He cleared his throat. \"Ahem. Ruff,\" Graham tried to repeat, but he still wasn't sure if he was getting the intonation right.\n\nThe wolf tilted its head. Did it recognize him as a werewolf? Or did it think he was just another wolf? Graham didn't know. He wondered if he ought to just leave, but he didn't know if running away would trigger some predator instinct and make this other wolf think he was prey to be hunted. For another moment the wolf just stared at Graham again, then it crouched down to start lapping up water from the stream.\n\nIdly, Graham abruptly recalled that wolves normally hunted in packs. Was this all a setup for an ambush? He hurriedly looked around but saw no sign of any other wolves approaching. Apparently he had encountered a random lone wolf.\n\nThe lone wolf spent a fraction of a minute drinking water, casually quenching its thirst and occasionally glancing its eyes up at Graham to make sure he was still there. When it was done drinking, it stood up and licked its snout dry. Then in a smooth but sudden motion it leapt across the stream and was right beside him. Graham flinched, but again he didn't know how to react other than to keep still as the wolf circled around him.\n\nThe wolf's tail wagged again, but then when Graham made eye contact and stared back, the hackles on its back rose up and it growled softly at him, baring its teeth. \"Grrr...\"\n\nGraham didn't have to be a real wolf to understand the threat. Sustained, directed eye contact was a challenge. Without even thinking, he took a few steps back and averted his gaze, with his own tail instinctually swinging between his hindlegs. This made the wolf relax, and it stopped baring its teeth and panted calmly. Strolling forward, it casually nudged its snout against Graham's lowered head before going to sniff at his behind. Had he just been dominated?\n\nAgain, Graham suspected that he was doing something wrong. This lone wolf was smaller than him, so why was he the one backing off? Not that he was going to pick a fight. What did it even matter? The wolf could act like it was the boss--the alpha?--if it wanted to. He didn't care.\n\nThe wolf sniffed at Graham all over. It nosed at the wristwatch still strapped around his forelimb, before making a curious bark. \"Whuff.\"\n\nSitting down on his rear, Graham raised his forelimb to show it off. \"That's my wristwatch. It tells the time.\"\n\n\"Hnnnnnh?\" The wolf made a confused whine when it heard his voice. Graham didn't consider himself qualified to interpret lupine emotion or communication, but the surprise was obvious as the wolf backed off and tilted its head to peer at him.\n\n\"Didn't expect that, did you? Hah.\" Graham chuckled. \"I'm not a wolf. I'm a werewolf. Not that you would know what that is. I'd bet you've never seen anyone like me before.\"\n\n\"Hawoar. Nff.\" The wolf still looked confused for a moment, then it stepped forward and circled around Graham again, as if trying to see how he was making these very un-wolf-like sounds.\n\n\"Silly wolf. You silly, silly wild thing.\" Graham pointed a paw towards the east, in the direction of the rising sun. \"I'm a werewolf. I'm a human magician from the academy, believe it or not. This is not my normal appearance, and honestly I can't even explain how I ended up this way.\"\n\nThe wolf had been listening to him talk, but abruptly it moved away as if distracted. It walked up to a nearby tree and sniffed at it, and Graham wondered what the creature was doing. Then the wolf turned around and raised a hindleg, which made things click in Graham's mind. That was the tree he had relieved himself against earlier, and now the wolf peed over the same spot he had, replacing his scent. It even made eye contact with Graham as it did so. He was definitely being dominated.\n\n\"You know... I don't care about that. You can pee on whatever tree you want. I'm not contesting that.\" Even from a distance away, Graham realized that his nose was sensitive enough to pick up the scent as the wolf marked the tree. There was something strange about that smell, though he didn't know what it was. When the smaller, slightly brownish lone wolf was finished it came back over towards him, and Graham found himself curious. He stood up and sniffed at the wolf--first at their face, then side.\n\nInstantly Graham realized this was something he ought to have done before. He knew that his nose was now very sensitive and vastly more capable than before, but sniffing at random things just wasn't a common human behaviour, so it hadn't occurred to him to do so. Now he sniffed. The lone wolf had its own unique scent, and Graham was largely lost for words as to how to describe it. That scent was of fur and forest and wild canine, yet there were nuances that made Graham instantly certain it was a unique scent. It was impossible to verbally describe all the olfactory complexities, but he was sure he would recognize and remember this scent if he ever smelled this particular wolf again.\n\nAnother thing Graham instantly realized was that this wolf was not an it but a she. He also couldn't explain how he knew the difference in smell between a male wolf and a female one, but it was just something that his wolf form instinctually could tell from the scent. It would have been inappropriate to peer at a woman's genitals or even another man's, but this was no human and Graham felt no embarrassment about his curiosity. A quick glance underneath the lone wolf's belly revealed a lack of certain organs that Graham could feel dangling between his own hindlegs. His suspicions based on scent had been correct.\n\nThe wild wolf had obligingly been letting Graham sniff at her, as was apparently appropriate wolf behaviour, and now she even shifted her position to push her hips against his snout and let him sniff her under the tail. The smell there was stronger and more intense, and it fully confirmed that this was a female wolf. Graham snapped his head back, and he raised his head and breathed heavily of the cool winter air to clear that scent from his nostrils and his brain. \"This is a new experience. I didn't... did not ever expect that this would be a part of being a werewolf,\" he muttered.\n\n\"Oww, roaww, rooorroawww,\" went the wolf, trying to imitate his speech though not well at all. She bent her forelegs and went into a half-crouched bow, with tail wagging and mouth open like a dog that just wanted to play.\n\nGraham just laughed and shook his head. This was a wild creature, yet there an animal intelligence to her gaze, as well as a clear curiosity. Were wolves normally this friendly and playful? He wouldn't have been surprised at such behaviour from a stray domesticated dog that was familiar with humans, but this was a wild creature. Then again, he wasn't human currently.\n\nIdly, Graham also recalled a story he had once heard from another student at the academy--the story was that the wolves living in this forest were not just normal wolves, but dire wolves. Dire wolves were said to be monstrous large and terrifyingly intelligent, able to outwit and hunt almost any prey, even humans. Graham didn't know if the stories about dire wolves were true, and this lone wolf certainly wasn't large or monstrous, though it did seem more intelligent than he would have expected from a wild creature.\n\nThe wolf growled again and charged at him, yet now he knew it was just play and he simply rolled over when she tackled his side. Her jaws were around his throat in an instant, yet the bite was loose, and the sharp points of teeth didn't get through his fur.\n\nHe kicked with his legs and scrambled backwards, managing to pull out of her loose bite hold. The lone wolf dropped into a crouch again, and then with a playful bark she leapt at him once more. This time Graham also darted forward, using his large size to try and shove the wolf over instead, but she easily outmanoeuvred him and dodged to the side. On first meeting they had both been cautious and weary about each other, but that had quickly been become curiosity, which eventually had become exuberant, youthful energy of play. Were they friends now? Was it even possible to befriend a wild animal, a wolf? Graham didn't know, but he was certainly having fun.\n\nBut before they continued, a distant, harmonic sound suddenly made them both stop. \"Aaaawwwwoooo! Owwwooooo!\"\n\nBoth werewolf and wolf perked their ears up and turned to listen in the direction of the howls. One howl after the other, the sounds overlapped in the distance and made it hard to tell exactly how many wolves were howling.\n\n\"Awooooo!\"\n\nGraham glanced to the side as the wolf he had been playing with sat back on her hindlimbs and raised her head to howl as well. She was loud. The sound harmonized with the distant howling--it wasn't just noisemaking for the sake of it--this was communication. Graham almost wanted to join in, but he didn't know how, and before he could even try the wolf had stopped.",
        "Her playful manner gone in an instant, the wolf stood up and appeared to consider him. She sniffed at Graham again and licked at his snout, but then she turned and ran off in the direction of the other howls. For a moment he contemplated following after her, but instead he just sat down in the snow. \"Well... goodbye, then. It was interesting to meet a real wolf.\" Graham watched as the wolf ran across the perimeter of the frozen lake. She briefly slowed and glanced back towards him, but then she disappeared into the forest line with a wag of her tail.\n\n---\n\nGraham went back to his camp, giving a quick nod to his snowman and snow wolf sculptures as he entered the forest clearing. His brief excursion into the forest had certainly been a learning experience, though not in the way he had been expecting.\n\nAbruptly Graham felt contemplative. Just this week he had finished semester examinations and he should now have been spending time with his friends and fellow apprentice magicians, celebrating and relaxing as they prepared for the inter-term winter vacation. But out of nowhere had come this revelation that he was a werewolf, and now he was away from human society, exiled for the duration of the full moon as he tried to understand what he really was. How had he gotten infected with lycanthropy? Or had he always been a werewolf throughout all his childhood, but just never transformed before now? Both these possibilities raised numerous questions, and Graham didn't have answers.\n\nYet it was more than that. His brief encounter with that wild wolf had left him feeling truly isolated. He had not considered this fact before, but wolves were pack animals. Bears, foxes, racoons--these were solitary animals, but wolves lived and hunted together. Except as a werewolf, he was alone.\n\nGraham lay down on his sleeping bag, and he listened to the faint whoosh of wind blowing gently against his tent. All in all, his walk into the forest had been a partial success. He was no longer bored now, but instead lonely--a change, but not an improvement. With a sigh, Graham put his head down on his paws and closed his eyes. It was still mid-morning and only a few hours since he'd woken up, but he managed to doze off into a nap.\n\n---\n\nUnexpectedly, Graham slept through most of the day. He drifted back to near wakefulness every few hours, but he always managed to relax back into deep slumber. Finally he reached a point where sleep eluded him and his body and mind both wanted to wake.\n\nRousing from his rest, Graham yawned widely and stretched out his limbs, lying sprawled out on his sleeping bag. A quick glance at his wristwatch indicated it was now late afternoon. Graham also observed that his limb was still covered in fur, which was unfortunate but expected. The full moon was tonight, so there was little hope that during his rest he could have transformed back into human form.\n\nPushing himself into a four-legged stand, Graham slowly stepped forward and stuck his head out of the tent. The sky was partially covered by grey clouds, but there were still patches of clear blue visible, including towards the west where the sun was low in the horizon. Graham looked around his campsite and the small forest clearing, but everything was quiet and still.\n\nYawning again, he strolled out and sniffed at the backpack containing the remaining few packed meal boxes. Had he really slept through the whole day, even missing lunch? Graham supposed that was just natural behaviour--wolves didn't stick to a daily meal schedule at fixed times, and they were nocturnal hunters, so it made sense he had easily dozed through the day. He nudged at the cold pile of wood forming his campfire, but he didn't used his magic to reignite it.\n\nGraham glanced at the square, metal, meal container he had just been about to take out and warm up for dinner. Was it appropriate behaviour for him to be eating prepared, cooked, reheated human food? It certainly smelled and tasted good once it was warmed up, but did it adequately meet whatever nutritional requirements a wolf might have? He wasn't a real wolf, but since he was a werewolf Graham felt like he ought not to restrict himself to only behaving like a human.\n\nPerhaps he ought to do things the natural way, or at least make an attempt. Putting down the meal tin, Graham shook himself all over, then he trotted out of his camp and went to do some hunting.\n\n---\n\nAfter some initial eagerness, Graham quickly began to wonder why he had even bothered trying to hunt. He spent most of an hour strolling through the forest and looking for any sign of prey, but he came up with nothing. Once he saw a woodpecker steadily drilling a hole into a tree, and he occasionally saw other birds or even a couple of squirrels, but those didn't seem like something a wolf could hunt. Graham had been thinking of finding a deer, elk, boar, or some larger creature that was more appropriate prey.\n\nFinally, as the winter sun started to set and the sky grew increasingly dark, Graham found a large cranberry bush filled with clusters of the small, bright red berries. He sniffed at the berries, then he plucked some of them to eat. They were sweet and sour at the same time, and juicy too. \"Behold the mighty hunter, the werewolf,\" Graham muttered to himself, \"fearsome predator of fruit.\"\n\nDespite it being the middle of winter, the cranberry bush held numerous berry clusters all over to provide a modest fruity snack. Graham spent a few minutes going around the bush, eating any of the berries that looked ripe. He reared up on his hindlegs to stretch his snout higher up on the large bush, but there were quite a few berry clusters that were too high for him to reach. Even as he was trying, a small bird swooped down and landed on one of the branches just a short distance above Graham's muzzle. Showing neither fear nor respect for the werewolf, the bird plucked a red berry with its beak and then flew off again. \"I'm being outdone by sparrows,\" Graham grumbled.\n\n\"Hnnnhh.\"\n\nA soft, whining sound from behind him made Graham spin around, and he turned so fast he tripped up on his own legs and tumbled to the ground, ending up half buried in a patch of thick snow at the base of the cranberry bush.\n\nStanding a short distance away from him was a wolf. The wild creature watched as Graham hurriedly untangled his four limbs and struggled back into a stand. It cocked its head to the side, looking amused. Fuzzy brownish fur, alert gaze, confident stride--this wolf looked distinctly familiar, and when it strolled closer Graham got a whiff of their scent which confirmed his suspicion. This was the same wolf he had encountered earlier in the morning beside the frozen lake--his wolf friend, or at least wolf acquaintance. \"Oh, it's you again.\"\n\n\"Woaf. Ruf.\" The wolf huffed, then she strolled closer and lazily bumped her muzzle against Graham's side just behind his ribcage, making him flinch.\n\n\"Hey, that tickles. Stop it.\" Ignoring his complaints, the wolf playfully bit at his throat, then she licked his face. Graham shook his head, but he didn't pull away. \"Yes, yes, you're the alpha. Whatever. I already told you I'm not a wolf. I'm a werewolf. Where did you even come from anyway?\" Again he glanced around, but there was no sign of any other wolves.\n\n\"Yipp hnnng. Nuff,\" went the wolf, making noise back at him even though neither could understand the other.\n\nSuddenly there was the distant sound of howling. \"Awwwoooooo! Woooo! Owwowowoooo!\" The noise was faint, but Graham distinctly heard it, and clearly so did this wild wolf as her ears perked up.\n\n\"Is that your pack?\" Graham asked, though obviously he wasn't going to get an answer. \"Are you going to reply, or...?\"\n\nThe wild wolf turned her head in the direction of the sound and listened as the howls continued. Unlike previously, however, she didn't howl back. Both Graham and the wolf listened as the howls continued for a portion of a minute, before eventually the distant, echoing sounds faded away to silence.\n\n\"Alright then. Before you interrupted me, I was busy foraging for some fruit.\" Rearing up on his hindlegs, Graham tried again to reach for the berries on the higher branches of the bush. Even sticking out his tongue however, all he could get were some leaves.\n\n\"Hmfh.\" The wild wolf let out a soft snort that sounded faintly dismissive, then she crouched back before springing upwards in a jump. At the apex of her leap, she snapped her jaws around the branch Graham had been attempting to reach for and snapped off the end. Landing back on the snow with a smooth motion, the wolf now held in her jaws a stick with a couple of leaves and a berry cluster attached. With head raised high, she looked smug.\n\nGraham blinked, and he slowly dropped back down onto all fours. Was it a mistaken assumption to attribute emotion and intelligence to a wild animal? There was no doubt this wolf had some level of intelligence--she had observed him trying to reach for berries on a higher branch, then taken deliberate action to get those berries, with greater success than him. However, was it just his imagination about how smug she looked about it?\n\nThe wolf strolled over and dangled the stick over Graham's head so that the leaves slapped against his ears. Then when he tried to bite at the berries, she immediately pulled the stick just out of his reach. That action left no doubt in Graham's mind--this wolf was clever, and she was mocking him. He was bigger than this wild wolf, and far more importantly, he was a werewolf, and yet he was being mocked. \"You think you're funny, don't you?\" Graham muttered, though he felt a spark of amusement. \"Or did you just want to see me beg? You're a mean wild wolf bullying the poor, dumb werewolf who was just trying to eat some berries. Well done.\"\n\n\"Whao, woah, ahwoah!\" replied the wolf in a high-pitched series of whining moans. Finally she lowered the stick and let Graham eat the berries, even while she kept holding it in her jaws. Her tail wagged slowly. Graham assumed that she believed him to be some inexperienced, incapable, weird young wolf who was bad with hunting and foraging, which wouldn't have been far from the truth. She let him eat half of the berries, then she put the stick down and ate the other half.\n\nGraham nodded, then he sighed. \"Huuh. Thanks, I guess. Not that I needed your help. How did you even find me? Or was it just a coincidence that we meet again?\"\n\nThe wild wolf gnawed on the stick and chewed some of the bark. Then while still holding the stick in her jaws, she sniffed at Graham's side.\n\n\"Why do you keep sniffing me? My scent's not going to change... I think? I don't actually know.\" Graham frowned as he thought about it, then he decided it didn't matter. \"Hmm, I think you need a name. Everyone needs a name. What would be a good name for a wild wolf, I wonder--Wulf? Lupus? Wolfie?\"\n\n\"Rrrrr,\" growled Wolfie in a soft tone.\n\n\"Alpha? Sticks?\" Graham tried.\n\nSticks lightly thwacked Graham's side with the stick she was holding in her jaws, before dropping it to try to bite at his throat, but he just ignored her antics.\n\n\"Hmm, no, I've changed my mind. I'm going to call you... Sticks,\" Graham decided. \"Stix. Styx? Sticks. Yes, I like that better.\"\n\n\"Ruff.\" Sticks licked at his face, then she turned away and started walking off. This time, however, the wolf only went a few body lengths away before turning back to stare expectantly at him. \"Rooo, awoo,\" she hummed softly. Sticks looked around at the forest, then she stared at Graham.\n\n\"What?\" Graham remained where he was for a few seconds, then he hesitantly strolled forward. Sticks waited for him to catch up before continuing to move along, with Graham pacing along beside her. Werewolf and wild wolf walked together, going into the forest.\n\n---\n\n\"So, Sticks, where are we going?\" Graham asked, not that he was expecting any response from his lupine companion. The only acknowledgement of this question he received was a brief flick of one ear towards him. He didn't even get a glance.\n\nGraham had just been following the wild wolf, but they didn't appear to be going anywhere with purpose. Sticks just moved through the forest at a casual pace, meandering back and forth without clear direction. She kept stopping to sniff at trees or the snowy ground, and Graham always sniffed too, but he didn't detect anything other than the expected odours of bark, wood, rocks, and forest. Then frequently the wolf would freeze up and stop moving, just staring forward despite there being nothing to see in the forest in that direction, at least as far as Graham could tell. He was just following along. \"I'll just stick with you, Sticks. Haha...\"\n\nBy now the sun had set completely. The full moon was rising and was occasionally visible between the scattered clouds covering the sky, casting pale white illumination over the snowy forest. Even when the clouds obscured the moon, Graham was still able to see around and look where he was going--his werewolf eyes might have had less colour perception, but they were noticeably more capable during night-time than his human sight would have been.\n\nFinally Sticks halted again. The wolf raised her head high to peer at something, then she slowly dropped her whole body down to a crouch. She glanced at Graham and though she did not make a sound, he got the feeling that a message was being conveyed. \"What are we...?\" he murmured. \"Oh. Right. Of course.\"\n\nA medium distance ahead of them in the forest, a herd of deer was grazing on shrubbery. Graham finally understood--they were on the hunt. Or more accurately, Sticks was on the hunt, and he was merely tagging along for the experience. Once again following the wolf's lead, Graham dropped down into a crouch and they slowly stalked forward towards the herd.\n\nGraham's tail wagged against the snow from eager excitement, but he tried to remain calm and controlled. They were predators on the hunt, wolves on the prowl. The deer were in a group of about fifteen to twenty, and they were nibbling on leaves from bushes or low hanging tree branches. Almost all of the deer had antlers, and quite a few of them were even larger than he was.\n\nGraham had a near total lack of knowledge about hunting, but he supposed that a human hunter might have tried to target the largest deer--the huge antlers would make for the best trophy, and a bigger creature would have the most meat and hide to sell. However, a wolfpack would probably prioritize very differently. A wolf would want to target easy prey--meaning a weak or injured animal, or even a young fawn that was slow and unable to run well. Graham tried to look for any obvious targets, but all the deer just looked like deer to him. He didn't see any that appeared vulnerable.\n\nUnlike Graham, Sticks knew what she was doing. Her movements were quiet and stealthy as she lifted each paw and carefully put it down to sneak forward. Her gaze took in their target prey, the surrounding environment, and occasionally she glanced at Graham as he stuck close to her just to make sure he wasn't falling behind. She was an apex predator in her element, perfectly at ease as she stalked forward through the snowy forest.\n\nAs they approached, Sticks moved towards the left instead of approaching the deer herd directly. Graham turned to follow her, but now she fixed him with a forceful, direct glare that made him hesitate and glance away from that challenge--without anything being said, without even a single sound, Graham understood that he wasn't supposed to follow her now. Was she tired of him being so close to her? No, but then he understood. They were going to split up and approach from different angles. It was a flanking, dual pronged attack. Clever! Again, Graham's tail started to wag, and again he had to make it stop to maintain stealth.\n\nWith bushes, trees, rocks, and uneven forest terrain, along with the fact he was still crouching low against the snow, Graham quickly lost sight of Sticks as they split up. He was all alone now, moving forward slowly towards the deer herd, silently slipping past obstacles while trying to avoid making any noise. His heart was pounding hard in his chest, and Graham took deep breaths to calm himself. As he got closer to their deer, he suddenly felt a surge of uncertainty--he didn't have a bow, a spear, or any sort of weapon, and he wouldn't have known how to use one even if he had. But no, that was a silly thought. He was a werewolf, and wolves relied on claws and teeth as their weapons.\n\nAs the clouds slowly shifted in the night sky, moonlight once again streamed down from above. Graham moved even slower as pale light illuminated the snowy forest. Suddenly one deer that had been grazing closer towards him snapped its head in his direction and let out a throaty sound. \"Muhhhrrr!\"\n\nThat alarm call instantly put the entire herd on alert, and the deer stopped eating their leaves and glanced around. Graham realized he had been spotted, but he was given no time to react. Before he could even begin to wonder what to do, the entire herd of deer broke into motion, fleeing widely and flashing the white underside of their tails.\n\nEven faster, however, a blur of brown and grey fur dashed out from another angle. Sticks darted forward from behind a snow-covered bush, sprinting right from the direction all the deer had been trying to run in. The deer panicked and frantically changed course at the flash of her bared teeth.\n\nGraham hesitated, then he quickly straightened out of his crouch. Was the time for stealth over? Clearly it was. The stalk had ended, and the pursuit had begun. Graham trotted a couple of steps, then he ran forward over the snow, heading towards the deer as fast as he could. He pumped all four legs as hard as he could, sprinting quickly to close the gap between predator and prey.\n\nSeeing wolves approaching from two different directions, the deer herd scattered apart. Most of them quickly reorganized and continued with the fleeing, leaping run after a change of course, but a few animals got confused and ran away from the mass of their herd. Sticks sprinted forward with incredible speed, and without hesitation she chose the slower deer and leapt at it. Graham caught a glimpse of sharp white teeth as the wolf bit at her prey. She tried to get its throat, but the deer moved and her bite didn't properly strike the neck. The deer let out a panicked cry even as it kept fleeing. Blood trailed from its throat and shoulder as it ran, leaving a dripping trail of red against the white, moonlit snow. Sticks dropped back to the ground but she kept running immediately.\n\nGraham was still sprinting fast, and now he ran beside the wild wolf as they both chased their prey. It was exhilarating to move at such speed through the snowy forest at night, dodging around trees and leaping over fallen branches as they pursued. They were on the hunt. Graham panted steadily and he could feel the burn in his muscles as he pushed his wolf form to its limits, but unlike before when he'd just been running through the snow for the sake of running, now there was a clear objective. That made it all the more fun. The deer continued running for its life, but they easily kept pace. The rest of the deer herd was gone, leaving just this one lone animal to its fate--it was wolves' prey, if they could catch it. He could smell the deer, detecting its musky, animal odour and its fear. It faced imminent death from this forest's top predators, and all it could do was flee.\n\nPushing himself even further, Graham accelerated until he was running beside the deer and matching its movements. The deer was about the same size as him and it hopped in a zigzag movement as it tried unsuccessfully to evade him. Again Graham hesitated, just for a brief moment--earlier he had known how to walk around the forest, but not how to track down prey--and now he knew how to run, but not how to hunt."
    ],
    "authorname": "Oridian",
    "tags": [
        "werewolf",
        "wolf",
        "transformation",
        "adventure",
        "magician",
        "friendship",
        "male/female",
        "wolfwere"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/worries-of-a-first-time-werewolf"
}