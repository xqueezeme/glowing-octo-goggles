{
    "title": "Breaking My Own Rules Ch. 10",
    "pages": [
        "Randy had sent me a text that my friend Crystal was in the hospital, but not which hospital. I was frantically texting him back when Francois looked down at an arriving text on his phone. He tapped and swiped until he could read the message. \"It's from Randall,\" he told me calmly. \n\n\"What? Does he say what hospital?\" I asked, reaching for his phone.\n\nHe held it away from me. \"He says I am to keep you here and not let you go looking for your friend. That he will keep us informed.\"\n\n\"What! He can't do that.\" \n\nFrancois shrugged. \"I can. To keep you safe.\"\n\n\"That's, like, kidnapping or something,\" I protested.\n\n\"Think about it a minute, Skylar. If this man did something to your friend, and we don't know that he did,\" he added sternly. \"But if he did, it could be just to lure you into the open. Whatever happened to Crystal, she is getting the help she needs. Your presence won't change that.\"\n\n\"I have to see her. I have to know that she is all right.\"\n\n\"No. You don't. You have to wait for Randall to call.\"\n\nI stared at him for a minute, trying really hard to be angry, but it wasn't working. I looked at Jessica's number, written on the palm of my hand and began typing her number into my phone. He pulled it from my fingers. \"Who are you calling?\" he asked coolly.\n\n\"Jessica. She was looking for Crystal. At least she can see her.\" I added a pout at the end just for effect.\n\n\"Randall already spoke to Jessica. She is on her way to the hospital.\"\n\n\"So everybody gets to know what's going on but me?\" I was playing the drama queen to the hilt, but Francois wasn't buying what I was selling.\n\n\"Nobody knows what is going on yet,\" he answered calmly. I began to suspect that he had a lot of experience with drama queens. \"They do not even have a - what do you call it - a positive ID. We will hear as soon as they find something out.\"\n\nHis phone rang and he glanced at the screen. \"Put it on speaker,\" I begged.\n\n\"Skylar, it is a business associate. Please be patient.\"\n\n\"Sorry,\" I muttered. I headed back to his kitchen to do some stress eating while he took the call and chatted in French. When I couldn't stand to sit still anymore, I paced. When I got tired of pacing, I laid on the floor with my feet up on the couch. Through it all, he watched me intently, his computer forgotten, though he took and made a number of calls, some in English and some in French. When he finally came to stand over me, I thought it was perhaps to chide me for laying on the floor, but instead, he just smiled indulgently and held his phone out. \n\n\"It is your friend, Jessica. She had this number in her call log from earlier.\"\n\nI snatched the phone and rolled over. \"Jess, where are you? What hospital? How is Crystal?\"\n\n\"They won't tell me anything, because I'm not family,\" she complained. \"I called her brother, though, and he's on his way down. He should be here in a couple of hours. I overheard somebody say she was mugged, though.\"\n\n\"But they're sure it's Crystal?\"\n\n\"I guess so. I mean, when I asked for her by name, they did tell me she'd been admitted.\"\n\n\"Okay, just tell me what hospital. I'll come wait with you.\"\n\n\"Um, Randy told me that if I told you, he'd put the nastiest virus he could find on my computer.\"\n\n\"So then you just get that cute blond IT guy to come remove it. The longer it takes him, the better, right? Come on, Jess, tell me. I'll pretend to be her sister, so maybe they'll tell us what's going on.\"\n\n\"Well, the guy that answered this phone said he'd have to tie you up if I told you.\" Then, \"Is he really French?\" she whispered, for no discernable reason.\n\n\"He did not say that. I would have heard him,\" I argued.\n\n\"He said it in French,\" she explained. \"Is he as cute as he sounds?\"\n\nI rolled on my back and glowered at Francois, who only smiled coyly. \"Not at the moment,\" I snapped. \"This is about Crystal, remember?\"\n\n\"Yeah, yeah, yeah. I promise I will call if I hear anything.\"\n\n\"You'd better,\" I warned, disconnecting the call.\n\nI threw the phone at Francois. \"I'll parlay voo fronsay your ass,\" I snarled as he easily caught it.\n\n\"You need a distraction,\" he offered. \"There is a little bistro on the corner. We can have some lunch.\"\n\nI grumped, but I sat up and put my shoes back on. He helped me to my feet. \"I'm paying you back for all of this,\" I said, waving vaguely.\n\nHe simply shrugged. \"Okay,\" he agreed.\n\nI was pretty sure he was humoring me.\n\n****\n\nWe'd been to the bistro and returned, and Francois had graciously poured me some wine, which I had graciously drunk. I was pacing again and feeling pretty proud of getting my ten thousand steps in for the day, before we finally heard anything. Francois was working on his computer when his phone rang. He glanced at the screen, then answered and called me over as he put it on speaker. I heard Randy's voice and had to remind myself to breathe. \n\n\"So here's what I've been able to find out,\" he said. \"Crystal was found last evening a couple of blocks from her apartment.\"\n\n\"She must have been at her Sunday evening book club,\" I interrupted.\n\n\"She was unconscious,\" Randy continued, \"Presumably mugged, because her purse was missing. Someone called 911, but didn't give any details and took off before the police arrived. They couldn't find any witnesses or evidence at the scene, but they seem to think she was hit with the proverbial blunt object.\n\n\"Since she was out cold and didn't have any ID on her, they didn't have much to go on. At the hospital, they discovered she had a subdural hematoma and put her in a coma to control the swelling. Last I talked to Jessica, the brother wasn't there yet, so she hadn't been able to get any more information about how she was doing.\n\n\"So anyway, after I 'borrowed' Crystal's HR photo and sent it to the police, they were able to move on it as a tentative ID and put a trace on her credit cards and cell phone. Turned out the 911 call was made with her own phone. Anyway, the phone had been turned off not long after, but they picked up a credit card charge at a fast food place, rolled on it and found a meth head having a feast. He led them back to the dumpster where he'd found her purse, but her keys and cell phone weren't there.\"\n\n\"So Jessica was right?\" I asked. \"He had been in her apartment?\"\n\n\"We don't know that,\" Randy warned. \"But they are processing it for evidence.\"\n\n\"But what would he want in her apartment or with her phone?\" I asked. There was silence on the other end. \"Did we lose him?\" I asked Francois. He only shook his head.\n\n\"It's possible,\" Randy said slowly, \"That he was looking to see if she had your new number somewhere. Or some information about where you were staying.\"\n\nI must have gone white as a sheet, because Francois leapt up from his chair and lowered me into it. I stared at the incomprehensible French on his computer screen as if it made sense to me. \"I don't understand,\" I said after a moment. \"She always used a passcode on her phone. It wouldn't do him any good. I mean, even the FBI couldn't...\"\n\nFrancois' eyes darkened, even before Randy explained. \"That's probably why she was mugged, hit. He may have followed her until she was using the phone, so it would already be unlocked.\"\n\n\"You said he may have been hoping I'd go to the hospital, but Blondie, I mean, Jessica is there now. Randy, you have to do something!\"\n\n\"Already have. Maurice is keeping an eye on things. By the way, he says your nickname for Jessica is most apt,\" he added, trying to lighten the mood. \"Listen,\" he continued. \"I have to go, but Sky, you've got to stay where you are. Do you hear me?\"\n\n\"I have to do something,\" I moaned.\n\n\"It's being done. If this is him, he's gone over the top. The police are involved now. You just need to lay low and let them do their job. Promise me, Sky,\" he said, using his secret weapon; the Dom voice. Francois was nodding encouragement at me.\n\n\"I promise,\" I said softly.\n\nFrancois picked the phone up and disconnected. I went back to my pacing. It was a couple of hours later when Jessica finally called with an update on Crystal. They'd told her brother she was doing better and that they would start to bring her out of the coma tomorrow, but wouldn't be able to say how long before she would wake. When she told me she was going to head for home and return in the morning, I was texting Randy frantically. He texted back in his usual terse way, at least with me. \"Maurice is on it. Quit worrying.\" With Francois, it seemed, he wrote whole paragraphs. Maybe even epistles. I sighed, feeling so far out of the loop.\n\nFrancois gave me a hug, smoothing the hair I'd been running my fingers through all day. \"Let's order in for dinner. What would you like?\"\n\n\"Something French,\" I said, with my own weak attempt to lighten the mood.\n\n****\n\nThat night, Francois led me to his bedroom, his hands on my shoulders, steering me like a bumper car. He didn't even ask if I wanted to sleep with him. I wasn't sure if that was because he knew I needed his support, or if he wanted to keep an eye on me and be sure I didn't make a break for it during the night. I gave him a pass, though, because I didn't remember ever meeting someone who was so patient with me. Even my little brother, who, for reasons that totally escaped me, seemed to idolize his big sister, would reach his breaking point and give me a no-holds-barred noogie when I got too carried away. Usually - well, always - when I went into one of my drama spins it was all about me. And, if I were to be completely honest, when I did pull one of my drama rips, it was to control a situation, make sure everybody around me knew it was all about me. I felt totally helpless now that it was all about my friends and the danger they were in.\n\nI shyly asked Francois if I could sleep in one of his tee shirts again. What can I say? I don't know what the smell of him consisted of, maybe it was just the unfamiliar French toiletries, but it had come to represent the smell of comfort to me. He smiled like he understood, and pulled a freshly laundered tee from a drawer. I took my time in his luxurious bathroom, and spent a good deal of that time staring in the mirror. Francois had met a woman dressed to the nines and made up like what my dad would have called a vamp. Now, I stood there with no makeup, dark shadows under my eyes, hair a tangled mess, wearing a man's tee shirt. Why in hell hadn't he kicked me to the curb? I mean, even apart from my baggage that may or may not include a homicidal maniac, I was a hot mess. There was just no spinning that, in English or in French.\n\nI finally concluded that Randy must be blackmailing him, and I was ready to march out into the bedroom and demand to know what dirt Randy had on him that was making him pretend to be nice to me, when I remembered that I had no idea why Randy would possibly care about the fate of a co-worker who couldn't ever remember where - or if - she'd saved a file. I mean, he'd been specifically threatened with bodily harm. Why in hell would he continue trying to help me after that?\n\nThen there were my three friends from work, who I'd always suspected only invited me out to party with them in order to look good by comparison. In one of those head-slapping epiphanies, it suddenly dawned on me that none of them needed an ugly ducking to look good by comparison. They were all gorgeous and knew how to use what the fates had gifted to them. So why on earth did they bombard me with invitations and threaten bodily abduction if more than a week went by without a night out? After my mother died when I was just a kid, I'd developed what I liked to call my pity radar. One of the reasons I really liked my girlfriends at work was because they didn't set off my pity radar.\n\nThere was a knock on the bathroom door. \"Skylar? Is everything okay?\"\n\n\"I'll be out in a moment,\" I said, though I was seriously considering hiding in there forever. Where were all my voices to help me sort this out? Even the annoying ones had gone silent. I was all alone. Except for Francois. And Randy. And Crystal, Jessica and Shawna. And Maurice and DeDe. What gave?!? I wasn't thinking of people as descriptors, my voices had moved to Tahiti permanently, and I was doing my best to figure out how to send all of my baggage to the South Pacific, too. Maybe I could even buy Tom Whatisname a ticket.\n\nWhen I finally slunk back out into the bedroom, Francois was waiting patiently, but watching me with a touch of concern. I smiled bravely and climbed onto the bed, but sat with my back against the headboard and my knees pulled up to my chin. He rounded the bed and tenderly kissed the top of my head before taking his turn at the bathroom. What was the matter with these people? I'd drug them into danger. Why weren't they kicking and screaming? Maybe my drama queen ways led them to not take me seriously, like that fairy tale about the boy and the wolf. But Francois hadn't witnessed any of my Oscar moments. And Randy, DeDe and Maurice had only gotten a small taste - maybe more Emmy than Oscar. And of course, Jessica, Crystal and Shawna, while well acquainted with my drama chops, had no idea of the danger that lurked. I'd totally succeeded in talking myself back into full-on self-doubt in the short time that Francois had been in the bathroom. I think he recognized it the moment he came out, because he came to sit next to me on 'my' side of the bed and put his arm around my shoulder.\n\nHe was such a calm, quiet man. So totally in control. And I was so out of control. Opposites attracting? I wasn't sure I was ready to buy that, but two words kept repeating in my head. 'Dom' and 'sub.' \"Do you have a sub?\" I asked, mumbling into my knees. \n\nApparently, he was able to hear me despite that, because he answered. \"Yes. Back in France.\"\n\n\"Oh,\" I said softly. \"Does she know about the club?\"\n\nHe laughed softly at me. He seemed to do that a lot. Maybe that was why he let me hang around. For comedy relief. \"She is not my wife, Skylar. But yes, she knows that I am not celibate when we are apart. She is not, either.\"\n\n\"No?\" I looked at him instead of mumbling into my knees and he gave me one of those beautiful smiles.\n\nHe shrugged. \"It has been my experience that people like us, people in the lifestyle, if you will, enjoy sex too much to abstain for any length of time. Don't you agree?\"\n\nI rested my chin on my knees, thinking about that. I had my BOB - battery-operated boyfriend - at home, and I'd had boyfriends before, though eventually they came to the realization that I was pretty high-maintenance, emotionally, or I came to the realization that my BOB was there when I needed him and left me alone when I didn't. Until Dr. Tom. Since I'd met him, it seemed like I'd become insatiable. \n\nI tried to sound off-hand. \"Maybe.\"\n\nHe chuckled and I rolled my eyes. I hadn't fooled him for a minute. \"Part of being a Dom is looking out for the welfare of your sub,\" he explained. \"I wouldn't be doing a very good job of that if I didn't allow my sub to satisfy her hunger in my absence. It is as real to her as the need for food. I do require that she confine her partners to members of a very private club we belong to, so that I know she is safe.\"\n\n\"But what if she...\" I broke off, suddenly afraid that he would laugh at me again for being silly.\n\n\"What, Skylar?\"\n\nI shook my head. \"Nothing,\" I muttered.\n\n\"You cannot learn if you do not ask questions,\" he said quietly, and I thought about Tom Whatisname who forbade me to ask questions.\n\n\"You'll laugh,\" I said sadly, pained by the memories.\n\nHe turned suddenly on the edge of the bed, so that he was facing me and cupped my face in his soft hands. \"I laugh at you because you delight me. In many different ways. When you are embarrassed about something, I laugh because there is a genuineness to your embarrassment. Because you don't try to hide your embarrassment behind anger or haughtiness. When you ask a question that you think is stupid or silly, I laugh because there is a authenticity to your innocence. Not because you are stupid or silly. I laugh when you are being funny, because there is a purity to your humor. It is not at someone else's expense or calculated to advance an agenda. It is simply you, seeing your world in unusual and invariably delightful ways. Now ask me what you want to know.\" \n\n\"What if she fell in love with somebody?\" I was touched by his explanation but I still couldn't meet his eyes. He lifted my chin.\n\n\"Then I would let her go,\" he said with all seriousness. \"I would never keep any sub against her will. A sub gives up control in certain matters only, as agreed to beforehand. He or she never gives up the right to consent.\" His hands fell to his lap, but he held me pinned by his intense gaze.\n\n\"What if...\"\n\n\"Skylar,\" he said warningly, when my question stalled out.\n\n\"What if she fell in love with you?\" I forced myself to keep eye contact. I wanted to see his reaction. He remained serious and calm. Very Dom-like.\n\n\"That would be difficult. I am not in love with her, though I am very fond of her. It would require challenging conversations, as a man and a woman, not as Dom and sub. I do know many married and committed couples who continue the lifestyle, some monogamous, some not, though with each other's knowledge and consent. Are you worried that you won't find love and a satisfying sexual relationship in the same man?\"\n\n\"What if I find someone and he thinks I'm kinky? Or nuts,\" I added, thinking of my voices. \"Or shallow,\" I went on, thinking of friends who seemed to care about me while I was busy caring about myself. \"Or...\"\n\n\"Enough,\" he commanded in that Dom voice. \"I don't think any of those things. And I know at least some of your friends who don't either.\"\n\n\"You don't know me, not really,\" I said mournfully.\n\n\"Then I shall have to get to know you better, but in the meantime...\" And just like that, I was across his knee, his other leg pinning my legs, and one hand firmly pressing the small of my back into the mattress where he'd angled me across it. I yelped, belatedly, as I realized what position I was in. His other hand was caressing my ass, where the tee shirt had obligingly ridden up.\n\n\"Do I need to spank the self-pity out of you?\" he asked, his very serious Dom voice, complete with French accent, in full force.\n\nI was still trying to figure out how I'd ended up in that position so his words were slow to sink in. Until he gave me a swat. \"Answer, Skylar.\"\n\n\"Um, maybe just a bit,\" I suggested, using my little girl voice.\n\nI could feel the chuckle rumbling through him, even though he tried to smother it. \"Now be very still,\" he commanded, pulling my panties down to my knees. The first one landed with a resounding smack. It sounded worse than it felt, though I did gasp. He did about ten all together, then he asked, \"Now, do you feel better about yourself?\"\n\nBy that point, the only thing I could focus on was my needy pussy. When he gave me another swat and commanded me to answer, I replied, \"Not yet, sir. I think I need you to fuck me.\"\n\nHe didn't even try to hide his laugh that time. \"Let me see if you are telling me the truth,\" he said, once he could recover his serious voice. His finger trailed down my ass crack and to my entrance, which was beyond wet already. Apparently, that didn't satisfy him, though, because he probed deeper inside and 'hmmmed' thoughtfully. Another finger followed the first and both explored thoroughly as I squirmed. He returned a hand to the small of my back, holding me in place as one of the fingers searched farther south to rub my clit. I was moaning and squirming as much as he allowed, until he finally announced that he agreed I needed a good fucking.\n\nHe managed to straighten me up and remove my tee shirt at the same time, then he set me on my feet and pulled my panties the rest of the way off. After that, he sat me on the edge of the bed, and I avidly watched the show as he pulled his own tee shirt and pajama pants off. I was licking my lips as I fell to my knees. I engulfed his cock with my lips while my tongue went to work on the underside of it. He moaned in appreciation and toyed with my hair as I sucked and licked, until he finally pushed me away and lifted me onto the bed. He quickly donned a condom, and examined me critically as if trying to decide the best solution for a puzzle.",
        "After he rolled me onto my belly and straddled me, his fingers were in my hair again, and it took me a moment to realize he was gathering it, then wrapping it around his fist. He pulled gently, as if testing his work, then his knee was between my legs, spreading them until his other knee was there and he was lifting my ass with his free arm under my belly, his cock rubbing along my pussy lips, sopping up my juices. I expected him to slam into me, was bracing for it, as the hand twisted in my hair pushed firmly down between my shoulders and he leaned over me. Instead, when his cock had thoroughly acquainted itself with my outer lips, it began an ever so slow penetration, like a first time visitor to a haunted house. As if it was ready to beat a hasty retreat at the first 'boo.' His other hand flattened against my belly, and I was effectively pinned beneath him, unable to do any more than just savor the sensation at the pace he was willing to deliver it. I was pretty sure if I begged him to go faster, it would just earn me one of those laughs. Wasn't it against the Geneva Convention to laugh at somebody as you tortured them?\n\nAs his cock made it's slow, timid progression, the hand between my shoulders twisted just as slowly, like a slow motion massage, until I realized that as it twisted, it was pulling my hair tighter, lifting my head and forcing my back to arch even more. And as my back arched, his hand splayed against my belly pressed up, trapping the orgasmic pressure that was beginning to build, with no outlet. I moaned, loudly, and tried to rock my hips, anything to find some relief from the pressure cooker that my belly had become. His hand slid farther down my spine, pulling my head even farther back and crushing my breasts against the mattress, so that whatever slight movement I achieved produced a friction against my hard nipples that shot electrical bolts to my clit. \n\nWhen he finally began a rocking, thrusting motion, that direct line from nipples to clit became as intense a throbbing stimulation as if a tongue or fingers were assaulting my clit, and it contributed to the seething cauldron that my belly had become. My fingers were gripping the sheets for dear life and my breath, when I remembered to breathe, was coming in ragged pants. He, on the other hand, wasn't making a sound. Perhaps deep in concentration, mastering his absolute control over my body. This was no case of 'don't you dare come till I give you permission,' but neither was it like being taken to the brink over and over again. This was 'I will not let you come until I choose,' because there was no brink until he was ready to say there was.\n\nSuddenly, his one hand flew free of my hair and his other hand disappeared from my belly. I was exploding, figuratively and, I'm pretty sure, literally. I screamed and that shriek was broken into staccato screeching as he began slamming into me as he had in the past, balls slapping against my clit as he used my hips to pull me back on his cock with each thrust. I might have even termed it painful if I were not coming apart at the seams around him. My whole body was spasming, sucking at him, begging his cock never to stop. I was suspecting my orgasm was never going to stop, so why should he get to?\n\nSometime later, when the mush within my skull gelled back into a brain again, I mumbled something profound like \"Oh, my, god.\"\n\n\"Still think I don't know you?\" he whispered from somewhere near my ear. Then he was wrapped around me and I was falling into the deep sleep of the well-fucked.\n\n****\n\nThe next day, I was pacing again. I'm sure I was wearing furrows in his rug, but Francois never complained. I had called Jessica in the morning, only to be told that Crystal was still in the coma and they were bringing her out of it slowly, and, no, they did not know when she would wake up. She called me back some time later to tell me that Crystal's parents were flying in, and no, she didn't have any other news. I texted Randy and received back his usual terseness. \"These things take time. Don't worry.\" I was pretty sure he had 'Don't worry,' programmed into a hot key.\n\nFor lunch, Francois had set out a plate of crackers and cheese and sausages, so I took time out from my pacing to do some stress eating, figuring that was allowed since I was undoubtedly burning the calories right back off. Francois had taken a plate of goodies back to his computer, saying something about a deadline. I was trying hard not to disturb him, but, damn, just being in the same room with him made me want his arms wrapped around me, for comfort, and, well, other stuff. I borrowed Francois' phone several times to try to reach Jessica, but it kept going to her voice mail. Francois assured me repeatedly that she was probably just in a dead zone within the hospital. Something about magic wall paint that kept the cell signals from penetrating. The fourth time I asked to borrow his phone, he bluntly told me no, but then said, \"Go get a jacket. Let's go for a walk,\" to take the sting out of his words.\n\n\"But what if someone calls?\" I protested. \"And your deadline?\"\n\n\"We'll have our phones,\" he explained patiently. \"And I just submitted the story. Wonders of the computer age. You press a button and things shoot around the world.\"\n\nI stared at him. \"I'm losing it, aren't I?\"\n\nHe smiled at me, but then he said, \"Jacket. Go now or I will spank you again. And not be so gentle this time.\"\n\nI gulped, still a bit sore from the night before, and ran for the bedroom to find my jacket. A few moments later, we were on the street and walking through a pleasant neighborhood of brownstones, delis, green grocers. Everything felt so normal, not in crisis mode at all, and I began to relax despite myself. \"How much longer do you think it will be?\" I asked him.\n\nHe shrugged in that way he had. \"I don't know about these things.\"\n\nThat was of no use at all to me. \"Will you ask Randy? He just keeps telling me not to worry.\"\n\n\"Skylar, Randall is a computer programmer. I suspect he knows even less than I do. He is giving the police what help he can, but it is in their hands.\"\n\nI scrunched up my shoulders. \"I'm afraid someone else is going to get hurt,\" I admitted.\n\nHe put his arm around me. \"I know. I understand, little one.\" He kissed the top of my head. He wasn't my BIG little brother, but he was a pretty good stand in. Okay, in certain ways, he was even better. \n\nA little later, Francois received a text. He read it and seemed thoughtful for a moment. \"Randall says the police want to talk to you this evening.\"\n\n\"Okay,\" I said with a shrug. I didn't understand why he - finally - seemed concerned. \"Does he say where?\"\n\n\"They will come to my apartment.\" Again, his brow was furrowed. I stepped in front of him, forcing him to a stop.\n\n\"What?\" I demanded. \"Why do you seem so concerned all of a sudden?\"\n\n\"Come. There is a beautiful park over this way.\" He laid his arm over my shoulder again. I slipped underneath it and stared at him. I actually had two radars. One was my pity radar. The other was my distract-Sky-at-all-costs-so-she-doesn't-fly-off-the-handle radar. My father and my brother were particularly good at setting that radar off. In fact, the radar going off was usually far worse than if they'd simply given me a straight answer to begin with. Except when it had to do with my mother's death. I'd always wanted to believe that I'd moved beyond that, but I hadn't and they knew it. On the other hand, their attempts to distract me were so clumsy, I'd lose it anyway. And right now, that's how Francois' attempt to redirect me to some park felt. He gestured in the direction of the park with the hand that still held the cell phone and I grabbed for it before he realized. Unfortunately, it had already gone back to sleep, or wherever cell phones go when they aren't in use. He took it back from me and called up the text from Randy to show me. \"See? Just what I told you. I'm not keeping anything from you, Skylar.\"\n\nI glanced at the text, but then I looked back at him with squinty eyes. His brow was still furrowed. My radar was still screaming at me. He may not know any more, but he suspected something. \"You either tell me what you're thinking or I'm going to go all berserkoid on your ass right here in the middle of the street,\" I told him in no uncertain terms.\n\n\"Berserkoid?\" he asked with a puzzled frown. \n\n\"You won't find it in your French/English dictionary, but it's real and I'm an expert,\" I proclaimed with my hands on my hips. \"Now talk to me.\"\n\nHe sighed heavily. \"Can we keep walking?\"\n\n\"If you keep talking,\" I bargained.\n\n\"Please. This way,\" he said, and we were back to the park thing again. I balked, but then he added, \"I've done some crime reporting. In France,\" he amended. My experiences may mean nothing, here, but perhaps there is some commonality.\"\n\nThe radar alarms faded slightly and I fell into step beside him. His arm was back around my shoulders. Perhaps a little tighter now. If he thought that would control me in berserkoid mode, my BIG little brother could tell him some horror stories. I let it pass, though, because at least he was talking to me. \"Well?\" I demanded, when he paused too long.\n\n\"When the police did not want to talk to you right away, I assumed they did not believe what happened to Crystal was related to your... lover's spat.\"\n\n\"My what!?\"\n\n\"I am speaking for the police,\" he said in his 'calm down' voice. \"I suspect that they have found something now which suggests that there was a connection. I also suspect that, if they want to question you at the apartment, they believe there is some danger to you and do not want you showing up where someone may be watching for you.\"\n\n\"Wait, let me get this straight,\" I said stopping again. \"When I said all that, you didn't believe, but now the police are saying that, you do believe?\"\n\n\"No, Skylar. I am trying to say that now the police believe. It is like Randall has said. Your friend has revealed himself, made mistakes.\"\n\n\"Oh,\" I said, not sure if I was mollified or not. \"But then why are you so concerned?\"\n\nHe didn't answer for a long time, and when I began to tense up again, he pulled me closer and said, \"I am concerned about you.\"\n\nI started to relax, liking that answer from him, until the implications began to rain down on me. \"Wait, what?\"\n\nThis time, he was the one who stopped walking. \"Randall has told me you have been reluctant to give him details about your relationship. The other night, you were reluctant to talk to me about it. I am concerned how hard it will be on you to talk to strangers, the police, about it.\"\n\n\"Oh,\" I said. Then, \"Oh!\" None of that had even occurred to me. Details? No fucking way in hell! I'd done things with him - well, had things done to me by him - that weren't even in the lexicon of a Wisconsin girl. In my naiveite, I had imagined just being able to say something along the lines of, 'Yeah we had sex, then I decided I didn't want to anymore and he got pissed about it.' But de-fucking-tails? That were going to wind up in a police report somewhere? Maybe electronic? Maybe on the internet? Maybe where my dad could see it and have a heart attack? No. Fucking. Way.\n\n\"Skylar?\" Francois said, bringing me back to the here and now. I stared at him. How weird is it that this person I only met a couple of days ago knew me better than I knew myself?\n\n\"I can't,\" I whispered.\n\n\"You can. It will not be easy, but you can,\" he reassured me, gesturing yet again to this unseen park.\n\nI only looked in that direction. My feet weren't about to move. \"I need to run away,\" I mumbled, more to myself than to him. It didn't matter, because my feet weren't listening either way.\n\n\"You want to run away,\" he corrected softly. \"You don't need to. You've become much stronger than you realize.\"\n\nI scoffed. \"Dr. Tom has made me strong? Well, that is what he promised me. Of course, so did Oprah and Dr. Phil. And Charles Atlas in the comic books, ya know, when the bullies kicked sand in your face at the beach? I'm not moving from this spot.\" I fell dramatically to the sidewalk, hurting my tailbone and realizing they never mentioned that part in drama queen school. Bruised tailbones. Who knew? It was supposed to be all about knights in shining armor who came to rescue you and put up with all your drama because, after all, you became royalty when they married you. If they married you. If they didn't dump you right back on your tailbone on the sidewalk. The nearest thing I had to a knight in shining armor was Francois, but at least he did pick me up from the sidewalk.\n\nIn a moment of lucidity, I asked, \"Why are you still here?\" thinking, rightly so in my humble opinion, that he should be the one running away.\n\nHe took hold of my chin to capture my undivided attention - admittedly not any easy thing to do when I got like this. \"I am still here for the same reason all of your friends are still here. Because you are worth it.\" He studied me for a moment, then emphatically repeated, \"You are worth it.\"\n\nI had no idea how to respond to that, so instead, I said, \"I thought we were going to the park?\"\n\nHe laughed and took me under his arm again, and this time we managed to keep walking all the way to the park, though I rubbed my sore tailbone several times along the way. We eventually settled on a bench and he tucked me under his arm. I felt so warm and safe, that the ordeal to come almost faded from my mind. Almost. \"How am I going to do this, Francois?\" I whispered.\n\nHe was thoughtful for a moment, then said, \"When I went to school to become a journalist, I was taught that, when you are interviewing someone, what they are thinking is often more important than what they are telling you. The best interview is when you can get someone to tell you what they are thinking, not what they want you to hear, or what they think you want to hear. So, imagine you are telling me what happened when you first met this man. But tell me, instead, what you are thinking.\" \n\nI tucked my feet up on the bench and leaned deeper into his warmth, thinking about what he said, but then he reprimanded me. \"Do not think about it too hard, Skylar. Just say what you are thinking.\"\n\n\"I'm...\" I shook my head against his shoulder, biting my lip.\n\nHis lips brushed my hair. \"You can do this,\" he said quietly, with gentle encouragement.\n\n\"I'm afraid you'll think I was stupid,\" I blurted out. \"Because I was stupid.\"\n\nI expected him to deny that he would think that, or argue with me, even without knowing the details. Instead, what he said was, \"Do you know what I hear, when you say that?\"\n\n\"That I was stupid,\" I said, with a full-on pout. Wasn't he listening to me?\n\n\"No. What I hear is that you have judged yourself, and very harshly from the sound of it. And that you expect others to judge you the same. That is what you are really afraid of. Not embarrassing details. Judgement.\"\n\n\"Maybe,\" I said slowly, chewing that over.\n\n\"When I first met you, you told me he made you feel desirable.\"\n\n\"Yeah,\" I agreed. Old news.\n\n\"You, forgive me, but you have very low self-esteem, Skylar. Would you agree?\"\n\n\"I guess so,\" I mumbled.\n\n\"You have disappointed yourself and so you assume everyone else is disappointed with you. Yes?\"\n\n\"Disappointed is putting it mildly.\" I was scrunching up smaller and smaller. He pulled me closer.\n\n\"How would you put it?\" he asked softly.\n\n\"Devastated.\"\n\n\"Why?\" I shook my head, but I'd never yet been able to dissuade him when he decided he wanted an answer from me. \"Skylar,\" he said sternly with that damn Dom voice.\n\n\"Because I killed my mom,\" I exclaimed, trying to pull away so that I could stomp and kick something and scream at the world. That was always my way of dealing with the memory; throwing a tantrum.\n\nHe used both arms to hold me tight, denying my escape and my tantrum. \"Explain,\" he said, and what should have been a harsh command came out instead as gentle, kindly encouragement.\n\nWithout the release of a full-blown tantrum, my only other resource was to start bawling, so I did just that, and his handkerchief was instantly there, almost as if he'd seen my crying jag coming. Maybe he had. Anyway, he sat patiently until the waterworks slowed. I'd told hardly anybody about that night. In fact, my father had to repeat my story for the police. I never could bring myself to tell them. The correlation didn't escape me. But I found myself telling Francois, in between the occasional sobs that still broke through.\n\n\"We were in the car. Driving home from the school. There had been tryouts for the debate team that night. I was in the back seat, crying. She was trying to calm me down. I kept telling her she didn't understand. She got more and more exasperated with me. Finally, she turned in her seat and grabbed my arm, to get my attention, I guess. I yanked my arm back, causing her to swerve into a tree. If I hadn't been such a baby, she'd still be alive.\"\n\nI was waiting for him to recoil from me in horror, but he kissed my hair and said, \"You were a child. You were disappointed you didn't make the team. It wasn't your fault that she allowed herself to be distracted from driving.\"\n\n\"That's the whole point!\" I almost shouted. \"I did make the team. I was disappointed that I'd only placed second. How childish is that!?!\"\n\n\"Shh,\" he said calmly, despite my histrionics. \"You were a child acting childishly. It was her job not to let it distract her.\"\n\n\"I can't believe you're blaming her,\" I moaned.\n\n\"Did your family blame you? Did the police?\" he asked, as if he already knew the answer.\n\n\"No.\" I was irritated that he'd won that admission from me so easily.\n\n\"But you still blame you. You weren't perfect and because of it your mother is dead.\" He had a really bright, white light and he seemed to love shining it on all the shadows of my world. \"So now, when you aren't perfect, when you do something you should have known better than to do, you're killing her all over again in your heart, judging yourself far more harshly than anyone else would.\"\n\n\"And when I am perfect, I don't deserve it, because I killed her,\" I whispered, repeating what a child psychologist had once tried to explain to me and my dad. I was always judging myself, and always finding myself wanting. I dropped out of college when I was doing well, because whether I was perfect and valedictorian, or only second place, I would have relived my mother's death yet again and judged myself unworthy. I took a low-paying, mind-numbing job because I didn't deserve a job that fit my skills, or if it challenged my skills, because I might have failed. Unworthy. I drove my dad crazy, because everything that he wanted for me, everything that he believed beyond a doubt I was capable of attaining, I ran away from.\n\n\"Did I choose him because I wanted to be punished?\" My little girl voice was back.\n\n\"No,\" Francois said. \"That may be part of the reason you let him keep coming back. That is something you must work out. But you chose him because he played you. He saw someone who thought they were undesirable, unlovable, easy to control.\" I thought about the way he got me to drink a shot that first night, even though I never drink shots. It was one of my rules. The first of so many that he easily led me to break. Francois was quiet a moment, as if giving me space to work through to where my thoughts were leading me. \"Skylar, you weren't stupid. You were used, played. And that is exactly how others will see it.\"\n\n\"But I stayed.\"\n\n\"Did you?\"\n\n\"Yeah. Every time he showed up again. Every fucking time.\"\n\n\"You're missing the operative phrase there. You didn't stay. You fell back with him when he 'showed up.' When he was there, playing you.\" He tightened his hold on me. \"Randy told me he talked to Shawna. She told him you were always trying to avoid the guy, changing your locks, staying home behind deadbolts.\"",
        "\"Yeah, that's true,\" I agreed, feeling a little better, at least until the entirety of what he said sank in. \"Wait, you talked to Randy? He won't answer when I call. He just sends a text telling me not to worry.\"\n\n\"He called last night, after you fell asleep,\" he confessed. \n\nI twisted around and grabbed the lapels of his jacket. \"What did he say? And if you tell me 'don't worry' we're going to be right back at berserkoid.\"\n\n\"I'm very sure I don't ever want to find out what that word means,\" he said, raising his hands in surrender. \"He said the police had been to the club and dusted for prints. Now they are trying to rule out others who would have used the room he was in or the equipment. Randall has had to use his immense charm to get other members to cooperate. You know how it is. Police and BDSM players haven't always been on the friendliest terms.\"\n\n\"Equipment?\" I asked. Then immediately followed that with, \"Please don't tell me. I don't even want to know.\"\n\nHe smiled at me, then looked down at my hands clenched around the lapels of his jacket. \"I think you are ready to talk to the police, now.\"\n\n\"Oh, um,\" I mumbled, trying to smooth the fabric out. He took my hands and pulled them away, kissing the knuckles of one then the other.\n\n\"Come. There is a pleasant restaurant just the other side of the park. Let's have an early dinner than head back to meet the detectives. A glass of wine or two will help you, I suspect,\" he said with a wink. \"In France, wine helps everything.\"\n\n****\n\nWe had a very nice little supper, with wine, as promised and had strolled back through the park to get to his apartment. His arm was around me most of the time and I was growing quite fond of that connection with him. I'm not sure why, because I normally chaffed at Public Displays of Affection. With him, it just felt right, though. At the apartment, he released me to unlock the door and I sauntered into the coziness as he was pulling the key free. I don't think I had taken three steps before he was throwing me back out into the hall and harshly whispering, \"Go down to the lobby, right now,\" as he pulled the door mostly closed behind him. When I just stared in confusion, he pushed me toward the elevator and glared at me until I managed to get my feet moving under my own volition. Then he was ducking back into the apartment.\n\nI wanted so bad to follow him and find out what was going on, but a stronger, more insistent part of me wanted to please him - with my obedience. Now was not the time to explore, or fight, that compulsion, though, so I opted for obedience. For once, as Dr. Tom would have said.\n\nI hurried to the elevator and once down in the small lobby of the apartment building, commenced my pacing again. I pulled my phone out and thought about texting Randy, but had no idea what to tell him and was pretty sure I'd get back yet another, 'Don't worry,' no matter what I sent. I could still read Jessica's number, where I'd written it on my palm, but I'd promised Randy I wouldn't call her from my new phone and she hadn't returned any of the voicemails I'd left from Francois' phone, anyway.\n\nWhen Francois finally reappeared, he didn't say anything, but pulled me into a hard hug and didn't let go for several minutes. As much as I loved snuggling into the warmth of him, my nose only came chest high on him and breathing became an issue. I had to push away. \"What happened?\" I asked. \"What's going on?\"\n\nHe took a deep breath. \"Someone had been in the apartment. A favorite statue of mine, an abstract, had been turned. When I looked, I found other things out of place. Your suitcase had been moved. I called Randy and got a number for the detectives that had been assigned to Crystal's case. The ones that were going to meet with you this evening. They are going to come and pick us up and send a team to go through the apartment for evidence.\"\n\n\"Oh, god, Francois. I'm so sorry for all this.\"\n\n\"I do not want to hear any more of that,\" he said in his Dom voice. Leaning against him was far more comforting than pacing, and he absent-mindedly stroked my hair as he watched through the entry doors for the detectives. I felt him tense as a man came through the vestibule into the lobby and he pushed me slightly behind him until the man introduced himself as one of the detectives. Francois visibly relaxed and pulled me close again as we headed back out to the unmarked sedan. A woman was in the driver's seat and had the engine running. I was afraid to look around for Dr. Tom, but then realized that Francois was doing exactly that. My knight in shining armor. Hurray for fairy tales. I think I was holding my breath until we were in the car and headed back toward mid-town.\n\nThe detectives introduced themselves as Madge Brown and David Cowen. On the way to the precinct, they quizzed Francois about what he'd seen in the apartment and what he might have touched. It seemed, being a crime reporter, he'd gained a sense of preserving evidence, though he'd searched enough to make sure no one was still there, which seemed pretty foolish to me. A guy thing, no doubt. They also were very curious about how my Dr. Tom might have found the apartment, if indeed, he had been the one responsible. I even offered to show them the call log on my phone to prove that I hadn't called anyone but Randy. Repeatedly. Which was why he wouldn't answer my calls anymore. Francois told them that his phone had been used to call my girl friends, Crystal and Jessica, but I also pointed out that either one of them probably gets over a hundred calls and texts a day. Without Francois' name or relationship to me, that shouldn't have given anything away. Besides, it was pretty obvious that the detectives didn't want to consider that some guy was running around with access to cell phone triangulation - or worse, GPS - while they needed court orders to get that kind of access.\n\nI breathed another sigh of relief when we parked in a cop-only underground garage, before taking an elevator up to their floor. In fact, I was doing remarkably well, until they wanted to put me in an interrogation room. Alone. I was debating if berserkoid would work on cops when Francois silenced me with a look. All this time, I thought it was the voice. He said something calmly and quietly to the detectives and they reluctantly consented and let him stay with me. Francois explained that they wanted to give the evidence team some additional instructions, then they would be in to talk to us. I thought it was sweet of him to include himself, but I was under no delusions. The inquisition was for me and I was only barely holding it together. Pretty much the only thing keeping me from bolting was the knowledge that Dr. Tom was out there somewhere lurking in wait.\n\nBy the time that the detectives returned, I think I was pretty close to hyperventilating. I hadn't covered that subject in drama queen school, but I did wonder if I should be breathing into a bag or something. It only got worse when they told Francois he would have to leave the room, but then the male detective left with him. 'Okay,' I told myself. 'You can do this.' And the woman, though she looked like what a novel might call hard-boiled, came across as sympathetic when she began talking to me and easing me into describing my relationship with Dr. Tom. By the end of the two hours, I felt more like a victim then the catalyst of this unfolding horror. I even commented that I was pleasantly surprised with the attention that they were devoting to the case, given the usual level of crime in the big city. That's when she told me that they were treating it as an attempted murder case. I hadn't thought it possible, but things just got even more real.\n\nI begged her for information about Crystal, and she finally relented and told me that my friend had awakened earlier in the evening, but unfortunately didn't remember anything. She said that wasn't surprising, given it appeared she had been hit from behind. I thanked her profusely, explaining I hadn't heard anything back from my other friend, Jessica, all day. She allowed as how that was probably because someone had stolen Jessica's phone when she had left it plugged into a charger in a waiting room.\n\nEverything went bright white, then black. Jessica, my sweet, blonde friend, who could never remember anything. In that blinding flash, I saw her listing my name as the contact for Francois' cell phone. I had told her I was calling from a friend's phone. I hadn't given her Francois' name, because, well, I'm selfish. I wanted to keep him all to myself. So, of course she would put my name or some sort of reference to me so she could find the number again. And she was also hopeless about locking her phone when she finished a call or a text, because she always expected an immediate response and didn't want to have to enter a passcode again. Okay, my new truth-is-the-shining-path strategy-for-living requires I admit that I do the same thing. I immediately told my new friend Madge my suspicions. She was annoyed again, but not at me. At the fact that Dr. Tom might have access to GPS to track Francois' phone to his apartment.\n\nShe had me wait in the room, but a moment later, Francois entered and sat with me. I told him what I suspected and tried to apologize effusively, which he, of course, would not allow, and even got pretty stern with me when I persisted. I actually felt my ass warm as if he had specifically threatened it with another spanking. When I told him about how the interview went, however, he was all praise and pride, making the rest of me feel warm and fuzzy.\n\nHe sat in one of the chairs, inviting me to his lap, just as I was starting to pace again so maybe I was getting on his nerves. But I knew a good offer when I saw one. I plopped down and snuggled against him. He kissed my hair. \"I made a reservation at a hotel for the night,\" he told me, \"And I let Randy know what was going on.\"\n\n\"Thank you,\" I murmured against his chest, savoring the smell of him.\n\n\"Ca ne fait rien, Cherie,\" he murmured back.\n\nI was off his lap, across the small room, and with my back to the door in what had to be Olympic record time. \"What did you say?\" I squeaked.\n\n\"Ca ne fait rien,\" he repeated, with a puzzled and hurt look. \"It means 'It's nothing.'\"\n\n\"No, after that!\" I cried. \"What you called me.\"\n\n\"Cherie?\" he asked, now totally confused.\n\nI howled, pulling at the door, thinking it was locked but not even trying to turn the knob."
    ],
    "authorname": "Chimera44",
    "tags": [
        "fellatio",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/breaking-my-own-rules-ch-10"
}