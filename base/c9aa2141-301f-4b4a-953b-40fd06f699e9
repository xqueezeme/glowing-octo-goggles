{
    "title": "Single Male Chaperone",
    "pages": [
        "Part 1:\n\nBasically, you have to believe in wild, ridiculous, \"well-it-could-happen\" types of scenarios to believe this story.\n\nThat said, it did happen.\n\nThe setup:\n\nAt 41, I was the sole male chaperone for a girls trip to Cancun.\n\n20, 18-year-old girls.\n\n3, moms. 2 of which divorced and single. 1 of which had been flirting with me for years even though she was the only remaining one married.\n\nAnd me. \n\n41 years old. 6' tall. 185lbs. Decent looking to the population in general.\n\nI'm Mark Simons, my daughter is Brianna (Brie). I am the young dad to a wonderful girl who has great friends. And even though those friends used to be little girls and, though the time went in the blink of an eye for an adult, those girls were now women... and women are very different than girls.\n\nWe had booked a middle-of-the-road, adults-only establishment, a condition the moms actually insisted on. If we were going to be going on vacation with the girls they wanted to enjoy the fact that we were no longer parents to little kids. The girls couldn't care less anyhow. \"We're not kids anymore,\" they all opined. Though, as a parent it can sometimes be hard to get over that idea.\n\nThe resort, like so much of Mexico, was a fantastic value for our American dollar. I am told that the reviews said the grounds were clean, the staff was friendly, the food and drinks were plentiful and all-included. We let the girls do the overall planning with the moms getting the final approval. Of course I could have been more involved in the planning but the pics I was shown looked fantastic and I trusted my daughters judgement.\n\nAll the parents had made deals with the girls that they were allowed to drink while on vacation (18 is the legal drinking age though even that is loosely enforced) yet had to stay on the resort grounds if doing so. The girls, again, couldn't care less. For many of them it was their first time out of the States, first time in the Caribbean, first time vacationing as an \"adult.\"\n\nThe room situation, on the basis of cost, was 4 girls to a room (5 rooms) and 2 parents to a room (2 rooms).\n\n\"We could squeeze into one room as well,\" Gina (the mom who always flirted with me) said with a coy smile. \"It might go over better since we are making the girls share.\" \n\nThankfully, I still had my head about me and knew where she was heading with her line of conversation. \"Well, the beauty of being an adult and the one paying is that I get to make rules that aren't necessarily fair but to my benefit. I think we would all be much better off in our own beds. One extra room won't kill the budget.\"\n\nThankfully, the other moms agreed with me.\n\nIt wasn't to say that Gina wasn't attractive. Quite the opposite actually, she was a beauty. Each of the moms was quite good looking. My concern was that she was married and, since my wife died, I admit I hadn't done much in the way of dating.\n\n\"You've gotta' get out there again,\" my daughter would tell me, almost pleading with me to go out on some dates.\n\nHonestly, she was right. Though, while I am not sure there was ever one specific reason why, I just didn't.\n\n-----\n\nI had an inkling the trip was going to be a bit wilder than I had originally planned when I helped Brianna get packed.\n\n\"What's this?\" I asked as I held up a tiny lycra g-string.\n\n\"One of my suits.\"\n\n\"Pretty small.\"\n\n\"Yeah. A few of us ordered them and figured to give them a try. We figure the less tanlines, the better.\"\n\n\"Does it have a top?\"\n\n\"Not that one,\" she answered matter-of-a-factly. \"But I am bringing a total of 3, two of them have tops, and the girls all agreed to trade suits so we can have a lot of options for sharing and mixing-and-matching.\"\n\n\"You all wear the same size?\"\n\n\"Well, obviously, no. But suits are stretchy and there are enough options between all of us that we probably won't go a day wearing the same thing.\"\n\n\"Or, apparently much it all,\" I said sarcastically. \"I guess we will need to pick up more sunscreen.\"\n\nBrie grabbed the scrap of cloth out of my hand and stuck her tongue out at me in a joking mock. We had a great relationship.\n\nIt wasn't as if I didn't know she didn't wear thongs and other skimpy underwear already. Heck, I did the household laundry. I also knew the resort policy was \"toplessness is not sanctioned though widely tolerated/accepted.\" It's just that one of the problems with raising your child in a body positive manner is that sometimes they actually listen to what you say.\n\n------\n\nThe travel down was typical. The girls were all squealing with anticipation while the parents tried to keep their volume down for the benefit of the rest of the plane. When we walked into the big, beautiful entry of the resort I almost started squealing with delight myself. It was more fantastic than I had pictured it and perfect for someone who hadn't been on an adult vacation... ever. While the resort was relatively empty (we got in quite early and were told that it would fill up over the course of the day with other travelers) I could already sense the energy that it held within its walls.\n\nAs it turned out, the adult rooms were actually adjoining and the moms (Gina, Melanie and Sara) immediately declared that the door between should never be shut over the course of the 10 days we would be vacationing.\n\n10 days.\n\nI hadn't had 10 days off in a row since before we had Brie. Sure, we had gone on vacations, mostly with her sets of grandparents, but nothing more than 6 nights. This was 9 full nights in paradise and I was looking forward to every moment of it.\n\nThe moments started immediately when the moms each changed into their bikinis and insisted on doing 2 rounds of shots to \"get the party started.\"\n\nThe moms:\n\nGina - Mother of Brittany and a 5-year-old son I did not know. 47 years old. Married. Extremely good looking. 5'3\" tall. Probably about 110-115lbs. Rock hard abs and an overall athletic, not very curvy, build. 365-day-a-year golden spray tan and blonde highlighted light brown hair that was very obviously professionally done. Measurements came in at an estimated 28-24-30. She informed me as she pulled on her bikini top, with not a care in the world that on day 1 she was topless in front of me, that she was getting implants in 6 weeks so she would \"no longer be shaped like a boy\" and was only disappointed that she hadn't planned them sooner to be able to \"show them off to me.\"\n\nMelanie - Mother of Emily. 42 years old and the closest in age to me. Most typical \"mom\" of the group. Had 3 kids and Emily was the oldest. Youngest was 8 and she informed us prior to the trip that she had a bit of trouble losing the final bit of pregnancy weight. 5'5\" tall. 135-140lbs. It was obvious she was a looker in her younger years but had somewhat fallen into the tedium of middle age, marriage and parenthood and was a bit more plain in her appearance. Measurements estimated at 34-26-38. Melanie did not change in front of me, but did make a quick appearance in her run-of-the-mill bikini when summoned and looked pretty darn good to my eye. Yes, it was obvious her breasts were a bit smaller and \"looser\" than they once were and she carried a bit of a baby paunch, but her face was kind and warm and inviting and she had a full set of lips that were fantastically sexy. Melanie had finalized her divorce not 6 weeks prior and informed us that she was \"ready to have some real fun after all the bullshit\" she had been through.\n\nSara - Mother of Priya. Sara was a medium-skin-toned Indian woman whose name was not particularly befitting of how exotic she was. 45 years old, 5'7\" tall, voluptuous. Always has called me \"Honey\" or \"Sweety\" when we saw each other. Sara changed into a tiny, string, thong bikini that brazenly flaunted the curves of her body. Measurements estimated at 44-38-42 of pure sex. Her breasts were large and full and barely covered by the tiny triangles of her top, her hips were wide and, though she was heavy, her skin was smooth and without a hint of cellulite. Her bikini bottom was so small it gave evidence to a professional wax job and her skin glistened even in the artificial light of the room. I had never seen Sara not done up in full makeup and dressed to the nines and her gold, sequined bikini and accenting wedge sandals continued the image she had crafted for herself. Which was, in essence, she was hot and she was worth it. Sara, was my roommate for the next 10 days and I worried myself with how I was not going to offend her with what were most likely going to be constant erections.\n\n------\n\nAfter shots we went down to the pool and found that the girls were already there and already enthusiastically drinking their first round of drinks at the poolside bar. Each girl was fully covered in a relatively modest bikini (\"cheeky\" bottoms and string tops at most daring) and I figured that each of them, including my daughter, were waiting to absorb the overall vibe of the resort before doing anything a bit more daring. While the moms and I had agreed to give the girls their space for the majority of the trip, it did seem appropriate to at least have a first drink with them.\n\nDrinks in hand, we toasted to our vacation and threw back our drinks. Being the only male, having just chugged my drink and never one to be have particularly showy in front of my daughter and her friends previously, I got the loudest reception.\n\n\"Mister Simons!\"\n\n\"Whooooo!\"\n\n\"Part-aaayyyy!\"\n\nIt was pretty shrill and loud and it was then that I realized I had to lay out some new suggested ground rules. Thankfully, they were well received.\n\nNobody was to call me Mr. Simons anymore. Each of the girls were 18 and we were on vacation. Instructions were made to call me Mark. Gina, Melanie and Sara all followed suit with insisting on first name greetings.\n\nI made the suggestion that the girls make an effort to meet and mingle with other guests in the resort. I gave the reminder that we were at an adult resort and \"adults\" did not tend to roam in packs of 20 girls. Good things could come from opening their eyes and learning about other peoples lives and experiences.\n\nHand-in-hand with 2, do not go off with strangers alone and ever be outnumbered in a group.\n\nWe eat dinner as a group each evening.\n\nThat was it. Of course, I had already talked to Brie about knowing her limits when it came to alcohol. While we had never lived in a dry household and she was allowed to have a drink periodically, the unlimited access to alcohol and bartenders that had no qualms on overserving was something that gave me pause when it came to how to guarantee the trip was a success. At a certain point, however, they have to make their own decisions. At least I would be generally around if there was any fallout. \n\n------\n\nI excused myself from the group and set up camp in a poolside chair that seemed destined to get a lot of sun over the course of the day. Eyes closed, I felt like I was about to doze off when my siesta was interrupted by a familiar voice.\n\n\"Mark, honey, do you have sunscreen on? I don't think you are going to want to ruin 10 days by getting fried on the first morning.\"\n\nSara and Priya were standing over me. Sara's gold sequins sparkled in the sun and reflected onto my body like a disco ball. Priya's bikini, though a crocheted style, was not much larger than her mother's, but more appropriately sized on her thinner, teenage body.\n\n\"You're right. I should run up the room and grab some.\"\n\n\"No worries, we'll take care of you. Stand up. Priya, you get his back.\"\n\nI stood and each of the girls took dollops of sunscreen onto their hands and started rubbing it into my skin. Priya's job was pretty utilitarian, Sara was a bit more wandering with her hands as they slipped slightly under the waistband of my shorts.\n\n\"Why do you wear these massive things?\" Sara asked as she was down in a squat position, her hands well up under the legs of my shorts and dangerously close to my inflating manhood.\n\n\"Why do I wear a swimsuit?\"\n\n\"No, why do you wear this swimsuit? It's huge and probably leaves your butt looking as white as a dead fish.\"\n\nI chuckled at her comment.\n\n\"I guess I just haven't thought about it too much,\" I responded honestly.\n\n\"Well, you need to start thinking about it. Everyone should pay attention to their appearance and do their best to look their best.\"\n\nThe ladies were done slathering me up and Sara cut Priya loose to go back with her friends.\n\n\"Thank you,\" I said as I went to sit back down.\n\n\"Oh, honey,\" Sara replied as she grabbed my hand and pulled me back up. \"That wasn't free, you need to do me now.\"\n\nSara handed me the bottle of sunscreen and turned her back to me.\n\n\"I decided to give you a break this first time though and already did my front.\"\n\nI put some lotion on my hands while she got a lounge chair situated, the adjustments causing movements and jiggling in her body that drew attention to just how little of it was covered and when she lay down on her stomach her large breasts, even though partially spread to the side of her body, levitated her torso above the chair.\n\n\"Make sure you get all of me, Sweety. Brown people burn too.\"\n\nI took my time covering every square inch of skin that I saw and Sara invited application in areas that I had not necessarily seen previously as she spread her legs a bit and instructed me in no uncertain terms that her inner thighs still needed to be treated. I also took some time to open conversation as to how the decision was made to come specifically to this resort in Mexico.\n\nShe paused and sat up, inviting me to sit at the end of her chair, basically between her legs, and insisted on holding my hands for the duration of her explanation.\n\n\"I grew up in a wonderful household. We were wealthy and my parents spoiled me with gifts and displays of status and my mother always encouraged me to push for whatever it was that I dreamed. Did you know that I was a doctor? Well, am a doctor, was working.\"\n\n\"No, I did not.\"\n\n\"Oncology. I worked in a research practice that was part of the University. It was a wonderful 5 years.\"\n\nSara paused for a moment and smiled at me. She really was quite pretty. I was curious as to what she would look like not \"done up.\" I could only assume that she was still very attractive and her body certainly wouldn't be any less appealing. I noticed that her bikini had shifted and a large portion of one of her areola was uncovered.\n\nFocus, damnit!\n\n\"Anyhow, then I got married. I was surprised when my parents even suggested the arranged marriage. Especially my mother, she always struck me as such a feminist. Though, as it turned out, she was a feminist only for single women and she was very much a traditionalist when it came to me and marriage and the rest of my adult life. Anyhow, as I had had such a wonderful life till that point I decided to meet my future husband and hear out the plan. Honestly, it didn't sound so bad, I would still live a very upscale lifestyle but just would not work anymore. But, as soon as the ceremony was over things started to change. My ex was never physically abusive but he was very controlling. I had to be his trophy wife and that was it. I had to dress a certain way, I had to play a very specific part. Now, please don't get me wrong. I very much enjoy dressing up and looking nice. There would be no way that I would go through the effort if I didn't. What I refused to get on board with was that it was my duty to do these things as I was his wife, his possession. Once I realized that he could not care less about me as a person the marriage started to dissolve. Also, he would not allow Priya the same life my parents gave to me. He wanted her groomed to be a wife, not a self-reliant woman. And then, a few years ago, when I found out he was also maintaining a secret lifestyle that involved a completely second family, I decided to cut our losses. I got us out, with a major settlement of course, and started over. Priya still sees him, but I have made it very clear to him that I am the main directional force in her life if he wants to maintain a relationship with his daughter.\"\n\nWithout a care in the world, Sara let go of my hands and reached behind her back to undo and remove her bikini top. Her heavy breasts dropped a bit but otherwise remained full, proudly showing off two perfectly round, tan areola that absolutely absorbed the soft nipple they held. She shifted down in her chair, laying out in the sun, her large breasts shifting to her sides though still large enough to project forward. She opened her legs more and spread them to each side of me, her tiny bottoms quite obviously barely covering her pussy lips.\n\nJesus Christ! Did she want me to cum right then and there?\n\n\"Which brings us to this trip. A couple of years back I overheard Priya and a smaller group of girls here whispering about school and crushes and dreams, etcetera. It was silly school-girl chatter but it became obvious to me that the girls in the group were all incredibly naive when it came to what I consider to be a life fulfilled. Since that point I have made it my mission, and after talking to Gina, her mission too, to make our girls the most intelligent, informed, sensual, confident and empowered women they can be. There were a group of about 15 that we have been mentoring. Then with Mel's divorce it became obvious that she could use some work herself. And then you.\"\n\nI had found myself rubbing her thighs, not with sunscreen, just rubbing. I believe that was her aim all along with the position of her legs, but it still nonetheless happened absentmindedly on my part. Her comment took me by surprise.\n\n\"Me?\"\n\n\"Yes, you, Mark.\"\n\nSara sat back up, her breasts slowly swinging in front of her.\n\n\"Do you know how wonderful a job you have done parenting Brie? That daughter of yours is fantastic in every way. She already has all of the attributes that I was talking about before. She is smart, she is beautiful, she is confident.\"\n\n\"But?\"\n\n\"But, in conversation with her it seems obvious that somewhere along the way you lost your way as a man and instead just became a dad. Your little girl is going to be out of the house in a few months and then what? Those things we want for our daughters? Those are universal. You too need to know that you are not just a dad, you are a fantastic man with value to the world. And, if I may be so bold, I think you could probably benefit from some time with a lady.\"\n\nI admit I was a little embarrassed by her comment. How did she know about my sex life... or lack of sex life?\n\n\"So, is this what this is all about? This little display?\" I gestured my hand over her body to bring attention to her nudity. \"Are you trying to get me to sleep with you?\"\n\nSara smiled. \n\n\"Oh, Sweety. This? This isn't for you, this is for me. I dress and undress the way I see fit and do it for me. If I want to sleep with you, don't worry, I'll just ask. If you decide you like me too then I think we can have a good time. In the meantime, I am just going to relax and enjoy life.\"\n\nI got back into my chair and laid out for some tanning of my own. Thankfully, the combination of the sun, the drinks and that I was frankly too tired to really start to overthink her commentary meant I fell into a relaxing nap.\n\n-----\n\nI woke up and found that Sara was gone but I was actually surrounded by a few of the girls from our group. None of them had taken her lead in removing their tops but I did see that a couple of them had changed to more risque bikini combos with one sporting a full-on g-string bottom.\n\n\"Hey, welcome back.\" It was Tiffany, one of Brianna's closest friends in the group. \"How are you feeling?\"\n\n\"Relaxed. Seriously, seriously relaxed.\"\n\n\"Really? I am not sure you look very relaxed.\" Brianna had actually mentioned in the past that Tiffany had a bit of a crush on me but I never really thought about it until I looked and saw that she was staring directly at my crotch... and the crotch of my suit was very clearly highlighting an obvious erection that was straining against the leg of my shorts.",
        "I could feel my face turn beet red immediately but, verbally, I at least tried to play it cool.\n\n\"Well, you know what we talked about. This is an adult resort and sometimes adult things will happen. Sorry if I offended any of you.\"\n\n\"Offended? Hardly. You do you. Not bothering any of us.\"\n\nI looked around and saw the other girls, 4 more total, all nodding along. A couple of them were suppressing smiles but none of them looked shocked in any way. Maybe they were more adult than I thought. Nonetheless, it seemed like a perfect time to get up and check out some more of the resort so I excused myself from the group and went to wander.\n\nIncidentally, I ran into Brie walking in from the beach.\n\n\"Hey, Dad. I mean, Mark.\"\n\n\"Hey, kiddo. Watcha' up to?\"\n\n\"Just gotta' go pee. You?\"\n\n\"Just checking things out. Before you go though, can we talk?\"\n\nI told her about my conversation with Sara and my thoughts of it.\n\n\"Do you really think I have lost my identity? I was hoping I was giving you a good life.\"\n\n\"I have had a fantastic life! But I worry about you. Next year when I am off at college, what are you going to do with your time? You are such a fantastic guy, I want you to go have a life.\"\n\nI sighed. We had the conversation before. She had been harping on me for a couple of years.\n\n\"Okay, I'll try. But, quickly, why did it sound like you talk about me not having sex?\" \n\nBrianna wrapped her arms around me in a hug.\n\n\"Well, it isn't like I talk about it. Just that I have mentioned that I think you need to. Get out there and show the world what I already know. What have you always told me? Go make the world a better place? That means doing stuff other than just being my dad. Go get laid. I want you to be happy.\"\n\nOf course, it could have been a moment for us, a touching father/daughter hallmark with a sappy soundtrack playing in the background but real life is a little bit different and Brie pretty quickly let go of the hug.\n\n\"Sorry, I really gotta' pee,\" she giggled as she pranced off toward the resort, leaving me by myself.\n\nI guess there was no better time to get \"out there.\"\n\n------\n\nPart 2:\n\nI woke up the next morning after a relaxing first day. Nothing had happened the rest of the day that stood out from the multiple displays of toplessness, thongs and my daughter telling me to get laid. The resort was nice and offered a variety of amenities, none of which I tried. Instead, I hung out on the beach, hung out at the pool, ate and drank and generally did nothing. Afterwards, I even went to bed early. I felt fantastic.\n\nSara was still asleep in bed but as I heard from noise coming from the room next door, I hopped out of bed to take a look. Gina was in bed, Melanie was toweling off with her back to me, the shower was running.\n\n\"Good morning,\" I said, loudly enough to startle Melanie and who dropped her towel and spun around immediately.\n\n\"Oh, my, Mark. You scared me. Good morning to you too.\"\n\nI saw her eyes dart to my crotch and, as I looked down myself, I realized that I was stark nude. A reminder to how I normally slept but forgetfull-ness to the mixed company I found myself in.\n\n\"Shit,\" I said as I threw my hands in front of my dick, \"I'm sorry about that.\"\n\nBut, I didn't back away from the door. I just stood there and stared at her and she stared at me for what seemed like an eternity until she mercifully cut the tension with a joke.\n\nMelanie had also made an awkward attempt to cover up but slowly put her arms down to her sides. \"Ain't this great? All this empowerment and ownership of our sexuality?\" Her tone was wry and sarcastic.\n\nI chuckled and allowed myself to move my hands away from my crotch, tossing her a \"go-ahead-and-look\" glance. \"Oh, yeah. Loving every minute of it. I had no idea just how empty of a soul I was before.\"\n\nThen, a funny thing happened, life went on. We started having a conversation and, at least for me, it was as if the nudity wasn't even there. We talked about the resort. We talked about Sara and Gina. We talked about how we had both been given lectures about finding ourselves. We talked about how we thought that it was silly but maybe we both could stand to break out of shells a little bit.\n\n\"I just worry, you know,\" Melanie said to me.\n\n\"Worry about what?\"\n\n\"Worry that maybe it is too late. Maybe I lost my chance to be something other than a mom.\"\n\n\"Aww, that's a bunch of crap.\"\n\nThe voice startled us. As we got caught up in conversation, we apparently both lost track of the time and the fact that the shower had stopped. Emily was standing in the doorway to the bathroom, herself nude except for a towel wrapped around her hair.\n\nWhen I turned to her, I could see that Emily sized me up quickly, an ever so slight pause on my penis, but her main focus was her mom, who she rushed over to and wrapped in an embrace.\n\nNothing was said, instead they just held each other for a tender moment, eyes closed, appreciating one another. It wasn't until a few moments later that Melanie opened her eyes, found me standing directly in her line of sight, and chuckled.\n\n\"I think it is going to take me a bit to get used to all of this nudity.\"\n\nEmily released her mom from a hug and swung around to where I found myself with two nude women staring right at me.\n\n\"I kinda' like it,\" Emily chimed in. \"Certainly beats having to wear a bra.\"\n\nNot that, in my male mind, Emily needed much of one. She was a little taller than her mother, probably about an inch, but quite a bit more lean, a testament to not having borne children. She had nice legs, curvy hips a relatively flat stomach and a torso topped with small, maybe b-cup breasts that were topped with small, red-ish nipples and almost invisible areola. Like so many her age, her pubic hair was fully shaved with just a bit of dark stubble. She was a lovely young lady, with a pretty face and just-past-shoulder light brown hair.\n\n\"Did you spend the night in here?\" I was confused as to why Emily was even in the room.\n\n\"No, got up to work out with my mom but figured not to wake the girls in my room so I took a shower here.\"\n\n\"Obviously no problem waking up me,\" said Gina somewhat grogilly.\n\nThe movement and voice surprised both Melanie and Emily and each went into immediate damage control apology mode.\n\n\"Oh, it's fine,\" Gina responded as she got out of bed and wandered to the bathroom, she too fully nude, \"I need to work out too. Next time wake me up beforehand.\"\n\nThe splash of an early morning pee against porcelain rang out into the air and Melanie and I both offered a raised eyebrow and a smile. This most certainly was a different experience than either of us were used to.\n\n-----\n\nDay 2 found all except two of the girls wearing significantly smaller swimsuits with 3, including my Brie, going in full g-string thong (though not the one I had seen her pack, this one had a larger covering in the front).\n\nThe pool was hopping by noon, with games and drinking in full swing and while I could tell a few of the girls were still a little shy about getting involved, others were front and center on the pool deck enjoying the fun and attention. I assumed the vast majority of the activities would be prescribed in nature, the kind of stuff that bored, drunk suburbanites do while \"being crazy\" on vacation: bikini/hot body contests, balloon popping between members of the opposite sex, etcetera. I had my reservations if these types of activities legitimately offered anything in the way of the female empowerment that Sara had spoke of, but can admit that the girls did seem to be having fun as I watched them try and catch foam rings on a waist mounted apparatus that was obviously meant to mimic a strap-on or male erection.\n\nAll of that said, it wasn't particularly my type of scene so I made my way to the beach with a towel, book and a drink to catch some sun and relax. Besides, my justification for not being a party-pooper was that I had promised the girls that I would give them a wide berth.\n\nI figure I had been locked into reading for about 45 minutes when a voice startled me.\n\n\"Is this seat taken?\"\n\nI looked up to find a woman standing practically over me.\n\n\"What was that?\"\n\n\"This chair, is it taken?\"\n\nI had to focus my bearings to realize that she was referring to the chair directly next to me.\n\n\"Uhm, no. It is not, you can feel free to take it.\"\n\n\"I'll actually just stay here if you don't mind.\"\n\nShe began to spread out a towel and arrange herself on the chair under my curious gaze. I admit I had expected her to have dragged the chair somewhere else, instead she kept the chair exactly where it was, not more than 4 inches away from my own. Her gear was typical, towel, sunglasses, sunscreen, book, all pretty much the same as my own. Her final act before settling in was stripping off a patterned, opaque mu-mu of a sundress to reveal an athletic, curvy body clad in a small string, cheeky bikini. I immediately doubted if I would be able to concentrate on my book again.\n\n\"Avoiding the action at the pool?\"\n\n\"Yeah,\" I responded. \"I don't want to burn myself out too early. Plus, I am here with my daughter and her friends and don't want to hover.\"\n\n\"You're with the girls?!\" Her face lit up. \"That's fantastic! I just saw them at the pool. Looked like they were having a blast.\"\n\nI explained to her the empowerment concept that Sara had preached to me and my reservations in cock-ring-toss being an empowering act but I was hushed immediately.\n\n\"They are young and having fun. That type of thing is actually perfect for their age. What are they, early 20's?\"\n\n\"18, actually. Every single one of them.\"\n\n\"God, to be 18 again.\"\n\n\"Well, life is about experiences. I hope this trip is a good one for all of them.\"\n\nShe patted her hand on my thigh and complimented me. \"That is a wonderful mindset to take.\" We sat in silence for a while before she opened conversation again. \"So, don't get me wrong, I love the fact that you are here, but how is it that your daughter's mother did not get chosen as her chaperone?\"\n\n\"I am a widower, actually. She passed quite a few years back.\"\n\n\"Oh, I am so sorry. This is why my friends tell me to keep my mouth closed.\"\n\n\"No, it's okay. Brie was young. It was a long time ago.\"\n\n\"Brie was the mom?\"\n\n\"No, sorry. Brianna is my daughter. Since it has always been just the two of us, we were thankfully able to avoid the drama and instead have always just been really close. She actually asked me to come along.\"\n\n\"Well, that is just fantastic.\"\n\n\"How about you? Here with a boyfriend or group?\" I knew the resort catered to couples and groups of singles, not singles by themselves.\n\n\"No boyfriend or other significant other. Like you, I am also babysitting. In my case, I am the old matron watching over my little sisters bachelorette party.\"\n\n\"Fun.\"\n\n\"Yeah, hopefully. We'll see. Right now they are all so hungover just from the flight here that only one is even out of bed. And I get the feeling that I was only invited because I am family, not because anyone actually wants me here. Nonetheless, they are the rookies that can't hold their booze and I am going to get some color.\"\n\nI chuckled my response. \"I'm Mark by the way.\"\n\n\"Heather.\"\n\nWe spent time talking and sunning. It was surprising how much we had in common, including that she lived only about 40 minutes away from me. She was divorced, but with no kids. She owned a boutique shop and salon that specialised in swimwear and lingerie. She also rarely traveled but, more so than poolside hedonism, she was looking forward to relaxing and getting some color.\n\n\"Considering my line of business, it is pathetic that the only tan I get these days is the spray-on kind.\"\n\nWhen the time came, we went to get some lunch together at one of the resort restaurants and ran into the group of moms. Though the women were cordial enough in their interaction, I swear I felt a bit of animosity directed my way from Gina, like I was somehow cheating on her just by having lunch with another woman. Nonetheless, the conversation remained enjoyable at lunch and when we decided to go back to the beach together afterwards, we ran into a group of the girls, not including Brie, who were planning on the same thing. I was pleasantly surprised when they all acknowledged me and graciously met Heather. I was not at all upset or disappointed when they informed me that they would be heading a bit further down the beach and away from us.\n\nIt wasn't that long before Brie, who had apparently already been on the beach, wandered over to us to say hello and meet my new friend. Out of the corner of my eye I think I literally saw Heather's mouth drop when my daughter sauntered over wearing nothing other than the tiny g-string I helped her pack before the trip. It could be said that, objectively speaking, my daughter is a fantastically attractive young woman. She is 5'9\" tall, lean and curvy, a perfect shape for the sport of volleyball she loves. She has long, dirty-blonde hair, an attractive face and, I know this because I help her shop for clothing (including bras) measurements that come out to 35C-22-34. So, if I can admit it, her wandering over is about the same as a mens-mag centerfold walking directly into the scene.\n\n\"Hey, Brie.\"\n\n\"Hey, Dad. My friends said that you were hanging out with someone and I thought I would say hello.\"\n\n\"Brie, this is Heather. Heather, my daughter Brianna.\"\n\nThe two shook hands and made some very general small talk before Brie asked to pull me aside for a moment of private conversation.\n\n\"Hey, a couple of things,\" she began, peeking over my shoulder at Heather. \"First, way to go! She is really pretty, a red-head too; right up your alley! You took my conversation to heart I see.\"\n\n\"Brie,\" I tried to interrupt to clarify that there was nothing going on between Heather and I though she was having none of it and just continued on.\n\n\"Second. A few of us were talking to the staff and they told us there is a fully nude beach within walking distance and we want to go. But, they said that unless we want to get harassed by the locals trying to sell stuff on the beach we should have a guy with us. So, the other girls suggested that you come with us.\"\n\n\"Your friends want to go to a nude beach with me?\"\n\n\"More like my friends and I want to go to a nude beach and need you to go with us.\"\n\n\"Do I need to be nude?\"\n\n\"It would probably be awkward if you weren't.\"\n\n\"I'm gonna' have to think about this.\"\n\nBrie said her farewell and I slank back to my chair with Heather.\n\n\"That is your daughter? Oh, my God, Mark! She is gorgeous!\"\n\n\"She just told me that she and her friends want me to go to a nude beach with them.\"\n\n\"Well, she was already practically nude. And, hell, if I had her body I would show it off as well.\"\n\n\"Brie isn't my concern. I've always raised her to be confident in herself and that nudity is natural. The problem is that not everyone shares my same views. How will the girls parents or significant others feel about the responsible chaperone getting nude in front of the 'kids' of the trip?\"\n\n\"I don't know. They are all here, right? People had to know what that came with. Besides, this could be a perfect opportunity to spread the actual confidence and empowerment message you were telling me about earlier. Something other than faux sex games on the pool deck.\"\n\n\"I suppose.\"\n\n\"What would the other moms think?\"\n\n\"Two of them will be in and encouraging in a heartbeat. The last I don't necessarily know.\"\n\n\"Well, while my two cents is that you go for it. You can offer a positive experience to these girls and show them first hand a much more European experience as opposed to a bunch of hooting frat guys.\"\n\nShe had a point. It still seemed a little weird. 3 days ago I had a comfortable, positive relationship with my daughter. Now I appeared to be expected to automatically have the exact same relationship with 19 other girls and 3 moms. I think I needed to speak to Melanie. Her thoughts would get me my answer.\n\n------\n\n\"I am all for it.\" Melanie was laying out at the pool, drink in hand, bikini top nowhere to be seen. \"Not only do I think it would be fun for the girls, I think it will be fun for the adults too.\" Emily had already told her about the proposal to go. It seemed that Melanie, after the brief hesitation and moment of self doubt, was fully vested her idea of having fun and getting past the bullshit of her divorce.\n\n\"And you think it is okay for me to be there? No repercussions for my exposure once we get back home?\"\n\n\"First, the girls are done with high school so the gossip mill will drop exponentially. Second, they are all adults. Third, everyone already knows you are a good guy. Seriously, Mark. Have a drink. Whip out your cock. Live a little.\"\n\nIt was a happy surprise to get Melanie's endorsement though a little shocked to hear the way she did it and I admitted I did need a drink. Two days into the trip and I had only the first shot in the pool to show for it. While I had never been a person to equate alcohol with fun, I could admit that a drink will help loosen most people up and, with the nude beach proposal, I needed exactly that.\n\nA familiar face was at the bar.\n\n\"Hey, stranger,\" Heather said and greeted me with a kiss on the cheek. \"Did you figure out a plan?\"\n\n\"I haven't talked to Brie yet but it looks good to go. Now I think I need a drink.\"\n\nHeather called the bartender over and ordered me a double shot and then a fruity, frozen drink to chase it down with. In addition she introduced me to the group she was with.\n\n\"I told them your dilemma,\" she explained to me. \"They not only think it isn't a problem, they also think that they want to go too. Can we join you or can you at least let us know how to get there?\"\n\nThere were 8 total women in her group, meaning that in addition to mine, it would be 31 women and me, assuming everyone went. But, as the alcohol quickly hit me, I threw caution to the wind and let them know I would give them the details.\n\n-----\n\nPart 3:\n\nIt was the next day that we decided to go as the general consensus of the group was \"why wait?\" The previous night had been enjoyable. Dinner again as a group and then dancing at the nightclub into the night. I saw that everyone was drinking more than I had previously noticed but there were still no concerns with anyone overdoing things and getting into regrettable situations.\n\nOnce the morning came, I was surprised to find that I was the one who slept in longest but was not surprised to find that the moms had abandoned any pretense of modesty and had already taken to walking around in the nude as they got ready for the day at the beach. What was a secondary surprise was the group of girls that crowded into our two rooms, ready for the walk to the beach and seemingly giddy about the prospect of going full-nude out on the sand. Did they care that I was still laying in the bed they were practically bouncing on? Apparently not.\n\nIn the end, only 12 of the girls decided to go and, because 8 seemed to be too high of a number to leave at the resort alone, Gina decided to stay behind with them. With Heathers full group tagging along we had a total of 23 and, as expected, I was the only guy. It was admittedly a bit nerve wracking but Brie assured me that it was just fine. The walk over was slightly technical in that we did have to go off resort and through was basically amounted to wildlife paths and over a series of rocks and small cliffs but, when we got there we determined that the hotel staff was right, it was a fantastic beach.\n\nThere were probably about 15 other people already on the beach when we got there, mostly men and, presumably, mostly gay couples. That said, the beach was large enough to easily hold a couple hundred without anyone crowding on one another so we found a spot for our large group not too far away from everyone else but not to bother the other patrons either. Putting our minimal amount of gear down, we got down to business: sunscreen.",
        "Sunscreen is best applied in teams and it would have been amusing for onlookers to see the multiple groups aggressively attacking one another with creams and lotions in order to help us enjoy the time as much as possible. It was also obvious that we would need to be careful as there were a number of girls in our group who had some extremely white skin that could get burnt pretty quick. Thankfully, the gear we brought included a chair for almost every attendee (the hotel had 15 to lend) as well as 10 good size umbrellas that we were able to set up for a decent amount of shade.\n\nWhile the majority of the girls immediately went into the water, I assume as a defense mechanism for their overwhelming exposure, I am not much of a water-person and instead positioned myself into the sun, ready to get some still-needed color. Sara joined me.\n\n\"Remind me again,\" she inquired. \"This is your first time on a nude beach, right?\"\n\n\"Yup,\" I responded as I watched her situate herself on her belly, her ass in the air in the process, her pussy peaking out from in between her legs at me, \"you?\"\n\n\"No. Not my first time. But not like I have the opportunity to go regularly either. Probably just over a handful of times in my life. I do love it every time I get the opportunity though. So freeing.\"\n\nAs I put my chair into a recline and relaxed I took some time to look around me. The girls in the water, milling about in the sand, or maybe just reading a book right by me, it really was wonderful. This was much more what I had in mind when it came to the confidence and empowerment that Sara and Gina spoke of but, wet t-shirt contests aside, maybe that was just the dad in me thinking.\n\nIt wasn't long before some of the ladies started making their way out of the water and I was joined on each side of me by Brie and Heather. They informed me that they had been getting to know each other while bobbing in the water. It was impossible to ignore their glistening beauty as they strolled in from the water and, while I tried not to have \"guy thoughts\" about my daughter, I found myself stirring with appeal for Heather.\n\n\"Dad, errr... Mark,\" Brie started into conversation after sitting. \"Did you know that Heather owns a swim and lingerie store?\"\n\n\"I did, yes.\"\n\n\"Did you also know that she runs a salon out of her store as well?\"\n\n\"I did not.\"\n\n\"I am a woman of mystery and secrets,\" Heather joked before Brie continued.\n\n\"Well, we were talking and when I mentioned how difficult it is to keep my bikini line clear of stubble with how small my bikini bottoms are.\"\n\n\"I can imagine how distressing that is for you,\" I responded dryly.\n\n\"Hey, shut it!\" I got a playful slap on the arm from Brie and a smile from Heather. \"Anyhow, Heather was saying that she actually has her supplies with her and would be willing to give me a wax. Free of charge.\"\n\n\"Well, that is very nice of her. Why are you telling me?\"\n\n\"Because, Mark,\" Heather chimed in. \"Your lovely daughter and I both agree that this needs to be addressed.\" For added emphasis, Heather reached over and ran her fingers into my pubic bush, holding her hand there for a moment to display how long the hair was. Having been totally unprepared for interaction I was like a deer frozen in headlights, my only response being a little yelp of air out of my mouth. Brie just giggled.\n\n\"Seriously, Dad. It's the 21st century, time to clean that up.\"\n\nThere was ever so slightly a brief pause as my mind and body got onto the same page.\n\n\"Wait, you are saying that you think I should wax my pubes?! Not gonna' happen!\"\n\nThis time, both Brie and Heather laughed.\n\n\"No, silly,\" Heather responded. \"Fortunately for you, men rarely deal with the delight of bikini waxes. But, it is still a good idea to tame the jungle every now and then. Clippers and shaving do the trick.\"\n\n\"So, riddle me this, Ms. Handsy,\" I said with a wink to Heather. \"If clippers and shaving is so adequate for men, when not for women?\"\n\n\"Simple. Because your suit isn't as small. Brie, stand up for a moment.\"\n\nBrie stood in front of my chair and Heather, obviously one to take charge of the situation, had me sit my chair up vertically as opposed to the recline I still had been in. The resulting angle found me with my face pointed directly into each one of their crotches. While it has been stated that I have a very comfortable relationship with my daughter when it comes to nudity, this seemed just a bit weird. Whether she considered my angle or not, Heather went right to work.\n\n\"See here?\" Heather was in a squat position and using her hands to point out the contours of Brie's bikini line. \"When you shave, you get little bumps. It just happens since the skin is sensitive. And, because her bikini bottom for when she is on the resort is so small, the bumps are visible and, let's just say, unappealing visually and uncomfortable to wear over the irritated skin.\"\n\n\"Uhm, okay,\" I responded. I was frankly a little uncomfortable staring at my daughter's crotch and, looking up and catching her eye for a moment, she seemed a little uncomfortable too.\n\n\"Plus,\" Heather continued, \"once you get down into the details... Brie, honey, can you put your leg up here?\"\n\nBrie, mercifully and thankfully, said something. \"Uhm... maybe someone else could show my dad their bikini line?\"\n\nHeather's face turned red. \"Oh, my! Yes, I'm sorry. Just got caught up in the moment. Uhm, let's see.\" Heather stood up and put her leg up on the arm of my chair, her crotch directly in my face, a beautifully groomed red patch drawing my eyes in. My eyes focused on her bikini line and pussy lips for a moment but then darted right back to Brie's eyes. She was over her embarrassment and instead had a look of joyful shock on her face. \n\n\"See on me?\" Heather continued with no hesitation. \"No irritation, no unsightly bumps. Plus, for any stragglers that may be out of view, a professional can get to those hard-to-reach places without issue.\" With that she spun around and gently spread her butt cheeks, displaying an admittedly hairless, pink asshole and that image, combined with everything that had happened so far, put me over the edge.\n\nNo, I didn't lose my temper and lash out.\n\nI got an erection.\n\nThankfully, Heather didn't seem to notice.\n\nBut Brie did.\n\nShit, my daughter just witnessed me getting an erection.\n\nThankfully, she was very cool about my predicament. While Heather stood in front of me, seemingly oblivious to my situation, Brie simply grabbed a folded up towel and placed it on my lap. The immediate warmth of the towel actually made my dick firm up into a rock-solid boner but I didn't care at that point as it was covered. Nonetheless, the towel was certainly appreciated and I silently mouthed a thank you to her. However, the movement brought Heathers attention to my lap and assessed the situation incorrectly.\n\n\"Oh, c'mon, Brie. It isn't that bad! It isn't like you have to cover him up.\" Heather reached down and pulled the towel off of me, my twitching cock springing immediately into her view. \"Oh! Ooooohhh...\" Heather dropped the towel back on my lap and I was thrilled that I could feel the blood rush from my dick right up to my face, my body's response immediate and severe.\n\nBrie sat down in her chair, her face in her hands. I couldn't quite tell if she was embarrassed for me or for herself. I mean, I am still her dad and her friends very well could have seen. Heather offered a stuttered apology before excusing herself to go back in the water, her own face and chest flushed and red.\n\n\"Dad,\" Brie loudly whispered once it was presumed we were alone in our conversation. \"What was that all about?\"\n\n\"I think you know exactly what that was about and it isn't like I could help it.\"\n\n\"Yeah, but it was like really big! Aren't you too old for that?\"\n\n\"Christ. You know how to kick a guy when he's down, you know that? First, no, I am not too old... obviously. Second, how about we don't talk about this anymore. Okay? Now, if you'll excuse me, I have to go apologize to Heather and then figure out how to kill myself.\"\n\nI stood up and began to take a step away but Brie latched onto my hand and yanked me back, turning me around to face her.\n\n\"What?\" I was a bit annoyed.\n\n\"Nothing,\" she responded with a sly grin on her face. \"Just needed to make sure that thing went away.\"\n\n\"Oh, for Gods sake.\" I yanked my hand away from her and began to walk away.\n\n\"Have fun! Be a good friend!\" She called out the same words that I had been saying to her every time she went out since the time she was 5-years-old. It was a bit of an inside joke with us at this point but, I admit, it put a smile on my face. Thankfully, the shame I had felt just moments prior was gone and my relationship with my daughter, seemingly ruined at the exact same time, was as good as ever.\n\nHeather hadn't even gotten to the water yet and I ran to catch up to her. After a quick apology, something she told me was absolutely unnecessary, we made a bit of small talk while floating in the water. Over the course of the conversation three things came out; First, that she thought I had a nice looking dick. This was a compliment that I reluctantly accepted and, though I tried not to think about it, I found myself being unable to stop smiling. Second, I agreed to allow her to trim my pubes. Her reasoning in not allowing me to groom myself was that, just like any haircut, having a second party do the work yields far superior results. Third, we were going to get together for a drink after our respective group dinners that evening.\n\nUnfortunately, drinks never happened.\n\nThe rest of the day at the beach was fine. Indeed, there were a number of locals that moved up and down the beach trying to get business from the tourists. Whether it was cornrow braids, \"island\" jewelry or plain ol' fashioned cheap drugs, there seemed to be access to everything one could imagine. Yet, strangely, while there was no hesitation to directly confront the females on the beach, as soon as I (or other men with their groups elsewhere) stepped in, the aggressive nature stopped and the pitch was dropped. While I admit I actually wanted to spend more time with Heather, we found ourselves focusing our attention on the groups we came with, guilty in our desired abandonment and confident we would see one another again soon.\n\nFor me, as opposed to time spent with Sara and Melanie, who seemed content and enjoying the conversation with one another, I spent my time with Brie and the rest of the girls. One of the things that is so often not discussed in maturing is that, while outside forces and those who are doing the growing themselves may want to speed things up and \"get right to\" adulthood, we are still talking about young people and those young people, when outside influences are not creating feelings of self consciousness, want to have fun. Where am I going with this? We played games, we had fun.\n\nWe didn't have any props for our games. No bean bags. No balls. No inflatable slides or bounce houses. No strap-ons for ring toss. But, that did not mean we weren't still able to create things on our own. We ran silly relay races. We created obstacle courses and played silly games we made up on the spot. We got loud and boisterous at times, making me feel a bit bad about those on the beach who were looking to relax and become one with nature, but I was having so much fun it just didn't dawn on me to stop. I saw lots of bouncing breasts, they saw my bouncing dick. When games required crawling, I saw a healthy share of pussy and asshole. And, while I can admit that I was not intentionally looking for these moments, I wasn't shying away from them either.\n\nOf course, these weren't board games, so whenever we got hot or dirty with sand, we went in the water to cool off. Whenever we needed to reapply sunscreen, we did. For certain girls in the group, sunscreen time was also a time to torment me.\n\n\"Mark, can you get my back?\"\n\n\"Mark, is my butt covered enough? Can you get the spots I missed?\"\n\n\"Mark, do you need any help with your sunscreen?\"\n\n\"Mark, is the sunscreen streak-y on my boobs?\"\n\n\"Don't be embarrassed. You yourself said we are all adults now.\"\n\nIt was only a few of the girls, thankfully. Most of the girls were a bit more typically reserved as I would expect considering the circumstances. But, even though most of the process was innocent it didn't change the fact that I was surrounded by healthy, attractive, teen girls who were rubbing themselves and one another to a glistening shine. Small tits. Big Tits. Naked tits. Small Asses. Round Asses. Curvy Asses. Manicured pubic hair. Fully shaved vulva. So, when I let me guard down and relaxed just a bit well, things started to happen. Some times, I let it go. They were right, these things happen and everyone was technically an adult. One time, I chose to just walk away.\n\nAfter excusing myself from the group of girls and letting them know that I was going to be joining the other moms for a moment, I heard a couple of giggles but did my best to play it cool. Walking back toward the moms I was greeted with raised eyebrows as I strolled over with what was obviously a much chubbier cock than usual.\n\n\"Girls, got you hot-and-bothered, Mark?\" Melanie actually pulled down her sunglasses to offer me that stereotypical, raised-eyebrow look that I placed somewhere between seductive and accusatory.\n\n\"Oh, typical male,\" Sara chimed in, her eyes glued to my dangling manhood where, if size is of importance, wouldn't be getting much bigger than that on me at any point. \"Always looking for younger women.\"\n\nWhen I laughed, Sara simply rolled over away from me and it was then that I realized she wasn't kidding. I briefly thought about saying something but found Melanie mouthing at me to leave it alone. Apparently their conversation was not as good as I thought.\n\nThe day was wonderful. I got to know some of the girls that I hadn't previously and, other than some very obvious flirting that I mostly wish hadn't happened, the nude beach was a total success. I almost wished we didn't have to leave.\n\n-------\n\nWhen we got back to the resort Sara asked if she could shower and get ready first and I readily accepted. Based on how magazine ready she always looked, I figured it must take a while for her to do her makeup. It wasn't as if I found myself alone, however. The day at the beach had really done something for our relationships and Brie and a number of the girls asked me to join them at the bar for some drinks. Without hesitation, I accepted.\n\nIt was odd that it was at the bar that I started to notice the same girls that I had seen fully nude for multiple hours earlier in the day in a different, sexually adult manner. Odd in that they were now clothed or, at least clothed in mostly very tiny bikinis. It wasn't a total shock that they were each appealing in their own way, it was just a shock that each of them was having such an affect on me. Indeed, it was as if they were growing in front of my eyes and my evolutionary predisposition to breed started taking over. It honestly felt like the years of being without a woman in my life were catching up to me quickly. My hormones were trying to get loose! Thankfully, I figured a couple of drinks was enough and went back to my room before my attraction became more physically obvious.\n\nI entered into our room and round Sara sitting on her bed, back to me, slowly brushing out her dark hair.\n\n\"Okay for me to hop in?\"\n\n\"Yeah, go ahead,\" she replied softly.\n\nI admit I thought about relieving some of my pent up testosterone in the shower. The reality was that I got into the shower with an erection and left the shower with it down just enough to pass a scrutiny test. The only reason I didn't was my fear that my roommate could walk in at any moment. Thankfully she never did, but not because she was preoccupied getting dressed.\n\nI had just finished wrapping the towel around my waist when I heard a couple of sniffles coming from the room. Peaking in, I found Sara on her bed, back to me, shuddering gently from a series of tiny sobs.\n\n\"Sara, hey,\" I inquired in as calm and soothing of a voice as I could muster, \"what's going on? Are you okay?\"\n\nAfter years of having periodic issues with Brie, I kind of expected the same response I got from my daughter. Basically a verbal indication that she was fine but just wanted to be alone. Sara responded differently.\n\n\"Yeah, this happens sometimes,\" she responded as she rolled over toward me, swinging her legs over the side of the bed and sitting up. \"Not necessarily sure why, I just kinda' deal with it. Sucks that it happened on this trip though.\"\n\n\"Anything that I can do?\"\n\n\"Actually, yes.\" She was without makeup but still lovely. Her large breasts hanging naturally, her face weary from tears but still soft and appealing. \"You can come and lay with me.\"\n\n\"Lay with you?\"\n\n\"Yes, just come and lay with me. Put your arms around me. Hold me for a bit.\"\n\nI admit I was shocked at the request. This was the woman who basically breathed strength and independence yet here she was, emotional and vulnerable and asking me for help.\n\n\"Yeah, absolutely. I can lay with you.\"\n\nOn the bed, I got behind her in a spooning position and she reached back to pull one of my arms over her, literally placing the palm of my hand on her warm, full breast and pulled me tight to her.\n\n\"Can you lose the towel?\"\n\n\"Uhm, yeah. Okay. Do you want me to put anything else on?\"\n\n\"No. Just hold me tight.\"\n\nI did as I was told.\n\n-------\n\nI think I actually fell asleep (I think we both actually did) when I was startled by a quiet knock at the main room door. Sara did not move but, after a second knock, I decided to check it out. It was difficult to pull on a pair of shorts over the erection that had formed in the relaxed warmth of the nap but, it was nothing I had never dealt with before and I made it work.\n\n\"Hey, Dad,\" Brianna greeted me as I opened the door a bit. \"Everything okay? You and Sara missed dinner and now the whole group is talking about going into town to a club.\"\n\n\"That's great. Have fun but be careful, okay? Remember what I told you about staying in groups.\"\n\n\"I know, I got it. You are okay though?\"\n\n\"Oh, yeah. Sara just isn't feeling the greatest and she asked me to stay with her. Just trying to be a friend.\"\n\n\"Awww. That's sweet. Be good to her.\"\n\n\"I'll try, honey. Actually, you might be able to help me. Do you think you might be able to run down to the gift shop and buy some massage oil?\"\n\n\"Massage oil?\" The look on her face was priceless.\n\n\"She isn't sick to her stomach. She is just a little out of sorts. I thought a massage might loosen her up.\"\n\nHaving been an athlete for so many years, Brie knew that I was capable of giving a pretty good massage. I had been helping her work out kinks in her back, shoulders and calves for some time and always with great success.\n\n\"Oh, yeah. Sure. Gimme' a couple of minutes.\" \n\nShe came back about 10 minutes later and handed me a small bag with massage oil and about 8 small votive candles. \"Front desk says not to burn the room down.\" \n\nBrie turned without another word and started walking away and I was about to close the door when she spun around. \"Oh, yeah. I forgot. Have fun,\" she said with a smile and a wink.\n\n\"Brie, it's not like th...\"\n\nI couldn't even finish the sentence before she cut me off. \"Dad! Seriously. Have fun. And make sure Sara does too.\" And she walked away. Not another word.\n\n------\n\nI was lighting the candles, placed strategically around the bed and room when Sara woke up.\n\n\"I figured this might help you relax,\" I informed her. \"Get on your stomach, I'll give you a massage.\"\n\nSara didn't need to be told twice and rolled over onto her stomach, taking time to reposition her large breasts underneath herself and get comfortable. I pulled off my shorts and straddled her back, pouring a significant quantity of oil onto her and immediately started to work her stress out.",
        "\"Oooooooooohhh,\" she moaned, her relief obvious in her voice and via my touch, \"you know what you are doing, don't you?\"\n\n\"My kid is an athlete and I can't afford to have a professional do this whenever she is sore. It is amazing how much you can pick up online and with a bit of practice. I just hope I can help.\"\n\n\"Oooooh, God. Just keep doing that.\" I smiled to myself as I really hadn't touched much on her other than her shoulders and she was making it sound like she was about to climax.\n\nI settled into a system and I worked methodically around her body: shoulders and arms, back, calves and hamstrings, butt. The entire back side of her glistened from the oil in the candlelight as I worked each ass cheek, going much more thoroughly (and erotically) than I ever would on my daughter but for an enticing adult female who seemed very much in need of the relief. I was bold in the movement of my hands, firmly rubbing the inside of her thighs and allowing the sides of my fingers to brush up against her professionally groomed pussy, which absolutely radiated with heat.\n\nAfter some time I requested she flip over onto her back and she did as she was told wordlessly, not only responding to my direct request but also spreading her legs open a bit, to me an obvious response to enjoying my touch.\n\nAgain, I worked down her body, professionally when I needed to, erotically when I thought appropriate. Her arms became jello in my touch, her nipples the exact opposite. Similar to her back, I started at the extremes and worked my way into the middle. Hands and feet, arms and calves, breasts and thighs, hips and pubis. There was only one final, obvious spot I had not offered direct attention and I was gratified to find her labia absolutely engorged and a small amount of milky white liquid dripping from between her brown lips. The only question I had for myself was: should I be so bold?\n\n\"Sara,\" I whispered.\n\n\"Yes.\" She responded in a statement, not a question. She was not inquiring as to what I wanted. She was responding to what she wanted. It couldn't have been more clear.\n\nI sat in between her legs and wrapped her lower legs loosely around my back. The sight that was presented to me was like an erotic dream and everything about her at that moment screamed sex. Her hair was strewn about as if in a shampoo commercial. Her breasts, flushed and full from arousal, protruded higher from her chest than natural breasts should and the folds of her sex begged for attention.\n\nI continued with both hands at first, stroking her inner thighs and just barely grazing her lips. With each carres, my attention became more focused, more centered, zeroing in on her clitoris and the relief attending to it could provide. Saras body also began to respond rhythmically to my movements and in the buildup to her climax her breath became faster and more shallow, her legs wrapped tighter around me, nipples tightened and her hands grasped the sheets as though she was hanging on for her safety. \n\nWhen she finally came over the edge and I assessed the situation I was presented with two obvious truths. First, Sara had needed that orgasm and she was physically spent. Her breasts were no longer high and proud, her muscles no longer tense, she was loose and yet still catching her breath all while in a practically unconscious state. Second, I was left with an extremely painful erection.\n\nI slowly unwrapped her legs from around me and got a warm washcloth from the bathroom that I used to clean her up. She did not resist as I shifted and moved her body, using gentle strokes to wipe up the wetness covering the most intimate areas of her body. When done, I simply lay a sheet over her and blew out the candles, knowing that the best I could offer her at that point was some peace and quiet in her state of pseudo post coital bliss.\n\n------\n\nI hadn't realized how late it was when I left the room and made my way out to the beach for a walk, finding Heather leaving the bar with her group.\n\nShit. Heather.\n\n\"I am so sorry,\" I rushed over to explain. From the look on her face I could tell she was hurt but at least seemed to be willing to give me the benefit of the doubt. \"I had a friend in need. Someone who asked me to be there for them and I just didn't feel comfortable leaving. I am sorry I was unable to let you know ahead of time.\" \n\nThankfully, her features softened.\n\n\"I believe you. And it isn't to say I didn't have a nice evening,\" she responded.\n\n\"I need to go for a walk, care to join me?\"\n\n\"I was actually going to go to bed.\"\n\n\"I understand. I guess I kinda' blew my chance.\"\n\n\"Oh, don't be silly. You were helping a friend. Besides, who is out on one strike?\" I smiled and there was a moment of silence before she continued. \"Tell you what, wait by the pool and I am going to get my sister back to our room. I will meet you out here in a few minutes.\"\n\nWe spent the late evening hours enjoying the company. We never did have the drink and, if I am being honest, I never did get the satisfaction of the physical contact I hoped we would have had if we had continued our evening onto the dancefloor like I had imagined it. But, it was obvious that Heather and I had an attraction for one another and, even beyond that, a legitimate bond. I looked forward to seeing where it could go.\n\nPart 4:\n\nAfter getting in late the previous evening and never having had gotten any release from a day and evening full of erections, I can't say that I was very well rested the next morning when I woke up. Heather and I had decided to go back to our respective rooms when we heard my group coming back in from the club. We actually ran into Brie and the other girls, all flushed from dancing and glistening from sweat, in the stairwell to our rooms and they confirmed that they had had a wonderful time dancing with one another. Every one assured us that they needed a shower before bed and Heather and I smiled at the girlish laughter that arose when they playfully argued about who would get the shower first or if they would just end up sharing. Before parting, Heather even surprised me with a kiss. All of these things, combined with the lack of sleep, meant that the massive boner I woke up with would not be tamed by mere un-sexy thoughts. In fact every time I tried to think of something unappealing all I ended up doing was getting sexy imagery in my head that made things worse.\n\nDrudging my way into the bathroom that morning and desperately needing to pee, I was greeted by Sara who was also nude and in the middle of what I assumed was a lengthy makeup process.\n\n\"Good morning,\" she greeted me in a somewhat relaxed, sultry voice.\n\n\"Good morning,\" I responded in the only croaking baritone I could manage.\n\n\"Before we even get our day started I want to thank you for last night,\" she said. \"Your hands were magic and you gave me exactly what I needed.\"\n\n\"My pleasure,\" I grunted grogily. \"Happy to help a friend.\"\n\n\"Taking a shower?\"\n\n\"No, just need to pee.\"\n\n\"Pee? Oh, honey, I don't think you are going to be peeing any time soon with that thing.\" She was looking directly at my cocks reflection in the mirror. \"Do you want a minute alone?\"\n\n\"No. Thank you. I think I maybe just need to walk it off.\"\n\nI slugged my way out of the bathroom and into the main room, only to confront Melanie and Emily prepping themselves in the mirror. Emily immediately turned when sensing the motion and her eyes practically popped out of her head when they directed their attention to my bobbing member.\n\n\"Oh, my God,\" she exclaimed in a gasp while trying to stifle a laugh.\n\nAnnoyed with the lack of privacy, I turned into the other room.\n\n\"Mark, wait,\" called out Melanie, but I wasn't listening.\n\nI stepped into the room where approximately 8 girls were strewn about. All were dressed (or at least more covered than I was, no matter how small their swimwear) and seemingly waiting for Gina. There were a couple of gasps and a couple of phones that had previously been the object of attention popped up in a desperate attempt to take a picture but Gina actually saved me. Grabbing a used towel off the back of a chair, she simply wrapped it around my waist and walked me into the bathroom, hushing the clamor of the girls behind her.\n\n\"Good morning, Mark. Nice of you to join us today. I didn't realize the stage show started so early today.\"\n\n\"I need to pee,\" was the only thing I got out of my mouth. I wasn't embarrassed, I wasn't ashamed, I was annoyed.\n\n\"Go here, take your time.\" Gina backed out of the room and left me alone, closing the door behind me.\n\nThe cold shower started as painful but, as my only defining characteristic subsided I was able to warm up the water and finally get myself clean, though no more satisfied than I had previously been. It became obvious to me that everyone had left the two rooms and I was able to get dressed before Brie came to my room, letting herself in with what I only assume was Sara's key.\n\n\"Dad. What is going on here? Again?\" She was still speaking in the same whispered tone that she had when we were in public previously.\n\n\"I know, I know. It's honestly just getting worse.\"\n\n\"Dad, you need to get some release, you know?\"\n\n\"Excuse me?\"\n\n\"C'mon! You know what I am talking about. You said it is getting worse and it is only going to continue to get worse until you take care of it.\"\n\n\"Take care of it?\"\n\n\"Yeah! Dad, you have to cum!\"\n\nWhat. The. Fuck. \n\n\"What the hell do you know about this?!\" I had always had an open verbal relationship with my daughter but this caught me off guard. I immediately regretted my tone and saw a hint of hurt in her face. \n\nThankfully, she remained calm.\n\n\"Dad, I get it. You're frustrated. But this trip is supposed to be about fun and relaxation. You are never going to be able to relax unless you get rid of that pent up... stuff. Trust me on this, okay? I'm not a little kid. I know about things too.\"\n\nI, of course, knew she was right, it just wasn't the thing you wanted to hear from your kid when you are already in a bad mood.\n\n\"I'm sorry, you're right,\" said with a sigh. \"The last couple of days have been something else. Certainly not what I am accustomed to.\"\n\n\"I know. I also know that some of the girls were teasing you yesterday at the beach, trying to literally get a rise out of you. I actually said something to them and they said they won't taunt you any more. Unless you want them to. I mean, I bet a few of them would sleep with you if given the chance. This morning really just confirmed that.\"\n\n\"What?\"\n\n\"Dad, you need to get laid!\"\n\n\"Brie, we have an extremely open relationship. I am glad we do and I am glad we have always been so up front to each other about everything. But, I think this may be crossing the line.\"\n\n\"You might be right.\" Brianna turned away and started walking to the door before turning around and addressing me with one last statement. \"I'm going down to breakfast. You should join me. I'm sorry if I made you uncomfortable. You might be right with what you said. Then again, I might be right too.\" She opened the door and left.\n\n------\n\nI didn't join my daughter for breakfast. I instead went to the fitness center to try and work off some of the pent up \"stuff\" that Brianna had been talking about. Yes, I realize that you cannot \"work off\" full balls but I am a firm believer that you can work off the tension and emotions that were otherwise causing my issues. It went well too, a bunch of miles on the treadmill, a bunch of heavy things lifted. I can't say that I felt great, but at least my body was distracted.\n\nI ran into Heather as I left the gym. She surprised me when, even though I was completely gross, she greeted me with a quick hug and another kiss. \n\n\"Busy day today. How about you, what are you up to?\"\n\n\"Not sure, honestly. May just head back to the beach,\" I responded.\n\n\"Oh, yeah, speaking of which, I saw Brie at breakfast and we agreed to do her bikini wax today. How about I groom you up too?\"\n\n\"You're on vacation. I don't want you to have to work.\"\n\n\"It's no problem, I am glad to help. She gave me her room number, why don't you meet me there in about 30, okay? It will be easier to keep everything in one room.\"\n\nWhile I didn't relish the circumstances, I did want to spend as much time as possible with Heather so I rushed back to my room and showered for the second time before heading over to meet her.\n\nThe security latch held the door open once I got there so I just walked in and was greeted by Brianna in the short hallway entrance to the room. She was checking herself out in the mirror, completely nude, pre-wax.\n\n\"I should at least leave something, right?\" She was speaking directly to me though still probing her pubic growth in the mirror.\n\n\"Wrong guy to ask, honey. Wrong relationship, wrong generation.\"\n\nI caught the reflection of her sticking out her tongue at me in the mirror as I walked around the corner to greet Heather.\n\n\"So, where are we doing th...\"\n\nI cut myself off in mid sentence when I caught a visual I wasn't expecting; Tiffany, on the bed, fully nude, spread eagle and legs pulled back with her hands, a very nervous smile on her face, a single teer dripping down the side of her eye, one side of her spread vulva bright red... but completely hairless.\n\n\"Okay,\" Heather said to her, \"You know what it feels like now. Not so bad, right? Do you want to finish it up?\"\n\n\"Yes, let's do this,\" was her reply in a quivering laugh.\n\n\"Mark,\" Heather instructed me, \"hold her hand. Give her something to squeeze.\"\n\nTiffany, who had been pulling back her legs like she was giving birth let go with one of her hands and reached out to grab mine. It was obvious that she needed some emotional support so I did as I was told and also, at Heather's instruction, grabbed the leg she let go off and pulled it back.\n\n\"Okay, this one is going to hurt like the last one but we'll make it quick.\"\n\nHeather applied the warm wax, a cloth strip and yanked. Tiffany squeezed my hand tight but nothing so much that I legitimately thought she was in real pain.\n\n\"Great job,\" Heather said in a calming, professional manner. \"Time for your butt. For this it will probably be best if you get on all fours.\"\n\nTiffany did as she was instructed and Heather, comfortable with drafting me as her assistant, explained that it would be my job to hold her young subjects ass-cheeks apart as to give her the maximum workable area. Of course I looked at the subject while I was doing so and was greeted by a browned patch of skin that wanted to wink at me.\n\nThe wax went on, the wax went off. Tiffany gave a sigh of relief when told the waxing is done.\n\n\"One last thing though,\" Heather informed her. \"Sorry kiddo, you might think this is the worst out of all of it.\" While Tiffany repositioned herself onto her back, she called me over to her little work station and gave me my instructions. I was a bit shocked, a bit nervous but Heather assured me it would be for the best and suggested I do it as quickly as possible.\n\n\"Tiffany,\" I explained, \"Heather wants me too put this on you.\" I held up a bottle of post wax balm.\n\n\"Yeah, I heard,\" she responded with a smile. I obviously hadn't thought about the fact that we were standing right in front of her but it was also my way of talking through the process. \"Are you okay with this?\"\n\n\"Yeah, it's fine.\"\n\nI asked Heather if she had a rag or something to use but she instructed me that it would be too abrasive on the extremely sensitive skin. \"Just use your hands,\" she instructed, \"and be gentle.\"\n\nTiffany pulled her legs back and, one more time, brazenly exposed herself to me. For my part, I loaded some of the balm on the palm of my hand and fingers and gave myself a little internal pep talk to psych myself up for the situation. When my hand touched her skin her reaction was not that from a porn. She did not moan, she did not \"ooh\" or \"aah.\" She screamed.\n\n\"Holy shit, that burns!\"\n\nTiffany clamped her legs together so hard and so fast that she literally yanked my hand down and pulled me forward.\n\n\"Tiff, honey, you need to let him continue. The burning will go away quickly,\" Heather immediately called over.\n\nAfter a second of contemplation and catching her breath, Tiffany opened her legs back up (though tentatively not as wide) and I finished covering the entire area with the balm, my fingers weaving in between the folds of her lips and across the pucker of her asshole, leaving the entire region a glossy shine. I could tell she was having conflicted feelings as to the gentle contact. One one hand the skin was still tender, on the other hand, I watched her eyes go wide as my hand crazed across her exposed clit.\n\n\"Okay, Mark, now gently blow on it.\"\n\nOh, for God's sake.\n\nI bent down and gently blew cool air across the entire region. This time the response was a bit more positive. The balm had a pleasant smell and I could admit that being so close was doing a bit for me in the way of arousal. Concerned as to what state I would be in I was relieved when, after a moment, Heather had me stop and moved me to the side while she held up a mirror for Tiffany to be able to thoroughly see her newly groomed pussy.\n\n\"Was it worth it?\"\n\n\"Yes! Oh, my God, it is so clean and smooth,\" Tiffany exclaimed. \"Hurt like a bitch but worth it. Thank you so much!\"\n\nTiffany popped up and wrapped Heather in a hug.\n\n\"Glad you like it. Tell your friends! My shop and studio aren't too far away from where you live.\"\n\nBrie went through her process and, whether it was the forewarning she had gotten from her friend or she was just tougher, seemed to handle it pretty well. Heather did not have me rub any balm on my daughter, Tiffany did that while the girls giggled and laughed and, after they were done, they went back to Tiffany's room to \"air out a bit more.\" Both girls were left with two finger wide landing strips right at the tops of their pussies, clean and neat and a reminder that they were women, not bald like little girls.\n\n------\n\nOnce they were gone, Heather had me strip down and prepare for my grooming.\n\n\"I actually set you up for that, sorry if it made you uncomfortable.\"\n\n\"Set me up for what?\"\n\n\"Putting the balm and blowing on Tiffany. I would normally do that myself in the salon. The reality is that she and Brie thought that it would be funny and I decided to go along. Call it my own mid-life crisis; trying to be \"cool\" instead of the adult in the room.\"\n\n\"You're serious, she and Brie wanted me to have my hand on her crotch?\"\n\n\"You have to know she likes you. Tiffany that is.\"\n\n\"Yeah, Brie has mentioned that over the years. Can't say I know why. I am just an average dad.\"\n\n\"Oh, don't sell yourself short. And, don't discount a girls crush. It means a lot to them while it is happening.\"\n\nUnlike the wax jobs, where the superfluous hair was all caught up in the sticky wax, since Heather was going to be using clippers on me, she had me just standing on a towel to hopefully catch everything.\n\n\"So, what do you want here,\" she asked me as she gazed inquisitively at my junk.\n\n\"What do I want? I think you are forgetting why I am here. You and Brie were the ones to insist on this.\" I was practically laughing at the situation as this was so far out of my lane of normal life.\n\n\"I see your point. Well, as long as you are good with it, I will clean you up to quote-unquote-ideal from a woman's point of view, okay?\"\n\n\"Hey, you're the pro.\"\n\nHeather got a chair in order to get her face down to a lower level with a more direct viewpoint and, after a moment of additional inspection, started clipping. When I had agreed to this I was not oblivious to the fact that, in order to groom me, Heather was going to be handling my penis. I got it and I knew that I could be an adult about it. What I had not thought about were the other factors that would possibly affect me: I was tired, I had blue balls and I had just been rubbing the most intimate part of an attractive, younger woman. Plus, the buzzing of the clippers themselves seemed to be at a frequency that turned me on. In short, I again got hard.",
        "\"Sorry... again,\" I groaned.\n\n\"Mark,\" Heather inquired as she seemingly disregarded the erection bobbing in her face and continued her work, \"do you think it is strange that I seem to know quite a bit about your sex life? Or, as I have been informed, your lack of sex life?\"\n\n\"You too? Jesus, was it Brie? I don't know what the hell has gotten into that girl.\"\n\n\"No, not Brie. Though it actually doesn't matter who I heard it from. The only thing that I can say is that it was from multiple sources that I wouldn't have expected to speaking about the same thing.\"\n\nHer hands were warm and the simple touching motions she had on my cock, practical as they may be, meant that I wasn't going to lose my erection any time soon.\n\n\"What can I say? It's been a while and this trip has not exactly been easy on my hormones. But, it doesn't change the fact that I think that everyone is blowing things out of proportion. Yeah, I have been getting some unexpected erections. Considering the circumstances, I don't think it is completely unwarranted.\"\n\nHeather, who had been working with clippers, continued about her job and began slathering my shaft with shaving cream, obviously looking to trim down any hairs that grew along it. I thought about the conversation we were having and, while she had a professional job to do, she had to know what she was doing would not help my situation.\n\n\"What about Tiffany?\"\n\n\"What about her?\"\n\n\"She wants to have sex with you.\"\n\n\"Heather, I can only hope you are kidding. She is a kid, I am an adult. She is friends with my daughter. There is zero chance I would have sex with her.\"\n\n\"Okay, fair point.\"\n\n\"I guess I blew my chance at sex on this vacation when I stood you up last night.\" I was probing with my comment and, honestly, it was a bit bolder than I normally would have been in a normal state of mind.\n\nHeather first looked up and smiled, then stood up and wrapped me in a hug. \"That's sweet of you. But I can't quite yet. There are things I need to take care of first. I hope we can keep getting to know one another though.\" It took everything in me not to sigh my disappointment out loud. She looked me in the eyes and smiled, and gave me a quick kiss. \"I think we have a connection though and would love to see where this goes.\" I simply smiled and kissed her back. Friendship and connection were not going to relieve my swollen nuts. Though, that was not my biggest problem.\n\nHeather had returned to her chair and finished everything up. She had a warm, damp towel and had just finished cleaning up my junk when we were both startled.\n\n\"Oh, uhm...\"\n\nTwo of Brie's roommates were standing in the entrance way of their own room just staring at me, buck naked, and Heather, on a chair with my dick right in front of her face.\n\n\"The door was propped open...\"\n\nShit.\n\nOf course, I wanted to shoo them out but, in hindsight, I know that would have been a bad idea. Heather played it cool and just continued about her business as if it were the most normal thing in the world to walk in on.\n\n\"Oh, sorry about that. We just finished up with Brianna. If you are looking for her, I think she went with Tiffany to her room. If you don't remember me from yesterday, I'm Heather.\" The girls said their hello's but still stood in the entry awkwardly for a moment, eyes glued to my dick. Thankfully, the nervousness I was feeling had me rapidly shrinking. As Heather realized my shrinking state, she decided to continue acting as if everything was normal. \"Ladies, you were at the beach yesterday, so you saw Mark previously. Can we get your honest opinion? Is this better?\" An odd thing happened in that, with the direct engagement, the two seemed to relax and actually stepped further into the room, still staring at my groin but now with assigned purpose.\n\n\"Much neater.\"\n\n\"Yeah, much cleaner. So, yeah, better.\"\n\n\"See, Mark,\" Heather said as if she was concluding a long conversation, \"always trust a professional. Why don't we get everything cleaned up and leave the girls to the room.\"\n\n\"Actually, we were just looking for Brie. We can go see her in Tiffany's room.\"\n\nThe two girls left the room and Heather and I could hear clear laughter in the outdoor hallway, something that made my face burn bright red with embarrassment. \n\n\"Easy there, Tiger,\" Heather said as she saw me get flushed. \"Not a big deal. Nothing to get worked up about.\"\n\nAfter everything was cleaned up we locked up the room and said our goodbyes. Heather was spending the rest of the day and evening off-resort with her crew of girls. I was left to my lonesome self.\n\n-------\n\nAs I should have expected, news traveled fast.\n\n\"Tell me, Mark,\" Melanie asked me after I bumped into her at the beach and situated myself next to her, \"why on earth did you wait until after we went to the nude beach to get yourself all trimmed and groomed.\"\n\n\"The opportunity presented itself a bit too late, I suppose. That is, it is only too late if you are saying we aren't going to go back to the nude beach.\"\n\n\"Ahh, touche,\" she responded with a wink.\n\nMelanie had really surprised me in her rapid change of demeanor on the trip. At first she seemed self conscious and nervous. Now, laying out in the sun, topless and with what I can only assume was a borrowed thong, it was as if she was born for this life. And, I can admit, with a healthy glow to her skin, she really did look great.\n\n\"I actually thought you went with the group. I guess I was mistaken.\"\n\n\"I don't know what you are talking about. Did they go back to the nude beach?\"\n\n\"No, shopping in town.\"\n\nI had heard Sara and Gina speaking on the way down about wanting to head into the little tourist town to go shopping at least one of the days. I had told them at that point it didn't particularly interest me so apparently that is why it wasn't mentioned. I was surprised to hear that Brianna hadn't told me.\n\n\"Everyone went?\"\n\n\"No, not everyone. I am pretty sure a number of the girls are still here on the resort property. But, both Sara and Gina went and I think at least about 10 girls.\"\n\nThe timing could not have been better as Brie, Tiffany and 3 other girls strolled by on the beach in front of us, Tiffany being the first to spot us and wave, Brianna and the others following suit. All 5 were topless, Brie and Tiffany were in the tiny micro g-strings they had prepared themselves for and may as well have been nude.\n\n\"So, what are you up to then,\" I asked Melanie as the girls passed by.\n\n\"A little sun, a few drinks, making the least of my time,\" she responded with a coy smile.\n\n\"Mind if I join you?\"\n\n------\n\nA few drinks went down quickly and easily and Melanie and I found ourselves getting more and more flirty as the alcohol broke down any sense of public decorum. It was good that we were pretty much alone on our section of the beach because at various points, our alcohol induced sense of impropriety found Melanie practicing her lap dancing skills in pretty raunchy form. When we both admitted that we really needed to pee we made our way to Melanie's room.\n\nIt was not a surprise when, stepping into her bedroom, where she was going to put back on her swimsuit bottom though instead stumbled onto her bed, she pulled me with her and \"one-thing-lead-to-another.\"\n\nThe sex was a relief and, with the alcohol, I believe neither of us had any apprehensions as to the fact that it was our first time with one another or the first time in quite a while for either of us.\n\nWe rolled around and played, we kissed and we petted.\n\nShe gave me a blowjob, I licked her pussy until she quivered.\n\nI sucked her nipples, she sucked my earlobes.\n\nShe asked me to put a finger in her ass as she was about to orgasm, I asked her to just give me a moment after I came.\n\nWe got sweaty and sticky and flopped on the bed when we were done, both of us breathing heavy but, at least for me, somehow not completely fulfilled.\n\nAfter catching our breath each of us cleaned off in our respective showers and, after I was done well before she was, agreed to meet back at the same spot on the beach that we had previously.\n\n\"Hey,\" I said to her as she walked back, her bare breasts moving tantalizingly with each uneven step in the sand.\n\n\"Hey to you,\" she responded.\n\n\"That was fun.\"\n\n\"Yeah, it was.\"\n\nThere was what seemed to be an awkward silence in between us as she spread out a towel and again got herself situated. She asked me where the girls were.\n\n\"Not sure, to be honest. I haven't seen them here on the beach.\"\n\n\"Okay. Just curious.\"\n\nThe small talk was excruciating. It was obvious that there was something on both of our minds but neither of us could get it out. The alcohol had very much worn out.\n\n\"So, uhm...\" I made an attempt to start a conversation but she mercifully cut me off.\n\n\"You obviously feel it too,\" she said.\n\n\"Not sure what you mean, but I feel something.\"\n\n\"Well, I guess I will just say it.\" Melanie sat up and faced me. \"The sex was fun. But, if I am being honest, it felt like something was missing.\"\n\n\"It felt like a one-night stand, right?\" I too sat up, thrilled that she had addressed the obvious 10,000 pound gorilla in the room.\n\n\"It was a physical relief but I just didn't feel like we had a connection beyond that.\"\n\n\"It was good though,\" I said, making sure she didn't think I wasn't satisfied.\n\n\"So good!\"\n\n\"Just no lightning.\n\n\"\n\n\"Nope.\"\n\nWe both had silly smiles on our faces and started laughing.\n\n\"Does this make us sluts?\" Melanie had an excited, wide eyed smile on her face. She was excited at the prospect of being naughty.\n\n\"Well, not to rain on the parade, but I think it would take a bit more than one session of sex with a friend to make us sluts.\"\n\n\"Damnit, well that is no fun. I thought for once in my life I could be a bad girl.\"\n\nI knew exactly what she meant and I also knew that, even though it was still weird coming from by daughter, Brie was right. I did need to get out there, to see women, to not just be a dad. Especially to a single child that would be moving out of the house in meer months.\n\nWith the weight off of our backs that it was okay to have just had sex for no other reason than having fun with a friend, Melanie and I enjoyed the rest of the afternoon. Plus, even without additional alcohol, the endorphins from the sex had each of us relaxed and at ease.\n\n-----\n\nStopping over to see us, I really focused on the fact that, other than the tiny patches of lycra that covered their newly waxed kitties, Brie and Tiffany were a picture of physical opposites. Brie was tall and lean; Tiffany was short and thick. Brie had high-chested, perky breasts; Tiffany had large, full breasts that swayed and bounced with each uneven step she took in the sand. Brie had blonde, straight hair and an almond shaped face; Tiffany had dark, curly hair and a round, heart-shaped face. Brie had pale, almost Nordic skin that was gently sun-kissed; Tiffany had olive skin that had soaked up the rays easily and she, after only a couple of days, had a dark, even tan. Yet there they were, a picture of opposites, standing in front of Melanie and I in only an eyepatch worth of clothing and both (yes, even my daughter) were incredibly sexy in a very adult way. It was something specifically about the two of them. The other three were attractive girls but that was it, they were girls. Though all 18, only the two of them seemed like women. I felt bad about the thought, especially considering the conversation I had with Heather just hours before. I told her that Tiffany was a child to me and all of a sudden... bam! Woman. Tiffany had one other difference between my daughter in the way she was wearing her suit. Whether accidental or not, the patch of fabric was pulled low enough to leave the top of her remaining groomed pubic hair very clearly exposed. While I had never told anyone this before, that had been a fetish of mine for many years. I felt myself staring. Tiffany was very seriously turning me on.\n\nOne of the girls informed us that they were heading in to get ready before dinner and Melanie decided that we may as well go with them. Getting back to our rooms, we found Sara and Gina trying on some apparently new dresses they had purchased and were planning on wearing to dinner.\n\n\"Did you have sex in our room?\" Gina's question was direct and to the point. Melanie turned bright red, I laughed and looked at her. She didn't seem to know what to say. She had a look of terror in her face, not knowing what to do. I realized afterwards that my reaction actually gave us a few different options as far as how the question was handled but Melanie, cool under pressure when the girls walked in on her grooming my dick, instead just froze up. She stood there like a deer in headlights, face still flushed, staring directly at Gina. \"Well, I guess that answers that,\" Gina responded to the non-response. \"That's cool. I just wanted to make sure it wasn't some random hotel employees fucking on your bed. You can tell me all about it later.\" \n\nMelanie hurried herself into the bathroom and, once there, spun around and mouthed the words \"what the fuck\" to me in wide-eyed amusement. I also hopped into my shower and in the middle of showering the curtain was yanked open and Gina, dressed beautifully in her new dress, said to me \"I heard you got your balls trimmed, just wanted to see them.\"\n\nWhat the fuck, indeed.\n\n------\n\nPart 5:\n\nOn Day 5 everyone felt like seasoned resort pro's. It was determined that nobody needed to go topless anymore as it was no longer a bucket list item or a feeling of rebellion. I did notice that throughout the day, girls were changing their swimsuits more often and I swear one of them had 4 different suits on at different points. And, while it was previously stated the girls didn't need to go topless, it didn't mean that there were any fewer breasts exposed. In fact, every single one of the girls went topless at least at some point during the day. \"Better for tanning,\" it was explained to me.\n\nIt also seemed to be the day that the girls determined that having the parents around was not only not-so-bad, but could be fun too. All four of us were invited to hang out at the pool and, in general, had a very good time with the next generation. Of course, with all of the sexual innuendo games going on poolside and our groups excitement with participating in them, there was certainly more than one cock-eyed glance exchanged between the other parents and I but, as promised, we continued to allow them to experience the resort and have fun.\n\nThe familiarity of the resort and the girls settling into being allowed to act as adults also gave rise to our first regrettable scenario of the entire trip. The good news is that all of our foggy moments could have ended up much, much worse. The bad news is that they happened. In this case, Jamie, one of the girls I didn't know very well, got drunk at the pool and started hitting on a guy. After making out and giving all the wrong/right signs, the guy suggested that they \"take the party elsewhere\" and she agreed. In his defense, I didn't feel like he was predatorial when I was alerted to the situation and stopped them in the hallway, he was just allowing things to progress as she seemed to be pushing them. However, after getting her cleaned up (why I was the parent chosen for the task I don't know) and closer to right-minded, she thanked me, embarrassingly admitting that she went overboard. I lost the evening on the bed of a darkened hotel room with a nude teenager curled up on me, desperate to sleep off the inebriation that had caused the problems to begin with. It wasn't too bad though, I hadn't really napped since the first day and, as I was determined to slide into my geriatric years as quickly as possible, I ended up passing out myself on the bed with her.\n\nI woke up a couple of hours after Jamie and I had fallen asleep and was sweating. It wasn't so much that I was still wearing shorts and a t-shirt, it was that she was still draped over my side and the combination body heat was practically unbearable. Figuring that she was able to handle herself, I started trying to ease out from under her in order to go back to my room. When doing so, however, I woke her up enough that she grabbed me tight and begged me not to leave. As there was nobody else in the room I felt bad enough to agree to it. Nonetheless, I took off my shirt and shorts, leaving on a pair of thin cotton boxers to \"cover me up.\"\n\nGood enough. Or, at least so I thought.\n\n------\n\nPart 6:\n\nI woke up on day 6 with not one, but two nude, teenage bodies draped over me. One was obviously Jaime, the other, unfortunately, was Tiffany. To make matters worse, my dick had popped out of my boxers and I was sporting extreme morning wood. That's what I got for being the good guy, I guess.\n\nFor the second time in less than 24 hours I tried my best to wriggle out from under the soft, teenage flesh and for the second time I got reprimanded and whined at to stay where I was. This time I stood my ground and said that it was time to leave. As I got out of bed I realized 2 things: First, I needed to find my clothes. Second, I really had to pee. With the second item instantly obvious that it was the far more pressing of the two, I shuffled my way into the bathroom to relieve myself.\n\nI found myself standing there, door not completely closed as I didn't want the latching sound to wake anyone else, trying to figure out how to make my boner go down. While this was certainly not the first time I had woken up with a night time erection, it was the first time that I just couldn't will it away. In fact, it felt like every time I even thought about anything... anything at all, my dick just bobbed a little higher and a little stiffer than previously. I was contemplating this, my hands back on the vanity, my boxers around my knees, my hips thrust forward, my cock pointing to the ceiling, when the door swung open and a sleepy Tiffany walked in and immediately sat on the toilet to relieve herself. I stood frozen as she appeared not to notice me at first, peeing like I felt I had to, her face in her hands. When done, she wiped and stood up, practically bumping into me.\n\n\"Hey,\" she said with a very groggy voice, \"I thought you left.\"\n\n\"About to,\" I responded, \"I just have to pee first.\"\n\n\"Oh, did I cut the line?\"\n\nIt seemed obvious to me that she was completely out of it, as if she did not remember at all where she was or who I was.\n\n\"No,\" I said to her as she stood in front of me, rubbing her breasts as if she had just taken a bra off after a long day, \"you're good. I just had some things on my mind.\"\n\n\"Probably can't pee with that thing either, huh?\"\n\n\"What's that?\" I knew what she was talking about, of course. I was just playing dumb because it seemed like the best thing to do at the time. I hoped her sleepiness would trump logic.\n\n\"This.\" Tiffany wrapped her hand around my dick and just held onto it.. \"You have a hard-on. I bet you can't pee with it.\"\n\n\"Nope, it is tough,\" I responded, afraid to move.\n\n\"Well, good luck with that.\" Tiffany let go of my erection but did not immediately leave, instead she wrapped her arms around the back of my neck and pulled herself in for a hug, her warm body pressed up against mine, my cock sandwiched in between us. She held there for a moment, her face nuzzled into my chest, before she got up on her tip-toes, gave me a kiss on the lips and let go.\n\n\"Okay, bye,\" she said in the same sleepy voice as before, walking out the door, just dragging her finger tip up the length of my penis as she stepped away.\n\nHoly shit, I had to get out of there.\n\nI yanked my boxers up and tucked my dick into the waistband. I found my shirt but not my shorts in the room and snuck out out of the room, a foolhardy plan that found me needing to go to the front desk in just my boxers and explain that I needed a new key to my room. Thankfully, other than a knowing smile, the key was produced without further hassle.",
        "After getting my body under control and relieving the bladder pressure that woke me to begin with, I found myself with a significant amount of energy that I would otherwise not have expected to and decided that for the second day on a vacation meant to be relaxing I went to the fitness center to blow off some steam.\n\n------\n\nThe bathroom episode aside, day 6 ended up being slightly more dramatic than expected.\n\nSituation 1:\n\nI was leaving the gym when I practically bumped into Sara and Priya. Each were dressed in normal clothing and pulling their suitcases behind them.\n\n\"What's up,\" I asked.\n\n\"Priya's father had a heart attack, we are heading back to the states.\"\n\n\"I don't know why I should care,\" Priya sulked moodily, \"he is an asshole after all.\"\n\n\"That doesn't change the fact that he is your father and he needs you. Besides, maybe a brush with death will get his head straight.\" Sara gave me a single arm hug and a kiss on the cheek. \"I really appreciated our time together and getting to know you. I hope we can continue our friendship once we get back home.\" The statement did not seem to be full of innuendo and I decided to just take it at face value. I was sad to see them go. While I didn't have any sort of particular attachment to Priya, I could admit that I had grown fond of Sara and the reawakened man in me was also disappointed that I would not get to gaze upon her fantastic sensual nudity any longer.\n\n\"Hey,\" Sara said as they finally walked away, \"look at the bright side, now you get your own room.\"\n\nSituation 2:\n\nThe remaining group was eating breakfast when an alarm went off. It did not seem to be from fire as nobody in the dining area reacted with any sort of concern. The concern ended up being our own as the issue was a broken water pipe in one of the walls. 6 rooms of the resort were affected by the plumbing corridor burst and 3 of them were ours.\n\n\"I am not trying to be difficult,\" Gina sternly told the hotel management while 8 of our girls and I stood idly around, \"it's just that there is no way that we are going to pay for two rooms that you are telling us are now uninhabitable. Nor are we going to pay a partial price just because you claim we are still going to enjoy parts of the resort. I understand that there are things that you don't expect to happen but it will not be at our inconvenience.\"\n\n8 of our girls had been removed from their rooms. When the pipe burst in the wall it flooded the floors of the 6 rooms it supplied. Thankfully, it was freshwater and not wastewater. But, being teenagers, the vast majority of their clothing was on the floor and pretty much everything they owned was soaked and dirty. The hotel was good about doing their laundry free of charge but they were reluctant to lose the revenue of the rooms. Gina was having none of it. We had gained 3 bed spaces when Sara and Priya left. We had 3 more if Gina, Melanie and myself shared our beds, that still left us with 2 girls that needed someplace to sleep. Of course, the hotel was fully booked so they couldn't switch our accommodations to a suite or different room. We either had the choice to leave or somehow cram in. We took the latter.\n\nAfter a bit of conversation and insinuated legal threat, the hotel agreed to refund us the cost of the two rooms as well as offer credits to everyone in our group that allowed each of us to stay for one week at no cost to any of the hotels in their portfolio. I admit it seemed like a pretty good deal.\n\nThe only problem was who I was going to be sharing a bed with. Of course I figured it would be my daughter. But...\n\n\"No way!\"\n\n\"Why?\"\n\n\"Because we both sleep nude. I am not sharing a bed with my dad when we are both nude.\"\n\nThankfully we weren't having the argument in the middle of a group. Though, ironically, we were both nude. After the hotel gave us a few hours timeline for them to get our new room setup ready, the entire group decided to go back to the nude beach. All 19 of the girls, all 3 of the adults.\n\n\"I can put on shorts,\" I tried to reason.\n\n\"Still not going to happen.\"\n\n\"Then who?\"\n\n\"I don't care, just not me.\"\n\nInterestingly, I wasn't the only parent whose own child refused to share a bed with them. Gina was sharing with one of Brittany's friends instead of her own daughter. Melanie and Emily decided to stay split and Melanie was also sharing with another one of the girls. It was a strange situation if you asked me and I admit I was a little stressed about it.\n\n\"Maybe I can take a cot.\"\n\n\"Sure, whatever. I just know that I am not going to share a bed with you.\"\n\nBrianna pranced off to be with her friends, I sat back down with the moms.\n\nThe beach was more crowded that day. I felt like much of the resort had decided to walk over and it was filled with a much larger spectrum of visitors. Instead of the our prior visit, where it was basically our group and a variety of gay men, today we had a significant number of couples and groups and the general vibe of the beach seemed significantly more lively. Different groups had trekked over cornhole and volleyball and even some speakers for some music, it was really a pretty cool scene.\n\nGina and Melanie had snuck a bottle of vodka from the resort over to the beach and seemed to be well on the way to drunk just a few minutes into the day and their inhibitions were already at a minimum.\n\n\"Mark,\" Melanie said I was arranging myself to sit down, \"Gina thinks you have a nice cock. Her exact words were that it makes her 'clitty tingle'.\"\n\n\"Bitch!\" Gina playfully slapped Emily and the two giggled for a bit before Gina did her best to return the embarrassment. \"Mark, if you ever have sex with Melanie, she really would like it if you play with her asshole when she is about to cum. She says it really puts her over the edge.\"\n\n\"Oh, yeah?\" I responded with a sly grin directed towards Melanie.\n\n\"Yes!\" Gina shrieked a giggled response that drew smiles and giggles from our group of girls on the beach.\n\n\"Mark, did you know that Gina has only ever had sex with her husband?\"\n\n\"Hey!\" Gina had a look of shock on her face and her eyes darted back and forth between Melanie and myself as she looked for some sort of defense. \"I know I give off the vibe of being a slut. It just isn't the case.\"\n\n\"Well, nothing wrong with that,\" I responded calmly. \"Until she died, my wife was the only person that I had ever had sex with.\"\n\n\"Really?!\" Both women got up and were staring at me in incredulous disbelief.\n\n\"Yeah, why is that so hard to believe?\"\n\n\"I guess it isn't,\" Gina responded. \"I just kinda' thought I was pretty unique.\"\n\n\"Well, you are unique and wonderful,\" I responded with a wink. \"Just not that way.\"\n\n\"Awwwwwwww...\" Both women were obviously drunk and chimed out in unison.\n\n\"She's right though,\" Gina said in a moment of sweetness, \"you really do have a nice cock. Good size. Not too small, not too big. Nicely shaped, balls that are a good midway point between saggy and firm.\"\n\n\"Well, I guess I will take that as a complement,\" I replied. The commentary was admittedly a bit embarrassing and I found myself blushing.\n\n\"Oh!\" Melanie chimed in suddenly, \"looks great hard too! Nice head, good lines.\"\n\nThe ladies giggled and each took additional drinks, what I had to assume was straight vodka based on their overt sexual directness. \n\n\"Again, thank you. Both of you are lovely yourselves.\"\n\n\"O-M-G! Really? Who's hotter? Me or Gina?\" Melanie again accelerated right up to 100 miles per hour and was on the edge of her seat in excitement. I could immediately say that I was not interested in being around for the hangover I knew she was in line for but was amused by how excited and happy (ie, drunk) she was at the moment.\n\n\"Oh, hell no. I am not going to play that game,\" I answered. \"Like I said, both of you are lovely. Neither is hotter than the other.\"\n\n\"Booooooo! We want specifics!\" This time it was Gina chiming in loudly. Loud enough, in fact, that she got the attention of other people on the beach and a number of our girls who started walking over and surrounding us.\n\n\"What's going on over here?\" \n\n\"Mark is going to rate our bodies and how hot we are,\" Melanie answered in a sing-songy tone.\n\n\"Like hell I am!\"\n\n\"Oooh, I want in on this,\" one of the girls said.\n\nI knew I was in a tricky spot and desperately wished that Sara was with me. I knew that this type of thing could backfire but I also knew that it could be just what the doctor ordered if done right.\n\n\"Okay, fine,\" I responded as I got out of my chair. \"If I am going to do this then we are all going to do this.\"\n\nAfter saying that I was going to pair with the moms, I had the girls get into groups of 3 or 4.\n\n\"There is only 1 rule in this,\" I announced to the group, \"only positive comments.\" I saw a couple of the girls roll their eyes at my announcement, akin to making the exercise staged instead of realistic and I knew that they needed to get their attention quickly. \"I am going to go first. Gina, Melanie, I love both of your stomachs.\"\n\n\"What? How? They are practically opposites of each other!\" One of the girls answered incredulously.\n\n\"That's the point,\" I answered. \"Unfortunately, as a guy I have seen women get too hung up on tiny little details of themselves that just don't matter. The reality is that men find so much in women appealing and I, for instance, am not trying to be politically correct when I say that I love both of their stomachs.\" I turned back to the moms. \"Gina, I love your tummy. It is obvious that you work hard for that definition and take pride in it and that is incredibly sexy. Melanie, I love your tummy too. The soft lines and smooth curves are sensual and appealing, you're like an actual Boticelli painting in the flesh.\" Both of the moms smiled and I heard a couple of \"awwww's\" mumbled from the group of girls. \"Okay, in groups, I want you to do the same thing. Each of you take turns saying something about what you like about the other girls bodies. My guess is that what you like is something that they have a personal confidence issue with.\"\n\nThe experiment worked and, before I knew it, there were hugs and laughs and squeals of \"Oh, my God, reaaaally?!\" coming from around the group. I was also surprised about how into it everyone was getting with compliments ranging from generic \"you're soooo pretty\" to unexpected \"your pussy lips are just perfect, totally suckable.\" I laughed because I don't think there has ever been a circumstance I have been in where a couple of guys would casually compliment on the perfection of the others dicks but figured maybe we could learn something from the positivity.\n\nOver the course of the \"therapy\" session there were a lot of laughs and hugs and even a few tears shed but in the end, I could sense a new sense of confidence and ease when it came to one another and themselves.\n\nAs we settled down and everyone started getting back to enjoying the beach I noticed that all of the women started being a little bit more liberal with their exposure and I was gifted with intimate views of all of the different girls in various positions: legs spread, on all fours, rubbing lotion on themselves and others, seemingly all sense of Victorian modesty and decorum were gone. Not to say that anyone was garish and flaunting, just that if someone happened to see them, so be it. This was the confidence that I thought Sara had been talking about. \n\nAnd that was where the wholesome nature of the day ended.\n\n------\n\nI was actually a part of the decline, unfortunately. A couple of drinks just sounded too good for any of us. The resort, in a continued attempt to buy our forgiveness and appease Gina, sent over food and a bartender who was pouring extremely liberally. While Gina and Melanie were already drunk, the rest of the group quickly became so and Gina and Melanie just became even less inhibited. It was a situation I originally never wanted to happen and found myself right in the center of. I suppose it was just another part of the crazy roller coaster that was the trip.\n\nAs the sun began to drop and the day went into the \"golden hour\" of light, it also turned out to be one of photo taking. After all the adults made the girls absolutely promise that none of the picture would be shared online, various poses and group shots were taken of the girls. Many were typical, group shots with everyone smiling. Some got a little randy as the girls took pics with each others breasts, the periodic tongue-on-nipple eliciting laughter and cheers from the group. Others were a bit more risque.\n\n\"Are you sure you want this?\" Even drunk and laughing, I still felt the need to ask before taking one picture of a group of girls, Brie one of them, their asses were in the air and fully spread, pussy and rosebud on full display. The same girl that had a problem with me seeing her intimately previously had lost that inhibition.\n\n\"Dad, yes! Just take it!\"\n\nAs a group we had lost control. I had been walking around with an erection for quite some time and couldn't have cared less about the repercussions of it. We were lucky that the beach had basically cleared out of all the other hotel guests and random attendees otherwise I can only assume someone would have called the police. My dick had been the center of attention in so many photos I had lost count and it continued to have a shiny gloss based on the sheer amount of sun tan oil that had been rubbed on it by countless hands. At one point Melanie actually said that she wanted a picture of her blowing me and had my dick in her mouth for a still-life pose, but Brianna's uncontrolled laughter and squeals of \"Oh my God, that's my dad\" caused the slightest amount of hesitation and the moment was never immortalized on film. Nonetheless, a very clear shot of her holding my dick to her face, similar to old porn magazine shots, was on a phone somewhere whether either one of us would remember the actual moment of taking it.\n\n------\n\nPart 7:\n\nThe next day was rough with the morning being the worst part of it. Thankfully, no human trafficking of dimished capacity teenage tourists took place and instead the resort was very good about sending over staff to bring everything back for us and all we had to do was walk ourselves back. Once back at the resort, and from the scene I woke up to in the morning, it was obvious that everyone just crowded into whatever room they felt like. A total of 10 of us were in the room I previously had shared with only Sara; 4 to each of the queen-sized beds and 2 to the foldaway cot that had been brought in. Almost everyone was nude, I was still hard, bodies were on top of each other as if frozen mid-orgy. The air smelled like sweat and musk and I had to pull two sticky bodies off of me just to get out of bed. My head throbbed as I made my way to the bathroom, desperate to shower and wash the grime, sand and booze from my pores. I found Tiffany on the bathroom floor, curled in the fetal position on the bathmat, a towel pulled over her for a small bit of warmth.\n\n\"Tiffany,\" I whispered as I crouched down to her. \"Tiff, honey. Are you okay?\" I pulled at the towel a bit to find her skin was as clammy and gritty as mine and her hair was an absolute mess. \"Tiffany, have you been sick?\" It wasn't like I had never gotten drunk when I was her age. Indeed, I always felt as awful as I assumed she did. I brushed the hair out of her face and stroked her cheek, trying to gracefully get her up. \"Sweety, you need to get up. You don't want to be on the bathroom floor.\"\n\n\"Shower.\" Tiffany groaned out the word but said nothing else.\n\n\"You want to take a shower? Can you stand?\"\n\nI got the water running and warm before helping her to her feet. Though it was obvious she was technically capable of standing, it was also obvious that she was pretty out of it and would most likely hurt herself if left alone so I got into the shower with her, holding her tight and dragging her under the warm, refreshing water with me.\n\nAs we began to be mildly refreshed, our skin went from sticky to slick in the soft well water and the tension began to drift away a bit. Well, at least it did for me. For Tiffany, it's possible that she would have preferred to have just stayed on the floor whether it was best for her or not.\n\nWhen it finally became apparent that she would at least be able to stay standing, I kinda' leaned Tiffany to the side of the shower and got to washing myself; shampoo, soap, getting every last grain of sand out of every last crevice. To anyone who has ever been to the beach, you know that it is taxing work when not hungover. But, I have found that the key is soap. The more, the better.\n\n\"Tiffany,\" I said as softly as possible, \"time to get washed up. It will help you feel better.\"\n\nShe was leaning against the wall, her eyes closed and almost motionless other than the gentle movement of her chest from her breathing. She said nothing in return.\n\n\"Tiffany...\"\n\nShe opened her eyes just long enough to give me a pathetic look, one that teetered somewhere in between indifference and tears of inability. I could tell she was hurting.\n\n\"Do...\" I hesitated as the words started coming out of my mouth. Was this the right thing to do? What it crossing a line? \"Do... do you want me to wash you?\" Her eyes opened for a minute of what looked like clarity and she nodded an affirmative confirmation.\n\nI positioned her directly under the water and told her that if she wanted this to work she was going to have to focus on standing up straight. I used the same technique on her that I used on myself, lots of soap, lots of time.\n\nI was gentle, I was kind.\n\nI started with her hair, lightly lathering and rinsing a few times before moving on.\n\nI was thorough.\n\nI cleaned behind her ears.\n\nI cleaned between her fingers and toes.\n\nI cleaned her breasts and got every grain of sand from the folds of her labia and pucker of her asshole.\n\nHer breathing got a little heavier as I absentmindedly brushed across her clit and her nipples hardened under my touch as they glided between my fingers but the reality was that I honestly don't think that she could have enjoyed my touch if she tried. She was just too out of it. Not that I was trying. \n\nAfter a light conditioning of her hair, I got her out of the shower and helped her dry off, giving her a couple ibuprofen and putting her in bed in place of Gina, who was nowhere to be found. At least, with only one other person in that bed, she might get some sleep.\n\nI got dressed myself and headed out to get some breakfast. At least one of the benefits of getting older and life experience is knowing what works for you as far as getting over a hangover and a few carbs and a bit of salt was what I needed. Afterwards, still early in the morning, I figured it was going to be a lazy day so I set myself up on the beach, content to nap and rehydrate while regenerating with some sun.\n\n------\n\n\"Hey, Mark. Mind if I join you?\"\n\nI was not sure how long I had been asleep. My guess was a quick little nap as the beach was just starting to fill in. Heather was standing over me, a towel in hand and a welcome smile on her face.\n\n\"Hey. Yes, please, sit.\"\n\n\"How have you been doing? It seems like it has been a while since I have seen you.\" Heather spoke to me as she got herself situated, eventually pulling off her swim coverup and revealing a bikini I had not yet seen on the trip.\n\n\"Been doing okay, rough night yesterday. New bikini?\"\n\n\"This? Yeah, thanks for noticing. I picked it up with my girls the other day. After being around Brie and your girls I figured I am not getting younger, you know? No time like the present to try and pull something like this off. Is it okay?\" Heather slowly turned around and offered a full view of the new swimsuit. It was tiny string bikini with a g-string back and she looked spectacular in it. When she turned around, she smiled. \"I take it you like it?\"",
        "\"Uhm, yeah,\" I said as I snapped out of my trance and back into reality. \"Great choice.\"\n\n\"You're sweet,\" she responded as she pulled out some sunscreen. \"Can you get my back? What had been a small string bikini top was made into a non-existent bikini top as Heather undid the strings and pulled it off, giving me a blank canvas to apply the lotion. I started applying and she continued. \"So, why was it a rough night?\"\n\n\"Well...\" \n\nI told her of the flood. I told her of the beach. I told her of the drunkenness.\n\n\"Well, it happens,\" she said assuringly as she turned around to face me as she applied the sunscreen to the rest of her body.\n\n\"Well...\" I told her of waking up with the girls on me. I told her of finding Tiffany on the floor. I told her of getting her cleaned up and back to bed.\n\n\"Mark, you seem pretty upset about something. So far, while there were definitely some poor choices made as far as your supervisory parental role, I am not quite sure what has you so worked up.\"\n\n\"I think I might have crossed a line. I mean, I touched her everywhere when I was getting her clean in the shower.\"\n\n\"Ah. Well, tell me then, did you find it arousing? Were you getting off or trying to get her off?\"\n\n\"What?! No! Not at all!\"\n\n\"Mark, I admittedly don't know you that well but think I can confidently say that you are a pretty good guy. This shower seemed pretty utilitarian. Probably one of the good things that came out of what otherwise could have been an absolute disaster.\"\n\nThe timing of the situation couldn't have been more appropriate as Tiffany, by herself, wandered onto the beach and found her way over to us. \"Hey, Mark. Hey, Heather.\"\n\n\"Good morning, Tiffany,\" Heather responded.\n\n\"Hey,\" I added, \"how are you feeling?\"\n\n\"Can I talk to you for a second, Mark?\" Tiffany seemed a bit nervous when she asked me and I admittedly felt the blood drain from my face.\n\n\"Everything okay?\" Heather sensed the apprehension and responded in a friendly way.\n\n\"Oh, yeah,\" Tiffany said unassuredly, \"just something I wanted to go over real quick. Nothing to bother Heather with.\"\n\nI got up and we walked about 100 feet away, my heart was racing. Thankfully, she was the first to speak.\n\n\"I just wanted to say thank you and that I am really sorry for what happened.\"\n\n\"What?\" I felt a literal weight off my back and I was able to take a deep breath. \"Sorry for what?\"\n\n\"You know. Getting drunk. You having to find me on the floor and clean me up.\"\n\n\"Oh, Tiffany, honey. You have nothing to be sorry about.\" I felt an endorphin rush and my headache went away. \"I am the one who is sorry. First, I never should have let the situation get so out of control yesterday. Second...\" I heard my voice trail off and I clammed up. Like my conscience wouldn't allow me to even mention it.\n\n\"Second?\"\n\n\"Getting you cleaned up. I want to make sure that I didn't cross a line.\"\n\n\"Cross a line, are you kidding? You were my hero! Mark, I was seriously a mess. The only reason that you didn't find me with puke in my hair is because at one point I was able to stick it in the toilet just to rinse it out a bit. Do you know how bad most of the other girls are right now? I am the only one out of the room right now. Everyone else is just trying to get cleaned up like you already did for me. I can't thank you enough. Besides, I remember everything and you did not cross any lines.\"\n\n\"You gave yourself a swirly?\" I felt a look come over my face that was somewhere between disbelief and amusement.\n\n\"Don't laugh at me,\" Tiffany whined in mild embarrassment. \"Oh, my head...\"\n\nI wrapped my arms around her and held her for a moment, allowing her to calm herself down a bit and get her head back to normal. \"I'm glad I could help,\" I said as I placed a kiss on her forehead. \"Next time, we won't let things get so out of hand and it won't even be an issue.\"\n\n\"No argument from me.\"\n\n\"Now, go get some breakfast and make sure you hydrate. Drink lots and lots of water. It's the best thing you can do to make the headache go away.\n\n\"Okay, I will.\n\nI wandered back to Heather with a smile on my face.\n\n\"Looks like that went well. Nothing to worry about after all. Told ya'.\"\n\n\"Yeah, I guess it was okay in the end. I had good intentions, thankfully it worked out.\"\n\nHeather patted me on the leg and got to sunning herself.\n\n\"You know that this has been a weird trip for me, right? I mean, these types of things don't happen to me in my normal life?\"\n\n\"Yeah, I get it. Try to go with the flow though, vacations are for letting go, having fun and no regrets.\"\n\nWe lay quietly for a while, me still trying to let the hangover work itself out of my body, Heather just letting the sun soak in. We watched as my group of girls made their way out to the sand, away from the commotion around the pool area and onto a quiet, secluded section of the beach. Most of them were not even in bikinis or, if they were, they were covered up with heavy sweatshirts and pajama pants to combat the shiver of the hangover. It was an uncomfortable sensation I too had experienced at their age and I was sad that they had to go through it but also content in the knowledge that it could have been a much worse outcome in a different scenario.\n\nWe spent the rest of the day relaxing in the sun. Heather would excuse herself periodically to check in with her group, I would so the same with mine. Everyone was on the beach, the pumping music around the pool was just too much for any of our heads. I made sure each girl was hydrating and had ibuprofen when needed. I made sure everyone got food in their stomaches' even though they complained they thought they would throw up. By the evening, though not a single person said that they even had an inclination to press the issue, I think that everyone was pretty much back to normal and, when we all got into bed at the end of the night, me sharing with Tiffany, I had a sense that we were on the exact path we needed to be in order to make the most out of the final two days at the resort.\n\n-----\n\nPart 8:\n\nI woke up feeling legitimately refreshed though significantly warmer than I had expected. In one of those \"gimme-a-break-that-only-happens-on-TV\" moments, Tiffany was sleeping practically on top of me. Now, don't get me wrong, my body loved it. I had morning wood that would have been levitating off of me if it wasn't for her leg wrapped over me and holding it down. Her warms breasts were pressed into the side of my chest that an arm draped over and her face was nuzzled into my neck as if we were posed for a Rolling Stone photo shoot. I looked to the clock on the nightstand and saw that it was almost 11am. Not only did I realize it was late but that the room was empty. Had we really slept that long?\n\n\"Tiff,\" I whispered quietly, trying to be as gentle as possible. \"Tiffany, it's late, we should get up.\"\n\nI felt the weight of her leg and arm across me get just a tad bit heavier as I tried to shimmy out from under her.\n\n\"Don't you want to get up?\"\n\n\"No,\" she mumbled.\n\n\"Everyone is probably waiting for us.\"\n\n\"Uhg, who cares? It's so cozy here.\"\n\nI chuckled a little and squirmed a bit and felt her again squeeze me just a bit tighter, the soft bristle of her pubic hair tickling my leg.\n\n\"You aren't hungry?\"\n\nI felt her body shift significantly and a burst of cool air rushed over my side as she peeled herself off my side, then she straddled me and layed down fully on top of me, doing her best to hold me down to the bed with the weight of her body. Being that she was so much shorter than I am I could feel my erection get some air from in between her split legs but could also feel the heat radiating from her sex onto its head. We were in a precarious position.\n\n\"I take that as a no?\" I whispered into the room, assuming she would hear it.\n\nI was doing my best to portray a calm, nonchalant attitude but the reality was my mind and body were in a conflicted state. If I was being honest with myself, I had been teased so much by Tiffany's sexiness over the past few few days that the devil in me told me to release my tension and slip my cock into her. My body was in concurrence with that devil as I could feel my erection throb and my mouth go dry, my biological prelude to sex. The angel on my other shoulder, on the other hand, screamed that I had to put things to a stop. Besides a few minutes of hedonistic pleasure I figured that there was no good that could come of this.\n\nI wrapped my arm around her and used my larger size and strength to flip her over onto her back. She countered by wrapping and locking her legs around my waist. Looking down at her she was wide eyed with excitement. She was playing a game and expecting to win.\n\n\"Tiff...\"\n\nMy words were cut off when she wrapped her arms around my neck, pulled herself up and kissed me. It was fast and somewhat awkward as our faces somewhat banged together but it left absolutely nothing to the imagination as to what she was hoping for. She hung off of me but did not let go.\n\n\"I know Brie told you,\" she said with a mischievous grin. \"There is nothing wrong with doing something that makes you feel good. You need to get back out there.\"\n\n\"Yes, she told me and I know. It just still seems strange.\"\n\n\"Why? We're both adults.\"\n\nI rolled back over onto my back and she came with me, positioning herself in a straddle on my waist, her pussy open and wrapped like a hot dog bun on my dick. \n\n\"You're right, we are both adults. But, I want you to put yourself in my position for a moment.\"\n\n\"You want me on the bottom?\" Tiffany had a sly grin on her face. She was trying to tie her hair up and the resulting image, sitting on top of me, her hands up on her head, her breasts high and proud and practically glowing from their tan, all these things did nothing to calm my body's physical reaction and only encouraged the devil on my shoulder. She wasn't looking directly at me and I wanted to get her attention. It was the devil in me that took my hand and traced it up her soft, smooth stomach, in between her breasts (pausing for a second to graze her nipples) and up around her neck, allowing me to gently guide her face to look at me. Her actions aside, her eyes betrayed her nervousness.\n\n\"Do you babysit?\"\n\n\"I know what you are doing,\" she responded. \"But babies don't have tits like this or bodies like mine.\" She continued grinding. \"And while you may be saying you don't want to, your dick is telling me otherwise.\"\n\nWhat she was doing felt oddly spectacular. Even though she was only sliding up and down on my shaft, she had quickly gotten wet and the feeling was sensational. While I still had barely touched her, I also had not put a stop to anything, I was allowing it to happen. I had a feeling Tiffany could see the torment on my face when she lay back down on top of me, while I believe she wanted to kiss me on the lips, she instead avoided my mouth and attacked my neck and ears with her tongue.\n\nHow the hell was I going to stop this? Did I even want to?\n\nA knock came at the door and both of us froze.\n\n\"Housekeeping!\"\n\nTiffany bounced up into a sitting position, a look of worry on her face. The head of my dick was right at her entrance and I knew that I could have slipped easily into her had either of us given it a moments notice. Thankfully our minds were somewhere else. Another knock and we heard the electronic lock turn. Terrified, she flipped off of me and pulled covers on top of her, wrapping up in a tight swaddle of blanket and sheet. Considering she had been walking around practically nude for almost a week I got a kick out of her instant embarrassment but also appreciated that, unlike the casual nudity, this situation was overtly sexual.\n\nWe heard the door open when I grabbed a pillow and put it in front of myself and hopped into the hallway of the room, coming face-to-face with a weary housekeeper.\n\n\"10 minutes, por favor?\"\n\nIt was obvious that she was not expecting to find anyone in the room, let alone someone nude and only covered by a pillow and I could see the look of shock on her face. Thankfully, it helped in calming my body and I could feel my erection go down.\n\n\"Oh, so sorry, sir. Sorry. I come back.\" She was doing her best to shuffle back out of the room as quickly as possible.\n\n\"No, sorry. Dies minutes. Gracias.\"\n\nThe door closed behind her and I dropped my head, walking back into the room and sitting on the bed opposite to Tiffany.\n\n\"Well, there's that,\" I said with a strained smile. Tiffany returned the exact same look. \"I am going to hop in the shower real quick. Probably time to get the day started.\"\n\n\"Okay. I think I just need a minute but will do the same.\"\n\n------\n\nIt was almost 3 o'clock before I saw her again. In that time I had gone to the fitness center, met Heather for some lunch, had a drink with the moms and was finally on the beach, by myself and with a book, the main activity I was planning on. I hadn't mentioned what had happened to anyone but was convinced the outcome was mostly right. Heather and Brianna hunted me down and, from the looks on their faces, they were terrified to face me.\n\n\"Hey, ladies! Coming to join me? What do I owe the pleasure?!\" I was as upbeat as possible, betraying my own nervousness. The girls, for their part, seemed to showing their contrition in more modest dress. They were still topless, of course, but the bikini bottoms they were wearing, each a small, cheeky style, were almost close to passable as \"normal\" as opposed to the micro thongs they had chosen in the days prior.\n\n\"Hey, Dad.\"\n\nI stood up to greet both.\n\n\"Are you mad at us?\" Tiffany hadn't said a word, Brie was doing the talking.\n\n\"Mad at you? No. Why would I be mad at you?\"\n\n\"Because of this morning, how we set you up.\"\n\n\"Brie, Tiff, I would never be mad at you for doing something in an attempt to make me happy.\"\n\nA look of relief came over Tiffany's face. \"Really? You aren't mad?\"\n\n\"Not at all. I hope you aren't mad at me either, I certainly wouldn't want you to feel rejected. This is absolutely a case of 'it's-not-you-it's-me'.\"\n\n\"Really?\" \n\nI could see that my validation meant something to her and it wasn't as if I was lying when I responded. \"Tiffany, you are incredibly sexy. Obviously you have to know that from the way I, uhm, reacted. Both of you are right that I probably do need to get back out there. I just have to do it at my own pace.\"\n\nBoth girls were smiling and I began to feel a bit better about the situation. Each one came in for a hug and responded with individual, big, dad, bear hugs, lifting each one off the ground in the process. When it was Tiffany's turn I was not oblivious to the fact that she kissed me right by my ear and whispered, \"I'm ready whenever you are.\"\n\nI didn't even bother trying to wipe the smile off my face as I shooed them off to be with their friends.\n\n-----\n\nAfter a group dinner, I ran into Heather at the main hotel bar. Unfortunately we didn't get to spend much time together that night as it was her groups last day at the resort and they were having a final blow-out bash for her sister. We did have enough time that I opened up and told her the story about that morning.\n\n\"So, you're telling me that an absolutely gorgeous 18-year-old was trying to seduce you and you didn't go through with it? In addition to the fact that you own daughter was in on the whole scheme and was pushing you along to do it?\"\n\nI blushed red at the recollection of events. \"It just didn't seem right. Yes, she is beautiful. But it isn't like I need sexual trophies. That life just isn't for me.\"\n\nHeather smiled. \"See? I said it before, you are a good guy, Mark. I really hope we get to spend some time together once we are back in the states. Make a promise you'll call?\"\n\nI vowed to Heather that I would be in touch as soon as I got back home and we parted ways with a kiss. A kiss that was a bit more passionate than previously. I knew that if it were Heather in my bed and not Tiffany, there would be no doubt as to the end result. \n\n----- \n\nPart 9:\n\nOur last full day.\n\nIt was 6:30am and I was the first to wake up in the room. The only adult in the room, 4 peacefully sleeping teens around me. Having successfully navigated the emotional conflict of the day before I had slept like a rock all night and truly woke up rested and energized. I was pleased to hear movement coming from the attached room and got out of bed to find Gina, Melanie and Emily crowded into the tiny bathroom, all in various states of undress.\n\n\"Good morning,\" I whispered loud enough for them to hear me, soft enough not to scare them or wake any of the other sleeping zombies up.\n\n\"Hey, Mark!\"\n\nThree sets of eyes darted to my dangling dick, still slightly plump from the morning wood and warm cozy bed. It was interesting that, even after a week of seeing it, the eyes still moved in an almost instinctive manner. I of course, was doing the exact same thing. Melanie was only wearing tight, lycra shorts. Emily was in a sports bra and socks, nothing else. Gina was fully nude.\n\n\"Going to work out?\"\n\n\"Yeah. Want to join us?\n\nI got dressed and all 4 of us spent a solid 90 minutes in the gym before heading to the beach for a final jog and some stretching on the sand. We finished up and I felt fantastic. Gritty, dirty and a little bit sore... but fantastic.\n\n\"Showers?\" Gina had been the colonel in our little workout army all morning and I was impressed with her direction as well as her own effort. I watched how hard she pushed herself, fully deserving the body that she worked so hard for, and experienced how hard she pushed us as well, each of us exhausted and energized at the same time.\n\n\"Marco,\" Gina instructed as we got back to the rooms, now fully cleared out from all of the girls, \"you're with me.\" \n\n\"With you?\"\n\n\"Yeah, we have sand all over our backs. You get mine, I'll get yours.\"\n\nIt was the least sexual coed, nude shower I could have imagined. Of course we had to touch each other and some of the touching may have even been considered intimate (honestly, is there a way to get sand out of a buttcrack that does not involve intimate touching?) but the entire vibe was as non-sexual as one could expect. Honestly, we may as well have been gorillas preening each other in the wilderness, it was all functional. The conversation was non-sexual as well. We spoke about the trip as a whole and, although it got out of control at the beach, we felt that it was successful for both the girls and parents. We spoke about how each of us had somewhat assumed we would have spent more time together over the course of the week and were disappointed that we did not get to know each other more. We agreed that we hoped we could join each other on a similar trip in the future.\n\nAs we dried off and Gina had me apply lotion to her back, I desperately wanted to ask her what her husband would think of the situation but I realized it was absolutely none of my business. Instead, I did my best to try and convince myself that I would be as open and accepting of someone like Gina as a partner of my own.\n\nAs it happened, I had showered with Gina in her room while Melanie and Emily had showered in my room and, from the lack of sound, I assumed like they were already out of the room. The conversation had caused me to wait until Gina was fully dressed (ie, a bikini bottom and coverup) and leaving before I even considered going into my room to get changed. Stepping into my room, I realized that my assumption was wrong. Melanie and Emily, both nude other than towel wrapped up in their hair, were quietly sitting on the beds of the room.\n\n\"Mark,\" Melanie said. \"We have a very different type of proposal for you.\"\n\nEmily sat quietly. Her face was red but she didn't look as embarrassed as she did excited. Nervous, but excited.\n\n\"Before she left, Sara told me how you stayed with her the one night and you gave her a massage. Well, I... we... were basically wondering if you could give us or show us how to do the same type of massage.\"",
        "Emily still said nothing. She sat on the bed, a wide eyed look of anticipation on her face, her chest red and flushed.\n\n\"Mel,\" I responded, \"just how much do you know about what happened between Sara and I?\"\n\n\"Oh, we know everything,\" she said with a grin.\n\nEmily was still quiet.\n\n\"Then you know that the massage, the one that I gave to a friend having a rough night, was not exactly standard.\"\n\n\"Yes, we know. Look, Emily and I are close. We talk and we share things. We get that this is potentially a little outside the realm of what mothers and daughters normally share but, here's the thing: as you already know, I have been off the market for a while. I am so out of practice for touching and being touched it is almost embarrassing. Emily is young and just looking for practice. Same thing, reacting to be touched, figuring out what she likes, just get some life experience.\"\n\nI can only imagine what the look on my face was saying to them but Melanie continued on.\n\n\"We know that you turned down Tiffany and that is one of the reasons why we think you are an awesome candidate. You're a great guy who we don't think will take this request the wrong way and, honestly, we both just feel comfortable with you.\"\n\nEmily finally spoke. \"My mom and I already agreed. If you agree to this, nobody outside this room will know anything about it at all. Whatever is going on in your head, know that this is something that we both want.\"\n\nI saw that the bed had been stripped of blankets and pillows and instead had a few towels laid over the bottom sheet. Emily got up, opened the nightstand drawer and brought out the massage oil that I had previously used with Sara as well as a bottle of baby oil and a bottle of lube that I hadn't seen before.\n\nI stood silent for a moment, each of them were practically holding their breath, waiting for me to respond.\n\n\"Okay, how do we do this? I mean, I am only one guy and there are two of you.\"\n\nMelanie practically jumped off the bed. \"Okay, we kinda' talked about this.\" She waved Emily over to the bed and they both pulled off their hair towels, tossing them on the floor. \"We'll lay side by side on the bed and you can work on us one at a time. Legs on one then legs on the other, etcetera.\"\n\n\"You're sure about this?\" I could tell that they were both nervous but also both very excited.\n\n\"Yes, we are sure,\" Melanie responded, \"just tell us what to do.\"\n\nI sighed. \"Okay, start on your belly's.\"\n\nEmily literally squealed as she got into position. It was then that I really noticed, holy shit she had a really nice ass. Ah, to be a teenager again.\n\n-------\n\nI got the oil and was about to kneel on the bed when Melanie popped up, ran into the hallway and locked the front door to the room. She locked the door in between the rooms before laying back down and shimmying back into position. Well, at least we would have a little privacy.\n\nThings started out slowly. Melanie had indicated that I should start with her and then move onto Emily, something I was extremely comfortable with as I figured it would allow Emily to see what was happening and go along with the plan. In hindsight, they were more coordinated than I realized.\n\nI started with a standard athletic, therapeutic massage. I worked on their legs and feet, their backs and shoulders, their arms and hands. It was similar to what I would do for Brie once a month or so, with the difference of allowing my hands to wander quite a bit more. When I was working on their hamstrings, I would also be much more liberal in rubbing their butts, their inner thighs, their out lips. As I worked on their shoulders and arms I allowed my hands to move over them, cupping their breasts and grazing their nipples. It was not to say that either of them were tense to begin with but, when I had them both turn over onto their backs, they were already practically like jello.\n\nI continued to begin my routine with Melanie. Continuing to straddle each one, in turn, I applied liberal amounts of oil to make their bodies as slick as possible. While it wasn't as ideal when it came to the more sensual touching, it did work well for the massage portion and, strangely, I was vested in making sure they felt they got a good massage as well. While I saw some peeking previously, Emily's eyes were now glued to the scene, bouncing back and forth between my hands all over the oily skin of her mother's body and my erect phallus, standing proudly in front of me and bouncing with my movement.\n\nIt came to be an appropriate amount of time where, should we have been using the massage thus far as precedent, I would have switched over to Emily. Emily, however, had moved. In a bold display, she had gotten off the bed and snuck up behind me, hugging me from behind so tightly I felt her hardened nipples pressing into my back and the stubble of her pubic hair on my butt. While that action alone admittedly made my dick jump, her hand reaching around me and gently grabbing it brought it to a positively rock-hard state.\n\nI continued along with Melanie while Emily softly jerked me off. It seemed obvious that she was not trying to make me cum, rather was simply playing with my erection, a learning and exploration session just as much as the massage itself.\n\nPhysically, I found myself in an uncomfortable position, hovering over Melaine, two fingers deep in her pussy, one hand massaging her breasts and neck, while Emily was still behind me. While I was still hard, the additional weight on my back was getting to me and did not want to have to stop until Melanie had climaxed. As though sensing my discomfort, or deciding to continue her exploration on her own, Emily came from behind me and wedged herself between the bed and my legs, confidently taking me into her mouth.\n\nConsidering that I hadn't dated much since my wife, that she was my first, and that it had been so many years, I wasn't much of an expert on blowjobs. But, Emily? She was good. Some may say it is difficult to be bad. A blowjob is like pizza! Even when it is bad it is good. Whatever your thought process, her mouth was working for me. The warmth, the softness of her tongue, it was only the progressively louder moaning from Melanie, who herself was climaxing, that kept me from cumming. I figure the audible climax affected Emily as well as when her mother stopped, she did too.\n\nThe break was a bit of a relief. My back was tired, my hands needed relief, I took the moment to lay down on the bed opposite to Melanie, who herself was coming down from her high; eyes closed, heavily breathing, chest heaving and muscles like jello. Emily joined me on the bed, again taking my erection into her hand, gently kneeding and keeping me hard.\n\n\"Did I do okay? Did it feel good?\" She whispered into my ear.\n\n\"Honey, you did everything right,\" I replied. She had cuddled into my side and the proximity allowed me to kiss her on the forehead. \"It felt fantastic.\"\n\n\"I've only done it a couple of times before, before me and Dylan broke up.\"\n\n\"It isn't like I am an expert,\" I replied honestly, \"but it felt great.\"\n\nEmily moved, hesitated and then moved again, her face moving directly toward my waist, her intentions obvious.\n\n\"No, wait,\" I said as I stopped her, \"let me.\"\n\nI am not sure what got into me. Something that I never would have allowed happen between myself and Tiffany had already occurred and I was only furthering the situation. Though, insanity or not, I positioned Emily on her back, spread her legs and dove my face in between them.\n\nI heard her shudder with my first direct contact with her clit. I had taken my time getting there, kissing and licking all around her wet lips and inner thighs. She tasted sweet, probably a testament more to how much I wanted to be doing exactly what I was doing more than any other factor. It didn't take long for her to climax; soft, direct and slowly moving the entire length of my tongue across her button was a key to success. She didn't cry out so much as let out a series of staccato moans and the waves of orgasm rippled through her body. When she finished, I stopped. No need to torture her with added stimulation on an already overly stimulated clit. Her body limp, I laid beside her but was startled a moment later when Melanie put her hand on my chest.\n\n\"I'm going to hop in the shower,\" she whispered with a smile, \"don't let me bother you.\"\n\nDon't let me bother you? What did that mean?\n\nThe water had been running for a couple of minutes when Emily, coming down from her orgasm, rolled herself over to me, snuggling herself into my side.\n\n\"That was amazing.\"\n\n\"Glad you enjoyed it,\" I responded.\n\n\"Nobody has ever gone down on me.\"\n\n\"Really? I thought you weren't a virgin based on your previous comments.\"\n\n\"I'm not. But my boyfriend never did it. I am not sure why, it just didn't happen.\"\n\n\"His loss, I would think.\"\n\n\"That orgasm was incredible! I am still, like, so wet.\"\n\nI chuckled my response.\n\n\"No, seriously,\" she retorted, \"like so wet. Feel this!\"\n\nEmily took my hand and put it on her crotch, forcing one of my fingers into her. She wasn't lying, she was really wet.\n\n\"Well, I can't accuse you of exageration.\"\n\nShe rolled over and got on top of me, straddling my cock, which was still hard.\n\n\"You did that!\" She had her hands on my chest, her small breasts pressed between her arms, chest still flushed, a smile on her face.\n\n\"You say it accusingly,\" I said with a laugh. \"I thought it was a good thing.\"\n\nThe water was still running in the background and we could hear Melanie splashing in the shower.\n\n\"Oh, it was very good.\"\n\nShe began slowly grinding her very wet pussy on my very hard cock, mimicking the words that came out of her mouth.\n\n\"Your tongue... slowly dragging up and down... hitting my clit... so fucking hot... so good...\"\n\nHer physical movement was methodical, her hips dragging just a bit longer up and down my length each time they moved back and forth. Soon, the inevitable happened.\n\nEmily gasped. Not out of shock, not out of surprise, but a deep, gutteral gasp from the sensation of me sliding into her, her pussy swallowing every millimeter of me. I could have stopped her. I probably should have stopped her. Instead I let it happen. The massages... Melanie... the oral... everything had led up to this.\n\nI would love to tell you that it was long, passionate sex but the reality was we both finished quickly. Both of us had just been so primed it was bound to happen that way. I finished inside of her, spewing cum into her core until my body practically felt like it was turning inside out. While I can admit that it was an odd time to think about it, the idea popped into my mind that if the sex had been that perfect with Melanie I probably would have asked her to marry me on the spot.\n\nEmily finally collapsed on top of me, my wilting dick still inside of her, plugging up her swollen hole from dripping all over the bed.\n\n\"Holy shit,\" she said.\n\n\"Holy shit indeed,\" I replied.\n\nWe heard the water turn off and the shower curtain get pulled open, a reminder that we were not alone in the room. Emily rolled off of me and immediately stood to go to the bathroom and clean up. I stayed on the bed, collecting my thoughts, ready to fall into a deep, peaceful sleep if it wasn't for a voice a couple of minutes later.\n\n\"You okay?\" Melanie was standing in the room, a towel wrapped around her head but otherwise nude. She looked lovely.\n\n\"Yeah, just collecting my thoughts.\"\n\n\"I can imagine. A lot happened.\"\n\n\"Yeah, you can say that again.\"\n\nWe heard the water start and the shower curtain pull and Emily start to sing. A smile came to both of our faces.\n\n\"I want to thank you for what you just did,\" Melanie continued. \n\n\"Thank me?\"\n\n\"Yeah, thank you. I told you we both needed experience. You gave us that.\"\n\n\"I should be thanking you, Mel. It isn't like I am some sort of teacher. This was all shared experience. For a guy like me to even get the time of day from women like you two.\"\n\n\"Oh, that's nonsense.\" She sat down on the side of the bed with me and placed a hand on my chest. \"This has been a heck of a trip, don't you think? But, I think we are both going to be just fine in our future, you know?\"\n\nYeah, I did know. Something had changed and it honestly only felt for the better.\n\n\"Now get up, lazy bones! You need to get cleaned up, we only have a day left here!\"\n\nMelanie pulled me up off the bed and into a hug, first taking a moment to offer me a long, soft tender kiss on the lips. We held each other in silence before she smacked me on the ass and shooed me along. It was time to get on living.\n\n------\n\nFINISH:\n\nThe rest of the trip was just about as normal as a trip could be. Or as normal as our trip could be. While there was still toplessness and raunchy poolside games, there was no sex or drunkenness or random debauchery... at least, not that I knew of. The girls and parents all had a fantastic time and spent the final 24 hours together, at the pool, at dinner, at the club in the evening. \n\nI did find I had a new turn-on, again having to do with bikini bottoms, when Tiffany and a couple of the girls took to wearing their string bikini bottoms so loose the tops of their pubic hair and ass cracks started to show. In a testament to how far we come over the week, when my obvious erection showed, their only response was a wink and a smile.\n\nWhen we got home, Brie made sure I got in contact with Heather within hours of landing and, by the time I dropped my daughter off at college a couple of months later, I could confidently say that I was in the second, long-term relationship of my life. The \"thing\" that Heather had to take care of before moving forward with anything with me was finally, fully, calling things off with her ex-husband. It seemed that they had been considering getting back together, not necessarily because either one of them thought it was the right thing to do, but rather because it was convenient and seemed easy. The problem was that there was just no spark.\n\nIn the months before college, there was one other significant change in my house and that was the clothing. See, we had always had a pool and it had been, for at least a couple of years, a hang out spot for Brie and her friends. It continued to be over that summer and summers in the future the change was just in none of the girls wearing suits. Nudity was the new norm. At least our yard was secluded enough that nobody called the cops.\n\nAs for Heather and I, we both started our Chapter 2. The connection was obvious from moment number one and continued to be obvious as our relationship grew. She also because a wonderful friend and mentor to Brianna, as close to a mother as one could hope for.\n\nOh, and the sex? Fucking fantastic."
    ],
    "authorname": "TooTallToFall",
    "tags": [
        "beach",
        "bikini",
        "exhibitionism",
        "gstring",
        "nude beach",
        "nudity"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/single-male-chaperone"
}