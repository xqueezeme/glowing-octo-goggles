{
    "title": "My Little Ventrue Pt. 06 Ch. 08",
    "pages": [
        "~~Damien~~\n\nAs the night went on, two things were becoming painfully clear. First, that the hunters were either not in the tunnel, or hiding terribly well. Second, that working with Fiona was extremely distracting.\n\nIt wasn't that Fiona was too juvenile to focus, or too bubbly to... not bubble around everywhere, but rather Damien's own mind not being able to concentrate. She was too attractive. Ever since that date, where they'd both enjoyed a meal together, it'd become impossible to ignore how beautiful she was.\n\nHe'd heard girls liked it when the man swoops in, sweeps her off her feet. Maybe he should swoop? Course, he didn't know the first thing about swooping, and that made the whole prospect terrifying. But, despite a lack of skill, a girl could only smile at you so many times before it was clear she was looking for you to make a move on her. Fiona smiled at everyone, but whenever she met his eyes, she made sure to smile extra hard. When smiles didn't work, she put her hands behind her, together, and pushed her chest out a bit, while also pushing her arms together, so her biceps pressed her breasts together.\n\nThe moment they were topside, he was going to ask for that second date. They'd hunt together, fill their bellies, and maybe, just maybe, he might stop being so scared of her, and do what she seemed to be asking for. Kiss her? Kissing was a good first step.\n\nThis must have been how Jack felt, when he met Antoinette in Bloodlust. The kid had shared with him the tense combination of terror and arousal he'd felt, when she drew him into her web. She'd used her seductive mastery, and her giant breasts, to seduce the poor boy. And Fiona, to Damien's best estimate, was trying to do the same thing, except she didn't have the centuries of experience to go with her efforts. In this weird dance, Damien was the older, more experienced one. Except, he was older, less experienced.\n\nFor now, he did his best to return her smile, and at his most bold, looked at her shapely breasts and how her jacket squeezed on them, when he knew she'd notice him doing so. In return, she offered a small blush on her freckled skin, and nudged her shoulder into his side. Flirting successful? Flirting successful.\n\n\"How long have we been down here?\" Vicky said.\n\nDamien shrugged. \"Four hours.\"\n\n\"That is a long time. Perhaps we should take the search elsewhere?\"\n\nMatt shook his head. \"These tunnels are huge, and I'd prefer we do a proper sweep of them before we move on. If they've been down here within the past few days, I'll smell them.\"\n\nPowerful nose on that werewolf.\n\n\"Assuming,\" Parker added, \"that they don't have some way of covering their scent. And they are hunters after all.\"\n\n\"Hunters don't usually hunt werewolves.\" Shrugging, Matt stopped at a fork in the tunnel, and took a long whiff. \"Vampires spread. Werewolves are chosen by Luna. Our numbers never warrant hunters hunting us, not the way they hunt vampires. And, we don't feed on humans; usually. It's rare for hunters to devote themselves to hunting our kind.\"\n\nParker raised a brow. \"Your point?\"\n\n\"My point is that I'd be surprised if these hunters knew tricks for dealing with werewolves, beyond the obvious like silver.\"\n\n\"What other tricks are there?\" Vicky said.\n\nThe giant laughed, nodded toward one of the tunnels, and started walking. \"Like I'm telling you. I saw how much silver you guys had.\"\n\nThe three vampires nodded. A little skepticism and distrust was a healthy thing. And, despite Matt being a werewolf, he was plenty kind and sharing with the vampires as was. Asking him to spill over their secrets was a bit much.\n\n\"We've covered a lot of the tunnels,\" Matt said. \"A couple more nights, and we can safely say they aren't down here.\"\n\n\"Yay!\" Fiona said, throwing her hands up and bouncing in place a few times.\n\nThe big guy shook his head. \"Fighting down here would be a good thing. No humans around to stop us from letting loose, and they can't surround us. And maybe\u2014\" Matt slammed into the air in front of him like a sleepwalker walking into a wall. Crunch. Broken nose, assuredly. He stepped back, groaning loudly, and held his nose in his hands. \"What the fuck!\"\n\nMatthew didn't swear often. Damien almost laughed, until he realized the man hadn't walked into a wall. He had indeed walked into air, and the air had blocked his path. Everyone froze when the realization sank in.\n\n\"Um... w-what?\" Fiona said. She bounced over to where Matt was, checked the big guy, before she reached out against where Matt had been hurt. Her hand hit air.\n\n\"A barrier?\" Damien joined her, and reached out. Indeed, a barrier. It had the texture of still air, which was barely a texture at all. It confused his brain, touching it, having it press back against his fingers, but it did push back, same as any wall. Soon, everyone was up to the barrier, touching it, pushing against it. Strong as steel.\n\nMatt snorted, and another, quieter crunch sound marked the manual fixing of his nose. He'd heal in no time. With a snort and ka-splat sound of blood leaving his nostrils and hitting the tunnel floor, the werewolf walked up to the barrier as well, and pressed on it.\n\n\"If they're behind this,\" the werewolf said, \"then I'd be able to smell them. I don't.\"\n\nWith a quiet snarl, Damien got down onto a knee, and reached down. In the darkness and flickering lights, it was hard to see much, but he managed to spot some strange, black soot, a powder, drawn across the tunnel path from wall to wall.\n\n\"What's that?\" Fiona said.\n\n\"I... have no idea.\"\n\nAll of them looked down at the soot. And Matt, of course, reached out to touch it. Mistake. He howled pain, and jumped back, clutching his hand and shaking it as if it were on fire. It wasn't, but the noises the man made suggested otherwise.\n\n\"Ye awright?\" Fiona said, joining him.\n\n\"Ouch! Wow, that burns.\"\n\nFrowning, Damien took in a breath, and blew on the black powder. It didn't move. He tried again, but still it didn't move. Soon, all five of them were doing the same thing, blowing on the strange black soot and trying to move it. No one managed.\n\nThis was ridiculous. With a snarl, Damien withdrew his sword, and tried to strike the powder. But the invisible barrier stopped him, blocking the sword from doing anything more than skimming the edge of the powder.\n\nAnd that was, apparently, another mistake. As Damien put his sword away, a glowing amber started to make its appearance; from underneath them. The five of them stared down as lines started to draw themselves, as if a ghost was painting with glowing amber, encircling them. It didn't take a genius to recognize being inside an amber circle self-drawing onto the floor was a bad thing.\n\n\"Go!\" He grabbed Fiona, and threw her. She squealed like a squirrel as she flew through the air, and groaned when she face-planted against another invisible barrier. Oh shit.\n\nWhining, she struggled to stand up until Matt helped her. \"Tae fuck!? Damien ye wank stain!\"\n\n\"Sorry, sorry.\" Wincing, he walked over to her and offered his best apologetic smile, before he reached out and pressed against the new barrier. This one had a shape, a contour, a curve. It was following the curve of the amber circle that now surrounded the group of them. Shit. \"I was too slow.\"\n\n\"It's awright, ye silly dobber.\" Sighing and rubbing her forehead, she pat him on his side, and nudged her shoulder against him. \"We... we uh... set off a trap?\"\n\n\"Apparently.\" He glanced back to Vicky and Parker. Predictably, they were standing with arms at the ready, but weren't getting involved. Passive, frustratingly so. They were the sort of vampires to sit back, wait for something to happen, and then react. Their reactions would be effective and intelligent, but until that happened, Damien had to assume they were borderline useless.\n\nMatt, growling and groaning, pressed his hands up against the invisible barrier. Wherever he touched, the amber circle that surrounded them glowed brighter underneath the point of contact.\n\n\"We're trapped,\" Vicky said.\n\nParker nodded. \"Indubitably.\"\n\nGood grief.\n\nThey had a decent amount of room to move around in. The circle was almost as wide as the tunnel itself, leaving Damien with more than enough space to start circling the trap. There wasn't any black powder on the circle or its edges, but with how the amber glowed, he could see some small inconsistencies, as if someone painted it with a paintbrush.\n\nIt was a new trap, one the hunters hadn't used yet. The hunters were far more experienced than any warning tale could have prepared him for, using new tricks at every encounter, and never repeating the same one. Frustrating.\n\n\"Anyone have any idea what this is?\" Damien said. Everyone shook their heads, as he expected. \"It appears to be some kind of... supernatural trap.\"\n\n\"It blocked your sword,\" Matt said. \"And it seemed to block the air from further down the tunnel.\"\n\nDamien nodded. \"The black soot stuff did. But...\" He stuck his sword out. It crossed over the amber circle without issue. \"This strange circle appears to be less strict.\"\n\n\"The first barrier,\" a voice called from the tunnel darkness, \"is a proper physical barrier, magical, created with that black soot you noticed. The second is a classic entrapment circle for paranormal scum, like yourself.\"\n\nOh no.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Natasha~~\n\nThey were getting lucky. Very lucky. Too lucky? Maybe. It was perfectly reasonable that the hunters assumed the Kindred wouldn't be able to track this path, considering how convoluted it was. Figure out who was sacrificed, figure out they came from Devil's Corner, have a Kindred in the know about what kine might know something, get lucky that they knew where those who were sacrificed hung out, get lucky with the last kine at that location, and that they saw their vehicle. Convoluted, but not an impossible trail, and there was no doubt the hunters wouldn't leave the trail intact forever. They'd eventually move, or cover their tracks, so the five vampires had to do this quickly, tonight.\n\nIt was getting exhausting, keeping her fellow Kindred wrapped in the Cloak of Night along with her. Obfuscate could be used in so many ways, but a full Cloak of Night on herself and four others, to the point the five of them were completely invisible? That was draining. She had to concentrate, and that meant she couldn't devote much attention to looking for hunters or clues. She had to trust the witches.\n\nIn normal situations, a less aggressive Cloak of Night, A Face in the Crowd, would be the better choice, saving on vitae while also preventing anyone from noticing the Kindred, as long as other people were around. Not being recognized wasn't good enough for this situation.\n\nIt was an abandoned home, as far as she could tell. Everything was worn down, covered in dust, needed repair or painting, and from the smell, no one was living here. A perfect place for hunters to squat. She pulled out her pistol and kept it in her good hand, and held her small sword in her off hand, as she followed the other Kindred around the home. There was another odor here too; more than just an empty house.\n\nFirst, they checked upstairs. A small bathroom and three small bedrooms. Nothing. Next they checked the living room and kitchen, but they'd already passed through them, and a second glance found nothing. That left the basement, which they'd all assumed would be the place, but it never hurt to be thorough. And, as they approached the basement, the unidentified odor grew.\n\nOthello pointed down at the floor by the basement door. The dust and dirt was disturbed, tracing an outline of how the door would open, if someone had opened it. Jackpot.\n\nTriss nodded to the large man, and with locked eyes, Othello slid the door open. Darkness awaited, except not as dark as the building's main floors. Light had a habit of doing that, of creating gentle illumination with no source, when it was bouncing around walls. And if there was a gentle, subtle illumination in the basement, that meant someone had a light turned on somewhere down there. Or light was coming in through some basement window, a street light maybe.\n\nNo, it wasn't a street light. It had an amber hue, like fire. Maybe someone was having a party? No, there wasn't any noise. And the sliver of light that reached the basement was so small, Tash was sure it was bouncing through other hallways to reach the basement they peered into. Maybe someone was running some sort of drug operation, and had another basement built, connected? Maybe. But there was something about the place, something heavy, and quiet, like liquid shadow you could drown in. She felt it, her partners felt it, and that was enough reason to assume the worst.\n\nOthello went first, with Triss behind him, then Aaron, then Natasha, then Jennifer. The only one who bothered with weapons were Natasha and Jennifer. In the Invictus, everyone used weapons to some extent or another, but the witches were all comfortable killing with their bare hands; except Jen, who was young, and a Ventrue besides. The only weapon she had was a knife though, hidden on her belt underneath the open shirt. Not a good choice for a Ventrue, but better than nothing.\n\nThe basement was predictable, as far as basements went. No windows, concrete walls with no effort to make them pretty, damp cracks caught reflections of the scattered, subtle amber light, and Tash was sure she caught a glimpse of a centipede creeping along. She managed a small grin at that. When she was human, a centipede would have been enough to get her screaming. Now? Kindred and predators had a strange connection, even insect predators. But a centipede wasn't a rat or a crow or a coyote. If Aaron or Jen could use it to see what was ahead, neither of them tried. So, they continued along, into the basement room.\n\nIt was empty. Very empty. Too empty. Tash expected maybe some old boxes, or a ruined couch, or some wood palettes or crates, or something, anything. But, no, the basement was completely empty, except for a bookcase. The amber light was coming from behind it, faint against where the wood met the concrete. Beatrice and Aaron wasted no time, each taking an end of it, lifting, and moving it aside.\n\nAnother tunnel, and it seemed to go down. That didn't make sense from any blueprint for a building in Dolareido, not in Devil's Corner, but it was the source of the amber light.\n\nThe vampires moved closer. Upon closer inspection, it seemed like the hole was manually dug into the wall, as if someone had sliced it open and then got to digging. But that sort of work was loud, and it would have filled the basement up with a mess of dirt. Maybe that's why it was devoid of any objects? Someone may have done just that, and cleaned it up. Well, whatever the methodology they used, it didn't change that there was a hole in the wall tall enough for them to walk into, and there was a gentle amber glow coming from within.\n\nThey followed the same formation, Othello ahead with Triss by him, then Aaron, while Tash and Jen stuck to the rear. And as they followed the curving tunnel, everyone was deadly quiet. No one fake breathed. No one landed on their heel. No one stood straight, crouching instead. Everyone let a bit of their animal instinct to the surface, the part of them that knew how to stick to shadows, move silently, and listen intently.\n\nThere was quiet murmuring in the deep, from beyond the twisting, curving tunnel. Tash raised her lip in a hidden sneer, and looked around at the dirt that surrounded them. Someone was down here, in this homemade tunnel? This wasn't a safe tunnel. Without support beams and going deeper, the ceiling of this tunnel was liable to\u2014become soft, and warm, and wet?\n\nEveryone froze as the walls were no longer dirt, but flesh. Flesh. There was no getting around it, no other way for her mind to think of it, no trick of the eye or fancy painting on the walls. It was flesh. She touched it, and sure enough, bits of blood coated her fingertips. Muscle and skin, sinew, tendons, and even some bones lined the walls, curved, unnatural. It was all unnatural, but the bones that lined it weren't from any creature. It was the tunnel's bones, complete with a spinal cord above, and ribs all around.\n\nIt was like they were inside a snake, except even a snake's guts didn't look like this, with the bones poking out showing through, with skin taut against them, connecting to their sides, and with slivers of pulsating muscle between bits of torn skin. And it was pulsating, like a heart might. A giant, slow, steady heart.\n\nShe'd heard you could walk into a blue whale's heart, that it was big enough to move around in. How fucked up and big a creature would it need to be for this monstrosity?\n\nThey continued to creep forward, and Tash poured every ounce of effort she had into keeping them invisible. A very loud thought kept pulsing, that they should turn around and leave, or maybe one of them should. And, maybe, they really should do just that. But they'd discovered a golden opportunity, and might need every one of them there to keep them alive.\n\nJust a little deeper, just enough to get some sort of knowledge about what was going on, and they could turn around and report back. Running away and reporting back a 'flesh tunnel' wasn't really enough information to act on. And, if they left, there was a very real chance the tunnel wouldn't exist the next night. They needed to learn something valuable, anything.\n\nTash wasn't so stupid as to not have measures in place for something like this. Before entering the tunnel, she ran the 'Unexpected Encounter' app on her phone. It'd ping the Prince, and tell her where Tash was. If worse came to worse, someone would eventually show up and investigate. Maybe they'd be coming to scoop up some vampire ashes, but at least someone would come.\n\nIt was like a horror movie script. Anyone with a brain would just turn around, and leave before they traveled any deeper into what was obviously a dangerous situation. But they couldn't. They needed to learn something, and splitting up was too dangerous. It was infuriating, being forced to pick between two stupid decisions, and Tash ground her teeth until her ears hurt. It may have been a witch's tactic, to do everything on the fly, or off the cuff, but the Invictus and Dragon in her very much wanted to pull out a notepad and start creating a proper plan.\n\nPredictably, the witches showed no sign of stopping. They knew the risks, had calculated it no doubt, but, like her, knew the best option was to press on, and learn more.\n\nThe murmuring got louder. It wasn't English, and it wasn't being said by one person. It didn't sound like it was being said by people at all. It was deep and rolling, with a resonance and vibration quality that reminded Tash of throat singing monks. Flesh was a good absorber of sound, and shouldn't have echoed or resonated with the odd voices, but it did, and it became terribly obvious as the vampires got closer, that the murmuring was some sort of chant.\n\nLouder, and louder. Everyone crouched low, until eventually people were using their fingertips against the floor to move as silent as possible. The floor was flesh, and ribs, and shallow blood. She was tempted to taste it; what vampire wouldn't be? But, no, better to not taste the blood that dripped from the walls and pooled on the tunnel path of alien muscle and skin. Vampires were immune to disease and poison, but that probably didn't apply to magical or alien things.\n\nTash bit her lip, and stared on as the tunnel grew larger, widened, and eventually opened up into a room. Room wasn't a strong enough word. Chamber? Whatever it was, it was massive, and it was inhuman. A hundred feet wide, but a hundred feet tall as well. The ribs were gone, and instead, giant pillars of bone lined the walls of the more square room, compared to the round tunnel they'd emerged from. The source of the amber light was clear now. Dangling amber crystals attached to ropes hung from the flesh ceiling, and they glowed.",
        "No, wait, not ropes. Chains. The chains, dangling, swayed gently, occasionally clinking against each other, except the clink sounds were deadened by the sounds of flesh. On the chains, were body parts, attached by meat hooks. Torsos, arms, legs, fresh body parts with skin torn open and bones jammed or tied into the chains, dangled. And as Tash looked closer, she realized the fleshy walls of the chamber had bits of human flesh tied to it, flayed, spread, and hooked to it. Tapestries of skin were stretched taut over metal hooks, latched and secured to the alien flesh of the chamber.\n\nIf they hadn't been vampires, the five of them would be vomiting.\n\nThe source of the chanting was clear now, too. In the giant chamber, against the back wall, was Elen. She was in her wheelchair, with the respirator machine making sure she had easy access to oxygen. There were a few others standing around, hunters, and they were managing various IV tubes that were... connected to the wall. And it wasn't the hunters doing the chanting, it was the faces on the wall.\n\nFaces. On the walls. Perfect, smooth, pink fleshy faces, all with eyes closed, all with immaculate teeth, and all chanting the alien language. Not Latin, or any other old language Tash might have recognized, but it was definitely a language. But, the language aspect was less interesting than the fact there were a hundred faces on a wall of flesh, singing. What the fuck what the fuck what the fuck. Was it their blood, in the tubes being fed into Elen's veins? Had to be.\n\nThere was someone kneeling at Elen's feet. During all this, Elen wasn't simply sitting there. She was leaning forward, with a scalpel in her hand, and she was making marks on a shirtless man's back. A white guy, dark hair buzzed short, average height, with a lean figure of muscle. \n\nDid they walk into a nightmare? Were they inside some chamber of dreams and fear, where the Begotten lived? It was the only possible explanation for the walls of flesh and bone. But, Begotten didn't just randomly open their chambers, connect them to the physical world, for no reason. And as far as she knew from Fiona, Begotten could open and close their chambers into any place where they'd been, but the place also had to share resonance with the chamber. There was no reason to keep a chamber open, when they could open and close it at will.\n\nWhich meant, either a Begotten had opened their chamber preemptively, expecting someone to be coming or going, or this wasn't a Begotten's chamber. She dearly wished it was. Walls of bleeding skin, flexing tendons, tightening and relaxing, and enormous muscle fibers surrounded them. It was the stuff of nightmares. The pieces of corpses used to decorate were almost tacky in comparison.\n\nThe faces on the walls, in their perfect symmetry, kept their eyes closed, and continued to chant. What Natasha would do to know what they were saying. Just knowing what language they were speaking would have been a tantalizing drop of honey on her intellectual curiosity. And why, why flesh? Why was everything made of flesh?\n\nWait. One of the hunters. Tash had seen that hunter get cut open by a werewolf, in the nightmare world. If this shaman could heal the hunters, that made everything so much more problematic.\n\nElen sighed, leaned back, and spent some time rotating her wrist, in pain from the exertion of carving into a man's back. Frail as thin glass. Capturing this woman alive would be difficult.\n\n\"S\u00e1ndor, if you would stop healing so quickly, I wouldn't need to do this so often,\" she said.\n\n\"My apologies, master,\" the Begotten said.\n\nAll five vampires froze, tension drawn tight until it threatened to snap. Not in a chamber, then, if that was S\u00e1ndor; he'd be in his gargoyle form otherwise. Unless there was a way for a Begotten to remain in their human form when inside nightmares? Maybe, but from what she'd seen from the others, and what they'd said, it seemed to be expected they be in their horror form when in dreamland.\n\n\"No matter. We will do this, again, and again, and again, until Azamel is ruined.\"\n\n\"Yes, master.\"\n\n\"And when that day comes, S\u00e1ndor, you need to pay closer attention. Jeremiah and Angela both nearly died, and if I have to sew them back up again, I'll take it out of your hide.\"\n\n\"Yes, master.\"\n\nOne too many masters. This Begotten was being controlled! Tash managed to poke Triss in the side, and blink several times at her, emphasizing as best she could. The Nos nodded, and mouthed 'controlled' slowly. Ok, good, communication. Tash returned the nod, and frowned as she looked out to the room with dangling, amber crystals. If she could see what Elen was doing to S\u00e1ndor's back, what she was carving or writing, maybe she'd get some idea about what to do about it.\n\nOr, maybe the five of them should just run in there and kick some ass? There weren't many hunters, and it wasn't like hunters could take a vampire at close range. The undead would win this fight, if there weren't any surprises.\n\nTash nodded forward, and the five of them pushed out a little more.\n\nThey crept forward, everyone low, everyone deathly silent, and moved to a pile of flesh, a mound of it that came out of the red blood like a tumor. It'd be better if they split up, but Tash needed them close if she wanted to make sure they were invisible. And she was getting tired. Vitae, draining more and more with every moment, demanding she replenish it, or at least stop acting like a super hero and keeping a squadron of people invisible.\n\nThey were way too deep in this for this to become a problem now. And, with decades of Invictus practice under her belt, she wasn't about to let her discipline break when she needed it most. She grit her teeth, and bore it. They moved in deeper, moving to another pulsating nodule of flesh. Not big enough to hide all of them, Jennifer stayed a bit further back, but still near, finding a big rib bone to stand behind.\n\nThis was all so very possibly a trap. Did the vampires find the hunters unawares, or were they hoping to be found? Tash tried to reason through it, but the more she thought about it, the more it seemed like good luck. There was no way Elen would leave herself this exposed on purpose, or have S\u00e1ndor in such a compromising position.\n\nCompromising position. Undefended, and unguarded. She could shoot him. She... could shoot him! If she got him in the head, he'd die. Maybe it'd make up for not landing the shot, and killing Angela or Jeremiah when she tried. There were a lot of those weird, dangling amber crystals in the way though, and she was already strained trying to keep everyone wrapped in the Cloak of Night. But, if she could get a little closer, and line up a shot, she could kill him, and put a huge dent in the tools available to these hunters.\n\nExcept, watching S\u00e1ndor kneel there, eyes empty, staring at the bloody floor of skin and muscle he knelt on, it was clear that he was being controlled somehow. His face was a blank slate. Tash had seen faces like that before, whenever Julias mind controlled some kine; or Viktor, on the rare occasion Natasha got to see that. And she couldn't shoot a man who was a slave, a mind-controlled slave.\n\n\"Here.\" One of the faces on the wall opened their eyes. Black eyes, completely black eyes.\n\n\"Here.\" Another one of the faces opened their eyes. Oh no.\n\n\"Here!\"\n\n\"Someone's here.\"\n\n\"Here.\"\n\n\"Here.\"\n\nElen started coughing, wheezing, a ragged sound of tearing throat and exhaustion, all caught in the mask she wore. The hunters around her brought up their guns, and started scanning, one of them focusing on removing the tubes and needles from the old woman.\n\nTriss looked back, and groaned, nodding toward the entrance they came from. The pathway closed off, like a constricting ring of muscle. They may as well have been inside a stomach.\n\nShit.\n\nS\u00e1ndor got up, leaned his head left and right, earning some loud cracks, and started walking toward them. He may not have been able to transform, but Tash could see the subtle silhouette of the gargantuan gargoyle creature around him.\n\nDouble shit.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Eric~~\n\nThree vampires, and one fresh werewolf, in a brawl with six vampires, and one experienced werewolf. Shit.\n\nCaleb came for him again, and Eric sidestepped the punch. He returned it with his own, and unlike Caleb, he knew how to skim the line. Whoever this guy was, he wasn't a professional fighter, and didn't know how to move by inches. His motions were exaggerated, when they didn't need to be. His punches would hurt like hell if they got him, but now that Eric was paying attention to him and only him, it was clear to see the man was not trained. He was, on the other hand, a brawler, a man who'd learned how to fight the hard way. If he managed to land a punch, it was going to hurt, more than Eric's would.\n\nMuch as fighters like to say otherwise, there was one undeniable fact about fighting that always made fighters uncomfortable: size mattered. It didn't matter if you were Bruce Lee, you were helpless against a two-hundred and fifty pound brawler. And Caleb did have a few pounds on him, a few inches of reach, and height. He'd be in a higher weight class, if this was a proper fight. Getting hit was to be avoided at all costs.\n\nBut, playing by ring rules wasn't required either. And to a professional fighter, there were dozens of dirty tricks they weren't allowed to use, that were suddenly on the menu.\n\nEric ducked in close, too close to get punched, and with his fists brought in to protect his face, raised his elbow and threw it out in a swing. Crack. The satisfying sensation of elbow bone whacking someone in their head. The dirty play came in when, as Caleb stumbled back, Eric struck out the same arm, grabbed the man's short hair, and yanked downward. Having knocked the man off balance meant a good, quality hair pull drove him into the asphalt. He'd only be on his side for a second, but that was plenty of time for Eric to kick the man in his head, hard enough to half spin him horizontal along the street.\n\nWho knew fighting dirty came so naturally to him. Well, they did come at him with a knife. Fighting fair wasn't in the cards anyway. \n\nThe others weren't doing so well. Two of the female vampires had jumped Hella, and they were punching her. Joe and another female vampire were circling Jessy, and Jonah had his back to a wall as the two new male vampires came in closer. The Carthians were all street punks with outdated fashion sense, and it made the whole situation look like a Michael Jackson music video. Just beat it.\n\nEric reached down, grabbed Debby off of Hella, and threw her. To throw someone, get them airborne, was exhilarating. As a human, he'd never fought someone much lighter than him, and never with this much strength available. Debby was light, and he was a colossus in this form. She flew twenty feet before she started rolling. While she was airborne, Eric sank his heel into Kathy's head, hard enough to send her rolling as well.\n\nThese vampires were idiots. Picked a fight at the worse time, and they fought like idiot punks. Their movements were powerful and fast, but predictable, and when the two vampires harassing Jonah turned around to swing at him, it was easy to duck underneath, and nail them both in the chest, a fist for each.\n\nIf there was one god damn thing, one thing in this fucking world he was good at, it was a fist fight. These Carthians didn't know that. All the better for him.\n\nOne of the vamps he punched crumbled, clutching their chest, at least one broken rib. The other was far more durable. He stood up, glared at Eric, and sneered.\n\n\"Sit.\"\n\nEvery ounce of Eric's being, every bit of rage, every bit of frustration and carnage in him wanted to punch this fucker in the face hard enough to collapse it. But, he didn't. He couldn't. As his eyes met this stranger's, a wall crashed into Eric's mind. A steel wall. He couldn't get around it, see through it, stop it, nothing. A wall of total, immutable will smashed into him.\n\nThis was a Ventrue, ordering him around.\n\nHe almost did sit, too, but Jonah punched the man in the back of the head hard enough to send him careening over. Crack, face to the asphalt. As the ability to think, and move his limbs, came back to him in a rush of glorious freedom, he used it. With a snarl and growl, Eric drove the hard toe of his shoe in the fucker's head, hard enough it jerked to the side fast enough to tear ligaments. Potentially lethal, to a human. A vampire would heal, eventually.\n\nJoe and his friend had jumped Jessy, and had started punching her back and forth. That was strange. Jessy was stronger than this Joe, Eric's instincts could see that, and the woman with Joe seemed only as strong as him. Two on one, but Jessy could have fought back, if she went psycho like she did on the monster gargoyle thing. She was holding back.\n\nHe came up behind Joe, growling, and kicked the man in the back. Joe went with the motion, falling forward, but tucking into a roll. Maybe the man was more dangerous than he let on.\n\nJessy turned her attention to Joe's friend, and jumped her, punching, grabbing, slamming. Perfect time for Eric to deal with this Joe fucker, and\u2014\n\nA shoulder smashed into Eric's back. Flashbacks of high school football, except, without the shoulder pad. Eric went down, hands slamming into the street and skin tearing against the asphalt and small rocks. Ow. Groaning, Eric looked at his palms and the trail of blood they'd made a couple feet on the street, before he turned over his shoulder to growl at the man. This fight was pointless, and they were all wasting time while simultaneously exposing themselves to interference. But, fuck it.\n\nEric tried to turn over completely, but Caleb was on him; except the man obviously didn't know shit about grappling. Getting his arm was easy. Getting a leg around his neck, and the other around his waist, almost as easy. Eric pinned the man's hand to Eric's chest, and twisted as he locked the man in an arm bar. And unless Caleb wanted his shoulder to dislocate, or elbow to bend ninety degrees in the wrong direction, he had no choice but to move with the grapple. A second later, he was on his back on the street, perpendicular to Eric, his torso underneath Eric's legs, and his arm up along Eric's waist and chest where Eric held it locked.\n\nOf all the martial arts in the world, there were only two he ever worried about. Boxing, and Jiu Jitsu. So of course, those were the two he learned.\n\n\"We didn't come here looking for a fight!\" Eric yelled, while giving his body enough of an arch to earn a groan of pain from the pinned man. It wouldn't take much to destroy his arm, and sure, the man would heal from it, but that didn't change that getting an elbow bent in the wrong direction was a horrible feeling.\n\nCaleb snarled at him, and tried to sit up. Eric wasn't having it. Didn't the fucker know anything about fighting? Eric locked his grip like steel on the man's forearm and wrist, and arched his back again, forcing his abs up into the man's elbow.\n\n\"Fuck you,\" Caleb said. \"You're just young blood, overstepping your boundaries. A pup like you is going to get people hurt in your ignorance.\"\n\n\"Because I fucking talked to a spirit?\"\n\n\"Because you fucking talked to a spirit. Maybe not today, maybe not tomorrow, but it'll happen.\"\n\n\"I'm willing to talk to Avery, you stupid fuck. Been kind of busy lately, and\u2014\" The tap tap of a sprinting set of sneakers forced his attention back to the Kindred he'd taken out in his drive-by. Eric let go of Caleb's arm, and rolled away, crunching over his shoulder and the back of his neck as he rolled backward. Minor damage caused by his weight, and it healed almost instantly as he got back to his feet.\n\nCaleb, still on the ground, grabbed his ankle, and threw him.\n\nGetting thrown was an interesting sensation. For the first moment, his stomach hit the wall of his insides, giving him that roller coaster sensation. Once it caught up to him, he found his bearings enough to realize he was actually flying through the air like a Frisbee, far enough that he'd probably go thirty feet before landing. Problem: he was flying toward a building. With the spinning and the speed of it all, the best Eric could do was pull in his limbs, and prey for a minimal amount of cuts, as he slammed into a window.\n\nIt shattered around him, and the downward momentum gravity grabbed him with meant a few more points of the sharp glass cut into his skin than he'd like. Worse was the way the inside of the building greeted him with a lovely, hard slap of tile to the ass. And bouncing, especially in his new, heavier body, was not fun either. Also not fun, was how a set of metal stairs stopped him, his back slamming into it, butt to the floor. Each step was a hard edge punching him in his spine, and he yelled pain as white fire danced up and down his back.\n\nGroaning, he got up, one hand reaching for the stairway railing beside him, other against the wall. Where was he? No signs inside, but it was some sort of office building, with short cubicles and computers within, office chairs, desks covered in random crap, and a high ceiling with warehouse metal bars above. Some company had re-purposed an old warehouse into an office building then.\n\nNo one else was inside the building, no noises or fresh scents were present. The stairs beside him led up to an overhang room, where a manager probably watched his workers from the window during the day. Ugh.\n\nDebby and Kathy were the first to jump into the room after him, snarling and growling, like small monsters. Kathy still had her knife, as well. He supposed he should have been happy it wasn't silver.\n\n\"What will it take for you to back off?\" he said, slowly backing up as they approached.\n\nKathy returned his snarls, and passed a knife from hand to hand. \"You're an Invictus lapdog, literally. So, we'll back off, when we've taught you a lesson. You don't work for them, you stop working for them, and you never work for them.\"\n\nDebby nodded, and grinned as she rotated her shoulder. \"And of course, since you're fucking that bitch Jessy, we know we're going to have to pound some sense into you.\"\n\nHe backed up again, back pressing to one of the short cubicle walls. They thought he was retreating. He was setting up his spacing.\n\nKathy came at him with the knife again, relying on her inhuman speed. Fast. He sidestepped, and her knife grazed along his chest as it slipped by. Her speed was used to cover a few feet, but he only had to move six inches to the side with a twist to keep from getting stabbed, stopping on the outside of her arm. And from there, it was easy to grab her wrist with one hand, and slam his palm into the elbow with the other. Quick, sudden movements, with impact.\n\nHe remembered a story once, about training by punching rain drops. Power, speed, direct, instant, stable. These Carthians didn't know how to fight like that, but he did, and he growled at the woman as he destroyed her elbow, bending it ninety degrees the wrong way. Before she could fall, he kicked down at her knee from the side, and with his new strength, it was easy to cave it in, dislocating the knee cap and tearing ligaments in the joint. She fell, howling, screaming, and roaring.\n\nHe had to give it to her, she didn't let pain break her. If she was strong enough to heal the damage, she'd be at him again without hesitation. But, if she was a Mekhet like he figured, she wouldn't be healing that\u2014\n\nDebby tackled him. It was laughable how small she was compared to him, especially now, but she anchored herself to the ground, and tackled upward. Vampire legs pushed her up into him like a freight train, and he rose ten feet in the high-ceiling building, before he crashed down on the tile floor. She full mounted him, and started punching, hammering her fists down. But without momentum to give her inertia, she was too light to keep the position, and he landed a single punch in her shoulder at the side to force her sideways off of him.",
        "His turn. As she got up, he threw his weight at her, and drove his shoulder into her chest, while grabbing her thighs so she couldn't touch the floor, picking her up. Anyone else would have had the wind knocked out of them, but the vampire slammed her fists down on his back. The single second was enough for her to hit him thrice, before her back crashed into one of the cubicles. He was bulldozing forward, and with his new weight and hers combined, they broke through it, through the desk, the monitor on it, and through the next cubicle over, before he forced his shoulders down to slam her back against the next desk.\n\n\"F... fuck you,\" she said from underneath him. \"Invictus dog. Just another tit sucking st\u2014\"\n\nHe punched her in the face, drove his knuckles down against her mouth hard enough to knock half her teeth out, and earn a shriek of agony. She clutched her jaw and mouth and started rolling from side to side, staring at him for two seconds with total hatred, before her eyes closed as she rolled in pain. Maybe vampires were sensitive to having their fangs punched in? Good to know.\n\nHe got up, turned around, and groaned, as Caleb climbed over the windowsill to join them.\n\n\"You're good,\" he said. \"Haven't seen anyone fight like that in a long time.\"\n\nEric spit blood to the floor, and faced the man as he brought his fists up, elbows up. \"Uratha all fight like you? You're just untrained thugs.\"\n\nCaleb roared at him, and took another step toward him. And began to grow. His steps became heavy, until Eric felt the vibration of weight. His clothes disappeared, fading into his body as fur began to overwhelm him. His shoulders exploded in size, doubling, tripling, quadrupling in mass as Caleb's head leaned forward, new body haunched, with colossal arms of pure muscle hanging. A red tint came through the fur, hints of it, highlighting the waves of short gray.\n\nHis steps were no longer in boots, but enormous claws, and each step forced the claws an inch into the tile. The titan stared up at him, nine feet tall, and rumbled a growl deep in his chest, causing the room to vibrate, and for Eric to shiver in kind. Caleb sniffed, no doubt catching Eric's scent with a renewed hunger. His mouth was open a little, enough for his breathing to be audible, slow, deep, no thought given to being quiet. The hulking beast took another step forward, and Eric noticed a small tail swish behind him, before his eyes were drawn back to his gigantic size, the barrel chest and python arms, and their huge claws.\n\n\"Change,\" Caleb said. \"I am... curious.\" He struggled to enunciate, big tongue fighting to create syllables against the contours of his long snout and sharp teeth. \"If you... are Ghost Wolf, then I... will test you.\"\n\nEric gulped, and stepped back again before inching to the side to put a couple cubicles between him and the werewolf. \"I\u2014\"\n\nA rush of blood flowed up into Eric's chest, and he stumbled back a step as he clutched at his sternum, fingers digging into his shirt. His heart rate skyrocketed, and his breathing became quickened pants. He tried to breathe, to slow it down, but his body wasn't listening. His pulse drummed in his ears, like a quartet pounding on a set of drums in a tribal rhythm. Dum dum. Dum dum. Dum dum.\n\n\"You feel, don't you?\" Caleb said, stepping in closer. \"Feel the call. The madness.\" Closer the beast came, and Eric fell back onto his ass as he stared up at the werewolf. \"It sings. It beckons. The hunt beckons.\"\n\nEric gulped and forced himself back onto his feet, only to find himself standing a single foot from the Uratha. Caleb towered over him, buried him underneath his mass, and a drop of drool fell from his chops onto the office building floor. If the man wanted to kill him, he could have done so. He was waiting, and hard as it was to read a wolf's expression, it looked like he was smiling.\n\n\"Change.\"\n\n\"I... I won't. I'm not trying to kill you.\"\n\n\"Need not kill. Blood. No kill. Besides.\" He leaned down, and brought his teeth within inches of Eric's face. \"You fuck vampire, in this sacred form. You can control it. Fight me, and I will test. Come.\"\n\nIt was a drug pumping through his veins. It was a siren's song, beckoning him. It was power and hunger surging up through his body and into his extremities, demanding satisfaction. Something about being near this creature, a fellow werewolf in his most grand form, was calling to Eric. Join in. Change. Transform. Unleash the beast of war within.\n\nEric lowered his head, but all he found were enormous talons beneath him, Caleb's. He remembered those talons, remembered the feel of them sinking into wood, tile, concrete, and stone under his weight. He looked higher, to the fellow werewolf's claws, and the enormous hands. They were hands he'd wrapped around Jessy, and had delighted in taking her small body, and pulling her down onto his length, forcing it into a hole far too small for it. He also remembered grabbing hunters, tossing them aside like pebbles. He remembered Pitt, barely, flashes and images of tearing him and his goons apart. He looked higher, and winced as he found Caleb's teeth closer, two inches from Eric's eyes. He remembered biting into people, and how satisfying it'd been to split flesh and crunch bone between his jaws. It was more than satisfaction, it was a requirement, a piece of him that demanded he indulge it. To bite, and tear, and hunt, and kill, were no more different than a spider weaving a web. Pure instinct.\n\nHe gave into instinct.\n\nCaleb stepped back and gave him room, a strange, inhuman, knowing smile on his snout, as Eric grew to match his height. Eric's fur was darker, almost night black, but other than that, there were few differences between him and his fellow wolf. Titans of muscle and strength, tall, nine feet high, and with long arms that reached their knees since they were haunched forward. Their enormous necks jutted forward from mountainous shoulders, and they pointed their ears at each other as they both offered acknowledging rumbles.\n\n\"You fuck vampire, like this?\" Caleb said, and reached out with his two hands to push against Eric's shoulders. He might as well have lit a hidden river of gasoline in Eric's gut, with the way a simple shove ignited a feral drive in him. If he was trying to make a point, about how easy it was to go insane with rage in this form, he'd made it.\n\nNo longer was Eric forced to obey mass and inertia without a way to fight back. His talons gripped into the floor, and he shoved back against Caleb, harder. His fellow wolf had no choice but to step back, or he'd fall over.\n\nEric focused on his breathing, and made sure every one went deep into his belly. Breathe. Easier said than done. Seeing another werewolf in the Gauru form was wind fueling the fire in his chest, warm, inviting, and intoxicating. It spoke in words that called to him, delicious and almost erotic. Hunt. Find prey. Kill prey. Devour. Land. Territory. Defend. But, it wasn't taking him over, not yet.\n\nHe thought of Jessy, of her naked body pressed against his fur. He closed his eyes and breathed deep, enjoying the memory of her, of her voice, of her animal ferocity. This Caleb fucker wanted to see just how comfortable he was in this form, how comfortable he was as an Uratha, he guessed. How comfortable was he? The Uratha thought he was crazy for having sex in this form. He kind of did, too.\n\n\"The moon,\" Eric said, taking a step toward Caleb, offering a snarl, \"it says I... that... I\u2014\"\n\nCaleb roared at him, and began to circle him, as best as he could in the small space available to the titans. \"Luna speaks to you?\"\n\n\"It does.\" He returned the roar, quick, more of a bark than anything. Debby and Kathy had crawled away, and both vampires were watching now, eyes wide, butts to the floor and weight on their palms behind them. Out of the way enough so they wouldn't get ripped in half accidentally. Hopefully.\n\n\"It? She, worm. She... speaks to Cahalith, in visions.\" Caleb paced to the other side, and dragged a claw along the cubicle, causing the soft wall to crumble downward under the casual weight and pressure. \"Why speak to you?\"\n\n\"I am Cahalith.\" He snarled, and came in a little closer. \"She warns me.\"\n\n\"You have no right... to speak to Luna, Ghost Wolf.\"\n\nThat offended Eric. He didn't know why it offended him, but it did. It burned his skin, and heated it, heated his throat and core, sending blood and adrenaline pulsing. He demanded satisfaction.\n\n\"I am me. I am myself.\" He crouched, readying his pounce. This was going to be a duel between monsters, and that deserved a little respect, at least. No sucker punches.\n\nCaleb did the same, rumbling in his chest as he did. \"We shall see.\"\n\nThey both roared at each other, and the two vampires watching were forced to cover their ears as the vibrations of animal sounds filled the office building. This bastard used the Invictus and Carthian squabble as an excuse to put Eric to the test. Well, fuck him.\n\nThey pounced at each other, and for a moment, Eric thought he pounced an oncoming truck. Eric tried to grab the man's hands, but Caleb slammed both hands downward with his claws out. A bad move for a human to do in a fight, but a great move to do if you're a werewolf with enormous claws. Two seconds into this fight and Eric already made a mistake, one Caleb predicted.\n\nClaws tore through Eric's forearms, causing blood to gush and splatter everywhere, particularly over Caleb. He wasn't a vampire. His blood made no effort to stay inside his body. Instead, it gushed, the claw marks on his arms deep and slicing through veins and muscles alike. Eric's roars turned into howls, and Caleb snapped and barked twice, before lunging in, and sinking his teeth into Eric's neck.\n\nWerewolves heal quickly. Muscles and veins mended, and as the skin sealed, Eric got one hand onto Caleb's shoulder, and tried to push him away. His other grabbed the man's jaw, and pulled down, forcing pressure off the teeth tearing through his neck. When Caleb pulled away, Eric lifted his leg out to kick. His new body was not made for kicking. It didn't have the correct center of gravity, or the correct... anything. Another mistake Caleb took advantage of, stepping back clear out of the range of the kick, and then he pounced forward, undoing the space Eric created.\n\nCaleb's weight slammed into him again, and the beast wasted no time, getting into a full mount. But, unlike a human, Caleb didn't straddle and try and rain hammer fists down on him. Instead, the titan started tearing at his chest and shoulders with his claws, and leaned down to once again start biting at Eric. Thankfully, Eric managed to get his forearm in the way, jamming it under Caleb's neck, but the beast was still sitting on him, tearing into him, while Eric couldn't retaliate at all.\n\nStop letting your trained reflexes guide you. You're not human, you're a beast, a monster. Fight like one.\n\nEric roared, loud, loud enough it was deafening, and Caleb paused as the unnatural howl smashed into his person. Half a second, more than enough time for Eric to turn his head, and use the reach of his neck and snout, to sink his teeth around Caleb's wrist.\n\nThe taste of flesh was haunting and intoxicating. It was delicious. But this was the first time he'd tasted werewolf flesh, and he was not prepared for the overwhelming, overpowering, exquisite taste. If sin and vice had a flavor, it would be this.\n\nCaleb ripped his arm away as he jumped back, leaving behind a chunk of flesh in Eric's mouth. He stared at Eric for a moment, and as Eric got up, Caleb shook his snout from side to side, dislodging bits of Eric's skin and flesh from his own teeth.\n\n\"Do not eat flesh. Not of kin, or of man. It will undo you.\"\n\nEric, preparing to swallow down the enticing meal in his mouth, stared at Caleb, and froze. He wanted to swallow it down. God, every part of him wanted to swallow it down, devour, feast on the flesh of someone as powerful as Caleb. But Caleb wasn't tricking him. The man had not swallowed Eric's flesh, and the weight of his voice sounded like a man trying to be calm and serious. Being a werewolf, Eric doubted Caleb would be able to tell convincing lies in the Gauru form. It was a mode of pure, honest aggression and desire, not subtlety and suave words.\n\nHe could trust this beast, in this way. A laughable stereotype, that you can always trust the honesty of the fist, but it applied. Eric let the meat flop from his mouth, and it melted into a small pool of blood, with a couple bits of skin. Of course, no werewolf part would stay werewolf once removed. But, for that moment, before it changed back to human, there was a chance Eric could have eaten it.\n\nIt tasted divine, ambrosia, but he shook his head until his own saliva washed the bastard's blood away.\n\n\"Good,\" Caleb said, growling an almost pleased sound, before he resumed crouching, ready to pounce at him. He didn't come at him though. Instead, the colossal beast crouched lower, and moved toward a shadow, toward the rest of the remaining cubicles. \"We are not mindless. We are in control.\" His voice blended to the shadow, fading throughout the office building and its high ceilings.\n\nEric could no longer see him. He was gone.\n\nGrowling all the more, Eric started to prowl around, goliath hands resting on cubicles as he began the hunt. Another word drifted through his mind, describing this Caleb, labeling him. Irraka. Sneaky creatures. Assassins in the world of wolves. Irraka would come at him from the side or behind, go for the hamstrings, try and wound him before going in for the kill.\n\nNo, he wouldn't go for the kill. For all the aggression and violence the two of them were swimming in, Caleb didn't want to kill him, only test him. That didn't mean the man wouldn't bring him close to it, though. And the man made it clear he was more comfortable fighting in the Gauru form than Eric was.\n\nThe instinct was there, but as long as Eric didn't let the rage and hunger inside him overwhelm him, as long as he kept breathing, that instinct was on a leash. That wasn't helping him. Keeping it on a leash meant his human reflexes and training were getting in the way. That's what Caleb was testing, to see how Eric could control himself when shit hit the fan, and someone was trying to tear out his throat.\n\nRumbling, Eric continued to circle around, slowly walking about and through the office building, between the cubicles, each step slow, no longer sinking his foot claws into the tile. Carefully, slowly, he moved around, and stopped as he came to stand beside the two vampires. They'd both backed up against the wall, and were staring, sitting, jaws dropped, eyes on him.\n\nHe crouched down beside them, and rumbled in his throat, like a crocodile. They both squeaked, and their eyes drifted down his body, his mass, before up to his mouth and the massive teeth. They were still injured, and weren't healing anymore. Either they were tapped, and wouldn't be healing without a fresh meal or a day's sleep, or they were too shocked to do anything other than stare. Probably both, by the looks in their eyes.\n\n\"Picked a fight,\" he said, and he rumbled another growl at them. So damn hard to talk with a snout.\n\nDebby managed to find a little resilience, and snarled back at him. A chihuahua barking at the tiger. \"Picked a fight with Jessy, because she deserves it.\"\n\nHe was so very tempted to pick up this tiny vampire, and use her as a club against Caleb. No, it wouldn't work. Far too fragile. With another snarl wiping the sneer off the vampire's face, he got up, and resumed his prowl, sniffing at the air. Caleb's scent trail. His scent was everywhere, but focusing on it into exact paths was his only chance of finding the bastard.\n\nHe sniffed the air, breathed deep its scent, and let the Beast in him surface; a little. His ears perked up and pointed about in different directions, catching the various sounds. The vampires were quiet, with no breathing or heartbeat. Outside the building, he could hear Jessy, Joe, and the others beat on each other. Hopefully they'd be fine. The Carthians still had four vampires out there, while Jessy only had Jonah and Hella with her. Then again, Jessy was the strongest vampire in the vicinity. She could take care of herself.\n\nHe continued along the scent, getting down onto all fours and lifting his nose with his slow steps. Further, through the warehouse building, between the cubicles. Further. He growled as he looked at the cubicles he past, his lower position half hiding his body between their walls. He could smell humans, the scent they left on their chairs and desks, their perfumes, their plants, and their computers; and some alcohol. No Caleb, though.\n\nWait, there he was, his scent. His nose followed it between the cubicles through the shadow, his mind painting an image of the scent trail before him, like guiding lines in hospital hallways. Vivid, distinct, and blatant in the darkness. He followed it, staying low, though considering his new shoulder span, he had to be careful to not knock over cubicles as he hunted his fellow werewolf.\n\nMovement. Caleb charged at him, dashing from the side, between some of the short, soft walls. Fast! Holy shit. Eric jumped up and away, and the titan blurred into the shadows as he ran past him, biting at the air where Eric's head had been.\n\nAnd then he was gone, fading into the shadows again. Growling, frustrated, angry, Eric haunched forward but stayed on two legs as he started following the trail Caleb left for him. The bastard was luring him, no doubt, maybe looking for Eric to catch him. Maybe\u2014\n\nWeight crashed into Eric's back. The fucker jumped him, sank claws into his shoulders, and sank teeth into the back of his neck. Roars filled the room, animal and alien, as Eric stood up and unleashed his rage. Caleb hadn't gone for his hamstrings, like he should have. He went for Eric's back, his body, whole mass. Maybe he wanted to pin him, defeat him swiftly, instead of drag the fight on like an Irraka should?\n\nMistake.\n\nEric reached up, high and up over his head and Caleb's, and sank his claws into the man's back, through the tough, leathery skin, and into meat. The werewolf screamed and howled into Eric's bloodied neck, but didn't let go, jerking his head left and right, trying to rip chunks of flesh out of him. Eric leaned back, and then brought all of his weight forward, as he pulled on Caleb's flesh, and threw.\n\nCaleb turned upside down, lost his grip, and careened through the air. His back smashed into a wall of concrete between two windows, before he crashed to the floor. Blood was everywhere. It painted them, coated them, splattered the area, and rained down on the cubicles and desks. None of that mattered. All that mattered, was attacking when the opportunity presented itself. Now.\n\nEric charged forward. Caleb had time to stand up, but that was all he had time for, as Eric crashed into him. Not a pounce, but a full charge, each step gripping into the floor and tearing it to shreds, anchoring him and fueling his momentum. It was more than enough to drive the hundreds and hundreds of pounds of muscle his new body had, into Caleb, through the wall, and into the street.\n\nShit.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nBack to the tunnels.\n\nThe visit to Azamel's had been useful, in a way. It was useful to get inside Jeremiah's head and understand him more, but it didn't lend a change in their sweep choice, no chance to their tactics. Jeremiah had a personal vendetta against Azamel, as Jack had suspected, and they now knew the man had used magic to extend his life. Elen's magic? Maybe. Jeremiah seemed like a healthy fifty-year-old, while Elen looked over a hundred. If she had the ability to prevent aging, why not use it on herself from a younger age? Maybe she only learned it in her later years, and had spent hundreds of years a very old woman.",
        "Christ, that'd suck. It was why Kindred groomed a potential childe before embracing them; you kept your physical body at the point of the embrace, except for what the Kindred body could heal. His scars on his stomach would never heal, because they were fresh and extreme at the time of his embrace, to the point they were more of a deformity than a simple wound, and the embrace kept physical differences like that. Spending eternity with a nasty problem like being overweight, underweight, or being old, would be horrible.\n\nOld. His mom? No, she wasn't old, not yet. In her mid forties and in great shape, since she'd put her life together. Would the embrace undo the damage of the coma? The brain damage? Would\u2014\n\nHe shook his head, and sighed. Stop thinking about it. Stop it. Stop it.\n\n\"Want to talk about it?\" Clara said.\n\n\"What?\"\n\n\"About whether you'll embrace your mother.\" She managed a small smile, but he could tell it was her trying to hide how much sadness she was feeling for him. It made him angry, for a moment, before he let it go. She was doing a better job of meeting his gaze than other people. Least he could do was not snap at her.\n\n\"Me? I can't. I... I could try, I guess. But, it's very draining on a vampire to create a childe, very... raw, on the soul.\"\n\nShe frowned with a glance before looking ahead again. The rest of the crew was behind them, but could hear the conversation, no doubt. \"I guess that's why Kindred don't spread like a virus in the cities where we've run into them. Not a fast virus, anyway.\"\n\n\"Indeed,\" Isabella said. \"We invest a part of ourselves into our childer. It can take months, or even years to recover from it.\"\n\nA part of themselves. A piece of Julias was inside him, and Viktor, and whoever came before. He shivered, and forced down the nasty thoughts.\n\n\"I... I don't really want to... to talk about it.\" Sighing, he put his hands in his pockets, and lowered his head. He did want to talk about it, but not with them. Maybe with Julias, maybe with Antoinette, but for now, no.\n\n\"Just as well you cannot spread quickly,\" Athalia said. \"The planet doesn't need a plague like that to deal with.\"\n\nJack twitched, but kept walking. No, don't escalate that argument. You have a job to do. Focus on that.\n\nGloria didn't seem to agree. \"Plague? Kindred are not a plague! We are what we choose to be. Unlike you.\" Jack looked back to see Gloria glaring at Athalia, and flicking her wrist at her a few times.\n\nAthalia snarled at her, a raspy hiss that earned a squeak from the Mekhet. \"Don't mistake Dolareido for most cities with a vampire presence. The nature of vampires is to spread, slowly but surely, and take over, while turning humans into livestock.\"\n\nIsabella stopped, stepped between Gloria and Athalia, and glared at her. \"We do not. Kindred are forever balanced upon a knife's edge, wrestling with our past, our new selves, and our connections. Unlike monsters such as you, we never make decisions carelessly.\" Gloria might have been quiet, but Isabella was not.\n\n\"Careless?\"\n\n\"You got pregnant, didn't you? What business does a monster have getting pregnant?\"\n\nAthalia glared at the vampire, and ground her teeth hard enough everyone could hear it. \"Don't assume you understand my life, leech.\"\n\n\"I've lived a lot longer than you, monster, and I have seen and spoken with hundreds, thousands of kine. I know more about life than you ever will. You are the definition of a poor mother.\"\n\nEveryone froze, and stared. Ok, that was harsh. That was very harsh. Not that everyone hadn't been thinking it, but Jack tried to keep an open mind. Athalia gave her kid up to an orphanage when she realized she couldn't control the circumstances her horror created. That was reasonable, wasn't it?\n\nMuch as that's how his mind arranged the thoughts, logically speaking, he knew the acid boiling in his guts had a different idea. As far as the venom he wanted to spit was concerned, Athalia was a bitch who deserved to suffer, because of her daughter. Jack hated himself for feeling that, but he did, and he did his best to put the illogical feelings aside.\n\n\"Ladies,\" Clara said, \"we're not out here to fight each other. We're supposed to be hunting.\"\n\n\"Exactly.\" Athalia walked past them all, and didn't bother to dodge hitting Jack with her shoulder on the way past him. \"I don't have to explain my life to any of you.\"\n\nJack glared daggers into the tall, dark-skinned woman's back. Her long black hair bounced against her back as she marched forward. Images of grabbing her hair, and whipping her into the side of the tunnel danced through his mind. It'd be wrong, it'd be horrible, but just a taste of that revenge against Angela through her bitch of a mother would be great. Great, and disgusting. Sickening. You know it won't help you, Jack, so let it go.\n\n\"I wonder,\" Isabella said, \"if Jack's poor mother is indeed embraced, what will she do, when she learns her daughter's been murdered, by your daughter.\"\n\n\"Everyone is someone's son or daughter,\" Athalia said, rage only growing. \"The fuck do you want from me, vampire?\"\n\n\"I want some truth and effort on your part, monster.\" With a shrug and sinister smile, Isabella slipped ahead of Athalia, stopping her, and began to circle her, her vampire tendencies showing through clear as night. Circling prey. \"Mister Terry's report on what happened in the gargoyle creature's nightmare was... forgiving, in how it described your interactions. But I know mothers. What did you say that prevented her death, hmm? What words did you use to save your daughter's much desired execution?\"\n\nJack was surprised Isabella got her hands on the full report. It was for council and Right Hands only. A good argument to be wary of using technology to record everything, he supposed. And it was true that he hadn't explained in great detail the final moments of the fight, only that Jeremiah had shown up and saved Angela at the last moment. That Athalia had begged him to spare Angela at the last moment? He didn't write that down, not in so many words anyway. Isabella was an ancilla vampire, smart, and had both the permission to access high level reports, and the intelligence to read between the lines.\n\nNo wonder she resented him for being picked as Right Hand over her.\n\n\"I'm trying to stop the hunters, my daughter included.\"\n\n\"Will you kill your daughter?\"\n\nJack already knew the answer to that question. Isabella wanted to know, though, and she had reason to. But god damn it, now was not the time to have this argument.\n\n\"No. I will detain her.\"\n\nIsabella scoffed, and folded her arms under her breasts. The corset under her jacket had, of course, made sure both breasts were high and bulging, and she kept the top few buttons of her jacket open so they were on display. When mixed with the ice cold gaze she was giving, it really made her look like a cruel mistress. She'd give Antoinette a run for her money, in presentation.\n\n\"You might detain her, but the rest of us will kill her the moment we get a chance.\" Laughing, Isabella flicked her wrist, in a far more posh manner than Gloria had managed, and began walking again. \"Or, perhaps, a Kindred will embrace her? What delightful revenge against a hunter, making them into the thing they hate.\"\n\nIsabella didn't get far before Athalia grabbed her shoulder and turned her around.\n\n\"Don't touch my daughter.\"\n\n\"We'll cross that bridge,\" Clara said, \"when we get to it. It's pretty obvious she's under Jeremiah's influence, maybe Elen's too. There's no reason to think Angela is\u2014\"\n\n\"Angela is guilty,\" Jack said. They all looked at him, but he kept his eyes on the tracks underneath them. \"I've looked her in the eye, saw into her... into her. She knew damn well what she was doing.\"\n\nSighing, Athalia walked ahead of them, and ran a hand along the curving walls of the tunnels. \"I can't apologize for her, but I don't want to kill her. She's my daughter. I want to capture her, and show her\u2014\"\n\n\"Show her what?\" Clara said, voice growing louder, far more than Jack expected from her. She'd been rather stable in this argument, and now suddenly not. Why? \"Show her her mom's a monster, but she shouldn't be trying to kill you?\"\n\n\"I\u2014\"\n\nClara stomped up to her, loud enough to make Athalia stop and turn to face her. \"You're going to get people killed on a fool's mission, Athalia. Your daughter's a hunter, and psychotic, like many of them are. Ever convince a hunter, ever, in your life to not hunt monsters? Werewolves and vampires, maybe. Maybe! Maybe, because there's a connection to being human there. But monsters? A hunter looks at you and thinks they've found a literal incarnation of the thing that goes bump in the night.\"\n\n\"That... that is...\" She didn't have to say it, they all knew what she was going to say. 'I am that incarnation'.\n\nJack found himself squeezing his hands into fists, until they stared to hurt. Literal monsters, they all were.\n\nHe remembered the thoughts he had, when he was trapped in that chair, being tortured. Athalia still had hope that there could be communication between hunters and monsters; he didn't. There was no talking, no communicating, no bargaining with these people. Vampires, werewolves, and monsters, trying to be the good guys? No. No, fuck that. Fuck that, fuck them, fuck it all.\n\nHe turned around, and started walking in the other direction.\n\n\"Jack?\" Clara said.\n\n\"I'm going home. Sweep's over.\"\n\n\"Mister Terry?\" Gloria said.\n\nHe didn't look back, didn't check to see if anyone was following him. He heard Clara's footsteps for a moment, and he damn well knew if he looked back, she'd be holding a hand out, silently asking him to not go.\n\nHe left anyway.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nMary's body hadn't started to decompose yet. It wouldn't, not for a little while, at least. The morgue was cool, and the metal cupboards they kept people in colder. And, he knew, corpses were cleaned and disinfected. It'd start to decompose eventually though, until someone embalmed it, and prepared it for a funeral.\n\nOf course, there was no one to do that. Grandparents? All dead. Aunts and uncles? None that would make the trip to Dolareido for a funeral, for a sister who never talked to them anymore. Maybe it was a Terry thing, for family to become separated in some fashion or another. That made his mom, and Mary's post-Jack relationship unique, how the two bonded and became best friends\u2014or so it had looked through the windows of their home.\n\n\"I remember,\" he said to Mary, smiling down at her as he pulled up a stool and sat beside her, \"when you ran away, after dad died. I thought you were the most stupid girl on the planet, and a coward. A coward for running away, and stupid for not having planned it out at all.\"\n\nShe didn't say a word. That was good. He wasn't looking for a conversation, just someone to listen to him.\n\n\"And I was right, of course. You were stupid, and a coward. But so was I.\" Smiling, he reached out, and touched her shoulder with the back of his knuckle, grazing the bare skin, white sheet pulled down enough to expose her face, shoulders, and collar bone. \"I just ran inward, instead of outward. We both abandoned Mom, but you came back. I... I never really did, did I?\" He grazed her shoulder a few more times, half hoping it'd wake her up. \"Just, put a wall between me and everyone else. Pathetic, I know. And I kept that wall there, until I grew into it, stunted, misshapen. Miserable.\"\n\nWhat would Mary say to that? She was as much an airhead as Mom, and didn't have an introspective bone in her body. Like Fiona, she was happy because she lived in the moment, with no thoughts to get in the way. He was envious of her.\n\nMaybe he shouldn't be. People who had little introspective ability ran headfirst into dangerous situations. Like, running away from home. That's what he told himself, thinking he was being smart and correct with his approach to life, using his stupid sister as an example. But then, unlike him, she made a mistake, and learned from it, like running away from home and coming back. He didn't make mistakes, and thus, learned nothing.\n\nHe was a child, incapable of growing up, because he was too afraid to take risks and get hurt.\n\n\"But, hey, I'm trying. You might just be proud of me, Mary. I've stuck my head out, and my balls, and even tried to shut my brain off for a while in some situations. Beautiful woman told me to kiss her, and I did. Best relationship I could hope for.\"\n\nMary said nothing.\n\n\"I even did some other stupid shit I'm happy to have done. Nearly got killed, defending her against a psycho with a sword. Psycho with the sword is my friend now. Don't get me wrong, I still hesitate to let myself out emotionally, all the time. Especially now, especially with this... this thing, inside me.\" Groaning, he stood up, and started to pace around, shoes making quiet clack sounds against the solid floor. With nothing but metal cupboards around, filled with dead people, the sound echoed. \"Now, I'm not so sure I should let myself out of the box, you know? Every time I do, this fucking thing inside me starts barking, and roaring, and clawing at me, trying to get out.\"\n\nMary said nothing.\n\n\"I told Ann, told her about it, and how it's triggering some 'rage' issues inside me.\" He air-quoted rage. It wasn't a strong enough word. \"Feels like I'm possessed by some spirit of wrath every time I so much as think about Angela. And that was before she killed you.\" He stopped at his sister's feet, and set his hands on the metal table. \"She killed you. Stabbed you a whole bunch of times. And Mom.\" Sighing, he put up his hands. \"Mom's still alive, for now. Life support. But, she was stabbed more times than you. She'll probably die.\"\n\nWith a slow step, he started to pace around again, circling the whole room, hands in his pockets. \"That fucking woman, Angela. Scars, glass eye, I know she's been through some shit. And her mom? Nothing like our mom. Athalia is cold, angry, bitter, and if circumstances were different, she'd probably be cruel and nasty. I've tried to lend her a hand, help her integrate into the city, but that's not going well. Thought I made progress, but then her daughter fucked everything up.\" Groaning, he threw up his hands, and stared at the ceiling. \"Athalia is worth helping, worth trying to help. But, she doesn't want to kill her daughter. She's stuck between a rock and a hard place, and so am I.\"\n\nMary said nothing.\n\n\"What do you think? If I kill Angela, and I know I will, Athalia becomes my enemy; assuming she doesn't stop me from killing Angela. But... but she killed you, Mary. You have to say something to that.\"\n\nHe walked over to her, and leaned down over her, one hand on the table by her shoulder, the other on her chin, her cheek, touching her with a skimming knuckle. \"The last thing I ever said to you, did to you, was mind control you, wiped your memory of our encounter. You could have known I was alive. It would have been our little secret.\" Her eyes stirred. No, they didn't. He was staring at a corpse, expecting it to wake up, and his mind was desperate to see that. There was no stirring. \"Can... can you... please wake up? I'm getting torn every which way, Mary. All I have are regrets, and... and it'd... it'd be great if you could wake up, and wash away one of those for me?\" He stared, waiting, watching, but Mary denied him, holding perfectly still. \"Please... I'm begging you. I... I've made so many mistakes, and not the good kind. I ruined so many... so many things, from my first life, and now you're gone, and I can't fix them. Please come back.\"\n\nMary said nothing.\n\n\"I need to fix this! I have to fix it! I have to fix it... fix it... It's what I do, right? I fix things, get them working again. I did that for us plenty, when we lived together, right? Fixed your computer so many times. Fixed the stupid washing machine; took a whole god damn week of reading to figure out how, but I did, right? Fixed the DVD player. Remember when you were complaining about taxes, and I had to explain tax brackets to you? Fixed that for you.\n\n\"Been fixing things for my new friends and family too! Fixed the Viktor and Tony problem, fixed the Lucas problem, and now I'm some kind of peace maker between all the paranormals. Fixing those problems, making sure everyone gets along. I helped fix a spider problem! Remember how many spiders I killed for you, back at Mom's? Like that, except a lot bigger.\"\n\nMary said nothing.\n\nHe slammed his fist against the table, causing Mary to tremble. \"I can't fix this if you don't get up! I can't fix anything if you don't get up! Please!\"\n\nGulping down on the dry death in his throat, he set both elbows on the metal table, and rested his forehead to the cold material. His palms buried his head, hiding it away, as the gentle tremors started to work up his body. Crying. But without the Blush of Life, there were no tears. Dry heaves in his throat were all he managed, quiet things that forced up the withered, dried guts of a corpse.\n\nTwo Terry corpses, and one of them wasn't ever going to move again.\n\n\"I'm sorry. I'm so sorry. It's all my fault. It's all my fault, and... I can't fix any of it.\" He reached out, set his arm across her stomach, and pulled her a little closer, so he could press her shoulder to his head. \"Please... get up.\"\n\nMary said nothing. She was cold, and still. Mary was gone, and all she'd left behind was a body.\n\nHe stayed like that for a while. Ten, maybe twenty minutes, crying a vampire's quiet, pathetic cry. Nothing but dry whimpers. Mary didn't mind. She lay there, unmoving, quiet, and let him cry on her shoulder. But, once the ache in his gut started to subside, he forced himself to stand, and smiled down at Mary.\n\n\"I'll make sure you get a proper burial. You used to think angels were neat, right? I... actually, I should take a visit to the house, shouldn't I? Maybe I'll find something meaningful to bury with you.\" Silence. He nodded, letting the icy quiet sink in as he pulled the blanket back over her head. \"Knowing you, it'll probably be angels, or unicorns, or rainbows.\" Everything that a cabinet in a morgue's wall of corpses wasn't.\n\nHe walked toward the door, and looked over his shoulder as he did. \"Goodbye, Sis.\""
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "monster",
        "paranormal romance",
        "romance",
        "slow",
        "vampire",
        "violent",
        "werewolf",
        "romantic"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-06-ch-08"
}