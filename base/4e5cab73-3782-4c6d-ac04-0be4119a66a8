{
    "title": "Uncovering Jamie",
    "pages": [
        "A day out.\n\nSaturday.\n\nI fidgeted nervously with the hem of my skirt under the table, jumping slightly as the waiter brought the coffee I had ordered.\n\n\"Can I get you anything else miss?\" she asked smiling.\n\n\"No thank you, I'll wait for my friend\" I said, my eyes not quite meeting hers.\n\nThe caf\u00e9 was full of guests and the only free table had been at the large front window, a couple of older ladies leaving as I walked in. Lucky break I would usually think, but this time I would have preferred a more inconspicuous booth at the back. Sitting there at the window made me think everyone was watching me, silently judging. I felt alone and exposed to the world. Too exposed.\n\nI sipped my coffee, stared into the cup and tried to ignore my heartbeat and the constant buzz of chatting people all around me.\n\n\"Wow you are beautiful\" I heard. And there she suddenly stood, the reason for my nervousness. The reason I had risked everything. A flaming pixie haircut, piercing blue eyes and all the confidence in the world bottled up in a petite package with a freckled ribbon. Diana, goddess of the hunt, in a yellow sundress and a light blue cardigan, small bag slung over her shoulder.\n\nI felt my face burn hot red with both humiliation and pride.\n\n\"Please, not so loud\" I whispered as she sat down across from me.\n\nShe still stared at me. \"Why? Are you embarrassed? You shouldn't be, you look amazing.\"\n\nMy face was on fire. \"Just... I'm really nervous ok? I don't want to get in trouble.\"\n\n\"Hey, hey, look at me\" she leaned forward and took my hand, her face suddenly full of concern, \"I'm not here to cause you trouble. Don't worry.\" It's ok. I just didn't know what to expect.\"\n\nHer eyes were so beautiful and she had these two freckles at the bridge of her nose that were shaped like a tiny butterfly. My hand burned under her touch. I breathed and tried to relax.\n\nShe called the waiter and asked for a coffee. Then she turned and grinned at me.\n\n\"I didn't realize you were such a cute girl.\"\n\nMy face burned even harder if that was at all possible.\n\n\"Thank you\" I whispered looking at my coffee. I felt her watching me.\n\n\"So how does it feel? Going out I mean? Being here. Being you?\"\n\nI looked in to her eyes and saw nothing but honest interest. No judgement, no ridicule.\n\nI shifted a little in my chair. \"It's terrifying. And awesome. I feel like I'm exploding.\"\n\nHer grin widened. Her coffee came.\n\n---\n\nGrowing up my wiry frame and feminine butt had been the target of some ridicule in high school. At around twenty a kinky girlfriend had made me wear her panties a few times while we fucked and I had been hooked straight away. As soon as I discovered that I could get delivered to my front door by shopping on the internet my habit grew. Then came the stockings, the skirts, the camisoles and dresses. I never planned it, I just went with it. This need to feel the nylons and lace on my skin, to look in the mirror and see a cute girl staring back instead of a skinny, uninteresting guy. It was exhilarating. And I was cute. I looked good. I felt sexy.\n\nBut in private. Always in private. After that first taste of panties I had never met a girl that I was ready to share my secret with. I had of course toyed with the thought of wearing panties and stockings with some girls I dated but I never acted on it. And I had not been ready to share my full feminine side with any one even though I dreamed about it.\n\nUntil Diana. And even then it had been kind of an accident.\n\nAt 27 I was working at a small but well to do cybersecurity firm. I had a good income and lived in a nice if small apartment in a good neighborhood.\n\nI met Diana at work. She swooped in one day all new and exiting in our little world of mostly nerdy guys, a tiny, very pretty girl beaming with confidence. I was smitten from the start. We got on well, Diana got on well with everyone.\n\nAnd so when she drew me a bit out of the way at a company Friday party (picture an office full of really drunk IT nerds) my inebriated brain didn't register the mischievous look on her face.\n\n\"James\" she said looking slightly up at me from her full 5'1 plus heels. \"I want to ask you something. Do you promise to answer honestly?\"\n\n\"Sure?\" I said. \"What?\"\n\n\"No, listen to me\" she said, her voice more urgent and her eyes looking straight into mine. \"I want you to promise me you will answer everything I ask you. OK?\" \"It's nothing bad\" she grinned \"It's just something I've been wondering.\"\n\n\"Erm, OK?\" I said, not really knowing what to expect but not worrying much about it.\n\n\"How long have you been wearing women's panties to work?\" she asked, a hint of a smile still playing at her lips.\n\nFireworks exploded in my drunk brain. How did she know? When had I been indiscreet? Who else knew? What the fuck? Shit!\n\nMy 'deer in headlights' look must have been obvious because she grabbed my hand.\n\n\"Don't worry, I haven't told anyone and I won't. I just think it's interesting. You promised, remember?\"\n\n\"What? ... how do you know?\n\nHer eyes were still locked on mine. \"I've seen them when you bend over at your desk to get something from your bag. Just glimpses. But enough.\"\n\nHer desk was the only one behind mine. Fuck.\n\n\"And what if I don't want to tell you?\"\n\nI could hear disappointment in her voice. \"You promised!\" Then, \"Please? I'm not going to tell or blackmail you or anything.\"\n\n\"Then what?\" Even though I was drunk, my defences were up.\n\nQuite unexpectedly she blushed and let go of my hand. Suddenly she was the one looking vulnerable. \"I think it's hot.\"\n\nMy mind was blown. \"Since forever\" I heard myself say.\n\n \"What?\" she said.\n\n\"I wear panties every day\" my mouth continued, now completely cut off from my brain it seemed. \"I love it.\" My alcohol addled brain somehow regained control and I shut up. Briefly.\n\nThen I saw her swallow, eyes wide. It looked hot as hell.\n\n\"Wow\", she whispered.\n\n\"Yeah\" I said.\n\n\"Why?\" she said.\n\n\"What?\" I said. And they say beer doesn't stimulate intelligent conversation.\n\n\"Why do you love it?\" she asked, and then my brain gave up and let my mouth take over.\n\n \"I just... I ... I love the feel of the lace against my skin, ok? I love to feel it hugging me in the right places, Men's underwear is just so boring, why do you women get to be all pretty in lace and nylons and cute dresses and we just get fucking boring boxers and jeans and shit? Really! We can be pretty in lingerie too! I look cute in a dress too! And It makes me feel good, it's this secret, it's forbidden, it's something taboo, something not acceptable, it's a sexy secret. It's sexy, it makes me feel sexy.\"\n\nI was officially rambling now. I shut up.\n\nHer intense eyes never left me.\n\n\"Are you wearing panties now?\" she asked slowly.\n\n\"Yes.\"\n\n\"What kind?\"\n\nI was suddenly very aware of her nipples poking at the inside of her blouse.\n\n\"Low cut lace bikini ones\" I blurted \"Red.\"\n\nI could feel my cock suddenly waking up and smelling the coffee. I had just told a really pretty girl what kind of panties I was wearing. And her eyes were glistening with what could have been lust. Or maybe it was just the beer lying to me.\n\n\"Would you show me?\"\n\n\"Erm what?\"\n\n\"Come on\" and she dragged me toward the meeting room. My brain was doing cartweels. Was I going to show her my panties. Fuck no. Or Hell yes. Hell yes I was! I was going to show a very sexy girl my panties.\n\nSaid panties were becoming less and less roomy by the minute.\n\nWe stood side by side in the small meeting room at the end of the office. Door closed.\n\nThe lights were on.\n\nShe turned and looked at me. Her face was flushed, her nipples hard, her eyes bedroom. It finally hit me. This was a woman in lust. Talking about my panties had made her totally horny.\n\nAnd she wanted to see them.\n\nWe stood there silently. I reached down to unbuckle my belt. My hands met hers. I let her take the lead.\n\nShe looked me in the eyes while she undid my jeans. I pulled up my shirt.\n\nShe looked down and drew my jeans down over my hips. Red lace appeared. My cock throbbed beneath it. She fell to her knees, her eyes glued to my panties.\n\nShe looked up at me. Now I'm not tall, just your average 5'9, but looking down at her like this made her seem tiny. She drew my jeans down to my ankles.\n\n\"Wow\" she whispered again.\n\n\"You like them?\" I asked like an idiot.\n\n\"I love them\" she said. \"Isn't it uncomfortable? Like tight?\"\n\n\"Not really. Well, maybe a little when... you know...erm...\"\n\nShe giggled. An actual sweet girly giggle. \"Like now?\" she smiled, her eyes never leaving my panties and obviously straining cock. \"You like this don't you?\" She finally looked up at my face.\n\n\"Fuck yes\" I breathed.\n\n\"Me too\" she whispered and her fingers started dragging down the front of my panties\n\n\"You look so fucking sexy like this\" she said as my cock sprang free from the red lace, pointing at her face. Her hands slid around my hips and grabbed my ass through the lace.\n\nAnd then she took my cock in her hot, wet mouth. And for the next few minutes she fondled my ass and balls through the lace and sucked and played with my cock, until inevitably I had to warn her that I was close to coming. And she just moaned and sucked me harder, making heaven and earth explode in my brain and my cum explode into her mouth.\n\nWhen I came down from the crest She was looking up at me smiling, her tounge snaking out to clean her lips. She was absolutely beautiful. And then she stood, reached up and kissed me.\n\n\"Thank you\" she said. Being drunk, and recently voided of cum and coherent thought, I just said \"Ahmrph?\"\n\nShe giggled. \"I love sharing your secret.\" I tensed up, realizing the huge implications of this for my work environment and everything and...\n\n\"Don't worry, I won't tell.\"\n\nI relaxed a little.\n\n\"Look, I need to get going, I'll see you Monday ok?\" She looked at me with those blue eyes sparkling.\n\n\"Sure\" I said, ever the wordsmith.\n\n\"Wear something extra cute to show me\" she winked. \"Don't forget.\"\n\nAnd she was gone.\n\n---\n\nMonday morning came and so nearly did I as I drew the frilly lavender thong up to my crotch and in between my cheeks, carefully positioning my package.\n\nI thought it would be awkward but Diana just gave me a simple \"good morning\" and a smile like always when I sat down at my desk in front of her.\n\nI got little work done all morning, instead thinking and overthinking this new excitement in my life, that my stunning, sexy coworker not only knew about my secret but found it so sexy she had sucked my cock. And then left. And now sat there behind me like it hadn't happened. It boggled the mind. It strained my panties.\n\nThen she asked me smiling if I wanted to grab lunch. Sure. Why not. Let's go.\n\nShe led the way to a diner a few blocks away. We didn't talk much on the way. She grinned a lot. I felt a little awkward. We sat, ordered and then she asked what kind of panties I was wearing.\n\n\"Jesus\" I said \"there are hermits in the Himalayas that didn't quite hear you!\"\n\nShe giggled. \"Sorry. Show me.\"\n\n\"What, here? Now?!\"\n\n\"In the bathroom silly!\" I'll go first and then you come like a minute after.\" And she went.\n\nI just sat there. Shit. My cock twitched. Fuck it then. I went after her. She opened as soon as I knocked.\n\n\"Look, I loved it the other day, but just so we're clear I'm not going to suck you every time ok? But I want you to show me.\"\n\n\"Uh, sure\" I said. This was a bit weird. But also a bit sexy.\n\n\"Ok so show me\" she said, leaning up against the wall opposite, her eyes suddenly hungry.\n\nMy cock reacted instantly. There was something about her nearly ordering me to expose myself to her that made me shiver inside. I undid my jeans and pulled them down. I felt the heat of her look on my crotch. It made me insane with lust. My cock grew.\n\n\"Fuck yeah\" she said. Those are awesome. You look fucking hot in that thong.\"\n\nHer fingers unconsciously caressed the edge of her breast. \"Turn around. Let me see your ass.\"\n\nI flushed red. I turned. Let her look at my ass. Heard her give a silent whistle. My cock burned.\n\n\"Turn around again.\" She stepped closer to me. She looked me in the eyes, brought one hand up to pinch her nipple and with the other she grazed my cock through my panties. The front was wet with my juices. She exhaled her pleasure, let go of her nipple and stood on tiptoe and whispered.\n\n\"You love this don't you? You love me watching?\"\n\n\"Y..yes\" I breathed.\n\n\"You sexy little slut\" she whispered. I swear my heart stopped.\n\n\"Let's eat\" she suddenly said, opened the door and was gone. I scrambled my jeans up and looked in the mirror. I looked like I had just had sex. Flushed. Obviously horny to an inch of my life.\n\nI sat down at our table. Our food was there. Diana was chewing. And grinning.\n\n\"So how did that make you feel James? Tell me. I want to know.\"\n\nI cleared my throat. Picked at my food.\n\n\"Jaaames...?\"\n\n \"I've...\" I closed my eyes. \"I've never felt so sexy in my life.\"\n\nDiana positively glowed.\n\n\"Do you want to be my little pantieslut James?\"\n\nMy face burned bright red as I looked around. \"Diana please...\"\n\n\"Do you James?\"\n\nI swallowed hard. My eyes burned a hole in my plate.\n\n\"Yes.\"\n\n\"Look at me James.\" I did. Her eyes burned like blue ice.\n\n\"Look I don't want you to do anything you don't like. Promise to always be honest about what you want okay?\"\n\n\"Okay.\"\n\nThere was that beautiful smile. Her cute freckles shining at me. I felt warm.\n\n\"So... I want to hear you say it. What are you now?\"\n\nI took a deep breath. In an instant I considered my life without this. Going back to wearing my panties in secret and dressing up on my own in my apartment wondering if I would ever have the nerve to take it any further than that. And then I looked at her smile and remembered how she had made me feel in the bathroom earlier just by looking at me. And I realized that more than anything I wanted to feel like that again.\n\n\"I want to be your little pantieslut\" I whispered.\n\n\"Good boy, I'm proud of you\" she whispered back.\n\nI can't describe how it made me feel. My whole life was turned upside down. I never knew how good a few little words could make me feel. Diana was proud of me. Her pantieslut. Oh God what was I doing? Where would this go?\n\nAnd then she touched my hand and looked into my eyes and I just knew I would follow her lead.\n\nSo the next few days went like that. I put on new panties every morning and at lunch Diana would inspect them. Look at them, touch them, admire them. She would talk to me, compliment me, call me her slut. That really got to me. I don't know why, but it just lit me up inside.\n\nI would stand there in the bathroom in my girly panties, jeans around my ankles, her hot breath whispering dirty things in my ear. Her fingers dragging over my aching cock. And each night I would furiously masturbate in those same panties, my mind awash with images of her and the things I wanted to do to her. For her to do to me. The sight of her that first night, on her knees, with my cock in her mouth. Her hands on my ass. Swallowing my cum.\n\n\"Hey James?\" I snapped out of my after-panty-inspection daze. \"I've been thinking about something you said.\" Her head tilting, looking at me.\n\n\"Hmm?\"\n\n\"I look good in a dress too.\"\n\n\"You would look good in a potato sack Diana.\"\n\n\"No you said that, at the party: I look good in a dress too.\"\n\nI froze.\n\n\"What? No...I...why would I say that... I was drunk.\" Rambling. Grasping at straws. Panties were one thing but this was my secret. My secret. My big... Fuck!\n\n\"James? Be honest, remember.\"\n\nMy face fell.\n\n\"Look... look I just...I can't. I can't.\"\n\n\"She reached out for my hand. The simple touch of her fingers on my skin calmed me. I looked into her eyes. \"It's just complicated okay?\"\n\n\"Okay. I understand. Can I just ask one thing?\" I nodded.\n\n\"This is the only thing that matters baby. Does it make you feel good?\"\n\nI nearly choked up. It was the \"baby\" that did it. First time. I took a deep breath. And then another one.\n\n\"Yes.\"\n\nHer smile lit up the whole diner.\n\n\"Oh my God I love that. That is seriously sexy baby. Is it just a dress or do you, like, go all the way? Full girl outfit?\"\n\nI closed my eyes. \"Yes, all of it.\"\n\n\"Make up?\"\n\n\"Yes.\"\n\n\"Oh my...\" Her face was full of honest wonder, like a child with a new toy. Then a hint of a smile appeared and a bit of a blush. \"So... are you a cute girl? Like, I can kinda see it working.\"\n\nMy face burned. \"I look okay.\" She beamed at me.\n\n\"I want to see you\" she said, and leaning in for a whisper, \"in panties and a pretty dress. I bet you look sexy.\" The pressure of her grip on my hand intensified while she spoke. I knew this was turning her on. That turned me on so much. My cock strained against the blue Brazilians under my jeans. I mustered the courage for the answer that I knew would either change or ruin everything.\n\n\"Okay, but not here. Too close to work.\"\n\nShe was giddy with excitement. I could see this was making her horny. I suddenly got it. Thinking about me in a dress was making her horny. A mental picture of her on her knees in front of me, lifting the hem of my dress and ducking her head underneath to suck my cock drifted through my brain. I shuddered involuntarily. And I realized I wanted this more than anything in the world. For her to see me as I saw myself in the mirror. A cute girl in a dress. Instantly it became an urge, an itch I knew I had to scratch or go crazy. I wanted her so badly. To be hers. To be her little slut.\n\n---\n\nSaturday\n\n\"I can't believe how good you look, just wow\" she whispered.\n\nI was still blushing like a can of red paint.\n\nThe waiter brought her coffee. \"Can I get you girls anything else?\"\n\n\"No thanks\" Diana said. When he turned away she leaned back in her seat and just looked me over.\n\n\"Well look at us. Just two girlfriends having coffee together.\n\nIt was like a stone was lifted from my chest as I understood what she meant. I had passed. The waiter really just saw two girls having coffee. When I thought about it no one had given me a second look the whole time I had been sitting there.\n\nI smiled and relaxed a little. Diana smiled back.\n\n\"You realized just now didn't you? You came here to meet me and you really didn't know if you would pass?\" I shook my head slightly. \"I can't believe you did that for me. I could have met you at home if you wanted.\"\n\n\"I wanted to.\" I said, realizing it was the truth when I said it. I had dreamt about going out dressed, to walk around, to exist among people but not only in my own safe but lonely bubble. Diana hadn't forced me to, her control had just given me the perfect excuse to conquer my fears.\n\n\"I wanted you to see me...like this.\"\n\nHer low voice carried over our table. \"Thank you. You are so fucking sexy. Come here.\" She leaned over the table and picked her phone up for a selfie of us together. When she showed me the picture I saw it clearly. Just two short haired girls at a caf\u00e9, a stunning redhead and a cute blonde, her makeup drawing attention to her green eyes and mouth. The redhead in a yellow sundress and light blue cardigan and the blonde in a short, red circle cut skirt and a white button down blouse. The blonde didn't seem to have any breasts to speak of but it just suited her slim bodytype.\n\nIt was me and it wasn't. It was strange. I had seen this girl so often in my mirror at home, but there she was just chillin' with her friend. Out in the world. It felt liberating. I could do this. I wanted to do this.\n\nDiana watched me as I studied the picture and all this registered in my mind.\n\n\"So, Jamie. Tell me about yourself.\"\n\nHuh. I had never given myself a feminine alias. I had always just been James in a dress. But Jamie sounded right when she said it.",
        "\"Uhm, I'm 5'9, I live alone and I don't go out that much. And I'm a slut\" I whispered.\n\nDiana laughed. It made me giggle.\n\n\"You look cute when you giggle\" she said. I blushed. \"Do you have like a whole wardrobe or something?\"\n\nI told her no, I didn't have a lot of clothes, just two skirts two dresses, some tops, two pairs of shoes and then mostly just panties and some lingerie.\n\nShe sat up in her chair while I talked about this in a low voice. All the while my cock was doing it's best to rip through my panties. It really wouldn't do to have a raging bulge at the front of my skirt right now.\n\nShe studied my face. \"Is this turning you on?\" she asked.\n\nI hesitated a little. \"Yes.\"\n\n\"Me too.\" She said instantly. And I could see it, the familiar horny spark in her eyes.\n\n\"Finish your coffee, we are leaving.\"\n\nShe stood up and walked to the door, leaving money on the table. She very obviously looked me over bottom to top as I nervously stood, smoothed down my skirt and walked towards her.\n\nOnce we were alone on the street she steered us toward the park.\n\n\"What do you like about dressing up like this?\"\n\n\"Erm...I like that it's me but not me, you know? And...\" I paused awkwardly.\n\n\"I totally get that. I love that it's you but not you. What else?\"\n\nI nearly whispered. \"It makes me feel pretty. I feel cute. Sexy.\"\n\nDiana took my hand as we walked through the park gate. She led me down a path until we got to a park bench in a secluded spot where she sat down and positioned me to stand in front of her.\n\n\"You are beautiful Jamie. You are so fucking sexy. When I saw you in the caf\u00e9 I didn't believe my eyes. You look amazing.\"\n\nI shivered as her eyes ran up from my low heeled shoes, up my bare and smooth legs, over my skirt and up my body to my face.\n\n\"I want to fuck you like this Jamie. I want to fuck my little beautiful slut. I've never been with another girl. Will you be my first?\"\n\nI nearly blew my load right there listening to her. I wanted to fuck Diana more than anything in te world and now she sat there telling me she wanted me -- the girl me. It was mindblowing.\n\nShe giggled. \"I can see you like that. We might need to do something about your skirt there Jamie.\"\n\nFuck. My cock was trying to escape the confines of my panties. I had never really gotten the hang of tucking, never really tried it, never had to before. But now my cock was creating a slight bulge in the front of my skirt. Bad. Bad!\n\nDiana shushed my panic and took my hands. Then she looked in my eyes.\n\n\"Which panties did you put on for me today slut Jamie?\"\n\n\"The red ones\" I said. \"Same as at the party.\"\n\nShe let go of my hands.\n\n\"Show me.\"\n\n\"What? Here?\"\n\n\"Yes. Show me your pretty panties slut.\"\n\n\"But...\"\n\n\"Jamie, there is no one else here. I am really horny and I want to suck your little slut cock right here, right now. Lift your skirt and show me your pretty panties.\"\n\nI stared down at her sitting on the bench in front of me, looking at me expectantly, just like in my fantasy. My fingers found the hem of my skirt and slowly lifted up the front, exposing my thighs and my bulging cock in it's red lace prison.\n\n\"That's better\" she said, her voice husky with lust. Then I watched her as she moved towards me, her face disappearing from view under my skirt. And then her tongue ran over my cock through my panties. Again and again. Then she pulled them down and her mouth engulfed me. She took me deep, pushing down as far as my cock would go. Her hands roamed underneath my skirt, over my ass, down my thighs, her fingers running in between my ass cheeks and cupping my balls. I tried to watch for people but couldn't concentrate on anything but the crazy pleasure she was giving me, insanely heightened by the situation and the sounds she was making, slurping and moaning under my skirt. This had been my fantasy and it was happening right now.\n\nI was dressed as a woman, in a public park, getting an incredible blowjob from the most beautiful and sexy girl I knew. It didn't take long for me to blow my load in her hot mouth. I came so hard I thought I would pass out. Endless spurts of cum pulsated through my cock and in between her lips. When I was fully spent she stood up and leaned into me for a kiss. I had tasted my cum before so I didn't think twice about kissing her right after blowing my load in her throat. She laced her fingers behind my head and pressed her lips to mine, and I found she still had my full load in her mouth. Strangely I almost got hard again feeling her tongue push my cum into my mouth. It was so fucking erotic. We kissed for some time, playing with my cum between our mouths, finally swallowing it together.\n\nShe pulled away and smiled at me. She laughed and then fixed me with a stern look.\n\n\"You are such a slut. Having your girlcock sucked in public.\"\n\nI blushed red. She leaned in again, her fingers tucking my softening cock back into my panties.\n\n\"I love your girlcock. I want it to be mine. I want to own it. Will you give me your girlcock Jamie?\"\n\n\"Oh God yes!\" I blurted.\n\n\"Say it Jamie. What do you want?\"\n\n\"I want you to own my girlcock. It's yours. Please make me yours.\"\n\nHer eyes burned at me.\n\n\"I will. You are mine now my sexy little slut.\" My knees went weak.\n\n\"Now, we are going to go to my place and you are going to bury your pretty face in my pussy until your mascara runs down your cheeks. And then I am going to fuck you.\"\n\nShe stood on tiptoe and whispered into my ear. \"Every. Way. That. I. Know.\"\n\nI couldn't speak.\n\nWe walked out of the park and into my new slut life.\n\n\n\n \n"
    ],
    "authorname": "redgarters",
    "tags": [
        "trans",
        "blowjob",
        "erection",
        "erotic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/uncovering-jamie"
}