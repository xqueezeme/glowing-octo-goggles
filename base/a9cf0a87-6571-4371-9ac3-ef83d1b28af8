{
    "title": "What The Cat Dragged In Ch. 07",
    "pages": [
        "Big thanks to all the commenters, voters and readers. Knowing you're all enjoying makes my day! :)\n\nMore plot in the next chapter, I promise.\n\npsyche b. \n\n7. Creed's Folly\n\nThe lack of motion woke Kelly out of a tenuous sleep. \"Are we there?\" She asked absently, rubbing at her eyes.\n\n\"If by 'there' you mean 'breakfast', yes.\" He smirked a little.\n\nKelly glanced out the window at the neat, white building they were parked in front of. She could see several people through the wide windows framed with blue and white checked curtains. She started pulling her fingers through her hair, trying to put it in some kind of order. She glanced in the mirror on her sun visor and decided she looked about as presentable as she could be after traveling all night. It struck her that she hadn't even seen anyone else since he found her in the woods.\n\n\"You gonna fuss all goddamn morning?\"\n\n\"No, sorry.\" Kelly blushed.\n\nShe had to trot to keep up with him across the parking lot. \n\n\"Just the two of you this morning?\" The hostess, an older woman with frizzy blond hair, smiled. A Maine accent softened some of her words and expanded others.\n\n\"Yeah.\" Victor answered, his eyes scanning the room.\n\n\"Table or-\"\n\n\"That booth.\" He pointed to a corner booth that had a view of the whole room as well as the door.\n\nThe hostess looked like she was about to protest, but he raised an eyebrow. She picked up two menus. \"Follow me.\" \n\nThey both followed the woman through the half-full room. Some of the other patrons stared openly; some took great care not to look. When he glanced back at her, Kelly could see his jaw clench just a little tighter.\n\n\"Susan'll be your waitress. She'll be right with you.\"\n\n\"Where are your restrooms?\" Kelly asked.\n\n\"Right over there, dear.\" She pointed to the far corner of the room.\n\nKelly caught the look of motherly concern, but ignored it. \"Thank you.\" She looked at Victor. \"I'll be right back.\" \n\nShe waited for him to acknowledge what she said with a nod before she walked away. Kelly could feel his eyes on her until she was out of sight behind the closed bathroom door.\n\n*~*~*~*~*~*\n\nAlice's Kitchen wasn't his first choice. He'd been to the house in Maine three times, and each time he'd stopped at Gordon's Truck Stop. It was a grungy place with a transient clientele and an equally transient staff that didn't give a shit if you were a serial killer or the fucking president himself. They'd serve you the same greasy food and forget your face as soon as the bill was paid. \n\nHe'd actually pulled in there, but then he'd looked over at the frail. She was curled up on the seat; her delicate ankles were bare and crossed. The top one still bore a pink scratch over her anklebone from earlier. She wouldn't have complained. Not about the shitty food, the leering looks she was sure to draw, or the stink of unwashed flesh that always surrounded those places. She'd been kept wallowing in shit too fucking long in his opinion. He'd driven out again without waking her, telling himself that it was a preventative measure. He was preventing some asshole who looked at her too long from going home with his balls in a to go box. That was him, Victor Creed, protector of fucking humanity.\n\nAlice's was one of those places where he was never sure of the reception he was going to get. This wasn't the worst he'd seen, but the stares and whispers started as soon as they walked in the door. He knew the frail noticed the looks, he could tell that much when he glanced back at her. He could also tell that she wasn't just ignoring it or oblivious to it, she just didn't give a shit. That was almost enough to make him smile.\n\n*~*~*~*~*~*\n\nAs Kelly made her way back from the bathroom she noticed two things; one was that everyone in the room seemed to be trying not to look at her while they speculated to their companions about 'what that poor girl is doing with that mutant', and the other thing was that the coffee cup Victor was drinking from was almost completely dwarfed by his hand. When she passed a table of four old ladies who were particularly loud in their speculations she casually flipped her hair over her shoulder, giving them a good view of some of the bites and bruises on the side of her neck.\n\nHe looked at her closely. There was a blend of pleasure and lust in his eyes. \"You did that on purpose.\" \n\nKelly shrugged, a smile playing around her mouth. \"If they want to talk, I figure they should have something to talk about.\" She sipped the apple juice he'd ordered for her. \"I don't think I've ever seen you drink coffee.\"\n\nHe growled softly. \"They don't serve beer until four.\"\n\n\"This isn't somewhere you would usually stop, is it.\" \n\n\"Just figure out what you want.\"\n\nKelly scanned the menu. She couldn't remember the last time she had so many choices and it was all a little overwhelming. Usually she ate pretty much what he did, with some extra fruits and vegetables thrown into the mix. She chewed on her lower lip, feeling stupid for being so anxious about something so normal. The tip of one claw stroked lightly over the back of her hand. She lifted her eyes.\n\n\"What do you like to eat that I don't?\"\n\n\"I don't know, fruit, sweet things sometimes-\"\n\n\"Good. You're still too damn skinny.\" He took his hand away from hers.\n\nShe sighed. \"I'm an idiot aren't I?\"\n\n\"Yeah,\" he finished the last of his coffee and grinned, his fangs clearly visible. \"But don't worry; I'll break you of it.\"\n\nKelly couldn't help but blush at the suggestive purr in his voice.\n\n\"Are you folks ready to order?\" The waitress looked nervously at Victor.\n\n\"Yeah. I want three orders of steak and eggs and I want the steak nice and rare.\"\n\n\"You want two of those to go and one now?\"\n\nHe looked up at her; Kelly could see how hard he was working to keep his tone level. \"No. I want all three now.\" He looked at Kelly. \"Frail?\"\n\n\"The french toast.\"\n\n\"You want bacon or sausage with that, hon?\"\n\n\"Sausage, please.\" Kelly wasn't sure she would eat it, but Victor probably would. Even thought she was getting used to it, the amount he ate was still amazing to her.\n\n*~*~*~*~*~*\n\nKelly spent the rest of the trip awake with her book open in her lap. Her anxiety was still there, but this trip had been so much different than the trip with Roland had been. It was less than a month ago that she'd been bundled into Roland's car, but it seemed more like years now. It had only taken Roland three hours to drive to the parking area where he'd left the rusty hatchback. It'd been dark and her scalp had been bleeding. Her wrists were bound with electrical tape and secured to the door handle. The whole time she'd spent listening him to him talk, not because he was interesting, but because through the fog of shock and pain she knew she was going to have to figure a way out or he was going to kill her.\n\nVictor had never said anything more about how Roland had 'died', and she had never asked. She was fairly certain that Victor had killed him. In the beginning, she'd tried to muster some kind of shock or revulsion about that, but she couldn't. She knew Roland was carrying a gun. However Victor had done it, he'd been defending himself. The fact was, if she'd been able to find or make the opportunity she would have done it herself.\n\nShe was still waffling on whether or not he'd killed the PI Stan had sent after her. Victor could have just sent him in the wrong direction, but the way he said 'Embry won't be back' seemed more final than that. She was probably reading too much into it. Victor was big and intimidating and she was convinced that he liked to scare people; she knew he was good at it. She never thought for one moment that the threats he made to her were just words. But a killer? She told herself that was impossible. Now she just had to convince herself.\n\nKelly focused on her book again. Last time she'd had to listen to Dawes yammer on while her hands went numb and the blood from her head wound soaked the neckline of her dress, pasting it to her skin. This time, she was well-fed, warm, and listening to Beethoven. She glanced over at Victor, a little smile crossed her face and she let herself be absorbed into the world of Captain Nemo and the Nautilus.\n\n*~*~*~*~*~*\n\nHe'd left the lane almost exactly as he'd found it, cutting the vegetation back only enough to ensure he could drive in and out without scratching up a vehicle. The trees still grew close to the road and close to each other, the branches reaching out and crossing overhead. The frail noticed the change in the quality of light and lifted her head from her book.\n\nShe shifted nervously in her seat. Anxiety was starting to creep into her scent again, but this time it was mixed with excitement. \n\n\"Gate's around the bend.\" He couldn't help but smile a little.\n\n\"There's a gate?\"\n\n\"You think I'm gonna bring you someplace just any asshole can walk into?\"\n\nShe blushed. \"I didn't know what you had planned really.\" \n\nAs soon as they were around the next sinuous curve, an intricate wrought iron gate came into view. It was one of his additions. A spiked fence effectively cut off the large section of land around the house. There were other details about the gate and the fence, but she didn't need to know any of that for the moment. He pulled up to a box and punched in a code. The gate opened, and he drove in. \n\n*~*~*~*~*~*\n\nCalling it a house was a gross understatement in Kelly's opinion. The long driveway lead to a sprawling Victorian mansion. Ivy had gained a foothold on the right side, but what she could see was a weathered gray stone. Octagonal towers watched their approach through narrow, arched windows. Her eyes danced over the slopes and slants of the rooflines, following each one until it intersected two more, making her head spin.\n\n\"You just wanna sit and look at it, or you wanna go in?\" He was grinning again. She hadn't realized they'd stopped.\n\n\"It's amazing.\" She breathed, still hesitating to get out, afraid it was some sort of dream and opening the door would shatter it.\n\nHe grasped her hand, lightly nipped the meaty part of the heel. Kelly jumped a little. \"Got your attention now, frail?\" He was still wearing a self-satisfied grin.\n\n\"Yes.\" She blushed.\n\n\"Good.\" He drew his tongue over the spot on her hand. \"C'mon.\"\n\nKelly got out and followed him into a spacious entry hall. The soft beeping of a security system drew her attention. He used another code to silence it. Kelly walked a little further inside. A wide staircase curved upward. A cut crystal bowl sat on an antique table, catching and fragmenting the light that poured in. Two chairs and several paintings appeared to be from the same period. She walked further inside, taking it all in. The sound of her steps was suddenly muffled by the deep oriental carpet that occupied the center of the space. She heard him chuckle behind her.\n\nUncertainty hit her and Kelly shook her head a little. \"It's too nice, I'll break something.\" She took a step back. \"I'm clumsy, I always have been.\" She took another step and hit his body.\n\nHe picked up the crystal bowl and threw it casually at the hardwood floor. Kelly recoiled from the shattering glass. \"Shit happens. When I'm around it tends to happen a lot.\"\n\nKelly needed to move to hide the little tremors that were going through her, even if she couldn't fully explain why she felt like shaking in the first place. \"Where do you keep your broom?\"\n\n\"Gonna break you of that, frail.\" He was wearing a predatory smile. \n\nKelly stepped away from him, her heart beating faster. \"Cleaning up broken glass? That seems like a good thing to me.\" She couldn't suppress all of the little tremor in her voice.\n\nHe advanced with a lazy stride. \"Running away when you don't know where you're going ain't too fuckin' smart.\"\n\nShe moved back slowly, maintaining the distance between them. \"Not running away, just looking for a broom.\" Kelly opened the first door on her right and found a spacious sitting room. His continued advance drove her deeper into the room.\n\n\"Find one?\" He closed the door behind himself. \n\nKelly heard the soft click of the lock turning. His grin grew wider. Her eyes darted around the well-appointed room, until they landed on another door in the far corner. She tried for a non-committal shrug and failed. \"It was only a first try.\"\n\nHe followed at the same slow, stalking pace. Kelly could hear blood rushing in her ears. She reached for the doorknob, before her fingers could touch it; his hand was on the door, his body close to hers. \n\n\"Off limits, frail.\" His voice was both seductive and frightening. He leaned close to her ear, the tip of one claw playing over the back of her neck. \"And you know what happens to little girls who go places they shouldn't.\" The rough surface of his tongue stroked over the shell of her ear. Kelly bit her lower lip, but the soft whimper still escaped. He let her slide out of the little trap he had her in. He turned with her, the two of them moving in a predatory dance.\n\n\"Goin' someplace?\" He chuckled darkly. For each step he advanced, she retreated until she ran into the back of the sofa. Her fingers dug into the cushioned back and she began to edge more toward the door that led to the hall. He allowed her to get to the end of the sofa before caging her in with one arm. She shifted to go the other way, but found that avenue of escape blocked as well.\n\nHer eyes were locked on his, her breath coming faster. \"Victor-\" \n\nHe smiled and pulled one finger down the front of her chest, his claw slicing through her sweatshirt and the front of her bra. When he reached the hem, he pushed the ruined garments off of her shoulders without touching her skin. The lack of contact made Kelly aware of just how much she needed him to touch her. He bumped his head against hers and pushed in a gesture of feline affection as his claws sliced through the waistband of her pants and down over her hip. This time though, her skin wasn't spared. Kelly whimpered softly and pushed back against his head with hers while the rest of her clothing pooled around her feet.\n\n\"Want something, frail?\" His voice was low and laced with danger. Just the tips of his claws danced over her naked skin. Kelly arched her back, her nipples puckered and throbbing. He deftly avoided them, then circled around the dusky pink edge. Kelly nodded, her knees trembled. \"If you're good, maybe I'll let you cum.\" He nipped her earlobe. \"You gonna be good?\"\n\n\"Yes.\" She would have agreed to just about anything in that moment. Her fingers dug into the sofa cushions. Her head was swimming in need and ache and fear and his musky scent. \"Please.\" Kelly was certain that in another minute she wouldn't be able to breathe at all, let alone form words. \n\nHe dragged his rough tongue along the side of her neck. She tilted her head, presenting it to him. \"We'll see.\" He nipped. \"You're gonna walk to the other side of the sofa and put your back to me.\"\n\nKelly hesitated, then did what he said. To still the nervous trembling, she crossed her arms over her breasts. \n\n\"Three steps forward, and kneel.\"\n\nShe could feel his hungry gaze boring into her back. Her legs trembled as she moved. With every step the slick wetness between her legs reminded her of how much she needed him. As she knelt, she heard him moving around behind her, shedding his clothing. \"What-\"\n\n\"Playing twenty fuckin' questions ain't what I had in mind.\" He put his hand on the back of her neck, his fingers wrapped partway around her throat from behind. The pressure of his thumb on the side of her neck kept her head turned away from him. \"Got anything else you wanna ask?\"\n\n\"No.\" The word was barely a whisper.\n\n\"Smart answer.\" He pushed against the back of her neck. Kelly ended up on her hands and knees. He pushed again, but she resisted. He clucked his tongue and traced her lower lips with on claw. Kelly started to tremble. \n\n\"I don't think you really wanna fight with me frail, so I'm gonna to be a nice guy and give you another chance.\" He pushed again, harder this time. Kelly ended up with her cheek against the carpet. \"Better.\"\n\nHis mouth started to move down her spine, following the shivers that were already racing along that pathway. She didn't resist when he opened her legs wider, his fingers followed the same trail his mouth had blazed, leaving her throat. For what seemed like forever, he didn't touch her at all. Kelly started to tremble again. A thousand half-formed awful possibilities spun inside her head. \n\nThen she felt his tongue tease over her delicate inner lips. Her gasp was filled with as much shock as pleasure. His hands covered her hips, the heels of his hands opening her wider, letting his tongue find the sensitive bundle of nerves hidden in her folds. His tongue flickered over it, bringing her right to the edge. Then, without warning, his hands and mouth were both gone.\n\n\"Please don't stop now!\" She whimpered.\n\nHe chuckled. \"You weren't good. Be thankful I decided not to punish you.\" She felt him shift, the broad head of his erection pressing against her entrance. Claws bit into her already injured hip as he pushed as deeply inside her as her body would allow. The suddenness ripped a scream from Kelly's throat. Her fingers bit into the carpet, her back arched.\n\nOne large hand stroked down her back, his body folding over hers. She could feel his low purr as much as she heard it. Slowly, she felt herself relaxing. He nipped her shoulder and started to move hard and fast. Before long, Kelly lost track of the rough texture of the carpet against her cheek and nipples. She didn't feel his claws biting into her hip anymore. She felt his sweaty chest moving against her back and she felt him inside her and that was all. \n\nWhen the pleasure overtook her she screamed again. This time he didn't stop, he just kept pushing her further into it. His roar of release seemed like something unimportant on the edge of her consciousness.\n\n*~*~*~*~*~*\n\nShe lay on her side, his tongue moved over the long scratches he'd made on her hip. Her blood was almost as sweet as her pussy. He'd cut her deeper than he intended at the crest of her hipbone. It might leave a scar, but she wouldn't need stitches. Either way, he wasn't about to let her get another infection. His tongue moved over the deepest part of the wound. She trembled and reached down, pushing against his shoulder. He grabbed her wrist with a warning growl.\n\n\"Hurts.\" She murmured.\n\n\"Didn't complain when I gave it to you.\" \n\nShe closed her eyes and curled up a little more. The little tremors and the subtle changes in her scent told him when he'd hit a particularly sensitive spot. He didn't back off, but he used more care. The terror from the hall had dissipated completely, at least for the moment.\n\nHe'd wanted to tell her it was all bullshit. Everything she was hearing in her head, every fucking thing that asshole ever said to her that made her doubt herself was bullshit spewed by a coward who couldn't find his own balls with a microscope. Telling her that would mean he'd have to admit that he'd heard the same things in his own head at one time.\n\nThe first time he'd bought a place was in 1947 in Wyoming. Plenty of land, nice big custom lodge, good hunting. Fucking perfect. He'd never had any plans to settle there, but he'd wanted somewhere to go back to on occasion. Someplace where the bed wasn't too fucking short for him to stretch out in and where he didn't have to bend down to fit in the shower. Someplace where he didn't have to wallow in the stink of other people day and night. \n\nWhen it was finished it was everything he'd wanted. The first time he'd walked inside his head echoed with everything his father had ever said animals like him don't deserve. It was too loud and too much and he'd torn the fucking door off the hinges getting out of there. He'd held onto the place for thirty years, but he never set foot in it again. Not even after he'd found another place in Oregon.",
        "The scent of terror on her and the way she wanted to run away from it had brought it all back and pissed him off, both because of the reminder and because he didn't know how to shelter her from it. He knew how to break shit and fuck her until she forgot her own name for a few minutes. Maybe that would be enough to get her through the worst of it.\n\nHe looked up at her again. Her eyes were still closed, but she was starting to shiver. \n\n\"What's the matter now?\" He managed to sound annoyed.\n\n\"Cold. Someone took all my clothes away before the heat was even on.\"\n\nA little snort. \"Suppose you blame me for that.\" He stacked some logs in the fireplace and before long had a fire going. When he turned around again, she was using his flannel shirt as a blanket.\n\n\"You did it.\" \n\n\"Was driven to it.\" He grasped her arm as he walked by, pulling her to her feet and then down next to him when he laid down on the sofa. She curled up against his side and he shifted her body so that she was between him and the cushioned back. She sighed, but didn't say anything more for a few minutes.\n\n\"You have to stop doing that.\" She said finally.\n\nHe rolled his eyes. \"What the fuck are you talking about?\"\n\n\"Tearing my clothes like that. I'm not going to have any left.\"\n\n\"There's a goddamn mall half an hour away. Much as I'd like to keep you bare ass naked all the time you'd probably get frostbite or pneumonia or some shit like that. 'Sides, I happen to like that part.\" His hand was under the shirt, his claws traveling in slow circles over her back. It still amazed him that she was able to relax when he touched her that way. For the next few minutes that's exactly what she did. Finally she opened her eyes and started looking around the room. \n\nThe half he wasn't going to sit on was done in period pieces. All of the furniture that had to bear his weight was newly built, large enough to be comfortable and styled to blend in to the rest. He watched her eyes settle on the painting over the fireplace. She looked at him and back at the painting again.\n\n\"Who's that?\" She asked finally.\n\n\"Guy who built the place the first time, Captain Phillip Howlett.\" \n\n\"Is that his wife with him?\" Her eyes were still on the painting.\n\n\"Yeah.\" A little tremor went through her. He pulled her head down against his shoulder again. \"Why?\"\n\n\"She doesn't look very happy. She looks kind of scared of him.\"\n\nHe shrugged a little. \"Was an arranged marriage, maybe she didn't like the arrangement. He built this place for her and went off to sea. First time he came back, second time he didn't. She figured he was dead and started fucking some guy from the village.\"\n\n\"But he wasn't?\"\n\n\"Nah, just stranded somewhere for awhile. Anyway when he got back he killed her and the guy and just walked away from the house. Place was halfway falling down when I bought it.\"\n\nShe looked at him and back at the painting. \n\n\"What?\"\n\n\"Maybe it's the mutton chops.\" She put her head down again. \"There's just something that strikes me about the two of you.\"\n\n\"Think your frail imagination is in overdrive.\"\n\nShe closed her eyes again, her fingers drifted over his chest and stomach. He wasn't sure if she accepted that or not, but she seemed willing to let the subject drop. There was no blood between him and the fine, upstanding Howlett clan. There was no blood between Jimmy and them either, considering that Jimmy's whore of a mother had spread her legs for Creed's father the first chance she got. Still, the runt was treated like one of them. The whore saw to that, even trying to keep him away from his own brother. He didn't know when he made the promise to himself that he'd have more than they did. That he'd have better than they did. \n\nPhillip was an uncle to John Howlett, the runt's supposed father. He'd heard whispers about the marriage and the way it ended, but never paid any attention to it. It was just shit that frails liked to whisper about. He forgot about it completely until he saw the painting in a gallery window. Finding the house was easy. He'd been half tempted to just tear the fucking thing down and start from scratch the place was in such bad shape. \n\nThe goddamn historical society had started some injunction bullshit though. He could have fought it but he didn't really give a shit. He'd held out though, let the old crones bluster and complain for close to three months. Just when they were talking about lawyers he 'relented'. They were so fucking glad he restoring most of it that his plan to rearrange the upstairs seemed like a small price to pay.\n\nHe'd finished it three years ago, and over that time had spent close to three months in it. Didn't matter. It was theirs, and now it was his. Just like the frail was his. She rested more heavily against him, and he could feel her nodding off. He moved her hair out of her face. A little smiled moved over her lips and she glanced up at him.\n\n\"C'mon.\"\n\n\"Where?\"\n\nHe growled. \"Well if you want a fucking itinerary, first, I'm going to get up and then I'll bring in the shit we brought with us. Then I figured you'd want to get cleaned up and changed so that we can get you something more to wear so you don't complain every goddamn time I shred something. That meet with your approval or did I fuck up something in the middle?\"\n\nShe blushed and hid against him a little. \"Do you want your shirt back?\" \n\nHe sat up and shrugged. \"Ain't that cold to me. Guess I can wait until you have something else to put on.\"\n\nHow this frail could piss him off one minute and make him feel like taking care of her the next was beyond him. He usually stopped at the pissed off part. She sat up and kissed his shoulder. \"Thank you.\" Her small hand rested on his bicep. For just a heartbeat he let her linger there, then he pushed her away and got up.\n\n\"I never did find the broom.\" She was curled up, trying not to watch him get dressed.\n\n\"Kitchen is the second door on the left. Must be in there somewhere.\" He walked toward the door. \"And don't go out there barefoot.\""
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "sex from behind",
        "dominance",
        "submission",
        "blood"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-07"
}