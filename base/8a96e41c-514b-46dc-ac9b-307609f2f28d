{
    "title": "Nothing Between Us",
    "pages": [
        "This was not a story I intended to write. I happened to stumble upon the story Lovebird's Ch. 01 by baloden here on Literotica. I liked the idea of the story very much and decided I wanted to write it in my own style. Baloden kindly gave me permission to use his story frame. \n\nThis is a First Time story of two long-time friends who finally dare to let it happen. I tried my hardest to balance being extremely erotic with plausible. Two virgins have no idea what they are doing. They only have their desires to guide them. If you take the time, you will discover page after page of sex in here, but it does take time to get to. I, of course, think the build up is worth it, or I would have deleted the lot. I have no interest in wasting your time, but in the end for me it is the relationship that makes the sex erotic, not the other way around.\n\nOh, a last little note. Our female protagonist's name is Thuy. It's hard to tell you exactly how to pronounce this, but Twee, or just Tee, is pretty close. Just don't say Thooey.\n\nHave fun.\n\n-- \n\nIt was my mother who told me.\n\n\"Jennifer, I mean, Thuy's back from Yale for spring break, Jacob.\"\n\nThuy's our neighbor and an old classmate of mine from high school. We had been friends since we were children. One day when she was eleven, she had randomly decided her new American name would be Jennifer. I argued for something like Thea that would be at least close to Thuy, but she stuck with Jennifer and in time only her family and I were left using her original name. My mom sometimes accommodated me.\n\n\"That's cool,\" I replied as I stuck my hand in the Frito bag.\n\n\"When's the last time you saw her?\"\n\n\"Uhh... I guess last summer. The Nguyens all went on that skiing trip over Christmas, so she wasn't here then.\"\n\n\"That's a long time for you two.\"\n\n\"Yah. But we message each other some during the semester, so I know what's up.\"\n\nActually, Thuy and I messaged each other every week at least, but I didn't need to go into that.\n\n\"Well, why don't you go check in?\"\n\n\"Yeah, ok.\" I stuck another bunch of chips in the dip bowl and popped them in my mouth.\n\n\"You don't want to see her?\" my mom asked as I munched away.\n\n\"Huh? What?\"\n\n\"Well, you don't seem in any rush.\"\n\n\"You just mentioned it to me! Anyway, I'm not just going to go over there for no reason.\"\n\n\"Just go welcome her back. It's not that complicated.\"\n\n\"Mom. Guys do not just go to people's houses to welcome them back. I'd have to take a gift basket or something to complete the image. Maybe some doilies that I had knitted.\"\n\nMy mother sighed and went to stick her head in the fridge looking for something. \"Guys don't ever get girlfriends either,\" she muttered under her breath.\n\nMy ears turned pink. Had she said what I think she did?\n\nShe tossed an onion on the counter and then suddenly fixed me with an I-cant-believe-you-actually-are-acting-like-this look. \"I just don't get you two.\"\n\n\"Who? Me and Thuy?\"\n\nShe sighed exasperated. \"For a kid as smart as you, you're awfully clueless sometimes. Yes, of course!\"\n\nI didn't really like where this conversation was headed. What had gotten into my mom? \"What's not to get?\"\n\n\"For two people who fit together like you do... it's just a waste is all. Are you scared? 'Cause I understand that, Jacob.\"\n\n\"Mom, we've talked about this before. There's nothing like that between us. We're friends. She dates. I date. We talk about our dates to each other.\"\n\n\"Must be a one-sided conversation 'cause I haven't seen you go out on a date in some time.\"\n\n\"I date.\"\n\n\"You haven't gone out in weeks.\"\n\n\"I do have this whole full-time job thing with school at the same time.\"\n\n\"I know.\"\n\n\"And besides I don't tell you everything.\"\n\n\"Oh.\" She seemed pleased. \"Really? Oh. Well, that's good. Sometimes I think you don't have any secrets. It's not healthy for you to not have anything to hide from me.\"\n\n\"Well, don't worry. There's plenty of stuff you don't know about me.\"\n\n\"Good.\"\n\n\"Good.\"\n\nShe didn't say anything.\n\n\"Well, all right then.\" I did have secrets, didn't I? Maybe I did need to get out more. \"I'm gonna go play some basketball in the driveway.\"\n\n\"Seems like a good idea.\"\n\nI was grabbing a ball in the hallway on the way out when my mother called after me. \"Bouncing a ball really loud to get someone's attention is a lot more manly than knocking on a girl's door!\"\n\nI slammed the door behind me. What had gotten into her? Besides, I was really in the mood to shoot some hoops. What? She thought I was going to run around in circles trying to make a lot of noise to get Thuy's attention? I was 20, not 12. She must think I was a peacock or something. Maybe one of those lizards with the big fans on their neck. I imagined my lizard fans sticking out while I paraded in the driveway, scratching the dirt, then threw the ball up at the goal, rattling it good. What'd she know?\n\nI caught the ball as it came down, ran to the corner, and sent it back up, swishing it in cleanly.\n\nI had learned to shoot mostly because of Thuy. When we were eight, we learned that her parents would let her stay out shooting balls with me 'til it was good and dark. Thought it was good exercise for her instead of reading all the time. It wasn't the first thing we had come up with to spend more time together. We also competed relentlessly in school, always trying to get a better score than the other. I still remembered the first time I heard a slam on my window and looked out to see Thuy pushing some A in Reading or Social Studies against the glass. As we moved into high school, we still competed, but it was entirely unspoken. I loved it when she got an award I was up for.\n\nThuy was finishing off her second year of Yale now, while I was still at home, taking classes at the U. I had spent a semester at Cornell, but then my mother got sick, and I was needed at home. I spent about a month resenting it, until I discovered my mom crying over my old acceptance letter at the kitchen table. I got over it.\n\nThe ball came down through the net, so I ran threw it, down the baseline, and then did a quick pivot and shoot. In again.\n\nWe were a funny pair, Thuy and I. My family had been in Arkansas at least four generations that we knew of, while Thuy and family arrived in the house next to us when I was six, all the way from Vietnam, via a year in Minnesota. In fact, they lived on the last lot we had sold off from the family farm. It was suburbia now with one white wooden house and screen porch, mine, and a row of nice little brick ranches, hers.\n\nI did a couple quick free throws as the ball came out. Both went in cleanly.\n\nI wasn't a great basketball player being a short six feet, but I had learned to shoot. Our team made it to the state semis with me as mostly an outside shooter. Coach kept me out there, because I had never figured out how to get past the six-foot-ten guys. But give me a couple inches of free space and the odds were it was going in.\n\nI took the ball again, pretended to pass, then ducked to the outside line. The center tossed the ball out to me from the double team on him. The clock was ticking down. I heard the crowd counting. 5. 4. I launched it up. The ball hit the rim, went flying up in the air, and then fell in with a little swoosh.\n\n\"I always said you could make that shot 19 times out of 20.\"\n\nI turned to Thuy with a big grin. She stood not three feet from me in low jeans and a white top, with her trademark hair that cascaded to the middle of her back. The corner of her mouth was turned up in that little smile she had been showing me since she was six.\n\n\"Hey, you,\" I replied. \"20 out of 20 would have been better.\"\n\nThuy sank cross-legged on the driveway. What could be more home than this? \"I can't believe you are still beating yourself up about missing a shot. It was freaking high school, and if you hadn't made the rest of them, we'd never have even made the state tournament, much less lose by one in the semis.\"\n\nI tossed the ball in the net and let it bounce away. \"You know,\" I said sitting. \"My goal in life was to peak at 18 and find eternal glory in the school trophy case. With that other guy, and the other one with the funny shorts. But since I missed, I'm gonna be forced to do something else with my life.\"\n\n\"That's gotta suck.\"\n\n\"I was going for brain-dead DirecTV addict at 19, but now I'm 20 and gotta keep thinking and crap.\"\n\n\"I hates thinkin'.\"\n\n\"I hates rabbits,\" I replied in my Yosemite Sam voice. I brushed my brown hair back out of my eyes and we looked at each other.\n\n\"How long-\"\n\n\"How've you-\"\n\nWe both spoke at once.\n\n\"You go,\" I said.\n\n\"Naw, you.\"\n\n\"Uh-uh.\"\n\n\"I ain't talkin'.\"\n\n\"That's your Yale education? 'I ain't talkin'?\"\n\n\"Don't get on me. I learned English from you, remember?\"\n\n\"Yeah, yeah, yeah.\" She'd been blaming me for every English mistake she ever made for years. When Thuy first arrived next door, she only spoke Vietnamese. Her dad spoke English some, but he wasn't around much, so it was up to six-year-old me. Since she was now publishing essays in magazines and such, I guess I did an OK job.\n\n\"It's 'cause of you, I have this accent that goes over so well in the Asian-American Advocacy Consortium at school.\"\n\n\"Hell, don't put that one on me. Your accent is stronger than mine is and you know it.\"\n\n\"I know it, but you always turn so lovely pink when I tease you. I could charge admission and show off the Great Glowing Boy.\" Thuy started laughing. \"See! See! You're a light bulb,\" she declared and started singing the tune to Rudolph the Red-Nosed Reindeer.\n\n\"Good to see this hasn't changed.\"\n\n\"I'm always here to help, Jake.\"\n\n\"Not enough,\" I thought then realized I'd said it out loud.\n\nThuy got quiet suddenly. \"That's not fair.\"\n\n\"I didn't mean anything. It was just a thought that got out.\"\n\nSuddenly, Thuy was standing and staring past me. I followed her eyes to discover my mother walking towards us. She embraced Thuy and hugged her tight. \"I'm glad to see you again, Jennifer.\"\n\n\"Thanks, Mrs. B.\"\n\n\"How was school?\"\n\n\"It's over for a week or two, so it's good.\"\n\n\"I'm glad to see you around. You've always been a part of our family, you know.\"\n\n\"I'm not going anywhere,\" she said with a look to me.\n\nMy mother turned to me. \"And I'm glad to see the basketball still works.\"\n\n\"Umm \u2013 yeah, it still goes in the basket. Funny, that.\" I tried to give a look to Thuy but she seemed to be hiding her face behind her hair.\n\n\"Jacob, I'm gone. I'll see you on Monday,\" Mom said quickly.\n\n\"Monday? Where are you going?\"\n\n\"My getaway at the cabin. I'll take the cell but if you call me with both legs attached, I'm gonna come after you.\"\n\n\"I don't remember this.\"\n\n\"That's 'cause you never listen to a word I say.\"\n\n\"Isn't it too late to drive that far?\"\n\n\"It's not past 3:00, Jake.\" She kissed Thuy's cheek. \"Good to see you again, Jen.\" As she got in the car, she called out, \"Keep him out of trouble.\"\n\n\"I wonder what she my mom thinks we are going to do?\"\n\n\"Drugs.\"\n\n\"Oh, yeah.\"\n\n\"Did you bring the crack pipe?\"\n\n\"Left it at school.\"\n\n\"That's too bad.\"\n\n\"Yeah.\"\n\n\"You know you should get it fixed.\"\n\n\"The crack pipe?\"\n\n\"Yeah.\"\n\n\"I'm embarrassed that I heard that.\"\n\n\"It was a stretch, I'll admit.\"\n\n\"Oh, Jake, there's this guy in my dorm that hangs out with the crew sometimes. Worst forced jokes ever. Ever.\"\n\n\"Let's go inside.\"\n\n\"Yeah, OK.\" She talked as I held the door for her. \"You've no idea how bad it is. He'd try to make a joke after a documentary on Human Trafficking or something. No sense of appropriateness.\"\n\n\"You should tell him so.\"\n\n\"We do! I do! We've thrown things at him. He thinks he's our court jester or something.\"\n\n\"Maybe if you threw sharp objects, he'd get the point.\"\n\n\"That's overkill, don't you think?\" We both paused and grinned at each other.\n\n\"Oh my god, I'm embarrassed for you.\"\n\nThuy fell on the sofa in the living room with me on my beanbag chair just as it had always been.\n\n--\n\n\"It's eight o'clock, Thuy.\"\n\nShe glanced at the clock. \"I'm gonna go tell my mother I won't be back for dinner.\"\n\n\"I'll order a pizza.\"\n\nThuy didn't turn around as she left, she just yelled back, \"No, we're going out.\"\n\nGoing out? When was the last time the two of us went out? I ducked into the shower while Thuy was out.\n\nAbout five minutes later I was buttoning my khakis, when I heard, \"Jake, get this--\" and Thuy turned the corner into my bedroom. For no good reason, I felt a little embarrassed with no shoes or shirt and my brown hair still dripping water down my skin. \"Oh. Sorry, I--\" Thuy started. Was she a bit embarrassed herself?\n\n\"Naw, it's OK.\"\n\n\"I didn't realize. I'll just--\"\n\n\"It's OK, Thuy,\" I insisted. \"It's not like we never went swimming before.\"\n\n\"OK, uh...\" she seemed confused. \"Jake, hun, have you been working out?\"\n\n\"Very funny.\"\n\n\"No, seriously,\" she paused for a second. \"Jake, you turned into a hottie!\"\n\n\"Go away.\" I went into the bathroom to comb my hair.\n\nShe appeared in the doorway and looked at me again. \"Why won't you confess to working out?\"\n\n\"Because I don't.\"\n\n\"Ok, ok.\" I chose a dark gray long sleeve and pulled it over my head. \"So that's from the moving job? I'm going to tell my future boyfriends to become movers.\"\n\nI did know I was lifting things easier now than when I started. Did it actually show? I wanted to flex to see if there was any change but remembered Thuy was watching.\n\n\"So, what did your mom say?\"\n\n\"Get this.\" She handed me a note in Vietnamese. I had taught myself a little bit two or three years back for some unknown reason, but all I could make out was her name, Tuesday, aunt, and a little more.\n\n\"What's the bit on the second line?\"\n\n\"I had to think about that for a second, too. So basically, she's gone to help my aunt who's nursing my uncle. She'll be in Nashville until Tuesday. I called her, but all she said was that everyone was fine, she shouldn't talk on the highway, despite the fact that that is all she does, and to stay safe. And say hello. Oh, and she was somewhere around Jackson, Tennessee. That means she left 15 minutes after we said hello.\"\n\n\"That's a bit weird.\"\n\n\"Yeah, and since my dad gets back in town on Thursday, it's just me.\"\n\n\"Guess we'll rent some movies or something.\"\n\n\"Guess so. Look, you are too well dressed for me now. I'm going to go change. Meet me in the driveway.\"\n\nI found some socks and shoes and headed out. The night was a little cool with not a cloud, letting the whole sky sparkle softly. Not even the moon dared challenge the stars tonight. I gazed upwards slowly naming the constellations and stars that I knew until I felt a poke in the ribs.\n\nMy eyes traveled down to find Thuy standing next to me also looking at the stars above. She wore a simple black dress with thin straps and a plunging neckline and back. The dress fell at an angle across her legs from mid-calf on one side to just above the knee on the other. A thin gold plate necklace lay around her slender neck and something small sparkled in her ears, reflecting the light of the streetlamps and the stars.\n\nMy best friend was beautiful.\n\nSince I was six feet and she was five-foot-two, my eyes kept falling down her chest where I could see white cups supporting her breasts. When I realized where I was staring, I tried to look up at the stars and not at her.\n\n\"Did you watch the Leonids this year?\" she asked me.\n\nWhen we were in the seventh grade, Thuy had done a report on meteors and the Leonids meteor shower. We had snuck out of our windows at one in the morning that night to lie on the grass watching the stars fall.\n\n\"Not this year,\" I told her. I wanted to say something. About how she looked. About how beautiful she was.\n\n\"It was a good display.\"\n\n\"Too bad I missed it.\"\n\n\"Veejay and I drove out to this hillside to watch it, but too many lights in the area really.\" I don't know why but I felt a lump in my throat.\n\n\"How's he doing?\"\n\n\"Fine, I think. We broke up about a month ago.\"\n\n\"I'm sorry, Thuy. I know you liked him. He always sounded decent when you messaged about him. Not a slimeball anyway.\"\n\n\"Yeah, he's a good guy, but it wasn't there. Neither of us was devastated when it ended.\"\n\n\"Hey now that you are back on the market, you will find someone else that gets your blood pumping.\"\n\n\"Gets my panties wet, you mean.\"\n\nI laughed. \"If that's your thing.\"\n\n\"Of course, it's my thing. I can get horny too even if I haven't consummated.\"\n\n\"I want to hear more about this horny thing you've got going.\"\n\n\"Uh-huh. I 'm sure you do.\"\n\n\"Tell me, tell me.\"\n\nShe threw a devilish smile at me and said, \"Well, let's go eat and I will tell you all about the Yummies that get me going.\"\n\nThuy drove and did tell me of all her prospects. There was the tall Brazilian soccer player with long muscles who was all over her, and she wouldn't mind if he had been all over her, if he had ever bothered to care if she was dating someone else or not.\n\n\"Don't you worry that if he doesn't care whether or not you're dating now that he won't care when he's dating you?\"\n\n\"Jake, it's not a long-term relationship with him that I'm after.\"\n\nShe also told me about the thin, silent guy in black in Eighteenth Century lit class who kept stealing glances. I even got to hear about BOAC, \"Best Ass on Campus\". Turned out he was gay, so she and her friends let him keep the title, but they had to identify a BOAC II.\n\n\"Aren't the letters wrong? Shouldn't it be BAOC?\"\n\nThuy giggled. \"I just know he's BOAC. Maybe BAOC's too hard to say.\"\n\nAs we hit town, it was already getting late and most restaurants were closed. We ended up eating some greasy hamburgers and nachos at some bar stools, totally over-dressed for the occasion.\n\n\"So what about you?\"\n\n\"Me?\"\n\n\"Yeah, who do you want to do?\"\n\n\"Like a celebrity?\"\n\n\"No, I mean who are you dating. Work with me here.\"\n\n\"I don't have much time for girls right now.\"\n\n\"You've got time to look.\"\n\n\"I don't wanna talk about this right now.\"\n\n\"Jake, I've told you about every guy I can think of. We talked once about a yeast infection. Your parents. We talk about everything.\"\n\n\"I didn't know you had broken up with Veejay for over a month.\"\n\nThuy was silent for a second. \"Yeah, I didn't know I was hiding it, but I guess I was.\"\n\n\"Umm, so,\" I began. \"There's Tracy at work. I think if I wanted a sex fling, she'd be my girl.\"\n\n\"What do you like about her?\"\n\n\"Not much actually. But she's nice and I get the idea she'd be very willing.\"\n\n\"Tracy puts out.\"\n\n\"I don't know, but she's always doing these blatant things to get my attention. She actually stared at me once sucking her finger.\"\n\n\"Are you sure she exists and isn't some porn fantasy?\"\n\n\"If she were my fantasy, we'd be doing it.\"\n\n\"Why aren't you?\"\n\nI shrugged. \"I don't know. I feel like... I'm waiting for someone else.\"\n\nThuy nodded. \"So one girl agrees with me that you're hot, but you're not interested. Any actual dates?\"\n\n\"Not too much.\"\n\n\"Not a single one in however many months.\"\n\n\"Alright, Jane, you nosy slut.\"\n\nThuy's smile broadened. \"Who you calling nosy?\"\n\n\"Yeah, yeah. So there was this woman in Physics.\"\n\n\"Oooh, a physics babe. All the cutest ones do it quantum-style.\"\n\nI paused and gave Thuy my look. She quietly formed a little halo over her head with her fingers and waited.\n\n\"So, I'd noticed her the first day. Why? Ummm.. just a killer body, essentially, yeah. She's black with these amazing braids--\"\n\n\"Tell me about the killer body.\"\n\n\"You're in a mood tonight.\"\n\nThuy said nothing.\n\n\"Fine. She's got a great ummm how do I say...\"\n\n\"Rack?\"\n\n\"Yeah, pretty much. And why are you looking at me like that? These long legs and big smile. I started having dreams about her. Yes, those kinds of dreams!\"\n\n\"I didn't say anything. Don't yell at me.\"",
        "\"You looked it. You're eating this up.\"\n\n\"I just love how nervous this makes you. I'm not going to get offended, Jake. I've always known you were a breast man. Why are you afraid to talk about the fact that you look at girls sexually?\"\n\n\"I don't just look at them sexually!\"\n\n\"See. You can't admit it.\"\n\n\"Whatever.\"\n\n\"Did you ever do anything about it?\"\n\n\"Yes, I did actually, Ms. I-Cant-Wait-To-Be-Done-By-Soccer-Hottie.\"\n\n\"Hey, I've never done anything. I'm all talk. You're the one who... did you?\"\n\n\"I asked her out.\"\n\n\"Oh, ummm, only once? Did she say yes, and did you get anywhere?\"\n\n\"More than once, yes, and yes.\"\n\n\"Yummy! I want details.\"\n\n\"Maybe those are private.\"\n\n\"Not from me.\"\n\n\"Maybe they are, even to you.\"\n\n\"Oh, I'm sorry, Jake. I... So-- you and she? Have you?\"\n\n\"Inside her? No, well, not with that.\"\n\n\"What did you do with her?\" Thuy didn't seem to be teasing me now.\n\n\"So, we went out eight times to be exact. Dates 3 and 4 included kissing and serious tongue action. Serious petting on Date 5. Date 6, the, uhhh, shirts come off.\"\n\n\"Hers, too?\"\n\n\"Yes.\"\n\n\"Go on.\"\n\n\"Date 7 was hands. Wandering.\"\n\nThuy whispered leaning in towards me. \"How much?\"\n\n\"Two fingers inside her. Why are you making me say this? And her hands too, on me.\"\n\n\"To... completion?\"\n\nI nodded.\n\nAfter a moment, Thuy said, \"Date 8?\"\n\nI smiled again for the first time in a bit. \"Date 8 was different. She told me how wonderful I am, kissed my cheek repeatedly, said she wished things could be different... and told me we had to stop because she had a boyfriend.\"\n\n\"Oh, my poor Jake.\"\n\n\"It wasn't that horrible.\"\n\n\"What did you say?\"\n\n\"One word. 'Boyfriend?'\"\n\nThuy burst out laughing.\n\n\"I didn't know! Honest!\"\n\n\"I believe you,\" Thuy giggled. \"My poor, poor Jake.\"\n\n\"It's not--\"\n\n\"Finally get a girl you like and you're a homewrecker.\"\n\n\"We weren't in love, but I was surprised. She's the smartest person in class.\"\n\n\"I doubt that.\"\n\n\"Why?\"\n\nThuy just rolled her eyes. \"That's as far as you've ever gone, right?\"\n\n\"Yeah. You already know the rest.\"\n\n\"'K.\"\n\n\"How about you?\"\n\n\"Me?\"\n\n\"Yeah, you. You made me confess everything, so it's your turn.\"\n\n\"I tell you most everything already,\" Thuy responded.\n\n\"Yeah, exactly, most everything. What's the rest?\"\n\n\"You're as bad as me.\"\n\nI was copying her, it was true. So I just waited, as she had done to me.\n\n\"Ok. Jake, you really do know most everything, but Veejay and I played together some. I'm still a virgin, so you don't have to worry-- um, ask-- about that.\"\n\n\"But what have you done?\"\n\n\"Well, he really was a very good kisser. Very good. And he liked to umm suckle or lick my breasts.\"\n\nAs soon as she said this, I felt my heart pumping faster.\n\n\"Did you? Do you like it?\"\n\n\"It was nice.\"\n\nI didn't really want to know this. \"Anything else?\"\n\n\"Yes, Jake.\" She looked at me for a second. \"He wanted me... a couple times, I, I never talk about this stuff, so I don't know how to say. I took him in my mouth.\"\n\nI tried not to show anything.\n\n\"How was it?\"\n\n\"Mixed. Very mixed feelings. He was a good guy, Jake. A really good guy. You have to believe me.\"\n\n\"I do.\"\n\n\"But... I... it didn't. I felt like there should be something more happening than was.\"\n\n\"What do you mean?\"\n\n\"I mean, if you, if you are being that intimate with someone, shouldn't I be feeling more than 'he's nice'?\"\n\n\"Probably. I kind of felt the same with Kalia, that was her name. Well, I bet it was different, but she was hot and I liked her, but I knew after each date that I really just wanted to find out what this stuff was like. That was why I was going out, so that I could experience this stuff myself.\"\n\nThuy nodded. \"It was actually my idea, not his. I wanted to see, too.\"\n\n\"Anything more to report?\"\n\nThuy smiled and shook her heard.\n\n\"That was a weird conversation.\"\n\nThuy nodded. \"You have no idea what colors you were turning as I talked.\"\n\n\"I can't help it. I don't know why.\"\n\n\"Don't worry, Jake. I was feeling the same thing. I just don't show it in my skin like you do. I wanted to hurl this mug at someone on Date 7.\"\n\n\"Why did you ask?\"\n\n\"I guess, I wanted to know, kinda, but I also like that I have no secrets from you. It's important.\"\n\n\"Kalia was a nice woman, despite the fact that she was dating two people at once. And I am sure Veejay was too.\"\n\n\"He wasn't a woman. I just told you how I know for certain.\"\n\nI smiled. \"So you don't have to give me the normal lecture about lowering my standards.\"\n\n\"Well, most of your girlfriends of old deserved it.\"\n\n\"Here we go....\"\n\n\"Crystal.\"\n\n\"Yep.\"\n\n\"A whole year with Crystal. I still can't believe it. She was sooo... Her freaking name was Crystal! You deserved so much more than her. That you wasted your time with... agh!\"\n\n\"You've never given this up.\"\n\n\"Well, you keep repeating the process. She was never good enough for you!\"\n\n\"You shouldn't judge her like that!\"\n\n\"I'm not judging! I just know you. You were never really happy; you just liked having a girlfriend. You always settle! That's your biggest flaw. You deserved so much more!\"\n\n\"Like who? Who else was I supposed to be dating that was better?\"\n\n\"See? You can't honestly say she was the girl for you. You couldn't then and you can't now. She was just a nice girl.\"\n\n\"She was my Vee-jay, I guess.\"\n\nThuy glared at me, then said, \"Yes.\" Then, \"At least I broke up with him. She had to dump you because you are so damn loyal. I think you were happy to escape.\"\n\n\"I haven't seen Crystal in four years. We are talking about us as juniors. Who cares anymore?\"\n\n\"I just don't think things have changed. I think you will settle again if you don't watch yourself.\"\n\n\"What's wrong with spending time with someone because she's nice?\"\n\n\"Nothing! But you are the kind of guy who will marry that nice person and then the person you've always wanted will be gone. Out of reach forever. And it'll be your fault.\"\n\n\"Who is this person?! You seem to have someone in mind.\"\n\n\"I don't know, Jake. But you have to find her somehow, some day. And you won't ever, if you give up on her too easily.\"\n\n\"Show this person to me or get off my back! I don't tell you whether or not your boyfriends are good enough for you!\"\n\n\"Why not?! Don't you care?! Maybe I will spend my life with one of them, screwing everything up, and you will just let it happen! Why don't you say something?!\"\n\n\"Because I can't see you with anyone, OK? Because I hate--\" I paused, controlling myself. What I had just said didn't make a lick of sense. \"I want you to be happy. I have faith that you will figure it out. You always do. I'm not the right person to help on this. You.... Thuy, I don't know what we are fighting about.\"\n\nThuy froze and said simply, \"I don't know either. I don't know why we are fighting.\"\n\n\"Let's stop then.\"\n\n\"Yeah. I don't know why I got angry. I like you too much. I just think it would kill me for you to not get everything you ever wanted.\"\n\n\"I don't always know what I want, to tell the truth. I wish I did. I... Sometimes, I think I know what I want, but then the thought flies away. There's an image trying to form of someone or something. Something obvious. It's just beyond my grasp.\"\n\nThuy actually gasped. \"That's why I broke up with Veejay. The more I was with him, the more I kept feeling that I should be waiting for something else. That it was coming soon, and I just had to show more patience.\"\n\n\"What are we waiting for?\"\n\nShe only shook her head. \"I don't know, but... but...\" She looked at me and I felt my heart pounding. The thought that I had tried to tell her about was coming into my head again, but she said, \"Shouldn't we go home?\"\n\nWe each threw half the money on the table as we had agreed to years before and headed out. She tossed me her keys, saying, \"I'm tired.\" I closed the door behind her and soon the stars were flying past the window as we got out of the city, heading down 530.\n\nI was beginning to wonder if Thuy had fallen asleep when she asked, \"Jake, why didn't we ever date? Not once. We never even tried to see if it would work.\"\n\nA million thoughts were swirling in my head from this evening, and all I could say was, \"I don't know.\"\n\n\"Yes, you do. I mean-- that's not what I mean. It's just that all our lives people have wondered this. People have wanted to fix us up a hundred times. My friends ask about you. People at school who've never met you ask me about you. My mother asks me. Hell, your mom has asked me.\" I didn't say anything and she continued, \"I know you think I look OK. If not, you fake it well. I haven't been checked out like you did in the driveway tonight in a long time. Your eyes made my Bs feel like DDs.\"\n\n\"I looked away!\"\n\n\"I know. I don't know what I wanted to kiss you more for, looking or looking away.\"\n\nKiss me?\n\nAfter a pause, still curled in the seat next to me but with her eyes open, Thuy said, \"So?\"\n\n\"I think that... I didn't want to risk it.\" There was silence. \"Having you as a friend is too important to risk.\"\n\nShe took my hand and held it, then closed her eyes again, but spoke again after a pause. \"I took you for granted, I think. It never occurred to me that you wouldn't be there, that....\"\n\n\"I will always be there, Thuy.\"\n\nShe squeezed the hand she was holding. \"I'm going to be asleep soon.\"\n\n\"I'll carry you to your bed.\"\n\n\"Your bed. I still am afraid of being alone in the house.\"\n\n\"Are you sure?\"\n\nI saw a slight smile form on her face. \"Jake, you aren't going to take advantage of me. The idea's silly.\"\n\nWe didn't speak the rest of the drive home and she was soon asleep. After we got home, I did as she had bid and carried her to my bedroom. After turning on a small light for her, I headed for the door, but she mumbled something like, \"trust you\" and patted the bed next to her.\n\nBut I knew it wasn't a real option. Not now. Not the way I was feeling. I stood at the doorway watching her slight movements under the sheets, her chest rise and fall gently. I would never be able to say how she looked that night, but I have never forgotten a detail.\n\nI curled up on the couch in the living room, the couch that she had laid upon for so long this afternoon, feeling her scent, touch, and voice. After some time, I fell asleep.\n\n--\n\nI awoke the next morning to some rattling in the kitchen. I opened my eyes to find a disheveled Thuy still in her black dress with hair shooting all over the place getting a glass of water. She stumbled half-asleep to the kitchen table where she plopped down stony-eyed.\n\nWrapping my sheet around me, since I was in boxers only, I shuffled over to get some coffee going. \"Oh, good,\" was all she said, and I joined her in a chair in my own sleep haze. We sat there listening to the coffee pot. \"You look hysterical,\" she said in a completely flat voice. \"I think squirrels played in your hair all night and one side of your face is covered in pillow lines. You're a squirrel wrestling zebra.\"\n\n\"I think some of your hair is in Missouri.\"\n\n\"I'll be untangling it for a week. My dress has more wrinkles than a pug dog's face.\" I poured two cups of coffee for us and tossed her some creamer. \"I think my throat is dry from yesterday. We talked for eight hours straight by my reckoning.\"\n\n\"Coffee cures scratchy throats, I'm sure.\"\n\nShe giggled and continued nursing her cup.\n\n\"Thuy, do you remember last night much or too asleep?\"\n\n\"I remember that we got angry at each other for the first time since... the last time we talked about Crystal.\"\n\nI laughed. \"Yeah. How about after that?\"\n\n\"I can't tell you what I've forgotten.\"\n\n\"What's the last thing you remember?\"\n\n\"Jake, just ask me.\"\n\n\"'K,\" I wasn't sure I really wanted to bring it up, but it was the only thing on my mind, so it was talk about this or don't talk. \"You asked why we never dated.\"\n\n\"I remember that. You told me it was because you thought I was a hideous bitch and you'd rather kiss a snake. Then I slapped you so hard you turned off the road into an oncoming car. We are now in heaven.\"\n\n\"So you remember.\"\n\nShe hesitated. \"I remember we came up with reasons for the past, but we never got around to the present.\"\n\n\"You mean, why don't we try dating now?\"\n\n\"Yeah,\" Thuy's voice was so quiet I could barely hear her. \"We didn't talk about that.\"\n\n\"No, we didn't.\" It was too early, too early for this.\n\nShe nodded and turned back to her coffee. I knew I should say something, but now I truly was scared. I'd spent years telling everyone I knew that Thuy and I were just friends. I had believed it. Had we been wrong all this time?\n\nI loved her messed up hair and messed up dress.\n\n\"Do you work today?\" she interrupted.\n\n\"In an hour. 12 hour shift, so I won't get back 'til past nine.\"\n\n\"Hurry back, Jake,\" she said almost plaintively. She didn't need to worry about that. \"I'm going to go shower,\" she finished.\n\n\"You are welcome to shower here.\"\n\n\"Not unless you have an assortment of clean panties in my size lying about.\"\n\n\"My last girlfriend left a lot of stuff here. I'll go take a look.\"\n\nShe stared at me blankly for a second. \"Last girlfriend?\"\n\n\"Well, she wasn't really a girlfriend as much as a stripper I hired at NuFeline. She mostly only wore thongs though. Leather ones. Crotchless.\"\n\nThuy shook her head. \"God, you actually had me for a second. I am asleep. See you tonight. And what is the point of a crotchless thong? Isn't that a belt?\"\n\nIt was the longest shift of my life.\n\n--\n\nI rang Thuy's doorbell in my jeans, boots, and Jimmy's Coast-to-Coast moving shirt. A transformed Thuy in a pair of blue shorts and white t-shirt opened the door. She wore a radiant smile as well, making all the wait worth it. \"Good timing. Pizza's on the way. Pepperoni and sausage still the thing?\"\n\n\"Yeah, I'm just a guy. I don't change,\" I said, passing into her house.\n\n\"Good, 'cause half of it is that. You know, they need to invent the boyfriend/girlfriend pizza with two slices for me and the rest for you. I had to cancel the anchovies on my side 'cause I knew you'd eat half of mine anyway.\"\n\n\"It's not my fault that I've got ten inches on you.\"\n\nShe stopped and gave me that little smile. \"Ten inches, huh? You don't have to make up stuff like that. I'm sure it's plenty big.\"\n\n\"No, I meant--\" I looked at her impudent smile. Two could play this game. I leaned over and knocked on the door. \"Pizza delivery!\"\n\n\"Ooh, come in, pizza boy. I've been waiting for something hot for a long time now.\"\n\n\"Pizza man, ma'am. Pizza man.\"\n\n\"I see. You certainly look like a man to me. May I squeeze your bulg... ing bicep?\"\n\n\"Certainly, ma'am. You can put your hand on my bulge any time you like.\"\n\nThuy almost snorted and then reached up to squeeze my arm. I did my biggest muscle man pose for her. \"Very nice, very nice.\"\n\n\"So, ma'am, I heard you ordered the large sausage.\"\n\n\"Oh yes, I did. Actually I asked for the extra large. I always like them as big as I can get them.\"\n\n\"We've heard that about you. I had to pay a guy a hundred bucks to make this run. Where would you like me to put the sausage, ma'am?\"\n\n\"Well, pizza man, I always put them in my mouth. What else would I do?\"\n\nI stared at Thuy who batted her eyes at me. \"OK, you win. I can't think anymore.\"\n\n\"Are my ten inches about to become twelve?\"\n\n\"Fourteen, ma'am. We aren't Tri-Cities Pizza; we're Tripod Pizza.\"\n\nThuy giggled and shoved me towards the hall. \"Go shower, stud. You stink horribly.\"\n\nI headed out the door. \"Don't do the pizza guy while I'm gone.\"\n\n\"How can I stop myself if he looks like you?\" she yelled back as I crossed the lawn. I kept walking. Wait, had she said what I think she had? Suddenly, I heard her voice again. \"That came out wrong!\" I turned to reply but saw the pizza delivery car turning into her place.\n\nI showered quickly and pulled on some gray boxers, black jeans, and a light blue button-down shirt. Thuy opened the door with pizza dangling from her mouth. I found the box open on the coffee table in her living room where the lights were off and an old sci-fi flick played on the TV.\n\n\"What are you watching?\" I asked grabbing a slice.\n\n\"It seems to be a Black Lagoon rip-off. It's like Creature from the Black Lagoon, but worse.\"\n\n\"Black Lagoon is horrible.\"\n\n\"Yes, and this is even worse. It's amazing.\"\n\n\"Is that the Professor from Gilligan's Island?\"\n\n\"I think it's his brother. He's the Professor without all the science.\"\n\nThe pizza was gone about the time the second blonde was taken out by a guy in a blue frog suit who flew a sardine can shaped spaceship. About the time Reporter Boyfriend shoved Evil Spaceman Kermie off a cliff, Thuy curled up on the sofa with me, pulling a blanket around us. I don't remember anything of the movie after that.\n\nThuy leaned into me, placing her head on my chest. I gently wrapped my arms around her and smelled the scent from her hair. I couldn't remember being this close to her since she broke her foot on that hike and I held her by the road until a ranger truck came. This was different.\n\n\"This isn't the way we normally watch movies,\" I said quietly.\n\n\"I know,\" she whispered back.\n\nWe sat silently some time, trying to get used to this, trying to make the shift from friend to more. I wanted to speak, but I couldn't think of anything to say anymore. Or, more accurately, I could only think of one thing. My hand had fallen on her bare knee and the only thing I wanted in the world right then was to caress that skin. I dared not, though, for it could mean the end of this hug. The clock ticked, as my mind went back and forth, not sure for the first time in a long time what Thuy wanted. Finally, after she had not moved for some time, I whispered by her ear, \"Are you falling asleep?\"\n\n\"I highly doubt it,\" she said with a wavering voice.\n\n\"Are you OK?\"\n\n\"Yes, Jake, I'm fine.\"\n\n\"You're shaking.\"\n\n\"I know. I'm nervous.\"\n\n\"Oh, I'm sorry.\" I moved my hand away from her knee and started straightening up, knocking the blanket onto the floor. But Thuy grabbed my hand and put it right back on her bare knee.\n\n\"I'm nervous, but that don't mean I don't like it.\"\n\nI stared at my dark, working hand on her lightly tanned skin, again frozen on my friend's body. I could feel the warmth from her shivering skin on my fingertips. Soon, I felt her muscles move gently as she straightened her leg a bit.\n\n\"Sorry, I needed to move it.\"\n\n\"It's OK.\"\n\n\"My skin was tingling.\"\n\n\"We're acting really silly about this.\"\n\n\"I can't help it.\"\n\n\"No, I mean, you want my hand on your knee and I want....\"\n\nShe turned her head around some to look up at me. \"What?\"\n\nAfter a moment, I confessed, \"To touch you.\"\n\nShe turned back around and I could feel her gaze on my hand. \"Good.\"\n\nThere was nothing I could think of I wanted more than to caress her, but I could feel her eyes upon me, waiting. Eventually, I was able to make my fingers move slowly up and down in place. I saw Thuy's leg muscles tense up and her breath catch, then they both relaxed slowly. After a minute, she nestled further into my chest. I kissed the top of her hair and then kissed it again. We weren't supposed to be doing this. We were friends.\n\n\"That's nice,\" Thuy said quickly.\n\nI couldn't help but smile. \"This is so silly.\"\n\n\"What?\"\n\n\"How freaking slow I am. How you have to encourage me. I have been with girls before.\"\n\n\"Quantum Girl.\"\n\n\"And others...\"\n\n\"But this is different.\"\n\n\"Very. It's you.\"\n\n\"Yeah.\" She placed her fingers on the back of the hand that was slowly caressing her knee, tracing them up and down my skin. \"So pretend it's not me, then.\"\n\n\"What?\"\n\n\"Pretend it's not me and do what you would do then.\"\n\nI understood but the only thing I could think was what I said next, \"If I've got you, why would I ever want to think of someone else?\"",
        "Thuy turned around to face me, straddling my body, her eyes shimmering in the flickering light of the TV. She placed two soft lips on my forehead, kissing slowly. She pulled up from this kiss and came back for another. Then she started to move her light kisses around my face, kissing my hair, my forehead, my eyes, each in turn. \"Oh, Thuy,\" I moaned softly, as my heart began to race. My hands suddenly found themselves on her sides where the shirt had ridden up. Not under my control, they slid along her body, roughly moving up her back, dragging the shirt with them. I pulled her small body against mine, harder than I intended. We weren't supposed to do this, but I wanted it so much. So much. My lips went to her neck and I heard her gasp. I started kissing up and down her neck while her hands tugged at the fabric on my shirt. I didn't want to stop.\n\nI hugged her as fiercely as I could, kissing the top of her head over and over, unable to prevent myself. My fingers kept sliding up and down her smooth torso, feeling the slender fabric of her bra on the sides. Her tongue found my skin and I felt my will crumbling, forgetting everything but her touch and smell. The world was disappearing around us, falling away like the meteors we used to watch together. All I could see, feel, smell was her. Her. I wanted her so badly. Now. Before it was too late. \"Please, please,\" I almost growled into her ear, trying to get it out before I was lost to my desire. \"Please don't let this ruin anything. Please tell me. Anything. If I go too far.\" I felt incoherent. \"This feels too good. My mind is going....\"\n\nShe pushed away from me enough to look into my eyes. I quickly turned to hide whatever had just happened to me, but Thuy simply said, \"Then let it go.\"\n\nI pulled her face to mine and our lips met. Oh, our lips met for the first time in all these years. I heard something getting knocked off the coffee table as our lips pushed together. I quickly realized I was pushing too hard and eased up just barely. Her mouth tasted so sweet and my heart turned over each time I felt her lips push back against mine with as much desire as I felt. It's Thuy. It's Thuy, I thought over and over. I slowly sucked her lower lip into my mouth and then licked it with my tongue.\n\nThuy giggled and moved backwards. \"Tickles,\" she explained, wiping her mouth with the back of her hand. I touched her sides again. She wiggled. \"That does too.\" I stopped. \"No, just not so light.\"\n\nI moved my hands around to her lower back and my fingers pushed harder, kneading her muscles. \"Better?\"\n\n\"Oh yeah,\" she said collapsing back into my body, chest to chest. I worked my hands slowly up her body, massaging and touching as I went. The cloth of her shirt kept riding up as I moved, exposing more and more of her. As I was kneading just below her bra strap, I felt her hands move up to the top button of my shirt, unfastening it. Without a word, she moved to the next one, releasing it as well. She moved to the third button in the middle of my chest but her hands were trapped between our bodies. After fumbling for a bit, she asked, \"Can you?\"\n\n\"Only if you do, too,\" I said and grinned.\n\nShe gave me a pretend tsk-tsk and then pulled herself up to a sitting position, her knees folded under, between my legs. Without a delay, she grabbed her t-shirt and pulled it over her head, tossing it away. She looked like a dream come to life. Her black hair cascaded over her shoulders and down her back with a few stray strands peeking out from the sides. Her trademark smile adorned her flushed cheeks. My eyes traced along the lines of her long neck and over her slender collarbone. She wore a charcoal gray cotton bra over her round breasts, those breasts that she had caught me staring at in the driveway the night before and so long ago. My eyes followed down her torso as it slipped inwards at the side with just the smallest of dimples at the bottom. It was like a dream come real, but as I looked at her, I heard a voice in the back of my head, \"Does she look like your dream, or has your dream always looked like her?\"\n\n\"Ahem,\" I heard and woke from my thoughts. Thuy was pointing at my own chest. Did she bite her lip just a little as my shirt slipped from my shoulders? As the shirt fell away, Thuy's hands fell on my body, sliding up my stomach, over my chest, and through the dark hairs there. Her body slid down onto mine until we were bare skin on bare skin with her arms draped around my neck. I wrapped my arms around her, just feeling the touch of our skin together for the first time. We lay there with me kissing her hair, trying to stop and be still, but failing and kissing her again. She lay upon me, her head to one side, while her hands moved up and down my bare abdomen.\n\n\"I love that you have no idea how sexy you are,\" she said and laid a kiss upon my chest.\n\n\"I love our skin together.\"\n\nI felt her nod and then start to squirm against me. She was slipping her arms through her bra straps, pulling it over her head and away. My heart, which had finally started to calm just a little, increased its pace again. She nestled her now bare chest against mine, and I could feel her hardened nipples pressing into my skin.\n\n\"Now, it's right,\" Thuy said simply.\n\n\"Do you feel your heart? I can feel it beating against me.\"\n\n\"That's 'cause I'm about to have a heart attack,\" she said.\n\n\"Not if I beat you to it.\"\n\nShe laid a couple kisses on my chest and lay back down, caressing me. I ran my hands down her hair to her back again. I could just see her soft skin from my angle and I imagined laying a thousand kisses there. I teased her skin with my hands, since my lips couldn't. My fingers went tickling down her sides and I was rewarded with a small catch of her breath. I then pressed my hands firmly against her, circling up and down her body, moving briefly under her shorts. As my fingers slid just under the blue fabric down around her hips and to the front, her whole body twitched and leapt.\n\n\"Not good?\"\n\n\"No, really good,\" she said a bit breathless. \"Sensitive there.\"\n\n\"Where? Here?\" I asked running a finger along the side of her hips.\n\n\"No, further forward.\"\n\nMy fingers slipped more to the front to a spot right where her legs merged with her abs, and as my fingers touched it, she leapt again. \"I think we found a spot, Ms. Nguyen.\"\n\n\"It doesn't feel like that when I touch there.\"\n\nThe image of Thuy touching herself there popped into my head. Maybe we hadn't discussed exactly everything in the past.\n\n\"Sensitive spots are good,\" I told her.\n\nShe rose up from my chest straddling my thighs looking at me. \"I want to find one of your spots now.\" She placed two fingers on my lips where I kissed them once, then twice. I then ran my tongue along each one before opening my mouth and taking the tips of both in. \"Jake, baby, if you keep that up, we will never find your spots.\"\n\nTruth was, at that moment, I didn't care. Doing this felt fantastic. But as I was about to take a third finger in my mouth, she did it. She placed her free hand right on the bulge in my pants.\n\nI had been hard for as long as I could remember tonight, but this was a whole 'nother level. I felt each throb as I grew bigger and bigger in her hand. She looked at me so seriously. I was unable to do anything and her wet fingers, fallen from my mouth, were caressing my cheek.\n\n\"Does this feel good?\" she asked without a trace of teasing.\n\nI could only nod stupidly. It wasn't good; it was overwhelming. It was all I could do to not jump in the air. I tried to divert my mind away from what was happening. Oh, happening so quickly. Feelings building so fast. She didn't even have to move. Just knowing it was her. It wouldn't take long. I was gonna cum.... When I realized what was happening, I jumped up and tried to separate that part of my body from Thuy. My mind raced trying to think of anything other than where I was so that it wouldn't happen. I felt a pulse but managed to hold back anything else.\n\n\"You OK?\"\n\n\"Yeah, yeah,\" I replied. \"It was just.. uh... really good. A little too good, you know?\"\n\n\"Oh,\" she said, and I saw her examining my jeans. \"Did you?\"\n\n\"No, just close. If I didn't stop.\"\n\n\"It's OK with me if you did. If you do.\"\n\nI tried to smile but I felt the old cheeks flushing. \"It's just, you know, I guess I'm kinda new at this. So....\"\n\n\"Don't be embarrassed, Jake. You're probably gonna hafta have a million miles of patience with me when you go inside. It's supposed to hurt like hell.\"\n\nI could only stare at her. \"Would you-- do you--\" I stumbled.\n\n\"Yeah, maybe. I don't know. I haven't thought about it. The thought just sorta popped out. This whole weekend has been this way. It's freaky.\"\n\n\"I know what you mean.\" It was like someone else was controlling my mind and I had no idea what it would do next. Everything was being drawn out into the light now; things I hadn't known were hidden.\n\nI felt Thuy take my hand and I lifted my head to look at her. To look into her deep brown eyes. I knew what I wanted. I didn't want anything between us anymore. I wanted to feel her soft skin on mine and nothing else. I heard myself swallowing hard and then my index finger pointed towards her waistband.\n\nShe said nothing but stood up and, still holding my hand, guided me back to her bedroom. She had been changing her bedroom every year since I could remember, but it hadn't changed much since college started. There were a couple Vietnamese and Singaporean movie posters in the corner, a huge Gone with the Wind one covering the closet doors, stacks of books in French, German, and Vietnamese littering the place, and a little group of fresh-looking Economics books sitting neatly arranged on the desk. A hundred fragrant shampoos and conditioners peeked out from her shower stall in the bathroom. She moved past all of this to her bed, where she peeled back the black sheets. Then she turned to face me and after just a thought or two placed her thumbs inside her shorts, pushing them and her panties to the ground before me. It was just her now.\n\nI followed suit, pulling my jeans down my body and pushing them away. I looked down to find my cock poking from the top of my boxers, covered in precum. I pushed the boxers away as well and the two of us stood looking at each other. She took my hand and started onto the bed, but that suddenly felt it would take too long. I pulled her back to me so that we were face-to-face, bodies pressed together. I bent down and moved my lips straight to hers. It was magic.\n\nHer lips moved against mine and soon our tongues were dancing together. I felt her tongue so wet and strong bend up behind my teeth, licking back and forth. I sucked it into my mouth until she somehow reversed it and I felt her sucking my own tongue into her. Her nipples pressed into the bottom of my chest, moving back and forth as we kissed. The tip of my cock was lodged against her stomach, wet against her skin. Our legs slid against one another, and I could not fathom how smooth and soft she felt. I moved my hands down her body and squeezed her bare bottom in my hands. She did the same to me and I felt that smile forming against my lips. I growled against her mouth.\n\nThuy suddenly broke the kiss and began to rub her body against mine in earnest. I felt her nipples sliding up and down my body. I heard her whisper, \"So good,\" as she moved back up my body. Then she was kissing along my lips, chin, and neck as she moved down again. My fingers pressed hard sliding up her back, while I kissed anything in sight. I suddenly caught a glimpse of her ear and slid to the side to get at it. As I did so, something happened and my leg slipped between her thighs. I could feel her, warm and moist, against my skin. It was the most erotic sensation I had ever felt.\n\nI licked up her long neck to the ear lobe which I pulled into my mouth. She moaned ever so slightly as I nibbled. Her body started to move and the warm soft spot was sliding against my thigh, leaving a damp trail. I moaned against her in excitement.\n\n\"You ever done this?\" I asked.\n\n\"No,\" she said back and slid her wetness down my thigh. \"You?\"\n\n\"Uh-uh,\" I answered and ran my tongue in a circle along the edge of her ear.\n\nShe suddenly grabbed my cock in her hand and began to rub it. She was moving her hand in rhythm with her mound against my leg. I felt her thumb wrapping over the head, rubbing my precum all around. Through the haze in my mind, I felt a drop of moisture running down my leg from her. I was beginning to smell new scents floating around us, from her, from me, from the sweat that was forming on our naked bodies. I wanted to taste her, taste all of her, before the night was done.\n\nMy tongue traveled down Thuy's neck, licking in broad, wet strokes under her chin. Next it was the collarbone, which changed our angle and I felt her slip off of my leg. I bent over further and kissed down her chest. It was different here than everywhere else. Her breast was soft, giving as I pressed with my lips, but springing back as I let go. I could imagine spending an hour here, exploring. My eyes fell on her nipples. The areolas were much darker than any other skin on her, almost a chocolate color. They were marked with reddish nipples that seemed very wide. Each was erect and pointed outward. I moved to one nipple and laid a soft kiss on it. Then another. I ran my tongue over it and discovered she wasn't fully erect yet as the dark skin began to tighten and the nipple grew. It was fascinating.\n\nSomehow I could feel a grin above me, so I looked up to Thuy. She looked like she was about to laugh. \"What?\" I asked.\n\n\"Jake, they are for kissing. You can take notes later.\"\n\nI smiled back at her. \"Then, let's kiss them a little more.\" I stood up and began pushing her back to the bed. She backed up step for step with me until she was trapped against the bed. I gave a playful shove and she collapsed backwards and wiggled her perfect little body backwards giving me room to join. Was everything she did the most beautiful thing ever? Straddling her thighs, I leaned over and drew a nipple straight into my mouth.\n\nI heard her say something like, \"Now, there we go,\" to herself and her legs moved up and down under mine. I just did whatever I could think of, sucking on each nipple, soft, then hard, then soft. I ran my tongue in circles around those dark areolas while my fingers teased on the other side. I then licked back and forth quickly, and her body squirmed under mine as I kissed. She squirmed against me so much that I had to move my pelvis away from her to prevent a repeat of earlier.\n\nAs I moved, my tongue slid down her breast onto her stomach. I suddenly breathed in that intoxicating smell that I had noticed before. My eye fell down her stomach, past her pinched navel, to a layer of curly black hair. That was something to discover. I kissed down her stomach ever so slowly, making sure nothing escaped my lips. I could feel my excitement building as I moved lower. She also began to shudder and catch her breath and I was already in danger of cumming without anything touching me. I changed from kissing to licking up and down the sides of her belly.\n\nShe jumped immediately, the way she had before when I touched her hip area. I looked down to the spot that made her fly. There was nothing special to see, just a slight fall where hips met pelvis. I moved my body down to kiss the area. I blew a cool stream of air across her skin and her pelvis lifted slightly into the air. I licked back and forth as fast as I could and heard my name.\n\n\"Jake, Jake.\"\n\nShe must really like this.\n\n\"Not so soft,\" she finished. \n\nOh. I pressed my tongue harder on the dimple and licked. This time, I got \"Jaaaakkkke.\" Now I knew what I was after.\n\nShe was beginning to wiggle all around the bed, so I took her thighs firmly in my hands pushing down so that I could continue, licking along her stomach, over her breasts, down her navel, down her hips, up to her thighs. Thuy's hands clutched at the sheets as my tongue passed over the inside of her thighs. I placed my mouth over the top of her leg to suck on her, and my cheek grazed the soft curly hair of her muff next to me. I froze.\n\nI wanted to kiss it so bad.\n\nI turned my head slightly to look at her mound, seeing the hair fall down the top disappearing between her closed legs. I freed her thighs and moved my head up a little to kiss the soft black hairs. I could feel my heart pounding and the scents just a couple inches away. I kissed the hair again a little lower. Thuy's legs moved apart for just a second and then closed again.\n\nHer hand was on my shoulder and I looked up to see her propped up on an elbow. My lips were still nestled in her curls. She gazed at me with a ferocity I had never seen before. I took her hand in mine, our fingers intertwining. She shook beneath me.\n\n\"I'm scared,\" she said.\n\n\"Me, too. But different probably.\"\n\n\"Why are you?\"\n\n\"It's new for me, too. I want you to feel good.\"\n\n\"You're doing great. You have no idea.\"\n\n\"Then why scared?\"\n\n\"No one's done this before, Jake.\"\n\n\"We can stop.\"\n\n\"I don't wanna. I'm just scared is all. No one's seen... me there.\"\n\n\"I'll close my eyes,\" I said and did so.\n\nShe giggled nervously. \"That's stupid.\"\n\nI kept my eyes closed. \"Yeah, but if it makes you more comfortable, who cares?\"\n\nI felt a slight movement.\n\n\"Open your eyes.\"\n\nI opened them to discover Thuy's legs spread open before me. The black hair thinned between her legs to just wisps around labia that were as dark as her nipples. A small bit of pink peeked out from deep inside and moisture was all around in the form of little drops of dew at the edges and matted hair closer in.\n\nI placed my mouth on the dark lips of this woman and felt Thuy squeezing my hand tightly. I kissed up and down slowly. Truth was, this was a little different for me, too.\n\nTrying something, I flicked my tongue between the labia quickly. Wow. Wow. I licked again a little deeper. The taste was something I could never have predicted. A mixture of sour and sweet that was incredibly intense. Thuy's grip was growing stronger as my tongue moved. So this was what my Thuy tasted like.\n\nI moved my mouth completely against the opening. In the movies of this that I had seen, everything seemed really easy, but now that I was there, between someone's legs, I could barely see anything. I had no idea exactly where my mouth was. I just did the best I could.\n\nWith my mouth pressed against Thuy, my tongue moved up and down in some very wet and soft area. I moved down towards where I remembered the pink color and could feel Thuy's wetness entering my mouth, mingling with my own saliva. As I pushed my tongue inward, it felt like Thuy was about to squeeze my hand off. I moved towards where I believed her tunnel to be, keeping my tongue moving. Thuy was moaning now above me, just saying my name and syllables that I couldn't understand. My tongue never stopped. If I could make her feel like this, I never wanted to stop. Thuy's legs began clinching around my head, pressing inward and then releasing. Omigod, I loved it. I suddenly remembered her clitoris. It was somewhere towards the top, I knew, so I just moved up and licked as much area as I could. \"Aahhhhh!!\" She leaped into the air, squeezing me hard.\n\nThis was out of control.\n\nI kept licking at this area where her clit was, but Thuy was starting to buck her whole body underneath me, making it next to impossible. I licked and she gasped and jumped, making me lose the little nub I was now feeling. I had an idea. I got my hand away from Thuy and brought it down to my face. Moving my head back to see, I slipped a finger inside her slit and moved it up and down the length of her mound. Everything was so moist and wonderful. I moved up my fingers to the top, hitting the nub, and Thuy screamed. My quiet, smart, sarcastic Thuy screamed in passion. I would never give this up. Thuy's noises were muffled suddenly by a pillow she was pushing into her face. I moved my fingers back down and pushed forward a little. There was a little give, so I pushed again and suddenly my finger was entering the woman I loved.",
        "\"Not too deep,\" Thuy said taking the pillow from her face. \"Remember, it's not broken.\"\n\n\"Broken?\"\n\n\"Hymen.\"\n\nI looked down expecting to see some sort of film across her but couldn't. \"Should I be able to see so I don't break?\"\n\n\"Don't think so. It's inside.\"\n\nI decided to just not push in past my middle joint and so I curled my finger upwards inside her, rubbing the wall there.\n\n\"Oh, baby,\" Thuy sighed and rustled her hands in my hair. There was a slight sloshing noise as I slid the top of two fingers in and out. I could smell her and hear her. It was so lovely. I put my mouth back down just above my fingers and found the little nub, so small. I licked it back and forth.\n\nThuy lost it.\n\nHer pelvis was jumping while her hands were pushing me hard into her body. I felt her pulling my hair. Then the hands vanished and she was yanking the sheets off the bed. Suddenly, there was a loud squeal and Thuy's legs clamped down on my head with more force than I knew she had. I felt myself being squeezed, unable to move, while her pelvis just thrust upwards. She gripped me like this and I felt the sheets of the bed falling around us until I was covered in darkness. Finally, after seeming to lift me halfway to the ceiling and a series of thrusts, she came back down and loosened her grip a bit. I immediately licked once more, but as soon as I did, she was shaking and pushing me back with her legs.\n\nI pulled the sheets back and looked up at Thuy. She was a complete mess. Tears were on her cheeks; there was a wet spot near her mouth on the bed; and a frantic look was in her eyes. I was about to speak when she pulled me as hard as she could on top of her. I fell so that my lips were at her forehead, her mouth on my neck, and my cock inside her pubic hair. She instantly wrapped her arms and legs around me, holding me into her fiercely and rocking from side to side slowly. As she did this I felt my penis sliding downwards between her legs.\n\nThuy started to kiss me, then just clung hard to me, then kissed me again.\n\n\"Everyone said it was so horrible the first time!\" she was saying. \"But not here, not with you. I should have known not with you. Thank you, baby, thank you for being so wonderful. I should have known with you\" I didn't know what to say, but the truth is that I could barely understand her because my cock was becoming wrapped inside her lips. I could feel the moisture and warmth all around me and I wanted so much more.\n\n\"You are awesome, Jake. I'm so in--\" she stopped the sentence and then after a long pause just licked my face. \"Oh. Is that me? Is that what I taste like down there?\" My face was covered in her juices. She licked me again. \"You know the hardest part of all though?\" she continued. Controlling myself right now, I was thinking. \"I wanted to touch you so bad. But you were so far away. My hands could barely get to you. I hated it. But, oh, how I loved it. I never knew I was a 'baby' person. I've been calling you 'baby' all night. Where did that come from?\" She said something more but I didn't hear it. I was frozen, all my muscles tensed. My head was dipping inwards. With just a small thrust, I could....\n\n\"Jake, Jake,\" I heard. I managed to look up feeling like I was crazed. She looked deep into my eyes, caressing my cheek. \"Go get a condom and we'll finish, baby.\" I stared at her trying to understand.\n\n\"I- I- don't have any.\"\n\n\"What?\"\n\n\"Why would I? I never knew this was going to happen.\"\n\n\"Yeah...\" was all she said, then she did something more. She started to push me downwards into her with her feet on my rear. \"I'm sure it'll be OK. Only once, right? And I don't think it's the right part of my cycle, so, you know, it should be.\" She pushed a little more and my head was inside her. This was it.\n\nBefore I lost my last bit of will power, I rolled to the side breaking the contact. My breathing was heavy, and I felt my mind wrestling with itself. I pulled Thuy hard against my chest, clinging to her now like she had to me not a minute ago. After a minute I heard a \"Thank you\" from her. I wrapped her in me, not wanting to let her go. I kept hugging tighter and tighter, feeling like I couldn't get as close to her as I needed.\n\nI was shaking. She had been pushing me in. I wanted to crawl back on her now and go inside. Maybe that was the only way to be as close to her as I desired. Maybe she had been right. The odds were that it would be OK, right? We could try.\n\nWhat had she done to me? I knew everything going through my mind was idiotic, but I couldn't make the thoughts go away. Why, oh why, had I rolled off?\n\n\"Maybe, we don't need a condom,\" I heard myself say, not believing my own ears. \"You said you didn't think it was the right time....\"\n\n\"Let's just go buy some, OK, Jake? Trust me. You haven't lost your chance. It's only like a 30 minute trip to a gas station and back.\"\n\nI was silent for a moment, trying to let my desires lessen. Eventually, I nodded and kissed Thuy's head again. I squeezed her into me yet again. \"There's one problem. We'd have to get up.\"\n\nThuy giggled against my chest. \"That is a problem,\" and then she pushed me over on my back and climbed on top of me lying on my body with her arms around my head. She looked at me and said with an overly pleased smile, \"You are so mine.\" She lifted herself up and looked down my body to my cock which was rock hard and almost purple. She started wiggling downwards and said, \"Half my body is covered with the lube from you. Think there's anything much left?\" She put a finger on the head, right on the tip where the precum was waiting. I watched as her finger slowly rubbed the lubricant in a circle all over my purple head. My cock pulsed up and down under her touch.\n\n\"Cool,\" she said simply.\n\n\"It's alive and coming for you,\" I replied.\n\nShe looked at me with her little smile. \"You're not gonna be able to joke much longer.\" And with that she pushed her dangling breasts together around the shaft of my cock. Her body began to slide up and down my length and immediately the sensations were building.\n\n\"Are- are- you- you- sure?\" I managed to say as my head started tossing from side to side on the bed.\n\nShe moved down and I watched in awe as her tongue began to lick around my head covered in precum. \"Uh-huh,\" she replied and then her mouth moved forward taking some of me between her lips, disappearing behind a wall of hair as it fell around her.\n\nHer tongue began to slither along the top of my shaft, sending chills up my spine. \"You win,\" I squeaked out as I grabbed at a pillow.\n\nShe started sliding her breasts up and down me again and with each motion the forces of an orgasm were building deep inside me. I could feel it growing and growing each time she moved. Her breasts, then a lick, then her skin, then, oh, I don't know what she was doing. It was soft, wet, smooth, perfect. Oh so good, oh, so fucking good. \"Omigod. Thuy. Thuy, baby... Thuyy... I'm sorry, don't stop. Yes... I can't....\" The orgasm was almost here. I wanted to scream. All the times I had been so close tonight were all coming back at once right now. All of them. Ripping me apart. Oh fuck. I couldn't stop it now. Too late. I felt something wet around my rod and pushing against me, a tongue?, and I exploded. It felt like the first squirt started from the base of my spine and came flying outwards. Thuy squealed again, but different from before, and I felt her rubbing at the base of my erection. She tossed her hair up and another squirt flew up and hit my chest. It wouldn't stop. Glob after glob was shooting upwards covering my stomach and lower chest. Between her hair, I could see Thuy's mouth resting on the top side of my erection watching everything coming out of me, but never letting go while I pulsed against her lips.\n\nFinally the orgasm subsided and I stopped tossing my head on the bed. Thuy lifted her head up just a bit, releasing me, then slowly guided the tip of my hard-on through the pools on my skin. I watched her exploring the results of her action with fascination.\n\n\"Would you like to borrow a pencil or should I take dictation?\"\n\nShe looked up at me and grinned, then put her tongue in a small glop just under my cock. She drew it into her mouth and tentatively tasted it. After a second's reflection, she sat up beside me and said, \"I'm no judge, but I think that would've been quadruplets.\"\n\nI nodded, thinking how that orgasm had been building for hours now. I began to feel semen sliding down my sides. \"Your sheets are going to be a mess. Towel?\"\n\nShe jumped up and ran into her bathroom.\n\n\"Don't forget the bit in your hair,\" I called after her.\n\nMy goddess returned, running a damp rag over some long strands of hair and tossing a towel onto my stomach. I quickly cleaned myself up and put the towel to the side. She was still standing by the bed nude with a look of concentration as she worked over her hair thoroughly. I suddenly remembered that just a couple hours ago I had been paralyzed at the touch of my hand on her knee, and yet already it seemed like this is the way it should be. What could be more natural than beckoning her to the bed where I waited to hug her the whole night through? I reached up to pull Thuy back into bed with me, but she pulled back, saying, \"So, think you can make it to the gas station now?\"\n\n\"Try and stop me.\"\n\n--\n\nTwenty minutes later, at sometime around three in the morning, we arrived at the all night convenience store by the Interstate. Thuy's hand fell into mine and we walked quickly towards the door. However, as soon as I placed my free hand on the glass door, Thuy did a hard U-turn, spinning as fast as she could, her hair falling down to cover her face. This was a practiced motion she had used for years to hide.\n\n\"What's wrong?\"\n\n\"Julie.\"\n\n\"Who?\"\n\nThuy continued under her breath. \"Ms. Pep Squad.\"\n\nI stared blankly.\n\n\"Played the flute. Always sat in the front right seat of every class. 'Can't keep a secret' Julie!\"\n\n\"I have no idea what we are talking about.\"\n\n\"Jesus, Jake. Soccer Team Julie.\"\n\n\"Ohhh!! Julie! What about her? She works here actually. Assistant. Manager, I think. I see her all the time.\"\n\n\"Well. You are about to see her again because she's behind the counter.\"\n\nI looked up and saw Soccer Team Julie behind the counter. Her hair looked red today. I wondered what color it used to be. She gave me a quick wave. I knew why Thuy had avoided using the name. It seemed that Julie had really only dated two or three guys in all of high school, but they all were on Varsity Soccer, and the rumor spread quickly of something more. But I guess the name had stuck, even if it wasn't true.\n\n\"Did you two not get along?\"\n\n\"Jake! No, it's just...\"\n\n\"Oh. We are about to buy condoms from 'Can't keep a secret' Julie at three in the morning. So much for privacy about us, huh.\"\n\n\"Welcome back.\"\n\nI thought about it for a second. \"Does it matter?\"\n\n\"Yes! No! I don't know! I just don't want us to be talked about. Maybe if I don't go in and stay out here.\"\n\n\"Yeah, she might think I've been standing at the door for five minutes with my other Vietnamese friends, because the population is so enormous here in Arkansas.\"\n\n\"OK, fine.\"\n\n\"Thuy, it's actually good luck in some ways. Everyone already thinks we've been at it for years. So if Julie says something, who's gonna think this is new?\"\n\nThuy stood, unmoving. I held the door open for her and after a beat she went in, her hair still covering her face.\n\nJulie called immediately. \"Hey, Jacob,\" she said with some energy. \"Hey, Jennifer,\" she said with a little less. \"Good to see you two together again.\"\n\n\"How's the evenin' treatin' ya?\" I asked.\n\n\"Butt boring.\"\n\n\"Congrats. Usually you tell me it's Super Ass boring.\"\n\n\"What can I say? Good day. Maybe I just think about butts a lot watching that cute one of yours.\" I felt Thuy disappear down an aisle.\n\n\"Yeah, sure,\" I said and turned to find Thuy staring at a display of mixed nuts and orange slices. \"Hey, Jule, which aisle has the contraceptives? Condoms.\" Did I hear a squeak from the orange slices?\n\nJulie looked at me and then slowly pointed towards the back corner.\n\n\"Thanks.\" I said and went to find Thuy who had vanished. When I finally found her hiding behind a large Miller Lite display, she started jumping and slapping at my chest silently.\n\n\"What are you doing asking her?!\" she threw at me in a barely constrained whisper. \"And talking to her at all? And why does she call you Jacob?\"\n\n\"I asked just to tease you and she calls me Jacob 'cause she's flirting with me.\"\n\n\"I know she's flirting with you.\" Thuy looked at me like she was going to start hitting me again, so I covered my face. Finally she just sighed and said, \"I hate small towns.\"\n\n\"You love 'em! You're always on about loving small towns and you can't wait to get away some day.\"\n\n\"Stop remembering everything about me. Come on, let's go buy something because you are looking really cute with that what-who-me grin.\" We walked to the back of the store with Thuy saying, \"You'd be in trouble more about the cute butt thing if you hadn't completely forgotten she existed in the parking lot.\"\n\n\"So which one?\" I asked looking at the little condom display.\n\n\"Hmmm. From what I saw earlier, I think you should try Gargantuan brand.\"\n\nI elbowed her. \"You get two extra licks later for that. Not that I could stop anyway.\" Thuy smiled and squeezed my arm. \"Ooh, how about Ribbed for Her Comfort?\" I asked.\n\n\"It's my first time. I don't think it's gonna be super comfy, no matter what.\"\n\nI paused and said, \"You know we don't have to. That thing you did to me earlier seemed to work pretty damn good.\"\n\n\"I want to,\" she said simply. \"Oh, here you go. Extra-Sensitive. Feel Like Nothing is There.\"\n\n\"We got close enough to nothing being there earlier.\"\n\n\"Thank you so much, Jake, for, you know, not. I'm gonna be worried enough about the little we did for the next few weeks.\" She paused. \"Wow. I've never wanted my period before. Huh.\"\n\n\"Hey, I'm not the strong one who resisted. I started begging you within seconds.\"\n\nShe giggled. \"Yeah, you almost gave me the puppy dog eyes. Super cute.\"\n\n\"How 'bout this? Spermicide for extra protection.\"\n\n\"That does it.\" Thuy pulled a box from the shelf.\n\n\"Box of 28? We've got a week. Four times a day. I like how you think.\"\n\n\"We have almost a week and a half.\"\n\n\"Good point. I'll get a couple more boxes.\"\n\nShe slapped me on the arm, and we headed up to the counter. I tried not to grin. Thuy put the box on the counter next to the worn romance novel that Julie was reading. \"It's good to see you, Julie,\" said Thuy.\n\n\"Yeah, Jen, how've you been doin'? I think it's been a couple years,\" Julie replied as she rang us up.\n\n\"I'm not around as much as I'd like to be.\"\n\n\"I'm sure Jake has been lonely. You two were always...\" she placed the condoms in a plastic bag, \"...close.\"\n\n\"You will have to keep an eye on him while I'm not here then.\"\n\nWas that a dig?\n\nJulie handed the bag over to Thuy. \"Anything else you two need tonight?\"\n\nWithout delay, Thuy answered, \"Nope. That's it. Just needed a big ole box of these things. Only thing I came for. You, Jake?\"\n\n\"Uhhh, no.\"\n\n\"That must be all we needed then,\" Thuy finished, her voice sounding a bit clipped.\n\n\"OK, ummm... have a nice night then.\"\n\n\"Thank you,\" Thuy answered, then stopped. \"Hey, Julie, I'm sorry about before. About not saying hello. I was just being stupid,\" she explained holding the bag up.\n\n\"Naw, it's OK. You should see the way the teens behave.\"\n\n\"It is good to see you,\" and Thuy leaned over the counter to hug Julie.\n\nAs we closed the car door, I asked, \"Did you just make an enemy or a friend?\"\n\n--\n\nThe door to my house closed behind us and Thuy pulled her top over her head. Our clothes fell as we passed through the house. I jumped out of my jeans and turned the corner into my room just in time to see Thuy crawling naked across the covers.\n\n\"Your sheets are warmer,\" she said pulling them up around her stomach.\n\nI slipped my boxers over my erection and crawled in with her. \"Maybe we can find something else to warm you up.\"\n\n\"The sheets are for later, anyway,\" she said throwing them back. \"Do you think we will ever go to sleep?\"\n\n\"If this is the alternative...\" I said, placing my hand on her breast.\n\n\"I'm far too wired to sleep, too. Maybe if we do something really hard and fast to the point of exhaustion.... Hey, where are the condoms?\"\n\nI jumped out of bed and found them lying in the hallway discarded. \"As soon as you pulled your shirt off, I just started tossing things.\"\n\nShe grinned. \"I really like having this effect on you. I can see this as a permanent part of my life.\" A moment after she said that, I saw her cheeks flushing, but I knew they were nothing compared to mine. She continued, \"Do you want to put it on now or later?\"\n\n\"Uh, shouldn't we warm you up a little first?\"\n\n\"Vroom, vroom. I'm pretty ready. Been thinkin' about it all night.\"\n\n\"Yeah, ok then.\" I was with her. I don't think my erection had ever really disappeared since she pulled the blanket over the two of us on the couch at her place. Maybe longer. I sat up on the edge of the bed and pulled a condom out.\n\nI was eyeing the little plastic disk when Thuy asked, \"How do you know which side is up?\"\n\n\"Wondering the same thing. Seems to be more lube on this side, so I'm guessing that's 'out'.\" I placed the disk at my tip and began rolling it down my length. Thuy's fingers joined me, helping me roll it to the bottom. I just watched her fingers sliding along my cock so naturally.\n\nThuy seemed to be studying what she had done as well. \"Jake,\" she began. \"I, uh, I really like seeing you naked.\"\n\nI grinned. \"I'm kinda a fan of seeing you this way, too.\"\n\n\"I don't just mean that. I mean, it's like all the barriers are coming down. There's finally nothing between us anymore.\"\n\n\"No secrets.\"\n\n\"Ever,\" Thuy finished, then looked back down at my cock. \"How's it feel? Tight?\"\n\n\"Not so much. Hold on, let me....\" I pulled the condom up a bit trying to make sure there was space at the top to catch everything.\n\n\"What position do you think is best?\" Thuy's voice asked over my shoulder.\n\nI lay back down next to her. \"How about the kissing position?\" I answered and moved my lips to hers. She responded immediately and soon our bodies were wrapped together, hands gliding across skin, lips pushing and pulling. I moved my lips to her neck and one of those beautiful moans escaped from her. I instantly felt my temperature rise.\n\nI put long wet licks up and down her neck, again taking in that indescribable taste. Next it was her ear between my teeth, nibbling very gently. Her nails descended upon my back and scratched lightly across my skin, sending goosebumps across my body. My hold on her became stronger, tighter, as I kissed and licked her over and over. I was quickly falling head over heels with the feel of her.\n\nI felt Thuy pushing me up on top of her and our legs writhed together, our groins meeting again. I lifted myself a bit so that she didn't have to support my full weight and she brought her tongue to my face and quickly covered me with it.\n\nHeaven.\n\nI didn't know this could have such an effect. My body twitched. I moaned and gasped each time her tongue hit me. Omigod, it was good. Don't ever stop, Thuy.\n\nMy tongue fell on her forehead and slid down her face and chin, over her neck, between her breasts, all the way to her navel, and then back up again. I couldn't get over the feel of her body against mine as we ground together. Everything was smooth, soft, and perfect. I repeated my body lick a second and a third time, beginning to taste and smell the excitement growing in the air.\n\nShe lay with her hands stretched straight above her body, so I glided up her until my own hands found hers and the fingers locked together.",
        "I was in love. I could feel it. I knew it because my heart was melting for this woman. \"Thuy,\" I whispered, my mouth just an inch from hers, \"this is the best day of my life.\"\n\nI saw tears in her eyes and she nodded quickly.\n\n\"I'd do anything for you,\" I told her, the emotions quickly overpowering me.\n\n\"I know,\" she replied and wrapped her legs around my waist. My cock was again pressing up against her mound, though this time wrapped in a plastic shield. I looked up into her burning eyes. My hips moved a bit lower until it felt like my tip was between her labia. I pressed forward and she wiggled under me, moving. I pressed forward again, not sure. Where the hell was I? Everything was wet and warm and wonderful. How did I figure out where to go? Thuy reached down and took my condom-wrapped shaft in her hand, pulling me lower and at a different angle.\n\nI pushed my hips forward again where she had placed me and Thuy's eyes shot open.\n\nMy head was inside her. I could feel the tightness.\n\nI pushed again and Thuy cried out. Her arms wrapped around me tightly, clutching me. \"Slow...\" she coaxed.\n\nI nodded, but the truth was I had no idea what I was doing. Was I in just a bit or a lot? She was so tight around me and I felt so much pressure that I didn't know how to move slow or fast. I tried to inch in a little more and Thuy was whimpering. My Thuy. Oh, my Thuy. I didn't want to hurt her. I resolved not to move an inch more inside. Instead I would try moving in and out, but going no deeper than I was. I slid backwards and she moaned. I moved in again and she cried out. I didn't know what to do. All I could think to do was stay put and hold her, so I did. We lay there for a while with me resting partway in her, clutching each other.\n\nSuddenly, I felt her hips move against me, rocking ever so slightly. I kissed her again and tried to remain still, letting her control what happened. She continued these tiny rocking motions against me and I could feel sensations already starting between my legs.\n\n\"I'm not gonna last long,\" I confessed to her.\n\n\"That's OK,\" she said in a voice that seemed about to break.\n\n\"Are you doing alright?\"\n\nShe nodded, then said, \"it hurts some.\" She looked deep into my eyes and then caressed my face while our hips moved back and forth together. \"I'm so happy.\"\n\nI admit that I didn't totally understand, but how could I? My gaze fell down the woman I loved to where our bodies met. I could just see the base of my cock before it disappeared inside her. I was further in than I realized.\n\nI had an idea. I propped myself on one arm and lowered the other down her torso, gliding over her skin as I went. My hand disappeared between her legs, bumping into my own cock inside her. I slid up from there.... Thuy squealed and jumped up. I had found her clit. I kept my cock as still as I could, just filling her, while my fingers began to touch that sensitive spot. Her little whimpers became cries and her arms started to flail around the bed. As she moved, her muscles gripped my cock inside her, squeezing it and releasing it. It felt so good.\n\nI kept rubbing her clitoris as she rocked her hips against me, and she was speaking, \"yes,\" Jake,\" \"omigod,\" and 20 others that I couldn't figure out. I felt my balls clutching, building and building. I realized I was thrusting into her. I hadn't meant to. It was so hard to stop now. Her hips were rocking harder too. I really hadn't meant to.\n\nOh.\n\nThuy.\n\nBaby.\n\nOh, love.\n\nOhhh.....\n\nHer fingers clawed at my back hard and she was watching me so intensely. There was sweat on her skin and tears.\n\nI made sure my fingers kept moving on her. Tears sliding down her cheeks. I wanted to kiss each one. Her hips bucked hard into me. I was thrusting. Oh, thrusting deep into the one I had always loved.\n\nIt felt so good.\n\nShe-\n\nShe-\n\nEverything\n\nForever.\n\nOOHHHHHH\n\nI was cumming, cumming, and cumming. I felt my face twisting and my whole body convulsing. Shot after shot into her.\n\nBut I kept my finger moving on her clit as I was collapsing on her. I didn't forget. All I wanted in the world was to make her feel like I did. She deserved everything I could give her. \"Beautiful, beautiful,\" I heard myself saying over and over incoherently as my cock continued to throb deep inside her. She screamed and flew to the ceiling. She plastered herself against my body. My fingers slipped from their place. Her face was buried in my neck and her body convulsed with soft sobs. I didn't let go. I was here forever for her. As long as she would have me.\n\n\"Are you OK?\" I asked. \"Did I hurt you?\"\n\n\"No, baby,\" she said still clutching me harder than I could believe. \"Just a lot-\" she breathed and wiped her face against me, \"to handle,\" breath, \"at once.\"\n\n\"Good,\" I said. \"I think.\"\n\nI felt her smile forming on my shoulder. \"This is the reaction you want.\"\n\nAs our bodies calmed down, my emotions grew. I wanted to say something. To tell her. But I couldn't. There were no words for this.\n\nI slowly said, \"Thuy, I don't know how to tell you. How. How I feel. About you. I don't know. I want to tell you.\"\n\n\"I know, baby, I know. I think our bodies have been trying to say it for us.\"\n\nYeah. \"Since we didn't know how.\"\n\nFrom the very first touch, so many hours ago, this had felt different from the mild experiences I had had previously. Now, I got it. My times with the other girls had been about sex, me trying to learn, but this wasn't. This was about Thuy.\n\nThuy lifted herself up and my cock slid out of her. I rolled the condom off, tied it, and tossed it in a trashcan. After I settled back down on the bed lying on my back, Thuy crawled on top of me again, resting her body on mine. She put her head on my chest and we lay quietly together for some minutes, breathing. I just held her and watched her rise and fall with each breath. I drew the sheets up around us.\n\nShe spoke.\n\n\"You know, I've been wondering why you haven't ever had sex before. There are women all over you, and as clueless as you, as we, can be, I think you know it deep down. If you had ever really tried, you'd have found someone to play with.\" She ran her fingers through my chest hair and then looked up into my eyes. \"What were you waiting for?\"\n\nI knew the answer now.\n\n\"You.\"\n\n--\n\nLate the next evening, Thuy and I were cuddling on the living room floor watching something forgettable when the phone rang. I picked it up to discover my mom on the other end. \"Hey.\"\n\n\"How was your weekend, Jacob?\"\n\nBest ever. World shattering. Life changing.\n\n\"It was good.\"\n\n\"Who is it?\" Thuy whispered from where she lay in my lap.\n\n\"Mom,\" I told her.\n\n\"Was that Jennifer?\" my mom asked.\n\n\"Yeah. We're hanging out together.\" I looked down at Thuy and decided to go for it. \"Actually, I think she and I are going to try dating each other for a bit. See how it goes.\"\n\nThuy straightened up and looked at me.\n\nI heard my mother scream. \"May! May!\" That was Thuy's mother's name. \"You were right! You were right! You said they'd figure it out!\" There was a bang as my mother seemed to drop the phone and I heard Thuy's mother saying something. Sounded like they were jumping up and down. Then I heard my dad's voice.\n\n\"'Bout damn time. Can I go home now?\"\n\n--\n\n\"Don't stay out late.\nNowhere to go.\nI'm home about eight.\nJust me and my radio.\n\nAin't Misbehavin'\nSaving my love for you.\""
    ],
    "authorname": "M-Y-Erotica",
    "tags": [
        "friends",
        "vietnamese",
        "romance",
        "southern",
        "college",
        "tender",
        "safe sex",
        "love",
        "virgin",
        "hot"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/nothing-between-us"
}