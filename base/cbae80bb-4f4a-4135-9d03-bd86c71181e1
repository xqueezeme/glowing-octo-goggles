{
    "title": "Christian College Sex Comedy Ch. 08",
    "pages": [
        "*He who said 'Live by the sword/die by the sword' wasn't into empire-building*\n\nThanks to Frontma for another dandy job editing!\n\n(Yes, this tale is supposed to be somewhat humorous and outrageous too. While not always comedic I'd like to think it is mostly a good-natured romp.) \n\n*\n\n\"Zane, what's up?\" Christina said by way of greetings when I returned to campus that night. Despite the gang being alone, the group of us gathered in tightly together.\n\n\"I had an interesting talk with the Chancellor today, as you all probably know. Among other things, she told me she knew Heaven's secret and she'd expose it and my relationship with her, bringing about my humiliation,\" I informed them. There was a hush amongst us.\n\n\"What...what did you tell her?\" Heaven asked fearfully.\n\n\"I told her to go right ahead,\" I replied. A murmur of displeasure went through the group, except Christina, who stared intently at the ground, and Heaven who looked like she was going to cry...or kick my ass.\n\n\"How could you do that to me?\" Heaven whispered. Before I could answer, Christina chuckled softly.\n\n\"Heaven, the key phrase here is 'humiliate him'. Zane isn't afraid of the whole world knowing you two are together. She's severely underestimated him and his ability to differentiate between lust and friendship.\"\n\nHeaven looked to me for verification. I gave her a kiss on the lips before saying,\n\n\"Christina said it better than I could, but she knows what I meant.\"\n\n\"Besides,\" Hope added, \"now that Zane is here, Heaven, you get grandfathered in, so to speak. You've been here three years so they have to let you graduate.\"\n\nHeaven look to me with some kind of new curiosity. Once again I almost wish she'd kick me instead.\n\n\"Heaven?\" I questioned her. She bit her lip.\n\n\"Can we have some boyfriend-girlfriend time?\" she asked me all of a sudden.\n\n\"Damn, Heaven, I thought we agreed to share Zane?\" Chastity teased her.\n\n\"Along with letting the poor guy get some sleep from time to time,\" Hope agreed.\n\n\"Can we get together tomorrow, Heaven?\" I begged my transsexual lover.\n\n\"Make sure you get Barbie Lynn's permission,\" Faith joked weakly.\n\n\"Screw this,\" I groaned, \"I'm getting a clone.\"\n\n\"That's enough, ladies,\" Christina announced. \"Zane, thank you for the information. It gives us some things to think about; good night.\" Heaven rushed up and kissed me hungrily before joining her departing friends - ravenous little minx.\n\nI've Never Done this Before\n\nI made my way to the dorm and proceeded quietly to the fifth floor, saying goodnight to a few girls along the way. I was pretty sure the door being locked guaranteed me a bit of alone time. Clue number one that this was not going to happen was the soft fluttering glow from the top of the stairs followed by the faint scent of roses and wax.\n\nI was trying to figure out what Barbie Lynn had planned when I came up to the landing and saw Brandi and Opal reclining on the bed and staring at me, illuminated by the light of a dozen candles.\n\n'Oh, fuck,' I thought, 'Brandi -- leg shaving -- rescheduled from earlier this evening, plus Opal hoping for a three-way later. Damn it!'\n\nI must look somewhat put-out because when Brandi addressed me she was cautious.\n\n\"Is everything okay?\" \n\n\"Yes, absolutely,\" I responded. \"I need to get some hot water, some towels, and we can begin.\"\n\n\"We brought up the towels and hooked up a coffee maker for the hot water,\" Opal said.\n\n\"Great,\" I summoned up as much enthusiasm as I could manage, \"let's see what I've got to work with.\" I walked up to Brandi, taking off my shirt. As I came up, Brandi swung her legs off the bed and spread them to either side of me. I sat cross-legged on the floor, taking my shoes and socks off. Before slowly and sensually removing her shoes and socks, I made sure to massage each calf.\n\n\"So, what kinds of tools are being provided?\" I questioned her.\n\n\"We have shaving cream, a safety razor, a multi-purpose moustache trimmer,\" Opal presented to me.\n\n\"Trimmer?\" I questioned. Instead of speaking, Brandi stood up - which kind of put her crotch right in my face - then slowly wiggled down her panties until she stepped out of them and tossed them aside.\n\n\"I want a rose,\" Brandi informed me with some passion as she lifted her skirt and exposed her pubic hair for my sculpting pleasure. I was at a total loss of what to do so I went with what came natural; I leaned forward and took a lick. Brandi was already quite worked up, juicy and succulent to the tongue. She leaned in and began running her hands over my scalp.\n\nWith Brandi's skirt draped over me, I had an epiphany: I was not alone in this. I grabbed my phone and made a rather interesting phone call -- my mouth was working on Brandi as it rang.\n\n\"Zane?\" Leigh said.\n\n\"Mmmm...Leigh\" I responded as I switched from lips to fingers in Brandi, \"I need a favor.\"\n\n\"Sure, babe, what is it?\" she replied.\n\n\"I'm...well...shaving a girl's legs and...pubic hairs...hold on...Mmmm...I have never done this before and I don't know how to do a design,\" I asked.\n\n\"What do you have to work with?\" Leigh inquired while I dipped in deeply with my grooved tongue, bringing forth a throaty moan from Brandi.\n\n\"A safety razor, shaving cream, and a moustache trimmer,\" I answered.\n\n\"No silly, what does the area you are working with look like; thin, thick, hairy, or sparse?\" Leigh asked.\n\n\"I...oh, hold on,\" I replied. I turned the phone around, clicked it, and sent a freshly snapped picture.\n\n\"Zane, did you just...\" Brandi gasped. \"Oh, God!\" she then giggled. \"You did, didn't you?\" I upped my licking game to assuage her worries, which only made her moan louder and rock her hips.\n\n\"Zane, where are you? What are you doing right now?\" Leigh snickered, knowing the answer.\n\n\"Honest, Leigh, it is school work,\" I shot back, then \"Yes, Brandi, I've brought in a consultant.\" This brought in more giggling from both sides of the conversation.\n\n\"Zane, if you can tear yourself away from her muff, start shaving her legs and I'll call you in fifteen minutes with what the girls and I can come up with,\" Leigh chuckled.\n\nI reluctantly left my station beneath Brandi and poured the hot water into a basin with cooler water until it was barely uncomfortably hot. Setting things by Brandi's feet, I grinned at her.\n\n\"This will be better with the skirt off,\" I told her.\n\n\"This will be easier if everything is off,\" Opal added eagerly, then explained with, \"You wouldn't want your shirt or bra to get wet.\"\n\n'Shirt or bra to get wet?' I doubted that was where Opal's mind was at. Opal wanted a chance to ogle Brandi's naked body before closing in for the kill; my mind ran the same way. I was a tad curious, wondering what Brandi thought of Opal's continued presence but not so much that I was willing to risk the moment for Opal.\n\nUsing a steamy hot cloth to coat Brandi's legs turned into a really erotic act. Once I covered the right leg, I went back and removed the first compress and applied the shaving cream. Brandi's legs were 'so hairy' I was pretty sure they hadn't been shaved since...this morning; Hell, the damn things were so smooth they were reflecting the candlelight dancing around us before I even started.\n\nI was three-quarters up the left leg when Leigh called back.\n\n\"Hey, Stud, how is your latest victim doing?\" Leigh teased me. I popped off a photograph of Brandi below the waist in response.\n\n\"Lucky bitch,\" Leigh squealed.\n\n\"Hey, Zane!\" shouted Paris over the connection. A few more \"Hey s\" came over the phone right after that from girls I couldn't identify.\n\n\"Come on, girls,\" Leigh growled playfully to her Kappa Sigma Sorority Sisters, which was followed by a chorus of \"Goodnight, good luck, and see you tomorrow.\"\n\n\"I'm sending you a rose design that should work for you and it's to scale,\" Leigh informed me. Sure enough, I looked at my phone and saw there was a beautifully done rose on some girl's pubic mound. It looked very realistic and I told Leigh so.\n\n\"That's because it is real, Dummy. It is a sister at Colorado State,\" Leigh responded.\n\n\"That was nice of her,\" I told Leigh. Leigh laughed loudly.\n\n\"Nice? No, we showed her a picture of you and traded a night with you over Spring Break for the picture and the help,\" Leigh chuckled.\n\n\"Seriously? I wasn't aware I was that good looking,\" I sounded incredulous.\n\n\"That's why we love you, Zane -- you are smoking hot but don't act like it; that and your big cock, your dynamite stamina, and that awesome sexual prowess,\" Leigh faux-sighed over the phone while I lowered my head in shame. I kept shaving, though, because I didn't want Brandi's skin to get cold.\n\n\"Where am I going to meet my savior?\" I asked Leigh.\n\n\"We are still working that out,\" Leigh replied. \"Tawny doesn't want to give you up for the entire time so we may need to fly a group of them down to Florida when we go.\" Great, now I was spending Spring Break in Florida -- which city, I didn't know yet.\n\n\"Of course I will honor my commitment to the Kappa Sigma's,\" I assured Leigh. \"I can also help with airfare if needed.\"\n\n\"We never doubted you, Zane; now get to work and warm that poor girl up...I mean work her over,\" giggle, \"I mean, do your duty and make her look lovely where it counts,\" Leigh finished.\n\n\"Thanks, Leigh, I owe you. Can I get a picture of my muse?\" I inquired. \n\n\"I'll give her your phone number and you two can talk it out,\" Leigh responded.\n\n\"I'm okay with that, we should get along; but I'm off now so goodbye,\" I finished up. I looked up at Brandi and flashed her the picture and let her study it.\n\n\"That looks cool...and she's a red-head,\" Brandi noted. Opal snuggled up behind Brandi on the sly and looked over her shoulder.\n\n\"Well, now we know who to watch out for when we follow Zane down to Spring Break,\" Opal pointed out, \"Or at least we know what she's like down below.\" I decided that working on Brandi was my mission for the night. A hot compress to her private regions was my opening diversion but as I lay the cloth down, I slipped a hand back to her cunny and slowly began to play with her lips.\n\nBrandi lay back on the bed, propped up by her elbows and resting against Opal's thighs and stomach, laying her head between Opal's breasts. Opal was on her knees behind Brandi and was reclining to let Brandi stretch out. As far as I could see, Opal was down to wearing her socks and skirt and that was all. I worked two fingers into Brandi's virgin slit; three strokes in and one up to clip the clit.\n\nI waited until Brandi's nipples were both fully erect, perky, and a deep, dark pink. I sprayed out the foam, cut the foam down to a manageable level and with the picture in one hand I began my shaving experiment. God favored Brandi because it turns out I am a prodigy with a small razor. Brandi's design was virtually identical to the girl's from Colorado.\n\nShe was so enraptured with the whole procedure, she missed Opal's hands slowly sliding down her shoulder to her chest. Opal traced her fingers under Brandi's perky breasts, unnoticed except by me. When I finished, I took Brandi's hand and directed her toward my mirror on my wardrobe. She rose up on her knees and looked over my handiwork and cooed.\n\n\"Zane,\" she turned and jumped me, \"this is fantastic. All the other girls will be so jealous,\" Brandi squealed ecstatically. I took her by her knees and drew them toward me until I was back between her legs.\n\n\"Do you want to go now or is there something more you want me to do?\" I asked in a darkly sensual and seductive voice full of passion. Brandi grew quiet and uncertain so I took her tit into my mouth, held it in place, and flicked my tongue over its stiff nipple tip.\n\n\"Ah, ah, ah...Zane,\" Brandi moaned. She bit her lip and rolled her head back until she bumped into Opal, who was moving back behind her again.\n\n\"Hey,\" Brandi responded dreamily to Opal, as if suddenly remembering she was with us.\n\n\"Hey, yourself,\" Opal purred in return. She moved a hand between Brandi's torso and the arm she was using to support her reclining figure, to the side of Brandi's breast.\n\nI pressed one hand between Brandi's legs and began rubbing that spot right above her hooded clit, bringing about further sexual confusion on her part. She started panting and licking her lips while shifting her gaze from my eyes to Opal's. Finally, her lips remained open and Opal knew it was the moment to breach the space between them.\n\nBrandi stiffened and I waited for her to rebel but when she didn't, I compounded the pleasure of her embrace with Opal by increasing my teasing and pulling with my teeth on her nipple as well as rubbing one finger around her clit and slipping it into her hot cunt. That did the trick because Brandi freed one supporting arm up and wrapped her hand around Opal's head and pulled her deeper into their embrace.\n\nFor her part, Opal matched Brandi's passion with unleashed desire, stroking her hand around from the side of her breast into lazy circles closing in on the nipple. We kept this up for several minutes until Brandi began squirming. She ended up flopping onto her back with Opal splayed out to the side on her stomach, still kissing her lips and face.\n\nInstead of following Brandi's body up, I returned to her sweet pussy and led off with a rapid tongue-fucking that brought a quiver to her thighs almost immediately.\n\n\"Oh, Christ,\" Brandi gasped as she arched up once, then twice, before desperately grasping my pillow and screaming into it. Great, another screamer; but at least this outcry was shrill and tingled the toes instead of shattering eardrums.\n\nI sat back on my haunches as Brandi continued to twist and writhe on the bed. Opal gently tickled Brandi's nipples, keeping Brandi's orgasm going on and on, but I saw the opportunity in this. I located an unused hot compress to clean my face then snuck over to Opal and ran a hand along her ankle.\n\nIt took Opal less than a second to judge my intentions and eagerly spread her legs to allow me in. I had played with Opal before; she tasted great and responded with barely constrained excitement every time. I began placing little kisses along her inner thighs, half way up from her knees. By the time I placed the tip of my tongue on the junction between her thigh and cunt, she relented in her assault on Brandi and lay back fully on the bed.\n\nFor nearly a minute the room was filled with the faint echoes of Brandi and Opal breathing heavy and my licking and lapping Opal's pussy; she was really juicy and thick to the tongue.\n\n\"Hey,\" Brandi said in a sultry voice. I peeked up and saw she had rolled onto her side and was looking down at Opal with a romantic gleam in her eye.\n\n\"Mmmm...\" Opal moaned with a serene smile on her lips -- a very happy girl.\n\n\"Your nipples are very puffy,\" Brandi continued as she poked Opal's left nipple with her fingertip. Opal answered that with a coaxing touch to Brandi's stomach along the bikini line. \"Can I?\" Brandi asked Opal, her eyes flitting from Opal's eyes to her breast. Opal nodded.\n\nBrandi engulfed the top of Opal's breast with one 'pop' sound. The way her cheeks moved around, Brandi was whirling around both flesh and nipple in a rapid motion. Opal's other hand reached over and put gentle pressure on the back of Brandi's head.\n\n\"That's a good girl,\" Opal cooed. Brandi looked up, beamed affection at Opal (so I was later told), and switched to the farther nipple.\n\nI slowly pushed Opals legs up by the back of her knees and lengthened my tongue lashing from above the clit to the tip of her anus, which made Opal squeal and shiver.\n\n\"Ooohhh...I'm so loving this school year,\" Opal exclaimed with bated breath.\n\n\"Me too,\" nipple-lick, nipple-lick, \"Slurp, slurp...so good,\" Brandi added.\n\nOpal began losing the ability to talk coherently, drew her legs so far back she was pressing Brandi into her, and began thrusting her hips up to my mouth. I switched my full attention to sucking and nibbling her clit and slipping two fingers into her tight virgin pussy.\n\n\"Hey!\" Brandi gulped as Opal grabbed her by the shoulders and began pulling her up.\n\nBrandi was clearly confused so I took a moment to see if I could help. Opal was trying to maneuver Brandi into a kneeling position...\n\n\"Sit on her face, Brandi,\" I guessed. \"She wants to lick your pussy.\"\n\nBrandi looked back at me somewhat uncertainly, to which I responded with a reassuring look; then she giggled and started straddling Opal's face.\n\nOpal went after Brandi so hard and fast the girl yelped and bucked up, but Opal's grip on her thighs allowed her to keep her lips locked tightly on Brandi's cunt.\n\n\"Ayaya!\" Brandi gasped out as Opal licked furiously and Brandi rocked back and forth like a nude princess doing dressage.\n\nI let Opal's legs come down slightly because I discovered another task for my hands. With my left hand I reached underneath Opal's thighs and began teasing her butthole. I used my right to part Brandi's cheeks and do the same with hers. Brandi looked over her shoulder, gave me a smile, and kept rocking. Opal trembled slightly but pushed her reservations aside.\n\nThe first hint of anal penetration kicked Opal over the edge and she had a whole-body seizure as her orgasm rocked through the three of us. Brandi pulsated even harder on Opal's convulsing face, virtually propelling my first finger's digit up her ass. She squealed delightfully.\n\n\"Zane, that's wonderful!\" she screamed. \"Fuck me! Fuck me! Yessss!!!!\" and she went off, with no pillow to shelter our environs this time.\n\nBrandi toppled over and I had to grab her leg to stop her from tumbling off the bed and onto the floor. She was still gasping and panting too much to articulate a response, though thankfully she didn't struggle. I sat there stretched out for several seconds before Opal became aware enough to help me pull Brandi back to safety.\n\nI sorted Brandi out to one side with Opal on the other and settled between them, all of us staring at the ceiling in various states of sexual recharge. \n\n\"Is everyone okay?\" I managed to ask after a few deep breaths.\n\n\"No,\" Opal murmured. I groaned, imagining what else I would have to do to get her to go to bed when Opal reached out and stroked my cock.\n\n\"Someone hasn't gotten what they've wanted tonight,\" Opal purred as she rolled up onto an elbow and looked down on me. I let her work me over for a while but when I made a move toward her own love box, she slapped my hand away.\n\n\"No, Zane,\" she scolded me. \"I'd like to be able to walk to my room, not crawl, so behave.\"\n\nAs I nursed my slapped wrist, I noticed that Brandi had rolled over and was looking down at me and what Opal had returned to doing to me.\n\n\"I...can I?\" Brandi asked tentatively, extending a hand to my member.\n\n\"Sure,\" I smiled warmly.\n\nBrandi touched it, drew away rapidly, then touched it once, twice...and on the third effort managed to wrap her hand around my shaft.\n\n\"It is so warm -- no, hot...and throbbing. I've never held one before,\" she whispered in an almost worshipful moan.\n\n\"Our boy Zane is actually quite big,\" Opal grinned like a predatory cat.\n\n\"You've,\" gulp, \"held a few penises?\" Brandi wondered.\n\n\"No. But several of us girls measured him while he was...preoccupied and checked online for references. He definitely qualifies as larger than most,\" Opal chuckled playfully.\n\n\"You measured me in the shower?\" I grumbled indignantly. I would have been angrier except that as Opal stroked up my cock, she would intertwine her fingers with Brandi's stationary hold, rub my cockhead, then stroked back down. Fuck, that was awesome. Somewhere along the way Brandi began pumping the top of my cock while Opal kept up on the bottom.\n\nSometimes when you don't imagine life can take you any higher, you get tossed a stepladder. Opal leaned in and licked the slit of my knob. Three passes of the tongue later, Brandi leaned in and gave it a try. Do you know you can tell the differences in the girl by the texture of her tongue? I'm learning new stuff every day (and night).",
        "I only exited my early bliss when I felt Opal's mouth engulf me and take in an inch, displacing Brandi's hand. Opal moved her head up and down in a slow, steady, slick motion with a tongue that had advanced rapidly in proficiency in the past week. I almost missed Opal snaking a hand to the top of Brandi's head and bringing her down within striking distance.\n\nBrandi probably didn't know she was sticking her tongue out and licking her lips with sensual grace mixed with school girl innocence. In a move that would have made the Women's 2008 Soccer Team proud, Opal transitioned Brandi to her first taste of cock effortlessly and didn't need to press the new girl's head down.\n\nBrandi hovered there, her lips over the cockhead and her tongue lifeless. Her eyes flashed to Opal, then to me, begging for guidance.\n\n\"Roll your tongue around the head,\" Opal counsels her, \"while going down a little further -- until you are about to gag.\" Brandi proceeded to do just that and I had to admit she was really enthusiastic.\n\n\"Mmphfp hmmpfh...\" she gurgled as she took almost half of me into her steamy mouth, brushing the back of her throat.\n\n\"What was that?\" Opal teased her as she stroked Brandi's hair and twirled a lock around her finger. Brandi reluctantly pulled off, yet managed to do it with an angelic cast to her aura.\n\n\"I thought this would be gross but cock-sucking is wonderful. I want to gobble Zane all up,\" Brandi bubbled, \"Do you think I can swallow all of him?\"\n\n\"Slow down, cowgirl!\" Opal giggled.\n\n\"No teeth,\" I cautioned her. I didn't want to sound like a wimp but I'm seriously attached to my penis; it has gotten me out of trouble more times than I can count. I owe it to Zany Zane to keep him safe.\n\n\"Tell me if I'm doing something wrong,\" Brandi peeked at me coyly. Before I could rummage up a reply, she pursed her lips and went down on me again. She bobbed up and down repeatedly and after a while, Opal joined in by pumping the bottom of my shaft and fondling my nuts. Brandi gagged again and again but kept charging back down for more until I felt her throat's embrace of my cock tighten and my girth slip farther down.\n\nNot to be outdone, Opal deemed it time to nestle her head against Brandi's cheek and suck in one of my balls, licking and sucking on my ball sack. She lifted my leg aside and over her shoulder so she could slide around for better access. Hell, I would have twisted myself into a pretzel for the sensations those two girls were giving me and the only other thing I could think was, this was them at the beginner's level. What would experience bring?\n\nWhen Opal began rubbing against my anal ring, I could feel my control slipping, a red haze of orgasmic anticipation overwhelming everything else.\n\n\"Oh crap, oh crap, oh crap, I'm going to cum!\" I cried out. Brandi bobbed, oblivious to the implications for several more seconds.\n\n\"Brandi,\" Opal warned her urgently, \"he's about to shoot his semen down your throat!\" That caused Brandi to freeze up, begin to panic, and start gagging once more. She popped up, her teeth scrapping over my angry purple head, causing me to yelp.\n\n\"Oh, God, what do I do?\" Brandi pleaded.\n\n\"Put your mouth over his head, suck lightly, and stroke him rapidly with your hand,\" Opal guided her. Opal caught my surprised look so she explained. \"The Science Club has an illegal internet hook-up the school doesn't monitor. A few of us looked up blowjob techniques.\" Brandi came down on me with remarkable alacrity and a touch made more intriguing by her rapid, painful departure. Then it occurred to me: we have a Science Club?\n\n\"Atta girl,\" Opal sighed with some relief. She'd blown me once before but it had been, admittedly, her first time.\n\n\"All...most...there,\" I growled to Brandi. My hips began micro-thrusts up and Brandi became more vigorous.\n\n\"Get ready,\" Opal grinned. \"Now swallow like crazy, and it is a creamy/salty taste so don't freak out.\"\n\n\"Cummmiiinnnnggg!!\" I growled, and I did. Brandi choked for an instant but then I felt her throat constrictions as she gulped my seed down and rolled my cockhead with her tongue.\n\nSix times I shot off strongly, once or twice as twitches, before I sank down onto my bed and started breathing at something resembling a normal rate. Brandi sat back before I was totally done, savoring the taste of me in her mouth. Opal guided herself to my still hard cock and began lapping up the remains of my semen and Brandi's copious saliva.\n\n\"When can you be ready again!\" chirped Brandi. Blink. Opal chuckled around my rod, clearly amused with Brandi's evolution to a more sexually liberated mindset. She then sat up and began licking my semen that was still around Brandi's lips and dripping down her chin -- I gotta do this again!\n\n\"Give me a few seconds, Brandi,\" I joked, as I wormed my way up toward my pillow and collapsed.\n\n\"Groan...we should also consider going to bed sometime before sunrise,\" Opal muttered only half-jokingly. The two girls cuddled up with me, Brandi in the middle, trading kisses back and forth between Opal and I. I reached across her and tantalized one of Opal's nipples, causing her to close her eyes and bite her lower lip.\n\n\"When can we get together like this again?\" Brandi sighed happily, as she pushed her heart-shaped ass against my crotch and stroked Opal's cheek and temple.\n\n\"At 5:45 in the morning Zane has shower time and anything goes. So if you want to get together then...\" Opal hinted seductively. Brandi bit her finger like the lovely little slut-angel persona she had suddenly embraced.\n\n\"What's next...\" Brandi wondered, \"for us...sexually?\"\n\n\"I think bedrest is next,\" I told her.\n\n\"I think she means experimenting, and if I know Zane,\" Opal winked, \"he'll get behind the situation.\" I groaned at the play on words but Brandi was confused.\n\n\"This isn't the time,\" I sighed, feeling the fatigue creeping in.\n\n\"Oh, come on,\" Brandi begged.\n\n\"Well, I've heard certain Seniors talking about Zane...and how he pounds that big dick up their asses,\" Opal purred with feline seductiveness. Brandi shivered, then flexed her ass around my hardening penis.\n\n\"That,\" she worried while squeezing my cock with her butt cheeks, \"...up my butt...that's scary,\" Brandi whimpered.\n\n\"I've never done it before but I hear those girls really love it,\" Opal tantalized Brandi, \"that thick cock pushing deep into you...filling you up...his hips pounding down on your ass...while he kisses you on the neck and ear...his hot breath,\" Brandi began rubbing her pussy, \"on your neck, that rod pumping in and out...\" and Opal started laughing. \n\nBrandi began breathing heavy, her heart rate quickened and her hand picked up its rhythm.\n\n\"Imagine all that heat that was in your mouth, in your ass instead, burning you up and stretching you out until you just can't take anymore, and then...\" Opal paused for effect \"...he tells you he's halfway in.\"\n\nBrandi rolled over and looked at me with wide eyes, clearly in need, clearly ready to ask me to fuck her ass then and there...and my phone rang.\n\nSold Out and a Price to be Paid\n\n\"Zane Braxton?\" an unknown female voice inquired.\n\n\"Sure is; Colorado State?\" I guessed. The woman gave a playful chuckle.\n\n\"Brianna Kincaid,\" she filled me in; her accent was a bit off but I couldn't place it. \"Well, did you like what you saw?\"\n\n\"I can't believe you actually asked me that,\" I laughed, \"but since you want some well-deserved flattery, I'll tell you that what I saw was damn sexy, but...well...\"\n\n\"Yes?\" she questioned.\n\n\"It made me wonder how great you must taste, and how your flush lips would feel along the tip of my tongue, you know, the way they are when you make that first tentative contact,\" I explained.\n\n\"Ah, fuck,\" she moaned, \"that's teasing, damn it!\"\n\n\"Is it teasing if I plan to deliver?\" I countered.\n\n\"Do you promise to make me cry your name out like Sister Leigh did?\" she upped the ante.\n\n\"Huh? What? Am I missing something here?\" I evaded.\n\n\"Did the Lancaster chapter house tell you what they sent out?\" Brianna questioned me.\n\n\"They said they sent a picture,\" I replied, which caused Brianna to laugh uproariously.\n\n\"Damn. They sent out an edited session of you with Leigh, and then you, Leigh, and Paris,\" she chortled.\n\n\"I...well...let me explain,\" I stammered. \"Wait -- video too?\"\n\n\"Yes. Leigh's webcam was on,\" Brianna snickered. \"She claims it was accidental.\" Suddenly the whole 'dunking me in the pool' thing was a bunch more suspicious. \"It was really nice of you, trying to take the fall for those two -- I mean Paris and Leigh -- with their President. It shows you can be a real gentleman.\"\n\n\"Who did she share this with?\" I inquired fearfully.\n\n\"Every chapter house in North America,\" Brianna said with unbridled mirth. My silence must have been deafening because, \"Zane, did we break you?\"\n\n\"No,\" I sighed, \"it is just that I go to a Christian School and this may become a problem.\"\n\n\"Christian School...please tell me it is a college of some kind,\" Brianna pleaded. \"For that matter, please tell me you are at least eighteen.\"\n\n\"My school is Freedom Fellowship University here in Lancaster,\" I assured her, \"and I'm eighteen. I have been for a few months.\"\n\n\"Thank God. I was afraid that I had broken the law,\" she sighed. \"So is there anything you want to know about me?\"\n\n\"What's your major? Do you have someone in your life? What year are you in college?\" I inquired.\n\n\"You don't want a picture or to know my age?\" she asked with some curiosity.\n\n\"Well, age isn't really a factor for me, unless you are some kind of child prodigy, you should be legal. As for a picture, not really, because if you see me and don't want to hook up, there is no harm, no foul,\" I outlined. There was a pause on her part.\n\n\"Zane, where did you say you went to school?\" she asked suspiciously, leading me to believe I was the victim of an internet search.\n\n\"FFU. And I know it is an All-Girls School but I am a student here. It is a long story but Leigh and Tawny can verify it,\" I swore.\n\n\"Wow...what is it like?\" Brianna questioned.\n\n\"Me and over nine hundred women? It is exhausting, plus the Administration wants me gone so my school days are full of excitement,\" I confessed.\n\n\"So what exactly were you doing with that young lady I helped out tonight, anyway?\" she asked.\n\n\"We have a quaint little tradition here at FFU called Handmaiden's Duty. It requires any freshmen to do any task that a more senior student asks, baring anything actually damaging. Freshmen are safe in classrooms and dorm rooms,\" I related.\n\n\"So, you end up doing things like shaving a girl's legs, or shaving her muff in a rose design -- that's classic,\" Brianna murmured appreciatively. \"And here I was afraid you were a whore.\"\n\n\"I prefer the term 'slut' over 'whore,' but I am a slut. I love women, and I love learning about a woman's body, how special it is, unique and exquisite,\" I told her.\n\n\"Damn...you sound sincere,\" she said with compassion.\n\n\"That is because I am,\" I replied honestly.\n\n\"Okay, here you go,\" she stated, and a picture arrived in my box. My eyes must have bugged because there were giggles on either side of me.\n\n\"Brianna, I'm afraid your eyes will steal my soul,\" I whispered. \"They are so deep and green, like an angry, rich sea whipped by a storm.\"\n\n\"First off -- wow, that's a hell of a sweet thing to tell a girl,\" she sighed sexually. \"Second, who are you with? Or at least tell me how many girls you are with.\"\n\n\"I call 'em like I see 'em, and I leave a woman's identity in her own keeping so it's not something for me to reveal,\" I responded, trying to be chivalrous.\n\n\"Opal!\" called out Opal (funny how that works), and tilting herself into view.\n\n\"Brandi,\" my second bed-buddy added with a bit more decorum and only showing her head.\n\n\"They sound cheerful -- I mean, Opal and Brandi, you sound cheerful. How is my boy Zane doing tonight?\" Brianna called out.\n\n\"Thank you for your help tonight, but to set the record straight, he's our boy,\" Opal corrected her.\n\n\"His work looks great,\" Brandi jumped in, then grabbed my phone, lowered it, and took a pic of my handiwork on her body. \"Neat, huh?\"\n\n\"That is so cool!\" Brianna reacted to the view she was presented with. \"It looks just like mine. Are you sure this was his first effort? If so, he's got talent.\"\n\n\"This was my first effort, I swear,\" I defended my creation and retrieved my phone.\n\n\"Quiet, Zane, the ladies are talking,\" Opal mocked me.\n\n\"Oh? Oh, hell no!\" I roared at Opal. I dropped the phone and leapt on her while she squeaked and tried to roll away off the bed. I caught her and we struggled, me on top. Opal beat me with her fists but it was more play fighting than real because she couldn't stop laughing.\n\n\"What's going on?\" Brianna shouted. \"Come on, somebody, show me what he's doing to her?\"\n\nBrandi picked up the phone and swung it toward us. I had Opal pressed under me, her fists pinned to the side by my hands, and my hips keeping her legs apart. Her legs were wrapped over my hips, her heels kicking into my rump. While Opal's playful lilt rang out I was busy nibbling her neck, which was turning that lilt into deeper moans.\n\nBrandi recorded a short video, including one of her waving 'Hi' for Brianna's later use.\n\n\"There you go,\" Brandi grinned.\n\n\"Holy Crap, he's living his life in a porno,\" Brianna exploded with laughter. \"Hey, Adele, come look at this!\" I prayed that Adele was her roommate and not someone she barely knew who was passing down the street.\n\n\"Whoa!\" a different voice came on seconds later, \"That's the boy you bought? Brianna, I'll do your calculus homework for a month. Fair trade?\" Bought? Was this going too far?\n\n\"No!\" Brianna declared. \"He's all mine -- for a whole day I can do with him whatever I want.\"\n\nHuh? Seriously, what had I gotten into over the sake of one woman's private parts and some freaky tradition I had perverted? Was this God telling me he was angry with me?\n\n\"Now listen up, Kappa Sigs,\" Opal lectured, \"he's yours for one day because we are letting him off his leash, but he's ours every other day, and night, for the next four years. He's the only one we have and he's got to satisfy all of us before we graduate.\"\n\nNow it is clear; I've gone to hell. I'm surrounded by gorgeous girls who want to murder me with the thing I love the most -- sex. If Opal hadn't felt so wonderful beneath me, I'd have cried right then and there.\n\n\"Try not to suck all the cum out of him,\" Brianna began, \"because I like to ...\" she didn't finish because,\n\n\"Oh, God! Oh, God! Oh, God!\" Brandi exploded, \"I gave my first blowjob a few minutes ago and it was heaven (not that Heaven). I mean, WOW! He was thick and creamy and a bit salty, and there was lots of it, but WOW! I could have been doing this in High School!\" \n\n\"Congratulations on your first BJ ...\" Adele congratulated Brandi.\n\n\"Brandi,\" she told them who she was.\n\n\"Brandi. Can you show us how it is done ... right now?\" Brianna suggested.\n\n\"It was thick and creamy and salty too, and lots of it.\" We could hear Adele lick her lips. I had to stop this.\n\n\"No. No more blowjobs tonight,\" I laid down the law. \"Brianna and Adele, it is past eleven here and I have to be up at 5:30 so I'm calling this quits for tonight. Feel free to call me whenever but please remember the two-hour differential.\"\n\n\"Man knows his time zones,\" Adele chuckled.\n\n\"I spent over two years in Thailand,\" I informed them.\n\n\"Really? One of our sisters is from Thailand. Hang on, I'll go get her,\" Brianna said.\n\n\"Wait, how do we know you actually spent time in Thailand?\" Adele inquired playfully.\n\n\"Tell her this,\" I said, then related a sentence in Thai which I had Brianna repeat several times until she got it right.\n\n\"What does that mean?\" she asked.\n\n\"Go tell her and find out. I wouldn't steer you wrong or cause you pain, trust me,\" I responded. Brianna was gone for over a minute but when she returned, she had a new voice with her. It belonged to a stunning Thai woman who gave me a traditional Thai greeting and we chatted amiably for a few minutes in her language.\n\nShe was a city girl but she'd heard of the boondocks I'd lived in. She actually was half-Thai, with a Malay mother and a Thai father, though they all lived in San Diego for the past five years. We were coasting along when suddenly she exclaimed,\n\n\"Wait! You are the guy with THE DICK!\" Jarunee, the Thai girl.\n\n\"I am a guy and I do have a penis, so technically that could be me,\" I chuckled.\n\n\"No, you are the guy who nailed Paris and Leigh in Virginia,\" she clarified.\n\n\"Guilty, though I prefer 'got together with' over 'nailed'.\" I tried to salvage some dignity.\n\n\"No. Dude, we went over things pixel by pixel and Leigh's scream made the glass in her windows vibrate. In California, that qualifies as 'nailed her'.\" Jarunee laughed, then said, \"So what's the debt on this guy like?\"\n\n\"He owes me twenty-four continuous hours of service,\" Brianna replied cautiously. Somehow, my spending the night with her had turned into twenty-four hours of servitude.\n\n\"I'm already doing her Calculus homework for a month,\" Adele volunteered.\n\n\"I didn't accept that deal,\" Brianna pointed out.\n\n\"I'll do your Psych term paper for you,\" Jarunee offered.\n\n\"Oh, come on,\" I groaned. \"You ladies don't even know me. I could be a moron with the personality of cottage cheese.\"\n\n\"Brother,\" Jarunee snickered, \"on Saturday you nailed two Sisters another unknown chick, then had a four-way at your house that same night, and now we find you with two more lick-worthy babes in bed together. You have to be doing something right.\" I felt totally betrayed by my sex drive.\n\n\"Wait,\" Brandi interjected. \"He had a date last night with a Senior named Heaven. I'm sure he nailed her too.\" I fell face first into my pillow and began sobbing.\n\n\"Zane, did you have sex last night?\" Brianna teased me. I nodded into my pillow. \"With more than one person?\" I nodded again, then there was a pause. \"At the same time?\" Another nod.\n\n\"Ladies,\" Opal jumped in, \"I will also testify that he had sex in the shower this morning with more than one girl but it was more of a 'satisfy us girls' kind of thing. I think that solves your dilemma -- Zane is user friendly; the more users, the better he performs.\"\n\n\"Opal! Brandi!\" growled Barbie Lynn sharply, having arrived unnoticed. \"It is past time for you to go.\" Opal's eyes flew wide and she reached for her discarded clothes. Brandi dropped the phone and ran for the door.\n\n\"Brandi! Dress first and then go,\" Barbie Lynn directed angrily. Brandi tiptoed back to my bed and rapidly dressed herself. I could tell Barbie was faking the anger but it was a good sell.\n\nI rolled onto my side and picked up the phone from the quilt.\n\n\"Sorry, ladies, time for me to go,\" I sighed groggily.\n\n\"Who is this new girl, Zane?\" Brianna asked.\n\n\"That's Barbie Lynn Masters, my Dorm Mother,\" I replied.\n\n\"Dorm Mother?\" Adele inquired.\n\n\"Yes. I'm in an all-girls dorm, thus a female dorm head,\" I explained.\n\n\"I'll fill you girls in later.\" Brianna preempted yet another explanation from me about my current circumstances.\n\n\"Who is on the phone, Zane?\" Barbie asked as the other two girls fled down the stairs and she sat on the bed next to me.\n\n\"Brianna, Adele, and Jarunee from the Kappa Sigma House at Colorado State,\" I almost wept. Barbie took the phone and looked at the three women.\n\n\"That's his Dorm Mother?\" I heard Jarunee remark to her sisters. \"She looks like a Playboy Bunny.\" Barbie Lynn looked at the Colorado State crowd.\n\n\"Hey, y'all,\" Barbie Lynn greeted them, which resulted in a chorus of hellos, then \"Zane?\"\n\n\"The compressed version: I had to sell a day of my life to fulfill a Handmaiden's Duty obligation to Brandi, and during Spring Break Brianna is going to collect,\" I explained.",
        "\"Well, goodnight Colorado State girls. It is time for Zane to go to bed,\" Barbie Lynn stated authoritatively.\n\n\"Forgive my presumptiveness, Barbie Lynn,\" remarked Jarunee snidely, \"but you have on a see-through white spaghetti strap top with a bare midriff and pink short shorts that look like they last fit you when you were twelve. Do you really expect us to believe that Zane is going to sleep now?\"\n\n\"Oh, I never said he was going to sleep, ladies,\" Barbie Lynn smiled sweetly and possessively. \"I said he was going to bed. See, I'm cold and lonely and empty inside and Zane's going to burn me up, fill me until I can't take anymore, and hold me all night long.\" She let that image hang there for a few seconds. \"Night, y'all\", and she hung up.\n\n\"Thanks for covering for me, Barbie Lynn. I'm at my wit's end,\" I sighed as I rolled over onto my back.\n\n\"Cover for you? Zane, if I don't get some of your stiff cock in me this hour, I'm going to break down in tears, so please, please help me,\" she pouted, and leaned forward, wanton lust personified.\n\nWhat did that old soldier say? 'Time enough for me to sleep when I'm dead'. I believed that. I also was coming to believe that I'd be dead before my nineteenth birthday, a combination of lack of sleep, sexual exhaustion, and/or an angry male relative/boyfriend. Of course, all of that philosophizing really didn't matter right then.\n\nBarbie Lynn was sympathetic enough to be on top in our '69' position, having resurrected my rod and taking great pleasure in licking my shaft around and around. I had two strong handfuls of Barbie-tush, which I kneaded like unbaked bread when the phone rang again.\n\n\"Mmm hmmmhmm,\" Barbie Lynn mumbled around my cock, unwilling to let go. She was telling me not to answer but I did anyway, in case it was Rio or Iona. It was Brianna instead.\n\n\"Hey, Brianna,\" I said quietly, then stifled the scream that came with Barbie Lynn biting my shaft hard enough to let me know she missed my oral attentions to her pussy.\n\n\"Zane, are you okay?\" Brianna responded.\n\n\"I'm in a '69', giving cunnilingus, and my partner is unhappy to the point she bit my cock, so no, I'm not okay. Now what can I do for you? But please keep in mind I may become a eunuch if this takes too long,\" I answered.\n\n\"Whoops, sorry, but what did you have us tell Jarunee? She won't say,\" she asked softly.\n\n\"I said 'Your nectar tastes like a fresh mountain rain with a sprinkle of ginger',\" I informed her.\n\n\"And you had me tell this to a sorority sister of mine?\" she questioned.\n\n\"It is part of an erotic Thai poem, and it is not something a casual tourist would know,\" I pointed out. \"You wanted to know if I had actually lived there; right?\"\n\n\"You are right; sorry. And now that I think of it, the line is kind of nice,\" Brianna admitted. There was a moment of silence, then, \"What does she taste like?\"\n\n\"Caramel with a hint of raw cocoa,\" I told her, assuming she was asking about Barbie Lynn.\n\n\"Wow,\" she whispered. \"What do you think I taste like?\"\n\n\"I will find out when the time is right. I find each woman to be unique so why ruin the exploration with preconceived notions?\" I enlightened her to my approach.\n\n\"I'm like raw maple syrup,\" she described to me after bringing two slick fingers up from off-screen and sucking them into her mouth. \"I'm Canadian, from Winnipeg. My major is Biomedical Engineering, and I'm currently seeing someone but...I'm not happy with the relationship,\" she confided.\n\n\"Canadian explains the accent I...\" slurp, slurp, slurp, \"...couldn't place. I haven't a clue what a biomedical engineer does but though I'm only a lowly freshman, I am Pre-Med, and,\" slurp, slurp, flick, flick, flick, groan \"...Happiness is like sunlight; more precious than life, impossible to hold, yet ignored until it is absent, or so I was told by a wise old man,\" I sighed.\n\nBrianna was silent and Barbie Lynn had stopped her ministrations to my manhood. I looked around her thigh to see what was wrong and she was staring at me with the soulful blue eyes of a seraph, a tear brimming along her lashes when I first gazed upon her, and then arching down her cheek as I watched.\n\n\"Damn it, I have to go, Brianna. I've made my girl cry,\" I relayed to the Kappa Sig. I caught her quiet goodbye before I hung up but I was paying more attention to Barbie, who slowly uncoiled and crawled on top of me, placing her ear over my heart. I stroked her hair, waiting for her to order her emotions and communicate her thoughts to me.\n\n\"I came up here tonight doubting myself, Zane. I thought I was nothing more than another face on the cavalcade of women you've conquered, and you have conquered me alright,\" Barbie Lynn sighed. \"It isn't love, Zane, at least I don't think it is, but I can never be the same, having been with you, and when I look at that, I realize how massive a change that is.\"\n\n\"I came here knowing there'd be two girls and you would have made them very happy and you would welcome me like you always do...and I felt old and used,\" she confessed, \"and in a few simple words, a few sentences, you tell me without even talking to me how special all of us are to you.\"\n\n\"You've never seen her and I doubt you've known her more than an hour or two, but when she calls in the middle of the night while you are being pleasured, you put your own needs aside and make her feel better about herself...a total stranger,\" she relates with a certain wonderment. \"Forget what you've taught me about sex; Zane, you've showed me how to be a better person.\"\n\n\"Don't let me ruin the moment, but please don't forget about the sex. Sex with you is the best I've ever had, period. It blows my mind how good it is and how lucky I am to be with you,\" I revealed to her.\n\n\"Even without me giving you my virginity?\" she whispered.\n\n\"The Ocean is salty so God gives us rain. I'm not going to waste a single moment worrying or wanting something that isn't mine, or mine to give, Barbie Lynn. You give me your body every time we get together. You aren't holding anything back, not as far as I'm concerned, and I hope and pray I never feel differently because then I would be someone I don't like,\" I continued.\n\n\"If you only want to cuddle for the next nine months, I'll still want you beside me every night. I'm not with you because of the sex -- which is AWESOME -- but because it feels natural to be with you,\" I confided, with a steady desire to hold her close. Barbie Lynn propped herself up on her elbows, her hands forming a shelf for her to rest her chin on.\n\nShe leaned forward to kiss my lips but at the last moment, pushed forward and bit my nose painfully.\n\n\"Ow!\" I gasped.\n\n\"Let's get back to the AWESOME then,\" she giggled, renewed by our emotional watershed. My last conscious thought sometime later was, 'how are we going to get by on three hours' sleep?' "
    ],
    "authorname": "FinalStand",
    "tags": [
        "college",
        "humor",
        "romance",
        "pubic shaving",
        "mff",
        "sorority",
        "blowjob",
        "cunnilingus",
        "anal sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/christian-college-sex-comedy-ch-08"
}