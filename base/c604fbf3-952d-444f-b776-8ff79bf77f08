{
    "title": "The Journey Ch. 02",
    "pages": [
        "Hello, Friend, and welcome to Chapter Two of my series, The Journey.\n\nIf you haven't read Chapter One, this chapter will be much less enjoyable for you. Like turning on WandaVision in Episode eight, you'll have missed all the ground-building, context-clues and cool sit-com tropes, so don't do that to yourself. Do the whole series, as it was intended! (Spoiler, there aren't actually many sit-com tropes in this series. But still, read the whole thing!)\n\nContent warning: this chapter contains discussions of race and racism. If that's not your thing, or may be upsetting to you, please feel free to move on to something else. I won't be offended if this isn't for you. Also, this particular chapter contains no sex scenes. Sorry 'bout that. Again, feel free to move on if that's what you need to do.\n\nTHE JOURNEY, PART TWO\n\nI used to think that I was made out of stone.\n\nI used to spend so many nights on my own.\n\nI never knew I had it in me to dance anymore.\n\n~~ Springfield, VA, July ~~\n\n\"What a fuckin' day,\" I sighed, walking into the apartment. It was almost ten o'clock. \"I hate working game nights.\"\n\n\"Green line tonight?\" Manny asked.\n\n\"You know it.\"\n\nHe nodded at the television. \"Nats are hangin' on two-one in the eighth and the stadium's rockin'. Be proud of your part bringing all those people to help out the home team.\"\n\n\"I'm an unsung fuckin' hero. The Nats should give me a bonus if they win tonight.\"\n\n\"Just be grateful you aren't working closing shift, takin' all those drunks home,\" Manny chortled.\n\n\"Fuckin' A.\"\n\nI dropped my backpack inside the door of my bedroom. Stripping off my work clothes, I pulled on a ratty Nationals t-shirt and some gym shorts, then grabbed a beer out of the fridge and joined Manny on the other end of the couch.\n\n\"I hate game day crowds,\" I said, \"All the assholes shoving their way on, blocking the doors. Took me almost five minutes to get out of Gallery Place during one trip tonight. Probably had to make ten announcements to get the doors cleared.\"\n\n\"And that's why I don't drive evening rush hours.\"\n\n\"Yeah, well you can pick your shifts, Mister Senior Driver. I'm lucky I get Sundays off for bowling and lunch with my family.\"\n\n\"Quit your gripin'. You didn't miss a game last season.\"\n\n\"Good thing too. You guys couldn't have won first place without me.\"\n\nManny snorted. \"Don't get too big for your britches, girl.\"\n\nI twisted the cap off my beer and took a long swig, then smacked my lips. \"A-h-h-h-h, that's what's up.\"\n\nZimmerman smacked a long fly, lacking the oomph to get out of the stadium. The Phillies shagged it on the warning track, sending the game to the ninth.\n\n\"Hope the bullpen can hold it, they've been struggling the last few weeks,\" I said, while we watched the closer trotting in from the bullpen as the broadcast went to commercial.\n\n\"Want to go to Smitty's after?\"\n\nI considered the idea, while checking my phone to see if anyone had matched me on Tinder during the day. Nothing. It'd been a couple of weeks since anyone had shown any interest. And it had been a couple months since I'd gotten any action.\n\n\"Think I'm gonna pass tonight. I'm pretty tired, and I'm going over to help Abuela with her tamale order again tomorrow, like always.\"\n\n\"You're a good kid, Viv.\"\n\n\"Don't tell anyone.\"\n\n\"Secret's safe with me.\"\n\nThe Nats closed out the ninth, one-two-three. Manny stood, stretched, then reached for his wallet.\n\n\"Don't have too much fun,\" I said, \"Call me if you need a ride home.\"\n\n\"Smitty's is eight blocks away and I'm walking. How drunk would I have to be to need a ride?\"\n\nI chuckled. \"You've been drunker. Catch you tomorrow.\"\n\n\"Oh, I forgot, this came for you.\" Manny picked up a manila envelope off the table by the door and tossed it at me.\n\nI looked up in surprise. \"I never get mail.\"\n\n\"First time for everything. Night, Viv.\" With that, Manny slipped out and shut the door behind him.\n\nI looked at the return address on the thick envelope.\n\n\"NOVA? What the fuck?\" I muttered. I tore it open and dumped out the contents. There was a course catalog for the fall semester and some forms. There was also a letter.\n\nDear Ms. Esparza,\n\nCongratulations on being admitted to Northern Virginia Community College's Associate Degree in Engineering program. Class enrollment for the fall semester begins July 31st, with the final deadline for class selection on September 3rd. You should make an appointment with a scholastic advisor to discuss degree requirements at your earliest convenience.\n\nAll financial aid forms must be returned to the Registrar's Office no later than August 7th.\n\nWe look forward to your attending classes with us beginning September 10th.\n\n\"Is this a joke?\" I asked the empty apartment. I'd never submitted my application online. As far as I knew they didn't even have my address. I flipped through the catalog. There were hundreds of classes listed.\n\n \n\nWhere the fuck would you even start?\n\nI sat bewildered for a moment, then turned off the TV, scooped up all the forms and stuffed them back into the envelope and carried it into my bedroom. As I tossed it onto my dresser I caught myself in the mirror hanging on the wall above it. The crack across it split my face into two uneven halves.\n\n\"Your dumb ass ain't ready for college.\"\n\nThe next morning, I took the bus to Lorton, getting off at the Hispanic grocery to get a load for Abuela's fridge, then lugged the bags the four blocks to her apartment. For once I beat Diego there.\n\n\"Ola, Abuela.\"\n\n\"Buenos d\u00edas, cari\u00f1o. Tengo el desayuno listo.\"\n\n\"Huele bien. Chilaquiles?\"\n\n\"Si, el caf\u00e9 estar\u00e1 listo pronto.\"\n\n\"Sounds yummy. I'll get to work until it's ready.\"\n\nI sat down at the table behind a stack of dried corn husks and got to work after she brought over the giant bowls of masa and carnitas. I'd rolled four dozen when Diego showed up. He walked in with a yawn.\n\n\"Hey sleepyhead, I never beat you here. Big Saturday?\"\n\n\"I took Virginia to the Nats game last night, then we hung out at The Big Stick for a while. Got home late.\"\n\n\"O-o-o-h, fancy! Look who's a high-roller.\"\n\nHe grinned. \"She wanted to do something special for our five-month anniversary.\"\n\n\"And you took her to a baseball game?\"\n\n\"Hey, it was her idea!\" he said defensively.\n\n\"Really? She sounds like a keeper then. You should ask her to marry you.\"\n\n\"That's not beyond the realm of possibility,\" he said with a grin.\n\n\"Wow! Since you're getting that serious, I have a question. Are you sure her parents actually like her? Who lives in Virginia and names their kid Virginia?\"\n\n\"It was her grandmother's name, don't hate. What were you up to last night?\"\n\n\"Drove my train until nine, then came home in time to watch the last five outs of the game you were at on television. That's about it.\"\n\n\"Did you... get any interesting mail this week?\" he asked with a sly grin.\n\nI fumbled a half-wrapped tamale all over the table.\n\n\"Fuck!\"\n\n\"\u00a1Lenguaje, querido!\" Abuela said from the stove.\n\n\"Sorry Abuela! Dude, was that you? How did... what...\"\n\n\"I was tired of waiting for you to get off your ass to get your associate's degree so I did some of the work for you.\"\n\n\"But how... I mean how did you even\u2014\"\n\n\"Wasn't hard. Abuela had your high school transcripts and social security number.\"\n\nI glared at Abuela, who was focused on the stove, pretending she wasn't listening to us.\n\n\"You never took the SAT, but I reached out to Mr. Aguilar at South County. He's still teaching there, by the way, he must be like a hundred. Anyway, he wrote a nice letter of recommendation for you. He said you were one of the most naturally gifted math students he's had, even though you never would apply yourself. He said that part to me, not in the letter.\"\n\nI huffed a breath of frustration. \"But how did you even know that I got it?\"\n\n\"I used my email address when I was signing you up and I got a notification that your enrollment packet was delivered this week. You should probably change the email address in your contact info when you enroll.\n\n\"Jesus Christ, dude!\"\n\n\"\u00a1Vivian! \u00a1No tomar\u00e1s el nombre del se\u00f1or en vano en mi casa!\" Abuela said, crossing herself.\n\n\"Lo siento,\" I said again. \"Diego, you had no right to do that without asking me.\"\n\n\"I'm tired of listening to you gripe every week about your job, and how you're never going to get promoted, and you wish they'd let you in the apprentice program without a degree.\" He almost sounded angry. \"You have a chance to change things. So, do it.\"\n\n\"But\u2014\"\n\n\"But nothing. If you don't want to do it, then don't enroll, no one's making you. But if you don't do it, then I don't want to hear you complaining about your job anymore. You make decent money. It's a steady paycheck with good insurance. If you want to make a change, then make it happen. Or don't.\"\n\nI stared at Diego while he continued to wrap tamales.\n\nDammit.\n\nDecisions were so much easier when you didn't actually have one.\n\n~~ Judiciary Square, Washington DC, WMATA Headquarters, August ~~\n\n\"...and you've got an almost perfect on-time record, you we're only late once last year. You do well at maintaining pace through the stations. No safety violations in the last calendar year. Your training is up-to-date, except you're three hours short of elective safety CEUs. You have until the end of the year to get those in.\"\n\nMy manager, Gail, was tapping at her keyboard as she looked over the notes for my annual performance review.\n\n\"I'll probably get those next month. There's that seminar with the Department of Transportation.\"\n\n\"Basically, you're a meets-plus, same as last year. You're in the top twenty percent of my drivers. You'll get the standard C.O.L. bump the Union negotiated plus a two percent merit increase, starting January first.\"\n\n\"Am I getting bumped up to senior driver?\"\n\n\"Sorry, with attrition rates the way they are currently, it'll probably be at least a few more years before you get that.\"\n\n\"Okay.\" My voice sounded small to me.\n\n\"I really am sorry. I know you want to move up, but seniority takes time.\"\n\n\"Okay... What about...\"\n\n\"What about what?\"\n\n\"Sorry, but what about... Is there any chance of applying to the engineering apprentice program? I heard there were a few spots open they haven't filled.\"\n\n\"Viv... We've talked about this. You need at least an associate's degree. They don't make exceptions, and even if they wanted to, that's not my department. Not my call to make.\"\n\n\"Okay, fair I guess.\"\n\n\"Alright, so unless you have any other questions, you can sign your eval and we're done.\"\n\n\"Sure.\" I picked up the form and scanned it to make sure that everything we'd talked about was what was printed on the page. I scrawled my signature on the bottom.\n\n\"You're a good driver, Viv. You had a good year.\"\n\n\"Thanks.\" I scratched my head. Dammit. I'd fucked around ignoring this decision for a month now. Guess I should bite the bullet. \"So, uh, Gail, I wondered... If I wanted to put in some new schedule requests would you be okay with that?\"\n\n\"I'll see what I can do. What did you have in mind.\"\n\n\"I, uh... I got accepted into Northern Virginia Community College's engineering program. I've been on the fence about it, but maybe it's time I gave it a shot.\"\n\n\"Viv, that's great! Of course, we can work that out! How many classes do you want to take?\"\n\n\"I'm not sure. I think maybe just a couple at first to see if it's for me. Maybe Tuesdays and Thursdays? I'd start the second week of September.\"\n\nGail pulled up my schedule and looked it over. \"We can make that work. Hmm, looks like you have Sundays blocked off. Can you give that up?\"\n\n\"That's my bowling night, and I help my grandmother in the mornings with her business.\"\n\n\"Well, I can probably get you on the early shift or the late shift on Sundays. But something's gotta budge to get you the two days off during the week. Unless you want to cut your hours back to part time.\"\n\nI chewed my thumbnail, thinking while Gail waited patiently.\n\n\"I guess... I guess I'll take the Sunday late shift.\" There goes my bowling night.\n\n\"Okay, I'll put that in and make sure you get off those days starting next month. Let me know if your class schedule is different from what you expect. And don't forget to talk to H.R. about your tuition reimbursement. The union contract is pretty generous for that. It'll probably cover your entire cost, especially for just two classes.\"\n\n\"Thanks. I for sure wouldn't be able to try this if Metro wasn't paying for it.\"\n\n~~ NOVA Community College, Alexandria Campus, September ~~\n\n\"Shit,\" I muttered, shaking coffee off my hand. While juggling a printed map of the campus, my phone with my class schedule and room number on it, and a Starbucks cup, I'd spilled my latte, staining my map. I stuffed it in a garbage can at the building entrance. I didn't really need it now anyways.\n\nWhen I made the decision to enroll after my annual review, it was less than ten days before the semester started. I was able to get into the two required freshman orientation classes for my major, College Success Skills and Orientation to Engineering, and grabbed the final open spot in Calculus I. Since the freshman classes were one hour each, in addition to the four-hour calc class, I decided to try and knock out one of my electives as well, for a total of nine hours.\n\nThe freshmen req classes had been difficult to stay awake through but had at least filled my morning. My advisor had told me they were basically show up and you pass situations, and I could see he wasn't kidding. After lunch (one of Manny's sandwiches which he'd packed for my first day of school like a proud parent) I made my way from the Bisdorf Building across the parking lot to the Engineering Building for calculus. The book for the calc class was intimidating, twice as thick as the book I used for calc in high school ten years ago. And it cost two hundred freakin' dollars. I went in feeling scared as hell. To my surprise, though, the math came right back to me, and by the end of the class I felt like this might be doable after all.\n\nI had to kill a couple hours until my last class of the day, which was an evening section. I'd ordered a latte from the bookshop and wandered around looking at books and fancy t-shirts, hats and pullovers for those who wanted to show their school spirit. Not really my thing, but different strokes. Finally bored of window shopping in a bookstore, of all places, I'd ordered a second latte to keep me awake through class and headed back to Bisdorf to my assigned room for my elective and arrived twenty minutes before the class started.\n\nRace Relations in Modern American History wasn't really something I wanted to take. Hearing about the history of racism for a semester sounded like a recipe for chronic depression to me. Unfortunately, it was the only class that met the requirements for a humanities/fine arts elective that was: at the Alexandria campus, on Tuesdays and Thursdays, didn't conflict with my other classes, and was still open when I enrolled three days before the deadline.\n\nThe classroom was the same room I'd had College Success Skills in earlier in the day, a mini-amphitheater, with each of the five rows of seats tiered down a foot lower than the one behind it, offering everyone a clear view of the small podium and combination whiteboard and projector screen. I headed straight for the back row. My strategy was to try and avoid all my professors' attention by sitting as far from the front as possible. There were only three other students in the room when I got there, and only one sitting in the back row in the aisle seat.\n\n\"Hey,\" I greeted her with a nod as I eased past her and sat down a couple seats down the row from her.\n\n\"Hello.\" She looked up, acknowledging me, then went back to scribbling on the legal pad on her lap. I checked her out from the corner of my eye. I'd sort of decided that I wasn't going to troll for dates at school, but she was really pretty. She gave me the vibe of someone with a fancy desk job. Unlike most girls I normally dated. Or slept with.\n\nThe second group had gotten a lot bigger than the first group in recent years.\n\nShe was African-American, about the same age as me, with fairly light skin, a heart shaped face and round cheeks, and her dark hazel eyes (or light brown, kinda depended on how the light caught them) were full of humor behind her black-framed, square glasses. Like a sexy librarian. She wore her bush of thick, curly hair up over her head, gathered in a colorful head-wrap, and her smart blazer and dress shirt gave the impression of a professional woman. I wondered what she was doing in a freshman class. On reflection, she probably wasn't someone I could pick up anyway. She didn't look like a one-night stand girl. Besides, if I managed to get lucky then I'd be stuck in class with her all semester. And I knew how dating went when it came to, well, me. A woman like this was out of my weight class anyway. Dating Addison had shown me that.\n\nWhen I showed up at campus this morning I'd been assuming that everyone in freshman classes would be eighteen or nineteen years old. Surprisingly, it had turned out that there were students of all ages, some a lot older than me, even. I guess that the difference between a community college versus some fancy school. Still, there were kids in every class. They all seemed to sit in the front row, like little puppies, anxious to please the teachers.\n\n\"So, you hiding in the back from the little eager-beavers who sit up front to suck up to the teacher too?\" I asked her.\n\n\"Not exactly,\" she said with a wry smile, \"It's a good place to scope out the class before it starts. I like to see who's here. Take a guess at who's going to participate and who's going to stay in their shell.\"\n\n\"Huh. Well, I'll save you a guess, I hope I don't get called on the entire semester.\"\n\n\"First time in college?\"\n\n\"Shit, is it that obvious? I feel like a fish out of water here.\"\n\n\"Well, it's the same as anything else. If something makes you uncomfortable, the only way to get over it is dive in and do it until it becomes comfortable.\"\n\n\"I guess.\" I looked around the room as it slowly filled up with students.\n\n\"What's your goal for the class? I find that's always the best thing to focus on.\"\n\n\"I need an associate's degree to be able to apply for an apprenticeship in the engineering department at work. This was the only elective open for me this semester. I applied late.\"\n\n\"Where's work?\" She stopped writing and turned her attention completely to me now.\n\n\"I'm a Metro driver.\"\n\n\"Like the buses, or\u2014?\"\n\n\"No, the subway trains. Not the most glamorous thing, but\u2014\"\n\n\"So, you're responsible for moving thousands of people to and from work every day, many of whom do the work of keeping our country running. Do you think that your work is any less intrinsically valuable than the work they do? Or than the people who serve food, or clean the bathrooms or guard the doors in the Capitol complex? Without you, they don't get to work to do their jobs either. And it's a job that requires a lot of responsibility and trust, right?\"\n\nI blinked. Certainly not the reaction I'd come to expect when sharing my job with someone.\n\n\"I suppose it's, uh... important I guess. When you put it that way?\"\n\n\"And I imagine it took a lot of training, learning technical and safety things.\"\n\n\"That's for sure,\" I said, thinking of the stacks of manuals I'd had to learn. \"I'm Vivian, by the way. Call me Viv.\"",
        "\"It's really nice to meet you. I'm Jane.\"\n\n\"Nice to know someone else in class. Do you think the teacher is going to be a white dude who mansplains race to us?\" All three of my professors so far had been just that. Male and white.\n\n\"Lord, that would be terrible!\" she said. Her laugh was rich and full of life. I hated that I was being drawn to someone so clearly out of my league.\n\n\"So, what do you do? Are you like me? Stuck in your job, trying to do something to get ahead?\"\n\nShe laughed again. \"No, I like to think of myself as a professional student. Always learning.\"\n\n\"Huh. That sounds like a nightmare.\"\n\n\"You don't like school?\"\n\n\"Well, I hated high school, that's for sure. I'm a little intimidated by the whole college thing, but calculus went pretty well for the first day, so that made me feel a little more confident.\"\n\n\"College is nothing like high school, when done right, Vivian. You get out of it what you put into it. I think challenging yourself is the point of college, more so than getting a piece of paper saying you went to college. It's always rewarding when you rise to meet a challenge you've put in front of yourself.\"\n\nI did a quick double take when she used my full name. No one ever called me that. Except Abuela, when she was mad at me. It sounded weird.\n\n\"We'll see, I guess.\" I looked at my phone. \"Six o'clock. Does this college do that 'five-minute rule' thing where you can leave when the professor doesn't show up?\"\n\n\"Probably, but this professor is always on time. I've enjoyed talking to you, Vivian.\"\n\n\"What? Where are you...\"\n\nShe picked up her bag, stood and walked down the steps to the front of the room, leaving me with my mouth hanging open. She set her legal pad on the podium, stuffed her bag underneath it then faced the class, who fell silent.\n\n\"Good evening, welcome to Race Relations in Modern American History. I'm Dr. Jane May and I'll be your instructor. Just a little about myself to start, I got my undergraduate degree from Howard University in African-American studies. I completed my PhD at Georgetown, studying critical race theory and how it ties to the progress of civil rights in America, and I'm currently back at Howard working on a post-doc project. This is my second semester teaching here at NOVA as an adjunct professor.\"\n\nAs she spoke, I slid lower and lower in my seat until I could barely see her headwrap over the top of the guy's head in front of me. Holy shit, I'd stepped in it. I couldn't believe I'd been sitting here talking to her like she was just another twenty-something trying to climb the ladder.\n\nA freaking PhD! I can't believe I was considering trying to pick her up! Christ, what she must think of me right now. I've totally fucked myself.\n\n\"Make no mistake, the subject of race relations is threaded throughout American history for over four hundred years. But in this particular class, we'll be covering the sixties civil rights era through to current events. If you haven't read the syllabus yet, please do so before our next class, as it contains the due dates and grading rubrics for your two papers, which are thirty-five and fifty percent of your grade, respectively. I will assign each of you a topic for your first paper. By the middle of the semester you'll pick a topic for your final paper, which will need to be approved by me in advance. You'll also present your final paper to the class the last week of the semester, and that will be part of your paper's grade. I like my classes to be full of lively discussion, so class participation is fifteen percent of your grade.\"\n\nFuck.\n\n\"I like to start by going around the room and having everyone introduce themselves and briefly tell us what you're hoping to get out of my course. Let's start over here.\" She walked over to the young woman on the left of the front row. \"You first!\"\n\n\"Hi everyone, I'm Cindy Lewis, this is my third semester, and I'm...\"\n\nI tuned her out, lost in my own embarrassment.\n\nMy first fucking day, the class hadn't even started and I'd shoved my foot in my mouth. Christ. She'd probably nail me on class participation, even if I did participate, because she thought I was an underachieving dumbass. She probably thought I didn't want to take her class but had no choice because I'd fucked around until the last minute. She'd probably make an example out of me. I sat there, my mind spinning in circles.\n\nI opened my laptop to pretend to take notes, and pulled up the NOVA web page to check the drop policies. Fortunately, it looked like I could drop this class until the end of week three with only a small administrative fee. My tuition would be refunded. Maybe I should just drop it right now? I could leave during the break. I didn't like the idea of dropping it while I was in the class, so I'd guess I'd wait until I was home tonight or maybe tomorrow, that way\u2014\n\nI realized the room was silent. I looked up to see Jane... Dr. May... looking at me with an expectant grin on her face.\n\n\"Vivian? Care to introduce yourself?\"\n\n\"Yeah, okay. I'm, uh, Vivian Esparza. This is my first semester.\"\n\n\"And...? What are you hoping to get out of the course?\"\n\n\"Uh, I guess I'm just hoping to get my elective covered so I can get my engineering degree.\"\n\n\"Refreshingly honest!\" She laughed again. Surprisingly, I didn't detect any hint of irritation in it. \"Okay, let's dive in. Today we'll just be discussing some concepts. We won't start getting into history and the sixties until the next session on Thursday.\"\n\nShe started her lecture, and despite myself, I found myself drawn in. She was a really good speaker, and kept us engaged, asking questions and calling on specific people for their thoughts from time to time. I was surprised when an hour had passed seemingly in no time at all. When she called for a ten-minute break, I got up and scooted out of the room as fast as I could.\n\nA group of six or seven students trailed after me down the hall towards the vending machines. I skipped buying a soda and filled my metal thermos bottle with water from the drinking fountain.\n\nIt was interesting watching the different reactions as they discussed the class. The two black students of the group seemed very enthusiastic, chatting with each other about Dr. May. The rest were white and seemed interested, but less enthusiastic.\n\nThe Cindy girl from the front row seemed a little ticked off. \"Is the whole semester just going to be talking about how awful white people are?\"\n\n\"I didn't get that at all. I mean, you kind of have to talk about oppression when you talk about race in history, don't you?\" said a white guy who'd introduced himself as Jerrod? Jeremy. Yeah, Jeremy. \"Just because white people are historically the root cause of oppression in the U.S. doesn't mean when she talks about it that she's talking about you specifically. Or every white person for that matter.\"\n\n\"But all that stuff about white privilege, that's crap! I don't have more privilege\" \u2014she made finger quotes while saying it\u2014 \"than someone just because they're black and I'm white. My dad works at a car dealership. He's not some rich guy.\"\n\n\"I think you missed her point,\" said one of the white girls, who name I'd missed while researching how to get out of the class.\n\n\"And she's black, and she has a PhD and teaches college! How is she less privileged than my parents or me?\"\n\n\"That's not what privilege means,\" said another girl. Neither of the black students had responded to Cindy, but they both gave each other looks of resignation. I caught one of their eyes, Sam I think his name was, then rolled my eyes at Cindy. He gave me a curt nod then went back to listening to Cindy spout off.\n\n\"What about all that stuff about institutional racism? That stuff's been illegal for years. You can't deny someone a mortgage because they're black or refuse to hire someone for a job because they're black, not anymore.\"\n\nWhat a piece of work. She was going to have fun in this class for sure. It was almost too bad I wouldn't be around to see it.\n\nAfter class resumed, I kept an eye on Cindy for any more fireworks. So far, I'd been lucky that Dr. May hadn't called on me. She seemed to be spreading the love around the whole class, but I was hopeful that she wouldn't get to me today. Then I could bounce and not worry about it again.\n\nCindy seemed to be all about pushing back at Dr. May in the second half of class.\n\n\"How am I not disadvantaged?\" she was saying, \"Just because I'm white, I'm still a woman. Women are paid less, and we have our careers set back or curtailed when we choose to have children. Why don't we talk about men's privilege instead of white privilege?\"\n\nI couldn't help myself, I let out a snort of amusement and shook my head.\n\n\"Miss Esparza?\"\n\nOops. \"Sorry, nothing.\"\n\n\"No, share with the class please. What's your reaction to what Miss Lewis said?\"\n\nDammit. \"Well, uh, I guess I'd say that it's true women get discriminated against more compared to men. But a white woman generally has a different place in society than a black or Latino woman.\"\n\n\"How so?\" Jane was watching me too intently for my comfort. So were several other students. I hated this attention.\n\n\"Well, I work in a pretty male dominated job, so I get harassed sometimes and have to deal with locker room talk and I'm expected to just roll with it. But because I'm Latina, and gay I get extra layers on top of that.\" My sexuality isn't something I was shy about shoving in people's faces. At least as long as Abuela wasn't around.\n\n\"Can you develop that some more?\" The entire class's attention was focused on me now.\n\nJesus, this is exactly what I didn't want.\n\n\"Uh... okay, if Cindy Lewis, Dr. Jane May and Vivian Esparza,\" I said, pointing in turn to each of us, \"applied for a mortgage, I'm probably the most likely to get discriminated against, just because of my name. Dr. May, you'd probably have the most advantage because of your title if you applied online, but if you showed up in person to apply, then you could have a race problem and be the most disadvantaged. Likewise, if the three of us were standing on a street corner and a racist cop rolled up on us, you're more likely to catch his beef just because of the color of your skin. If they don't know my last name, sometimes people think I'm white. Also, if the three of us were out somewhere with dates, and the two of you had your boyfriends or husbands and I had a girlfriend, I'm more likely to get stares or snide comments because I'm gay. And I imagine I'm the only one of the three of us who's been told to go back to my country more than once, even though I was born and raised in Virginia.\"\n\nDr. May smiled. \"Those are astute observations Miss Esparza, although I've been told to go back to Africa a handful of times myself.\" My face heated up in embarrassment. Of course, she had, I should have assumed that. She turned back to the whiteboard, picking up a dry-erase marker. \"Miss Esparza has just introduced us to another one of the concepts we'll be talking about this semester.\"\n\nShe wrote a word on the board below the other bullet points she'd already listed.\n\nIntersectionality\n\n\"Intersectionality is the interconnected nature of social categorizations. Race, gender, class, sexuality, nationality and other categories, as they apply to a given individual or group, which can create overlapping and interdependent systems of discrimination or disadvantage.\"\n\nFuck, she has an actual word for someone being racist or homophobe? Why not just call them that? I'm so in over my head, she has to think I'm a total idiot. I bet her calling me \"astute\" is her polite way of being condescending.\n\nDr. May didn't call on me again for the rest of the class. When she was wrapping up, I was surprised to find I'd taken several pages of notes on my laptop, for all the use they'd be to me.\n\n\"Today was a good discussion,\" Dr. May was saying, \"For Thursday make sure you've read the first three chapters of the Ijeoma Oluo book and the second and fifth essays in Baldwin's Notes of a Native Son. I'll be in this room for thirty minutes before every class for office hours. If you need to meet outside of office hours, email me and we can set up a Zoom call. Thank you! Safe drive home!\"\n\nSome of the students shuffled up to the front of the room to ask Dr. May questions about the syllabus. I stuffed my laptop into my backpack and headed outside to the bus stop. It still irked me that it was faster to take the 7A bus north to the Pentagon City Metro station and then go south on the Blue Line to get home, than it was to catch a bus south to Van Dorn. At least the 7A came every fifteen minutes, so I wouldn't have to wait very long.\n\nIt was probably good I was going to drop this class. By the end of the semester, it would be pitch dark and freezing cold waiting for the bus. Maybe next semester I could go to all morning classes and shift my work schedule to nights. Then maybe I could get my spot on my bowling team back.\n\nI frowned at the sunset. Manny, Ra\u00fal and Oscar had already found someone to take my spot for the next season. Manny said all the right things about how I was a better bowler than the new guy was, and they were sad to lose me, but it still hurt being replaced so quickly. The image of Addison, towing along her doctor chick by the hand in her wheelchair flashed through my mind.\n\n\"Fuck,\" I said to the bus stop sign, kicking it with the toe of my boot.\n\nThe signpost vibrated resentfully, as if to say Hey chica, not my fault you weren't enough for Addie.\n\nI cheated on her. She didn't leave me, I thought. I should stop telling myself I wasn't enough for her when I was the one who pushed her away.\n\nIt's not as if she wouldn't have broken up with you later anyway if you hadn't cheated on her, I argued with myself.\n\nGood point, self. You don't have to be a dick about it, though.\n\n~~ Bowl America, Springfield, VA ~~\n\nMy ball spun into the pocket, exploding the pins with a satisfying crash. I walked back to the counter above the ball racks behind my lane and helped myself to a couple of French fries. I looked over the papers I'd laid out next to the basket of food on the counter as I chewed, then finished a couple more of my math problems that were due next Tuesday.\n\nWhile I was out of the bowling league, at least until January, I didn't want to lose my skills and come back with a ton of rust, so I'd decided at least every week or two I'd go bowl a few games. Either by myself, or if I could, with Manny so I'd have some competition.\n\nThis week, I'd come on a Friday morning, right as they'd opened the doors. I was working two to ten tonight, so I'd have to carry my bowling bag and backpack full of homework all day on the train. I didn't have any other time this week that was convenient, so Friday morning it was.\n\nIt was kind of nice, actually, being the only person bowling in the entire alley. The attendant had even asked what kind of music I wanted on the sound system. I normally wouldn't ask for Latin music when there were other people around, but since I was the only customer and I didn't usually bowl here, I'd asked if he could get the Viva! channel on SiriusXM. So, there I was, doing homework, having a burger and fries for breakfast and bowling to Shakira's Mi Enamore. Her voice echoed around the alley as she sang to me about falling in love.\n\n\u00a1Me ena-na-namo, Mira qu\u00e9 cosa bonita, Qu\u00e9 boca m\u00e1s redondita!\n\nI pretended the next line about a guy with a handsome beard wasn't in the song. I ate another fry, wiped my hands on a napkin and went back to the lane. Picking up my ball, I held it over my head, both hands in the air as I danced back to my mark, my hips shaking to the music.\n\n\u00a1Un mojito, dos mojitos, Mira que ojitos bonitos, me gusta esa barbita!\n\n\"I could use a few mojitos and a chick with some pretty eyes myself,\" I said to my ball as I held it up in front of my face. I looked up at my score on the screen overhead. Huh, five strikes through five frames. I turned and looked around the alley. I was still the lone bowler and the attendant was nowhere to be seen.\n\nWell, no point in wasting a perfect game if there's no one around to see it, I thought.\n\nI adjusted my stance, gave my butt a little Shakira-shake along to the music, then deliberately threw my ball through the head pin, resulting in a four-seven-ten split. Always could use more practice on game situations. I really wanted to spring for a slick plastic ball for picking up spares, but then I'd have to buy a new bag too, and it'd be twice as heavy when I had to carry it to work.\n\nI went back to the counter and did another math problem while my ball rolled back down the return to me. Since I'd dropped my history class when I'd gotten home three days ago, my stress level over school felt like it was about half of what it was. Yesterday was my second day at NOVA and I was now pretty sure I would have no problems making it through the semester. At least this semester. The two freshmen basic classes I could pass in my sleep and I was doing just fine in the calculus class so far. I just needed to stay on top of the homework.\n\nI pulled up my work schedule on my phone. Early shift tomorrow, then late shift on Sunday.\n\nMaybe I'll hit a dance club tomorrow night, have a few mojitos and try to pick up someone. Been so long since I've been out. I'll have to try and not drink too much, though. I hate being hungover when I go to Abuela's.\n\nI lined up my shot. As I strode forward, my phone started ringing on the counter, startling me. My ball went into the left gutter four feet short of the pins.\n\n\"Fuck,\" I said, without much feeling. Since the alley wasn't crowded with dozens of balls hitting pins and people yelling, I'd had no reason to expect a distraction and I hadn't really focused. I walked back to the counter and looked at my phone. It was a number I didn't recognize. I was about fifty-fifty on whether I'd answer unknown numbers most days. It was almost always a spam call. Eh, what the hell. I picked it up.\n\n\"Yello?\"\n\n\"Is this Vivian?\"\n\n\"Yes, who's this?\"\n\n\"Vivian, it's Jane May. I'm not interrupting you while you're driving a subway train, am I?\"\n\n\"Uh, no, I always turn my phone off while I'm driving.\" What the fuck? Why was Dr. May calling me? \"How did you get my number?\" I blurted, then immediately regretted saying something so dumb.\n\n\"Your cell number was in your student contact info that I get for everyone in the class. I hope that's okay.\"\n\n\"Uh... Sure, I mean... yeah, it's fine. What can I do for you?\"\n\n\"I was calling because I was disappointed to learn you dropped my class. Was it something I said?\"\n\n\"No! No, of course not... I just... didn't think I could handle the course load for my first semester. Something had to give.\"\n\n\"Hmm. I'm sorry to hear that. My class was the one that didn't make the cut?\" Her voice was just as it had been during her lecture. Full of intelligence, with an undercurrent of humor.\n\n\"Yeah, I'm taking calculus and I'm much more comfortable with the subject.\"\n\n\"I understand. I want you to know I really thought your comments leading us into the discussion about intersectionality were insightful. I think your perspective would have been a valuable addition to the class.\"\n\nReally? \"Uh, thanks. I mean, thank you.\"\n\n\"You're very welcome. Just so you know, you can rejoin the class anytime through the third week without a grading penalty. I've asked the registrar to hold your spot open so my class doesn't fill back up before then. I understand your decision, people have to decide what they can handle for themselves, but I hope you'll reconsider.\"",
        "\"I, uh, I'll... think about it.\"\n\n\"I hope so. If you choose not to come back, it was very nice to have met you, Vivian. And good luck pursuing your engineering degree.\"\n\n\"Thank... thank you.\"\n\n\"Hope to see you again next week!\" She hung up.\n\nI lowered my phone from my ear and stared at it.\n\n\"Was that a fucking joke?\" I looked around at the empty alley to make sure no one had listening.\n\nShe couldn't have been serious. No way I was going back to that class.\n\nMala came over the speakers as I walked back to the lane to pick up my ball and I sang along with Becky G as I danced back to my mark.\n\n\u00a1Yo no soy mala, mala! \u00a1No soy tan mala, mala!\n\n\u00a1Yo no soy mala, mala! \u00a1Cambia esa cara!\n\n~~ The Hideout, Springfield, VA ~~\n\n\"Gimme a mojito!\" I yelled over the noise of the crowd and the thumping dance music.\n\nThe bartender nodded and moved off to make my drink while I turned back to the middle of the room where a hundred or more people were dancing.\n\nWith my first week of school in the rear view, I was feelin' high. Calculus seemed like I was going to have no problems with it, and I decided I'd earned a celebration. Unfortunately, Manny was in bed with a cold and I didn't want to go solo to Smitty's, our dive bar. The few other friends I felt comfortable asking to go out (a list that was pretty much limited to my old roommates, who weren't really my biggest fans anymore) made excuses to not come.\n\nWhich was fine, I never felt I needed a wingman. And since I got to pick where I was going, I'd decided on hitting a dance club I hadn't been to in a while. I'd either find someone who was interested in me, or I'd get a workout on the dance floor. Either way, a good night in my book.\n\nI'd gotten more dolled up than I had in a long time, touching up the shaved sides and back of my head with my clippers, making the stubble almost skin tight then gelling the top straight up. I'd almost gone with the zero guard on the sides, but then I thought that might be ten percent too butch, so the number one guard would do. Staring in the mirror, I'd carefully used my clippers and a comb to make sure the top was flat and even.\n\nI'd paused a moment, regarding the scar on my forehead from my train accident three years before. I'd been sitting in the tunnel during rush hour, waiting for the train ahead of me to clear the station so I could pull in, when the train behind me had run through a faulty sensor and rear-ended me, throwing me headfirst into the control console. Starting just above my right eyebrow, my scar went straight up and ended at my hairline. I'd turned my head back and forth in the light of the bathroom mirror. It was faint, you had to really look close to notice it. I guess I had Addie's doctor chick to thank for that; she'd done a really good job sewing up the huge gash.\n\nI thought back to that moment, hazy as the memory was. What dumb fucking luck I got taken to the same E.R. where the woman who Addie was really in love with worked. That I'd get her for my doctor. That she'd be there when Addie came to get me. That I'd have to see how Addie had looked at her... right in front of me.\n\nI should have broken it off with Addison that night. It had been so obvious she was into the doctor chick more than me. I couldn't blame her. She was a doctor chick. I was a high-school grad. Barely. Addison graduated from law school. She belonged with someone smart enough to be a doctor. Not... me.\n\nAs much as I'd wished otherwise.\n\nI shook myself and tried to focus on the fact I was out to have a good time tonight. I was working my A-game look. A tight tank-top showed off my arms, with my full sleeve tattoo, and my thick leather wrist band I liked to wear when clubbing. I had on baggy jeans, my Doc Martens and added my heavy chrome wallet chain to complete the look.\n\nMy goal was to leave no doubt I was a lesbian. Any guy hitting on me tonight would have to be as clueless as they come.\n\nNot to say that wouldn't happen. Almost always did if I wasn't in a gay bar. Men.\n\nThe bartender came back and I left a ten on the counter then made my way towards the dance floor, sipping my drink and checking out the crowd. I saw a woman or two that I'd seen at other clubs, a few women who were probably gay, way more who were not. The gays ones looked like couples. Too bad.\n\nThere was one woman who caught my eye in particular, halfway around the dance floor, chatting with a group of people. Her short, dark hair was so uniformly black I was sure it was a dye job, especially with her pale white skin. She had only a tight leather vest for a top, jeans, and high tops. Hmmm, a possibility my gaydar told me.\n\nI couldn't tell if she was with anyone in the group. They were all talking and joking around, like they were in an episode of Friends. I hated that show. Maybe she'd separate out from her herd later. I'd have to keep an eye out for her.\n\nThe intro violin sample of Love Again came over the speakers, and I could feel my body start to vibrate with excitement. I knew it was time to hit the dance floor. I could troll for chicks to buy drinks all night, but right now I needed to move my body. I drained the last of my mojito, sucking an ice cube onto my mouth and crunching it between my teeth, then abandoned the highball glass on a standing table at the edge of the dance floor whose occupants were in the process of signing their credit card slip. They gave me the side-eye, but I paid them no mind. First rule of clubbing, never leave your drink unattended. If you set it down, you're done with it.\n\nI made my way through the outer edge of the crowd, who were being half-assed about their dancing, and pushed my way into the heart of the throng. As soon as I was ensconced in the safe anonymity of a mass of moving bodies, I let myself go, whirling around, my hips shaking to the beat, eyes half closed, mouthing the lyrics to myself.\n\nDance music in general was my jam, but this song always got me going. Maybe it was Dua Lipa's rich voice, one I'd love to hear whispering in my ear. Maybe it was that the lyrics were wish fulfillment.\n\nNever have I ever met somebody like you.\n\nUsed to be afraid of love and what it might do\n\nBut -goddamn- you got me in love again.\n\nThe DJ smoothly rolled into Opps, and I never stopped my groove, just altering my steps to stay with Kendrick's beat, and for the next half hour I danced. I danced by myself, then flowed into a group dance with a cluster of people who were grooving together, splitting off to dance alone again, then with a guy who made his way up to me. I didn't have a problem dancing with a dude, as long as he didn't get the wrong idea about what was happening.\n\nThis one did, of course, and on the second song he moved in to grind on me. I performed a move I'd practiced countless times, whirling my body in place, my arms over my head, my hips rocking as they circled. This had the effect of whipping my wallet chain out from my body and whacking him solidly in the dick. He grabbed his crotch and bent over halfway while I kept dancing, pretending not to notice what I'd done. By the time I'd made my third turn he had moved off towards the edge of the dance floor, holding himself, and I found myself dancing with an extremely gay black guy who was the only one I'd seen tonight with the moves to hang with me, then back to dancing solo in the middle of the crowd after his boyfriend cut in.\n\nI was thinking about taking a breather when I spun around and found myself face to face with vest girl, moving in to dance with me. I made room for her and she grinned at me as Timber came on, Ke$ha and Pitbull telling us we'd better move, we'd better dance. She moved in close, our bodies synching up like we'd danced together before. I held up my right hand, and she laced the fingers of her left in mine. I spun her, then pulled her back in, our knees sliding comfortably between each other's legs. As the song went on, I pulled her tighter and tighter to me.\n\nYou know how sometimes when you dance, you bump and stumble with your partner when you're too close? But then sometimes when it's just perfect, when the stars align, you could move together like you were background dancers for the latest hip-hop video and you'd practiced for hours.\n\nThis was like that.\n\nLet's make a night, you won't remember,\n\nI'll be the one, you won't forget.\n\nThe song ended and the DJ made his first misstep since I'd walked in the door, playing the B-52s. Ugh, white people dance music.\n\nShe stepped back a half step from me. Her cleavage was gleaming with a sheen of perspiration, and I knew I probably looked the same.\n\n\"Nice moves!\" She yelled over the music.\n\n\"I need a break. Can I buy you a drink?\" I hooked my thumb back towards the bar.\n\n\"Lead the way!\"\n\nThere was only one opening at the bar, barely big enough for one person. We both squeezed ourselves into it, her leather vest pressed up against me. I put my arm around her for balance. She smelled of lavender and sweat. Heavenly.\n\n\"Tito's and soda,\" she told the bartender. I ordered another mojito.\n\n\"I'm Viv,\" I said, shouting at a slightly reduced volume now that we were somewhat removed from the din of the dance floor.\n\n\"Lacy. I haven't seen you in here before.\"\n\n\"Haven't been here in a while.\"\n\n\"Well you've been going out somewhere, nobody moves like that without practice.\"\n\n\"All-natural talent.\"\n\n\"Right,\" she said with a grin.\n\n\"Where are you\u2014\" She stopped as the bartender arrived with our drinks. Grateful for the interruption, I lifted mine to hers. We touched glasses and drank.\n\nI always hated when someone started off asking where I was from. Some of the time they meant \"Are you from Northern Virginia?\" and sometimes they meant \"Are you from another country?\" I really didn't want to find out which one Lacy meant.\n\nI found out she was a hairdresser, which led to jokes about my haircut and her complimenting me after I said I'd done it myself. I told her I was a Metro driver, which she seemed to think was cool. We exchanged little touches as we talked and I could tell this was headed in a direction I'd like. I even started planning on maybe giving her my real phone number at the end of the night. That is, if she didn't take me home. Then I'd give it to her in the morning. Anyone who could dance like her was worth a second date.\n\nShe reached out and curled her pinkie around mine as she finished the last of her drink as the DJ started Sucker. I leaned in and spoke in her ear.\n\n\"I think we should hit the dance floor again.\" I brushed my lips across the top of her ear when I did. She shivered and nodded at me, grinning. As we stepped away from the bar, pinkies still intertwined, a beefy guy with red hair, wearing a pink polo shirt blocked our path.\n\n\"Lacy, we need to talk,\" he said. Not very friendly-like, either.\n\n\"How did you know I was here?\" Lacy seemed shocked.\n\n\"John texted me and said you were here with Mary and the gang. What are you doing with her?\" He pointed a finger at me.\n\n\"None of your fucking business, Keith! I broke up with you, remember? Or did that slut I caught you with suck your brain out through your dick?\"\n\nOh Christ, I thought, why do girls who want to hook up with me always seem to end up being bi with guy problems?\n\n\"There's nothing to talk about, so get out of our way. We're going to dance.\" She hooked her arm through mine. He didn't move and I felt distinctly uncomfortable being used as her cover.\n\n\"Baby, why can't we talk? You know she meant nothing, it was just a stupid mistake.\"\n\nJesus, could this guy be more of a stereotype? Maybe I can head this off.\n\n\"Listen dude, tonight's just not the night for you guys to talk. So, if you'd let us by, we're\u2014\"\n\n\"Shut up, bitch, this is between me and her, not you.\"\n\nI saw red, but only let a little grin show on my face.\n\n\"Excuse me?\" I said, dropping Lacy's arm and taking a half-step away from her to give myself room to move if I needed to.\n\n\"I said, fuck off. I don't need a dyke trying to mack on my girl.\"\n\nThe 'dyke' didn't really get to me the way I think he'd hoped. I referred to myself as that on occasion. But his ownership attitude over Lacy was pissing me off. Especially seeing her shrink away from him as he got more hostile.\n\n\"It sounds like you gave up rights to the 'my girl' thing when you couldn't keep it in your pants, pinche pendejo, now let us by.\"\n\nWhen my temper was riding high, I always seemed to channel what I remembered of my dad when he was angry, and I could hear the chicana, strong in my voice. I reached out, put my fingertips in his chest and gave him a light push to get him to move out of my way.\n\nHe reacted fast, shoving me hard in my chest with both hands and I fell back on my ass.\n\n\"Fuck you, spic, you give a whole new meaning to the term bean-eater.\"\n\nNo, you fucking didn't! I was back on my feet in a flash. I put all my weight behind the punch, trying to drive my fist through his face and felt the shock through my shoulder as I connected.\n\nIt didn't floor him like I'd hoped. He covered his face with one hand and yelled \"Fuck!\" Then, before I could react, his own fist was coming back at me.\n\nStars exploded in my vision and I went down hard. I tried to jump back to my feet again, but my arms and legs didn't want to listen to me. One eye didn't want to open either, but through the other I saw him being dog piled by several other patrons and heard people yelling for security.\n\nWell, this certainly wasn't how I'd hoped my night would go, I thought later as I stood in the parking lot next to a police cruiser, holding the bag of ice the bartender had so thoughtfully given me against my eye.\n\nLacy walked up to me. \"Hey, I told the cops it was all Keith's fault. He started it, shoved you to the floor.\"\n\n\"Thanks.\"\n\n\"After they talk to you, do you want to get out of here?\"\n\n\"You mean if they don't haul me in and I get to spend the night on a cement bed? Yeah, if that doesn't happen I definitely want to get out of here.\"\n\n\"That won't happen.\"\n\nI laughed mirthlessly. \"Yeah, right. They never arrest the Hispanic girl, we're presumed innocent until proven guilty.\"\n\nShe looked befuddled as to what to say. \"Uh, I mean... What I meant is would you like to come back to my place and\u2014\"\n\n\"No thanks, Lacy,\" I snapped, gesturing to my ice-pack covered eye, \"I obviously have enough drama going on without dating a woman with a psychotic ex-boyfriend.\"\n\nShe gave me a hurt look, then turned and walked away without saying anything else.\n\nI'd briefly considered the pros and cons of going back to her place and letting her have revenge sex with me, but my eye being swollen shut had really killed my mood. A grey-haired, white police officer ambled over to me.\n\n\"Name?\" he asked without preamble. I was sure this was going to go great.\n\n\"Vivian Esparza.\"\n\n\"Got any ID, Vivian?\"\n\nI pulled my wallet out by the chain, extracted my Virginia driver's license and handed it to him without comment. He walked back to his car to run me through his computer. A few minutes later he came back.\n\n\"Want to tell me your side of the story?\" He said as his partner, a huge black officer, probably fifteen years younger came over and stood a few steps behind him.\n\nI quickly told him more or less exactly what had happened, not evading the fact that I'd punched the guy, but not until after he'd shoved me to the ground.\n\n\"I see,\" he said, tapping my license on his palm and looking at me thoughtfully. I looked past him to see that Keith guy holding an ice pack to his own face. I took some satisfaction that while my eye was swollen shut, his Polo shirt was covered in blood that had streamed out of his nose after I'd flattened it. Pretty sure I could call this a win.\n\n\"So, our options here are you can each press charges against each other, in which case we'll take you both in. Or you can call it a night, and both get the hell out of here right now. The bar doesn't want to make a big stink of it, if you two don't either.\"\n\n\"Fine with me as long as he doesn't give me any shit.\"\n\n\"Are you driving?\"\n\n\"Walking.\"\n\n\"Okay, we'll call tonight a warning.\" I reached for my license, but he held it up away from me before I could grab it. \"One more thing Vivian. Mr. Broken Nose there said you were yelling Spanish at him during the fight. Do you have a green card to go with this?\"\n\n\"What?\" I almost yelled. I saw his partner grimace and take another step closer.\n\n\"You heard me. You illegal?\"\n\n\"Illegal?! I was born in fucking Woodbridge asshole, I'm a goddamn American!\"\n\n\"Take it easy, Vivian.\"\n\n\"Don't call me Vivian, you condescending prick! Did you ask him if he was undocumented?\" I pointed at the asshole I'd punched. I knew I was flirting with getting cuffed and stuffed, but all I could feel was white-hot rage.\n\nThe other officer put his hand on the white pig's elbow and spoke quietly in his ear. He turned his head slightly to listen without taking his eyes off me. He regarded me for a long, uncomfortable moment.\n\n\"Where do you work, Miss Esparza?\" the white officer asked me.\n\n\"Fuck, are you kidding me with this? I'm a train driver for Metro and if you think they don't use E-Verify, you're fucking nuts.\" I dug in my wallet again, pulled out my WMATA ID badge and held it up. \"Here! This good enough for you, officer?\"\n\nHe shined his flashlight on it, then on my face. I held up my hand to shield my eyes.\n\n\"Alright, Miss Esparza,\" he drawled, finally handing me my license. \"You should get out of here before we turn him loose. And the bar asks that you not come back.\"\n\n\"Fine by me!\"\n\nI shoved my wallet in my back pocket and stalked off into the night.\n\n~~ NOVA Community College, Alexandria Campus ~~\n\nThe room was already half-full of students when I walked in. I'd stood outside the building until it was almost time for class. Not because I was nervous this time. It was a really nice day, and I wanted to soak up the evening sunshine and enjoy the fresh air until the last minute before I had to go sit in a windowless room for a couple hours.\n\nShe was in the same aisle seat as last time, and I eased past her knees again to take my same seat in the back row.\n\n\"Hey Dr. May.\"\n\n\"Vivian! I'm so glad you see you again, I\u2014 Oh my goodness, what happened to your eye? Are you okay?\"\n\nYou couldn't miss my black eye. It wasn't swollen shut anymore, but there was still an ugly yellow and purple bruise the size of a goose egg around it.\n\n\"Just a little accident. It looks worse than it feels. Thanks for asking.\"\n\n\"I'm glad to hear that.\"\n\nA couple of students stopped to ask her questions about various subjects and I sat in silence while the room filled up. Right before class was about to start, she turned back to me.\n\n\"If you don't mind me asking, what changed your mind about dropping my class?\"\n\nI grinned, then sucked in a breath as the motion caused a stab of pain in my eye socket.\n\n\"Intersectionality.\"\n\nTo Be Continued...\n\nThank you for reading this chapter friend. Please leave me a comment and let me know what you thought. Feedback from my readers is always appreciated and makes great fuel for writing. If you are interested in the music in this story check my bio page for more information.\n\n \n\nSpecial thanks go out to my beta readers, ArmyGal33, Bramblethorn, GinnyPPC and especially AvidReader223. As always, an extra special thanks to my editor, AwkwardMD.",
        ""
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "lesbian",
        "gay",
        "journey",
        "life",
        "no sex",
        "slow burn",
        "latina",
        "hispanic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-journey-ch-02-9"
}