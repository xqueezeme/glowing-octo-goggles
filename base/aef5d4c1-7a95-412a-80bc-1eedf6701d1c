{
    "title": "Unconventional Therapy Pt. 07",
    "pages": [
        "Shawn woke up to find himself alone in bed. He sat up, stretched, yawned and could hear movement downstairs. Probably his mother fixing breakfast. He shuffled into the bathroom to take a shower before heading down for breakfast. As Shawn washed up the shower curtain was pushed to the side.\n\n\"Room for one more?\" Patricia asked her nephew.\n\n\"Of course Aunt Patty.\" he said with a smile.\n\nPatricia stepped into the shower, \"How'd you know it was me and not your mother?\"\n\n\"Mom doesn't ask,\" Shawn said as Patricia stepped into the shower behind him.\n\nAfter Friday night Jennifer, Shawn, Patricia and Chaz had fucked and sucked each other in every possible combination. Jennifer and Shawn had told Patricia and Chaz that they had pretty much made the unofficial rule that if one of them wanted sex all they had to do was say so. Shawn could just walk up to his mother and say \"Mom, I wanna fuck\" and Jennifer would drop what she was doing to fuck him and vice versa. That rule now extended to Patricia and Chaz as well.\n\n\"Does she also do this without asking?\" Patricia asked, sliding her hands around his body and grabbing his hard cock. Without a moment's hesitation she started masturbating him, pressing her body into his. He could feel her tits pressed into his back as she started jerking his cock faster and faster. She had to look around him as she was just a little too short to peek over his shoulder. She loved the sight of her hand wrapped around his cock.\n\n\"All the time,\" Shawn moaned, \"That feels so fucking good. Don't stop.\"\n\nShe had no intention of stopping, and in fact sped up a little more. She wrapped her other hand around him, lightly dragging her nails up and down his torso. He put out a hand to balance himself against the wall, because he was already on the verge of an orgasm. Patricia had already learned the signs of Shawn's orgasms and started jerking his cock even faster.\n\n\"Oh fuck, Aunt Patty. I'm cumming!\" Shawn yelled.\n\nMoments later, his cock twitched in Patricia's hand and several jets of thick, salty semen erupted from his cock and Patricia watched with a smile on her face as Shawn's cum spewed forth from his cock, down into the tub and down the drain. When she was sure he was done, she stopped stroking his cock, but didn't let go.\n\n\"Not that I'm complaining,\" Shawn said, as his breathing returned to normal, \"But what was that for?\"\n\n\"I need a reason?\"\n\n\"Well, no...\" Shawn said.\n\n\"You've been fucking my sister for three months,\" Patricia said, \"I'm making up for lost time.\"\n\nShawn turned to face her and Patricia leaned up and kissed her nephew. Shawn eagerly returned the kiss, wrapping Patricia in his arms and pressing his still hard cock into her stomach. As they broke the kiss he reached down between her legs, quickly finding her clit and gently rubbing it.\n\n\"Hypocrite. You've been fucking my mother for 24 years!\"\n\n\"Yeah, but I only get to see her three times a year.\" Patricia said, trying to keep an even tone as Shawn played with her clit. \"You've had her every day for three months straight!\"\n\n\"Then move in with us.\" Shawn said, moving his other hand to one of Patricia's 38C tits and gently pinching her nipple.\n\n\"Don't start with that again,\" Patricia said, \"I said I'll think about it, and I'm still thinking.\"\n\nHer voice started to waver as Shawn was still massaging her clit and playing with one of her tits.\n\n\"Goddamn it Shawn, fuck me. Now.\"\n\nThey quickly stepped out of the shower and Shawn bent his aunt over the bathroom counter and shoved two fingers into Patricia from behind. She was already soaking wet, and not just from being in the shower with him.\n\n\"God you have a beautiful pussy Aunt Patty,\" he said, wiggling his fingers back and forth inside her. \"There's only one problem.\"\n\n\"What's that?\"\n\n\"My cock's not in it.\" Shawn said, slowly removing his fingers.\n\n\"Then maybe you should do something about that.\"\n\nWhile that was going on upstairs something similar was going on downstairs. Chaz had gotten up first this morning, and headed downstairs to the kitchen. While he was rummaging around in the fridge, Jennifer woke up, kissed a still sleeping Shawn on the forehead, grabbed her robe and headed downstairs.\n\n\"Look at you,\" she said to Chaz, \"Just going through my fridge like you're my sister's kid or something.\"\n\n\"Yeah,\" Chaz said, laughing, \"The nerve of me.\"\n\nJennifer laughed as well. \"Seriously though, how are you this morning?\"\n\n\"Pretty good. Well, I do have one little problem.\" he said.\n\n\"What's that?\"\n\nChaz pulled down his boxers to expose his erection to his aunt.\n\n\"That's not a little problem. That's a big problem.\" She said, untying her robe and letting it fall to the floor. \"Come over here and let Aunt Jenny take care of that for you.\"\n\nShe motioned for Chaz to follow her to the living room couch and had him sit down. She then knelt between his legs and took his hard cock into her hands and gently licked it from his balls to the head, swirled her tongue around the head, and then swallowed his cock in one swift motion. In the past few days, Chaz had grown to appreciate the difference in technique between his mother and aunt. He wouldn't say one was better than the other, but both were good in their own ways.\n\n\"God Aunt Jenny, that feels so good.\" Chaz moaned.\n\n\"Glad you approve,\" she said before stuffing his cock back into her mouth.\n\nChaz looked down and watched as his aunt's lips slid up and down on his rock hard cock, making it appear and disappear in her warm mouth. All he could feel were lips and tongue. Jennifer looked up at him and their eyes met, Chaz smiled at his aunt, and she winked at him.\n\n\"As good as that feels, I want to fuck you.\" he said.\n\nShe pulled his cock out of her mouth, licked up and down the shaft a couple of times.\n\n\"What was that?\" she said, giving him a devilish smile.\n\n\"Come on, Aunt Jenny,\" Chaz said, \"Don't tease me, I want to fuck you.\"\n\n\"That sounds like you're asking me.\" Jennifer said. \"What did I tell you the other day?\"\n\nChaz smirked to himself, remembering the rule. Fine, if that's the way she wanted it.\n\n\"Aunt Jenny, let's fuck.\"\n\n\"That's more like it.\" She said smiling, she stood up, straddled him on the couch and lowered herself onto his cock.\n\n\"Remember Chaz, in this house, you don't have to ask.\"\n\nMeanwhile, upstairs in the bathroom Shawn was still pounding his cock into Patricia from behind, both of them watching themselves in the bathroom mirror. Shawn enjoyed the expressions on his aunt's face, as well as watching her tits jiggle in time to his fucking her.\n\nPatricia moved her hand between her legs and rubbed her clit while Shawn fucked her. She'd already had one mini orgasm, but could feel a big one building, and knew it wouldn't be long before she exploded. Any second now. She looked at Shawn's reflection, and caught his eye.\n\n\"I'm gonna cum...\" she managed to say before her orgasm hit.\n\nShe cried out in orgasmic bliss as her orgasm ran through her. She could feel her pussy juice pulse out of her and run down her legs as Shawn continued to pump his cock in and out of her. She felt like she was going to collapse to the floor, but the counter and Shawn held her up. Feeling and watching her orgasm pushed Shawn over the edge, and just as Patricia's orgasm ran its course, she could feel Shawn's cock throb inside her.\n\n\"Aunt Patty, I'm cumming!\" he grunted as he exploded inside her.\n\nHe slammed his cock all the way inside her, making her eyes go wide as she felt his cock jump and throb inside her as he filled her up with his warm cum. For a long moment neither one of them moved as Shawn's cock continued to shoot cum into Patricia's willing pussy. Finally he felt the sensation pass, and slowly pulled out. Patricia stood up and Shawn ran his hands up her body, grabbing her tits as she leaned back into him and looked up and back to kiss him.\n\n\"Guess we'll need another shower.\" she said.\n\nJennifer was riding Chaz like there was no tomorrow, bracing herself on the back of the couch, while Chaz sucked on her tits. Much like her sister, Jennifer had already had one mini orgasm while riding her nephew's cock, and the feel of him inside her, along with his mouth on her tits was pushing her towards a full blown orgasm.\n\nChaz beat her to it.\n\n\"Oh fuck Aunt Jenny, I'm cumming!\" he suddenly cried out, and before Jennifer could react, he grabbed her hips and slammed her all the way down so his cock was as deep inside her as he could get, and she could feel his cock twitch and throb as he came inside her hot, willing pussy. She moaned as her own orgasm hit seconds later.\n\n\"We can't leave these two alone for a second, can we?\" Patricia said.\n\nJennifer and Chaz opened their eyes and looked to see a naked Patricia and Shawn watching from the bottom of the stairs.\n\nDespite the fact that she was still cumming, Jennifer couldn't help but laugh. Chaz smirked at his mother as he continued to pump cum into his aunt.\n\nJennifer pulled herself off of Chaz after both of their orgasms subsided.\n\n\"And what have you two been up to?\" Jennifer asked, sitting next to Chaz.\n\n\"Nothing much,\" Shawn said, \"Just fucking each other's brains out.\"\n\nThey joined Jennifer and Chaz on the couch. Shawn sat next to his mother, while Patricia sat next to Chaz.\n\n\"So it's Wednesday,\" Patricia said. \"What time do you usually go see this therapist of yours?\"\n\n\"Well, before we started fucking her, it used to be 3:00, but now it's whenever. She cleared her Wednesdays for us.\" Jennifer said, \"I usually call her just before we leave.\"\n\n\"Sounds good,\" Patricia said, \"I think we may need to eat, and shower... separately this time.\" she said looking at Shawn.\n\n\"Hey, don't look at me like that!\" he said, defensively, \"You walked in on me, you jerked me off, and you begged me to fuck you.\"\n\n\"I didn't beg you to fuck me,\" Patricia said, scowling, \"I told you to fuck me. There's a difference.\"\n\n\"Tomato, to-mah-to.\" he said.\n\nChaz just shook his head and laughed, while Jennifer rolled her eyes.\n\n\"Either way, Patty's right,\" Jennifer said, \"We need time to recover, get some food in us and get washed up.\"\n\nDeborah woke up in a good mood. It was Wednesday. And Wednesday meant Jennifer and Shawn were coming over for their weekly threesome. Ever since they started having sex three months ago, Wednesday became Deborah's favorite day of the week.\n\nOf course she always looked forward to seeing Jennifer and Shawn. In the five and a half years they'd been coming to see her, they'd gone from just therapist/patients to very good friends. And now that their relationship had advanced to lovers, well, that just made things even better.\n\nShe never bothered getting dressed, because she knew she'd just be getting naked as soon as Jennifer and Shawn arrived. She just threw on a robe after her shower while she ate breakfast and waited for them to show up. She had adjusted her schedule so that Jennifer and Shawn were the only \"patients\" she saw on Wednesday. She had no idea she was in for a double feature today.\n\nShe scooped up her phone when it rang, her pussy getting wet with anticipation.\n\n\"Hey gorgeous,\" she said, excitedly. \"You on your way?\"\n\n\"Yeah,\" Jennifer said, \"And I've got a surprise for you.\"\n\n\"What is it?\" Deborah asked.\n\n\"Well, if I told you that it wouldn't be a surprise now, would it?\" Jennifer said, \"Trust me, you'll like it.\"\n\n\"Tease.\"\n\n\"You love it.\" Jennifer laughed.\n\nDeborah laughed too, \"I do. See you soon.\"\n\nTwenty minutes later Deborah heard their car pull up outside. She peeked out the window and saw Jennifer and... Jennifer? Oh, right, Jennifer's identical twin sister Patricia. Then there was Shawn, and another hunk of a young man getting out of the back of the SUV, that must be Chaz, her sister's son. So that was the surprise. She opened the front door with a huge smile on her face.\n\n\"...and there she is.\" Jennifer said.\n\nAs everyone stepped inside, Jennifer and Shawn exchanged quick kisses with Deborah.\n\n\"Debbie, this is my twin sister Patricia, and her son Chaz.\" Jennifer said, \"They know all about our relationship.\"\n\n\"Wow dude,\" Chaz said to Shawn, \"You were right. She's even better looking in person.\"\n\nShawn had shown Chaz some of the pictures he had of Deborah on his phone. In some of them she was in sexy lingerie, in others she was topless, but in most of them she was nude.\n\nDeborah blushed a bit and smiled at Patricia and Chaz. \"Nice to finally meet you. Jenny talks about you a lot.\"\n\n\"There's actually something I've never told you about her though,\" Jennifer said, looking from Deborah to her sister, then back. \"Patty and I have been in a lesbian relationship since we were 18.\"\n\nDeborah's eyes went wide, \"Really? How come you never mentioned this before? I mean it's been five and a half years.\"\n\n\"I don't know,\" Jennifer said, \"I guess I was just so used to keeping it a secret, that never mentioning it was second nature. After all, it's not something I could mention in casual conversation to anyone. So I just never mentioned it.\"\n\n\"Hell, we didn't even know until just a few days ago,\" Shawn said, indicating Chaz and himself.\n\n\"But everything is out in the open now. And now that it is, we've spent the past few days fucking each other silly. There are no more secrets between us. Right?\" Patricia said, looking at her sister. \"No more secrets?\"\n\n\"No,\" Jennifer said, \"No more secrets.\"\n\n\"Well in that case, follow me.\" Deborah said, leading everyone to her bedroom and her king size bed. Shawn knew it was big enough for the usual threesomes, but would it fit all five of them?\n\nOnce in the bedroom, Deborah shed her robe and Chaz's eyes nearly bugged out of his head. Again, the pictures didn't do her justice.\n\n\"Told ya.\" Shawn said, pulling his clothes off.\n\n\"Wow, Deborah, Shawn was right. He said you had huge tits, and I saw the pictures, but nothing compares to the real thing.\" Chaz said, unable to rip his eyes away from Deborah's chest.\n\n\"You're not so bad yourself.\" Deborah said, as Chaz's hard cock sprang into view when he pulled his pants off. \"Why don't you come over here and do more than just look at my huge tits.\"\n\nEveryone stripped down in short order and jumped into bed with Deborah.\n\n\"Patricia...\" Deborah said.\n\n\"Call me Patty,\"\n\n\"Alright, Patty, why don't you help your son out?\"\n\nChaz had already started sucking on one of Deborah's tits, leaving the other one free for Patricia to latch onto.\n\nShawn bent his mother over doggy style and penetrated her from behind as they watched his aunt and cousin suck on Deborah's huge melons. Shawn slowly fucked his mother as they watched.\n\nYep, they'd all fit.\n\nChaz started kissing his way down Deborah's body until he was between her legs, without a moment's hesitation he snaked his tongue out and teased her clit out of hiding. Deborah sucked in a breath and then moaned in pleasure as Chaz started to eat her pussy.\n\n\"Patricia, sit on my face, I want to see if you taste as good as your sister.\" Deborah moaned.\n\nPatricia kissed her way up to Deborah's face, locked lips with her and then got into position, teasing Deborah by slowly lowering herself into position on her face. Deborah greedily started licking Patricia's already wet pussy as soon as she was in position. Patricia threw her head back and moaned in pleasure as Deborah's tongue worked it's magic.\n\nShawn picked up the pace until he was fucking Jennifer the way they normally fucked at home, his eyes jumping from one body to the next. He'd watch Chaz licking Deborah, let his eyes wander up her body, stop on her incredible tits for a moment, then he ran his eyes up his aunt's body to her face, which was looking down at Deborah's barely visible face between her legs.\n\nIt wasn't long before Deborah felt her first orgasm of the day approaching under Chaz's talented tongue.\n\n\"Oh shit,\" she cried out, \"I'm cumming!\"\n\nHer body shuddered and she started bucking her hips, screaming in pleasure from between Patricia's legs. Chaz was holding on to her hips for dear life as she filled his mouth with orgasmic juices. Deborah then doubled her efforts on Patricia, who was massaging her clit as Deborah licked her soaked pussy.\n\n\"You do taste as good as her.\" Deborah said, before sucking Patricia's clit back into her mouth.\n\nChaz continued to tease Deborah's pussy, while he watched his mother ride her face.\n\n\"Yes, just like that, right there...\" Patricia squealed, \"Oh fuck, goddamn it, I'm cumming!\"\n\nHer body convulsed and she filled Deborah's eager mouth with a flood of pussy juice. She threw her head back and screamed as her orgasm hit her full force.\n\nOnce her orgasm had run its course, Patricia pulled herself off of Deborah's face and tried to catch her breath as she watched Shawn fuck Jennifer.\n\n\"Chaz,\" Deborah said, \"Come up here and fuck me. Let's see if you're as good as your cousin.\"\n\nChaz crawled up Deborah's body and sank his cock into her well lubricated pussy. Patricia sat up and knelt next to Shawn and kissed him before watching his cock slide in and out of her sister.\n\n\"I want some of that.\" she said, pushing Shawn back so his cock slipped out of his mother, and leaned down so she could get his cock into her mouth.\n\nShe pushed him onto his back and started sucking his cock in earnest. Jennifer looked over with a look of mock anger on her face.\n\n\"Hey! I was using that!\"\n\n\"Mine now,\" Patricia said, swallowing Shawn's cock.\n\nJennifer pushed her way in between Shawn's legs, next to Patricia and grabbed his cock. \"He's my son.\"\n\n\"Don't care.\" Patricia said, but Jennifer nudged her sister out of the way and swallowed Shawn's cock.\n\nWhile Jennifer and Patricia were fighting over Shawn's cock, Chaz was busy sliding his in and out of Deborah. They locked lips and played an active game of tonsil hockey.\n\n\"You feel so good inside of me,\" Deborah said, when they broke the kiss. \"You're as good as your cousin.\"\n\n\"I've been looking forward to this ever since Shawn told me about you,\" Chaz said, \"It's everything I thought it would be and more.\"\n\n\"Fuck me harder, Chaz.\" Deborah moaned, \"Show me what you can do with that cock of yours. Don't hold back.\"\n\nChaz started fucking Deborah harder until he was fucking her as hard as he fucked his mother and aunt.\n\nJennifer and Patricia had come to an agreement on sharing Shawn's cock, passing it back and forth, licking up and down the shaft and running their tongues over the sensitive head. Occasionally they'd stop to kiss each other.\n\n\"Can I fuck him now?\" Patricia finally asked.\n\n\"You don't have to ask, remember?\" Jennifer reminded her.\n\nPatricia looked at Shawn. \"I'm gonna fuck you now.\"\n\n\"Climb on Aunt Patty,\" Shawn said, grinning at her.\n\nPatricia sat up, straddled Shawn and Jennifer guided her son's cock into her sister's aching pussy, Patricia moaned contentedly as Shawn filled her up. As she started to ride him, Jennifer watched for a bit before turning her attention to what was going on behind her.\n\nShe turned Chaz's head to face her and kissed him, before breaking the kiss and leaning down to kiss Deborah.\n\n\"So do you like your surprise?\" Jenny asked.\n\n\"I love it,\" Deborah moaned. \"Best surprise ever.\"\n\n\"Feels good doesn't it?\" Jennifer asked, looking between their bodies to watch Chaz's cock slide in and out of Deborah's slick pussy. She ran her hand down Deborah's body, starting at the valley between her huge tits, across her flat stomach, and stopping at the point where Chaz's cock entered her. \"My nephews hard cock sliding in and out of your sweet, tasty pussy.\"\n\n\"He feels so fucking good,\" Deborah said as Jennifer slid her hand back up Deborah's body to gently pinch one of her rock hard nipples.\n\n\"He's a goddamn natural just like Shawn.\" Jennifer said, looking back over at her son, who was reaching up to squeeze Patricia's tits as she rode him.",
        "Jennifer started masturbating as she watched the two pairs of people fucking on either side of her.\n\n\"Ok, someone needs to fuck me,\" she finally said, \"Or lick me, something!\"\n\n\"Sit on my face.\" Deborah said, \"I want to eat that yummy pussy of yours.\"\n\nJennifer happily mounted Deborah's face so she was facing Chaz. She grabbed his face and gave him a long, deep, probing kiss.\n\n\"Suck my tits while you fuck my therapist, but don't you dare cum yet.\" she said when she came up for air. She moaned as Deborah's tongue went to work on her, \"I have plans for that cock.\"\n\nPatricia looked down at Shawn as she rode his cock. \"I can't get enough of this.\" she said, smiling down at Shawn as she fully impaled herself on him and gyrated her hips.\n\n\"Neither can I,\" Shawn said, grabbing her hips, holding her in place and slamming his cock into her, making the entire bed shake.\n\nFrom there they switched off several times making sure everyone got to spend a decent amount of time with everyone else. Both Shawn and Chaz fucked all three women in several different positions at least three more times, and everyone had gone down on everyone else at least 2-3 times. They'd honestly lost count. Sometimes it was Shawn and Chaz double teaming one of the women, sometimes it was two of the women double teaming one of the boys, and at one point it was all five of them, Shawn getting his cock sucked by his mother, who was sitting on Patricia's face, Deborah's head was between Patricia's legs, and Chaz fucked Deborah from behind.\n\nWhile the women had cum multiple times Jennifer and Patricia had to keep Chaz on the edge using their trick of squeezing the base of his cock to keep him from cumming. He had lost track of how many times they stopped him from cumming after the third time. Shawn knew how to pace himself, so there was no need to use the same trick on him.\n\n\"God Debbie,\" Shawn said, \"I gotta fuck your ass. Mom won't let me fuck hers.\"\n\n\"Seriously?\" Patricia asked her sister, \"You've never had a cock in your ass? Don used to fuck me in the ass all the time. I loved it. If you won't let Shawn fuck you in the ass, then he can fuck me.\"\n\nJennifer bit her lip and looked down at the bed, \"I don't know, I mean his cock is so big...\"\n\n\"You don't know what you're missing.\" Patricia said, \"Right Debbie?\"\n\nDeborah nodded and smiled. \"Trust me, it feels amazing.\"\n\n\"Come on mom,\" Shawn said. \"It's me. You know I won't hurt you, and if it really does hurt, or if you're uncomfortable and honestly don't like it, I promise I'll stop.\"\n\nJennifer looked at her son, her sister, Chaz and Deborah.\n\n\"Do you trust me, mom?\" Shawn asked.\n\nShe bit her lip again, \"Yes, baby, I trust you.\"\n\nDeborah reached into the drawer on her side table and pulled out the bottle of lube she used when she let Shawn fuck her ass. Jennifer got into position in front of her son as Deborah applied a generous helping of lube onto his cock, and Patricia applied lube to her sister's asshole sliding her finger in up to the first knuckle. Jennifer moaned a bit.\n\n\"Relax sis,\" Patricia told her, and slid her finger further in up to the next knuckle. \"There you go.\"\n\nPatricia pulled her finger out, looked at Shawn and nodded.\n\n\"You ready mom?\" Shawn asked.\n\nJennifer took a deep breath and relaxed as much as she could. \"Yes, go ahead honey. Fuck mommy's ass.\"\n\nShawn pressed the head of his cock against his mother's asshole, and Jennifer slowly let out the breath she was holding as the head of her son's cock penetrated her.\n\n\"You okay?\" Shawn asked.\n\n\"Yes baby,\" Jennifer moaned, \"I'm ready. Push your cock into my ass.\"\n\nShawn inched his cock into his mother until he was all the way in.\n\nDeborah watched her face, and Jennifer looked over at her therapist/friend/lover. \"Holy shit. You were right Debbie, it does feel fucking amazing.\"\n\nShawn started slowly fucking his mother, using long slow strokes so she could get used to feel of his cock in her.\n\nDeborah looked over at Chaz, \"Have you ever tit fucked a woman?\"\n\n\"No, but I have a feeling I'm about to.\" he said.\n\n\"Damn right you are,\" Deborah said laying down next to Jennifer. She applied some lube to the valley between her huge tits. \"Now put that monster right here.\"\n\nChaz straddled Deborah and she guided his cock into position between her mammoth mammaries. She pushed her tits together, sandwiching his cock between them.\n\n\"Now fuck her tits just like you're fucking a pussy.\" Patricia said from behind her son. \"There you go, that's it.\"\n\nChaz started moving his hips to slide his cock in between Deborah's enormous tits. \"Holy shit,\" was all he could say.\n\nPatricia realized that Deborah's pussy was free and quickly dove between her thighs and worked on licking her to another orgasm.\n\nNow that Jennifer was used to the feel of her son's cock in her ass, she had Shawn pick up the pace. She now regretted not allowing him to do this sooner, because it felt so goddamn good!\n\n\"That's it honey,\" she moaned, \"Fuck mommy's ass. Fuck me harder baby. God I wish I'd let you do this sooner. Fuck me in my ass baby!\"\n\nShawn did as his mother asked, and started fucking her harder, loving the sight of his cock sliding in and out of her ass. He also made a mental note to himself to fuck his aunt's gorgeous ass since she had expressed her love of anal sex as well. Chaz also made a mental note of that.\n\nChaz grabbed the headboard of Deborah's bed as he continued to slide his overworked cock between her large, gorgeous, soft tits. For a 47 year old woman, she not only had the body of a woman at least fifteen years younger but the sex drive to match. Not that Shawn ever complained about it, and Chaz had no complaints either.\n\nShawn loved fucking his mother's ass. He was glad she finally agreed to it. He had meant what he'd said earlier, if she was uncomfortable, or honestly didn't like it, he would have stopped. After all, he had two other women who were willing to take his cock from behind. He was glad, however, that he was the first person to ever fuck his mother in the ass. His father didn't even get that honor.\n\nJennifer was also glad that Shawn was the first cock that she allowed in her ass. It felt so good and she again regretted not doing it sooner. She knew this would be the first of many times Shawn would be fucking her ass.\n\nAll five of them were covered in sweat and while the women had had at least three or four orgasms each, the boys hadn't cum yet. That was about to change.\n\n\"Oh fuck,\" Chaz moaned, \"I'm fucking cumming!\"\n\nMoments later Deborah felt his cock throb and twitch between her tits and he exploded letting out a wordless cry of pleasure. Thick, hot streams of cum shot from his pulsing cock landing on Deborah's face, neck and upper chest. Chaz pulled his cock free and stroked his cock over Deborah's tits, the last couple of jets of cum landing on Deborah's gigantic tits.\n\n\"Oh fuck!\" Deborah cried out as Patricia coaxed another orgasm out of her, and she flooded Patricia's mouth with yet another cascade of pussy juice.\n\nJennifer reached under herself and was furiously rubbing her smooth slit, in time with her son's cock in her ass.\n\n\"Mom, I'm gonna cum. I'm gonna fucking cum in your ass!\" Shawn grunted.\n\n\"Yes baby,\" Jennifer moaned, \"Cum in mommy's ass! Fuck my ass baby, cum in my fucking ass!\"\n\nShe brought herself to orgasm just as Shawn's cock twitched in her ass and she felt her son's cum flow out of him into her.\n\n\"FUUUUUUUUUUUUUCK!\" Shawn cried out as he slammed his cock deep into his mother's asshole. \"Holy fucking shit.\"\n\nJennifer let out a wordless cry of pleasure as she brought herself to orgasm. She could feel her pussy juice coating the inside of her thighs as Shawn's cock throbbed in her ass, shooting jet after jet, of his sweet, sweet cum inside her. He finally slowly pulled out, and collapsed on the bed next to her, Deborah on his other side wiping Chaz's cum off her face and neck and licking her fingers clean, Patricia licking her son's cum off of Deborah's tits.\n\n\"That was...\" Shawn started to say, but couldn't find the words to describe what he'd just felt.\n\n\"Yeah, my thoughts exactly,\" Jennifer said.\n\nChaz collapsed on the far side of Deborah. Patricia, having cleaned Deborah's tits, leaned up to kiss her, crawled over Shawn, paused to kiss him, then crawled over Jennifer and looked at her sister's content face.\n\n\"I hate to say I told you so...\"\n\n\"No you don't.\" Jennifer said, smiling, before pulling her sister down for a kiss. Patricia collapsed next to her sister.\n\nFor a long moment none of them spoke, as they all tried to catch their breath staring at the ceiling.\n\n\"Oh my god.\" Chaz said, \"That was fucking intense.\"\n\n\"Is it always like this?\" Patricia asked.\n\n\"Always,\" Jennifer said.\n\n\"That was, hands down, the best sex I have ever had in my life.\" Deborah said. \"I mean it was always amazing before, but adding two more people to the mix made it that much better.\"\n\n\"Debbie,\" Patricia said, \"Can I ask you something?\"\n\n\"Of course.\"\n\n\"I know how this all started, but why my sister?\" Patricia asked, \"Not that I blame you, because my sister's fucking hot, but why her and Shawn and not any of your other patients?\"\n\n\"To tell you the truth,\" Deborah said, \"I'm not really sure. When they first came to see me, I thought they were going to be just like any of my other patients, two people who needed professional help to deal with a stressful situation. But... I know it's corny, I know it's a bit clich\u00e9, but it was love at first sight.\"\n\n\"Really?\" Jennifer asked, looking over Shawn at Deborah, \"You fell in love with me?\"\n\n\"Yes,\" Deborah said, \"I did. But I knew I had to keep it professional, and I managed to for all these years. But I have to confess, after a while, it became too much to bear, and after you would leave, I would masturbate thinking about you. Wondering what would happen if I made a move on you.\"\n\n\"What about me?\" Shawn asked.\n\n\"You too, at least once you turned 18 that is.\" Deborah said, turning to look at him, \"After all, you were 14 when you started coming here, and while I thought you were a handsome young man, I didn't have any sexual feelings toward you. You were pretty guarded and defensive at first. You barely spoke to me for the first few months. It took at least two years before you were somewhat comfortable with me, another year before you were completely comfortable and really started to open up to me, and a couple of years after that I started wondering what it would be like to fuck you too. When you told me about spying on your mother, and she told me about walking in on you, I realized that was my chance.\"\n\n\"So that's why you encouraged us to masturbate in front of you?\" Shawn asked.\n\n\"Truth be told, I almost joined you.\" Deborah said, nodding \"I was on the verge of ripping my clothes off both times and fucking the two of you right there in my office. It took a lot of self control to just watch you and stop myself. I masturbated to a couple of incredibly intense orgasms after you left though.\"\n\n\"And then you had us write down our sexual fantasies about each other, and then have the other person read them. Which led to our first threesome.\" Jennifer said.\n\n\"That's why I had you read each other's fantasies. I knew you'd get turned on reading them. I couldn't hold back any longer, and after reading those fantasies, I knew you wouldn't be able to either,\" Deborah said. \"I was gonna get you both naked again one way or another.\"\n\n\"Speaking of which.\" Shawn said.\n\nHe sat up and crawled on top of his mother, and without a word sank his still hard cock into her.\n\n\"Oh god baby, I don't know if I can take anymore,\" she moaned.\n\n\"How the fuck can you still go?\" Chaz asked.\n\n\"I honestly don't know,\" Shawn said. \"I just know that one orgasm doesn't do it for me, and I need to have a second one.\"\n\n\"Let me see if I can't get you back up for one more go.\" Deborah said to Chaz.\n\n\"Not without my help.\" Patricia said, moving around Shawn and Jennifer to get to Deborah, who was repositioning herself between Chaz's legs. \"He is my son after all. Now, let's see if we can suck some life back into this cock. I want one more fuck before we leave.\"\n\nDespite Jennifer's objections, she wrapped her legs around Shawn's hips, pulled him down into a passionate kiss, and looked deep into his eyes.\n\n\"Fuck me, baby,\" she moaned.\n\n\"I love you so much, mom.\" Shawn said.\n\n\"I love you too baby, more than anything else in the world.\" Jennifer said.\n\nShawn smiled as he started hammering his cock into his mother's well used, and still very wet, pussy.\n\nDeborah and Patricia had gotten Chaz hard again, much to his surprise and their pleasure. Of course the sight of two gorgeous women, one of who was his own mother, sucking his cock certainly helped.\n\n\"You think you can fuck me again, baby?\" Patricia asked.\n\nChaz nodded, \"Hell yeah mom.\"\n\n\"Then fuck me baby,\" she said switching positions with him, \"Fuck mama's pussy.\"\n\nFor the next several minutes the boys fucked their mothers, almost matching each other stroke for stroke. Deborah sat between the two and fingered her soaked pussy, her head on a swivel as she turned her attention back and forth watching Shawn and Jennifer on her left, and Chaz and Patricia on her right.\n\nNo one said anything, because there was nothing more to say, but mostly because they were all moaning in pleasure. The sounds and smells of sex filled the room, the sound of Shawn and Chaz's hips slamming into their mothers, the squishing sound of Deborah fingering her own soaked pussy, the squeaking of the bed, the percussion of the headboard bouncing off the wall, and the moaning of all five of them was a symphony of sexual satisfaction.\n\nJennifer's orgasm hit first, and she started screaming in pleasure as her son continued to pound his cock into her. That set off Patricia who started squealing in pleasure as she came next. That set off Deborah who grunted and gasped as she got herself off. Shawn looked over and as he watched Deborah's face he slammed his cock all the way into his mother and looked down into her eyes groaning in pleasure as he emptied his balls into her.\n\n\"Holy shit, I'm cumming again!\" Chaz bellowed, more surprised than anything as he exploded deep inside his mother.\n\nThe room was filled with their various grunts, groans, screams and moans of pleasure as they all came within seconds of each other.\n\nFinally Shawn rolled off of Jennifer, settling between her and Deborah, and Chaz likewise pulled out and lay next to his mother. Again they all took a few moments to catch their breath.\n\n\"All right sis,\" Patricia finally said, \"You win.\"\n\nJennifer had to look over Shawn and Deborah to look at her twin sister, \"I win?\"\n\n\"Yes, you win. I'll move in with you.\"\n\nJennifer smiled, \"What made you change your mind?\"\n\n\"This!\" Patricia said, waving her arms around. \"You're crazy if you think I'm gonna give this up! Right honey?\"\n\n\"Oh definitely,\" Chaz said, \"We can't just leave all this behind.\"\n\n\"Looks like our threesomes just turned into fivesomes.\" Shawn said.\n\nIt took a couple months, but Patricia made arrangements to quit her job, sell her house, and move in with her sister. As promised Jennifer helped Patricia find a new job, and Chaz kept dating his girlfriend and kept in touch with his old friends and made new ones as Shawn easily integrated his cousin into his group of friends.\n\nOnce everything was settled, the four of them continued to have sex with each other in every possible combination 4-5 times a week (not counting their weekly sessions with Deborah). They also experimented with new positions and techniques, always willing to try something new to spice up their sex lives. They introduced toys, costumes, and roleplay into their sex lives to keep things interesting. They also looked up articles on the internet to find new and interesting ways to spice things up.\n\nAs Shawn drifted off to sleep one night after fucking his mother, he smiled to himself as he realized this all started because of his mother thinking she was home alone and didn't close the bedroom door all the way, and Deborah's very unconventional therapy."
    ],
    "authorname": "Thrognar",
    "tags": [
        "mother and son",
        "aunt and nephew",
        "therapist",
        "group sex",
        "anal sex",
        "big tits",
        "sisters"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/unconventional-therapy-pt-07"
}