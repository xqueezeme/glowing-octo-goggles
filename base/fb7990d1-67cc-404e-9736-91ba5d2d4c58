{
    "title": "Zero Day Exploited Ch. 03",
    "pages": [
        "... All across campus students took advantage of the situation by throwing parties. \n\nLindsey awoke the next day with a headache. She was wearing only her panties, but fortunately she was alone in her room. A glance at the clock showed that it was still early, but she had to pee. She threw on a shirt and staggered to the bathroom, using the break to try and recall the night. She had gone out, got drunk, flirted with some guy, or was it two? Somehow she had gotten home. It was all very hazy. As she returned to her room, her eyes fell on her computer, and the blood drained from her face as a solitary memory surfaced. She had chatted with him last night. Topless. \n\n***** \n\nChapter 3.  \n\nLindsey returned home for Thanksgiving, still unclear as to what had happened that night. Had he asked her to take her top off? Had she offered? How long was she topless? She seemed to recall being very proud of her small boobs, but wasn't really certain of that. What else had she done? She had learned long ago not to beat herself up over spilled milk, to just move forward. She refused to allow herself to wallow in angst over what had or hadn't happened that night. Instead, she enjoyed her time with her family in the warm safety of her childhood home, continued to run and sent out Snaps. On Saturday night, laying on her bed and watching cat videos, her pulse quickened as a chat window opened. \n\nHello Lindsey, you are looking very pretty today.  \"Hi,\" she answered tentatively. \n\nThere was a knot in her stomach, wondering how he was going to breech the topic of their last chat session. Would he ask her to take her top off? And would she agree? Instead, to her surprise, he only asked about her holiday and complimented her on Snaps. He never even hinted that he had seen her breasts, leaving her more confused than ever. She considered asking him what had happened, but the chat ended early and he promised to be in touch. \n\nBack at school for the final sprint to the end of the semester, their chat had a familiar feel. He was as sweet and complimentary as ever and didn't ask her to show her breasts. She had purchased a \"sexy\" bra and panty set as he had requested. She did a little dance to tease him before showing them off and he positively gushed over it. He asked for her phone number. Lindsey was surprised, she had assumed he already had it, but she gave it to him anyway. \n\nThe next morning, Lindsey was woken by her alarm. As she laced up her running shoes, her phone chirped with a text from an unknown number. Good morning, beautiful. She spent the rest of the day with a smile on her face. After their next chat, he said he would leave her alone through Finals Week so that she could study. Every morning, though, her day started off with a positive text and a run. Her Snaps had gotten more adventurous and playful, full of poses and facial expressions. In addition, she had been playing for days with the naughty idea of sending a Snap wearing only panties, with an arm over her breasts. Finally she sent one, a distraction for her just before the last Final. As she walked to class, a text came in: WOW!! She took the Final glowing with happiness. \n\nBy the time Lindsey returned home after the semester, she knew she had done well. She was pretty sure of getting a 3.4 this semester, and maybe a 3.7 if a Final broke her way. It was a marked improvement over her Freshman year, and she was quite proud of herself. Further, her daily runs had really paid off, and she was as slim and energetic as she had ever been. The weather had turned, and on days when she couldn't run outside she went to the gym. One day, running late, she was pressed for time to make her 8am deadline for a Snap. She went into the locker room at the gym, took off her sweaty sports bra, and took a selfie with her arm covering her boobs. Once again she immediately received positive affirmation from him. \n\nIn her heart she had moved away from feeling him as a blackmailer and more as a boyfriend. While their relationship had clearly started by him blackmailing her, that had been a few months ago. Now, in every way expect physical, he was like a boyfriend. She had had long, intimate conversations with him and she really enjoyed the way he constantly praised her and gave her compliments. The dark days of winter didn't seem so cold with him. Nonetheless, she was acutely aware that theirs was not a balanced relationship: she didn't know his name or even what he looked like. But she felt she knew his heart, and based on that she liked him. \n\nLindsey was laying on her belly on her bed at home one night, browsing the internet for distractions while waiting to feel tired enough to sleep. Suddenly the webcam light activated and a chat window opened. \n\nHello Lindsey. You are looking very pretty tonight.  \"Hello, thank you,\" she smiled, happy for the break from the tedium of her day. \n\nPlease take your top off.  \"Oh, um...I'm not wearing a bra...,\" she hemmed. \n\nThat's okay, I can only see your shoulders.  Lindsey thought about it for a moment and then agreed. The way she was laying, a pillow underneath her chest and her face in the computer, she wasn't going to show anything. She squirmed out of her t-shirt and looked at herself in the webcam display. Her face and shoulders glowed in the dim light of the display. \n\n\"Are my shoulders all you want to see?\" she teased. \n\nI want to see all of you.  \"Well, I don't know about that.\" \n\nThis is nice, for now. How did your semester go?  \"Really well, I think I got a 3.4.\" \n\nThat's wonderful!  \"I know, I worked really hard. I can hardly believe it.\" \n\nI'm so proud of you! I knew you could do it.  \"I think a lot of it was because I thought you would interrupt me with a chat session and so I forced myself to stayed focused\" \n\nWell, it worked. And, if you don't mind my saying, you look really fit also.  \"Yeah, those daily runs really paid off.\" \n\nSo I've been pretty good influence for you, huh?  \"Yeah, overall you've been a positive influence on my life,\" she agreed with a smile. \n\nIt makes me very happy to hear that. How is your holiday going?  Lindsey started talking, telling him about her family and their preparations for Christmas. \n\nI would like to send you a Christmas present.  \"Really!\" \n\nYes. I will send it to your dorm. When do you go back?  \"On the third, right after the New Year.\" \n\nI'll try and get it there around that time.  \"What kind of present?\" \n\nWell, you'll have to wait and see. Although maybe some of it is more of a present for me than you ;)  \"Okay, well I'll look out for it. Can I get a gift for you?\" \n\nHow about more Snaps like that one in locker room?  \"You liked that one, huh?\" \n\nAmazing. You are a real stunner.  \"Well, I'll think about it,\" she hedged, knowing full well she'd do it. \n\nI'd really like that.  Their chat took an odd turn at that point, with her blackmailer talking in prolonged detail about his Christmas memories. They ended up talking for over three hours. They also agreed that she could take it easy on the runs during the holiday, but he still wanted Snaps. The next morning, as she ran, she replayed the night in her head. He hadn't even asked her to look at porn, he had just talked to her. Her head slowly began to concede to her heart, no longer thinking of him as the enemy. Finally, grudgingly, she gave in. If he was her enemy, she reasoned, she could use more enemies. \n\nFor the rest of the break, she followed her routine and smiled over his daily texts. She only skipped three runs, but all the Snaps she was sending were topless with the good parts hidden. Inspired by ESPN the Magazine's Body Issue, she started playing with nude poses like the athletes did, naked but showing nothing. Although she though several of them were really hot, she refrained from sending them. \n\nOn New Year's Eve, feeling extra flirty, she set up a special photo shoot for him. She set her cell phone camera on a timer and posed across her bedroom while naked. She wore a golden eye mask, held a champagne bottle in front of her sex, one nipple covered with a champagne flute, and the other one covered with a carefully angled party horn. She took several dozen shots, some showing everything, other more teasing. She finally send one that showed nothing but revealed everything. A series of texts of hyperbolic adoration quickly arrived on her phone, leaving her glowing all night. \n\nShe attended a New Year's party at house of a friend from High School, a collection of many of the kids she had gone to school with a few years earlier. She ended up talking to Adam for much of the night, getting drunker and drunker. Making out in the dark corner of a room, Lindsey suddenly felt guilty and uncomfortable. She reluctantly pushed him away and apologized before heading home. Even though her blackmailer hadn't given her any instructions, she felt like making out with Adam was cheating. Sober, she was glad she hadn't gone any further. \n\nBack at school, she started her Winter Session with six credits on the schedule, three of which were an elective sculpture class. After the second day of classes, a box from Amazon appeared in her dorm mail. That night, a chat window opened. He started by complimenting her extensively on her Snaps, then she did a little dance for him while stripping down to her underwear. She talked about her holiday and confessed to making out with a guy at the party. If it bothered him, it didn't show. Finally he asked if she received her package. She brought it forward and opened it. Her jaw dropped as she pulled out the first box. It was a new Fitbit. She had looked a them before, but they were too expensive for her budget to justify. Aside from her parents, he had now spent more money on her than anyone ever had. \n\nI know how important fitness is to you, so I thought this would be help  Lindsey was speechless for a moment, amazed to have gotten such an item, before pouring out her thanks. She quickly fumbled with the packaging, excited to get it on. With his help, she soon had it on, tracking her pulse and synced to her phone. \n\nI hope you like it. And I'm glad to pulled that one out first.  \"Oh? Should I see what else is in here?\" \n\nThe second box was white and cryptically labeled BAHC-100. She opened the box to find four separate rectangles of heavy fabric. After a moment of confusion, she realized what they were. \n\n\"Bondage cuffs? Seriously?\" \n\nYeah. I know, more of a gift for me. But they are kinda special.  He guided her to a website, where she downloaded and installed an application. While it was loading, she put a cuff on each wrist. \n\nAre you ready? Put your hands together.  A moment later there was an audible click and her wrists were locked together. Lindsey tried to pry her hands apart but the cuffs held tight. \n\nIt's Bluetooth enabled, so I can lock them from the computer. They're magnetic latches that close.  Another click and the cuffs released. Lindsey paused, unsure of this new twist. It was kinky, putting her wrists in cuffs controlled by him, but it also sent an erotic thrill straight down to her clit. \n\nOne more item should be there.  Lindsey reach in and then gasped as she pulled out the last box. She blushed as an embarrassed smile was quickly covered by her hand. She removed a 7\" long pink dildo from the box. It was thick and flexible and pink and had balls at the bottom. She immediately knew she would be using it that night. She took a few minutes to compose herself before looking back to the camera. \n\n\"And what do you want me to do with this?\" she asked cheekily, wagging it in front of the webcam. \n\nWhat do you want to do with it?  She toyed with it for a few minutes, poking and prodding it. She wrapped her hand around it and gave it a firm stroke, shivering at the thought of doing it to a boy. She licked her lips as she gave it another stroke, her internal fires intensifying. She had never used a sex toy more sophisticated that the handle of her hairbrush and would never have the courage to buy one herself, but having one in her hand was certainly intriguing. She noticed there was a suction cup on the bottom. She finally looked back to the webcam and blushed anew as she remembered she was being watched. Finally he responded. \n\nDo you have a name for it?  Lindsey giggled before thinking about it. The name of that hot singer came to mind. \n\n\"Greg. This is Greg.\" \n\nLet's watch a video.  Lindsey gave a chuckle and then navigated to her porno site. She selected a video, and as it started he told her to use the suction cup at the base of her new dildo to attach it to the desk in front of the computer. She was now watching a porno with a big pink dong wagging in front of her face. \n\nPut your wrists together.  A moment later there was a click and her hands were locked together, amplifying her arousal with the helplessness. She started narrating the video, her voice becoming husky from desire. When the girl on the video started sucking her man's cock, a new request came in. \n\nSuck Greg like she's doing.  Flushed with lust, Lindsey leaned forward and captured her dildo in her mouth, eyes rolled up to continue watching the screen as the actress pleasured her boyfriend. She mimicked the girl on the screen as best she could, going deep and then licking the shaft before sucking it again. She tasted the plastic skin of the dildo and reveled in the way her lips stretched to accommodate its girth. She could easily imagine sucking the guy on the screen, watching his face for reactions. She was getting unbelievably turned on, her panties noticeably damp. If her hands had been free she would have started touching herself. The actors started having sex, but Lindsey kept on sucking. The video ended with the guy cumming in her pussy and Lindsey pulled off her dildo, gasping and horny. \n\nDo you want to watch another one?  \"No,\" she breathed huskily. \n\nYou want get better acquainted with Greg?  \"Yeah,\" she answered, shamelessly admitting she was about to masturbate. \n\nCan I watch?  The comment snapped Lindsey out of her stupor. \n\n\"Uh...no,\" she blushed \n\nMaybe next time?  \"Maybe.\" \n\nWell, I enjoyed our chat. Have a good night.  The cuffs unlocked and the chat window closed. Lindsey quickly rolled her chair over to her doorway and removed her bra and sodden panties. She reclined the chair, put her feet up and apart and immediately started sliding Greg along her slit. She eased an inch into her pussy, pausing for a few moments to get used to the intruder. She had never had anything that big in her, and despite being horny she wanted to take it slow. After a few minutes of short thrusts, she began to get more adventurous, stroking deeper and deeper. Her eyes were transfixed between her legs in the dim light, watching more and more of the dildo disappearing into her. Finally she pushed him home, groaning from the sensations, her body completely focused on obtaining her release. She clamped a handover her mouth, too late to capture the involuntary moan. She pulled it out so that only the bulbous head was still inside of her before plunging it back in, waves of pleasure following its penetration. She moaned in response, unable to keep her voice silent, and pinched a nipple while the other hand started thrusting him in and out with full, deep strokes. \n\nShe moaned in ecstasy as her orgasm built, finally erupting through her body. She let out a long, strangled groan as her body shook erratically, her hand staying on task, ramming Greg in and out her pussy. Part of her was terrified she was being too loud, but she couldn't help it. Another tremor shook her and her chair wiggled, threatening to tip. Lindsey lurched forward and held on to the doorknob with her free hand as she continued to ride her orgasm. Finally her body was spent and she sagged in her seat, her ragged breaths filling the room. She blushed in quiet amusement as she heard some girls pass in the hallway, grateful that they didn't know what a pervert she was. \n\nThey had another chat the next week. Lindsey admitted to enjoying Greg, although she had been able to hide him away for the rest of the week. During their chat, they somehow wandered into a discussion of a local public arts show that she had attended as part of her sculpture class. Together they looked at pictures of the things the artists had designed, a loose group called the Maker community. Lindsey commented that she could never do something creative like that. He disagreed. After talking about the workshop she had access to for her class, he talked her into building a little project. He wouldn't tell her what it was, but assured her she was more than capable of building a project. With this project, she would get to see just how good she could be at building things. \n\nLater, she put her cuffs on and he locked them in place. She stated a porno and sucked Greg as she watched. By the end of the second video she was completely ready to finish. She had been thinking a lot about letting him watch her. She had, after all, performed numerous fake orgasms for him and doubted her real ones would measure up. However, she like to play with her naked body when she masturbated and was worried about showing that much. He asked to watch again, and she seriously considered letting him, but in the end decided to use Greg in private. She fucked herself to another powerful orgasm in her chair. \n\nThe next day, a chat session opened. This time he only stuck around to save a pdf on her computer. The pdf was a simple blueprint of two mostly rectangular wooden boards with a heart and smile cutouts. Lindsey spent a few hours in the workshop and soon had built both pieces. She painted them both a hot red. During their next session, he complemented her woodworking skills and sent her a few more blueprints. Most the pieces were small enough to pull out of the scrap bin and didn't even get charged against her account. \n\nA third set of files arrived, this one for 3D printed parts. Her University had just set up a 3D printing lab for students, so she went to the lab and printed them out. She picked a hot red, as the pieces looked like a pointy tail of a devil. As the printers worked, a technician came over to compliment her, telling her she was the first non-engineer to use the lab. He asked what she was making and she demurred, offering only that she wanted to learn how to make things. Finished, she and took them back to the room and added them to her colorful collection of parts. \n\nShe had started running a longer loop, the cold weather and her months of running had really improved her endurance. Sending a Snap a few days later, she decided she was bored with the pictures she was sending and sent a carefully posed nude that hid everything. Again she received positive texts in return. \n\nShe started to get more creative with her Snaps, posing in all sorts of silly and sexy ways. After she painted the latest wood parts in the workshop, she put a small amount of the paint in a cup and took it back to her dorm. She used a tissue to paint her boobs, took a picture, and sent it as a Snap the next day. Somehow, expressing her sexuality in these poses really resonated with her. \n\nThe next set of blueprints required her to buy some bearings online for a nominal amount and a mixture of screws, nuts and bolts. The final pieces were metal rods that she cut to length in the metal shop. During their next chat session, after stripping to her underwear, she placed the computer on the ground beside her. She laid out all the parts she had made over the past few weeks and added two folded towels. She started putting them together under his direction, using a battery powered driver she had borrowed from the woodshop. First the two boards were erected vertically, then the other pieces were assembled between them. Over the course of an hour the whole contraption came together, the bearing allowing a rocking motion. The two towels were laid parallel on top. The red devil tail seemed to wag as it rocked. Lindsey puzzled over what she had built. She pushed it several times, watching it rock back and forth. ",
        "\"Okay, what is it?\" She finally asked. \n\nGet Greg.  Lindsey reached over and pulled Greg from his hiding place. \n\nPut the suction cup on blue square.  Lindsey's eyes widened as she finally connected the dots. Horrified, she couldn't help but push the rocker and watched Greg rise up and down. \n\nCongratulations! You just build a fucking machine! (Author's note: www.funkyrocker.com)  \"Oh...my...God...,\" she finally got out. \n\nLindsey's mind reeled. How many people had seen her with those parts? Did they know what she was building? What was she going to do with a sex machine? How was she going to hide it? She had told her friends about the secret project she was building, now what was she going to say? \n\nShe gave it another push, intimidated as she imagined herself sitting on it. Greg rose up and down in synchronicity with the rocking. The length of stroke and angle were adjustable. Adjusted by parts she had made and assembled herself. Oh My God. Lindsey finally noticed he had typed something. \n\nSo, do you still think you are incapable of building things?  \"Uh, no,\" she giggled. She gave it another push. \"Oh my God.\" \n\nA image formed in her mind about how it would feel to ride her sex rocker. She would no longer have to worry about falling off her computer chair. Her hands would be free. A flush came over her and suddenly she had an intense desire to try it out. It looked scary, but she knew each part intimately. And soon, the parts would know her intimately. \n\nWhy don't we watch a video.  \"Yeah, lets.\" \n\nLindsey put the laptop back on her desk and mounted Greg in front. She was already feeling hot as she brought up a video. This time she picked a video with two girls and a guy. She again imitated the girls as they sucked his cock, but once they started having sex all she could think about was the sex rocker on the floor behind her. Her head bobbed up and down on Greg as the actor's dick slid in and out of the two girls on the screen. She could almost feel what it would be like to ride it, to have Greg thrusting in and out. By the time the video was finished she was completely ready to test out her creation, practically panting in need. \n\nLindsey, I want to watch you ride your rocker.  \"Oh, um, I don't...think so.\" \n\nI know you are still reluctant to show your beautiful breasts to me, and I'm OK with that. You can put it where your chair is and adjust the laptop so all I will see is your face.  \"I...um,\" she faltered. \n\nGet your rocker.  Lindsey turned and took Greg in her hand, her mind mushy in confused arousal. She pushed her chair away, pulled the sex rocker over and sat in it. Only her neck and head was showing in the webcam. Her pulse quickened even more. \n\n\"I'm not sure.\" \n\nC'mon Lindsey, after all we've been through. Put Greg on your rocker.  She hesitated for a moment, flushed from excitement, her body screaming for attention. She fastened Greg in place and then looked back at the computer. From where she was standing her lower body wasn't visible in the webcam. \n\nPlease. \n\nThe magic word, Lindsey consoled herself. She slid off her wet panties and sat on her rocker, Greg standing at attention only a few inches below. She looked again at the webcam, only her face visible. \n\nPlay the video again.  Lindsey nodded and hit play, fast forwarding to the spot when both girls were sucking him. She looked down and rocked her hips tentatively, watching Greg rise to brush her pussy. She raised her head as she continued to rock, brushing her wet cunt with Greg every time. She was completely transfixed on the video, and when the actor finally put his cock into the girl, Lindsey guided Greg into place. \n\n\"Oh fuck,\" she groaned as Greg slid home into her wet pussy. \n\nHer eyes were glued to the screen and she rocked her hips in time with the actor, coordinately the thrusts on the video with what she was doing to herself. She gripped the handle of her rocker with one hand for leverage as the other hand held onto the desk. Her hips took on a life of their own, slamming Greg into her over and over again. Her orgasm built up momentum as she watched, mesmerized, as the actor switched girls. He started pumping into the girl and Lindsey's orgasm hit, drawing a long moan from her as stared at the screen. Unlike her previous lovers, Greg didn't cum and get soft, he just kept on fucking her as wave after wave of pleasure washed over her. Her body's tremors seemed to feed directly into the rocker, continuing its thrusting as she moaned. Finally she could take no more and slumped on her desk, gasping, as Greg slid out of her with a slurp. Her dazed eyes watched as the video continued, eventually wandering over to the chat box at the bottom of the screen. \n\n\"Wow,\" she smiled breathlessly. \n\nWow indeed.  \"That was...amazing.\" \n\nIt sure looked like it was. Thank you. You are incredible.  \"Thanks,\" she grinned, her mind still hazy from her orgasm. \n\nI'll be in touch.  \"Okay,\" she sighed as the chat window closed. \n\nLindsey took a few more minutes to compose herself before dragging her exhausted body into bed."
    ],
    "authorname": "astuffedshirt_perv",
    "tags": [
        "college",
        "coed",
        "blackmail",
        "dildo",
        "machine",
        "masturbation",
        "female masturbation",
        "webcam",
        "exhibition",
        "selfie"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/zero-day-exploited-ch-03"
}