{
    "title": "Satyr Play 03 Pt. 01",
    "pages": [
        "Author's Notes:\n\n'Satyr Play 3' is the conclusion of my surprisingly well-received first attempt at dabbling in the realm of magic. Once more throwing caution to the wind, I run wild through the dandelion patch of canon, convention, and tradition, kicking up the fluff that is the Fantasy genre. \n\nYeah, I know, but whatcha gonna do.\n\nMinimal effort is made here to explain the backstory, so if you've just stumbled upon this story as your first exposure to the tale, I highly recommended you read them in the following order:\n\n\u2022\tSatyr Play\n\n\u2022\tA Dark Heart (Short Story -- for context)\n\n\u2022\tSatyr Play 2, Part 1\n\n\u2022\tSong for a Still River (Short Story -- for context)\n\n\u2022\tSatyr Play 2, Part 2\n\n\u2022\tSatyr Play 3, Part 1\n\n\u2022\tSatyr Play 3, Part 2\n\nAll characters engaging in sexual relationships or activities are 18 years old or older. Most aren't even human... or real. Or are they? Dun dun DAH!\n\n********\n\nSatyr Play 3, Part 1\n\n********\n\nChapter 1\n\nHenry Gable contemplated the knife in his hand. The grip was comfortable and seemed designed to fit the larger hand of his Satyr form. The eight-inch blade was wickedly sharp and tapered to a deadly point. Greatest caution was required when using it to keep his fingers connected to his hand.\n\nHis eyes automatically went to his right ring finger.\n\nMab's finger.\n\nIt looked and felt like his now, but he knew it once came from the hand of the mad queen. Not that she'd personally experienced the agony of its removal. That cruelty was inflicted upon their newborn daughter, whose mind was now trapped in the Fae's body.\n\nHenry's mind spun as he once more tried to come to terms with the evil Queen Mab and Baba Yaga had done that night.\n\nEnvious of Henry's link to a source of magic more potent than her own, Mab designed a master level spell to create a new body for herself, a body linked to the realm of Wild Magic as Henry was. The most heinous aspect of her spell was that it required a child born of her and Henry.\n\nThe powerful but vile spell tapped into Henry's link to a Fae healing spell and the temporal energies trapped in his horns to support and expedite the process of having the child. Then it successfully transferred Mab's mind into the newborn's body and the child's mind to hers. Mab had a new lease on life with access to powerful new magic while their daughter was destined to quickly die in Mab's ancient body.\n\nHenry somehow managed to tap into the temporal energies himself to keep his newborn daughter from dying of old age as Mab fled, and he returned the ancient body back to that of an infant. Still, it took Baba Yaga's assistance to keep her alive.\n\nThoughts of the old witch sent a spike of pain through him. She'd had her own horrific plans for his daughter that night. Without concern for the pain she caused, she'd used her supernaturally sharp scissors to remove the right ring finger from his and the baby's hands and swapped them, using her powerful magic to reshape and resize them for their new hosts.\n\nHis right ring finger with its dragon bone ring was now connected to the tiny hand of his infant daughter. The small piece of jewelry was bound to a curse so powerful, triggering it would result in the immediate eradication of all Human life on earth.\n\nThe idea that his innocent child was carrying the burden of an extinction-level weapon and the unknown agenda Baba had, which required the infant to bear it, tormented his sleep.\n\nBut there was nothing he could do about it because Baba Yaga took his daughter when she vanished that night. He hadn't seen the crone or his baby since.\n\nHowever, Henry knew the child was alive as he had a little magic of his own now, courtesy of a Fae healer he'd saved. While Henry wasn't a wielder who could bend magic to his will, he was so saturated in Wild Magic, he had enough power to link minds with his daughter through the bond they shared of their traded fingers.\n\nAs often as he could, he'd reach out to her mind and express his love for her. Each time, he'd feel her sweet response. It wasn't as good as holding her in his arms, but it was all he had.\n\n\"Henry! Did you cut yourself again?\"\n\nHe was brought back to the present by the outcry and glanced at the beautiful Faun rushing over to see him where he stood behind the kitchen island. He glanced down at the surface before him. The sharp knife was resting on the cutting board next to the peppers he'd been slicing. He held his right ring finger in his left hand as he did when he reached his mind out to his daughter.\n\nHe shook his head and released his finger as he smiled at the lovely creature, now standing next to him. \"No, I'm fine. Sorry, my mind was wandering again.\"\n\nTish gave him a gentle frown. \"Okay, you're banished from the kitchen until your brain comes back to you. Too many sharp objects in here for it to be safe for people with distracted minds. Shoo!\"\n\nShe gently pushed his larger body from behind the island, giving his buns a playful squeeze through his kilt as she did so. He managed to keep his lust in check as he enjoyed the feel of her strong hands on his ass.\n\nBeing a Satyr seemed to mean his body was always a blink away from carnal excitement. At least, it felt that way since his sexual maturity finally began to take effect. Before working at VRL, he'd been disguised as a Human using the magic in the dragon bone ring. He'd spent his waking hours in Human form, and this delayed the maturing of his true Satyr nature considerably. He was still learning how to control his lust and pheromone release, the latter only now becoming second nature.\n\nHenry smiled back at Tish and let himself be moved from the food prep station. He began tidying up the living room instead. The decor was a strange mix of Japanese minimalism and Bohemian eclectic. The ample space contained his furniture and Tish's, but there was plenty of seating for their guests.\n\nThey were having a house warming party tonight. They'd been in the condo for only two weeks, and he still felt a little off about their new digs. It was in the same building on the same floor as his first condo. He loved how much space it had, the layout, the view of the water, and of course, its location, but how they obtained the condo still felt... wrong.\n\nUnit 909, at the other end of the floor from his old unit 901, became available after the gruesome murder of a young man in a nearby alley seven months earlier. The youth's parents eventually decided they could no longer live in the building and returned to Europe.\n\nVRL purchased the much larger condo as it was a better investment. They sold unit 901 to Sandy, who used the money from her unit's sale, 404, to cover most of the cost. Henry assisted her with the remaining amount as he felt responsible for causing her to no longer be Human, a requirement for living on the building's even-numbered floors.\n\nDue to a momentary lapse of his self-control and circumstances beyond his control, Henry's Human friends became magic conduits like him. Sandy was the first to change and ultimately became a Gorgon, a being with sentient hair, stronger than steel, and flirty as hell.\n\nSandy's bestie, Dayshia, also lived on the ninth floor, sharing a two-bedroom condo with Michelle Beaumont, who often worked nights and had secretly craved company when she was home. Being an Arachnid, Michelle lucked out with Dayshia, who was not in the least put off that her roommate had the lower half of an enormous spider.\n\nDayshia became a truth seer when the Wild Magic altered her and her friends. She could see through glamors, the magic disguises that hid the Hidden Races from Human eyes, and the ever-present cameras of Human civilization. She was discovering her eyes could do a lot more as well.\n\nTish became a Faun, the female counterpart to Henry. She preferred the term Faun over Satyr, but truthfully, the names were interchangeable.\n\nAlso affected that night was their friend Roger, but he was in the wind, and no sign of him could be found. As the man was an anarchist at heart, they were especially nervous about him disclosing the Hidden Races' existence. The Council currently had their hunter/killer teams out looking for him, but they had other more critical issues to deal with lately.\n\nWhile Henry's first condo had been a compact one-bedroom, this one was easily four times the size. It was an 'L' shaped space wrapped around the south-west corner of the building. The south view was lovely, while the west view was of the trees and apartments across the lane beyond the foliage. At least the westerly windows were large and let in a lot of light.\n\nIn the 'L' southern arm was a large open concept kitchen against the interior wall. It was state of the art, and Tish was thrilled. A long granite island with a large sink, built-in dishwasher, and wine cooler separated the kitchen from an expansive dining/living room with floor to ceiling windows running along the southern wall.\n\nThe 'L' west arm began with a decent sized balcony on the corner of the building, followed by a spare bedroom which would become a nursery, and then the master bedroom with a four-piece ensuite and walk-in closet. Henry thought the soaker tub and separate shower was excessive, but Tish loved the utility and decadence of having both.\n\nAn interior divider wall separated the hall to the bedrooms from the corridor leading to the front door. A three-piece guest bathroom was just inside the entrance, the door to their full-size stacked washer/dryer set was next, and a reasonably spacious hall closet was next to that. Storage was limited, but the condo had more space than either had experienced before.\n\nHenry smiled as he watched Tish busying herself in the kitchen. She looked radiant, though aside from the glow, there was very little evidence of her pregnancy. She'd been concerned at first, but the Hidden Races doctor they'd found assured her that the baby was doing fine. She assured Tish that while they had no records of the term of a Faun pregnancy, she definitely shouldn't expect it to match a Human's.\n\nCamila also assured them that long terms were typical for Hidden Races and may hint at Satyrs' lifespan expectations, another current unknown.\n\nSomeone knocked on their door, and Henry shared a look with Tish then glanced at the clock. The party didn't start for thirty minutes. They activated their glamors, casual party clothes, then Henry, in his Human disguise, walked down the hall to answer the door.\n\nHe looked through the peephole and saw Sandy in a pretty blue party dress, so he opened the door.\n\n\"Hi, Sandy--OOF!\"\n\nHenry felt his head and shoulders engulfed in silky softness with just a hint of strength. Sandy had her glamor active, so her real hair was invisible, and Henry could see the blush on the pretty woman's face. He stepped back, and Sandy followed, so he was able to close the door.\n\n\"I'm so sorry. Kesini knew we were coming to see you today, and she's been such a pest all day as she's missed you,\" Sandy said with a pout.\n\nHenry gently gathered the hair in his hands and moved it from his face to hug it against his chest. Sandy dropped her glamor, so he was able to see the glowing golden locks in his arms. He blinked at Sandy.\n\n\"Missed me? We walk to the path station and ride the train together almost every day,\" he said in confusion.\n\nSandy shifted in embarrassment, then her eyes locked on his. \"No, she misses all the... intimate time we had when we were living together.\" Her blush deepened, and he finally understood.\n\nA smile slipped onto his lips. \"So Kesini misses the intimate time, does she?\" he said with a teasing tone as he stroked the squirming hair.\n\nBeautiful blue eyes flared as she held his gaze while tingles ran down her spine from his touch. \"No, not just her.\"\n\nThe sweet honesty of her response made him instantly regret his teasing. He'd moved out of his old condo two weeks ago. It was true; Sandy had enjoyed his attentions most nights in the months leading up to his departure as she'd moved in with him after vacating her unit on the fourth floor.\n\nWith the demands of moving into his new place and the extra duties he had at work, writing a new firewall application for a contract Camila made with the US Government, he'd been rather preoccupied lately.\n\nHe moved forward and took her face between his hands, her eyes lashes fluttering from the tingles he was sending through her skin. Then his mouth found hers, and she wrapped her arms around his hard body, crushing herself against him. They were both covered by Kesini's golden locks.\n\nHenry slid his right hand around to the back of Sandy's head, deep in her hair, as his left slid down her back to her ass, pulling her sensitive bits tight against his growing erection. She gasped against his mouth and kissed him harder. The kiss went on as Sandy ground her body against his, her hands clinging to his ass. Kesini was beginning to tremble from the sensation feedback from Sandy. He pulled her tighter to him as his hips rocked sensually, strumming her body.\n\nSuddenly, Sandy's moans became a short squeak as her pleasure tripped over the edge into a delicious release. Her body vibrated against his as she clung to him. She pulled back from the kiss to rest her forehead against his cheek as she panted. Kesini released her grip on them both and completely relaxed.\n\n\"God, I've missed that,\" Sandy sighed.\n\n\"I'm so sorry, Sandy. I never meant to neglect you. It just got so busy--\" He stopped when she pressed a fingertip to his lips.\n\n\"Don't apologize. I get it. You've got your new place, and you're settling in with Tish, who's carrying your baby. Something on the side is the last thing on your mind.\"\n\nA voice came from behind Henry. \"Whoa there, girlfriend! Don't be forcing Human pre-conceived notions on us like that!\" Sandy peered around Henry, who turned to see Tish standing next to them, frowning at her friend in annoyance. \"Henry's a Satyr, and he's got a big heart with plenty of love for all of his friends. He has two Succubi, a Valkyrie and a Vampire, all sharing intimacy with him as well as us. He and I aren't a couple in traditional Human terms. Sex is sex, and love is love. He's just been really busy with work lately.\"\n\n\"Oh! I'm sorry, I just thought--\" Sandy began.\n\n\"Yeah, I know, but you're wrong. I have no issues with Henry being intimate with his friends. He's not my property. I love being with him, and he loves being with me. That's good enough. We're not some hokey TV family; life is far more interesting than that.\" She sniffed and frowned. \"Now, my Faun sense of smell is much stronger than my Human one was, so maybe you can use the extra time before the party to freshen up from your sexy time?\"\n\nSandy's face flushed with embarrassment, and she squeaked before engaging her glamor and rushing out the door.\n\nWhen it was closed again, Tish looked at Henry with a raised eyebrow. \"You couldn't have led her into the bedroom to do that? Now we're going to have to light a candle to burn off the scent of sex. We don't want to give our guests the wrong impression, now do we.\" She made shooing gestures again. \"Go get the matches and the candle in the top left cupboard in the kitchen.\"\n\nHenry gave Tish a quick kiss and hustled away to follow her instructions. She was right. He really did love being with her, as he'd enjoyed living with Sandy. He realized living alone was not for him. He needed someone in his life to keep him from falling into his old solitary patterns.\n\nShe went back to the kitchen and carried the snack tray over to the wide coffee table while he collected the candle and matches. He carried them back to the front entrance and set the pretty candle in the candle stand on the narrow table in the hall. The candle was a light yellow-gold color, roughly six inches tall and two inches wide. He lit it and lowered the stand's glass chimney over it. After a few moments, he was surprised to pick up the subtle scent of fresh mountain air and wildflowers. He looked closer at it.\n\n\"Where did you get this candle?\" he called out.\n\nShe walked up next to him and smiled with her eyes closed as she inhaled the lovely scent. \"That's much better!\" She opened her eyes to grin at him. \"It's a new business that opened up a small shop near my hospital. They sell products with all-natural scents. The candle wax is beeswax. The scent comes from the wax, which is collected from the hives of bees in different locations. This one was from a hive in the mountains of Colorado.\"\n\nHenry inhaled deeply, and with his eyes closed, he would swear he was standing in that meadow. Then he felt his body resonating with the scent. His eyes opened, and he stared at the candle. Wild Magic. He was sure of it. The wax was subtly emitting Wild Magic. He looked to the smile on Tish's face. \"How-how do you think they make the candles do that?\"\n\nShe gave him a silly grin. \"Do what? It's just a candle. Honey picks up the flavor of the flowers the bees feed on; why shouldn't their wax? Don't overthink it. Just enjoy it!\" She walked back to the kitchen to check on the wine. \"By the way, only one drink for you tonight! We don't need you going on a mental walkabout!\"\n\nHe gave the candle another troubled look but put it out of his mind. If Tish couldn't detect the magic in its scent, then it was probably nothing to worry about. The strength of her connection to the realm of Wild Magic was second only to his own, and her sense of smell was stronger than his. Her hearing and eyesight were better than his too.\n\nHe sighed. Magic was stupid.\n\nHe went back to preparing for the party. Aside from their odd collection of furniture, he was delighted with how their new apartment turned out. Maybe it was because of the mix of styles that he felt so much at home here. It felt like him and Tish.\n\nWhen the next knock came from the door, it was only a few minutes before the party was to begin. Henry opened it and smiled at Sandy, who was in a lovely red party dress now. Behind her was Dayshia dressed in her favorite color, gold, and Michelle in her favorites, black and red. All three were wearing their inside slippers as they came directly from their apartments. He stepped back and let them in.\n\nSandy gave him a kiss on the lips with an invisible stroke across the front of his pants from Kesini. That made Sandy blush, but she was smiling as she walked into the living room.\n\nMichelle stepped up to Henry with a nervous yet excited smile, and he leaned forward to let her press her lips against his. She was much more comfortable with these intimate gestures now, as long as he made no moves she might interpret as an attempt to restrain her. She could grab his shoulders and kiss him deeply as she was currently doing, but he kept his hands at his side.\n\nShe ended the kiss when Dayshia gently made a throat-clearing noise behind her. Blushing prettily, Michelle smiled at Henry and followed Sandy.\n\nDayshia closed the door behind herself and gave Henry a hungry smile. She was letting her hair grow and, tonight, wore it like a huge mane of dense curls. He itched to sink his fingers into the luxurious mass, but Dayshia's entire body was a severe distraction for his hands. She grinned as she saw his need for her and suddenly pulled Henry against her chest to kiss him. Her large breasts were squeezed between their bodies, and Henry's libido was waking up fast. He felt the heat in his body beginning to tingle, likely caused by kissing so many women so close together. But this was supposed to be a house warming party, not an orgy. He focused on Dayshia's lips' soft texture and how good they felt when he stroked them with his lips. By concentrating on her alone, he felt the heat dissipate as tender, one on one sex didn't trigger it. Dayshia's heat, on the other hand, rocketed from his sensual kissing and his hard body pressing on all the right places. She finally pushed him back and watched his mouth with wide eyes. The tip of her tongue touched her plumped lips quickly as she caught her breath.",
        "\"Damn, you're getting too good at that! You almost made me tear your clothes off!\" she purred.\n\nHenry nodded to her with a gentle smile. They hadn't been... intimate since that night in the hospital. The night he lost control of his heat and changed her and her friends forever. He knew she was frightened to do more than kiss, and that made him sad. She was the one who most resented the change, though she was coming to terms with it recently as it was so useful for her becoming a doctor, and ultimately, a surgeon.\n\n\"I love what you're doing with your hair,\" he said, his voice still a little rough.\n\nHer eyes flashed to his as she saw how he was restraining himself. Her gaze softened, and she smiled as she primped her hair just a little. \"Yes, I love it almost as much as Sandy loves hers. Now, if I could just get Kesini to stop playing with it.\"\n\nHenry chuckled as he pictured the blonde locks playing within the mane of dark curls.\n\nDayshia took a step towards the living room, then stopped and sniffed the air. \"Wh-what smells so good?\" she sighed. Sandy and Michelle must have been sneakily listening in as they immediately came back to the door to take a whiff themselves.\n\n\"Is that flowers?\" Sandy said, with a happy smile.\n\nHenry pointed to the candle. \"Tish found this beeswax candle.\"\n\nMichelle looked at him, curiously. \"Beeswax candles don't have a scent.\" He just shrugged, so the ladies moved into the living room to question Tish on it. Henry smiled as he saw Dayshia's hair begin to move seemingly on its own. Sandy needed to drop her glamor so the other guests could see her mischievous hair coming.\n\nThere was another knock, and Henry opened the door to see his first guests from outside the building. Sigrid and Meixiu smiled back at him as they graciously accepted his gesture to enter. It was almost June and a warm spring, so they hadn't worn outerwear. He took in the dramatic contrast between the two women. Sigrid's powerfully muscled Valkyrie body was beautifully enhanced by a lovely green mid-thigh dress that flattered her long, muscular legs. Meixiu's slim, long-limbed Vampire frame was wrapped in a long, flowing white gown with a red sash. The almost dainty impression belied the strength in Meixiu's petite body.\n\nSigrid stepped close and got a warm bear hug from Henry. She felt so good in his arms, and she was enjoying the hug as well. \"What smells so good?\" she asked when she looked around.\n\nHenry stepped aside and pointed to the candle, then to the end of the hall where they could hear Tish talking about the candles. With a grin, Sigrid slipped off her shoes and put on a pair of guest slippers before moving to join them.\n\nHenry saw Meixiu was watching him with a slight smile on her lips. He noted she seemed a little weary. After giving her a hug, he held her shoulders and looked into her eyes. \"Is everything okay?\"\n\nShe nodded bashfully and glanced down the hall to ensure Sigrid wasn't within earshot. \"Yes, I'm just a little worn out from my nightly patrolling.\"\n\nHis smile dropped. \"Patrolling?\"\n\nHer smile slipped too. \"I'm hunting the serial killer.\"\n\nHenry's eyes went wide. \"Meixiu! You shouldn't be putting your life in danger!\"\n\nShe reached up and touched his lips with her fingers to quiet him. \"I am not seen if I wish not to be.\"\n\nHe looked at the slim girl and felt the slight tremble in her fingers. \"You're not feeding.\" Her eyes widened in surprise at his accurate guess. \"You can't help anyone if you don't help yourself first!\" He leaned his face closer to hers and gave the Vampire a stern look. \"Feed from me.\"\n\nHer eyes got a little desperate, so he knew she'd put off feeding for too long. She needed the blood to maintain her strength, and Henry's blood was supersaturated with Wild Magic, which would greatly energize her.\n\nHe gathered her to him with her back to his chest and held his left wrist before her face. He could feel her trembling in his arms, then she gripped his hand and his forearm in her hands and brought the soft skin to her lips. She darted her tongue out to lick the inside of his wrist. Henry felt the area go numb, so there was just the briefest pinch when her teeth bit in. Then she placed her lips to the punctures and drank. It went on longer than he expected, but she finally paused then licked the wounds to activate her healing enzymes to close the holes. She rested her front teeth against his skin and took slow even breaths as the energy swept through her like a tsunami. When she released him, he had to keep her steady.\n\n\"I think I took too much,\" she said quietly as she struggled to stay awake and on her feet.\n\nHe frowned, then scooped her into his arms, making her stare at him wide-eyed. \"You need a little snooze. You can join the party once you wake.\" Relaxing, her eyes immediately closed, and her head rolled in to rest against his chest.\n\nHe carried her down the hall, briefly coming into view of the living room, then turned right to head down the bedroom hallway to the master bedroom. He set her down on the Japanese bed he'd grown to love. This piece of furniture, he'd insisted on keeping in their bedroom. Tish got used to it quickly.\n\nHe slipped her shoes off, closed the door behind himself, and turned to see the group of ladies in the hallway watching him. He gestured they should return to the living room. He left Meixiu's shoes by the front door then joined the others in the living room.\n\nOnce he got there, Sigrid immediately spoke up. \"What happened to Meixiu?\" Her eyes caught the slightly pink color on his wrist and recognized that immediately. \"She fed from you?\" she said in surprise.\n\n\"She looked a little tired, so I gave her a meal. She took a little more than she expected to. She'll join us when she wakes,\" Henry said, keeping the Vampire's nightly activities private, for now.\n\nAnother knock announced more guests, so Henry used the excuse to escape further questions.\n\nHe opened the door to see Mahati and Kali Chandra standing there. Mahati looked dazzling in a royal blue and gold saree. Henry froze as he took in her gleaming, straight black hair cascading over her shoulders. Large, dangling gold earrings and delicate gold chains accentuated the elegant look. Her cinnamon skin tone seemed a little redder than usual as she fidgeted under his stare.\n\n\"Are you going to rudely gawk at us, or are you going to invite us in?\" she asserted. Her full crimson lips were frowning once more as her dark eyes flashed.\n\n\"I-I'm sorry, Mahati! Please come in! You look amazing in that beautiful dress! Breathtaking!\" Henry stammered as he gushed.\n\n\"It's a saree, not a dress... but thank you,\" the woman said, her tension replaced with surprised pleasure. Her lips now held a pleased smile. She moved forward, and Henry tore his eyes away to look to the younger sister. Once more, he found himself staring, as the young woman, who he'd only ever seen in baggy t-shirts and yoga pants, was also wearing a saree, but hers was black accented in gold and left the tight muscles of her midriff exposed. Her long black hair was teased up with only a few curls framing her lovely face. The whites of her dark eyes were accentuated by dark kohl make-up and seemed to sparkle with her amusement. The chain she usually wore between her nose and nipple was missing, but the impressions of larger piercings on both nipples were clearly visible against the tight fabric.\n\n\"You look-- amazing too, Kali!\" he finally managed as she moved inside. She demurely dipped her eyes to him with a satisfied smile.\n\nMahati turned back to face Henry a short distance down the hall. \"It's my understanding that for housewarming parties, it is customary to bring a gift. You refused this?\"\n\nHenry nodded. \"We agreed to suspend that particular tradition this time. Your time and presence are enough of a gift.\"\n\nThe woman nodded with another pleased smile and went the rest of the way down the hall to turn left and join the others in the living room. Her sister followed with a sly smile on her lips. He didn't really understand Kali's intentions, so he'd have to keep an eye on her. She seemed to enjoy shaking things up.\n\n\"Hi, Henry!\"\n\nHe turned back to the open door and saw Mary Carston standing next to Roy. They were both wearing commando black, and he raised an eyebrow. Mary smirked as she looked down at herself.\n\n\"Yeah, Roy mistimed the duration of our training camp with his pa\u2014 with his team. We came straight here from there, so you get us in our combat gear.\" Roy had the good grace to seem apologetic, at least.\n\n\"You two are welcome in any outfit,\" Henry said with a smile. \"Please come in!\" He gave Mary a warm hug and a kiss on the cheek, then surprised Roy with a hug. They took off their combat boots and slipped on the slippers. Slightly shaken, Roy stopped by the candle and looked back at Henry. \"Speak to Tish about the candle, but yes, it gives off the scent of a mountainside meadow.\"\n\nHe heard the elevator ding and poked his head out the door to smile at Camila, Marisa, and Siobhan as they approached. All three looked gorgeous, but the mother and daughter Succubi exuded a little extra confidence. All three wore sleek, body-flattering party dresses, and they looked like they spent the day at a salon. The Succubi had a natural ability to dazzle the eye, but today they had a glow about them, which Henry knew was due to Friday's... feedings. Both ladies had individually asked Henry for a recharge. Camila took him in her office, and Marisa surprised him with her request in his office. Both were fully charged. Henry's face warmed as he recalled their appetite yesterday.\n\nHe forced his attention to Siobhan, which wasn't too difficult as she was also stunningly lovely with soft brown eyes, a megawatt smile, and her long waves of gleaming mahogany hair. As she could now manage its length with some limited control over her link to Wild Magic, she'd begun to let it grow, and it now reached her mid-back. Its natural length reached her ankles, but he doubted she would allow it to be that long day-to-day.\n\nLike Camila and Marisa, Siobhan had been upgraded by exposure to Wild Magic. She was a Selkie and now no longer needed to carry around her magic-infused pelt in a purse as it had become her hair. She only needed to will it to become her pelt to transform herself into her seal form.\n\nShe'd initially been exposed to the new magic by a man who wouldn't be attending the party tonight, Nate Walker. There'd been no sign of Henry's latest friend since Queen Mab took control of his mind and used him to escape. The suspicion was that Mab still had the Incubus with her in her castle in Ireland, but the impregnable fortress was locked tight. That was something else that troubled Henry's dreams.\n\nThe ladies reached his door, and each gave him a sensual kiss before going inside. While he'd expected it from the Succubi, he was a little surprised by the passion in Siobhan's kiss as Henry hadn't been intimate with her... directly, though he'd helped her complete her upgrade with Marisa's assistance. He blinked at the cheeky smile she gave him over her shoulder as she dropped her shoes, slipped on the guest slippers, and joined the others in the living room.\n\nHe locked up and moved to the entrance of the open space. He panned his eyes over his friends, and aside from Meixiu, all were present and accounted for. They were all making themselves comfortable on the couches and chairs. He joined Tish and took drink orders to ensure everyone had a glass in their hand ranging from cool spring water to fruit juice to twelve-year-old scotch for Roy and Mary. The veggie trays were being enjoyed as well.\n\nThe knock on the door caught him by surprise as he was pretty sure he hadn't invited anyone else. With a glance at Tish, he went to the door and looked through the peephole. He blinked in surprise and pulled the door open. Two ladies stood there in their complimentary colored party dresses, looking so sweet and innocent. If it hadn't been for Yuko's penchant for trying to kill him with her Kitsune magic, he'd have let down his guard. Instead, he looked at them cautiously.\n\n\"Yuko. Jun. You both look very lovely today...\"\n\n\"Are you going to invite us in?\" Yuko asked, her voice trembling just a little. Jun hooked her little finger around her sister's and settled her older sibling's nerves.\n\nJun tilted her head at Henry. \"Kali invited us to your party. She did not inform you.\"\n\n\"Ah... no, she did not. But... she would not,\" Henry sighed gently, and Jun's eyes twinkled with amusement. They were both aware of the dark beauty's enjoyment of generating chaos.\n\nHenry nodded to himself. He could rise to this challenge. He faced Yuko, whose eyes looked troubled. \"I welcome you two to join the party, but I ask that you refrain from activities of an explosive nature.\"\n\nJun burst into giggles at Henry's careful choice of words, and even Yuko cracked a smile, looking up at him sweetly from under her bangs. Her eyes twinkled a little as well.\n\n\"Agreed,\" the older sister said quietly.\n\n\"Then please come in,\" he said, standing aside.\n\nThey stepped inside and waited for Henry to close the door and lead them to the living room. He caught Kali's eyes immediately, seeing her anticipation, and raised an eyebrow. The young woman grinned as her sister looked at her in disapproval. When Yuko and Jun came around the corner, conversation lulled as all eyes looked in their direction.\n\n\"Some of you know or know of Yuko Imamura and her sister Jun. They live on the seventh floor. Please make them feel welcome,\" Henry said. Eyes went to him next, and he nodded to his friends.\n\nTish gestured for them to come further into the room and offered them a drink. They both indicated white wine, so she busied herself with getting that while Henry found them chairs to sit in. When he had his last two guests situated, Meixiu appeared in the doorway with a shy look on her face. She hustled over to squeeze herself between Sigrid and Marisa on one of three sofa's Tish and Henry filled their new place with. He got her a glass of spring water, which she accepted with a grateful smile.\n\nHenry and Tish moved to stand by the kitchen island, facing their friends, and raised a toast.\n\nHenry cleared his throat, and all eyes went to him. Once, that much attention would have crippled him with stage fright, but these were his friends, something else that was relatively new for him. He felt wealthy beyond measure for having so many and being comfortable with them. He missed Nate, but he pulled his mind from those thoughts.\n\n\"Thank you all for joining us in our new home. If it weren't for the incredible generosity of Camila and her company, VRL, and the efforts of Sigrid to make the deal, we would not have had the opportunity of living here.\" There was a polite round of applause for the two ladies. \"I'd also like to take a moment to reflect on the humbling and often frightening nature of fate that made this unit available. I hope the terror responsible for these murders is quickly caught and brought to justice for the sake of the victims and their families.\"\n\nEveryone followed Henry's lead and raised their glass to join the toast.\n\nOnce done, Roy spoke up. \"We offered to join the Council's efforts to hunt down the killer, but they refused,\" he said as Mary nodded. \"Instead, they're insisting on a curfew for all Hidden Races members who don't need to be outside at night.\"\n\nMichelle nodded. \"The Council has confirmed that five of the six victims have been members of the Hidden Races. They believe the first Human was likely a mistake since all others have been non-Humans, and there are so many more Humans out there. Five to one seems like a pattern.\" Henry was pleased to see how comfortable Michelle was becoming amongst their group. Not that long ago, she was almost crippled with shyness when asked to speak before people.\n\nMary looked at her. \"So, the human murdered at the first crime scene was just collateral damage?\"\n\nMichelle nodded again. \"The trauma to the Human's body was much less severe.\"\n\nRoy wasn't finished. \"I don't understand the Hidden Races Council's thinking on this. New York is just too big to cover everywhere this monster hunts, even with the number of agents they have at their disposal. They should incorporate our teams. The packs that live around the city are all willing to participate.\"\n\n\"The Council likely has enough trouble keeping their teams invisible to the Human police patrols,\" Camila offered.\n\n\"I think you've hit the nail on the head when you said monster hunts. Based on what I've heard from my contact within the Coroner's office, I believe the killer is feeding off his victims,\" Sigrid added.\n\nSeveral people squirmed uncomfortably hearing this.\n\nMichelle spoke again. \"Some of us work nights, but I take cabs and keep to the well-lit main roads. This seems to be a good way to avoid danger. So far, all of the victims were attacked outside, at night, in darker neighborhoods.\"\n\nMary frowned as her former police detective skills were intrigued by the case. \"There doesn't seem to be a pattern for their preferred location. The first murders were here in Jersey City. The second scene was in Brooklyn, then Manhattan, Queens, and finally Yonkers.\"\n\n\"That's a lot of territory to cover. How are they getting around? Do they have a car?\" Roy then looked at Michelle. \"Taking a taxi may not be as safe as you think.\"\n\n\"Roy!\" Camila scolded.\n\n\"What? They may be driving a taxi. That would explain how they're in so many locations,\" he explained. \"No one pays attention to another cab on the road.\"\n\nMary shook her head. \"That theory only works if the victims were traveling to someplace distant. The first Hidden Races victim was a block from his home and walked there with a friend, who was also killed. Were the other victims far from their usual routes?\"\n\nMichelle paused as she recalled the reports she'd read. \"No... all of the victims were close to their homes or businesses or directly between them.\"\n\nMary looked at Roy. \"So, the killer may be using a cab to get themselves around the city, but they aren't using the vehicle to lure their victims to these dark spots to commit the crimes.\"\n\n\"The Hidden Races aren't easy targets. We fight back! Wielders will use their abilities against attackers!\" Yuko suddenly blurted.\n\nRoy responded. \"We don't know anything about the killer except they may be able to see through glamors to identify non-Human targets. Five to one is a pattern. They cause vicious damage to their victims, and as Sigrid mentioned, they seem to consume parts of their victims. I suspect they're Hidden Races themselves and have claws and teeth like a Werewolf. I can't speculate on their motive.\"\n\n\"No one can see through glamors! That's impossible,\" Yuko insisted.\n\nDayshia began to chuckle. \"Nothing is impossible, girlie.\" She dropped her glamor, and her gorgeous, oversized eyes flared with brilliant blue, green, and gold light from within. \"Oh! What lovely and colorful tails!\"\n\nYuko's eyes widened. \"What are you?\" she gasped.\n\nDayshia smiled gently at her as she switched back to her Human glamor. \"We don't know. Even Baba Yaga didn't know.\"\n\n\"Ahhh! Di' ye hafta mention her name?\" Roy snapped in annoyance as he glanced around, looking for shadows.\n\n\"Roy, you know she's not likely to show her face around Henry any time soon,\" Sigrid complained.\n\nThe big redhead glanced over at Henry and seemed to calm himself. \"Right, tha's true. Sorry, lad.\"\n\nHenry shrugged. He was aware that Baba wasn't going to visit him as she'd stolen his daughter from him. She hadn't completely driven a stake into his heart to kill his love for her, but their relationship was... severely strained, to put it mildly.\n\n\"If we can put a bookmark in the discussion about the serial killer, has anyone heard anything about a certain mad Queen?\" Marisa asked the group but seemed to be directing her attention to Michelle, who was privy to the Council and seemed willing to share. Henry knew she missed Nate. He missed Nate too! They both suspected Mab still had him.",
        "\"The Fae are no longer restricting themselves to work to rule or house arrest. Last month they went back to their day to day routines and actually seemed more cooperative than before, with one exception. Any requests for information about Queen Mab is met with silence. They won't or can't speak about her. It's almost like she doesn't exist for them.\" Michelle gave Marisa a sympathetic look.\n\n\"She broke the deal.\" Eyes turned to Mahati, who continued. \"When Queen Mab enacted her spell at the party, she broke the deal Henry made with her for the glamors for his friends. She requested three favors in return. The deal I brokered was simple: The favors cannot, in any way, impinge upon Henry's physical or mental freedom. They must not, in any way, endanger him physically or mentally. And those two conditions also applied to those Henry considered important to him.\"\n\nShe watched that sink in with the other guests. \"Mab used up her first favor making Henry assist with the healing of the Ogre. No risk there. A simple exchange. The second favor was participating in the Fertility Ceremony. It was during that event that she broke the deal. She intentionally bound him against his will. This act impinged upon his freedom. Then she had his child and took its body, leaving the child to die of old age. This act physically endangered someone Henry considered important to him, his daughter. When he attempted to protect the child, she attacked him with her magic. This act endangered him physically, which broke the third and final condition of the deal.\"\n\nThe others were realizing how severely the Queen broke the deal, an unthinkable breach for a Fae.\n\nMahati nodded to Henry. \"Shortly after the night of Queen Mab's party, I filed a grievance against the Queen with the Fae Court, outlining the terms of the deal and the actions she took which broke all of its conditions. The court called one witness: Ikehorn, Queen Mab's former Enforcer. He confirmed the charges. The sanctity of honoring a deal is the cornerstone of Fae society. They aren't above finding a loophole in a poorly worded deal to wiggle out of having to fulfill their side, but our deal was solid and not open for interpretation. The court found their Queen at fault. Mab has been dethroned. They won't speak of her again. Unfortunately, this also means they won't help us get Mr. Walker back.\"\n\nThe room was quiet as everyone stared at Mahati incredulously. Henry moved to stand before her then knelt at her feet. He took her hand in his and looked her in the eye. \"Thank you for this justice for my daughter.\" He kissed her hand as she watched him with wide eyes.\n\nCamila's mouth was open in shock, but nothing was coming out. She gave herself a shake. \"You went after the Queen of the Fae in a Fae court?!? You do realize if you lost the case, your life would have been over, and that would have been the best-case scenario!\"\n\nMahati was trapped by the admiration in Henry's eyes. It made her feel a little drunk, and his touch was sending unfamiliar but intriguing tingles throughout her body. Her face was flushing once more, so she tore her eyes away from him and looked to Camila. \"I couldn't lose this case. My evidence was unquestionable, the deal was simple, concise, and watertight, and the crime perpetrated could not be ignored by the court. I also spoke with my mother to get her opinion of the Fae Court's current political climate before presenting my case. Mab's recent decisions have put her people at risk multiple times. There wasn't a better time to file the charges against her.\"\n\n\"Well, you certainly have a pair of brass ones on you to take on the Mad Queen on her home turf,\" Roy said with a wry grin.\n\nSigrid nodded. \"Your confidence is admirable, but nothing is straightforward with the Fae. You took a major gamble, and thank the stars above it worked. This time.\"\n\nMahati huffed at the fear in their voices. She looked back to Henry, who was still watching her with awe in his eyes. She smiled as his hero-worship made her efforts feel so worthwhile. She'd never felt so good about her work before.\n\n\"Henry, let's serve the hors d'oeuvres,\" Tish said, drawing his attention away.\n\nAs he sent one last smile to Mahati on his way to the kitchen, he missed Yuko staring daggers at the dark-skinned woman.\n\nKali's subtle smile said she didn't.\n\nChapter 2\n\nColonel Gordon Crane leaned back against the seat cushions in the executive jet the army used to take him to and from Washington, DC, for his debriefings. Due to the sensitive nature of his mission, this was the best method for his travel. He assumed this was how his former commander, Colonel Devlin, made his reports as well.\n\nHis mind flashed back to the day Devlin lost his life to something not born on this Earth. That little fact wasn't widely known. Whatever the hell that black ribbon creature had been, he knew it hadn't originated on the planet he called home. For him, it was the unequivocal proof that Devlin was right, they were at war, and for the first time, the enemy wasn't us.\n\nIt was shortly after that tragic event that he'd been called to Washington for his first debriefing. He realized now how unprepared he'd been for what came next.\n\nThen, he'd been First Lieutenant Gordon Crane, but he'd learned upon his arrival at the Pentagon that he'd been promoted to Colonel. He waited for the other shoe to drop. In his experience, rapid promotions only came in times of deep peril.\n\nHe'd been ordered to get everyone out of the town and personally report to the Colonel's chain of command in Washington, immediately. Before he left, he'd delegated the task of bugging out to his next in command and headed for the closest airport. He'd had to run a gauntlet of the press, but he smartly kept his mouth shut. Next, he was sitting in a windowless meeting room somewhere in the bowels of the Pentagon, across the table from three very grim-faced men in dark grey suits. He only recognized the Director of Homeland Security, Stephen Dawes. The other two were unknown to him. The conversation came back to him.\n\n\"Colonel Crane, do we have containment?\"\n\nGordon looked to the speaker. \"Yes, Director. The town was evacuated immediately upon our arrival. Most civilians were unconscious, and none of the conscious were in the proximity of the stadium. There are no civilian witnesses. Unfortunately, there's no sign of the glass entities.\"\n\nAfter the... flying creature escaped from the gymnasium and massacred some of his teammates and Devlin, they'd opened the gym to find it empty.\n\nWhere the glass entities went was a mystery, as was where the flying creature came from.\n\n\"We received word that the Chinese troops are leaving the remote province empty-handed and minus their leader as well,\" Dawes admitted, and Crane stared at the men in surprise. \"Apparently, a doorway opened and the glass being stepped through.\"\n\n\"When did this happen?\" Gordon asked.\n\n\"We understand it was the same night ours went missing,\" the Director replied.\n\nCrane thought about that. \"A globally coordinated extraction?\"\n\n\"By who? Did anyone get past your people?\" Dawes asked, and Crane shook his head definitely.\n\n\"No, sir. The gym was built on a solid concrete pad. We had soldiers on the roof of the gym and a full guard encircling the building. The building was sealed. Unless... unless this doorway was opened inside the gym from the other side. The location the entities were moved to,\" Crane suggested.\n\nOne of the other men finally spoke. His voice was like tumbling gravel, and he had a thick southern accent. \"Shit, that's a nightmare scenario I'd rather not consider. Doorways that open in our most secure locations, bypassing all security measures?\"\n\nGordon could only nod. The idea gave him chills too.\n\nThe third man finally spoke. He was tall and handsome, but his smile was slightly crooked. There was... a look in his eye, or maybe it was his body language, but something made the hair on Crane's neck stand on end to be the man's focus of attention. \"Colonel Devlin spoke highly of you. He placed a great deal of faith in your abilities and judgment. We depended on the Colonel to spearhead some sensitive missions where our society's very stability was threatened. Can we rely upon you to the same degree?\"\n\nGordon Crane was no fool. He knew the stakes Colonel Devlin played for, and some of the decisions the man had made led to questionable actions. This thought led him to recall their previous mission. That said, he had no doubt in his mind there was a greater good Devlin had been working towards in every case. Devlin never shared those decisions with anyone. Now, Gordon was being asked to follow in the man's footsteps to protect his country. He might not make the same decisions as Devlin did, but putting his country first?\n\nHe could do that.\n\n\"Yes, sir,\" he said with conviction.\n\nThere was a subtle easing of tension in the room.\n\n\"We need you to get a handle on these pseudo-cloud creatures. We need to contain them, control them, or find a more efficient way to eliminate them. Just let us know what you need, and we'll get it for you. Report only to us. This is top secret at the highest clearance level, and there must be no hint of this in the press or the public. Is this understood?\"\n\n\"Yes, sir.\"\n\nThe Director opened his briefcase and slid a dossier across the table. \"This is everything we know about the creatures.\"\n\nGordon saw the docket wasn't very thick. He glanced inside and saw the data on the first plane-pseudo-cloud collision was in there. As was a report on the Chinese glass entity.\n\n\"Have your troops been evacuated?\" Dawes asked.\n\n\"I received word when I landed in Washington that they've left the town and have moved the quarantine zone out to a five-mile radius,\" he reported.\n\n\"The town will be sterilized to ensure nothing is left behind and to validate the cover story,\" the man with the gravelly voice said.\n\nGordon thought that was overkill and would generate more attention, but he wasn't being asked his opinion. He nodded.\n\n\"There seems to be a number of the larger pseudo-clouds congregating in Missouri. You might want to take your team there to start. Thank you for taking on Colonel Devlin's mission.\"\n\n\"It's my honor, Director.\" He stood as the briefing was obviously over. He placed the docket in his briefcase, locked it, and then nodded to the men and left the meeting room.\n\nHe had his marching orders, and he'd much rather be out in the field than in some stuffy meeting room any day.\n\nToday, Gordon was once again returning from that meeting room. The pseudo-clouds' incursions were increasing, and months after that initial meeting, they still had no definitive plan for stopping them. They'd discovered it was possible to kill them, but their current methods were inefficient and not always successful.\n\nMeanwhile, there'd been some disturbing news from the other side of the world. A colossal breach had formed over the south pacific midway between the islands east of Australia and west of Fiji. It was caught by the satellite cameras of the Climate Research Division of the EPA. Where previous breaches let in individual pseudo-clouds, this one gave birth to a monster. The cameras were now tracking the vast cloud bank's trajectory, taking it eastward towards Wallis and Futuna, seemingly flying against prevailing air currents. Then it was discovered to be releasing smaller pseudo-clouds on multiple vectors. It was being likened to a flying aircraft carrier, only twenty times larger than anything the US had on the seas. They would have to do something about it before it got too close to the US west coast.\n\nMore disturbing were the stories of entire populations of remote Pacific island chains disappearing after these storms passed overhead. There's no sign of them or foul play, and their boats remain where they left them. No clues were left behind to explain their disappearance at all.\n\nCrane's current mission had him heading back to the wheat belt, Nebraska this time. His team's research into the pseudo-cloud's internal anatomy was looking promising. They'd had the eggheads in engineering build them some new mapping radar tech. They planned on using it to discover what was inside the fluffy masses that let them direct their movement and store the energy they used to zap each other.\n\nSatellite imagery showed two massive beasts moving towards each other, and they'd likely meet tonight at dusk.\n\nHe and his team intended to be there to meet them.\n\n-=-\n\nThe huge clouds rumbled and collided above the expansive wheat fields as Sam sat in his harvester watching from the edge of the property. Bolts of lightning occasionally shot down between them to strike the ground, and he grinned each time he saw it.\n\nHe'd been a storm watcher since he was a little kid. While his sister would run and hide under her blankets, he'd be right there by the window, taking it all in, fascinated and excited at the same time.\n\nThese new storms, though, he'd never seen anything like them. The clouds seemed... different. They didn't behave.... normally. They seemed to move with a will of their own. He'd even seen them move against the wind!\n\nThe two thunderheads he was currently watching looked like they were bumping chests threateningly. Well, that's what it looked like to him.\n\nHe picked up the mic on his radio to call his buddy Jake in the harvester idling next to his.\n\n\"Do you see them? They're fightin'!\" he gushed.\n\n\"Sam, they're clouds. Clouds don't fight. Hey! Didn't you hear that guy on TV last night? He explained this. It's just oddly charged ions accidentally released from that Commie nuclear power plant over in Russia. The stuff got up in the sky and collected in the clouds. I'm not buying that it was accidental, though!\" his friend grumbled. Jake was convinced the Ruskies were the source of most of their woes.\n\nSam hadn't watched TV the night before as he'd been driving the back roads with Jeannie, his wife, who was also an avid storm watcher. She liked to make love in their truck while lightning flashed in the skies above them. His mind took him back to how wild she'd been last night.\n\nJake's voice interrupted his sexy thoughts. \"The science guy said there was no danger from radioactivity, but the ions were makin' the clouds push other clouds with the same charge. Like magnets.\"\n\n\"Magnets?!? Pffft! What a load of crap that is!\" Sam scoffed. \"These clouds ain't behaving like magnets. I'm tellin' ya, they're alive and acting like... like...\" he strained his mind to think of a creature Jake would recognize had the same behavior.\n\n\"Walruses.\"\n\nSam burst into laughter at Jake's quiet, almost reverent, suggestion. He looked over at the man in the cab of the other big farm machine and was glad he hadn't pressed the mic button. His friend was watching the vast clouds bumping each other, and his mouth was hanging open in awe. Sam was more than a little impressed with his friend's ability to take that leap. He pressed the button. \"Exactly! It's like they're fightin' for dominance!\"\n\nJake looked over with a grin. \"King of the Clouds?\"\n\nSam shared a laugh with him.\n\nSuddenly the sky flashed a brilliant blue-white, and the ground below their machines hummed loudly. The engines shut down on both harvesters, and the lights went off. They looked back at the towering clouds to see one had an enormous rip down its side. It began to slowly drift lower. Sam noticed the other cloud was rising twice as fast as the wounded cloud was falling. Rain began to hit the harvesters' windshields and seemed to be coming from the rip in the dropping cloud.\n\nHe cracked open the side window and saw Jake do the same. \"Does that look like a wound to you?\" Sam called out across the gap.\n\n\"Shit, yeah. Is this rain supposed to be the cloud... bleedin'?\" Jake replied, his voice strained by wonder. \"What's the rising cloud doi\u2014GEEZUZ!!!\"\n\nWhile they'd both missed the lightning strike that caused the gash, they got an eyeful of the next. An enormous bolt of pure white light shot down the side of the rising cloud to stab deeply into the dropping one. There was a second flash, this one yellow and coming from the core of the injured cloud. An enormous fireball erupted upwards following the path the bolt had carved. The upper cloud was now in trouble as the flames climbed up its outer surface. It released a deluge of rain after a moment, shedding its outer layer to cool the rising fire. The victorious but now smaller cloud moved off to the south.\n\nAs Sam and Jake sat in their harvesters gawking at the light show overhead, the rain began to taper off.\n\nThe cloud that... exploded was quickly thinning out into a misting rain. Sam spotted something a little more substantial and shiny drifting down to land in the field not too far ahead of them.\n\nHe suddenly had a burning need to see that... thing from inside the dead cloud.\n\nHe needed something to carry whatever he found, so he grabbed his lunch bag and took his sandwiches out of the resealable container Jeannie had packed them in. She always put his lunch in sandwich bags, then the rigid plastic container to keep him from squishing them, then that went into his lunch bag. For once, he was grateful for the extra packaging. Dropping the now empty container in the lunch bag, he opened the door to his harvester and stepped out, item carriers in hand. The mist cooled his skin as he turned his face up to it. It felt good!\n\n\"Sam! What the hell are you doin'? Get back inside! You don't know what that stuff will do to you!\" Jake yelled from the now open door of his own machine.\n\n\"It's just water! Besides, didn't you say the science guy said it was harmless?\" Sam grinned at his friend. He climbed down from the cabin to the ground and set off across the field while he still had light to see with the late afternoon's setting sun poking under the clouds from the horizon.\n\n\"Dammit, Sam! Wait up!\" Jake called out.\n\nHe waited for his friend to catch up, then the two men walked out into the field.\n\n\"Where are we going?\" Jake asked, turning the brim of his baseball cap to keep the rain from his face.\n\nSam wiped his own face and pointed to a spot not too far ahead. \"Something fell out of the dead cloud,\" he said and grinned at Jake's cautious look.\n\n\"Why are you bringing your lunch?\"\n\nSam snorted. \"I'm not. Just the container in case we find something worth keeping.\"\n\nJake nodded at his friend's quick thinking.\n\nThey came upon a sizeable ring-shaped scorch mark in the wheat and stopped beside it. The burned section was a good three feet from its outer to inner edges, and the inner circle itself had to be around twenty-five feet across.\n\n\"What the hell is this?\" Jake exclaimed.\n\nSam looked at it, then looked up. Glancing back at the distance they were from their harvesters, he smiled. \"I got it! This is where the first lightning bolt from the surviving cloud touched down. It musta been a tube!\"\n\n\"Well, it burned the wheat to a crisp!\" Jake growled.\n\n\"Yeah, but look at the growth inside the burn! Look how healthy it is!\" Sam gushed.\n\nThey walked around the scorched zone and admired the tall, strong stalks. All the wheat was much taller and healthier than it usually was this time of year. They didn't normally harvest this early in the season, but the grain was ready, so they had to be, too. Sam turned away and hurried on to the spot where the shiny substance fell. Jake caught up to him and looked down at what seemed like aluminum foil.\n\n\"Tin foil?!? We came out in this rain to look at tin foil?\" Jake complained.\n\nSam scowled at him. \"It was inside the cloud! That means something! Maybe it's like one of those foil party balloons! Or a weather balloon! This could prove they're man-made! Maybe there's some kind of radio control receiver nearby!\"",
        "Jake's expression suddenly turned angry. \"It's the damn Ruskies! They're sending drone clouds over here to... to...\"\n\n\"Zap our wheat?\" Sam asked, suppressing his grin.\n\n\"Yes! Zap our--\" Jake caught the amusement in Sam's eyes. \"Fuck you! What's your idea then?\"\n\n\"Ain't got one yet. I need more information. Help me look for the controller. It should have fallen in the same place as this shiny stuff or close by.\"\n\nThe two men carefully inspected the ground. Sam paused to use a broken wheat stalk to poke several foil strips into one compartment of his plastic lunch container. The foil was so thin, he was afraid touching them with his fingers might tear it. The box protected it well enough, and he slipped it back into the lunch bag.\n\n\"Sam! I found something!\" Jake yelled out.\n\nSam hustled over to Jake's side to see what he was looking at. Hanging on some bent over wheat stalks was a thin mesh of fine gold threads roughly two-foot square. At each thread intersection was a flat, oval translucent stone that glowed with a faint yellow light. The gems had stuff embedded in them like... like...\n\n\"Is that amber? The stuff prehistoric bugs got caught in?\" Jake asked, and Sam gave him another impressed look. Jake had been watching the History Channel. He took a closer look. It did look a bit like amber.\n\nThe mesh wasn't connected to anything, so Sam lifted one corner while Jake got the other. A burst of light exploded outwards from the mesh, and the two men found themselves on their backs in the wheat.\n\n\"What... what happened?\" Sam asked as he sat up. His eyes widened as he saw they were quite a distance from where they'd been.\n\n\"Whoo boy! That amber packs quite a punch!\" Jake said with a silly grin as he sat up.\n\nSam snorted as that tickled his funny bone for some reason. He was all smiles, too, though he didn't know why. Both of them were now thoroughly soaked as the rain seeped into the ground.\n\nSam stood and helped Jake up as well. They walked back to the mesh.\n\nJake peered closely at it. The mesh had split in quarters, and two of them, the sections Sam and Jake touched were no longer glowing. The remaining two pieces still had a glow.\n\nSam spotted his lunch bag on the ground. He dumped the container out and used the bag as a glove to pick up one of the lit mesh sections. This went into the second compartment of his plastic container, which he sealed tight. Then he put the second lit piece in the lunch bag for Jake. He left the dull sections on the ground.\n\n\"I'm going to get a couple of pieces of the foil for you and Brenda too. Souvenirs. May be worth something someday!\"\n\nJake smiled at him gratefully as Sam used his broken wheat stalk trick again to push a few strips into the lunch bag and handed it to him.\n\n\"Thanks!\" Jake said, then looked down at their sodden clothes. \"I guess we should go home and get some dry clothes before we go back to work.\"\n\n\"Yeah...\" Sam said, then grinned wickedly. \"I'm gonna give Jeannie a big ol' wet hug first!\"\n\nJake started to chuckle then laugh as that seemed hilarious. He wasn't sure why he felt so good, but he decided Brenda would get a big wet hug, too. \"Let's get outta here!\" he said. Sam nodded with a big grin on his face. Obviously, he was also feeling pretty damn good!\n\nSam carried his container and Jake, the lunch bag, as they walked back to the harvesters. The wheat they moved through was tall and healthy, and they found no sign of the scorched ring or the circle of taller wheat they'd spotted earlier. That spot had spread outwards, and the crops around them had taken on the health and tallness of the stuff they'd seen in the circle. They shrugged and began to run towards the big machines. As it felt so good to run, they went right past the harvesters and continued down the lane between the fields. They ran faster and faster, laughing with each other in their delight. When they reached the parking lot, they hopped into their trucks and waved to each other as they went their separate ways.\n\nSam just lived a few miles down the road in a small trailer set back from the highway. He parked and ran to the door with his container in hand. He stepped inside, and Jeannie looked up in surprise from her seat on the couch. Petite but plump and sexy, she beamed a smile at her husband.\n\n\"What are you doing home so early!\" she asked with a grin. She caught sight of something glowing in the container he dropped on the seat of the recliner next to the door.\n\nHe kicked off his boots and moved to the couch to drop his body on top of hers. She immediately began to squeal.\n\n\"Sam! You're soaking wet! You're getting me all wet too!\"\n\nHe chuckled wickedly. \"Am I getting you all wet, baby? Are you all juicy for me?\"\n\nHer eyes flared with hunger as he ground the bulge of his swelling cock against her pussy through her thin panties.\n\n\"Oh fuck, that feels so good!\" She moaned and clung to him, any concerns of being wet lost in her need for him. \"Get those wet things off and fuck me!\"\n\nSam smiled and pulled his shirt off.\n\n\"Ooo! Sam! You're all shiny!\" Jeannie purred as she ran her fingers over the wet skin on his chest and stomach. A puzzled frown appeared on her face. His muscles felt firmer than last night.\n\nSam stood and shucked off his clothes so fast she couldn't follow it with her eyes. Then he was pulling her panties off. She began to giggle nervously as he was moving so fast. That giggle became a moan as he stretched his body over top of hers and drove his hard cock deep inside.\n\n\"Ohhh! Fuck baby! Slow it down! Make it last!\" she sighed.\n\nSam tried, but it felt so good, and Jeannie was so hot and wet for him. His hips began to move faster and faster, slapping their bodies together.\n\n\"Fuck! Oh! Ssstop! AH! Baby! Slow! AH!\" Jeannie was overwhelmed by the intensity of her orgasm, which rushed up on her from the rapid slaps to her clit. \"FFFFUUUUCCCCKKKK!!!!\" she wailed as she clung to him, feeling his heat firing into her. That felt so good as well.\n\nThey lay together panting in the afterglow, and Sam smiled down at her. \"I love you, sexy woman!\"\n\nShe beamed a huge smile up at him and pulled his face down to hers to kiss him. When he pulled back, she gave him a little push. He got the message and pushed himself up to sit back against the couch's armrest while she sat up against the other end.\n\n\"Why are you home early, and why are you... we, soaked?\" Jeannie asked as she wiped the water from her face. She looked down and saw her skin was all shiny too. She pulled off her sodden shirt, and her fat tits were slick with the wetness as well. \"How did I get so wet?\"\n\n\"Jake and I watched two of those strange clouds I told you about. They were dukin' it out over the field we were going to harvest. One killed the other one, and this ain't rain darlin', it's cloud blood,\" he said with a big grin.\n\nShe gave him a smirk and shook her head as she stood. \"Cloud blood is rain!\" she snorted in amusement. She walked over to the recliner and admired the glow coming from the container. She reached down and popped the lid.\n\n\"Jeannie, wait--\"\n\nShe touched the mesh, and a flash tossed her across the room to hit the couch. It went over, taking the two of them with it. Sam was immediately at her side, gently pushing the hair back from her face.\n\n\"Jeannie? Baby? Jeannie!\" he nervously called to her.\n\nHer eyelashes fluttered as she resurfaced, then flew wide open. \"What? What?\"\n\nHe helped her stand, and she was trembling on her feet. \"You okay, baby?\"\n\n\"I'm tingling!\" She scrambled to look over the couch at the recliner. The stones were no longer glowing in the mesh. \"What was that thing?\"\n\n\"It fell out of the cloud along with the foil,\" he explained.\n\nShe looked at him incredulously. \"It came from the cloud?\" He nodded with an excited smile.\n\nThey righted the sofa, and she made her way back to the mesh, which was now on the floor. She looked to the chair and picked up one of the silver strips as Sam gently picked up the other one.\n\n\"Careful, it's super thin, but like tin fo--\" he began, then realized the material was melting in his fingers. It was combining with the wetness on his skin... and spreading! He looked at Jeannie, and the silver was already up to her shoulder. She was trying to wipe it off, but it just stuck to her other hand. He looked down at himself and saw the silver was spreading across his chest.\n\n\"Sam?\" Jeannie called out with a nervous tremor in her voice.\n\nHe looked at her again, and it was covering her face and soaking into her long hair. She wasn't panicking or having trouble breathing, and she seemed to be able to see as she watched it move down her body. \"Are you feeling okay?\" he asked.\n\nShe nodded cautiously. \"What is this stuff?\"\n\n\"I-I have no idea, but I gave some to Jake, and he's gone home to see Brenda. I gotta warn him!\"\n\n\"I'll go with you!\" she insisted and shot away to the bedroom to get dressed. There was a loud crash, shaking the entire trailer, followed by almost hysterical giggles.\n\nSam rushed into the room to see Jeannie picking herself up from the floor. The bedside table was smashed to splinters. \"What happened?\" he asked.\n\n\"I ran in here and was going too fast to stop!\" she gasped, her silver eyes wide with surprise.\n\nHe looked at the mirror above the dresser and gasped. He was also covered head to toe with silver. He looked back to the destroyed furniture and Jeannie.\n\n\"Are you hurt?\"\n\n\"No! I-I feel fine! Not a scratch. Sam... I feel fast!\" she grinned. \"I-I want to run!\" she said with her sweet giggle.\n\nShe pulled on her sweat pants and sweater, and he put on his jeans and a t-shirt.\n\n\"Come on! Let's go to Jake's!\" Sam said and reached out a hand.\n\nThe moment Jeannie placed her silvered hand in his, he felt their minds link. He stopped and looked at her as she gazed back at him in wonder. \"I truly never knew how much you loved me until this moment,\" he whispered in awe. She gasped and pulled him to her to kiss him fiercely. He was a foot taller than she was, so he had to bend down to do it, but he'd kneel at her feet for the rest of his days if she asked.\n\nShe pulled back from him and looked into his reflective eyes. She saw herself there and him in her reflection. A convergent series of smaller and smaller images were inside each reflection. It was breathtaking and dizzying. \"More kissing later!\"\n\nThey rushed from the bedroom, slipped on their shoes, and left the trailer. Sam looked at the truck. \"Drive?\"\n\n\"Run!\" she grinned, and he nodded happily. She'd never been a runner as her chunky body was just too fleshy and heavy to make it enjoyable. Now? It felt like nothing was holding her back.\n\nThey released hands and started off relatively slow. Jeannie was elated to discover nothing hurt as her silver covered body shook and quaked. Giggles burst from her again.\n\n\"Faster!\" she gasped, and it was Sam's turn to laugh with delight. They picked up the pace, and their shoes flew off. They didn't even slow down. Their feet felt no pain running on the asphalt, and they had excellent traction, so they pushed harder to go faster. Jake's place was only a fifteen-minute drive down the highway. They let themselves accelerate again.\n\n\"Whoa! We almost passed the house!\" Sam called out as he grabbed Jeannie's hand once more to pull her onto the dirt lane to Jake's parent's old farmhouse. They stopped on the front porch and grinned at each other.\n\n\"Our clothes! Jeannie shrieked as she saw she was only wearing the tattered remains of the track pants' waistband and strips of the sweater.\n\nSam had a little more on his lower half, but his jeans were shredded, and the t-shirt was gone. He still had his wallet and keys in his pocket, but he didn't think they'd survive another run. Strangely, he didn't really care. He shrugged and tapped his chest. \"Just think of this as a suit of shiny knight's armor... or body paint.\" He thumped on the door as she ducked behind him. \"Jake! It's Sam and Jeannie!\"\n\nJake opened the door and stared at them in surprise. He was covered in silver too.\n\n\"Ah, you touched the silver strip too,\" Sam sighed. Jake nodded with a frown. \"Brenda?\" Sam asked.\n\n\"Naw. She got pissed off when I hugged her and got her all wet. Now she's mad at me cuz she can't dry off, and I can't get the silver off.\"\n\n\"Did she touch the yellow stones?\" Jeannie asked.\n\nJake looked at her, then looked away. \"No. Are you naked?\"\n\nJeannie squeaked in embarrassment and hid behind Sam once again.\n\nSam just looked down at his ripped clothes. \"Our clothes didn't survive the run over here.\"\n\nJake looked past them to the driveway bit Sam's truck wasn't there. \"You ran here? Jeannie ran here too?\"\n\nThe petite but plump woman moved out to face Jake. \"What's that supposed to mean?!?\" she said indignantly.\n\nJake raised his hands in surrender. \"Nothin'! I meant no disrespect! I-- uh...\" He looked closer. \"Have you lost weight?\"\n\nSam and Jeannie looked at her body, and she did look a little slimmer. \"Maybe it was the running. We were running pretty fast! Got here in just five minutes!\" she said.\n\n\"Geezus! That is fast!\" Jake exclaimed.\n\n\"Let me talk to Brenda. You fellas wait here,\" Jeannie insisted and pushed past Jake. She smiled back at Sam then disappeared inside.\n\nJake and Sam moved to the railing and looked out into the darkness. \"I can see everything as clear as if it was day. It's just not so brightly colored.\" Jake sighed. \"What happened to us? Should we be telling someone?\"\n\nSam thought about that and shook his head. \"Naw. I think we'd get in trouble if we did. End up with scientist pokin' things into us. I don't want that for Jeannie and me.\"\n\nJake just nodded in agreement. He didn't like the sounds of that either. \"What do we do then?\"\n\nSam thought about that for a bit, then nodded to himself. \"I want to go back to that field and collect the rest of that silver stuff. It's too dangerous to leave it.\"\n\n\"Dangerous? It's all over us! What do you mean dangerous?\" Jake exclaimed nervously.\n\nSam tried to calm his friend. \"I mean dangerous in the wrong hands. Can you imagine criminals being able to move this fast?\"\n\nJake frowned. \"I don't think it was the silver stuff that made us fast. Coulda been the weird rain or, more likely, the flash from the stones. Still, I agree we should keep this stuff out of anyone's hands but ours for now. What're we gonna do with it?\"\n\nSam just smiled. \"Not sure yet. For now? We'll just collect it and run?\" he shrugged.\n\nThere was a loud crash from inside the house. Jake rushed inside with Sam at his heels. Brenda's tall and lean frame was laying back against the far wall in the living room. The piece of mesh was on the floor, the light no longer emanating from it. Jeannie was picking herself up from where she landed against the opposite wall. She used Sam's lunch bag to pick up the silver foil and dropped it on Brenda's head. It immediately began to melt and spread as it had with Jeannie.\n\nJake looked upset, so Sam patted his friend's arm and strongly picked up the man's emotions. Jake spun to look at him in surprise. \"Oh! Sorry! I should have realized it would work with you as well as Jeannie,\" Sam apologized.\n\n\"Is that some mind to mind shit?\" Jake asked in a quiet voice, and Sam nodded.\n\n\"Freaky, ain't it,\" Sam said with a smile.\n\n\"What!?! Oh! What's happened?\" Brenda gasped as she woke.\n\nJake knelt next to her. \"Hey, how ya feelin'?\" he asked gently.\n\n\"I-I feel... different! In a good way!\" she said.\n\nHe took her hand, and she gasped. \"Oh! Oh, Jake! I love you too!\"\n\nHe kissed her tenderly then helped her stand. Jeannie was grinning at her friend. \"What?\" Brenda asked.\n\n\"Feel like doing a little running?\" Jeannie asked.\n\nBrenda's smile widened. She'd never been athletic, but as a girl, she'd used her long legs to run all over her parent's farm. She nodded to her friend as something in her was eager to re-experience that thrill.\n\n\"Can you get your big thermos?\" Sam asked his friend. He nodded and zipped away to return from the kitchen a second later with it in his hand. Brenda's eyes flew wide in surprise.\n\n\"Yes, we're much faster now!\" Jeannie gushed. She looked at her husband. \"Where are we goin'?\"\n\n\"To the field to get the rest of the silver stuff. Then... I don't know. We can decide later,\" he said. His wife nodded to him with a smile.\n\nThey left the farmhouse and grinned at each other excitedly.\n\nSam looked down at their shoes. \"You won't need those as they just fall off anyway.\"\n\n\"We might as well lose the clothes as they won't survive the run either,\" Jeannie said, shucking the remnants of her sweatpants and sweater as Sam grinned at her, undressing as well. He glanced at his wallet and keys and realized he wasn't going to need them anymore. They just didn't seem important now.\n\n\"Naked? You want me to go streaking?\" Brenda squealed.\n\nJake nodded with a big grin.\n\nGiggling nervously, Brenda dropped her clothes in a pile on the front lawn as Jake followed suit. Soon, four naked silver figures stood together in the grass. Sam took Jeannie's hand and felt her joy. She reached out and took Jake's hand. He was startled and dropped the thermos but smiled at the woman. He then took Brenda's hand, and she reached for Sam's other hand.\n\n\"Oh!\" they said simultaneously as the intense sense of joy passed through them all. Reluctantly, they released hands.\n\n\"Let's go runnin'!\" Sam said, and they were gone.\n\nA few minutes later, they turned off the highway towards the field and stopped next to the big harvesters. Brenda was all smiles as she looked at Jeannie. Then her eyes went wide. \"You're slimming down!\" she gasped.\n\n\"We're all getting slimmer!\" Sam said, poking his flat tummy, which had been soft earlier in the day.\n\nJake smiled at his own improved physique then realized he'd left the thermos on his front lawn. He looked to the highway and saw a convoy of black SUVs led by one of those big army personnel carriers turning off onto the dirt road.\n\n\"Shit! We got company!\" he said.\n\nSam noticed the missing thermos and the approaching cars. The first vehicle accelerated. They'd been spotted. \"Come on! Let's get what we can get and run!\" He tugged Jeannie's hand as Jake ran into the field with Brenda.\n\nThey instantly felt a rush from the magic saturating the wheat around them.\n\n\"Ooo! What feels so good?\" Jeannie purred as they went deeper into the field.\n\n\"I think it's the energy from the lightning that struck the field,\" Jake offered, and Sam grinned at him. Jake was becoming a regular Mr. Science! It was as good an explanation as anything he could come up with.\n\nThey found the last scraps of the foil and tried collecting it, but it just soaked into their existing coating. They each grabbed some until it was gone.\n\n\"FREEZE!\" a voice yelled out over a loudspeaker, and an intense spotlight shone in their direction.\n\n\"What do you think?\" Jake asked.\n\nA shot rang out, and a high-pitched whiz screamed off Sam's shoulder, deflected upwards. He looked down where the bullet struck, but there wasn't so much as a scratch.\n\n\"Now I know what the silver stuff is good for. That didn't even hurt,\" Sam mumbled.\n\n\"They answered the question. Full speed away,\" Jeannie said.\n\n\"Agreed,\" Sam concurred. \"Follow me to the gate.\"\n\nHe shot away through the field, and the others followed in single file. The wheat brushed past them, sliding off their frictionless mirror-smooth surfaces. They suddenly reached the edge, and Sam blew through the gate like it was tissue paper, stopping on the dirt road just beyond.\n\n\"What happened?!?\" Jake gasped.\n\n\"Are you okay?\" Jeannie asked in concern.\n\nSam examined his body but found no injuries, not even a scratch, from bursting through the metal pipe gate. \"I'm good. I was going too fast to stop to open it for you guys,\" he said with a grin.",
        "They all looked back at the commotion their sighting had caused. This far away, they were invisible in the dark, but they weren't going to take any chances.\n\n\"I think we're going to need to stick to night time outings. With this shiny coating, we'll draw too much of that kind of attention in the daylight.\" Jake suggested.\n\nSam thought that was good advice and nodded with a smile. Besides, he was too charged up to think about sleeping.\n\n\"Where do we go now?\" Brenda asked. She was still riding the high from the running and from the energy she got from the magically charged and enhanced wheat field.\n\nSam looked to the far horizon and saw a distant flash. He reached out to take Jeannie's hand. She smiled the moment she picked up his intent through their connection. Words were redundant. She reached for Brenda's hand, and that woman held Jake's hand. They all shared a grin.\n\nStorm chasing it was.\n\n-=-\n\nColonel Crane watched in frustration as the four silver beings raced away at inhuman speeds. \"Who fired his weapon,\" he barked.\n\n\"Corporal Yablonski, sir,\" his sergeant replied.\n\n\"Yablonski! Sergeant Tennison will be drilling you on basic weapons handling tonight,\" he growled.\n\n\"Yes, Colonel!\" returned an embarrassed and worried response.\n\n\"Do we have a visual on them? Anything on the new radar tech?\" Crane asked.\n\n\"Negative Colonel. They scattered the radar too widely to get a read on them.\"\n\n\"Did anyone see which way they went?\" he asked in frustration.\n\n\"Thataway, sir!\" Yablonski said anxiously, pointing across the field.\n\nCrane looked to his sergeant. \"Get a team over to the other side of the field to see if there's any evidence of their passing through. I doubt they're still there.\"\n\nThe woman rushed off to send one of their trucks to perform the search.\n\nThe Colonel walked up to the personnel carrier and spoke to the driver. \"Green! You were closest. What did you get on the camera?\"\n\nThe driver tapped the tablet mounted on the dash of his truck and frowned. \"Just a lot of weird reflections, Colonel. There wasn't a lot of light at first, but even when we had the headlights pointed in their direction and swung the spot at them, the picture went to shit!\" He tried rolling the frames by slowly, but none showed the target clearly.\n\n\"Dammit!\" Gordon snapped.\n\n\"I don't know why the camera is so messed up, but what we saw were four mirror-like silver people standing in the wheat,\" Green said. \"One was shorter than the others.\"\n\n\"What were they doing, though?\" Gordon asked as he stared out at the field.\n\nOne of the other soldiers from the first truck trotted up to the Colonel. \"I don't see anything where they were standing, but it looked like they were picking something up.\"\n\nGordon looked at the two harvesters positioned like they were going to venture out into the field. The cab doors were open as well. \"Get me the names of the two drivers. They might have witnessed the pseudo-clouds in battle.\" The team was supposed to arrive before the clouds met, but they'd been delayed as their new radar imaging tech was delivered to the airport late.\n\nCorporal Dane, standing next to him, rushed over to the first big machine and climbed up to the cab. He spotted a photo pinned to the window. A young and happy couple, the man with a goofy smile and his shorter, thick wife beaming a blissful smile at the camera. There was another man in the background. He plucked the picture from the window. There was writing on the back. Then he spotted some sandwiches resting on the seat. He left his lunch?\n\nHe looked over at the other harvester and saw his sergeant climbing down with a lunch bag in her hand.\n\nDane climbed out and down and followed Mick back to the Colonel. Mick was showing him the contents of the lunch bag. There was a letter inside, a bill from the cable company, and a highlighted circle on the bill around the total.\n\n\"We have a name. Jake Miller. His address isn't too far from here.\" Crane said with satisfaction.\n\nDane displayed the picture he found in the harvester he climbed into. \"This may be the driver of the other vehicle. The names Sam, Jeannie, and Jake are printed on the back.\"\n\nThe truck that had investigated the other side of the field returned, and Yablonski hopped out to rush over to the Colonel. \"We found evidence of them breaking through the gate on the other side, but they left no trace on the broken gate.\"\n\nCrane looked at Green. \"Isolate the sharpest frame from the video showing these beings.\"\n\nHe looked to the sergeant. \"Start doing a sweep. See if you can find anything these beings might have been here to collect. I'm taking a team with me to this Jake Miller's place to see if he can shed any light on what they saw.\"\n\nHe walked back to his truck, and his driver moved them back out onto the highway. It only took fifteen minutes to reach the farmhouse, and they pulled off onto the dirt driveway. As they climbed out of the truck, Gordon shone his flashlight across the yard, and something caught the light and reflected it back. He stopped and walked out onto the grass and found a large thermos lying on its side. Close by was a set of keys and a wallet. The tattered remains of a woman's tracksuit and shredded men's jeans were found as well. Next to the thermos were two piles of clothes, a man's and a woman's, not torn but in good condition.\n\nCrane's driver, Corporal Dulane, walked up to stand next to him. The stocky young man looked at the clothes and back to the Colonel. \"They got undressed on the front lawn?\"\n\nGordon picked up the wallet and checked the ID. Sam Lagrange. There was a picture of his cute, cherubic wife inside as well. She was shorter than the others, and it suddenly clicked in his head. \"I think we may have found our silver people.\"\n\nHis driver found the wallet in the back pocket of the intact jeans. \"Jake Miller,\" he read aloud. \"I guess they didn't need clothes anymore?\" Dulane asked.\n\n\"Look at the condition of these clothes.\" He paused to absorb what he was seeing. \"Jake Miller lived here. The other two didn't. They probably ran here. We saw how fast they move. These clothes are destroyed. The fabric probably couldn't endure the speed.\"\n\n\"Colonel! We found something!\"\n\nCrane turned towards the house and saw the front door was open, and Specialist Green was standing in the doorway. The Colonel joined the Specialist and followed him inside. They stopped in the living room. \"Signs of a struggle?\" Green asked. There was minor damage on either side of the room, and in the middle on the floor was a fine gold mesh with small, dull yellow stones at the wire's intersections. The gems contained visible inclusions.\n\n\"Is this amber?\" the Specialist asked.\n\n\"Don't touch it barehanded but get it into a sample container. We're taking it with us,\" Crane explained, then took another look around. There was a tiny piece of foil in a lunch bag on the floor. He looked closer at the shiny piece of metal and noticed it wasn't wrinkled as tin foil would be. \"Put that bag and the foil in a sample container too.\"\n\nHe saw more pictures of the two couples. He pulled one from a frame as it showed all four people facing the camera. These had to be the people they saw. \"Let's go people, we have to move.\"\n\nHe made his way outside and looked for an address in Sam's wallet. He looked to Dulane. \"Get me an address for Sam Lagrange.\" The Corporal nodded and rushed back to the truck.\n\nOnce Specialist Green was in the truck with the sample container, they headed off to the other home. It proved to be a trailer, and Crane let himself in with the keys he brought with him. Inside, they found more of the mesh. A piece of furniture was broken in the bedroom as well.\n\nThey hustled back outside and drove back to the field. Once they were parked, the Colonel went to speak with the sergeant. The men were still doing a sweep of the area. Gordon dug out the picture of the four people. He gestured for Mick to join them. He showed her the photo as she'd been at the front with Green.\n\n\"Based on body shape and height, could these four people be the ones you saw?\" he asked.\n\nShe looked at the image, and slowly she began to nod. \"Height wise, they look like a match. It was hard to make out any features though, as the reflections were insane... sir.\"\n\nCrane nodded to her and moved back to his truck. He looked to his driver. \"I need you to get me everything available on these four people. Names and addresses of family, friends, coworkers, anyone who might offer them shelter.\" Dulane nodded and went to work.\n\nCrane didn't really believe they would seek out family. He didn't think these four beings were the same people anymore. He looked out over the field of wheat as he contemplated this latest development. The Glass People were odd enough, but this was something completely new. The next phase?\n\nIt had been Colonel Devlin's theory that they were looking at preliminary attempts at some kind of invasion. The people of Earth were being replaced with these alien monsters. Devlin told him they were lucky the replacements were so easily identified. If they looked human, there'd be no way to stop them. The Colonel told him they would have to act decisively to protect their country, and the world would follow their lead.\n\nHe would have to return to Washington to report this new type of invader to the Director and the other two men, whose names he still didn't have.\n\nHe frowned. He didn't like investigating unexplainable shit.\n\nOr having to report it to mystery men.\n\nChapter 3\n\nLorelei Reichenbach, a young up-and-coming artist in high demand, sat alone at the small bar set up in the corner of the art gallery. She felt drained, disappointed, and worse of all, lonely.\n\nHer latest showing had been another smash success, with all three of her paintings being snapped up by collectors after a feverish bidding war. When it looked like the bidding on the third painting would result in a fight between two Octogenarians, Lorelei was forced to defuse the pressure in the room with a quiet little song she sang just under a perceptible hearing level. Her ability to control others with her singing was a new talent for her, but she was quickly learning its limits. Living in such a dynamic city with so many wildly different people, she'd had plenty of opportunities to hone her skills and had mastered subtle techniques for managing people around her. The biggest drawback of her new expertise was that she'd caught herself manipulating Emily, her lover.\n\nWhen she realized what she was doing, it stung like a brutal slap. She couldn't forgive herself for breaking the promise she'd made to herself. The next morning, she broke up with the beautiful blonde and sent her on her way with enough money in her bank account to carry her comfortably for six months. She eased Emily's heart and mind with a song for her final manipulation. Emily had a good job, and with her skills and looks, she'd be fine. Emily wouldn't be alone for long.\n\nThe same couldn't be said for Lorelei. While she'd received plenty of compliments for being tall, svelte, and lovely, she wasn't as approachable as Emily. A small part of that might be due to how her mood lately matched her choice color palette, dark and cool. She preferred dark blue-black lipstick and nail polish and black eyeshadow.\n\nIt was more likely due to how the important people in her life, aside from Emily, had all failed her, leaving her with trust issues. She'd built a wall around herself.\n\nShe sighed as she was just procrastinating. It was time to go home, but her condo was empty, and she wasn't looking forward to sleeping alone again. She could easily find someone to warm the sheets with her, but her skin crawled at the thought of manipulating a stranger to have sex. She wasn't feeling strong enough tonight to do it without relying on her abilities.\n\nSo, alone it was.\n\nShe left the art gallery allowing the last two employees to lock up behind her and finally go home, too. She turned in the direction of the main road where taxis would be easier to catch. She walked along the dark street, humming a little song for protection. With a serial killer roaming the streets of the city at night, she was taking no chances. This particular song was unique as it turned Humans away and made them forget they saw her. For non-Humans, it made them stop and put their hands on their head. This identified them for Lorelei so she could speak to them to get more information about the Council. She would then make them forget her afterward.\n\nShe was fully aware the Council was still a threat to her life, but they seemed to be hiding in the shadows. She needed to be proactive to protect herself, and for that, she needed information.\n\nShe was walking through a tunnel of scaffolding when a large man suddenly fell from the platform above to the sidewalk six feet in front of her. He moaned as he lay on his back with his hands on his head.\n\nNot Human.\n\nShe sang a little louder, and a second attacker stumbled to a stop behind her. Keeping her song going, Lorelei turned to see a 5' 4\" woman watching her with wide, frightened eyes, her hands on her head. The woman's eyes darted to the moaning man, and her concern was clearly visible. So, they were a couple or partners, at least. The Council sent a team after her?\n\nLorelei gestured for the petite woman to join the man. She rushed over to her partner and checked his condition. Lorelei saw the woman relax as she confirmed there was no damage. She helped the big guy up to his feet. Lorelei saw he was close to her height but very broad in the shoulders, a powerful man. She changed the song slightly then stopped.\n\n\"What are your names? Your real names,\" Lorelei demanded.\n\nThe big man blinked in surprise at her when he felt a compulsion he couldn't deny. \"Raymond King.\"\n\n\"Eleanor King,\" came from the woman clinging to the man. \"Though, we go by Hollings here.\"\n\n\"Do you work for the Council?\" Lorelei asked bluntly.\n\nRaymond looked at her cautiously while Eleanor glanced around.\n\n\"Council?\" he asked quietly.\n\nLorelei was getting frustrated, and she tried to recall the actual name the dwarf had used. \"The... Hidden Council?\"\n\nNow both of her attackers were watching her with surprised expressions. The small woman answered. \"No, we don't. This isn't a safe place to talk about that. Not talking about it is rule one.\"\n\nThe tall brunette glared at the two before her. \"What were your intentions for me tonight?\"\n\nThe couple glanced at each other briefly before they were forced to speak in unison. \"Dinner.\"\n\nLorelei snarled at them. \"You were going to eat me?!?\"\n\n\"No, just a small amount of... blood. You wouldn't even notice, and typically you wouldn't remember,\" Eleanor continued, struggling to explain quietly.\n\nIt was Lorelei's turn to stare at them in surprise. She knew they were telling the truth, but the idea of being fed from was still repugnant. \"You're like... Vampires?\"\n\n\"We pay for the meal,\" the big man said with a crooked smile as he glanced at his wife. The woman looked embarrassed and defensive.\n\n\"Yes, we are. It's not like we don't recognize the distasteful nature of our dietary requirements, so... I leave a little money in the pockets of those we feed from. We don't have a choice as to what we eat, but we do try to make it as non-intrusive as we can.\"\n\nLorelei snorted. Why she found this Vampire couple to be somewhat charming, she didn't know. She wasn't getting her answers. They didn't work for the Hidden Council, so they were a dead end. She had to decide what to do about them. \"When you aren't biting people, what do you do?\"\n\n\"I'm a public defender, and my wife is a surgeon. A damn good one, too,\" he said proudly.\n\nThe woman smiled. \"He's an excellent lawyer!\"\n\n\"I'm more impressed by your ability to freeze us in place. I've never experienced this before. As we've shared who and what we are, will you do the same?\" Raymond asked.\n\nLorelei frowned and shook her head.\n\n\"Ah, I'm sorry if I've offended you,\" Raymond said gently.\n\nLorelei was confused and upset. Her night was going from bad to worse. She'd intended to send her attackers into the Hudson River, but now, they didn't seem quite so evil. She might have felt better if she could have punished someone evil, but now?\n\n\"I don't know what I am! I do know the Council wants me dead, but I don't know why! I just want to be left alone!\" she snapped, and her voice broke when she said it as she really didn't want to be alone at all.\n\nShe closed her eyes and shook her head. She couldn't and shouldn't waste any more time. Eyes flashing open, she held the couple in her gaze as she sang another verse. She stormed off, leaving them swaying on their feet, her instructions implanted.\n\nShe made it to the main avenue and flagged down a cab.\n\nShe just wanted to put this whole night behind her.\n\n-=-\n\nTwenty minutes later, Raymond became aware he was leaning back against a boarded-up door, and he was behind plastic sheeting. He had his arms wrapped around Eleanor, and she was staring blankly at his chest.\n\n\"Dearest?\"\n\nShe blinked, and a little wrinkle of concern appeared between her eyes. She looked up at him. \"What happened?\" She glanced around. \"Where are we?\"\n\n\"I... can't recall,\" he replied. He put his hand into his pocket and fished out his cell phone. He glanced at it and saw the recorder was running. He stopped it and saved the file. He held the phone up as he looked at his wife. \"I think we'd better go home and find out.\"\n\n\"I don't think we ate tonight,\" Eleanor said as she looked inwards to assess her energy levels.\n\nRaymond held her eyes. \"I have the oddest feeling we narrowly avoided taking our last meal.\"\n\nChapter 4\n\nHenry and Tish's party was winding down, and some of their guests were beginning to leave as they had plans for Sunday morning. Tish gave Sigrid and Meixiu hugs, and Henry walked them to the door.\n\n\"You have a lift home?\" Henry asked Sigrid quietly as he pulled her to his chest. Her lovely blue eyes twinkled at his concern. She nodded.\n\n\"Camila has us using the car service. You know, I could take this monster out if I fought it,\" she said with a raised eyebrow and a little smile on her lips. A Valkyrie's warrior pride was a touchy topic.\n\n\"I have no doubt you would be victorious in a face to face battle, but we have no idea what the killer is capable of or how they fight. They might play dirty and ambush their victims without warning.\" He purposefully held Meixiu's eyes with his, and she dipped her eyes in acknowledgment.\n\nBefore Sigrid could ask what that was about, he took her face between his hands and kissed her tenderly. When he pulled back, her eyes had a dreamy quality to them, and her cheeks were glowing a fetching shade of pink.\n\nHe was having trouble keeping a look of adoration from his face. Sigrid went from fierce warrior to intensely cute so quickly! \"We're still on for Wednesday night at the Met?\" he asked, and her eyes lit up again as a grin spread across her lips. She nodded, and he returned it. \"Great! See you at work on Monday.\"\n\nHe could no longer resist her charms and gave in as his eyes became trapped by how sweet she looked. She huffed with a look of exasperation and slipped her shoes on, and stepped out into the hall.\n\nMeixiu was immediately in his arms, kissing him aggressively. He held her tight until she pulled her face back from his. \"I will be careful too. I won't try to catch the killer, but if I can get a description or location, that will help!\"\n\nHe nodded to her. \"Please be careful. You're important to me.\" He gently set her on her feet, and with the flash of a bright smile, she was out the door.\n\nCamila and Marisa were the next to leave. Siobhan, too, as she'd caught a lift with them.",
        "\"You have a lovely home Henry,\" Camila said with a smile.\n\n\"I have you to thank for that.\" He paused as he had an epiphany. He looked her in the eye as he took her hands in his. \"I have you to thank for so much more.\"\n\n\"Oh! Ah, well... I-- you--\" Camila stumbled with her words as her face heated up. Marisa burst into giggles as she watched her mother become tongue-tied. Camila shot her an annoyed look. When Henry's lips pressed against her cheek, she gasped and blinked at him as an unfamiliar emotion surged in her chest. She smiled and couldn't stop. \"Thank you, Henry.\"\n\nMarisa was still grinning at her mother's bewilderment when Henry took her hands in his next. Her eyes widened in surprise as she looked at him cautiously.\n\n\"I believe you may have some inkling how grateful I am that you were there when I first started at VRL and for how you came to my rescue again and again. I wouldn't have made it this far without you at my side,\" he said sincerely and watched Marisa's mouth open and close with no sound.\n\nCamila snorted, seeing her daughter caught in the same sincerity trap. She watched Marisa lock up when Henry leaned in and gave her cheek a sweet kiss and felt a sympathetic tug in her own heart. She didn't know what that feeling was. She also didn't know what it was about Henry that drew her so strongly. Succubi didn't form long term relationships with anyone. They just weren't wired to have the emotional capacity.\n\nYet, there was something about him, aside from the wonderful energy he gave her. That was just food for a Succubus like herself. She and Marisa had both gone to clubs recently and brought home healthy men for a tumble in the sheets and to feed from them. It was a relief to know they could still feel charged from regular Human men. Still, she preferred Henry, and it wasn't just for his energy.\n\nShe puzzled over that as she and Marisa slipped on their sandals and stepped out into the hall.\n\nSiobhan was smiling up at him. \"You are such a sweetie, Henry!\"\n\nShe threw her arms around him and squeezed. He hugged her with equal vigor.\n\nShe tilted her face back to look him in the eye. \"I need to speak to you on Monday. Think you can set aside thirty minutes for me before lunch?\"\n\n\"Sure--Mmmm!\"\n\nOnce more, Siobhan kissed him fiercely then rushed out after her ride.\n\nHenry leaned out his door to see the brunette jump into the elevator with a grin on her face.\n\nHe went back inside and closed the door as he touched his lips. He realized they were getting a lot of use tonight.\n\nHe ducked into the washroom and cleaned off a few smudges of lipstick.\n\nA few deep breaths, and he was ready to join the others. He met Roy and Mary in the hall, putting their boots back on. He opened the door for them and got and gave another kiss on the cheek to Mary.\n\nOnce he returned to the living room, he saw the only remaining guests were residents of the building. Kali and Sandy stood by the windows, enjoying the view with a wine glass in their hands. Michelle and Dayshia were by the island, helping Tish pack up the leftovers. Yuko and Jun were sitting on a couch across the coffee table from Mahati, who was by herself. He settled down next to the lawyer and gave her another smile. He knew he might be acting a little silly, but what she'd done to Queen Mab felt so good, he couldn't stop smiling at her. Mahati was returning his smile, so she didn't seem to mind.\n\nHe suddenly felt the cushions on his other side drop as someone thumped down next to him, too close. He turned to see Yuko staring up at him from under her bangs. Her eyes were glassy as if she was moments away from crying. She was also breathing a little fast.\n\n\"Are you okay, Yuko--\"\n\n\"Why do you smile at the cold-blooded one all night and not me?\" Yuko blurted, the scent of wine heavy on her breath. \"Who is she to you?\" Her voice was becoming sharp.\n\nHenry's eyebrows went up, and he glanced over at Jun, who was watching her sister in concern. He looked back and saw a tear run down Yuko's cheek. Henry automatically lifted his hand to wipe it away.\n\n\"No! You mustn't touch her tears!\" Jun exclaimed, but Henry just smiled at her as he cupped Yuko's cheek.\n\n\"It's okay. We discovered I'm immune to her tears,\" he said gently. Then Yuko was climbing onto his lap to kiss him.\n\nShe was so insistent; Henry couldn't brace himself and tumbled backward. He felt something soft under his back, but he couldn't see past Yuko's silky hair, which was surrounding his head. Her lips were pressed against his, and he instinctively kissed her in return. That just made her more aggressive, and her tongue came into play.\n\nHe tried to push her off, but his hands on her body just made her moan and squirm.\n\n\"GET--GET OFF!\" Mahati yelled as she dropped her glamor and pushed the couple from her lap.\n\nThe push from the thick coils of muscle was a little too forceful. Henry and Yuko landed on the coffee table, a sturdy piece of hardwood furniture that easily withstood the impact. The glassware, wine glasses and whiskey tumblers, and the dishes resting on its surface were another matter. The shove and Henry's pained gasp from the broken glass stabbing into his back were enough to distract Yuko from her need for Henry. She pulled back and saw he was hurt, and Mahati was standing on her coils, glaring at her.\n\nHer wine-addled senses told her here was the real enemy keeping her from happiness. She leapt back from the tall N\u0101ga and moved her hands together as she recited the words. Multicolored tails flashed into sight behind her.\n\nMahati's danger sense was flaring. This crazed drunkard was going to use a spell against her, inside the building!?! She automatically summoned her own magic and wove the energies into a weapon of her own. It was a race to launch their spell first.\n\nHenry felt every hair on his body stand on end as the energies flashed into being. His eyes snapped open, and he could see Mahati bringing her left and right hands together. He dropped his glamor and used his Satyr strength to leap from the table, arms stretched wide to scoop Yuko to his chest as he sailed over the facing couch, dragging Jun with them as he went.\n\nYuko's spell collapsed against Henry's chest and sent the three of them tumbling in opposite directions. Yuko and Jun were immediately stunned unconscious.\n\nMahati's powerful counterspell cut through the air towards the spot Yuko had been standing a split second before. Instead, it slammed into the shield surrounding Tish as she leapt into its path. She glared at the N\u0101ga as the deadly energies fizzled out, spitting sparks left and right, lighting up the shields Dayshia and Sandy used to protect Michelle and Kali.\n\n\"No MAGIC ATTACKS in my HOME!\" Tish snapped.\n\n\"I-I was defending myself! The drunk Kitsune was trying to kill me!\" Mahati insisted.\n\nTish quickly walked over to see how Henry was doing. He was dazed by the blast, but his back was a bloody mess. The glass had cut deeply into his back muscles. \"Shit, he's going to need medical attention.\"\n\nHenry struggled to stay conscious. It was so hard, but he needed to heal. He felt himself reaching for the ring and its link to the Global Overlay Spell. A sweet gurgle bubbled through his mind, and the power came, faster and faster until the room began to glow.\n\nMahati gasped as she felt the magic building. She recognized the green light as the Fae's Global Overlay Spell. \"What? What's happening?\"\n\nSandy looked out the window and saw the sky above the building was beginning to glow. \"I've seen this before! It's the Aurora Borealis!\" Her head whipped around as she looked incredulously at Henry. \"It's Henry? He's causing this?!?\"\n\n\"It's the Fae's healing magic,\" Mahati explained as she watched Henry. She moved closer to him and saw his body was glowing with the energy, but he wasn't healing. \"He can pull the magic to him, but he can't use it?\" she guessed, and the others nodded.\n\nSandy suddenly worried about how badly he was hurt if this was happening.\n\nTish looked over to Dayshia. \"You're training to be a surgeon. Can you help him?\"\n\nDayshia turned her eyes to Tish. \"What? This is magic! I'm not a wielder!\" She looked to Mahati. \"Why don't you do it?\"\n\n\"I might be able to use the magic, but I'm not a healer,\" Mahati said, then looked to Dayshia. \"If you're prepared to use your skills, I can back your efforts with magic.\"\n\nDayshia still looked hesitant, but Tish and Sandy were begging with their eyes. When Jun made sounds like she was coming around, they all looked to Yuko, but she was still unconscious.\n\n\"Keep an eye on that one!\" Mahati said, pointing to Yuko. Kesini immediately wrapped herself around the Kitsune.\n\n\"How-- what am I supposed to do?\" Dayshia said as she knelt next to Henry. She dropped her glamor and used her vision to peer beneath his skin. She found multiple glass shards left in his muscle tissue.\n\n\"You are a healer. Envision how you would normally heal him. I will provide your actions with the magic required to complete the actions your will defines,\" Mahati explained.\n\nDayshia nodded distractedly. She hadn't performed any surgeries on her own before, but she knew how to do it from witnessing so many. She reached out her hands over Henry's back.\n\nWhen Mahati touched her back with all four of her hands, Dayshia squeaked in fright as she knew the giant scary snake was right behind her.\n\nMichelle was suddenly on Henry's other side, looking into her friend's eyes. \"You can do this! We all have faith in you!\"\n\nDayshia looked around and saw the smiles on the faces around her. She closed her eyes and took some deep breaths. When she opened them again, she envisioned being in a surgical suite standing next to her patient. She held out her palm and quietly asked for forceps. She felt the gentle pressure of something pressing into her palm. Dayshia was surprised to see the green light in the shape of the surgical tool in her hand. She pushed her doubts aside and used the tweezer shaped implement and her enhanced vision to go after the glass fragments.\n\nHenry grunted from the pain of Dayshia performing surgery on his back without anesthetic. He knew he had to remain awake and to keep the energy flowing. That took everything he had.\n\nTish watched in amazement as Dayshia's hands moved with confident precision as she quickly cleared the shards from his back. Each one was extracted then dropped into a dish made of the green light. She almost expected to hear a metallic ping from each dropped piece. She did hear Henry's grunts of pain and realized he was fighting to stay conscious through this. She marveled at his strength and will power.\n\nDayshia was loving working with tools made of light. Once she was sure she'd removed even the tiniest fragment, she handed off the forceps, which faded away, and was about to ask for the suture needle and driver. Instead, she ran her fingers through the green light as she imagined how it could be used since it worked perfectly as the tools she'd needed. \"Can this be used to seal the wounds?\" she asked Mahati without turning to look at the snake lady.\n\nShe heard the smile in the woman's voice. \"If you will it to act as an adhesive, then that's what it will be. Your skill is quite brilliant!\"\n\nShe smiled at the compliment but focused her mind as she envisioned the tools she'd need to apply the thin bead of dermal adhesive. Once she had her tools, she quickly went from wound to wound, sealing the skin. When she was done, she passed her hands just above the surface of his skin and willed the energy to penetrate his skin to boost his natural healing. These days they were using light to stimulate regrowth of tissue, so she envisioned it working here. She sat back when she was done. \"I'm done, Henry. Rest.\"\n\nThey watched the green light fade as Henry finally gave in and passed out. His glamor immediately reset him to Human, but he was also naked. Dayshia smiled at his unblemished back. She knew he wouldn't have any scars when he recovered.\n\n\"Oh my god, Dayshia! You're amazing!\" Tish gushed as she dropped to her knees to wrap her arms around her friend. Sandy was squeezing her from the other side, and a few free strands of Kesini got a hug in as well.\n\nOnce they released her, she stood, took a deep breath, and turned to face Mahati once more. She relaxed as she saw the woman was back in her glamor as a petite woman in a saree. \"Thank you for helping me help Henry.\"\n\n\"The honor was mine. I've never assisted in a surgical process before, and watching you work was thrilling!\" Mahati said with a smile.\n\nDayshia frowned slightly. \"How much of what I did was you?\"\n\nMahati held up her hands as she shook her head. \"It was all you. All I did was enable you to touch the magic and guide it with your will. I believe you will be a brilliant surgeon.\"\n\n\"Why is Henry naked?\"\n\nHeads turned to see Jun sitting up and staring at Henry's body.\n\n\"I believe the real question should be, what's up with your sister?\" Tish asked. \"Why is she acting so obsessed with Henry?\"\n\nJun looked at her unconscious sister, and her expression became both pained and sad. \"I was unaware she'd attempted to ensnare his mind with her tears. That explains much. If my mother knew, she did not share that with me.\" She looked to Tish. \"I think Yuko is soul bound to him. I believe I heard Henry say he is immune to her tears.\" Heads nodded as they'd heard him say that as well. \"That doesn't mean the binding between Yuko and Henry is broken. His link to her may no longer exist, but she will remain bound to him until she is pregnant with his child. It is the price of using her tears in this way.\" She shook her head incredulously as she went back over her sister's behavior, seen in this new light. It all made sense to her now. \"Henry is a Satyr, so I don't understand why Yuko would have done this. She knows she cannot mate with anyone other than a Human. Binding herself to someone she cannot mate with only leads to madness.\"\n\nThe other ladies shook their heads as they couldn't explain it either.\n\n\"I need to carry Henry into the bedroom so he can rest. I'll need help,\" Tish said as she dropped her glamor. She was much stronger in her Faun form.\n\n\"No, Kesini. You need to keep Yuko under control,\" Sandy said to prevent her hair from releasing her hold on the Kitsune.\n\nMahati dropped her glamor. \"I will assist you.\"\n\nTish gently rolled Henry over onto his back, and several of the ladies made little involuntary noises when his cock was exposed. Tish grinned as she knew each of them was seeing something a little different. It was one of the unique properties of Henry's glamor. He would look and be the desired size and shape from the observer's perspective.\n\n\"Still looks like an anaconda to you, Dayshia?\" she asked with a sly grin as she spotted her friend's wide-eyed stare. She knew Dayshia had yet to take Henry to bed. Not from lack of interest, of course. She wasn't sure why Dayshia was so resistant to the idea.\n\nDayshia jerked her eyes away from Henry's groin and frowned at Tish. However, she couldn't maintain her annoyance with her friend as the woman was enjoying the moment so much. Dayshia found herself snorting in amusement, which just triggered the rest of them until they were all giggling, except for the unconscious Yuko and Kali. Dayshia saw the latter's expression no longer showed her smug satisfaction from the chaos she'd played a significant part in engineering.\n\nTruthfully, the wide-eyed young woman looked shocked and more than a little nervous.\n\nDayshia had to admit what she saw was also a little intimidating, but it made her tummy tremble with nervous desire, not fear. Kali no longer looked confident, and that was... interesting.\n\nShe looked to Mahati, who was picking up Henry's legs with all four of her arms while Tish had her strong arms under Henry's, resting his head against her shoulder. They lifted his large body carefully, and Tish walked backward out of the living room with Mahati following.\n\nTish was watching Mahati's expression as they slowly made their way towards the bedroom. The woman's eyes kept finding their way back to Henry's cock. It suddenly dawned on her that Mahati's expression contained a burning curiosity. She was probably a virgin!\n\n\"First one you've seen in person?\" she gently asked when they were alone.\n\nMahati's eyes immediately went to her, her complexion reddening, but she saw Tish wasn't judging her, so she reluctantly nodded.\n\n\"They don't get much nicer considering his glamor matches it to your ideal,\" Tish said with a grin.\n\nMahati stared at her. \"My ideal? How would it know if I've never...\"\n\nTish looked back at her in surprise, then down at the unconscious man. \"Uh, that's an excellent question. I have to admit, magic is still very much a mystery to me.\"\n\nThey gently set Henry down on the low bed then stepped back to gaze back down at him.\n\n\"I'm sorry for using offensive magic at your party. It really was in self-defense,\" Mahati said quietly. \"I'm really impressed with your shield spell! It's exceptionally strong!\"\n\nTish nodded. \"They come in handy, being around Henry.\" She felt a little sad about that. Too much trouble clung to the big man.\n\nMahati was back to staring at Henry's privates. She looked pensive, and Tish almost laughed at her expression.\n\nFinally, the dark beauty spoke. \"Do you think Henry's glamor could actually make it possible for Yuko to become pregnant? I mean, that's her ideal, yes?\"\n\nTish blinked at her as her jaw dropped open. \"I-I have no idea. I thought it might be just the size and shape, but fertility as well?\" She shrugged. \"You know more about magic than me, but I do know that Henry's sperm is saturated with Wild Magic, and I've been told that it's toxic to wielders.\"\n\n\"Henry's glamor is unlike any I've dealt with before,\" Mahati admitted. \"As you say, it would normally be dangerous for Yuko. However, there's still this ideal matching nature of Henry's glamor, and we don't know its true extent. A good test would be for her to be with Henry sexually, but he'd wear a condom while she concentrated on her need for Human sperm. After he climaxes, the sperm in the condom could be tested to see if it's purely Human.\"\n\nTish rolled her eyes. \"So romantic! That wasn't how Mab did it. She had sex with his Satyr form. How did she avoid their incompatibility?\"\n\nThe dark-skinned beauty scoffed. \"You have any idea how we could ask Mab?\" She shook her head as she contemplated the complexities involved. \"Henry's magic is so unpredictable!\"\n\nTish smiled as a little thrill tingle ran down her spine. \"Wild Magic! It's so exciting!\"\n\nThe  aimed an amused smile at the woman with a raised eyebrow. Tish grinned at her. \"Hey, I was once Human with no concept any of this was real! The world changed for me overnight, and this one is far more exciting!\"\n\n\"I notice you've even adopted our way of saying Human, as well,\" Mahati stated.\n\n\"Yeah, I picked up that difference pretty quickly,\" Tish said with a nod.\n\n\"You switched sides quickly, too.\"\n\nTish's expression became serious quickly. \"No. For me, it's never been an Us vs Them situation. I get that we need to hide from the Human population, and I completely understand why. I don't think my attitude towards this change could be considered typical. I think Dayshia's is closer to how most would react. Change can be frightening.\"\n\n\"I heard my name, and we're all wondering how long it takes to put someone on a bed,\" Dayshia said as she walked into the room. Mahati blushed then switched back to her Human glamor. Dayshia smiled gratefully at her.\n\nTish turned to her friend. \"Mahati had a most excellent idea! You know how Henry's glamor conforms to the observer's ideal? Yuko needs Henry to give her a baby. It might be possible if Henry's glamor includes that capability.\"",
        "Dayshia's eyebrow rose up and seemed to disappear into the mass of curls. \"Is that even possible!?!\" she gasped.\n\nMahati nodded cautiously. \"I'm no expert in Wild Magic, but for traditional magic, it's the strength of the will and desire that shapes the capabilities of the magic. Considering her only other option appears to be madness, I think if Henry's willing, it's worth an attempt.\"\n\n\"I'll speak to him about it when he wakes,\" Tish said.\n\n\"Let's go speak with Yuko about it. She woke up, and Jun is talking with her, but I'm glad Kesini has a firm grip on her,\" Dayshia said.\n\nSharing worried looks, Tish and Mahati followed Dayshia back out to the living room. Tish noticed there was no sign of Kali.\n\n\"WHAT HAVE YOU DONE TO HENRY!\" Yuko spat as she tried to thrash loose from Kesini's coils. She was standing but unable to move.\n\n\"Nothing. Henry is resting comfortably after Dayshia and I healed the injuries he sustained in the brief skirmish,\" the lawyer explained.\n\nYuko glared at Mahati but seemed to calm down a little.\n\n\"He is my friend. Nothing more,\" Mahati expressed, and Yuko's face burst into a sudden smile, then her expression wobbled to dread. \"He will hate me even more now than he did before.\"\n\nTish moved right up to her and took her face between her hands. \"Henry doesn't hate you. He's just confused about how you're acting. Jun explained it to us. You're magically bound to him. You need his baby to break that spell. I-I think Henry can help you with that. I'll speak to him when he wakes. I'll explain what's happening with you, and if I know Henry, he'll want to help.\"\n\nYuko's eyes began to well up, and recalling Jun's warning, Tish quickly pulled her hands back.\n\n\"Henry's not Human. Stanley was. I need a baby from a Human,\" she admitted quietly.\n\nSandy frowned in confusion. \"How could Stanley have been human. I thought that was just a disguise.\"\n\nMahati moved closer. \"Stanley's method of disguising himself as Human relied upon a Dragon's spell, which altered reality around him, so he became Human while it was active. He can no longer use that original disguise. That said, it's still possible that he could help Yuko. Wild Magic seems much stronger than the magic I'm linked to. Henry's glamor is designed to fulfill the... needs of the one he's with. Your need is for Human sperm. If he agrees to try, keep that topmost in your mind, and will it as your greatest desire. I'm sure this won't be difficult for you.\"\n\nYuko watched the dark-skinned beauty and saw the reddening of her cheeks. She'd said she and Henry were just friends, but Yuko wasn't so sure that was the other woman's honest desire. She looked away as her heart flipped. The alcohol was interfering with her rational mind. Her binding was triggering irrational impulses, like attacking a N\u0101ga. All she could do in response was nod.\n\n\"I think we've overstayed our welcome, and we've certainly misbehaved. I apologize for my actions and my sister's meddling, which likely led to this confrontation,\" Mahati said sincerely. She looked around and discovered Kali was missing. \"She's not here. Typical. I will express my displeasure at her behavior when I see her. Thank you for inviting us.\"\n\nTish nodded and walked the lovely woman in the saree to the door.\n\nKesini let go of Yuko once Mahati was gone, and the young woman wobbled on her feet. Jun took her arm. Yuko looked shamefaced and still a little tipsy, but she addressed the group.\n\n\"I am sorry for my behavior, as well. I honestly appreciate your efforts on my behalf. Please give my apologies to Henry and thank him for me for saving my life.\"\n\nThe group made sounds of acceptance, and Tish let the two out of the condo before returning to see Dayshia, Michelle, and Sandy cleaning up.\n\n\"You don't need to do that!\" Tish exclaimed.\n\n\"Henry would have helped you if he wasn't recovering, again,\" Sandy said with a sad little frown.\n\nTish nodded with an equally sad expression. \"He seems to be such a focal point for crisis and calamity.\"\n\nDayshia hugged Tish and Sandy rushed over to join in the hug with Kesini. Michelle held back as she was still not comfortable with that yet, but she smiled at the others.\n\nThe phone rang, and Tish released her hug to go over to answer it.\n\nSandy looked to Dayshia and Michelle. \"Henry's the cause of New York's Aurora Borealis sightings! I'm torn between being excited and terrified!\"\n\nThey looked over at Tish, who was speaking quietly to someone and frowning in concern. When she rushed across the room, the others gave chase.\n\n\"What's happening?\" Sandy called out to Tish, who was making a beeline to the master bedroom.\n\n\"Roy caught a report on the radio about the Aurora Borealis appearing over the Hudson River again, and he called Camila, who was also on the road. She's on the phone. I need to check on Henry.\"\n\nThey crowded into the bedroom and knelt on the bed next to the big naked man. Tish lifted an eyelid and saw Henry's pupils were tiny and didn't respond to light. She put her ear over his nose. Then she sat up looking upset and lifted the handset to her ear again.\n\n\"Camila? His pupils aren't responding to light, and his breathing seems shallow.\"\n\nThey waited as Camila spoke to Tish. \"Okay, I'll wait for your call. Thank you!\" She hung up and looked to the others who were watching with wide eyes.\n\n\"Henry's mind has left his body again. It gets trapped in that green light, the healing spell, and wanders after he's been injured.\" The others gasped. \"Meixiu seems to be able to immediately draw him back, so Camila is going to try to get her to come back to our condo.\"\n\n\"Is there anything we can do?\" Sandy asked nervously.\n\n\"We can try talking to him. He may hear us and come back on his own. It can't hurt.\" Tish said.\n\nDayshia leaned down and spoke into his ear. \"Henry! You come back to us, right now!\"\n\nThere was no change, and she shared a worried look with Tish, Sandy, and Michelle.\n\nTish wondered where Henry went.\n\n-=-\n\nFloating over a dark landscape, Henry sleepily watched the flashes of light in the clouds below. He knew he shouldn't be here, but he didn't have the required energy to go back to where he needed to be. Worse, he didn't know the way.\n\nInstead, he let himself be swept along by the currents in the Global Overlay Spell. It seemed much stronger than it did before. While the spell's healing properties were still based on the old magic as that was the only kind the Fae responded to, it now had a base layer of Wild Magic, which seemed to be acting like a power induction charger for the healing spell. The strength of the spell was significantly boosted. Additionally, the magic's flow had gone from a gentle swirling current in the upper atmosphere to a rushing river, leaping and surging forward.\n\nThe spell's purpose, to heal the Fae, felt like it was nearing completion. He wondered what it could be used for once it healed the Fae. It was a shame that Humans were immune to the energy. It passed through them without effect. Wild Magic, on the other hand, wreaked havoc on Humans. He thought of his friends, and for a moment, he could almost hear them.\n\nAll hell broke loose below him as a dense cluster of pseudo-clouds savagely attacked each other. Henry felt his curiosity drawing him closer. He drifted downwards and saw dim lighting on the ground between at least two dozen mid-sized clouds as they jockeyed for position. He thought he saw large oil tanks laid out in a grid below the fighting storm clouds. Henry felt the presence of a large body of water to the east, an expanse of desert to his right, and saw the lights of a nearby city just north of the battle.\n\nThere was a terrific burst of light as two of the larger pseudo-clouds fired their plasma beams down their sides to strike each other simultaneously. Instead of reaching their targets, the energy channels struck two of the oil tanks. The resulting explosion ripped open two additional tanks, and giant fireballs rose towards the attackers. The larger pseudo-clouds weren't able to avoid the fire and lost most of their mass in a deluge that fell upon the destroyed tanks. Something reached critical within the two scorched behemoths, and two almost simultaneous explosions ripped them completely apart. Golden light shot outwards in two relatively slow-moving expanding rings, which lit up the enormous billows of smoke from the burning oil. Henry was almost dazzled by the light show. He looked downwards at the lit-up streets, and based on the writing he saw on some signage, he guessed he was over a small city in the Middle East.\n\nThe remaining pseudo-clouds in the cluster were shedding their mass of Wild Magic charged water as they rushed northwards over the city, seemingly running from the golden rings. A few stragglers which shed too much of their energy were caught by the golden light. This triggered explosions from within them as well, but they just dropped something shiny onto the streets below. Henry followed the surviving creatures closely and could see the people coming out of their homes and shops to see the gorgeous lights passing overhead.\n\nHenry wanted to scream at them to go back inside, but they were dancing in the rain, getting drenched in the magically charged liquid.\n\nSeemingly driven into a frenzy, the surviving pseudo-clouds began to attack each other once more over streets filled with people. The magically charged bolts struck the ground again and again as the rain continued to fall. The city's electrical grid failed in the onslaught, and Henry had to look away as the constant flashes were almost blinding.\n\nThe golden rings caught up to the battle, and one after another, the inner workings within the remaining clouds exploded, dropping their shiny debris onto the streets below.\n\nThe battle over, Henry's mind drifted down to street level, and he stared in horror at the devastation around him. Not everyone survived the skirmish. People in cars had been roasted alive by the plasma. Out of control vehicles had plowed into pedestrians, and shattered multicolored glass could be seen where these collisions had occurred with people in the process of becoming the Glass People.\n\nHenry now understood how they were created.\n\nThen he saw her.\n\nSo small and precious... and dead.\n\nThe infant must have been thrown from one of the crashed cars. Henry wanted to do something for her, but he couldn't even cover her body in his disembodied state. He was powerless.\n\nWhen he next became aware of his surroundings, his attention was drawn by a large group of Glass People slowly wandering around in shock.\n\nAs he moved closer, the Glass People nearby stopped and looked at him. They could somehow see him, as the ones in the gymnasium had and Xiong did on that mountaintop. He could feel their fright, so he did his best to assure them. In his private thoughts, he wasn't sure how the local government would react when they found the people changed like this. He feared they'd be treated as the other Glass People had been, or worse.\n\nHe wished he could open the door to Eden. Then they could join Xiong and the rest.\n\nHe continued floating through the streets, seeing the thirsty soil absorbing the rain but unable to feel the fine mist which continued to fall, the remnants of the dying clouds. He tried to make sense of the aftermath of the battle, and each time he met them, he eased the fears of the newly transformed. A small flash of gold light up ahead drew him to the scene of a man who still seemed Human. He was soaking wet and laying in a puddle with a big grin on his face. He had a fine gold wire mesh with dull yellow stones at the wires' intersections in one of his hands. In his other hand were some strips of tin foil. Henry watched as they melted against his skin, sliding up his arm. It didn't cling to his clothes but slid underneath, bonding to his skin. Henry could only watch as it covered his face and continued into his hair and down over his other shoulder. Henry felt like he was holding his breath, but the man in the puddle didn't seem to notice. He suddenly stood up and began to run up the street, faster and faster, until he zipped away and out of sight.\n\nHe couldn't believe what he'd just witnessed. Henry looked around and spotted more of the amber stones and gold wire. These stones were glowing with golden light, and there were more strips of the silver foil very close by. He realized this was the shiny debris he'd seen dropping from the dead pseudo-clouds. He reached out to touch it.\n\nA tugging sensation began, and Henry found himself sliding away from the mesh. He couldn't deny the pull. He floated back the way he came until he arrived in a wide plaza next to some apartment towers. The Glass People were congregating there and calling for the others to join them. This was the tugging sensation. They were speaking through the magic. He suddenly recalled the Glass People from the gymnasium and how they'd called out to him, pulling him to them through the magic in him.\n\nHe also recalled Xiong calling out to him that night, so he moved closer to the group's center. The ones standing there seemed to be the ones rallying the others to join them. Henry reached out a phantom limb and touched the one who appeared to be the leader. His fingers passed through the glass surface, but his connection felt like it was boosted considerably. He sent an image of Xiong and the sensation he'd had when he'd communicated with him. He showed his memories of Eden, and suddenly the Glass People became very excited. He felt their hope.\n\nHenry was beginning to quickly tire as he felt a significant drain. Communing with them in this state took so much energy. He left them with a sense of urgency to reach out to his friends on the other side through the magic. Then he pulled back and let himself float upwards to rejoin the flow of the Global Overlay Spell. It trickled energy back into him, but he was so weary. He wondered if it would feel different if he did this when he wasn't injured or inebriated.\n\nThe light dazzled him once more, and he thought the pseudo-clouds were having another battle, but it was just the sun as he flew towards the daylight side of the planet. Below, nothing seemed familiar. He was lost once more as the Earth turned below him. He felt a monstrously large presence over what might be the Pacific Ocean, then he was beyond it. Then it was dark again.\n\nHe was stunned at how quick the flow of magic had become over the globe. There was no sensation of movement except for the sight of the world turning below.\n\nHe watched the man-made lights below as he passed over what he thought might be the west coast of the states, then he was plunged into the relative darkness of the mountains and the plains beyond.\n\nHenry was so tired. He just wanted to go home. How much longer was he going to be trapped up in the sky?\n\nWhere was his body?\n\nChapter 5\n\nJohn F. Kennedy International airport was crowded and noisy, which suited Minkah's purposes. While she was weary from her long flight from Cairo, she preferred to arrive when the airport staff were busy and stressed. While she didn't enjoy the long queues and being immersed in the smell of Humans, the time she'd spend under the customs agents' scrutiny was usually shorter.\n\nNot that her paperwork wasn't perfect or would raise a flag. She'd been doing this for a long time and was a master at getting through international travel hubs with no ripples at all.\n\nMinkah Kamilah Nassor Meskhenet, born in Cairo, Egypt. Age, 30 years. Sex, female. Height, 178 cm. Weight, 63 kg. Occupation, Security Consultant. She wasn't carrying a weapon as she would be supplied whatever she needed by those contracting her work. Besides, she was a weapon. She used her looks to distract her opponents as well as customs agents. Every target she'd faced underestimated her due to her beauty. She was tall and long-limbed with a tight, lean body. She had wavy jet black hair to mid-back, a light tan skin tone, a heart shape face with full sensual lips, and intense, expressive eyes, one of which was light amber while the other was a deep shade of blue. That was all the distraction she'd need to get past airport security.\n\nShe'd been requested by the Hidden Races Council in New York months ago, but she'd been occupied hunting the killer of Thane del Neev, Investigator for Western Europe. Her investigation yielded no results at all, which was evidence in itself. She'd never encountered such a complete lack of information. No one saw anything or remembered seeing anything, at least. She didn't count it as a failure on her part as she'd been exceptionally thorough, almost to the point of driving some potential witnesses to file nuisance charges against her. Nothing had shaken their conviction that Thane had been alone when he died, and none recalled why he was there in the first place.\n\nShe sighed as she inched closer to the customs desk. She casually watched the people around her. All Humans, as far as her sensitive nose could tell, but she was right in the midst of them, so that was not an accurate test. She smiled to herself as they had no idea they had a Bastet standing next to them. She felt eyes on her and ignored them once she determined they were just drawn by her beauty.\n\nThen it was her turn to present her documentation, and she'd lucked into an agent who looked like he was well past done-for-the-day. A few curt questions barked at her, a curious look at her mismatched eyes, her passport was stamped, and she was through.\n\nWalking across the arrivals hall, Minkah reflected on the last time she'd visited the city. It was so many years ago. She had no friends here. Truthfully, she had no friends anywhere. She never felt the need to get to know anyone, as she might have to kill them.\n\nA slight smile came to her lips as she heard the happy squeal of lovers reuniting, their kisses passionate and demanding, and their arms holding each other so tight. She mildly wondered what that might feel like. She'd taken lovers over the years, but none of them had truly satisfied her. She'd never returned to a lover once she'd bedded them. Her string of disappointments prevented her from actively looking.\n\nMinkah prided herself on being self-sufficient. Perhaps that was just a trait of Bastets, as shapeshifters had a reputation for deception. People seemed to feel uncomfortable around her, so it was for the best that she remained alone. She had no problems finding company to share her bed on the occasions when she felt that need. It was better to be able to cut them loose directly afterward.\n\nInstead of relying on others' validation, she found satisfaction in being the best at her job, eliminating threats to the Hidden Races. She was an assassin.\n\nShe was hearing reports of the number of risks increasing and their frequency accelerating. For her, this pattern began with the red-eyed sound tracker in the Nuclear facility. That one had been disturbing, and she'd found it immensely satisfying to kill the creature. Especially since it had killed and partially consumed a fellow assassin.\n\nShe'd found the look on Heller's face amusing as he'd seemed so surprised, yet it was his report she was acting upon. The other assassin had been summoned by the facility manager as she'd seen his report was filed a full day after Heller's.\n\nMaybe Heller thought the other assassin had been the one he'd ordered. It no longer mattered, but she still enjoyed the memory of his look.\n\nShe sank back into the cushions of the cab's seat and gave the driver her destination. Soon they were making their way into the heart of the big city.\n\nWhile killing brought her no thrill, completing her missions neatly and efficiently gave her a deep sense of satisfaction. Her reputation was spotless, and she'd never failed in a mission."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "incubus",
        "magic",
        "non-human",
        "romance",
        "satyr",
        "succubus",
        "werewolf"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/satyr-play-03-pt-01"
}