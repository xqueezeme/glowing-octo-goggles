{
    "title": "Taken by the Wolf Ch. 27",
    "pages": [
        "The Wolf's hands caressed Bella almost idly as she stared at the man she'd once thought she was in love with. Part of her wanted to laugh at the look of outrage on his face, distorted by the ball gag that had been forced into his mouth. Next to him, Lisa was staring at Alex, and Bella felt an urge to throw herself off of the Wolf's lap and on top of Alex, to cover him from his ex's eyes. Not that she really thought Alex would be interested in Lisa anymore, but she hated that Lisa could even look at him. \n\nWaving his hand, the Wolf looked over to the wall. Bella flinched as she recognized the red hair of Nurse Roche and realized what Lisa and Ken were about to endure. \"Nurse Roche, please take Slut and Bitch to be processed. I'd like to spend a little bit of quality time with my Pet and Toy before they go.\"\n\nHe pinched Bella's nipple as he spoke, making her arch as the tiny bud throbbed with a mix of pain and pleasure. Out of the corner of her eye, she saw Lisa and Ken gape at her, and she closed her eyes so that she didn't have to look. Remembering how the Wolf had played with her and Alex before sending them off for \"processing,\" she wasn't sure whether or not she was relieved that he wasn't going to toy with Lisa and Ken. If she'd been forced to watch Alex doing... well, anything, with Lisa, it would have torn her apart.\n\nSlut and Bitch... surprisingly apt names for the two of them. Lisa with her look of excitement when she'd first come in, and Ken, who never stopped bitching. \n\nIt was almost strange, actually. Abby had been Slave. Ken and Lisa were Bitch and Slut... when Bella thought about it, Pet and Toy seemed almost affectionate. And the Wolf was actually petting her, stroking her skin, in between pinching her nipples. Not that it would keep him from being merciless with her, if he felt like it, but Bella couldn't help but make the comparison in his attitude towards Lisa and Ken. Had he chosen them because he thought it would somehow make Alex and Bella happy?\n\nTo be honest, Bella wasn't sure how she felt about it.\n\nBut she didn't have a whole lot of time to think it through either. Watching them being escorted from the room, Ken still trying to yell behind his gag, and Lisa looking back over her shoulder at both Alex and the Wolf, the Wolf was already sliding his hand between Bella's thighs. Beside them, Alex had refocused as soon as the Wolf had made his declaration, his jaw clenched as he watched the Wolf fondling Bella.\n\n\"On your knees, Toy,\" the Wolf said, giving Alex a penetrating look. Bella squirmed as two of the Wolf's fingers slid into her pussy, coaxing the wetness from her soft folds, stretching the entrance. His other hand was still playing with her breasts, pinching her nipples just firmly enough to make her squirm.\n\nSlowly, Alex went down to his knees, not even sparing a backwards glance as Ken and Lisa were led away. His attention was entirely on the Wolf and Bella. Sometimes she truly did feel more like she was the toy, not Alex, and like both of the men were fighting over her. \n\nThe Wolf's hand on her breast slid upwards, to wrap around her throat, forcing her head back so that her back arched and her breasts thrust forward. Her hands had fallen to her side, but Bella didn't move them, didn't try to keep the Wolf from touching her however he wished. The firm grip on her throat didn't hurt, and he wasn't cutting off her air, but it did serve to emphasize her vulnerability. Made her feel even smaller and more helpless, because she knew that she didn't dare try to stop him. He could easily tighten his fingers if he did. \n\n\"Give Toy some lube,\" the Wolf ordered one of the men, who immediately moved to do his bidding. Bella couldn't see the Wolf's expression, but she swore she could feel his eyes glowing behind her. \"He's going to get Pet ready for me.\"\n\nShe whimpered, writhing slightly as his fingers swirled in her pussy, his wet thumb coming up to smear her clit with her juices. The soldier handed Alex the lube, and he took it, his expression stony. \n\n\"Lift up your legs, Pet,\" the Wolf murmured into her ear. \"Give Toy access to that pretty little asshole. You want him to be able to do a good job lubing you up for me, don't you?\"\n\nIt was a humiliating position, leaning back against the Wolf and raising her knees in the air, keeping them spread far apart. She could feel his cock grinding against her ass, partially wedged between her cheeks as the tip of it pressed against her lower back. Her pussy and asshole were completely on display, so that anyone looking up at the dais would be able to see the Wolf's fingers as they frigged her pussy, keeping the folds splayed open. \n\nThen Alex's fingers were pressing against her anus and Bella groaned as the tight hole gave way under pressure, opening for him. Both men had their fingers buried inside of her, moving and pressing against the walls of her body. As always, her asshole burned slightly as it was penetrated, although the slight pain quickly receded to a more pleasant sensation, especially as the Wolf worked her pussy.\n\nShe could only imagine how she looked, with her legs wantonly spread and two men fingering her holes. Alex wasn't looking at her face anymore, his eyes were on the sight before him, entranced by the sight of fingers moving back and forth inside of her. Her pussy lips were coated with her cream, so much that it was sliding down into her crack and helping to lubricate his fingers as they moved in and out of her ass. That tight little ring was pink around his fingers, although not as pink as the swollen folds of her pussy around the Wolf's. The wet sound of the Wolf's violation of her pussy filled his ears.\n\nThe wet musky scent of feminine pleasure made him want to lean forward and lick, her clit standing out like a tempting little pink berry that the Wolf's thumb would occasionally flick, making her tighten down on both of them. Even though he hated that the Wolf was also touching her, that didn't stop his erection from straining as he pushed his fingers back and forth in her ass. Strangely he didn't give a shit that the Wolf might soon be doing something similar with Lisa. He was just glad that soon Bella would be free from this. \n\n\"Stop, Toy, I think she's ready,\" the Wolf said.\n\nAlex hated that he listened. Reluctantly pulling his fingers from her body, he sat back. At this point, there was no way he was risking further punishment. Not when they were so close to being released. Somehow, he was going to find a way to stop what the Wolf was doing... even if he was made to forget, eventually he would remember, he promised himself. \n\nThe Wolf lifted Bella up, and Alex was forced to watch - his face only a foot away - as the older man lined his cock up with Bella's ass. She moaned, whimpering slightly as her tight hole was forced open, gravity pulling her down onto the Wolf's cock. \n\n\"Lick her pussy, Toy.\"\n\nHolding her thighs open with his hands underneath them, the Wolf was practically offering up Bella's pussy to Alex. He leaned forward, and slid his tongue up the center of her folds, making her gasp and rock on the Wolf's cock. Careful not to let his tongue get anywhere near the slick length that was sliding into her, Alex licked up and down her slit, knowing that her soft moans of pleasure were for him. \n\nHis cock throbbed as her sweet flavor coated his tongue, but he didn't touch it. It was one thing to get off because the Wolf was forcing him to, another to jerk himself while Bella's ass was being raped by the crime lord. Moving up to her clit, he sucked on the swollen nub and she cried out, rocking her hips as she sank fully onto the Wolf's cock.\n\nThe sensations were intense. The angle of the Wolf's penetration made him feel huge in her ass, like he was stretching her wider than ever. It was a slow slide down his pole, impaling herself as gravity demanded, and then Alex's tongue started licking up her slit and she clenched, increasing the burn as her sphincter tried to tighten and couldn't. Even though the Wolf's hand was no longer on her throat, as he was holding her thighs wide open and supporting her, her head rested on his shoulder, her body arching and squirming as the pain and pleasure mixed together.\n\nAlex sucked her clit into his mouth and her asshole spasmed, her hands coming down on his head and holding him tightly against her pussy as the Wolf filled her completely and her body exploded in orgasm from the combination. The suction on her clit increased and she writhed, rocking on the Wolf's cock, her asshole clenching and massaging the thick girth it was impaled on, as her pussy spasmed emptily. \n\nWhen she finally fell back with a whimper, her fingers loosening their hold on Alex's hair, the Wolf's cock was still rock hard in her backside and Alex was laving slow, tender licks up the center of her pussy. The swollen, sensitive folds tingled as she panted for breath. \n\n\"Stand up, Toy, and fuck Pet with me.\"\n\nThe Wolf's chair leaned back, his hands holding her wide open, as Alex slowly stood. His cock jutted out in front of him, achingly hard and pointed directly at her pussy. Bella moaned, her eyes closing... she already felt sated and swollen from her orgasm. \n\nThe head of Alex's cock pressed against her pussy and she quivered as he began to push in. The two cocks jostled from room inside of her body, stretching her, making her burn. Her pussy was already exquisitely sensitive from her orgasm, her anal muscles straining from the prolonged stretch of accommodating the Wolf's cock, and yet she still felt pleasure flare as Alex slowly worked his cock back and forth until he was completely buried inside of her, bending over both her and the Wolf. \n\nLetting go of her thigh, the Wolf reached around her, grasping Alex by the throat, his thumb running over Alex's pulse.\n\n\"Fuck her. Hard.\"\n\nAlex didn't want to obey, but his body did anyway. The tight, wet, silky heat of Bella's pussy was gripping him like a vise, and nature demanded that he move. When he did, he didn't have the control he wanted - needed - to go slowly. The Wolf's hand tightened on his throat as he thrust hard, rocking her on the Wolf's cock. He could feel the thick, hard ridge of the Wolf's dick rubbing against his as he fucked Bella, groaning with pleasure as she arched between them in growing ecstasy. \n\nThey all moved together, Alex braced over them, the Wolf surging up from underneath, and Bella caught in the middle, crying out with pleasure that was lightly tinged with flickering flames. The hand on Alex's throat was almost caressing him, impossible to ignore, even as he pounded into Bella, his balls tightening as his orgasm approached.\n\nThen, just as the cum in his balls began to boil, tightening his sack, and his spine tingled, the Wolf suddenly pulled him down by the throat. Their mouths clashed together; the second Alex opened his lips in shock, the Wolf's tongue thrust in. Between them, Bella shuddered and screamed as ecstatic rapture shot through her, her holes spasming around their cocks, milking them.\n\nThe pleasure was so intense that Alex forgot to fight, forgot to try and pull away, and his mouth remained locked with the Wolf's as his muscles tightened and his cum spurted deep into Bella's pussy. He could feel the Wolf's cock throbbing alongside his, filling her ass with hot fluid, the three of them cumming together, setting each other off and causing their pleasure to extend. \n\nWhen he was empty, Alex's knees felt so weak that he pulled out of Bella rather abruptly, sinking down between her and the Wolf's legs as his muscles went limp. It put him right on eye with her pussy, which was glossy and leaking his cum, dripping down to fall onto the Wolf's balls. The other man's cock was slowly shrinking, Bella's reddened anus tightly gripping it even as it dwindled in size. \n\nThe scent of sex and cum was all that Alex could smell, burrowing into his brain. He wondered if even the Wolf's drugs could ever make him forget it.\n\n******\n\nAs they were herded into the shuttle, Bella gripped Alex's hand. The dress that she'd been given to wear felt odd, the fabric rubbing against her skin. Even her undergarments were uncomfortable, despite the fact that they were made from the softest fibers available. And not just because her pussy and anus were still sore from when Alex and the Wolf had double teamed her barely an hour again. She'd been without clothing for so long that it felt unnatural to be wearing any.\n\nBut that wasn't what was making her anxious.\n\n\"I don't understand,\" she whispered to Alex, unconsciously angling herself so that she was partially tucked against him, seeking comfort as she had so often done. \n\nAfter the Wolf had finished with them, they'd both been taken from the room to shower. Then they'd been handed the clothing they were currently wearing, blindfolded, and taken out to a hover car. At first Bella had panicked, thinking that the chips the Wolf had had put in them on their first day would react, but one of the soldiers had reassured her that it had been deactivated. His words had proved true as they'd been driven away from the compound and nothing happened. Bella wondered if the Wolf had lied about the chips. Something had been injected into them that first day, but maybe not what they'd been told. Maybe it had been nothing more than one of the Wolf's mind games. The blindfolds had been removed as soon as they'd reached the shuttle port and they'd been escorted out of the car and to the shuttle. \n\nWhat hadn't happened was what both of them had been expecting - the memory drug. \n\nAlex squeezed her hand reassuringly, although she could see the tension in his shoulders and jaw, suggesting that he was just as disturbed by the deviation. Was the Wolf planning on sending them back with their full memories? The shuttle had the Moon's logo on it, so the moment they set foot on it, they should be safe from him.\n\nBut, how safe? Considering that the Moon's Prime, Second, Prime Commander and Earth Minister all had some kind of deal going on with the devil?\n\n\"No matter what happens,\" Alex whispered in her ear, his voice grave and determined, \"I'll take care of you. I promise.\"\n\nA bubbly blonde stewardess headed towards them from the back of the shuttle, beaming brightly. \"Oh, look at you two! Please, come and sit down, everyone's going to be so excited when you arrive!\"\n\nDespite the seeming sincerity of her friendliness and excitement, Bella couldn't help but eye the woman with suspicion. She was more confused now than she had ever been at the compound. Could they trust the stewardess?\n\nThe woman got them buckled in efficiently enough, babbling the entire time about how excited they must be to go home. Truthfully, Bella wasn't sure if she was excited. In fact, she felt a little sick to her stomach. What was going to happen when they got there? How could they prove that the top officials in the Moon's government had corrupt dealings with the Wolf? \n\nWhy did they still have their memories?\n\nBeing a captive inside the Wolf's compound had been far simpler than this. \n\nBella looked around the shuttle as the stewardess finished buckling them in, telling them that they'd be lifting off in just a few minutes, as another question occurred to her. Where was Trish?\n\n******\n\n\"You have a choice.\" Jordan stood over her, his arms crossed over his chest, his eyes glinting as he looked down at her. Shifting nervously, Trish folded her hands on her lap, trying not to squirm under that stern gaze. Something about the way he was looking at her made her feel even more nervous than usual. \"I'm... retiring, for the lack of a better word. I have all the money I need and a place on an island near the equator. The Wolf is going to promote Zadia in my place and will only call on me if he has need.\"\n\nTrish stared up at him, silently, tensing as she wondered what this meant for her. For the first time, she saw Jordan hesitant, his hand coming up to rub along his jaw in an almost nervous gesture.\n\n\"You can come with me.\"\n\n\"Or... stay here?\" she asked, her voice a whisper. That didn't appeal at all. She'd much rather go with him. \n\n\"Or go home.\"\n\n\"Home?\" she echoed, as if she didn't know the meaning of the word. Truthfully, she just didn't quite understand what he was saying. It didn't compute.\n\n\"To the Moon.\" Jordan glanced at the timepiece on his wrist. \"Alex and Bella will leave for the shuttle in ten minutes. You can go with them or stay here with me.\"\n\nHer heart was beating so hard and fast that she was sure she could hear it in her ears. Go home? Escape this... sexual servitude? This man who had taken her against her will and used her as his personal sex toy? Home to... what? People who looked down on her, a society that was rotten from the inside out, where wealth was valued over commonsense and work ethic... home where no one had even cared that she was missing... \n\n\"What would I do, if I stayed?\" she heard herself asking, her voice sounding far away. Like a stranger's.\n\nJordan stepped closer, his hand reaching out to cup her chin, fingers stroking her cheek softly. \"The same thing we've been doing. Be mine. Decorate my home. Sleep in my bed. Let me take care of you.\"\n\nIt was that last one that sent a shiver down her spine. The gentle way he said it, the way his voice and eyes softened. \n\n\"Why me?\" she asked, her voice husky. She sucked her lower lip in, wetting it, even though her mouth felt dry. It was the question she'd wondered from the beginning. \n\nThere was a long moment, tension stretching between them, and she thought he might not answer. Then he sighed, his face carefully blank of all emotion. \"Because I don't want to let you go.\"\n\nFrom a man like Jordan, it was probably the most emotionally revealing statement she was going to get. It might as well be an avowal of love. Maybe it was just possession, but he was always gentle with her, always caring, always cherishing. A man didn't ask his possession if it wanted to stay with him. He didn't give his possession a choice. Trish wavered for only a moment. Perhaps she had gone insane. Perhaps this was Stockholm's Syndrome and she should be going home to throw herself at the mercy of a shrink. Instead, she nodded her head. \n\n\"I'll go with you.\"\n\nEmotion flashed in Jordan's eyes, hot and triumphant, and he suddenly crouched down so that they were on eye level, his fingers firming on her jaw. Holding her immobile. Something warm and tingly pulsed through her core in response. \n\n\"Say it again, baby girl,\" he murmured. Demanded, really. His eyes bore into hers with a neediness that shocked her.\n\n\"I'll go with-\" \n\nJust as she started to say 'you,' he was on her, his mouth covering hers, lifting her up and moving her further back on the bed so that he could lay atop her. Hard muscle pinned her to the bed and she whimpered as hot need swirled. It might be sick, but she didn't care anymore. Here, she was wanted. Needed. Pleasured. Cared for. Cherished.\n\nHer hands were pushed above her head as Jordan groaned with need, his tongue thrusting into her mouth even as his hips ground against her pussy. Holding her wrist in one hand, he used his other to yank her thigh up and open, and then undo the front of his pants. He was like a starving man, hungry for her, needing to lay and confirm his claim now that she'd made her decision.\n\nTrish gasped as he thrust inside of her, hot and hard and completely impatient, filling her with his cock. She was wet enough that it didn't matter, even though her inner muscles strained to take him so quickly. Moaning, she gave in, submitting herself and sinking into the pleasure as he took her. It was so easy to just let go and be free. \n\nAnd her ecstasy soared.\n\n******\n\n\"Excuse me,\" Bella said, as the stewardess was about to turn away. \"Where is Trish?\"",
        "\"Who?\" The stewardess looked at her, confused. Alex frowned. Guilt slid through him as he realized he hadn't even thought about what had happened to Trish, he'd been so focused on Bella and relieved that she was getting to safety. Granted, everything he'd seen of the other young woman had shown that she was being treated differently -- better in some ways -- than he and Bella had been in the compound, like she'd been accepted there, but it grated on him that he'd let her fate slip his mind. It bothered him even more than the stewardess looked confused.\n\n\"The other woman who was taken at the same time as us? The blonde?\" Bella persisted, looking even more concerned.\n\n\"Oh.\" Recognition dawned on the stewardess' face. \"I think I remember something about her from the news vids. They really didn't say much though. I guess she doesn't have any family or something?\" The stewardess shrugged, completely unconcerned. \"No one told me, they just said that you two are going home. I'm sure she'll be sent home eventually, the Wolf never keeps anyone for more than a year. You two are much more important, your families never stopped funding the search for you, they said so on the news.\" She smiled brightly at them.\n\nRage boiled up inside Alex, and only Bella's sudden taking of his hand kept him from snapping at the stewardess. It was obvious that she didn't think Trish mattered at all. Or that she thought there was anything really wrong with the ordeal they'd just gone through. It was an attitude typical of the Moon -- as long as no one important was really affected, then it didn't matter. \n\nTaking a deep breath, he closed his eyes and focused on Bella. \n\nBella clothed. Bella beside him. Bella safe. \n\nWhen they got to the Moon, he'd find a way to find out what happened to Trish and rescue her too.\n\nCompletely oblivious, the stewardess told them to have a good flight, and he heard her scuttle away. Bella's fingers stroked his, as though she was drawing comfort from him as well. Letting out a long breath, he felt the tension in his shoulders slowly dissipate. Releasing her hand, he wrapped his arm around her shoulders and she snuggled in as much as she could in the seats they were sitting in. \n\nHe wondered what would happen when they got to the Moon. Would they be met by the Prime? Prime Second or Commander? Ken's father? Threats to keep quiet about what had happened to them down there?\n\nAlex smiled grimly. He might keep quiet for a while, as he planned, but there was no way he was going to let them get away with their corrupt dealings. The Moon needed to actually be independent of the Earth, so that they were no longer beholden to the crime lords for their necessities. They needed to stop allowing young men and women as part of the exchange. On Earth, Alex had learned too much. Both about what was actually going on, and about himself. He was stronger than the weak-willed bastards who called themselves leaders.\n\nThere was no way they could keep him quiet. Not for long.\n\n******\n\nBright light seemed to pierce right through her eyelids and she moaned. Her head hurt abominably. She reached up to tentatively touch her forehead, and moaned again. The skin felt tight. Tingly. Painful sparks seemed to radiate from where her fingertips had pressed so gently against her skin.\n\n\"I know, sweetheart, I know it hurts, just give us a moment.\"\n\nA woman's soft voice, meant to be soothing, but it was like grating metal to her ears. She whimpered.\n\nSomething pressed against her neck and she recognized the hiss of a pressurized shot. Blessed cool relief slid through her and this time her moan was pure gratitude. Opening her eyes, she had to blink several times as her eyes adjusted to the light and the stark white of the ceiling and walls. She was lying on her back in what looked like a med-space.\n\nA gentle looking older woman with dark brown hair, peered down at her, eyes checking over her. \"How are you feeling?\"\n\n\"It doesn't hurt anymore.\" Her mouth felt strange, dry. \"Water?\"\n\n\"Of course, here you go.\" \n\n\"Thank you.\" She lifted the bottle to her mouth and nearly sighed with happiness as the water washed away the strange taste on her tongue. Looking around, she felt a small chill as she lowered the bottle. \"Where am I? What happened?\"\n\nThe woman peered at her again. \"Do you remember your name?\" she asked, instead of answering either of the questions.\n\nStrangely, it didn't come to her immediately. \n\n\"Bella?\" she said, but she heard her voice coming out more as though it was asking a question. The woman smiled, pleased, and nodded her head.\n\n\"What's the last thing you remember?\"\n\nThat was harder. The answer didn't just pop into her head. She had to really think, and it kind of hurt, almost as if the answer was awakening the headache that she'd woken with. \n\n\"I was on Earth with Ken... and his friends Alex and Lisa...\" And now she was in a med unit. Fear flashed through her. \"Oh my god, were we in an accident? Where are they?\"\n\n\"Shhh, shh, calm down,\" the woman urge, reaching out to take Bella's hands, rubbing her thumbs over the backs of them as she tried to sooth Bella. \"There was no accident. You and Alex were kidnapped while you were on Earth, taken by the Wolf. You've just come home.\"\n\n\"Alex and I?\" Bella murmured, confused, her brow winkling. But that didn't make sense. They'd gone down as a group of four for safety. Why would she and Alex have separated themselves from their significant others? Something swirled in her head, like a picture that wasn't quite coming together, but then the woman was talking again.\n\n\"We've found that being taken by the Wolf, especially for as long a period of time as you and Alex were, is incredibly traumatic,\" the woman explained, earnest and sincere. The warm kindness in her voice helped to calm Bella much more than her words did. \"It's best to administer a drug to you, which makes you forget your time down there, so that you can continue your normal life here. You don't have to worry about any after effects. We've been doing this for a while. The government pays for the treatment, at no cost to the Wolf's victims.\" Her eyes flashed a bit angrily. \"One day that monster is going to get what he deserves.\"\n\n\"I... see...\" Bella said. Except that she didn't, not entirely. What the woman said made sense, and she was obviously sincere in her emotions, but Bella had the strangest feeling that everything the woman was saying was wrong.\n\nWith a sympathetic look on her face, the woman released Bella's hands, patting them. \"I know, it's an adjustment. You've been gone for several months, but it feels like nothing, right? Don't worry, it won't take you too long to adjust. We're releasing you from the hospital today and you'll be able to slide right back into your old life.\"\n\n\"Okay...\" Bella rubbed her head. It felt like there was something inside her brain, trying to get out. \"Can I see Alex?\" For some reason it felt imperative that she find Alex as soon as possible. She wasn't sure why. Maybe just because the woman had told her that they'd been through their ordeal together. They weren't exactly close, although she'd always admired him. \n\nThe pressure on her brain seemed to tighten, the more she thought about him. \n\n\"Yes of course,\" the woman said, looking somewhat relieved. \"Come on, let's get you dressed and I'll take you to him.\"\n\nIt only took a few minutes for Bella to put on her clothes. They felt strange, unnatural, although she didn't know why. Maybe she was just still disoriented. It was very odd to know that she'd been on Earth for months and yet she couldn't remember any of it. She recalled seeing the victims of the Wolf being released from the hospital, the blank looks on their faces. This must be why. And that's why they never answered the media's questions; because they couldn't remember. \n\nMaybe the woman was right and it was a blessing. After all, from what the day captives said, things down there were perverse. Orgiastic. Completely hedonistic. If she'd been raped and sexually tortured, she shouldn't want to remember.\n\nRight?\n\nThey entered a room that looked more like a lobby. Alex was sitting there on a couch, leaning forward and resting his arms on his elbows, a man in front of him, leaning forward and talking to him. As Bella and the woman came in, Alex looked up and something in his expression cleared, relief showing stark across his face.\n\n\"Bella!\"\n\nHe jumped up and she found herself lurching forward, practically throwing herself into his arms. Her body had moved before she had time to think about it, but once she was pressed against him, his arms tight around her, she immediately relaxed. It felt familiar. Safe. If they'd been captured together then they must have leaned on each other, so that only made sense. \n\nThe man and woman had moved together and were talking in low voices, sounding surprised about Alex and Bella's reactions to each other. \n\n\"Are you okay?\" Alex murmured, keeping his voice low, as he pulled away slightly so that he could look down at her.\n\nEven under their current circumstances, she couldn't help but notice how attractive he was. How drawn to him she was. Shouldn't she be feeling guilty about that? After all, Ken was her boyfriend... but surprisingly she didn't feel guilty at all. And when she thought about Ken, all she got was a kind of sick, unhappy feeling. But why?\n\n\"I'm okay... just confused. They said we were taken by the Wolf, but I can't remember anything,\" she whispered, letting some of her consternation show.\n\n\"I know... the last thing I remember is being really angry, but I can't remember why.\" His brow furrowed, his arms tightening on her. Bella liked the way it felt.\n\n\"Angry? When we were on Earth?\"\n\n\"Yeah... I think it had something to do with Lisa, but I just can't remember what.\" His frustration was clear in his voice, but his words were doing something to her. Stirring some kind of emotional response that seemed to be attached to a memory.\n\n\"I think... I remember being mad too... at Ken...\" she said slowly, trying to sort through her feelings and the memories that seemed to be little more than wisps floating through her head. \"Mad and sad.\"\n\n\"I don't know what happened to us, but I'm going to take care of you, Bella, okay?\" Alex pulled her in again, tucking her head beneath his chin and she nestled in like it was the most natural thing in the world. It felt right.\n\n\"Okay.\"\n\n\"Get your hands off her!\" The door slammed open and Bella jumped, instinctively clutching at Alex as he practically shoved her behind him, already moving into a defensive stance, ready to protect her from whatever was after them. \n\nThe man and woman in the room with them both jumped as Ken's father came barreling in. Bella had always been intimidated by him, but she'd grown to like him too. Now, looking at him, something in the pit of her stomach roiled and she felt like throwing up... her instincts jibbered and shrieked, telling her to flee. Since she couldn't, she just clutched at Alex's back, holding him in place, while simultaneously clinging to him for comfort. \n\n\"What the hell?\" Alex asked harshly, one hand in front of him to help fend off Ken's father, the other behind him as if to herd Bella. \"What are you doing here?\"\n\n\"Keep my son's girlfriend safe, apparently,\" Ken's father said, glaring and stabbing an accusing finger at Alex. \"He's been kidnapped, taken by the Wolf, just days ago and you're already trying to steal her away from him?!\"\n\nThe way that Ken Sr. was looking at her made Bella's skin crawl. She shuddered, not knowing why. It was an unusual reaction. He looked angry, which wasn't a surprise considering that Ken had been taken, but... \n\nWhy didn't she feel upset about that? If anything, she felt a strange sense of... what? Vindication? Justice?\n\nAn image formed in her mind of Ken... begging. Naked. With a woman, also naked, by his side, also begging... Alex. Ken and Lisa, begging her and Alex not to be upset. Bella moaned as she pressed her fingers to her temples as the images became clearer, her emotions rioting and bringing them back. Strong emotions. \n\nAnger. Betrayal. Hurt. Pain. Loss.\n\nShe shook her head to clear her mind, only now noticing that Alex was holding her again, his voice filled with worry as he said her name.\n\n\"I'm okay,\" she said, shakily. Ken Sr. stepped forward and she cringed back as Alex practically snarled at him. The man that Alex had been talking with reached out and pulled Ken Sr. back. \"But I'm not Ken's girlfriend. He cheated on me with Lisa. We broke up. That's how we - Alex and I - got captured. We left them in the hotel where they'd been... anyway. We left, and they took us from taxi.\"\n\nTension filled Alex's arms. \"That's right,\" he said, his voice going hard. \"I remember now.\"\n\n******\n\nIf Alex hadn't been looking directly at Ken Sr., he would have missed the consternation and something that looked a lot like fear which flitted across his face. Bella nuzzled into Alex's chest, and he tightened his arms around her. Since he'd woken up he'd been confused, agitated, and a bit angry. Now, with Bella in his arms, some of that was soothed.\n\nWhatever had happened down on Earth, he instinctively knew that no matter what, he had to take care of Bella. It wasn't logical, he didn't know - or at least didn't remember why - but that was what he felt. \n\nIt was like a sensory memory, something that he just knew. \n\nKen Sr. turned to the doctor, the man that Alex had been talking to. He could only assume the woman who had come in the room with Bella was another doctor. Their furious, whispered conversation wasn't entirely audible to him, but he realized that he was picking up much more of it than he would have thought possible. Almost as if he was used to listening in to conversations like this.\n\n\"...how can they be remembering? That shouldn't be...\"\n\n\"... close to the initial event that we aimed for.... no other explanation.... shouldn't remember any more....\"\n\n\"Give them more of the drug.\"\n\n\".... too dangerous. They've already had the maximum.... possible he did something...\"\n\nBella murmured something against Alex's chest. Distracted, he looked down at her, stroking her brown hair as he held her tenderly. He remembered Lisa cheating on him. His rage at the betrayal, both by her and his best friend. Practically dragging Bella out of the hotel, convincing her that she deserved better than a cheating ass like Ken. \n\nSomething else though, too. Holding her protectively... while they were naked, on a bed. Feeling... tenderness... protectiveness... love... joy. All very strongly. The emotions seemed to be key. They came first, followed by images. Impressions. Memories that slowly became a little more clear.\n\n\"Come on, Bella, I'll take you to your family.\" Ken Sr. had stepped away from the doctors again. Alex didn't like the glint in his eye. Something else stirred in the back of his mind, farther away, attached to anger. Maybe it was just residual, leftover from his anger over Ken Jr. \n\n\"No!\" Bella's voice came out panicked as she turned slightly, holding onto Alex even tighter. \"I want to stay with Alex.\"\n\n\"Sir, it's best if you not distress them,\" the male doctor said. Alex realized that the man had never given Alex his name. \"We'll take them to their families.\" Bella made a small noise of distress and he looked over, giving her a reassuring smile. \"Both of you together, of course.\"\n\nKen Sr. looked as if he wanted to countermand the doctor's orders, but the woman gave him a sharp look and he subsided, allowing them to be led away. Something close to hatred stirred in Alex's chest, and he felt like he could almost remember why... and then they were leaving the room and it subsided.\n\n******\n\n\"I'm doing okay, mom, I promise,\" Bella said, doing her best to reassure her mother. \n\nIt had been two weeks since she and Alex had returned home to the Moon, their memories wiped. Two weeks of trying to get them back. Maybe they should just leave it alone, but neither of them seemed to be able to stop poking at them.\n\nEspecially because sometimes, something came through.\n\nBella had had a particularly bad spot on her second day home when her parents had wanted to take her to the doctor. She'd had a full blown hysterical panic attack, that only calmed when Alex held her, reassuring her that she didn't have to go to the doctors. Her parents, terrified of her response, had quickly agreed. That hadn't stopped the memories from cascading back. Not all of them, of that she was sure, but she remembered Doctor Margolis. Remembered his cruel smile, the electricity that he'd tortured her with...\n\nWhen her parents had left, she'd told Alex about it. His resulting fury had made him remember a name - Nurse Roche. Although he couldn't remember why he knew that name. It just popped into his head. \n\nEventually they figured out that the more strongly they had felt about something, the more likely it was they'd be able to remember it eventually. Sometimes it burst out, like an explosion in their minds, other times it came more gradually. Alex was constantly protective of Bella. The other day they'd been nearly caught out by media, who had realized their location when they'd gone to get groceries, and a young, blonde-haired woman had nearly been injured when she'd been knocked over. Alex had gone practically ballistic, yelling at the media, protecting both Bella and the young woman with his body until security showed up.\n\nWhen they got home, he told her about Trish. He remembered her more clearly than Bella did. They'd started trying to look up what might have happened to her, but there was no real news coverage of her kidnapping, nothing to indicate where she might be now. There was plenty about Bella and Alex though, including clips from Ken and Lisa begging for their return. It had sent Alex into another ranting rage that Bella had calmed by cuddling with him.\n\nThey hadn't had sex. Not yet. Alex was being a gentleman and Bella... well, Bella was getting impatient. She was living in his house, sleeping in his bed, in his arms, every night, and yet the few times she'd tried to initiate, he'd been too worried that they were reacting to things they couldn't remember. Too worried that she was emotionally vulnerable and that he would be taking advantage of her.\n\nAt this point, Bella was starting to think she was going to need to take advantage of him.\n\nHe wasn't home right now though. He'd gone out to look for a job. The government was funding them right now, kind of a grant for the trauma they'd been through - even if they couldn't remember it - but Alex felt a pressing need to do something. Maybe something political, he'd said. Bella hadn't entirely understood, and she didn't like being separated from him during the day, but she was learning to deal. And it did give her more time to try and remember things.\n\nThey'd quickly learned that it was frowned upon though. They'd been in touch with a few of the Wolf's former victims, none of whom wanted to even try and remember what had happened to them. They'd looked askance when Alex and Bella had even hinted that some things were coming back to them. The next day, a doctor had dropped by - nearly sending Bella into another panic attack. She hadn't been at all like the doctors that had taken care of Bella and Alex when they'd first woken up. She'd been stern, uncompromising, and had told them that they could damage their own brains by trying to force memories to return. They needed to concentrate on re-establishing their lives, not on the past.\n\nOf course that was kind of hard to do when so many things about her life made Bella unhappy. She couldn't stand to be around Ken's father, although his parents had both tried to reach out to her and Alex. Living at home wasn't an option; she had too many panic attacks at night when she wasn't with Alex. Her cheating boyfriend had disappeared, presumed a captive of the Wolf. Ken's parents were funding the search for him and his and Lisa's faces were on the media almost every day. Interest had soared, since they had already been known from Alex and Bella's ordeal.",
        "\"You aren't going to watch the broadcast, are you? I don't want you to be all alone, when you see it. At least wait for Alex if you won't watch it with us,\" her mother pleaded.\n\n\"Of course, mom, I'll wait for Alex,\" Bella said, lying through her teeth.\n\nToday, for the first time ever, the Wolf was going to be broadcasting a message to the Earth's media. It was also going to be playing on the Moon. If Alex wasn't back in time, Bella would be watching it alone, because there was no way she could wait. She needed to see the man who had held her captive for months. To see if it would spark something - anything - in her memory. Sometimes it felt like her memories were right there, on the other side of a wall, pounding at it and trying to get through.\n\nFinally she managed to convince her mother that she was just fine and to get off of the phone with her. She knew her parents meant well, but sometimes they drove her up the wall. It was like they expected her to be broken, and that's how they treated her. But she wasn't. Even with the things she remembered, she didn't feel broken. Sometimes, even when she remembered something awful, like her time with Dr. Margolis, she felt stronger afterwards. Because she'd come through it. At least, she didn't remember going insane.\n\nHalf an hour later, after a lot of channel flipping, the broadcast finally started. Alex still wasn't home. Curling up with a cushion between her thighs and her chest, Bella turned it to the news, so that she could see the announced broadcast.\n\nThe first thing that struck her was the man himself. The media had tried for so long to get a good, clear picture of him and had never achieved it. But the moment shes saw him, there on the screen, she felt something inside of her shift in confirmation.\n\nYes, that's what he looks like. \n\nIt was him. Not an actor or an impostor, like some of the reporters had theorized would show up. That was the man himself. Bright green eyes, piercing, a hard face, and dark black hair that was silver around his temples. One of the reporters said something mocking about that sign of age that had been allowed. Idiot. As if a bit of grey hair somehow made the Wolf less powerful. He had no need to cling to his youth to create an imposing presence, he was all on his own.\n\nThe image began to zoom out and Bella tensed. Something inside of her recognized the location. A dais, with the Wolf in the center, seated in a chair that was almost a throne. On either side of him, kneeling and naked - although their genitals had been blurred out by the censors - were Lisa and Ken. Behind him hung two black bordered banners with a sigil on them.\n\nThere was a roaring noise in her ears, drowning out whatever the reporters were saying as she stared at the sigil. It looked like an S with a horizontal bar through the top curve. Nothing that should have meant anything. Definitely nothing that should have sent a strong surge of emotion through her.\n\nIt was one of the few strong, positive emotional reactions that she'd had. The only one she'd had that didn't have to do with Alex. Bella licked her lips, trying to distance herself and study what she was feeling. Excitement. Joy. Hope. But why? Why would that sigil incur those feelings?\n\nThe pressure seemed to be building in her head, and then all of the sudden the camera zoomed in to the Wolf again and Bella nearly cursed. Her focus was lost and the pounding receded. It wasn't the first time that had happened when she was trying to remember something and it wouldn't be the last. She made herself attend to what the Wolf was saying, hoping it would bring something back. \n\nNothing. He was addressing the people of Earth. Declaring how important he was. Telling them that he had the son of a government official of the Moon at his beck and call. When prompted, Ken stood and spread his legs apart, bending forward. A woman came up, very pretty with red hair, and began to spank Ken with her hand as the Wolf continued to talk.\n\nThe cameraman was apparently too fascinated by what was happening to Ken to zoom back in on the Wolf, although he didn't zoom in in Ken either. Probably worried for his job if he did something so blatant. This was the first time the media was getting a look at the Wolf's sexual decadence.\n\nSomething about it all rang completely wrong to Bella. She noticed that the Wolf kept gesturing up to the sigil, which drew her eye again, as he began to talk about how all those loyal to him should wear it. Declare themselves for him. Because the Moon was using too many of the Earth's resources, stealing them from those who labored for them, and it was time to put an end to it. His words seemed to shift in and out of her ears, meaningless babble as she felt the hope and joy growing in her chest the longer she stared at that sigil.\n\nHer hand reached out as if to touch it... \n\nAnd she jerked back as the door opened.\n\n******\n\nThe guilty look on Bella's face as Alex came in the door told him all he needed to know. She was watching the broadcast, even though she'd said she would wait for him. He sighed, but he wasn't truly angry. Somehow he'd known. But there was something else in her expression too, the kind of excitement that she usually showed just before she remembered something new. \n\n\"Come here,\" she said, the guilt washing away quickly as she pointed at the screen. \"Look at that, on the banner behind him... do you feel anything?\"\n\nAnger, as he looked at the Wolf, but nothing specific enough to spark a single memory. Probably there were too many tied up with the man. But he did recognize him, immediately, and knew that he was the real deal. Alex barely glanced at Ken and Lisa, although his eye lingered on the redhead for a moment. Looking at her made his balls ache, and not in the good way that he associated with being around Bella.\n\nThen he looked at the banners that Bella was so excited about. His chest tightened, and it took him a moment before he realized he felt rising excitement too. Excitement and... triumph? \n\nThe dark hole in the back of his mind opened up, except that it wasn't dark, there was light in it, like a tunnel...\n\n\"A tunnel, yes,\" Bella said, her head jerking back around to stare at the television. The same hope and excitement that he felt in his chest was glowing on her face. He hadn't even realized he'd spoken out loud. Her hand reached out as if to touch the sigil. \"The way out... Alex, we knew the way out!\"\n\nFUCK.\n\nHe groaned as he went to his knees, gripping his head in his hands. It wasn't just that one memory that had become unblocked, it was like they were all coming tumbling through the tunnel, one after other, assaulting him. from every side.\n\n\"Alex? Alex are you okay?\"\n\nThe panic in Bella's voice made him want to leap up and take down whatever was scaring her, but how could he protect her from himself? He hadn't been able to at the Wolf's compound. Hadn't been able to when they'd been returned the Moon, forcibly separated after landing, and then given the memory drugs. Not that the doctors had realized what they were blocking the memories for; Alex was pretty sure that they truly believed they were helping, that Alex and Bella had been traumatized by their time with the Wolf and needed protection. \n\nThose fucking Moon officials...\n\n\"Bella... I remember everything.\" His voice cracked. With his eyes closed, so that he couldn't look at his face, all he could see was the memories rushing by, filling that empty, gaping hole. \"The things I did to you...\"\n\n\"Alex, you wouldn't, you always took care of me, I know that,\" Bella said, rubbing her hand over his shoulders trying to soothe him. \"I don't remember everything, but I KNOW that.\"\n\nThe faith in her voice, the trust, made him feel like he was splintering apart inside. He could remember how much he'd enjoyed fucked her. Dominating her. The sick part of him that had become aroused whenever the Wolf had fucked her too. Down there it hadn't seemed quite as bad; now, having been back, no longer in the situation, all he could do was pick apart every single thing he'd done. \n\nHe was a monster, and she didn't even see it. \n\nGrowling, he grabbed her wrist, pulling her down onto the ground as she shrieked, and rolling atop her, pressing her lower body into the ground with his as she stared up at him. Despite that, once the surprise receded, she didn't look scared.\n\n\"I raped you, Bella,\" he said, rocking against her, feeling his cock starting to grow as it rubbed against her softness. \"I hurt you because he told me to.\"\n\n\"You protected me,\" she countered, shocking him as she wrapped her legs around him, arching beneath him. There was no way he could misinterpret the hot arousal filling her eyes as she tilted her chin challengingly. \"I chose you. I remember choosing you, Alex. I remember you trying to fight him.\"\n\n\"Dammit, Bella, I'm a monster!\" he yelled, trying to pull away from her, but her legs were wrapped too tightly around him.\n\nMaking a frustrated noise under her breath, Bella reached up and grabbed his head, pulling him down as her lips came up to meet his.\n\n******\n\nIdiot man. Then again, she wasn't entirely surprised at Alex's attempt to take the entire burden of guilt onto himself. Her memories were coming back. Not as quickly as Alex's head - that had looked painful as hell - but they were sliding back in one at a time. Most of them to do with Alex, most of them surrounded around her admiration for him, her appreciation of him, her love for him. \n\nShe remembered him hurting her. She also remembered him holding her as he told her why. She remembered them fucking, and she also remembered them making love. Alex's arms around her at night, creating a safe haven in the midst of uncertainty. Her fear for him as he tried to fight to keep her safe. The way he'd constantly put his own body between her and perceived danger.\n\nBella kissed him. Hard. Passionately.\n\nMaybe the idiot didn't remember everything, maybe he was only remembering the bad, because right now she was remembering a lot of the good. His mouth tasted of mint and chocolate, his cock rocked against her pussy and she flooded with anticipation. Memories slid through her, both good and bad, many of them arousing her even though it made her feel a little ashamed to be turned on by them... but then again, she'd been turned on when they'd been happening to her. \n\n\"Bella...\" Alex sounded tortured as he pulled his mouth away from hers, although he was no longer trying to detangle their bodies completely.\n\n\"Shut up,\" she said fiercely, glaring up at him. \"I remember choosing you, Alex. I remember how guilty you felt when I did it, but I didn't feel any guilt until the Wolf took you instead. I always liked you, even when Ken and I were together. And while we were down there... I think... I know... I couldn't have made it through without you. You were everything to me. You still are.\" \n\nHis gaze softened, his fingers brushing over her cheek as she blinked back tears.\n\n\"I remember us touching. You holding me. I remember how much I liked it,\" she murmured, rubbing her hand over his chest, now that he seemed to be softening. Listening to her. The intense look in his eyes didn't go away though, it just shifted, changed... heated. \"I think... I might have fallen in love with you down there, Alex.\"\n\nSomething flashed through his eyes. Hot. Possessive. Relieved. This time his lips came down on hers by choice, demanding and hard. Bella moaned into his kiss, thankful that he'd finally stopped being so gentle with her. \n\nShe tore at his shirt, and suddenly they were both in a frenzy to get each other's clothes off. To be skin to skin, they way they'd been so accustomed to. Neither of them even noticed the Wolf's voice droning on in the background - or if they did, it was subconsciously and it didn't distract either of them. With their memories fully returned, they were used to his presence. \n\nAlex squeezed her breasts, his mouth coming down on one nipple and she writhed as his teeth scraped against the little bud.\n\n\"Harder,\" she pleaded, arching and thrusting her breasts up into his face, her fingers weaving through the dark locks of his hair. \"Please, Alex.\"\n\nHe sucked harder, biting down as his fingers pinched her other nipple tightly and Bella shuddered as the sensation went straight to her pussy. She rocked, trying to rub herself against him, and was only able to reach his stomach. The hard length of his erection was pressing against her thigh, but not anywhere near enough to her pussy to satisfy her. \n\nThe rough manipulation of her sensitive nipples was making her wild, and she begged and pleaded for him as he toyed with her. It was hedonistic. Painful pleasure. All the things she'd reluctantly liked about their time with the Wolf, except without the humiliation, without the fear, without the shame. And it was with Alex. Just Alex.\n\nWhen he moved up her body, taking her lips as his cock thrust into her pussy, Bella nearly orgasmed as their bodies aligned. She clung to him, moaning wildly as he began to slowly move back and forth, his large cock spearing her open and stretching her. After a steady diet of sexual contact with the Wolf, and then nothing for the past few weeks, she felt needier than ever... but she was also tight and needed the time to adjust to his size again. \n\nOne hand slid down her back and under her buttocks. Her juices were trickling down the crease of her bottom, and she felt his finger slide through them, rubbing over her anus. She tightened around him, her body stiffening as his finger rimmed the little hole, pressing gently on it. Part of her wanted to tell him no, while the rest of her screamed yes. \n\nThe sensitive bundle of nerves seemed to spark as the tip of his finger slid in, pumping gently as he continued to rise and fall over her, his tongue invading her mouth, so that it was like he was taking her in all three holes at once. Bella felt herself giving over to the sensations, giving in... submitting to Alex's protective dominance. \n\nEcstasy swirled through her, from every inch of her, and she began to buck and writhe beneath him, her orgasm swelling higher.\n\n******\n\nIt was sick, so sick, but he liked the stiffness of Bella's body as his finger first pierced her anus. He loved the surge of power that came when she didn't protest, when her slick pussy tightened around him and she gave herself over to pleasure instead. Accepting him, all of him. The Wolf had shown him that there were some ways in which they were similar, but if she'd told him no, he would have honored that barrier. \n\nThat was how they were different.\n\nAnd Alex clung to that.\n\nBut he couldn't deny the effect it had on him when she didn't tell him no. \n\nHis finger went deeper into that hot, tight channel, his thrusts becoming harder as she arched beneath him, crying out. The tremors of her pussy became spasms as her inner muscles clenched, trying to milk his cock. Alex groaned, crying out her name as his balls tightened and he swelled inside of her clasping heat. Fulling impaling her on both his cock and his finger, he groaned as he felt the pulses of his own dick against the digit in her ass, filling her pussy with cum. \n\nHead bowed, he pulled his finger out, his cock jerking slightly at her soft whimper. \n\nStill half-hard, still pressed inside of her, he kissed her lips, her nose, her eyes, enjoying the way she squirmed beneath him, her fingers stroking her skin. It was like rediscovering her now that their memories were back. \n\nA long while later, still entangled on the floor, although now he was on his back and she was on her side, curled up against him with her head resting on his shoulder, they listened to the news anchors debating whether or not the Wolf meant to go to war with the Moon. They scoffed at the very idea, jeering his claim that the Moon couldn't last very long without the support of the earth - one of them laughed and said \"Didn't anyone tell him we're self-sufficient?\"\n\nBut Bella and Alex knew differently. They remembered.\n\n\"What are we going to do?\" she asked, softly, her fingers sliding through the hair on his chest, almost petting him. Alex found her gentle touch soothing, if a bit ticklish.\n\nHe'd been thinking the exact same thing. \"We're going to tell them. Tell everyone. Okay?\"\n\nThere was only the barest moment of hesitation before she nodded her head. \"Okay.\"\n\n******\n\nFive Months Later\n\n\"Sir?\" A man came running up to his desk, his face slightly panicked. \"The report you wanted, Sir.\"\n\nIt only took a moment to scan and then he was shoving it back across the desk. \"Get them out.\"\n\n\"Sir?\"\n\n\"Send her a message. 'It's time to escape the cage and fly free,' along with the shuttle number and the meet time. We'll get them out tomorrow, with anyone who will come with them.\"\n\nA small hand tugged on his pants from underneath his desk. \"Master?\"\n\nRaising his eyebrow, he scooted back slightly so that he could look at the woman curled up there. She rarely tried to get his attention when he was busy, so he assumed that whatever she wanted, it must be important.\n\nDark eyes peered up at him, filled with worry. \"Master, may I send a message to my parents?\"\n\n\"Of course,\" he said, sliding his chair all the way back so that she could scramble out. \"And when you return, you will thank me properly for allowing you to do so.\"\n\n\"But of course, Master,\" she said, cheekily, her curvy bottom jiggling as she turned to go with the soldier. \n\nA thin smile curved his lips. She was not who he would have chosen to keep, but she had begged to stay and he was content enough. There was an old Earth saying - \"If you love something, let it go. If it comes back, it's yours.\"\n\nThey weren't his, but he would still do what he could. In the meantime, his sweet Slut was devoted and she had begged, kicked and screamed to stay with him when he'd sent Bitch home a month ago. So he'd let her.\n\nHe hit the button on his desk that brought up his private vidphone. It only took a minute of chiming before the call was answered. The hard face that showed up was actually softer than it used to be, although just as familiar. \n\n\"We're sending a rescue mission tomorrow. Tell your girl to send her messages.\"\n\nThe other man's face relaxed even further. \"Thank you, Sir. Do you want me to go up with them?\n\n\"Zadia will be going, but if you want to go, I'm not sure if it will help or hinder to see a familiar face.\"\n\n\"It might help, if I bring Trish,\" Jordan said, almost cheerfully. His eyes glinted; he was looking forward to seeing some action again. \"They've been trying to find out what happened to her, and she'll be able to reassure them.\"\n\nAh yes. Along with putting their lives in danger by telling anyone, and everyone, who would listen about the Moon government's duplicity, starting civil panic when people realized it was the truth, and attempting to overthrow the Moon's government with the more levelheaded of its citizens, his former Toy and Pet had also sent video pleas to Earth asking for information about Trish. Who had been delighted and touched to know that someone cared. Unfortunately, when she'd tried to send a message back, they'd found communications had been blocked by the Moon's government.\n\nThe Moon was tearing itself apart. The only good news was that their issues hadn't touched Earth yet. Scott still had a few soldiers up there, who kept him informed on the status. For a while it had looked as though Alex and his followers were going to be able to overthrow the government and make some changes, but there were too many who hadn't believed his and Bella's assertions, too many who hadn't wanted to believe, and the report he'd just received had said that the entire place was descending into violent anarchy.\n\nScott didn't particularly care, other than to get his people out. Alex and Bella too, if they would listen. If not, then they'd be forcibly removed from the situation. ",
        "Taking their choice away didn't particularly bother him either, although his brain knew it should. He understood ethics, and even allowed himself to be governed by some of them. To a point.\n\nSlut came trotting back into the room, looking pleased. The message she'd recorded would be transmitted on private channels to the men he still had on the Moon, who would pass it along to her parents. Hopefully they'd listen and get the fuck out tomorrow. Although, from what his sweet slut had said, she wasn't particularly fond of them. They hadn't been very good to her, and the first time she'd been able to make choices for herself had actually been here on Earth. Where no one expected her to trade her body for power, to work her way up a ladder of men to the top of the heap. No, here all she had to do was please him and she was taken care of.\n\nIt turned out the position suited her admirably, especially with her penchant for pain.\n\n\"Thank you, Master,\" she said, looking up at him with adoring eyes as she knelt down, her hands already going to the front of his pants.\n\nHe leaned back, watching as she bent over his cock, taking it between her lips and swirling her tongue around the head in the way she knew he liked best. Groaning, he ran his hand through her hair, massaging her scalp as her mouth slid eagerly down the entire length of his shaft. Bobbing her head, she caressed his balls, her other hand sliding down so she could finger his anus as she sucked him deep.\n\n\"Good Slut... you want my cum don't you?\" he murmured, half-closing his eyes as he pretended her brown hair was slightly lighter and curly. Her happy humming response vibrated along his dick, her tongue licking eagerly and he thrust upwards and into her mouth, easily invading her throat. \n\nWhen he came, he pressed her head to his groin, forcing himself completely inside of her mouth so that her nose was pressed against his belly. Hot cum jetted down her throat, which convulsed and massaged his cock as it spurted the creamy liquid straight into her stomach. Her finger in his ass massaged his prostate, milking him of every last drop as the intense orgasm shuddered through him. \n\nWith a low groan, he pulled her off of his cock, knowing from experience that she would keep sucking him until he was hard again if he let her. When he'd named her Slut, he hadn't known how prophetic he'd been. \n\nLips swollen, pupils dilated, she looked up at him, panting for breath and eager for more male attention.\n\n\"I have to get work done now,\" he told her, tightening his grip on her hair and enjoying the way her eyes unfocused in arousal. She was so easy. So eager. \"Would you like to go back under my desk or would you like to go visit the doctor?\"\n\nA shudder went through her. \"The doctor, please, Master,\" she said, as he knew she would.\n\nBeing given choices made her happy and it amused him. Sometimes she even surprised him with what she chose. Not today though. She loved it when he allowed her to visit Dr. Margolis, who had strict instructions not to do any permanent damage to her. He himself had no taste for the high levels of pain she sometimes craved, but he kept her visits to the doctor sparing. It was never good to over indulge.\n\nHe didn't bother watching her hurry out of the room, his mind already returning to work and to the pair on the Moon. There were plans to be made.\n\n******\n\nAlex couldn't believe his eyes. Not only was Trish standing in front of him, Jordan's hands on her shoulders and her eyes bright with happiness, but she wanted them to return to Earth?\n\nHe turned to his first in command, his right hand man from the past months and a man that he'd grown to trust almost as much as Bella. Ned looked back at him, his expression blank. \n\n\"You work for him, don't you?\" Alex asked, his voice hard as he tried to contain his fury at the betrayal. \"You work for the Wolf?\"\n\n\"I pass messages,\" Ned said, completely unrepentant as Bella gasped. \"That's it. Nothing detrimental to you. He just wanted to know what was going on up here. With good reason.\" The other man glanced over Alex's shoulder, his eyes taking in the destruction of the Moon's hive like housing system, the fires that were still burning and choking the air in the dome. \"It's time for us to leave... there's nothing here to salvage.\"\n\n\"Alex - \" Bella tugged on his sleeve, turning him partially towards her. \"He might be right.\"\n\nHe groaned. \"Not you too... we swore we were going to see this out, remember?\"\n\n\"And we have,\" she said, taking his face in her hands, cradling it. Comforting him, because she knew how much this would hurt him, to feel that he had failed in his mission. \"They didn't want to change. You can't force people to accept that they have to change their way of life if they don't want to. We should take this, save those who want to change and are willing to work for it.\"\n\n\"Earth's already overpopulated.\" He shook his head, knowing that at least part of his resistance was because he didn't want to be in any way beholden to the Wolf. \"We need this colony.\"\n\n\"No,\" Jordan said, at the same time that Trish started shaking her head. Her smile brightening even further as he spoke. \"We need colonies. Ones that can actually be self-sufficient. Cora and Trace have been working on a space craft that would actually be able to travel to other habitable planets. It will be ready within the next couple months.\" His cold blue eyes met Alex's. \"The colony will need a leader.\"\n\nShock went through Alex as he stared at Jordan. \n\n\"Cora and Trace?\" Bella squeaked, obviously just as shocked. \"And it will have enough fuel? Food? How long have they been working on this?\"\n\n\"Years. All of Earth has.\" Jordan snorted. \"Did you think we on Earth were all truly content to do nothing but provide the Moon with our resources? To be treated as cogs in a machine, with nothing better to do than support people who barely looked at us as being human? We've been making ready our escape as well.\"\n\n\"What about Cora? Or the Wolf?\" Alex asked sharply, finding his voice. \"They don't want to leave Earth?\"\n\n\"No, why would they?\" Jordan asked, raising his eyebrow. \"They have their own empires already carved out. Life on the colonies is going to be hard. Probably low-tech. Besides, Cora and Trace need to stay on Earth to keep working on more projects. The woman's an engineering genius you know.\"\n\n\"A sadistic, self-centered sociopath, but a genius,\" Ned added. His light green eyes looked imploringly at Alex. \"Please Sir. Save what you can. Start over. Let the Moon live out its own fate.\"\n\n\"Alex... I think they're right.\" Bella hugged her arms around him. Trish was nodding. Jordan and Ned just stood there, waiting. \n\nClosing his eyes, Alex took a deep breath. He could practically feel his parents, Bella's parents, his men and women that had tried so hard... many of them former victims of the Wolf whose memories had been restored. It hadn't taken long for the scientists on their side to realize that Alex and Bella had been pumped full of chemicals to counteract the memory drug that the Moon had administered. They'd told him that the doses had probably been administered over a course of weeks. Once they'd started examining former victims, they'd found traces of the same chemicals, prototypes to what Alex and Bella had received.\n\nHe didn't condone the Wolf's methods. He didn't understand how the man could be so callous, so sexually depraved even while he was trying to show the Moon captives what was actually going on, but he knew that there was only one real option for them. If they stayed, they'd eventually be killed by those who insisted that he was the real trouble. Who blamed him for all the unrest that had swept through the Dome. \n\nThat or they'd be killed when the Dome itself was destroyed. It was already well on its way.\n\n\"Alright. Fine.\"\n\n******\n\nTheir time on Earth was almost anti-climatic. Alex had already known Lisa had stayed with the Wolf when Ken had returned home. When he tried to convince her to come on the spaceship with him, she'd actually laughed at him. Told him he was a good man. Too good. Turned out she'd only gone out with him because her parents had told her to, they'd wanted her to use him to get to Ken. Which was exactly what she'd done before it had all fallen apart.\n\nHe still could barely comprehend that her parents would be so desperate for even more influence on the Moon's government than they'd already had. They hadn't accompanied Alex and the others down to Earth; Lisa didn't seem particularly put out about it.\n\nTrish, too, had chosen to stay on Earth, with Jordan. She told Bella that she still was embarrassed by Jordan's exhibitionism, but she'd learned to enjoy it too. And she loved the way he took care of her. Bella thought Trish needed a good therapist, but who was she to talk?\n\nMaybe a part of her understood a bit better when, the night before they were scheduled to leave, she walked into the apartment that she and Alex shared, and the Wolf was standing there. Staring out the window. \n\nHe turned, that piercing green gaze seeming to stab right through her. \"Pet.\"\n\nIt sounded like an endearment and made her instantly, horrifyingly aroused.\n\n\"Bella,\" she said, in a faint but insistent voice. \"What are you doing here?\"\n\nHe studied her for a moment, his eyes slightly hooded. She clenched her hands into fists.\n\n\"Saying goodbye.\"\n\n\"I hope you don't plan to pull the same trick on Alex,\" she said, her mouth dry. \"He'll kill you.\"\n\nA confident, amused smile flashed across his face. \"He could try. But no, I wasn't planning to. I didn't think he'd allow it.\"\n\nBut he would have liked to. That much was obvious. There wasn't a vast amount of emotion in his voice, but Bella hadn't realized how well she'd gotten to know his tones. His inflections. He sounded... almost wistful.\n\n\"Why?\" she whispered. \"Why did you do it?\"\n\nHe shrugged. \"At first? It was amusing. All those idiots coming down here, flaunting their wealth, acting as if they owned us when truly, we owned them. A way to show, at least a few, that they weren't any better than us. Especially when I involved the Prime.\" He laughed. \"Not that the Prime had a leg to stand on anyway. When we realized that they were making you all forget... that no one was going back and talking about anything that we'd told them... that's when we started to plan.\" Stopping, he stared off into space, his thoughts distracting him.\n\n\"But how could you do it?\" Bella pressed, needing to know. Needing to understand. \"How could you torture them? Us? Over and over again?\"\n\nNow he moved, but she stood her ground as he came closer. Tipping her head back so that she could look into his eyes. \n\n\"Ah, Bella. My darling Pet.\" The tone of his voice was gentle, almost tender, as he cupped her chin in his hand, stroking his thumb over her cheek. \"Don't look for ulterior motives that you'll be able to understand or mistake me for a good man. I'm not. I did what I think Earth needed. What I needed Earth to have, for myself to prosper... I did what I did to get what I wanted.\" He leaned down, his lips brushing over hers for just a moment as he held her immobile. She almost whimpered when his lips moved past so that he could whisper in her ear. \"And because I liked it.\"\n\nThen he released her, leaving her trembling, aroused, furious, and he was walking out of the door.\n\n\"Goodbye, Pet.\"\n\nThe words echoed in the room that was now empty except for her. \n\n******\n\nShe never told Alex about the Wolf's last visit. There was no point in angering him even more. They left the next day, on a giant ship filled with colonists. Ned was Captaining. When they reached their destination, Alex would take over as leader, Ned continuing as his right hand man. The men had managed to make up their differences over the past few months, and Bella was relieved by it. She had chosen to take charge of human relations, especially between the Moon and Earth citizens. Her team would be essential, throughout the long trip and once they arrived, to keeping the peace and sustaining moral. \n\nEveryone would have to work hard, when they made planet fall. But everyone was prepared for that. Those from the Moon were determined to never be in the same situation again, those from Earth were thrilled for a new start. Both sides were surprisingly amicable as they got to know each other over the long trip.\n\nSometimes, when they were in the quiet and privacy of their own room, Alex would tie her down to the bed, with her ass in the air, clamps on her nipples, and spank her until her ass was bright red. His cock would throb in its ring, til neither of them could take it anymore. Then he'd fuck her until they were both screaming out their orgasms, lost somewhere between reality and fantasy, the present and the past, and the desires that they'd discovered.\n\nAnd sometimes, back on Earth, a man would stand outside... and stare at the stars."
    ],
    "authorname": "Goldeniangel",
    "tags": [
        "werewolf",
        "wolf",
        "were",
        "drama",
        "supernatural drama",
        "supernatural"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/taken-by-the-wolf-ch-27"
}