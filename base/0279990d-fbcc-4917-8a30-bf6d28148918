{
    "title": "Such a Little Thing Ch. 03",
    "pages": [
        "This is the final part of a lesbian romance. I split the story into three parts to keep each one a reasonable length but it is a continuous story so you'll need to read part one first, which can be found at:\n\n\n\nMany thanks must go to EarthlyRose for her help editing this story. In addition, gratitude and thanks also to Winterreisser for his further editorial comments and suggestions.\n\nI also want to say herzlichen Dank to Kat for her enthusiasm, encouragement and feedback as I was writing this story. I'm glad to have you as a friend.\n\nThanks to all my readers for the many positive comments. I hope you find this as enjoyable and a fitting conclusion to the story.\n\nAs always, feedback and comments are greatly appreciated.\n\n++++++++++++++++++++++++++++++++++++++++++++++++++\n\nCHAPTER 11 -- 'What are you doing here?'\n\nWe were both a little tender the next morning so we made love gently with our tongues, lapping and licking each other to orgasm. We showered together again, reluctant to spend a moment not touching until we went, ravenous, to a late breakfast. As we walked in we were greeted by the waitress who had served us last night. As she led us to a table Milla expressed her surprise at seeing her working again in the morning. \"Shift change,\" she explained. \"I was on late shift last week and early shift this week. The changeover is horrible.\"\n\nShe seated us and took our order. Just before she left she looked a little bashful as she asked, \"Did you, er,\" she lowered her voice, \"I mean, you did have a good night I hope? I don't mean to intrude.\"\n\nWe both laughed. \"Don't worry, you're not intruding,\" I replied, glancing at Milla, who nodded, \"and we spent a wonderful night together, thank you.\" I heard Milla gasp and the waitress blushed.\n\nAs she moved away, Milla poked me in the ribs. \"Amber!\" she hissed, \"I can't believe you said that so loudly: that we actually spent the night together!\"\n\n\"But she knew, didn't she?\"\n\n\"She did, but the people on the other tables didn't! There are such things as subtlety and discretion you know.\" I hung my head apologetically. \n\n\"Sorry -- I should have kept my voice down.\"\n\n\"It's okay: I don't think anyone actually heard you, luckily.\"\n\nOver breakfast, we planned our last day. We'd check out and then become tourists for a few hours. Milla was happy with my suggestion of travelling by Tube to Green Park from where we could walk over to see Buckingham Palace and the Houses of Parliament. We would have to carry our bags but that couldn't be helped. From Green Park, we could then catch the Tube to Waterloo for the train home.\n\nI apologised to the waitress for making her blush and breakfast became a very relaxed, light-hearted meal as the three of us chatted and joked. I think she was in the bi-curious category, which explained her acceptance of us and her comments last night. However, as Milla had cautioned me to 'subtlety and discretion' I thought it best not to ask.\n\nWe returned to our room and packed before checking out a little before eleven o'clock. As the receptionist handed me the bill she said, \"Thank you, Ms Taylor, the bill has, of course, already been settled. I hope you both enjoyed your stay.\" I assured her that we'd both had a wonderful time.\n\nThe Underground journey was the usual hot and noisy experience I remembered. It was also surprisingly busy given that it was a bank holiday. \"The Tube is so noisy and crowded; it's horrible!\" Milla complained.\n\n\"Welcome to the London commuting experience,\" I laughed, \"Though rush hour is much worse than this,\" I pointed out, truthfully. However, I'm not sure that Milla believed me.\n\nFrom the Tube station, we walked across Green Park itself to Buckingham Palace. The Union Jack was flying rather than the Royal Standard, so the Queen was not at home that day and we only managed glimpses of the end of the Changing of the Guard ceremony through the crowds at the railings. Walking through St James's Park we came to the Palace of Westminster where we wandered around the outside for a bit. Unfortunately, there wasn't that much to do so we headed back to Green Park again and on the way bought a couple of overpriced but wonderfully cold Diet Cokes. \n\nBack in the Park, we found a tree to sit beneath in the leaf-dappled shade. Milla sat with her back against the trunk and I lay with my head in her lap. We chatted quietly and sipped our drinks. Milla looked down at me and I gazed into her beautiful eyes as she stroked my hair. She lowered her head slowly. \"I love you, Milla,\" I sighed and our lips met softly as I closed my eyes. The kiss lingered and, as our lips parted, it deepened; our tongues met, caressed and entwined.\n\nA shadow fell across us and a voice drove a cold spike through my stomach. \"Amber? What are you doing here? And what the fuck are you doing?\" At the sound of Max the Bastard's voice my eyes shot open and even Milla was startled by its intrusion into our intimate world. There he was in his habitual black leather jacket, sunglasses hiding his eyes and with his girlfriend Jeanette, the woman who had -- thankfully -- taken him from me, standing just behind him. \n\nI scrambled to my feet and Milla stood too. Subconsciously my hand found hers, grasping it for support. \"I'm here with my friend,\" I replied, my voice shaky with nerves, \"just visiting.\"\n\nA sneer twisted his mouth \"Yes, I saw the two of you. You're a queer, a dyke aren't you? That's why you liked drawing all those nude women: you're nothing but a fucking rug-munching, perverted slut! God, I was lucky I got rid of you!\"\n\nIt was horrible, sickening and frightening as he loomed over me. His words befouled the beauty and wonder of the love Milla and I shared, made it sound dirty and shameful. Pathetically, I burst into tears, unable to do anything except shake my head in denial of his foul condemnation of our relationship as I cowered back.\n\nThere was a sudden loud crack! Through tear-blurred eyes I saw his head jerk sideways, his sunglasses flying from his face as his head twisted sharply and he staggered slightly. It took me a few moments to realize what had happened: Milla had slapped him, hard!\n\n\"Fuck off you evil, bigoted bastard; leave Amber alone!\" Milla yelled at him. \n\n\"You skinny dyke bitch!\" he snarled as he lunged at Milla, grabbing the front of her tee shirt. \n\n\"You there; stop that right now and let her go!\" A woman's voice full of command cut through the events. \n\nWe all looked towards the voice to see a short, black woman police constable with her hand raised in warning. Her calm authority was further backed up by her colleague; a burly six-foot-three man who was made even bigger by the stab-vest that he, like his female colleague, wore. Max immediately let go of Milla. \"Now,\" the WPC continued, \"can somebody explain what is going on here?\"\n\nI couldn't talk but Milla spoke, her voice tight with anger, \"This Neanderthal was calling Amber names and threatening her.\"\n\n\"Whereupon I saw you hit him,\" the policewoman interjected. She turned to me, \"What was he calling you, Miss?\" I bit my lip. \"It... it ... it was...\" I began sobbing again. To my surprise, I heard Jeanette's voice.\n\n\"He called her a 'queer', a 'dyke' and, what was it, Max? Um, yes, a 'fucking perverted, rug-munching slut' I think it was.\" She was staring at Max with a look of disgust on her face. \"He was being very aggressive and threatening to her.\" She concluded as Max shot her a look of pure hatred.\n\n\"Those two,\" he gestured towards Milla and me, \"were kissing and snogging under that tree -- in public! And she hit me, assaulted me: you should arrest...\"\n\n\"Sir!\" the policewoman's voice cut him off. \"While she did assault you, I should point out that you are also guilty of assault and, given the homophobic nature of the language you used, that would be an Aggravated Assault, which carries a possible two-year prison sentence.\" Max looked stunned.\n\n\"I don't want him prosecuted if he'll just go away and leave us alone,\" I managed to blurt out. Actually, I would have loved to see him prosecuted but didn't want the same thing happening to my darling.\n\nThe WPC looked at me then back at Max. \"So,\" she said to him, \"It looks like they might let this go. What about you? Will you just apologise and walk away?\"\n\n\"Apologise?\" he spluttered.\n\n\"Oh, just do it, Max,\" Jeanette ordered him tersely.\n\nWith ill grace bordering on contempt, he looked at me and through gritted teeth muttered: \"I'm sorry for what I called you -- both of you.\" He looked at Jeanette. \"Come on, let's get out of here.\"\n\n\"Off you go but we're through; I never want to see you again. I don't date bigoted Neanderthals.\" He looked at her in shock. \"God, why did I get back with you?\" she asked herself, \"You never change.\" She shook her head in despair. \n\nMax stood there until the policewoman said quietly but firmly, \"Off you go, Sir. And think about what you say and do in future.\" \n\nHe started to walk away but after two steps there was a soft crunch as he trod on his fallen sunglasses. I heard a little snort of suppressed laughter from Milla and Max glared at her before turning and marching quickly away. The tension in the air dissipated with his departure until the policewoman spoke to Milla. \"I know you were protecting your friend, but striking that man was not only illegal but foolish: it could have gone very badly for you had we not intervened.\"\n\nMilla nodded, \"I know and I'm sorry. Thank you for your help.\"\n\n\"Yes, thank you, Officers,\" I added as both police constables moved off.\n\nJeanette looked at the two of us for a few moments before speaking to me. \"I guess you're the Amber that Max was going out with before I, er, came back onto the scene?\" I nodded. \"Look, I'm sorry about what just happened; he saw you with your girlfriend, um, kissing, and came straight over. I'm also sorry that I broke you and him up, your relationship...\"\n\nI reached out and placed my hand on her arm and looked her in the eye. \"Oh, god, never, ever be sorry for that! You did me such a favour: without him leaving me I'd never have met Milla and, though breakup hurt a lot at the time, it was worth every ounce of pain to be with her now.\" I felt Milla's arm slip around my waist and hug me.\n\nShe smiled and looked at Milla. \"I've got to find someone who loves me as much as Amber loves you; you're very lucky.\"\n\n\"I could suggest that you stop dating guys and find yourself a girlfriend... okay, not for you then,\" Milla smiled at the look on Jeanette's face. \"But you're right, I am very, very lucky.\" She hugged me tighter.\n\n\"Thank you for standing up for us against Max, Jeanette; it was good of you,\" I told her.\n\n\"It's okay. I may not be gay,\" she looked at Milla with a smile, \"but what he said was horrible and wrong. Look, I need to get going but it was good to meet you, even if the circumstances weren't nice.\" She reached out to shake my hand but I leant forward and kissed her cheek. She blushed slightly but placed a hand on my hip and kissed my cheek in return. She looked at me and dipped her head shyly before hurrying off.\n\n\"Well, she's not as straight as she thinks!\" quipped Milla and I smiled but nudged her ribs.\n\n\"Leave her alone, she did okay today. And you, my brave, foolhardy protector, were wonderful and heroic. I'm sorry I was such a weak, blubbering wreck; I should have just told him to fuck off.\"\n\n\"Hey, don't be so hard on yourself. You've never had to deal with homophobia before. The first time someone called me a dirty dyke I was devastated; now I just get angry.\" She glanced up into the sky. \"Shall we get moving -- it looks like rain's coming.\" Sure enough, the sun had gone as dark, heavy clouds massed from the west. We picked up our bag and began to walk towards the Underground station.\n\nCHAPTER 12 -- 'What will Mum and Dad say?'\n\nWith the sun gone the temperature began to drop a little, though the air remained humid. A gusty wind also started, making the trees sway and rustle as we made our way across Green Park. \n\n\"Amber, is Max likely to do anything to try and hurt you after what happened?\"\n\n\"Well, when University restarts in a month or so he'll probably tell everyone I knew what he saw us doing: how I'm obviously a raving, 'rug-munching lesbian slut' and how he had a lucky escape. I've one or two people I'm still in contact with so I might have to tell them...\" I hesitated, suddenly nervous, \"um, about me -- us.\" A sudden thought struck me, \"Oh shit! Facebook!\"\n\n\"What?\" Milla asked and I remembered she'd never used Facebook.\n\n\"Look, if he posts about this on Facebook, all his friends will see it. Some of them are my friends too. And if any of them comment, then their friends will see it. Oh, fuck: Mum's on Facebook so she might end up seeing it!\"\n\n\"Are you sure?\"\n\n\"No, not definitely, but it's certainly possible. Milla, what do I do? I can't tell them over the phone.\"\n\n\"Well, maybe you could try...\"\n\n\"How? Oh yes: ring, ring.\" I mimed putting a phone to my ear. \"Oh, hi Mum. You know I split up with my boyfriend? Yeah, well I met this gorgeous girl who runs the coffee shop next door, who's gay and now I've discovered I'm a lesbian and we've just spent the weekend in a hotel having mind-blowing sex!\" I reached into my pocket. \"Yeah, that should work; let me just get my phone out...\" I concluded sarcastically.\n\n\"Have you discovered you're a lesbian?\" she asked quietly. I was about to make another sarcastic reply about what we'd been doing in the hotel bed the last two nights but realized she was serious; I'd always said bisexual before. I'd used the word 'lesbian' instinctively and without thinking but now I thought carefully. \n\nI stopped and looked around. We were close to Green Park Tube station and there were lots of people around, a bit like being outside the student bar at University on a Friday night. Okay, so that's where I am and let's pretend that I'm looking to hook up with someone... \n\nThere were quite a few guys, some very good looking and while I could see they were handsome with good, fit bodies, there was no spark of attraction or sexual interest. There used to be, didn't there? When did that change? Perhaps I in the past I had imagined it because I had expected it, wanted it to be there. No, that couldn't be true: there must have been something, once upon a time... perhaps, maybe.\n\nThen I looked at a girl in shorts so skimpy the bottom of her bum cheeks were visible, soft and smooth above firm and shapely legs... not as good as Milla's but still quite yummy. Or her friend in the short, strappy yellow summer dress, with the caramel skin and the cute face with lips that looked so soft and kissable... Um, okay, I guess that answered my question.\n\n\"Yes, I am,\" I said quietly, \"I can't imagine wanting sex with a guy, ever. I don't want anyone but you, but if we broke up, and if I ever managed to put my world back together after that... well, I guess I'd be looking at girls. And I think... yes, I'm cool with that -- it's just who I am really. I am scared of telling people though: what will Mum and Dad say?\"\n\n\"Your Uncle was okay about it though.\"\n\n\"More than okay: he was happy for me. Of course! Let me phone Uncle Graham and talk to him.\"\n\nAn intense ten-minute phone call followed with Uncle Graham being his no-nonsense, practical Yorkshire self. \"Tha needs to talk to your Mum and Dad face t' face, tha's right about that. So tha'll need to get there. Get tha self to Paddington and catch t' train to Swindon. I'll meet thee there and drive thee to tha parents' house. Fair enough?\"\n\n\"Thank you for all you've done. Milla and I have had a wonderful time -- until Max the Neanderthal came along anyway. You're wonderful, Uncle Graham.\"\n\n\"The things I do for my favourite niece -- and now her girlfriend too! Get on with thee now and call me when tha's on t' train. And call tha parents too and warn them you're coming; just tell them that tha's been away for t' weekend and want to pop in on t' way home or summat.\"\n\nWith a dramatic sense of timing, heavy raindrops began to fall and there was a loud peal of thunder. We hurried the last twenty metres or so and entered the Underground Station.\n\nIt was not a fun journey and not only because of my anxiety. I made a mistake on the Tube and we had to make an extra change. Paddington station was manically busy and we had to queue for ages to buy expensive tickets and then run to catch the train. Finally, we were sat together as the train headed westward out of London and I toyed with the phone in my hand. I had phoned Uncle Graham but was struggling to summon up the courage to phone my parents; once I did that I'd be committed. Various nightmare versions of our meeting played themselves out in my imagination as I sat in silence.\n\n\"Come on Amber, you're worrying far too much about this, it'll all be fine,\" Milla tried to reassure me.\n\n\"Oh yes, of course it will; that's why, after all these years of knowing you're gay, you've still not told your parents!\" I snapped back. \"Don't fucking tell me this is no big deal!\" I turned away, unable to stand the hurt in her eyes and stared sullenly out of the window.\n\nMinutes passed until Milla touched me gently on the arm and I turned to see tears on her cheeks. \"I'm sorry Amber, I was just trying to be positive; I know how hard this is. I also forgot how fast all this has happened for you...\"\n\n\"I'm sorry too: it was the stress talking. I know you were just trying to support me. I love you.\" We held hands and sat close together. Eventually, I phoned Mum and Dad and was relieved when I got the answering machine so I could just say I was on my way without any further interrogation. The rest of the journey was quiet but it was a more peaceful, companionable silence. We did agree on one thing though: we would not hug or hold hands when we first arrived. When I came to speak to my parents, however, I didn't know if I could do it without Milla holding me.\n\nUncle Graham was in his car and waiting for us outside the station. I kissed his cheek as we climbed in. \"Thanks so much for all this, Uncle,\" I said. As we drove off, I had to ask him, \"How do you think Mum and Dad will react?\"\n\n\"Honestly, love? I don't know. It's not exactly summat we've ever talked about. Tha Dad's quite conservative but they're still tha parents, when all's said and done, and they love thee.\"\n\nWe turned into my parents' street. \"Are you coming in with us, Uncle?\" I asked.\n\n\"'Appen I won't, Amber love, leastwise not at first. It'll be easier for thee wi'out me so I'll just stop in the car till tha's ready. Here we are.\" We'd pulled up a short way from the house so it would seem as if we'd walked. I took a deep breath and opened the car door. \"Good luck, both of you,\" he bade us as we climbed out. I felt sick with anxiety, my skin cold and clammy.\n\nI think the walk to my parents' front door was one of the longest of my life. I tried to convince myself that I was just popping in for a chat and a cup of tea on my way home from a lovely weekend. It didn't work.\n\nSo with a tremulous hand, I rang the doorbell, trying to relax and calm my heart that was beating like a drum roll and did my best to put on my happy face as Mum opened the door.\n\n\"Hi, Mum!\" I said brightly and then introduced Milla. The look on Mum's face told me that she knew something was wrong but, with Milla there, she didn't ask me on the spot. We went through to the sitting room. Dad was there and he kissed me and then, very formally, shook Milla's hand; typical Dad. Milla and I sat on the sofa while Mum hovered somewhat anxiously.\n\n\"Shall I get you some tea?\" she asked, to which she received a 'Yes please, Mum' from me and a 'Thank you Mrs Taylor' from Milla. She bustled off and I gave Dad our story about being away for the weekend and popping in on the way back. When Dad asked where we'd been and what we'd been doing things became tricky; this house was in no way on the way home from London.",
        "\"Well...\" I said, thinking furiously, \"it's not so much on the way home as a bit of a detour. I really wanted to come and see you both.\"\n\n\"That's nice, love,\" said Mum as she returned with the tea tray. \"Any reason in particular?\"\n\n\"Well I've not seen you since I started working at the framing shop, but, yes, there was something...\" I could feel myself trembling but I felt Milla's hand slip into mine, which helped steady me. Dad didn't notice, but Mum did.\n\n\"Yes?\" she prompted, a slight edge to her voice.\n\n\"It's... it's about me, who I am...\"\n\n\"What are you talking about, Amber? We know who you are: you're our daughter for heaven's sake,\" interjected Dad, slightly irritated by my rambling. I took a deep breath and decided to just say it.\n\n\"Okay. Mum, Dad, I wanted to tell you that... I'm gay... I'm... a lesbian.\" I hesitate and glance at Milla who gives me a slight nod. I take another breath and grip her hand tightly, \"And Milla here... she's my girlfriend.\"\n\nSilence followed. I half hoped that I'd hear Mum say 'That's nice dear. More tea anyone?' and nearly laughed at the thought. Thank God I didn't.\n\n\"You can't be a, a, a lesbian, Amber. You've had boyfriends... you were with that chap, Max? Yes, Max, until a few months ago,\" argued Dad.\n\n\"She's just being silly, Tom. This is just some girlish infatuation with a woman and now she's just being a drama queen and trying to shock us.\"\n\n\"No!\" My voice was loud but I managed to keep from shouting. \"Yes, I've had boyfriends including Max -- who treated me like shit! -- but I'm not physically attracted to men, certainly not now if ever. Do you know how hard it was to come to talk to you about this? But I had to, now Milla and I are together...\"\n\n\"Well, that's the problem!\" Mum interrupted, \"this -- woman! -- has clearly been putting ideas in your head and she's leading you astray into this unnatural behaviour!\"\n\n\"What?\" I exclaimed, \"That's complete nonsense. Milla told me she was gay but never made me...\"\n\n\"That's enough, Amber. Your Mum's right, this woman is a bad influence and I think she should leave now -- and then leave you alone in future so that you can find a proper relationship with a man.\" Dad turned to Milla, \"I'm sorry, but you can't stay here as it would be best if we can spend some time with our daughter on her own. I'm sure you understand.\" He stood, and gestured towards the door. \n\nMilla rose uncertainly but I clasped her hand tight as tears started to well in my eyes: this was worse than I'd dreaded. Then something hardened inside me. Max's language had been crude and bigoted and I had dissolved into a blubbering wreck. My parents' language might be polite, but the prejudice was still there and, worse, they were treating me like some silly child. However, I was not going to blubber: I was going to be like Milla and get angry.\n\n\"Fine!\" I declared, standing up sharply. \"I felt I had to tell you about me -- about us -- because my delightful ex-boyfriend is likely to post spiteful things about my sexuality on Facebook and I felt you should hear it from me first. It would have been lovely had you even tried to listen and accept what I've told you. Milla has to leave because you've asked her to, but if she does, then I am going with her, okay?\"\n\n\"Amber, love, you don't need to go,\" pleaded Mum, clearly shocked and upset. \"Please stay and we can find someone for you to talk to so you can sort this out.\"\n\n\"There is nothing to sort out!\" I was shouting now. \"Aagh! What's the use? Come on Milla, let's go home.\" \n\n\"Goodbye, Mr and Mrs Taylor,\" said Milla in a small voice as I stormed out with her in tow.\n\nI made it to Uncle Graham's car and threw myself into the passenger seat. Then the tears came and I wailed like a lost child, which is what I felt I'd become. Milla climbed in the back seat and placed her hand on my shoulder, squeezing softly, just being there. I grasped her hand and held it tight as, gradually, the wails and sobbing eased, though the tears continued gently falling.\n\nI looked at Uncle Graham. \"It went badly then?\" he asked. \"I were worried it might.\"\n\n\"They think I'm just playing at this, being a dramatic little girl. Either that or that Milla is corrupting me and that I need some kind of counselling.\"\n\n\"Amber, maybe they just need a bit o' time t' come round and accept it. It's very sudden for them.\"\n\n\"I know. It's not how I wanted it to be either. It's just... oh, Uncle, they didn't want to even try to listen. And they wanted to throw Milla out so they could talk to me alone. Persuade me that I wasn't a lesbian is I think what they had in mind.\"\n\nUncle Graham sat in silent thought for a while then made a decision. \"Come on, Amber. You too Milla,\" he said as he opened the car door and got out. We followed him back down the road to the house. \"Now, you lasses listen,\" he warned, \"particularly you Amber: stay quiet and let me talk. When tha needs t' talk, stay calm. I'm guessing that realizing and accepting you were gay was hard, yes? Well, remember that this is every bit as difficult for them, maybe harder. You ended up wi' a girlfriend, Amber; they're scared they're losing their daughter.\"\n\n\"I'm scared of losing them too,\" I admitted.\n\n\"All the more reason to stay calm then. Is thee alright, Milla?\"\n\n\"Yes, Uncle,\" she replied, making Uncle Graham smile. \"Thanks for helping Amber through this.\"\n\n\"Aye, well let's see. Here goes nowt!\" and he rang the bell. \"Afternoon, Tom,\" he said as Dad opened the door. He looked past Dad \"Hello, Abigail, love; nice to see my little sister. May we come in?\" Dad hesitated and I could see Mum had been crying like me. \"I think we need t' talk; Amber's upset and I can see Abigail is too. Tha don't look too happy, neither.\" Dad opened the door and we began to file in, Milla last.\n\n\"Okay, but we don't need Amber's, um, 'friend' here.\"\n\n\"Tom, don't make Amber choose between her parents and Milla. \" Uncle Graham said quietly, \"you'll lose either way up: if she chooses Milla, you've lost her; if she chose you, she'll like as not hate thee for forcing her t' walk away from the woman she loves.\" I saw Dad flinch at the word 'loves'. \"Aye, Tom, she loves her, whether thee and Abigail likes it or not. And Milla loves Amber just as much. Come on, let's sit down and sort it out... if we can.\"\n\nSo we filed back into the sitting room, Milla and me on the sofa once again, Uncle Graham in one armchair and Dad in the other with Mum perched on the arm. \n\n\"So,\" began Uncle Graham, \"let's begin wi' some introductions, or rather, one introduction. This is Milla Carluccio who runs Caff\u00e8 Carluccio, the coffee shop next to my -- and Amber's o' course -- framing shop. She makes lovely coffee and was very welcoming and friendly to Amber when she first arrived in the town and knew no one. As I understand it, they became friends. Milla and Amber get on very well together, help each other out and support each other.\"\n\n\"That's all very well Graham, and it was kind of, of Milla to be welcoming to our Amber,\" Mum replied, \"but this lesbian nonsense. They can just be normal friends, surely? I have lots of women friends.\"\n\n\"Mrs Taylor? Milla asked timidly, \"Do you find any of your women friends sexually attractive? I'm not trying to be rude or flippant, but do you?\"\n\n\"What? No, of course not!\"\n\n\"Then you are neither a lesbian nor bisexual. Perhaps we should ask Amber the same question?\" Milla looked at me and nodded. I looked at my parents.\n\n\"I do find women attractive, and not just Milla,\" I held up my hand to forestall the objections my parents were about to make. \"I'm sure that's been true for some years at least and, though I never admitted it to myself, part of me, I think, knew that I was at least bisexual. I think I was attracted to boys too when I was younger but how much I can't be sure, not now. I was certainly attracted to the idea of  a boyfriend because, well, you had to have a boyfriend at school and college or you were a weird saddo. \n\n\"At university, Max asked me out -- mainly because he'd just been dumped I suspect -- but anyway I went with it because he was handsome and people told me I was lucky he wanted me. And we had se... well, you probably don't want to know what we had, but it was okay, fun even, at times. And I screwed up my year at University and he dumped me.\"\n\n\"But just because he was vile to you... not all men are like that, you know.\" Mum protested.\n\n\"Mum, I know that Max is a particularly obnoxious and odious individual. That doesn't matter; it wasn't ending with him that made me reassess my sexuality, it was meeting Milla.\"\n\n\"So she has been convincing you! It's as I thought, she's...\" said Mum angrily.\n\n\"Abigail,\" Uncle Graham interrupted but kept his voice calm and soothing, \"let the lass speak.\"\n\n\"Milla never tried to convince me.\" I looked at Milla, pleading with my eyes for her to help me out.\n\n\"Mrs Taylor, I admit that I found your daughter attractive from the moment I first saw her: she is beautiful and clever, kind and friendly.\" I found myself blushing but I saw Mum and Dad nod in agreement -- one point to Milla. \"However, I'm not some predatory dyke seducing young, lonely women. The truth is that I'd had very few lesbian relationships before I met Amber and only ever one girl that I'd have called a girlfriend, back when I was at college. It didn't end well and I was badly hurt by it; for her, it had all been an experiment and she decided she wasn't gay.\" The sadness and pain of that break-up were again visible in Milla's eyes.\n\nI couldn't help slipping my arm around her to comfort her. I looked at Mum and Dad and for the first time since my announcement, they seemed to see her simply as a young woman and not some freak.\n\n\"Amber was friendly,\" Milla continued, \"and I really liked being with her. I... I admit that I flirted with her a bit, I couldn't help myself...\" I turned slightly to look at her and she did the same to me, our hands joined. \"And you were so cool with it,\" she continued, now talking to me, \"and when I saw your drawings, the way you drew the women, the tenderness... it all made me wonder, even to hope, that apart from being stunningly beautiful, and kind and clever and my friend, that you might be gay too.\" She looked again at Mum and Dad.\n\n\"I came out to Amber and told her that I was a lesbian. I felt I had to, even though I knew she might then walk out and end our friendship as others had done to me in the past. She didn't: she accepted me as I am. She said that she might be bisexual, that she did find women attractive, at least to look at.\"\n\n\"But Amber is now saying she's a... a lesbian,\" said Mum, her voice was low and full of confusion but she had stopped protesting.\n\n\"Yes, Amber,\" added Dad, \"why the change?\"\n\n\"I couldn't stop thinking about Milla. It was like that since the first time we met, since -- it sounds silly, it was such a little thing -- since she touched my hand to give me back the money I'd given her for a cup of coffee. I kept thinking about that touch. I started wondering about us together, I thought and dreamed of kissing her and more... what it would be like to sleep together...\"\n\n\"They call it 'bi-curious' don't they?\" I was surprised by my mother's voice and looked at her. \"Some of the ladies at badminton were talking about it the other week,\" she explained defensively, her cheeks pink.\n\nI smiled, \"Yes Mum, they do, and I was very definitely in that category. But I couldn't do anything because I couldn't do to Milla what her friend at college had done to her; I couldn't use her to satisfy my curiosity and hurt her in the same way again. It was driving me nuts -- all the things I dreamt and so wanted but couldn't have, until...\"\n\n\"Until I told her that we needed to take a chance,\" Milla interjected. \"We both loved and cared for each other, we knew that; we just needed to take a risk on that last step. We both accepted that it might be a once only thing, but we're so very glad it wasn't!\"\n\n\"There's more to a relationship than sex!\" protested my Dad.\n\n\"We know, Dad, but, well, it is an important part. And, for me, it also meant accepting that I love a woman fully, not just as a friend or a companion but someone I want to share my life with, completely and in every way; in a way that I don't want to share my life with a man.\" I paused, looking and Mum and Dad in turn. \"I found it hard, admitting to myself that I wasn't straight because, well, that's what I'd always told myself I was. After admitting what I felt for Milla, I called myself bisexual at first but the truth is I'm lesbian and knowing that, admitting that... well, I feel that I'm properly me for the first time in my life.\"\n\nThere was silence, the sort of silence that's full of whirling thoughts. It went on for some time until, eventually, Uncle Graham spoke.\n\n\"Abigail, Tom, I know this is sudden for thee both. Well, the girls haven't exactly hung around either. However, I saw them together in Milla's Caff\u00e8 and that were before they, er, got together if you catch my meaning, but even then there was a real love, a spark between 'em. I saw it.\"\n\n\"Not just you, Uncle. Other people who saw us noticed it too.\"\n\n\"Aye, well I'm not surprised: the two of you could be a bit touchy-feely at times!\" He turned to my parents once more, \"Anyways up, the question for you two is whether you're going t' accept what Amber has told thee? You don't have t' be happy about it, you don't even have t' like it; will you accept it?\" My parent's looked at each other. \"Milla, Amber, why don't we three go in t' kitchen and make us a brew and let them talk for a bit, eh?\"\n\nSo we went to the kitchen and made a pot of tea. Uncle Graham shamelessly raided the biscuit tin for all the Chocolate Digestives and shortbreads, filling a plate with them before we went and sat out on the patio in the evening sun to drink tea and munch biscuits. \"They could be a while, so we're well stocked. Let them come t' us when they're ready,\" he said.\n\n\"You were brilliant in there, Uncle,\" said Milla and Uncle Graham laughed.\n\n\"It's right sweet when you call me that, Milla, but Graham will do. Same goes for you, Amber, you're a big lass now. You two were very open and honest back there: you definitely made your parents think. I just hope they think carefully. The world's different now, more accepting and you two deserve a chance.\"\n\nA thought occurred to me \"Uncle, you never married did you?\"\n\n\"Eh? No lass, happen I never met t' right woman.\"\n\n\"When I asked Milla if she'd not met Mister Right yet, she said that there wouldn't ever be a Mister Right. Could there ever have been a Missus Right for you?\" Uncle Graham stared at me.\n\n\"It's all water under t' bridge now and is long past mattering, but no, probably not. I think tha made a better choice t' be who you are, but things was very different then,\" he replied quietly. Then straightened up and spoke firmly, \"An' that's as much as I'm going t' say on t' subject!\"\n\nThe sun was getting low and Milla and I were cuddled close, my head on her shoulder, when we heard footsteps. We sprang apart and looked to where Mum and Dad had emerged onto the patio. \"It's alright Amber,\" said Mum, \"you can cuddle with Milla, with... your girlfriend.\" I could see those last two words hadn't been easy for her to speak but she'd said them anyway. I leapt up and went and hugged her.\n\n\"Thank you, Mum. I'm sorry that I upset you by walking out earlier,\" I told her, \"but please understand that I won't apologise that I'm lesbian, any more than you or Dad should apologise for being heterosexual.\"\n\nDad actually gave a little chuckle. \"You and Milla have been very candid and honest with us, and that has helped us a lot, but actually Amber, that comment is probably the most sensible thing I've ever heard.\" He held out his arms and I hugged him too. \"Lesbian, straight, whatever you're still our daughter, Amber.\" He turned to Uncle Graham, \"And you were right, Graham: we can't make Amber choose between us and Milla, not if we love her.\"\n\nWe had more tea; Mum produced sandwiches and cake and my parents and Milla began to get to know each other. Eventually, Uncle Graham interrupted the peace that had broken out. \"I'm sorry t' play the big, bad mill owner, Amber love, but I've a shop that needs t' open tomorrow and I believe there's a nearby Caff\u00e8 in t' same situation, eh Milla? Come on, I'll drive you both back.\"\n\nWe said our goodbyes and, while things were still a little reserved between my parents and Milla, I was very touched when I overheard Dad say quietly to her, \"Thank you for making our daughter so happy.\"\n\nCHAPTER 13 -- 'I've hidden this for so long\n\nThat night we were back in Milla's bed, naked and snuggled up together. Uncle Graham was crashed in my bed as, after the two-hour drive here, it was too late for him to drive home. \n\n\"What a weekend!\" I sighed tiredly. \"I feel completely wrung out.\"\n\n\"Amber?\"\n\n\"Yes, Milla my darling?\"\n\n\"I'm so glad that telling your parent's worked out okay in the end.\"\n\n\"It's not perfect yet; Dad seems more okay about it than Mum. Perhaps it's easier for him to understand the idea of being attracted to a woman, particularly one as spectacularly cute and gorgeous as you!\"\n\n\"Maybe,\" she replied distractedly. \"I need to tell my parents, don't I?\" she added reluctantly.\n\n\"I think, yes, you do. It was wonderful to be more openly a couple in London but what if it hadn't been Joe that saw us on Saturday? What if it'd been your Mum or Dad or one of their friends in the town?\"\n\n\"Or Nonno... Amber, I have to tell them, but I'm so scared. I've hidden this for so long.\"\n\nI slipped my hand into hers and held it up. \"It's not going to be easy but you told me once that you could tell them if you had the right woman by your side holding your hand: well, here I am. I'll be with you, Milla darling.\"\n\n\"Thank you, Amber, you're the best. Can we go and see them tomorrow, after work?\"\n\n\"Of course, whatever you want to do.\"\n\n\"I don't want to at all... but I have to. Oh God, I'm so nervous about it; I'm not going to be able to sleep tonight.\"\n\n\"Perhaps I can help you relax,\" I suggested.\n\n\"What did you have in mind?\" she asked suspiciously.\n\n\"I thought a massage might help,\" I said innocently, though the images of our oil-slick bodies sliding together that were playing in my head made my pussy grow hot and wet.\n\n\"Mmm, it would help,\" she sighed and I slipped out of bed and went to the bathroom where I remembered there was a bottle of massage oil on the shelf. Also, there was my makeup bag and I reached in to take out the gold vibrator that we'd not yet christened. I didn't want to walk in holding it but being naked I had no pockets. Actually, I had one 'pocket' I realised and the vibe wasn't too long so... I reached between my legs with it, lined it up and slid the whole thing inside my cunt. Ooo yes! Just the feel and knowing it was buried inside me almost made me cum right then. I was definitely going to enjoy this massage; I had to ensure that Milla received just as much pleasure.\n\nWhen I returned to the bedroom Milla was laying on her front with her arms raised and her legs slightly apart. I climbed on the bed and knelt next to her. \"Ready, darling?\" I asked and she nodded. I took a large handful of oil and coated my hands before spreading across her upper back and shoulders. I added more oil, admiring the way her perfect, smooth tanned skin glistened in the soft lamplight. I began gently to massage her neck and shoulders. \"I should have lit some candles,\" I told her.\n\n\"Mmm no need,\" she sighed, \"this is perfect my love.\" I continued, expanding to massage her back, working out the tension and knots in her muscles. I moved and now began again from her feet, gradually moving up her calves to her thighs. I was now sat straddling her leg, my inner thighs and pussy slick with the oil from her skin. I used long strokes from the top of her thigh, over her bum and up her back as I massaged her glutes and lower back. I was rocking back and forth as I did so, my oiled pussy rubbing deliciously over her glistening skin; the pressure also moved the vibe embedded inside me. ",
        "I eased her legs further apart, allowing me to massage her inner thighs. I dribbled more oil between her arse cheeks and began massaging each firm, perfect bun. I allowed my fingers to brush her anal bud, remembering how she had enjoyed this previously and, sure enough, she responded with happy sighs. I saw that her pussy was also responding; normally the soft cleft between her outer lips showed only a slight pink ridge of her inner labia but now the outer lips had begun to open and the inner lips had darkened, swelled and bloomed, thrusting out. When I lowered my head I could smell her arousal over the scent of the oil.\n\nI began to gently massage her anus, my finger pressing slightly into the tight pucker and she gave a loud moan, \"Mmm Amber, that is so kinky but feels so nice!\"\n\nIt was time to use the vibrator on her so I raised myself off her leg and slipped the fingers of my free hand into the now sopping, fleshy mass of my pussy. Grasping the butt end of the vibe was difficult; the oils on my fingers and my copious juices conspired to make it impossible to grip. I dried my hand against my tits and stomach and tried again and this time managed to tug it down. It came out with a surprisingly loud slurping sound. It was dripping with my juice and, as my finger continued gently rubbing her bum hole, I began stroking her labia with the vibrator. She was as wet as me and I slid it easily into her pussy until, with just the last centimetre of it in my fingers, I turned it on. The vibration was noticeable stronger that than my silver vibe and Milla's hips shot off the bed, impaling her anal ring on my finger.\n\n\"Oh fuck that feels fantastic!\" she gasped breathlessly a moment later, \"Your finger and the vibrator at the same time -- so good!\" I began slowly pumping the vibrator in and out whilst, very gently, doing the same in her arsehole. She began to squeal and gasp \"Yes!\" over and over. She bucked hard again and now my finger was in past the first knuckle as her orgasm exploded. I let go of the vibe to cup my hand under her gushing pussy before raising my overflowing hand to my mouth. God! She tasted so good.\n\nAs her orgasm passed I pulled my finger from her and she flopped back onto the bed, utterly spent. I pulled the vibrator from her still-dripping puss and lay down beside her, licking it clean. I looked at Milla, sprawled face down beside me; she was asleep already so I gently pulled the sheet over her, kissing her hair. \"Night, night darling,\" I whispered and settled down to sleep beside her.\n\nI gradually woke from a deep sleep, a wonderful warm, sexy feeling in my pussy. I imagined Milla wearing the strap-on preparing to penetrate me, the tip of the dildo against my lower lips. I opened my legs wide, my body echoing my dream. \"Fuck me, my darling woman,\" I sighed in my semi-sleep.\n\nI imagined her pressing forward, entering me and felt it in my pussy! My eyes flicked open to see sunlight streaming through the gaps in the curtains. I turned my head and saw Milla knelt beside me; a dawning realization filled my mind and I raised my head to look down my body. There was Milla's hand holding the golden vibrator half buried in my pussy. \"Good morning to you, my\" she leant in and kissed me on the nose, \"cute,\" a kiss on the cheek, \"sexy,\" kiss on the other cheek, \"kinky,\" kiss on the lips, \"lesbian,\" long, deep kiss on the mouth, \"girlfriend! Thank you so much for looking after me last night.\"\n\n\"It was my pleasure, my darling. Mmmm, this is a fantastic way to get woken up!\" I told her.\n\n\"Hmm, good job you did wake up: another thirty seconds and this would have been all the way in and I'd have turned it on, like you did to me last night!\"\n\n\"When I was asleep? You wouldn't da-aaaaaaaaaare!\" She had slid the vibe deeper and turned it on without warning. \"Oh shit that feels so nice!\" I gasped as Milla laughed. I felt my juice begin to flow, trickling down over my perineum.\n\n\"It does, doesn't it? I can remember something else that felt nice too.\" She reached down and picked something up, hiding it in her hand as she shuffled down the bed. \"Now just lay back; it's my turn to look after you this morning.\" I wondered where this was going, though I had some hopes and spread myself wider in anticipation. \"Hmmm, a horny little dyke, aren't you?\" Milla teased.\n\n\"I'm your horny little dyke! No man ever made me half this horny,\" I told her honestly. I felt my anus being caressed and let out a long \"Oooooo\" of pleasure.\n\n\"My little dyke likes her bum ring being tickled.\" The caresses became a firm pressure on my bud.\n\n\"Oh God, do I ever!\" I admitted and instantly the silver vibrator that Milla had pressed against my bud was flicked into action. The sensation thrilled through me, echoing the vibration in my pussy. I pressed my hips down and felt my pucker open to take the tip of the vibe. \"More,\" I gasped, and Milla slowly pressed the vibe deeper into my arsehole, lubricated by the juices flowing from my pussy.\n\nUnder this double assault, my climax rushed on me but it was not the normal short, sharp cumming of a quick orgasm but rather this seemed to bounce and rebound inside me, front to back and back to front as the vibrators buzzed my innards to a creamy pulp. At some point, I realized that the vibe was gone from my pussy and Milla was hungrily eating me out. The second vibrator was removed but Milla continued her soft lapping until I could stand no more and I twisted away, clamping my legs together.\n\nI lay, curled on my side as Milla spooned me from behind. \"Is it possible to be fucked to death by your gorgeous, sex maniac, lesbian lover?\" I gasped.\n\n\"If it is, then this is a suicide pact -- you nearly killed me last night!\" she laughed.\n\nI turned to lie on my back. \"I don't want to die with you, my love; I want to live with you and for a long time!\" I said earnestly. \"Milla? When you told me you were gay you mentioned getting married. Were you serious? Would you want to get married, well a Civil Partnership anyway, with a woman?\"\n\nMilla raised her head on her elbow and looked at me intently. \"I would, yes. Why?\"\n\n\"I,\" I hesitated, suddenly bashful, \"I would too. I'd love to live in a world where I could walk in with a woman and say this is my wife.\"\n\n\"Any woman?\" Milla asked quietly.\n\n\"No, not just any woman,\" I whispered, smiling.\n\nMilla sat up and moved to sit cross-legged on the bed, her head bowed. I sat up too, and without thinking sat in the same way, facing her. \"People would think it's completely ridiculous because we've only known each other for, what, seven weeks?\" she said sadly.\n\n\"My parents told me that they were talking about getting married after just two weeks together so it's quick but, no, not completely ridiculous. People would say I'm too young though and that, well, I've just discovered I'm gay... and my parents...\"\n\n\"And mine too -- they won't even know I'm gay until this evening! Come on, we better get up: we promised Graham breakfast for all his help yesterday.\"\n\nWe showered together, missing the spacious shower of the hotel room but enjoying the intimacy. After we'd dressed Milla started on breakfast whilst I went to fetch Uncle Graham -- somehow I couldn't think of him as just Graham. When we arrived back, Milla had set the small table and was already serving up bacon and eggs with toast. I went and kissed her, \"It never ceases to amaze me how brilliant you are at cooking, my love.\"\n\nAfter breakfast, we said goodbye to Uncle Graham before we went our separate ways and Milla and I tried to keep ourselves busy to avoid thinking about that evening. Our experience with my parents did not bode well at all. \n\nJust after four o'clock, Milla came into the workshop looking, I had to be honest, terrible. I took her in my arms and hugged her tight. \"It'll be alri...\" I stopped myself, remembering how a similar comment from Milla yesterday had made me explode. \"Okay, it could be horrible,\" I conceded, \"but I'll be there with you. And maybe what happened yesterday will help us handle it better; remember, we don't apologise for being lesbians!\"\n\nShe took a deep breath, \"I won't apologise and hopefully it'll be okay. Oh God, Amber, I'm so glad you'll be with me.\"\n\n\"Of course I will. In the meantime...\" I reached under the bench and pulled a bottle of lager from what had been a large bowl of ice at lunchtime but was now mostly water. \"I got this ready for you. I know it's early but it might help you relax just a bit without getting drunk.\" I opened the bottle and handed it to her. \"Er, you do drink beer, don't you?\"\n\n\"Not usually,\" she said as she accepted the bottle, \"but as it's Italian and as you gave it to me and because I'm so stressed -- cheers!\" She took a swig. \"Actually, that's not too bad. Thanks, Amber.\"\n\nI continued finishing up what I was doing. \"Do your parents live here in town?\" I asked.\n\n\"No, in Cotterton, a village about ten miles away; we can catch the number 17 bus from down the road.\"\n\n\"What time is the bus?\"\n\n\"There's one just before five o'clock and the next an hour later.\"\n\nI put the tools away. \"Stuff it; I'm closing ten minutes early so we can catch the first bus. I don't want you having to wait and worry for an extra hour.\"\n\nAnd so it was, forty minutes later we were standing at the door of Milla's parents' large house. Mrs Carluccio opened the door. She was middle-aged, tall and slim like Milla but lacked Milla's olive skin. Her hair and eyes were brown and, as she invited us in, I saw the same amber shading in her eyes as in Milla's.\n\n\"Hi, Mama,\" said Milla in a bright, brittle voice. \"This is my friend Amber, Amber Taylor; she runs the new framing shop next door to the Caff\u00e8.\"\n\nWe shook hands, \"Pleased to meet you, Mrs Carluccio.\"\n\n\"Hello Amber and welcome; it's not often I get to meet one of Milla's friends.\" She led us through to a large, bright open kitchen that was obviously part on an extension to the back of the house and invited us to sit so we sat side by side. \"This is an unexpected visit, Camilla.\"\n\n\"Is Papa home?\"\n\n\"No, dear, he could be another hour yet.\" She looked at her daughter, \"Was there something you wanted to tell us?\" Her eyes seemed to look at me appraisingly.\n\n\"I do Mama... but...\"\n\n\"Well, do you want to wait for your Papa or can you just tell me first? It might be easier that way.\"\n\nMilla nodded. \"I... Mama, you know I don't have a boyfriend?\"\n\n\"Yes, Camilla, I know. I don't think you've ever had a boyfriend, have you?\" she replied calmly. I looked at her. She seemed almost to be expecting something.\n\n\"No, I haven't, and I won't, ever.\"\n\n\"That's okay dear. Do you want to tell me why you won't and why you're so sure?\"\n\n\"It's because... Mama, I'm homosexual, a lesbian!\" Milla looked terrified as she blurted the words out.\n\nMrs Carluccio simply nodded, a slight, satisfied smile on her face. \"Camilla, it's okay,\" she said gently, \"I'm glad you've told me but I must confess that I've thought that you probably were gay for a long time.\"\n\n\"Really, Mama?\" Milla sounded surprised but also relieved. \"I've known since I was at college, but... how did you guess?\"\n\n\"Camilla, I may be just an old woman to you but I'm not stupid! You've never shown any interest in boys or men, so I began to wonder and watch you, follow your eyes when we were out. No man ever got more than a glance, but some of the girls and women... you certainly noticed them!\" She smiled and turned to me, \"And you, Amber, sitting so close and protective and concerned for Camilla...\" she looked back at Milla and leaned forward, \"who is, I notice, wearing an amber pendant that I've never seen before; are you perhaps the reason why Camilla has told me this today, I wonder?\"\n\nWe both nodded, but the look of terror on Milla's face when we arrived had been replaced, first by amazement and now by a smile. \"Yes, Mama: Amber is my girlfriend.\"\n\n\"And Milla is most definitely my girlfriend,\" I slipped my arm around her. \"Mrs Carluccio, that was amazing. You were like Sherlock Holmes the way you deduced all that!\"\n\nMrs Carluccio looked at me and smiled, \"It was elementary, my dear Amber. I read the Sherlock Holmes stories when I was a girl and I've always enjoyed trying to work things out using 'the method'. I had lots of practice as a mother working out what Camilla and her brother Marco were up to.\"\n\n\"That's why Marco and I never got away with anything,\" complained Milla. \"Mama, how do you feel about it, knowing that I'm a lesbian?\"\n\n\"Honestly? Well, I was -- I still am -- a bit afraid of what people might think of us as parents; that they'd believe that we did something wrong raising you, even though it's nonsense. I was also a little disappointed, I think, that there'd be no wedding or grandchildren. Mostly, though, I was worried about you, Camilla; the prejudice and hate you might get and whether you'd meet someone who'd love you. I think that I can stop worrying on that last point, can I?\"\n\n\"Definitely, Mrs Carluccio,\" I replied firmly, \"I, I love your beautiful daughter so much.\"\n\n\"And, well I heard they're talking about maybe changing the law so gay people can marry, so the wedding might happen...\" Milla added.\n\nMrs Carluccio gave us another appraising look. \"I can see you've begun thinking about the future together.\" She smiled at us. \"Camilla, Amber: I'm very happy for you both.\"\n\n\"Mama, does Papa know, well, guess that I'm gay?\"\n\n\"Lucca? Guess? Of course not! If you were one of his buildings he might have paid enough attention to have noticed!\" she smiled. \"However, I have told him what I suspected, though he didn't much like it, I'm afraid. He tells himself that you're being selective and just need to meet the right man. I'm not sure how he'll react when you tell him that the 'right man' is this very pretty young lady.\" I couldn't help blushing. \"I think in his heart he knows... just -- try not to get angry if he's a bit stubborn.\"\n\n\"Yeah, I, er, stormed out of my parents' house when they didn't accept it. That really didn't help.\" I told her.\n\n\"How do they feel now?\" she asked.\n\n\"Um, well, it was only yesterday that I told them. It was meeting Milla that made me realize I was lesbian. I had a boyfriend until three months ago, so I should have been gentler on them I guess.\"\n\nWe chatted on as Milla and I told her about the meeting with my parents and why I'd had to tell them. We then went back to when we met, how I'd struggled with accepting my real sexuality, even the drawing I'd done on her birthday evening that had ended with us sleeping together.\n\n\"I'd love to see that drawing one day,\" Mrs Carluccio told us, \"if you wouldn't mind Camilla. Perhaps you'd draw me one day, Amber, though perhaps not in the same state of d\u00e9shabill\u00e9 -- an ordinary, fully clothed portrait would be fine! Ah, I think that's your Papa.\" She stood and went to the kitchen door as we heard the slamming of a car's doors. Doors, not just a door: that was odd. Mrs Carluiccio turned to us, \"Milla, I think Nonno is with Papa.\" Milla went pale. \"Let's not say anything today, Camilla. Talk to your Papa on his own another day.\"\n\n\"No, Mama, I want to get this over with. I need to tell Nonno too some time anyway, so why not today?\"\n\nWe heard the front door being opened and heard a man's voice, \"Hello Louise, I've brought Papa with me. I happened to drive past the Caff\u00e8 and he was outside. He was going to see Camilla but she wasn't there.\" I guessed that was the younger Mr Carluccio, Milla's dad.\n\n\"No, she's here,\" Mrs Carluccio told him.\n\nI recognised Nonno's voice: \"My Camilla she is here? I wanted to speak to her at the Caff\u00e8.\"\n\n\"Why don't we all go to the drawing room where we can be more comfortable?\" suggested Mrs Carluccio.\n\nThe room was large and comfortable with two sofas and two armchairs. A vast plasma screen TV was located against one wall and the other walls were hung with paintings and architects' drawings of buildings. We filed in and once again Milla and I were seated together on a sofa. I had tried not to sit too close to Milla so as not to make our relationship too obvious but she shuffled closer until our legs were touching.\n\nAs soon as we were seated, Mr Carluccio asked who I was. Milla was about to reply when Nonno interjected: \"That's Amber. She's Camilla's good friend who does the framing of the pictures. And she tidies up il Caff\u00e8 for free, just to help Camilla when it busy! She's a lovely young lady. She's a very good artist, too; very passionale... er, passionate.\"\n\n\"She's Camilla's...special friend, Lucca,\" Mrs Camilla said, clearly trying to get her husband to understand our relationship without using the words 'girlfriend', 'gay' or 'lesbian'. The light of understanding, however, failed to dawn in Mr Carluccio's mind and he just looked slightly confused. His wife made one last desperate attempt, \"Amber is Camilla's not-boy friend!\"\n\nI thought that this was a long shot and wasn't surprised when Mr Carluccio looked even more confused. \"Of course she's not a boy. What...\"\n\n\"Louise, she is trying to tell you that Camilla, she likes girls and Amber, she likes the girls too. Is that right, Camilla? And you two in love together?\" If jaws dropping made a sound then we'd all have been deafened! As it was, there was absolute, stunned silence.\n\n\"Yes, Nonno, I do. I like girls, not boys or men. That's why I came over, Papa, to tell you and Mama that I'm gay... and that Amber is my girlfriend.\" She held my hand and squeezed it, waiting for the reaction.\n\n\"That makes sense why you two are holding hands the other week; I see you walking like little girls. And I see the drawing in the flat, Camilla; when you not there today I go in and see your beautiful picture. Amber, she draw it, no?\"\n\nMilla was blushing as she nodded and I felt a little flushed myself at the thought of Nonno looking at the nude -- and more than a little sensual -- drawing of his granddaughter. \n\n\"Papa?\" Milla needed to know her father's feelings.\n\n\"Louise, you were right, weren't you? I should have believed you. My little girl...\"\n\n\"Papa, your little girl is a grown woman, a woman who has found someone who absolutely adores and loves her.\" Milla looked at me. \"And I love her back, just as much\"\n\n\"Another woman though!\" he protested.\n\n\"Lucca, in this day and age, why does that matter?\" asked Mrs Carluccio. \"Surely the fact that Amber loves our daughter and makes her happy is what matters? Camilla is a lesbian, it's a part of who she is, it's always been a part of who she is. She's the same person today as she was yesterday or last week or last month.\"\n\n\"Always, Camilla?\"\n\n\"Probably, Papa. I've been sure since I was at college.\"\n\nMr Carluccio sat frowning, looking at Milla and I and Mrs Carluccio, even once or twice at his father. Milla sat nervously chewing her lip. Finally, he gave a deep sigh. \"Okay, fine. It looks like I'm the last to know, as usual, but, okay: hello, Amber, I'm pleased to meet my daughter's girlfriend,\" and with that, he came over and shook my hand and Milla leapt up and hugged him. \"I need a drink: how about dinner at The Old Fox?\" he asked everyone.\n\nAs we walked to the pub in the centre of the village, Milla spoke to Nonno. \"You were very cool about Amber and me, Nonno.\"\n\n\"You think because I am old, maybe I should not... not approve you love a girl?\"\n\n\"Well, I did worry, yes. I can't help who I am but I don't want to upset you.\"\n\n\"Hey, I want my son to run the Caff\u00e8, but he wants to be un architetto and it make me upset. But then my beautiful granddaughter, she loves to run the Caff\u00e8 and that make me happy. Now my granddaughter, she a lesbian and loves another beautiful girl: so what? She is happy, what more should I want?\"\n\nMilla leant in and kissed his cheek. \"Thank you, Nonno. I love you.\"",
        "Milla and I wrapped our arms around each other and hugged as we walked on. \"I guess we're officially 'out' and a couple,\" she said, the relief in her voice obvious. \"What next I wonder?\"\n\n\"Well, let's give it a few months and I'm sure there'll be a proposal we can consider!\" and we both smiled.\n\nEPILOGUE\n\nA few months became six, then seven, then ten. Two shops closed but a new one opened: \n\n<center>CARLUCCIO and TAYLOR Caff\u00e8, Gallery and Picture Framing</center>\n\nIt's just off the main High Street in the town centre. Both Uncle Graham and Nonno helped us make it happen with money, support, encouragement and, above all, their love. We now even have two part-time employees. \n\nThe fact that Milla and I are a couple is an open secret. I'm sure from the occasional black look and snide remark that we've lost a few customers because of that. We've also gained a few too: we do see quite a few same-sex pairs, young people especially, coming in to hold hands and drink coffee. Milla jokes that we've started giving the town a gay scene. I think she may actually be right.\n\nMum and Dad have accepted that I'm gay -- more or less; they're still a bit uncomfortable with the idea but we're trying to be as patient as we can with them. The fact that gay marriage will be made legal early next year can only help.\n\nThen, two days ago, Milla slipped her hand under mine and held it as she slid a ring onto my third finger... That was all: the feeling of her soft, warm hands enfolding mine as she placed the cool gold ring, with its amber stone between two small diamonds, onto my hand. \"Will you marry me, Amber my darling?\"\n\n\"Milla, my love, with all my heart: yes!\"\n\nThat was not such a little thing.\n\n<center>-- THE END OF THE BEGINNING --</center>\n\nThere is now a sequel, of sorts, to this story: . \n\nIt's ten years later and Max, Amber's one-time boyfriend, remains an utter, utter bastard, the path of his life strewn with the women he's used, abused and harmed with his vicious selfishness and misogyny. Then, one day, the Goddess takes notice; she decides that retribution for his misdeeds is needed and so sends Nemesis to visit Max with a most unusual punishment. \n\nCan it work? Can Max learn to love and care for women and what happens when he meets Amber and Milla once again? "
    ],
    "authorname": "ScattySue",
    "tags": [
        "romance",
        "coming out",
        "girlfriends",
        "toys",
        "engagement",
        "love",
        "anal"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/such-a-little-thing-ch-03"
}