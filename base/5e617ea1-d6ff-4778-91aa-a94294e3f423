{
    "title": "My Feather Girl Ch. 01b",
    "pages": [
        "My feather girl 01b - A diamond in the rough\n\nLEGALESE: Don't read this if you are underage, if it is illegal in your area, if it is offensive to you, or if you cannot distinguish fiction from reality. This is a work of fiction.\n\nAll sexually active characters are above the age of consent on their planet of origin.\n\nMany thanks go to RF-Fast and thor_pf for editing and polishing. Any bad grammar left is wholly on me and my artistic style... and a strong reliance on spell check.\n\nCopyright (c) 2018 by Acup\n\n*****\n\nSomewhere in the night we had shifted, me on my back and Betty under my arm with her head on my chest. I looked down at her sleeping, the little smile on her face, the morning sun in her hair. I could feel her tit in my side, the other lying slightly on my chest. I pushed the covers down enough to lightly trace her tit and nipple, that soft pillowy pink bubble with a little nubbin tip. Her areola made me think of a freshly cracked egg, the tender yolk so fragile. Pull and push a little watching it move, but so tender you could break it if you went too hard.\n\nBetty opened her eyes and smiled, \"you keep that up and we'll be flooding two beds mister.\"\n\n\"And your point is?\"\n\nBetty pulled herself up onto me trapping my firm cock between us, gave me a soft kiss, then laid her head on my shoulder and rolled completely up on me, \"Hold me,\" she whispered.\n\nFor as wild as last night had been, in some ways this was better. Waking up in Hanks arms, his fingers playing with my nips, rolling over to lay on him, his chest hair in my nipples. I can't remember ever being wanted like this before.\n\nI pulled the covers back over us, wrapping one arm around her back and the other I let drop to grope her ass.\n\n\"Naughty, naughty,\" she whispered. \"Don't stop,\" she giggled.\n\nI held Betty in the morning sun, holding her to me with her soft tits in my chest and her firm ass in my hand. This had turned out to be a heavenly week.\n\nI was beginning to really enjoy holding and squeezing her when my cell phone went off. I looked to see a text from Sandy, 'LEAVING THE AIRPORT NOW'\n\nI ran my finger up the crack of her ass making her hiss, \"Hey babe, Sandy just left the airport. We have about an hour and a half until we have to start in.\"\n\nBetty rolled off me, squeezed my firm cock and licked the tip, \"Party pooper.\"\n\nI rolled out behind Betty, slipping my shorts and slacks on. I slipped socks and shoes on and was pulling my new logo polo shirt on when I stepped through the connecting door.\n\nBetty was standing there in her pink thong and lace bra hunched over her suit case.\n\n\"Mmmm, I remember those...\"\n\nBetty jumped and turned, \"remember what?\"\n\n\"That pink thong.\"\n\n\"WHEN!\"\n\n\"That night you stood over me while I was putting Frankenstein back together.\"\n\n\"NU UH...\"\n\n\"Yup, you were wearing one of your shorter skirts with some nice stockings with the wide lace top. When you shifted forward that last time I got a little peek of that pink thong. Thought about it every time you knelt down letting your thighs show for the next few weeks.\"\n\n\"Uhhhhhh!\" Betty turned back to her suitcase, bringing her black slacks out and started slipping them on.\n\nOH FUCK HE DIDN'T, I DIDN'T DO THAT! Oh shit I've ruined it, he'll think I'm a slut for flashing my panties at him, shit shit shit shit... \n\nI came up behind her and put my hands on her waist, \"Hey babe, can I ask a stupid guy question?\"\n\n He still wants to touch me! \n\nBetty snickered, \"Is there any other kind?\"\n\nI nipped at her shoulder making her squeak. \"Why does a beautiful,\" kiss shoulder, \"delicious,\" kiss neck and slide hands from waist around front and begin going for her tits, \"petite hottie,\" cup her bra covered tits and give them a nice squeeze, \"need to wear a bra?\" Nibble on ear lobe.\n\n\"Because.\"\n\n\"Because why?\" I began tracing her nipples through her bra with my finger tips, \"It's not like you're built like Zandra.\"\n\nBetty snorted, \"Not even close.\"\n\nZandra, black as coal from South Africa, and a pair of G cup boobs she has to rest on the counter when she can, but ALL the guys want to use her cashier cage... and probably her puss as well! \n\nI reached between the cups and released the catch, letting it pull apart but not lifting it off her. I began tracing the underside of those soft tits, \"Would it be that terrible to know I was looking down your shirt today?\" I parted her bra a bit more, almost letting it clear her nipples. \"Knowing that what I really want to do is rip your shirt off and ravage your nipples for a few hours.\" I let the bra fall away from her tits and brought my hands up to cup and squeeze lightly, catching her nipple between thumb and finger rolling and gently tugging.\n\nHe still wants me, Hank still wants me after I flashed him my thong!\n\n\"At the very least I could trap you in a corner somewhere and slip my hand up your shirt and molest you while I kiss you into submission.\" I turned Betty, never letting go of one tit and put my other arm behind her to hold her to me, the heat of her pussy against my cock.\n\nBetty wrapped her arms around my neck and held me for a nice kiss, \"Damn you, now all I want to do is hop back in bed.\"\n\nI grinned at her, \"We can always come back when we're done.\"\n\nBetty grinned and bit the corner of her lips, \"Yes we can.\" Betty let her bra fall to the floor before slipping her logo polo shirt on, arching her back and tweaking her nipples at me.\n\nWhy am I turning into such a slut? Hank talking like that to me like I'm some hot babe and all I can think of is getting him back in bed so he can nibble on me, TO FUCK MY PUSS INTO SUBMISSION!\n\nI called in two biscuit and gravy orders to go and we headed out. We sat eating in the shop and had just finished when Sandy came in grinning with a pair of heavy boxes. \"Time to play, kiddies!\"\n\nWe headed for the floor, already getting busy since it was a grand opening. One of the security guards was keeping an eye on our taped off area, because gamblers would NEVER sneak under the tape and play a machine they weren't supposed to, no never... yeah right.\n\nOur Vegas transfer guy still hadn't shown, so I had security call down to hard count for a volunteer and about a dozen quarter buckets.\n\nA few minutes later in walked Shauntane... Beautiful Shauntane... BUSTY Shauntane. Where Betty was barely an A cup, Shauntane was at least a DD if not larger. She loved letting her chest bounce and loved the attention it got so it was comical to see the guys around us staring at her cleavage. The cleavage that was on display was because Shauntane had only zipped her coveralls up to her nipple line. A little bit of red lace showing and then all that wonderful chocolate cleavage.\n\n\"Well Cheri, what we doin' now?\" She asked in a pure New Orleans accent.\n\nShe saw me glance at her bare cleavage, Betty elbowed me, and I grinned. It was all in fun, she was engaged to be married, and they both loved showing her off.\n\nHank's looking at those big boobs. He likes them, and all I have is these speed bumps. FUCK!\n\nI had her start emptying hoppers and bringing them to me and Betty to swap plates. We had a few done and were making good progress, but I was getting a bit of a look from Betty when she caught me glancing at Shauntane as she bent to set the hoppers on the cart.\n\n\"Hey Betty, it would work better if you leaned forwards a bit more.\"\n\nBetty looked up at me and bent forward a bit, \"Like this?\"\n\n\"Just a little more, yeah, that's perfect.\"\n\nBetty gave me a look, \"How's this going to help me work better?\"\n\nI smiled at her, \"I didn't say it was going to be better for you, but it sure is better for me.\"\n\nBetty looked down and realized I could now see right down her top to those puffy nipples, she turned red, \"ACCCHHHH!\" and went back to work, Shauntane just laughed, that laugh rippling back and forth through her monster chest, and went back to swapping hoppers.\n\nWHAT THE FUCK? Hank keeps glancing at Shauntane's big boobs, and then he gets me to lean forward to look down my shirt at my bumps. And he's standing behind the cart so I can't even tell if he's getting hard looking at me or her...\n\nWe got a pretty good rhythm going, we would get a few changed and security would move the tape for guests surging in, sure that the new machines were better. We had the first isle done and were shifting to the next when Samuel stopped by to see if we needed anything.\n\n\"Pepsi and a snickers,\" I hollered out.\n\n\"Make it two,\" added Betty.\n\nShauntane groaned, \"Coffee.\"\n\nWe kept going, and our refreshments were delivered. By noon we had about two thirds of them completed. Samuel and a bunch of suits came around checking on us. \"Looks like you're making some headway. Figure what, two maybe three hours after lunch and you should have it all wrapped up?\" one of the suits said.\n\nI looked at our audience, just waiting for the next batch of machines to be released to them. I pointed to them with my screwdriver, \"You think they want us to take a lunch break?\" and went back to work.\n\nA guy from the back of the pack stepped forward, \"You want some sandwiches?\"\n\nI kept working, not even looking up, \"Sure if you have time, otherwise we'll make do with another candy bar and some chips.\"\n\n\"What's your preference?\" he asked.\n\n\"Plain ham on white with cheese.\"\n\n\"Egg salad,\" Betty added, head still down working.\n\nI didn't hear Shauntane, so I looked up at her staring at me. \"Huh? Oh, um, turkey on wheat if they have it.\"\n\nWe finished off that isle and got out of the way for the rush. We had shifted to the next to the last when the suit came back with our sandwiches and fresh drinks. \"Thanks, I appreciate it.\"\n\nWhat's with Shauntane? She's acting like she's seen a ghost or something.\n\nI ate about half of it and set it aside to get back to work. Finishing it between hoppers. I saw our gopher and a few others walk by every once in a while keeping an eye on us, but oh well. The only odd part was Shauntane wasn't quite her usual gabby self, and had zipped her coverall up a bit more, not letting any lace show and covering more than half her cleavage.\n\nWe had finished that isle and shifted to the last one when the suit guy came back by himself. \"Coming along okay?\" he asked.\n\nI looked down at the last isle, enjoying a bit of cleavage as Shauntane bent over getting the first few hoppers pulled and bringing them to us. \"About what I expected.\"\n\n\"Samuel said you expected to be completed by this time.\"\n\nI didn't even look up at him, \"Yeah, but that was with another tech out of Vegas. He didn't show so I called for someone from hard count to help out. Shauntane has speeded us up significantly, otherwise we would be about halfway on that last isle right now.\"\n\n\"Done this before have you?\"\n\nI chuckled and looked at Betty, she grinned back. \"Once or twice I guess.\"\n\nOnce or twice my ass. All the resets we did on opening and six of these trips. Go on Hank, tell him what you can do.\n\n\"Need a hand?\"\n\nI looked over at mister starched shirt and tie, well what the hell. \"As long as you know what end of the screwdriver is what and aren't afraid to get your fingers dirty, sure.\"\n\nHe folded up his jacket and put it on a chair behind us, loosened his tie and rolled up his sleeves, \"Now what?\"\n\nI handed him my screwdriver and showed him what to remove and set the new shelf wheel and how to adjust the knife. He didn't do too bad for a beginner.\n\nI grabbed my stubby screwdriver and began another one beside him. He was a little slow, but not bad. A little over half an hour later we had the isle finished and everything was back open to the public.\n\nWe were packing up getting ready to head back down to the shop, security and Shauntane having left already. \"Good working with you two,\" the suit said and held out his hand. He shook both mine and Betty's. Betty took sheer pleasure in rubbing and teasing me on the way back down to the shop.\n\nGod I can't wait to get back to the hotel, all those little glances Hank made. I could see him looking at me, even watching my nonexistent ass as I walked back to the shop. All I wanted to do at lunch was slide around to his side and curl up under his arm, pull his hand across to my boob... and working on the machines afterward, feeling his hand on me, his breath on my ear, his dick against my thigh. Even dragging my nips across his arms was pure delight and torture at the same time.\n\nWe grabbed another sandwich and then went back to the floor sticking around the quarter area. We had a few little problems the next few hours, but nothing with the hoppers. And it was pure torture to have to lean over Betty as I instructed her on what to do, glancing down her shirt, putting my hand on her back and then letting it drag over her ass as she turned to stand up. And of course Betty just had to let her braless tits drag across my arm when she got the chance.\n\nI can honestly say, I was pleasantly surprised at how quickly Betty picked things up. I knew she was intelligent, but intelligence and mechanical aptitude are two totally different things.\n\nWe were at an unoccupied machine having slot machine class when the suit came back around. He watched us a bit, finally coming up after Betty had gone through the diagnostics all by herself.\n\n\"You two still here? I thought you would have taken the rest of the day off with all the fun you had this morning.\"\n\nWe turned to him, \"Nah, I wanted to keep an eye on them just in case. Beats sitting around the hotel, and it gives me a chance to teach Betty more about the machines.\"\n\nHe looked at us, then pointed a finger between us, \"So you don't work here?\" looking down at our state gaming badges. We had to get local badges to work on an active gaming floor so I could see his confusion.\n\nI smiled, \"No, we're from up north. I was the lucky guy to find the shelf wheel problem, so I got to stay and help fix it, Betty stayed to help also.\"\n\n\"Been kinda fun to learn more about the inner workings of the machines, it will make my job easier when we get home,\" Betty added.\n\nHe looked back and forth between us a bit and his eyes stopped on Betty, good choice! \"So what do you normally do?\"\n\n\"Host side shift manager,\" Betty responded. She jerked her thumb at me. \"Mr. lazy bones here is one of our senior techs and does most of the training.\"\n\nIf Hank's not going to toot his own horn I am!\n\nHe looked over at me, \"Tech training?\"\n\n\"Yeah, I get them on the night shift so I have quiet time to train.\"\n\n\"And you cross train hosts?\"\n\n\"Some. Most people who work at the casino should be arrested for even looking at a screwdriver. But some can get the hang of it. Betty has a good aptitude, would probably make a decent tech if she wasn't on the host side.\"\n\nHe chuckled at my screwdriver comment, \"Yeah, I've known a few like that. So when do you head back?\"\n\n\"Monday, the weekend flights are for the birds.\"\n\nHe chuckled, \"So you going to do the tourist thing tomorrow?\"\n\nMy turn to laugh, \"Yeah, probably run next door to Disney World tomorrow.\" He laughed at that, Mickey was hundreds of miles away. Not a whole lot around here yet with the casino having to be near the water. \"I figure we'll probably stop in and baby sit the machines for a bit, then go for a drive later. Better than staring at the walls in the hotel.\"\n\n\"You're coming in on Sunday?\" He seemed a bit surprised.\n\nI grinned, \"Well with the grand opening it will probably get a bit hectic after ten or so when church lets out. Might as well be useful.\"\n\nDAMN, I was hoping to stay in bed all day.\n\nHe grinned and held his hand out, \"Hank,\" shaking mine, \"and Betty,\" shaking hers, \"it's been a pleasure working with you. Enjoy your stay here while you can.\"\n\nWe went over to the sit down machines and had some more teaching time, and I just happened to be able to stand there and look down Betty's top... isn't that an amazing coincidence? And when she was bent over on hands and knees in the bottom cabinet I just marveled at her ass.\n\nEvidentially I had stopped talking, \"Are you teaching or ogling?\" wiggling her ass. I gave it a light swat and continued with her.\n\nMaybe I can convince him to not come in tomorrow, stay in bed and make me scream a few dozen times. Damn, I'm turning into a nympho.\n\nWe had had enough and decided to go back to the hotel. \"I was thinking about heading out to the pool for a bit, maybe catch some sun, you care to join me?\" Betty asked from the passenger seat grinning while circling her nipple teasing me.\n\n\"Before or after hopping back into bed?\" making like I was licking her pussy.\n\nBetty's eyes went wide. \"Before, I probably couldn't walk afterward.\"\n\nALL FUCKING RIGHT! Hank does still want me. This is it, this is fucking it! I think I tossed those little scraps of a bikini into my bag, the ones I got as a boobie prize at Stella's lingerie party. If those don't convince Hank I want him to take me the way HE wants nothing will... if I can wear them...\n\nI had to smile at that. We walked back to the rooms, stopping at our respective doors, stepping inside and then seeing each other through the open connecting doors. Betty stopped and stripped right there, caressing her bare tits, then dropping her slacks and thong, running her finger between her wet lips before stepping to her suitcase.\n\nFUUUUCK! I had to turn away. I rummaged through my suitcase to my travel kit. I hadn't worn it in a while, but I had a nice little black pair of trunks, barely one step up from a little Speedo, and it didn't hide my cock. If Betty wanted to tease, two could play that game.\n\nI can't believe I'm doing this, I could just as well be naked. This thing is so thin, and it gets translucent when wet, and I'm going to be dripping wet all the time! And it doesn't cover! My areolas are peeking out the sides, my landing strip is sticking up from the bottoms, but if I pull it far enough to cover my landing strip it will disappear into my puss...FUCK! \n\nBetty reappeared in a robe holding her towel, \"Ready studly?\" I slipped my robe on and joined her. She put her arm through mine and leaned on my shoulder as we made our way out to the pool. I laid my towel out and put my robe on the arm.\n\n\"OH MY FUCKING GOD!\" I whispered. Betty was leaning over the lounger naked. Well, not actually naked, but FUCK!\n\nThere was a thread coming up the crack of her ass and over her hips with another tied across her back. She turned to me and I about came in my trunks. I was probably standing there with my mouth open from the look on her face. Betty was barely covered. A tiny pink triangle over each nipple, three inches tall and MAYBE an inch wide across the bottom. If she moved at all those lovely puffy areola would be peaking out.\n\nAnd the bottom wasn't much bigger. Maybe a bit longer and turned the other way around, but it wasn't even long enough to completely cover her landing strip. Oh did I mention it was thin enough to see the outline of everything behind it also.\n\nI made my way back up her body to see Betty grinning at me, she made a quick glance at my cock, \"I guess you do like it.\"\n\nOkay, maybe this wasn't such a bad idea after all. Hank seems to be okay with me showing off from the way his dick is trying to escape his trunks! Might as well go for it, and the sun feels so good on my skin...\n\nBetty proceeded to make quite a production out of oiling her front up, 'accidentally' moving her top aside to oil her tits and then pulling it back over with the oil making that now thin top almost as transparent as her top and bra the second day.\n\n\"Your turn!\"\n\nI reached for the oil, but Betty pulled it back, \"Uh uh, lie down.\" I started to lay back, \"Uh uh, on your belly, I'll do your back first.\"",
        "\"Mmmmm.\" I rolled over and Betty started at my feet, almost tickling as she did, then working her way up my legs. When she got to my ass she giggled as she worked her hands up under my trunks to squeeze my cheeks a bit before sitting across my things. I could feel her oiled thighs on mine as she worked on my back, almost putting me to sleep. But feeling her mound against my ass while she worked on my shoulders and neck brought me right back awake.\n\nWhen I rolled over on my back there was Betty smiling down at me. Her bikini, if you could call it that, was almost completely translucent. She grinned, noticing me looking at her tits. She started down at my ankles again, working her way up my thighs, dragging her nails across my aching cock. She scooted up planting her mound against it as she ran her oiled hands across my chest, making little swirls in my chest hair and giggling about it.\n\nI'm going to cum just sitting here, Hanks body under my hands. I can feel his hair as I oil him down, his strong legs under my fingers. Running my hands over his back, funny how little hair he has on his back compared to the fine layer he has on his arms and legs. OH FUCK! HIS ASS FELLS NICE AGAINST MY MOUND!\n\nWhen Hank rolled over I almost lost it, those full balls and hard dick barely contained in his trunks. A little tug and I could take him in my mouth, feeling him trying to get in my throat, feeling him shoot off. He's looking at my boobs! Oh fuck he feels good against me, his hard dick against my puss, if I sit here much longer I'm going to pop him out of his trunks and sink down on him...\n\nBetty was grinding on my cock enough to make that itty bitty bottom almost disappear between her pussy lips. \"Okay, now you can do my back...\" and hopped up to lie beside me. I just groaned looking at her, only those two strings across her otherwise naked body in the sun.\n\nI did like she did, starting at her ankles, but Betty was keeping her legs spread as I went up her thighs. I could see that little bit of cloth between her pussy lips stopping on her taint, not even coming close to covering her rosebud. Just that little thread splitting her like an invitation. I took my time with her ass, letting my thumb dip between her cheeks and getting a slight hiss from her as I got close.\n\nOh this is heaven! Hank's hands all over me, every bit of my backside exposed. I know he's looking between my legs. Feeling his hands on my ass, letting his thumb dip in a little.\n\nBetty reached back and untied the string across her back, \"Wouldn't want to get any unnecessary tan lines now would I?\" like that string would even be noticeable. I did sit on her thighs resting my cock against her cheeks, rolling forward and rocking against them as I did her back and shoulders. I leaned forward planting my cock firmly between her cheeks, \"All that oil on your lovely ass. If I slipped out of my trunks I could slide right in and you wouldn't be able to stop it,\" I whispered as I ground against her cheeks.\n\nOH FUCK, HE REALLY DOES WANT TO PUT THAT MONSTER IN MY ASS!!\n\n\"Mmmmmm, been a while since I had a good load in there,\" she whispered.\n\nHOLY FUCKING SHIT! BETTY DOES ANAL!!\n\nBut it does feel good to have a cock in my ass. Well, a pencil dick at least. But then for as good as he felt in my puss, what would it be like to have him in my ass, something like...\n\n\"But how long would you last in my ass? So nice and tight, clamping down hard on your aching cock. How many strokes would you get before you blasted off in my ass? Four, maybe five. Then you'd be trapped in me until you unloaded every last drop from those tasty balls.\"\n\nI kissed the edge of her ear, \"Be interesting to find out.\"\n\nI saw her smile, eyes still closed, \"Yes it would.\"\n\nI got off Betty, and slid my lounger closer to enjoy the view of her naked backside. Betty reached out for my hand and I took it, enjoying being with such a beautiful woman. \"I wish this week didn't have to end.\"\n\nI felt Betty squeeze my hand a bit, \"Me too, but I don't think your girlfriends would share. I sure as hell wouldn't.\"\n\nI snickered at that, \"Um Betty?\"\n\n\"Yeah.\"\n\n\"I share an apartment with two ladies. I have my room and they have theirs.\"\n\nBetty's eyes opened wide and she rolled away letting her bare tit come into view. She looked at me a bit, \"You mean...\"\n\nHE DOESN'T HAVE A GIRLFRIEND!! MAYBE WE...\n\nI grinned and looked directly at her bare tit then back to her face, \"They are a couple.\"\n\n\"So I could see you again when we get back?\" she was almost pleading.\n\n\"What about your boyfriend?\"\n\nBetty's eyes went wild, almost in anger, \"HA! Pencil dick isn't getting near me again.\" Betty hopped up and straddled my cock hands on my chest, hissing as she sat down with just the slightest movement grinding on me, her hot mound against my aching cock. \"You mean it, you'd really...\"\n\nHank really wants to see me, he really... does he really...\n\nI looked down at Betty's bare chest, her top still hanging around her neck, \"Um, Betty...\" I looked down at her pink nipples.\n\n\"Screw that, you're serious, we could get together? After here?\"\n\nI smiled up at her, \"I'd like that, if you want to.\" as I slid my hands up her oiled side and massaged the outside of her tits with my thumb.\n\nBetty slid down to my chest, she kissed me like she was going to suck the life out of me. She nestled her head beside mine flattening her oiled tits between us, \"take me to bed,\" she whispered in my ear.\n\nBefore I rip your trunks down and jump that wonderful dick right here in front of everybody and scream your name when you fill my puss.\n\nI brought one arm behind her and the other to her ass to give it a slight squeeze, \"after a good shower?\"\n\n\"Deal.\" Betty got up, grabbing her towel and robe. She pulled her top back over her tits, but let it hang there with only the oil keeping it stuck in place. I looked at her barely covered and grinned. We went back up to the room, Betty never covering up, her top just barely staying in place from the oil, strings just floating in the breeze as she walked.\n\nAs soon as the door closed behind us she slung her top off and pulled the bows on her bottoms. Betty knelt with her bottom hanging in her pussy lips and drug my trunks down my legs, inhaling my cock before they got to my knees.\n\n\"SHIIIItttt...\" I hissed as she pressed me to the back of her mouth, her throat tight around the head of my cock. A kneeling woman in front of me was wild, but when I looked up I made the mistake of looking in the mirror behind her. There was Betty sucking my cock like a mad woman, knees spread and bikini hanging in her pussy lips. \"COMING!!\" I hollered.\n\nYES, FILL ME, FILL ME TILL I CAN'T TAKE ANY MORE! Oh god he's cumming, I can feel it running, almost squirting, down my throat. I can't take him all the way like I'm supposed to, but I will. Mmmmm Hank tasted so good, he gives me soo much more than Zack ever did, I could kneel here and let him fill my mouth over and over. I want it, like in the movies... OH JESUS! HIS HOT CUM ON MY BOOBS!  \n\nBetty jammed my cock to her throat, taking my first few shots directly in her throat. She pulled back to take the next in her mouth, then pulling back and letting the last bit dribble on her tits, a nice dollop across her left nipple.\n\nI managed to get a foot free from my trunks still around my ankle and stagger the three steps back to drop on the bed.\n\nBetty stood up and cleared her throat. I managed to open my eyes. Betty stood there and peeled her bottoms from her pussy, then used her finger and wiped my cum from her nipples and licked it clean. \"Wonder what the blueberry will be like?\" I just slapped my forehead and groaned. I heard Betty giggle, and then the shower start.\n\n\"Hooooneeeey, will you do my back?\"\n\nI sighed, but the image of Betty naked and soapy in the shower got me moving. Betty had shampooed her hair letting it run down her back. I could see her muscles flex as she was soaping her chest. The suds running down her body. I came up behind her nestling my cock between her cheeks, reaching around to cup and play with her soapy tits.\n\nOh, I am turning into a nympho. I turn to jelly when Hank is touching me. I want him against my back, against my boobs, in my puss, and maybe even in my ass. I mean he did say he'd take my ass didn't he? Really take me completely and make me his? Will he really take a flat chested girl for his own?  \n\nBetty handed her loufa over her shoulder and wiggled her butt against me. I did her back as she leaned forward never letting my cock from between her cheeks. When I finished she pulled forward and turned her back to the water, rinsing and presenting her body to me as she did.\n\nAs soon as she finished she proceeded to soap me down, making sure my cock and balls were nice and clean, rinsing me off and then sucking my cock all the way in before getting up to shut the water off.\n\nMMMMM, he does fit down my throat soft. What will it take to get him there when he's hard?\n\nWe took turns drying each other, Betty sucking air as I took my time with her tits and nipples alternating between drying and kissing them. We strolled back to bed arm in arm. We shared a bottle of cold water, then crawled in to cuddle. Betty pushed me into bed and cuddled under my arm and started playing with my chest hair.\n\nI wrapped my arm around her shoulder, letting my hand cover her tit, then pulled back to let my fingers play with her tit and nipple, the heat of her bare pussy on my thigh. \"Are you sure about this? I know you've got a boyfriend.\"\n\nBetty snorted, \"That's what I thought too, but not anymore. Pencil dick is no more.\" That's when I got a basic history of 'pencil dick.' Man that term made me cringe. I mean I'm about average. A little under seven inches and a nice girth. I had one girlfriend tease me half a day and got me out to just under eight, but then she only got three strokes in her pussy before I unloaded. She was a bit pissed but it was her own fault.\n\nI can't believe I fell for Zack's line of bullshit. I told Hank a little, but not everything. I couldn't tell him all the things I did that made Zack mad. I wasn't going to make Hank mad at me. I was going to do whatever he wanted like I should. But most of all I was going to learn to take him in my throat and ass, I wasn't going to give Hank any excuse for not wanting me.\n\nSo anyway, 'pencil dick' had convinced Betty that he was average. She could curl her fingers around him easily and he barely stuck through her fingers to jack him. She would have to blow him, but he refused to lick her pussy, and put down her small chest telling her she needed big DD tits to keep a man happy. He would dip into her pussy for lube, and have to take her ass to get off.\n\n\"So did you like anal?\"\n\n\"Well with Za... pencil dick, it was the only way I would feel anything, why?\"\n\nI grinned, \"Well...\"\n\nBetty's eyes went wide and she reached down to my firming cock, \"You really want my ass?\" she said a bit tentatively.\n\nI groaned as she squeezed me, \"I want all of you, but only when you're ready. Of course right now I would just totally object to you crawling your pretty little ass up on top of me and have your way with me.\"\n\nBetty stroked me grinning, then leaned down and licked the tip of my cock, \"Oh I can see you would totally object to that. Next thing you're going to tell me is that you would just hate for me to lean over and feed you my nipple?\"\n\nBetty climbed over me and ran my now very hard cock back and forth between her pussy lips, \"fu...fu...fuuuuckkkk\" she hissed as she sank down on me.\n\nBetty leaned forward, bringing her chest to me, \"OH YEAH, I would just hate to...\" and I was silenced by a nice chewy nipple between my lips.\n\nI can't believe Hank is doing this, he wants me to do what I want, ride him the way I want, not telling me what to do...\n\nI reached down and squeezed her ass making her pussy quiver, and since she had admitted to taking 'pencil dick' in her ass, instead of stroking her ass I dipped my finger in, finger fucking her ass as she rode my cock, timing the strokes to match hers.\n\nOH FUCK! PUSS AND ASS...\n\nOn the third stroke Betty screeched and dropped on my chest spasming. I kept fingering her ass and feeling her cum over my cock for a bit, I pulled my finger from her ass and just enjoyed her trembling on me. I kept fucking her slowly, enjoying her wet pussy around me. I got a good grip on her ass and picked up some speed hearing her moan.\n\nBut Hank hasn't cum, and that's the most important part. He needs to cum...\n\nBetty slipped to one side a bit and grabbed my shoulder to get me to roll with her. I rolled over with her, Betty's legs coming up around me. She raised her arms over her head making her tits stand up proud. \"Cum... fill me... flood me out.\" She said softly with a smile, never opening her eyes.\n\nI put my hands on the bed over her shoulders and drove in deep, \"Yesssss,\" Betty hissed. I kept driving into her, long firm strokes. Betty reached down to her jiggling tits, cupping them and rolling her hard nipples. \"Fuck meeeee...\" Betty mewed and began cumming again. I couldn't hold off and began filling her pussy. Betty's eyes flashed open and she wrapped her arms around my neck and screaming in my ear as I pumped into her and gave her every drop I had left.\n\nI lay on Betty for a bit, then reluctantly pulled from her as I softened, rolling to one side. Betty's hand searched for mine, and gripped it, \"I could learn to like wet spots.\" Then she snickered and then laughed. I had to join her in that thought.\n\n\"Good thing there are two beds in the other room, we can make another one wet later.\" That set her off again. I managed to get standing and walked to the patio door, watching the sunset over the trees. Betty came up beside me, and I shifted behind her putting an arm around her belly and the other over her shoulder to cup her tit. \"Wonderful ending, to a wonderful day.\"\n\nBetty cupped my hand over her tit, \"What? We can't do that again later tonight?\"\n\nI smiled and nipped her neck, \"How about after we get something to eat?\"\n\n\"Okay, what should I wear?\"\n\nI turned Betty to me, \"Uh uh, I'm not him. You wear what you want to wear, although I like your current outfit the best.\"\n\nBetty snickered, \"What, dribbling puss?\"\n\nIf I didn't think I would get arrested, I would walk around like this, proudly letting Hanks cum dribble down my thighs, and bend over for a reload whenever he wanted it. But would he let me walk around naked? He likes looking at me without my undies, but would he let me... \n\nI chuckled and brought my other hand up to cup her other tit, \"Mmmmm naked woman.\"\n\n\"But braless...?\"\n\nI sucked on her earlobe, \"For a beautiful lady that doesn't really need them, whenever possible.\"\n\n\"Men...\" Betty pushed me to my room. \"Then you go take your shower, and don't come in until I call you.\"\n\n\"Yes Dear.\" I got my ass slapped.\n\nI took my shower, reminiscing about my last shower alone wishing I was going to get lucky with Betty. Sometimes you do get what you wish for. I got dressed, my last clean shirt tucked into my cleanest slacks. I had just pulled my jacket on when I heard behind me, \"Hey studly?\"\n\nI turned to one of the most beautiful and yet simple outfits. Betty in jeans and button up shirt, but unbuttoned down to her nipple line showing lots of cleavage. The jeans snugged up against her pussy showing some nice camel toe. Her hair just so and the lightest touch of makeup finishing it off perfectly.\n\nIt wasn't much, just jeans and a shirt, but I wasn't going to hide my body from Hank if he wanted to see it. It felt weird feeling a breeze on my boobs after all the years with Zack having me cover up when we went out. If Hank keeps looking at my puss like that we're not going to get very far... \n\nI whistled at her looking up and down her body. Betty raised her arms and turned around showing the jeans also right up in the crack of her ass. I put my arm out for her and watched her snuggle up, I glanced down to look down her unbuttoned top seeing quite a bit of tit. Betty snickered and pulled her top open more for me to see her whole tit, \"Better?\"\n\nI tipped her chin up to kiss her, \"I still like naked better.\" Betty snickered and released her top, then undid one more button leaving it open below her nipple line. We walked to the restaurant just walking together, no conversation. We were seated almost immediately, but Betty snickered when I had her scoot over so I could sit beside her.\n\n I'm practically hanging out of my shirt and Hank is just smiling and looking. I could lean over and let my boob pop out, but would he... \n\nWe ate, we kissed, we talked, we kissed, and I kept one hand on her thigh whenever I could. She grinned at me taking looks down her top when I could, and even reached up and shifted it a bit to let it gap open for a better view. \"Men...\"\n\nWe finished dessert, actual food dessert in the restaurant. I hadn't planned it, but they had pumpkin pie so I had to indulge. Betty grinned as she ate her ice cream, but rolled her eyes when I made sure the fork was good and clean.\n\nWe walked to the elevator and waited. I turned her head up to kiss her, \"What about the cameras?\" Betty asked.\n\n\"I don't care...\" and held her face lightly and just touched her lips. No tongue, no mashing of lips, just a nice soft kiss. The elevator door dinged and the guy behind us cleared his throat. Betty gasped and blushed as we stepped into the elevator. We went to our room and stepped inside not bothering with separate doors, I turned her to me and held her with arms around her waist, just lightly kissing her.\n\n\"What do you want to do?\" Betty asked.\n\nI reached up and stroked her hair, \"Uh uh, what do you want to do? We can sit and talk, cuddle, fuck each other's brains out,\" Betty snorted, \"or anything in between.\"\n\nANYTHING? Well, there's a lot I'd like to try that I've seen in the porn movies, but I wonder, would Hank?\n\nBetty tucked her head against my chest, \"I want you to eat my puss again.\"\n\n\"Oh that sounds just sooo terrible.\"\n\nBetty snickered, \"But I want to sit on your face and watch you.\"\n\n\"Oh no... not again. I'm going to have to lie back and let you cum in my mouth while I look up at those delicious tits and nipples. That would be just pure torture.\"\n\n\"I thought you'd object to that.\" Betty reached up to unbutton her top.\n\nI took her hands and stopped her, \"Let me...\" I kissed her hands, then began slowly unbuttoning the last remaining buttons on her top, caressing and kissing as I bared her skin. I kissed right down her cleavage, not getting anywhere near her tits as I pushed her shirt off her shoulders to drop to the floor. I knelt and began unsnapping her jeans as she kicked her shoes off, her zipper came down releasing the wonderful aroma of her pussy.\n\n Oh god I'm so wet already, will Hank really eat me when he can smell me so randy for him like this? \n\nI reached out and began working her jeans down, stopping when I got them to her thighs and reached back to squeeze her cheeks making her suck air. I kissed her mound beside her landing strip exposed above her thong as I lowered them. She stepped out of them and I looked at the sight in front of me. Betty in her little pink thong with her landing strip sticking out, but her juices making it very apparent how wet she was from the HUGE wet spot.\n\nI inhaled deeply before reaching to her hips and catching the straps. Lowering it slowly to reveal the treasure awaiting me. I pushed her slowly back to the bed, and licked her wet lips as she fell back.\n\nOH GOD I WANT HIM IN ME! But he said he would. I mean Hank's already licked and played with my puss, but not like this. He wouldn't be able to say he didn't do it. I would be looking right down at him as he ate me. Looking in his eyes to see if he REALLY wanted to or if he was just faking it.",
        "Betty scooted back to watch me undress, kicking her knee up and sliding her finger back and forth between her lips. Spreading her pussy and cupping her tit as I lowered my slacks almost made me fall on my face. I slid my shorts down and Betty licked her lips. She scooted back and patted the bed.\n\nI grinned, \"I guess if I have to.\"\n\nI lay back on the bed and Betty leaned down to lick the tip of my cock before swinging a leg over me. She knee walked up, spreading her legs and settling over my mouth as I reached up and grabbed her ass, making her gasp. \"Be nice.\"\n\n\"Always...\" as she descended on me.\n\nOH FUCK HE DOES! HANK REALLY WANTS TO EAT MY PUSS. He pulled me to his mouth, his tongue entering my puss before I settled in. Squeezing and playing with my ass while he drinks me in. I'm not going to last, I'm going to... OH THE FINGERRRRRRRRRR... \n\nAs Betty settled on me her pussy opened, the sight and sound of wet pussy opening above me as she settled to my mouth and just flowed into me. I just planted my lips to her and sucked the juices out of her before even needing to lick them out, my nose bumping and playing with her clit as I drank in her nectar. I began to lick and suck hearing Betty moan as I did.\n\nI couldn't bring my fingers up to play with her g-spot, but I could squeeze her ass. Betty was rubbing her clit against my nose and then pivoted her hips to bring her clit to my lips. I wet my finger with her juices and put a finger in her ass as I sucked her clit nipping it a bit, feeling her ass clench and then open for me, inviting me into her depths.\n\nBetty started cumming all over my chin and I pushed her forward enough to suck her juices while still finger fucking her ass, feeling her flow with every stroke in her willing ass. Betty kept going a little, then fell forward and rolled over.\n\nI licked my lips, \"GOD THAT WAS SOOOO TERRIBLE... when do you want to do it again?\"\n\nBetty snorted and rolled against me giggling. I pulled her close and squeezed her butt. Betty moaned and turned on top of me, dragging her tits on my belly as she turned to engulf my cock. I felt her tongue go around and around as she cupped and lifted my balls. I put my hand on Betty's ass, cupping and squeezing, letting my thumb dip between her lips, spreading her juices already running down her thigh.\n\nHank said anywhere, and his balls feel so full. I want it, I know it should be in my ass, but I want it... in my puss.\n\nBetty hissed and dropped her head to the bed and put her ass in the air like a cat in heat. \"Fuck me...\" she hissed.\n\nI rolled around to my knees and came up behind her ass in the air, taking in the sight of her wet pussy. Grabbing her cheeks and spreading her lips with my thumbs exposing her dark inner lips to view. I took the last move and slid balls deep into Betty in one long slow stroke, feeling her tight pussy envelop me while Betty made some unrecognizable noises into the bed.\n\nI began sliding in and out of her wet pussy, just enjoying being in her, her tight pussy just plain heavenly. I stopped momentarily, then drove in hard and deep.\n\nBetty sucked air, then turned her head, \"Harder...\"\n\nI pulled back out and drove in again making her grunt and grin. I began fucking her harder, getting a good pace going, almost slapping her ass as I did.\n\nYessss, just like in the porn movies. Butt slapping deep hard fucking, but Hank is holding back, I want it...\n\n\"Harder,\" she hissed again through clenched teeth.\n\nI got a good grip on her ass, pulling and stretching her rosebud as I did. Betty hissed as I stretched her, and began pacing the pulls as I drove in her. Betty was whimpering and gasping as I drove in, but I wanted to give her another good one. I slid my thumb down to her ass and began teasing her rosebud.\n\nBetty screeched and flopped, only her knees being trapped by mine kept her ass in the air as she started cumming. I slipped my thumb in her ass and just pounded her hard, feeling her spasm and flow around me. I was going to hold off, but a loud screech and clamp took me over the edge. I fell over on her, flattening us to the bed as I just drove into her flowing pussy. Grabbing her shoulders for more leverage so I could drive as deep as possible, feeling her spasm under me...\n\nGod what a twit I've been. Denied all this for so long. Hank rolled off of me and I'm still cumming from the fucking he gave me. Puss and ass together, feeling his cum dribble across my ass making me cum a little more...Why?\n\nI rolled off Betty catching my breath, when I looked back Betty was trembling and crying. I rolled her away to face me and held her, \"What's wrong? Where did I hurt you?\"\n\nBetty wrapped her arms around me and held me tight, trembling and crying on my chest.\n\nI held her tight, \"I didn't mean to hurt you, I'm sorry...\"\n\nBetty turned her head up and put her finger to my lips, kissed me softly then tucked her head under my chin. \"I'm okay...\" she said softly.\n\nI probably did the smartest thing I have ever done in my life, I held Betty and didn't say a word, just satisfied she was okay.\n\nBetty settled in for a bit, running her hands over my chest back and forth. I heard a sigh, \"I think we need another shower... and another dry bed.\"\n\nI sighed, \"You know, I never had this problem until I met this hot babe. What do you think I should do about it?\"\n\nBetty snickered, \"Easy, fuck her until she can't walk straight. That will teach her to make a mess in the bed.\"\n\n\"Yeah that would work, I could also tease and nibble on her for a few hours before I let her orgasm, that might work too.\"\n\n\"Oh you do have a mean streak, a few hours. Next thing you're going to tell me you'd tie her up too.\"\n\n\"Oh definitely, have to tie her spread eagle on a big four poster bed, blindfolded and headphones playing the soundtrack from a wild porn movie. She'd never know when I was going to touch or lick her next.\" I said as I traced her nipple with my finger.\n\nIs Hank just teasing me, or would he really do that? Tie me up and have his way with me, show me what he wants, take me the way he wants. Would he rough me up or stand over me, could I get him horny enough to jack off on my speed bumps?\n\nBetty reached down to stroke my cock, \"Where do we get the rope?\" and giggled. Then she pulled me off the bed and to the shower, and yes she was dribbling down her thighs... damn that is just a terrible sight.\n\nWe began soaping down, and Betty winced a bit when she was soaping her pussy. \"Betty, I'm...\" she put her finger to me and smiled and shook her head. I took her loufa from her and finished her body, slowly soaping and enjoying her body under my hands. Coming up behind her and soaping my front with her back making her giggle.\n\nWe rinsed and toweled then crawled into one of the dry beds. I pulled Betty to me, holding her jaw gently. \"I didn't mean to hurt you.\"\n\nBetty grinned and kissed me, \"You didn't hurt me.\" I raised my eyebrows. \"Well maybe a little, but it's not from you exactly, it's more like not having been used properly.\"\n\nEvidentially I wasn't getting it, \"Well it's not like pencil dick could really give me a good fucking now could he?\"\n\nI realized I never had. I had a few grope and jack off boyfriends in high school, but I had been with Zack almost right out of high school and through college off and on. So in a way Hank was my first, my first real fuck. Hell I probably lost my virginity to a vibrator not Zack! That would be almost funny if it wasn't so sad.\n\nI grinned at that, \"So we'll just have to take it a little slower then.\"\n\n\"I hope not,\" she grinned and kissed me back. Betty turned around and snuggled back into me pulling my hand to her tit. We cuddled and called it a night.\n\n___\n\nGod this is sooooo terrible, waking up with a beautiful naked woman on top of me. Betty was half lying on me, her head tucked under my chin. I brushed her hair back and kissed her forehead. She sighed and snuggled in further under my chin. I glanced over at the clock and was surprised to see it was seven thirty. I NEVER wake up before ten, usually eleven or later on my days off.\n\nI want to wake up this way for the rest of my life.\n\nI just lazily stroked Betty's back, feeling her suck air when I got near the crack of her ass. I kept playing but spent more time near her butt. As I was playing with her cheeks letting my finger dip between them I could feel her nipples harden against my chest.\n\nI kept playing, stroking my finger up and down the crack of her ass, feeling Betty arch her ass as I got close to her rosebud. When Betty hissed as I ran my finger over her rosebud I gave up all pretense and just began playing with her. Circling and pushing, never actually penetrating her ass.\n\nHank is doing it, he's going to take my ass, I don't know if I can take him in. I haven't even tried one of my bigger vibrators there yet... but damn his finger feels good. \n\nAs I concentrated on actually pushing like I was going to put my finger in her Betty moaned, \"please...\"\n\nNow, I had been with two women who did anal, and one of them had to be pretty plastered to even admit to herself that she liked it, and the other did but with a lot of pussy fucking first. So, Betty, enjoying getting her ass played with right out of the gate, was surprising but VERY welcome.\n\nI put just the tip of my finger in and pulled to open her a bit getting an encouraging moan. I moved my finger round and round, and in and out, working the tip of my finger in her ass, since I didn't have anything to lubricate it with. I was working her ass more and more, pressing and wiggling and twisting my finger until I had it in to just past the first knuckle.\n\nOH FUCK! It's only the tip of his finger, but if he keeps it up I'm going to...\n\nBetty was whimpering and moving her ass against my finger trying to press it deeper, so I began finger fucking her ass. Not really fucking like in and out, merely pulling her rosebud in and out what I could without hurting her since she was dry. But it was enough, there was a groan and her hand shot down between us. I felt her wrist moving and then she clenched and hissed between her teeth... then went limp against me.\n\nI could feel her dribbling on my belly as she pulled her hand from between us. I took my other hand and pulled the one she just had in her pussy to my mouth. Then I was ornery, just as I began to suck her juices from her own fingers I pulled my finger from her ass. Betty made the most interesting squeak... but those eyes said something else. Like if I wasn't so exhausted I'd roll up there and smack you for that. I just smiled and kissed her nose. She grunted and dropped her head to my chest.\n\nFuck I'm cummiiiiing. Just from his finger in my ass. Wanting him to take me and he just plays. And now I'm playing with myself lying on him. I can't believe I'm doing it but I can't help it, having to play with myself like Hanks not enough for me. I can just wipe my fingers on the comforter. WHAT? Hank is licking my juices from my fingers, he's... SON OF A BITCH! I forgot his finger was still in my ass. Turn me over Hank, take my ass, take any part of me you want.\n\nWe finally managed to roll out of bed, with Betty giving me a bit of a look every once in a while. A bit subdued from yesterday. We talked during breakfast, but I just couldn't put my finger on what was different. And the drive to the casino was more of the same.\n\nWhy hasn't Hank taken me? Why hasn't he taken my ass? If he really wants me why hasn't he taken me? \n\nBetty did seem to come alive once we got to the casino, helping out the new hosts a bit, then coming back to me for a bit more training, even taking care of a few simple problems on her own.\n\nMy expected after church rush never appeared. We were headed for the lunch room before heading out when we got a call to come up to the main office. Betty looked at me, but I had no idea, the main office would be vacant on a Sunday. We came into the office to find Samuel, \"Follow me.\"\n\nWe came around the corner to the executive reception area, and there stood two more suits, one of them from the other day. The one from the other day stepped forward and extended his hand, \"Hank, Betty, glad you could join us before you skipped town,\" he said with a grin.\n\n\"Not a problem, what's up?\"\n\nMr. Unknown spoke up, \"We wanted to talk to you about the quarter slots you repaired yesterday.\"\n\nI sighed, \"Let me guess, we missed a few.\"\n\nSamuel piped up, \"No, no, they're all working fine, in fact that's what we wanted to talk to you about.\"\n\n\"So?\" I asked as I felt Betty against my arm.\n\nHank doesn't even see it. What a wonderful job he did yesterday. Getting things organized and dealing with Mr. Vegas not showing up.\n\nMr. Suit chuckled, \"Nothing like that, in fact you did such a wonderful job we wanted to give you these.\" He turned to get a pair of gold framed certificates from the desk behind him. The ones like they use to give out those little awards at the employee meetings for attendance and such.\n\nHe handed them to us, \"I'd like to have put them in better frames but it was the best we could do on short notice.\" Mr. Unknown added.\n\nI was expecting one of those cheesy awards, but what it was, was a nicely written letter of commendation on the fancy casino letter head on finding and resolving a crisis during the grand opening. That made him a department manager or better.\n\n\"And a copy of these will be in your personnel file as well,\" he added.\n\nI looked over at Betty, and she grinned back and did a shoulder bump.\n\n\"And if you two ever want to transfer down here just ask.\"\n\n\"I do like working in a nice new casino, but I'm not sure you could convince your boss to bring another couple of bodies in right now. Probably a lot of techs a whole lot further up the food chain than me for any available opening to boot.\"\n\nSamuel got bug eyed and the other two chuckled.\n\n\"Sorry, I have a bad habit of speaking my mind. That's what keeps me on the night shift away from the politically correct crowd.\"\n\nSamuel was going to say something but Mr. Unknown put his hand up, then extended it to me again. \"I guess we've not been introduced Hank, I'm Donald Rickles, no relation to the comedian. I'm the general manager here.\"\n\nI shook his hand and tried to think of something to say but I was at a total loss.\n\nMr. Suit put his out next, \"And I'm Claude Harrison, Regional director.\" OH FUCK HAVE I DONE IT NOW! I'd had the regional director getting my lunch and getting dirty on the casino floor working on machines. I'm going to be in the shit house for years for this.\n\nI just kind of hung my head, \"Samuel, you know where I can find a crow bar to get my foot out of my mouth... again.\"\n\nAll three of them chuckled, \"No crow bar needed Hank,\" Donald said and gave my shoulder a slap. \"In fact, we want you two to have a nice dinner on us. Stop by Jackpot and order what you want, the host will have your names on the list.\"\n\nDamn, the Jackpot was the high dollar steak house, cheapest dinner there was fifty bucks or better. \"I um, don't know what to say.\"\n\n\"Nothing to say. And thanks again for getting the slots up and running so quickly.\"\n\n\"Just doing our jobs.\" They escorted us back to the casino, saying thanks again.\n\nBetty was looking at her commendation so I had to steer her back to the lobby. \"So you want to grab something now, or go get cleaned up and come back for a nice evening?\"\n\nBetty froze and looked up at me with a look I hadn't seen from her before. \"Um, I only brought the two dresses. I hadn't planned on going out a lot.\"\n\nTo the Jackpot! ME!! I don't have anything near nice enough to be seen out with Hank. Just those two cheap dresses... Hank wants to...\n\nI put a hand on her side, just high enough to let my thumb stroke the side of her braless tit. \"I did like how that lovely red one looked on you, and off of you as well.\"\n\nBetty blushed a little. \"I think I packed my strapless bra, so I could...\"\n\nI scowled at her.\n\n\"Or I could leave it back in the room.\"\n\nI grinned at her.\n\n\"And I suppose I should leave my thong behind as well.\"\n\nThe lady walking behind her gasped and glared. I just took Betty's empty hand and kissed her palm.\n\nI'm going to dribble down my thighs if he keeps kissing me like that. And I know I shouldn't ask, but I wonder if...\n\n\"Does that mean you'll be leaving your shorts behind as well?\"\n\nI pulled her hand closer and kissed her wrist, \"I guess I could be convinced.\"\n\n\"Let's head back to the hotel.\"\n\n\"Want to get lunch or head out to the pool for a while.\"\n\nBetty grinned up at me, \"I think I have a few more bikinis in my bag.\"\n\n\"Damn, and here I was hoping you'd have to wear your birthday suit.\"\n\nBetty gasped and swatted my shoulder giggling.\n\nWhy is it all I can think about is sex when he touches me? And Hank wants to show me off, not make me cover up, I did bring my white bikini, it doesn't cover as well as the one piece, but since Hank wants to show me off I hope it will be okay. \n\nWe made our way back to the room. I pulled my trunks on and grabbed my robe as Betty came back in in hers. We made our way to the pool, dropping our towels. I slipped my robe off and turned to Betty... I looked up and down her body at what she was wearing.\n\n\"What?\"\n\n\"Nothing.\"\n\n\"Whaaat?\"\n\nSHIT! Hank doesn't like it, I screwed up wearing something too skimpy now that we're together... \n\nI grinned, \"Nothing. I guess I was just expecting something like what you had on yesterday. That's all.\"\n\nBetty's mouth dropped.\n\nHE... he WANTS to see me like that. He wants me to be out here like that, on display? I've lost him... he's going to go back without me.\n\n\"What you have on is fine, really.\"\n\n\"You... you were expecting me to wear one like I had on yesterday?\"\n\nI had to smile, \"Hoping anyway.\"\n\n\"So I don't have to cover up?\"\n\n\"Huh? Cover up?\n\n\"I thought that since we were seeing each other... I mean when Zack... it's just that he said...\" Betty was tearing up.\n\nOh, HIM! I stepped to Betty and took her jaw in my hand. \"Betty, you don't have to do anything you don't want to do. But my vote is still for your birthday suit,\" and kissed her lightly.\n\nBetty pulled back a bit to look me I the eye, \"But even out here, where all the other guys can see me?\"\n\nI chuckled, \"Betty, there was a saying I read a long time ago. It's one I have tried to live by in one form or another. 'Set your love free. If it comes back to you it is yours, if it doesn't, it never was.' You are free to do as you please, not that I won't try and get you naked so I can ravage you as much as possible.\"\n\n\"You really wouldn't mind if I put one like yesterdays on?\"\n\n\"Well, it doesn't have to be like yesterdays,\" Betty's smile faded. \"I mean it doesn't have to so big.\"\n\nREALLY!! I can show my figure and he won't kick me out! I can lie out here practically naked and Hank will still want me. Well, if he's going to let me, there is the other bikini I got at the lingerie party, if you could call it that. It's white, and the label says it gets transparent when wet, not translucent. I sweat at all and I will be naked. If I'm going to do it I'm going to do it here where I don't know anyone...\n\nBetty's eyes flashed to match her grin, she pulled me close for a good kiss then pushed back. \"I'll be right back!\"\n\nYou know, even with that monstrous bikini, covering at least four or five inches of her ass, it still was a delight to behold as she scurried away.\n\nI was taking in some of the other ladies around the pool, a number of them in 'large' bikinis, a few in some that were almost as small as Betty's yesterday, and one or two of those didn't have much of a lining.\n\nFUCK I CAN'T BELIEVE I'M DOING THIS IN FRONT OF ALL THESE PEOPLE.",
        "\"HEY HANK!\" I heard Betty yell. I turned to look across the pool from me to see her in a white version of yesterday's suit, and maybe even a bit thinner from the shadow of the bottom half of her landing strip showing through the bottoms.\n\nBetty raised her arms over her head and dove in the pool, I watched the ripple from her ass and kicks until she surfaced in front of me grinning. But when she pushed up out of the pool I thought at first she had lost her bikini. As Betty walked to me and reached for her towel I saw just the hint of the triangles. \"DAMN!\"\n\nHe's going to flip out, he's going to flip out, he's going to flip out, he's going to...\n\nBetty patted down enough to draw some of the moisture from her body, and the triangles began to appear a bit, now just translucent instead of transparent. Betty reached up to dry her hair putting herself on display for a bit until she dropped to the lounger beside me. \"This one thin enough for you?\"\n\nPlease please please like the suit...\n\nI looked down her body, her pink nipples plainly visible through the top. Her bottom just as transparent, landing strip visible above the top of her shaved lips disappearing between her legs. \n\nOh god he's getting hard looking at me, he REALLY likes it. \n\nBetty toweled her chest a bit making her nipples a little less apparent, but not much. She was still very interesting to the other guys around the pool, and even one or two of the ladies.\n\nFUCK YESSSSS!! Hank is watching me, he about popped out of his suit when I got my boobs out to oil up. I mean after all, this suit isn't actually hiding anything. Would Hank let me walk naked around all these strangers... would he? All those eyes on my naked body...\n\nBetty enjoyed oiling down for me, grinning and watching me as she did her chest, the oil replacing the water making them nicely translucent again. \"You going to do my back again?\"\n\n\"Definitely...\" I took her oil as she turned over, getting settled with her ass in the air, her rosebud plainly visible with that little string splitting it, before she settled back to the lounger. \"Make sure everything is well oiled,\" wiggling her ass as she said it.\n\nI settled in and began at her ankles again, but as I worked higher Betty did her best to keep her legs spread a bit, and when I put some on her ass, she arched her ass up, \"Don't forget the important part.\"\n\nI oiled her ass and dipped my thumb toward her rosebud. Her tight ass clenched on my thumb as I slid it in just to the knuckle. \"It is yours if you want it...\" Betty whispered clenching on my thumb again then relaxing and pushing her ass back to take more of my thumb in, a nice little sigh as the first knuckle was swallowed up by her ass.\n\nI kept oiling her ass and lower back as I worked her rosebud with my thumb a bit before removing it and continuing up her back. I leaned over pressing my weight into her shoulders. \"I'll only take your ass when it won't hurt you.\" I kissed her neck and rolled to my lounger.\n\nI can't believe it. I practically forced my ass on Hank. He wants it, I know all guys want ass. But he said he wouldn't until I was ready... I could almost cry... I'm not going to cry... I'm not going to cry... \n\nBetty was still face down in her lounger, but reached her hand out. I took it and lay back to enjoy the view. The practically naked oiled woman beside me and a few of the more normally clothed ladies nearby. Betty was quite popular with the guys even with her holding my hand. I can't blame them, Betty was a lovely woman, and when she turned over on her back I couldn't help but look at her and kiss her outstretched hand. The big amazon woman bouncing her chest past us seemed to be a bit disappointed that Betty was with me. I did enjoy the sight of her pierced nipples standing out in her thin bikini top though.\n\nHow can Hank not be freaking out? All these guys strolling by ogling me, and even a few women. Why would women be checking me out, I mean I'm not that hot, just a skinny flat chested girl. \n\nBetty rolled to an elbow facing me to get a drink. \"Hank?\"\n\nI looked over, scanning down her delicious body and back up to her smiling face, \"Hm?\"\n\n\"You... you really don't mind them looking at me?\"\n\n\"I'm looking at you...\" and looked down at her pussy still showing through her bottoms a bit.\n\nBetty lifted her knee to let me see more of her, the little bit of oiled suit riding up nicely between her lips. \"But so can they,\" nodding toward the guy that just about walked into the pool when she lifted that leg.\n\nI made my way up to her lovely nipples, \"True, but first, the last I checked you weren't showing them, they just happen to be in the in the best place in the universe to catch a little glimpse of your delicious body.\"\n\nI saw her nipples harden a bit before I shifted to her face, \"And second, I hope that you'll be coming home with me and not them, so it doesn't matter.\"\n\nBetty smiled and rolled over on top of me, \"We need to go back to the room.\" Betty planted her mouth on mine while she ground her pussy in little circles on my cock.\n\nI reached back and squeezed her ass, spreading her cheeks and letting anyone behind her see her rosebud. \"I guess I better take you up there before one of these young studs jumps me and hauls you away to ravage your body.\"\n\n\"You better take me away before I ravage you right here.\"\n\nHank is grinning as the guy walks behind me and into the pool. He must be pretty hard up. WAIT! Hank said home... but he was just saying it, he didn't really mean HOME, just back to the room... didn't he? Oh fuck, he's spreading my ass, anyone walking behind me is going to see my spread ass... wouldn't they love to know I'm thinking about having Hank in there as soon as I can? \n\nBetty rolled off me, mooning the guys across the pool. We picked up and headed back, and Betty blew them a kiss as we did... man they better find a good woman tonight.\n\nWe walked back up to the room, Betty not covering up at all, the guys enjoying her nipples hardening up in the air conditioning, and several of the older ladies not appreciating their man's attention to her.\n\nI can't believe I'm doing this! I'm almost naked walking down the hall next to Hank and he doesn't mind, he even LIKES it. I'm going to jump his bones when we get in the room...\n\nBetty stripped her bikini off just inside the door, leapt at me, and wrapped her legs around me as I stood from dropping mine. I reached down to grip her ass, getting the best grip on it considering she was still well oiled. That feat was made more difficult by Betty humping her oiled pussy against my hard cock trapped between us, as she tried to kiss me into submission.\n\nFuck me Hank, take me and fill me...\n\nAs she was enjoying riding my cock with her clit I lifted her a bit more, then settled her on me, taking her weight on my cock to sink as deep as possible.\n\nYESSSSSSSS...\n\nBetty screeched into our kiss and I took the few steps to the bed and fell on top of her. I put my hands up under her shoulders to try and get a grip and just began driving into Betty. The last hour or so seeing her practically naked beside me had taken its toll. I drove into Betty, thrust after thrust, hearing her grunt as I drove deep.\n\nBetty kicked her head back screaming as her ankles began flailing my ass, \"FUCK ME... FUCK MY PUSS... FILL ME HANK... FILL MEEEEEEE...\" I felt her convulsing around me and lost it. I drove like a mad man to unload everything I had into her...\n\nWe lay there catching our breath, I managed to get my elbows under me to take some weight off of Betty. \"You were right...\" I whispered in her ear.\n\n\"About what?\"\n\n\"We wouldn't have made it to the pool...\"\n\nThere is no better feeling than a puss filled to overflowing with her man's cum...\n\nBetty giggled and pushed me over, following to lay on top of me. \"Mmmm, and this way we only need one shower instead of two.\" I just groaned, and then groaned again as Betty rolled from me, pulling her wonderful pussy from around my softening cock.\n\nI heard the water start, and I just lay there a bit, finally dragging myself off the bed to head for the shower, smiling at the bedspread. A big oil patch with a big wet spot below it, and another lighter oil patch and a dribble to the edge of the bed.\n\nHow can this week get any better? And fucking Hank like that all oiled up was amazing, feeling my nips in Hanks chest hair as he fucked me. And I feel well and truly FUCKED! And I have the evidence running out of my puss to prove it... GRIN! Now if he would only take my ass... \n\nI came into the bathroom seeing Betty rinsing down. She ran her finger across my oiled chest and grinned shaking her finger at me. \"We might have to try that again sometime. I kinda liked slipping and sliding with you...\"\n\nI ran my finger between her lips, already wet. \"And I like slipping and sliding too,\" licking her juices from my fingers as I stepped in.\n\nI managed to stay standing, my strength slowly coming back as I showered. I dried and came out to see Betty, \"Son of a bitch...\"\n\n\"What?\" Betty said turning to me as she put the last strand of hair up in her bun, a few little tendrils hanging at her temples. The barest hint of makeup around her smiling eyes. Her tits standing up nicely with her arms up, her flat belly and a bit of hip bone above her landing strip, her legs encased in lace top stockings.\n\nI looked down her body, stopping momentarily at the wide lace tops just below her pussy. Betty turned enough to show me the seams running up the back of her stockings, \"Like em?\"\n\n\"What's not to like. I'd take you to the restaurant like that but I'd be beating every man there off with a big stick.\"\n\nHank really means it. He really means he likes showing me off...\n\nBetty looked at me for a few seconds absorbing what I said, \"You would wouldn't you? You'd take me there like this and let them look at me in all my naked glory.\"\n\nI stepped to her, my now hard cock slipping in her keyhole against her wet lips, \"Beauty like yours shouldn't be covered any more than absolutely necessary.\" I wrapped my arms around her and pulled her for a soft kiss.\n\n\"Keep that up,\" Betty kissed me again, \"And I'll have to put on panties and a pad to keep from leaving a trail.\"\n\n\"So that would eliminate the possibility of bending you over and fucking your wonderful pussy before we leave.\"\n\n\"Before yes, but after...\" wrapping her arms around my neck and plastering herself to me.\n\n\"Mmmmmmm, that does bring a delicious thought to mind. Do we come back here and slip your dress off two steps inside the door and bend you over for a good filling, or do I just flip your dress up and fuck that delicious pussy, then let it drop and walk you around with our cum running down your legs?\"\n\nOh god, walking around with Hanks cum running down my legs. Would he bend me over and do it again... and again... and again...\n\nBetty hissed, \"If you don't get dressed I'm going to suck you down until you blast all over my boobs...\"\n\n\"Mmmmm, an equally delicious vision in itself. But we have free dinner reservations at a very expensive restaurant.\"\n\n\"And we still have blueberry for later.\"\n\n\"That we do.\"\n\nMy deepest fantasy come true, showing off my body, feeling the sun shine on my skin. Well almost, in my fantasy I have big boobs and the guys are drooling all over me. If Hank is going to let me, then I am. He's going to see and taste me as much as I can. Whenever I can tonight he'll see my puss and boobs, taste my puss after displaying it for him, maybe I'll even lean over and blow him somewhere if I can. I mean I can't take him down my throat, but he doesn't seem to mind I can't do it...yet. \n\nI managed to get dressed with Betty standing there, tracing her nipples with her fingernails. As I slipped my shoes on, Betty simply lifted her dress and let it slip down over her wonderful body, the sight of her nipples tenting the fabric as it slid down her breasts, her flat belly, her hips, making me want to go to her and rip it right back off! And she wasn't done teasing me. As she climbed in the car she pulled her dress up around her waist putting herself on display. And getting a pussy dessert sample from her fingers on the way over made me want to turn the car around and drag her back up to the room.\n\nDinner was almost as bad. We were seated towards the rear in a corner booth. We started almost across from each other, but during our appetizer we scooted closer allowing me to caress her now bare thigh, her dress being pulled up around her waist again as she scooted over next to me. Betty decided the appropriate response was dragging her fingernails across my hard cock through my slacks.\n\nAnd of course Betty leaning over to enjoy her lobster gave me a nice look down her dress as well. I slowly ate my filet, enjoying the lovely woman beside me, reveling at the joy of bringing her out of her shell. That asshole Zack should be strung up for what he did to Betty, pushing his inadequacies off on her.\n\nWe talked very little during dinner, and it was mostly neutral things, but the looks she was giving me made me want to lay her on the table and devour her. She took an evil delight in eating her cr\u00e8me brul\u00e8\u00e8 and I teased back by thoroughly enjoying my blueberry pie, licking the fork until every speck of blueberry was gone before taking another bite.\n\nBut Betty got the final tease. She started with the expected clinging to my arm, pressing her silk covered tit against it, but the drive back to the hotel was bad. Betty not only pulled the dress up around her waist, but since it was dark she let the straps fall from her shoulders letting it bare her chest as well. To this day I have no idea how I managed to keep the car on the road with that vision beside me.\n\nHank did it, he let me display myself to him, he looked down my dress at dinner and played with my thigh. I almost wished he'd put his fingers in my puss, but I'm not sure how things would have went if I had screamed in orgasm in the middle of a crowded restaurant? And driving home with my dress around my middle almost made me cum in the seat. Could I do that during the day? \n\nAnd yet through all that we mellowed from earlier today, walking back to the room hand in hand. I turned to put the key card on the counter and Betty was there when I turned back, hands under my jacket to push it off. She wrapped her arms around my neck as it fell letting me wrap mine around her to pull her close.\n\n\"This has been the most amazing evening...\" Betty whispered.\n\n\"Mmmmmm, one of the best I can remember. A nice dinner out with a beautiful lady.\" I leaned over to kiss her neck, then her ear lobe.\n\n\"An almost naked woman,\" I grinned acknowledging that. \"And now it is just us, whatever shall we do with the evening?\" Betty said as she began unbuttoning my shirt. I was at least smart enough to unbutton my cuffs before she had my arms trapped. I kicked my shoes off while I was at it, making Betty chuckle a bit.\n\nI began to reach for Betty's dress straps, but she dropped to start on my pants. Who am I to argue with a beautiful woman? Of course Betty couldn't just drop my slacks, she had to rub on my hard cock through my pants, first with her hands, and then rubbing with her cheeks like a cat as she undid the snap and zipper.\n\nHank has me turned inside out. All I want to do is please him, and yet he wants me to please myself. I want him in me as much as I can. I know things will change when we get back, but Hank seems to want me and I will be there... \n\nAs soon as I popped out of my pants she took me between her lips as she lowered them down my legs. Letting them fall as she put her hands on my ass to pull me in, a soft slow sensuous blow job. I put my hands on her head just to be able to keep standing, feeling her moan around my cock.\n\nI want him, I'm going to take him in my throat soon, he'll never want for anyone better...\n\nLooking down, I saw one of the most loving things I had ever imagined. Betty was enjoying herself in no particular hurry. Taking me in as deep as she could, slightly into her throat and holding me there for a few seconds, then backing off to lick and play with the head of my cock. Rolling my balls in her hand while the other did a number on my cock. Tipping my cock up and running her tongue up the bottom of it working a little bit of pre-cum out for her to lick like a prize looking me in the eye.\n\nAs much as I was enjoying her ministrations, I wanted to taste the aroma I was smelling. I reached down and lifted Betty's hands to get her to stand, then backed her two steps to the bed. I kissed her softly as I slipped the straps from her shoulders, following it down to cup her little mounds making her groan back into our kiss. I released Betty and helped her lie back on the bed, I was going to crawl in beside her, but had to stop and look at her in her stockings.\n\n\"What?\"\n\n\"Damn you're gorgeous...\"\n\n\"I'm not...\"\n\nI just smiled at her, \"I'll be right back.\" I turned back to her room and flipped the light on, then came back to shut off the ones here leaving the shaft coming through the door to light the room. I didn't have any candles, but this would do.\n\nBetty lay back like an angel, a beautiful sexy angel.\n\nTake me Hank, make me yours, show me what you want from me. \n\nI walked to the bed and knelt over her, kissing her soft lips. Betty wrapped her arms around my neck and tried to pull me down, but I held firm. I kissed her lips, I kissed her nose, I kissed her forehead, I kissed her chin making her giggle.\n\nAs much as I wanted to ravage Betty when we came back, I wanted to take it slow and pleasure her.\n\nBetty relented and lay back as I began kissing down her neck and across her shoulders. Down the bulge of her small tits sitting so perfectly on her chest, the shadow of her other nipple on her tit making the most erotic look. I kissed down her tit and didn't find the soft pillowy nipple I was expecting. Instead I found a delicious chewy nipple standing up begging for attention. This was going to take a while.\n\nI shifted down and lay beside Betty, freeing up a hand. While I enjoyed her tit and nipple, kissing and sucking and nipping, I was exploring her body with my free hand. Reaching over to play and cup her other tit, feeling her nipple harden in my palm. Hearing Betty suck air when I got her nipple between my fingers and first rolled, then tugged on it while trying to match those movements with my mouth.\n\nFeeling Betty begin to quiver just before I let my hand drop to her belly, slowly letting it slide toward her pussy. The lovely sound she made as I ran my fingers in and around her landing strip above her pussy. Just barely catching the edge of her slit but not putting my finger in.\n\nI can't hold off, and I can't stop him. He's going to do it again, he's going to make me cum before him... he should be cumming first, that's the way it's supposed to beeeee, so...close...soooo close...\n\nBetty was arching her mound up to me so I changed tactics. I did slip my finger in enough to lightly touch her clit making her squeak before I pulled it out and began tracing her shaved mound on either side of her strip. I kept running my hand up and down, making little trips along her thighs as she opened them to give me access to her treasures.\n\nYES! Hank is going to take me...\n\nBetty was squirming under me, and I wanted to take her over the edge. I slid a finger between her lips and up to where her hard clit standing out begging for attention. I began pressuring her clit lightly, then firmly. Around and around her clit varying the pressure. Switching to two fingers up and down on either side of her clit then strumming it from side to side.",
        "Betty clamped her hand over mine and arched, on the edge. I looked her in the eyes, \"Cum.\" I said softly as I lowered my head to her nipple and took it between my teeth. A moment later she was spasming under me. I kept her going, working her clit back and forth, up and down. Betty was alternating between arching up and trying to curl up in a ball.\n\nFUUUUUCCCCCKKKKKKKKKK He can't be enjoying this. It's just me cumming, why is he doing this? OH FUUUUUCCCKKK I'm cumming again... and agaiiiiiiinnnnnnnnnn.\n\nI could feel Betty's pussy flow, her juices pushing up between her lips when she clamped and arched. I kept Betty cumming for a bit then let her down. I would have loved to keep her going, but I couldn't do that to her. That and I wanted to taste her aromatic pussy...\n\nI can't stop... my puss and ass... he touches my nips or my puss and I just can't stop...\n\nBetty was quivering under my hand. I could feel her fluttering under my hand on her mound. I let her calm down a bit before I moved down her body, kissing from her wet nipple to her mound. Betty brought her hand to the back of my head as I kissed her mound beside her strip.\n\nI touched the inside of her thigh as I scooted over her, Betty shifting and moving to let me access her, lifting her other leg as I lay down. I had to lie there a few seconds to admire the vision in front of me. Betty's shaved pussy glistening in the low light from the door, her dark engorged lips a contrast to her pink skin and wet pink core.\n\nFill me Hank, drive that wonderful dick in me and fill me. See how much I want you in me. \n\nAnd that wet pussy was dribbling down her ass, her delicious nectar was being wasted. I leaned in and licked her from ass to clit.\n\nBetty let out a nice screech as she sat up, grabbed my head and planted me right back in her pussy. Oh this is such torture being forced to eat an orgasming juicy pussy. Feeling her ass clench against my chin as my nose bumped her clit, bringing my hand up between her thighs to hold her pussy open to feast on.\n\nOH SHIIIITTTTT!! Not againnnnnnn. I don't have anything left... he's just lying there grinning with his tongue in my puss. Hank's face covered with my juices. FUCK ME HANK, FILL MY CUNT AND KISS ME!\n\nI lapped and suckled and played with her delicious pussy. I know Betty had been with an asshole, and I was going to treat her right, she was going to know nothing but pleasure if I had anything to do with it. But as delicious as Betty was, I was getting enough of a crick in my neck. I had to move.\n\nBetty groaned when I pulled away from her pussy, her hands dropping to her sides. The look on her face when I lifted my head was amazing, the little grin on her satisfied face with her eyes closed.\n\nI got to my hands and knees, wiping most of Betty's pussy juice from my face with my hand before working up and over her body. I stopped over her, my thighs barely touching her thighs.\n\nBetty opened her eyes and looked up at me with a grin, \"Fuck me...\"\n\nI smiled down at her and shook my head, Betty's expression changed, I leaned close, just above her face, \"I'd rather love you.\"\n\nBetty smiled and lifted her legs high and wide. I looked down between us, and lowered into her in one soft stroke, coming together like we were made for each other.\n\nWait, what did Hank say? OH FUCK YESSSSSSSS.\n\nI let myself down to my elbows and dropped my head to kiss Betty. I began slowly sliding in and out of her as I did, sliding my hands under her shoulders as I moved in her. Enjoying a sensuous woman, the delicious lips and delicate pussy. Feeling the emotion Betty was putting into her kisses as she put her legs around my waist encouraging me into her.\n\nGod, every little ripple of that wondrous dick. Filling my puss and then leaving me empty again. If Hank speeds up at all I'm going to lose it. He's turning me into a... a horny CUNT. I'm Hank's horny CUNT! Kissing me with his face still coated with my puss juice and I want him to kiss me again and again. \n\nUnlike the other day, this was a slow leisurely fuck, enjoying her surrounding me as I sank into her, and enjoying the cool breeze on my cock wetted by her juices as I pulled out. Working just the head of my cock in and out between her lips a few times taking sheer delight in the sensation of those delicate lips around me.\n\nNooooo, don't tease me like that Hank, I need you to...\n\nI went back in, fully burying myself in her, hearing a nice groan as I did. I kept going for a bit, shifting down to hit her g-spot when I drove in, then shifting up high to slide across her clit. Betty was breathing almost as hard as I was. She pulled my head beside hers, \"Fill me...\" she whispered.\n\nI pulled up and dropped in making her grunt. \"Yessss,\" she hissed so I did it again. This time she just grunted and grinned, \"Do it.\"\n\nI pulled up again and began pounding into her, bouncing down into the bed when I slammed into her, the grunts turning into groans. I was dropping into Betty hard enough that her juices running down her ass were making it sound more like slapping her ass.\n\nBetty was squeaking and grunting as I drove into her, her heels in my back trying to push me deeper into her. I was getting close and trying to hold off for Betty again, but she had other plans.\n\nFUCK YES! FUCK YESSSSS!\n\nBetty began clamping down on me and I looked at her grinning back up at me. \"Cum, fill me and make me cum.\" She kept clamping and that was all I could do, I dropped one last time into her and fell on top of her, jackhammering my cock into her pussy.\n\nI shot load after load into her, hearing Betty scream in my ear \"YESSSSSSSS...\" as I did. Feeling her spasm under me matching her clenching with my shooting into her. Hearing her pussy as I drove in, pushing our mixed come from her overflowing. Driving into Betty even as my cock was softening, not wanting to ever leave her full pussy.\n\nHank is MINE! I want him in me... forever.\n\nI was exhausted, I tried to roll off Betty, but she didn't drop her leg to let me, she put her arms around my neck to hold me in place even as my soft cock was slipping from her. I just lay there a bit until Betty let me roll off of her.\n\nI lay there just catching my breath like I had run a marathon. I felt Betty get up and roll out of bed. I managed to turn my head to watch her walk away, her pussy literally dribbling like she was peeing, not even running down her leg. I dropped my head back grinning at that. I did my job.\n\nGOD I AM SUCH A SLUT. I'm walking slowly to let Hank see me like this, his cum running out of my puss. As much as I want to keep it in me I can't, he's filled me to overflowing. I can only grin thinking about what this much cum would feel like in my ass.\n\nBetty got me sitting up and gave me a drink of cold water. She also felt it necessary to clean me up. Betty spread my legs and I felt a warm washcloth give me a quick wipe before moving me to the other bed. I was expecting more of the washcloth, but it was replaced by a warm mouth, sucking me into her mouth to my balls, feeling her stick her tongue out to lick my balls with her mouth full of my soft cock.\n\nHank feels so good in my hand, so soft. I wasn't going to lick him clean with my puss juice all over him... well, not much. And he's soft enough... \"Mmmmmmm.\" Oh yes, I can take him all the way in. His hair in my nose still smelling of my puss. I can feel his balls against my chin, reach out and lick them while he fills my mouth. Am I that bad that I enjoy the taste of us mixed together? Do I care as long as he's in me? \"Mmmmmmmm,\" fuck no!\n\nBetty enjoyed herself a bit and in all honesty, even soft, her ministrations were profound. The feeling of desire as she did it was beyond description. I did manage to stay awake, but not for long. Just long enough for Betty to crawl up, kiss me, and curl up under my arm. I didn't have the strength to even roll on my side and spoon with her.\n\nAnd now for my disclaimers which were inspired by JimBob44, thanks for the inspiration.\n\nYes, I never met a comma or ellipse I didn't like.\n\nYes, it jumps around too much.\n\nYes, it's in the wrong category.\n\nYes, it's too long.\n\nYes, it's too short.\n\nYes, this is stupid shit.\n\nIf you want a perfect story go find one written by Mr. Data.\n\nAnd, yes, I suck.\n\nGo have yourself a warm and fuzzy day.\n\nBTW, you only get to comment on spelling and grammar if you are volunteering to be an editor. Those comments and rants will be deleted, you've been warned.\n\nAND DON'T FORGET TO VOTE!"
    ],
    "authorname": "acup",
    "tags": [
        "small tits",
        "oral",
        "flashing"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/my-feather-girl-ch-01b"
}