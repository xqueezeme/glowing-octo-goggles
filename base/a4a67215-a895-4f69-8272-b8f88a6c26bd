{
    "title": "Page Ch. 06",
    "pages": [
        "Notes [Initially released June 23, 2016, last revised October 23, 2016]:<ul><li>- All characters are the product of the authors' imaginations and are over eighteen.</li><li>- This is a relatively short story/vignette, and we recommend reading the previous chapters, which may have been tweaked.</li><li>- Thanks to Skye4Life for proofreading this.</li></ul><hr>Blurry blackness and shadow surround me in this cold dreary place as I slowly become alert. A sense of despair and loneliness invades my waking mind between thunderous throbs of pain. Page? My left hand seems bound and immovable as I attempt to touch the source of my agony.\n\n\"Where am I?\" I moan. \"Page?\"\n\nNo one answers and a damp gust of wind sends shivers through my entire body. \"Who's there? What do you want?\"\n\nThere is still no reply. My eyes adjust slightly as the light introduces an excruciating jolt of pain into my head. The palm of my right hand is pressed against a cold roughly pebbled surface and I realize I'm lying on the parking lot pavement. My left arm and hand are trapped beneath someone who's not moving; their weight effectively pinning me so that circulation is cut off causing my entire limb to be numb. Twisting and turning relieves some pressure and the tingling sensation of pins and needles begin as freshly oxygenated blood pumps feeling back into my fingers. Pushing against the heavy individual with my back, I work painfully to extricate myself from the situation.\n\nOnce free, I find my arm is limp and has no feeling of the sticky dark fluid I observe dripping from it. Sitting up slowly, I find I'm where I'd stopped running from one of our attackers beneath a light-pole. My Glock falls to the ground beneath where I'd been laying. The sound of it hitting the pavement seems distant but seeing it recalls a faint memory of pulling the trigger as I'd tilted it slightly upward while it was still in my jacket's special left side gun pocket. In my stupor, I begin pondering whether I'd broken one or two of the cardinal concealed carry rules by firing it backward even though I'd been at point blank range. My attention is quickly distracted by the pain in my side which causes me to wince as the skin along my rib-cage feels like it's on fire and the cold fingers of my right hand move instinctively to touch it gingerly. Firing it with the muzzle so close to my ribs might have been dumb, but it may also have saved my life.\n\nSlowly my senses return to me and I rotate to find the huge body of my attacker. The man is dark haired, much heavier and taller than myself. His Goliath sized right hand holds a gun with what appears to be a silencer attached to the barrel. From his grip, I can't tell if he hit me with the butt, the heavy looking silencer or if perhaps a bullet had glanced off my skull. Inspecting him closer, it's clear he isn't breathing and I realize that we're both lying in his blood. His white dress shirt has a dark spot right about where I think his heart should be.\n\nA sickening feeling comes over me and in a panic, I search for my phone in my inside breast jacket pocket. Pulling it out I dial 9-1-1 to report the shooting, but before the call completes, I see there are two squad cars entering the parking lot with their lights flashing and I simply hang up. Having no idea how long I was out, I place my phone on the ground beside the gun and stand up awkwardly with my hands in the air as they approach.\n\nThe officer in the first car exits and orders me, \"Turn around, interlace your hands over your head and back toward me slowly.\"\n\nI step awkwardly backward to him and he places me in cuffs with my hands behind my back. The other cruiser stops across from us at a safe distance from the man on the ground. That officer steps from his vehicle with his sidearm drawn to slowly approach the motionless body. He sees the gun in my attacker's hand and kicks it away from his loose fingers and then slowly bends to inspect him.\n\n\"We've got a fatality.\"\n\nTurning slightly to speak to the officer behind me, I say, \"I'm a Congressman, this man attacked and injured me. I may have shot him in the scuffle, but have a carry permit for the Glock.\"\n\n\"You want to make sure the ambulance is on its way?\" he asks the other officer, who verifies that it is. \"These cuffs are just a precaution, Congressman. Do you have your ID and permit on you?\"\n\n\"They're in my right back pocket; you can get them out.\"\n\nHe takes it out and looks at my driver's license with a flashlight. \"Congressman Levik, I thought I recognized you but you're growing a beard. What's happened here?\" he asks setting the wallet on the hood of his car.\n\n\"Look, we've got to get Page back,\" I say. \"We were initially attacked over by my car,\" I continue, nodding my head in its direction. \"Page, somehow knocked that assailant out, but we were being pursued and attacked by multiple parties. Someone's taken Page!\"\n\n\"Taken?\"\n\n\"They took her into a dark van, she was here when this guy started shooting. The other guy might still be over behind my car; she kicked him pretty hard after he jumped us.\"\n\n\"We've got an abduction here,\" he yells over to the other officer, then continues with me. \"Who's missing; can you give us a description?\"\n\n\"Page Levik, she's about five-two, a hundred and ten pounds with auburn hair. We'd just been shopping in the mall.\"\n\n\"And the van?\"\n\n\"It all happened so fast, it was dark, maybe black. I remember the front windows were tinted and the side doors were windowless. I'm pretty sure that guy hit it with several rounds as it sped away. It felt like we were in the middle of a fire fight between two different forces.\"\n\nThe officer behind me spoke into the radio mike attached near his shoulder, \"I need an APB on a black panel van in the vicinity of Franconia and Frontier. We have a Caucasian female abduction victim, five foot two, one hundred ten pounds and auburn hair. Loop the FBI in; it's Congressman Levik's wife.\"\n\nI didn't correct him, I hadn't stated the nature of our relationship. The information package from my concealed carry class had been very explicit about how much to say without a lawyer. I'm feeling like I may have already given them too much and correcting them, at this point, might confuse or delay getting her back. Getting the FBI involved should make recovering her quicker and made some sense, since we're right next to DC and I am still an acting Representative, at least for the next few days.\n\n\"You shot the man over there?\"\n\n\"I'm not entirely sure, but I think I did. He knocked me unconscious from behind for a time. I think he shot or hit me on the head with his gun at the same instant that I fired.\"\n\nThe other officer retrieves the ID from the man on the ground and calls it in along with a request for a homicide unit. The two officers huddle to converse for several minutes. I lean against the warm hood of the squad car as my legs begin to feel weak. A call comes back over the radio, but I can't quite make out what is being said. There are some surprised looks on their faces as they turn back to me.\n\n\"You've killed a Russian national here,\" the second officer says at last.\n\n\"He's not a diplomat, is he?\" I ask, as I imagine an international incident unfolding.\n\n\"Nope, he's been on a couple of different watch lists. Where are you injured?\"\n\n\"My side is burning, my head is pounding and these cuffs aren't helping.\"\n\n\"Here, let's get those off,\" the first officer says returning to me. He removes the cuffs, inspects my head and concludes, \"I think you need to go to the emergency room; that looks like a glancing shot.\"\n\n\"No, that can wait, I need to stay and find out what is being done about Page,\" I say with my desperation increasing. \"I've got to get her back.\"\n\n\"We're involving the FBI, but you need medical attention now. I think I hear the ambulance coming,\" he says returning my wallet. \"We're going to do everything we can to get her back safely.\"\n\nThe ambulance enters the parking lot and I watch it as if in slow motion. The fact that I've taken a life begins sinking in on me. The nature of the person that is dead doesn't help one bit. It's almost exactly what the guy teaching the concealed carry class had said, You'll be glad you're alive, but - My vision seems blurry and I feel dizzy.\n\n\"Congressman - Sir - are you okay? Let's get you inside.\"\n\nNumbly, I feel them holding me under my arms as they aid me into the ambulance. Inside I glaze over from the flurry of activity and I linger on the edge of consciousness as I think, Maybe this is what dying feels like. They remove my coat and shirt to inspect my side and begin cleaning my head. Then they attach all manner and variety of sensors to me to gather vitals. I can't say how long the whole bumping trip lasts as I slip in and out of awareness.\n\nI awake in a medical facility where I discover I've had a CT scan and an MRI. They are telling me the scans don't show any visible brain trauma (bruising or bleeding). I feel my head where I've gotten some stitches while I was out and they give me some pain medications. Right after they go over the things to watch for with a concussion, they clear me to leave with my FBI escort.\n\nI'm mostly silent in the car ride as I'm in a fog and have been since awaking from the abduction. I've never been knocked unconscious or even had to be in a hospital. The agent in the car is my height, but considerably bulkier.\n\nAs we approach my condo I ask him, \"Do you know if there has been any information about Page?\"\n\n\"No, sir. They're still searching for the van.\"\n\n\"Really, no leads?\" I ask disbelievingly. \"That mall has cameras all over the place.\"\n\n\"Yes sir and your version of things was verified almost immediately. The manager of the clothing store is the one that called the police; he saw nearly everything from the door as he was about to close up early for the evening. He provided us access to the stores video and he kept repeating how your wife had just bought a very expensive dress. I guess you two made an impression on him since you'd been his only customers in hours and he hoped you were both okay.\"\n\n\"I thought he recognized me or something. I guess I have someone else to thank tonight.\"\n\n\"In any case, none of the various angles showed a plate number from the van and now it's like the thing has simply disappeared.\"\n\n\"What about the other guy?\"\n\n\"The first attacker that the woman, sorry - your wife, took down, got away on foot.\"\n\n\"He came out of nowhere and then Page -\"\n\n\"She really did a number on him, he didn't get up for several minutes. I'd want her on my side in any fight; it was quite expertly done.\"\n\n\"It sounds like you've actually seen the video and spoken with the manager?\" I asked hoping I might see her again.\n\n\"Yes, sir, I arrived on scene shortly after they looped us in, a congressman's wife being abducted is serious business.\"\n\n\"I miss her already, do you have a copy of the video?\"\n\n\"No sir,\" he says and parks in front of my condo. Turning to me he continues, \"Okay, this is the hard part; you'll likely be getting your gun back shortly, but that won't do much good tonight. Do you have protection inside?\"\n\n\"Yes, I have another gun in the condo.\"\n\n\"Alright, let's do this.\"\n\nI don't really follow what he's getting at but when I get out of the car, he joins me and walks with me up to the door of my place. I unlock the door and he holds out his hand to keep me back while motioning for me to stay here while he checks it out for me. It doesn't feel like ordinary treatment, but I've never been in a situation like this.\n\n\"It looks all clear, Congressman Levik,\" he says as he reappears at the door.\n\n\"Thanks for doing all this,\" I reply as I shuffle inside.\n\nAs he exits the door, he says, \"Look I'll be staying outside tonight.\"\n\n\"You've already been on this a while; are they going to give you some relief?\"\n\n\"I volunteered to stay on this one. My partner will be joining us in the morning, but that might be the end of protection for you since there is no evidence that these people were after you.\"\n\n\"You guys think they just wanted Page?\"\n\n\"We don't know yet; they may want a ransom or to negotiate for something.\"\n\n\"There's a tap on my phone; isn't there?\" I ask.\n\n\"In case there's a ransom call, sir.\"\n\n\"Okay, well thanks for everything. If you need coffee later feel free to knock, I'm probably going to be up all night worrying.\"\n\nWhen I close the door, I feel exhausted. My clothes are a ruin and I decide to get clean in the shower. I strip off everything, put my wallet and keys on my bureau and dump the clothes in the trash. My new watch is mostly clean, but since it's waterproof and I want to wash any remaining blood off of it, I wear it into the shower. I wash tenderly around the bandaged, burned area of my side and wash my hair gingerly avoiding the stitches.\n\nWhen I get out, I dry off and quickly decide I should take the precaution of getting the other gun. After dressing in some sweat pants, a tee-shirt and slippers, I retrieve the case from under the bed, open it, take out the Glock and press one of the clips in until it clicks. In my closet I retrieve the old shoulder holster I'd used before I'd gotten my customized jacket. I fleetingly think that the jacket will probably remain in evidence with my gun for a time. I don't know why these odd thoughts keep popping into my head, the jacket is almost certainly ruined too, with a bullet hole and blood, so I didn't want it back.\n\nSlinging the holster over my right shoulder to avoid contacting the burned area. I pull on the sweat jacket covering it as a chill runs over me from the memory of squeezing the trigger several hours ago. Momentarily hesitation has me contemplating my readiness to use it again and I nearly put it back in the case, but decide I have to be prepared and zip up my jacket. \n\nMy mind wanders back to Page and I know I need to call Mom to tell her what has happened. It's a call I can't imagine I was ever going to make, but I feel responsible for her and it's eating at me. Realizing that the police must have my cellphone, my gun and my jacket, I retrieve our backup phone from my duffel bag. I'm suddenly very glad she'd suggested we get the spare. I will her back safe with me as I punch in the numbers to Mom's cell. She picks up on the first ring.\n\n\"Mom, it's me -\"\n\nShe cuts me off almost instantly, \"I've been expecting your call,\" she says curtly.\n\n\"I need to tell you something important about Page.\"\n\n\"It's already being taken care of, sweetie. Are you okay? Did they hurt you?\"\n\nI can't get my thoughts straight for a moment as her words toss my mind through a loop, \"Taken care of?\"\n\n\"This is quite a monkey wrench you two have thrown into the works. Don't say anymore on the phone and refrain from talking about it in your condo. We can discuss it fully when I get there. Answer me, are you okay?\"\n\n\"I'm worrying to death about Page, but I've got no permanent physical damage.\"\n\n\"Everything will be okay, I assure you. Stop worrying for now. I'm driving there as fast as I can.\"\n\n\"You are?\"\n\n\"I'll be there in just over an hour,\" she says and hangs up.\n\nI can't seem to keep up with the insanity that is occurring in my life so I decide that I should have a drink and veg out on my sofa in the family room. I go to the bar and mix myself a gin and tonic. A fleeting thought of popping out for a smoke runs through my head, but I decide against it and head to the family room. Flopping down, I click on the TV just in time for the ten o'clock news. As soon as it's on, the true depth of my trouble begins crushing in upon me.\n\n\"Well, this is nothing if not predictable,\" I say aloud in dismay as I flip through channels.\n\n\"In other news tonight, local Representative Levik shot and killed an attacker in the parking lot of -\"\n\nClick\n\n\"- the former Congressman claimed not to know his attacker -\"\n\nI haven't spoken to any press, so I don't know where they got that. I'm not really former yet - well a handful of days - I guess I am.\n\nClick\n\n\"- the FBI has stepped up efforts to find the Congressman's wife, Page -\"\n\nWife? This is going to get out of hand quickly. I wonder if anyone noticed.\n\nClick\n\n\"- officials are not releasing any details on the deceased, claiming national security -\"\n\nI turn it off and worry about Page. The sadness in her face as she was abducted pained me more than the lump on my head. But I'm not supposed to worry because Mom 'says so', which seems so middle school. I'm about to blow a gasket with being kept in the dark regarding everything that is going on around me. Looking at my glass, I swirl the liquid around so the ice cubes clink the glass and then drink it all down in a series of gulps.\n\nBefore I can get fully angry and start throwing things or even consider getting another drink, I realize the mistake I've just made by mixing alcohol with my pain medication. Nothing in the room looks right and my head is spinning. I lay my head back and close my eyes for what feels like a few minutes only to awake to the ringing of my house phone. I pick the handset up out of the base thinking I need to be careful what I say.\n\n\"Hello?\"\n\n\"Oh man, I'm glad I got a hold of you. It's all over the news up here. What's this about your wife?\"\n\n\"Hey, Gary. It's - um - complicated, there's a tap on this line since I may be waiting for a ransom call.\"\n\n\"Are you alright, I heard you were hospitalized?\"\n\n\"I was checked out at a medical facility. You know how the media is,\" I say, dismissing the fact that I'm injured without telling him.\n\n\"Look, Xiao and I were on our way back through JFK. We're going to be in DC around midnight. Is there anything we can do? I mean anything!? Like if there's a ransom to be paid or -\"\n\n\"Let's see what happens. I don't know anything yet. Mom is on her way here now.\"\n\n\"Look if you get a ransom call, you phone me. And seriously, dude, leave me a message if I don't pick up, okay?\"\n\n\"Okay, I will and thanks.\"\n\n\"Just looking out for my best friend. Bye.\"\n\nJust moments after hanging up I hear a knocking sound coming from the front door, followed shortly by the doorbell. Thinking it might be the agent or Page, I rush dizzily to the door and open it.\n\n\"Sir, this woman claims she knows you,\" Agent Jonson says.\n\n\"Yeah, she can come in,\" I say, as I look at Natalie.\n\nThe agent returns down the sidewalk towards his vehicle to continue his unofficial watch. Holding the door for her she scoots inside and I close it. I'm pretty surprised to see her, I wasn't expecting this at all.\n\n\"Oh my God, Ryan. Are you okay?\" she asks hugging me.\n\n\"Ouch, fuck! My left side is sore. What are you doing here?\" I ask. \n\n\"Oh, sorry, I didn't know...\" she rambles on.\n\nI'm confused by her being here; it should have been Page. I don't really want her here and I'm still not fully over having a near fit of rage or my mixing of medication and alcohol, so I'm barely listening to Natalie but I realize I am focusing on her facial expression. It doesn't seem as concerned as she claims and the whole encounter sets me further on edge.\n\n\"I heard about your attack and I had to come over,\" she says releasing me and inspecting me closely. \"I heard that you were knocked out; are you alright?\"\n\n\"It's still pretty sore too,\" I say lightly touching the back of my head and bending down wobbly.\n\n\"Let me see,\" she says, as she moves to inspect my head placing one hand under my beardy chin steadying me and the other probing the knot on my head gently. \"Why didn't you call me?\"\n\n\"I've just gotten home and we didn't really end things on that kind of note,\" I respond flatly as she places a soft kiss on the bump. \"Why are you here?\" I ask suddenly becoming even more suspicious of her motives.\n\nShe stops and her hand lifts my head back up softly. I guess it isn't the kind of response she was expecting. Her eyes look hurt and slightly confused. The dimples in her chin deepen as she forms a response.",
        "\"You've changed; I can't put my finger on it but something is definitely different about you?\"\n\nI shrug and repeat my point since she didn't answer my question, \"I don't understand what you're doing here.\"\n\n\"Well, I tried to call, but it said your number was disconnected.\"\n\n\"I've got a new cellphone, but you could have called the home number.\"\n\n\"Why are you being so cold to me? Are you angry with me? Is there someone else to take care of you now?\" she asks in rapid succession and looking around.\n\n\"Yes - um - no, just a lot of weird stuff has been going on lately,\" I answer, feeling the need to guard my words.\n\n\"Come sit with me,\" she says pulling my hand.\n\nI feel really alone without Page here and against my better judgment, I follow Natalie to the family room. She takes off her coat and tosses it over the end of the sofa. She has on a tight top that accentuates her large breasts which are clearly unrestrained by a bra. Sitting down on the middle cushion, she pats the seat beckoning me to join her with her arms extended. I sit feeling awkward with her closeness and am instantly aghast when she leans over to kiss me. My mouth tightens and I push her away; inadvertently contacting her pillowy chest.\n\n\"No, Natalie; don't.\"\n\n\"What is going on with you?\"\n\n\"We aren't together and I'm - uh - I -\" I mumble, cutting my words off before admitting I'm with someone. \"I think you need to go.\"\n\n\"You don't look like you're doing very well. Won't you let me take care of you tonight?\"\n\n\"No, my Mom is coming and you and I aren't together anymore.\"\n\n\"I don't know, I think you might change your mind?\" she says grabbing and rubbing my cock through my sweat pants.\n\n\"Maybe, but not tonight,\" I say stupidly, as I stand up abruptly and move out of her reach.\n\n\"Okay, well, may I at least use your restroom before I go?\"\n\n\"Sure, just don't pull any of your old tricks,\" I say as I remember her emerging nude from my bathroom during her first seduction of me.\n\n\"You really are 'no fun' anymore; be right out.\"\n\nI find myself suddenly sitting back on the sofa, I wait for her and think of all the reasons that led to our breakup. She'd kind of initiated it but I'd been neglecting our relationship during the hectic campaign schedule. There wasn't any cheating or anything I just didn't feel like she was the one. She was growing more and more distant as if she were feeling the same thing, so I finally asked her and she admitted she'd been thinking it was 'over' for a while. It seems like several minutes have passed and I'm about to go check that she hasn't crawled in my bed or something when she reappears at the doorway.\n\n\"Look, I'm sorry for doing that. The thought of you dying without ever seeing you again -\"\n\n\"It's fine, I just need to get some sleep, Nat,\" I say, as I hand her jacket to her and start walking us towards the front door.\n\n\"So, no hard feelings?\"\n\n\"No, but I don't have those feelings for you anymore,\" I say as I open the door for her to leave.\n\n\"Look, I'll call you in a week or so,\" she says, as she kisses my cheek again. \"I still think I can change your mind, bye.\"\n\n\"I don't think that's a good idea,\" I say trying to be firmly negative. \"Have a good life, Nat,\" I say closing the door behind her so there's no chance for her to respond.\n\nTurning the deadbolt, I feel like I've just escaped a mauling. The thought of her kissing me had almost made me nauseous. Worry about Page fills my thoughts as I wandered back toward the family room, where something catches my eye down the hallway by the liquor cabinet. Suppressing my suspicions, I go back into the family room to get my glass. The array of new items on my network that Page had discovered when someone had gone for the 'honey pot', while we were at the cabin, came to my mind. Heading back toward the cabinet, I wonder if it is one of these new devices and how many there might be.\n\nStanding in front of the cabinet built into the alcove, I go about making another drink I have no intention of drinking. I am studying every aspect of the shelves and surrounding framework. Something feels out of place, but I can't quite put my finger upon it. What had I seen and why had I even looked? The memory of the pale blue light flashing on the wet pavement came back to me in a flash and I suddenly wish Page were here to help. Having found Gary's secret server room should have me feeling a little more confident but nothing is immediately obvious. Then it hits me like a ton of bricks; I'd left my keys in my bedroom and hadn't hung them here and the hook, which they would normally hang on, is missing. I try not to stare, but want to figure it out, and notice that the hook is actually there, but on the opposite side of the key rack board. Someone had replaced it on the wall, but mounted it upside down.\n\nReaching up to the top part of the cabinet, I pull down the pack of cigarettes while continuing to search for other alterations. I take one out and start to put it in my mouth when there's another knock at the door followed by the ringing of the bell. Leaving everything on the counter, I rush to the door. Looking through the peephole, I see agent Jonson is there with Mom, so I open the door. As I let her in, I spot the first news truck pulling up on the semi-darkened street.\n\n\"I'm going to take off now that Rama's here, you'll be in good hands, Congressman Levik.\"\n\n\"Thanks for watching over him for me Donald.\"\n\n\"You know Agent Jonson?\"\n\n\"Yes, I requested he stand watch until I got here, let's take this inside.\"\n\n\"I'll be back with my partner tomorrow unless I hear otherwise,\" he says heading down the sidewalk.\n\nWe go inside, she sets her large duffel bag on the floor and I take her coat after I close the door. Once free of it she hugs me lightly avoiding my burned side.\n\n\"Mom, I don't understand -\"\n\nShe puts her finger to my lips, shakes her head 'no' and says, \"Let's have a look at that noggin.\"\n\nWith that, she takes my hand and leads me back to the family room. There she takes several items from her bag and places them on the table. She takes another hand-held device and proceeds to go around the room looking at the indications as she holds it near various things: lamps, power outlets, TV, stereo, air vent and windows. When she reaches the entryway, she backs away to the edge and pushes it forward till it is just at the opening. She shakes her head and puts the device back in her pack. Then she takes out a roll of Velcro and a collapsible step stool.\n\n\"What is -\" I whisper, but she cuts me off shaking her head at me and shushes me.\n\nStanding on the stool, she peals the double stick paper of the Velcro and places it over the top of the doorway. She hops down and I watch in amazement as she pulls out a silvery-black woven cloth curtain, climbs back upon the step stool and presses the cloth up over the entryway. Then she pulls out a power strip with a long cord, goes to the outlet for the lamp, plugs it in and then connects several of the remaining items into the strip. One at a time they power up and their lights begin blinking. They are initially red, but they each change back and forth between red and yellow and eventually change to solid green.\n\n\"Okay, we can talk now.\"\n\n\"What are all those and the - um - curtain thing?\"\n\n\"The curtain is an advanced material that absorbs light and blocks sound to an extent. This one is a random noise generator with some noise cancellation abilities which works well in conjunction with the curtain. The rest are signal blockers, scramblers and jammers of various types. We can talk openly without being overheard or seen.\"\n\n\"Who are you?\"\n\n\"Well, I'm your mother, silly. Now, while we're on that topic, I already spoke to the doctor, but let me see that head.\"\n\nI want to argue and find out what's going on, but I lean down to let her inspect it. Her fingers gently spread the hair away from the stitches and she too plants a kiss.\n\n\"They said it should be fine in a couple days,\" I offer speaking into my lap.\n\n\"What about your mental faculties?\" she asks, encouraging me to sit back up.\n\n\"I'm still foggy - plus - I had a drink on top of my pain medication but I don't care about any of that, I need to know Page is okay.\"\n\n\"Ryan, you've just killed someone. Police officers or FBI agents often take time off to come to grips with that even though nearly all their shootings are justified and only a few are accidental.\"\n\n\"I know - I know and I feel sick about it, but after he'd fired at that van; I was sure he was trying to kill us both.\"\n\n\"Give me your gun; I'm here now and I'll keep you safe.\"\n\n\"Agent Jonson kind of suggested I carry it.\"\n\n\"I figured he did, but I'm your mother.\"\n\nUnzipping my sweat jacket, I unbuckle the holster with the Glock and hand it to her. A feeling of relief comes over me as I realize how worried I'd been about being able to pull that trigger again.\n\n\"Okay, now you're safe; I'm not going to accidentally shoot you.\"\n\n\"Ryan, I'm not worried about you shooting me. You've just killed someone and you're going to be feeling depressed; it's a normal human response,\" she says as she removes the gun from the holster, ejects the clip and places the lot in her bag.\n\n\"But you've got to help me; I'm going crazy. There's all this insane stuff going on: the election, spying, sabotaging my campaign, hacking of my computers and then there's Page. You said, Page was being handled... What'd you mean by that? Where is she? I need to know she's safe. Is she really okay?\"\n\n\"I'll answer as many of your questions as I can; I'm officially reading you in. Page should be here in the morning. She's getting debriefed and we're finalizing her new documents. We don't want this wrinkle to cause any issues.\"\n\n\"Mom, I love you. You're going to have to start simpler and further back. What's going on? Who is we? Who were the people that picked her up? How do you even know about this?\"\n\n\"Let's start with this; I know about you and Page.\"\n\n\"Oh - um - what - what do you know?\"\n\n\"Are you going to make me spell everything out to you? Did you think you could keep this kind of secret?\" she asks incredulously.\n\nShe waits several moments and I don't reply because I don't want to admit what I - what we've been doing. \"Okay, I'll put the words out into the open,\" she says with a little shake of her head. \"I know that you two have been intimate and that she is very much in love with you. So much so, that she wants to quit.\"\n\n\"Quit what?\" I ask worrying that she'll be done with me.\n\n\"She's been being groomed to be a very special kind of agent and you've nearly ruined it.\"\n\n\"That doesn't seem fair, I didn't mean for -\"\n\n\"I didn't mean you alone, I meant the two of you. I know that you were dragged into this unaware. Page, as smart as she is, has no life experience. Relationships are where problems always rear their head and we'd been kind of worried about that Carl guy. We just didn't know your dumb fuck father was going to get involved with him. I guess we're lucky that when she found out, and went into a tailspin, that she ran right here into your arms.\"\n\n\"Yeah, she came here - I didn't know what else to do but let her stay. I didn't think I could renege on the offer I'd made to her. I'd told her to come back any time after she finished high school. I'd thought she might come to college here. I never meant -\"\n\n\"Honey, she's been out of high school for nearly three years. She's been working with Reba getting trained on other skills in addition to her hacking.\"\n\n\"Yeah, she finally told me some of that at the cabin. I've been clueless on a lot of things and I feel like I still am but the one thing I know is that I love her.\"\n\n\"Yeah, we've got that; that's why we're working on getting documents together for you two.\"\n\n\"Who's we?\"\n\n\"Your aunt and I work for two similar agencies. There's a sort of partnership between them, kind of a joint task force.\"\n\n\"Which agencies?\"\n\n\"I can't tell you that yet.\"\n\n\"But you will eventually?\"\n\n\"There are high level discussions regarding your inclusion due mainly to Page's insistence.\"\n\n\"Is agent Jonson FBI or something else?\"\n\n\"He's FBI, but we've coordinated with him in the past and he's a friend.\"\n\n\"What kind of documents are you getting together for us?\"\n\n\"We have access to some of the best official documents available. We'll get those to you in due course but right now we're working to finish our expunging of her records. We'd already begun, when she decided to join that other agency under Reba's guidance, but now there's some urgency.\"\n\n\"The news coverage?\"\n\n\"Yes, and the police reports; why'd you have to go and tell them she was your wife?\"\n\n\"I didn't, the officer made an assumption when he heard the last name and how desperate I was to get her back.\"\n\n\"Well, it looks like you two were probably headed down that path anyway, so all of these collateral activities have just sped up the time line.\"\n\n\"All of this stuff is crazy. I haven't got a clue as to why anyone cares about a nearly former congressman. What have we gotten into, Mom?\"\n\n\"It is very complicated and Page's coming here just made it more so. She's been doing some very high level hacking for Reba's agency.\"\n\n\"Page told me to only call her Leda aloud.\"\n\n\"Yes, that's her alias and if it weren't for all this,\" she says pointing at the array of devices, \"we wouldn't be using her name at least in this context. She's your aunt and that is no secret.\"\n\n\"So, why -\"\n\n\"Are you going to keep interrupting or let me finish?\"\n\n\"Sorry, I've just been in the dark on all of this and I'm used to asking questions during a briefing.\"\n\n\"Well, Congressman, this is above top secret, so just sit back and listen,\" she says playfully but with a dead serious look in her eye. \"Page was doing some borderline hacking jobs before she got involved with Reba's agency. They were above board, but right on the fringe, if you like. She never stepped over the line, but there were definitely some blurry spots, okay?\"\n\nI just nod my head, so she'll continue, but expect she's talking about the money Page has gotten paid.\n\n\"Well, Reba got me involved in taking care of some of those that were a little too close and that's when we started expunging her records. We'd already arranged to create some parallel documents for her. Really, it was your aunt that arranged for those, but we've had the originals of nearly everything destroyed. So, Page is no longer your sister, you never had one and there's no record of a 'Page Levik' that isn't your wife.\"\n\n\"What about birth announcements and stuff?\" I ask when she's taken a pause.\n\n\"Well, first of all she wasn't born here. You may not remember, but I was away on a business trip.\"\n\n\"You were in Florida.\"\n\n\"No, you were told I was in Florida. I was actually out of the country. There were no birth announcements and no birth certificate generated here. Your father doesn't know any of this, as far as he knows, I came home from Florida with a tiny baby.\"\n\nI sit stunned as I think back over my memories. Page was born when I was nine. I remember not being able to go to the hospital, but I'd thought it was because I was too young. \"Was she premature, like Dad told me?\"\n\n\"Yes and no. She was very small and we think the doctors must have gotten the due date wrong by a month. I traveled a lot back then and it could have been one of two dates. When they guessed, based upon her size, they simply picked the wrong one.\n\n\"Anyway back to my story, you keep interrupting me reading you in. So there's been a huge effort to fix all of the different places that have records of Page's, schools, doctors and the like.\"\n\nUnable to control my outburst, I ask, \"What about her page job with Congress? And my friends that she's met?\"\n\n\"She was already under her alias, Page Rubin.\"\n\n\"I didn't think she started working for Reba until after -\"\n\nMom stands there with her mouth firmly shut and folds her arms across her chest. I can tell she's had just about enough of my interruptions, but I really want to know stuff in an order I can understand. I'm trying to remember if Page had worn a name tag that first day I saw her on the House floor and which of my friends she's met.\n\n\"I'm sorry to keep interrupting, the story you're telling isn't coming out in the order I understand it,\" I say apologetically while shaking my head.\n\n\"Sweetie, I know. However, there are a great many things that I can't tell you yet. If you understood how important Page is, you might understand the reasons for all the efforts we've gone through to make this happen. Her IQ is unmeasurable, her memory is nearly perfect, she's got an innate understanding of computers of all varieties and she was working on something BIG before all of this happened.\"\n\nI find I'm a little envious of Page's abilities, but I know it's all true and I worry what this is doing to her. Suddenly, I'm saying some of my worries aloud, \"Well, she's under a lot of pressure, I can tell you that. She doesn't sleep much and I worry that these agencies or whoever are pushing her too hard. She doesn't want to do the work, I can tell and she's said as much. She wants to have a life, and babies and -\"\n\n\"She what? You didn't get her -\" Mom cut me off at that and I understand my error and interrupt her before she goes ballistic.\n\n\"No, no, no, she's got the implant. She told me and showed me the tiny scar and how that led to all her piercings.\"\n\n\"It's news to me. Maybe I should be debriefing you,\" she says with a little smile.\n\n\"Well, I can tell you that things in my life have been completely turned upside down and I don't know if I was ever in control of any of it. There was all of this effort to make sure I wasn't reelected, and that started well before Page got here.\"\n\n\"I'm fully aware; as I said it got more complicated when Page tried to drop off the grid. People aren't going to let her run free with the knowledge she has in her head without some assurances.\"\n\n\"Wait, what? Say that again? Did you just tell me she was abducted by the good guys?\"\n\n\"No, she was snatched because she phoned in an emergency pickup. You were supposed to be brought in with her.\"\n\nSome of that makes sense as I recall her messing with her phone as she'd run across the parking lot toward the mall, but they'd arrived almost instantly. \"How did they get there so fast?\"\n\n\"She texted Reba about the shopping trip and the upcoming party, to let her know she'd be okay. Reba had a tail put on you from your condo.\"\n\n\"I didn't see a tail.\"\n\n\"You wouldn't have even if they'd been on the ground.\"\n\n\"I was tailed by a drone?\"\n\n\"I'm not at liberty to say, but you were being watched closely.\"\n\n\"Did she tell you about the break-in here and the new devices she found on my network?\"\n\n\"We'd detected the same, she had Reba checking on where the data is being routed.\"\n\n\"What am I going to do about that stuff?\"\n\n\"Well, this room is going to be made secure. What I've done for tonight is temporary. There'll be a crew here in before noon to make this room completely secure.\"\n\n\"Won't it raise suspicions?\"\n\n\"We're doing it as a renovation to your family room. We'll be showing off all kinds of high end home theater kinds of items. The room will be enhanced during the process.\"\n\n\"So you're leaving all the surveillance stuff in place?\"\n\n\"I think that is the plan for the time being; it may prove useful to send false information. Look, I know you want to know every single thing that is going on, but I think you need to get some rest.\"\n\n\"The bed in the guest room hasn't been changed since Page slept on it.\"\n\n\"It'll be fine Ryan. You get some sleep and I'm going to do an inventory and a preliminary sweep of the place to make sure we've gotten all of the devices logged and what kinds they've used.\"",
        "\"Okay, good night,\" I say as I stand to leave.\n\nAfter she hugs me good night, I head to my room, make a visit to the restroom, and finally strip down for bed. Sliding between the cold sheets, I lay there tossing and turning as depression settles in about Page. Knowing she's alright gives me little solace at the moment due to the uncertainty of everything that is happening. Initially, sleep comes in fits as I wake periodically aware of Mom's movements around the place. I finally dose off the last time when I hear her flush the can and close the door to the bathroom.\n\nI awake to the doorbell going off around 9:00AM. Groggily, I get out of bed and pull on my sweat clothing. My head is pounding again as I make a visit to the bathroom to empty my bladder and grab one of the pain pills. I join Mom in the kitchen, where she's got a nice big pitcher of orange juice mixed up.\n\n\"Who was at the door?\"\n\n\"The press.\"\n\n\"I can't think about that right now, I need to take this,\" I say pouring myself a glass and downing the pill.\n\n\"We'll keep them at bay until we have our story straight. You want some eggs this morning?\"\n\n\"Yes, that'd be great. Did you have groceries delivered?\"\n\n\"I told you I'd -\"\n\n\"Now, I know where Page gets it from, she's just like you.\"\n\n\"I'll take that as a compliment.\"\n\nI sit silently watching her fix a couple eggs over easy, toast and some coffee from my Keurig. She sets the plate in front of me and then begins fixing her own. When she joins me we begin eating. Looking around, I can see that she's done more than take inventory and get groceries ordered. The kitchen is cleaner than it was when we left over a week ago. I'm not a slob, but she'd done a deep clean.\n\n\"Yes, I cleaned a little. I also got rid of the drink you'd poured and the pack of cigarettes. You don't need any of that mixed with those pills or on top of what we're up against. You'll need your wits about you.\"\n\n\"Okay, I wasn't thinking clearly last night. I don't smoke much, but sometimes -\"\n\n\"It was a bad habit I had many years ago, I'll take the blame.\"\n\n\"I'm a grown man. I know it's bad for me and I should have known mixing them would be bad.\"\n\nThis idle chit-chat seems to be aimed at saying nothing of importance in a potentially compromised room, so I finish up my breakfast and put my dishes in the dishwasher. She does the same and we head back to the family room.\n\nInside she praises me, \"That was good, you didn't say anything that might give away -\"\n\n\"Well, I've been a paranoid wreck for the last week or so.\"\n\n\"Yeah, I guess this is all new.\"\n\nWe sit and discuss everything she's done so far. She's mapped out where all of the devices are with the exception of my bedroom. She's put an IMSI catcher up; it's evidently a way to intercept cellphone calls. Then she finally tells me she's been in contact with Reba this morning. She's looking at her watch when we hear the doorbell.\n\n\"There - I'll bet that's them now,\" she announces.\n\nShe heads to the door with me on her heels. Looking through the peep hole with her hand on a gun that's in a holster behind her back, she turns to me and says, \"Stand out of sight.\" As I stand behind the door, she turns the handle, opens it and speaks through the door. \"Please let these people pass,\" she says as a dozen questions are hurling at her from reporters outside. \"My son will not be talking to the press during this ongoing investigation. Please try to understand that he is recovering from a very traumatic experience and will attempt to answer your questions in due course.\"\n\nTwo women come through the open door with their hoods up and dark glasses followed by someone that looks like a bouncer from a high end bar. Ushering them in Mom closes the door, while holding her finger to her lips. Once inside Reba removes her hood revealing a blond wig. Page follows suit and reveals she has a dark black wig with curly hair. The agent remains at the door as the rest of us walk back to the family room. Reba is behind Mom, then Page and me. I'm dying to hug and kiss Page, but settle for holding her hand as we walk back to the semi-secured room.\n\nInside the room, Page and I embrace one another tightly. I grimace ignoring the pain and whisper raggedly on the verge of crying, \"Oh, God I'm so happy to see you. I thought for sure you were gone.\"\n\n\"I should have waited up for you, then we would have both gotten rescued.\"\n\n\"No, you did the right thing. You heard the shots against the van, didn't you?\"\n\n\"Did that lummox shoot at us?\"\n\n\"Yeah, he had a silencer, but he hit the van with several rounds.\" Looking at my Aunt Reba and Mom, \"Why didn't you tell her?\"\n\n\"We didn't want to upset her any further,\" Reba says.\n\n\"Well, if you'd run slower we might both be dead or abducted. He was much bigger than the first guy that attacked us. In a panic, I shot him as he was trying to nab me.\"\n\nPage hugs me close, \"I'm so sorry, Ry. This is all my fault.\" I grimace again and Page looks at me worriedly.\n\n\"Alright, stop that,\" Mom says sternly. \"Things happen! I didn't expect this set of events, but crazier shit has definitely happened and will happen when you're in this line of work.\"\n\n\"Rama is right,\" Reba says. \"This is just the start. As you get involved, there are often changes in plan and adapting to those changes is a skill to be honed.\"\n\nPage is arguing that she should have been told. The three of them are talking shop, but I want Page all to myself, I don't want to share her with anyone or any agency. As much as I want to hear more, I'm feeling tired and simply want to go back to bed with my love, my sister and evidently my wife. It's all rushing in on me. They're talking across each other and I can't keep up with everything. Page is adamant that she be kept in the loop on everything concerning me or she's done.\n\nActually, her exact words are, \"You keep me in the loop about anything that effects Ryan or I'm fucking done!!!\"\n\nShe'd spit those words out like she would and maybe even could kill someone with them, just like the night she'd arrived here. The conversation is suddenly at a standstill as the three of them stand there silently. Reba and Mom are looking at me like Who the fuck is he? I don't know what they want from me. I hold up my hands and start backing for the covered doorway.\n\n\"I'm sorry, I've got to go lay back down, my head hurts and my meds aren't kicking in yet,\" I say looking at them.\n\n\"We need to get this room fully secured,\" Reba says.\n\nBefore I can get out the entryway, Page is pulling me back, \"What meds are you taking? What happened to you Ryan?\" she asks lifting my sweat jacket and t-shirt to look at the bandage there. \"What the hell happened to him?\" she asks them.\n\n\"It's not a big deal, I got a little burned from the muzzle as I shot my attacker,\" I answer trying to calm her.\n\nBefore I can say more, Mom informs her, \"The doctor thinks a bullet glanced his skull.\"\n\n\"What?\"\n\n\"It all happened so fast. He knocked me out as I shot him. It's taken a lot out of me and I've been worried sick about you maybe being held for ransom or blackmail or God knows what. You all do what you need to do about security, I just need to go lie back down.\"\n\nPage is fuming and shoots them both a disparaging look like I've never seen from her, \"We'll discuss this further when I've had a chance to calm down. You can go ahead and bring the crew in to do the full security sweep.\"\n\n\"Is the guy at the door part of the security crew?\" I ask before ducking between the curtain and the entryway.\n\n\"Yes, he's physical security and will be here until we've gotten the condo secured,\" Reba says firmly.\n\n\"I thought we were leaving things in place.\"\n\n\"No, we've gotten what we need for now. We're taking it all out - a full sweep.\"\n\n\"But we're still remodeling this family room?\"\n\n\"Yes, that was in the works regardless,\" Mom says. \"I didn't know you two had wrapped up the back tracing.\"\n\n\"That was what Page was working on with me,\" Reba offers. \"We're pretty sure they know we're onto them.\"\n\n\"There is definitely something in or behind my key rack,\" I say.\n\n\"They're going to get everything, even the ones I placed,\" Page says. \"Let's sit here for a time while they do your bedroom.\"\n\nPage and I remain standing together as a flurry of things begin to happen. Mom is down the hall talking to the security guy, while Reba starts making calls. Within a short period of time I can hear multiple sets of feet heading down the hall towards my room. I'm hugging Page tightly on my right side for the longest time, but my legs are wobbly and I eventually take her recommendation to sit on the sofa. While I'm sitting, she inspects the stitched knot on my head and places another kiss on it. Three head kisses in such a short time have me feeling like a child.\n\nPage sees my perplexed look and asks, \"What?\"\n\nI don't want to tell her, but am compelled to be open, \"You're the third person to kiss my head in less than a day and before you ask, the third was Natalie. She came over before Mom arrived, I got a really weird vibe from her. She was all -\"\n\n\"She better not have touched any of my stuff,\" she says emphatically.\n\n\"Yeah, she tried -\"\n\n\"I will fucking END her!\"\n\nHer jealousy is warming my heart, but I need to smooth this out, \"I didn't tell you that so you would hurt her. I'm trying to be open with you. She came over to check on me and it felt weird and a little forced.\"\n\n\"Did you tell Mom?\"\n\n\"No, it didn't seem important and I was flustered. It happened right after Gary called to check on us. He offered to pay the ransom if there was one. I didn't know what to tell him because I'd just gotten off the phone with Mom and she'd told me it was being handled.\"\n\nPage sits beside me and hugs me tight avoiding my left side, \"You need to tell Mom and Reba what you can remember. She might be another player or involved somehow.\"\n\n\"Okay, I'm just so glad your back safely. I don't know what I'd've done if you'd been hurt.\"\n\n\"Yeah, same,\" she says softly.\n\nReba comes back into the room with a thick looking case. Mom follows her in and says, \"Well, that's the five in your bedroom. Two different types, so they are probably different players. This case will prevent them sending or receiving signals. We'll get the whole mix off to the shop when we've gathered them all.\"\n\n\"Ryan told me that his ex-girlfriend, Natalie, paid him an odd visit last night before you got here, Mom.\"\n\n\"Was she ever out of your sight?\"\n\n\"She wanted to use the restroom before I made her leave.\"\n\n\"Hmm, she could have been attempting extractions, but it could also have been a new or additional placements,\" Reba says thoughtfully.\n\n\"We'll have the guys check for prints and see what she might have been up to.\"\n\n\"We're going to go lay down for a while,\" Page says.\n\n\"You're right,\" Mom replies. \"You both need some sleep. Reba and I will try to set a path forward that meets everyone's expectations, okay?\"\n\n\"Thanks,\" I say hugging Mom. \"You know I love you?\"\n\n\"I know and I know this has been quite a shock,\" she says squeezing me tightly.\n\nHugging Reba I say, \"I love you too, Leda.\"\n\n\"Go to bed the two of you, but keep it down in there the apartment is still rife with these things,\" Reba says laughingly patting the case.\n\nPage leads me to the bedroom and closes the door behind us. Momentarily, it feels odd to be teased about noise, but as I watch her quickly strip down, I realize that someone has already made a prioritization of sex over sleep. The next moment, Page is pulling my sweat clothes off of me and pressing me toward the bed. The sheets are still a mess from where I'd left them this morning and I scoot over to make room for her. When she joins me our lips meet and I relish her tender kiss. It feels and tastes like that first night as a hint of smoke is in her hair.\n\nShe kisses down my midriff working toward the burned side. There she plants light kisses around the bandage and comes back up to my face. \"I'm so sorry about all of this Ryan,\" she says and leans in to kiss me deeply. Our tongues play back and forth anxiously as she runs her hands across my smooth chest and I grope hers in return. Her nipples are both tight as I lightly tease them with my index fingers.\n\nWhen we break the kiss, I ask, \"Were you smoking?\"\n\n\"No, it's from Reba. Now lie back and be quiet like your aunt instructed mister,\" she says firmly.\n\n\"Yes ma'am. You're playing more games, aren't you?\"\n\n\"Reba's teasing made me think of it. We don't have to play, but we do have to do this,\" she says as she sharply impales herself on my engorged cock.\n\n\"What are the rules, if I do?\"\n\n\"Silence,\" she says deviously twerking me.\n\n\"Oh fuck,\" I whimper. \"That's not fair and I'm not ashamed of who I love.\"\n\n\"I said we don't have to play. I missed you and your injury has given me a terrible fright,\" she whispers sadly as she presses her little star pierced nipple to my lips.\n\nI can't resist sucking it into my mouth as my hands find her hips and I hold on for the riding I'm being given. There's an urgency in Page I haven't witnessed before. She's not as wet and the intense gripping of me with each entry is pushing me toward climax quickly.\n\n\"There's no rush,\" I whisper as I release her nipple and look to her face, where I see tears streaming down from her closed eyes. \"Oh, sweetie,\" I say hugging her toward me and pressing my mouth to hers.\n\nHer lips move against mine, \"I thought I'd lost you, Ry.\" Sniffles and raw emotions flow out of her, but her pace is slowed only by the angle. \"I thought they'd gotten you and then I find out they shot at us. You mean everything to me,\" she says resuming her previous position and putting her pierced nipple back in my mouth. \"Please, suck it like that first night.\"\n\nShe seems to be attempting to relive that memory and I can only oblige. Her need is strong and her emotions pull me in too. Nibbling gently on the ring, I feel her fluid begin to release and we slide together more easily. The comfort of our bodies together is indescribable. I know she feels it too, as she relaxes slightly and moves less jerkily. Our bodies move together lovingly bringing pleasure and solace.\n\nThe time apart we experienced seems to make this reunion very important to both of us. Her pubic mound has short stubbly hair that rubs against mine, adding to the sensation of newness. I move my lips to her other teat and suckle there like I never have. I love the way her small breasts fit in my hands and I squeeze them gently as she emits a small moan. Her hands move to my face as she feels my beard and runs them through my short hair.\n\nThe scent of our love making fills my nose, spurring me to rise and to meet her every downward motion. We are generating very little noise even as our climaxes are eminent. I can feel her clenching me tightly as she works me inside her. I have no idea how she knows what I want or need, but it is like we have been lovers forever.\n\nI hear her breathing become jagged and then suddenly gasp as she pushes us silently over the top. Our combined fluids drip out of her onto me as she lays herself upon me to recover. Her tears still flowing, she strokes my short hair and beardy face. I awake slightly as she dismounts to lie beside me. My love has me as I drift away to sleep.\n\n<hr>I awake violently some time later from dreaming about the attack. I am in tears and gasping for air. My throat feels raspy like I've been yelling.\n\nPage is beside me consoling me gently, \"It'll be okay, Ryan. You did what you had to do.\"\n\n\"I killed a man.\"\n\n\"He was trying to kill us; you did what anyone would have done.\"\n\nIt may be true but it isn't changing how I feel. \"Hold me tight,\" I plead.\n\n\"I am.\"\n\n\"Tighter?\"\n\n\"I love you,\" she whispers in my ear.\n\nShe kisses me there and all over my forehead. Then she uses the sheet to dry the tears that continue to flow down my cheeks. My world is upside down and Page is the only thing that is right in it. I cling to her as if she is life itself, never wanting to be separated from her again. There is a faint throbbing in my head and I drift back into murky blood soaked dreams.\n\n<hr>Significantly later, I awake to the sounds of drilling in the family room. Page seems to have awakened just prior to me and is getting dressed.\n\n\"Let's go see what they're doing,\" she says encouraging me from the bed.\n\nI slide off and get some new clothing to wear: underwear, jeans and a polo shirt. We leave the bedroom together and find Aunt Reba and Mom supervising two guys in white bunny suits. The ceiling and walls of the room are paneled in a textured material that I gauge must be sound proof. It has a reflective surface similar to that of the curtain Mom had placed over the entryway which has been retrofitted with a pocket door in a metal-clad frame. Turning to inspect this I notice a shiny black interface near Page's eye level over the light switch.\n\nI'm thinking it's a scanner, when Mom affirms this in a low tone, \"It's a retinal scanner.\"\n\n\"So, is it safe to speak?\"\n\n\"A few more minutes and we'll be able to close the door,\" Reba answers.\n\nLooking at the window I notice that they are tinted somehow and it's getting dark outside because I see lighted lampposts. Page must see the same thing since she moves to the window to inspect the coating and some type of automated blind system. From this side it just looks like the same fabric of the special curtain but when she taps it, there is a metallic sound. Moments later she is looking at new instruments in the media center. There's a keyboard interface and some type of remote. The two men finish their tinkering and hand Reba a tablet.\n\n\"All done for today; we'll be back to finish phase two tomorrow.\"\n\nI'm wondering at that as Mom escorts them out and comes back to the room. Reba has the keyboard and nods her head to Mom and she puts her eye to the scanner and gestures downward by the door, which slides closed in response. Then she motions upward and it slides back open as do the blinds.\n\n\"Now you try, Ryan.\"\n\nI turn back toward the new door and repeat her gesture to close it after bending to scan my eye. It slides closed and I notice that there's a latching noise. Then I reopen it with an upward gesture.\n\n\"Cool, it locks; right?\"\n\n\"Yep. Now you, Page. It's learning our biometrics,\" Reba says.\n\nPage repeats the whole thing and then Reba does it for herself. When she's done she closes the door and leaves it.\n\n\"What's phase two?\" I ask.\n\n\"We're putting in a panic bunker.\"\n\n\"Underground; don't we need permits and stuff?\"\n\n\"We've got approval already. There'll be entrances from this room and the master bedroom,\" Mom says firmly.\n\n\"I'm glad you are taking my requests seriously,\" Page says. \"I'm not continuing unless I know he's safe.\"\n\n\"Couldn't I just move?\"\n\n\"No, Ryan, we need to keep this as low profile as possible. Workers already started removing some of the earth today hidden beneath the drywall we already took out. Starting tomorrow, workers will be removing more earth and that'll need to be hidden too. We'll hide a few more large loads but we'll need to move the bulk of it at night. So we'll all need to be out of here, we're thinking the party New Year's Eve will give us a good window to do the removal.\"\n\n\"So where's the hole?\"\n\n\"There's a panel over it underneath the carpet. When it's done, there'll be an air tight sealed door. It won't take extreme abuse, like a missile, but should withstand armor piercing bullets until help can arrive.\"\n\n\"Okay,\" I say, but then feel like we're just moving ahead without getting much information. \"Look, I appreciate everything you two are doing for us, especially your decision to, to read me in somewhat. But you've hardly told me anything I can understand. What the heck is going on here?\"",
        "Reba starts right in, \"Ryan, we don't know why multiple groups are focused upon you, but the Russian group has been at work in the US for decades. The documents that Page captured from bpodq point to a conspiracy to promote candidates with very specific agendas. Namely, they are long term plans aimed at funding candidates that oppose science in some fashion either for religious or commercial reasons. We believe that one of their primary goals is the crippling of science education and further promotion of global warming.\"\n\n\"You really believe that? They are signatory to several treaties to reduce emissions.\"\n\n\"That's all global politics. They want warm water ports and open shipping lanes in the Arctic,\" Mom offers.\n\n\"So you know this as a fact or these are educated guesses?\"\n\n\"The document spell out groups of candidates to promote and deter. Analysis of the backers and policies of each candidate has led us to believe that is their goal,\" Reba states flatly.\n\n\"Their loss to us in the space race hurt their national pride and they've been pursuing a variety of strategies to regain an advantage ever since,\" Mom adds.\n\n\"So, because I'm a pro-education candidate, I'm out. I guess I can see that, but I'm already out, why would they continue to pursue me like this?\"\n\n\"They seem to understand that once out, politicians obtain power through alternate pathways like becoming a lobbyist or even pursuit of a different office,\" Reba says.\n\n\"So, they're fucking up my life as an insurance policy?\"\n\n\"Maybe, we don't know for certain.\"\n\n\"What about the Asian woman Page saw planting devices?\"\n\n\"We don't have much on that angle yet, but the Chinese government has stepped up their espionage across the board. They spy on government and corporations with equal perniciousness,\" Mom says.\n\nPage adds, \"The Chinese have the means of production for so much of the technology that the entire world uses. It could be for competitive advantage in trade or plans of global domination.\"\n\n\"That seems pretty far-fetched,\" I say. \"Don't they just want us to buy more of their stuff?\"\n\nReba answers, \"Yes, but take the case of wireless WAPI protocol they insist are in all mobile products to be sold in China. Both U.S. government and tech industry specialists agree that its use is really about trade discrimination, but since the Chinese government owns the source code and the chips are solely made in China; it may well have back-doors that haven't been detected yet.\"\n\n\"None of this explains why anyone might try to abduct or kill Page and me.\"\n\n\"There is definitely a third element here,\" Mom says. \"Page was being sought by one of the groups with whom she worked.\"\n\n\"I'm so sorry, Ryan,\" Page says hugging me.\n\n\"Do we know who the guy I shot was working for?\"\n\n\"Not yet. He was Russian, so we believe he might be a contractor for them, but it might be something else,\" Mom says. \"We're still working to put the pieces together, where he's been, who he's been talking to and the lab is working on his phone as we speak.\"\n\nThe three of them start conversing more as I just listen. It starts to get way too technical for me to follow. The lab has given them details about the five different manufactures of devices they found throughout the condo. I can't see out the window but my stomach takes this moment to gurgle loudly telling me that evening is upon us. My head begins throbbing again and I notice the conversation has come to an abrupt halt.\n\n\"I think we need to eat,\" Page says. \"Have either of you made plans?\" she asks Mom and Reba.\n\nMom responds quickly, \"Yes, but look, we just wanted you to see we're making a good faith effort to include Ryan on as much information as we can. The path forward is to make the condo secure and hardened with a panic room. We're going to have to maintain a low profile for a while, since there are still news vehicles on the street. We'll need to come up with a narrative that fits the shooting event and your marriage. Eating out won't make that any easier, so I've ordered in groceries to make dinners for several nights and I plan to do that until this dies down.\"\n\n\"So the both of you are staying until this has blown over in the news?\" I ask.\n\n\"Your mom is staying here. I have a room in town. However, I'll be heading back to Stanford to prepare for a course shortly after the New Year.\"\n\n\"Well, that may change,\" Mom interjects. \"You have more expertise on the tech side of this, I can cover for the first couple weeks of your course.\"\n\nMy mind is officially blown as I envision my Mom teaching for Reba at Stanford. I hear them bantering back and forth about how that might work and stop abruptly, when Page opens the door to the room.\n\n\"I guess she meant it,\" Mom laughs following her out toward the kitchen.\n\nI tag along behind and offer, \"I can cook, you know?\"\n\n\"Yes, but your aunt and I are here and you're still recovering.\"\n\nThose words remind me of my head throbbing and I detour into the bathroom to get one of my pills. I join the three of them but sit outside the kitchen on a stool at the counter. Page hands me a glass of water and sits beside me, letting Mom and Reba work on dinner. It is somewhat reminiscent of childhood memories I have during Reba's visits to our home.\n\nI down my pill and whisper to Page, \"It'll be pretty nice to have a home cooked meal from them, my cooking never has compared to either one of them.\"\n\n\"We heard that,\" Mom and Reba say in perfectly matched stereo.\n\nTheir voices sound so similar, that the slight delay between them speaking had a harmonic quality and we all have a short chuckle while they continue to fix dinner with Page and me looking on. Over the next half hour, they quickly prepare two of my favorite dishes, meat-stuffed Kibbeh and a fresh zesty Israeli salad. Evidently Mom had already formed the meatballs, so they just have to be cooked. The ingredients of the salad just had to be minced and mixed to set together while the meat cooked. They also set a nice pot of mint tea to brew and add some honey as they served us at the table in the small eating area.\n\nWhen we finish, I take over cleaning up, loading dishes and putting the leftovers away, despite Mom's disapproval. Page helps me with the pans and it was almost back to the condition Mom had it when we finish. We continue sitting around the table drinking honey and mint tea and our conversation turns away from meal related topics.\n\n\"So, is it okay to speak here?\"\n\n\"Let's move this back,\" Mom says taking her cup with her to the family room.\n\nWe all follow and she closes the door once we're inside. I sit on the sofa with Page and Reba takes a seat on one easy chair and Mom sits in the other.\n\nMom continues, \"The devices are gone, but certain topics should be reserved for this room. The rest of the condo is low security. People can listen at the windows or from the floor above. So, in general, don't discuss anything that isn't in the public realm of knowing.\"\n\n\"We can discuss the upcoming party and daily plans, but nothing regarding the spying and ongoing investigation,\" Page adds.\n\n\"You want to be careful what you say about going out,\" Reba cautions. \"We have to assume that they are still trying to surveil you.\"\n\n\"Okay, I think I've got it. We need to guard what we say outside this room. I need to call Gary and let him know everything is okay so he doesn't worry.\"\n\n\"You can call him from this room,\" Reba says.\n\n\"How long will the panic hole take?\" Page asks.\n\n\"I think they'll have all the dirt removed by the time you're home New Year's morn. They'll be blowing in concrete over steel reinforcement one day next week. It should be done a week from now,\" Mom tells us.\n\nWith everything kind of settled, Reba says, \"Well, I think we can call that a good day. There's more to do tomorrow, but I think we all need a good night's rest.\"\n\nShe stands to offer me a hug. Page and Mom take turns as well. She dons her blond wig and hooded coat while Mom opens the door.\n\n\"You two go to bed, let me walk her out and see if Donald is out here yet.\"\n\n\"I wondered when she was going to sleep,\" I say to Page. \"I'm going to call Gary now, is there anything I shouldn't say?\"\n\n\"Just keep things minimal, with the door open.\"\n\nI call him and let him know Page has returned and things are mostly back to normal. While I'm on the phone he tells me he's e-mailed details about the party and some information about the special election. He knows I'm probably not up to it, but wants me to think about it seriously. I tell him that I will. When I'm done, we head back into our room and close the door.\n\n\"You think they were ever an item?\" she asks.\n\n\"You got that vibe too? Wait, when did you meet -\"\n\n\"I haven't, but I got up while you slept. You know I don't always sleep well,\" she says stripping down. \"I wanted to make sure Mom runs the newest secure wireless protocol and put in cabled network jacks so we can work from here. Anyway, she called him to ask if he'd cover while she got some rest.\"\n\n\"You are too much, but I love you with all of my heart,\" I respond.\n\n\"Okay, well if I'm too much, I guess we can just go to sleep then.\"\n\nI frown, but continue undressing as I watch her. She's keeping her back to me, but I suspect she's got a big grin on her face. My cock seems very certain that she wants to see him, but I'm going to let her decide, so I head to the restroom to brush my teeth and use the can. As I finish my teeth, she joins me at the counter to brush hers. If she was smiling before, there is no sign of it now and I sit down to void my bladder. Watching her from behind combined with my earlier excitement makes it difficult to urinate initially. The curve of her hips, the fleshy but firm muscles of her buttocks and the cleft of her puffy vulva all conspire to inhibit me.\n\nAs she continues brushing her teeth, she turns to study me for a moment and then back to finish up and rinse her mouth. Finally, I am able to go, but have to hold myself down, so I don't piss on the floor.\n\n\"Are you about done or am I going to have to have the workers put in another toilet?\" she asks slightly mocking me.\n\n\"The delay is partially due to your beauty,\" I protest.\n\n\"Oh, sorry,\" she says exaggeratedly.\n\nI finish up and let her have a turn as I watch her intently. The tinkling noise she makes seems to be embarrassing her a little as she becomes red around her neck and face. She wipes, gets up and flushes only to scamper from the restroom. I quickly follow her closing the bathroom door. She's in bed waiting for me on her knees and wiggling her behind at me playfully.\n\n\"I see,\" I say as I kneel behind her examining her shapely behind.\n\nI know she wants it doggy, but I haven't tasted her for a few days and I press my face into her while I bathe her vulva and lips with my moist tongue. Page emits a gasp as my nose wiggles and rocks on her pink puckered ring as I continue licking and sucking her. Her pelvis tilts downward to offer me better access and she presses back against me enjoying the treatment. I find the little horseshoe barb in her clit and suck both into my mouth as she begins bucking.\n\nWanting better access, I lay flat and bring her pussy closer by pulling her hips downward to meet my mouth. There is no protest from her and she grinds herself against me as I can feel the stubble of her mons against my beard and nose. Within a few minutes I feel her trying to climax, so I slow my licking to make it last. Her cream is starting to flow and I've missed the taste of her. Finally, she can contain herself no longer and emits a little yelp of pleasure and quickly covers her mouth. Her breathing through her nose becomes louder as I continue to lick her through her bucking climax.\n\nWhen she finishes, I wriggle my tongue against her pink pucker and she whispers, \"Mom's in the other room, don't make me squeal.\"\n\nI release her hips and resume my previous position behind her whispering, \"Don't you dare squeal, while your husband does you from behind Mrs. Levik.\"\n\nShe presses herself onto me just as the tip of my cock meets the velvety wet entrance. The pleasure we both get from it is audible and we giggle a little as we continue copulating like sex starved animals, unable to sate their lust. The noise of my hips meeting her backside seems loud but we proceed unabated and Page begins whispering naughtily to me.\n\n\"Does Mr. Levik like fucking his wife or little sister more?\"\n\n\"He likes fucking them at the same time,\" I reply reaching for her left breast to tweak her pierced nipple.\n\n\"Oh, yeah, twist it like that, um hum.\"\n\nI feel myself almost at the point of no return when we both hear Mom go into the bathroom. I know Page hears because she clenches me tightly and a little giggle escapes her mouth. We slow our movements, so that we aren't making much noise, but continue quietly. For some reason fucking with Mom right beyond the door turns her on wildly and her hand cups my balls as we continue. After several moments, there's a flushing sound followed by water running at the sink. Then the light goes out, and I expect to hear the door close.\n\nInstead I hear Mom mumble, \"I wish I could remember getting fucked twice in one day,\" which is followed almost instantly by the door closing.\n\nAnother giggle from Page is followed by encouragement, \"Why does my dirty brother like fucking me so much?\"\n\n\"Because you love it,\" I say resuming the pounding I'd been giving her before the distraction.\n\n\"You love it too.\"\n\n\"Fill me with it Ry. Pump it inside me.\"\n\nMy cock collides with her cervix on every stroke and I know she wants me to cum, but I haven't felt her climax on me yet. I don't know how she really feels about me messing with her butt, but she's had her fingers inside me, so I wet my pinky and slip just the first joint inside her.\n\nShe responds positively saying, \"Uf - oh - fuck - yeah - a little deeper.\"\n\nMoving it out and back in slightly deeper, I time moving it with my thrusts, all of which push her over the edge. The stream of utterings from her would make a sailor blush. Thick ropes of cum erupt within her as ripples of her orgasm pulse through her vaginal muscles. Soon the sounds become sloppy and wet as her fluid joins mine. I bury myself completely as I shiver to a stop. Her quimm is still quaking and as I wait for her to finish, I stroke her back and hips lightly. Finally we lie next to one another on the bed.\n\n\"I really do love you. I wish we could have had a wedding,\" I say.\n\n\"I'm glad you're okay and I love you more.\"\n\n\"How much more do you think?\"\n\n\"Enough to have your babies of course.\"\n\n<hr>To be continued. Let us know what you think. "
    ],
    "authorname": "MindsMirror",
    "tags": [
        "brother/sister",
        "brother-sister",
        "brother, sister",
        "politics",
        "siblings",
        "love",
        "romance",
        "espionage",
        "hacking",
        "suspense"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/page-ch-06"
}