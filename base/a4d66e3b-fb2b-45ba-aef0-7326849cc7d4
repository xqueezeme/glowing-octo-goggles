{
    "title": "Succubus Summoning 212",
    "pages": [
        "Darvill had never been afraid of exams. In fact, during his schooldays, before he'd learned of this parallel world of magic and daemons, he'd even grown to relish them. Exams cut through all the bullshit. Exams were remorseless pieces of paper. Exams didn't care about who you were, who your daddy was, or who your friends were. They didn't give a shit about your station. They didn't give a fuck about what your little clique said and thought.\n\nDarvill liked exams because he had control over the outcome. Ultimately that was what it was about\u2014control. He couldn't control who his parents were. He couldn't control where he came from. But exams, he could control them. Knowledge, preparation, hard work\u2014those were things he could control and exams respected them. Exams showed, unequivocally, where everyone stood in relation to everyone else. They took a group of people and churned them out as a ranked list.\n\nAnd Darvill always made sure his name was at the top of that list.\n\nWargsnouts College was no different. Sure, the stakes were higher. No-one got their limbs ripped off and devoured for getting a math question wrong in the mundane world, but the principles were still the same\u2014knowledge, preparation, hard work.\n\nSo when Darvill had found out about The Scrote's little surprise test he hadn't been fazed in the slightest. Truth be told, he relished it. The last few days had not gone well.\n\nNo, that was a massive understatement. The last few days had been fucking disastrous. So much for those plans of building a cabal to shake up the old order. He'd been arrogant and na\u00efve, in a world that laughed at arrogance and destroyed the na\u00efve.\n\nAt least it wasn't all for naught. He'd learn from this, had learned much already. He ruffled Calli-Scitu-Oc's eyestalks as the poly-Oc sat on his shoulder.\n\nBut the cost...\n\nHe grimaced at the thought. Dever, the others, gone. His friends\u2014dead or worse.\n\nNo, he mustn't dwell on that. Control the things he could control. Knowledge, preparation, hard work.\n\nNot everyone shared Darvill's phlegmatic attitude when it came to exams. Outside the test room he saw Rowling sitting at one of the tables with an untidy sprawl of notes and papers spread out in front of him. One of his succubi\u2014Verd\u00e9, the one with the green hair\u2014was sitting next to him and watching with a look of amusement on her face while he frantically shuffled through his notes.\n\nOne of Rowling's succubi...\n\nEveryone thought Rowling had somehow managed to contract a pair of succubi. Darvill knew differently. He'd counted five in the castle in hell. They weren't your regular succubi either. Darvill had done a little research on his return to the college. He wondered if Rowling knew what he'd contracted. He wondered if anyone knew.\n\nVerd\u00e9 glanced up at Darvill with bright green eyes. She was stunningly beautiful, but so were plenty of other women. And once you had plenty of power behind you, you could screw all the beautiful women you could possibly want... and not worry about them sucking your soul out in the process.\n\n\"Last minute revision?\" Darvill asked.\n\nRowling noticed Darvill and seemed both surprised and a little awkward when the other student sat down opposite him. Rowling was the sort that would feel guilty over what had happened, Darvill thought, not that he should.\n\nIf Darvill was a lesser person he supposed he could have held Rowling responsible for the deaths of the others, maybe even let a grudge fester while he secretly plotted revenge. Not that Darvill had the slightest intention of doing this. Wargsnouts was dangerous enough as it was without getting himself bogged down in senseless, petty feuds on top. They all knew what had happened to Emma Brennan.\n\n\"I wish I knew what this test was about,\" Rowling said. \"I heard something about attunement, but that could cover anything we've studied in the last year and a half.\"\n\nDarvill thought about Rowling. They had a lot in common. Rowling was outreach, like him. He'd come from a very ordinary background. He had talent. Darvill's original plan of a brand new cabal was in tatters and likely never to be mended, but the recent events had given him a fresh appreciation of just how dangerous this world was. Allies would be useful.\n\n\"We're on the fast track because we contracted our first daemons earlier than most other students. I imagine The Scrote wants to check we understand what those contracts mean.\"\n\nRowling looked sourly at his notes. \"I was kinda hoping we'd be taught this before they tested us on it.\"\n\n\"Daemonic contracts are the test,\" Darvill said. \"Look at the ones that came through.\"\n\nHe motioned over to a passing group of staff. As would be expected for a college like Wargsnouts, the staff were an eclectic bunch. High Magus R. L. Conley, the Magister of the Esoteric Conduit, stood out the most with a flamboyant costume of black robes with silver trim and elaborate puffs at the wrists. No-one dressed quite like the high magus. Rumour was he'd been consulted by a horror filmmaker for input on the costume of their satanic high priest villain, and they'd ended up rejecting his ideas for being too extravagant. A masked nihmiratt rode on his shoulders like a small child. Its green eyes shone behind its mask of human skin.\n\nAt the opposite end of the spectrum was the Cartifax of Hell-Dimensional Topology, Brion Jacks. The trim, bald-headed man was dressed in a white vest and jogging bottoms. He looked like he'd just stepped out of the gym rather than a lecture on the geography of hell. A pyramid of flesh with a mouth in the centre\u2014a minor nebrit\u2014sat on his shoulder and gnashed its teeth together.\n\nWalking with them was the treasury officer, Graeme Kennet. Kennet would have looked like a paunchy, middle-aged banker if it wasn't for the kappa-Oc perched on his head like a hat. It made the official look like an elderly punk rocker with long purple eyestalks for hair.\n\nIn such august company it would have been easy to overlook the fourth member entirely. Dr Will Pryce, the Zoomancer of the Cryptic Savagerium, was small, soft-spoken and innocuous. A ferocious-looking snikkersnakt prowled around his ankles.\n\nDarvill could see Rowling didn't get it. For someone supposedly that smart, Rowling could be incredibly dim sometimes. Darvill was about to give him a helpful nudge when Calli-Scitu-Oc gave him a warning pinch on the shoulder.\n\nYes, yes, rules and all that, Darvill thought. Each must walk their own path.\n\nConscious he was not understanding something, Rowling went back to poring over his notes.\n\nDarvill turned and spoke to Verd\u00e9 directly. \"Do you think he has anything to worry about?\" he asked.\n\nVerd\u00e9 contemplated his question. \"It's not his strongest area.\"\n\nHer answer sent Rowling into another frenzy of note shuffling.\n\nThe door to the test room opened and one of The Scrote's succubi called out Darvill's name.\n\n\"Looks like it's my turn,\" Darvill said. \"See you later.\"\n\nDarvill left Rowling to his frantic\u2014and unnecessary\u2014last-minute revision and walked over and followed the succubus into the test room. He was expecting to see The Scrote, or maybe even Dodgy Lutwidge if The Scrote couldn't be assed to give the test himself. Neither was waiting for him in the room. Instead it was two more of The Scrote's succubi.\n\n\"We're here to give you your test,\" one said.\n\nThe succubi did not look like your typical examiners. They looked more like high-class Vegas showgirls. Each wore a black velvet bodice that pushed up their breasts and displayed their cleavage to the maximum effect. These bodices were tightly laced together in a way that emphasised the gorgeous hourglass figures of their owners. Each succubus wore a black velvet skullcap that curled around their horns to form an elegant widow's peak, and was adorned with a long fluffy plume that was flamingo pink in colour. If Darvill had not been a student warlock at Wargsnouts he might have thought their devilish horns, wings and tails were part of the same costume.\n\n\"Where is Magus Stine?\" Darvill asked. \"I thought he was giving this test.\"\n\nDarvill was alone in the room with the three succubi. The only furniture was three plain wooden chairs.\n\n\"Our master does not wish to be bothered with such minor trifles,\" the first succubus said.\n\n\"He sent us to carry out the test on his behalf,\" the succubus to her right said.\n\nThe succubi standing before Darvill were a little underdressed compared to normal. In spite of their reputation, the succubi that accompanied The Scrote around the college were usually tastefully dressed in sumptuous black dresses that brought to mind exotic ladies of the night from period dramas. These succubi had done away with those dresses. They'd done away with everything below the waist as it happened. Aside from the fancy black stiletto-heeled boots on their feet, there was nothing covering their crotch and long, lithe legs. The hairless folds of their vulva were completely exposed, flaunted even.\n\nThe exception to this was the succubus who'd shown Darvill into the room, and this was only temporary. As soon as the door was closed behind them she peeled off the little black miniskirt she was wearing and draped it over the back of a chair.\n\n\"You don't mind?\" she asked Darvill.\n\nHer exposed nether regions were as pink and shiny as the other two succubi.\n\n\"Not at all,\" Darvill said. \"I imagine clothes must feel inhibiting to beings of your nature.\"\n\n\"They are an irritation,\" the succubus in front of Darvill said, \"but a necessary one when going out into the human world. Our unclothed forms can be quite distracting for the weaker willed.\"\n\nShe pursed moist red bee-stung lips and placed a foot on the seat of the chair facing Darvill.\n\n\"I hope we're not affecting your concentration,\" she said.\n\nDarvill simply smiled. \"A warlock should be above such distractions.\"\n\nThe succubus was satisfied by his answer. She sat down in the chair opposite and crossed her legs. Her attitude shifted from playful seduction to business. She motioned to the chair facing her. \"Take a seat.\"\n\nSo, an oral examination, Darvill thought. He used to dislike them as they forced person-to-person interaction. Practise made them easier.\n\nThe succubus who'd shown him in took the remaining chair and sat facing him to his left. That left nowhere to sit for the third succubus. She stood at the right shoulder of the succubus sitting in front of him.\n\nThe succubus sitting in front of him\u2014Darvill presumed she'd be the one giving the test\u2014reached under the chair and picked up a clipboard.\n\n\"Let's get the preliminaries out of the way,\" she said. \"You are Evan Darvill, correct?\"\n\nDarvill nodded his head.\n\n\"And you're outreach?\"\n\n\"Yes. I am the first potential warlock of my line.\"\n\n\"Tell us about your daemon.\"\n\n\"Their name is Calli-Scitu-Oc. They are a poly-Oc from the Circle of Greed. I summoned and successfully contracted with them on June 3rd.\"\n\n\"Poly-Ocs specialise in knowledge acquisition. Was it a conscious decision on your part to align yourself with the Dominion of Greed?\"\n\n\"Yes?\"\n\n\"Why?\"\n\n\"At the time I thought it best suited my overall aims and ambitions.\"\n\n\"Which are?\"\n\n\"Power, or more specifically\u2014knowledge. Knowledge allows one to both obtain power and keep it.\"\n\n\"You're very ambitious,\" the succubus said. \"We can smell it.\"\n\n\"It excites us,\" the succubus at her shoulder added.\n\n\"How far would you like to go? A position at this institution, the Shadow Council... further...?\"\n\n\"Maybe,\" Darvill replied. \"But that's a long way off. First I must traverse the path from student to master. Then we'll see. Positions of true power and influence are not given out, they must be worked for and earned.\"\n\n\"And that's it, you have no other desires?\"\n\nAs the succubus sitting down in front of Darvill asked the question, the other one standing at her shoulder ran her tongue around her luscious red lips. Her glittering black eyes were fixed on Darvill as she inserted a finger in her mouth and sucked. The finger, moist with her saliva, went down to the shadows between her legs.\n\n\"You don't need to do that,\" Darvill said. \"I know what's going on here.\"\n\nThe lead succubus arched a pencil-thin eyebrow. \"Really? And what do you think you know?\"\n\nDarvill glanced at the standing succubus. \"I know she's trying to tempt me. I also know she's not using the full extent of her succubus abilities. And I also know why.\"\n\nThe two succubi shared a glance. \"Do tell,\" the lead succubus said.\n\n\"There are seven circles of hell, each corresponding to a frailty of human nature, otherwise known as a sin. When a warlock successfully contracts with their first daemon they align themselves with the circle the daemon comes from. Beginning warlocks mistakenly believe this circle represents their strengths. It doesn't. It represents their weakness.\"\n\n\"Go on,\" the succubus sitting opposite said, her face a perfect unreadable mask.\n\n\"The first daemon does not come to us out of desire to serve or be our familiar, it comes\u2014drawn by the vulnerabilities it senses in our character\u2014to take our soul. That is what daemons desire\u2014souls. They serve us because it gives them opportunities to harvest souls from the earthly realm, a plane they cannot otherwise reach, but only if we prove ourselves to be sufficiently strong of mind and discipline. A weak warlock is of limited benefit to a daemon.\n\n\"The first challenge every would-be warlock faces is to prove themselves to their daemon. They must demonstrate they have the strength of will to overcome their baser desires. And it is not just the one circle, they must show they are able to resist the temptations of all seven. Only then will their daemon see them as a potential future master rather than a soul to be claimed. Only then can the warlock open the way to mastery of the dark arts.\n\n\"Which brings us to you,\" Darvill said to the two succubi in front of him. \"You are succubi, representatives of the Circle of Lust. Not only are you here to confirm we understand the true nature of the bond between us and our daemon, Magus Stine has also engaged you to test we are able to resist the temptations of the flesh.\"\n\nDarvill hadn't finished. He slotted together the final piece.\n\n\"From your costume and your pink plumes I can deduce you are Bedmistresses from the Palace of Infernal and Iniquitous Pleasures, a powerful order devoted to the mastery of the arts of seduction, manipulation and sensual ecstasy. If you were to draw upon your full repertoire of succubus charm abilities I doubt any student would be able to resist them.\n\n\"However, you won't and the reason you won't use the full range of your considerable talents is because the test must be fair. If the student succumbs, it must because of their own flaws rather than the overwhelming temptation of a daemon far beyond their level.\"\n\nDarvill turned his gaze to the succubus standing at the shoulder of the lead succubus.\n\n\"I imagine being restricted to using only a small fraction of your considerable seductive appeal must be incredibly vexing. You have my sympathies,\" he said.\n\n\"I can show you more,\" the succubus replied. \"A lot more.\"\n\n\"Maybe later,\" Darvill smiled. \"After we've established some proper ground rules.\"\n\nAnd a cast-iron safeword, he thought to himself.\n\nHe turned his attention back to the others.\n\n\"So, as much as I'd like to see the three of you put on a sexy show for me, we all know it would be a waste of both your time and mine.\"\n\nHe gave them all a rakish smile. Now that was how you ace a test.\n\n\"Very impressive,\" the sitting succubus said. \"More than a few seventh year students don't attain this level of understanding. Some warlocks never gain it.\"\n\n\"This one is cocky,\" the succubus standing at her shoulder said.\n\n\"I prefer to think of it as being confident in my own abilities,\" Darvill said.\n\n\"This one could go far,\" the first succubus said. \"Maybe very far indeed.\"\n\n\"I hope so,\" Darvill said, \"Although I'm aware there's still much for me to learn. Walking the path will require discipline and hard work.\"\n\nHe affectionately ruffled the eyestalks of Calli-Scitu-Oc perched on his shoulder.\n\n\"You are partially correct on what this test is about,\" the first succubus said. \"It reflects poorly on my master if few of his students survive to become full-fledged warlocks, and there have been an unacceptable number of losses in the last few weeks. However...\"\n\nHer black eyes glittered malevolently in the midst of her otherwise heart-achingly beautiful face.\n\nBefore Darvill could react, the succubus on his left leaned forward and snatched Calli-Scitu-Oc off his shoulder.\n\n\"...this is not the only purpose of the test.\"\n\nDeprived of his daemonic familiar, Darvill went for his knife. At the same time, the succubus sitting opposite him tapped the tip of her tail on the floor and an esoteric circle surrounding his chair lit up with spectral white light. A circle of subdual Darvill realised just as he was slammed back down on the chair as if gravity had increased tenfold around him. These circles were usually used to detain troublesome warlocks and other practitioners of the dark arts.\n\nTo his left the succubus pressed the squirming poly-Oc down in her lap. She flexed her hips and let out a little erotic sigh as a swirling pink translucent globe swelled up and enveloped the struggling daemon. A change came over the daemon. Its eyestalks stopped thrashing about and it floated languidly within the globe of pink light.\n\nThe succubus turned cold black eyes to Darvill. \"You need not worry about your little pet.\"\n\nShe pressed her hips up against the ball of energy and her heavy eyelids fluttered as she let out another erotic moan. The daemon within gave a little shudder of pleasure and its eyes blinked slowly.\n\nThe succubus smiled down at the daemon and stroked the sphere of pink light. \"As you can see, they're totally happy within my little bubble of bliss.\"\n\n\"What is going on here?\" Darvill demanded.\n\nHad he been too cocky? Were they trying to scare him as punishment for showing off?\n\nThe succubus sitting in front of Darvill glanced up at her companion. The other succubus loosened her bodice and turned it down to expose the firm pink mounds of her tits. She plucked a long pink plume from the back of her costume and ran her fingers through the fronds as though she was unsheathing a sword.\n\n\"I do believe you challenged me to show you more,\" she said.\n\nShe stepped in front of Darvill and stroked the feather against her body in a slow, sensual dance that showcased her long lissom legs and the firm, inviting curves of her chest and ass to devastating effect. No human exotic dancer could come anywhere close. Even though Darvill knew this was part of a spell to mesmerise him, it was still a battle to keep his thoughts clear and unclouded.\n\nShe walked around the edge of the circle. She caressed the side of Darvill's cheek with the tip of the plume. His skin tingled where the feather brushed against him and he felt a creeping lassitude spread out from the point of contact.\n\nHe squirmed ineffectually against the force pinning him to the chair.\n\n\"This is pointless,\" he said. \"It's not a test if she coerces me. There is no succumbing to temptation if she takes away my free will with her charm magic.\"\n\n\"Test is over,\" the succubus walking around him said. She tickled the back of his ear with the plume and the hairs on the back of Darvill's neck stood up as a pleasant tingle ran through them. \"Now it's playtime.\"\n\n\"The warlock world is a dangerous one,\" the succubus sitting in front of him explained, \"full of intrigue and deadly feuds. Our master gave us two tasks. The first is to prod novice warlocks down the correct path. The second is to identify novice warlocks who might one day grow into threats to our master's position.\"",
        "\"Identify and eliminate,\" the succubus circling him said. She tickled Darvill's nostrils with her plume and his nose was filled with exotic, soporific perfume.\n\n\"You are clever and ambitious,\" the sitting succubus said. \"Given time you could develop into a warlock powerful enough to challenge our master and others of his cabal.\"\n\n\"Unless we chop you down now, while you're still weak.\" The other succubus stroked her plume against Darvill's crotch and he felt a throb in his loins that had nothing to do with his own desires. \"Chop you down before you have a chance to grow into a more troublesome opponent.\"\n\nDarvill felt vertiginous reeling fear. Not a test. Not a hazing. An execution.\n\nAnd he was outclassed. Even had he not been trapped within the circle of subdual, this trio were far beyond his level.\n\nHe was also without his daemon. A glance to his left and he saw the third succubus had both hands on the pink globe in her lap. She writhed, flexed her hips and pressed her sex to it. Bubbles rose in the shimmering pink sphere and the poly-Oc trapped within gave a weak, blissed-out shiver.\n\nDarvill attempted to recite the standard emergency dismissal every student was taught. Rather than taking flight from his tongue, the words flopped, soundless, and were absorbed by the energies of the circle.\n\nFigured. There would be glyphs in the design that prevented the casting of any spells.\n\nThe standing succubus completed her circuit and stood before him again. Eyes smouldering with lustful fires, she stepped into the circle, pushed his legs apart and went down on her knees between them. She reached up, popped the buttons of his shirt and then slithered up against him. The soft fleshy mounds of her tits rubbed against his exposed chest. Wherever her skin came into contact with his it left behind a pleasant tingly sensation that left his skin craving more. She slithered up until her face was level with his.\n\n\"You don't have to be afraid,\" she whispered. \"Succubi are the gentlest assassins. Our victims depart this plane in a haze of unparalleled sensual bliss.\"\n\nShe twisted in his lap and rubbed the swell of her ass against his crotch in a final lap dance. The wriggling pressure sent blood surging down into his cock and it rose up against the fabric of his underwear.\n\nDarvill was not ready to depart this plane just yet, in a haze of bliss or otherwise. The circle prevented the casting of new magic, but Darvill still had the protective anti-lust wards he'd carved into his arms after following Rowling's succubi into hell. Their power had faded as his flesh had healed, but they were still there, waiting to be activated. All Darvill had to do was bend one finger back to his palm, and...\n\nZap!\n\nThere was a crackle of energy, the acrid stench of burnt flesh and the succubus jumped out of his lap like an electrocuted cat.\n\nNot enough, Darvill thought. Not powerful enough. Flesh wards were powerful, but only when the cuts were fresh and bleeding. His had had two days to heal. The protective aura they granted him was as brittle as an eggshell.\n\nThe shocked succubus turned to him. With her red eyes and face contorted in rage her daemonic nature was fully visible.\n\n\"How dare you,\" she hissed.\n\nHer black nails were long and pointed like claws. For a moment Darvill thought she intended to tear out his throat with a swipe of her wickedly-pointed nails.\n\nBetter that than her claiming his soul, he thought.\n\nThen the daemon regained her composure. Her face softened back to its original exquisite beauty.\n\n\"No, I must remember the teachings of Mother Diabolicia,\" she said. \"Pleasure is the one true path.\"\n\nShe gestured with her hands and Darvill's arms were yanked behind the chair and his wrists bound with tethers of shadow. She placed a palm under her chin and blew him a kiss that expanded and surrounded Darvill in a warm cloud of scented air. His lust wards crackled and shorted out. The warmth settled in Darvill and concentrated in his loins. An erection rose unbidden and tented the front of his trousers.\n\n\"Much better,\" the succubus said.\n\nShe stepped inside the circle and ran her fingers lightly up the underside of Darvill's bulge. His manhood twitched and he felt slick wetness on the inside of his underwear.\n\nNo, the brutish chavs he'd been forced to grow up with were slave to their genitals. Not Darvill.\n\nThe succubus slithered down between his legs. Eyes fixed on Darvill, lips turned up in a sultry half-smile, she found Darvill's fly and unzipped it. Her hand reached inside and extricated Darvill's erection.\n\n\"Yum,\" the succubus said.\n\nShe tilted her head down. The helmet of Darvill's cock was enfolded by her hot tongue. His dick twitched again. Clear pre-cum oozed from the tip. The succubus lapped it up and murmured her pleasures.\n\n\"You're a good student. You deserve my luscious cunt.\"\n\nShe stood up and sat in Darvill's lap with her legs astride him. Her exposed vulva was puffy and moist with desire. Darvill felt the heat spilling out of her as she pressed the dripping flaps up against the swollen head of his erection. His cock twitched eagerly. It wanted to be inside.\n\nDarvill didn't. He knew what she was and what she'd do.\n\nHe was finding it harder to think. His thoughts were slow and sluggish as if wading through thick fog.\n\nSuccubus charm magic. He was lucky he could still think at all.\n\nThe succubus put her arms on Darvill's shoulders.\n\n\"In you go,\" she said.\n\nThe plump lips of her sex parted around the head of his cock and she slid down him like a pole, slowly easing him up into her warmth. And she was warm, hot even. And wet. And tight. Really really tight. She took him all the way inside her and her fleshy walls closed around his penis like a fist.\n\nDarvill let out a surprised gasp.\n\nThat felt... incredible.\n\nOf course it felt incredible. She was a succubus. Sex was how they cracked men open to suck out the soul within.\n\nCome on, focus! he yelled through the haze filling up his skull. Think! You're too smart to end up spurting your life and soul away up a succubus's cunt.\n\nHe caught the back of his shoe on the edge of the chair leg and slid it off.\n\nThe succubus kissed him lightly on his lips, his chin, his cheeks, the tip of his nose. Her perfumed breath excited his nostrils and thickened the fog blurring his thoughts. She moved her hips up and down sinuously, adding a little rotation at the end that dragged her vaginal walls against his foreskin and sent streamers of pleasure tickling down his shaft.\n\nDarvill kicked down at the floor, stubbing his big toe against the hard stone floor and sending a bolt of pain shooting up his leg. While the pain was good for shaking him out of the pleasant fug the succubus was smothering him in, it wasn't the reason he'd done it.\n\nThe succubus sighed and moaned in pleasure as she moved against him. Her wet sex slid smoothly up and down Darvill's erection. As his cock pushed up deeper inside her it came up against a soft knot of flesh that shuddered wetly in unwholesome anticipation.\n\nDarvill banged his foot down hard on the stone floor, breaking his big toe and driving the nail back through his flesh. Blood oozed out and soaked the tip of his sock.\n\nThe succubus continued to swing her hips back and forth. Her sumptuous sex gripped and squeezed him. Pre-cum flowed out of his twitching member in a constant stream. An inner maw at the back of her sex sucked hungrily at his glans with each stroke.\n\nDarvill kicked down at the hard stone floor.\n\nMore blood. He needed more blood. His sock was already saturated and dripping, but he needed more. Darvill specialised in blood magic. A trickle of his blood over the line would be enough to break the circle and negate its hold on him.\n\nHe smashed his foot down again.\n\nHot blood was sticky between his mangled toes. It dribbled from his saturated sock and splashed onto the floor.\n\nMore. He needed the blood to flow.\n\nBefore...\n\nThe succubus gave a louder sigh and sank all the way down in his lap. Her inner maw parted around the outside of his glans and she engulfed Darvill's cock into a soft, muscular organ lined with hot juices. That heat was transmitted to Darvill's member, and from there flowed down into his balls.\n\nDarvill's foot stopped. It hovered, trembling, a few inches off the floor.\n\nThe succubus wrapped her arms around him and pressed her naked breasts against his chest. She kissed his cheek and then wormed her hot, dripping tongue into his earhole.\n\n\"It's over,\" she whispered. \"Just let go and enjoy the final pleasures I can give you.\"\n\nThe walls of her inner sex wriggled lewdly around Darvill's throbbing member. The muscular walls gave him a gentle squeeze.\n\nDarvill's whole body trembled on edge. His balls felt swollen, bloated and itchy. He ached with the need to empty them into her.\n\nNo. He was more than this. Could be more than this.\n\nThe succubus sucked on his earlobe as she writhed against him. Her scent filled and overwhelmed his senses. Darvill's legs trembled and his toes curled as he fought to resist the urge to come.\n\n\"Still trying to hold on?\" the succubus breathed in his ear. \"Time to end this.\"\n\nThe walls of her inner organ softened and then clenched around Darvill's cock. He felt a strange, irresistible drawing sensation. A dam broke within him and his thoughts were swept away by the force of the climax. He let out his breath in a pent-up gasp. His feet drummed against the chair legs and his hips bucked as emptied great throbbing gouts of semen inside her.\n\n\"Yessss,\" the daemon hissed.\n\nThe same exultant cry echoed through Darvill's thoughts. Trying to hold it in for so long seemed so foolish now as he gushed in a fountain of bliss.\n\nThe succubus's sex clenched and throbbed around his manhood as she swallowed his issue with muscular gulps.\n\nMore. He wanted more of this. Wanted to give her more. Wanted the feelings, the sensation, the pure release of unrestrained rutting to run on and on and on.\n\nShe leant into him and he was enveloped by her heat. She unfurled black bat wings and wrapped them around both him and the chair. Within them her sex continued to clench, throb and gulp. Slowly, with Darvill completely drowned in sensual ecstasy, she pumped out first his semen, and then his life and soul.\n\nThen, the feeding over, she drew back her wings and stood up. She kissed her finger and placed it against the withered lips of Darvill's shrivelled-up husk.\n\n\"You were a good student,\" she said with a luscious pout.\n\nThe other succubus popped the bubble of bliss she was using to imprison Darvill's daemon. The poly-Oc stared mournfully at Darvill's wizened remains.\n\n\"Time to look for a new master,\" the other sitting succubus said with a malevolent smile. \"One with the wisdom to hide their strength from those who'd see it as a threat.\"\n\nThe poly-Oc glowered at them before vanishing with a pop of displaced air as it returned back to its own dominion.\n\n* * * *\n\nThe door to the examination room opened. A succubus stepped outside and looked around the room before her gaze alighted on Phil.\n\n\"Phil Rowling?\" she said. \"It's your turn.\""
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "demon",
        "warlock",
        "magic",
        "draining",
        "bondage",
        "femdom",
        "feathers"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-212"
}