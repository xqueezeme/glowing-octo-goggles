{
    "title": "The Oathkeepers Ch. 05",
    "pages": [
        "Aegis stood watch over Paragon and Zoe the rest of the night. Paragon had smirked as he climbed back into bed with Zoe. Aegis stood sentinel by the door and forced himself to watch as Paragon wrapped his arms around her. She'd whimpered in her sleep and nuzzled her face into his arm. Her gentle sigh had pierced him. He was such a fool. To think he could ever compete against Paragon. The Gilded knew how to wrap his will around anyone. Like so many before, Zoe would become putty within his fingers. She already melted against him. \n\nStill, he'd forced himself to watch as the sun gently filtered into the room and Paragon had slid down the bed and awoken her softly with his tongue against her sensitive folds. Her body had flushed with arousal, her abused nipples standing dark against her pale skin as she arched in the bed. Her soft, mewling cries of pleasure had sent his cock jerking in excitement even as his vision narrowed in jealousy as he watched. Then she'd grabbed at Paragon's golden horns, the true mark of the Gilded male. The highest of Oathkeepers. Those horns told everyone, even a human female, Paragon's status. She ran her fingers along them, tugged them so they brushed against her belly as she began to writhe with her orgasm. She threw her head back, her cries long and wailing and her throat so tempting. Aegis ground his teeth seeing the marks from Paragon's hands though. Dark, finger shaped bruises circled her throat like a collar. \n\nShe'd collapsed back into the bed, spent and satisfied for the moment. Paragon had glanced back to him then. That same proud smile on his face as he caught Aegis's eye. 'See,' he seemed to say. 'She's mine.' He crawled on top of her, eased his cock tenderly into her trembling entrance. And they'd made love. Paragon had moved slowly, gently easing himself into her and with each long thrust she'd arched to meet him, soft moans again falling from her lips. Her hands traced his body, hungry and marveling as they touched the base of his wings, pulled his face to hers in a passionate kiss. \n\n\"My love,\" Paragon whispered into her ear as he took her. \n\n\"Yes,\" she moaned. She arched, grinding her hips against him.\n\n\"Is this what you want?\" he continued.\n\n\"Yes,\" she cried as he thrust deeply and began to pick up the pace. The obscene slapping of skin against skin left Aegis's throat clenching. Every thrust from Paragon, Zoe met with high whine of need. \n\n\"Who do you belong to?\" Paragon rasped as his climax built.\n\nShe bucked underneath him, again grabbing at his horns to force his face against her nipples. He suckled at them and her breaths came fast and urgent. As they again climaxed together she tugged at his horns, pulled his face to hers and bit at his mouth, kissing him hungrily as their bodies pulsed against each other. She flopped beneath him, arching and jerking her hips as she whined into his mouth.\n\n\"You, I belong to you. My body is yours,\" she panted as she rode the waves of Paragon.\n\nAnd then finally her eyes flipped open. Those dazzling blue depths opened and fell on Aegis. She held his eye as she nibbled at Paragon's ear and ground her spent body against the Gilded Oathkeeper. \"I'm yours,\" she whispered over and over with her lips on Paragon's ear, but her eyes on Aegis. \n\nAegis trembled, confusion and lust fluttering within him. He wanted to swoop across the room, throw Paragon from Zoe. Take her for himself. But a millennia of Oathkeeper breeding and principles held him frozen in place. This was the way of things. The Gilded were exalted. To disobey was to be a cursed. An Oathbreaker. So, he stood, tried to control his throbbing cock and aching heart. \n\n~~\n\nZoe gripped Paragon's twitching body to hers. His wings fluttered above them, sending a soft breeze against her face. Aegis stood across the room. His shadowy presence loomed. Before she'd thought him her shield, a safe place. She understood now he wasn't. He couldn't protect her from man that engulfed her now. So she stared at him, hoped he could feel her disgust. Her rejection. Aegis had saved her from death once. But he couldn't save her from Paragon. \n\nBut she saw in his dark eyes his lust. He wanted her. Wanted her so badly that his wings stretched anxiously behind his back. His hands clenched at his sides and his neck strained as he clenched his jaw. As Paragon ran his lips along her neck, murmuring and coming down from his orgasm, Zoe remembered the feel of Aegis's lips on hers. So hungry and surprisingly soft on that severe face of his. She felt that twinge of arousal as she stared at Aegis. Though she hated him from the moment he'd stepped from her and left her alone with Paragon last night, her body was still drawn to him. Curious and conditioned to want his protection. He was the only other Oathkeeper she'd spoken to at length. The one who hovered at her side and treated her gently and possessively placed his hand on her back to warn others away. \n\nUntil Paragon arrived at least. And then Aegis dropped his head in submission and retreated, leaving her to the cruel and ravenous hands of the Gilded. With a deep sigh Paragon lifted his heavy body from hers. His slick cock slid from her and she snapped her eyes back to him and let out a little whine of protest. As expected, he grinned, his eyes intense as he took her in. He set a hand on her cheek, ran it down her neck and gave her a playful squeeze. The bruises from the night before ached under his fingers and she bit her lip, dropping her eyes in a show of surrender. \n\n\"Good Zoe,\" he growled as he planted a last, possessive kiss on her forehead. He rolled from the bed and playfully grabbed at her, sweeping her up and carrying her towards the bath. \n\nShe avoided Aegis's eyes. He still stood mute at the door and it seemed Paragon was intent on ignoring him. Paragon stepped into the heated bath and dropped her in. Her sensitive skin screamed and she yelped and floundered for a moment. Paragon chuckled and grabbed up a rough loofa. He stood in the middle of the pool and watched her, amusement in his golden eyes. The water came up to a bit above his waist but well above her chest. She stood on tip toes and brushed at her sweaty face. Paragon's hands caressed her hair, dipping her back slightly to soak her head. \n\n\"Like smoldering gold,\" he murmured as he fingered her wet hair. \n\nHe handed her the loofa. She dipped it into the water, ran it over his chest. He smiled down at her. No one could say she was a slow learner she mused as she washed the body of her captor. His skin shone glistening and golden as the rivulets of water rand down his chest. She scrubbed at his chest, moved slowly around him to his back. His wings were extended above them, the tips just barely touching the water and she ducked under the. She ran the loofa between the large muscles, dipping her hand down to circle his waist. She knew what he wanted. She leaned into him, pressing her breasts against his lower back, molding her body against his huge one. Standing in the pool made their size difference so much more apparent. She pressed her belly against his muscled buttocks, knowing her soft, slick skin was just what he wanted. She snaked her hands up and around his waist, reaching up to brush against his chest. \n\n\"Zoe,\" he murmured and grabbed up her hands. His wings flapped, sending ripples through the water. He released her hands and stepped from her. \"Relax today. We have plans tonight,\" he rasped as he stepped from the pool. He glanced back to her, his eyes dark with restrained lust and his cock already swelling again. \n\nShe watched him go. The hatred she'd held down began to bubble to the surface. Untrained human mind. Well, she wasn't SO untrained. She was used to holding down her own feelings. She was used to men taking what they wanted. They were so simple. She could give Paragon exactly what he wanted. It was only survival. To tell him what he wanted to hear. To press herself against him. It was just a body. Her mind, her self she kept tightly wrapped, away from him. \n\nShe laid back in the heated pool, letting herself float as she heard him pad back across the chamber.\n\n\"See that Zoe is cleaned up for the day. I'll be showing her off at the gala in the Oasis this evening,\" he said lightly to Aegis and then the door clicked softly behind him and the room was silent. She knew Aegis still stood, stoic and unmoving at the door. Her own private black hole. She ignored him, let her body and mind drift in the pool.\n\n~~\n\nWhile Zoe floated in the bath Aegis slipped out to order one of the Garnets to send for an Ivory to bring Zoe some dresses and other things for the evening. A couple Ivories had arrived, made the bed, laid out several dresses in shades of gold, set some delicate looking vials and containers on the little vanity at the corner of the room and departed. Still Zoe floated within the pool. Aegis furtively peeked in a couple times, making sure she was alive. She was. And she ignored him.\n\nHis eyes grew heavy as he waited for her, he hadn't slept in over 24 hours. His self-imposed punishment, standing watch over Zoe seemed the least he could do for his transgression the day before. He couldn't regret it though. If he went the rest of his life, he could still pull up the feel of her warm lips on his. The tentative feel of her fingers running up his neck. \n\nZoe's coughed, snapping him back to the present. She stood, swimming in a large towel, her golden hair falling in dripping waves over her shoulders. Her face was bright red form her bath, she was still acclimating to the heat it seemed. \"I'm going to dress. Do you have my next dose?\"\n\nHe cleared his throat and nodded, unsure if he could trust himself to speak yet. The dark bruises on her neck defeated him. She turned and padded across the room to the dresses laid out. He followed her with his eyes and as she dropped the towel to the ground he sucked in a breath. Her ass was red and he swore he could still see the shape of Paragon's hand. He turned away and moved to the fireplace where the vials of pills from Keeper still sat from the day before. He dropped the next dose into his hand and set it on a plate. Considering the breakfast, he piled it with a few of the items he'd noticed her particularly enjoying the day before. \n\nHe sensed her move back across the room. She wore one of the day dresses, tied with a thin cord at her neck, her arms shone pale and bare in the morning sun. He retreated from her. Throwing open the terrace doors and stepping outside to give her space. Her mind spiked at him. Her anger rippled far below, but closer to the surface (and much more painful to feel) was disappointment in him. She distrusted him. Held him now at arm's length. And she was right to. Paragon's words from the night before needled at him. Any mistake from Aegis, Zoe would suffer from.\n\n\"I'm going to go read,\" she said stiffly, moving onto the terrace behind him. \n\nHe turned to her, trying to think of something to say to comfort her. But her eyes warmed him off. She didn't want his comfort. She held the plate of food though, gripped the oversized plate in her small hands. She paused, swept her eyes over him and then her brow furrowed. \"Did you even sleep?\"\n\n\"No.\"\n\nHer expression softened slightly. \"Well, go take a nap then. I imagine we'll need our energy for this evening. The gala,\" she spat the last word like it was a curse and brushed past him into the small passage to her library. \n\nAegis turned back to the railing, looking out over the Boundless Abyss. He stared daggers at the sea and gripped the rail so hard he felt the stone crack beneath his fingers. With a growl he spun from the view and stalked back into the chamber. Just a short nap. She was right. He'd need to have his wits about him tonight. Knowing Paragon, his punishment of the two of them wasn't over. Not by a long shot.\n\n~~\n\nZoe lost track of time. She'd curled in the soft leather chair in her little den and fell into one of the hundreds of books that filled the shelf. It was only when her stomach began to rumble that she realized hours had passed. The longest she'd spent in peace since she'd arrived. Was it only two days ago? She crept from the room, finding the sun sitting much lower than she'd expected. It had to be inching into afternoon. As she exited the little passage she found the air heavier, hotter and realized there had to be some sort of atmospheric scrubbers in her little den that made it more comfortable for her human body. Paragon thought of everything it seemed.\n\nPadding into the main chamber she shuffled to a stop, surprise niggling at her. Aegis lay stretched on his side on the chaise. His wings were tucked tightly at his back but his huge body lay limp in sleep. Strange curiosity pulled her toward him. She'd never seen him so relaxed. So...unguarded. Her guard. His face was now slack, one of his powerful arms now hung, sweeping the floor. She stood over him, running her eyes over his gigantic form. And then she thought of how much she hated him. She pulled her anger up, held it tight against her heart, let it swell and swell until she felt it would overwhelm him. And then she crouched and pointed it at him like a spear. \"I hate you,\" she whispered, her face only a breath from his. \n\nAegis's eyes flipped open and Zoe nearly fell backwards in shock. It had worked. 'Untrained mind' her ass. His intense black eyes drilled into her, taking only a second to focus on her face. He sucked in a breath and sat up. \n\n\"How long did I sleep?\" he gruffed as he rubbed at his head. She hoped she'd given him a hell of a headache. \n\n\"It's midafternoon,\" she said as she stepped back from him. He rose, continuing to rub at his head as he cast around. Did she sense some chagrin in him? He towered over her as normal and she suddenly remembered melting into his arms, finding his full lips. A place she'd thought could give her some comfort. Some sense of safety in this alien place. How wrong she'd been. \n\nShe turned from him and grabbed up one of the large pastries from the platter of magically-replenished food that always seemed to appear when her back was turned. Munching on it as she dropped into one of the chairs across from the fire. Aegis stretched, turning in a circle and straining his neck to look out the terrace doors. \n\n\"The gala will begin in a few hours. Should I send for some Ivories to help prepare you?\" he asked, finally turning back to her. He avoided her eyes now. Stepped around her like she was poisonous. \n\n\"What will this gala be like?\" she asked as she chewed.\n\n\"All the high colors will be there. There are usually performances, revelry. Do you not have galas?\"\n\n\"Not any I'm invited to,\" she shrugged.\n\nHe finally stopped his pacing and turned back to her, his eyes hooded. \"It is in the Oasis.\" He dipped his head as he held her eye. \"You understand?\"\n\nShe blinked at him and the vision of the mating couples from the day before flashed. She understood. Zoe swallowed as she met Aegis's eye. \"Yes.\"\n\nHe gritted his teeth and looked away. Zoe wanted to scream at him. There was so much unspoken. She'd known this man for just over a week. Days spent on his ship, in this alien palace. He treated her now like a stranger. Was it shame? Had he been warned off by Paragon? Whatever feelings he might have felt for her he'd pushed down. His loyalty would always be to Paragon. She looked away from him. She heard him walk to the door, murmur some words to the waiting guards. Not long after two Ivories slipped into the room. Zoe stood to meet them. She studied their lovely alien faces. So close to human, and yet not with their pointed ears and feathered hair. She let them lead her to the vanity in the corner. \n\nGently they murmured to her as she ran her fingers over the dresses laid out. Finally she chose one that dripped with golden gems. Though the chest dipped low, there was a detachable jeweled collar that would cover her throat. Feather soft fingers helped her into the dress, tightening it so it clung to her wide hips and perky breasts, though a deep slit ran all the way up to her waist. The Ivories angled her towards the vanity then. As she sat and let them finger her curls she caught Aegis's eye in the mirror. As always, he watched. She held his eye as they twirled her golden locks and pinned a few strands up with more golden clips. There could be no doubts she was Paragon's after this...\n\n\"Do you have makeup?\" she asked suddenly. \n\n\"Make up,\" one of the Ivories pondered, turning the words over in her mouth.\n\n\"Yes, to cover flaws, to make your eyes shine or make your lips more full?\"\n\nThe two giggled and one ran her fingers down Zoe's cheek. \"You have no flaws human-Zoe. Your skin is like the most delicate Ivory. Your eyes like would make the proudest Sapphire jealous...\"\n\n\"And my ass?\" Zoe snarked.\n\nThe two fell into hiccupping laughs, clinging together as tears pricked their eyes. Zoe found herself smiling at them. And then her eyes again flicked to Aegis in the mirror. He grinned as well and she swelled slightly. His face so rarely broke into smile. \n\n\"Perhaps you have a bronze ass?\" one of the Ivories finally giggled as they pulled Zoe back to her feet and spun her around, inspecting her. One glanced to Aegis. \"What do you think Warden Aegis? Will Paragon be pleased?\"\n\nZoe's throat tightened and she felt suddenly embarrassed. She blushed as she met his fathomless black eyes.\n\n\"Yes,\" he grunted. \n\nThe Ivories smiled in pleasure and slipped from the room, bowing to Aegis as they went. And then they were alone again. Zoe stood awkward in the middle of the room. \n\n~~\n\nAegis felt Zoe's anxiety. The Ivories had helped ease her mind a bit, but now she stood unsure. Her eyes darted around the room. Looking everywhere but at him. Paragon's words continued to pound in his ears. 'I will take it out on her skin.' Aegis could not go to her, could not let himself slip his hands around her like he so wanted. She finally turned her eyes to him, they were wide with barely controlled fear. \n\n\"Are you ready?\" he asked softly.\n\n\"What will he do to me? Make me do?\"\n\n\"Anything he wants,\" he said and finally was defeated. He took a step towards her. \"You must not fight him. It only excites him more.\"\n\nShe clasped her hands. \"I know.\"\n\nAegis pushed open the door for her. She set her shoulders, lifted her head slightly and stepped into the hall. \n\n~~\n\nAegis led Zoe into the Oasis. Already it was filled with hundreds of flitting Oathkeepers. He glanced down to her, curious how she saw their glittering world. Only the dark, jewel toned colors were invited tonight. For aesthetics. The pales Ivories though flitted about as servants, their delicate, human like skin shone in stark contrast to the bright colors of the others. And then Zoe beside him, she would shine the brightest, as Paragon intended. Murmurs followed them as they stepped into the large garden. Zoe's eyes traveled up, up the tiered space. Paragon sat on a floating dais in the center, surrounded by his favorite Wardens. His eyes fell on them as they entered and his face lit up, taking in his new human. \n\n\"Warden Aegis!\" his voice boomed in the space and any eyes that were on them already now swiveled to them. \n\nAegis lifted an arm and then glanced down to Zoe. \"We're going up there,\" he said and wrapped an arm around her waist. Pulling her tight to his side he let his wings extend and in a single strong beat he lifted them from the ground. Zoe gasped and flung her arms around his waist and Aegis had to suppress the smile that pulled at him. She looked up to him, fear mixing with wonder as they rose in towards Paragon's throne.\n\nParagon stood and the other Oathkeepers that dotted the dais stepped back as he landed lightly. The Gilded beamed at them and extended a hand to Zoe. She trembled a moment at Aegis's side but then he felt her stiffen as she dropped her arms from his waist. Aegis watched her step away from him, the picture of a relaxed little human princess. He'd known it the moment he'd laid eyes on her. She learned quickly. ",
        "~~\n\nZoe stepped lightly towards Paragon. She felt Aegis at her back, like gravity, but she pulled away from him. Paragon's grin widened as he ran his eyes over her, seemingly pleased by the work the Ivories had done. \n\n\"My Zoe,\" he said loudly as he took her hands. He led her back up a couple steps to a luxurious throne in the middle of the dais. The deep colors of the other Oathkeepers parted for her, straining their necks to get a closer look at Paragon's newest human. \"You're radiant,\" he said softly. He turned back to the crowd, let his voice again boom through the Oasis. \"Isn't my Zoe radiant this evening?\"\n\nAll around them were cheers, the flapping of wings and clapping of hands. Zoe blushed as she let Paragon turn her in a slow circle for the eager eyes. Forge, the imposing Onyx nodded in approval. \"She has the pink cheeks of the prettiest Rose,\" he rumbled good naturedly.\n\n\"Her cheeks are not the only\u2014or best\u2014place she has that pink hue.\" Paragon chuckled as he dropped into his throne, pulling Zoe down to sit on his lap. Forge and the closest Oathkeepers threw their heads back in laughter. \n\nZoe's heart hammered as she tried to adjust her glittering dress. Paragon gripped her waist with one hand as he nestled her against him. His unmistakable bulge pressed against her ass and she tried to keep still to not coax it any harder. His other hand swept up her bare arm, his fingers soft on her skin as he brushed aside a bit of her thick curls from her neck. As he joked with the swelling crowd around them his fingers never stopped moving on her skin. Up the nape of her neck over the jeweled collar, into her hair, back down to circle lazily on her arm. She shivered, unwilling to dwell on how the gentle touch awoke her. \n\nEventually the hand on her waist moved lower towards the deep slit in the dress. He pushed aside the fabric of the dress and slipped his hand between her thighs. She clenched her legs together involuntarily, even knowing how it might provoke him. He stilled for only a moment and then his other hand was on her neck. He tilted her head back to meet his eyes. \"Are you enjoying the gala?\" he purred.\n\nZoe swallowed and nodded as she relaxed her legs. He smiled benevolently and continued sliding his hand towards her sex. His other hand stayed on her neck as he held her eye. His searching fingers slid against her folds and she saw a flash of disappointment in his eyes that she wasn't wet. \"My dear,\" he murmured as he gently explored. \"Are you not having fun?\"\n\nZoe wetted her lips and tried to relax, but the eyes of the Oathkeepers sat heavy on her. Her anxiety that she worked so hard in tamping down rose so high in her throat, leaving her clenching and scared. \"I'm trying,\" she whispered. \n\nParagon's eyes softened and he released her neck, glancing up to survey the crowd. She turned her face into his chest, hoping to forget where she sat. Perhaps in that cold, gold heart of his he had some sympathy for her. \n\n\"Ah, there he is!\" he crowed.\n\nZoe snapped her head up and followed Paragon's gaze. Aegis. He was surrounded by adoring Oathkeepers. At least four lovely females crowded him. As Zoe watched, a dark green slid her hand up the large Onyx's thigh. She pressed into him, her hand massaging at his slowly swelling bulge. Zoe sucked in a breath and turned her face back into Paragon's chest in embarrassment. He vibrated with a deep laugh as he tenderly cupped her cheek and pulled her face to his. His lips fell on hers and he kissed her slowly. She found herself parting for him, opening her mouth and reaching a hand to his shoulder as the kissed deepened.\n\nAgainst her ass, she felt his cock stiffen as she gripped at him and returned his kiss. His tongue darted into her mouth teasingly as his fingers renewed their gentle strokes against her folds. He grinned into her mouth as he found her now growing slick. \"Good Zoe,\" he murmured as he began to swirl his fingers around her little nub. She found herself beginning to pant, to arch into him to give him better access. If this was all he wanted it wasn't so bad. Let him finger fuck her in front of his subjects. It wasn't nearly the worst that could happen. \n\nEventually he pulled his face from hers though and resumed his conversation with a few of the Oathkeepers that surrounded him. Throughout the garden, music began to waft, a troupe of dancers flitted and gyrated within the air. And still his fingers moved so slowly against her moistening folds. Every time she'd begin to arch into him, her breaths growing fast with an approaching climax, Paragon would slow his movements, would achingly slow push a finger into her entrance and circle lazily inside her, swiping out more of her cream to delicately swipe up and down her tender folds. Zoe's head began to swim with desire as she ached for release. \n\nAgain, Paragon thumbed at her clit and she ground into him, clutching at his arm. \"Please,\" she whined and nearly slapped a hand over her mouth as shame flushed up through her. \n\nHe looked down at her, still in mid-conversation with Forge, and smiled. \"You will have release only when I allow it. And I do not think you've earned it yet,\" he said. Around them several of the other Oathkeepers heard and began to chuckle as they watched her reddening cheeks.\n\nShe ground her teeth and flicked her eyes between the smiling aliens. Anger bubbled in her and though Aegis's warning rang in her ears, she pursed her lips and tilted her head up to Paragon. \"Am I to just sit here to be tortured all night then?\"\n\nParagon's golden eyes narrowed slightly as the others around them swallowed their laughter. His fingers continued to move slowly against her as he considered her. \"You're not enjoying sitting here with me, little Zoe?\" he murmured. The Oathkeepers around them stepped away, averting their eyes as the quiet conversations picked back up. \n\n\"I just, it's a gala. I'm just to sit here and be your toy?\" She lowered her voice, trying to give him her best seductive look. She knew she treaded on thin ice. \n\n\"Yes my sweet. You're to be whatever I want,\" he whispered as he grasped the back of her neck and plunged a finger deep within her. \n\nShe gasped and bucked against him, grabbing at his muscled arm. He held the back of her neck tight as his finger began to thrust within her. She panted, feeling her being wind around him as he worked. He palmed her aching clit, pressing hard against it as she ground against him. \"You want this? You want to fuck my hand as my people watch? Want me to release the pleasure within you for all to see? For Aegis to see?\"\n\nShe let out a hiccupping moan as she caught his eye, tried to shake her head in denial. But Paragon renewed his grip on her neck and with a hard flex of his fingers he pointed her head across the dais. Her eyes fell on Aegis. He reclined in a deep seating area with several other Oathkeepers. A lovely Bronze sat in his lap. She moved sensually against him as he absently thumbed at her dark nipples. Another deep Sapphire stood behind him, between his wings, massaging at his broad, glistening shoulders. As if he felt her eyes, his gaze slid slowly up. As he pierced her with those pitch black eyes, 2she felt that familiar ache of arousal within her center. \n\nParagon chuckled as he felt her clenching, rushing heat against his fingers. \"Yes, that's what I thought, my disobedient little human.\" He pulled his hand from between her legs, leaving her twitching with desire. \"Aegis!\" he roared. Aegis snapped his head up, stiffening in his seat. \"I command you to start fucking some of those lovely ladies around you. Poor Zoe and I can smell their need from here.\"\n\nThe group on the dais gave a little cheer and the Bronze in Aegis's lap threw her head back in laughter as she grabbed at Aegis's face and pulled him into a deep kiss. Aegis grabbed at her ass, grinding her against his crotch and Zoe tried to look away. Paragon held her immobile still, forced her to watch as he began to pull down the sleeves of her dress. A delicate looking Emerald knelt next to Aegis and began to tug at his pants. He lifted slightly and the two females giggled as they freed his member.\n\nZoe whimpered, beginning to struggle against Paragon as he held her still in his lap. He grasped her dress, wrenched it and she felt it rip down the seam. He dropped the lovely, jeweled fabric to the ground next to his throne. Frantically she grabbed at Paragon's arm, but he expertly swatted at her hands, grasped her waist and twisted her in his lap. He pushed at her thighs, forcing them on either side of his own as he tugged her back close against his chest. Finally, he released her neck and wrapped both arm possessively around her. \n\n\"Enjoy the show my love,\" he purred in her ear as one hand slid back between her legs. \n\nHe flexed his thighs, spread them and hers a bit wider. Zoe's heart raced as he splayed her open for all to see. For Aegis to see. Their eyes met as Paragon lazily played with her entrance, swirling his fingers around her throbbing nub. And as Aegis's cock was free from his pants by the two females Zoe sucked in a breath and found herself pressing into Paragon's hand, her arousal lighting across her skin. His hardened, Onyx member was massive, beautiful, and she swelled imagining it within her. With a high moan, the Bronze female arched, grabbing at it and guiding him into her. She dropped onto him and Zoe found herself whimpering as well. Paragon matched the rhythm of the Bronze as she rocked against Aegis. His fingers picking up their pace as he held her tight against him. \n\nThe Bronze worked herself to a climax quickly, her throaty cries filled the garden as she bounced on Aegis. He gripped her hips, grinding her down against him and still he held Zoe's eyes. At her back, Paragon chuckled as she arched against him, his fingers winding her tighter and tighter until she was growling in frustration. As the Bronze convulsed with her orgasm, Paragon grabbed at one of Zoe's breasts, pinching the nipple roughly within his fingers so her high whine matched the Oathkeeper's. \n\n\"Not yet Zoe,\" Paragon whispered in her ear as she ground her clit against his hand. \"Dear Aegis hasn't had his release yet. You wouldn't want to excite him too much. It would leave all those lovely females unsatisfied.\"\n\nTears sparked in her eyes as she tried to twist her hips away from him. \"I'm sorry,\" she whispered. \n\nParagon chuckled as he swiped her juices up her belly, circling her bright nipples with his damp fingers. The Emerald quickly replaced the Bronze on Aegis's lap. Zoe moaned as Aegis's ebony member disappeared within her. The Oathkeeper leaned forward, wrapping her arms around Aegis's neck and moving her hips slowly along his length. Zoe twitched as a new rush of heat sparked with her center. From her angle she could see as he disappeared within her, the base of his shaft thick and deliciously tempting. He'd squeezed his eyes shut, gripping at the hips of the lovely green Oathkeeper as she leaned into him. \n\n\"Who would like a taste of my lovely Zoe,\" Paragon asked, his voice rising above the sounds of panting, moaning couples that had begun to fill the Oasis. Zoe squeaked in protest, but Paragon grabbed up both of her breasts, pressing her against him as he thumbed at her nipples and held her legs wide in invitation for the Oathkeepers that crowded the dais. \n\nA large Bronze male slid towards them, dropping down to his knees in front of Paragon's throne. Zoe's eyes went wide as he dipped his head towards her quivering sex and Paragon's chest thundered in laughter against her back. A Bronze tongue tentatively darted against her, lapping slowly up her slit, circling her throbbing nub. Zoe gasped, bucking against the mouth as Paragon continued to chuckle and knead at her breasts. \"Just enjoy it my love. But remember, you aren't allowed to climax yet. If you do I might have to punish you,\" he whispered in her ear.\n\nA dark Garnet male approached and pushed the Bronze away. Zoe groaned as the dark red head fell upon her dripping entrance. This tongue moved quickly, avoiding her screaming clit, instead darting urgently into her entrance, pushing so far inside her that she felt his panting breaths burrow into her. A high howl sounded across the dais and Zoe found Aegis again. The green female writhed against him with her climax. \n\nAegis's eyes snapped open and he scanned for the next in line. His eyes fell on a small, pale Ivory and he grabbed at her, pushing the green from his lap and sitting up to position himself behind her. The Ivory whined in excitement as he pushed her to the ground, flipping her and hitching her hips up to meet him. As he positioned his throbbing length at her entrance he caught Zoe's eyes again. And then he thrust into the scrabbling female underneath him. As he bottomed out within her the Ivory screamed, pawing frantically at the ground, her wings flapped in excitement and Aegis growled. With one hand he grabbed at her wings, pinning them tight against her back as he gripped her waist and began to thrust slowly into her. \n\nZoe writhed against Paragon, against the newest mouth that slowly lapped at her dripping folds. \"Please, please, please,\" she moaned, tilting her head up to Paragon. He smiled down at her, his lovely golden eyes, dark with lust and cruel excitement at her torture. \n\n\"I thought you'd like that,\" he purred. With one hand he shoved the Oathkeeper that delved between Zoe's thighs away. He gripped her waist, lifted her slightly. \"Well, have your fill my love,\" he said and tilted his hips, grinding his bulging member against her entrance. Zoe whined and scrambled to pull at his pants, finally she freed his golden cock and nearly wept from excitement as she grabbed at it and began to guide him into her entrance. Paragon's grip on her waist tightened as he lowered her, finding the right angle as he prepared to spear her. \n\nAs she sunk down onto Paragon she held Aegis's eye. He'd slowed his thrusts into the Ivory, retreating until his massive cock sat just at her entrance again. The female growled in impatience, tried to shove her hips back into him but he held her immobile, his eyes following Zoe's movements as she arched against Paragon and began to take him inside her. Achingly slow they moved deeper, Zoe felt, for the briefest of moments that it was Aegis entering her, Aegis's hands that gripped her waist, Aegis's tongue that ran along her neck and suckled at her ear. Paragon and Aegis both bottomed out and Zoe whimpered, grinding against Paragon. Her legs were still splayed wide, her entrance and Paragon's golden shaft on display for all to see. But the shame had been chased so far away. Her eyes were for Aegis only as he mimicked her movements, grinding the base of his shaft against the squirming female he fucked. \n\nParagon moved his hands back to her breasts and as he pinched at her nipples and held her tight against his chest, he began to thrust into her. Aegis matched each thrust, his black eyes held her, told her that it was her he was actually fucking. Her dripping entrance he was inside, her body he gripped and pummeled into the ground. Zoe bucked against Paragon, high, breathy moans rose within her as she held Aegis's eye. Faster and faster the two Oathkeepers began to move, and Zoe had to grasp at Paragon's arms as he thrust up into her. She felt engulfed, Paragon at her back, his ragged, growling breaths brushed her neck as Aegis's deep, animal grunts sent arcs of deep, lust into her center. She'd never been so aroused in her life, her juices dripped down her legs and Paragon's cock squelched obscenely within her as he pounded her against him. \n\n\"He's close, and I think you are too,\" Paragon hissed into her ear. \n\n\"Yes,\" she moaned. \n\nParagon dropped one of his hands to her swollen clit and slammed his thumb against her as he pummeled at her with his hips. She bounced on his lap and as he finally set her free she began to scream. Her entire body clenched around him and she arched in his lap as the flood of pleasure was released within her. Distantly she heard Aegis snarl his release and she flipped her eyes open. He clutched savagely at the Ivory's hips, pulsed against her as his seed spurted within her and he held Zoe's eyes. Zoe threw her head back, hot jealousy coursed through her, and then she felt Paragon climax as well. He throbbed within her, gripped her tight to him as he shallowly thrust within her and she overflowed with his seed. The two spent couples pulsed and ground against each other, pants and whines of pleasure filled the dais. \n\nParagon's hand lifted and slapped down against Zoe's clit and she shrieked and tried to jerk from him. \"This is just the beginning, my love,\" his hard voice whispered in her ear as he pulled her thighs back tight together, forcing her to clench around his slowly softening member. \n\nThe night went one and Paragon's cock never left Zoe's abused channel. She fell back against him in exhaustion and over and over he would hold her tenderly, grind against her and fall into casual conversation with the Oathkeepers that filtered towards his throne. Then he would open her bright, swollen petals for some of his favorite Wardens and they would fall upon her, licking and sucking at her until she whined with need again and Paragon would stiffen inside her. \n\nAegis disappeared here and there, but eventually would always come back to the dais. The females around him were insatiable, always there was one clinging to his arm, bending over coaxingly for him. Zoe felt her mind beginning to flutter away with the hedonistic, crazed fucking. Her body continued to respond, Paragon could force anything from her it seemed, but her mind began to float from her melting body.\n\nAnd then something changed. Paragon gripped her breast bruisingly and she pulled her eyes open, searching for what had disturbed the Gilded. A huge Onyx landed heavily on the dais. He was nearly as large as Aegis, and the other Oathkeepers stepped back from him. Zoe slid her eyes to Aegis, curious for his reaction. He had stiffened, pushed the latest female from his lap as he stood. \n\n\"Ah, my War Warden. I didn't know if you'd be able to attend the festivities,\" Paragon said softly. Zoe knew that voice, the dangerous, gentle purr.\n\n\"The Gilded invites me, I cannot refuse,\" the new Onyx said lightly as he strolled towards the throne. \n\nHe came to a stop one foot set on the stop step in front of Paragon and Zoe. Paragon's hands tightened around her and for the first time the whole night he lifted her, letting his heavy cock fall from her entrance as he adjusted her in his lap. He tucked her possessively against him as he cocked his head at the newcomer. \n\n\"And will you partake tonight, Bastion? There are plenty of willing ladies, poor Aegis has spent the night servicing them. I'm sure he'd appreciate some help,\" Paragon chuckled. The group around them watched the exchange with darting, curious eyes and Zoe found herself glancing up to Paragon. Though his words were relaxed as always, she sensed in his clawing grip on her that something stirred underneath. \n\n\"I see you have a new human.\"\n\nParagon smiled lightly as he brushed a finger along Zoe's neck. \"Zoe. Isn't she lovely?\"\n\n\"Lovely.\" His cold Onyx eyes ran over Zoe and she shivered, found herself pressing back into Paragon. \"You know how I appreciate human cunt.\"\n\nParagon smile didn't falter though his eyes turned hard. \"I do know Bastion. Your posting at our border with the confederation suits you.\"\n\n\"I'd have a go with this newest cunt of yours Paragon,\" Bastion said. His voice was low and his eyes dark as he again ran them over Zoe. Behind him, Aegis growled and stepped forward.\n\n\"Oh Bastion, we know how that turned out last time. You have your pick at the front. Little Zoe here is mine,\" still Paragon's voice was velvety soft but the warning rippled through and any that weren't following the exchange on the dais now stilled to watch. ",
        "\"You never did like to share, brother,\" Bastion's eyes were now icy with threat as he leaned casually towards them. He slid a hand out, ran large, cold fingers down Zoe's leg.\n\nZoe squirmed, gripping at Paragon, fear beginning to ripple through her as the large Onyx challenged the Gilded. \"I shared until you began breaking my toys, brother,\" Paragon's voice dropped impossibly low as he watched Bastion slide his fingers along Zoe. \n\n\"Accidents.\" Bastion stood straight and glanced around. He grinned as he found Aegis clenching his fists behind him. \"And see, cousin Aegis is here to intervene if I use her too roughly.\"\n\nParagon cleared his throat. Zoe didn't understand all the political intrigues that danced around them. She did know that her body was being bargained for. She clutched at Paragon, turned her eyes up to him pleadingly. Do not give me to this monster, she tried to will her blue eyes to say. He glanced down at her, cupped her cheek lovingly. \"Zoe, love, attend to Bastion's cock if you please.\" She paled and began to shake her head but Paragon's sad eyes were impenetrable as he pushed her gently from his lap.  \n\nShe stood shakily on the dais, casting around for some escape. Of course, there was none. Bastion grinned as he stepped back, unfurling his wings in anticipation. She tried to retreat, by Paragon's hands grasped her hips and pushed her back towards the Onyx. \"I can attest, she's quite good with that pert mouth of hers. You'll enjoy this Bastion.\" The Onyx grabbed at her arm, pulled her roughly toward him. \"Gentle,\" Paragon warned softly. \n\nBastion pulled her into him, then was pushing her down to her knees. She grabbed for balance at his thighs, nearly as large as Aegis's. Like two tree trunks sprouting above her. She glanced up to him and his dark face smirked cruelly down at her. She tried to glance to Aegis, but with one hand Bastion clutched at her hair, shoved her against his crotch. Zoe sucked in a breath again grabbed at him to steady herself. Just get this over with. It was just a cock. Like any other. She pulled at his trousers, untying them with fumbling fingers and freeing that vicious looking, ridged cock from within. He wasn't as large as Aegis, thank god, but he was huge. Girthier than Paragon's beautiful golden cock. Trembling she grabbed at the swelling member and thumbed at the head. Now THIS would be the best blowjob of her life.\n\n~~\n\nAegis frantically looked back and forth between Zoe and Paragon. He had to stop this. Bastion was a fucking barbarian. A savage like Zoe had called them. The brother of the Gilded grinned wickedly though as he held Zoe's head against his hardening cock. She tentatively reached for him, her hands impossibly small against Bastion. A deep growl rose in Aegis's throat as he watched her dart a tongue out and run it up the Onyx's member. \n\nShe worked slowly against him, teasing up and down Bastion's cock with her tongue. Eventually the Onyx grew impatient though and with a grunt her twisted her hair in his hands and forced his length into her mouth. Zoe gasped, tried to pull back but Bastion only chuckled and held her against him. He glanced up to Paragon, \"Her mouth is delightful. I think you've chosen a good one, Paragon.\"\n\nAegis swelled with hatred and took a step forward. \"Aegis.\" Paragon's voice stilled him and Aegis nearly howled in rage as he clenched his fists and forced himself to watch. \n\nZoe struggled against Bastion grabbing at his thighs, the base of his shaft, to try to guide him against her mouth. Slowly, Bastion began to fuck her mouth. He moved achingly slow, forcing her to take more and more of his swelling girth into her mouth. With one brutal thrust he slammed into the back of her throat and held her there for a long moment as she choked and twitched against him. \n\n\"Bastion,\" Paragon warned and the Onyx grinned as he pulled Zoe's head back to allow her to breath. \n\nShe gasped grabbing at him and struggling against his massive hands as tears streamed from her eyes and she glanced to Aegis, pleading in blue wells. \"I think you need to train her a bit more Paragon.\" Bastion mused as he renewed the assault on her mouth, thrusting quickly now against her as she scrabbled for a hold. Her small, pale body looked so fragile against the bulk of Bastion. Her lovely golden hair was wild and tangled in Bastion's cruel fingers. \n\nThe dais went quiet except for Zoe's choking sobs and Bastion's harsh grunts as he used her for his pleasure. Finally he stiffened and Aegis glared as the other Onyx's pendulous balls twitched his release. Zoe's throat worked against the pulsing cock as dark streams of semen dribbled down her chin. With a satisfied grunt Bastion stepped back, finally releasing her head and letting her drop with a choking sob to the ground. \n\nAegis swooped forward, not waiting for Paragon's order. He swept her up, tucking her into his arms and swiping at the mixture of semen and saliva on her red lips. He spared a dark glance to Paragon who nodded in agreement. She was done for the night. \n\nAegis shot a hateful look at Bastion before turning to step from the dais. He heard the other Onyx chuckle behind him. \"A pleasant enough hole Paragon, though I can't understand how you become so attached to just one.\"\n\nAegis dropped through the air, pushing away the rage that burbled within him. He landed heavily on the ground of the Oasis and hurried from the sounds of revelry that continued above. Zoe had gone still in his arms, her gasping breaths continued though her eyes were screwed tightly closed. She grabbed at his arm, digging her fingers into him and smashing her face against his chest. And beneath her feelings of violation and fear, there rippled her anger at him. That he couldn't protect her. It pierced him and he found his throat clenching. \n\nKicking open the door to Paragon's chamber, he hurried her to the bath. Stepping in fully clothed, he held her in his arms still. Lowering himself, he let the water wash over her. She sucked in a breath as it hit her aching body and clenched him tighter.  \n\n\"I'm sorry,\" he mumbled. 'For everything' he wanted to say. For the water, for Paragon and Bastion and taking her from her little life. He was sorry for all of it. \n\nHe grabbed up a washcloth instead. Dipping it into the water he ran it over her arms. Gingerly he dipped her, soaking her hair and letting the water carry away the abuses of the night. As he moved the cloth to her face she grabbed at his hand, stilling him. \n\n\"I can do it,\" she said softly. Her voice was raw. But she didn't pull from his lap. She sat naked upon him and pulled the cloth from his hands. Chastely he held her still against his chest and watched as she dipped the cloth and pressed it to her face. She sighed deeply and then her shoulders began to shake. He sat holding her as she cried into the cloth. She hid her face for him, but her shivering body and sobs told him everything. \n\n\"I'm sorry,\" he tried again. There was nothing else he could say. \n\n\"I don't care,\" she choked out. \n\nHe dropped his head to her shoulder and let her cry. When she'd exhausted herself, he stood and wrapped a towel around her. He tenderly tucked her into Paragon's huge bed and retreated to the door to stand guard against anyone touching her again that night. Even Paragon. \n\nBut deep into the night, when Paragon still hadn't returned, his eyes began to grow heavy. And then like she sensed his threatening sleep he heard her voice. \"Are you still there?\" she asked softly, her voice cracking still from her tears. \n\n\"I am,\" he answered quietly. \n\nAnd then he sensed it. She couldn't say it, but he felt the yearning in her mind. The yearning to be held, to feel protected. And so he crossed the room and eased into the bed next to her. She turned into him, grasping at his chest and he wrapped his arms around her. And finally she slept."
    ],
    "authorname": "SkuldTheNorn",
    "tags": [
        "forced",
        "teasing",
        "alien",
        "scifi",
        "group sex",
        "nonhuman",
        "non-human"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-oathkeepers-ch-05"
}