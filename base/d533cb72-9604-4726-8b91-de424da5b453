{
    "title": "Just a Little Magic Ch. 15",
    "pages": [
        "JUST A LITTLE MAGIC Chapter 15\n\nFrom the very beginning?\n\n- \"That could take a while.\" I said.\n\nNobody smiled. This was an official hearing - a Commission of Inquiry. My fate obviously depended on what I was going to tell them. I didn't even think of trying to lie.\n\n\"On my 13th birthday, a package was delivered at my door, anonymously ...\"\n\nI did as they asked. I told everything: the subsequent deliveries, always on my birthday, my growing interest in magic, and my first clumsy attempts to perform magic tricks.\n\nMy 18th birthday, when Janine showed up in person. How my life changed completely on that day. Her revelation that Bill wasn't my father.\n\n- \"Speaking of which - where is my real father? Is it really Robert Clifford? Is he still alive?\"\n\nEileen cleared her throat. \"Robert Clifford is your biological father. He lives in Florida, with his 2nd wife. He plays golf every day.\"\n\n- \"Lillian told me that he was an Archmage. Far too powerful for her and Janine to oppose.\"\n\n- \"He's a retired insurance salesman.\" said Eileen. \"He has talent, but ... he's no Archmage.\"\n\nI was stunned. My real father, to me, had been the bogeyman all along - the great villain - even though I'd never seen him. I'd been expecting something like Darth Vader, or Lord Voldemort ... instead, he was an insurance salesman?\n\nSomehow, Janine and Lillian found out that my Mom had a powerful aversion to magic. Her family had forced her to marry an abusive asshole, just because their union would combine two talented bloodlines. Mom had resolved never to tell me about magic, to protect me. Or was it to protect herself?\n\nHad Lillian simply read Mom's mind, before choosing me as their pawn? Then she and Janine had concocted a tale to bring me on board, portraying my birth father as some kind of demon, evil incarnate. They'd convinced me that I should never, ever look him up - and then they'd thrown on a spell forbidding me from seeking him out, just for good measure.\n\n- \"Are you ready to go on?\" asked Eileen.\n\nI picked up my story. Janine and Lillian had taught me to use magic - I remembered Eileen's comment about me riding a bike with training wheels, and Anna comparing me to a lamp with the dimmer switch on.\n\nAll of this I had to confess in front of my best friend, and the woman I loved. I felt about two inches tall.\n\nThen I had to tell them about my reward for diligently practicing my nascent magic skills: Janine had been my Prom date. My first sexual experience. The focus of my existence, if I had to be honest - and I was.\n\nPoor Sophie had to listen to me relate how I'd been completely bewitched by a strikingly beautiful woman, who'd effortlessly seduced me.\n\n- \"Who else was at the Prom with you?\" asked Anna.\n\n- \"I'm guessing that you already know.\" I said. \"Sammy was there. His date - Penny - was provided by Janine and Lillian.\"\n\n- \"Thank you.\" said Eileen. \"Go on.\"\n\nThe next bits were difficult. I was sure that Sophie didn't want to hear about the one-night stands Janine had encouraged me to pursue. Or had I really needed any serious encouragement?\n\nYes ... I remembered: I wanted Janine, and only Janine - but she pushed me to go out and practice seducing women. Dana, the very first. Eva, Janine's poker-playing friend. Daisy, my bounce-back, which Janine organized (and filmed - without my knowledge) after the painful breakup with Michelle.\n\nGina, Melissa and Laila. I surprised myself a little by remembering their names. Brooke and the astonishing Candice, who spent several days with me before admitting that she was cheating on her boyfriend. For some reason I remembered her puffy nipples.\n\nHelene and Ginette. That crazy night in the hotel room, when Sammy and I, together ... while Janine watched ...\n\n- \"I'm sorry, Sophie.\" I said.\n\n- \"You hadn't even met Sophie, at that point.\" said Anna. \"Carry on.\"\n\nPoker. Using my mind-reading skills to cheat. I was completely embarrassed, but none of my inquisitors seemed at all fazed by my admission.\n\nOur first shows. My growth and progress with my mind-reading skills.\n\nDanielle.\n\nI backed up my story, and told about how I'd re-encountered Michelle. I had a momentary qualm: hadn't I made Sophie suffer enough? And wasn't there worse to come?\n\nBut they'd asked for the truth. And the truth was - after my obsession with Janine - that Michelle was the first girl I'd fallen in love with. I was already sexually active, but I'd held back, to honour her wishes ... and Janine had torpedoed that relationship.\n\nMichelle was ... what I might have been.\n\nThen I'd met Danielle - my first experience with the power of serendipity. We were well-suited, in so many ways. I'd been faithful to her, continually finding ways to keep Janine from discovering that I wasn't having sex with multiple women - or any woman, except Danielle.\n\nThe shock of her breaking up with me - for reasons I wasn't to learn for several years. I didn't even dare to look at Sophie while I was telling this part of my story.\n\nProfessional success. Penn and Teller.\n\nAnd then that most amazing day, when Sammy and Trish had come together, and I'd met Sophie.\n\nNow I could look at her. She knew how much that day had meant to me. One person on my tribunal, at least, knew that I wasn't lying.\n\nThe list. Lillian and Janine had finally told me the nuts and bolts of their plan. The names of the 'women in question', and their locations.\n\nI had to look at Sammy, at this point. He'd known that some of our tour schedules back then made no sense. Now he knew why. It hadn't been my doing, really - but by that point, I was so enmeshed in Lillian and Janine's plot that I would have defended anything they suggested.\n\nNow I had to address the reality of what I'd done. I'd seduced 9 women - and it would have been 11, if Elodie from Brussels hadn't been gay, and Esther from Johannesburg hadn't been opposed to extra-marital sex.\n\nTruth be told, I felt that I should have been confessing to all 12 of the women on 'the list' (except for Janine). I had to look Sophie in the eye as I explained what the plan entailed: seduce, and then impregnate. Against their will.\n\nLillian and Janine might have cast the spells, but I was their willing accomplice. I got to fuck my way around the world, and enjoy the charms of many more women.\n\nHow had I managed to reconcile what I was doing with what I felt for Sophie?\n\nMaybe I hadn't ... I'd tried to tell her. Honestly - I had, only to fall violently ill. The fact that she'd nursed me, babied me ... didn't make me feel any better.\n\nI told my listeners that I'd proposed marriage to Esther.\n\nThat hit home. Sophie gasped aloud. She didn't say anything. She didn't have to: I could see the pain in her eyes.\n\nWhatever illusions about me she'd cherished were being shattered. I was a liar, a cheat, a charlatan Casanova ... I couldn't help myself. I felt the tears come to my eyes, as I finally felt what I'd known (or should have known) all along: I'd hurt the one person I loved, above all others.\n\nWhatever penalty, whatever punishment they decreed for me ... I deserved it.\n\n- \"Tell us about Atlanta.\" said Rodney.\n\n- \"Atlanta?\"\n\n- \"When you went to impregnate Breanna.\"\n\n***\n\nI don't know how long the questioning went on. At several points, they backtracked to ask about something we'd already covered, or to seek additional details. It didn't occur to me at the time, but they were probably doing this in order to make sure that I wasn't lying, or skewing my account to make myself look better.\n\nAs if there was anything that could possibly make me look better.\n\n- \"Do you have any questions for us?\" said Eileen.\n\nI did.\n\n- \"If the story Lillian told me about my father was all a lie ... how did she really find the 12 women?\"\n\n- \"Matchmakers. She pretended to be your mother, asking on your behalf. Matchmakers keep records of births to parents with talent. That way, those who want to keep magic in their bloodlines can find suitable mates. It's not at all unusual to inquire about people born on specific dates, for astrological compatibility.\"\n\n- \"You mean - astrology is real?\"\n\n- \"For mages it is.\"\n\n- \"Anything else you want to know?\" asked Anna.\n\n- \"Yes.\" I was afraid to ask, though. \"I once asked Lillian ... what we were going to do if one of the woman in question - one of the 12 - had a boyfriend, or if they were married. She assured me that they were all single. But she was wrong about Elodie, wasn't she? Was that another lie?\"\n\nAnna looked at me very sternly.\n\n- \"Breanna had a boyfriend; Lillian put a spell on him to make him leave her. Tamara's husband left her without warning, for the same reason.\"\n\n- \"Irene's fianc\u00e9?\"\n\n- \"Yes.\" said Anna. \"He was caught in bed with another woman, a local tramp. Ri's boyfriend left her, too. Lillian confessed that she'd engineered all of those breakups.\"\n\nSophie had closed her eyes, and turned her head away. I couldn't blame her; I didn't want to look at myself, either.\n\nI knew how Irene's confidence had been shaken by her boyfriend's betrayal, and how traumatized Tamara still was, when I first met her, because of her husband's desertion.\n\nThere was nothing I could say to excuse such a horrible thing. 'I didn't know' sounded hollow and pathetic, even to my own ears. I'd known - I was just too stupid to see what was right in front of my own eyes.\n\n- \"Anything else you want to know?\" said Anna.\n\n- \"Yes ... is there any way I could do something to ... to make up for what I did?\"\n\n- \"That's a very interesting question ...\" said Rodney. He glanced at Eileen.\n\n- \"We'll let you know.\" said Anna. She stood up.\n\n- \"Wait - can I ask one more question?\"\n\nRodney nodded.\n\n\"What happens to Janine and Lillian?\" I asked.\n\nI wasn't about to intercede on their behalf. I just didn't know if witches had prisons, or how they punished transgressors. Truth be told, I was more worried that Janine and Lillian might try to take revenge some day.\n\nI wasn't afraid for myself, really. But I was concerned that they might go after my parents, or Sammy and his family, or Sophie ... or any of the other women.\n\n- \"That's none of your business.\" said Anna, rather sharply.\n\n- \"He has a right to know, Anna.\" said Rodney. He turned to me.\n\n\"Lillian and Janine have been subjected to powerful geasa. It seemed fitting that they should have done to them what they did to others.\"\n\n\"Their wealth has been confiscated. From now on, 50% of their earnings will be donated to worthy charities. They cannot do any harm to the women on their list - or to their families. That prohibition has been extended to include you and Sammy, and your families.\"\n\n\"They are also barred from ever using magic again.\"\n\n***\n\nMy own fate was decided late the following day.\n\n- \"Peter,\" said Rodney, \"you were among Janine and Lillian's victims. In one sense, you were their first victim.\"\n\n\"Fortunately for everyone concerned, they made a serious miscalculation when they chose you to be their tool. They expected that you could easily be swayed to become a rake - a notorious seducer of women, who reveled in promiscuity for its own sake.\"\n\n\"They thought that you would be the proverbial kid in a candy shop, gorging yourself on the sweets, satisfying your lusts at every opportunity.\"\n\n\"They never expected you to be a serial monogamist. That, it turns out, was probably the key element that weakened their hold over you. Had you not already been doubting their word, you might never have noticed the full moon while you were with Breanna in Atlanta.\"\n\n\"We find that you were more sinned against than sinner.\"\n\nI realized that I'd been holding my breath. I let it out with an audible sigh.\n\n\"That being said ...\" continued Rodney. \"You were an accomplice in the seduction of 11 innocent women. You deceived them, and knowingly participated in the plot against them.\"\n\n\"You asked, the other day, what you could do to atone for your acts. That speaks in your favour - but that is also your punishment.\"\n\n\"You must apologize to the women you've harmed - and make restitution.\"\n\n***\n\nYou might think that I got off lightly. I certainly thought so - at first.\n\nThe Truth and Apology Commission (as I began to think of it) was a little more complicated than I'd anticipated. I wasn't going to be allowed to make my apologies in private.\n\nAunt Anna and Eileen were going with me, so that they could remove the spells and enchantments Lillian had cast on the 11 women. They were expecting two spells in particular - geasa, again.\n\n#1 You love Peter. He's hot. You want to have sex with him.\n\n#2 You want a baby. You want Peter's baby.\n\nIt would be embarrassing enough to have Anna and Eileen around when I talked to the 11 women in question.\n\nIt was even worse when I learned that Sophie was coming with us.\n\n- \"WHAT?\"\n\n- \"You don't want me along?\"\n\n- \"No - it isn't that ... it's ...\" I didn't want her to witness my shame.\n\n- \"I know what you did, Pete. You admitted it to all of us.\"\n\n- \"Sophie ...\"\n\n- \"Tell me the truth.\" she said. \"How do you feel about me?\"\n\nThere it was.\n\nThe one question I'd been dreading - not because I didn't know the answer. I did. But would she believe me? If the roles were reversed, would I believe her?\n\nTell the truth. Live with the consequences.\n\n- \"I love you, Sophie. I want to spend the rest of my life with you. I will always regret that Janine wrecked my relationship with Danielle - I was very happy with her.\"\n\n\"But if that hadn't happened, you and I would never have met. I mean ... we would have met, but ... there wouldn't have been anything between us.\"\n\n\"I know that I've hurt you. I have no idea how you feel. I have no defence. I was stupid, and susceptible. I'm ... so ashamed ... I don't know what to say ...\"\n\nSophie reached out, and took my hand.\n\n- \"It's not about what you say, Pete. It's about what you do.\"\n\nSophie didn't have enough holidays to take the time off. Instead, she asked for a leave of absence. She was already so valuable to her employers that they didn't dare to risk losing her. Leave was granted.\n\n***\n\nLillian and Janine's entire wealth had been confiscated. I was surprised to learn that they'd had over $2.4 million dollars in the bank.\n\n- \"How did they have so much money?\" I vividly remembered working my ass off, at poker tournaments and magic shows, to build up a 'war chest' - when Lillian and Janine already had ten times more than I could provide.\n\n- \"Lottery winnings.\" said Eileen.\n\nI could only shake my head. That was exactly what I'd suggested, when my mentors had said that we needed money. They'd fobbed me off with silly explanations - which I'd accepted without question.\n\n- \"What a maroon.\" I said - describing myself. Was it the spells on me - or was I just that stupid?\n\n- \"That money is ours to dispense.\" said Anna. \"Actually - it's yours. You will be the one to decide how much we give to each of the 11 women.\"\n\n- \"Twelve.\" I said.\n\n- \"I don't want any of that.\" said Sophie.\n\n- \"It's not up to you.\" I said. She frowned at me, but she let it pass.\n\n***\n\n# 7 Ashley Chicago\n\nShe was more than a little alarmed to find me on her doorstep. I'd called Ashley, to warn her that I was coming - but I'd neglected to mention that I was bringing three other women with me.\n\nAshley was surprised. Then worried.\n\n- \"Pete - what's going on?\"\n\nI handed her two six packs of her favourite beer (she had appalling taste in beer).\n\n- \"We have to talk, Ashley.\"\n\nIt wasn't easy. I felt like a rat ... no, that's not quite correct. I felt like a piece of fecal matter as I began to explain to Ashley why we'd met.\n\nHer face fell, early in the telling, and I could see that she was shrinking, visibly wilting as I told her why - and how - I'd seduced her.\n\nThe fact of the matter was simple: Ashley hadn't needed a spell on her to fuck me. She would've done it for the price of a couple of drinks, or for a few kind words. That realization hit her hard - like a punch in the guts.\n\n- \"Magic?\"\n\n- \"It's real, Ashley.\" I said. \"You yourself come from a magical bloodline. That's why you were targeted.\"\n\nAshley was shaken.\n\n- \"You mean - there was a spell on you? To make you like me?\"\n\n- \"No.\" said Eileen. \"The spell was on you: to make you fall in love with him.\"\n\n- \"We're here to remove those spells.\" said Eileen.\n\n- \"You can do that?\" asked Ashley.\n\n- \"That's why we came.\"\n\nAunt Anna insisted that I be present, to assist - even though all I did was sit there and watch. It was worse than I'd expected.\n\n'Pete is hot' was one spell. 'You want to fuck him' was another. 'You love him' was a third. Then there was 'You want a baby', and 'You want Peter's baby'.\n\nIt was awful for Ashley, to learn that she'd been magically raped. It was pretty bad for me, too, because Sophie was sitting right beside me, quietly watching and listening.\n\nAshley hadn't expected the pain. But instead of being angry, she was ... disappointed.\n\n- \"I thought you liked me.\"\n\n- \"I do.\" I told her. \"I didn't expect to - but I do. You're a really nice person, Ashley.\"\n\n- \"Is that why you didn't fuck Lindsay?\"\n\n- \"Lindsay?\" asked Aunt Anna.\n\n- \"My friend. She offered, but Pete turned her down.\"\n\n- \"I was only here for you, Ashley.\" I said.\n\nI was all too aware of Sophie sitting next to me.\n\n- \"Fuck.\" said Ashley. \"I was a complete idiot.\"\n\n- \"No - I'm the complete idiot.\" I told her. \"Janine and Lillian played me - just as they did to you. But I genuinely like you, Ashley.\n\n- \"Because I have big tits, and I let you fuck me?\"\n\n- \"No. You know there's more to you than that.\"\n\nIt took several hours - and quite a few beers - to convince Ashley that I'd truly liked her, regardless of the fact that she'd been so willing to fuck me.\n\n- \"Would you really have gotten me pregnant?\"\n\n- \"Yes. I thought that I had to. To ... to save your life.\" It sounded so stupid, so ludicrous now. I heard myself saying it - yet I could barely remember how completely I had believed everything Janine and Lillian had told me.\n\nAshley seemed to be having trouble reconciling two things: I'd come after her with the express purpose of seducing her against her will - and yet I'd treated her better than any of the guys she'd ever been with.\n\nShe was even more confused when I handed her a cheque for $100,000.\n\n- \"What is this - a payoff?\" asked Ashley.\n\n- \"More like compensation, or restitution.\" I said. \"The money was Lillian and Janine's, so it only seems fair that you get some of it, to ... make up, in some way, for what they did to you.\" I didn't tell her that Eileen and Anna had left the amount up to me.\n\n- \"So what happens now?\"\n\n- \"Now?\"\n\n- \"Will I see you again?\" she asked.\n\n- \"Ashley ... Sophie was my girlfriend - before I met you. I don't know what we are now, because I did the same thing to her that I did to you, but ...\"\n\n- \"I get it.\" Ashley gave Sophie a long, appraising look. Then she turned back to me. \"If it doesn't work out, though ... you have my number.\"\n\n***\n\nSophie had a question for her Aunt. She asked it in front of me.\n\n- \"What if Ashley starts to tell people that magic is real?\"\n\n- \"Who would believe her?\" said Anna. \"Even if they did - what's one more conspiracy theory among the thousands? 'Witches are among us?' - please ...\"\n\n***\n\n#1 Breanna Atlanta\n\n- \"You took advantage of me?\"\n\nOnce the spells on her had been removed, Breanna was seriously annoyed.\n\n\"How could you do such a thing?\"\n\n- \"I was under spells, too.\" I said. \"I thought that I ... had to, to save you.\"\n\n- \"Yeah, right! You snaked me into bed out of the goodness of your heart. I'm going to the cops - I'm going to sue your ass off!\"\n\nAunt Anna calmly asked Breanna what she was going to charge me with. Then she reminded her that she had no proof of any wrongdoing on my part.",
        "- \"You had sex with him. Willingly.\"\n\n- \"I was under a freakin' magic spell!\"\n\nAunt Anna simply raised an eyebrow. Breanna could stay angry for as long as she wanted - there wasn't much she could do about it.\n\nOur case was helped substantially by the fact that Breanna still didn't believe that magic was real. Eileen had provided a simple demonstration, but Breanna still thought that it was all trickery - smoke and mirrors. She remained angry.\n\nA cheque for $120,000 did change her mood a little.\n\nWe had to stay in Atlanta for the better part of a week, while Anna and Eileen tracked down Breanna's ex-boyfriend, and removed the spells Lillian had put on him.\n\n***\n\n#11 Tamara Tampa\n\nThis one was especially difficult, for Tamara, and for me. She understood Aunt Anna's explanation, and she seemed to realize that it was Lillian who had shattered her marriage - not me. But she didn't know who Lillian was - I was the face she knew. She couldn't help but blame me for the damage done to her life.\n\nAnna and Eileen went to find her ex-husband, while Sophie and I remained with her. Tamara and Sophie had several quiet conversations - to which I was pointedly not invited. My apologies had been heartfelt - I knew how badly I'd hurt her - but I wasn't sure what else I could do.\n\n- \"Nothing.\" said Sophie. \"Not right now. Maybe never - but definitely not now.\"\n\nI gave Tamara a cheque for $200,000.\n\n***\n\n#8 Mirella Brazil\n\nMirella happened to be in Miami for a modelling shoot. That made her next on our list.\n\nShe was not at all happy to discover that there were spells on her. She cooperated immediately with Anna and Eileen to get rid of them. Her only condition was that her cousin Carla be present for the whole procedure.\n\nMirella didn't have to be convinced that magic was real. Her Aunt was a fortune-teller, who was shockingly accurate. Her family knew very well that some of their members had 'the gift'.\n\n- \"We're done.\" said Anna, when it was over. \"That was the last one.\"\n\nMirella blinked, slowly. \"It's still there.\" she said.\n\n- \"No, we got them all.\"\n\nMirella shook her head. \"I want to strangle him with my bare hands, but I still have feelings that ... as if I still like him.\"\n\nAnna frowned. \"That's not a spell.\"\n\n- \"Puta merda.\" said Mirella.\n\nI offered her a cheque for $50,000 - she didn't really need money all that much.\n\n- \"You can give it to Carla - or to anyone else.\" I suggested.\n\n- \"What I would like,\" she said, \"is to hit you - just once.\"\n\n- \"That's fair.\" I said.\n\nMirella took a good wind up - I wasn't sure if she was going to slap me, or punch me. Either way, I deserved it.\n\nShe kicked me right in the nuts.\n\nHard.\n\nI crashed to the floor. Then she leaned down, and whispered in my ear.\n\n- \"One day, I may want to talk to you about this. Right now, though, I'm so angry I can't even see straight.\"\n\nOn our way to the airport, Aunt Anna couldn't resist a comment.\n\n- \"That went well, don't you think?\"\n\n***\n\n#2 Elodie Belgium\n\nElodie and Christiane were stunned. Shocked. But not especially angry. I hadn't seduced Elodie, nor had I tried in any way to break them up. Eileen told them about how Lillian had broken up other relationships.\n\nThey were quite embarrassed that they had suggested having a child - or children with me. Fortunately, we hadn't gotten that far. Both women were surprised, though, that they weren't totally put off by the idea. Not having sex with me - but raising a child together.\n\n- \"Maybe you could adopt.\" suggested Sophie.\n\nI gave them $100,000, and made it to the airport without getting kicked in the pills.\n\n***\n\n#5 Irene Cyprus\n\nIrene was devastated. Her fianc\u00e9 had betrayed her. Now I had done the same. Or worse.\n\nShe broke into tears every time she looked at me. She couldn't bear the sight of me.\n\nSophie stayed with her for a week, while Anna and Eileen went to Nicosia to find Irene's ex-fianc\u00e9. I stayed in a hotel, and drank far too much ouzo.\n\nI gave Irene $200,000. She didn't really need the money, but I figured that she'd suffered at least as much as Tamara.\n\n***\n\n#12 Ri Osaka, Japan\n\nRi was ... flabbergasted. Yes, she was shocked, and stunned - but she was also strangely excited by the whole situation. She was the central figure (in her own imagination) of a bizarre story of magic, love, and sex. Other than fashion, those were pretty well all of her favourite subjects.\n\nEileen and Anna tracked down her ex-boyfriend, to remove the spells on him, but Ri wasn't too worried about him. She was thoroughly enjoying her moment in the spotlight.\n\nA cheque for $100,000 only made it all that much sweeter.\n\n***\n\n\"Happy birthday.\" said Sophie.\n\nThat was all she said. I got an email from my Mom, and another from Sammy. That was it. Your social circle tends to shrink when you're a liar and a cheater.\n\n***\n\n#6 Sandra Taiwan\n\nSandra's reaction was the most unusual that we'd encountered. She heard the story, allowed Anna and Eileen to dispel the magic on her, then listened carefully to all of the additional details, including what had been done to me.\n\n- \"Wow.\" she said.\n\nShe'd long suspected that magic was real; her mother was unusually - ridiculously - lucky at games of chance. Neither of her parents seemed to have a real job, yet the family was comfortably well off.\n\nI gave her a cheque for $100,000. She thought that was pretty cool, too.\n\n***\n\n#3 Vicky Singapore\n\nI'd been dreading this one. Vicky had been difficult to seduce, even with the spells on her. I was afraid of how she would react when she learned what had been done to her.\n\nShe was shocked, first. Then devastated. But her pain was not so much from the realization that our relationship had been a fraud - it was more the problem of what she was going to say to her family. How could she explain this? What would they think?\n\nI passed her a cheque for $200,000.\n\n- \"For you and your family.\" I said.\n\nShe brightened up considerably.\n\n***\n\n#9 Kavia India\n\nI shouldn't have been surprised. Kavia was perplexed, at first. Then, when the spells had all been removed, she went for me with fists and nails.\n\n- \"You bastard! How could you?\"\n\nIt was a fake tantrum in the finest tradition of reality television.\n\nNo one on the Truth Committee made any objection when I cut Kavia a cheque for $50,000.\n\nWithin a month, she was dating a tennis player.\n\n***\n\n#10 Esther Johannesburg\n\nI had no idea how this one would go.\n\nOn the one hand, I hadn't seduced Esther. We hadn't had sex. On the other, I had promised to marry her.\n\nEsther was just as shocked as any of the others to learn that she'd been bewitched. But she wasn't at all surprised when Eileen told her that magic was real. Esther's mother, as it turned out, was well known as a provider of charms and protections.\n\nEsther also didn't seem shocked to learn that I'd been under the influence of spells, too. She nodded her head, slowly.\n\n- \"I didn't understand, at first.\" she said. \"Why would a wealthy man, from far away, be interested in someone like me?\"\n\n- \"You're a beautiful woman, Esther.\" I said.\n\n- \"Perhaps. Thank you. But it's not all on the outside. You could find a million women more attractive than me. And if you are referring to my inner beauty ... I wondered how you could be so sure, when we'd known each other such a short time.\"\n\n- \"You ... you don't sound angry.\"\n\n- \"Why would I be? I had a voice in my head, telling me that it was all too good to be true. And now I learn that you were enspelled, just as I was.\"\n\nI gave her $200,000 - for her daughter and her mother, if not for her.\n\nAnna had agreed to let me choose the amounts of the cheques, but she couldn't refrain from pointing out that I hadn't spent all of Lillian and Janine's $2.4 million.\n\n- \"There's just under a million left over.\" she said.\n\n- \"I know. Five years from now - or ten, if you prefer - we can give each of them a $50,000 top-up. And what's left over can be saved, in case any one of them runs into serious trouble. I don't know ... illness, natural disaster ...\"\n\n- \"That's very thoughtful.\" said Sophie.\n\n- \"We haven't talked about your cheque, yet.\" I said.\n\n- \"I don't want any of their money.\" she said - rather emphatically.\n\n***\n\nIt's a long trip from South Africa. There are no direct flights. You fly to Europe, make a connection, then another.\n\nI had plenty of time to think about what I'd done, and what had been done to the 'women in question'. I was probably lucky to have gotten away with only one kick in the nuts.\n\nBut I wasn't the only one who'd been doing some thinking.\n\n- \"You were different, with each one.\" said Sophie.\n\n- \"Pardon?\"\n\n- \"You were kind to Ashley, and friendly with Elodie and Christiane. You were patient with Vicky and Ri, and a bit of an asshole to Kavia - not that she didn't deserve it.\"\n\n- \"I ... I guess.\"\n\n- \"The point is, you could have just gone out and seduced these women - you didn't have to make them like you.\"\n\n- \"Lillian said that I had to reinforce the spells. She said ... if they fell in love with me naturally, it would make it easier ...\"\n\n- \"To impregnate them?\"\n\nI hung my head in shame. No matter how I tried to rationalize it, to defend my actions on the grounds that I'd been coerced ... it still came out sounding ... sordid.\n\nTwo hours later, Sophie spoke to me again.\n\n- \"Some of them quite like you - even after the spells were removed.\"\n\n- \"Well ... Ashley hasn't had all that many positive experiences ...\"\n\n- \"Yes, Ashley. But also Mirella ...\"\n\n- \"She kicked me in the balls!\"\n\n- \"Injured pride.\" said Sophie. \"She still wants to talk to you - to see what's left of your relationship ...\"\n\n- \"Sophie ...\"\n\n- \"Both Elodie and Christiane consider you a friend - after the spells. Poor Irene ... and then Sandra - I think she would do it all over again.\"\n\n- \"I don't ... I don't know what that means.\"\n\n- \"Neither do I.\" said Sophie.\n\n***\n\nWe landed in Montreal.\n\nSophie gave Eileen a hug. Then she embraced her Aunt Anna. Finally, she turned to me. To my complete surprise, she leaned in close, placing her hands on my shoulders. I felt her soft lips brush my cheek.\n\n- \"I'll be in touch.\" she said.\n\n***\n\nI'd been away so much over the past couple of years, Sammy had gotten used to having our apartment to himself. Or rather, for Trish and himself. She'd been over so often, she was like the 3rd roommate.\n\nThere were feminine products all over the bathroom, and Trish had taken to stashing some of her clothes in my closet and my drawers.\n\n- \"Sorry about that.\" said Sammy. \"I'll get her to move it.\"\n\n- \"No rush.\" I said. \"I can spend a few nights a week at Mom's. Give you guys some privacy, and ...\"\n\n- \"No, no - it's your apartment, too.\"\n\n- \"I don't know. Maybe Trish should move in, and I could take her apartment.\"\n\nSammy had a funny look on his face.\n\n- \"Well, actually ...\"\n\n- \"You've been thinking about it? Sammy , that's great!\"\n\n- \"We'll see.\" he said. \"It depends on a couple of things, now.\"\n\n- \"Like a job?\" I hadn't just messed up the lives of a dozen women; I'd also cost Sammy his job. I wasn't ready to tour solo, without Janine. I wasn't even sure that I wanted to be a magician at all anymore.\n\n\"I'm sorry, man.\" I said. \"I fucked it all up for you, too.\"\n\n- \"It's not your fault. I'll find something.\"\n\n- \"I'll try to think of something. Maybe I can find a job for both of us.\"\n\nSammy and Trish were pretty good to me. She didn't know the real reason for the breakup of my partnership with Janine. Neither did my Mom. It was actually nice to be around people who didn't know what I'd done, and not have to talk about it.\n\nThat didn't stop me from thinking about it, though. While I should have been looking for a job, I spent more time thinking about Sophie, and dwelling on all of the stupid things I'd done from the very beginning.\n\nSammy came home one afternoon, to find me staring blankly at the television screen. It wasn't even turned on.\n\nHe sat down.\n\n- \"Pete? How are you, man?\"\n\n- \"I'm okay.\"\n\n- \"Doesn't look like it. What are you thinking about?\"\n\nI shook my head. \"I don't know. I just ... I just feel so guilty. So stupid ...\"\n\n- \"You were under a spell. Multiple spells. I don't even want to know what that was like. It wasn't your fault.\"\n\n- \"I'm the one who did those things, Sam.\"\n\n- \"How could you resist? The spells made you do it. Look: if you had to be sedated for an operation - in a hospital - would you feel weak because you fell asleep?\"\n\n- \"What?\"\n\n- \"Okay - bad analogy. All I know is that you can't keep blaming yourself. You don't have to forget - in fact, I don't think you should. But you have to be able to forgive yourself.\"\n\nFor some reason, that little nugget of Sammy wisdom broke through to me.\n\n- \"Thanks, Sam.\"\n\n- \"That's what I'm here for. So does that take care of the guilt?\"\n\n- \"It's a start.\"\n\n- \"Good. Then that just leaves the stupid - which I'm afraid, in your case, is a permanent condition. There's no cure for that.\"\n\n- \"Thanks.\"\n\n- \"Have you called her?\"\n\n- \"Sam ...\"\n\n- \"Have you written to her?\"\n\n- \"I don't think she wants to hear from me right now. She needs time - and space.\"\n\n- \"Are you nuts? You've been away for most of the past two years. She's had an overdose of time and space! Now she knows that you spent all of that time chasing 12 other women!\"\n\n- \"Eleven.\"\n\n- \"Yeah, that makes it so much better. You idiot - she's wondering if you really care about her. If she comes first on that stupid list.\"\n\n- \"She knows that.\" I said.\n\n- \"Does she? When was the last time you told her?\"\n\nI'd never thought of my best friend as a fountain of wisdom. But he certainly got through to me that day.\n\n***\n\nI wrote her an email. If Sophie didn't want to read it, she could simply delete it. I could think about what I wanted to say, instead of stumbling over my words in a phone call.\n\nI began by telling her about Sammy and Trish, and about my Mom. There wasn't much to say about my daily routine, but I decided to repeat to her the conversation I'd had with Sammy - or rather the one he'd had with me (as much of it as I could remember, anyway).\n\nSammy was right. I can't forget - there's no danger of that - but I have to try to forgive myself. I can't ask you for forgiveness until I do that.\n\nThis isn't meant to pressure you. But just in case he was right ...\n\nI love you, Sophie.\n\nI think of you all day, every day. I know how fortunate I was to have met you. You have no idea how much I wish I could go back to the day of the pool party, or to our time in High Park. If only I could have broken some of those spells back then ...\n\nYes, some of the women on the list were very nice. I quite liked several of them - that's true. But I don't want a list. I don't want anyone else. I only want you.\n\nI'll understand if you don't feel the same. I may not deserve you anymore. But if you're wondering how I feel - that's it.\n\nI love you. I want you. \n\nOnly you.\n\nPeter.\n\n***\n\nI got a call from a number I didn't recognize. I took it.\n\n- \"Peter? It's Sophie's Aunt Anna.\"\n\n- \"Hey, Aunt Anna.\"\n\n- \"I'm not your Aunt. Just Anna is fine.\"\n\n- \"Sorry. Anna. What can I do for you?\"\n\n- \"You could come over for dinner. Sophie insisted that I tell you a few things. She also hinted that I was a little rough on you, and ... she may have been right.\"\n\n- \"You weren't any rougher than I deserved.\" I said. That wasn't just guilt talking; I truly believed that I should have been kicked in the nuts more than once.\n\n- \"So you'll come?\"\n\n- \"Sure. Thank you. When?\"\n\nShe named the date and time. I brought a bottle of red, and a bottle of white. I wasn't planning on drinking them, but it seemed appropriate.\n\n- \"Two bottles?\" said Anna.\n\n- \"I didn't know what you were making. The second bottle you can keep for another occasion.\"\n\n- \"Thank you.\" She unwrapped the two bottles. \"Oh - a Pinot Grigio? It's like you read my mind.\"\n\n- \"Hardly. I can't do that over the phone.\"\n\nAnna served veal scallopini. It was very good. I complimented her cooking.\n\n- \"It's very easy.\" she said.\n\nI waited patiently for her to tell me why she'd invited me. I was hoping that it had something to do with Sophie - but I was too afraid to ask.\n\n\"Sophie wanted me to tell you about me, and about my family.\" said Anna. \"I was against it, at first, but she insisted.\"\n\n\"So here goes: I never married. People with talent aren't always looking for a talented mate. But some parents pressure their children into marrying within the bloodlines, because they want talented grandchildren. Your grandparents did it. My parents were like that, too.\"\n\n\"I resisted. Propagating magical bloodlines? I couldn't care less. What have the magically talented ever done for the rest of humanity?\"\n\nPoor Aunt Anna. I could sympathize with her experience.\n\n- \"My mother's parents practically forced her to marry Robert Clifford - my real father.\" I said. \"As far as I know, he was mentally cruel, and then he left her with a child.\n\n- \"It happens more than you know.\" said Anna. \"I was the black sheep of the family, Peter. My sister married a man my parents chose for her. A man with talent. He was a complete fucking asshole.\"\n\n\"He hit on me the day before their wedding, and again, when my sister was pregnant with Sophie. Forget magic - I wanted to take an axe to his head.\"\n\n\"My sister blamed me, for flirting with her husband. My parents never forgave me for not marrying a male of their choosing. My family basically ostracized me. But little Sophie was absolutely blameless. I devoted myself to protecting her - especially from her own relatives.\"\n\n- \"I had no idea.\" I said.\n\n- \"How could you?\" said Aunt Anna. \"Shut up and listen.\"\n\n\"I persuaded Sophie to think of herself first. Her mother sent an endless supply of brain dead, but magically talented morons her way. Sophie saw through them all. I love that girl.\"\n\n- \"Is that why you disapproved of me?\" I dared to ask.\n\n- \"I never disapproved of you, Peter. I was simply afraid that you'd cast a spell on Sophie, and that I might have to kill you.\"\n\nOn that happy note, we moved on to coffee and dessert.\n\n- \"Can you answer a few questions, Anna?\" I asked.\n\n- \"You can ask. If I can answer, I will.\"\n\n- \"Who is Eileen? And who is Rodney? Or am I not allowed to know?\"\n\nAnna shook her head slowly.\n\n- \"No - that's fair.\" she said. \"Eileen is my good friend. She's also the Adjudicator for the Greater Toronto Area. If someone has a complaint about magic use, they bring it to her.\"\n\n- \"So ... it was your complaint? That's why she came to my show - and why you and she took me out for dinner afterwards?\"\n\n- \"Yes. She confirmed that the spells on Sophie hadn't come from you - or from Janine.\"\n\nAunt Anna hung her head for a moment.\n\n\"I'm sorry, Pete. I was so busy trying to figure out if you were the culprit ... it never occurred to me that you might be one of the victims, too. If we had spent a few minutes scanning you for spells ... but we saw you as a perpetrator - not a victim.\"\n\n- \"That's understandable.\" I said. \"I would probably have reacted the same way, had I been in your place. And Rodney?\"\n\n- \"Rodney is an Archmage. A real one. The Adjudicators for Eastern Canada can call on him to resolve ... difficulties.\"\n\n- \"You weren't kidding about a Ministry of Magic, then.\"\n\n- \"That was your friend Sammy's guess. It was close - but I'm not in a position to tell you more than I already have.\"\n\n- \"I appreciate that you've told me this much.\"\n\nRather suddenly, Anna changed the subject.",
        "- \"Have you had time to consider what the future would have looked like, if you hadn't seen that full moon in Atlanta?\" she said. \"Or did you think about it at all?\"\n\n- \"I did. I thought about it a lot. I guess ... I was trying to figure out a way that I could do what Lillian and Janine wanted, save the women ... and somehow still end up with Sophie. I know that sounds pretty stupid. Especially since I proposed to Esther. But it's what I was thinking.\"\n\n- \"Think it through now.\" said Anna. \"Given what you now know to be true, what do you think would have happened?\"\n\n- \"Lillian and Janine would have stolen the babies. That was their purpose all along. Thirteen little girls, to raise as witches, in a coven under their complete control.\"\n\n- \"Yes. But what about the little girls' father?\"\n\nFor a moment there, I almost drew a blank. I'd never really my considered my role in the little girls' lives - beyond my part in their conception.\n\nThen it began to dawn on me.\n\n- \"You'd have been a liability.\" said Anna. \"They would always be worried that you might find a way around the geas - a way to confess to someone what you'd done. At some point, you would've figured that Robert Clifford wasn't involved at all. You would've known that you'd been lied to. And then once the babies started to go missing ... their mothers would naturally have turned to you, wouldn't they?\"\n\n- \"A liability? You mean ...?\"\n\n- \"They would have buried you, Pete. Dead men tell no tales.\"\n\nHoly shit. I was even dumber than I'd thought. Of course they would have. If Lillian and Janine could break up marriages and relationships, force 12 women to bear children, and then steal their babies ... why would they draw the line at murder?\n\n- \"Thank you.\" I said. \"For telling me that.\"\n\n- \"You're welcome.\" said Anna. \"So ... Peter ... tell me something: how many of the women on the list would you have pursued, if you hadn't been under a spell?\"\n\n- \"I ... I'm sorry - I don't understand.\"\n\n- \"We never asked you which of them you preferred. There must have been more than one, though. Right?\"\n\n- \"I'm sorry, Anna. I'm not ... comfortable with that question.\"\n\n- \"Really? If I was a man, I'd have been interested in quite a few of them. You didn't have a favourite? Or two, or three?\"\n\n- \"No.\"\n\n- \"Oh, please ... that Mirella ... wow - what an incredible woman. She must be the most attractive woman you've ever met.\"\n\n- \"I don't agree. I thought that Janine was the absolute standard for beauty - until I met Sophie.\"\n\n- \"Oh, come on. I think my niece is pretty, but she's not in the same league as those two.\"\n\n- \"Then we'll just have to disagree.\"\n\nAnd then, at that moment, I realized that Aunt Anna was bluffing. No - I couldn't read her mind; her defences were too strong. But she'd tipped her hand, in a sense. All of that poker playing Janine had made me do came into play: Aunt Anna was bluffing - and she knew that I wasn't buying it.\n\n\"Why did you invite me over, Anna?\" I asked.\n\n- \"Because Sophie asked me to.\"\n\n- \"You're still protecting her, aren't you?\"\n\nAunt Anna didn't deny it. She didn't answer me at all.\n\n\"Thank you for the meal. And the story.\" I said. \"You've helped me quite a bit.\"\n\n***\n\nSophie - thank you for asking your Aunt to invite me to dinner. I managed to pick the right wine by pure luck.\n\nI appreciated hearing her story, and learning more about you and your family.\n\nYou said that you would be in touch - does that count? Anna was still being protective, but she helped me to make up my own mind, too.\n\nI'm coming to Montreal. I don't want to simply show up on your doorstep, and surprise you. Some surprises can be unpleasant. I can easily imagine how I would feel if someone did that to me.\n\nSo I'm warning you in advance. I plan to leave around noon next Friday. \n\nIf you don't want me to come at all, you only have to say so. I'll respect your wishes. If you aren't sure until the moment I arrive ... that's okay, too. Just don't answer the door, and I'll understand.\n\nBut I really hope that you'll be there. \n\n***\n\nI knocked on her door. I'd never been so nervous in my entire life. It felt like I was rolling the dice for ... everything. Or nothing.\n\nI was all in, pushing in my last chips. Win ... or lose everything.\n\n*****\n\n<br >\n\n \n"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "magic",
        "magician",
        "nerd",
        "apology",
        "forgiveness",
        "dupe",
        "reconciliation"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/just-a-little-magic-ch-15"
}