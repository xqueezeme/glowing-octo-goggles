{
    "title": "Tomboy Ch. 05",
    "pages": [
        "Be sure to read \"Tomboy Chapters 1 through 4\" before starting this story. Everyone in the story is at least 18 years of age. Copies of this story may not be made for distribution, be publishing or copied to another webpage without explicit permission from the author. \n\nTomboy Ch. 5 (Final)\n\nAfter the game Tom walked Jo home and she invited him in. Her parents were home watching TV so they said hello and headed up the stairs to her room. \n\n\"Jo, why don't you and Tom come in here for a few minutes!\" Her father yelled.  \n\n\"What's up Pop?\" she smiled as she pulled Tom down on the sofa next to her. \n\n\"I just wanted to tell you how proud your mother and I are of you. We know you and Tom have gotten very close and you seem happier than we have ever seen you before. We just want you two to take it slow\u2026.you know\u2026to choose the right colleges.\" \n\nJo could see her father sweating as he gave them his words of wisdom. \"Don't worry Pop we are taking it slow,\" she smiled as she held Tom's hand and smiled at him. \n\n\"You both have your basketball and college futures ahead of you and\u2026\u2026\u2026.\" \n\nJo cut him off. \"Tom and I are going to the same college.\" \n\nTom jerked his head and looked at her in total surprise. They had not even talked about going to the same college together. Before he could talk Jo's father cut back in. \n\n\"Now don't make the wrong decision because you think you are in love with each other,\" he said red-faced. \"The right school for you might not be the right school for Tom. Isn't that right Tom?\" \n\nTom was on the spot. No matter what he said someone would be pissed off. \"Yes sir, but it might work out for us if the right school pops up.\" He had not even talked about college with his own parents yet. \n\n\"Father, this is not your decision,\" Jo said frankly. She always referred to him as Father when she was upset with him. \"We want to go to the same college.\" \n\nJo's mother could see things getting out of hand. \"We have a few weeks to decide on colleges. Your father just wants you both to choose the right school for the right reasons.\" \n\n\"We will,\" Jo said smiling as she grabbed Tom's hand and pulled him out of the room. When they got to her bedroom he shut the door. \n\n\"When do I get to say something about college?\" Tom asked kind of pissed. \n\n\"Don't you want to go to the same college as I do?\" she asked softly as she hugged his strong frame to hers. \n\n\"I didn't say that. But it seems you already have our future planned for us.\" \n\n\"I love you,\" Jo whispered as she leaned upward to lightly kiss his lips. \n\n\"God Jo, me too. I can't think of anything but you,\" he whispered as he opened his lips to allow her tongue to enter. They kissed for almost a minute when he pushed her back. \"My parents don't have any money for me to go to college so a lot of things have to go into my decision on which college I pick. I'll probably have to work to afford the extra expenses.\" \n\n\"I'm sorry,\" she whispered seeing how upset he was. \"I just want us to stay together.\" \n\n\"Me too,\" he said looking down into her blue eyes. \"But you have to pick the college best for you too.\" \n\n\"I know,\" she said as she hugged him tightly. Right then she only wanted one thing but she couldn't have it because her parents were downstairs. \"I wish we were alone.\" Her thigh rubbed against his growing bulge. \n\n\"Me too,\" he moaned with his passion pushing out the front of his basketball shorts. \n\n\"I want you inside of me,\" she whispered as she sucked on his earlobe. \n\n\"Oh\u2026.me too\u2026but we can't\u2026.\"\n\n\"I can lock the door,\" she whispered as her fingers explored up under the nylon shorts until she pulled his long pink shaft out into her fist. \"It's been four days.\" \n\nTom realized it was dangerous to have sex with her parents nearby but his need for her erased all fear. He had to have her. \"Lock the door.\" \n\nJo quickly moved to the door and turned the small brass knob. \"Hurry,\" she whispered as she pushed down her nylon shorts and panties at the same time. She waited until Tom's shorts and boxers were off and pushed him back onto his bed. Her body quickly climbed on top of his and her fingers guided the huge prick to her wanton hole. Both were so far along it didn't take much for them to climax as the bed banged against the wall. Jo tried to hold her sounds of pleasure in but couldn't as she screamed through her clinched teeth. Tom too groaned loudly as he emptied his pleasure deeply inside of her hot oven. \n\n\"JO OPEN THIS DOOR RIGHT NOW!\" Jo's mother's voice shouted as she pounded on the door. \n\n\"Shit,\" Jo said as they quickly grabbed their clothing and got dressed. Tom lay on the floor with a book as Jo opened the door. \n\n\"I think Tom has to leave,\" her mother said firmly. \n\n\"But Mother\u2026\" Jo started before her mother shut her off. \n\n\"No buts\u2026.\" She said standing in the doorway with her arms folded across her chest. \n\n\"Yes ma'am,\" Tom said as he quickly stood and kissed Jo. \"I'll call you tomorrow.\" He hurried passed the red-faced mother and out the front door before he saw her father. \n\n\"How dare you do that in our house,\" the mother said as she closed the door behind her. \n\n\"What?\" Jo asked acting dumb. \n\n\"I'm not an idiot. I think I know what intercourse sounds like.\" \n\n\"Mom, we were just\u2026\u2026..\"\n\n\"Don't lie to me. You are lucky your father is still downstairs young lady.\" \n\n\"I love him,\" Jo said now with tears falling freely down her face. \n\n\"I think I like the old Jo better,\" her mother said as she opened the door and moved out of the room. \n\nJo closed her door and fell face down on the bed. Things had gotten so complicated since she met Tom. She knew she would be grounded from seeing him for a while. She waited a few minutes, picked up her cell phone and called him. \n\n\"Hi,\" she said with a sniffle. \n\n\"Are you OK?\" he asked as he sat on the front steps of his grandparent's house. \n\n\"No, my mother is really mad.\" \n\n\"I could tell,\" he said. \"What do you think she will do?\" \n\n\"I'm sure I'll be grounded for a while.\" \n\n\"God Jo, I'm so sorry. I wish I could do something. What if I tell her it was my fault?\" \n\n\"No, I'm not going to lie about it.\"\n\n\"Does you father know?\" \n\n\"No thank God,\" she said. \"She won't tell him because she knows he would go nuts. I better hang up. I love you.\" \n\n\"Me too,\" he whispered. He wished he could hold her. \"Call me when you can.\" \n\n*****\n\nGrandma Bell was dozing in her favorite chair when Tom entered. He tried to tiptoe by her but she woke up. \"Tom come and give your grandma a kiss.\" \n\nTom moved over and gently kissed her on her cheek. He turned and tried to walk away but she grabbed his arm. \n\n\"What is going on now?\" \n\n\"I really don't want to talk about it,\" he said. He tried to pull away but her hand held him tightly. \n\n\"Sit down and tell me what is going on,\" she said firmly. \n\nOf all the members of his family his grandma was the one person who he could talk to. For the next five minutes he spilled out everything that had happened. \n\n\"I should take you over my lap and spank you,\" she said. \"You are worse than your grandpa.\" \n\n\"What do you mean?\" Tom asked. \n\n\"Shoot,\" she smiled. \"In our younger years every time I turned around he wanted sex. Finally after thirty-years he slowed down. Then that damn purple pill came out and he started it again. Why do you think I sleep down here in this chair so much?\" \n\nTom tried to shake the mental image of his old grandparents having sex from his mind. \"I guess I really screwed up huh?\" \n\n\"It sounds that way,\" she said. \"Now don't fret about it too much. Things will work out.\" \n\n\"I wish it would,\" he said as he kissed her on her cheek. He moved down to the basement and put on the \"Love and Basketball\" movie. \n\n*****\n\nMargaret Thompson sat in her kitchen drinking a cup of hot coffee the next morning as she pondered what she would do about her daughter Jo. She realized Jo really cared for Tom and she didn't want to mess it up but she also knew what they did was wrong. Her husband left the house early that morning to play golf with his buddies so at least she could speak to Jo alone as long as Karen didn't interfere. Suddenly someone tapped on her kitchen door. She peeked through the curtains and saw an older woman smiling back at her. She opened the door. \"Can I help you?\" \n\n\"Are you Jo's mother?\" Bell asked. \n\n\"Why yes I am. Who are you?\" \n\n\"My name is Bell. I'm Tom's grandmother. May I come in?\" \n\n\"Sure,\" Margaret said as she opened the door and stepped back. \"Please have a seat.\" \n\nBell sat down. \"I haven't walked that far in some time,\" she said breathing heavily. \n\n\"Can I get you a glass of water?\" Margaret asked worried that the woman might pass out or something. \n\n\"No, I'm OK. Just give a few minutes to get my breath.\" \n\nJo had trouble sleeping during the night and when she awoke early she had trouble going back to sleep because she worried about what her mother was going to do. She heard some noise downstairs and moved out into the hallway to listen. When she heard Tom's grandmother's voice she moved quietly down the stairs and hid behind the kitchen doorway.  Margaret got Bell a glass of water anyway and after a few minutes Bell smiled at her. \"I'm happy to meet you. I think the world of your daughter.\" \n\n\"Thank you,\" Margaret said smiling. \"Jo is something special.\" \n\n\"And so is my grandson Tom,\" Bell smiled. \"He told me what happened last night.\" \n\nMargaret was surprised a young man would tell his grandmother such personal things. \"You two must be very close.\" \n\n\"We are and I've seen him go through some really rough times recently having to give up all his friends to move here in his senior year. He's had a really bad time of it until he met Jo.\" \n\n\"I know but it doesn't excuse what they did last night.\" \n\n\"I thought the same thing when he told me. I almost spanked him,\" Bell said seriously. \"After he went to bed I sat and remembered the time my father caught my husband and me. We were not married at the time. He caught us in the back of his old Packard going to town.\" Bell smiled. \"Of course he chased my husband for almost a mile before my father finally gave up.\" \n\nMargaret grinned. \"I guess he wasn't too mad because you two married later on.\" \n\n\"Hell yes he were married. We had to elope.\" Bell laughed. \n\n\"So why are you telling me this?\" Margaret asked. \n\n\"Because we were young and our passions were hard to control. I was wondering if something similar ever happened to you.\" \n\nMargaret smiled as she remembered the time she was eighteen and her twenty-year old boy friend at the time were in her parent's bed while they were at church. \"Well yes and no.\" Margaret laughed. \"My boyfriend and I were making love in my parent's bed while they were in church. I had told them I was sick and couldn't go.\" \n\n\"This is getting good,\" Bell grinned as she moved forward to hear. \n\n\"Well, my mother called my Aunt Jane who got my Uncle Jim who is a doctor, to come by my house to make sure I was OK. We were making so much noise I didn't hear him come in. I almost died when I saw him looking at us doing it.\" \n\n\"I didn't think doctors made house calls,\" Bell laughed. \n\n\"Well after he scared the shit out of us by threatening to tell everyone we begged and pleated with him to keep quiet.\" \n\n\"Did he?\" \n\n\"Well I thought so until my mother told me last year at his funeral that he had told her after I got married.\" \n\n\"And then it was too late.\" \n\n\"Well not really. The boy I was with married my sister. He is now my brother-in-law. She is still blackmailing me.\" \n\nBell laughed. \"What do you have to pay?\" \n\n\"I have to do my mother's food shopping once per week,\" Margaret laughed. \n\nMargaret took a quick liking to Bell and the two of them sat for another 30 minutes drinking coffee. \"So what do you think I need to do with my daughter?\" \n\n\"What household chore do you hate the most?\" Bell asked. \n\nMargaret smiled. \"Definitely ironing.\" \n\nBell smiled and stood up. Her mission was completed. \"I better head back home.\" \n\nMargaret smiled realizing the older woman was smarter than anyone she had ever met. \"Let me give you a ride home.\" \n\n\"Thank you,\" Bell grinned. \"I don't think these old legs can make another trip like that one.\" \n\nAs Bell exited Margaret's car the woman asked, \"Was that story true about you and your husband in the back seat of your father's Packard?\" \n\nBell smiled. \"Yes but it was not my husband.\" She closed the door and walked slowly up the eight steps to her front door. \"I didn't want Jo to hear that I slept with someone else,\" she thought. She had seen Jo's blonde hair moving out in the hallway. \n\nShe opened the door and saw Tom standing there. \"Grandma where have you been? I was ready to call the cops.\" \n\n\"Just taking care of business,\" She smiled as she sat in her favorite chair. She knew if she went upstairs her husband would be chasing her around the bed. \n\n*****\n\nJo rushed back up the stairs and pretended to be asleep when her mother tapped on her door. \"Yes.\" \n\nMargaret opened the door and sat on Jo's bed. \"Do you realized what you did was wrong?\" \n\n\"Yes,\" Jo said looking downward. Right then was not a good time to argue. \n\n\"Good, I was going to ground you but instead I will make a deal with you.\" \n\n\"OK,\" Jo said trying not to smile. She knew she would be ironing which is something she didn't mind because she could still watch TV. \n\n\"I want you to do the family ironing until you go away to college.\" \n\nJo realized it mean Karen's clothes as well. \"Everybody's?\"\n\n\"Yes, the whole family.\" \n\nJo thought about it and realized she could still see Tom without being grounded. \"OK.\" \n\n\"And, you cannot do it again,\" Margaret said as she walked from the room. She smiled and stopped at the doorway. \"At least not in this house\u2026\u2026\u2026.when we are at home.\" \n\nJo smiled when the door closed. She quickly dressed and ran over to Tom's house. Grandma Bell answered the door. Jo kissed her on her cheek and whispered, \"thank you.\" \n\nBell smiled as she watched Jo run over to the basement door. \"I don't want just any girl with my Tom,\" she thought. \n\n*****\n\nJo hurried down the basement stairs without giving Tom any type of warning. He was sitting wearing only his boxers in front of the TV. \n\n\"Hi,\" she giggled after seeing his surprised reaction. \n\n\"What are you doing here? I thought you were grounded.\" \n\n\"I think I was until Grandma Bell visited my mother this morning,\" Jo smiled as she moved behind him and hugged his bare back into her soft mounds. \n\n\"So that's where she was,\" Tom laughed. \"I almost called the cops. What did she say to get you out of trouble?\" \n\nJo laughed. \"She told my mother a story about how she had messed around when she was eighteen years old and then got my mother to admit she did the same thing.\"\n\n\"No way!\" Tom exclaimed. \"Your mother?\" \n\n\"Yes and........\" Jo whispered the next part. \"She said she did it with her brother-in-law.\" \n\n\"Holy cow.\" \n\n\"She was dating him at the time before her sister, my aunt, started dating him.\" \n\n\"So you got off Scott free?\" \n\n\"I wish,\" Jo said, \"I have to iron everyone's clothes until I leave for college.\" \n\n\"But now you are free to do anything you want?\" Tom turned and cupped her firm breast. \n\n\"Yes, but I'm not going to take that chance again,\" she said as she pulled his fingers from her hot boob. \n\n\"What do you want to do?\" \n\n\"Let's go shoot some hoops,\" she grinned. \n\n\"Great,\" he said smiling. \"Do you want me to call Billie and Tina?\" \n\n\"No, I was thinking of another outside court.\" She grinned. \n\n\"I don't like that smile,\" he said standing back from her. \n\n\"It's not that far.\" She stood and watched as he pulled on a pair of basketball shorts and a tee shirt. They kissed Grandma Bell goodbye and headed the opposite direction from Jo's house. After walking about 10 blocks Tom saw some kids shooting hoops. He thought about asking why they were there when he saw someone he recognized. \"Are you sure?\" \n\n\"Yes,\" Jo said smiling. She opened the gate which made a squeaking noise that alerted the four players. \n\n\"Why it's the All American herself,\" Kathy O'Leary said as she dribbled the basketball in place. \"And the new country boy we've been hearing about.\" \n\n\"O'Leary,\" Jo said not smiling. \"I see you are practicing before our big game on Friday.\" \n\n\"We don't need to practice to beat your sad excuse for a team,\" O'Leary said. \"How did that little guard make out?\" \n\nJo knew she meant Tina who O'Leary had put in the hospital. \"She's doing great and can't wait to shut you down.\" The two female stars stood eye to eye without blinking. \n\n\"You couldn't do it so what makes you think she can?\" O'Leary smirked. \n\nJo looked at the other three girls who were chuckling every time O'Leary spoke. \"How about a quick game to five? Unless, maybe you are scared to play me one on one.\" \n\n\"Shit,\" Tom thought. If he had known Jo planned on doing this he would have stopped her. \"Jo let's go. She's not worth this.\" \n\n\"Fuck you asshole,\" O'Leary said glaring at Tom. She turned and smiled at Jo. \"Sure I'll play you.\" \n\nJo almost decked her when she cursed at Tom but held back her temper. Although O'Leary was about two inches taller than Jo she knew she could take her. \"Odd or even?\" Kathy said holding up her fist. \n\n\"Even,\" Jo said as she held up her own fist. \"One, two..........three,\" O'Leary said as they pumped their fists down and back up. When they went down for the third time Jo held out one finger and O'Leary two. \"Odds, I win,\" O'Leary smiled. \n\n\"That's the last thing you will win,\" Jo thought as she positioned herself between the girl and the basket. She tossed her the ball and moved into a defensive position. \n\nO'Leary saw that she was about 18 feet from the basket and jumped to shoot a long shot. It barely struck the rim and fell down into Jo's hands. Jo quickly dribbled to the foul line and raced back to lay the ball into the hoop before O'Leary could stop her. \"One zip,\" Jo announced. It was winners out so O'Leary now moved again into a defensive stance. \n\nJo grinned as she faked left causing O'Leary to jump that way. She faked right and the girl jumped back to the right. She kept her pivot foot planted as she went right and left about four more times. Once O'Leary moved back and forth a few times Jo moved left two times in a row that left the startled girl standing flatfooted as Jo drove around her to the hoop. \"Two-zip.\" Jo said seriously. \n\nO'Leary was now pissed because Jo Thompson was embarrassing her in front of her teammates. She had bragged to them and everyone else that she was as good if not better than Thompson. She knew there was only one way to play to beat Jo.\n\nJo again faked left and right and had O'Leary guessing wrong again. When Jo moved around her O'Leary grabbed her tee shirt and spun her around. She grabbed the ball and moved to the top of the key. Jo quickly got her balance and raced to cut her off. \"Getting a little physical?\" Jo snapped at the smiling girl. \n\n\"This is not a gym where you have the refs to protect you,\" O'Leary smiled.\n\n\"Hey let's just call it even,\" Tom shouted when he saw the hate and anger on their faces.  \n\n\"Stay out of this Tom,\" Jo shouted back. O'Leary turned her hip into Jo and dribbled facing away from her as her ass pushed Jo back closer and closer to the hoop. As Jo reached around her to swipe at the ball O'Leary swung her hip back into Jo. \n\nJo smiled as O'Leary dribbled and pushed back, dribbled and pushed back. After she dribbled again Jo moved quickly to the side which caused Kathy to tumble backwards until she landed on her ass. Jo grabbed the ball and dribbled to the foul line. Before O'Leary could recover Jo's shot swished through the net. \"Three-zip.\" \n\nJo smiled at the red-faced girl as she tossed her the ball to check. O'Leary slammed it back at Jo's face but Jo was expecting it and grabbed it. Before Kathy knew it Jo jumped upward and shot the ball. SWISH. The girl was late blocking the shot but not late enough to prevent her body from slamming into Jo's body. The two crashed down on the ground with O'Leary on top of Jo. Before Jo could react the girl grabbed her wrists and held her down against the pavement. ",
        "\"Let me up dammit,\" Jo shouted as she twisted her body side to side to escape the larger girl. \n\n\"You are trash,\" O'Leary shouted as she spit onto Jo's face. It was all it took to get Tom going. He raced to pull the other girl away but Jo stopped him. \"NO TOM! LEAVE US ALONE!\" \n\n\"You better let him help you because you are mine now,\" Kathy laughed. \n\n\"Let me up and I'll show you who owns whom,\" Jo grinned. \n\n\"I don't want to hurt you,\" O'Leary laughed. \"If I hurt you now and we beat Central on Friday everyone will say it was because I whipped your ass.\" \n\n\"Jo please don't do this,\" Tom begged. The other girl had no idea just how tough Jo was. \n\n\"You have to let me up sometime,\" Jo smiled. \n\n\"You asked for it,\" O'Leary said. \"Right girls?\" She asked looking at her team mates. \n\n\"Right,\" they said at the same time. \n\nO'Leary quickly jerked her body back and jumped to her feet. As Jo tried to stand the bigger girl kicked her on her side making her slide across the hard pavement. Tom rushed to pick her up but Jo held up her hand keeping him away. Her elbow was bleeding as she stood and smiled. \n\n\"You better go home now before it's too late,\" O'Leary said smiling. \n\n\"I still have one more basket to make,\" Jo grinned as she walked toward the taller girl. \n\nO'Leary had been in a few tough fights with other girls before and knew how to handle herself or so she thought. The problem was that Jo didn't fight like a girl. When O'Leary swung her open hand around to slap Jo's face Jo blocked it with her left and pushed her right fist directly into the girl's nose. Everyone on the court heard the nose break. The sudden blow sent the taller girl back onto her ass. Her hand came up to touch her painful nose and discovered the massive amount of blood pouring from it. \"OH SHIT YOU BROKE MY NOSE!\" \n\nThe three other girls ran towards Jo and two of them grabbed her while the third one swung her hand back to hit her. It didn't make Jo's face because Tom's large hand captured it and twisted it behind her back. \n\n\"Now that's not fair,\" he said smiling. As he held her one of the girls holding Jo broke loose and kicked Tom on his shins. \n\n\"OUCH!\" he screamed. One girl was not enough to hold Jo so she quickly broke free and before the girl knew it had Jo's fist in her face as well. Broken nose number two. \n\n\"Jo lookout!\" Tom shouted as the other girl ran towards Jo. Jo ducked aside and waited for the girl to turn and come back at her. This one held her fists up like she knew how to box. Jo laughed as she ducked two wild swings. The second one left the girls face unprotected. She didn't see Jo's punch as it flattened her nose. \n\nTom held the other girl as Jo walked towards her. \"Let her go Tom.\" \n\n\"No, it's not right,\" he said standing between Jo and the scared girl. He glanced down at the three other girls crying as they held their noses. \n\n\"I won't hurt her,\" Jo said. She turned picked up the basketball and shot a twenty foot shot. \"Five-zip.\" She whispered in O'Leary's ear. \"This was for what you did to Tina. If you try to hurt her again on Friday night I'll be back.\" \n\n\"Let's go,\" she said to Tom. \n\nNeither said a word as they walked the long way back to Jo's house. \"Do you want to come in?\" Jo asked. \n\n\"No, I think I want to go home,\" Tom said still not believing what he had just seen. \n\nJo grabbed his arm. \"Tom I had to do that for what she did to Tina. And, she might have done it again.\" \n\nHe pulled her arm away. \"I thought I knew who you were. I'm not so sure now.\" He turned and walked away. \n\n\"Call me later,\" she said as she watched him slowly walk down the street. He didn't reply. \n\nJo walked into her house and tried to wash off the blood before anyone saw her but her mother walked in. \"What happened?\" \n\n\"I fell playing basketball,\" she lied. \n\nMargaret smiled. \"My tomboy has come back.\" \n\nJo didn't comment because she knew she had upset Tom and now wished she had controlled her temper more. He might have understood if she broke O'Leary's nose but not the other two girls. It was so confusing being in love and having the old tomboy urges. She didn't want to lose Tom but at the same time she had to protect her team mates. She waited until 9:00PM for him to call and when he didn't she decided to call him. \n\n\"Tom's out with Billie,\" Tom's mother said. \"I'm not sure when he will come home. I'll tell him you called.\" \n\nJo called Tina. \"Have you seen Tom?\" \n\n\"No but Billie and he went out. Billie said you roughed up some of the Trinity girls.\" \n\n\"I owed O'Leary for what she did to you,\" Jo said. \n\n\"I think Tom is really upset,\" Tina whispered. \n\n\"I know.\" \n\n\"Do you want to come over here?\" Tina asked. \n\n\"No, maybe he will call me.\" Jo hung up and sat back on her bed throwing up the small Nerf ball she had taken from Tom's house. An hour later she fell asleep. \n\nIt was 2:00AM when Jo's cell phone rang. She picked it up and saw Tom's name. \"Hi,\" she said still half-asleep. \n\n\"Is your elbow OK?\" Tom asked. He had been so upset about the fight that he had forgotten to make sure she was OK. \n\n\"Yes, it was just some skin.\" Neither of them said anything for almost a minute. \n\n\"I know what I did was wrong,\" Jo whispered. \"I have to control my temper better. I didn't really go looking for a fight but when she knocked me down I just lost it.\" \n\n\"I saw the look in your eyes and it scared me. Billie told me you have had some pretty bad fights before with guys.\" \n\n'I guess I've had to fight to prove I'm equal to guys,\" Jo said frankly. \"Since I met you I've been able to keep that anger buried deep inside. O'Leary had it coming but I shouldn't have hurt the other two.\" \n\n\"Well you should have hurt the one who kicked me,\" Tom laughed softly. \"I've put myself in your shoes and realized I would have probably done the same thing you did. I guess I think of you as a boy sometimes and when you hit those girls I thought it was unfair.\" \n\n\"You think of me as a boy?\" she repeated. Tom laughed. \n\n\"I love you,\" Jo whispered. \n\n\"Me too Jo,\" Tom said softly. \"Please don't slug anybody again unless I give you the thumbs up.\" \n\n\"I won't,\" she smiled. \"That girl hurt you?\" \n\n\"Hell yes,\" he laughed. \"My leg is black and blue.\" \n\n\"I'm sure her nose is worse than that,\" Jo said not laughing. \"Do you think they will call the police or something?\" \n\n\"They have nothing to charge you with. They came at you first.\" \n\n\"I wish you were here,\" Jo whispered. \n\n\"Then you would have to wash all the clothes before you iron them,\" he laughed. \n\n\"Come to church with me today,\" Jo said looking at the clock. \n\n\"What time is mass?\" \n\n\"10:30AM.\" \n\n\"OK, I'll be at your house at 10:00AM.\" \n\n*****\n\n\"Good morning Tom,\" Margaret Thompson said as he climbed into the car to go to mass with them. \n\n\"Good morning Mrs. Thompson,\" he said as he took Jo's hand in his. \n\n\"I'm glad you are going to church with us,\" she said before Jo's father entered the car. \"Maybe you two should stop by the confession booth after mass?\" \n\nTom looked at Jo to see if she thought her mother was serious and Jo smiled while shaking her head no.\n\n\"I wish we could go back to Clarkton again,\" Karen said sitting next to Jo. \n\n\"So you can see Eric?\" Tom laughed. \n\n\"No so she can play Marco Polo again,\" Jo chuckled. \n\nKaren looked at her sister in shock. How did she know about the game she played with four naked boys in the river? \n\nJo grinned and leaned over, \"I ironed your dress this morning and it's in my closet.\" \n\nKaren's face turned red in anger and pinched Jo's leg. Tom quickly grabbed her hand and pulled it away. \"Please don't make her mad,\" he whispered. \n\nJo just smiled and put her head on Tom's strong shoulder. \n\nAs Jo and Tom walked into the small Catholic Church they could see everyone turning and staring at them. The word was out that Jo Thompson had a boyfriend and everyone wanted to see him. Not only that but they wanted to see Jo wearing a dress. Whispers flew around the church until the music started playing. \n\nAfter mass Jo and Tom stood holding hands outside the church smiling at the shocked faces walking by. Jo's mother walked up to them and asked if they went to confession. \n\n\"No mother but I will when you go too.\" \n\nMargaret stopped and stared at her wondering if she overheard her confession to Grandma Bell. \n\n*****\n\nIt was later that day at Tom's place when Jo met his parents for the first time. His mother was very nice but his father seemed to be very quiet around her. \n\n\"I loved Clarkton when Tom took me there last weekend,\" Jo said trying to break the ice with the quiet man. \n\n\"Really? I'm glad to be out of that place,\" Tom Sr. said. \n\n\"Thomas, be nice,\" Tom's mother Sally said. \n\n\"I hear you are going away to college,\" the man asked while pushing a load of mashed potatoes into his mouth. \n\n\"I'm not sure where I'm going sir,\" Jo said looking over at Tom knowing it was still a touchy subject. \n\n\"Well don't put any notions into my son's head that he can afford to live away from home,\" Tom Sr. grunted. \n\n\"Dad let's not get into this right now,\" Tom said hoping he would drop it. \n\n\"He can go wherever he wants,\" Grandma Bell said sternly to her son. \n\n\"And where is he going to get the money?\" the angry man shot back at her. \n\n\"Don't worry about money,\" she said looking her son eye to eye. \n\n\"Grandma I don't want to take your money,\" Tom said seeing the standoff between his father and his Grandma. \n\n\"She doesn't have any money,\" Tom Sr. laughed. \n\nSuddenly Tom's grandfather grabbed his son's arm. \"She's been saving it for a rainy day.\" \n\n\"Me losing my job was not a rainy day?\" \n\n\"We were ready to help until you said you would move back here with us,\" the older man said. \"Things are working out.\" Tom's father had finally gotten a permanent job with excellent benefits. \n\nTom Sr. didn't say anything as he wiped his mouth and walked out of the room. \n\n\"Don't worry about him Tom. I'll talk to him,\" Tom's mother said as she followed her husband into the other room.  \"It's a pleasure to meet you Jo.\" \n\n\"Thank you ma'am,\" Jo said smiling. \n\nAfter dinner Tom asked Jo to take a walk with him. \"I'm sorry about my father,\" Tom said as they sat on the small bleachers at the basketball court. A dim street light barely gave them enough light to see each other. \n\n\"I understand about you picking the best college for you,\" Jo said as she hugged him to her body. \"I'm being selfish wanting to be with you in the same school.\" \n\n\"I want it too but you can now see what's going on with my family,\" he said as he kissed the smooth skin on her neck. \"I wish we were in college now and we could make love in our dorm rooms.\" \n\n\"Me too,\" she said feeling his hand move up under her sweatshirt touching the soft skin above her jeans. \n\nWhen his fingers pulled out her waistband and slid down under her panties she grabbed his wrist. \"Don't please. If you touch me I won't be able to stop.\" \n\nTom laughed and pulled his hand out. \"It's too dark to go into the storage shed and if we do it here we could get arrested. We have a whole week of school before I can be with you again.\" \n\nJo smiled. \"Don't give up. You never know what can happen.\" \n\n\"I don't like that smile,\" he said looking into her eyes. \n\n*****  \n\nThe first two days of school that week was tiring because the coaches worked the teams real hard in preparation for the Trinity games on Friday night at their place. The winners of those games would be the city champions. It was on Wednesday evening after practice when Tom found himself alone in the shower. He didn't hear any of his team mates in the locker room and figured he was the last one still around. As he shampooed his hair under the warm stream of water he felt fingers cup his ass cheeks. He quickly turned hoping another guy was not touching him and saw Jo's naked body through the soapy film in his eyes. \n\n\"JO WHAT ARE YOU DOING HERE?\" He turned and quickly washed the shampoo from his head and face. \n\n\"This,\" she giggled as she moved her fingers to his dangling participle. It took less than 30 seconds to become rock hard. \n\n\"We can't do this,\" Tom whispered. \"What if someone catches us?\" \n\n\"Everyone has gone and Tina will warn us if someone comes in the locker room.\" Her lips moved to his nipples because she knew it turned him on. She suckled on the hard tip and looked up at him while she stroked his hard-on. \"You want me to stop?\" \n\n\"No please don't stop,\" Tom begged. He wanted to fuck her so bad but didn't want to do it in the shower. \"Let's go to the coach's office.\" \n\nJo giggled as she ran ahead of him stark-ass naked through the boy's locker room. She opened the door to Father Tim's office and moved to the small sofa. \"Hurry,\" she said as she moved onto her back and opened her legs. \n\nTom glanced at the golden prize waiting for him and didn't hesitate as he moved down between her muscular thighs. \n\n\"Hurry,\" she moaned as she wrapped her legs around his hips. \"Give it to me.\" \n\nTom felt like he was being used but didn't mind. His long hard shaft slid slowly but completely into her hot oven. He felt her fingernails digging into his back as his hips pounded his hot rod in and out of her. His mouth found hers which helped to keep their sounds of pleasure down. They were both about to climax when they heard Tina tap on the door. \n\n\"SHIT!\" Tom exclaimed. His mind said to pull out but his prick would not allow it. He froze as he listened. \n\n\"Father Tim,\" Tina said loudly. \n\n\"Why are you still here?\" Father Tim asked surprised to see the cute young girl standing in front of his office door. \n\nTina thought quickly. \"I think I sprained my ankle in practice tonight and was hoping you would take a look at it.\" \n\n\"Sure, let's go into my office,\" he pulled out a key and started to push it into the door knob. \n\nTom and Jo looked at each other in fear. They didn't have enough time to run back to the lockers to get their clothing. \n\n\"WAIT!\" Tina said as she grabbed his arm. \"Can we go to the nurse's office? I think I need an ice pack.\" \n\n\"Why yes,\" Father Tim said as he put his arm under hers to help her limp down the hallway. \n\n\"God that was close,\" Jo whispered as she nibbled on his ear. His woody was still hard inside of her. \n\n\"You want to finish?\" Tom asked. \n\n\"Yes and so do you,\" Jo giggled feeling his hardness. \n\nTheir bodies raced together until they both grabbed each other tightly. \"NOW!\" Tom cried out. Jo finished at the same time. \n\n\"Quick, let's get out of here,\" Tom said as he pulled Jo's body from the sofa and led her to the pile of her clothing in the locker room. \"You are nuts you know that?\" he asked as he watched her pull her skimpy light green panties up over her beautiful ass. \n\n\"Nuts for you,\" she giggled. She pulled on her clothing and made it into the hallway just as Father Tim and Tina turned the corner. \n\n\"Jo, what are you doing here?\" Father Tim asked. \n\n\"Looking for Tina,\" she said truthfully. \"How is your ankle?\" \n\nTina smiled. \"Better, Father Tim put an ice pack on it.\" She winked. \n\n\"She's lucky because it's not swollen,\" he said. As Jo and Tina walked slowly away from him he asked, \"Jo, why is your hair so wet?\" \n\n\"From the shower,\" she said again not lying. \"I didn't dry it because I was looking for Tina.\" \n\n\"It's nice to have such good friends,\" Father Tim said as he moved into his office. He looked at the wet spot on his black leather sofa and moved quickly back into the hallway. But the two girls were quickly out of sight. \n\nTom was drying his hair when Father Tim walked up to him. \"Tom, do you know why there is a wet spot on my sofa?\" \n\nTom panicked wondering what kind of wet spot he was talking about. \"What kind of wet spot is it?\" \n\n\"I don't know. It is just wet on the arm of the sofa.\" \n\nTom took a deep breath of relief. \"I was feeling tired and had to lie down for a while.\" \n\nFather Tim looked at him and smiled. \"OK but next time please use a towel.\" \n\n\"Forgive me Father for I have sinned,\" Tom thought as the priest walked away. \n\n*****\n\n\"We can't keep taking these chances,\" Tom said to Jo that night on the phone. \n\n\"But I had to be with you,\" Jo giggled.  \n\n\"We both could have been suspended and would not be eligible to play on Friday\"\n\n\"I know it was dumb,\" she whispered. \n\n\"Well you are dumb and I'm dumber,\" he laughed. \"I'll see you tomorrow. I love you.\" \n\n\"Me too dumber,\" She laughed as she hung up. \n\n*****\n\nThe next two days flew by and when the girl's team entered the Trinity gym both Jo and Tina noticed O'Leary and two of the girls on the Trinity team wearing bandages on their noses. The Central team walked in front of the Trinity bench and Jo smiled at O'Leary. Jo knew it was going to be a physical game.  \n\nCoach Meagan also noticed the three bandaged faces and the smile Jo gave Kathy O'Leary. As the team dressed in the visitors locker room Meagan pulled Jo aside. \"You wouldn't have anything to do with the three broken noses on the Trinity team would you?\" \n\nBefore Jo could answer Tina yelled at the coach. \"Coach Meagan they want you upstairs.\" \n\nMeagan glared at Jo and walked up to the court. She saw the Trinity coach and the refs standing there. \"Is something wrong?\" \n\nThe Trinity coach was an older woman who Meagan had never seen smile before. \"I have no proof but I think three of our girls were injured by a group of girls on your team.\"\n\nMeagan looked across the gym at O'Leary and the other two girls. \"Did they say who did it?\" \n\n\"No, they won't talk. But it had to be a bunch of your girls.\" \n\n\"Listen. You have no proof and are just guessing. My girls would not do such a thing.\" Meagan said as she turned quickly and walked back down the stairs. \"At least unless it was self-defense.\"  She also knew it was not a few of her girls but just one. \n\nAs Coach Meagan walked by Tina the small girl grabbed her arm. \"O'Leary put me in the hospital.\" Meagan stopped and realized Tina was right. She glanced over at Jo who was looking nervously at her. \n\nJo saw the coach's anger as she walked to her. \"You are not starting.\" \n\n\"But coach,\" Jo said as her coach turned and walked away. \n\n*****\n\nAs Tom walked with the boys towards the locker room they passed the girl's team who was walking towards the court. Tom noticed that Jo was upset about something. He grabbed her arm. \"Are you OK?\" \n\n\"No I'm not OK, I'm not starting.\" \n\n\"But why?\" \n\n\"The other coach complained about her three girls's broken noses.\" \n\n\"Shit,\" Tom said. \"Don't worry she will put you in.\" \n\nJo took a deep breath and gave Tom a half-hearted smile. \n\n*****\n\nThe Trinity crowd booed the girls and especially Jo when they ran out onto the court. It was definitely a hostile crowd because someone threw a paper cup at the girls as they sat on the bench taking off their warm-up suits. Meagan immediately walked to the refs. \n\n\"If someone else throws anything at my team I'm walking off the floor,\" she said firmly. \n\nThe head ref walked to the scorers table and they made an announcement that said the game would be forfeited if objects are thrown onto the floor. A chorus of boos rang down from the full bleachers on both sides of the court. \n\nCoach Meagan kept to her word and did not start Jo. The rest of the team looked in shock as the coach huddled them together. \"I don't want to lose to this team. Stick to basics and win every loose ball.\"\n\n\"Coach, why isn't Jo starting?\" Tina asked with a worried look on her face. \n\n\"Don't worry about Jo. Just play basketball,\" Meagan said. The team slowly walked to the large circle in the middle of the floor looking at each other for a leader but, no one looked confident. \n\nO'Leary grinned under her white nose guard at Jo on the bench as she lined up for the tip.\n\n\"Come on let's go!\" Jo shouted. ",
        "The game couldn't start any worse than it did. O'Leary made the first three baskets and another Trinity girl made two foul shots. Central was down eight to zip in less than two minutes. Meagan called a time out and the fans went nuts. \n\n\"You suck!\" a pimpled-face boy yelled at the Central huddle. \n\nJo glanced over at a priest from Trinity Catholic and saw him smiling and clapping. She knew he heard what the boy had yelled. \n\n\"You guys are standing around. Be aggressive! Tina, work the ball down low to May and April. Let's GO!\" As the team ran back on the court Jo begged the coach to put her in. \n\n\"Coach the three girls jumped me first. I was only protecting myself. Please put me in.\" \n\nMeagan saw the fat old coach of Trinity smiling as she glanced her way. \"Not yet.\" \n\nJo sat down and held her face in her hands as the play resumed. She peeked out to see Tina lob the ball to April who turned with an open lay up but was instantly hacked by O'Leary. April went flying onto her back and was slow getting up. \n\n\"That was intentional!\" Meagan yelled at the ref who didn't even look at her as he ran to the table and held up two fingers on one hand and two fingers on the other. \"Foul number 22,\" he announced. Fans booed his call.   \n\nApril was shaky as she moved to the foul line. As she released the ball towards the hoop O'Leary shouted, \"BOX OUT!\" It was enough to make April miss the shot. \n\n\"Didn't you hear that?\" Meagan shouted at the nearby ref. \n\n\"Quiet coach and sit down,\" the blonde-haired ref said firmly. \n\nMeagan was steaming as April again shot and O'Leary again screamed. This time the ball bounced around until it fell in. She turned and glanced at Jo whose face was begging her to let her go in. The whole team clapped when Meagan called her name, \"JO!\" \n\nJo pranced to the scorers table and watched hoping for a quick dead ball. She got it when O'Leary was fouled. The fans booed Jo as she ran by O'Leary waiting to shoot on the foul line. \"You better make them because they will be the last points you score,\" Jo whispered.  \n\nThe words from Jo were enough to make her miss both foul shots. Jo grabbed the rebound and headed down the court. O'Leary immediately picked her up. \"COME ON!\" \n\nJo saw another girl come over to double-team her which left Tina wide open. She faked a jump shot and tossed the ball to Tina who drained a long three. \"Stay on her. I can cover Thompson,\" O'Leary shouted to the other girl. \n\nJo pretended to turn and run back on defense as a girl took the ball out of bounds to toss to the other guard. The ball didn't make it because Jo turned quickly and intercepted the pass. She easily laid it in. Suddenly the crowd got quiet and the Trinity coach called a time out. The score was now Trinity 8 and Central 6. \n\n\"Good job Jo,\" Meagan smiled at her star. She could see the confidence come back in the other girl's eyes. \"Now I want full court pressure after every basket we score.\" \n\nTrinity was not ready for the full court pressure so the girl taking the ball out took too long. \"Five seconds,\" the ref said as he blew his whistle. It was Central's ball under their own basket. \n\nJo smiled at O'Leary who jumped in front of her as she looked for someone to get open. Trinity upped the pressure and no one was open. Jo quickly tossed the ball until it smacked off of O'Leary's thighs. She jumped in bounds and grabbed the loose ball. Before O'Leary could react Jo turned and banked in the shot. Tie game. \n\n\"That's not fair,\" O'Leary yelled at the ref who tossed a Trinity girl the ball to take out again. Jo saw O'Leary turn and run quickly down the court to catch a long pass. She immediately raced after her and was a step behind her as she went up for the lay-in. Jo reached under her and smacked the ball away. It was a clean hit. \"She fouled me!\" the girl cried to the ref. The ref just smiled and shook her head no. \n\nFor the remainder of the half Central pressed full court and Trinity turned the ball over 7 more times. The score at half-time was Central 30 Trinity 18. Coach Meagan smiled as she told them to keep pressing. As the team walked out of the locker room Tom was waiting for Jo. \n\n\"Hi,\" Jo said smiling. \"We're winning.\" \n\n\"I know someone told me,\" he grinned. \"O'Leary is going to get physical in the second half and you have to keep your cool.\" \n\n\"I know,\" Jo said. Keeping her cool was a very hard thing to do. \n\n\"She's got three fouls,\" Tom said. \"Two more and the regular season is over for her.\" \n\n\"Thanks,\" Jo said as she kissed him lightly. She ran to catch up to the rest of the team. A few minutes later as Tom walked towards the boy's locker room Billie ran down the hallway. \n\n\"Tom, Jo wants you to watch the second half,\" Billie said smiling. \n\n\"You sure?\" \n\n\"Yes, she said she's over what ever it was before and she wants you there for support.\" \n\n\"Great,\" Tom smiled as he ran behind Billie. He sat with the rest of the boy's team as the girl's lined up for the second half. Jo turned and smiled at him. \n\nIt was less than a minute later than O'Leary smacked Jo across the back of her neck as she drove to the hoop. As Jo laid on the floor the rest of the team waited for her to stand up and deck the girl. \n\nAnger raged in Jo's mind as she pushed herself up. She turned to look at O'Leary who towered above her waiting for a punch but Jo looked at Tom instead. She smiled at him as she slowly walked in front of O'Leary to the foul line. \"Chicken shit,\" O'Leary whispered as she lined up for the rebound. There were no rebounds as Jo made them both. The horn sounded and O'Leary had to leave the game with four fouls. Central was now ahead by fifteen. Jo walked to the bench and asked to be taken out. \n\n\"You want to come out?\" Meagan asked surprised. \n\n\"Yes,\" Jo smiled as she glanced over at Tina. \"We can beat them without me on the court.\" \n\nMeagan substituted for Jo and the two of them sat side by side as Central not only beat Trinity but beat them by twenty-two points. As the two teams shook hands Jo saw O'Leary coming closer. She got ready to duck a punch and instead saw the girl hold her hand out for a shake. \"Congratulations,\" Kathy O'Leary said. \n\nJo didn't want to shake her hand at first because of what she had done to Tina but saw something in the girl's eyes. It was sincerity. \"Thanks,\" Jo said as she shook O'Leary's hand. Both were happy they probably wouldn't play against each other again. \n\nAs they broke away Jo looked for Tom but realized they were getting ready for the boys game. She ran to the lockers and pulled on her sweats because she had to be there for him. As she sat in the bleachers waiting for the boys team to arrive Coach Meagan sat next to her. \"I'm proud of you.\" \n\n\"What for,\" Jo asked. She had only scored 15 points. \n\n\"For two things; you kept your cool for the first time I can remember and you had enough trust in your team mates to come out of the game.\" \n\nMeagan glanced down at Tom who smiled as he stood in line waiting to run to the hoop. \"Did he have anything to do with it?\" \n\n\"Yes, I've become a different person,\" Jo said smiling as he stopped and popped a twelve-footer.  \n\n\"I know I can see a big difference,\" Meagan said as she hugged Jo. \n\n\"Really? What do you see?\" Meagan asked. She knew she had kept her cool but didn't know what else the coach was taking about. \n\n\"Jo, you've become a woman,\" Meagan smiled.\n\n\"Really? A woman? Me?\" she giggled. She looked down at Tom again. \"And there is my man,\" she thought. \n\nThe Trinity team had scouted the Central boy's last two games and quickly realized that Tom had become the go-to guy. Tom was surprised when they put a six-seven guy guarding him. \"Don't expect to shoot over me country-boy,\" the tall lanky red-headed boy said as they lined up. \n\nThe defensive maneuver worked. Tom thought he was open to shoot and the tall kid jumped high to deflect his shot. Central was down by six with three minutes to go in the half when Tom took a break on the bench. Jo quickly moved up behind him. As the others watched the game Jo whispered, \"Take the ball to the hoop.\" \n\n\"Shit,\" Tom thought. \"She's right again.\" A few seconds later Tom moved back into the game and the skinny giant quickly picked him up as he passed half court. Tom moved through the motion offense and left his defensive man behind as he faked a long corner shot. The kid came out of no where and jumped to block the shot. Tom faked and quickly dribbled around him. He saw another tall kid waiting for him and faked another shot. As he second guy jumped to block his shot he pushed the ball to Billie who easily laid it in. Tom peeked at Jo on his way down the court and she gave him the thumbs up. \n\nThe Trinity team couldn't let him shoot so they had to contest his jump shot. His ball fakes left them standing still as he drove numerous times around them to the basket and laid the ball off to Billie or tossed it out to Calvin who drained the threes. Central took the lead and didn't look back. At the end of the game Calvin had twenty-two points and Tom only had ten but he also had fifteen assists. \n\n\"Great game,\" Calvin said as they walked to the locker room. \n\n\"Hey you were the big scorer,\" Tom snapped back. \n\n\"Yes, but you won the game for us. You looked like a big Jo Thompson out there.\"  \n\n\"Thanks,\" Tom said laughing. He then realized it was the biggest compliment someone could give him. \n\nAs he walked out to the buses he saw Jo waiting for him. She ran into his arms and kissed him. \n\n\"You were fantastic!\" she yelled when their lips broke apart. \n\n\"Yeah, I was a big Jo Thompson tonight,\" he laughed. \n\n\"What?\" Jo asked with a puzzled look. \n\n\"Private joke,\" Tom said as he kissed the most important person in his life. \n\n*****\n\nThe recruiting process got hot following the city championship games for both Tom and Jo. Both Tennessee and UCONN were offering both of them a full scholarship and both schools said it didn't matter if both came. The recruiting publications now had Tom listed as a top ten shooting guard and his name was showing up as a top 50 overall player. Tom's father was pushing for the University of Pittsburg which was close enough for Tom to live at home but Grandma Bell insisted he picked wherever he wanted because she had saved enough money to cover the extra expenses. \n\nJo's family was pushing for the top women's programs which included Tennessee, UCONN, and Duke. \n\n\"Where do you want to go?\" Jo asked Tom as they sat at Tom's kitchen table on a Saturday morning. \n\n\"You first,\" Tom grinned.  \n\n\"Why don't you write down your top three picks and I'll do the same?\" Jo said. \n\n\"OK,\" Tom said as he ripped out a sheet of notebook paper. His free hand covered what he wrote so Jo wouldn't see it. \n\n\"Ready?\" Jo asked smiling. \n\n\"Yes,\" Tom said as he pushed his folded paper next to hers.  They opened them at the same time. \n\nTom's read: Notre Dame, Pittsburg and North Carolina.  Jo's read: Duke, UCONN, and Tennessee. \n\nBoth frowned and looked at each other. \"Should we try it again?\" Tom asked. \n\n\"No because then we would be changing our top choices so we can be at the same school,\" Jo said taking a deep breath. \n\n\"What are you two doing?\" Grandma Bell asked as she walked in to get another cup of coffee.  \n\n\"Trying to pick a college that we both want to go to,\" Tom said sadly. \"We want to be together.\" \n\nBell stopped and looked at the two lists. Being a big fan of college basketball Bell smiled. \"You two want to be together right?\" \n\n\"Yes ma'am,\" Jo said looking over at Tom's list. \"I like Notre Dame too but my parents are not big on them.\" \n\n\"I like Duke but they have not offered,\" Tom answered. \n\n\"Maybe you can go to different schools and still be close?\" Bell said smiling. She turned and left the room. \n\n\"What did she mean by that?\" Jo asked. \n\nTom looked again at the two lists and smiled. \"How far away is Duke from Carolina?\" \n\n\"Oh my god,\" Jo said smiling. She jumped up and kissed Tom passionately before she ran into the living room and kissed Grandma Bell on her cheek. \n\nThat afternoon Tom called the Carolina coach and told him he was very interested in going to his school. Jo did the same to Duke and since she had already made an unofficial visit to Duke there was no question in her mind where she wanted to go. However she told the Duke Coach that she wanted to visit the school one official time. She quickly agreed. \n\nTom called Jo with the good news, \"UNC said they have been to my last three games and because of the city championship game where I got 15 assists they will offer me a full scholarship. They said they had been following me in Clarkton but was worried because of the level of competition. They want me to fly down to Chapel Hill this weekend.\" \n\n\"I told Duke I wanted to make an official visit and they agreed. I'll see if I can go this weekend too.\" \n\n*****\n\nEverything fell into place and on Saturday morning Tom and Jo boarded the same flight to Raleigh. \"Do you think we will stay in the same hotel?\" Jo asked as she held Tom's hand. \n\n\"Why do you have something in mind?\" Tom grinned. It was an hour flight so they had little time to play around on the plane. \n\n\"Excuse me miss but would you please find me a blanket,\" Jo asked the flight attendant as she passed. The woman smiled and tossed her the thin dark covering. Jo immediately spread the blanket across both of their laps. \n\n\"I'm not cold,\" Tom said trying to act serious. Seconds later Jo's fingers fell across this thigh. They were sitting in seats A and B next to the window. \n\n\"Ladies and Gentlemen please make sure your seats are in the upright position and your tray tables are up. Please buckle your seatbelts and turn off all portable electronic devices.\" \n\n\"Is your seatbelt buckled?\" Jo grinned as she reached up over his crotch and touched the metal attachment. \n\n\"Yes,\" Tom said smiling. Her fingers slipped down over his belt to the zipper. As the plane lifted off the ground Jo's fingers lifted Tom's hard-on from within his slacks. \n\n\"Are you ready for takeoff?\" Jo giggled as she stroked his hard prick. \n\nTom glanced across the aisle from Jo and noticed two older ladies looking at the thin blanket on his lap moving up and down. He was afraid they would say something but relaxed when one of them winked and smiled. He closed his eyes and leaned back as the plane banked to the left. \n\nJo teased him when she felt him ready to pop and then slowed down her strokes. Her right hand and arm was getting tired so she switched to her left hand. \"I can dribble with both hands,\" she whispered. She glanced up and saw the flight attendant coming with a drink cart. She quickly lowered the two trays from the seats in front of them without missing a beat with her left hand. \n\n\"Would you like a drink?\" The cute brunette attendant asked. Jo said yes and took a diet coke. \n\n\"Ah\u2026a\u2026ye\u2026\u2026\u2026.yes,\" Tom groaned. He thought Jo would back off jerking him off but she didn't. \n\nThe woman looked at him. \"Are you OK?\" \n\n\"Yes, it's his first flight,\" Jo said trying not to laugh. \"He would like a regular Coke.\" \n\nAs the flight attendant walked away Jo grabbed her arm. \"Could I have some extra napkins?\" The woman handed her a stack and smiled. Jo finally brought Tom out of his misery and finished him off into the stack of extra napkins. She giggled as she pulled the damp napkins out from under the blanket and crammed them into a barf bag. \n\nTom regained his composure and figured it was payback time. As Jo sipped on her Diet Coke he pushed his hand down to her knee. \n\n\"No,\" Jo said seriously. She knew she could not control her verbal output if Tom fingered her. \n\n\"You did me and now I'm going to do you,\" he grinned. He moved his fingers up under her dress to mid-thigh before her hand stopped him. \n\n\"Later at the hotel,\" Meagan whispered. She glanced at the two older women and saw them watching the blanket moving. \n\n\"Nope, I'm not stopping.\" \n\nJo tried to pull his hand from under her dress but he was too strong. She knew he was not going to take no for an answer. She glanced behind them and saw the two restrooms with \"vacant\" signs. \n\n\"Meet me in the restroom in two minutes,\" she whispered as she pushed his hand away as she climbed out of the seat. \n\nTom looked at his watch and as soon as the two minutes were up he almost ran down the aisle. He saw the two restrooms and both of them said \"vacant\".  As he looked into an empty one the other one opened and Jo's hand pulled him backwards until he was crushed against her body. She closed the door and locked it. \n\n\"We don't have much time,\" Jo giggled as she lifted her dress and pushed down her panties. Tom leaned over and pulled them from her feet. \n\nJo thought Tom would just touch her with his hand and was surprised when he picked her up until she sat on the small stainless steel sink. He opened her legs and moved his mouth to her golden nest. \n\n\"OHHH!\" Jo moaned when his tongue slid into her already dripping gash. She felt her ass slipping off the sink and grabbed onto the handrail on the wall. She knew now what the handrail was for. \n\nTom licked her swollen clit until he heard a loud moan escape her lips. He smiled and pulled his mouth away and slid his body up until his mouth capture hers. She did not know he had unzipped his fly until the hot tip of his penis pushed between her quivering pussy lips. \n\n\"Oh Tom,\" she moaned as five hot inches pushed inside of her. As they approached a mutual climax the \"RETURN TO CABIN\" light came on and someone tried to get into the door. Their bodies froze hoping whoever it was would go away. They did. \n\n\"Hurry,\" she moaned as she nibbled on his earlobe. \n\n\"Now,\" Tom announced as his stomach slapped rapidly against hers. \n\n\"I'm coming,\" Jo said trying not to scream. \n\nIt took them a minute to collect their composure and Jo left the restroom first. A young girl was waiting to get in but stopped abruptly when she saw Tom look out at her and then close the door shut. Tom walked out a few seconds later and joined Jo who was reading her Duke literature. \n\nAbout ten minutes later the brunette attendant moved up to Jo and pushed her panties into her hand. Jo thought she was busted until the woman smiled and whispered, \"Go Blue Devils.\" \n\n*****\n\nJo and Tom rushed ahead of the two older ladies who sat across from them on the plane. They headed down to the baggage claim and saw a young man and woman holding up signs with their names on them. Jo moved to the woman who was wearing a Duke hat and Tom to the man in the UNC hat. \n\n\"Would it be possible if I stay in the same hotel as my friend?\" Jo asked the Duke Representative. \n\n\"Is it very important to you?\" the woman asked. She didn't want to take any risks of upsetting the number one point guard recruit in the country. \n\n\"Yes,\" Jo said as she watched Tom probably making the same request to the Tar Heel representative. \n\n\"OK, but your agenda is pretty full today and tonight,\" the Duke woman said. \"Plus, we are responsible for your care and safety.\" \n\nJo quickly realized getting together with Tom would be pretty tough. Tom was discovering the same thing and since he did not have as much pull as Jo he had to go to the UNC selected hotel. \n\n\"I need to talk to my friend alone,\" Jo said as Tom walked their way carrying his luggage. \n\n\"I have to stay in Chapel Hill,\" Tom whispered. \n\n\"I don't think Duke will allow me to stay there,\" Jo said disappointedly. \n\nThey kissed and went with their guides. \n\n*****\n\n\"We are wondering why the sudden interest in Duke,\" the assistant coach Gina said to Jo as they sped towards the Duke campus. \"You told us a few months ago we were not high on your list.\" \n\n\"I've always liked Duke and have the GPA to get in but I guess I was worried about playing time next year.\" ",
        "Gina laughed. \"I don't think you have to worry about playing time. We've seen quite a few of your games since your sophomore season and you are a natural point guard. The girl we had playing point this year is a converted shooting guard and would love going back to her natural position.\" \n\n\"Great,\" Jo said as she looked at the green leaves on the trees. It would be at least a month before the leaves turned green back home. \n\nJo got a quick driving tour of the Duke campus and was welcomed at a huge luncheon at a private dining hall near Cameron Indoor Stadium. She met the University Chancellor, a few professors, the coaches and eight of the returning players. After a light lunch the head coach walked her into Cameron. She looked at all of the jerseys and pendants hanging from the rafters and turned to the head coach. \"How bad is the rivalry between Duke and UNC?\" \n\nThe coach laughed. \"The rivalry is mostly between the fans. The coaches and players get along pretty well. Gina told me about Tom.\" \n\n\"That's OK isn't it?\" Jo asked. She hoped there was no rule about dating a Tar Heel. \n\n\"Sure, but be ready for some big time teasing.\" \n\n\"The team is dressing to go through a short scrimmage. Would you like to join them?\" \n\n\"Really?\" Jo asked excited. \"I can play with them?\" \n\n\"Sure,\" the coach said as she reached into a small bag and pulled out a DUKE jersey with the number one on it. \"We already have your jersey and Gina has your bag. You did bring sneakers right?\" \n\n\"Yes,\" Jo said smiling. She grabbed her bag and quickly dressed. The players all welcomed her and told her how much they wanted her on the team next year. She was nervous at first when she walked onto Coach K court but after a few minutes of play she forgot where she was because she had a basketball in her hands. \n\nAfter five sweet assists the coaches were drooling in anticipation of the upcoming season.  \n\n*****\n\nTom too got the royal treatment as his guide showed him around the UNC campus and Franklin Street. He noticed a sign in front of the restaurant where he was to eat lunch that said, \"Welcome TOM!\" He stopped when he saw the place full of coaches and players he had seen recently on TV.\n\nBeing a small town kid it was a little much for him especially when a past Tar Heel who had played in the NBA came up to him. \"I hear you can shoot better than JJ,\" the man said smiling. \n\nTom's hand was shaking as he took the large man's hand and shook it. \"Yesss\u2026.sssir,\" he said not really realizing what he was saying. \n\n\"Good we need you,\" he said as he walked away. \n\nTom turned to his guide. \"Was that\u2026\u2026\u2026?\"\n\n\"Be like Mike,\" the man said laughing. \n\nTom was blown away especially when the Governor of North Carolina walked in and shook his hand. \"Welcome to North Carolina Tom,\" He said. \n\n\"Wait until Jo hears about this,\" Tom thought. \"She had only met the mayor of Clarkton.\" \n\nTom didn't get a chance to shoot around with the players but he did walk through the Dean Dome and saw all the history. Afterwards they drove him around Chapel Hill and showed him the plush athletics dorm. He asked about his scholarship and found out most every expense was covered so he wouldn't need a lot of Grandma Bell's money. After he checked into his room he quickly called Jo's cell. \n\nJo answered on the first ring, \"Hi.\" \n\n\"This place is amazing,\" Tom said, excitedly. \"This has to be the best basketball program in America.\" \n\n\"No way,\" Jo injected quickly. \"Wait until you see Cameron Indoor.\" \n\n\"I met MJ!\" Tom cried out. \n\n\"Michael Jackson?\" Jo laughed. \n\n\"No dumb, the other Michael,\" He laughed. \n\n\"I've got dinner plans with the team and coaches,\" Jo said disappointed that he would not be there. \n\n\"Me too with the coach and his family,\" Tom replied. \n\n\"What hotel and room number are you staying tonight?\" she asked. \n\nTom told her the name of the hotel and room number. \"Call me when you are finished with dinner,\" she said. \"I love you.\" \n\n\"Me too Jo,\" he said. \"I wish I can be with you tonight.\" \n\nJo had built a great relationship with the assistant coach Gina and sat next to her at a plush restaurant in the Research Triangle Park. During the meal the head coach asked Jo what she thought of Duke. \n\n\"I love it. If you want me I'll come,\" Jo said smiling. \n\n\"Of course we want you,\" the coach said. She took her fork and clunked her wine glass a few times. \"I've got a very special announcement to make,\" she said smiling. \"Jo Thompson wants to go to Duke!\" \n\nSuddenly the entire room broke out in applause and everyone jumped from their seats to welcome her. \n\nDown Interstate 40 a similar conversation was taking place but this was between Tom and the Coach's 15 year old daughter. \"Will you come to Carolina?\" the teenage girl begged him as they sat at the diner table. \n\n\"Jackie, please don't put Tom on the spot like that,\" her mother said. \n\n\"But he is so cute,\" the girl said blushing. \n\n\"And, he's a little old for you,\" the Coach laughed. \"I'm sorry about that.\" \n\n\"No, that's a great question and of course I'll come to Carolina. Nothing could be Finer,\" he said grinning.\n\n\"Welcome to the team,\" the coach said holding out his hand. \n\n*****\n\nIt was almost ten o'clock when Tom was dropped off at the hotel. The guide told him to be ready at 9:00AM for a ride back to the airport the next morning. He barely got into his room when his cell phone rang. It was Jo. \n\n\"I'm downstairs,\" she said. \"I just want to make sure you are in your room.\" \n\n\"But how?\" \n\n\"Gina brought me here,\" Jo giggled. \"She will pick me up here tomorrow morning. We have the whole night together.\" \n\nTom smiled, hung up his phone and as he grabbed his bag he quickly pulled out his One a Day Vitamins for Seniors. He took two just to make sure. \n\nJo knocked and almost pushed him over getting into his room. \"This is just like a honeymoon,\" she gushed out as she jumped into his arms. \n\n\"Oh no,\" he said smiling. \"Our honeymoon will be in a nicer place than this.\" \n\nJo pushed back and looked into his eyes. \"Our honeymoon?\" \n\nTom moved down onto his knees in front of her. He held out a diamond ring and looked up into her baby blue eyes. \"Jo will you marry me?\" \n\nJo was speechless for the first time ever. She took the ring from his hand and looked at it. The diamond was not that big and it looked old. She smiled as she tried it on her ring finger. It fit perfectly. \n\nTears formed in her eyes as she took a deep breath. \"Yes, oh God YES!\" she said as her moist lips and face pressed against his. \"I love you so much.\" \n\n\"Even if I'm going to be a Tar Heel?\" he laughed. \n\n\"Well everyone can't be perfect,\" she giggled as she looked again at the older ring. \"Thank you Grandma Bell,\" she thought to herself.\n\nEPILOG: \n\nNone of the parents were happy about Tom and Jo becoming engaged at such an early age but they promised they would not get married until after they graduated college. Jo brought the Duke women a National Championship in her sophomore year and badly injured her knee in her junior year. After a year of medical care by the Duke Medical Staff Jo returned for her senior year and become the National Player of the Year. \n\nTom didn't break the starting lineup until his junior year when the Heels won the ACC championship as Tom made a long three at the buzzer. During his senior year he had his own National Championship ring. After college Tom stayed on at Carolina as an assistant coach while Jo played two years for the Charlotte Sting of the WNBA until her knee went out on her again. \n\nThey named their first daughter Bell, who could soon run and shoot better than most of the boys. But, that's another story.  \n\nEnd of Tomboy\n\nEnding note: I've had so much pleasure writing this story because you readers guided me along. Too much sex, go slow, no tragic ending, don't let them cheat, more Grandma Bell, etc. etc. This is your story more than mine. Thanks again to all of you for your nice feedback. Don't forget to vote\u2026\u2026..Slick "
    ],
    "authorname": "Slickman",
    "tags": [
        "o'leary",
        "ball hoop",
        "tom shouted",
        "jo mother",
        "girl hold",
        "father finally",
        "national championship",
        "smiling tom",
        "sofa tom",
        "ma'am tom"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/tomboy-ch-05"
}