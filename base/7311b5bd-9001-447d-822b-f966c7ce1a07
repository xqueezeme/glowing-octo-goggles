{
    "title": "Stray Cats Ch. 03",
    "pages": [
        "This continues the reprint of a story that I posted on this site in 2015. I was rereading it lately and correcting some of the typos (God...so many!) when it dawned on me that perhaps I should repost this story (corrected, of course, and in the original chapter format) for readers today. It's still relevant, well most of it is. I hope you enjoy it. \n\nOh, as a reminder, you might consider going back to read the opening chapters as much of who these characters are is established there. But, as always, it's your choice. \n\nPlease leave a comment when you've finished as feedback is the lifeblood of a writer. \n\n--Dreamweaver594 \n\nThe Office Party and a trip to Seattle \n\n=ONE= \n\nSunday arrived quietly with the sun peeking through the trees in the front of Tom Reilly's apartment house. Alex opened his eyes and blinked as the sun rudely streamed through his window. It was waking him much earlier than he wanted. He didn't get in from his night shift at the convenience store until after two in the morning and sunrise at six was rude, no matter how anyone looked at it. \n\nThe day was starting earlier and earlier as the world drifted towards summer in Wilmington. It also meant that Alex's spring semester was nearly finished and he was facing another round of finals in a couple of weeks. The thought made him sink lower into his pillow. But today he had no time for studying, he promised to devote it all to Amanda. \n\nToday was the day he was going to Amanda's office party with Rachel. It wasn't that he didn't want to go; he did, actually. He just wasn't all that confident about going as April, his female counterpart. He'd only been dressing as April for a couple of days now, and he wasn't at all that convinced that others would accept him. Besides that, the possibility that he would embarrass Amanda and Rachel at a big corporate office party was not his idea of a pleasant Sunday afternoon. \n\nAmanda, wearing fluffy pajamas, opened his front door as quietly as she could and slipped inside with a quirky grin. She almost glided across the floor, tiptoeing on bare feet. She slipped under the covers to cuddled up next to him. \n\n\"Morning, sweetie,\" she said, as she leaned over and kissed his cheek. \"You got in way too late last night.\" \n\n\"The night truck was late again and we had to wait until they unloaded to restock the shelves,\" he groaned. \n\nAmanda drew silly circles across his chest as she looked into his eyes. \"Have you decided who's going with me to the party this afternoon?\" she asked sweetly. \n\n\"I think it has to be Alex,\" he murmured. \"I'm not confident enough to go out as April. Besides, you've already told them about me as Alex so me showing up as April would be totally awkward.\" \n\n\"That's true, but I so wanted to see you in that new dress I picked out,\" she replied with a pout. \n\nAlex pulled her across his chest and wrapped his arms around her tightly. \"I'll wear it next weekend when I take you and Rachel out to dinner,\" he replied kissing her neck and nibbling at her earlobe. \n\n\"It will just be me, babe,\" Rachel said, as she turned to close Alex's door. \"We have to take Amanda to the airport on Friday, remember?\" She walked across the floor in her nightgown and bare feet to join them on his bed. \n\n\"Oh crap, I forgot,\" he muttered, making room for Rachel. \"What time do you need to be there Amanda?\" \n\n\"By 6:00 in the morning.\" \n\n\"Ugh, too early.\" Alex rolled off of the couch that served as his bed and sat at his makeshift desk. He jotted down a reminder so he wouldn't forget, again. \n\n\"I tell you what, I'll take us to breakfast instead, just us girls,\" he said with a wry grin. \n\n\"Where?\" Amanda asked, her eyes sparkling with excitement. \n\n\"There's this quaint little Parisian restaurant on Elm Street, Madeline's I think it's called. I stopped in there the other day to check it out.\" He reached over and gave her butt a tap. \"Come on, scoot, I need all the time I can get to not look like a gorilla in drag,\" he said with a broad grin. \n\n\"I'll be back up in a flash to help,\" Amanda offered. \n\n\"Me too,\" Rachel added, scooting to the edge of his bed. \n\n\"Okay, let's hurry, I want to beat the church crowd,\" he replied. \n\nBoth girls scrambled for the door as Alex walked towards his bathroom. \n\nThirty minutes later they were both back in his room helping him put on the sundress that Amanda bought at Target. Rachel, wearing flats for a change, quickly blow-dried his hair while Amanda, in sandals and capris, finished up his makeup. She pulled a pair of false lashes from her purse and started to apply them. \n\n\"These go on quick, look great, and they're easy to remove,\" she said as she lightly placed the second lash on his eye. \"No mascara to scrub off, either.\" \n\nMeanwhile Alex dabbed a small bit of nail glue on a fingernail then he pressed a false nail in place. \n\nTwenty minutes later he stood up and spun around in his three inch heeled sandals. \n\n\"How do I look? Passable?\" he asked. \n\n\"Heavens yes! Let's go before I mess up your makeup devouring you right there on the spot,\" Rachel replied with a devilish grin. \n\n\"I can't believe I have such beautiful sisters!\" Amanda exclaimed. \n\nAs the three of them walked down the last flight of stairs and into the front foyer, Tom Reilly poked his head out of his apartment. \n\n\"Hey Rachel,\" he asked squinting and looking a bit haggard in the morning light. \"You haven't seen Wells have you?\" Tom took a moment and glanced again at Alex, now dressed as April. She stood slightly behind Amanda in a pretty sundress. \n\nApril looked away hoping that Tom wouldn't make any connections to the missing tenant from the third floor. \n\n\"No Tom, he got in really early this morning. He's probably still in bed,\" Rachel replied with as much sincerity as she could muster given the urge to snicker. \n\n\"Thanks.\" Tom ducked back inside his apartment and closed his door. April could hear him muttering to himself even with the door closed. \n\nThey turned and walked quickly down the back hallway and out the door towards Alex's car. A French bakery was calling their name. \n\nMadeline's was a quaint little French bakery that served Parisian cuisine for breakfast and lunch. It had an old world charm about it that spoke volumes about taking life at a more leisurely pace. It was always overcrowded by ten in the morning, especially on Sundays. April and the girls just managed to make it there before the mid-morning rush so they found a little table in a secluded alcove and sat down to enjoy their brunch. \n\n\"We have to do this again real soon,\" murmured Amanda taking the last bite of her quiche. \n\n\"As soon as you get back from Seattle,\" Rachel replied, smiling regally. \"And this time it'll be my treat.\" \n\n\"April, I think you're getting better about being April,\" Amanda said with an impish smile. \n\n\"What do you mean?\" She asked. \n\n\"The way you walk. How you sit. Even the way you eat, it's all becoming a lot more feminine.\" \n\n\"It is kind of fun to watch her bloom,\" Rachel added. \"You're a fast learner, babe.\" \n\n\"Thanks, that's high praise coming from you two, you guys are like drill sergeants you know.\" \n\n\"We have plans,\" Rachel said with a wicked grin, twisting an invisible moustache. \n\nAmanda laughed and playfully swatted Rachel's shoulder. \"How far do you want to go?\" she asked. \"Would you like to live as a woman full time?\" \n\n\"I don't think so. Don't misunderstand me, I love moments like this where the three of us can sit here casually and have a conversation, just us girls. These moments are really special to me. But remember that there is still a masculine side to me and that side wants to be here too.\" \n\n\"Are we pushing you too far?\" Amanda asked, looking a bit worried. \n\n\"No, I don't think so because it's all coming from love.\" \n\nApril looked up to see Amanda's eyes twinkle and Rachel's smile. \"I just think I need time to find out who I am, that's all. I think I belong somewhere between April and Alex. I'll get there eventually. I could never have done this without your help, you know. You two have been such wonderful sisters to me. \n\nThey giggled and all three held hands. \n\n\"Hey, what time is it?\" Rachel asked. \n\nAmanda glanced at her wristwatch. \"Nearly eleven, crap, we have to go, the party starts at one,\" she replied, looking a bit frantic. \n\nAn hour later Alex walked across the hallway and knocked on Rachel's door. He was wearing a nice pair of men's trousers and a light blue dress shirt and tie. \n\n\"Can you help me with these?\" he asked as Rachel opened her door. He handed her two crystal flower shaped stud earrings. \"I'm still new to this and I can't seem to get them to stay.\" \n\n\"Sure babe, come over to the mirror and watch,\" she replied, taking his hand in hers. \n\nRachel pushed the earrings in place and fastened the backs to them. Then she looked at him with a smirk and bit her lower lip. \n\n\"What?\" he asked looking into the mirror a second time. \"Oh, yeah, I suppose those should probably go,\" he added, carefully taking the false eyelashes off his eyelids. \n\nAmanda knocked softly and opened Rachel's door. She stepped into the living room as Rachel and Alex emerged from her bathroom. \n\n\"What should I do with these?\" Alex asked holding the eyelashes out to give back to Amanda. \n\n\"Keep them, sweetie, they look good on you,\" she replied. \"Oh, and I like the earrings too. Is that a compromise?\" \n\n\"A little,\" he replied. \"Nobody at your office really knows me there so I suppose if I go as 'me' then they'll see that these earrings are part of 'me'. \n\n\"I like that,\" Amanda replied, with a huge grin. \n\n\"So do I,\" Rachel added. \"What else is a 'part of you'?\" she asked with a twinkle in her eye. \n\n\"That's a secret waiting for you both to find out later when we get home,\" Alex replied, with an impish smile. \n\nThe elevator chime announced their arrival at the ninth floor of the Ackerman building. As the doors slid open a wall of mahogany paneling lining the vestibule surrounded them. The words 'Dresher, Cummings, and Sanford -- Investments and Securities' in bold gold letters were mounted in the middle of the wall opposite the elevators. It was part of the richly appointed hallway that led to Amanda's office. \n\n\"Wow, nice place!\" Alex exclaimed, in a low whisper. \n\n\"Yeah, don't let it get to you,\" Amanda replied. \"This is how they like to impress or intimidate their clients, it depends on how you look at it. Don't worry, it's all for show.\" \n\n\"Remember babe, they all put their pants on one leg at a time just like the rest of us,\" Rachel added in a whisper as they walked towards the reception desk. \n\n\"I'll keep that in mind,\" he responded as they walked past the reception desk and into the commons area of the office. In the commons area a large banquet table was centered in the room. It was filled with all sorts of finger food and fancy delights. The table held a sparkling set of coffee urns, several bottles of champagne, wine, and numerous types of imported beers. It all looked rather festive. \n\nThere were about twenty people milling about as they entered. Amanda grabbed Alex and Rachel's hands and began to introduce them to everyone as her boyfriend and her sister. \n\n\"I didn't know you had a sister, Amanda,\" said Margaret Cummings, joining the grou. She was the firm's chief legal counsel and a senior partner. \"Hello, I'm glad to meet you,\" she said to Rachel. \n\n\"Yes,\" replied Amanda, \"she's the best sister in the whole wide world.\" Amanda gushed and Rachel blushed. \n\nMargaret turned to Alex and smiled. \"Hello again. I hope you're feeling better.\" \n\n\"I am, thank you,\" Alex replied with a guarded smile. \n\nAmanda looked a bit shocked. \"Alex, how do you know Mrs. Cummings?\" \n\n\"We had a brief run-in at an intersection a while back. I mentioned it at one of Reilly's backyard parties, remember?\" \n\n\"He was determined to not let them do a full exam,\" Margaret added. \"No matter what they offered he refused. I was very confused by it all.\" She held his hand and smiled warmly. \"But no matter, it looks like you're doing well in spite of it all.\"  \n\n\"Thank you Mrs. Cummings, I appreciate everything you did. Even replacing Tom's beat up bicycle.\" \n\n\"It was the least I could do, young man, and you're welcome.\" \n\n\"She smiled to them all then stepped away towards a new group of guests that had just arrived.\" \n\nLeaving Margaret and finishing their rounds of greeting most of the people in the room, the three of them walked casually over to the refreshments table. There was quite a spread of canap\u00e9s and desserts. \n\n\"Do you know what all this stuff is?\" Alex asked, in a whisper to Amanda. \n\n\"Not a clue,\" she replied, \"but it looks scrumptious. Let's find out,\" she added grabbing a plate. \n\nThey filled their plates and then found a seat near a window that overlooked a park that hugged a meandering river near the center of downtown. \n\n\"Look at that,\" Rachel said with a chuckle. \"You can see Moulin Rouge from here.\" \n\n\"Hmm, yeah,\" Amanda replied then she turned with a quizzical look on her face. \"You don't have to work tonight, do you?\" \n\n\"Yeah,\" she replied with a sigh. \"I'm on at nine and off at one.\" \n\n\"Me too,\" Alex added with a frown. \"But I'm on at seven. At least I can give you a lift home after work if you want, Rachel?\" \n\n\"That would be lovely,\" she replied. \"Text me when you're on your way.\" \n\n\"No problem,\" he replied with a smile. \n\n\"Well crap, that means I'm alone again tonight. This sucks,\" Amanda slumped in her seat with a pout. \n\n\"Hello Amanda, nice to see you this afternoon,\" said a tall thin man with beady eyes. \n\n\"Hello Mr. Simmons,\" Amanda replied, suddenly looking a bit nervous. \"This is my boyfriend Alex and my sister Rachel.\" \n\n\"Well so nice to meet you both,\" Simmons shook their hands, without actually looking at either of them in the eye. The handshake bothered Alex. It was cold and clammy, like shaking the tail of a dead fish. \n\nRachel watched Simmons the whole time. He never seemed to take his eyes off of Amanda. And he looked at her as if he was thinking of things to do with her that would be illegal in all fifty states. \n\nI've seen this slime ball before, she thought, trying to remember where she'd seen him. It wasn't on the tip of her tongue, but she'd remember soon enough. \n\n\"So Amanda,\" Simmons continued. He pushed his way in to sit between her and Rachel. \"I see that Ballenger account has really taken off with your guidance, nice work, kiddo.\" Simmons patted her knee as he talked to her. \n\nAmanda began to slide further away from Simmons and up against Alex. \n\n\"Thanks,\" Amanda replied. \"I was just telling my boyfriend Alex about that account.\" Amanda placed an extra emphasis on the word boyfriend. Simmons managed to notice the implication. He glanced over at Alex a moment and watched as Alex glanced down at his hand on Amanda's knee. Then Alex stared coldly at Simmons, who removed his hand from her knee with a smirk. \n\n\"Well, I'm looking forward to working a lot closer with you on a couple of new accounts that the firm just acquired. They are very important and the boss doesn't want us to screw them up,\" Simmons said with a leering grin. \n\n\"No problem,\" Amanda replied, \"I'll see you bright and early Monday morning, right?\" \n\nSimmons nodded then stood up and turned to saunter off towards one of the clients who just emerged from the elevator. \n\n\"That guy gives me the creeps,\" Alex muttered below his breath, as he watched Simmons walk away. \n\nRachel glanced at Alex briefly then noticed Amanda shivering a little. \n\n\"Hey Sis, want to go to the restroom with me?\" Rachel asked gently. \n\n\"Yeah, I need to wash my hands,\" Amanda replied a bit shaky and looking to Rachel and Alex for reassurance. \n\n\"Go ahead sweetie, I'll wait right here and watch our stuff,\" Alex said, with a warm smile. \n\nAmanda and Rachel turned and walked towards the restroom as Alex sat back down on the bench and gazed out the window. \n\n\"Where's the ladies restroom?\" \n\n\"We don't have separate restrooms,\" Amanda replied as they walked through the restroom door. \"It's a new trend I guess. Besides, management likes to keep the costs down and if they only have to create one restroom to accommodate the staff then they can make the place nicer. At least that's what I've been told. It's all stalls anyway so I guess it doesn't really matter.\" \n\n\"I think I saw this on television last year, the Allie McBeal show,\" Rachel said as she looked around the room. \n\nAmanda walked over to the sinks and started washing her hands while Rachel stepped into one of the stalls. \n\nOutside, Alex sat quietly munching on another cracker while gazing out the window. He turned briefly to set his plate down on the bench when he noticed Simmons skulking towards the restroom area. Alex's brow began to knit; it did that when something in the back of his mind told him that things were out of place. \n\nAmanda stood at the sink counter and pulled several paper towels from the dispenser to dry her hands. Rachel was still in her stall when Simmons walked into the restroom. \n\n\"Well, Amanda, fancy meeting you here,\" he said with a leer. The expression on his face was one of expectation rather than surprise. \n\nOh God, is that the best pick up line you've got, Simmons? Amanda wondered as she turned to confront him. She was shocked to see that he was fast approaching her. \n\nHe reached around each side of her and placed his hands on the sink counter, trapping her against it. Then he slowly began to move his lips towards Amanda's face. \n\n\"What do you think you're doing Mr. Simmons?\" Amanda shouted as she pushed back against him. \n\n\"Just getting to know you better,\" he replied sarcastically. \"After all, we are going to be working a lot closer together in the future aren't we?\" \n\n\"Stop it! Get off me!\" Amanda shouted as she struggled to push him away. \n\nA moment later a stall door slammed open and Rachel strode across the restroom floor. She planted one foot on the floor and swung her other foot up to firmly place the point of her shoe directly into Simmons' crotch. As he crumpled to the floor in pain, Alex burst through the restroom door. \n\nRachel reached down and pulled Simmons around to face her, her fist was cocking back to slam into the weasel's face as Amanda cowered against the sink counter crying. \n\n\"Rachel! What's going on?\" Alex demanded as he caught her arm before she could slam it down. \n\n\"I finally remembered where I saw this pervert,\" Rachel spat into Simmons' face. \"You used to troll 2<sup>nd</sup> avenue looking for young boys until you nearly got busted for pedophilia, didn't you, scum? I suppose campaign contributions got you off the hook, huh? Well not this time! Let go Alex, I'm going to smash his face in!\" \n\n\"I'm sorry, I didn't mean anything by it, I was just joking around, okay Amanda?\" Simmons squeaked out an apology, pleading for clemency. \n\n\"Rachel, don't,\" Alex spoke softly as he held her tightly. \"He's Amanda's boss. As much as you'd like to punch his face in, you can't. She could loose her job. It's not right, it never is.\" \n\nThen he bent down and put his nose inches from Simmons's face, without touching him. \n\n\"But believe me you little fuck, if you so much as touch her I'll find you and fucking kill you,\" he hissed vehemently, barely audible but loud enough for Rachel and Amanda to hear. \n\nSimmonds opened his mouth as if to protest then he looked again at Rachel then glanced back at Alex. True terror crept into his eyes as he cowered on the floor under their unwavering stares. \n\nAlex stood up and lifted Rachel off of Simmons then he stepped over him to help Amanda stand up. The tears in her eyes were trailing down her face as she shuddered in Alex's embrace as she struggled desperately to fix her dress. Alex looked down and saw that Simmons must have pulled at Amanda's new dress when he fell because one of the straps had torn off. Her bra was exposed in the front and she was trying frantically to hold her dress up, while sobbing at the same time. ",
        "\"Come on sweetheart, let's get you home,\" he said softly lifting Amanda away from the counter. He held out an arm as they stepped over Simmons and gathered up Rachel on the way out. He kissed her on the cheek as they walked out the door. \n\n\"I'm glad I'm on your side, beautiful,\" he said hugging Rachel, firmly. \n\nHe picked up his coat and draped it over Amanda's shoulders as they turned and walked towards the elevators. \n\n\"We'll get this fixed next week and it will be as good as new,\" Rachel said to her as softly as she could. \"Or that SOB will pay for a new one,\" she growled under her breath as they stood near the elevator. \n\n\"Rachel, I love you dearly, but that's not how the corporate world works,\" he said sadly. \"No matter how good it would feel to kick his ass right now, in the end she would have to pay for it with her job.\" \n\n\"Not today,\" announced Margaret boldly as she walked from the reception area with determination. She closed quickly on the three of them standing near the elevator doors. \"Amanda, I am so very sorry for what happened in the restroom just now. I promise you that it will never happen again. I was in one of the other stalls and I overheard what happened. Your friends handled everything before I could even open the stall door.\" \n\nMargaret turned to Alex and shook his hand. \n\n\"Thank you young man, for keeping your head about you. In the long run it will make what I'm going to do on Monday a whole lot easier.\" \n\nShe turned back to Amanda and smiled warmly. \n\n\"Amanda, you're one of our best and brightest analysts and we don't want to lose you or your talents. From now on you'll work directly for me. There are going to be some changes around here come Monday morning, but trust me, you being forced to leave this firm is not going to be one of them.\" \n\nMargaret extended her hand. She took Amanda's and firmly shook it. A chime sounded and the elevator door opened. Alex, Rachel, and Amanda stepped into the elevator with a look of shock on their faces. As the elevator door began to close Margaret nodded and turned towards the main office. \n\nAmanda, still a bit thunderstruck by what had just happened, turned to Rachel and hugged her tightly. \n\n\"You truly are my big sister, Rachel,\" she smiled and hugged her again. \n\n\"I just did it because I knew that if Alex saw what he was doing he would have killed the bastard. I hate visiting people in prison,\" she said with an awkward grin. \n\nAmanda leaned up and kissed Rachel on the cheek. \"Thank you, Sis.\" \n\nAlex wrapped his arms around the both of them and kissed Rachel on the other cheek. \n\n\"Thank you love,\" he added, \"for watching over both of us.\" \n\nRachel grinned and sighed. \"Your welcome, babe.\" \n\nAs they walked towards Alex's car Amanda began to reflect on what had just happened in the restroom on the ninth floor. \n\nDeep down inside she realized that she still hadn't come to grips with the attempted rape that her stepfather tried on her years earlier. The trauma of watching someone, especially your father, well, stepfather, try to force themselves on you had left her scarred emotionally. When Simmons tried it she froze rather than attempt to defend herself, her self-confidence dissolved. \n\nShe knew she couldn't let assholes like Simmons or her stepfather rule her life, she thought with determination. She had to find a way to defend herself! \n\nAmanda continued to think about it as Alex drove them back to the apartment house. Along the way she noticed a recreation center with a sign out front announcing upcoming classes in Tae Kwon Do. It was as if karma turned on a light. \n\n\"I've decided that I'm going to start taking self-defense classes,\" Amanda announced to Rachel and Alex. \"As soon as I get back from Seattle. I'm sick of being pushed around by assholes like Simmons. And you guys won't always be around to help me out. So I need to do this for myself. \n\n\"Sign me up,\" Rachel agreed. \"I'll take them with you.\" \n\n\"Me too,\" said Alex. \"Although Rachel should probably be teaching them!\" \n\nEveryone laughed at that remark and the atmosphere in Alex's car became a lot lighter. \n\n\"Besides,\" Alex said, \"I could use the exercise, I'm getting flabby.\" \n\n\"Nonsense, you have such a cute tushy,\" Rachel said, coquettishly. \n\nThey got back home just in time for Reilly to catch Alex as they walked in the back door. \n\n\"Wells!\" he shouted. \"Finally. I need help with that fire ring, remember?\" \n\n\"Sure Tom, let me change and I'll be right down.\" \n\nAmanda opened her apartment door and pulled Rachel in behind her. As she closed her door she glanced up the staircase and caught Alex's eye. He nodded and smiled then disappeared up the next flight of stairs. \n\nAmanda's apartment was larger than Alex's small efficiency but not as large as Rachel's. It was a small three-room apartment with the central room serving as the kitchen and living space. There was a bedroom off to the left and through there a small full bath adjoining it. \n\nThere was a lovely bay window seat that looked out onto a side yard. The window included a lovely view of a huge old maple tree that offered ample shade to that side of the house in the summer. In the short amount of time since Amanda moved into her apartment, she managed to make the place seem homey and comfortable. There were a few photographs on the dresser, mostly of her mom and her cousin in Seattle. There were several prints and a few art posters covering the walls. What little furniture she brought with her from Salt Lake City was soon discarded for a much nicer living room set she found at a second-hand store a couple of weeks after she moved in. \n\n\"I need a drink, how about you?\" Amanda asked opening a bottle of wine and taking out two glasses. \n\n\"I'd love one,\" Rachel replied. She walked over to the couch and flopped down near the window. \"What about Alex?\" \n\n\"He saw us come in here. He'll be in as soon as he's finished playing with Reilly.\" \n\nShe poured two glasses and waked over to sit next to Rachel. \n\n\"I wish I didn't have to work tonight,\" Rachel lamented wrapping an arm around Amanda's shoulders. \n\n\"Me too, I really miss you guys when you both have to work late.\" Amanda paused a moment and smiled at Rachel sweetly. \"Rachel...\" \n\n\"Shush,\" Rachel interrupted. \"We're family, we watch out for each other. That's what families do.\" \n\n\"I was so scared,\" she murmured softly. \n\n\"I know, I was too,\" Rachel replied, softly stroking Amanda's hair. \n\n\"All I could think about was my sicko step-dad sneaking onto my bedroom when I was thirteen. I just froze,\" she said as she sat closer. \n\nRachel continued to stoke her hair gently as Amanda leaned against her shoulder and sighed. \n\n\"Would you hold me?\" she asked, meekly. \n\n\"Forever,\" Rachel said, setting down her glass of wine. She held out her arms for Amanda to curl into. In a matter of moments she was sound asleep. \n\nIt was nearly five o'clock before Alex was able to finish all the chores that Reilly had on his list. He dusted himself off on the back porch then walked down the hall towards Amanda's apartment, stuffing work gloves into his back pocket. He opened the door quietly and peeked his head in to see Rachel and Amanda asleep on the couch. As he started to back out of the apartment he saw Rachel open her eyes and motion him over to her. \n\n\"She's exhausted,\" she whispered. \"Help me get her to bed, love.\" \n\nTogether they carried Amanda into her bedroom, removed her shoes and her torn dress then laid her gently in her bed. Rachel and Alex both leaned over and kissed Amanda lightly on the cheeks and she snuggled further down into her pillow with a sweet smile on her face. \n\nThey tiptoed out the door and closed her apartment door gently. Then they slowly ascended the three flights of stairs to their apartments. When they arrived on the third floor Alex turned to Rachel and hugged her tightly. \n\n\"You are one beautiful woman,\" he whispered into her ear and she hugged him back. \"I've been very remiss in not telling you that often enough.\" \n\n\"Thank you,\" she whispered her reply, \"I love you too.\" \n\nAs they parted to go into each apartment Alex turned and asked, \"Do you have you're driver's license?\" \n\n\"Sure, why?\" \n\n\"Why don't you take the car tonight? You could drop me off and pick me up when you get done. We both get off about the same time don't we? Unless...\" \n\n\"Oh God, that would be perfect, thank you Alex,\" she said interrupting. \"You have no idea how much I hate the bus. What time do you need to leave?\" She asked. \n\n\"In an hour.\" \n\n\"Come over when you're dressed and I'll fix something light for dinner,\" she said with a huge smile. \n\nAlex blew her a kiss and smiled as she closed her apartment door. \n\nTen minutes later, he opened Rachel's door and peeked his head in. \n\n\"Hey there, can I come in?\" \n\n\"Of course,\" Rachel replied. She stood in the kitchen dicing vegetables for a salad while a chicken breast fried on the stove top. Alex wandered over and sat on a stool at the island counter. \n\n\"I like the idea of learning some self-defense,\" he said. \"Amanda's right, we can't be with her all the time and I've heard that martial arts can build your confidence levels too.\" \n\n\"I know I've always wanted to learn. Everything I know is what I've learned off the street.\" \n\n\"It certainly was effective today,\" he said with a smirk. \n\n\"I hope it hurts that bastard to pee for the next six months,\" Rachel hissed vehemently. \n\n\"It probably will, considering the way the point of you shoe connected with his balls,\" said Alex shaking his head. \"I'm surprised you didn't make him a eunuch,\" he added with a chuckle. \n\nRachel blushed slightly and gave him a wry grin, looking over her shoulder. \n\n\"I like the little crystal flowers,\" she said coyly. She was referring to the small earring studs that Alex added before they left for Amanda's party. \"Where did you get them?\" \n\n\"I saw them in a little shop on 9<sup>th</sup> avenue. I just wanted to add a little accent, nothing flashy,\" he replied. \"Baby steps, you know.\" \n\n\"Of course. They're cute.\" \n\n\"Thanks. Here's the keys to the car,\" he said pulling a ring of keys from his pocket and tossed them onto the counter. \"I hope you're okay with a stick-shift.\" \n\n\"No problem, babe,\" Rachel replied. \"My uncle owned a farm. I learned to drive a tractor when I was ten.\" \n\n\"The image of you on a tractor boggles the mind,\" he said with a devilish grin. \n\n\"I'll boggle your mind,\" she grinned as she turned to swat his head playfully with a hand towel. \n\n\"That'll have to wait till I get back.\" He swung at her butt and missed. \n\n\"Hey, let me see your driver's license,\" he said with an impish grin. \n\n\"Why? Don't you trust that I have one?\" she asked digging through her purse and handing him her wallet. \n\n\"Of course I do, I just want to see your picture.\" \n\n\"Wait a minute,\" she wrapped her arms around him and playfully tried to wrestle her wallet out of his hands. \n\n\"Oh wow,\" he said, a bit amazed, \"even without makeup you look sexy.\" \n\n\"I do not. I look hideous.\" She blushed crimson. \n\n\"No, you do, especially your eyes. Hmm, your gender is listed as male,\" he remarked as he handing back her wallet. \n\n\"Yeah, I know,\" she said stuffing her wallet back into her purse. \"In most states you have to be anatomically female to be listed as a female. It's one of the reasons why I'm extremely careful when I drive. Cops can be pigs sometimes, not all of them, but some.\" \n\n\"Good to know,\" he replied, pulling her close to him and kissing her on the lips. \n\nRachel giggled a little then her face became more thoughtful. \n\n\"What do you think about the three of us getting a house?\" She asked, as she turned bck to her salad. She tried to act nonchalant about it but it was obvious that she had been thinking about it for quite some time. \n\nAlex paused a moment and considered her question. \"Well, I would love it, but I don't see how I could possibly contribute equally to the rent. Every dime I have goes to pay my tuition. I guess I could look for another job.\" \n\n\"We don't see one another enough as it is without you getting another job, babe.\" \n\nA soft knock and Amanda poked her head in. \"Hi, what's cooking?\" \n\n\"Chicken and salad,\" Rachel replied. \"I thought you were asleep.\" \n\n\"I was but I missed you two so I came up here before you left for work to kiss you both goodbye,\" she said with a cute smile. She walked over to Alex and rubbed her hand across his shoulders gently. \n\n\"Join us, we were just talking about the possibility of getting a house together. Just the three of us,\" Rachel said turning back to her salad. \n\n\"I absolutely adore that idea!\" Amanda exclaimed. \"I'll start looking tomorrow.\" \n\n\"Wait, wait,\" Alex said putting up his hands. \"I just told Rachel before you came in that I don't see how I could possibly share the rent equally.\" \n\n\"Don't worry about it, I'm not looking for a 'McMansion',\" Amanda replied hugging Alex. \n\n\"Exactly, I'm not either,\" Rachel added. \n\n\"We'll find a place that we can all afford,\" Amanda continued. \n\n\"I was looking online the other day,\" Rachel said pulling a bottle of salad dressing from her refrigerator. \"There are several neighborhoods nearby where, if we look hard enough, we can find a place that we can afford. If we combine what we're paying to Reilly, we could easily swing the rent on a nice little bungalow.\" \n\n\"With a bedroom large enough for a king-sized bed?\" Alex asked, with a grin. \n\nRachel's eyes gleamed. \n\n\"You read my mind sweetheart,\" Amanda giggled. \n\nThat night, at nearly one in the morning, Alex stood at the back of the convenience store stocking one of the shelves when several young men dressed like 'gangster-wannabes' walked in the door. From the looks of them they were barely over sixteen but they puffed themselves up and sauntered along trying to look tough. \n\nThey wandered up and down the aisles looking more to relieve their boredom than to actually buy something. They pushed past Alex and knocked over a cookie and cracker display in the process. \n\n\"Hey, a simple 'excuse me' would be nice,\" grumbled Alex. \n\nThe boys turned around and smirked. \n\n\"Fuck you sissy boy,\" spat the tallest of the three boys. His face was scarred with acne and his lips and nose were pierced with several rings. \n\n\"Yeah faggot, shut the fuck up,\" said another of the boys. His lack of height was quickly compensated by his girth. \n\n\"Is there a problem back there?\" shouted Inez, Alex's coworker from the front counter. \n\n\"Nothing I can't handle, Inez,\" Alex replied. Then he picked up the packages of cookies and crackers that spilled across the aisle and began to replace them on the display. The three boys snickered maliciously and sauntered away. They stopped at the coolers and looked at the racks of beer on display. \n\nAlex finished cleaning up the mess on the floor. He moved down another aisle and walked into the backroom to pull out another container of product for display. When he came out of the backroom he noticed that the boys were still debating over their choices of beer. He motioned Inez over. \n\n\"Look really close at their IDs when they get up front,\" he whispered. \"They're probably fake.\" \n\nShe nodded and returned to the register. \n\nAlex smiled at her and glanced at the clock on the wall. It was almost time for his shift to end and he was happy to see it nearly finished. His feet were tired. Todd, his relief, sauntered in the front door and walked to the backroom to clock-in. Alex went to another display and began to replenish the stock with new product. \n\nA moment later the three boys walked up to the checkout counter. They plunked down a twenty-dollar bill and a six-pack of cheap beer. \n\n\"ID please,\" Inez asked flatly and the boys nervously pulled out their wallets. \n\nThe glass doors opened and Rachel walked into the store with a wry smile on her face. The three boys turned slack-jawed and stared at her. Under her coat was a shimmery midnight blue gown that clung to her breasts and hips provocatively. Her hair was done up in curls and standing in five-inch heels, she towered over the punks at the front counter. \n\nThe tallest of the boys looked over at Alex and scoffed. \"What are you gawking at sissy boy? She's hardly interested in a puke like you,\" he said with a smirk. \n\n\"Yeah faggot,\" blubber boy said, \"what are you looking at?\" \n\nThe third boy started to open his mouth but stopped suddenly. He watched, in shock, as Rachel slapped the chubby teen across the face. The sound of the slap echoed across the store and the force of it sent him flying against the other two boys. They all fell against the counter and nearly collapsed on the floor. \n\n\"These IDs are fakes,\" said Inez flatly, speaking in heavy Pakistani accent. \"I'll be confiscating them. If you don't leave this store immediately I'll be calling the cops right now.\" \n\nThe boys slowly stood up and turned to watch in shock as Rachel planted a wet kiss on Alex's lips. \n\n\"Evening love,\" she said with a grin. Rachel turned back to the three boys who stood gaping at her. \n\n\"You heard what she said, punks\" she snapped. \"Get your little dicks out of here and never come back or I'll take a box cutter and whack them off.\" \n\nThe three boys scrambled over each other as they raced for the door. Alex and Rachel laughed as the door hit the third boy in the ass on his way out. \n\n\"You have got to find a better way to pay for your tuition, babe,\" she said with a sigh. Todd poked his head out of the backroom door and grinned. \n\n\"Inez, this is Rachel. Rachel, Inez,\" Alex said with a sheepish grin. \"One of these days you're going to get into trouble slapping little fat kids like that.\" \n\n\"What? He was trying to molest me,\" she said with an indignant look and brushing an errant lock of hair behind her ear. \n\n\"I saw it too,\" Inez chirped cheerfully. \"It was definitely sexual harassment,\" she added nodding enthusiastically. \"I know what it looks like because I watched a training video on it just last week. So I know for certain.\" \n\nAlex shook his head and chuckled \n\n\"Thank you Inez,\" Rachel said, with a wink in her direction. \"Are you about done?\" She asked looking at Alex as she dangled the car keys on her finger. \n\n\"I just have to clock out,\" he replied. \"Back in a moment.\" \n\n=TWO= \n\nMonday morning came too soon for Amanda. In spite of what Margaret said at the party, she dreaded having to face Simmons and the rest of the office staff this morning. Even if she would be working for Margaret, she would still have to be in the same building with the weasel. Plus, she knew there would be gossip. In an office, there is always gossip. \n\nBut dammit, she thought, with her fists clenched tight, she was the victim here not that creep Simmons, and the rest of them could just go to hell for all she cared. \n\nShe set her jaw and waited for the elevator to reach the ninth floor. The chime announced her arrival in the hallway vestibule and she turned to see a crowd of her co-workers standing near the reception desk. A second glance proved that most of them were women. One of them turned and started to applaud. Soon the rest of them joined in and once again Amanda was dumbfounded. \n\nAs she walked into the reception area, one of her co-workers, Anna, a receptionist in Acquisitions, leaned over and said, \"Thank you so much for standing up to that sleaze ball, Simmons.\" \n\n\"Today is your day, Amanda,\" shouted another of one of the women. \n\n\"And lunch is on us!\" shouted a third girl from Accounting. \n\nAmanda walked past them with a dazed look on her face. She walked over to her desk and saw a note from Margaret Cummings. It asked that she come to her office as soon as she checked in this morning. \n\nStill a bit gun-shy, she walked across the commons area towards Margaret's office. A chorus of 'good mornings' and bright smiles greeted her as she passed by. She was not used to this much attention and she was a bit unnerved by it all. She knocked softly on Margaret's office door. ",
        "\"Come in,\" came the familiar voice from across the room. \"Oh, good, you're here, come in, come in.\" She stood and walked around her desk. \"Would you like a cup of coffee?\" \n\n\"Mrs. Cummings, this is all a bit overwhelming. No wait, I can get the coffee. You sit down, I'll bring it right in. Cream and sugar?\" \n\n\"Just cream, thank you,\" Margaret replied returning to her seat. \n\nAmanda glanced around outside of Margaret's office looking for Simmons. No one seemed to be around so she dashed into the copy room and poured two cups of coffee and added cream to both. Then she carried the coffee back into Margaret's office. \n\n\"If you're looking for Simmons, he's cooling his heels in the Milwaukee airport right about now. I decided that he needed a little vacation from the fast paced world of Wilmington and Milwaukee seemed just the place for him. Besides, there are only two other employees up there and they're both men over fifty. So Simmons should feel right at home,\" Margaret said, with a grin like the cat that just caught the canary. \n\n\"I've been looking for a good excuse to get that asshole out of this office for years. Although I'm sorry it had to happen to you, you provided me with the perfect opportunity. Thank you.\" \n\n\"You're welcome,\" Amanda replied still in shock. \n\n\"And thank you're boyfriend again for being so level headed,\" Margaret added. \n\n\"I will,\" said Amanda meekly. \n\n\"Now then,\" Margaret continued. \"Let's get to it.\" She spread her arms wide across the top of her desk and grinned at Amanda. \n\n\"You should be promoted to senior analyst, which is what you deserved, but I can't, at least not yet. I can't have the rest of the staff thinking that I've grown soft. But what I can do is assign you to focus more on several of our senior accounts. And you'll be adequately compensated, of course. The commissions are rather substantial.\" \n\nAmanda listened a bit wide-eyed as Margaret laid out a detailed plan of what she hoped would be accomplished in the next six months. It was all very complex and a bit overwhelming. Amanda nodded and smiled then she pulled a notebook out of her purse and took a battery of notes trying to keep up with her new boss's plans. She was to form a new international section. Margaret wanted her to find people she could trust. And she wanted Amanda to begin implementing her plans as soon as she could orient her team. \n\n\"I want you to move out of the commons area and into Simmons' office. Use the empty one next to it for your staff. Have Radcliff...\" \n\nSuddenly her phone began to ring and Margaret stopped to answer it. \n\nMy God, three months ago she was standing on a bus platform in Salt Lake City thinking she had just been pushed off the edge of the world, she felt bewildered as Margaret answered her phone call. Oh shit, Susan's wedding is this weekend! \n\nMargaret replaced the phone receiver and smiled at Amanda. \"That was Donaldson in the Milwaukee office,\" she said with a chuckle. \"Apparently they didn't want Simmons up there either. Now, where were we.\" \n\n\"Um, I know that this change is important, and I hope this doesn't ruin things but I've got tickets to fly to Seattle this weekend. My cousin is getting married and I know it's probably coming at a bad time and all...\" \n\n\"Perfect!\" Margaret shouted, interrupting and slapping her desk with enthusiasm. \"While you're out there you can check in with the Seattle office. Several of the accounts I want you to pick up crossover between the coasts and I want you to make sure that they're doing all they can to keep those clients happy. Add a couple of days to your flight itinerary and ask Carol to book a hotel for you.\" \n\n\"That's okay, I was planning on staying with at my cousins,\" Amanda murmured. \n\n\"Okay, no problem. In that case, add me to the guest register and pick out a nice gift for the bride from me,\" Margaret replied shuffling through a stack of papers on her desk. \n\n\"Oh, and bring me back some cake. I'm a sucker for wedding cake,\" she added as she waved her out the door. \n\nAmanda closed the door gently and turned to lean against it. She felt like a tsunami just washed over her in the name of Margaret Cummings. It was all a bit too much to take in one gulp. She straightened her suit jacket and smoothed the front of her skirt then walked with purpose across the office floor. She was trying to think about whom she could put on her team but her head was filled with fluff. Her mind was still reeling from her meeting with Margaret Cummings. All of a sudden, she went from part-time lackey to the assistant to the CEO for international accounts. She reached across to pinch herself. She wanted to make sure she wasn't dreaming. \n\nShe knew she had to pull herself together. But first, before she could do anything else, she had to call Alex and Rachel, because inside she was nearly bursting at the seams. \n\nAmanda dashed over to her desk and dropped her coat then turned and walked briskly to an empty conference room. She closed the door and nearly screamed - she was so excited. She pulled out her cellphone and quickly dialed Alex. \n\n\"Hey, it's me. I'm sorry to wake you but I have fantastic news. If you have to work tonight cancel it or call in sick or whatever. That goes for Rachel too. We're going out tonight to celebrate, just us girls. So wear something nice because we're going someplace special,\" she said. \n\n\"What's the news?\" he asked still a bit groggy. He glanced at the alarm clock and groaned. \n\n\"I'll tell you when I get home and we're all together. Ohh, I'm nearly bursting at the seams!\" she exclaimed. \"Okay, I've got to call Rachel. I love you sweetheart. You are the best! Bye.\" \n\nAmanda quickly punched more buttons and waited while the connection rang through. \n\n\"Tamsen, Willis, and James, this is accounting, Rachel Thompson speaking...\" Amanda could barely wait through Rachel's greeting before she interrupted. \n\n\"Rachel, my lovely sister, I've got great news. If you have plans for this evening, cancel them, we're going out to celebrate, just us girls!\" \n\n\"What is it?\" \n\n\"I'll tell you when I get home and we can all be together. I can say, that I'm flying first class to Seattle on Friday courtesy of Margaret Cummings.\" She heard Rachel catch her breath on the other end of the line. \n\n\"Yes! Oh God, I'm giggling like a schoolgirl. Okay, I have to pull myself together here.\" Amanda drew in a big breath and tried to center herself but it was no use, she was flying high. \n\n\"I just called Alex and woke him up, poor thing, but I couldn't help it,\" she added. \n\n\"So when do you get home?\" Rachel asked. \n\n\"Around four, how about you?\" \n\n\"I'll be there around then too.\" \n\n\"Great, I'll meet you in your apartment at four,\" Amanda said. \"Will Alex be there too?\" \n\n\"I'm not sure, I know he has a class this afternoon but I'm not sure when it's over,\" she replied. \n\nThey finalized their plans. Amanda said she'd text Alex to make sure he'd be there at the same time as everyone else. Then she sat down in the leather bound chair at the head of the conference table and spun it around to face the world outside a huge wall of windows. \n\n\"I'm the luckiest girl in the world,\" she shouted, with a grin and outstretched arms. \"Yes!\" \n\n\"Where do you girls want to go?\" Amanda asked, nearly bouncing with joy. She had just spent the last fifteen minutes recounted everything that had happened in her office this morning. \n\n\"I'll take you to the swankiest restaurant in town, totally my treat!\" \n\nApril walked out of the bathroom and turned off the light. She was dressed in a woman's pleated slacks and a blouse with dress pumps. She had on the diamond stud earrings that Amanda gave her last week along with the silver necklace from Rachel. She pulled on a women's dress suit jacket and fixed her collar. \n\n\"Honestly, I'm never impressed by service but always impressed by the quality of the food,\" April said. \"I vote we go back to that French restaurant.\" \n\n\"I saw this Indian place on Dexter that looked interesting,\" Rachel said her eyes gleaming with hope. \n\n\"Really? Not some fancy place that charges fifty bucks a plate?\" Amanda asked, slightly bewildered. \n\n\"April love, let me fix your hair,\" Rachel said. She pulled her by the arm back into her bathroom. Amanda followed right behind them. \n\n\"Sweetheart, wherever I go with you is fine by me. But don't waste your hard earned money on a pedestrian palate like mine.\" April added, kissing her on the cheek. \n\n\"In-d-ian, In-d-ian, In-d-ian,\" chanted Rachel as she brushed April's hair and danced to the rhythm of her chant. \n\n\"Okay, my sweet sister, we're going to the Taj Mahal on Dexter,\" Amanda replied, with a big smile as she touched up Alex's makeup. \n\nAmanda spent most of the dinner outlining Margaret's plans for expansion and reorganization of the firm. She could barely contain her enthusiasm. \n\nThe rest of the week flew by in a flash. Before anyone knew it, Amanda's bags were packed for her trip to Seattle and she stood waiting by her door for Alex and Rachel to come down the stairs. Her nerves were all jitters as she checked her makeup in her compact one more time. She could hardly believe it. She was flying first class to Seattle. A trip she made by bus just three months earlier. \n\nHer cousin was getting married and she was a bridesmaid. And - she was Margaret Cummings' new assistant for international accounts. She reached over and pinched herself again just to make sure she still wasn't dreaming. \n\nAt 7:30 in the morning, Amanda's plane roared down the runway and lifted off bound for Seattle by way of Chicago's O'Hare Airport. \n\nTonight was the rehearsal dinner and tomorrow was Susan's wedding, she thought as she glanced out the window to watch Wilmington quickly receded in the distance. She thought about Susan's wedding for a moment. She remembered crying in Reilly's backyard when she heard the news that Susan, her cousin and really her only childhood friend, was getting married to her boyfriend of six years. At the time she felt like she wanted to die. A failed marriage and a one-way ticket to 'no-where's-ville' had her thinking that her life was just one big train wreck. \n\nThen along came Alex with his big goofy grin and magical charm. In a dazzling twirl, he spun her around to see how wonderful her life was. She will never forget that moment and how, with just a thought and a smile, he transformed her life. Then she thought of her lovely sister, Rachel, how she kissed her on the lips and discovered her secret. She smiled serenely; she had a family who loved her as much as she loved them. \n\nShe tilted her seat back and closed her eyes as she settled into the comfort of first class. She would miss having Alex and Rachel next to her in bed but she smiled blissfully knowing that they were there waiting for her to come home next Sunday.  \n\nThat night, after Alex's shift ended at the convenience store, Rachel arrived to pick him up. She was dressed in blue jeans and a sweatshirt. She wore her hair up in a ponytail that she pulled through the back strap on a tattered old Boston Red Sox cap. Even wearing ballet flats, she looked totally sexy to Alex. He grinned at her when he saw her standing in the doorway to the backroom of the store. She stood there with a sexy smirk on her face. \n\n\"You know, even if you try hard not to, you still look sexy as hell,\" he said with a wry grin. \n\nShe smirked at his comment. \"Ya, right. Ready?\" \n\nHe nodded. \n\n\"I know you're tired but I want to take a walk for a minute. Is that all right.\" \n\n\"I thought you had to work tonight,\" Alex said looking a bit confused. \n\n\"They cancelled my shift at the last minute, it was a slow night anyway.\" \n\nThey drove to a little park next to the river that meandered through the center of the city. It was the same park that Rachel noticed when she looked out of the window of Amanda's office last Sunday. \n\nRachel parked the car near a set of swings. They got out and walked slowly down along the river's edge. \n\n\"I miss her already,\" she murmured, as she picked up a stone and skimmed it along the water until it fell below the surface with a plunk. \"With the wedding and the parties, she's probably having the time of her life tonight.\" \n\n\"Maybe,\" Alex said with a shrug. \"But if she was here I bet she'd argue that the real time of her life is right here, with us.\" \n\nRachel sighed as she sat down on a bench next to Alex. \n\n\"It is for me.\" She leaned her head on Alex's shoulder. The wooden bench they sat on beneath a canopy of trees overlooked the river. She sighed a little and snuggled closer to him. \n\n\"I never thought I'd be so lucky,\" Rachel said softly, almost in a whisper. She took Alex's hand in hers and gave it a little squeeze then wrapped his arm around her shoulders. \n\n\"I figured that because of who I am, that the world would only allowed so much happiness for one person. I thought that love and acceptance was just not in the cards for me, you know? Then I met you two, and this cat isn't a stray anymore. \n\n\"It's getting chilly out,\" he said wrapping his coat around her shoulders and pulling her closer to him. \n\n\"Another reason to snuggle,\" she said softly, leaning up to kiss him on the lips. \n\n\"Get a room,\" growled a gravely voice from beneath a tattered old blanket and padded coat that had seen much better days. \"I'm trying to sleep here, assholes.\" \n\nAlex looked over at the vagrant huddled under the pile of old clothes on the next bench and nodded. \n\n\"Come on love, let's go home.\" \n\nThey walked slowly back towards the car arm in arm, Rachel's head nestled against his shoulder. The ride back to the apartment house was quiet and serene. \n\n\"Stay with me tonight,\" she asked softly, with a kiss. \n\n\"Of course,\" he replied returning her kiss. \n\n\"Hey look,\" Rachel said with a giggle. She came bounding out of the bathroom and bounced across the bed towards Alex. She was clad in her panties and nothing else. She sat next to him while she pulled lightly on her right nipple and squeezed her breast. A moment later a small drop of white liquid appeared on her nipple. \n\n\"Wow,\" Alex said amazed, \"is that milk?\" He sat up and looked closely at her breast. \n\n\"Taste it,\" she said lifting her breast towards his mouth. \n\nAlex leaned forward and stuck his tongue out to capture the drop as it formed on her nipple. \n\n\"It is milk,\" he said, surprised. \"It tastes...sweet.\" \n\nRachel glowed with a radiance that looked like she was as happy as she could ever be. \n\n\"I can give milk,\" she whispered. \n\n\"I see that! That's wonderful!\" \n\n\"Yes, it is.\" \n\n\"How is this possible?\" he asked. \n\n\"Well, since my shift was cancelled, I was doing a little research online this evening looking for more details about reassignment surgeries. And I came across this site that talked about male lactation. At first I didn't believe it but look,\" she said with a huge grin pressing her left breast and squeezing out a little dribble of milk. \"I can give milk. I mean it's not like I can nurse a baby or anything but, my God, I can give milk,\" she squealed giddy with joy. She hugged Alex and covered his face with kisses. \n\n\"Make love to me, Rachel, please,\" Alex whispered between her kisses. \"I really want to feel you inside me tonight.\" \n\nRachel stopped a moment and looked into his eyes. Without a single word she kissed him slowly and delicately on the lips. She leaned back and smiled sweetly while she took off his t-shirt. He undid the clip on his bra and his breasts fell free as he pulled the bra straps off his shoulders. She reached out gently and cupped his breasts then leaned forward and kissed them tenderly. \n\nShe pushed him gently back against the pillows, slid her hands down his narrow waist and took off his panties. His cock was semi-erect and growing with the anticipation of what was happening. \n\nShe stood up and removed her panties. Her cock sprung free, aroused by the thought of being inside of him, it stood hard and proud against her stomach. She reached over and pulled out a condom wrapper and a bottle of lube from the top drawer of her nightstand. She slipped on a condom and lubed her cock slowly, seductively, watching him watch her. She moved her lithe body onto the bed. Her long hair was flowing around her head and shoulders; it shimmered in the moonlight that flooded through her bedroom window. \n\nHe moved down the bed and placed a pillow beneath his butt then he opened his legs to her. She coated his rosebud with lube and slipped one and then another finger inside of him. He clenched momentarily, reacting more to the chill of the lube than her invading fingers. Then he relaxed to her gentle touch. \n\nAlex thought to say something, to tell her how much he loved her, how much he wanted her to make love to him, but the moment had slipped beyond words. He could see in her eyes that she knew everything. He didn't need the stumble of words to break the blissful silence of lovemaking. \n\nShe entered him slowly and gently. He could feel every part of her as she moved past his outer ring, every ridge of her cock pulsing and throbbing in tune with her heartbeat. She pushed gently forward until her body pressed against his butt. She rested a moment, letting him adjust, and then she began to move in and out of him. Gently at first, then her pace began to build as her passion soared. \n\nSuddenly she erupted in him filling the condom inside of him with her seed. He wrapped his legs around her tightly, pulling her deeper inside, forcing her to thrust deeper, to love him deeper. Then they felt something warm and wet spread between their bodies as Alex came. He held her tightly against him, their bodies intertwined in passion and joy. \n\nThe next morning, Alex woke up and stretched. He noticed that Rachel was sitting up in bed and gazing out of the window. Her elbows rested on the windowsill, her chin was cupped in her hands. Alex watched her for a while before he spoke. \n\n\"You look lost in thought, love,\" he said reaching over to trace little circles across her back. \n\n\"I was remembering the first time I saw you and Amanda together from this window. I sat here watching you two talk during one of Reilly's little backyard parties.\" She turned and smiled wistfully. \n\n\"You two looked like you were having so much fun. I remember thinking to myself, why can't I do that? Why can't I be as open and carefree as you two were that day in Reilly's backyard?\" \n\n\"You are now love, you're beautiful,\" Alex said softly. \"I remember the first time we met too. You were so nervous, so cautious. You told me you thought that every girl was a monster.\" \n\n\"Yeah, I did,\" she said with a chuckle. \"I'm glad you changed my mind.\" \n\n\"I didn't do that,\" he replied nuzzling her hair and kissing her neck. \"It was Amanda who showed you that not all girls are monsters.\" \n\n\"Yes, I suppose she did.\" She reached over and caressed his face as he kissed the nape of her neck. \n\n\"Mmm, that feels nice,\" she murmured. \n\nShe leaned back against him then took a big breath and let it out slowly. He wrapped his arms around her and kissed the top of her head. \n\n\"You two mean so much to me. I really mean that, babe,\" she said earnestly. \"I can't imagine my life without you two in it.\" \n\n\"So then what's troubling you?\" he asked holding her close. \n\nRachel paused a moment. She knew that she needed to talk to Alex about the thoughts that had been weighing so heavily on her mind. But it was still hard to say the words out loud. \n\n\"I...I was thinking about the surgery.\" \n\n\"The reassignment surgery?\" \n\nShe nodded. \"Yeah.\" \n\n\"Did you schedule it?\" \n\n\"Not yet. It scares me.\" \n\nHe stroked her hair, pulling curls behind her ears. \"Because of the pain?\" \n\n\"That, yes, but there's more to it than that,\" she replied turning around to face him. \"It's the whole mental thing. I thought it was what I wanted, to be a complete woman, you know? But now,\" she shrugged and leaned down to kiss his arm. \"I just don't know anymore.\" ",
        "\"It's a huge step,\" he murmured leaning forward to kiss her neck, softly. \n\n\"It's not like I can just change my mind and get a refund if things don't work out,\" she said as she reached up to caress his cheek. \"This is all very scary.\" \n\nShe turned around again and settled against his chest. She pulled his arms around her and held him tight. \n\n\"I love my body,\" she continued softly, \"the way it is - now. I love that I can make love to you and Amanda with my body, the way it is, right now. I love that you and Amanda can make love to me the way my body is right now. If I have the surgery will that change everything? I'm scared that I might loose you. I'm not sure I could bare that. \" \n\n\"Rachel, Amanda and I love you very much. That will never change no matter what you decide. But you have to decide that you want this for yourself and no one else. I wish I could make this easier on you but I can't.\" \n\n\"I know,\" she said, softly as she sat on the edge of the bed a moment before she stood up and padded barefoot to the bathroom. \n\nAlex sighed. He knew she was going through a lot right now. But there was nothing he could say or do but wait and be supportive no matter what she decided. Deep down inside he knew that last night was a watershed moment for her. What they did together, as innocent and as loving as it was, changed everything for her. Perhaps she doesn't know it yet, he thought, but my sweet Rachel has become more a woman than she ever thought she could be. \n\nThe week spun by quickly. Alex and Rachel fell comfortably into a routine with Alex in classes and working at the convenience store at night, and Rachel in her day job and working as a hostess a couple of nights that week. They spent their late-nights together snuggling in Rachel's bed. And, when the weather turned cold outside they spent their free nights lying in bed under a ton of blankets and watching old movies on her television. \n\nThe days flew by but the joy and excitement was missing and they both felt it. They were missing Amanda. Neither of them had to say it, but they both knew it. It was like she was the third leg of a stool. Without her, they were not complete. \n\nFinally, it was late Sunday afternoon, and the sun was dipping beneath the treetops and teasing with the horizon. Alex and Rachel woke up from a dreamy nap curled around each other in a lover's embrace. He opened a drowsy eye and looked at Rachel's alarm clock. \n\n\"Come on honey, we need to get dressed, we have to pick Amanda up at the airport in a couple of hours.\" \n\n\"Shouldn't you go alone,\" she said in a pout. \n\n\"Why?\" he asked standing in the middle of the bedroom, naked and wondering where this came from. \n\n\"Because she loves me like a sister but I know she really only has eyes for you.\" \n\n\"I love you like my sister too, Rachel,\" he replied. \"So what's that got to do with it?\" \n\nRachel looked at Alex with sad eyes then reluctantly she picked her underwear off the floor and slumped back onto the bed. \n\n\"Rachel, my sweet Rachel,\" Alex sighed as he sat down next to her and wrapped his arm around her shoulders. He turned her to face him and kissed her lips gently. \n\n\"I love you so very much. More than if you were just my sister. I can't find a word to describe it, I'm not sure one exists in the English language. You are my lover and so is Amanda. You are my sister, and so is Amanda. I couldn't live my life now without you both in it, equally. I know Amanda feels exactly the same way. Now lets go get our sister. You know she'd be very upset if you didn't come with me to pick her up.\" \n\nRachel leaned over and kissed him on the cheek then, smiling meekly, she slowly padded towards the bathroom. \n\n\"I'll follow you into the shower once you're done Sis,\" he said with a gentle smile. \n\nAs small airports go, this one wasn't much to write home about. It's gotten to the point in America that if an airport isn't a hub for a major airline it's dinky. Regardless of how big the city is that it serves. And this one was dinky, pathetically so. \n\nThey got there early enough to be able to wait in the lobby for Amanda's plane to arrive. Alex sat thumbing through a city brochure while Rachel checked her voice mail. \n\n\"Did you find some houses for us to look at next week?\" he asked. \n\n\"I did,\" she replied, putting her phone away. \"There is this cute little bungalow that I simply adored but...\" \n\n\"What?\" he asked interrupting. \n\n\"Well, it doesn't have off street parking. I know that's one of your must haves. And the master bedroom was kind of small.\" \n\n\"A large bedroom is high on Amanda's list.\" \n\n\"Yeah, I know. But the yard was nice.\" \n\n\"So we'll just keep looking. I'll have some time off soon and I can help.\" \n\n\"We can but I still want you guys to have a look at it,\" she continued. \"Maybe we can renovate.\" \n\n\"Only if we buy it, love,\" he said looking at his magazine once again. \n\n\"Hmm,\" she murmured. \n\nA voice on the loudspeaker broke the drumming silence in the cabin of the airplane as it flew into the twilight. According to the pilot, Delta flight 4723 from Chicago -- O'Hare was running a little ahead of schedule due to a favorable tail wind. Amanda glanced out of the window and watched the twinkling lights scattered across the blackness far below. She had fun while she was in Seattle, for the first time in her life she really had fun there. Susan's wedding was small but lovely, the bride was beautiful, and the bridesmaid's dresses were so-so. But that is as it should be, she thought with a huge smile. \n\nWhen Amanda met Susan at the airport she could see her beaming with joy, everyone could. Her joy was infectious. For the first time in her life Amanda could share that delight with Susan. She understood what it was like to truly be in love. \n\nThat first night, when they could finally be alone, she told Susan all about Alex and Rachel. Well, not everything, but enough for her to understand that Amanda was totally and blissfully in love with two of the most amazing people she had ever met. \n\nIt had been a crazy day with an afternoon and evening filled with wedding activities and everybody talking to everybody else and all at the same time. The excitement was contagious. It always is at weddings. So the quiet of a bedroom late at night and a chance to relax and catch up was appealing. \n\nAt first Susan didn't understand Amanda's relationship. She told her that perhaps Amanda's brief flirt with the Mormon Church had left more of an impression on her than she was willing to admit. But slowly she came to accept and understand that this wasn't something religious but something unique, something beyond a family bound by love and companionship. Well, however it was defined, the life that Amanda now led was perfect for her. Susan told her how happy she was for her. \n\n\"If there's ever a chance in the future,\" She said, the night they talked till nearly dawn, \"I want to meet them. They sound like wonderful people, I'm really happy for you,\" she added giving Amanda a hug and a kiss on the cheek. \n\nAmanda spent a couple of days at the Seattle office of Dresher, Cummings, and Sanford. They were cordial to her at first, not expecting much out of this 'cutie' from the east coast. They continued to act a bit aloof until the meeting turned to hard numbers and Amanda got busy. She smiled as she remembered the looks on their faces when she finished her report. Apparently they were impressed because the text message she received from Margaret the next day was glowing with support. \n\nAll in all, it had been a crazy whirlwind of a week. But through it all, her thoughts were always drawn back to Alex and Rachel. She Skyped them nearly every day and thanked the universe for the magic of a videophone call. She could see them but she missed their touch and caress. She missed the taste of their kisses and she missed their smell. As funny as that sounded when she said it out loud, she missed the way they smelled. \n\nThe plane dropped down through the clouds that had settled around Wilmington and Amanda could hear the landing gear drop into place with a thud. A moment later the plane was on the ground and moving quickly back to the terminal. \n\nAmanda wiggled in her seat like a schoolgirl barely able to contain her excitement as the airplane taxied to the gate. In her lap, was a white box holding a huge slice of wedding cake and a thank you card from Amanda's cousin, Susan. She knew that Alex and Rachel would be standing in the lobby waiting for her. She couldn't wait for the plane to park. The anticipation was overwhelming. A weeks' worth of hugs and kisses were waiting for her. \n\nThat night they fell into Amanda's bed. This time the love they shared was slower and sweeter than ever before. They took their time and savored the caress of their bodies intertwined in lovemaking. \n\nEach one touching and being touched. \n\nEach one loving and being loved. \n\nIt was as close to bliss as any of them had ever imagined or wanted. \n\n=THREE = \n\nEver since the first day they all went shopping for Alex's new wardrobe, he began to add a few feminine items to his daily attire. It all began shortly after their shopping trip. He added panties and bras -- mostly sports bras because they tended to minimize rather than emphasize his bust line. The sports bra added comfort and support without revealing too much. Eventually he added a hint of eye makeup and some concealer to hide a blemish or two. \n\nHe would add a subtle change in his clothes here and there as well. He liked to wear the occasional blouse or sometimes a pair of women's flats. None of these things drew much attention to themselves except perhaps for the simple silver necklace and matching diamond stud earrings that he liked to wear occasionally. Partly, he supposed, because the necklace was a gift from Rachel and the earrings were a gift from Amanda and partly because they were so pretty. \n\nAt first he felt uncomfortable with the changes to his wardrobe. Gone were most of the flannels and plaids that usually hung off his body, faded and threadbare. Cotton blouses and shimmering poly-cotton tops replaced the faded and well-worn shirts. They shaped his body rather than concealed it. Gone were some of his jeans and chino pants to be slowly replaced by skirts, dresses, and slacks. His wardrobe wasn't totally transformed. He hadn't agreed to live completely like a woman. But there was an obvious shift in the clothing that he wore each day. At first, however, it worried him. \n\nPart of the worry was, he surmised, because of the social taboo of men wearing clothes that were obviously meant for women, something ingrained in him since early childhood. And part of it was because he didn't like to stand out in a crowd. \n\nSo many other men came before him who liked to flaunt a garish lifestyle in the name of cross-dressing and flamboyant transvestitism. Because of that and other prejudices, society seemed to turn a jaundiced eye to someone like Alex who was struggling with his own identity. The first few weeks were nerve-wracking for him but eventually he settled down and realized that ultimately, most people just didn't care. He decided to take Rachel's advice and not worry about it. If anyone had a problem with it, it was their issue not his. \n\nAround noon Alex gathered up his notebook and iPad. He stuffed them into the backpack that he dropped on a chair by the front door. Usually he would pull his hair into a tight ponytail, wrap it tightly and shove it all under a stocking cap. But today he thought, he was tired of looking grungy at school all the time. \n\nHe brushed his hair and let it fall gracefully around his shoulders in gentle curls. Then he attached a hair clip to pull it out of his eyes. He was dressed in a pair of skinny jeans and a comfortable cotton blouse that had a nice cowl neck to hide the sports bra beneath. \n\n\"Baby steps,\" he muttered to himself softly. \n\nHe wore knee high hose and oxford flats to complete the look. A light dusting of eye makeup and a dash of mascara and he was ready to go. Satisfied with the effect he turned out the bathroom light, grabbed his backpack, and was out the door and down the stairs. \n\nThirty minutes later Alex walked into Rollins Hall where his afternoon class was held. As he climbed the stairs he glanced from side to side to see most of the people in the hallway didn't pay any attention to him as he passed them by. \n\nHe turned to climb the next flight of stairs to the second floor, Alex was tempted to take the steps two at a time, but that wouldn't be appropriate anymore. Instead he took a more leisurely approach and ascended the staircase slowly. \n\nIf Rachel saw him take two at a time she would kick his ass, he thought with a subtle smile. \n\nHalf way up the second flight of stairs he passed by Ray Klein who usually sat next to him in the advanced writing class he was heading for. \n\n\"Hey Ray,\" Alex said calmly waving as he climbed past him. \n\nRay waved back, glancing a second time while attempting to recognize the girl that just walked by. \n\nAlex turned the corner at the top of the stairs and walked down the corridor to room 217. He walked into the room, sat down in his usual seat and gazed out the windows as he waited for Professor Dixon to arrive. \n\nA moment later Ray sat down in the next row over. He cleared his throat then glanced over at Alex with a sheepish grin. \n\n\"You know, I always thought you were cute,\" said Ray casually. \"But you always hid yourself under that stocking cap and all. I'm glad you decided to...you know,\" he mumbled sheepishly, \"with the makeup and all.\" \n\nAlex blushed slightly and glanced back at Ray. He gave him a gentle smile. He knew all too well what it was like to be in Ray's shoes. It wasn't that Ray was asking him out on a date or anything, but he could see in his eyes that the question was lurking somewhere in back of his mind. Talking to someone who you were interested in dating had always been traumatic for Alex, so he felt a little sympathy for Ray. But not enough to say yes or anything like that. \n\n\"Thanks Ray,\" Alex replied shyly. \"I met someone recently and they sort of like it so I thought, why not?\" \n\nRay nodded his head and sighed the 'damn, too late again' sort of sigh that all men know too well. \n\nAbout then, Professor Dixon walked in and the room grew quiet. Ray turned around and that was the last time that day that anyone said anything more about it. \n\nFor the rest of the afternoon Alex noticed the occasional sideways glance from several of the other men in the room. He expected the glances to be followed by a stifled snicker but in reality, they were all kind of cute in their own sheepish way.  \n\nApril was finally beginning to blossom. \n\nOne afternoon the following week, a fellow female student, Kimberly Crossman, in his English Literature class spotted a bra line beneath his shirt. She leaned forward and mentioned this to him as if she's caught him doing something naughty. \n\n\"And your point is?\" Alex asked, with a wry smile. \n\n\"Well, wouldn't you be embarrassed? What if someone else caught you? They'd think you were a cross dresser or something,\" she whispered. \n\n\"You caught me, do I look embarrassed?\" \n\n\"Well no, not really,\" she replied, blushing slightly. \n\nAlex turned in his seat and smiled at her. \n\n\"Kim, do you think I'm a cross-dresser?\" he whispered conspiratorially. \n\n\"Well no, I mean...I don't know, maybe,\" she replied with a frown turning a deeper shade of crimson. \"What if the boys saw it, they might beat you up. Doesn't that worry you?\" her face was suddenly filled with an honest concern. Alex's smile broadened, he was beginning to really like Kim. \n\nShe was a pretty girl, long straight blonde hair that hugged her face and fell softly past her shoulders. Above the layers of concealer she trowelled on her face she had lovely arched eyebrows that framed gentle blue eyes. \n\nBut her face was scarred with acne in a few places and she always seemed self-conscious about it. She was a bit heavy handed covering it up with concealer and Alex wondered if that was the reason why she tended to shy away from going out on any dates. Most of the other guys in the room had hit on her once or twice but she seemed to always have an excuse not to go out. \n\nIt was kind of a sad if that was the case, he thought, she's such a sweet girl. \n\n\"Nope, we're not in high school anymore, Kim. Maybe they might be embarrassed but that's an issue they have to deal with not me. I don't dress to fit someone else's standards anymore. I've decided to dress for my own comfort.\" \n\n\"Oh... cool. So if I walked in here tomorrow wearing a flannel shirt and no bra you wouldn't say anything?\" \n\n\"Of course I would! You would look pretty hot in flannel. No pun intended.\" \n\nShe pursed her lips together into a smirk and swatted him on the shoulder. \"You're insane.\" \n\n\"Thank you, I'm glad you noticed,\" he replied smiling sweetly. \"And Kim.\" \n\n\"Yes?\" \n\n\"Thanks for caring.\" \n\nShe smiled awkwardly and shrugged. \n\nKim caught up with Alex after class was over and invited him to get a cup of coffee across the street in the local bistro. \n\nThey sat in silence for several minutes while Kim stirred the cream in her coffee. She was obviously working up the courage to ask him something. \n\n\"What did you want to talk about Kim?\" Alex asked, with a wry smile. \n\nKim blushed again and looked up into Alex's eyes. \n\n\"What you said in class today, about dressing to suit your own comfort,\" she said softly. \"It really struck a chord with me. I mean about being you and not worrying about what others thought. I thought you were so brave doing that on your own.\" \n\nAlex studied Kim for a moment then smiled sweetly. \n\n\"Kim, what do you think of me?\" \n\n\"I don't know,\" she murmured softly. She looked down and fiddled with a delicate necklace, surprised by the sudden shift in the conversation. \"I thought I understood who you were but recently you've changed so much I don't know anything anymore.\"  \n\n\"Do you like the changes you see?\" \n\n\"Well, yes. You seem so centered now, much more than you ever were before. When I watched you walk over here to meet me just now, you walked with such grace. I've never seen that in you before.\" \n\nAlex smiled and blushed silently thanking Rachel and Amanda for their tenacity. \n\n\"Why don't you go out with anyone in the class?\" Alex asked. \"We've been out drinking several times before and we've always invited you along but you always beg off.\" \n\n\"Promise you won't laugh?\" she asked earnestly. \n\n\"Of course,\" he replied with equal sincerity. \n\n\"I'm terrified.\" \n\n\"Of what?\" \n\n\"Of them, of what other people might think of me,\" she said, her eyes were tearing up. \"Of how I look, how I dress, everything,\" she whispered with such intensity that Alex was stunned. \n\n\"Would you tell this same thing to, uh, Ray for example?\" Alex asked gently. \n\n\"God no, I'd be mortified.\" \n\nAlex tilted his head a bit and looked at Kim again. He knew she had a thing for Ray. Alex had seen her glance at him from time to time in class. She blushed crimson then glanced away trying desperately to regain her composure. Alex pulled out his cellphone and punched a few buttons. A moment later Rachel answered. \n\n\"Hi Rachel, do you think there's room for one more at the dinner table tonight?\" Alex asked. \n\n\"I think so,\" Rachel replied casually tossing the last of the vegetables into a salad. \n\n\"I'd like to bring a friend from school over to meet you and Amanda,\" Alex continued watching Kim's reaction. \"Would that be all right?\" \n\n\"Sure, hey Sis, come in here. Alex's is bringing a friend home from school,\" she yelled. \n\nHe could hear them giggling like schoolgirls. \n\n\"All right you two, behave. We'll be over in a half hour, bye.\" \n\nHe clipped his phone shut and smiled at Kim. ",
        "\"Oh, if you have any plans tonight, cancel them, we'll probably be going out later too,\" he added with a grin. \n\n\"But I can't...\" Kim began to stutter. \n\n\"Shush Kim, can't, won't and don't are no longer in your vocabulary, at least not tonight,\" Alex interrupted her. \"Come on; we're late for dinner.\" \n\nHe grabbed her hand and pulled her out of her seat. She looked a bit shocked with the sudden turn of events. She paused a moment still holding his hand, then she nodded and they set off towards his car. \n\nTwenty minutes later Alex pulled into the apartment house parking lot. He walked around and opened Kim's door and she stepped out. \n\n\"We're on the third floor,\" he said a bit sheepishly, \"sorry.\" \n\nAlex glanced up and caught a glimpse of Amanda and Rachel peeking out of the window in Rachel's apartment. Once he saw them, he could see their faces filled with delight as they quickly closed the blinds. He shook his head as he imagined what was going to happen next. That brought a smile to his face. \n\n\"Okay,\" he said as they started up the second flight of stairs. \"I want you to meet the two most important people in my life, Amanda and Rachel. Now I will admit that they can be a handful, but just remember that it all comes from love.\" \n\nKim glanced at Alex as they continued up the stairs. \n\nSaying it that way probably only added to her anxiety, he thought, ruefully. \n\nAnother short flight of stairs and they stood at Rachel's door. Alex leaned forward and knocked gently. A moment later the door opened and both girls stood there with Cheshire cat grins. \n\n\"Rachel, Amanda, this is Kim Crossman, a friend from school,\" he said gesturing to each girl as he named them. \"Kim, I like to introduce you to Rachel Thompson, and Amanda Simpson,\" he finished with a smile. \n\n\"Hi,\" Rachel said as she shook Kim's hand, \"welcome to my place, dinner will be ready in a couple of minutes.\" Kim nodded and smiled as Amanda took her hand next. \n\n\"Hi, nice to meet you,\" Amanda added. \"Alex doesn't bring home any friends from school so we were a bit shocked when he asked us to set another place at the table.\" \n\n\"No more than I was,\" Kim replied. \"I sorry if I've caused any trouble.\" \n\n\"No worries, we'll just take it out on him later on,\" she said with a devilish grin. \n\n\"Oh, don't do that please, he's only trying to help,\" Kim added, apologetically. \n\n\"With what?\" Rachel asked, standing next to Alex in the kitchen. \n\n\"Kim has this thing where she worries about what other people think about her,\" Alex interjected as he carried dishes and flatware from the kitchen. He placed them on a table near the center of the room. \"I thought perhaps you girls could help her out with that.\" \n\nHe stood there looking back and forth between Amanda and Rachel with a gleam in his eye. \n\n\"What does she know about us?\" Amanda asked, cautiously. \n\n\"Nothing more than you are a terrible tease,\" he said, with a grin. \n\n\"Well that's true,\" Rachel quipped, as she carried a salad bowl into the living room. \n\n\"What do you want her to know?\" Amanda asked, her words still filled with caution. \n\nKim watched the exchange between Alex and his girlfriends with intense curiosity. \n\n\"Whatever you want to tell her,\" he replied. \"Let me preface this by saying that Kim was concerned about my safety this afternoon. She was worried that I might be assaulted because she thought I was a cross-dresser. Let me add that Kim's a friend and I think I can trust her.\" \n\nAlex walked over to Amanda and kissed her lightly on the cheek. Then he walked back across the room and kissed Rachel as well. \n\n\"Let's eat, I'm starving,\" said Amanda with an impish grin. \"We can talk later.\" \n\nThey gathered around the table and started passing the bowls of food. A moment later any chance of conversation was replaced by murmurs of \"this tastes really delicious.\" Eventually Amanda shared some gossip going around in her office and Rachel told a funny story about a junior partner getting his tie caught in the copy machine. Kim watched the banter between them with wide-eyed wonder. \n\nAs the plates and bowls were cleared Alex started filling the sink with soapy water. It was his turn to do dishes tonight. With the table cleared, they shoved it back into the corner and moved to sit more comfortably on the couch. Rachel found a pillow and collapsed on the floor. \n\n\"Do you have to work tonight Rachel?\" Alex asked, from the kitchen. \n\n\"Yeah, I'm on from eight to eleven tonight,\" \n\n\"I was thinking of introducing Kim to Moulin Rouge tonight, what do you think?\" he asked, drying a clean pot and placing it on the counter. \n\n\"Sounds fine to me if she's up to it, Thursday nights are usually pretty tame,\" Rachel replied. \n\n\"What's Moulin Rouge?\" Kim asked. \n\n\"It's a club I work at part-time. It's upscale but the drinks aren't too outrageous, just the manager if he's in a snit,\" she replied with a wry grin. \n\n\"Some, but not all of the clientele are gay or transsexuals,\" Amanda added. \"They have an open door policy, no judgment, just acceptance...of everybody.\" \n\nKim blanched a bit but her eyes were bright and curious. \n\n\"Alex,\" Kim said softly after pausing to look between the two girls and then up to him, \"who are you?\" \n\nAlex wiped the soapsuds off his hands and walked over to sit on the floor next to Rachel. \n\n\"Kim, when I was at the DMV last week and filling out one of their forms, there wasn't a box under gender that I could check. It was either male or female, not even other so I checked both.\" \n\n\"I don't understand,\" Kim said, her face showing signs of concern. \n\n\"When you asked me if I was a cross-dresser this afternoon and I told you that I dressed to suit my own comfort, I wasn't trying to be flippant. I was telling the truth. I'm what you might call an intersexed person. I'm the person who checks the box 'other'.\" \n\nKim was still looking confused. Amanda smiled as she reached over and gave her hand a gentle squeeze. \"Show her the iPad, it worked for me,\" Amanda quipped with an impish smile. \n\n\"Here,\" he said holding his iPad out for her, \"I've Googled it for you.\" \n\nKim quickly scanned the page attempting to grasp what he was trying to tell her. She looked up at him still a bit perplexed. \n\n\"When this first began to happen I was frightened of everybody and everything. I didn't know what to expect so I expected the worst. I hid in my room and drowned myself in clothing so that no one would suspect that I was different from everybody else. Then I met these two gorgeous women and they changed my life.\" \n\n\"At first,\" he continued, \"I was sure that everyone would point and laugh at me as I began to open up and accept who I am. Eventually, I began to listen to Rachel and Amanda who told me that most people just don't care. They're all too busy with their own issues to be concerned with mine. And they were right.\" \n\nKim's eyes began to glisten with tears. Amanda leaned back and retrieved a tissue then she handed it to her. \n\n\"It just doesn't matter,\" he continued earnestly. \"Don't throw your life away being afraid of what others might think. Because chances are, they never saw what you fear as an issue.\" \n\nRachel got up on her knees and leaned across the coffee table. She took Kim's hands in hers and smiled. \n\n\"Come on girl,\" she said with a gleam in her eye, \"what you need is a make-over.\" \n\n\"Absolutely,\" Amanda exclaimed and the two girls pulled Kim to her feet and pushed her towards Rachel's bedroom. \n\n\"Remember what I said Kim,\" Alex shouted as he watched Amanda and Rachel pull Kim into the bathroom. \"Everything they do comes from love. Just go with the flow.\" \n\nAlex smiled when he glanced in again to see them in Rachel's bathroom scrubbing the heavy makeup off of Kim's face. He returned to the kitchen and the mountain of dishes that waited for him in the sink. \n\nForty minutes later all three girls walked out of Rachel's bedroom. Kim walked into the center of the room and smiled sheepishly. \n\n\"Well Alex, what do you think?\" Amanda asked, beaming a huge smile. \n\nAlex turned and tossed the hand towel on the counter. He looked across the room at Kim standing in the center of Rachel's apartment. \n\nGone were the baggy pants and frumpy blouse. Her hair was done up in simple curls and her makeup was gorgeous. Rachel let her borrow one of her dresses. It wasn't one of the more provocative ones that she often wore to work but it did hug her curves and enhanced her silhouette. Kim wore a pair of four-inch heels she borrowed from Amanda that shaped her legs and butt nicely as she stood fidgeting with the necklace that fell into her ample cleavage. \n\n\"Well Cinderella, all we need to do now is find a pumpkin for your carriage,\" he said with a foolish grin. \n\n\"Is it too much?\" Kim asked sheepishly. \n\n\"Have you looked at yourself lately? You look gorgeous,\" he said enthusiastically. \n\n\"Hey,\" said Amanda, \"if we're all going to the club tonight, who's going with us, Alex or April?\" she asked with a devilish grin. Alex glanced at Amanda and scrunched his nose. \n\n\"Who's April?\" Kim asked with a curious look. \n\n\"April is me when I'm not Alex,\" he said with a twinkle in his eyes. \"I think that April is going with you all to the club tonight, it'll be just us girls.\" \n\nAmanda raced around Kim, grabbed Alex's hand, and pulled him towards the front door. \n\n\"Come on sweetheart, let's go get dressed,\" she said as she pulled him out into the hallway. \"Kim, we'll be back in a flash.\" \n\n\"Is she always that energetic?\" Kim asked, turning to Rachel. \n\n\"Yes, she is,\" Rachel replied, shaking her head with a smirk. \"Amanda is a goddess, she's so full of life it's hard to deny her anything.\" \n\nRachel turned and walked back towards her bedroom then turned back to Kim. \n\n\"Are you doing okay?\" she asked watching Kim catch a glimpse of herself in the mirror on the back of the bedroom door. \n\n\"I'm having the time of my life,\" she replied as she twirled around to watch the hem of her skirt flare out. \n\n\"Yeah, that happens a lot around here,\" Rachel said, with a chuckle. \"Make yourself comfortable, we won't be too long.\" \n\nIt took almost an hour before April returned to Rachel's apartment. Kim spent the time thumbing through old magazines that were piled on a corner table nearby. As April walked into the apartment Kim looked up amazed at the transformation. \n\nHis hair fell in gentle curls around his face and onto his shoulders. His makeup was light but dramatic, enhancing his eyes delightfully. The black dress he wore hugged his body like a glove, and the four-inch heels looked divine. If it weren't for his eyes, Kim would never have recognized him as Alex. She sat stunned for a moment and watched him walk towards her across the room. \n\n\"You look beautiful,\" she whispered. \n\n\"Thank you,\" he replied with a gentle smile then he turned and walked to Rachel's bedroom door. \"Hey gorgeous, are you about ready?\" \n\n\"Out in a minute,\" Rachel replied. \"Where's Amanda?\" \n\n\"Downstairs waiting for us. I've got a pair of flats with me so that I can drive,\" he added. He turned to Kim and grinned sheepishly. \"I still can't drive in heels,\" he shrugged. \n\nThirty minutes later they all piled out of the car and walked into the club. Near the front a tall thin man with a hint of mascara around his eyes and a silk scarf around his neck walked out to greet them. \n\n\"What lovely ladies we have joining us tonight,\" he said with a smile. \"Rachel, darling, take them to table seventeen, it's in your section tonight.\" \n\nRachel nodded and led the way through the tables that bordered a dance floor and back to a more private section of the club. The club was beginning to fill up with guests who glanced at them as they walked by. Amanda could see that Kim was nervous so she reached out and gave her hand a gentle squeeze. Kim smiled; her nerves seemed to settle a bit after that. \n\nRachel took their drink orders and walked across the dance floor towards the bar. She wore a flashy red satin gown that hugged her body atop stilettos that qualified as Alex's 'too dangerous, even on level ground' category \n\nWith drinks in hand the music began to throb and the lights swirled around the club. Kim's eyes began to sparkle with anticipation. \n\nAn hour later, Kim and Alex walked off the dance floor towards their table. Amanda was busy talking to a couple sitting at the table next to her. When they sat down Kim watched the dance floor a moment then she slowly recognized someone who was weaving his way across the floor towards them. \n\nOh God,\" she whispered to Alex trying to duck behind him, \"it's Ray. He's coming over here.\" \n\n\"I saw him earlier when he came in with a group of guys from school. I think they're first years I haven't met before,\" Alex added. He had to shout in her ear because the music was so loud. \n\nKim slowly emerged from hiding as Ray approached their table. \n\n\"Hi,\" Ray said to Kim as he stood at their table. \"I thought I recognized you out there. You look lovely tonight.\" \n\n\"Thank you,\" Kim replied meekly. \n\n\"Join us,\" April offered and Ray pulled out a chair to sit. \n\n\"I didn't know you came here,\" Ray shouted over the throbbing music. He glanced at Amanda and then at April. At first it didn't seem like he recognized her, then suddenly, his eyes grew large and he opened his mouth but no words escaped. \n\nApril reached over and gently lifted his chin to close his mouth. \n\n\"Hi Ray,\" he said with an awkward grin. \n\n\"Holy shit!\" Ray exclaimed. \"You're...you're...\" \n\n\"I'm April, it's nice to see you,\" she replied. \"This is my sister Amanda, and my other sister Rachel is walking over here now,\" she said gesturing to the statuesque woman striding across the dance floor in five-inch stilettos. \n\n\"Nice to meet you,\" Amanda said, brightly. \"Are you one of April's friends from school?\" \n\n\"Y-Yeah, we have Advanced Lit together,\" Ray stammered, a bit shell-shocked. \n\nRachel walked over to their table and slumped down in a chair next to Ray. \n\n\"Trade shoes with me babe, these things are killing me,\" she said rubbing her toes. She sat her heels down on the floor next to April. She pulled off her shoes and handed them to Rachel. \n\nShe leaned across the table and gestured to Kim so she could whisper into Kim's ear. \"We both wear the same sized shoe, thank God.\" She bent down and buckled April's shoes and then stood. \"That's better, thanks babe. I couldn't have made it to eleven with those on my feet. They look better on you anyway.\" She leaned over and kissed him as she adjusted the straps on her shoes. \n\nApril slipped on Rachel's stilettos and tied the lacings around her calves. She glanced up to watch Kim and Ray sit awkwardly while she traded shoes with Rachel. They both seemed too shy to look at one another. \n\n\"You know Ray,\" April shouted, as he leaned towards Ray, \"Kim here is a wonderful dancer and this place has a great dance floor.\" Ray's eyes gleamed with excitement as he glanced at Kim. He hesitated a moment then he extended his hand and smiled at her. \n\n\"Would you like to dance?\" he asked a bit awkwardly. \n\n\"Kim,\" Alex whispered in her ear, \"I don't know if you know this but Ray has had a thing for you for ages, at least since the Chaucer and Milton class last year. Take a chance, it might be fun.\" \n\nKim blushed crimson and glanced at Ray then she leaned over to April and whispered, \"Thank you\". With a shy smile she accepted Ray's hand and they walked out onto the dance floor. \n\nApril stood up and pulled Amanda and Rachel, who walked back over to bring other customers drinks, into a big hug. \n\n\"I love you two so much,\" she said holding them tightly. \"Thank you for helping Kim tonight.\" \n\n\"We all need a nudge in the right direction once in a while,\" Amanda replied, her eyes glistening. \"That's what friends are for.\" \n\n\"And lovers,\" Rachel added as both girls kissed his cheeks. \n\nThey turned and watched Kim and Ray glide across the dance floor. They looked so good together. It's all up to them from now on, April thought with a smile. She wasn't always this good at matchmaking but this one was a 'no-brainer'. \n\nAmanda gathered them both into a huddle as Kim and Ray disappeared among the dancers. \n\n\"I think I've found the perfect house,\" she shouted with a huge smile on her face. \n\n\"What? Where?\" both Alex and Rachel asked in unison. \n\n\"We've got an appointment to see it on Saturday,\" she continued with a giggle. \"It's perfect. Big yard, a driveway, and a huge master bedroom.\" Her eyes twinkled in the glittering light from the dance floor. \n\nThey pulled each other into a big hug and squealed like schoolgirls. \n\nA NOTE FROM THE AUTHOR: \n\nThe author copyrights Stray Cats and all of its parts. The reproduction of any part of Stray Cats without the written permission of the author is expressly prohibited. \n\nThis story is a work of fiction. All of the characters, their names and the places they visit, are purely from the imagination of the author. Any resemblance to persons, places, or things is not intentional and purely coincidental. \n\n\u00a9 2015/ Dreamweaver594"
    ],
    "authorname": "Dreamweaver594",
    "tags": [
        "menage e trois",
        "romance",
        "transsexual",
        "trans",
        "threesome",
        "threeway",
        "group",
        "romantic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/stray-cats-ch-03"
}