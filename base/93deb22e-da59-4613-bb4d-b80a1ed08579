{
    "title": "The Journey Ch. 06",
    "pages": [
        "Welcome, Friend, to Chapter Six of The Journey.\n\nSpecial thanks to my beta readers, ArmyGal33, AvidReader223, Bramblethorn and GinnyPPC, and as always, my editor AwkwardMD.\n\n~~ Washington, DC, September ~~\n\n\"M-m-m-m-morning.\" Jane purred contentedly, like a kitten with a belly full of milk. She stretched, then nestled back against me. I rubbed my cheek against the short hair on the back of her neck. As usual, I was the big spoon.\n\n\"Morning, pretty girl. Sleep okay?\"\n\n\"How could I not? After what you did to me last night?\"\n\nI kissed her ear and felt a rush of happiness. \"That's on you. Curled up on the couch, wearing your cute new glasses that make you look like a sexy librarian when I got here.\"\n\nIt was still hard for me to wrap my head around our thing. Since my run-in with Addison, we'd gone from me spending every Saturday night, to spending every Friday and Saturday night together at her house. She'd been staying up until one in the morning waiting for me to come over after my Friday driving shift. Then I'd been staying with her until I headed to Abuela's to help with wrapping tamales on Sunday mornings. She'd even come to watch me bowl a few times on Sunday night then spent the night at my apartment.\n\nShe made a sound of displeasure. \"I hate having to wear glasses to read.\"\n\n\"You stare at a computer screen ten hours a day, what do you expect? I'm sorry you have to wear them, but they're sexy as hell.\" Like much of Jane's fashion sense, her new glasses were stylishly retro. Black frames, pointed up at the corners like cat's eyes.\n\nI ran my hand down her side to caress one of her magnificent ass cheeks.\n\n\"What do you want to do this morning before we settle down to homework? Farmer's market? Skating?\" she asked me.\n\n\"Skating to the farmer's market?\"\n\n\"See, this is why we're perfect together.\"\n\nI felt the usual stab of doubt in my gut whenever she said things like that, but I'd been getting better at squashing it lately.\n\n\"Maybe that smoothie guy will be back. I could go for a mango-peach for breakfast,\" I said, as I ran my fingertips over the cleft of her ass. \"I could go for a slice of Jane too.\"\n\nShe shivered, and said, \"You say the nicest things!\"\n\nI threw the covers off of us, then slid my hand under her leg, lifting her knee towards the ceiling and resting her foot on my leg. I let my hand slide over the inside of her thigh to stroke the soft skin there. She purred when my hand cupped her sex. I kissed the skin on the back of her neck as I used my index and ring finger to part her lips while my middle finger gently stroked her clit. She wasn't wet, but I knew from experience how fast that would change.\n\n\"Baby, you'll never get me out of bed doing that,\" she whispered.\n\n\"Who says I want to get you out of bed?\" I dipped my finger inside her. Wetness. I stroked in and out a few times to liberally coat my finger with her juices, then returned my attention to her clit.\n\n\"O-o-o-h, that feels nice,\" she murmured. I kept a steady rhythm, alert for her tell-tale signs. As soon as she started rocking her hips against my hand and holding her breath, I stopped, heading off her incipient orgasm.\n\n\"You tease,\" she whined.\n\nI'd learned early on that Jane's sexual tastes were pretty far from my usual moves. She wasn't much into being dominated, and didn't really like my strap-on. She'd let me fuck her with it once but I knew it wasn't her favorite, so I'd never suggested using it again. I'd grown used to her more romantic style, but I still wanted to be the take charge bitch sometimes. Lately, I'd come to appreciate how I could take charge of her with teasing, almost as much as I used to enjoy throwing someone around or fucking up against the wall.\n\nI slipped my arm out from under her and pulled her over on her back. Scooting down, I lifted her right leg over my shoulder. I nuzzled her clit with my nose, making her giggle. I couldn't get enough of her scent. I brought my hand up and used my fingers to spread her lips wide and lowered my head.\n\n\"God, you're good at that,\" she said as I flattened my tongue and pressed it against her clit.\n\nI smiled, but didn't stop, nodding my head in the rhythm I knew worked for her. She started rubbing her foot on my back. I loved it when she did that. I could feel her getting close again, so I slowed my pace. She sighed, with pleasure, not frustration. She knew I'd get her there. When I was ready.\n\nHer phone buzzed on the nightstand. I looked up to see her turn her head. She started to reach out for it then stopped herself.\n\nI paused my ministrations. \"It's okay, go ahead. I know you're expecting a call from your publisher.\"\n\nShe grabbed her phone and checked the screen. \"Yeah, it's Shirley. Hang on a second.\" She hit the button to take the call. \"Hey Shirl, happy Saturday. No, haven't even left the house yet... Yeah, it's a lazy weekend, shopping and reviewing student's outlines. Uh huh... uh huh... I--ah!\" Jane cried out in surprise as I slid my finger inside her. She half-heartedly glared at me. \"Sorry... I... dropped something. What did you say?\"\n\nI grinned, as I added a second finger then curled my fingertips. Her mouth made a perfect O, then she violently shook her head at me, mouthing Stop!\n\nI put on my best innocent face, mouthing Stop what? Then I bent my head and started licking her again, never taking my eyes off her face.\n\n\"Um... yeah. Okay, so... right. Yeah. No, the cover art looks... um, it great. I mean, it's great, I'm super happy with it.\" She put her hand over the phone and whispered \"Stop it! You have to--ohmygod--stop!\" She uncovered the phone, trying to pay attention. \"What? No, sorry, my cat is attacking my foot.\"\n\nI giggled. \"Your cat?\" I whispered. My hand never stopped moving.\n\n\"Stop it!\" She hissed, then turned back to the phone. \"So, what's the big news? Uh huh... um...\"\n\nI started licking again. Her eyes rolled up on her head and she bit her lip, her free hand grabbing my short hair painfully. Which I didn't mind in the least.\n\n\"What?!\" Jane yelled. She pushed me off her and sat up. \"Are you serious?!\" I stopped, looking up at her with concern, but her face was lit up in delight. \"That's awesome, Shirl! Yes! For real, I was hoping for it, but I never thought... Yes, I want her to get an invitation! I doubt she'll come but... no, that's great!\" She saw my questioning look and gave me a big thumbs-up. I laid back down on her leg, but didn't continue my mischievous activities.\n\nHer conversation continued for a few more minutes, diverging into the minutiae that came with releasing an academic book. I contented myself with tracing shapes on her leg with my finger while I listened to her end of the call.\n\n\"Okay Shirl... Okay... Thank you so much! Yes. Okay, I'll see you next weekend.\" She hung up.\n\n\"What's the big news?\" I asked.\n\n\"Nikole Hannah-Jones is going to blurb my book!\"\n\n\"Who is that? What does 'blurb your book' mean?\"\n\n\"It's the most amazing news, which I'll tell you about later!\" she said, grabbing my hair again and tugging my face back between her legs. \"Finish what you started first!\"\n\n\"Yes ma'am!\" I said, and happily bent to my work. I was rewarded with a long, happy moan.\n\n\"Watch it!\" I yelled at a guy on a bicycle an hour later. He'd flown through a red light and almost clipped me as Jane and I skated through a crosswalk. \"Asshole!\"\n\n\"That was a nice move, dodging him like that. You're getting better. You won't need your kneepads soon,\" Jane said.\n\nAfter I'd fallen and given myself a second set of street pizzas on my knee, Jane had bought me a pair of heavy plastic knee pads, I think as a joke. But I was enjoying my new hobby of skating enough, and was also clearly not as good as Jane, that I wore them every time we went out. The scuffs on the black plastic was testament to their worth.\n\n\"I don't know, I kinda like them. Besides, they could be more useful than just skating, you know.\"\n\n\"How so?\" she asked me quizzically. She let go of my hand briefly as we let a lamp post pass between us, then reached for it again.\n\n\"Well, I mean aside from skating, these would come in handy if I wanted to go down on you while you were sitting on your kitchen island again. Your hardwood floors aren't great on the knees, you know.\"\n\nJane giggled and blushed at the same time, looking around to see if anyone had heard me. \"You're terrible.\"\n\n\"So, what's the big deal about getting a 'blurb' on your book? What is that?\"\n\n\"Oh, right. My publisher sends advanced reader copies of my book to people before it goes to print. Other professors in my field, journalists, book reviewers, it's all part of the publicity efforts. I can ask my publisher to ask if any of them liked it enough to write like a one or two sentence 'blurb' which gets put on the cover as a teaser, to encourage people to buy it.\"\n\n\"Ah. Makes sense.\"\n\n\"Right. So, I'd asked Shirley if she'd ask Professor Hannah-Jones at Howard about a blurb. I'd put her on the list of people I wanted an ARC sent to--\"\n\n\"ARC?\"\n\n\"That's the short-hand for the advanced reader copies.\"\n\n\"Gotcha.\"\n\n\"Anyway, people like her get tons of unsolicited stuff. I had no expectation she'd even read it, much less get back to Shirley about putting a blurb on my cover. This is huge! Not only could it really help my sales, but I'm such a fan of hers. I can't believe she read it! She read my book!\"\n\n\"That's cool, babe. Who is she?\"\n\n\"Are you kidding me?\" Jane said as we rolled up to the farmer's market.\n\n\"No, I don't think I know her. Oh sweet, the smoothie guy is here,\" I said pointing.\n\n\"Wow. Okay, well... I guess that's on me. No reason you should know I suppose. She's the journalist who spearheaded the 1619 Project.\"\n\n\"That I've heard of. I read some of that researching my paper for your class. Talking about the history of slavery of the U.S.?\"\n\n\"It was so much more than that, but yes.\"\n\n\"What flavor do you want?\" I asked, dragging my toe-brake to slow me to a stop as we rolled up to the smoothie stand.\n\n\"Kiwi-strawberry.\"\n\nI ordered for both of us, then we stood to the side, watching the vendor make our breakfast.\n\n\"So, anyway... yeah, she read my book and liked it enough she's going to give Shirley a blurb for the cover,\" Jane said, raising her voice over the sound of blenders, \"And I asked Shirl if she'd make sure she got an invite to the book party.\"\n\n\"Think she'll come? Where does she live?\"\n\n\"Here in DC, I think. She's the Knight Chair in Race and Reporting at the journalism school at Howard.\"\n\n\"Oh. Why didn't you just walk over to her office and ask her to blurb you then?\"\n\nJane laughed. \"Blurb me. That sounds like something that might end up making you jealous.\"\n\n\"No blurbing with other women,\" I agreed, earning me another laugh. I didn't think I would ever tire of making her laugh.\n\n\"I've never even met her. I was at a faculty social thing with her one time but I couldn't get near her for an introduction. She's a little bit of a rock star here. Besides, you don't personally ask someone to read and pimp your book, you have your publisher do it. That way if they don't feel comfortable because they don't agree with your book or don't think it's any good, they can turn you down without the awkwardness and hurt feelings of doing it to your face. Not good form to personally press her for that when she doesn't even know who I am. Especially since I'm a brand new, little fish professor here and she's a chair.\"\n\n\"Little fish, big brain. She'd be dumb not to come and meet you.\"\n\n\"You say the nicest things,\" she said for the second time that morning. \"I hope she does come. My mom would flip out if I got to introduce them.\"\n\nI felt my stomach tighten. \"Ugh, don't remind me that I have to meet your parents.\"\n\n\"Have to?\" she said, a wry smile on her face.\n\n\"I mean get to. Get to! So excited, it's gonna be great!\"\n\nShe laughed. \"Why are you so nervous about it?\"\n\nBecause I'm going to be meeting your parents, who are both doctors, and whose PhD, Howard-professor-daughter is dating someone who's just starting her second year of community college while she drives trains for a living. And also I've never met the parents of any woman I've ever dated in my life.\n\n\"I don't have anything nice to wear. I mean... I think my nicest outfit is the one I wore when I took you to La Zona De Baile.\"\n\n\"Hmm, you were hot in that, but it's not really book release party wear.\"\n\n\"This is what I'm saying.\" I said as the smoothie guy put our orders on the counter. We collected them then started skating around, eying the produce and other treats available for purchase. I was carrying our canvas shopping bags over my shoulder.\n\n\"What's your homework load like today? Could we go shopping this afternoon?\" Jane asked.\n\n\"E-e-e-h, I dunno.\" I wasn't much for shopping.\n\nShe stopped me, turning me to face her.\n\n\"Listen, I know you just sent five hundred bucks to your mom to help the restaurant after their freezer died. Would it... would it be okay if I helped you buy something to wear? I'd really like to do that for you.\"\n\nEmbarrassment washed over me. \"I dunno...\" I said again.\n\n\"Let me put it this way; I want to dress my girlfriend up for my big party. So I'll help you get something nice to wear. But I get some serious input on what we buy.\"\n\nThat made me grin. \"You want to dress me up?\"\n\n\"Consider it a fantasy role play. I get to dress you up how I want you to look for my big night. Then next time we go out somewhere fancy, you can pick out what I wear. Anything in my closet.\"\n\nI squinted at her and pursed my lips thoughtfully. \"M-m-m-m, that could be a deal I could get behind.\"\n\n\"I would hope so. It's a win-win for both of us.\"\n\n\"We'll see. Oh, your tomato guy is here. We should get some, this might be the last week for them.\"\n\nI'm going to regret this, I thought, as I watched her pick through the produce from our favorite farm stand. I tried to imagine myself in one of her retro style dresses, I don't wear fucking dresses. I haven't worn a dress since... geez, since my confirmation.\n\nStill... I knew I'd wear whatever would make her happy.\n\n~~ Georgetown, Washington, DC ~~\n\nScattered applause greeted us as we entered the room her publisher had reserved. I peeled Jane's hand off my arm, motioning her to walk in ahead of me. This was her night, no one here was clapping for me.\n\nShe looked magnificent, wearing another of her retro cut dresses. This one was multicolored, with large stripes of bright yellows, greens, reds and blacks and, of course, a matching head wrap. I'd made the mistake of calling it an \"African color pattern\" when we were getting ready, and she'd cheerfully corrected me.\n\n\"That's like saying something is 'European' colored. There are over fifty countries on the continent, and countless different cultures. This is a pattern from Kenya. I don't know if my mom's family is from Kenya or not, but I've always liked this color combination.\"\n\nAs the applause for Jane died down, a short black woman rushed up to her.\n\n\"Here's the lady of the hour!\" she exclaimed, giving Jane a hug.\n\n\"Thank you!\" Jane said, happily, before turning to introduce me. \"Shirley, this is my girlfriend Viv Esparza. Viv, Shirley Chisolm, my publisher.\"\n\n\"Great to meet you!\" Shirley said, furiously shaking my hand, a walking bundle of enthusiasm. \"Jane, we have a lectern set up over there for your reading. A copy of your book is waiting there for you,\" she said, gesturing to the far side of the room where there was a small stand to hold a book or notes.\n\n\"My parents called me right before we got here. There was a pile-up on ninety-five, south of the mixing-bowl, and they're about thirty minutes out. Do I have to read right now?\"\n\n\"Of course not! I thought you'd want to mingle for a bit first anyway. Have a drink, it's an open bar.\"\n\n\"Best kind,\" I chimed in.\n\n\"Buy me a drink then, darling?\" Jane said with a smile. I held out my arm, she took it and I escorted her across the room towards the bar. We were stopped at least half a dozen times as we were greeted by some of Jane's friends and coworkers. In every case, Jane introduced me as her girlfriend, and I politely nodded, then stayed out of the conversations. Everyone was focused on Jane, congratulating her on her book release. Most of them were professors. All of them intimidated the hell out of me. I think I would have been tempted to flee except for my secret weapon.\n\nI'd needlessly worried about Jane trying to put me in a dress. We'd gone shopping in Tyson's Corner Mall, literally the first time I'd ever set foot in the place, and Jane had known exactly what she'd wanted me to wear.\n\nThe charcoal black men's suit fit me perfectly. The salesman had rushed the alterations and we'd been able to pick it up this morning. I had to admit I looked pretty good. The dark purple dress shirt and shiny black patent-leather shoes Jane had picked out for me complemented the suit, and the alterations had the jacket hugging my body, flattering my shoulders.\n\nWithout my new suit I think I would have felt hopelessly out of my league among all of Jane's peers and friends, dressed in their professional clothes. As it was I only felt awkward to the point of almost wanting to sneak out. Anytime I glanced behind us and caught my reflection in the mirror behind the bar, though, I actually thought I looked cool as hell. Jane was clearly appreciative. She kept reaching out to touch my arm whenever she looked at me.\n\nWhen we reached the bar, a spontaneous, somewhat haphazard receiving line formed, and we camped out as people kept coming up to Jane to say hello and congratulate her. I was able to down my margarita and surreptitiously order a second while Jane's wine sat untouched. The bar was fancy-schmancy, so the margaritas came in small rocks glasses, but they were made with real lime juice instead of sweet and sour mix, and were strong as hell, for which I was thankful.\n\nI was trying to catch the bartender's eye to order a third when I heard Jane let out a little squeal behind me. I turned to find her throwing her arms around an older black woman's neck.\n\n\"Heyyyy! I'm so happy you guys could come, mom!\" Jane exclaimed.\n\n\"You know we wouldn't have missed it, baby,\" the woman said.\n\nA tall, white man stepped up from behind and laid his hands on Jane's shoulders.\n\n\"Janey, we're so proud! Your first book!\" he said.\n\nShowtime. I felt myself clench up. I stood up straighter, glancing down to make sure my jacket wasn't tucked into my pants or anything.\n\nAfter a few moments of Jane and her parents exchanging pleasantries, none of which penetrated the blank fog my mind had thrown up, Jane turned to me, her arm still linked in her mom's. I could see clearly where Jane got her distinctive looks. Her natural curly hair was almost identical to her mom's if leaning a few shades more towards the sandy blonde of her dad. Her mom wore the same type of headwrap as her daughter and although I could see Jane had the same cheekbones and heart shaped face as her mom, her almost hazel eyes clearly came from her dad.\n\n\"Mom, Dad, this is my girlfriend, Viv Esparza. Viv, my parents, Mark and Ayanna May.\"\n\n\"Ah, yeah, hi,\" I stammered.\n\n\"It's nice to meet you, Viv,\" her mom said, as we shook hands. Her demeanor was a little cool towards me I thought.\n\n\"You too,\"\n\n\"We've heard so much about you, it's really nice to put a face to the stories,\" said her dad.\n\n\"Thanks. Jane's pretty high on you guys too.\" That earned me a laugh from her dad, and a side-eye from her mom.",
        "\"So many people, Janey! Are they all coworkers or friends or...?\" her dad asked.\n\n\"Mostly coworkers. A few friends. I'll introduce you around after--\"\n\n\"Jane!\" Shirley rushed up to us again. \"Ready to read? My lead publisher can't stay long and she wants to hear you read from your intro.\"\n\nJane seemed flustered, but she quickly introduced Shirley to her parents, then walked away with her little dynamo publisher, leaving me standing there with her mom and dad.\n\nGulp.\n\nThe bartender caught my eye and I nodded at my empty glass.\n\n\"So, Jane says you're working on your engineering degree?\" her dad asked me.\n\n\"Um, yeah. Working on it.\"\n\n\"What are you taking this semester?\" He looked genuinely interested. Her mom was watching me like a substitute teacher who'd been left a note that I was the class trouble-maker.\n\n\"Calc three, general physics, engineering mechanical dynamics and Spanish.\"\n\n\"Jane told us you already speak Spanish. She said she was learning it from you,\" her mom said. A little sharply, I thought.\n\n\"I do, yes ma'am, but I needed an elective. Taking a full course load while working full time is pretty tough, so I figured Spanish for heritage speakers would be a way to make this semester a little easier on myself.\"\n\nHer dad laughed. Her mom frowned. The bartender brought my margarita and I held up my hand to keep him from running off.\n\n\"Would you guys like something?\" I asked. Her dad ordered a Yuengling, and her mom a glass of white wine. A part of my mind noted that her parent's tastes in drinks mirrored Jane and my tastes, and a nervous giggle escaped my lips.\n\n\"What?\" her mom asked me.\n\n\"Nothing, sorry. Look, she's getting ready to start,\" I said. Shirley was at the lectern, knocking her knuckles on the wood surface to get everyone's attention. The room hadn't been set up with chairs, so the crowd simply turned to face her.\n\n\"Ladies and gentlemen, most of you know her, but I'm going to introduce her anyway. Dr. Jane May is a professor at the Department of Afro-American Studies at Howard University, and the author of the new book we're here to launch tonight, Weaponized Words: How Terms of Cultural Revolution are Turned Against Justice. So, without further ado, please welcome Dr. Jane May!\"\n\nJane walked to the front of the crowd, as confident as she'd walked to the front of the class the first night I'd met her. Her eyes fell on the lectern and her face softened. She ran her hands over something on the lectern, then she picked up what I knew was the first actual, physical copy of her book she'd laid her hands on. There had been a delay from the publishing house, and her author copies hadn't been delivered to her townhouse yet. She'd been waiting on them for weeks.\n\nShe held up the book, the back cover with her black and white author photo next to her face and the two Janes looked towards the audience. She giggled and said in one of the happiest voices I'd ever heard from her, \"Y'all! I wrote a book!\"\n\nWe all laughed with her, then there was applause.\n\nShe set the book down on the lectern and opened it. I knew what she was going to read, she'd had me sit on her couch while she practiced reading it to me off her laptop multiple times in the last two weeks.\n\n\"Before I start, I want to thank Dr. Harriott, my PhD advisor at Georgetown, who's encouragement started me on the journey to write this. Unfortunately, he couldn't come tonight. Also Dr. Carr, my department head for his support.\" She waved to a man on the other side of the room who lifted his hand in acknowledgement. \"I'd also like to give a special thanks to my girlfriend, Viv Esparza.\"\n\nI felt my eyes widen in surprise as some of the people Jane had introduced me to earlier turned to look at me. Jane was staring at me too, wearing that grin that slayed me every time I saw it plastered on her face.\n\n\"Viv, you became a very important part of my process during the writing of this book. You've let me bounce passages off you, helped me revise my writing, and make it more accessible. As some of you may know, I'm a pretty big egghead, and when I start digging into research and data, my writing can be a bit... dense... at times.\" Several of her colleagues laughed. \"Viv, you helped me craft my message to be clearer and more persuasive, so thank you for that. I love you.\"\n\nI felt as if a bolt of lightning came through the roof, the flash leaving stars in my eyes, the thunderclap, my ears ringing. She'd never said that to me before. And now she said it... here. In front of all these people. In front of her parents.\n\n\"Lastly, but most importantly, I want to thank my parents for supporting me throughout my career, as an undergrad student, a PhD candidate, as a professor, and now as an author!\" Her voice rose an octave into a squeal on that last bit and everyone laughed. Except me. My mouth was too busy hanging open. \"Mom, Dad, I wouldn't be here without your encouragement and support. I love you guys so much. Thank you!\"\n\nHer parents were both beaming with pride next to me.\n\n\"So, thanks out of the way, let me read from the introduction so everyone can get back to the bar,\" Jane said. More laughter. She had the crowd in the palm of her hands, just like she did every class I'd sat in with her.\n\nShe loves me? She loves me! Why did she wait to say it here? In front of everyone? I thought. Does that mean something? Does it mean more? Less?\n\nJane cleared her throat and began. \"The term 'Woke' is generally attributed to the blues singer Lead Belly, who sang in the thirties, 'I advise everybody, be a little careful when they go along through there -- best stay woke, keep their eyes open.' Since then...\"\n\nJane's voice faded to a low buzz in the background of my mind.\n\nShe loves me. Jane loves me. She said it right here in front of everyone. At least a dozen times in the last month, I'd thought about saying it to her. But there was no way I was going to say it first. Because I hadn't thought that she'd say it back.\n\n\"Black Lives Matter activists took up the phrase 'stay woke' in the two-thousand-tens...\" Jane was saying.\n\nI glanced over at her mom. She noticed and for the first time, the smile she gave me was warm. I looked back at Jane... and was drawn into her face. I watched her lips move without hearing the words. Those lips. Those lips that kissed me. Kissed my neck. My body. I flushed at the thought, acutely aware her mother was standing right next to me. Those lips that talked to me, laughed with me, made me laugh. Made me feel... wanted.\n\nShe loves me. Her words started to penetrate my brain again, and I realized she was wrapping up. I'd missed almost her entire reading. Not that I needed to hear again, she'd read it to me so many times while editing it, refining it. She said I'd helped her. That I'd been important to her writing. I felt a thrill of pride run through me.\n\n\"And now, woke has been co-opted by the right as a pejorative, implying political-correctness run amok, lack of seriousness or even anti-white racism. The pattern has repeated throughout American history, whether it's 'wokeness', or 'critical race theory. CRT is not taught in any grade school anywhere in the country, but now the term is being wielded as a cudgel to prevent kids from learning of injustice, racism or inequality in American history. White supremacists tried to keep Ruby Bridges from attending a white's only school in nineteen-fifty-four, and now, today, white supremacists are using the words 'critical race theory' as a bogey-man to try and stop children from learning about them trying to stop Ruby Bridges from getting an equal education in nineteen-fifty-four.\"\n\nHoly shit. I think this might be real, I thought, as Jane concluded the excerpt she was reading. This relationship could be the first real one I've ever had. I felt a huge grin split my face. Podr\u00eda ser el momento de hablar con la abuela, Esparza.\n\nAfter her reading, Jane received a nice round of applause and many handshakes and hugs as she came back to us at the bar, but I didn't get a chance to talk to her, as much as I wanted to. She gave me a quick peck on the lips, her dad a hug, then she collected her mom and rushed off to introduce her to Professor Hannah-Jones, who had shown up after all, much to Jane's delight, leaving me with Jane's dad.\n\n\"Well, I think they'll be a while,\" he said, watching the two of them scoot across the room towards the woman with hair dyed bright, fire-engine red. \"My wife was more excited about Jane publishing her first book than about meeting Professor Hannah-Jones, but it was a close call. She's a huge fan.\"\n\n\"I made the mistake of not knowing who she was the first time Jane mentioned her.\"\n\n\"And you're still together? Jane must really like you!\"\n\nI laughed pretty hard at that, while he turned and ordered another beer.\n\n\"How did you and your wife meet, Dr. May?\" I asked him.\n\n\"Please, call me Mark. Whenever someone insists on being formal around my family, everyone just ends up confused. There's going to be three Dr. Mays at dinner.\"\n\n\"Oh... thanks. Mark.\"\n\n\"We met in medical school. She couldn't stand me at first. We were competing for the top spot every semester, it seemed like.\n\n\"Yeah? How'd you win her over.\"\n\n\"Who says I won her over?\" He said with a smile and a wink, then took a sip of his beer. \"It was a gradual thing. Early on in an anatomy class we were in a group sharing a cadaver and I thought I was helpfully explaining the superior cavoatrial junction for her and she told she'd let me know if she wanted to enroll in the school of May, but that since she hadn't I could keep my tips to myself. I think you kids today call that mansplaining.\"\n\nI snorted into my drink.\n\n\"Yeah, all med students are arrogant. I was no exception. But after that I think I slowed my roll a little. I never tried to 'help' her again, that's for sure. Mostly because I realized she didn't need it. Then a couple years went by of us being in classes and study groups together and... I don't know, it just kind of organically grew into... well, true love.\"\n\n\"That's sweet. I see where Jane gets her positivity from.\"\n\n\"What, from me?\" He laughed. \"No, her mom is the positive one.\"\n\n\"Hmm,\" I took a sip of my drink.\n\nHe glanced at me. \"Don't worry about Ayanna, she'll warm up to you.\"\n\n\"I get the feeling she'd rather I be someone else.\"\n\n\"Ayanna's family is from rural Virginia, in the southwest part of the state. They can be pretty socially conservative. Not her fault she picked up some of that. She took a long time to be okay with her daughter being gay. She can be a little cool to Jane's girlfriends when we first meet them, but I usually point out that it took her parents five years to finally be okay with me coming to Thanksgiving dinner and she relaxes a bit.\"\n\n\"Yeah?\" I doubt her problem is that I'm a woman. It's that I'm a thirty-year-old woman who's still working on getting a lousy associates degree. I wondered how many of Jane's girlfriends they'd met. Seemed like maybe it was a lot.\n\nHe laughed. \"Yeah her mom absolutely refused to believe I liked her greens. Thought I was being polite any time I took seconds.\"\n\n\"Were you?\"\n\n\"Heck no! I grew up in Charleston. I may have grown up a rich, white kid, but I've always known how good authentic Southern soul food is. I finally won her over by making my family's sweet potato pie recipe in her kitchen one Thanksgiving. Just the fact it was sweet potato and not pumpkin was worth some points, but also my pie is damn good.\"\n\n\"Looks like Jane and your wife are wrapping up with her celebrity professor. If you'll excuse me, I'm going to find the ladies room before we head to the restaurant.\"\n\nI left a twenty in the tip jar (no sense in stiffing a working dude because the drinks were free) and made my way to the fancy lady's room in the back of the bar. It was all black walls and gold fixtures. The stalls were empty so I picked the far one, shut the door and sat down, pulling my phone out of my jacket pocket to check my texts. One from my brother, a couple from mama. I touched the last text Jane had sent me, asking if I was almost at her house to get ready with her that afternoon. I pulled up her profile picture from her text, the goofy photo she'd sent me when I'd gotten upset at her joke about El Escondite on our second date.\n\nThe fish-eye lens picture with the curls drooping over her head wrap to cover her forehead and her exaggerated pouty lip made a happy sound escape my mouth, right there in the bathroom. She loves me. Part of me was incredibly frustrated that her parents were going to spend the night with her. I didn't know when, or even if, I'd have a moment alone with her tonight to tell her that I loved her too. I do love her. She's so amazing, and--\n\nMy thoughts were interrupted by voices coming into the bathroom. Loud, obnoxious, tipsy sounding voices.\n\n\"Honestly, a first-year professor getting a book deal?! How many publishers have I submitted my extract to? And nothing. Nothing!\"\n\n\"Jealousy doesn't look good on you, Ren\u00e9e. She's only first year at Howard. She taught elsewhere before here.\"\n\n\"Pfft, at a community college,\" said the voice, dripping with scorn.\n\nI'd thought I'd recognized the voices, and the name Ren\u00e9e rang a bell. I was sure she was one of the many professors from Howard that Jane had introduced me to at some point that evening.\n\n\"I just get so tired of her fake, peppy personality. No one is that positive all the time. She's clearly had everything handed to her. No one who's really had to work to get where they are is that full of sunshine.\"\n\n\"So, why'd you drag me to this then?\" the other woman said. I hadn't put a face to the second voice yet.\n\n\"For the free booze, of course.\" They both laughed. \"Plus, I never pass up an opportunity to schmooze Dr. Carr.\"\n\nI stood up to buckle my pants. I wasn't going to sit here and let them trash my girlfriend (My girlfriend!) behind her back.\n\n\"Do you think her girlfriend gets how dumb Jane thinks she is?\"\n\nI paused, my hand on the door handle. What?\n\nThe other voice laughed. \"'You helped me make my writing more accessible!'\" she said in a crude imitation of Jane's voice. \"The secret of Jane's success must be to write down to her lowest common denominator girlfriend.\" More laughs.\n\n\"Pamela told me she heard her little Latin sex toy didn't graduate high school. She's a bus driver.\"\n\n\"Really? Dr. Jane May, all-honors everything is slumming with a G.E.D? If she even got a G.E.D.\"\n\nA bus driver? Fuck you! I fumed. I... graduated. Maybe not with honors or anything, but I wasn't stupid!\n\n\"Do you think she's only using her to help her make her writing readable by anyone with less than a post-grad degree? Or is it because her little sex toy is a tiger in the sack?\"\n\n\"Why not, both?\" More laughter. \"Seriously though, she must be amazing in bed or Jane wouldn't bother with her.\"\n\nEnough. I threw the door open against the wall of the stall with a loud crash.\n\nThe two African American women at the sink jumped and turned to look at me, one of them with an eyeliner pencil in her hand.\n\n\"Jane is twice the woman either of you two shrews could ever hope to be, puta de mierda. You can talk shit about her behind her back all you want, but she's the one with a book out today, not you.\"\n\nI expected them to be embarrassed or surprised, or even intimidated by the way I came at them.\n\nThe taller one looked at me with the same expression I might have used looking at dog shit on my shoe.\n\n\"Well, well. The little chihuahua barks, even when she's not holding your leash,\" she said. She was the one whose voice I'd identified as Ren\u00e9e. \"I hope you're better with that mouth at things other than talking, or Jane will get bored of you and move on to her next butch plaything faster than even I'd guess.\"\n\n\"Fuck you!\" I hissed, taking another step toward her.\n\nShe leaned back against the sink away from me, but the sneer didn't leave her face.\n\n\"Do you mean to tell me you're actually going to threaten me? How ghetto.\" She glanced over at her friend, who had taken her phone from her purse and was pointing the camera at me. \"Go ahead, take your shot. Jane will really enjoy having her...\" her eyes raked over my suit and ended at my haircut, \"...boy-toy getting stuffed in the back of a police car in front of her parents, her publisher and her department head.\"\n\nI ground my teeth, fists balled at my sides. My vision was a red haze, I couldn't come up with anything resembling a comeback. Ren\u00e9e saw the realization on my face, that I couldn't do anything. She was right. As much as I wanted to punch her teeth down her throat, it would mean a night in jail. And probably losing Jane if I embarrassed her in front of her parents like that.\n\nRen\u00e9e stood up straighter and gave me a mockingly fake look of sympathy.\n\n\"Don't worry about what I said while you were in the stall, chica. I'm sure Jane wuvs you,\" she said in a cloyingly sweet voice, \"for your witty repartee and not because you have nice shoulders and a man's haircut. You probably don't have to worry about her getting tired of sleeping with a bus driver and moving on.\"\n\n\"I drive fucking Metro trains, bitch.\" I could hear all the confidence had drained from my voice.\n\nShe rolled her eyes hard at me. \"Oh dear, my bad. I take back everything I've said about you. Now run along back to your sugar-mama. I'm done with you now.\"\n\nShe turned away as if I had melted into the floor and continued to re-apply her eyeliner while the other one smirked at me from behind her phone which was still trained on me.\n\nI stood there for another ten seconds fuming, then turned on my heel and stalked out of the bathroom, their laughter hard on my heels.\n\nFifteen minutes later Jane found me at the bar as the bartender sat my fourth margarita of the night in front of me.\n\n\"Baby, are you ready to-- What's wrong?\" She stopped as she saw my face.\n\nI took a slug from my glass. \"I... nothing, just... this sort of shin-dig isn't really my scene. I feel really out of place.\" I took another drink.\n\n\"Hey, you might want to take it easy on those,\" Jane said, a concerned look in her eyes. \"We're still going to dinner with my parents.\"\n\n\"I'll be fine.\"\n\n\"Are you sure you're okay?\" She asked, slipping her arm around my waist.\n\n\"Yeah. Some of your coworkers... aren't very nice.\"\n\nShe followed my gaze to the other side of the room where Ren\u00e9e and the other woman (whose name I still didn't know) were laughing with several other women.\n\n\"Oh no, you didn't talk to Ren\u00e9e Whitaker, did you? She's a cast-iron bitch.\"\n\n\"Yeah, she kinda is.\"\n\n\"I'm sorry baby. She hates anyone on the tenure track who might get ahead of her. I had to invite her because she's in the department, I didn't think she'd actually come. What did she say to you?\"\n\nI looked into Jane's eyes. Am I just a plaything to her? That can't be right. She said she loved me. Is she eventually going to get tired of me? Move on to... what did that bitch say? Her 'next butch plaything'? How many of me have there been?\n\n\"I... nothing. She's just not very nice.\"\n\n\"No, no she's not. C'mon, leave the rest of that drink and let's go to dinner. Mom told me she's looking forward to getting to know you.\"\n\n\"She did?\" I couldn't conceal my surprise.\n\n\"Of course. Why would you say that?\"\n\n\"She was, ah... a little cool to me when you left us alone.\"\n\n\"That's just mom. She'll warm up to you, promise.\"\n\n\"Okay... Hey babe?\"\n\nShe folded her hand through the crook of my elbow as we headed towards her parents. \"Yes?\"\n\n\"I love you too, you know.\"",
        "Her face lit up. \"Thank goodness!\" She turned into my arms and kissed me. I almost didn't care about the look her mom was giving me when we broke apart.\n\n~~ Burke, Virginia, October ~~\n\nI held my follow-though as the ball crashed into the pocket, spraying the pins. When they settled, the ten-pin was wobbling a bit, but not enough to fall over.\n\n\"Damn it,\" I muttered. I looked up at the score before I turned back to the ball return. We'd been in third for most of the season. We were playing the team in second place tonight and were hoping to make a move, but we had to sweep all three games to jump over them in the standings. It was the last game of the night. We'd won the first two games, but the last game was close.\n\n\"You got it, Viv, easy-peasy!\" Oscar yelled. I glanced over at Jane, sitting next to Manny in the plastic seats along the ball racks behind the playing area. She winked at me, holding two thumbs up and I grinned. Jane had become pretty tight with my whole team. She was a regular cheerleader for us, coming every Sunday night now.\n\nI stepped to my mark, took a half-step to my left and focused my aim at the fourth dovetail half way down the alley. I put on way less spin, a lot more velocity on the ball. I watched with satisfaction as it barreled straight into ten for the spare.\n\n\"Nice one, baby,\" Jane said as Manny got up and I plopped down next to Jane in the seat he'd vacated. \"You're automatic on that ten-pin.\"\n\n\"I need to be more automatic on the first ball. That's three frames in a row I've missed the pocket.\" I held out my hand with my fingers spread wide and she covered my palm with hers, lacing our fingers together. I crossed my leg over my knee and tapped my foot in the air in time with Dragonette singing Hello from the other side of the alley where there was a Rockin' Bowling party going on. The DJ had been killing it tonight. I always bowled better when there were tunes.\n\n\"You're still going to kick my butt afterwards.\"\n\n\"You're getting better every week, babe,\" I said. For the last month after I finished league night, I'd gotten us a lane and Jane and I had thrown a couple games before going home. Sundays were the nights we spent at my place. Manny had pulled me aside after the second time he'd met Jane and told me that as far as he was concerned, she was always welcome to stay over.\n\n\"My average has gone up twenty pins since you got me Louise,\" Jane said, leaning down and patting her ball bag under the seats.\n\nIn the spirit of Jane buying me a pair of skates to draw me into one of her hobbies, I'd had the pro shop measure Jane's hand and had ordered her a custom ball to fit her. I'd managed to find one that was swirled blue and white in Howard University colors. Jane had been delighted, and had promptly named her ball 'Louise'.\n\n\"That's 'cause the lane balls suck. Having a ball that's the right weight and fit for your hand and arm strength makes a big difference.\"\n\nShe wrapped her hands around my arm and leaned her head against my shoulder as we watched Manny and a guy from the other team take their turns.\n\n\"Maybe when I finish my degree next spring and I have free time again, we can find a couple other girls and join a women's league together.\"\n\n\"You aren't going to keep going for your bachelor's?\" Jane sat up straight, looking at me in surprise.\n\n\"Um, my plan is to apply for the engineering apprenticeship in the spring. If I get in, I'm going to be studying my ass off, learning Metro equipment technical specs and maintenance. I figured that'll be all I can handle.\"\n\n\"Oh,\" she said. She sounded disappointed. \"You're doing so well, maintaining a three-point five. I thought you'd want to apply to a four-year college to finish your bachelor's in engineering.\"\n\n\"I've been doing this to get into the program. And I've been killing myself for the last year doing school and work both full-time. I think I want to take some time off from school.\" I squeezed her hand. \"I'd like to be able to spend more time with you, not just weekends.\"\n\n\"Well, I approve of that plan,\" she said happily.\n\n\"Viv, you're up,\" said Raul as he came off the lane. I looked up and saw we were tied, dead even in the fifth frame.\n\n\"Looks like we need a refill,\" Oscar said, holding up our empty pitcher. We used to be a Bud Light team, but I'd converted the guys to Yuengling after I saw the alley had it on tap.\n\n\"I'll get it guys,\" Jane said, standing up and reaching for the empty pitcher. \"Y'all focus on winning.\" She batted her eyes at the other team, most of whom laughed. I swear there wasn't anyone in the world she couldn't charm. She gave me a quick peck on the lips. \"Knock 'em down, babe.\" Then headed towards the bar, her hips swinging to the sounds of Juice from the other side of the alley. I tried (and failed) not to watch her ass as she walked away.\n\nThe lyrics matched my thoughts at that moment.\n\nNo, I'm not a snack at all. Look, baby, I'm the whole damn meal!\n\nI grinned at her retreating form. Hell yeah she is.\n\n\"Hey, horn-dog. Quit staring at your woman's butt and throw your ball,\" Manny said with a smirk.\n\n\"Make me,\" I said, sticking my tongue out at him.\n\nMy first ball was dead into the pocket, exploding the pins for a strike. I gave myself a little fist pump as I walked back to the return for my second frame. My purple ball rattled up into the rack and I glanced back towards the bar as I picked it up... and froze. Jane was standing at the service area in the bar, talking to someone.\n\nIt was bow-head. Or, Cindy... no, shit, Stephanie. Shit. The girl I'd had the quickie with in the alley bathroom. She wasn't wearing a bow in her hair tonight. She actually looked nicer since I'd seen her last, like she'd grown up a bit. She was talking to Jane with an angry scowl on her face. I saw her look my way, gesture at me. Jane was listening to her with a poker face.\n\nFuck, this isn't good.\n\n\"Viv, quit dickin' around and go,\" Oscar chided me.\n\nRight. Get through the frame so you can go see what's up.\n\nI stepped up to my mark and rushed it, of course. My ball went right through the head pin, leaving me with a four-seven-ten split. I heard Manny groan behind me. I waited impatiently for my ball, watching Jane and Stephanie. Bow-head seemed to be calming down, but was still talking animatedly. Jane was nodding. What the fuck is she telling her?\n\nI went back to my mark. My ball plowed through the four and seven, but I didn't come close to picking up the ten.\n\n\"Be right back,\" I said as I walked past Manny and headed towards the bar.\n\nStephanie saw me coming, said one last thing to Jane and then stormed off before I reached the bar.\n\n\"Well,\" Jane said, watching her go with a little half-smile on her face, \"she seems a little bitter.\"\n\n\"What did she say to you?\" I asked.\n\nJane turned to face me. \"Why don't you tell me your side of it first?\"\n\nFuck, she's pissed. Is she pissed? I can't tell.\n\n\"Uh, she's someone I, uh, had a fling with.\"\n\n\"A fling?\" Jane said, one eyebrow raised.\n\nFuck it, just be honest.\n\n\"Alright, not a fling. I hooked up with her... in the bathroom. Here.\" I tilted my head toward the ladies' room door. \"It was a one-time thing. She came back for more and wanted to go out with me. We had dinner and I decided it wasn't going to work, so instead of telling her that, I gave her a fake phone number and ghosted her.\"\n\n\"Hmm.\"\n\n\"Really, that's all that happened.\"\n\n\"Oh. Sorry, I believe you baby. That's almost exactly what she said.\"\n\n\"Yeah?\"\n\n\"Yeah, except she sounded less embarrassed, more pissed off. Honestly the woman needs to get a grip. I'm glad you told me the truth, though,\" Jane said, as the bartender dropped off a fresh pitcher of beer. She handed him a twenty and picked up the pitcher.\n\n\"You're not mad?\"\n\nShe set the pitcher back down on the counter, then turned to face me, running her hands along my forearms to grip my hands. \"Baby, why would I be mad? Everyone has a past. Everyone has dating experiences they're embarrassed about. If you'd lied to me, I'd be mad. But I'm not mad at you because someone you hooked up with wanted to dish gossip to your girlfriend to get back at you.\"\n\n\"Oh.\" The relief was plain in my voice.\n\n\"Why did you decide it wouldn't work out with her?\"\n\n\"At first it was because she was a rich girl working for her daddy's company, but honestly, in the end, she was just too dumb to be interesting.\"\n\nJane laughed, then covered her mouth with her hand, glancing guiltily towards the black-light lit side of the alley where Stephanie had stormed off.\n\n\"Well,\" Jane said, \"she warned me off you. Said you were a player who'd end up hurting me. I think we both know that's a load, right?\" She kissed me, then retrieved the pitcher of beer and we went back to our lane.\n\nRight. I'm not a player. At least... not anymore. Right, Esparza? I asked myself.\n\n\"If you want to improve your ball control, you could start doing curls with me,\" I said later to Jane as I came back into my bedroom after brushing my teeth. Jane was in my bed with a book, wearing her cute librarian readers.\n\n\"I thought I did really well tonight,\" she said, looking at me over the tops of her frames.\n\nFuck, she's sexy when she does that.\n\n\"Oh you, did!\" I said, climbing under the covers with her. \"Sorry I didn't mean to say you didn't. I know that one-forty-five was your personal best. If you get a little more arm strength, though, you'll be more consistent.\"\n\n\"I'll lift with you if you'll try doing yoga with me again.\"\n\nI sighed. \"I felt so stupid that time you talked me into it. Like, totally awkward.\"\n\n\"How good were you the first time you went bowling?\"\n\n\"Not good,\" I said with a chuckle, remembering my dad taking me and Diego when we were little. I started bowling in junior high because it reminded me of him.\n\n\"The point of yoga isn't to look cool, it's to find focus and harmony with your body, while increasing your flexibility and muscle tone. But, the more you practice the cooler you'll look while doing it.\"\n\nI laughed and she turned her attention back to her book. I scooted down in the bed and lifted her t-shirt, exposing her belly button.\n\n\"Whatcha reading?\" I asked, then lowered my head, letting my lips graze the soft skin above the waistband of her panties.\n\n\"The latest Ibram Kendi book. Thinking about assigning it for my class next semest--oh!\" She gasped as my lips tugged on the tiny gold charm shaped like Africa that dangled from the hoop in her navel.\n\n\"What's it about?\" I asked, then swirled my tongue in her belly button. This was one of our favorite games. She'd be reading, and I'd try and distract her, while she tried to maintain her composure and discuss what she was reading. I usually won pretty fast.\n\nNot this time though.\n\n\"Viv, stop.\" She slid her bookmark into her book and set it on the side table. \"I... I want to talk about tonight.\"\n\nI propped my head up on my hand, regarding her.\n\n\"About bow-head?\"\n\nJane frowned at me.\n\n\"Sorry, that's how I always thought of Stephanie to myself. The two times I saw her she was wearing a giant bow in her hair. One of her big red flags to me.\"\n\n\"Okay, well I can see how that might be a signifier of immaturity, but it's kind of disrespectful for you to call her that.\"\n\n\"You're right. Sorry,\" I said, chagrined. \"So, you want to talk about Stephanie?\"\n\n\"Viv, I don't have a problem with you being with women before me. But...\" She seemed unsure what to say next.\n\n\"Just rip the band-aid off. What's bothering you?\"\n\n\"You had sex with her in the bathroom at the bowling alley?\n\nI felt myself flush. \"Uh, yeah. She'd been flirting with me, and we ended up in there at the same time, and well... one thing led to another.\" I left out that I'd followed her in there and come on pretty strong.\n\n\"I see.\" Jane sat still for a long moment. \"Viv... you know I'm not that kind of girl, right? The idea of having sex in public like that, much less with someone I just met... that's not something I'd ever do.\"\n\n\"Oh, I know that babe.\"\n\n\"I just... I was a little taken aback to hear that you are that kind of person.\"\n\n\"Well, I... I wouldn't say that's me. At least not anymore. I told you I was kind of a love 'em and leave 'em woman before I met you. That sort of thing kinda went with the territory. But that's not me now.\"\n\n\"I'm worried that me not being wild like that is going to disappoint you or leave you unsatisfied with our sex life.\"\n\nI sat up quickly. \"Babe! That'll never happen!\"\n\n\"I just want all our cards on the table, because if you expect me to do something like that with you, it's not going to happen.\"\n\n\"Jane, that's not...\" I searched for the words. \"All the time I was being a slut like that--it's okay, I was kind of a slut--I think I was just looking for something I'd never thought I'd find. And I found it with you. I am one-thousand percent happy, delighted, over the moon with our sex life. I love making love to you. I wouldn't change a thing.\"\n\nJames dimples made an appearance. \"Nothing? I know you like to use your strap-on and I have to be in the right mood for that.\"\n\n\"Well, yeah, I do like that, but it's not your cup of tea and that's okay.\"\n\n\"I don't like it rough, that's all.\"\n\n\"Fair enough.\"\n\n\"Okay. I just didn't want to leave any of that unsaid.\"\n\n\"Thanks for saying it then.\"\n\nWe gazed at each other for a long moment.\n\n\"Well?\" she finally said.\n\n\"Well what?\"\n\n\"I believe you were in the middle of something when I interrupted you.\"\n\nA huge grin split my face. \"Yes ma'am, I was!\" I slid lower and swirled my tongue around her belly button again as her hand slid through my hair.\n\nAnd then we made love.\n\nThat's what sex was with Jane. It wasn't fucking, which was what I'd done most of my life. This was making love. And I loved it. Every second of it. Even during the random times my brain would tell me she was certain to get tired of me, or outgrow me, or find someone who was more like her, from her world. I absolutely loved making love to her. And having her make love to me. She made me feel adored, wanted.\n\nSunday nights always seemed to last longer too, as if our bodies knew we wouldn't get to see each other again until Friday. Even though we had to be quieter at my place because of Manny in the next room, we'd go again and again, until we fell into an exhausted heap.\n\nJane was kneeling on the mattress between my legs, licking and fingering me through my second orgasm, when she raised her head to look at me.\n\n\"Put it on.\"\n\n\"What?\" I gasped.\n\n\"Your strap-on. Put it on.\"\n\nI got up on my elbows to meet her eyes. \"Really?\"\n\n\"Sure, let's see if we can have a meeting of the minds.\"\n\nI hesitated a fraction of a second, then rolled over, reaching for the drawer in my side table.\n\nWhile I got the straps tightened around my hips (possibly faster than I ever had before), Jane laid back on the pillows. She spread her legs and held out her arms to me.\n\n\"Hmm, can't say I usually do it this way,\" I said as I slid between her knees.\n\n\"We'll this is what I meant. Let's see if we can do this with a little tenderness instead of fucking like animals. Not that I won't let you fuck me like an animal someday. Maybe. Just not today.\"\n\nI positioned the head of the silicone cock between her lips and eased it inside her. She sucked in a breath and winced. I stopped.\n\n\"Want me to take it out?\"\n\n\"No, just go slow.\"\n\nI slid out an inch or two, then back in, gently rocking it a little deeper on each thrust. Finally, as it sank completely into her, she pulled my body down on top of hers. Our breast touching, our stomachs, hips. She wrapped her legs around my waist as I looked into her eyes.\n\n\"I've really never done it like this,\" I said, after I kissed her.\n\n\"This is what I want from you, darling,\" she said breathlessly.\n\n\"Me too.\" I slowly started rocking my hips, thrusting in and out of her as we kissed.\n\nKissing Jane was the single sexiest thing I'd ever done in my life. Never before had I been with anyone who I would be happy just kissing. Our tongues intertwined, lips pressed softly together, our breath mingling. I was probably only moving the dildo maybe two or three inches on each stroke, but I was maintaining a steady rhythm as Jane's breathing sped up into my mouth. Jane was the quietest woman when she orgasmed that I'd ever been with. She usually held her breath or whispered to me as she came.\n\nBut not this time.\n\nShe started making her little noises against my tongue as she got close, but as her hips started shaking beneath me, she cried out. Once, twice. Then she bit my bottom lip, softly. I could tell she was struggling both to keep quiet and to not chew a hole in my lip. I started thrusting just a little harder at the bottom of each stroke and it sent her over the edge.\n\n\"Oh God, oh God,\" she whispered, then as spasms shook her body, her arms tightened around my neck and she yelled, \"Oh God! Oh, sweet Lord in Heaven, Viv!\" Her ankles tightened around my butt, pressing me tightly into her.\n\nAs the orgasm wracked her lovely frame, three loud thumps came from the wall that separated my room from Manny's.\n\n\"It's after midnight and I have the early shift,\" we heard his muffled voice.\n\n\"Sorry, dude!\" I yelled back as Jane turned a shade of red I'd never seen on her before and she started giggling uncontrollably.\n\n\"That's the loudest I've ever heard you,\" I said, grinning down at her.\n\n\"That was really nice,\" she replied breathlessly.\n\n\"Hafta to say, I always thought these were only good for fucking, not making love,\" I said, giving the dildo a few short thrusts into her.\n\n\"Why not both?\" she said, making me laugh. \"Seriously though, you know I'm not... a wild kinda girl. But let's bring that thing over to my place where we can see what else we can do with it without having to worry about being too loud. As I said earlier, I'm not one for public sex, and the fact I'll never be able to look Manny in the eyes again is as close as I ever want to come to it.\"\n\n~~ Lorton, Virginia, November ~~\n\nIn hindsight, things went exactly as I'd thought they would every time I'd imagined this.\n\nIt was a cold, rainy Sunday and after we'd wrapped the seemingly endless pile of tamale's for Abuela's weekly orders, I'd sent Diego on his way, telling him that I'd help her clean up then get her in her car to go to afternoon mass. I was scrubbing at the pot she used to slow cook her carnitas when I finally got up the nerve.\n\n\"Hey Abuela, I wanted to talk to you about Thanksgiving.\"\n\n\"\u00bfSi, querida?\"\n\n\"Can we do lunch instead of eating later in the evening like we usually do?\" Our family had never been shy about adopting American traditions, especially if they involved eating. Although our menus certainly had a Mexican spin on them. No turkey and stuffing for us.\n\n\"Si, we can do when is good for you,\" she said while she dried another pot. \"You have another plan that day?\"\n\n\"I, uh, I wanted to know if I could bring Jane. You remember the woman who came to Diego's wedding with me?\"\n\n\"Oh! Si, your profesora. Is so nice you are friends with a smart lady such as that.\"\n\n\"Yeah, we thought we might do lunch here, then we want to drive down to Richmond and have dinner with her parents.\"\n\n\"Ah, so nice! Her familia does not mind her bringing a friend?\"\n\nI took a deep breath. Then another, shakier breath. I felt like I was going to start hyperventilating. Just fucking rip off the band-aid, Esparza!\n\n\"Well, Abuela, she's, uh... I've been wanting to talk to you about that. She's more than a friend. A lot more than that.\"\n\n\"What do you mean, nieta?\"",
        "She had stopped drying, and her eyes bored into mine. I could see on her face she knew what I meant, and wanted me to deny it.\n\n\"Jane's my girlfriend. We've been dating for a few--\"\n\n\"No! Vivian Estrella Esparza, I will not hear this!\"\n\n\"Abuela, I--\"\n\n\"You stop this, I will not hear of this... this sin! You talk of sinning! I thought you outgrew these foolish thoughts!\"\n\n\"Abuela, it's not a sin, I love her! She loves me! We--\"\n\n\"\u00a1Det\u00e9n esta charla ahora mismo! \u00a1No permitir\u00e9 que mi nieta le falte el respeto a Dios en esta casa!\"\n\n\"\u00bfC\u00f3mo puedo faltarle el respeto a Dios, cuando Dios me hizo as\u00ed? God made me who I am, Abuela. I'm gay. I'm gay, Abuela!\" We were shouting now. \"I've always been gay, and if God has anything to do with it, it's because he made me like this!\"\n\nThe sound of Abuela's hand slapping my cheek echoed around the tiny kitchen.\n\n\"You no talk about God like that! Dios no te hizo pecar, \u00a1est\u00e1s eligiendo pecar!\"\n\n\"I didn't choose anything! This is who I am!\"\n\n\"No... No, I no hear any more of this. You are to stop seeing this... this whore!\"\n\n\"Don't call her that!\"\n\n\"No! Enough Vivian! You no see her again. Ever! You no bring her to dinner, you no bring that whore to my home, you no see her again!\"\n\n\"Abuela, I'm not going to stop seeing her! I told you, I love her!\"\n\n\"Vivian, I will hear no more of this foolishness. I thought this woman to be nice. Respectable! Clearly, I misjudge. No, you no see her anymore, and you go with me to mass right now, and to confession. You must apologize to Jes\u00fas por tu pecado.\"\n\n\"I'm not going to do any such thing.\"\n\n\"Yes, yes we go now. If we go now, Father Danny will have time for your confession before mass.\"\n\n\"Abuela, I am not going to church. I'm not going to stop seeing Jane and I'm not going to keep lying to you and mam\u00e1 about who I am.\"\n\n\"Yes, you will! You will go with me now and you no see her again. Or else--\"\n\n\"Or else what?\" I snarled.\n\n\"Or you get out of my house and no come back!\"\n\n\"Abuela, I'm not--\"\n\n\"Yes, you will! Or you go!\"\n\nThis was exactly like I'd always imagined it. She wouldn't listen. She wasn't going to listen. Was incapable of listening. And I had the choice. I could go with her to church, make a show of giving up my sinful ways, then go back to pretending I was something I'm not. Or I could leave. And maybe never come back. Maybe never see her again.\n\n\"Abuela,\" I said, and I could hear the tremor in my voice. \"Are you saying you can't love me because of who I am?\"\n\n\"Vivian, this is no who you are. You are confused, led astray from Jes\u00fas, by this evil woman, this whore.\"\n\n\"I swear to God, Abuela, if you call her a whore again...\"\n\n\"She is the reason you are acting like this!\"\n\n\"No, she's not!\" I bellowed. \"I've always been gay! Christ, Abuela, if you knew how many women I've--\"\n\nShe ended that sentence by slapping my cheek again.\n\n\"Fuck!\" I held my hand to my face.\n\n\"\u00a1Sal de mi casa!\" she yelled at me.\n\n\"Fine!\" I snatched my jacket from the back of the chair and scooped up my backpack as I headed to the door.\n\n\"\u00a1No regreses hasta que decidas dejar de pecar!\"\n\nI paused as I opened the door to her apartment. The steady drizzle that had been coming down when I arrived had turned into a downpour.\n\n\"\u00a1No vuelvas hasta que hayas denunciado a esa puta a Jes\u00fas!\" She called at me.\n\nIt was the final straw. I didn't turn around, but I glanced over and saw the keys hanging on the hook next to the door.\n\n\"It's pouring out there. I'm taking your Beetle, I'll bring it back in the morning.\" I grabbed the keys and walked out, slamming the door on her sputtering outrage. It was petty as hell. I knew that by taking it, either she'd have to take a cab to church or skip it all-together. Which I couldn't remember her doing in years, barring her being in bed with a near life-threatening illness.\n\n\"Fuck you, God. You rain on me after I get thrown out of my Abuela's house because of your bullshit, then you get to be without her in your house for one Sunday,\" I said to the rain as I got in the beat-up Volkswagen and slammed the door shut.\n\nIt was hard to tell which was making it harder to drive, the pouring rain that the wipers were struggling to keep up with, or the tears running down my face.\n\nThe fact it never once occurred to me to call Jane in that moment should have told me I was spiraling.\n\nI headed home, but as I got close I remembered that I'd killed off my bottle of tequila Thursday night before bed, the last time I'd been home. Knowing Manny, chances were good there wasn't any beer left in the fridge after this weekend.\n\nI need a fuckin' drink I thought. When I pulled into Smitty's, the parking lot was completely empty. I pulled right up to the door and saw a hand-written sign that they were closed because they'd had a kitchen fire the day before.\n\n\"Fuck!\" I yelled in frustration, slamming my hand on the steering wheel. Where can I go? I'm not in the mood to get hassled by some dudes by going to a new dive bar.\n\nA thought popped into my head and I put the Beetle in gear.\n\nTwo hours later I was sitting in a booth against the back wall of Chasin' Tail, halfway through my fourth Patron Special Reserve, straight up with a lime wedge. This wasn't my favorite place, but I knew I certainly wouldn't get hit on by a dude here, and I was more comfortable telling a woman to buzz off. Or... not comfortable. I was just less likely to do any punching here.\n\nI looked down at my phone on the table in front of me as it lit up with the third text I'd gotten from Jane since I'd left Abuela's.\n\nWhat am I going to tell her? \"Hey babe, my grandmother just threw me out of her house and her life, because I told her I'm a lesbian. Oh, also she thinks you're a whore who's leading me down the path to hell. Still coming to bowling tonight\"? That's just what she's going to want to hear from her girlfriend.\n\n\"Hey, you! Long time no see!\"\n\nI looked up, startled as Mindy, a woman I'd gone home with from this very bar for a one-night stand once upon a time, slid into my booth opposite me and set her martini glass down between us.\n\n\"How's it going, Viv?\" she said.\n\nI looked around, confused. \"Where'd you come from?\" I said, dumbly.\n\n\"Hanging out with Deborah over there. We're waiting for Dee and Connie to show up. Want to come drink with us?\"\n\n\"Thanks, but no.\"\n\n\"Uh oh. You look like you've had a rough one.\" She said, eyeing me sympathetically. \"Woman trouble?\"\n\n\"Something like that. Why are you talking to me anyway? You blew me off after our thing.\"\n\nShe had the good grace to blush. \"Yeah, I'm sorry about that. I was just in a place in my life where I wasn't looking for a relationship. I should have been more up front about it. I'm really sorry.\"\n\n\"It's fine. Worked out for the best, really.\"\n\n\"Glad there's no hard feelings. I've thought about you a lot since then, you know.\"\n\n\"I can't say the same.\" I lifted my glass to my lips, and caught the look she gave me. \"Sorry, no offense, just... things have gone differently for me since we hooked up.\"\n\n\"Oh. Well, okay. Are you sure you don't want to come drink with us? I know you and Connie have become pretty good friends.\"\n\n\"Maybe another time. Tell her I'll come by and say 'hi' before I head out.\n\n\"It was nice seeing you again, Viv,\" Mindy said. Pretty sincerely it seemed.\n\n\"You too.\" I put as much sincerity in my voice as I could, which wasn't much.\n\nAs Mindy wandered back towards her table I caught the waitress's eye and held up my now empty glass.\n\nAfter my sixth drink, I decided I'd probably better go home. I needed to get at least a couple hours sleep before bowling, or I'd struggle to break a hundred in the shape I was in. I still had no idea what I was going to tell Jane. I'd sent her a few non-committal texts to keep her from worrying that I wasn't responding to her. I paid my tab, then made a pit stop in the bathroom.\n\nWhen I came out of the stall, Mindy was walking in.\n\n\"Hey,\" I said, and stepped to the sink to wash my hands.\n\n\"Hey, you,\" she said. She made no move to pick a stall, approaching me instead.\n\n\"What are you doing?\"\n\n\"I've thought about our night together more times than I can count,\" she breathed. I could smell the cosmopolitans on her breath. She ran a hand up and down my arm, tracing the vines of my tattoo with her fingertips.\n\nI shook my wet hands into the sink, then grabbed a paper towel as I turned towards her. \"Hey listen, I have a--\"\n\nAnd then she was kissing me. I froze, and she took the opportunity to press her body against mine, arms sliding around me.\n\nWhat the fuck? I thought.\n\nAn instant later the bathroom door opened and I heard a voice, echoing my thoughts.\n\n\"What the fuck?!\" a loud voice echoed my thoughts.\n\nI looked up and saw Connie staring at us. Glowering at us. At me, specifically.\n\n\"What the fuck are you two doing?\"\n\n\"Oh, lighten up, Conn,\" Mindy said, not releasing me.\n\n\"Bitch, I told you she has a serious girlfriend. And Viv, what the fuck are you doing? You gonna cheat on Jane in a bar bathroom now?\"\n\n\"I... I wasn't...\"\n\nMindy pulled back from me. \"You told me you were having woman problems.\"\n\n\"I... not like that, I...\"\n\n\"Who gives a shit if she is, Mindy? You're gonna just pounce like this? And Viv I really thought better of you. If you're having trouble with Jane I wouldn't expect something like this from you.\"\n\n\"I didn't do shit!\" I said.\n\n\"Looked like you were doing something,\" Connie replied.\n\nFuck this. \"I don't have to explain myself to you. Or anyone.\" I pushed Mindy away from me and shoved past Connie. I staggered a little, chucking my shoulder painfully against the door jamb on the way out.\n\nIt was still pouring outside, and I ran through the rain to the Beetle, almost tripping twice.\n\nAs I cranked the engine, a sharp rap on my window startled me. Connie was standing next to the car, hunched over, her dreadlocks dripping in the downpour.\n\n\"Stop, Viv, you can't drive!\"\n\n\"I'm done with people telling me what I can and can't do today, Connie!\" I yelled back. I didn't roll down the window as I put on my seat belt and shifted into first.\n\n\"Viv, you've had too much to drink!\" she yelled, making a move to step in front of the car.\n\nWhatever, it's like two miles to my house, I thought as I whipped the wheel to the right, steering around her as she jumped out of the way.\n\nMy brain was racing, in time with the little engine as I shifted to second and tore out of the parking lot. What the fuck... what the fuck is my life anymore. My family is going to abandon me because of who God made me. My girlfriend is too good for me. I'm a freakin' slut, I have been most of my life. It's not in the least surprising Mindy would think I'd be down for... Fuck, I'm a fucking train wreck.\n\nI was pounding the heel of my hand on the steering wheel with each thought. I could feel tears running down my cheeks again, mirroring the torrents on the windshield.\n\nFat a lot of good all that tequila did me. I never should have opened my fucking mouth to Abuela. But... Jane. She deserves more than a girlfriend too cowardly to--\n\nThe curve came out of nowhere. I didn't realize how fast I was going, that visibility was as low as it was. I threw the wheel to the left, went into a skid, turned the wheel back over, trying to turn into it.\n\nTime slowed down as the car left the road. The world seemed to pinwheel around me as the Beetle flipped. I saw the tree coming, remorselessly, like a predator.\n\nA bone shattering crunch...\n\nCracking of branches... The rattling of debris from the tree falling onto the roof...\n\nSilence, broken only by the hissing of steam escaping the punctured radiator, the ticking of the now dead engine.\n\nDiego is gonna be so pissed at me when he's trying to fix this, a corner of my mind said.\n\nLooking down... a thick branch had punched through the window, crushing my upper arm, the end of it plunging into the side of my chest...\n\nPain...\n\nJostling... Painful jostling... voices... the sound of power tools... red and blue lights strobing through my eyelids...\n\nSomeone peeling open my eyelid... a bright light shining into my eye... a sting in the back of my hand, almost an afterthought compared to the pain.\n\nVoices... telling me it was going to be okay... I was going to be okay...\n\nI'll never be okay.\n\nDarkness.\n\n...\n\nBeeping noises... Pain...\n\n...\n\nDiego's worried voice...\n\nIt's okay, Dee. I'm okay...\n\nAm I okay?\n\nWould I ever be okay?\n\n...\n\nSilence...\n\n...\n\nI tried to roll over in bed, only to be jolted awake as pain exploded through my shoulder and chest. I opened my eyes, then immediately regretted it, bright fluorescent overhead lights seeming to stab painfully into my brain. I tried to raise my hands to shield my eyes, and found I couldn't. I looked down at my left arm to find it encased in a gigantic cast from my wrist to my shoulder and strapped into a sling, immobilizing it against my body. I looked to my right and found my right arm looking pretty much untouched, except for the set of handcuffs that attached my wrist to the side-rail of the hospital bed.\n\nWell, fuck.\n\nI looked around. I was in a double occupancy room, but the other bed was empty. There were two buttons attached to cables lying on the bed next to my leg, one of them presumably a call button for the nurse. With the handcuffs on, I couldn't reach either one. My shoulder ached. So did my arm. And it felt like someone had stuck a knife into my side and left it there.\n\n\"Hey. Hey! Anyone there?\" I called toward the door.\n\nA minute later a nurse came in. She was in her mid-thirties, with olive skin that matched mine. Her name tag said Sarah Vasquez.\n\n\"Glad to see you're awake,\" she said.\n\n\"How long have I been here?\"\n\nShe bustled about the bed, checking monitors. When she lifted my right hand to check my pulse I finally noticed the I.V. line poking into the back of my wrist.\n\nHuh, everything else hurts so much I didn't even notice that.\n\n\"You were brought in yesterday. Are you in pain?\"\n\n\"Uh, yeah.\"\n\n\"Where does it hurt?\"\n\n\"Everywhere. What's with this?\" I asked, rattling the handcuffs.\n\n\"You'll need to talk to the police about that. Here,\" she said, moving the buttons where I could reach them. \"This one will call one of us if you need help. This one will give you a shot of pain medicine if you need it. It's got a timer, it won't work for fifteen minutes after each press, so if you think you can just click it over and over to get high, it won't work.\"\n\n\"What? Do you assume everyone who comes in here is a junkie?\"\n\n\"You wouldn't be the first addict in here because they rolled over their car.\" She started to leave.\n\n\"Wait! Can I call someone?\"\n\n\"You brother knows you're here. He left us your number. I'll call him and let him know you're awake.\"\n\n\"What if I have to go to the bathroom?\"\n\n\"You have a catheter in, so you don't need to worry about that.\"\n\nI shifted in the bed, and was suddenly, acutely, aware that she was telling the truth. She turned to leave again, and again I stopped her.\n\n\"Wait, please,\" I said. I didn't know what to say when she turned to looked at me. \"Is... Do you know if anyone else was hurt?\"\n\n\"No, it was a single car MVA,\" she said, regarding me.\n\nI could feel the relief flash through me. \"Madre de Dios, gracias,\" I muttered, forgetting for the moment that I'd been pretty pissed at God right before this all happened. I reflexively tried to cross myself, only to be brought up short by the handcuffs. \"Thank you,\" I said, \"For taking care of me. And for telling me that.\"\n\nHer face softened the slightest bit.\n\n\"What... what happened to me?\" I tried to gesture to my left arm, but the handcuffs stopped me again.\n\n\"You had a tree branch break your arm and poke into your chest, collapsing your lung. You also dislocated your shoulder and tore your rotator cuff. You had surgery yesterday to repair your shoulder and your humerus, which was broken into three pieces. You have a steel rod in your arm now. Also, you had a pretty good concussion.\"\n\n\"Great, another one,\" I said, thinking about the last time I'd been in a hospital after the Metro crash. I looked down at my lap. I could feel tears coming. I have been crying way too much lately. I tried to reach up and wipe them off my cheeks, but was stopped again as the cuffs jerked my wrist to a stop with a metallic clank. \"Fuck,\" I said softly, without much feeling.\n\n\"Look, I don't know what happened to you,\" she said, grabbing a tissue and stepping back to the side of my bed, \"and I don't know why I'm telling you this, but the police will be here pretty quick now that you're awake.\" She held out the tissue in a ball and let me down my head forward and wipe my eyes against it. \"The hospital has a legal aid attorney from Lampedo Women's Legal Services on call. If I were you, I wouldn't talk to the cops without seeing a lawyer first.\"\n\n\"That's... thanks, that's a good idea.\"\n\n\"They'll try and talk you out of speaking to him. Just answer everything they say by telling them you want to see the attorney, okay?\"\n\n\"Okay. Thank you.\"\n\n\"I can see you're starting to really hurt. Your forehead is breaking out in a sweat. I'll page Lampedo and let them know you want to talk to Marc as soon as he can get here. I think he's in the hospital, actually. Press the button and get some rest. I'll call your brother for you.\"\n\n\"Thanks,\" I said yet again. That sounded like an even better idea. I pressed the button, the machine next to my bed made a soft click and hum, and I felt a coolness go up my arm. As the world got fuzzy, and the pain faded away, the last thing I thought was, Man, I'm royally fucked. I hope Diego told Jane I'm okay.\n\nI woke up when I heard a voice, \"Miss Vivian Esparza?\"\n\nI opened my eyes to see two cops standing at the foot of my bed. Both white.\n\nThis does not bode well for me, I thought.\n\n\"Yeah?\" I tried to sit up a little more, which turned out to be impossible given the cuffs and my immobilized arm.\n\n\"I'm Sergeant Simmons, this is Officer Fitzpatrick,\" the bigger one said, flipping open a notebook, \"We wanted to talk to you and find out what happened. Can we ask you a few questions?\"\n\nI opened my mouth to reply, then shut it, remembering what the nurse had said. I thought back to a video I'd seen on Twitter once, called Shut The Fuck Up Friday. I'd shown it to Jane, thinking it would get a laugh. She'd watched the two scrappy, cigar smoking lawyers go on and on about how anytime you talked to the police, just shut the fuck up and ask for a lawyer.\n\nJane hadn't laughed. Instead she'd said with deadly seriousness, \"That is excellent advice, no matter how you end up talking to law enforcement.\"\n\n\"I want to talk to a lawyer first,\" I said.\n\n\"That's certainly your right, Miss Esparza. If we can clear up a few things before that, this might go easier. Then we can get you your lawyer. Where were you coming from when you had your crash?\"\n\n\"I was... I was coming from the land of get me my lawyer.\"\n\nHis face darkened. \"Miss Esparza, this is going to go a little easier if we can just straighten out a few--\"\n\n\"Lawyer.\"\n\nHe flipped his notebook closed with a sigh. \"Miss Esparza, it doesn't matter if you talk to us or not, we already have a blood alcohol test performed by the hospital. You were at point two-five, which is three times the limit in Virginia. Quite frankly I'm almost impressed that you didn't pass out before you managed to get behind the wheel. Your tolerance aside, we have you dead-to-rights on DWI. If you help us clear up a few things, this will go easier and maybe the D.A. will--\"",
        "\"How many times do I have to ask for a lawyer? I already know I'm being detained,\" I said, shaking the cuffs on my wrist.\n\nThey both scowled at me. Simmons opened his mouth to respond, when a cheerful voice interrupted him from the doorway.\n\n\"Officers! How's it going?\" A young black man of maybe thirty walked in. He was casually dressed, carrying a backpack over one shoulder.\n\n\"Sorry, we're in the middle of something. No visitors right now,\" the sergeant said.\n\n\"Yeah, it sounded like you were in the middle of denying Miss Esparza her right to have an attorney present for questioning.\"\n\n\"Sorry, who the fuck are you?\" the second officer asked.\n\n\"Marc Hansen, attorney at law!\" he said dramatically, waving jazz hand at the cops. I almost laughed. \"I was paged to represent Vivian here. Which is why I was so surprised to hear her repeatedly ask for an attorney and then hear two fine officers representing the Fairfax County's Sheriff's office repeatedly ignore her request, in violation of the nineteen-sixty-three Wainwright decision. You've heard of that one, right? What do you think your supervisor would think of that, Sergeant?\"\n\n\"I don't know what you're talking about, counselor,\" the cop said, looking the young man up and down as if he clearly couldn't believe he was actually a lawyer. \"Anyway, we don't even need to talk to her. We have a blood test from when she came in showing she was at two-point-five.\"\n\n\"Well, if you have a blood test, why bother violating her rights by continuing to question her after she asked for a lawyer?\" Marc asked brightly. I liked this guy.\n\n\"We weren't doing any such thing, and you have nothing that says otherwise.\"\n\n\"Officers, my client looks kinda of tired, so I'm going to cut to the chase. You have two problems.\"\n\n\"Yeah, what's that?\" The cop was rapidly looking more and more annoyed.\n\n\"Actually, you might only have one. First, if you could kindly show me the warrant for the blood test? I'm sure you have a copy with you.\"\n\n\"The E.R. doc took the test as a matter of course when she came in.\"\n\n\"Ah, I see. Then you do have two problems. I don't know how many times I'm going to have to talk to the hospital administration about this, but the doctors here can't perform a blood alcohol test in Virginia for the police, absent a warrant or patient consent.\" He turned to me. \"Vivian, how ya doing?\" he asked. I opened my mouth to answer but before I could he went on, \"Did you consent to a blood alcohol test when you were admitted to the hospital?\"\n\n\"I was unconscious.\"\n\n\"Aw, dang fellas. Seems Vivian was unconscious and unable to consent, which means absent a warrant her blood test is inadmissible in court. You could try to get it in, but all you're really going to do is open up both your department and the hospital to a lawsuit for a fourth amendment violation. Pretty slam dunk one, in my professional legal opinion.\"\n\n\"That's the D.A.'s problem, not mine,\" the Sergeant growled.\n\n\"Possibly. But you still have the other problem.\"\n\n\"What's that?\"\n\nMarc held up his phone. \"Virginia is a one-party consent state. Meaning if you have no expectation of privacy, I can record you without your consent or knowledge. Since I was so shocked to hear two upstanding members of law enforcement blatantly continuing to question my client after she repeatedly asked for a lawyer, in a public hospital with the door open to the hallway, I decided my best course of action would be to record said illegal questioning of my client.\"\n\n\"You are shitting me with this bullshit,\" the cop muttered under his voice.\n\n\"This 'bullshit', as you so quaintly put it, is my client's constitutional rights. Which, I assure you, I take pretty seriously. I assume you read her those rights before I arrived. Vivian, did the nice officers read you your rights before they started questioning you?\"\n\nBefore I could say no, the cop said, \"She's not under arrest yet, so we aren't required to Mirandize her yet.\"\n\n\"Oh dear,\" Marc said, looking suddenly sad. \"You didn't read her her rights because she's not under arrest, but you handcuffed her to a hospital bed. Fellas, I hate to tell you but you've now violated the fourth, fifth and sixth amendments. That's illegal search, right against self-incrimination and right to counsel for those of us counting. Jeez, Vivian, you've had quite the lawsuit fall into your lap!\"\n\n\"Look, counselor, I don't have time for your technicalities--\"\n\n\"That's cool, officer,\" Marc interrupted, \"Like I said, my client looks a little tired, and at this time is going to decline to answer questions. In my professional opinion, unless you want to go ahead and arrest her, and bring a judge to the hospital to do her arraignment right here, the cuffs could be construed as illegal detention. So, if you wouldn't mind unlocking those before you go?\"\n\n\"We ain't done with her,\" the Sergeant said, gesturing for the younger cop to uncuff me.\n\n\"Great! Here's my number,\" Marc said, unslinging his backpack and pulling a business card out of the pocket on the front. \"Please direct any and all communications from the Sheriff or D.A.'s offices through me from now on. Just so we can avoid any more unnecessary and unpleasant constitutional violations. Sound good?\" he asked brightly.\n\nThe cops took the card and left without another word. Marc followed them to the door and shut it behind them.\n\n\"Wow, thanks. That was pretty--\"\n\n\"Okay, listen I need you to shut up,\" Marc said, dropping his cheerful demeanor.\n\n\"Uh, okay.\"\n\n\"Vivian... can I call you Vivian? Good. I meant what I said to those officers. I really despise cops trying to railroad people in contravention of their rights. The way they were going about this was bullshit and unnecessary. If they had applied for a warrant before the blood test, they'd have gotten one, and you'd be dead meat on a DUI. The fact of the matter is you were three times the limit and behind the wheel of a car. That's fucked up, Vivian.\"\n\nI looked down, suddenly unable to meet his eyes. \"I know.\"\n\n\"It's your lucky day, though... I mean, I guess you could call it that,\" he said, glancing meaningfully at the giant cast that enveloped my left arm. \"I'm going to be able to keep you out of the really deep shit, but only because those two pricks decided they didn't need to follow the law while trying to put you in jail.\"\n\n\"Uh... thank you.\"\n\n\"Don't thank me. You're my client now, and I will represent you to the best of my ability, until and unless such time as you want to hire an attorney of your own choosing. And like I said, their fuck up, and me happening to be outside to hear and record it, means you're probably going to get out of the most serious trouble you could have been in.\"\n\n\"Okay. What's next for me then?\"\n\nHe handed me another of his business cards. \"If they come back, don't talk to them without me, not one word besides 'I want my attorney present'. Call me if you receive any communication from the police or the D.A. It's possible that they'll realize how stupid they've been and will just drop it to avoid the trouble we could put them through. Or, they could go balls to the wall to try and nail you anyway, just because both you and I have just pissed them off. I wouldn't place a bet as to which way they'll go.\"\n\nWe spent another twenty minutes with Marc asking me questions and taking notes on my side of the story. I told him most of it. He managed to get out of me almost everything, including what had happened with Abuela before the bar. At the end of it, he sighed as he packed up his backpack.\n\n\"Vivian, it sounds like you had a really bad day, and made a really stupid decision. I hope you can appreciate how lucky you are that you only hurt yourself. You could have easily injured or killed someone else.\"\n\n\"I know...\" I whispered. \"I've never driven drunk before in my life. I always walk, or take a ride-share, or--\"\n\n\"Good,\" said Marc, \"I hope it's a one-time mistake. I gotta go, have another client upstairs I need to pop in to see. Like I said, there's no way to know what the D.A. will do, but my gut is you won't be in serious trouble. Legally, anyway. Again, I'll emphasize to you that if they'd done their job right, you would be. And deservedly so. So, maybe take this as a sign to never fuck up like this again. 'Kay Vivian?\"\n\n\"Okay. Thank you.\"\n\n\"Just doing my job. I hope you're okay. Your arm I meant.\"\n\nAnd with that, he breezed out the door, leaving me with the worst company possible.\n\nMy thoughts.\n\nGod, I really am a worthless, stupid, fucking piece of shit. I put off talking to Abuela for my whole life. Then I finally do it, after MONTHS of delaying and hiding, all of which hurt Jane. And NOW what's Jane going to think of me? After I did this, and...\n\nThe memory of what happened at the bar floated into my head for the first time since I woke up. Mindy. She'd kissed me. And I let her. I didn't really kiss her back. I didn't think so, anyway. Everything was so fuzzy. But I know I didn't shove her away. At least I let her do it long enough that Connie thought something was up. Maybe something was up. Maybe Jane was right, maybe I was that kind of girl. The slutty, bathroom hookup, one-night stand girl. The kind of girl Jane didn't want to be with.\n\nI thought of Abuela. Her anger and disappointment. That I wasn't the woman she wanted me to be. Then I'd basically stolen and destroyed her car. Fuck, I didn't know how she was going to manage her tamale business or her other job at El Fenix without a car. I'd have to get together enough money to... My job.\n\nA stab of fear went through me. I'd missed a shift. At least one. Maybe two? What day was it? How long did the nurse say I was here?\"\n\nA second stab of fear. If I got charged with DUI, let alone convicted, WMATA would kick my ass to curb so fast, forget about getting into the engineering apprentice program. I'd have to go back, to... fuck, I don't even know. Waiting tables again? I'd never be able to replace Abuela's car with that kind of job. The magnitude of my fuck up was still washing over me, combining with the guilt of having let Mindy kiss me...\n\n...when Jane walked through the door.\n\n\"Baby, are you okay?! I've been so worried about you,\" she said, rushing to my side and taking off my good hand in hers. \"I was here all Sunday night and most of this morning until I had to go teach my class. Diego called me and said you were awake and I rushed right down here as soon as class ended. I'm sorry I wasn't here when you woke up!\"\n\n\"I'm going to be fine, Jane, I--\"\n\n\"Viv, what happened? You were out of touch all day, then I heard you'd crashed and Diego said the cops said you were drunk? Tell me that's not true.\"\n\nI regarded her, sadness seeping into my soul.\n\nI don't deserve her. And she doesn't deserve to be saddled with someone like me. She deserves better, but she's too good a person to realize it on her own. There's only one way to make it right. At least this way I won't have to tell her what Abuela thinks of her. I can save her that, at least. I know she really liked Abuela and it'd really hurt her to know what Abuela called her.\n\n\"Jane... I... I was drunk.\"\n\n\"You... what? Viv, I don't understand.\"\n\n\"I was out drinking with some friends on Sunday afternoon. Guess I had more than I thought.\"\n\n\"Why didn't you call me for a ride, or--\"\n\n\"Because I was hooking up with one of them.\"\n\n\"What?\" Jane whispered, staring at me in shock. \"What? What are you... why... Viv...\"\n\n\"I know, I'm a piece of shit, but you were right about me. I am that kind of girl. Her name's Mindy. I had a fling with her a while back before you and I got together. She was there, and I was drunk and I guess temptation got the best of me. I wish it hadn't happened, but I at least owe you the truth.\"\n\n\"You're lying.\" She looked horrified. She clearly didn't want to believe me. \"You're not that kind of person.\"\n\nI let out a rueful snort. \"You already know about me and bow-head. And do you really think Addison felt the urge to forgive me because I said something mean when we were breaking up? That I was the hero of that story? Sure, she was using me, but instead of doing the right thing and calling it off, I cheated on her and she caught me.\"\n\n\"What? But you told me that--\"\n\n\"I'm sorry Jane. I wish this wasn't me, but it is. You can ask my friend Connie. She was there. She caught me and Mindy hooking up in the bathroom. Yelled at me about it. I was embarrassed, so I jumped in Abuela's car, and well... here I am.\"\n\n\"There's no way... why would you... Viv, why would you do that to me?\"\n\n\"Because when I get drunk I do things. Things like have sex with women in the restrooms of gay bars or bowling alleys.\"\n\n\"No... no I won't believe it, you... Viv, I love you!\"\n\nI looked around and spotted my wallet on the table next to the door. I pointed at it with my good arm. \"There's a credit card receipt in there from Chasin' Tail. What kind of woman goes to a gay bar without her girlfriend? Someone who just wants to drink? Or someone who's ready to make a dumb decision? It happened. I'm sorry Jane.\"\n\nTears were rolling down her cheeks as she looked at me, grief and anger on her face.\n\n\"I loved you,\" she whispered.\n\nIt took all my self-control not to close my eyes as the pain from her switching from present to past tense stabbed at me.\n\n\"I know. I'm really sorry I fucked up. I just... You've been too good to me for me to lie to you about it.\"\n\nShe stood like a statue, staring at me, the gears turning in her mind. She made a small motion towards me, stopped. A little move towards the door, stopped. Then she gave out a small sob, turned and fled from my room, down the hallway and out of my life. And that's when my tears began to fall.\n\n\"Good bye, Jane,\" I whispered to myself. \"I wish I was what you deserved.\"\n\nTo Be Continued...\n\nThank you for reading, Friend. I know you've been waiting for this chapter for a long time. So have I.\n\nThis chapter was really hard for me to write, I struggled a lot during this one. Mostly because I knew what was coming for Viv, and I hated seeing it happen to her, seeing her inner struggle and doubts, and seeing her make her choices. I love these characters as much as some of you do (probably more so), and it hurts me to hurt them. But I've known since the beginning, from the opening scene of Chapter One, that this moment was coming. Every time I sat down to write this chapter, I would think about what I was getting ready to put Viv through and it made it really hard.\n\nBut the title of this story is The Journey, after all. Journeys have ups and downs. Highs and lows. You've had faith in me before, have faith in me now, stay strong, and remember, the only way you can get hurt on a roller coaster is if you get off early.\n\nHopefully Chapter Seven will be easier for me to write, and come faster for you. Though, I am also still a Very Busy Person, so it won't be coming immediately, I'll still need your patience :)\n\nThank you for reading.\n\nAnd as always, I appreciate all your votes, but comments are what inspire. So, let me know what you thought or, conversely, how much you hate me after this one."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "fuck ups",
        "lesbian romance",
        "gay",
        "gay romance",
        "romance",
        "love story",
        "heartbreak",
        "latina",
        "interracial love"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-journey-ch-06-3"
}