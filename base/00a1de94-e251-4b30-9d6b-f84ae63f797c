{
    "title": "Marion's Story Ch. 17",
    "pages": [
        "Thank you to my dear friend Marina Kelly for her help with the story, for keeping me motivated and for her wonderful editing skills.\n\n*\n\nWith Molly gone I sat down, drew a deep breath and sighed. I wasn't serious about the road trip or taking Kim with me but sitting in the solitary vacuum she left behind as she raced to the airport I had time to think.\n\nShe was right, our life did always seem filled with drama but, damn it I felt it was mostly of her making. All I wanted was my fianc\u00e9e back. I wanted her in my arms, by my side not flying off around the country doing Gloria's beckoning.\n\nWhen I started evaluating the things that were important to me it became clear.\n\nAs much as I liked and enjoyed the benefits of stardom that was never my driver, not initially anyway but lately with Moll's so involved with management and stuff it seemed all we talked about. Big tours, stadium concerts, gigs new records.\n\nThe more I thought the more I realized I had lost my way. I was trapped in the corporate world I tried so hard to ignore, it was all about money and deals. Thinking back to when I started out and my time busking the haze lifted and I decided I should do exactly what I told Moll's I was going to do. All I wanted was to perform and make people happy.\n\nI had been bullshitting about hitting the road but as I thought about it, I decided, maybe that's what I needed, just the van and me against the odds, oh and my guitar as well.\n\nI did have stuff to do first. I promised Adam I would finish a couple of jobs at the studio, one of which was finishing a demo recording for this young guy who had written a couple of pretty good songs. I had spent the last month working with him developing them and today we laid them down. He was gone as I worked on the final mix. I was at the desk with the headphones on listening when I got a shock.\n\nIt was after six and I wasn't expecting anyone, so when Gloria tapped me on the shoulder I left the seat jumping with fright.\n\nShe looked as shocked as me. She looked pensive, \"Mimi, I think we need to talk?\"\n\nI ushered her through to the little chill out room and we sat together. Gloria being Gloria meant there was no preamble, \"OK Mimi, what's going on between you and Molly? I just got off the phone with her and she sounded devastated.\"\n\nAlright, if she wanted it she was going to get it, \"Gloria, I am sick of living the way we do, Molly on the other side of the country or if she's here she is running around after you. We finally seem to have most of our personal shit sorted out and now she isn't here. This isn't what I signed up for.\"\n\nShe sighed deeply glancing around looking for something before she mumbled anxiously, \"Christ, do you have anything to drink in here?\"\n\nI went over to the drinks cabinet and poured her a glass of wine. As we sat sipping our drinks she said, \"OK, I get that you love her, but surely, she is entitled to a life, a career. Mimi you don't have to live in each other's pockets.\"\n\nNodding I mumbled, \"Sure that's true but now after all that's happened, I want to see if we can make it as a couple. We can't do that when I see her one or two days a week. All I want is her around at the moment until we have our lives sorted then we can do our own thing.\"\n\nShe got up and came and sat beside me, her arm circling my shoulder in a motherly fashion, \"Darling she needs to feel valued, at the moment she feels so completely overwhelmed by you. She lives completely in your shadow and at the minute she feels insignificant and forgotten. She wants a chance to prove to you and the world that she is valuable, and perhaps to herself as well, she wants to be noticed.\"\n\nDowning my wine in a big gulp I replied, \"I understand all that, which is why I said we should take a break and get back together later. She can build her career and then hopefully it will be out of her system and we can have a life together.\"\n\nShe drank her wine and whispered breathlessly, \"And what about you? What are you going to do?\"\n\nHer lips moved closer as she leaned in slowly and pointedly asked again, \"Well darling... What are you going to do?\"\n\nAs her mouth opened and her tongue slithered over the exposed skin of my neck I mumbled, \"I'm going on a road trip.\"\n\nI felt her stop, she sat upright and rasped, \"What did you say?\"\n\n\"I'm going to take some time off, throw my guitar and gear in the van and hit the road, play some gigs, see some of the country and just disappear for a while.\"\n\nI felt her mouth on my shoulder as she slumped, \"That's your answer...run away and hide, why is that always your first reaction? Every time things don't go your way that's it you run away. If you want to see more of Molly stay and try to make it work.\"\n\nShe scowled, \"You're a brave person Mimi, to be courageous enough to do what you've done so far shows incredible fortitude, but every time the going gets tough you run away...It doesn't make sense.\"\n\nFeeling aggrieved I groaned, \"I'm not running away damn it, I am taking some time to be alone, to think things through and give Molly some space so she can do the same. Hopefully when we get back together, we will have found a way to make it work.\"\n\nHer lips moved back into gear sliding over my flesh, her wet succulent lips moving up my neck, across my cheek and colliding with my mouth in a scintillating kiss. The heat making my skin burn.\n\nIt happened so quickly I felt like another minute and I wouldn't be able to stop.\n\nI placed my hand up against her mouth, \"No Gloria please we have to stop...I asked Molly to commit to our relationship so I'm going to have to do the same.\"\n\nShe sat up again frustrated, \"Mimi, she knows I'm here, she knows what we're doing and she is OK with it.\"\n\nHer hand slid up my satin dress resting over my boob. I slid my hand over hers, \"Please Gloria, I can't do this.\"\n\nShe leaned back taking a deep breath, \"I don't understand you Mimi, we have always had fun together, we have always enjoyed each other, why not now?\"\n\n\"Because I want a normal life, to keep this for my wife. I want our lives together to be special and our bodies to be only for each other.\"\n\nShaking her head in wonder pausing hesitantly before stating loudly, \"OK...all right, if you are so determined in running off on a country wide tour then let me organize a decent one, then at least Molly could be with you for part of it.\"\n\n\"This isn't about a tour or money I just want to get away. Sorry Gloria but I just need some space.\"\n\nDisappointed and frustrated she got up walking towards the door, \"All I can say is...I think this is more about your insecurities and feelings of inadequacy. You are so worried about Molly stepping out from your shadow you want to run off. You're a fool Mimi...oh well if that's your answer, enjoy the trip and I hope you find what you're looking for.\"\n\nIt took another day to get my shit together. I chucked everything I needed in the van and headed away. This time I wanted to do the old original route 66 tour. I hit the road suitcase and guitar in hand (Sorry Paul) it was with no real intent that I hit the road. No time frame I just followed the road. They say that Route 66 is America's highway. I can attest to that. The first thing I did when I cleared LA was turn off my mobile phone. Not maliciously I just wanted space without interruptions. That's not entirely true...I guess there was some malice. Molly would be wondering where I was.\n\nMy first stop was Barstow, not far from LA but with a late start it was a good first stop. I got a gig at the Pit Stop Bar and Grill. They didn't usually have live music on a Wednesday night but gave me a spot for the cost of a meal and drinks for the night. It was a great start to my road trip. The place packed out and there were people dancing and singing along. All in all it was a great night.\n\nFrom there I moved on in small steps taking my time to look around the places I stopped. To make it fun I made a little travel vlog. In Flagstaff I brought a small digital video camera so I could record my shows. Some of them were pretty cool. People asked what I was doing and I got some volunteers to carry the camera around rather than just filming from one spot. It brought it all to life, I had this plan of turning it into a road trip documentary when it was all over.\n\nThat brain wave I used every night I performed, I got somebody from the audience to film me. Some of it was pretty good and some was not, but all in all it was a fun reminder, and yeah maybe I could do something constructive with it at a later date.\n\nTaking my time as I drove east I made the most of the fact I had no itinerary or set travel plans. Sometimes staying in motels and others just sleeping in the van I made my way slowly across the great country. I found plenty of gigs some I played just for dinner, others for a room and a few for money. I even played a couple just because I liked the vibe, yeah I got some free drinks but I played for free. The bigger towns were easy to get gigs, the lips had made this easier. Now I was recognized and paid accordingly, most places couldn't believe that it was me. I guess they don't get a lot of artists who are charting in the top ten playing these small dives.\n\nAfter the third night I decided I better check my phone, put Moll's mind at rest because she was probably worried. When I turned it on I was shocked that there were plenty of missed calls and messages just none from Molly. Mel, Gloria and even a couple from Kim, but not a damned thing from Molly.\n\nThat hurt actually so I decided there and then that I wouldn't turn it on until I got back to LA. If she didn't want to talk to me, I certainly wasn't talking to her.\n\nAs I travelled across the country playing all these little seedy bars and coffee houses I remembered why I enjoyed busking. I loved the audience in your face, tripping over your mic stand bumping into you, trying to pick you up afterwards. I missed the human connection.\n\nDon't get me wrong I loved the huge stadium gigs, the theatres and event centers but this was real, it was in your face and I loved it. Dancing on some shitty little makeshift stage with drunken truck drivers, cowboys or bikers brought it all to life. Shit even some girls got up and danced with me to a chorus of hoots and hollers.\n\nThere were a few dodgy moments as well, a young girl on the road alone, yeah I had a few issues but I coped. After the first time I was hit on by this big biker dude I decided to change the way I dress. I started wearing jeans and shirts, yeah western shirts so I fit in. Less skin meant less chance of getting raped and beaten up. Getting raped as a crossdresser that meant you were also likely to get beaten up.\n\nPlaying in the band, I dressed the way I did to accentuate that I wanted to be seen as a woman, to be viewed as a woman. So the short skirts, the skimpy tops were all about showing as much as possible. At first wearing loose fitting shirts and jeans I felt like Mi was disappearing but as I got used to it I noticed people didn't treat me differently, they still thought of me as a girl and I grew comfortable in my new skin.\n\nDressed as I was the revelation was people listened more to my music. People were more interested in my music than me and yes I liked that.\n\nMy tour across 66 continued in that vain. I took my time, I played tourist and I made friends with all sorts of people. Towns sort of drifted into one.\n\nBy the time I got to Amarillo I figured if mom found out I did this trip and never called in I would be in big trouble. So with that in mind I took a detour turning north after a great night playing at the Broken Spoke Lounge. It was real cool place, straight out of a poster for Route 66. It took the best part of five hours\n\nI pulled into her driveway unheralded. I got out of the wagon dusty and tired. I knocked on the door and Fred answered the door looking shocked to see me, but when I put my finger up to my mouth, he took the hint and we shook hands and he stepped aside to welcome me in, he still made me laugh though. No hug there.\n\nAnyway, I walked in and mom being mom was busy in the kitchen baking something. I walked in unnoticed and said, \"Hey mom.\"\n\nShe just about left the floor she jumped with such a start. When she got her breath back, we fell into a big hug and she squeezed me so tight I thought I was going to faint.\n\nAfterwards with a big glass of lemonade we sat out on the veranda and rocked. Of course, she wanted to know what went wrong this time between Molly and me. She knew most of it because as she complained bitterly, unlike her son Molly actually kept in touch with her.\n\nWith her little fit of pique out of the way we talked about my road trip but mostly she wanted to talk about the bands European tour. She talked with such excitement about it and there was such a bright light in her eyes as she asked about each town we stayed in and the food, the culture, she amazed me with her knowledge. It was then I remembered a long time ago when I was a boy mom and dad talking about taking a holiday to Europe. There was no way I was getting away without staying for a couple of nights she was that excited to have me home. She fed me up and gave me a hug and as I parted she told me off ordering me to contact Molly because she was worried.\n\nBack on the road and I made it to Chicago uninjured and my batteries recharged. Of course the trip hadn't just been just about the drive and the country. It had been about me finding myself, that always included songs and this trip was no different spending so many nights alone in the van I had written countless songs but amongst them were a dozen little gems, songs that I was pretty proud of. Having played them night after night along the way they were now tried and tested. From the reception they received, I wasn't the only one who liked them.\n\nIn Chicago I actually managed to get a couple of pretty good gigs. Good paying ones. It did mean hanging around for a week or so which gave me time to busk and think. It hurt that Molly had never tried to contact me even to ask where I was or what I was doing, it was like we were already living separate lives.\n\nWith the new songs burning a hole in my soul with every passing day the desire to record them grew so loud that if I didn't do something with them I was going to burst.\n\nI felt the pull and I needed to get them down quickly, and I was feeling tired, refreshed mentally but tired. When I thought about the trip back to La it was a lightbulb moment. There was no way I could face up to another drive back. With that realization I knew the van and I had come to a parting of the ways. I advertised it for a cheap price and within days it was gone...My cozy little home on wheels that had given me so much joy was gone.\n\nI crated up my amp and PA gear put it in the hands of a freight company and shipped it back home to LA. That thought was a bit of a revelation as well. I now thought of LA as home. From there it was onto a plane and a flight home.\n\nAs I relaxed back in my seat on the flight back, I couldn't help but wonder what I would find when I got there. From what mom said Molly was scared and nervous because I hadn't tried to get in touch, she feared the worst. I didn't even know if she would be at the apartment.\n\nAs I walked into the apartment, I was shocked to see Molly was still living there. Her clothes were spread everywhere and the place was a mess. As I foraged around it was obvious, she must be here because most of her underwear was here. The laundry basket was overflowing and the sink was full of dirty dishes.\n\nI put my case down and swore loudly. I gathered together what were obviously dirty clothes and tossed them in the washer setting it in motion.\n\nMoving to the kitchen I washed and put away the dishes and wiped down all the benches and mopped the floor.\n\nAs the first load of laundry reached the end of the cycle, I transferred it to the drier and tossed the remaining dirty clothes into the machine.\n\nIt took me the best part of two hours to get the place looking respectable. When I checked the refrigerator, I could see there was absolutely nothing in there. It required a visit to the market to pick up some food\n\nAs I got back, I was feeling shattered and decided to wander into the studio and see if Adam was around. I found him out the back in the chill out room. As I walked in, he jumped up, I put down my bags of groceries and we hugged it out. \"Holy shit welcome home stranger, I was wondering if you were coming back at all.\"\n\nHe grabbed me a beer and we flopped on the big settee and put our feet up. He gave me a knowing glare, \"Turned to the dark side have you?\"\n\nI laughed, \"What the hell are you talking about?\"\n\nHe pointed at my country style shirt, jeans and boots, \"Country and western...who are you...the new Taylor Swift or something?\"\n\nClicking on I laughed, \"Nope, you dipshit, I was just trying to keep my ass safe from rednecks and cowpokes.\"\n\nIt sure was good to be back, Adam and I were good friends, he was comfortable enough with me to make jokes, he didn't worry about offending my girly sensibilities.\n\nHe talked a little about how the studio had gone into hibernation because he had been so busy working at KGM. We talked about Molly, he said he hadn't actually seen much of her but knew she was living upstairs. He had left her to her own devices.\n\nAs we slid into our third beer, I started telling him about my new songs and as always, I got excited which got him going and we ended up in the studio as I gave him a limited demo of some of them.\n\nAs he listened, he nodded and tapped his foot which was always a good sign.\n\nHe disappeared returning with more beer and by the time we were finishing up I was feeling no pain. Adam headed off for home and I stumbled up to the apartment. I planted the bags down on the bench and set about cooking something for dinner.\n\nI was almost finished when the door banged against the wall and Molly staggered in carrying bags of groceries as well. She stopped dead in her tracks when she saw me.\n\nIt was a moment in time and it was as if the world stopped for just as instant and that moment turned into an hour or so it seemed.\n\nShe walked in placing the bags down, \"Mi...what are you doing here?\"\n\nI chuckled softly, \"I live here, what about you?\"\n\nShe smiled, \"I live here as well.\" Her nose gave a little wriggle as she smelled the food, \"Damn...that smells good, what are we having?\"\n\n\"Mongolian beef.\"\n\nShe whispered, \"Yum, sounds good.\"\n\nShe curled up on the cushions and I passed over her plate. I sat beside her and we started to eat.\n\n\"What the hell happened in here? It looked like a tornado went through the place.\" I complained.\n\nShe giggled apologetically, \"Yeah sorry but I have been coming and going and flying all over the country and I guess I got a bit lazy.\" She giggled, \"It looks nice now, I forgot we had floorboards.\"\n\n\"So how was your trip?\" She asked.\n\nI replied, \"It was cool actually.\" As we talked the tension eased and the conversation got real. She asked about all the towns and all the places I played. I showed her some photos and a little of the vlog I made and suddenly we weren't sitting we were snuggled together. She sat listening and watching enviously, \"Jeez Mi, that looks awesome, I'm jealous.\"\n\n\"What about you?\" I asked softly.\n\nShe sighed, \"It's been cool as well but truly I have spent more time in the air than I have on the ground. We have some cool new artists though.\"\n\nAs we finished eating, she asked, \"Did you meet anybody on your road trip?\"\n\nI laughed, \"I met heaps of people, some good some bad.\"\n\n\"Don't fuck with me dumbass, did you meet somebody special?\"\n\nI frowned, \"No I didn't because I wasn't looking for anything like that. Molly I left because I got sick of living by myself. I figured I may as well do something.\"",
        "She sighed, \"Yeah I get that but what was I supposed to do? I want a career as well.\"\n\n\"It doesn't mean you have to travel all the time, tell Gloria you want to work in LA for a while.\"\n\n\"What happens if she says yes and then you go on tour again?\"\n\n\"You come with me, I will need management, the band will need management.\"\n\n\"Yeah, but now there's Sally and she's really good.\"\n\n\"Look Molly I'm not asking you to be here every day all I want is my wife home at least half the time.\"\n\nShe wriggled sensuously, snuggling closer up beside me, \"Jeez babe how many beers have you had? You smell like a brewery.\"\n\nHer lips found mine and we sank into a fiery little kiss, \"So why didn't you call me?\" I asked accusingly.\n\nShe gave me a pained glare, \"I was angry, it felt like you gave up and ran away. I wanted you to feel the way I did... abandoned.\"\n\nAs our kiss built intensity I whispered, \"I'm sorry, I should have called, I guess I was angry as well. You asked me if I met anybody...what about you?\"\n\nShe laughed between kisses, \"Nope, to busy.\"\n\n\"What about Gloria?\"\n\n\"Nope I have hardly seen her, we always seem to be on opposite sides of the country.\"\n\nShe whispered, \"Babe...I'm horny, it's been months, could you please shut up and fuck me?\"\n\nIt was frantic, frenetic with clothes flying everywhere and we fucked, it wasn't lovemaking it was torrid, noisy and passionate, it was furious, brutal and quick. Later as we regathered our breaths we took our time, her juicy pussy caressing my face as I worked my tongue frantically into her gasping core.\n\nShe sucked my raging erection like it was the last ice-cream left on planet earth.\n\nThe morning found us asleep in each other's arms.\n\nShe went to climb out of bed but I wrapped my arms tightly around her, \"Please don't go.\"\n\nShe smiled, reached for her phone and rang around organizing for others to cover her because she was taking the day off. She nestled back down in my arms, \"Happy now?\"\n\nI sniggered, \"Very!\"\n\nLater, we walked down to the beach and enjoyed breakfast as the gentle sea breeze wafted coolly across us.\n\nWe walked hand in hand around the shops, we went back to the apartment and made love again before wandering out for dinner. As we ate, she asked, \"Did you write anything good while you sashayed your cute ass around the country?\"\n\nI nodded, \"Actually I did and what's more I think they're good, I mean really, really good, and there's almost enough for an album. I was hoping Mel might have something to add to the mix.\"\n\nShe giggled, \"You have got to be kidding.... Mel has been stuck between Sally's legs ever since you left, she is pussy struck. I bet she has nothing, well apart from a sore tongue that is.\"\n\nThat night in bed she asked, \"So when do I get to hear these magical gems?\"\n\n\"I was hoping to get the girls together tomorrow if they're all available.\"\n\nNestling in close she sighed, \"Shit, now I'm going to have to blow off another day. Gloria will be pissed.\"\n\nThe morning dawned another typical west coast morning, the sun already hot at eight in the morning, at least once I opened the windows we got that awesome sea breeze to cool the place down. Molly climbed out of bed stumbling around rubbing the sleep out of her eyes and straight away she was on the phone organizing people to cover for her again.\n\nFirst port of call for me after coffee was Mel. The moment she answered she flew into a rage, \"Where the fuck have you been you little shit? I've left like a gazillion fucking messages. Jesus Mi you can be a god damned bitch.\"\n\n\"Sorry Mel, I just needed some space to work shit out, from what I hear you were pretty busy anyway, I didn't think it was a big deal.\"\n\n\"Well, it is asshole, fuck we were all worried about you, fucking Molly was on the phone crying all the time, jeez. Fucking think about other people sometimes...\" After a brief pause to catch her breath she grumbled curtly, \"So what do you want?\"\n\nI laughed, \"Well while I was on the road I wrote some songs and I think they're pretty good. I was hoping you and the girls might like to get together and jam some of them, see what you think.\"\n\nShe sniggered sarcastically, \"What you think we haven't got lives of our own and we can just drop everything and come running...is that it?\"\n\nThe phone went silent for a moment and I could hear her talking to somebody, probably Sally before she snapped, \"What time and where?\"\n\nI gave her Adam's studio's address and added, \"Mel if you're busy we can do it another day.\"\n\nShe chuckled softly, \"Oh fuck off bitch, do you want us there or not?\"\n\n\"Yeah, come when you're ready, I'll set up the studio, get it set up.\"\n\nMoll's and I sat with our legs folded underneath us on the cushions enjoying the breeze when her phone went. Even although I could only hear half the conversation, I guessed it was Gloria and Molly was explaining that I was back and she wanted a few days to spend with me. I sensed she was getting some push back from Gloria but thankfully she held her ground.\n\nAfter she hung up, \"Wow she was upset with me, maybe if I had invited her around it might have gone easier.\"\n\n\"Na, not yet, let's get the songs sorted first.\" I smiled, \"Thanks for standing firm. It means a lot to me.\"\n\nShe snorted, \"Well these damn songs better be worth it because now she's steamed with me.\"\n\n\"I think she will come around once she hears them.\n\nMel, Cindy and Jas all streamed in together and I was given a very firm telling off from Jas especially. The hug we shared certainly eased the tension. I had to apologize again.\n\nAs I showed them into the studio there were murmurs of approval, Mel seemed particularly impressed. There was a drum kit already set up as well as a pretty decent bass amp. Mel brought in her own amp and guitar, Cindy organized and retuned the drums, set up her own cymbals and soon we were ready.\n\nAs she fiddled with her guitar Mel asked, \"OK bigshot, how do you want to do this?\"\n\nI handed over chord charts muttering hesitantly, \"These are the songs, I thought I could just start playing them and when you're ready just come in with me.\"\n\nCindy asked, \"So you want us to do all the hard work? I suppose just like always we'll be expected to do half your work and make it up as we go along?\"\n\nI shook my head laughing at her jibe, and started on my first song, 'Highways'. As I played, I watched for the usual telltale signs that they liked them. As they stood listening trying to get the feel for it, I saw the signs immediately, tapping feet, heads nodding and smiles, all good signs. I looked up and saw Molly in the booth with a big smile and when Jas came in with what I could only describe as the perfect fat juicy bassline the song started to formulate. When I got to the chorus Mel joined in hesitantly at first but then with more certainty as she got the hang of it as did Cindy who came in with one of her off kilter heavily back beat driven jungle inspired rhythms and that was it. I loved Cindy's drumming, she's a female version of Jim Keltner or Stuart Copeland. With her driving us we were away and as Mel got the feel, she took over the lead vocals allowing me to work on a guitar riff and solo. After three runs through we had it pretty much nailed.\n\nCindy stood up throwing her sticks on the ground screaming, \"Oh yeah, god damn that's good...oh shit yeah.\"\n\nJas just smiled as her cute tushy swayed as she hummed it back to herself.\n\nMel laughed at Cindy, \"Jeez...chill babe, but yeah I agree, it's good.\" She stared at me with the laughter fading, \"Maybe you should spend more time on the road.\"\n\nMolly pushed her way into the booth and grabbed my head in both arms and kissed me hard, \"Holy shit girl...that song is a fucking killer.\"\n\nThe next six songs went down just as well and by the end of the day we had them all sounding like we had been playing them for years. They had the Kissable Lips signature sound without sounding like Cherry Red Lips rehashed.\n\nI raided Adams refrigerator and pulled out all that was in there beer... We moved into the chill out room and as we sat down I said, \"That's it, I sort of hoped Mel might have a couple to add to the mix and we would almost have a new album.\"\n\nMel put her head down as she swilled her beer, \"Sorry guys, I haven't done much lately.\"\n\n\"Nothing but lick pussy anyway!\" Cindy snorted and we all burst into laughter as Mel threw her bottle top at her.\n\nAs the laughter died down Cindy casually threw in, \"Jas has written a couple but she's too shy to play them.\" Jas gave her a sharp nudge and a very cool glare.\"\n\nWith all eyes focused on her she got really self-conscious. Cindy urged her on, \"C'mon babes, we aren't going to laugh, I already told you I think they're good.\"\n\nMolly moved over beside her and wrapped her arms around her, \"Babe, you know we all love ya, you said it yourself once before, we are all in this together.\"\n\nI walked into the studio and brought back an acoustic guitar and handed it to her. Hesitantly she strummed out a few notes and then started singing. The lyrics flowed bumpily as she closed her eyes and that seemed to make her feel more comfortable.\n\nThe song was good, not perfect, a couple of the lyrics could change but it was a great song. When she finished her brow was covered in sweaty droplets as her eyes wandered around the room shyly. She was expecting to be dismissed but she was wrong, this was good stuff.\n\nCindy and Molly wrapped her in their arms to ease her apprehension, and Mel murmured, \"Jas, that song is good, you have nothing to be embarrassed about.\" She stood up, c'mon let's give it a go.\" She strode into the studio with a fresh beer and we followed.\n\nIt took us another hour to get it and Moll's had written down the lyrics. Next time with Mel singing lead it sounded better, I suggested a couple of lyric changes and the next time I waved Jas over to sing harmony with me. She didn't understand the harmony thing and I had to explain it to her as we worked through it but after two more takes, we had another good song.\n\nShe sang us her other one and it was even better. As Adam came waltzing in, we were just finishing it up.\n\nHe and Molly hugged in the booth and he called out over the mic, \"Alright, let's take it from the top. I want to hear them.\"\n\nWe were pretty tired and I said, \"Hey dude, we're beat...what about tomorrow?\"\n\nHe laughed, \"Listen here bitch girl...you emptied my refrigerator and drank all my beer, now I'm going to have to restock, so let me hear the damn songs.\"\n\nMel laughed, \"Ooooohhhh, bitch girl huh...Fuck he's bossy ain't he!\"\n\nI nodded about to say something when Jas said, \"We did drink all his beer.\"\n\nSo that was it with his encouragement we ran through them all.\n\nAfterwards we sat around drinking what was left of his beer and laughing. He got on great with the girls, he knew them already from the last album, he worked as the sound engineer for KGM.\n\nMolly asked, \"Well now can I get Gloria around tomorrow to listen to them?\"\n\nThere was no argument and we agreed to do it all again the next day. Molly jumped up and as she walked out, she was already on the phone.\n\nWe all went out for dinner where we were joined by Sally. It turned into a late night which got even later when Molly and I made love until neither of us could keep our eyes open any longer.\n\nIn the morning I went straight down to the studio and got things set up. Adam came in a little later. When I gave him a quizzical glance he laughed, \"I'm sick...well as far as anybody from KGM knows. Shit I wasn't going to leave you here alone, you're going to need me, just between you and me Molly sucks as a sound tech.\" I laughed along hoping Molly didn't find out.\n\nI gave him a hug as Mel and the girls walked in accompanied by Sally.\n\nWe were already getting tuned up when Gloria and Molly walked in.\n\nGloria, Sally and Molly stood in the back of the booth as Adam got us to run some tests and he was happy with the levels. With a quick wave of his hand we started to play the new set.\n\nThey all listened from the booth as we ran through them. I could see from their expressions they were impressed, the wide beamy smiles and nodding heads gave it away.\n\nAs we walked into the booth Gloria had a business like expression on her face, \"OK, Molly you were right.\"\n\nWhen I gave her a sharp stare she said, \"Sorry, I should explain. Molly and I have been talking about what was next for the Lip's and I had my heart set on releasing a best of album because there has been a lot of public comment about nothing happening...but this...oh my god this is too good.\"\n\nShe glanced around the collected group expectantly, \"You know there is a golden opportunity here, Christmas is just around the corner it would be perfect if we could get it out in time.\"\n\nShe gave us all a hopeful look, \"Is it possible? I mean realistically a brief tour would be good to promote it as well. I have turned down god knows how many requests for TV appearances by you, but not knowing if Mimi was even alive I had to turn them down.\"\n\nMel frowned giving me a scathing glare before jumping in, \"If we got into it right away, we could have it done, these songs are great.\" She gazed around, \"What do you reckon girls, could we do it in a couple of weeks?\"\n\nCindy laughed, \"Shit these we could do in a couple of days, they're already pretty polished.\"\n\nJas sniggered, \"It'll be easy.\"\n\nGloria, Molly and Sally walked outside to talk and left us to chat while they made some decisions.\n\nIt was a fait accompli, When they walked back in Molly was on the phone with recording studios trying to get time. Gloria whispered quietly so not to interrupt suggesting that finding a studio at such short notice would be the hard part.\n\nWhen she got off the phone, she grimaced explaining that most of the big studios were too busy. Annoyed I grumbled, \"Well fuck them, let's do it here\" I turned to Adam and asked, \"Are you free?\"\n\nHe broke into a big smile and nodded enthusiastically, \"Yeah of course, I need to rearrange some schedules but yeah we could do it.\"\n\nGloria remained unconvinced, \"Look girls, you're only as good as your last album, fuck up this one and it will be back to step one.\"\n\nBy then I was angry, \"Gloria, Adam is good, he would probably be the engineer in charge if we did the recording at KGM anyway.\"\n\nGloria who seemed hell bent on using one of the major studios muttered, \"Maybe we just have to wait, we don't want to get this wrong...sorry Adam.\"\n\nMel joined in supporting Adam, \"Gloria, we have worked with Adam at KGM, he is good and this studio is pretty good, I think we should at least try. A couple of new mic's maybe but shit this place is great.\"\n\nJas and Cindy both threw their weight behind it and I snarled, \"Gloria, you do your bit and leave the music to us.\"\n\nShe didn't look that happy but in the end after a lot of whispered conversations between her, Molly and Sally they walked back in and she grumbled. \"All right, against my better judgement, let's do it, but if I don't like it, we're not releasing it.\"\n\nAdam nodded and Gloria said, \"OK let's do it but I am holding the last say, if the finished product isn't good enough then we aren't releasing it.\" She glanced at Adam, \"I suppose we should talk dollars and cents, how much is this going to cost?\"\n\nHe shrugged, \"I'll make you a deal, seeing as how you're so concerned, we'll do the recordings and at the end you pay me what you think its worth.\"\n\nGloria couldn't believe her ears.\n\nShe agreed without further ado and she looked happier than earlier.\n\nAdam was extremely happy with the result. He had been trying to get a major act into his studio for a long time but management had always resisted just like Gloria.\n\nWe set about rehearsing every day, long days with lots to work on but surprisingly we had them pretty well settled by the end of the week. I didn't see much of Molly over that week, she had ground to make up with Gloria so it was nose to the grindstone for her. She was bummed that she missed watching the songs evolve.\n\nI did catch up with Kim though, she came into the studio most days although her new job ate into her available time. Apparently she had a job working for Gloria of all fucking people. Molly set it up because Kim had been struggling to find a job after she had to resign her old one to get to the farewell gig in KC.\n\nKim as always was cool and we talked like old times. I was blessed to have such a friend.\n\nThe next week we went hard out to finish the rehearsals and sure enough by the end of that week we were ready to record. The process actually went better than we could have ever hoped for and it was done in record short time. The proof of the pudding would be Gloria's opinion. Friday night after we put the finishing touches to them Gloria turned up with Molly in tow to listen.\n\nWe played the mix through the monitors loudly and I watched as she listened intently looking for faults, she frowned and kept turning to get Molly's opinion. They talked quietly for a while as they listened.\n\nI watched them keenly as they whispered back and forth behind raised hands wondering what that was all about. After the last song played Gloria turned to look at us and with a very serious face snapped, \"I don't know why we paid god damned millions to other studio's this is awesome. Thank you Adam, you have done a great job. We will be working together again that I promise.\"\n\nHe laughed, \"Shit don't thank me, if it wasn't for Mi we wouldn't have this, she's the one who's been up here till three in the morning mixing and listening, adjusting. This is more her than me.\"\n\nGloria acknowledged my input before she said to Molly, \"You better get a tour organized quickly, now we have it, I want it out for Christmas and I want to promote it like never before...I want a number one.\"\n\nMolly nodded, \"I'll get right on it, how many shows?\"\n\nGloria snapped, \"Every god damned night from now till Christmas, get them in a bus and get them on the road, get them on a damned plane. Do whatever you have to but get the damned thing moving.\"\n\nThe girls all started buzzing as we started to get our heads around what the tour would look like.\n\nMel asked, \"Is Sally going to be the tour manager?\"\n\nGloria nodded, \"Of course but I think we might send Molly as well.\"\n\nMolly gave me a coy little smile, \"Will that be OK?\"\n\nI laughed and groaned in mock annoyance, \"Yeah I suppose so.\"\n\nAdam went back to KGM and we used the studio for rehearsals. We needed to go over everything properly and get the sets worked out. During the day Molly went hard at it organizing, I didn't see much of her.\n\nThe tour was a rush, the crowds were great and we played a different place every night before flying over to the east coast. We got to play on the tonight show, Saturday night live, The late show and Ellen DeGeneres wanted us back Conan Obrien Stephen Colbert, radio was eating us up and the new album got real traction leading into the big Christmas sales.\n\nMolly and I managed to find our old magic, Mel and Sally weren't the only ones snuggled together on the bus. Of course, the conversation settled on the tough topic which was our future. We laughed about setting up house and then children. It was all in jest but I guess there was a serious undertone but we were in the love zone and skirted the tough question which of course was monogamy.\n\nWith Christmas only days away and the tour winding down, we got a call from mom who wanted to have a good old fashioned family Christmas, she wanted the whole family home for Christmas and she wasn't taking no for an answer. Molly and I were stuck in Boston sitting in the airport staring at all the flags changing as flight after flight was cancelled due to inclement weather. She desperately wanted to get back not just for mom but for us as well. It had been an exhaustive tour and we were tired.",
        "Call it fate or luck but whatever you call it a flight to KC opened up and when we checked with April it was too late they'd already left and were half way to moms place.\n\nWith no connecting flights we managed to get one of the last rental cars in KC and we were on our way racing frantically to make it.\n\nWhen we turned up the whole family was already there we were the last ones. When we walked in it was hug all around, well except Fred and me, it was a nervous handshake. Mom was ecstatic that we were all together. She loved Christmas but the last few had been fragmented with arguments between April Sandy and me, with Sue off travelling and me being off at school so this gathering made her so happy. The house looked amazing, her and Fred and I guess Bev had the place looking spectacular, a huge tree and lights, god so many lights. When I looked under the tree it was piled with gifts.\n\nOur savior had been waiting for flights, while we were stuck in Boston we raided the stores so at least we didn't come empty handed.\n\nMoll's and I locked ourselves in my old room as we frantically wrapped everything. Christmas eve we sat around singing carols and eating. Eating, eating and more eating, jeez mom cooked enough food to feed an army. Christmas day was mad, with Bev's kids spreading wrapping paper everywhere as they shredded open their presents.\n\nWe had been stuck trying to think of a gift for mom, we racked our brains but struggled, that is until I got a brain wave. I told Moll's about mom's preoccupation with Europe and before I could say anything she was at the desk cashing in all her frequent flyer miles and we had with a little extra cash a European holiday for Mom and Fred. We didn't want to play the big shots so we signed the card from the whole family.\n\nMoll's managed to get time alone with Bev, April and Sue to explain before we placed it under the tree so they weren't blindsided. They all offered to put in for it but we refused.\n\nChristmas morning was chaos with Bev's kids shredding wrapping paper as they opened their gifts and then it was slightly more relaxed as we opened ours. Watching moms face was amazing as each one of us opened our gifts, She was in seventh heaven as she saw the joy on everyone's faces. That's mom though selfless and kind. Hers were the last gifts opened and when she got to our little parcel she looked confused, I think she thought it was just a card, but when she opened it and saw the tickets I thought she was going to faint. Fred had to quickly grab her and hold her tight. In total shock she dropped and the envelope and the tickets fell out. She looked around the room with tears flowing and she cried, \"We can't accept this, oh my dear lord, it's too much.\"\n\nMolly and the girls hugged her as she slowly got her wits back about her.\n\nFred was blown away as well and he didn't want to accept, he agreed it was too much but with mom on cloud nine it was happening whether he wanted it or not and for the rest of the day it was all mom could talk about. She reeled of place after place she wanted to visit. I think it scared all of us because we knew next time we came home we would be sitting through hours and hours of photos and stories of their trip. Still it was amazing to see the beaming smile on her face.\n\nThe day was one of those incredible family days it was festive and fun, the gift exchange was unusual, Sue brought me the sexiest little lingerie set. I laughed as I held it up to look at and she said, \"That's really Molly's.\"\n\n\"She won't fit into this!\" I sniggered.\n\n\"She wasn't supposed to, she's just supposed to enjoy the view.\"\n\nThat made me blush. April brought Moll's and me matching diamond encrusted tummy button rings which meant getting pierced, but they were cool.\n\nOf course we had drinks and it degenerated into a huge party. Late in the night Sue grabbed my hand and dragged me away to the treehouse. As we climbed up inside April and Bev were already there and the drinks were waiting.\n\nWe toasted to family, good times and the future. As we sat cross-legged throwing back the drinks Sue blurted out, \"Marion, I hope you are happy with your life, I hope you didn't end up this way just because of us? I mean we were bitches to force you into playing dress up.\"\n\nShe was sitting beside me and I could see the worried expression on not only her face but Bev's as well, I slipped my arm around her shoulder and gave her a tight hug, \"Sue, I don't know if this would have happened without you girls pushing me, but what I can say is I am happier than I have ever been. Maybe the music thing would have happened without all this but there's a chance it wouldn't have. I should really thank you.\"\n\nBev who sat on the other side of me reached over and kissed me, \"Thank god, I have been so worried, when I saw you and Molly fighting I wondered if it was because you were uncomfortable with who you are.\"\n\nI shrugged, \"That I am afraid is who I am, I'm still uncomfortable in this skin.\"\n\nApril snorted, \"Well you shouldn't be because damn it girl you look pretty.\"\n\nWe sank a few more drinks and agreed that we would try to do this as often as possible in the future. We all shared a few stories from our present life and I noticed April was uncomfortable and wanted to share something but she held it in swallowing whatever it was she was going to say.\n\nIt was the next day when I got the shock of my life. Molly and I were sitting out in the rockers enjoying the peace and quiet. She was curled up beside me, April and Sandy came out to join us sitting in the big settee across from us. April in rather a serious voice asked, \"Can we talk?\"\n\nShit, there's those words again...I don't care who you are nobody wants to hear those words, no good ever comes from it. There was no beating around the bush they dived straight in, \"Marion, we want to have a baby.\"\n\nSandy smiled as the words spilled out of April's mouth. \"Congratulations.\" I mumbled wondering how they were going to achieve that. Molly jumped up and dived into their collective lap with her arms wrapped around April's neck, slobbering kisses over both of them screeching her congratulations.\n\n\"When?\" Moll's screeched...\"Oh my god, a baby...wow...oh I can't believe it, damn I am so envious.\"\n\nApril smirked, \"Well the timing is going to depend on you and Marion actually.\"\n\nMolly gave her a dumb confounded inquisitive look.\n\nApril who had lost her smile sighed hopefully, \"We want Marion to be the sperm donor.\"\n\nMolly lost her smile as well, \"What...\" She hissed.\n\nApril's voice softened and she barely whispered, the words tumbling hesitantly from her mouth, \"Marion we want you to be the father to keep the bloodline going. That way we can truthfully say our child will be from both our families.\"\n\nWhen she saw the look of panic and horror on Molly's face she added, \"Sandy is going to carry it, so I wanted a connection to our family.\" April mumbled slowly, almost apologetically.\n\nMolly sat bolt upright and I could see she wasn't happy, oh no, not at all and there was a look of complete confusion on her face, she was for the first time in her life speechless.\n\nStunned but proud I mumbled, \"Um yeah of course, I can try but you know I have taken female hormones over the last couple of years so I don't even know if I'm capable, but yeah I can try, just tell me what I have to do?\"\n\nApril smiled broadly at my offer of help and she said, \"Yeah of course you will have tests, you will have to have a whole bunch of tests and of course donate the sperm.\"\n\nSeeing an opportunity to lighten the moment I chirped, \"We could do it the old fashioned way you know?\"\n\nSurprisingly April laughed, \"Don't worry we did talk about that very thing and Sandy was pretty keen...too enthusiastic if you ask me.\" Sandy smiled teasingly, coquettishly, and Molly poked me in the ribs, and not a friendly poke either.\n\nThere was a long drawn out pause before Molly screeched out caustically, \"No...no, no, and Hell no, that's not happening.\"\n\nA cold heavy cloud settled over us as Sandy and April exchanged worried glances before Sandy whispered, \"Molly, we were joking, all we want is Mi to donate some sperm.\"\n\nMolly got up off their lap and walked over to flop back in the rocker beside me and as she rocked back, she rasped, \"Shit, I always wanted us to be the one to keep the family name alive, I'm sorry I don't feel right about this, I mean shit you're brother and sister.\"\n\nApril sighed sadly, \"Yeah but Sandy and Marion aren't related and she is going to carry it. That's why it's important to me, if we get a random donor there will be no connection to our family only Sandy's\"\n\nAs I reached for Molly's hand I watched as little tears formed and her eyes glistened.\"\n\nApril and Sandy held hands as well and Sandy whispered, \"Molly I know this is a lot to ask and we didn't expect an answer straight away, please just think about it.\" They got up and wandered off hugging. I think we were all shocked by Molly's reaction. She was so free with her sexuality I didn't see what the problem was but I could see she was deeply upset by the mere thought of it.\n\nAs we sat and rocked, I asked, \"OK Moll's, spill...what is the problem?\"\n\nShe sighed, \"Shit I don't know...I don't fucking understand this, jeez we were only talking about children ourselves the other day.\"\n\n\"Yeah, but you weren't serious, were you?\"\n\nShe scrunched up her face, \"I don't know Mi, I don't know why it upset me so much.\"\n\n\"You seemed pretty upset at the prospect of Sandy and me doing it for real.\"\n\n\"I know.... that's just crazy talk, I mean shit I remember you telling me how much you loved her, I'm sorry but it just hurt.\"\n\n\"Yeah, well that's pretty much how I feel when you talk about having sex with other people. It hurts.\"\n\nShe grimaced, \"Jesus Mi I didn't know that, I guess I didn't realize, I have never experienced jealousy before, or even understood why people feel it. Believe it or not this is my first real taste and I have to say, I don't like it.\"\n\nShe jumped into my lap and we hugged.\n\nA little while later Mom wandered out and saw us still cuddled together, \"Well you two love birds seem happy.\"\n\nWhen Molly glanced up at her she saw the tears and recoiled shocked, \"Oh honey what's the matter?\"\n\nMolly leapt out of my lap into her arms and they hugged, mom glanced down at me and I shrugged with my eyebrows raised.\n\nMom held her tight and said, \"c'mon sweetheart, let's go and I'll get you some cookies and a fresh glass of milk.\"\n\nI sniggered as they walked away... \"Cookies and milk ...mom's answer to everything.\"\n\nThe rest of the day was a chill out before we all went our separate ways. Mom and Molly seemed to spend an inordinate amount of time together in the kitchen with Molly making out like some kind of domestic goddess. Of course, we had to sample everything from cookies to cake.\n\nIt was later when we were alone Moll's apologized, \"I'm sorry about freaking out, it just all took me by surprise. If you want to do it then you should do it.\"\n\nI shook my head, \"Nope, I'm not doing it while you feel like this. Moll's I know you well enough to understand you're not happy with this.\"\n\nShe hugged me, tears staining her face, \"I want us to have babies first, I'm serious, I have done nothing but think about this. I think this is what has been upsetting me...I want us to have a baby.\"\n\n\"Sheesh...how the hell would that happen? I mean you're never home? You spend more time on airplanes than you do in our bed.\"\n\nShe nodded, \"Yeah I know but lately I have been thinking a lot about what you said about being home more and I'll change. I will talk to Gloria when we get back and see if I can get some maternity leave. I promise I can change.\"\n\n\"What happens then? You go back to working sixty hours a week and I'm on tour.\"\n\nShe shook her head, \"Nope, what I want to do is stay with the band, I'll be just the band manager and travel with you everywhere, you'll be sick of the sight of me.\"\n\n\"Ok then what about the next time Gloria or some other hottie wants to sleep with you or you want to sleep with them?\"\n\nShe shook her head, \"Nope, never again, this was a real shock for me, I never understood how much it hurt you, I had this weird notion that you were just scared, shy or something, now I know I promise I'll never hurt you again. Jesus Mi, I have been so selfish, so self absorbed. I let you down and that is never happening again, never!\"\n\nI snuggled up beside her, \"OK I'll give April the bad news, they will have to find another donor.\"\n\n\"No babe, I want you to do it for them, it is the right thing to do. All I am asking is that we go first. They don't get your junk until we are pregnant. If they can wait a year then you can do it, I think you should do it. I understand why April wants it, if I was in her position I would want it...no I want you to do it.\"\n\nThe next day we sat with Sandy and April and gave them the news, at first, they were a little vexed but as we explained they came around and we made an agreement. If we didn't have our own child within a year then we would do it anyway so they could make arrangements.\n\nOf course, there's more to having children than just sex. All my old insecurities resurfaced, sitting in front of the mirror adjusting my makeup before going out I wondered, 'How the hell was I going to be a parent? I'm just a man in a dress with fake tits, how the fuck was I going to be a father...or a mother? What was I going to be able to add to this....\n\nAs I strolled down towards the beach, I had a panic attack and had to rush back home.\n\nWhen Molly got home there, I was curled up on the cushions tears still rolling down my face, my eyes red and bloodshot, makeup smeared all over my face.\n\n\"What the hell happened?\" She shrieked as she sank down beside me and wrapped me in her arms, my head cradled against her breasts, \"Molly this isn't going to work...I can't be a parent, I'm not a father, I'm not a mother....What the fuck can I do for a child?\"\n\nTears streamed down her face as well, \"Babe you can love our child just like I can, you will be a fabulous parent, forget all this stupid shit. You are beautiful, loving and kind...all the qualities that I want in our child. You can do everything any father can do only better, you can kick a ball, you can throw a baseball harder than most.\"\n\n\"Yeah, but what happens later when our child is old enough to know about this stuff, what then? They will hate me, how can they respect a man in a dress?\"\n\nKissing my cheek with both her hands holding and squeezing my face she whispered, \"Babe respect is something they will learn, we will raise them right, they will know and value life and people, straight, gay...whatever. Jeez babe look at your mom, she loves you and respects you, shit even Fred is proud as hell of you and god help anybody who says something bad about you when he's around because look out.\"\n\n\"Yeah, but she has to love me, she's my mom.\"\n\n\"No, she doesn't, Christ Mi, look at my folks, they kicked me out, and don't want nothing to do with me, your mom loves you because she's a wonderful mother...we will be like that and if our son or daughter grows up to be gay, then we will deal with it just like your mom. Think about it, what will Sandy and April have to offer that we can't? C'mon babes, you should be proud of who you are, shit, how many kids can say their parent is a world famous rock star.\"\n\nAs I tried to absorb and believe her words it struck me, \"They...I muttered, what do you mean they?\"\n\nShe laughed, \"I want more than one, I want a brood just like your mom. I love your family so much I want the same, laughter love, tom foolery I want it all and most importantly I want a treehouse, oh god yes I want a house with a yard and definitely a treehouse.\"\n\nI laughed, \"Shit we would need two buses when we go on tour.\"\n\nShe laughed along with me, \"I don't care if we have to hire a damn train.\"\n\nHer words calmed the raging dragons of disquiet and disbelief raging within me, but even so it took a few days before I was ready to face the world.\n\nWith Molly's words ringing in my ears it was obvious that the apartment we now shared wasn't going to be suitable for a family that's for sure, we needed a house, or at least a bigger apartment. That search in itself caused a ruckus, getting agreement between us was harder than getting Gloria to agree to Molly returning to be just the band manager. She of course did other work that she could do from LA but at least the sixty hour weeks ramped down.\n\nSex...holy hell we had never done it this much in our time together, we made love, we fucked day and night and it didn't take long before it happened. I remember that day like yesterday, having just returned from a mini west coast tour I walked into the apartment to find Moll's in a very happy mood, the room filled with the aromatic aroma of food and my mouth watered as she hugged me tight spinning us both around like an out of control carousel.\n\nThe huge beaming smile lit up the whole room, \"OK what's up?\" I asked.\n\nShe kissed me with one of her long lingering swirling kisses, and she pulled out a little stick and waved it in my face, \"Do you know what this is?\"\n\nI nodded slowly as my eyes bulged as I stuttered, \"Does this mean what I think it means?\"\n\nHer lips returned to mine and she whispered sexily, \"Sure does babe, we are going to be parents.\"\n\nThe night turned into a real celebration and Moll's was straight on the phone contacting everybody she could think of. Mom was ecstatic and I could hear her screech even though she wasn't on loudspeaker. April as well was screaming because she now knew that she was going to get her chance as well.\n\nThe girls in the band exploded in joy as expected and they started planning a party to celebrate.\n\nIt meant the search for somewhere to call home began in earnest. I wanted something semi-rural where we could have room to spread-out and I could have a recording studio and of course a treehouse.\n\nNeither of us wanted to live in suburbia so we spread our net far and wide. The one thing we had in our favor is we weren't locked to a certain area, we just wanted some space. Finding the property we wanted in LA was impossible, well impossible unless we wanted to spend millions.\n\nWe did eventually find a property we liked. It was east of Sacramento, half way to Lake Tahoe. We weren't looking for property we were actually on a holiday and stumbled on it. The moment we saw it we both fell in love and put in an offer immediately. Yeah, it was a bit out of the way and Moll's was worried what would happen when she told Gloria but strangely Gloria was happier than we could have expected. She was happy for Moll's to work from home a bit more and it would make her available to work around San Francisco. It turned out to be a winning decision.\n\nI did the deed for April and Sandy, in fact Molly came into the room and helped me out, she actually squeezed out the last drop. Two months later and our family had another pregnant member, well two more because Bev was pushing out another as well. Now there was only Sue who was holding out.\n\nThe birth was the most amazing experience, Molly suffered but the moment we had little Casey in our arms nothing else mattered. Molly's smile beamed, I had never seen such an expression of love and emotion. Our son was beautiful and our world changed forever.\n\nMusic...Ha, I loved music with a passion but holding that little boy in my arms I knew that was what mattered.\n\nSo, there you go, we had our new home, a bubbly bouncy baby boy and life couldn't have been better....\n\nI down played the music but his birth also gave birth to several new songs all of which the girls hated. They weren't singing about birth and families and kids on stage. Oh well I put it in the folder for my solo album which I could now record at my own leisure in my very own recording studio.",
        "There were going to be many more bumps in our road through life but everybody has those.\n\nThanks to all the people who contacted me and for all the kind comments on the story. For the time being this is the end, although....insert maniacal laughter, maybe later.\n\nThanks again for the lovely comments, and even the not so lovely, they are all valid.\n\n<br >\n\n \n"
    ],
    "authorname": "Cagivagurl",
    "tags": [
        "crossdressing",
        "lesbian"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/marions-story-ch-17"
}