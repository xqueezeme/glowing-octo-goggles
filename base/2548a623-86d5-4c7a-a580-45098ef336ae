{
    "title": "Lost Empire Ch. 27",
    "pages": [
        "Hartwell had all the men assembled in a huge room within Shelby, confused all of them had waited to see what was going on. A few minutes later Derrick stepped into the room and motioned to Hartwell to start.\n\n\"I know all of you are wondering why we are here, the emperor and I thought it would be most prudent for us to have this meeting. All of you are the first of those that graduated from the advance classes that were started two weeks ago. At present you are the best that the rangers have to offer for their emperor's personal guard. That being said we are going to the emperor's first official visit of the upper nobles.\" Hartwell looked at Derrick who nodded and stepped up to take over.\n\n\"Though I'm not expecting trouble, after this first visit, I will be expecting nothing but trouble. Of the five upper nobles we are visiting Duke Risen last.\" There were several gasps and more than a few wide smiles, they had all heard about the attack that Risen and his forces had tried to perpetuate on the emperor when he first appeared.\n\nA young corporal raised his hand a moment later though a little tentative the man still asked his question. \"Sire I know that those after us are receiving longer training than we had. Will we be afforded the chance to train and improve? I feel confident but not enough; I don't feel I am as good as I can get to protect you.\"\n\nDerrick leaned down and asked Hartwell something then straightened up to address the man. \"I am so glad you asked that sergeant, as I am about your concern for mine and your safety.\" Derrick smiled when the man's face registered shock at being called sergeant then settled back and waited as Derrick continued.\n\n\"On board here we have a living A.I. her name is Shelby. Shelby dear, if you have a moment?\" As a beautiful, blonde, green eyed, slender young woman appeared in front of those assembled the room grew deathly quiet. \"Please introduce yourself.\" Derrick said to the young woman who was smiling at him and all there.\n\n\"Yes of course Derrick. Hello everyone my name is Shelby, I am the A.I. of this ship, well, of me. I have a full program of upgrades to help strengthen your speed and techniques. At any time if you have questions do not fail to ask, remember knowledge is power and the more power you have, the longer you stay alive.\" Shelby had relayed all of this with the sweetest of smiles putting almost all there at ease.\"\n\n\"Now then we are enroute to the first of the Nobles territories. As I said with the first I don't expect trouble 'til after we leave. Therefore I am going to afford you every chance to train. I have also included some virtual training to help you gain what you will need to know faster. Alright I wish us all luck and I will see you later today when we have started.\" Derrick turned and talked to Hartwell a moment.\n\n\"Greeson please come here a moment.\" Hartwell called to the young man who'd asked the question.\n\nGreeson walked to the both of them and stopped in front of both men saluting at attention. \"Yes sir?\"\n\n\"The emperor wasn't kidding about your promotion sergeant, as of now you are to assist with all details of assignment and placement. You do know why you were promoted Greeson?\" Hartwell asked the man.\n\n\"Uh no sir, though I do not feel I deserve it.\" Greeson replied.\n\nDerrick smiled he was starting to like this young man more and more, \"Son you were more concerned about the readiness of all of you than you were about yourself. That is what I expect of all who command for me. I was only too glad to reward you for this. Keep them safe sergeant and yourself as well.\"\n\n\"I will do my best sir but 'til I have better skills I feel I will fail you. I was on my way to start training now. Again I thank you for the promotion but as I said I don't feel I deserve it.\" The young man honestly said.\n\n\"That will be all Greeson.\" Hartwell smiled as the man saluted and left.\n\n\"I do like him; any man who cares about his men even when he has none is first rate in my book. Keep an eye on him Hartwell; I feel good things about him.\" Derrick told a smiling Hartwell who had the same feelings.\n\nMary was worried about both Kimison and Rayburn, both had been working nonstop on at least ten different things often swapping in the middle of something. They both had at least half of the machines in Tempro's laboratory going. Tempro himself who was familiar with all his equipment still had no idea what either man were working on.\n\nIt had been almost two days since they had started neither sleeping nor eating. They barely spoke to each other as they kept going almost as Mary could see by sheer will power. Sighing Mary felt they were going to damage themselves if they didn't rest soon and was about to inform them of it when Kimison suddenly started shouting.\n\n\"It's about damn time!\" Rayburn came running looking over the odd contraption then started nodding and smiling.\n\n\"May I ask what is so important that neither of you have eaten nor slept for two days?\" Mary asked a little hurt that for once she herself had been at a loss to what either had been doing.\n\n\"We both remembered that the emperor had said that he didn't have enough power to destroy a planet. We have been working on it these last two days. This,\" Rayburn said as he lifted the three foot long glowing pole, \"is a stable generator redoubler. I'd say that with it all power on board should be multiplied. This modulator will allow the generator to produce twice the power at half the effort it would take to produce normal output.\"\n\nMary looked at the device her mouth was actually hanging open; this would solve many, many serious problems that the ships had as well as her own. With this she could withstand twice the amount of power used against her to breech her shields. \"You both are certain that the magnetic fields the power producers emit won't interfere with its function?\" Mary looked at the device lovingly if it worked as well as they both said this would be the first major piece of equipment the empire had in almost three hundred years!\n\n\"That's why it took two days, at first the fields destabilized it every time we started. That took almost a day to fix; we both figure that the sect has nothing like this. If they did we would have seen it. Problem is any bigger than this and it destabilizes on its own. The strange thing is, this has been able to handle the full output of Tempro's engines, generators, and reactors at the same time.\" Kimison told a startled Mary. \"I'd really like to install it on the emperor's ship but we need a few more tests.\"\n\n\"If it does all that you say, even with all of Tempro's equipment going, then yes this is an instance where I do think that the emperor would love to be disturbed. Make those tests this will be monumental, more than worthy of the old engineers and technicians. I will await your results and have a production line made ready for them.\" Mary told both of them amazed that they had accomplished all they had in just two days.\n\nBoth Kimison and Rayburn smiled that was nothing they looked at the other nine projects. The micro generator for the hologram projector along with a micro hologram projector. The triple output particle beam weapon, the triple layer shield emitter, the hyper sensitive weapon detector (based off Derrick's brain box detector). Though they were still having problems with it the micro IMT, the power required was still steep. Kimison's favorite the living nullifier though it was more of a stun gun Kimison liked the name better.\n\nThe last two they had stopped not long after they had started. They were the most dangerous, a cellular bond disruptor seemed too cruel for even Kimison, who though still pissed as hell, didn't think he could kill someone that painfully. The last Kimison liked a hell of a lot but decided that a total mind erasure wouldn't do without a way to input information. Being that alone Rayburn had agreed could kill as fast as any energy weapon.\n\nMary watched as both men went back to work as she and Tempro took the apparatus the men had completed and started a long series of tests. This had Mary excited with this she could most definitely keep up with the emperor and protect him.\n\nGreeson was flat on his back again damn it he thought. I know my speed has increased why can't I stop it? Again he got up and faced off against the robotic sparring partner that Shelby had provided. Closing his eyes Greeson decided to try something his instructor had once told him. Calming himself and finding a center, Greeson opened his eyes and waited a lot calmer as the robot advanced. This time Greeson seemed able to watch everything as the robot made its move. Feigning to the outside and switching quickly to the other Greeson was a little shocked when he saw it and having waited was able to actually stop and flip the robot.\n\nAmazed Greeson hadn't seen the others that had come into the room 'til they started to cheer. Shocked Greeson wasn't watching as the robot righted it's self and advanced. Flipping over the man the robot reached for Greeson who had heard the approach and had side stepped again flipping the machine to the mat.\n\nStanding up straight Greeson held out a hand, \"hold.\"\n\n\"Simulation has been paused. Was that sufficient sergeant?\" Shelby asked with the sweetest of smiles.\n\nA little taken a back Greeson could only stare at the robot righting itself then pausing. \"Yes, thank you Shelby. Is there any way to determine what I did different the last two times?\" Greeson asked keeping an eye on his sparring partner.\n\n\"As far as I could tell all you life readings were twice as calm and slow. It appears that your cognitive reasoning also increased as did your reflexes. Would you like to go to level six? It appears that you are finally to where you stated you wanted to be.\" Shelby asked a small amount of concern in her voice. She wanted to help them to guard Derrick better but it wouldn't do to have them get killed while training.\n\n\"I don't think so right now Shelby, I need to know that this wasn't a fluke that I can continue to go at this level.\" Greeson told her as she breathed a sigh of relief. She had to admit Greeson had advanced far faster than the rest of the Rangers there. Though most were to level three, so far Greeson was the only that had made it this far.\n\nShelby nodded then waited as Greeson took a deep breath then stated, \"Continue.\"\n\nThis time the robot did two flips one to each side then flipped toward Greeson it's legs and arms extended outward in an attack. Again Greeson had calmed and found his center awaiting the attack, a slight side step at the last second, a block of one arm and leg. Then Greeson was looking at the robot on its back. Greeson went on for another hour finally telling the robot, \"Cease.\"\n\nGreeson watched as the others were starting to train, they all had congratulated him for the feat that he had accomplished. Greeson just shook his head he was still a little in shock having either blocked, side stepped, or flat out flipped the robot. Here I thought the man had been full of shit Greeson thought glad now I remembered what the instructor said.\n\nHartwell and Derrick had both watched the progress of all the Rangers practicing. They were taking a slower route to the first upper Noble instead of a few seconds they were taking seven days. Derrick wanted the Rangers to have time to get better. From what he saw they were some, though from the look of Greeson they weren't pushing nearly hard enough. They had just finished watching Greeson's latest training.\n\n\"Holy shit!\" Hartwell remarked, \"Damn I hardly saw him move!\" Derrick was smiling he'd personally picked out each of those that were on this mission. He knew that Greeson was a lot like he himself had been back in the war. Protect those that you are assigned to like family and especially protect your team. In a sense they were your family and were as dependent upon you as you were upon them.\n\nDerrick was smiling even more when he saw Greeson calm and center the first time after that the robot never really touched the man. \"Level five in just three days I have to say that Greeson is a man of his word. Shelby query, at his present level as compared to those that attacked us at the repository how well do you estimate that he would fare?\"\n\nDerrick waited for only a moment, \"Taking into consideration all that happened, I would say he is at or beyond over seventy five percent of those that were there.\"\n\nDerrick sighed so Greeson had been right they all were merely targets to many of the sect. Though in Greeson's case he might, just might get as good as the sect given enough time. Derrick nodded' he had to give them all of them the time if this was going to work.\n\nAfter three days Kimison and Rayburn had finally collapsed from fatigue and lack of sleep. Mary could only shake her head she had warned them, still they had refused. Looking over all that they were still working on, she was still at a loss as to what they were working on. The simple fact that they had accomplished what they had so far had given her pause to stop them. She was just hoping that they would soon feel secure enough to start back on the project, so much depended upon the completion of it.\n\nSighing she had to wait for a least a day before they were alert again, working at the break neck speed they had. Tempro had been going over all the information that both men had gathered. He had to admit he'd never gone in the direction that the two men had. Tempro wasn't about to say it was genius but to him it was about as close as you could get. Carefully Tempro started to test the numerous examples that they had left for him. Though almost all failed at the start it was at least a start a hell of a lot more than he'd had only a week ago.\n\nTempro was almost finished with the full amount of testing when Kimison groaned getting up. Eating a few bites of food he waited impatiently for Rayburn to awaken. Damn he thought, he knew that Rayburn had kept going an hour after him but Kimison thought the lazy ass would be up before now!\n\n[You know asshole, I can still hear you even when I am asleep, as if I could with you bitching in your mind!] Came the thoughts of Rayburn causing Kimison to start smiling.\n\n[Sorry I thought you were going to sleep the rest of the day. You are after all older so... ] Kimison started.\n\n[Oh shut the hell up! Older my ass! I'm the same age as you, so you can stuff that old crap!] Rayburn spit back at Kimison in his mind.\n\n[Hell buddy, I'm just glad we've got as far as we did I'd like to see the ass get to us now with all we have!] Kimison thought.\n\n[Yeah I agree, I doubt very seriously that he'd try again IF he lives that is. Like you told the commander let's make damn sure he not only dies but stays that way!] Rayburn thought nodding his head in agreement.\n\nNow four days into their work they finally felt they were getting close, and then at the end of the day Kimison started to yell again. \"Yes, by god I think we've both of them!\"\n\n\"I think I've got this completed also Kimison!\" Rayburn shouted from the other side of the lab. Tempro could only shake his head what they had gotten he wasn't sure but if it was as good as the last then it would most certainly be worth the time they had put in.\n\nMary appeared a few moments later having heard both men's shouts. \"Well it is extremely good to see the both of you working together as you have been. You both wanted to see me?\" Mary asked.\n\nRayburn picked up a small five inch by three inch piece of metal that almost appeared to be a Ranger badge. \"I'll go first,\" Rayburn said to which Kimison nodded. \"We both have been worried about the emperor being shot or stabbed. I started this thinking of those possibilities. Often there won't be an opportunity for him to have a hologram projection system to use. Now then Mary,\" Rayburn said as he pressed a small button in the center of the metal badge, \"fire at me.\"\n\nMary looked at Rayburn as if the man had lost his mind. Several tubes came out of the wall, first one fired. The beam came within a foot of Rayburn and stopped. Mary's mouth dropped open as she upped the charge of the beam and fired a second then a third then a fourth. All the beams stopped at a foot, Kimison had been monitoring the whole time and stopped Mary after fifteen minutes.\n\nKimison's face dropped when he saw that the power output had been as limited as it was. \"I'm sorry Mary the power output was exhausted.\" Sighing Rayburn started to look at what had gone wrong.\n\n\"Sergeant,\" Mary stated a minute after Rayburn started looking over his drawings. \"When you said to fire at you I did as you asked though you never stated to what power level you wished. You obviously don't realize the power level I used do you?\"\n\nRayburn's head snapped up at that, \"I thought you used the standard levels.\" Rayburn told her.\n\nMary's face was suddenly serious as she replied, \"Sergeant I was at full power, I could have crippled half a dozen ships or more with the amount of power I used. Do you think that an attacker would use that much against this?\"\n\n\"Wait, you used a fully charged particle beam on me? WHAT!? Are you trying to kill me?\" Rayburn suddenly shouted.\n\nThis time it was Mary's turn to smile, \"Well sergeant you did ask me to fire at you, when I saw that nothing happened I attuned more power and levels. So I ask again, do you think an attacker would use this much power against it?\"\n\nRayburn had collapsed into the nearest chair a look of complete shock on his face looking over at Kimison he had the same look on his face. \"Damn you mean the micro generator put out that much!? Here I thought it was far more limited than that.\" Kimison was whispering.\n\nRayburn shook his head, he'd taken a fully charged particle beam and lived. Suddenly a smile lit up his face hell with the amount of power that the micro generator provided they could have withstood standard levels all damn day! \"Show her the one you were working on I think she'll like that even more.\" Rayburn said with a huge smile.\n\nKimison only nodded at Rayburn as he picked up another thicker badge looking piece of metal, this one though had three holes in the front of it. \"I know that you are always worried about not being able to be with the emperor to protect him. I have been working on this since the first, it is a micro-holoprojector but with a difference. I know you have thousands of terabytes of information; I know you have a few terabytes for your personality. I have incorporated two terabytes of storage into this.\"\n\n\"Two terabytes would barely contain all that is me I am afraid that I wouldn't be able to operate the...\" Mary started.\n\n\"No, no, no, I mean you create a copy of your personality in this, so you could have a mobile hologram to stay near the emperor. Afterwards you could reabsorb the data back into your mainframe,\" Kimison corrected Mary.\n\nMary looked at the device it was true to actually be there to watch over the emperor would make her feel a whole lot better. \"We will try; tell me exactly what you wish for me to do.\" Mary told Kimison. Kimison looked over at Rayburn who just smiled Mary was about to have a shock that was for sure.\n\nKimison took the badge and put it on a chair pressing two of the buttons. Smiling, he then told Mary to copy her personality and upload it to the micro-projector. Still a little unsure Mary tentatively started to copy and upload. A mere five minutes later Mary's Hologram appeared on the ship with the badge on her chest. Kimison had the biggest smile on his face as he was monitoring the whole time.\n\n\"How do you feel Mary?\" Kimison asked not looking up from the readings he was taking.\n\n\"I am a machine I do not...\" suddenly Mary's mouth fell open, \"wh ... what is this? Why can I feel the deck? The air in here?\" Moving to Kimison she placed a hand ON his shoulder. \"You found a way to make a solid representation of my hologram with tightly focused shield emitters! Oh my! This will take some time to get used to.\" Mary seemed to be having a little trouble walking around.",
        "\"Hang on a second Mary,\" Kimison reached over with a strange machine as he started to adjust several of the power levels and controls. \"There I think that you should have more control now.\"\n\nMary had tears in her eyes as she suddenly rushed over to Kimison hugging him fiercely, then over to a smirking Rayburn hugging him as fiercely as well.\n\nTempro had appeared a few moments earlier and had tears in his eyes. His mother was as beautiful as ever she more than deserved to be the first that this technology was used on. Mary appeared a moment later and watched as the solid hologram hugged both of the men. A shocked look was on her face.\n\n\"I have to say Mary you make a definitely good human copy, you have conquered the senses rather quickly.\" The hologram of Mary said.\n\n\"I'm afraid it was me Mary,\" Kimison told her. \"I adjusted the shield emitters to where solid Mary could move and interact more freely.\"\n\n\"This was most unexpected but as you said it will make watching over the emperor far easier than long distance.\" Mary told both of them. \"The personal shield will also provide a degree of protection that I cannot provide.\" Bowing to both of them Mary told them, \"I withdraw what I said earlier, you both are far superior to the engineers and technicians of the first emperor. I am sorry that I doubted you, the stable generator redoubler seemed a master piece of engineering but this.\" Here Mary was shaking her head her mouth slightly agape, \"these marvels you both have created are far, and beyond what I thought you two would do.\"\n\n\"How much longer do you think that the tests will take?\" Kimison asked wondering if he'd have to try and discover a way to increase the size and payload.\n\n\"As of yet I have not detected any problems with the device, the modulator can be exchanged with a bigger one can it not?\" Tempro asked a moment later.\n\n\"Of course that way you could increase...!\" Kimison's mouth dropped agape. \"Oh my god!\" Kimison said as he slapped his forehead.\n\n\"What the hell's wrong,\" Rayburn asked, a little worried that the amount that they had done was starting to have serious effects on Kimison's mind.\n\n\"The Modulator!\" Grabbing Rayburn Kimison shook him, \"the damn modulator! That's all we'd need to adjust!\"\n\nFor a moment Rayburn was a little confused then his eyes opened wide as it finally dawned on him what Kimison was on about.\n\nDerrick had watched all the Rangers advanced they were going to be a force to deal with soon if they all lived that long. Sighing Derrick hoped they lived that long he really liked a few of them.\n\nMary appeared a moment later, \"Sire I bring news from Kimison and Rayburn. It appears that after your news about Kimison's half brother they have been working nonstop on several projects.\" A three foot long glowing pole with a modulator at one end appeared. \"Kimison called this a stable generator redoubler.\"\n\nDerrick was staring at the device with concern, then his face was elated, \"Yes! Shelby I want you to install this immediately!\" Shelby nodded as Derrick instructed her where to put it and how to attach it.\n\n\"Sire,\" Mary said drawing his attention back to her. \"They have also created as Rayburn called it a triple layered shield emitter. I tested it at full power while Rayburn wore it.\"\n\nDerrick's eyes flew wide, \"Is he alright? You didn't vaporize him did you?\"\n\n\"No sire, the device took the full particle beam blast for fifteen minutes, before the power was exhausted.\" A proud looking Mary told Derrick. \"As I remember Kimison said now he can get shot at and laugh his ass off. Sorry Sire I am only repeating his words.\" Derrick was about to fall out of his chair with laughter.\n\n\"Yes that sounds like Kimison, this,\" Derrick turned the small Ranger shield shape over in his hands. \"This will most definitely come in handy. Anything else? Derrick asked.\n\n\"Yes Sire,\" Mary said hoping the emperor wasn't angry with her. A shimmering in the chair next to Derrick had him looking that way. There was a soft hum then Mary was sitting in the chair next to him!\n\n\"Well I'll be damned! A mobile holographic projector! Wait, how is it staying on the hologram?\" As Derrick reached out and touched the hologram emitter he brushed against Mary's chest. Snatching his hand back Derrick's mouth was hanging open, holy shit! Mary was solid! What the hell!? Shelby could only stare at her mother also, Mother was a solid? How?"
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-27"
}