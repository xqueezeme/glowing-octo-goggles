{
    "title": "The Twelve Vitali Ch. 27",
    "pages": [
        "Authors note: Hello everyone. Thank you everyone for the positive feedback and comments they mean the world to me and have brightened my days. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\nCat woke slowly. She had a vague recollection of Matteo and Ricco kissing her goodbye as they left to meet with their fathers again. She stretched languorously and sighed with the pleasure of waking up naturally, feeling better for such a deep unbroken sleep. Thinking about what she wanted to accomplish today, she swung her legs from the bed, grabbed a robe and padded out toward the kitchen in search of coffee before she had her shower.\n\nShe did a double take and gasped seeing the three men sitting at the small kitchen table as she entered the space seeking out Lisa. Her hands automatically went to her hair to smooth it down as she took in the faces. Two she knew, the other was new, and she wondered why he was here.\n\n\"Good morning, Mrs. Vitali,\" Lisa said pleasantly.\n\n\"I just came in for coffee,\" she said. \"I'll have a shower, and then we can have our breakfast meeting,\" she said, trying to work out what to do with the three men. \"I hadn't expected you this morning, I'm sorry, you'll have to wait a little while until I get what I need to do done this morning.\"\n\n\"Whenever you are ready is fine,\" Arturo answered. \"We were told to let you rest today. You remember Hugh, and this is Bradbury, he is one of your personal security team.\"\n\n\"Team? I have a team?\" Cat's eyebrows shot up. \"I don't need a team, no matter how paranoid my husband is.\"\n\n\"I will need to sleep at some point, and perhaps have a bathroom break, so having at least one other person is kind of necessary. I also wouldn't mind seeing my family every now and then,\" Bradbury said with a smirk.\n\n\"Oh, I see,\" Cat said. \"Sorry, I'm still half asleep.\"\n\n\"Here's your coffee. Breakfast in half an hour in your studio?\" Lisa asked, saving Cat from saying anything else to the men.\n\n\"Yes, please, Lisa,\" Cat took the cup and walked back to her bedroom, realising that the days of leaving her room without showering and dressing first were over.\n\nShe showered quickly, leaving the coffee to cool, and then gulped it down as she dressed and dried her hair. She put on a bare minimum of makeup and headed for her studio to meet Lisa. Yesterday she took control of her destiny, today she needed to put all the pieces in place to make sure she could live up to the promises she had made, not only to others, but to herself. She would not let Matteo and Ricco down, nor would she get bogged down in trivial things that other people could handle for her. She had a circle of friends to lean on and household staff to do the day to day things. Whether she liked it or not she was a wealthy and powerful woman now, and the sooner she accepted that and started acting like it the better off they would all be.\n\n\"Good morning, Arturo,\" Cat said, seeing him lounging near the door to her studio.\n\n\"Good morning, Mrs. Vitali,\" he smiled. \"You have several requests for meetings today, but as your husband said, it was a day of rest for you, I have put them all off and said you would get back to them when time permitted. Once you are done here, perhaps we could sit and look at your schedule and see what you believe are the priorities for this week. As much as I like your husband, I work for you and intend keeping it that way.\"\n\n\"Thank you. I appreciate that,\" Cat said. \"Once I am done here, Lisa and I will find you men an office to work out of so you aren't crowding the kitchen staff,\" Cat said thoughtfully. \"Then we can do some shopping for what you need to do your job.\"\n\n\"Thank you,\" Arturo said simply, despite the fact that Matteo had already asked Lisa to show him the available rooms that could be converted to an extra office space. If he were honest, he would rather have a desk within Cat's studio and a separate office for the security team and Hugh. It would take some negotiating though, and he could tell from their first conversation that she was not a woman to be taken lightly or have her personal space crowded.\n\n\"I will be out shortly, this shouldn't take more than an hour, at most,\" Cat said with a smile, and stepped into her studio to find Lisa standing awkwardly near the main desk. \"Breakfast, great, I'm starving,\" Cat said with a smile, taking a seat at the desk and helping herself to a piece of watermelon. \"Lisa, please sit down, we have a lot to talk about, and I can't eat and keep looking up at you like that.\"\n\nLisa took a chair, but sat on the edge of her seat looking expectantly at Cat.\n\n\"I have given this a lot of thought,\" Cat began. \"I realise you would like to keep our working relationship formal, as you do with Matteo and Ricco by calling them Master or Mister, however, you use their first names, so I would like you to call me Catriona, which I think is a fair compromise for both of us,\" she began. \"If you must put a Miss before it, I will understand, but I would rather if you didn't and, given that most of my regular guests will also have the title Mrs. Vitali, that could become confusing for everyone.\"\n\n\"If you like, Miss Catriona,\" Lisa said, trying out the title.\n\n\"I do like,\" Cat said with a smile. \"Now, you obviously care for Matteo, you have been with him a very long time and have been loyal and trustworthy. I would like that affection to extend between us. Matteo has been named the next chair of the Vitali table, which puts me in a position where I must prove that I am worthy of being his wife. It's important that I can trust and rely on you as well.\" Cat could see how pleased Lisa was with this news, and she wondered why Matteo hadn't said anything, but then he probably hadn't thought to, staff were commonplace to him, and there to fill a role, he probably thought it wouldn't matter to her.\n\n\"Of course, you can rely on me to do whatever is needed,\" Lisa said without hesitation. \"I am very happy for you both.\"\n\n\"I'm glad you feel that way,\" Cat said. \"Please have coffee at least with me, even if you won't eat, so we can chat and I don't feel awkward about eating while we talk.\" She picked up her bowl and spoon and sat back in her chair, watching the woman as she seemed to consider Cat's invitation. She poured herself a small glass of juice and sipped it before placing it back on the table without saying anything else.\n\n\"Here goes,\" Cat said, seeing the woman finally relax a little. \"This will be our city home, but over the next few weeks I will be looking at renovating the house on the hill that Matteo built a few years ago. I would like your input on that, as I have no idea about what is required for such a large family in terms of staffing and appliances in the kitchen, and laundry, and those types of things. While I will have experts, none of them have ever had to run a kitchen or laundry, or, now that I think about it, a working nursery. The house on the hill will be our permanent home, so I want to get it right from the very beginning, so I will need you to travel out there with me and advise me. Look at plans and make suggestions. I understand this might be outside your comfort zone, particularly in front of others, but I will make sure we have a daily meeting to discuss household matters, even if it is only short.\"\n\nLisa nodded and took a sip of her juice as if stunned by all of the information Cat was imparting.\n\n\"I imagine that over the next week, at least, as the gathering continues, we will continue to eat in the restaurant. So, next week can you have a list of meals available for me to look at and approve, rather than expecting me to dictate that? I have so much to do, I need to delegate as much of the small stuff as possible, and, as you know, Matteo's, and I expect Ricco's, favourites I am content to leave that in your hands. If I would like something particular I can let you know when we review the menu at the beginning of each week,\" Cat instructed.\n\n\"That sounds very reasonable, Catriona,\" Lisa said quietly.\n\n\"Wonderful,\" Cat sighed in relief. \"Now, the three men that were in the kitchen,\" Cat said, pausing as she collected her thoughts.\n\n\"If I may speak,\" Lisa said formally.\n\n\"Please, speak!\" Cat said enthusiastically, sitting back and taking a mouthful of her breakfast.\n\n\"I believe the name 'compromise' is a good one, as is the daily meetings and menu planning. It will give me credibility with the rest of the staff. I would insist that the other household staff, maids and cooks and the like, continue to refer to you as Mrs. Vitali. Many are young and need that distinction. You will also need to be involved with the running of the household on some level, although I am capable of making sure it runs smoothly while we are here in the city. A large house, like the one you plan in the country, will require more staff, and possibly a housekeeper, a chef and a steward to ensure the house runs smoothly. It would be too much for one person alone, and, given a choice, I would prefer to run the kitchen,\" she said honestly.\n\n\"But you could work with and have seniority over a housekeeper?\" Cat asked. \"You will have to explain what a steward is to me I am afraid.\"\n\n\"A steward would handle the large budget needed for a household as large as what you are planning. They would oversee the staffing of the landscape, gardens, and maintenance, as well as the some of the household staff. The budgeting would mean that the steward would work with the housekeeper who oversaw the household staff, security would also be part of his brief, I believe,\" Lisa said, trying to remember, as it had been so long since she had to deal with such a man. \"The steward is rarely contracted the way household staff are, they are generally trusted family members of some description due to the large budget needed to ensure the comfort of the family.\"\n\n\"Ah, I see,\" Cat said, considering if Matteo already had a steward at his house. She knew he had what Ricco had called 'caretakers' there. \"Well, that is in the future and not to be worried over for now. Right now we need to find an office for the men who were in the kitchen this morning. I would like to be able to walk around my own home in the mornings without facing them each morning.\"\n\n\"Master Matteo asked me to show them several small rooms at the other end of the house this morning. I believe Hugh, the driver, Bradbury, and the two others that will work in shifts, will be happy in the staff quarters. Your personal assistant, however, has expressed his wish to be closer to where you will work. In his case, I believe he may be correct, and that would be for the best,\" Lisa said. \"As you said, you are going to be an extraordinarily busy woman, especially over the next few weeks while everyone wants to see you.\"\n\n\"Point taken,\" Cat nodded. \"Thank you for speaking so honestly with me, that's really what I need more than anything. People I can trust and rely on to have Matteo and Ricco's best interests at heart.\"\n\n\"And yours, Catriona. They would be devastated if anything happened to you,\" Lisa said with a smile. She liked the young woman who was now mistress of his house, and she would do anything Cat wished of her, despite her misgivings at being so informal with her.\n\n\"That is kind of you, but they are the priority, and it is them we have to support right now. I'm afraid they are going to be facing some tough challenges this year,\" Cat said, thinking about Roberto's illness and why everything in her life was happening so fast. \"Now tell me about the new staff and how they are working out, and if we need more, given the events this weekend,\" Cat said, needing to make sure the people she wanted to support her were well supported themselves.\n\nThey spoke for another twenty minutes while Cat finished her breakfast, and Cat realised she would have to ask Matteo about the household budget and how she accessed it. If she had to live like this surrounded by servants and protectors, she needed to make sure they were looked after properly, and she had no money of her own, except for the small little nest egg she received from the Donati family for the portrait she did.\n\nLisa left the room, and minutes later Arturo tapped tentatively on the door and moved into the room as she acknowledged him with a wave of her hand.\n\n\"Before we begin, could you call your husband, please?\" Arturo grinned. \"He's been quite persistent this morning to find out how you are feeling.\"\n\n\"Persistent is a good way to describe my husband,\" Cat laughed, and picked up her phone from the drawer she had placed it in so she and Lisa wouldn't be disturbed.\n\n\"If I may,\" Arturo took the phone from her hand and passed her a new phone. \"Here is your new phone. All calls to your old phone will come through me, unless you have given the people calling your new number. It is unlisted, so only your husbands and your brother will have your new number, and me, of course. I can transfer any calls to your phone, if needed, and you can share the new number with your friends, but I would suggest you do that sparingly to avoid spending most of the day on your phone instead of seeing to family business.\"\n\n\"That seems a bit extreme,\" Cat frowned.\n\n\"You are in a unique position now, much like someone who wins the lotto. There will be many who seek to take advantage of that. You have already had many calls requesting some of your time this morning. I would never put your true friends off unless you asked,\" Arturo said, maintaining an air of professionality, despite talking to her like a friend. \"People will get used to it, and it is my job, now,\" he reassured her as she looked at the new phone sceptically.\n\n\"Okay, we will talk more about this,\" she said carefully, and called Matteo.\n\n*****\n\nLisa tapped on the studio door, and Cat laughed as Arturo rolled his eyes at yet another interruption to their meeting. They'd been discussing what was needed and finding the necessary space, both in her studio and the house, for all of the extra staff for several hours. The time had flown by, but Cat felt she accomplished a lot, despite the constant interruption of the phone and Lisa, who was managing to the installation of the new staff into the staff quarters and security office next to Knox's office, which he would now share with Hugh.\n\nArturo, being a distant cousin, had grown up with the family laws and a great understanding of the table and all of its roles. He admitted that he was more than happy to be part of Cat's trusted inner circle, and that his loyalty would always be first and foremost to her. He listened to her, but had firm ideas of his own, which he wasn't shy about sharing. Like her, he realised she needed to trust and respect the people around her, and he was determined to be all she needed in a personal assistant. This position would give him access to everything he had wanted throughout his life. The family, and, by proxy, the wealth and power that came with being part of the first family without the pressure of the real work of the table. Or so he and most people believed. After all, how hard could it be to be the assistant of an artist who would likely be pregnant for most of the next few years?\n\n\"I'll come out, Lisa, I need a change of scenery,\" Cat said pleasantly, as Lisa announced that Frankie, Sebastian, Zion and Aria had arrived.\n\n\"You can deal with Sebastian for me and take notes, it will be more technical stuff, I'm sure,\" she continued to talk pleasantly, but Arturo caught the undertone and tilted his head, though he said nothing as they walked out into the living room.\n\n\"There she is,\" Frankie chortled and wrapped Cat in a large embrace. \"How are you feeling? Did you get enough sleep?\"\n\n\"I'm good, and I did,\" she grinned. \"Thank you for coming here rather than making me meet you at the finance house,\" she said. \"It's been nice just to relax and deal with the day to day stuff at my own pace today.\" She stepped back out of Frankie's embrace to look at the others who had arrived. \"Aria, I am so glad you're here, I need your help in the worst way,\" Cat grinned. \"especially with Vanessa out of commission for a few more days. Have you seen her today?\"\n\n\"Yes, we went and saw her this morning to tell her the news,\" Aria smiled. \"She's recovering well, but she's quiet, and that worries Mama. It was nice to get a word in, on the other hand.\"\n\n\"And you are both happy with the way things worked out yesterday?\" she asked Zion and Sebastian.\n\n\"There were a few surprises, that's for sure,\" Zion chuckled. \"Logan will be here in a few minutes, he had to pick up someone first.\"\n\n\"Oh, Logan is coming too?\" she asked.\n\n\"Matt's asked him to act as a temporary steward because of the project he's working on with you,\" Zion nodded.\n\n\"That's great,\" Cat smiled, \"I had wondered about that, and I have a few ideas I need to run past him once I have talked to Aria. My studio is a bit small for so many of us. Would you like to come through to the dining room? Or we could use Matteo's office if you like?\" she said.\n\n\"Wherever ou are most comfortable,\" Frankie said.\n\n\"Dining room it is then,\" she grinned and walked through to the large room and imposing table. She took a seat halfway down one side.\n\nLisa came in offering refreshments. It was mid-afternoon, and she offered tea time treats, which were accepted gratefully by the men, who looked as if they had been in meetings all day. Arturo sat close by Cat with his tablet in his hand, ready to take notes.\n\n\"How's the new phone?\" Sebastian asked, addressing her for the first time since arriving.\n\n\"I haven't had time to play with it, but it's very similar to my last one, from what I can see,\" she said, swiping its screen and looking at it as it came to life.\n\n\"We'll be upgrading all your tech, Arturo already has one of the new tablets that can be networked with yours, Ricco's, and Matteo's. That, however, is your personal phone, and won't be networked to anything or anyone,\" he explained.\n\n\"It has a tracker in it, though, not just the product one, but one of the families design?\" Cat asked.\n\n\"Matteo insisted,\" he said tentatively.\n\n\"If he hadn't I would have, weird stuff has been happening lately, and I have taken his warnings seriously,\" she said, surprising Sebastian. \"I also spent a lot of time with the Donati; I know what happened to Peri and the table there.\" She explained further.\n\n\"Smart girl,\" Frankie nodded and patted her hand. \"I've had Callista set you up with an account at the family finance house. Like the phone, you will have a personal one and a corporate account that are linked. Arturo and Logan will be given corporate cards for anything they may need that will be linked to a steward account for the households, anything else can be worked out later.\"\n\n\"If it helps, I went through the corporate card process with the Donati family, so I have some understanding of it all,\" she said lightly.\n\n\"Sebastian and Henry are working on some new software that should make reconciling the expenses easier for all,\" he looked at Arturo when he said that, making sure he knew he would be held accountable for his spending. Cat could have whatever she wanted, of course. Even without the family fortune, Matteo was a very wealthy man, but Frankie didn't want anyone taking advantage of her generosity.\n\n\"Henry is lovely, it must be nice to have some help with all the projects you have going on. I expect Matt and Ricco will want you to consult on the house when we renovate,\" Cat tried hard to speak in a friendly way with Sebastian, despite feeling like he still judged her as not being good enough for Matteo or to lead the family.\n\n\"Lovely?\" Sebastian's mouth quirked up at the corners. \"That's almost as bad as adorable, Logan and Henry aren't puppies, you realise,\" he chuckled.\n\n\"Oh dear,\" Cat blushed. \"Logan didn't seem to mind that I called him adorable.\"",
        "\"And I don't mind hearing it again,\" he grinned as he walked into the room, followed by Frankie's daughter, Callista. \"Besides, if you called me rugged and manly, Matteo might get jealous,\" he laughed.\n\n\"Too late, he is already grumbling that I was flirting with you too much,\" she grinned back, making him laugh again.\n\n\"I almost didn't recognise him with that smile on his face when he arrived to pick me up. He's been such a grumpy Gus for so long I had forgotten he's quite handsome when he smiles.\"\n\n\"I know, right?\" Cat laughed. \"He's adorable when he shows his dimples!\"\n\n\"Just like a puppy,\" Sebastian teased, but rather than rising to his brother's baiting, Logan merely shrugged and grinned.\n\nCallista had brought the paperwork for Cat, Arturo and Logan, along with another corporate card for Lisa, who was best placed to supply the household needs when the men were not available. Hugh and the security team would answer directly to Knox and would be supplied with what they needed from a different account. It was a lot to take in, but Cat knew she wouldn't have to worry too much, there were a lot of checks and balances in place, and Logan would be there to help her, not only with redesigning the house on the hill, but running both households.\n\nFrankie and Callista went downstairs to spend some time with Anna before dinner, as Sebastian asked to have access to her office and the tech there. Cat asked everyone to come with them, as she wanted to discuss some ideas that she would like their input on.\n\n\"I had always wanted a studio space out at the house on the hill. Vanessa designed this for me, but, in light of recent events, I think we could put most of this in storage and just leave a small corner for sketching tools and create an office that Arturo and I can share. Can we find some storage near the other house for it?\" she asked Logan.\n\n\"I don't see why not, but why don't you set this stuff up in one of the many unused rooms here as a retreat and still have your office here at the front of the house. You can have a studio in both houses, you know,\" Logan advised. \"I'm sure Ricco would insist, if he knew what you were thinking.\"\n\n\"Ricco?\" she tilted her head.\n\n\"He's pretty possessive about your artwork, he went up to the Donati gallery and escorted it back after the exhibition finished,\" Sebastian put in.\n\n\"I really do need to find time to finish that portrait for them,\" she sighed, motioning toward a canvas in the corner that had been covered with a sheet. \"Life has just been so crazy lately.\"\n\n\"We can schedule you for some time, and I will make sure you aren't disturbed,\" Arturo said easily.\n\n\"First let's find you a better space with some natural light,\" Aria said. \"I don't know what Vanessa was thinking sticking you in here,\" she shuddered, making Cat laugh.\n\n\"There is a particular painting I saw in the archive that I was hoping we could borrow and decorate the office around. Do you think we could look at the catalogue tomorrow?\" Cat asked Aria.\n\n\"Sebastian is here, we could look at it now online, if we ask him very nicely to hack into the archive files,\" Aria batted her eyelids at her cousin, who chuckled and shook his head.\n\n\"Fine, just let me set everything up first. Go look for the alternative studio or something for a few minutes,\" he suggested.\n\nIt was close to dinner when everyone started going back downstairs to the restaurant, and Cat walked toward her bedroom intending to freshen up with a quick shower before joining them.\n\n\"Cat,\" Sebastian said from behind her, making her turn to look at him. \"I was wrong, about that night I saw you with Ricco, and I apologise.\"\n\n\"Me too,\" she sighed. \"I shouldn't have spoken to you like that yesterday, but I guess I was trying to make a point, albeit badly.\"\n\n\"No, you made your point well. Only a few of us have taken the time to know you properly, but for me, I have never known Matt to be happier, even when he was with Nik. That's why I wasn't happy to see you with Ricco. You make Matt truly happy, and that should have been enough for me,\" Sebastian admitted.\n\n\"Matteo is lucky to have so many people who love him enough to want him to be happy,\" she smiled. \"I love him too, and I would never hurt him like that, but I guess you know that now.\"\n\n\"Yeah,\" he chuckled. \"I won't hold you up anymore, I'll see you downstairs.\" He turned and followed the others.\n\nCat had showered quickly and had planned to dress to impress on her first night as the future mother of this family in front of the entire extended family. She'd been thinking about it during the day and what she would wear. She wasn't keen on red, but she knew that was the colour of the family, and once again she considered her choice of dress as she struggled with the hooks and eyes on the corset she would need to get the right figure to make the most of the dress she had finally settled on.\n\n\"Do you need a hand with that?\" Ricco murmured huskily walking toward her.\n\n\"There are no knots involved,\" she teased, but gratefully removed her hands as he pulled her closer to the bed and sat down on the edge to concentrate on the task. Once done, he pulled her to straddle his lap and kissed her deeply.\n\n\"I can't think of one good reason not to make you late for dinner,\" he grinned, trailing kisses over her shoulder and over the swell of her breast above the corset.\n\n\"It's my first night after the announcement yesterday, I need to make a good impression,\" she smiled. \"even though you are very tempting right now. What day did we make our date for? I want to make sure Arturo doesn't book me into anything that night.\"\n\n\"I'll talk to him about it once I confirm with Matteo and Papa,\" Ricco smacked her ass lightly. \"If you don't move now, however, I won't be responsible for making you late.\"\n\nCat leaned in and kissed him deeply before scooting back off his lap and continuing to dress. Ricco watched, barely holding back his need for her as she wriggled into the tight form-fitting dress, ivory silk with hand painted blood red roses winding their way from the hem up over her hip and around the back to curl around one breast. He understood now why she had been struggling with the corset, it gave her figure real definition in the dress, and, together with the low square cut neckline and pencil skirt, she looked stunning, and he felt underdressed beside her without a jacket on. She finished off with a red lipstick that matched the roses, and he imagined seeing those lips wrapped around him later that night.\n\n\"What do you think? Will I make an impression?\" she asked a little shyly, still looking in the full-length mirror. \"It's not too much?\"\n\n\"You're perfect,\" Ricco murmured in a low heated voice. He stood and moved behind her, pressing against her so she could feel just how amazingly sexy she looked to him, his hands wrapping around her waist. He brushed her hair aside and kissed her neck, nibbling at her ear. \"This won't be a long dinner if I have anything to say about it.\"\n\n\"Let's go then,\" she smiled, \"After all this effort I don't want to be late.\"\n\n\"After you,\" he waved his hand and followed her from the room. Bradbury stood talking to another man in the foyer near the lift, and he looked up in surprise as Ricco and Cat approached. They all stood in the lift together, and Cat noticed that Bradbury continued to glance at her as if something was amiss, and she wondered if her lipstick had smudged.\n\n\"Is something wrong?\" she asked the man.\n\n\"You just remind me of somebody I used to know tonight, I'm sorry if I was staring,\" he said and turned to look straight ahead.\n\nRicco gave Cat a confused look and determined to find out more about the new security man tonight. They exited the lift and walked into the restaurant. A small hush fell, and the loud talking turned to quiet whispers and murmurs as they walked through the restaurant to greet the hosts, Stefano, Roberto and Theresa, and as tradition.\n\n\"You look lovely tonight,\" Theresa complimented Cat as Roberto smiled widely at her.\n\n\"I hope you rested well today?\" he asked.\n\n\"I did, thank you very much,\" she smiled. \"I hope you are getting enough rest too. I know Matteo and Ricco were both exhausted last night as well.\"\n\n\"Ricco never sleeps enough, but he will crash when necessary. It's up to you to ensure Matteo stops from time to time instead of napping between meetings and work,\" Roberto said seriously, avoiding her question about his own rest. \"Enjoy your dinner,\" he dismissed them before she could inquire after his health again.\n\n\"Hello, Wife,\" Matteo grinned, as Cat sat next to him and kissed him in greeting.\n\n\"Hello, husband,\" she grinned. \"What's for dinner? Ricco is starving,\" she grinned, and Matteo laughed at the ongoing joke.\n\n\"In more ways than one. You should see what's under that dress,\" he murmured softly to Matteo.\n\n\"Dessert?\" Matteo asked, raising an eyebrow.\n\n\"Definitely,\" Ricco nodded.\n\n\"I think I'm getting a headache!\" Cat shook her head at them.\n\n*****\n\n\"My turn,\" Matteo said, retrieving the box of specially made white leather cuffs he had given Cat on their first encounter in the white room at his last home. \"I don't have the patience for your rope tricks tonight.\" They hadn't lingered after the dinner, and nobody questioned that they were exhausted after the weekend's events.\n\n\"I'm in,\" Ricco grinned, holding his hands up and stepping back to watch Matteo set the scene.\n\nMatteo kissed Cat's neck as he unzipped her dress and let it fall from her shoulders, following it down her body with his hands, appreciating the shape the tight corset gave her figure. At her hips, he hooked his fingers into her panties and pulled them down her legs with the dress. Moving around to face her, he took in the beautiful sight of the woman he loved, looking at him with trust and obvious need in her eyes, and felt his own desire growing exponentially.\n\nCat took a shuddering breath as Matteo fastened the cuffs around her wrists. Then he produced a remote from his pocket and pressed a button. A metal carabiner on a chain pulley hanging from the iron ceiling grid lowered slowly. It stopped just above her head. Matteo secured the carabiner around the chain, linking the cuffs together, and pressed another button. Cat's arms were pulled above her head slowly as the chain retreated back into the pulley. She felt the pull stretch her limbs as she rose to her toes.\n\nRicco approached Cat, pulling her breasts up over the edge of the corset, exposing her nipples, and playing with them while Matteo turned her head toward him and captured her lips with his. She felt his need as he controlled the kiss completely, and trembled as Ricco kissed his way down from her neck to her right breast, licking her nipple. He moved to the left one as Matteo deepened the kiss. Matteo was rarely the more dominant of the two men in this room, but, as his hand gripped her chin and throat, she could feel the change in him tonight and wondered why for a mere moment before pain lanced into her nipples and she squealed into Matteo's kiss, pulling at the restraining chains and cuffs.\n\nMatteo stepped back, and she looked down, taking in the clamps attached with a short chain that adorned her breasts. Ricco moved in almost as quickly as Matteo retreated, covering her mouth with his. His hand grasped the back of her neck and her waist as he pushed his thigh between her legs. In her precarious position she was forced to ride his leg. Then he began moving, pushing his thigh insistently against her pussy. She could feel the coarse material of his jeans against her sensitive skin, and a wild heat built between her legs.\n\n\"Don't cum yet!\" Matteo growled the first words since starting the scene with her, making her whimper loudly into the kiss she still shared with Ricco.\n\nRicco broke the kiss, moving away slightly. But before she could catch her breath and calm down, Matteo dragged a finger lightly down her arm, caressing her armpit and tracing the side of her corset until he reached her hip. Then his index finger moved inward, tracing the bottom of the tight garment before moving lower over her mound and down into her slit. It rested right above her clit, waiting. Ricco smiled wickedly as he watched Matteo toy with her. And then, in one quick motion, Matteo slipped his fingers between her lips and pinched her clit before rolling it between his fingers, listening to her loud whimpers of painful pleasure.\n\nCat vaguely sensed the ceiling chain being lowered as Matteo continued to toy with her, sending her back towards the edge of ecstasy, and she lost her battle to hold back the orgasm that had been building since he had placed the cuffs on her, and she realised this scene would be harsh. Her head spun and she sagged slightly, despite Matteo holding her upright as Ricco re-cuffed her hands behind her back. She moaned softly as she was picked up and placed face down on a small padded bench.\n\nHer ankles were cuffed together and similarly fastened by a short chain to the wrist cuffs, so that she was pulled into a loose hog-tie position, her back arched, and her breasts, still clamped, pushed forward. Ricco stood in front of her as Matteo reached over and began playing with her hair, petting her softly and pulling it back into a ponytail that he wrapped in a leather thong and attached to her cuffs to keep her head raised. The height of the table and her current position left her staring at the bulging cock trapped in Ricco's jeans.\n\n\"What did you do wrong?\" Ricco asked, his voice deep and thick with desire.\n\nCat looked up at him with glazed eyes showing her confusion and said nothing.\n\n\"You came when your husband explicitly told you not to,\" he smirked. \"Did you not promise to love honour and obey him?\" Ricco questioned her, a teasing smile on his face as he looked up at Matteo and back down at Cat, who still wore traces of the pretty red lipstick he had so admired earlier tonight when she first applied it.\n\nCat gaped at him. There was no way she could have held that orgasm back, but before she could argue the point she squealed and bucked as she felt the stinger fall on her ass. Matteo's weapon of choice bit into her ass several times in quick succession, making her squeal and buck in the tight restraints.\n\n\"Shush,\" Ricco whispered, bending down and kissing her softly as the stinger bit into her flesh again. He drew back, leaving her, lips parted and eyes closed, waiting for more. Ricco unbuttoned his jeans and let them slide to the floor. Cat eyed his hard cock as he moved slowly forward to rest the tip on her parted bottom lip. She licked out, rolling her tongue around the head, and was rewarded when he fed her more. She strained to move her head, but she was locked in position and totally at the mercy of the two men she loved and trusted.\n\nMatteo aimed a well-placed sting between her legs, and as she widened her mouth to cry out, Ricco moved deeper, feeling the sweet vibrations of her cry through his cock. Painful heat seared through her clit and nipples, melding within her body, setting her mind on fire, and her body shook with the overwhelming sensations of what they were doing to her. Matteo stung her again, and she moaned, the vibrations from her throat making Ricco's cock pulse in her mouth. Slowly, he began thrusting in and out.\n\nThe stinging leather strap came down again, and painful heat continued to lance through her, keeping her heightened and on edge. Ricco continued to saw in and out of her mouth, making her drool and gag on his cock's large head. Every other thrust the strap would land, and pain and pleasure would lance through Cat's body, but never quite enough to put her over the edge again.\n\nRicco stopped momentarily, his cock buried deep in her mouth. He took the chain hanging between the clamps on her breasts, then he pulled out, tugging the chain with his movements. She moaned, drawing in a huge breath as the painful pleasure that ran through her body increased again. He watched her carefully, marvelling once at again at how much erotic pain she could take and transfer into pleasure.\n\nMatteo considered warning her a second time not to cum as he felt her body tense. All the muscles in her body were clenched with anticipation, and there was unbearable heat in her crotch. He decided against it, this wasn't real punishment, this was play, and he loved to watch her as her body succumbed to the pleasure of hard hot sex.\n\nRicco kept thrusting. Her nipples were overstimulated and her clit was on fire. Matteo watched, seeing the moment of no return, and tossed the stinger to the floor, landing his bare hand down on her red, hot ass.\n\n\"Come, now!\" Matteo commanded, his loud growl tearing through the sounds of sex that filled the room.\n\nCat came, screaming around the cock in her mouth and throat. The stimulation was too much, and Ricco came, emptying his cock into her mouth, watching it dribble from the corner of her lips before he withdrew completely, allowing her to swallow. He pushed his cock back into her mouth and pulled the clamps from her nipples roughly, making her scream again and groan deeply in pure pleasure.\n\nCat was breathing hard, her chest heaving, and, being slightly dazed, she was barely aware as they released her legs and hair from the immobilising restraints, keeping her hands bound behind her. She floated on a cloud of endorphins as her body sung with each nerve ending seeming to dance across her skin. It had been some time since they had used her this harshly, and realised, as she became aware that they were repositioning her, that they were nowhere near done with her tonight. Her legs fell over the edge of the bench, and she felt Matteo's hands on her hips as Ricco crouched down before her and kissed her panting lips and caressed her sore nipples.\n\nFrom behind, Cat felt Matteo's hands steadying her hips as he pressed the head of his cock against the entrance to her pussy. She moaned at the pleasure and twinge of pain that came when He pushed slightly into her, stretching her around him. He pushed, forcing his way into her slowly, making his cock seem even bigger in her sex fevered mind until he buried himself to the hilt inside her. He reached around and made a circle around her clit with one finger, teasing, but not touching it directly. Cat groaned in frustration as he pulled out just as slowly, and opened her eyes to see Ricco watching her intently as he continued to place soft kisses and caresses on her face and breasts.\n\nMatteo watched Cat relax under the slower softer pace they had begun and dug his fingers into her hips as he buried himself again in one violent thrust, making her cry out again. He circled her clit again, refusing to touch it. He began a steady rhythm of forceful thrusts that rocked Cat forward on the bench toward Ricco, who steadied her, continuing to stimulate her breasts, fuelling the fire that continued to run through her veins and over her skin. He slapped her already red ass, enjoying the feel of the heat on his thighs.\n\nMatteo moved faster, driving forward, stretching her and hitting a sweet spot deep inside. All the while he kept circling her clit but never touching it, keeping her on edge as they over stimulated her to the point that she involuntarily trembled between them. Ricco's hands became rougher on her breasts, and he claimed her mouth once more, kissing her deeply and swallowing her whimpering cries of pleasure, feeling his cock harden impossibly again. Matteo felt her trembling become more intense and pressed his thumb against the dark star of her ass and slowed his movements again, keeping her so close to the edge as he stretched her tightest hole.\n\nRicco clasped Cat's face between his hands, gazing at the unbelievable arousing expressions of pain and pleasure as Matteo eased his cock into her ass. He kissed her and soothed her, caressing her in soft counterpart to the painful stretching Matteo was causing her to endure.",
        "\"Fuck!\" Matteo growled in a long drawn out sound as he buried himself completely within her. He moved slowly, allowing her to adjust as her ass gripped him almost painfully in its tightness.\n\nCat floated on wave after wave of endorphins, her skin crawled, and every nerve fired electric jolts through her now. She was barely aware when Ricco moved from before her, and she felt like a ragdoll as Matteo lifted her up from the bench, holding her back against his body, his cock buried deep in her ass. Ricco appeared before her again, sitting on the bench, and she was lifted to straddle his thighs as he pulled her into his arms and applied gentle pressure to encourage her to sink down onto his cock as Matteo pulled out to reposition himself.\n\nRicco leaned back slightly, pulling her with him, his hands going to her ass and spreading the hot, red flesh wide when Matteo stepped up again and began easing himself into her ass. Ricco could feel his brother through the thin membrane separating them within her, and he groaned deeply as Matteo growled out his pleasure. Cat cried out in long whimpering whines as she was filled to overflowing. Her hips rocked under the slow, awkward movements of Matteo and Ricco as they found a rhythm together. The rocking pressed her clit against Ricco's pelvis and stimulated her further as he lowered his head to her nipples again.\n\nThis was a first for all three of them, a fantasy fulfilled for Ricco, but a totally new experience and desire for both Matteo and Cat. The frantic movements of the trio caused them to come rapidly. Cat stiffened and arched between them, her eyes rolling in her head as she came, jerking in spasms, and she floated away on the rush of endorphins they gave her. Matteo roared out his climax moments later, trying not to collapse on top of Cat and Ricco and holding himself buried within her as Ricco sought his ecstasy in short jerking awkward thrusts from beneath them. He added his voice to theirs and lay back on the small bench which barely reached his shoulder blades, clutching the unconscious woman he loved against his chest.\n\n\"Fuck,\" Matteo said in a whispering groan as he pulled his cock from her and staggered backwards, allowing Ricco to sit up properly, still cradling Cat in his lap.\n\n\"That was fucking unbelievable!\" Ricco said in an awed tone, and, groaning, stood from the bench to carry Cat back into the bedroom so they could clean and care for her after such complete use.\n\n*****\n\nCat woke to the smell of coffee and fluttered her eyes open. She could hear Matteo and Ricco talking quietly over her head as they lounged on the bed fully dressed as if for work.\n\n\"Good morning, beautiful,\" Ricco smiled as he noticed her come to life.\n\n\"Hi,\" she said in a raspy voice, and winced as she stretched.\n\n\"How are you feeling?\" Matteo asked quietly, leaning down to kiss her.\n\n\"I'm good, I just need a hot shower,\" she smiled softly, realising her raspy voice wouldn't fill them with the confidence that her words were meant to convey, and she reached up to touch his cheek. \"Don't look so worried, last night was great.\"\n\n\"Great?\" Ricco asked. \"More like un-fucking-believable! You are the most beautiful, sexy, amazing woman,\" he leaned down to kiss her as she blushed, making Matteo chuckle. \"You blow me away each and every day.\"\n\n\"He means 'us', you blow 'us' away, and we love you. Are you sure you're okay?\" he asked again.\n\n\"Yes, but coffee and a shower are needed,\" she said softly, and watched as Matteo put down his coffee and stood up from the bed.\n\n\"I'll help,\" he offered, and picked her up from the bed and carried her into the bathroom before placing her on her feet and kissing her properly before she could complain about morning breath. \"Don't take too long, I'll tell Lisa to have breakfast ready for you in twenty minutes.\"\n\n\"Okay,\" Cat agreed, stepping into the hot water and turning her back so it could run over her ass as she grimaced again. She saw him still watching her and sighed. \"It's not too painful, more just uncomfortable,\" she reassured him. \"I'm fine, honestly. I enjoyed every moment and wouldn't change a thing, I promise.\" She was glad, however, that they didn't use her like that every night and that she still got to enjoy the softer side of Matteo as well. She hadn't truly seen the softer side of Ricco since they had become intimate again, and she considered that. Perhaps, now that he knew her preferences, he had embraced his dominant side more fully.\n\nShe dressed carefully in a soft full-skirted dress and soft underwear before making her way out to the kitchen, pleased to find that the men who occupied it yesterday were not sitting there chatting. She took a seat at the table and was surprised to find a full hot breakfast awaited her.\n\n\"You've been running yourself ragged lately and barely eating, so, just once, eat a proper breakfast,\" Matteo said.\n\n\"Humour him, please,\" Ricco said gently. \"We have enough to worry about without worrying that you aren't looking after yourself properly.\"\n\nCat opened her mouth to argue that she was a big girl and had been looking after herself for a very long time, but could see the concern in both of their eyes. After a moment she nodded and took two pieces of toast and made herself a bacon and egg sandwich, smothering it in sauce before taking a bite and murmuring in surprised appreciation.\n\n\"Well, that's one way to do it,\" Ricco chuckled.\n\n\"What are your plans for today?\" Matteo asked as he continued to eat the omelette Lisa had made for him.\n\n\"I plan to spend a shit load of your money today,\" she grinned widely and took another bite of her sandwich as he choked on his food at her quick response. \"I have all these shiny new credit cards that I need to break in.\"\n\n\"It's our money, Mrs. Vitali,\" he chuckled. \"You can do what you want with it. But would you care to tell me any details for today's spending spree?\"\n\n\"I'm going to move my studio into a room with better light and create an office for Arturo and me, now that I know that being your wife comes with far more strings attached than I ever anticipated,\" she said nonchalantly. \"Aria is going to help me, and if you don't like it or think it doesn't match the rest of the d\u00e9cor we can just keep the door shut.\"\n\n\"I'm sure that won't be necessary,\" he chuckled again and was glad she seemed to be embracing all that came with being his wife. The staff and the money and all the things she had baulked at initially seemed to be becoming accepted as part of her world now.\n\n\"Oh, and the security guy, the older one,\" she said quietly, unsure if he was close by. \"he looks at me weirdly, and it creeps me out. Maybe I don't need so much security?\" She asked tentatively.\n\n\"Bradbury?\" Matteo queried. \"He is very good at what he does and comes highly recommended. Why don't we give him more than one day to see how he works out,\" he suggested.\n\n\"I guess,\" she conceded. \"But, Ricco, you saw him in the elevator on the way down to dinner last night, right?\"\n\n\"He needs to watch you, Cat. He can't keep you safe if he never looks at you,\" Matteo said. \"Hugh is in charge of security for now, so if you have a problem throughout the day let him know, okay? Logan, Hugh and Arturo are here to protect you above all else,\" he said seriously. \"I want you safe and healthy and happy always.\" He leaned over and kissed her forehead. She turned to look at Ricco, who was unusually silent.\n\n\"He's the boss, Cat, and, in this case, I have to agree with him. You are the most important person, not just to us, but to everyone in this family. You need to consider that before making any decisions that would put you at risk,\" Ricco said so reasonably she nodded softly, accepting their concerns.\n\n\"Take Hugh, and whoever is on duty with you when you go shopping, we still haven't found out who sent you that hoax letter,\" Matteo made the point he needed to, relieved that she hadn't fought him on anything he had said this morning. She was even picking at some fruit after finishing her sandwich.\n\n\"I get it,\" she nodded. \"The letter scared me enough to take all the threats seriously. I won't argue with the need for security. He just makes me feel... I don't know, it's just weird.\"\n\n\"I'm sorry you were scared by the letter, but I'm glad you finally understand the need for the security,\" Matteo pulled her into his arms. \"David and Mick are fine, Frankie and Anna have adopted them, and I have guys at work keeping an eye on them,\" he reassured her.\n\n\"Speaking of work, shouldn't you two be going so I can get on with mine?\" she raised her eyebrows. \"How on earth can I spend all your money without guilt if you aren't out there bringing home the bacon?\" she teased.\n\n\"Lucky there two of us then, isn't it,\" Matteo chuckled getting to his feet. \"We have meetings, but work will wait until after the gathering. By the way, what number is your Hunt team again?\" he asked. \"I think they are putting up new standings today, and I wanted to see if we needed to get involved again.\"\n\n\"I doubt that. Logan has it all under control. He and Tate are coming for breakfast tomorrow to talk about it. Maybe Kalum too,\" she said easily.\n\n\"I don't think she's going to tell you, but you are in a unique position to put some pressure on Logan,\" Ricco grinned.\n\n\"True. Are we meeting with him today?\" He glanced at Cat and saw her shake her head.\n\n\"Good luck with that,\" she smiled, not caring if they knew or not, but not wanting to be the one in her team that caved and told their number first.\n\n\"We'll see you at lunch. There's an event today, and we're expected,\" he informed her. \"Arturo has it in your calendar.\"\n\n\"Okay, but if you keep feeding me big meals like this I am going to end up as big as a house!\" she complained.\n\n\"Oh, I'm sure we can help you work off the calories,\" Ricco grinned and kissed her. \"Have a good morning.\"\n\n\"Thanks, you too,\" she smiled, accepted a kiss from Matteo as well and watched them walk out of the kitchen toward the elevator.\n\nNo sooner had they left than Arturo joined her with her driver and head of her personal security, Hugh. They spoke about being her core team and that anything she needed one of them would be able to assist with. Once the gathering was complete, Logan would join them for a weekly meeting, as she would have stewardship of the maintenance and running of both households, although the day to day details would rest with the three of them.\n\nShe didn't argue the point, but she felt the pull of the power she knew she held being wrested from her as Arturo spoke with authority as if expecting her to just allow them to run her life and give her little option. These men would find out very quickly that she was not about to let anyone run her life for her. Cat had determined, after her horrific day of finding out just what was expected of her, to embrace the life she had been given by Matteo.\n\nShe had been poor, very poor, and knew she never wanted to feel that way again, not knowing where her next meal was going to come from. Being in a position to either add to or start a charity for children in similar circumstance gave her a good feeling. In the last twenty-four hours, she had stopped telling herself she wasn't good enough and started to believe the things she had said to the circle of women who would support her to navigate this family. It didn't matter who thought she wasn't good enough, smart enough, or had the right pedigree now, she was Mrs. Matteo Vitali and the mother of this family, and there was little anyone, even she, could do to argue with that. The security was a pain, she admitted, but it wouldn't be for long, she hoped, and she would honestly enjoy working with Logan, and she imagined once she made herself clear she would even enjoy working with these men.\n\nOnce Cat had embraced her fate she became busier than ever. She attended every event of the gathering over the final days meeting and talking to even more people to the point of beginning to become confused as to who belonged to who in which family. Rather than feeling exhausted, however, she felt invigorated by the constant workload she had taken on and found that, being able to rely on the teams of people around her, she was able to accomplish a lot more than she ever could on her own.\n\nWhile Sonya had not apologised in front of the other women of the circle, she had, as Marina suggested, become one of her biggest supporters, and any other reservations seemed to fall by the wayside as Cat was always present and available to the entire family during the events and meals provided for the gathering. She'd put everything she wanted to do for herself on hold for the family and to be the woman that Matteo and Ricco needed her to be.\n\n*****\n\n\"Are you ready for this?\" Ricco asked as he escorted her down to the final celebration of the gathering at the end of the second week.\n\n\"Why wouldn't I be?\" she frowned at him. \"Is there something I should know about tonight?\"\n\n\"The hunt winners will be announced,\" he shrugged, \"That usually causes some drama and speculation,\" he warned.\n\n\"People will think we cheated?\" she asked.\n\n\"Are you that sure of winning?\" he raised an eyebrow.\n\n\"More like hopeful,\" she laughed. \"I think Logan and Tate will be devastated if we don't, and Kalum gave us a big speech about second being the first loser; and he wasn't a loser, so there's some pressure, and I have not helped at all this week, except for one small thing,\" she sighed. \"If we do win it will be because of Tate and Logan, because Kalum has done even less than me, I think.\"\n\n\"And here is where I leave you,\" Ricco said as Kalum walked toward him. \"Stay close to Kalum, okay?\"\n\n\"Okay,\" she said cautiously as he leaned down to brush his lips against hers lightly.\n\n\"Good luck,\" he said, and turned towards to ballroom.\n\n\"Time for the big reveal. You ready?\" Kalum asked.\n\n\"Why does everyone keep asking me that?\" she looked up at Kalum.\n\n\"Winning this thing is a big deal, and we have a good shot, thanks to Logan and Tate,\" he said. \"You know there are rewards, right?\"\n\n\"Bragging rights?\" she laughed.\n\n\"That, and you can ask the head of the family for something that is within his power to give,\" Kalum said.\n\n\"That's a pretty broad range there,\" she said, considering the idea. \"I already have more than I could ever have imagined. I doubt there is anything I could ask Roberto for after he gave me, not one, but two of his sons.\"\n\n\"You're missing the bigger picture here,\" he chuckled. \"This is Matteo's first year as head of the family alongside his father. Whatever you ask him he couldn't deny you if it were within his power.\"\n\n\"I hate to break this to you, but anything I've ever asked Matteo for he has given me, except my freedom, and that is not within his power at the moment.\" She indicated Bradbury, who stood near the elevator she had come out of minutes before.\n\n\"I was going to suggest a dream honeymoon, but if you don't need one,\" he grinned at her.\n\n\"Maybe when I get my passport,\" she laughed, and they entered the room, seeing just ten teams in the room all gathered together in little clusters. She could see most of Matteo's siblings and a few of the cousins she knew well. She wasn't surprised that Lucca, Chase and Sebastian were there, as she went to sit with Logan and Tate.\n\n\"It's a bit late for a pep talk. Do we have any idea where we stand?\" Kalum asked the group.\n\n\"The last day of hunting was Friday,\" Logan said. \"Everything had to be in yesterday morning for counting. I saved quite a lot of the impossible items until the last count in case anyone had worked out our number. We were always in the top ten though.\"\n\n\"Looks like we're finally getting Matteo's Lamborghini,\" Raphael said, walking towards where Cat stood.\n\n\"Did they announce the winning team already?\" she asked curiously.\n\n\"No, but we were in the lead the whole way through, I doubt any of you could have caught us,\" he shrugged with the confidence of youth.\n\n\"Unless some of the teams were holding back some big point items until the end,\" Lucca said with a smirk, coming to join them.\n\n\"Bastard,\" Raphael growled under his breath. \"I doubt it would be enough to make up the difference, we were way in front on Wednesday's count.\"\n\n\"I guess we'll find out,\" Lucca continued to smirk at his little brother. Five numbers flashed up on the screen at the front of the room. Chase groaned and walked toward where Tate stood.\n\n\"You beat me, little chick. Good luck taking out Sebastian, I heard he stole Cat's garter from Logan at the house the other night,\" he kissed her and wandered out of the room.\n\n\"That wasn't my garter,\" Cat laughed, making Chase look over his shoulder and frown. She realised her mistake a moment later as several pairs of eyes turned on her.\n\n\"Why did Marina think it was?\" Lucca asked seriously.\n\n\"She had a couple of red herrings at the wedding,\" Kalum laughed. \"If you think Matt was giving that up easily, you're mistaken. He told me he put it in his office safe with his father so anyone claiming to have it for the hunt will be disqualified.\"\n\n\"Luckily Matt told me about that,\" Sebastian chuckled. \"He was pretty adamant about people keeping their hands off your underwear.\"\n\nRaphael swore and narrowed his eyes as two more numbers came up on the screen, and two more teams, including his, left the room, leaving the final three.\n\n\"What happens now? Do they call us one by one?\" Cat asked Lucca.\n\n\"No, we all go back in, then they go through the sections of the list with percentages and points awarded. It's a pretty long drawn out process, but you don't have to stay if you don't want to, I can tell you our winning score in the morning if you like,\" Lucca offered as if it was a foregone conclusion.\n\n\"I haven't been much help, and neither has Kalum, as far as I know, but I would bet on Tate and Logan beating you,\" Cat said confidently.\n\n\"Alright, I'll take that bet,\" Sebastian said, joining their conversation. \"What's the ante?\" Cat turned to look at him, considering his words.\n\n\"A full day working for me,\" Cat said. \"If I lose I will come and play computer games with you or fly your drones for a day,\" she teased.\n\n\"I think I can find something more interesting for you to do,\" Sebastian smiled wickedly. \"Done,\" he said, holding out his hand to shake hers.\n\n\"Great. It's been forever since I've painted with a live nude model,\" she giggled.\n\n\"I'm not shy,\" he shrugged. \"You in?\" he turned to Lucca.\n\n\"Yeah, alright, one full workday,\" he agreed, shaking Cat's hand. \"My work days are long, you might want to prepare your husband for that, because a bet's a bet, even if I do work for him.\"\n\n\"What is it you do again?\" she laughed. \"I'm not worried, I have the utmost faith in Logan and Tate.\"\n\n\"Shall we go find out then?\" Thomas asked, seeing the final three numbers flash up on the screen.\n\n\"I think I need to put a bell on you or something! It's crazy the way you can sneak up on people!\" Cat said with a hand on her chest as she looked at Thomas.\n\n\"I would love that!\" Tate exclaimed. \"You have no idea what it was like growing up with him in the house always jumping out and scaring people. He terrified my friends.\"\n\n\"I'll ask Matteo when we win,\" Cat laughed, linking arms with Tate and heading toward the ballroom.\n\nThey were guided in to sit at one long table together, all facing the rest of the room and a large screen on the far wall. Cat sat between Kalum and Logan at one end of the table, which stood on a small dais overlooking the room, as if they were on show to the room. As Lucca had warned, it was a long drawn out process. The scores for the easy tasks were put up during the serving of the entr\u00e9e, and each of the three teams had completed the list in its entirety.\n\n\"You guys did such a good job!\" Cat whispered to Logan and Tate who sat beside her. Throughout the long meal of five courses, each section of the list was shown with the tally of what the three remaining teams had scored. The scores were fairly close, and they all watched the screen as the impossible clues were put up, along with the answers the teams gave, which varied a lot, surprisingly. There was a rumble through the room and along their table as they questioned which was the right answer.",
        "The final count seemed to go so slowly as each question was revisited and explained tediously by the hunt Master, Stefano, before the correct answer was given. Cat gave up listening and tried to sneak away to the bathroom while everyone was watching the screen.\n\n\"Wait!\" Kalum looked at her in alarm. He had promised not to let her out of his sight tonight.\n\n\"I'm just going to the bathroom, Kalum,\" she whispered in frustration. \"I am sure I can make it on my own.\"\n\n\"I'll go with you,\" Tate said.\n\n\"Problem?\" Thomas asked, appearing behind her as if out of nowhere.\n\n\"Oh, for goodness sakes, I am surrounded by family, friends and personal security! You all just need to chill!\" Cat said, and stormed off toward the bathroom, aware that people nearby had turned to look at her. This was Matteo's fault, obviously, with his paranoia over not being able to find out who was behind the copycat incidents that had occurred over the weekend of their wedding.\n\n\"Pretty frustrating, huh?\" Tate asked, following her into the bathroom.\n\n\"Just a tad,\" Cat sighed. \"I'm sorry, it just gets to me sometimes. I understand why Matteo is so overprotective, but, honestly, here, of all places.\"\n\n\"Oh, Cat, you really don't understand, do you?\" Tate laughed lightly. \"It's not Matteo, it's the table. Chase told me what you did on the day they all found out. How you went around all of the cousins and told them the best things about themselves. Things they thought no one else noticed. Except you noticed, you took the time to see the best bits of all of them. Every single one of those guys is a little in love with you right now, and even if Matteo gave you all the freedom in the world, they would be watching over you. I actually think Matt's brothers were a little jealous of that.\"\n\n\"Jealous that I got to know their cousins a little bit?\" Cat came out of the stall and looked curiously at Tate.\n\n\"Well, you didn't list off the best attributes of his brothers, did you?\" she asked.\n\n\"I also wasn't that nice to Sebastian on that day,\" she sighed.\n\n\"Well, as far as my brothers are concerned you can do no wrong,\" Tate laughed. \"My life wouldn't have been worth living if I didn't follow you in here,\" she giggled. \"Even my sister thinks you're great, and I don't think she likes anyone.\"\n\n\"Someone told me Logan didn't like anyone either, and you two obviously get along like a house on fire,\" Cat argued.\n\n\"Everyone likes me, I don't give them a choice,\" she grinned. \"We better go back before one of my brother's bursts in here looking for us.\"\n\n\"Okay, thank you, Tate,\" Cat said genuinely. Tate had unknowingly given her a lot to think about, and she considered what she would do over the next week to make sure the brothers knew she had gotten to know them as well. They opened the door to find Thomas lounging nearby and grinned at each other. \"I've just decided what I am going to ask for if we win,\" Cat laughed.\n\n\"What do you mean, if?\" Tate asked. \"It's in the bag! I've worked my butt off this week to make sure of it.\"\n\n\"Okay, when we win,\" Cat conceded as they got back to their chairs. \"Thomas is getting a bell!\" She laughed as he scowled at her.\n\n\"It's almost over,\" Logan whispered to Cat as she took her seat. \"Sebastian's team can't catch up now, but Lucca is close, and might be just ahead,\" he said, concentrating on the screen.\n\nA large part of Cat wanted Lucca to win. He needed to win over Matteo as much as Logan needed to beat Sebastian, which at this point he obviously had. Lucca was the brother Matteo could truly rely on, whether he realised it or not. He picked up the slack at work, did whatever his family wanted or needed of him without complaint or delay. He was a true family man, and he idolised his biggest brother. She truly wanted him to win at this point, especially after what Tate had said in the bathroom about his brothers feeling jealous that she hadn't spoken about them in the Athenaeum when she was trying to prove herself.\n\nThe other part of her mind remembered the bet she had made and worried what a day working for Lucca or Sebastian might entail and if they would hold her to the bet. She waited and watched with the others as the scores rose and evened out. This wasn't the landslide Logan and Tate had predicted, and she could see Kalum becoming tense, his competitive nature showing through.\n\n\"It doesn't matter what happens now, because you still beat Sebastian,\" Cat said quietly to Logan.\n\n\"That's true, I guess, but I still want to win,\" he grinned.\n\nIt was close, and once again Cat watched the screen as Stefano spoke about the questions and answers.\n\n\"For the first time ever in the history of our hunt we have two teams with an equal score!\" Stefano finally announced. A murmur went around the room, and Matteo came to his feet.\n\n\"This can be decided easily!\" Matteo announced loudly, quietening the room. \"Both captains can have thirty seconds to convince me to give you the one item I withheld from the collection! Logan?\" he invited his young cousin to speak first. \"Why should I give you the garter?\"\n\n\"This is a no-brainer, Matteo. The girl who so beautifully wore that for you less than a week ago sits here beside me on my team. I'm sure she would appreciate its return,\" he grinned at Matteo and turned to Lucca, who came to his feet.\n\n\"What can I say, except I understand you need to give it to Catriona and apologise to my team,\" he shrugged in defeat and retook his seat.\n\nMatteo chuckled and turned to confer with his fathers before saying anything else. Pulling the garter from his pocket as if he knew this would happen, he walked the length of the ballroom to where the hunters sat, and smiled. He went to Cat first and kissed her lightly. \"Ricco and I gave you a lot of help, and he did the hunt on his own,\" he murmured in her ear and smiled, handing the circle of ivory and gold lace to Lucca.\n\n\"Congratulations, little brother,\" he grinned into Lucca's stunned expression. \"You deserve it, and Cat will say the same thing, eventually.\" He heard both Kalum and Logan groan, but Tate, as always, laughed and rushed to congratulate the other team.\n\n\"I'm guessing Cat didn't tell you about the little side bet she had going with Sebastian and me,\" Lucca chuckled. \"I'll let you know which day works best for me,\" he said, smirking at Cat. \"Maybe we should settle the bet on Monday before you have the chance to conveniently forget.\"\n\n\"Fine, Monday,\" she sighed. \"I'll tell you about it later,\" she kissed Matteo.\n\n\"I believe that the bet was that you would win, which you didn't. So it seems you owe me a day as well,\" Sebastian said smugly.\n\n\"That's great, actually, because CJ Donati is waiting for us to contact him about when we are both available to a conference call,\" Cat said sweetly. \"We could kill two birds with one stone, so to speak.\"\n\n\"You and I obviously need to talk about your gambling problem,\" Matteo frowned at her.\n\n\"Don't worry, your money is safe, I would never bet for something as common as cash,\" she laughed. \"That Lamborghini that everyone wants, on the other hand...\"\n\n\"You didn't!\" he gaped at her.\n\n\"No, but just keep that In mind when I run off with your brother on Monday. It could have been worse,\" she advised him, trying to stifle her laugh as he looked anything but impressed by the situation.\n\n\"You can't complain about not giving her the win now, Matt,\" Logan patted his shoulder.\n\n\"Yeah, you only have yourself to blame for giving away your wife for the next few days,\" Kalum commiserated and clapped his shoulder.\n\n\"You know this isn't happening, right?\" Matteo growled at Lucca and Sebastian.\n\n\"You can't do that! I don't renege on bets!\" Cat gasped at Matteo. \"Monday is fine, just text me what time I have to be there. Be warned, he will probably make me bring along a big conspicuous friend to follow us around all day.\"\n\n\"I'll text you,\" Lucca said. \"Thanks again, Matt, this is going to be more fun than the hunt!\" Both Lucca and Sebastian laughed and walked away, shaking their heads.\n\n\"You should start explaining before my imagination fills in all of the blanks,\" Matteo warned her, but she just laughed and kissed him.\n\n\"I love you, so much,\" she smiled widely and kissed him again.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "dessert",
        "gamble",
        "menage-a-trois",
        "winners/losers",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-27"
}