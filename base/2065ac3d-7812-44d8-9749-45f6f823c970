{
    "title": "Colleen Ch. 02",
    "pages": [
        "Copyright \u00a9 2005 Texas Refugee. All rights reserved.\n\nWarning!\n\nThis is not intended to be a stand alone story; it begins where the last one left off. If you have not read the first part, or some time has passed since reading the first part, you may want to read part one which is titled (oddly enough) \"Colleen.\" You don't have to, it's just a suggestion, but if you don't know what is going on, don't blame me. Remember, I warned you.\n\n~~~~~*~~~~~\n\n\"Girls, meet you new sister, Noelle Rose O'Conner.\"\n\nMeghan and Molly were literally shaking from excitement, their smiles as wide as it was possible to stretch. Patricia was studying Noelle's face intently and then whispered, \"she looks just like Aunt Colleen...'cept no hair.\"\n\nMom pulled up a chair to the side of the bed. She gently took the baby from Colleen and sat down. Meghan, now age eight, Molly, seven and Patricia, three years old, crowded around her and continued to watch the baby up close as she slept. Mom studied the three girls that surrounded her and then the baby before raising her head. She had that contented half smile that she and Colleen share and said, \"When it comes to making babies, my kids do a pretty good job.\"\n\nEveryone took turns holding Noelle for at least a few minutes. Even Patricia got a chance when she sat in Sharon's lap and Sharon helped her hold the tiny bundle tightly wrapped in the blanket.\n\nJimmy and Mike showed up at the hospital just after lunch and the nurse told us that everyone would have to visit in shifts because the room was too crowded. As the sun was going down, Jimmy, Mike, Sharon and Patricia got ready to head back to Santa Teresa. Mi Lin had stayed behind to watch all of the cousins and get everything ready for the Christmas dinner. Colleen got a hug from Mike and Jimmy and Noelle got a tickle under the chin and kiss on the forehead. I got a handshake and a slap on the back. As he left the room Jimmy said, \"It's a good thing she looks like Colleen and not you, otherwise the poor kid would never get a date when she grows up.\"\n\nColleen was getting tired so Mom took Meghan and Molly home to have dinner and get some sleep. Colleen and Noelle could come home the next day as soon as the pediatrician had checked Noelle and given the seal of approval. Mom was going to stay with us for a few days to help out until Colleen was back up to speed. Everyone tried to get me to go home and get some rest but I was adamant. Ever since our first date, Colleen and I had not spent one single night apart and that was not about to change.\n\nI sat in the chair next to the bed holding Noelle. Colleen lay on her side watching us and softly talking to me until she slowly closed her eyes and went to sleep. Holding my daughter close to me, I felt emotions that I had never experienced before or even dreamed were possible.\n\nI suppose they were the same emotions that my father had felt when his children were born. They were feelings of intense love and awe at the wonder that I held in my hands. I knew that I would lay down my life to protect this tiny life from the evil that is out there in the world. I looked over at Colleen and watched her breathing, thinking, \"Good Lord, she even smiles in her sleep.\"\n\nIt was as if someone had slapped me awake from a deep sleep and everything became crystal clear to me. Looking at Colleen and Noelle I suddenly understood what the word family meant. All of the things that my father had said to us as children about family being the most important part of a person's life came rushing back to me. I had to smile and finally accepted that maybe Dad knew what he was talking about after all.\n\nI will let you in on a dirty little secret. There is another emotion that all guys feel, and if you confront them, they will deny it. \n\nThe first time we hold our newborn child, we are scared shitless.\n\nWe are afraid that somehow we will fail as fathers, that we will do something that will screw up our child's life. I was almost trembling from this combination of love and fear that were raging inside me when Noelle opened her eyes. She looked at me with an expression that said, \"It's ok Dad, you can do this,\" then closed her eyes and went back to sleep. After that I calmed down and knew that once again my life had made a major shift and that it was all for the good.\n\nEventually the nurse came to take Noelle back to the nursery. She advised me to get some sleep while I still could. It wasn't until later after we got home from the hospital that I could appreciate what she was telling me. As the nurse left and closed the door, I reached over to hold Colleen's hand.\n\nShe slowly opened her eyes and whispered, \"hey sweetie.\"\n\n\"Hey yourself.\"\n\nColleen gave me her half smile and asked, \"Have I told you today that I love you?\"\n\n\"Not yet, you were kind of busy earlier.\"\n\n\"Oh yeah, that whole giving birth thing...I love you.\"\n\n\"I love you too. Noelle is beautiful.\"\n\n\"I know.\" With that she squeezed my hand as her eyelids drifted shut and went back to sleep.\n\nI sat next to her, again just watching her breathe as she slept. This was all new to me, unexplored territory. The only thing that equaled my love for Colleen was my love for Noelle. I should have experienced this a year ago, but Barbara had ripped that away from me and left my life in shambles. It was my sister Colleen, along with Meghan and Molly that had helped me glue the pieces of my life back together. Eventually I leaned forward and lay my head on the bed next to Colleen's and fell asleep.\n\nI felt movement on the bed and could sense daylight through my closed eyelids. I got one eye open and started to sit up when my back rejected that notion. I struggled to get my spinal column into a straight line when I saw Colleen sitting on the side of the bed watching, trying not to laugh. With great difficulty I got my legs to unfold and stood up. Colleen hopped off the bed and came over to put her arms around my waist.\n\n\"You should have gone home and gotten a decent night's sleep.\"\n\n\"No...I'm fine...I'm ok...except...I...I can't feel...my left foot.\"\n\nColleen patted me on the check and said, \"Poor baby.\" This was followed with a quick hug and a kiss.\n\n\"Why don't you go downstairs to the cafeteria and get yourself something to eat. Just be back by 8:30, that's when the pediatrician starts her rounds. We should be able to get out of here by noontime.\"\n\nAs I headed out the door I heard her call out, \"And bring me some coffee...\"\n\nDown in the cafeteria I sat and had a muffin and a glass of milk while I finished waking up, getting the rest of the kinks out of my body from sleeping in the chair all night. I grabbed two coffees and headed back to Colleen's room to wait for Noelle's release so we could go home. I stepped into the room and stood there like the village idiot with my mouth hanging open.\n\nThere are times when you already know what to expect and have done all the mental preparation that you possibly can and yet when the event actually happens, you're still left dazed and confused.\n\nThis was one of those moments.\n\nColleen was sitting in the chair at the side of the bed with the front of her gown open. She held Noelle to her chest, nursing at her breast.\n\nOf course I had seen other women breast feeding their children, but this was different. This was my sister Colleen, my best friend, nursing our daughter. I stood there spellbound, drinking in the sight, totally incapable of speech. Reaching out her hand, Colleen smiled at me and spoke of the only thing on her mind at that moment.\n\n\"Give me that coffee before I die.\"\n\nIt was a good thing that I had put lids on the paper coffee cups because the way that my hands were shaking, I would have scalded Noelle as I handed the cup to Colleen. Colleen knew instantly what was going through my mind at that moment.\n\n\"Relax, you're going to do fine.\"\n\n\"That's easy for you to say, you've already done this twice before. This fatherhood thing is leaving me a little shaky. What if I drop her on her head or something?\"\n\nColleen laughed, \"That's a chance we'll just have to take.\"\n\nMoments later the pediatrician walked in and said good morning to everyone. She was Meghan and Molly's pediatrician and looked more like someone's grandmother than a highly trained doctor. Colleen had told me months before that she was the best in the county if not the state and she immediately put my mind at ease. She lay Noelle in the hospital bassinet and opened the blanket that was tightly wrapped around her. She began to gently poke and prod different parts of Noelle's body and listened with the stethoscope. She laughed when Noelle smiled in her sleep. \n\n\"Ok, ten fingers and ten toes, got a great start there.\" She wrote something on small business card and handed it to Colleen. \"Call the office and get an appointment for a one week check up. She's a beautiful baby and she's going to break a lot of hearts when she turns sixteen. Now you people get out of here and enjoy what's left of Christmas.\"\n\nI called Mom at the house while Colleen was taking care of all the paperwork to leave. We walked out of the hospital at the same time that Mom drove up to the sidewalk in Colleen's car. I was holding Noelle as Mom hopped out of the car, walked around and opened the door to the back seat. I stood there staring at Mom and then at the infant car seat that was sitting on the seat. Finally Mom pointed to Noelle then at the car seat. Colleen and Mom began laughing as they watched me struggle to figure out how to strap Noelle in to the car seat. At last Colleen pulled me back and went up on her toes to give me a kiss.\n\n\"You really are new at this. Don't worry, we'll get you trained in no time.\"\n\nWe got back to the house just before lunchtime. The teen-aged girl from across the street had been recruited to watch Meghan and Molly while Mom had come to pick us up at the hospital. She was quick to let us know that she had a lot experience babysitting infants and was always available at a reasonable price. Colleen immediately got her telephone number and told her that we would definitely be calling her in the future.\n\nMeghan and Molly had already eaten lunch so we went into the living room to relax for a few minutes before getting lunch for ourselves. As we stepped through the archway Colleen and I were surprised at what we saw. The Christmas tree was in the corner just as we had left it the day before, the presents still under the tree, unopened. But there was something new there.\n\nNext to the tree was a rocking chair. It was at least sixty years old and had been painted black when it was new. The paint was worn on the edges but was still in good condition and all of the joints were still as tight as the day it was made. The back was straight and the arms were the perfect height for holding and rocking a baby. Colleen and I recognized it instantly.\n\nThe chair had been a present from our grandfather to our grandmother. It had been passed on to Mom when Colleen was born and she had held all four of her children in this chair, accepting their hugs and kissing their cut fingers. Now it was sitting in our living room. Colleen turned to Mom.\n\n\"How did this get here?\"\n\n\"I had Mike and Jimmy bring it when they came up yesterday.\"\n\n\"Why?\"\n\n\"Well, it's not like I'm going to be needing it, and in another thirty years you can decide which of your daughters will get it to pass it on to her daughter.\"\n\nColleen gave Mom a hug, nearly crushing Noelle in the process. She sat down in the rocking chair with the baby and Colleen and Noelle both had a look of utter bliss on their faces. Colleen looked at Meghan and Molly and said, \"So girls, I think it's time to open some Christmas presents. Who wants to start?\"\n\nMeghan and Molly looked at each other then went over and reached under the tree. They walked to the rocking chair, each holding a present that Colleen and I had not seen before. The packages were wrapped in paper of an indeterminate nature and held together with many yards of scotch tape. On the outside of each present, written in a child's handwriting was a single word, \"Noelle.\" They walked over and lay the presents on Colleen's lap next to the baby. Then Mehgan spoke.\n\n\"Santa didn't know about Noelle so these are for her.\"\n\nColleen handed the baby to me and carefully opened the presents. She stared at the contents for the longest time and then with tears in her eyes she hugged Meghan and Molly and whispered, \"Thank you.\"\n\nInside the packages was Meghan's baby blanket and Molly's small teddy bear. They were the objects that were most important to the girls and every night they refused to go to sleep unless they could hold them tightly to their small bodies. Now, they were gifts to their baby sister. Children aren't supposed to make their Mom and Dad cry like that, it blows the strong parent image right out of the water.\n\nI stared in amazement at the two young girls who less than forty-eight hours before had asked if they could call me Daddy. It was Mom who was able to speak first.\n\n\"Those are very special gifts. I'm sure that Noelle will love them forever. But I think it's time for you girls to open your presents.\"\n\nWith squeals of delight and hand clapping, they both ran to the tree and began pulling the presents out. As they opened each present in turn, they brought it over and held it up for Noelle to see, even though she was contentedly sleeping through everything. This symbolized how the bond between our daughters was to strengthen and grow with each passing day.\n\nAt long last the ordeal of opening the Christmas presents was over and we were all picking up the debris when I suddenly looked over at Colleen in great embarrassment.\n\n\"Damn, with everything that's been happening lately I completely forgot to get you a present...I am so sorry.\"\n\nColleen hugged Noelle closer to her chest and gave me her contented half smile.\n\n\"I think you gave me the perfect Christmas present.\"\n\nAfter the adults had finally gotten a chance eat, we sat around the living room relaxing, just talking. It had been awhile since we had been able to have Mom all to ourselves for any length of time so Colleen and I were very happy. The weather was cooperating so Meghan and Molly were allowed to go outside and play in the yard. They didn't understand when we told them that it probably wasn't a good idea to take Noelle for a ride in the wagon just yet.\n\nIt was that afternoon that I had my next lesson in fatherhood...changing the diaper. This is a process that while second nature to female of the species, is a definite test of the male's dexterity and commitment to their offspring. I learned early on that it is a good idea to have a fresh roll of duct tape close at hand to insure a successful completion of this exercise.\n\nLater I learned another interesting fact regarding this peculiar parenting skill. If the child is breast feeding, never...ever...and I mean NEVER allow the mother to eat Mexican food. The results the next day will have you racing to the telephone to call the Office of Emergency Services, begging them to send the Toxic Waste Disposal Unit to your house. Remember, what goes in the mother's mouth comes out the baby's bottom and if the windows in the house are painted shut, you are in for a very unpleasant three days.\n\nAs the day wound down, Meghan and Molly had their only argument of the Christmas season. They both wanted Grandma to sleep in their room and were not going to comprise under any condition. It was finally settled when Mom suggested that all three of them sleep together in Meghan's room because it was bigger.\n\nAt last Colleen and I were able to go to bed ourselves. The crib was in our room so Colleen took Noelle in to get ready for bed while I went around turning off the lights and locking up for the night. We had only been gone for one night but it felt like we had been away for months. Our own bed was going to feel good.\n\nI stopped just inside the doorway of the bedroom. I will always remember the times that I have watched Colleen nurse our children and be filled with a sense of awe. Colleen was already in the bed, propped up on the pillows, leaning against the headboard. True to her promise, she was not wearing any nightclothes, the sheet spread across her lap as she nursed Noelle at her breast.\n\nI sat on the edge of the bed and just watched Noelle sucking at the nipple, smiling at how lucky a person I was. Finally Colleen pulled Noelle away from her breast and adjusted the blanket around the baby.\n\n\"She's asleep, why don't you put her down?\"\n\nAt this point I was still new to holding an infant so I carried the fragile life the five steps over to the crib and gently lay her down. It took me ten minutes to get her settled just right with repeated checking and constant monitoring to make sure that she was still breathing. I could hear the smile in Colleen's voice as she whispered, \"Bobby, she's ok. Leave her alone or you'll wake her up, now come to bed.\"\n\nThe bedside lamp was on leaving most of the room in shadows and only lighting the bed. Colleen was still propped against the headboard as she watched me get undressed in the semi-darkness, a smile of eager anticipation on her lips. As I crawled into the bed, she pulled back the covers so that I could see her in all her naked glory.\n\nThe nurses at the hospital had shaved Colleen's pussy completely smooth for the birth so she spread her thighs apart, letting me see it's new condition. \"How do you like my new hair cut?\" she asked.\n\n\"It's...interesting...but I prefer the old one. Rubbing my face on your hair is so much more...naughty...don't you think.\"\n\n\"Don't worry, it will grow back, maybe thicker than before.\"\n\n\"You're just saying that to get me excited.\"\n\n\"Just thinking about you rubbing your face there is getting me excited.\"\n\nShe pulled me closer to her until we were face to face and then kissed. It had been forty-eight hours since I had held Colleen this close and it felt great to have her back in my arms. Colleen put her hand on top of my head and began to gently press downward until my mouth was in line with one of her nipples.\n\n\"You're going to like this. Bill used to love it.\"\n\nLifting her breast up and holding it in place, Colleen guided my head until my mouth was touching her nipple. I took it between my lips and began to suck. I was startled when sweet cream began to flow out of the nipple, into my mouth and down my throat. I had never experienced any thing like this before...well, actually I had but not since I was two years old. \n\nIt was divine. I had to have more. I began to suck harder, gulping everything that flowed out until there was nothing left. Colleen gently pulled her breast away from me.\n\n\"That one is empty, try the other side.\"\n\nI became a madman. I turned my head and grabbed the other nipple with my mouth, my arms around Colleen's waist. I drank like a man dying of thirst. Colleen softly stroked the back of my head until I had drained that side as well.\n\n\"So...did you like that?\"\n\n\"Like it? I loved it! I don't ever want to stop doing that.\"\n\nColleen laughed. \"Here's the deal. Noelle always gets first dibs but if she is anything like Meghan and Molly there will be a little left over for you every night. And who knows, if the schedule works out right, you just might get a little before you go to work in the mornings.\"\n\n\"Oh my God, I will love you forever.\"\n\n\"You already do Bobby.\"\n\nAfter a moments rest, Colleen again gently pushed me down until my face was almost between her legs. I rubbed my cheeks against her pubic area where the swollen lips of her vagina came together; her skin felt as smooth as satin.\n\n\"But the doctor said that we couldn't have sex for eight weeks.\"\n\n\"You weren't paying attention, Bobby. He said that we couldn't have intercourse for eight weeks, not that we couldn't fool around.\" Colleen lay on her side, reached for my cock and gently tugged, forcing me to scoot around until I was facing the opposite direction. She held my cock with the tip just inches from her mouth. \"I believe that you know what to do from this point on, so hurry up so we can get some sleep.\"",
        "\"What is this obsession everyone has with sleep? I don't understand.\"\n\nColleen looked down into my face with a smile. \"Don't worry, you'll find out soon enough. Now get down to business, you're wasting time.\" \n\nWith that she spread her thighs wider. She placed my cock into her mouth and began sucking in a slow rhythm. I wiggled my head around until my lips were in full contact with her vaginal lips and began to French kiss her pussy. I pushed my tongue in as deep as possible, scooping out as much of her juice as I could. I nibbled all around the opening, gently tugging on the lips of her cunt for as long as I could before I needed more. I changed the angle of my head until I could get her clit between my lips. By instinct, I began to nurse on her button the same way I had nursed on her nipples a few minutes earlier.\n\nWe continued to suck on each other for minutes, hours, days...who knows how long, we just kept going. Colleen stopped sucking on my cock just long enough to give her deep-throated groan. Suddenly she convulsed and gripped my head with her thighs. Half way through her orgasm she pushed her head forward, jamming my cock down her throat and began sucking and swallowing with wild abandonment. Within seconds of Colleen starting her orgasm I started pumping cum down her throat. \n\nWhen we had both stopped twitching from the explosion, we lay relaxed against each other, our lips still holding on. I slowly turned around until we were lying in the same direction and pulled Colleen into my arms. I reached down and pulled the covers up over us. As she was fading off to sleep Colleen whispered in my ear, \"You eat my pussy almost as good as you fuck me.\"\n\nIt was obvious that I would not be seeing very much daylight in the next eight weeks.\n\nWhen the screaming started I instantly sat upright and saw what was happening. I leapt out of the bed and in two strides made it to the crib and rescued my daughter from the danger that was about to harm her.\n\nAt least that was what I intended to do but it didn't quite work out that way.\n\nWhen Noelle started crying it scared me so bad I nearly wet myself. I jumped out of the bed but became so entangled in the covers that I ended up falling down, my face on the floor and my hips and legs still in the bed. Colleen calmly got out of bed, picked up Noelle and lay back down as I continued to flop around like a dying fish, trying to free myself from the sheets.\n\n\"Bobby, what are you doing?\"\n\n\"What happened... what's wrong...why is she crying?\"\n\n\"Nothing's wrong, she's just hungry. Calm down and get back into bed.\"\n\nWith that Colleen grabbed the covers and gave a quick snap of her wrist. This released me from the sheets and I slid the rest of the way down onto the floor. As I got back into bed I looked over at the clock and was astonished to see that it was only 2:30 in the morning.\n\n\"Hungry, how can she be hungry? She just ate a couple of hours ago. Why is she crying like that? Doesn't she know that people are trying to sleep around here?\n\n\"Honestly Bobby, don't you know anything about babies?\"\n\n\"How am I supposed to know, I've never had one before.\"\n\n\"Well, you might as well sit back and relax because you're in for the ride of your life.\"\n\nAs soon as Noelle's lips latched onto Colleen's nipple she stopped crying and ten minutes later was asleep back in her crib. I wrapped my arms around Colleen and faded off to sleep at last...until...\n\nNoelle's shrill screams brought me back to consciousness. By the time I had forced myself to sit up, Colleen had already picked up Noelle and was getting back in bed.\n\n\"Oh God, what is her problem? Doesn't she understand the concept of sleep?\n\n\"Get used to it. She's going to have to nurse three or four times during the night.\n\n\"Every night?\"\n\n\"Every night.\"\n\n\"Jesus, I haven't done anything to her and she hates me already. All I want to do is get some sleep. How long will this last.\"\n\n\"With Meghan and Molly it was only five or six weeks before they slept through the night.\"\n\n\"FIVE OR SIX WEEKS? You have got to be kidding me. I'll be a dead man before then...wait a minute, did you say 'only five or six weeks.' Does that mean it could last longer?\"\n\n\"Do you remember my friend Cindy? It was six months before her son started sleeping through the night.\"\n\n\"Christ, just shoot me and get it over with.\"\n\nColleen just smiled. She whispered into my ear, \"No can do bucko. Welcome to the wonderful world of fatherhood.\" She snuggled into the crook of my arm with her head on my chest. After a few moments of quiet she whispered again. \"Bobby...\"\n\n\"Yes?\"\n\n\"I love you.\"\n\n\"You better, or I'm not going to make it.\"\n\nOne of the odd things that happened after Noelle was born was that we didn't have to set the alarm for the next several months. Every morning without fail, precisely at 6:45, never varying more than a minute, she would wake us up to get the entire house started on the day.\n\nI had called the office and Peterson told me to go ahead and take the rest of the week off but be back in the office the day after New Years, no one was getting much work done during the holidays anyway. It was a good thing that Mom was in the house with us. If she had not been there I don't know what we would have done. Mom kept everything in the house running, leaving Colleen and I to focus on Noelle. Colleen was right, after several days of training by Colleen and Mom, along with Megan and Molly, I had the father act down pat and was working like a pro...well, actually more like an advanced amateur, but at least I wasn't terrified by own daughter anymore.\n\nWhen Mom was with the girls I could overhear her telling them about their responsibilities.\n\n\"A big sister should always...\"\n\n\"Because you're older you need to...\"\n\nAnd they did. Meghan and Molly jumped right in and did everything they could to help while at the same time doting on their new baby sister.\n\nAll too soon it was the day before New Years Eve and Mom had to get back to Santa Teresa. She needed a couple of days to get ready to return to her classroom of thirty second graders. Mike drove up with his daughter Patricia to bring Mom home. Mike said that Patricia had insisted that she come along because she wanted to see Noelle again. Now that I was a father myself I understood how difficult it is to deny something to your three-year-old daughter.\n\nThere were hugs all around and then Mom was gone, and our family was here in the house alone. I was standing alone in the living room when I began to feel a sense of abandonment and panic beginning take hold of me. At that moment Meghan walked into the room and looked at me. She put her arms around me and gently squeezed saying, \"don't worry Dad, you're doing fine. I love you.\"\n\n\"I love you too sweetheart. Let's go see what everyone else is doing.\"\n\nEach night before I fell asleep, what little of it I could get, I would lay in bed with Colleen on my arms and marvel at the beauty of our daughter and how much in love with Colleen I really was. \n\nThe next few days were uneventful except for the fact that I still could not get a complete nights' sleep. Noelle not sleeping through the night did not seem to affect Colleen and the girls but it was turning me in to a physical wreck. On the appointed day I returned to work looking like the walking dead.\n\n\"Good God Robert, you look like hell.\"\n\nI can count on Miss Jennings to always get directly to the point.\n\nAt the end of the day Colleen brought Noelle into the office to pick me up. As soon as they walked through the door, Noelle was snatched out of Colleen's arms by the first grandmother they ran into. We didn't see Noelle for the next hour as she was passed from one mother to the next. We could catch glimpses of her being passed along the way but never heard a peep out of her. Finally Harold Peterson was the last to person to hold her. He was standing in front of Colleen looking down at the sleeping bundle in his arms. He raised her up and kissed her on the forehead before handing her to Colleen then looked directly at me.\n\n\"She's beautiful child. Take good care of her.\"\n\nHe made it sound like both a request and command at the same time.\n\nWe made our good-byes and headed out to the parking lot. When we got there we were surprised to discover that every available inch in the backseat and trunk had been stuffed with presents for Noelle; clothes, blankets, toys, things that we had no idea what they were for. You name it and the people in the office had wrapped it up and given it to us. Turns out that this is the standard operating procedure for every baby born to the office.\n\nLife quickly fell into our normal routine, as normal as it can be for a household with a new born. Meghan and Molly were back in school with all the exiting news about their sister. They would race each other home after school, the winner getting to be the first to hold Noelle. Colleen put all of her illustration jobs on hold and did not take any new projects for the next several months. She used her time during the day to focus all of her attention on our daughter. It was during these first few weeks that Colleen built the bond with her child, just as she had with Meghan and Molly.\n\nColleen still met me at the door every morning to send me off to the office for the day. Only now she was holding our daughter in her arms. Now, I got to kiss two beautiful women as I went out the door.\n\nI was back in the office full time. Miss Jennings did something for me that earned my undying gratitude. For the fist three weeks after I returned, she sat at her desk during lunch and would not allow anyone to enter my office between 11: 30 and 1:00. This allowed me to get a full hour and a half nap that would keep me going until I got home.\n\nNoelle did better than Meghan and Molly. By four weeks, she was sleeping through the night and Colleen and I began getting a full night's sleep. The next step was to deal with the bedroom situation. We didn't want it to appear that we were playing favorites about who got to have Noelle in their room, so our first thought was to have Meghan and Molly share a room and put Noelle in Molly's smaller room.\n\nAfter dinner one night I brought up the subject but before I could get very far into the discussion, Molly stopped me.\n\n\"Meghan and I already talked about it Daddy. We think that Noelle should share a room with Meghan.\" \n\nMeghan was sitting next to Molly, nodding her head in agreement. Colleen and I looked at each other in confusion. If this was what the girls wanted, it was ok with us, but from the way they were grinning at each other I had the uneasy feeling that there was something going on between them that Colleen and I didn't know about. Seven and eight year old girls are not supposed to be involved in conspiracies. \n\nWe spent the next Saturday rearranging the furniture in Meghan's room and moving the crib in. Once again Colleen and I were alone in the bedroom. My initial guess had been correct; I was spending more time with my face between Colleen's thighs than I could keep track of.\n\nOne of the first things Colleen had done after bringing Noelle home from the hospital was to march over to the calendar on the kitchen wall and draw a big red circle around Friday, February 19th. When I asked her what that was for, she just stared at me for few moments before answering.\n\n\"Eight weeks Bobby. Eight...long...weeks. God I hate this part about having kids.\"\n\n\"Eight weeks? Eight weeks for what...oh...that eight weeks.\"\n\nAt last the day arrived. I had finished my breakfast with Meghan and Molly, getting ready to go to work. I was rinsing the dishes out with in the sink when Colleen grabbed me by the arm and dragged me over to the calendar on the wall. She stood there holding Noelle on her shoulder with one hand and was tapping the large red circle with the index finger of her other hand. She looked at me with excitement in her eyes and her half smile on her lips. She leaned in and whispered to me.\n\n\"You had better eat a lot of protein for lunch today. You're going to need it tonight.\"\n\n\"Do we have to wait? I could call in sick.\"\n\n\"NO! Now get going, the girls are listening.\"\n\nFebruary the 19th was the longest day in history. It was at least three weeks long. It is very hard to pay attention to the business at hand when all you can think about is crawling between your lover's delectable thighs. It was made even more unbearable because several corporate officers had made their semi-annual visit to the San Miguel office. Fortunately, most of the time was spent sitting at a conference table so no one could see the obvious visible signs of what I was really thinking about while they droned on endlessly about corporate policy and projections. Even more frustrating was the fact I had been selected along with two other people to assist Peterson in taking the corporate people to dinner and then get them to the airport in time for the flight back to New York.\n\nBy the time I got back home it was after eleven o'clock. Everyone had already gone to bed so the house was dark except for a light in the hall. A faint light shown from under the bedroom door letting me know that Colleen was waiting for me. I stepped into the room and looked at the bed. Colleen was lying on the bed with only the sheet covering her, pulled up to her chin. She was grinning as I began to undress. When I started to hang up my clothes she spoke to me for the first time.\n\n\"Why are you taking so long? Leave those on the floor and get over here.\"\n\nWhen I got to the side of the bed, Colleen flipped the sheet back and spread her thighs wide. I crawled onto the bed, got on my knees, settling in between her legs and looked down at her almost laughing.\n\n\"What is this?\"\n\nColleen had used the brightest red lipstick she had and written instructions on herself. On her chest and stomach just below her breasts, in large letters, were the words, \"INSERT COCK HERE.\" She had also drawn half a dozen large red arrows below her navel and on the inside of her thighs all pointing to her newly returned thick crop of pubic hair.\n\n\"I was afraid that you might have forgotten where all the pieces go.\"\n\n\"Well, it is a little hazy for me. I think that you'll have to help me get started.\"\n\nColleen reached down between us and took hold of my cock. My cock that been standing at attention almost all day was now like an iron bar. After stroking it a couple of times, she gently pulled it into place and inserted the tip just inside the lips of her pussy.\n\n\"Ok, I think that you can figure out what to do from here.\"\n\nI leaned over Colleen until I could rest my weight on my elbows. I gently rocked my hips forward and began to push my dick into her. It was fortunate that she was as wet as she was because her cunt seemed to be even tighter than it had been before Noelle was born. Colleen was flexing her cunt muscles to make her pussy swallow me. I stopped when my pubic bone was resting on her clit.\n\n\"Oh GOD Bobby, I've missed having you inside of me.\"\n\n\"Not half as much as I've missed being there.\"\n\nI began to withdraw until I was almost out then reversed direction. I slid back in, feeling the wet smoothness that grasped and squeezed my cock.\n\n\"Oh sweet Jesus I need this...thank God you remember what to do.\"\n\nAll I could do was grunt in response and begin the next stroke of my cock.\n\n\"That's it baby,\" Colleen moaned into my ear. \"More, just like that.\"\n\nColleen had raised her thighs until they were gripping my ribs, her heels resting on the cheeks of my ass. She began to rock her hips upward, impaling herself on my cock at the same time that I was pushing myself inside of her, trying to go deeper with each thrust.\n\n\"It is so good to be back where I belong...I love you so much,\" I whispered back to her.\n\nWe lost all ability of speech and the only vocal sounds we could make were the grunts and moans of uncontrollable love. The slapping of our bellies and the slurping sound of my cock sliding in and out of Colleen's juicy cunt seemed to echo in the quiet of the night. We kept up a steady rhythm of pushing and pulling against each other for quite some time and then began to pick up the pace. I could see the expression on Colleen's face as she began to concentrate on what was happening to her body, her eyes begging me to make it happen. She started throwing her hips faster and harder onto my cock as I began to slam into her cunt with everything I had.\n\nI could feel my nuts begin draw themselves up into a tight ball at the base of my cock in preparation for the impending explosion. Colleen put her lips next to my ear as she franticly whispered.\n\n\"There...now...now...almost there...Bobby...NOW...GOD YES I'M CUMMING...cumming...\"\n\nAt the same time that Colleen's body began to spasm, my nuts began pushing my sperm out the end of my dick and into Colleen's waiting cunt. The harder her cunt swallowed the sperm, the harder my balls pushed it out. Finally she relaxed at the end of her orgasm but my body kept pumping the white juice into her. Colleen's smile grew bigger when she realized that I was still draining sperm into her.\n\n\"That's it Bobby...give it all to me. You know how much I need your cream in me.\"\n\nAt last I was empty and I rolled us over onto our sides, my cock still inside of her. Colleen kissed me deeply then pulled her head back and looked into my eyes.\n\n\"I loved Bill very, very much but my God he couldn't make me cum as hard as you do.\"\n\nHer cunt was flexing and gripping my dick that was still embedded in her.\n\n\"Your cock isn't going down, does that mean what I think it means?\"\n\nAll I could do was nod my head yes.\n\nColleen rolled us over the rest of the way until I was on my back. She was straddling my hips with my cock going straight up inside of her. She began raising and lowering herself, driving me as deep as possible on each downward stroke. Colleen never took her eyes off of mine, her breasts flopping around wildly as she pounded her crotch against me. Soon her eyes started to glaze over and I knew that she was ready. I grabbed her hips and with one last effort I pulled her down at the same I shoved up into her. Her orgasm triggered my own; we grabbed each other and held on as tightly as possible. Once again my balls were pumping sperm into Colleen long after she had finished cumming.\n\nWe slowly fell apart and lay on our backs, holding hands, staring up at the ceiling for a few moments, when Colleen rolled onto her side and lay her head on my chest. Her hand slowly slid down my stomach and I could feel her fingers traveling through my pubic hair. Colleen cupped her hand and gently cradled my balls.\n\n\"How many times are you going to drive that freight train across me Bobby?\"\n\n\"As many time as I can, sweetheart, as many times as I can.\"\n\nEventually Colleen's slow rhythmic breathing let me know that she had fallen asleep so I wrapped my arms around her even tighter and nodded off myself. At some point during the night we woke up and made long slow deep love, then went back to sleep, my cock still inside of her.\n\nI awoke to the sound of someone, several someone's, walking into the bedroom. Meghan and Molly had come into the room and Meghan was holding a whimpering Noelle. They walked around to Colleen's side of the bed and gently nudged her on the shoulder.\n\n\"Mommy wake up, Noelle is hungry.\"\n\nColleen stretched and rubbed her eyes then sat up. She arranged the pillows against the headboard then sat back, took Noelle into her arms and began to nurse. The girls and I watched as we always did in fascination. Eventually Molly said, \"We're going to get some cereal for breakfast Mom.\"\n\n\"Ok...be sure you put the bowls in the sink we you're done this time\"\n\nAs the girls went out the bedroom door and down the hall we could hear them talking.",
        "\"Something smelled funny in there.\"\n\n\"I know, I think they were eating tuna fish in bed last night.\"\n\nColleen and I were both sputtering, trying not to laugh out loud. I looked at Colleen and began to openly laugh and pointed at her chest. She gave me a confused look and then glanced down at herself. She grinned at what she saw and lifted the sheet to take a good look at my chest before she began laughing herself.\n\nThe lipstick instructions that were on her chest and legs from the night before were now smeared all over her body as well me and the sheets. We were laughing so hard that Colleen almost dropped Noelle. We heard Meghan and Molly running down the hall and pulled the sheets up to our chins just before they burst into the room.\n\n\"What's so funny?\" they asked.\n\nThis sent us into another round of uncontrollable laughter.\n\n\"I'm sorry honey, it's grown-up funny stuff. We can't tell you.\"\n\nThe girls frowned and went back to the kitchen. As they went out the door Molly said, \"They never tell us any of the good stuff.\"\n\nEven after a long shower and continual scrubbing, our skin was stained a light pink that lasted for several days. The white sheets were a lost cause. The lipstick color never did come out but everytime Colleen put them on the bed, I knew that I was in for a very long and intense physical workout after the kids went to bed.\n\nLife was good.\n\nI found great joy and contentment in being the family man. Even this early Noelle showed signs of developing a personality that involved lots of smiles and laughter and by the time she was three months old had mastered the art of sitting up. Meghan and Molly were nothing but a pure delight. They, as much as Colleen, were instrumental in teaching me the art of fatherhood.\n\nIt was in about the middle of March that Colleen came down with some type of bug that settled in her stomach. For a couple of days she was tired and listless and her stomach seemed to be queasy most of the time. One morning we were standing in the kitchen. The girls had finished breakfast and had gone to get dressed for school while I was gathering up my things to go work. I heard Colleen make a strange noise and I turned to look over at her.\n\nShe was standing there holding Noelle with a strange expression. It was a look of panic, dismay and confusion all at once and then the color began to drain from her face. I stepped towards her as she shoved the baby into my arms, turned and ran down the hall.\n\nI walked after her and found her in the bathroom, on her knees, her face in the toilet. She was making gagging noises and then with one long drawn out moan began to spew out every thing she had eaten in the last twenty-four hours. I took Noelle back to the kitchen and Meghan and Molly came in with a panicked look.\n\n\"Is Mom Ok?\"\n\n\"She'll be alright; she's just not feeling well right now. So go finish getting ready for school.\"\n\nOver the next twenty minutes, the girls and I could hear Colleen in the bathroom. There would be several minutes of silence and then the retching sounds would start all over. At last we heard the toilet flush and the sound of running water in the sink. Colleen came out of the bathroom looking pasty white with a dazed look on her face. She took Noelle into her arms and rocked her gently.\n\n\"Bobby, call the office and tell them you're staying home today. Take the girls to school and stop at the pharmacy on the way home.\"\n\n\"Of course. What do you want me to get at the pharmacy?\"\n\nColleen only stared at me with no color in her face and a bewildered expression.\n\nThen it hit me what she was telling me.\"\n\n\"You're kidding me, right? It can't be...\"\n\n\"Oh yes it can. Now get going.\"\n\nI dropped the girls off at school then stood at the pharmacy door for half an hour waiting for them unlock and open up for the day. As soon as the store manager turned the key in the lock I shoved the door open and ran past him. I grabbed the kit off the self and threw some money at the cashier. I sat in the car for a minute thinking, then ran back into the store and bought two more kits for insurance.\n\nWhen I got home Noelle was already down for her morning nap. Within minutes Colleen was bent over the bathroom sink, moaning and grunting as I stood behind her slamming my cock in and out. After we had calmed down from our climax, Colleen picked the stick up from the counter and studied it for a moment. She handed it to me and pointed to the plus sign that was showing in the little window.\n\nPositive.\n\nColleen was pregnant again.\n\nTo say that we were stunned is an understatement. \n\nI took Colleen's hand and led her back to the bedroom. I slowly undressed her and she lay on the bed. I undressed myself then lay on top her and we began to make love, and that's what it was, love. The first time you make love with your partner after finding out she is pregnant is one of the most glorious experiences two people can share. We made love until we heard Noelle waking up.\n\nNoelle was not old enough to comprehend that her mother and father were spending the entire day completely nude, feeding her and playing with her. Minutes after Noelle was down for her afternoon nap, Colleen was lying on her back in the middle of the living room floor as I lay between her legs, pumping my hips up and down, pushing my cock in and out of her as we both grunted out our love for each other. We did it one more time with Colleen lying back on top of the dining table while I stood between her legs, leaning over her, huffing and puffing until we both screamed \"OH GOD YES!\"\n\nWe were lying still, catching our breathes when I looked up at the clock that I could see through the kitchen doorway.\n\n\"OH shit,\" I yelled and grabbed Colleen's hand. I dragged her into the bedroom just as we heard the front door open and two small voices sing out, \"MOM! We're home.\"\n\nThat night after the kids were down for the night, Colleen and I lay in bed talking.\n\n\"How could this happen?\"\n\n\"Well, it's not like we were using a whole lot of protection here.\"\n\n\"No, I suppose not.\"\n\nColleen studied my face for a few moments then asked, \"What are you grinning about?\"\n\n\"I just realized that I get another chance to fuck my favorite pregnant woman.\"\n\nColleen rolled over to lie on top of me and began kissing my face.\n\n\"That sounds pretty good to me.\" She scooted her hips back until the end of my cock touched the lips of her pussy. \"I think now would be a good time to start...\"\n\nTelling people the news was going to be much easier this time, but we decided to wait just a little bit anyway.\n\nThe next morning I went into work and as I walked past Miss Jennings' desk, she looked up and gasped. Miss Jennings followed me into my office and when I sat down at my desk I saw her staring at me, her eyes wide. After a minute of silence I asked the inevitable question, \"What?\"\n\n\"Colleen is pregnant again, isn't she?\"\n\n\"Good lord how did you know? Did she call you?\"\n\n\"No, you have that same stupid grin on your face as the last time. Don't ever try to play poker; you'll be destitute before you know what hit you.\"\n\n\"Listen, we're not ready to tell anyone right now so can we keep it just between us?\"\n\n\"Alright, but if you don't get rid of that idiotic grin the entire building will know before lunch time.\"\n\nMiss Jennings was right. It was almost impossible to not go around all day with a smile on my face. At home Colleen was the same. Meghan and Molly kept asking her what she was smiling about and when we were out in the neighborhood, total strangers would look at us and smile.\n\nWhen Colleen was three months along, it was time to tell people, and since we were repeating the cycle again, we started with the girls. I said that I would tell them this time just so I could practice my new parenting skills. So, one night after dinner, Colleen reached into the cupboard and brought out the lemon meringue pie. After Colleen cut it and served the pieces to everyone, I began.\n\n\"Girls, can we talk for a minute?\"\n\n\"Sure Daddy, what's on your mind?\"\n\nMeghan and Molly were trying not to smile, looking at each other out of the corner of their eyes.\n\n\"Meghan, who is your best friend in the world?\"\n\nMeghan looked startled, showing that she was caught off guard with that question.\n\n\"Molly is...Molly is my best friend.\"\n\n\"And Molly, what about you? Who is your best friend?\n\n\"That's easy Daddy, Meghan is.\"\n\n\"Ok, here is a hard question, who is going to be Noelle's best friend?\n\nTheir brows were furrowed for a moment and then their faces relaxed into smiles as understanding came to them.\n\n\"We don't know Daddy, do you and Mommy know?\" The grinning got even bigger.\n\n\"Well, your mother and I were thinking that the perfect way for Noelle to have a best friend would be for Mommy to have another baby.\"\n\nMeghan and Molly threw their heads back and began to laugh. Noelle was sitting in her high chair and began to imitate her sisters, laughing when they did and clapping her hands when they did. But she soon lost interest this and went back to eating her favorite desert, a pile of dry cheerios lying on the tray of the high chair.\n\nThe girls finished their desert then scooted back their chairs. As they walked away form the table, Colleen and I could hear Meghan whisper to Molly, \"See, I told you they would.\"\n\nMolly quickly spun around and returned to the table. With a serious expression she said, \"Remember, no brothers. She's going to share a room with me,\" and walked off to find Meghan.\n\nColleen looked at me with a questioning look and said, \"You don't suppose they already knew, do you?\"\n\n\"I don't know.\"\n\nTelling Mom and the twins was much easier this time also. The next weekend we drove down to Santa Teresa to Mom's house then called Mike and Jimmy to come over for a while. After lunch we were sitting around the table talking while all the cousins were outside. There was a lull in the conversation when I spoke.\n\nMom...guys...Colleen and I have some news to share with you.\"\n\nEveryone's faces were blank for a second, and then began to change. Mike's face had a questioning look, Jimmy was suspicious and Mom looked panicked. Sharon and Mi Lin glanced for a second at Colleen who was wearing her contented half smile then all three of them broke into huge grins. \n\n\"Colleen and I are pleased to announce the impending birth of a new grandchild for Mrs. Margaret O'Conner.\"\n\nThe statement was a tad overly grandiose but somehow fit the occasion. \n\nEveryone came around the table to hug us with their congratulations except for Mom. She was still sitting down, one elbow on the table, forehead in hand, slowly shaking her head back and forth. At last she raised her head up and looked first at me then to Colleen. She gave us a shrug of her shoulders and a small smile. \n\n\"Well, I survived it once; I guess I'll live through this one too. Just make sure this baby is as good natured as the rest of the kids. The one thing I will not tolerate is an ill tempered grandchild.\"\n\nMom stood and hugged us, then all of the women drifted into the livingroom for an extended session of pregnancy talk. This left Jimmy, Mike and I alone in the kitchen. Mike and Jimmy were standing next to each other, arms crossed, their backsides leaning against the counter. Mike was smiling and Jimmy seemed to be lost in thought, both of them just looking at me. I could stand the silence for only so long before I spoke.\n\n\"Hey, don't everyone talk all at once.\"\n\nMike gave a small laugh then came over and put his arm around my shoulders.\n\n\"For a complete nitwit, you're ok. Don't let them let them tell you any different.\"\n\nThere was another pause of silence then Jimmy spoke.\n\n\"Bobby, I owe you an apology.\"\n\n\"Apology? What for?\"\n\n\"Last year when you and Colleen told us she was pregnant, I thought both of you had lost your minds. Do you remember what I told you at the time?\"\n\n\"Yeah...something along the line of you would kill me if I ever hurt Colleen.\"\n\n\"I meant it then and I still mean it, except now it's different.\"\n\n\"Different how?\"\n\n\"Mike and I have been watching you and Colleen since then, especially since Noelle was born. You're totally incapable of doing anything to hurt her, you love Colleen too much, you always have.\"\n\n\"What does that mean?\"\n\nMike gave me a gentle slap to the forehead. \"Get real! Even when we were little kids the whole world could see that you were in love with Colleen. I think the only people who didn't see it were Mom and Dad. Colleen couldn't see it because she was so gaga over you. That's why we so surprised when she married Bill. You know, sometimes you had such a goofy look on your face when she was around, it was down right embarrassing to admit to people that you were our brother.\"\n\n\"I think there's a compliment in there somewhere, I just can't see it right now, but thanks, I appreciate it.\"\n\nThere was another moment of silence as we all looked down at the floor, processing our individual thoughts. Jimmy spoke softly without looking up.\n\n\"I wish Dad was here, I think he would be very happy about the way things have turned out. You and Colleen were always special to him.\" Jimmy raised his head and laughed. \"Dad told me one time that he wanted all four of us to have ten kids each so that he and Mom could have a never ending supply of grandkids.\"\n\nMike and I looked at each other and burst out laughing. At the same instant we said the same thing out loud, \"I don't think so.\" Still laughing, we went into the livingroom to be with the women we love. As we went through the doorway Jimmy whispered in my ear.\n\n\"Just remember what I said, hurt her and I will hunt you down.\"\n\nThis time, pregnancy was not a new thing for me and it seemed to go by much too fast. I don't think I am some kind of a pervert, but making love with Colleen when she is pregnant adds a whole new dimension to our lives. I absolutely adore her.\n\nOne night after a particularly satisfying session of love, we were lying in bed relaxing before turning off the light to go to sleep. I was lying on my back with Colleen cuddled in my arms. Her head was on my chest with her thigh draped across my legs, her ever expanding stomach firmly held against my hip. Her hand was slowly rubbing my chest at the same time that I was stroking her back.\n\nI could tell by her body language that Colleen was thinking about something so I wasn't going to disturb her until she was ready to share it with me.\n\n\"Bobby, can I ask you something?\"\n\n\"Of course cutie, what do you want to know?\"\n\nColleen's face had that same furrowed brow frown that I had seen countless times on the girls when they were trying to get their courage up to say something.\n\n\"Do you ever think about us?\"\n\n\"Of course I do. I think about you all the time.\"\n\n\"No, not me...us.\"\n\n\"What do you mean?\"\n\nColleen sat up and looked down at me. \"I mean do you think about us, you and me together, as a couple?\"\n\nI sat up and looked at Colleen. \"What is there to think about?\"\n\n\"Well for one thing there is the fact that we are brother and sister. We had a baby together and we're about to have another. This is California, not Arkansas, but I'm pretty sure that this is illegal in all fifty states. Does it ever bother you?\"\n\n\"Oh, the incest thing.\" I paused to get my thoughts in order because it was important that I get it right the first time. \n\n\"You're going to have to bear with me because I really don't know if I can explain this so anyone can understand it.\" Colleen sat waiting and listening.\n\n\"That night of our first date, and then that whole weekend, I didn't think about it at all. But after Meghan and Molly came home, that was all I could think about. Do you remember what you said about us having separate bedrooms?\"\n\n\"I told you that I couldn't stand not having you in bed with me every night.\"\n\n\"Right, and I feel the same way. You also said when we started this that it was for the long haul, and you were right. You mean the world to me and I would die inside if we couldn't be together as partners.\"\n\nI leaned over and kissed her on the nose.\n\n\"Look, we were grown ups when we got going. It's not like we didn't know what was happening; we had both been married before. And it's not like some sick adult taking advantage of an innocent child...well, you are older than me so it's all your fault and I'm totally blameless here.\"\n\nI smiled at her, she stuck her tongue out at me and muttered, \"blameless my ass.\"\n\n\"So, do I think about us? Yes, all the time. Do I think about us being brother and sister? No, I don't. I only think about how much I love you and how empty my life would be without you.\"\n\nColleen's head was bent down as she listened, her finger drawing slow lazy circles on my leg as she thought.\n\n\"I feel the same way Bobby, but sometimes I wonder if we're doing the right thing.\"\n\n\"It's not a question of right or wrong, it just is. I know that to other people it might seem weird and all, but I've never felt that anything was so meant to be as this, you and me. Under other circumstances, our lives might have gone down a different path, but things are the way they are. When I moved here from Chicago, if Bill were still alive, or Barbara hadn't done what she did, would we have still ended up in a relationship like this? I doubt it but you can't tell because there is no way to change the past. Bill died and Barbara did it. I am not going to spend the rest of my life playing the 'what if' game. The only thing that matters is that I love you and you love me. And there are three little girls right down the hall that we both love just as much. It's called family.\"\n\nI reached over and stroked Colleen's belly.\n\n\"And I can't wait to meet the next member of our family.\"\n\nColleen reached up and placed her open palm against my cheek.\n\n\"I love you so much Bobby...sometimes I wonder...if I really loved Bill at all?\"\n\nI pulled Colleen close and held her tight.\n\n\"I have no doubt that you loved Bill, I could see it in your eyes everytime you looked at him. And he loved you, that's why I liked him so much myself, because he was good for you. You can't compare your love for Bill with your love for me; it's a different time, different place.\"\n\nColleen was quiet then whispered her biggest question of the night.\n\n\"Do you ever think about Barbara?\"\n\nI took my time before answering. I knew that Colleen was feeling extremely vulnerable right then and if I wasn't careful, I could hurt her very badly.\n\n\"When I first got here from Chicago that was all I could think about. But you, with a lot of help from Meghan and Molly, showed me that there is another life out there in the world. That I not only could, but would, live through everything and find a different happiness. Once I understood that, she just faded away from my memory. The answer to your question is no, I don't thank about Barbara. In fact I surprise myself sometimes when I realize that I was married before. It's almost like it was a story I read in a book a long time ago. It was something that happened to a fictional character, not to me.\"\n\nI could tell that Colleen needed more reassurance from me so I continued.\n\n\"I loved Barbara very much when we got married; there is no escaping that fact. But that love no longer exists. That love is gone just a much as Bill is gone. They have both died and they are never coming back. You and I have been released to continue living our lives in the here and now, not somewhere in the past.\" \n\n\"Do you think you should have stayed in Chicago and tried to work things out with her? Talked to her, at least let her tell you why she did it?\"\n\n\"No, I don't, there would be no point in that. It's like this. If a drunk walks out of a bar, gets behind the wheel of a car, then drives sixty miles an hour down the street and kills a small child in the intersection, no matter what the drunk says, or explains, the child is still dead. The driver knew the possible consequences before he got drunk, but he made the choice to drink and drive anyway. For him to try and justify anything and hide behind some lame excuse that he was impaired by alcohol does not change the fact that the child is dead.\"",
        "\"It's the same thing in a marriage. Love is a living and breathing thing. Barbara made the same promise to me that I made to her. The vows say 'forsaking all others.' She knew before she made her choice what it would do to our relationship, but she did it anyway. My love for her is just as dead as that child in the intersection.\"\n\n\"What could she say that would make a difference? That it was just sex and not love? That she loved me but had to have someone else's dick inside of her? That infidelity is acceptable in a marriage? That because I loved her I should accept that she would screw anyone anytime she felt the urge? That type of relationship might be OK for some people, but not me. I don't believe any of that. It's all a line of horseshit by someone who won't accept responsibility for their own failure in a relationship.\"\n\n\"I suppose that on some level maybe Barbara still loved me when she got pregnant by another man...she loved me...but not enough to put me first, to be number one in her life. If there was something wrong in our relationship, she obviously didn't love me enough to come to me and try to work it out; she just didn't care. That's why your love is so different, because I know that I am number one for you. I don't for one second doubt how you feel. I know you will never betray me.\"\n\nI had to pause for a moment to digest in my own mind what I had just said. Colleen gave me a gentle kiss on the lips and sat back, waiting for me to continue.\n\n\"Barbara never said it out loud, but I knew that she was jealous of you.\"\n\n\"Me? Why?\"\n\n\"Who knows. Maybe because it is so easy for you to be beautiful, it comes natural for you. She always felt that she had to work at being glamorous. I think she was jealous of how close you and I are...maybe that's why she did what she did...I don't know. The sad thing is that she had no reason to be jealous...I was in love with her, but she chose to destroy that.\"\n\nWe sat on the bed facing each other, just being silent together when Colleen took both of my hands in hers and squeezed. She smiled and spoke.\n\n\"When we were younger, I used to brag to all of my friends about how cute my little brother was...and still is I might add. I never did feel the same way about the twins as I did about you. They were always just my brothers, but you were special to me. Always have been, always will be.\"\n\nI nodded my head in agreement. \"Yeah, same here. As far as the incest thing goes, it's really not part of the equation. I don't get all hot fantasizing about hopping into bed with Mom...\"\n\n\"Please, that's not a good mental picture for me.\"\n\n\"...and I'm not standing around drooling at the thought of all the nieces growing up...\"\n\nColleen laughed. \"That certainly puts my mind at ease.\"\n\n\"...the only important thing is that we love each other, no matter what our biological relationship is. I really don't understand this 'soul mate' thing I've heard people talk about, but I do think that you and I were meant to be together from the very beginning. The fact that you and I are brother and sister was just a bad accident on the part of nature. I want to tell you something that Mike said to me a long time ago.\"\n\n\"What's that?\"\n\n\"One night when we were in college, Mike and I were sitting around talking, being philosophical, solving all the problems of world and we ended up talking about the family and stuff. Mike said, 'I'm sorry Bobby, you're my brother but Jimmy is my friend.' I never really understood what he was saying until I came back from Chicago. You're not my sister; I don't think you ever have been. You've always been my friend, and now you're my lover. Does any of this make any sense?\"\n\n\"Yes it does.\" She leaned in gave me a small kiss. \"Thanks, I feel a lot better.\" Colleen lay down, pulling me with her. She reached over and turned off the light. In the quiet of the darkness she held my hand and whispered, \"I am never going to let go of my friend.\"\n\nThe relationship between Colleen and I was always good, but the conversation we had that night cleared up a lot of the lingering issues both of us had in the back our minds. It added a new dimension and depth to our love. But...\n\nGradually, something else began to creep into the back of my consciousness. I couldn't put my finger on it, I just felt that something was missing and I didn't know what. The more I thought about it the more it eluded me. For several weeks I struggled with it, trying to find the answer. Even Peterson and Miss Jennings commented that I seemed to be preoccupied.\n\nIt sounds like a scene in a low budget movie, but the answer came to me in a dream in the middle of the night. I sat up in bed with a jerk and yelled out, still half asleep. Colleen didn't open her eyes, just groggily asked, \"What going on?\"\n\n\"Nothing honey, go back to sleep.\"\n\nI lay back down and stared at the ceiling. Now that I knew what was wrong, I had to figure out how to correct it. I spent the next few weeks playing out different scenarios in my mind, rejecting most of them, looking for the perfect plan that would fix everything.\n\nThen one night I was in the kitchen cleaning up when Colleen walked in after putting the kids to bed. She stood there watching me for a few moments before she spoke.\n\n\"What's wrong?\"\n\n\"What do you mean?\"\n\n\"Something is bothering you. You're quiet all the time and half the time you don't even hear me or the girls. Now what is going on?\"\n\nI was having trouble finding the right words. I stood there looking at her before I spoke.\n\n\"I want to get married.\"\n\nThe expression on Colleen's face couldn't have been any worse if I had punched her in the stomach. Her eyes slowly got bigger and her bottom lip began to tremble. A tear rolled down her cheek then she turned and walked out of the room with out saying a word. I heard her walk down the hallway and close the bedroom door.\n\nI tossed the dishtowel onto the counter and went to the bedroom. I stopped, took a deep breath before opening the door and stepped in. Colleen was sitting on the edge of the bed; her arms wrapped her mid-section, rocking back and forth holding our unborn child. Tears were pouring down and she was shaking when she looked up at me.\n\n\"How could you? You promised me.\"\n\n\"How could I what?\"\n\n\"You promised me that you would never cheat on me, who is she?\"\n\n\"Who is who?\"\n\n\"The tramp...the slut you want to marry.\"\n\nMy head was starting to spin, everything had gone terribly wrong. Colleen's face was in her hands and she was sobbing uncontrollably. I walked over and knelt on the floor in front of her. I carefully pulled her hands away from her face then held it between my own.\n\n\"You are.\"\n\n\"I am what?\"\n\n\"It's you. You're the slut I want to marry.\"\n\nColleen sat straight up and snapped her head back with a look of total shock.\n\n\"ARE YOU CRAZY?\"\n\n\"No...I'm not. I've never felt so sane in my life. Colleen, I love you and I want you to marry me.\"\n\n\"But that's impossible!\"\n\n\"Why?\"\n\n\"Why? Because it's against the law, that's why.\"\n\n\"So?\"\n\nColleen was frantically looking around the room, trying in her mind to latch onto something that would bring this moment back into reality. As her breathing began to slow down her eyes settled on mine.\n\n\"There is no way we could get married.\"\n\n\"Sure there is. All we have to do is get a marriage license, invite Reverend Stevens over, she says a few words for us out in the garden and then we have a nice party. Pretty simple actually.\"\n\nColleen was having trouble assimilating what I had said.\n\n\"We can't just waltz in and get a license.\"\n\n\"Sure we can, it's easy. Here, let me show you.\"\n\nI went over to the dresser, took Colleen's wallet out of her purse and removed her driver's license. I pulled my wallet of my back pocket and took out my own license. I sat down on the bed next to her and held them out for her to see.\n\n\"This all we need.\"\n\n\"What?\"\n\n\"Look, when we get the license, we only have to show them identification to prove that we are who we say are, we don't have to provide a copy of the family tree. What name does it say here?\"\n\n\"Robert Mathew O'Conner.\"\n\n\"And what name is on this one?\n\n\"Colleen Margaret Wilkowski.\"\n\n\"Ok, who in San Miguel knows that we are brother and sister?\"\n\nShe had to think about that for a few seconds. \"No one as far as I know.\"\n\n\"Alright then. As far as anyone knows, we are two unmarried people living together, we had a baby and now another one is on the way. We want to make the ultimate commitment to each other and publicly say we are in love, what's wrong with that?\"\n\nThe look in Colleen's eyes told me that she was not having any better luck in processing any of this.\n\n\"What about Mom and the twins?\"\n\n\"Now that does have me worried a little, but I'm betting that if they can deal with us having two children together, then they will be able to cope with us getting married. What do you say? Will you marry me?\"\n\nColleen stared at me for a few minutes then got up and walked over to the closet. With her back to me she began to undress and said, \"I can't deal with this right now, it's making my head hurt. We'll talk about it later.\"\n\nWhen she had finished undressing, she came back and stood in front of me in all of her naked glory. There was a confused look on her face and her hand was rubbing her forehead.\n\n\"Christ, the father of my children is a raving lunatic...I'm going to bed now.\"\n\nColleen got under the covers and rolled over with her back to me. She lay there quietly then spoke.\n\n\"And don't you ever call me a slut again.\"\n\nThe next morning Colleen was unusually quiet at breakfast. When she met me at the door before I left for work, I tried to talk to her but she put her hand over my mouth and shoved me out the door. When I got home that night it was just as bad. She interacted with the girls but completely ignored me. Even the kids were picking up that something was wrong. They didn't say anything, just looked at us with questions in their eyes.\n\nI sat on the sofa trying to read as Colleen put the kids to bed. After fifteen minutes I had read the same paragraph a hundred times and still had no idea what it said. I had given up when Colleen walked into the room and stood in front of me, her protruding belly in my face and staring down into my eyes. I waited for her to say something to me.\n\n\"Yes,\" she said.\n\n\"Yes what?\"\n\nShe rolled her eyes, looking up at the ceiling for a second and then back down at me.\n\n\"Yes, I will marry you. Apparently insanity runs in our family. I hope we haven't passed it on to the girls.\"\n\nShe turned and walked away. At the doorway she stopped and looked over her shoulder.\n\n\"Bobby, it's time for bed. We have a lot details to discuss.\"\n\nAnd we did discuss the details, but first we...well, let's just say that we did lots of other stuff before talking about a wedding.\n\nAfter two pregnancies for Colleen, telling the family about the wedding was a piece of cake. Sharon and Mi Lin were startled at first but that quickly turned to delight. Mike just smiled and under his breath said, \"It's about time.\" Jimmy rubbed his temples with his fingers for a long time before he looked at us.\n\n\"You do realize that I'm a deputy sheriff, don't you? I'm going to pretend I didn't hear anything you just said.\"\n\nMom's only comment was, \"You two only do these things to make my hair turn gray. How can we help?\"\n\nFor all of the bravado that I had shown to Colleen when I first talked with her about getting married, I was terrified when we went to get the marriage license. Colleen and I drove to city hall one afternoon and walked up to the appropriate window. An old lady who was somewhere between eighty and death was behind the counter slowly writing something on a form. It seemed like she took hours before looking up at us.\n\n\"Can I help you?\"\n\n\"Yes,\" I said. \"We need to get a marriage license.\"\n\nShe looked at me, then at a very pregnant Colleen who was holding Noelle.\n\n\"I should think so,\" was all that she said before handing me a form to fill out.\n\nOnce we had returned it to her, she gave us the license, showing us where to have the minister and witnesses sign, telling us to return it within thirty days of the ceremony for it to be recorded and become legal.\n\nBecause of the circumstances, the wedding was kept exceptionally quiet and very small. Since there were three kids in our house and another on the way, Sharon and Mi Lin took charge so that Colleen wouldn't have to deal with any of that stress. For obvious reasons, the wedding would be in our back yard in San Miguel, too may people in Santa Teresa knew who we were.\n\nSharon and Mi Lin made numerous trips to San Miguel to take care of everything and Colleen was having a blast spending time with her two sisters-in-law. Mom made the trip with them half of the time and there was so much laughter going on that I had a hard time believing they were getting any work done.\n\nA couple of days before the wedding I got a call from Mike. After exchanging pleasantries, Mike asked his question. \"Have you guys got your rings yet?\"\n\nRings. I leaned over and began pounding my forehead on the top of my desk.\n\n\"Jesus, Mike. I didn't even think about getting rings. What am I going to do now?\"\n\n\"Relax little brother, I've got you covered. Some how I knew you wouldn't remember. I will bring the rings with me on Saturday.\"\n\nThe day of the wedding started out crappy. It was early fall and there was gray fog everywhere, but by 10 AM it had burned off leaving the rest of the day bright and sunny. The temperature us just right for wearing a suit without working up a sweat. Bill had built a small arbor in the backyard that was now completely covered with climbing roses. At 4 PM that Saturday afternoon, I stood in front of the arbor with Reverend Stevens waiting for Colleen.\n\nFor the actual ceremony, the only people there were Mom, Jimmy and Mi Lin and their two daughters, and Mike and Sharon and their three daughters. The only additional people were Harold Peterson and Miss Jennings from the office plus Frank and Linda with their daughters from next door. Frank and Linda had bought the house next to us about a month after I came from Chicago. Their two daughters were the same age as Meghan and Molly, and we had all become close friends. \n\nWe heard a small noise and we all turned to look at the back door. The first one to walk out was Molly who holding a small bouquet of flowers in her hands. Meghan was next and she was holding Noelle who was sound asleep on her shoulder. All three of the girls were in the new dresses that Mom and Colleen had bought for the occasion and they were very far off the top of the cute scale. The girls walked to the arbor and waited. Then Colleen stepped out.\n\nStunning - breathtaking - there aren't enough adjectives in the English language to describe what I saw. Colleen was wearing an ivory colored dress made of raw silk that fell below her knees. It was devastatingly beautiful in its simplicity. It displayed every beautiful line and curve about Colleen including her pregnancy. While everyone else was smiling at how wonderful she looked, I was struggling to take a breath without wheezing, she was that beautiful.\n\nAs Colleen took her place next to me we turned to face Reverend Stevens. On Colleen's left was Meghan, holding Noelle and next to her was Molly. Just as everyone moved in and formed a semi-circle around us, I felt a small hand slip into mine. I looked down to see Patricia who was now four years old looking back up at me.\n\n\"What are you doing?\" I whispered.\n\n\"You didn't have anybody on your side,\" she smiled back in reply.\n\nThe gathering settled down and waited for Reverend Stevens to begin. As she opened her little black book Patricia leaned in and in a clear voice innocently informed the Reverend, \"My daddy says that now Aunt Colleen is going to be an honest woman.\"\n\nThe entire group was struggling to not break out into unbridled laughter except for Mike whose face had turned bright red and was trying to hide behind his wife.\n\nThe ceremony itself was very short. When it came to the point of exchanging rings, I glanced over my shoulder at Mike who smiled and pointed at Patricia. She was very slowly and carefully unbuttoning the flap covering the pocket on her dress. She reached in and handed two objects to the pastor. She said her blessing over the rings then handed one to me and one to Colleen. We looked down at what lay in our palms and both of us gasped.\n\nIt was our parent's wedding rings. \n\nWe both looked at Mom who was smiling and nodding yes. We said our vows and exchanged the rings. The rings fit perfectly, as though they had been custom made specifically for us. After the last prayer, I kissed my new bride.\n\nI felt Patricia tugging at the hem of my coat and she was wiggling her index finger at me to bend down. Cupping her mouth with her hand she whispered into my ear. \n\n\"Are you still Uncle Bobby?\"\n\nI picked her up, swung her around and kissed her on the check.\n\n\"Yes sweetie, I will always be Uncle Bobby.\"\n\nThe caterer's that Sharon had hired began putting out the buffet and the other guests began to arrive. We had invited about twenty other people but we didn't tell them it was a wedding reception, we just said that it was a formal garden party. It was evenly divided between our friends in the neighborhood, my closest co-workers from the office and several of Colleen's clients. Soon the newcomers knew that Colleen and I had been married, secretly we were counting on the rumor mill to spread the news. The live-in boyfriend finally married the nice widow woman.\n\nAs soon as we could we found Mom to ask her about the rings.\n\n\"I want you to have them. I talked with Jimmy and Mike and they agreed with me. The rings are yours now.\" She paused for just a second with a small smile and said, \"I know your father would want you to have them too.\"\n\nThe party went into the evening with Mom and the twins meeting most of our friends for the first time and everyone having a good time. There was one incident that happened where I could not have foreseen the future disaster in store for me.\n\nMike and Jimmy met Harold Peterson.\n\nI have a used set of golf clubs and play eighteen holes maybe once or twice a year, almost always with my brothers. I don't play very well so it is not something I enjoy doing a lot of. After nine holes, my score is something that a professional bowler would be proud of, somewhere around 280 or 290. The twins are the opposite. They are fanatics when it comes to golf and every year they spend a fortune on new clubs and greens fees. As I said, once or twice a year they harass me into a round of gold. The problem with this is that I am by far the best one of the bunch. After years and probably thousands of dollars spent on lessons, they simply continue to get worse.\n\nAnd then they met Harold.\n\nHarold Peterson is possibly the only person on the face of the earth that could be more obsessed and worse at golf that Mike and Jimmy. I now had three people constantly nagging me to be the fourth man on Saturday mornings. Sharon and Mi Lin tolerated this small personality disorder of their husbands and knew that it was perfectly harmless as long as everyone wore a crash helmet. Harold on the other hand, was a widower with no one to keep him on a short leash and occasionally would slip into an uncontrolled frenzy at the mere mention of golf. It was inevitable that I would raise my number of golf games to five or six games a year. Colleen simply smiled and gave me big hug.\n\n\"Maybe you can give the boys a few pointers.\"\n\nBy nine o'clock everyone had left, the caterers had cleaned up and the only one who was still with us was Mom. She had taken a weeks vacation from teaching her second graders to stay with the girls in San Miguel while Colleen and I went on our honeymoon.",
        "The honeymoon wasn't an extravagant trip. Because of Colleen being so close to the time of giving birth, we couldn't travel very far or be gone for too long. We left on Sunday morning to drive up the coast for a couple of hours to Carmel where we had rented a bungalow on the beach for the week. By Wednesday night we missed the girls so much that we decided to cut the trip short and was back home Thursday afternoon.\n\nFriday morning, Colleen and I were in the attorney's office starting the paper work for me to adopt Meghan and Molly and legally change their last name from Wilkowski to O'Conner.\n\nOne month later, with me holding her hand, Colleen Margaret O'Conner gave birth to Brigid Fiona O'Conner.\n\nBut this time, I was an old experienced hand in the maternity ward. I was on my way back from the cafeteria with two cups of coffee for me and Colleen when I passed a young couple in the hallway that looked to be barely out of their teenage years. She was wearing an open robe over her hospital gown and looked to be ten months pregnant. He was much taller than she and had his arm around her, helping her to move along very slowly. He had a look of panic in his eyes as though he might bolt for the door at any second. I stopped and handed him my cup of coffee.\n\n\"Here, you're going to need this much more than I will.\"\n\nHaving a new born in the house was not that new for us any more, it was just part of our daily routine. Noelle was now eleven months old and immediately took notice of the new life form that had invaded her territory. Colleen was sitting in the rocking chair with Brigid in her lap when Noelle toddled over and stared at the first person she had ever seen that was smaller than she. Noelle squealed \"BeBe,\" clapped her hands, bent over and kissed her sister on the cheek.\n\nMolly immediately stepped in and took over the care of Brigid, impatient that she couldn't move onto her room right away. When it came to Noelle and Brigid, Colleen and I are the parents, but Meghan and Molly are the guardians. The sisters' bond between the four of them is stronger than any I have ever seen.\n\nThere are certain images that are burned into my memory. One of those images is when I was in kindergarten and sick. I had some type of virus and was in bed for a couple of days, weak and not able to do much of anything. To this day I can see Colleen sitting on the edge of my bed, wiping my face with a washcloth and then reading me my favorite story. Another image I have is when I was about eight years old. I walked into the livingroom on Christmas morning and there next to the tree was a bicycle with my name on it. Standing next to the bike was my Mom and Dad, the joy in their smiles just as big as my own.\n\nBut there is one mental picture that I keep pulling out to look at. It was the day after Thanksgiving when Brigid was just a few days old. Outside it was cold and dreary, everything inside was warm and we were wrapped in the cocoon of our house. I was standing in the dining room and looked through the archway into the livingroom. A blanket was spread out on the floor in front of the fireplace and Meghan was helping Noelle play with her blocks. Molly was lying on her stomach, watching and laughing. Colleen was sitting in the rocking chair with her blouse unbuttoned while Brigid nursed at her breast. Colleen was humming softly to Brigid as she alternated her attention between her daughter in her arms and her daughters on the floor. Occasionally she would look in my direction and give me the gift of one of her contented smiles.\n\nI love my family.\n\nNow, with four kids in the house we had to address a specific logistical issue. We became the first family in the neighborhood to own a minivan.\n\nThe same afternoon that we brought Brigid home from the hospital, Colleen grabbed a red marker and walked over to the kitchen calendar. She counted off eight weeks and raised her hand to circle the date when I grabbed her wrist. I moved her hand down to the following Friday and wiggled the pen until that date was marked.\n\n\"Bobby, what are you doing? That's nine weeks, not eight.\"\n\n\"I know, but what day is that?\"\n\nShe looked at it for a second then broke into a huge grin. \"My birthday, I like the way you're thinking.\"\n\n\"This year you are having a special birthday,\" I said, wiggling my eyebrows.\n\nColleen's response to this was to give me her contented half smile and a hug. \"Just do what you need to do, I can't wait.\"\n\nI had been thinking about this for some time. My part of the settlement after the divorce had been a little over $7,800. Somehow it seemed like tainted money to me and I hadn't wanted anything to do with it. I was earning good money at work plus Colleen had her income from her illustration jobs and Bill's insurance. We hadn't needed to use any of the blood money from Barbara. All of this time it had been sitting in a mutual fund account collecting interest. Because of the rising stock market it was now over $13,000. I knew what I wanted to do with it.\n\nOur parents had taught us to be careful with money. The four of us kids aren't cheapskates, but we don't spend money on frivolous extravagances either. We save our money and surround ourselves with comfortable things without living in debt up to our armpits.\n\nNow, I was going to spend the dirty money on something that was outrageously expensive for no other reason than to celebrate Colleen's birthday. I had already spoken to Mom and the twins and they were saving that date to help us celebrate. When I told Colleen what I had in mind she felt my forehead to see if I had a fever.\n\nAbout ten miles outside of San Miguel is a large rambling farmhouse. The descendants of the original owners from the gold rush era had expanded the structure and modernized the utilities without changing the charm of the architecture. It was no longer a working farm and the house had been converted into a restaurant and named after their great-grandmother, \"Gypsy Sally.\" \n\nIt is also the only five star restaurant between Los Angeles and San Francisco. There was a one year wait to get a reservation and many people planned their vacation itinerary around the reservation. It was the type of restaurant that did not have prices on the menu, but the cost at the end of the evening was about the same amount as a down payment for a house. I talked to Harold Peterson, he made few phone calls and got us a reservation on Colleen's birthday.\n\nThe nine weeks wait meant more time spent with my face between Colleen's thighs - not that I was complaining. But as her birthday drew closer, the more excited we became. This was going to be the once in a lifetime extravaganza.\n\nOne of the things that I had done was to hire a limousine. The limo picked up Mom plus the twins and their wives and brought them to San Miguel. This way they would not have to be concerned about the hour long drive back to Santa Teresa at the end of the evening. After they had arrived at the house, I ushered everyone into the livingroom where we waited for Colleen to finish getting ready.\n\nAs we stood around making small talk while we waited, I observed once again that the women in the O'Conner family were beautiful. Mom is an older version of Colleen with golden blond hair and deep brown eyes. Tonight she was wearing a pair of black silk tuxedo pants with a white silk blouse and a strand of pearls around her neck. We could all see where Colleen had got her curves and good taste from. Mom also had a while silk shawl with a twelve inch fringe around her shoulders.\n\nSharon is five eleven, only slightly shorter than Mike. Her medium brown hair is straight and falls down her back to her waist. Most of the time she wears it in a single thick braid but tonight it was hanging free with just a hint of a curl. She was wearing a jade green dress that accented the golden glow of her skin tones. The dress floated around her figure and was cut to fall below her knees, showing just the beginning cleavage of her ample bosom. Sharon was a big woman and while she would never be considered fat, she would never be accused of anorexia. Her Norwegian Viking heritage was obvious.\n\nMi Lin is five-six and thin. Her hair is jet black and hangs like a thick mass of shining silk thread, curling under at her shoulders. Her dress was a deep navy with a slit on one side that went from her calf to a couple of inches above her knee, showing just a hint of her thigh. The mandarin collar accentuated her slender neck. Her dark almond shaped eyes contrasted pleasantly against her fair skin.\n\nSharon and Mi Lin were roommates in college and double dated the O'Conner twins on a dare from one of their friends. The date must have gone well because within the year, the four of them were married in a double ceremony. Jimmy and Mike were just as much in love with their wives as I was with Colleen.\n\nJimmy looked at me and smiled. \"Nice suit. Let me guess, Colleen picked it out, didn't she?\"\n\n\"Yeah, how did you know?\"\n\nMike laughed. \"Because it fits and it doesn't look like you slept in it last night.\"\n\nThey were right. Colleen had insisted that if we were going to do this we were going to do it right. She had gone with me to buy a new suit and spent an hour telling me to be quiet as she conferred the tailor while I tried on various options. My reward for being patient during this ordeal was a couple of hours of incredible toe curling sex that night after the kids were in bed.\n\nColleen kept us waiting for only a few minutes before she entered the livingroom. This time even Mike and Jimmy's jaws dropped when they saw their sister. I had not seen what she had chosen to wear before this very moment. I stood there speechless. In all of the times I had seen Colleen dressed up for an event, I had never seen her this stunning.\n\nColleen had designed her dress herself and had it custom made for her. As in everything she does it was clean and simple in its line but in its' simplicity it was stunning. It was a sheath dress but had been tailored to fit Colleen like a glove. It skimmed along every line and curve of her body but was not so tight that she couldn't breathe or move around.\n\nThe dress was made of black silk velvet that seemed to reflect the light everytime she moved. The shoulder straps were wide and it was cut low in a scoop across her chest revealing about three inches of her cleavage. It was the lowest neckline I had ever seen Colleen wear. The bodice of the dress was constructed so that her breasts were held together but still allowed them to sway gently as she moved about. In was cut so that the back of the dress was six inches below her shoulder blades. \n\nIt was obvious that Colleen was not wearing a bra.\n\nThe hemline of the dress was about four inches above her knees and had a six inch slit on top of her left thigh. This slit gave her the freedom to move about without being constricted. She wore a pair of sheer nylons that were silver in color with a sparkle to them and a pair of low heeled shoes that were held on by a series of tiny straps.\n\nHer nail polish and lipstick matched in bright deep red, a shade that our father used to call \"Harlot Scarlet.\" The hosiery was sheer enough that we could see that the toenails matched the color of her lips. Depending on how the light would hit her, Colleen's appearance would change from simply tasteful to highly erotic and back again.\n\nColleen, Mom, Sharon and Mi Lin were congregated on the other side of the room from us, commenting on each others clothes as Jimmy, Mike and I were drinking in all of the beauty that was standing there.\n\nMike looked at Jimmy and I and whispered, \"Is it legal to have so many beautiful women in one spot?\"\n\nJimmy answered in his own whisper, \"Gentlemen, I hope you brought your clubs because the animals out there are going to try to steal our women tonight.\"\n\nThen all four of the women turned to look at us. This reduced my brothers and I to incoherent morons. The image of Colleen, Mom, Sharon and Mi Lin standing there smiling at us is one that is burned onto the retinas of my memory forever.\n\nFinally Mom said, \"Mike, will you do the honors please?\"\n\nMike reached inside of his suit coat and drew out an envelope and handed it to Colleen.\n\n\"Happy birthday Colleen, this is from all of us.\"\n\nColleen read the papers she had pulled out of the envelope and smiled. She handed them to me and said, \"That is great, thank you guys so much.\"\n\nMom and the twins had paid for a weekend for two at the Saint Francis Hotel in San Francisco and two advance tickets for the De Vinci exhibit that would be opening at the Legion of Honor Museum that same week, an exhibit that had already been sold out for six months.\n\nSharon was smiling when she said, \"The weekend is for two, maybe Meghan or Molly would want to go with you.\"\n\nColleen only grinned. \"No, I have a date with my husband that weekend. I think I can probably talk him into going with me.\"\n\nI looked at her with a serious expression, \"Only if you promise to be nice to me. Come here, I want to give you my present.\"\n\nWhen Colleen was standing in front of me, I bent over and opened the drawer of the end table. I took out a small box that was gift wrapped with a large pink bow. I had spent months looking for this gift and was nervous about how Colleen would react to it. Colleen pulled the end of the ribbon untying the bow and peeled off the wrapping paper. She held the small box in her hand and smiled at me before lifting the lid. When she saw what was inside her eyes grew larger and she gasped.\n\n\"My god Bobby, they're gorgeous.\"\n\nColleen held out the box for everyone to see what was there. Inside was a pendant necklace with matching pendant earrings. The stones were teardrop shaped and were the deepest dark red that is only found in the purest of rubies. Everyone was ooohing and ahhhing and Mike slapped me on the back.\n\n\"What do you know, you're not as tasteless as we thought you were.\"\n\nJimmy was laughing, \"Damn you Bobby, now I'm going to have to take Mi Lin shopping tomorrow.\"\n\nColleen stepped over in front of the mirror that was above the fireplace. She hooked the earrings in place, turning her head from side to side admiring how they looked.\n\n\"Bobby, come here and do the necklace for me please.\" \n\nI stepped behind her and could see the huge smile on her face in the mirror as I fastened the clasp at the back of her neck. I whispered into her ear, \"I can't give you the rest of your present until everyone is gone.\" \n\nThe pendant hung down midway between her neck and the beginning of her cleavage and lay against her chest. The contrast between Colleen's soft creamy skin and the deep rich red of the ruby was arresting. Colleen turned and put her hand behind my head, pulling it down until she could whisper in my ear.\n\n\"Thank you husband.\"\n\n\"I love you wife.\"\n\nColleen shifted her head until her lips were in contact with mine. My mouth opened and Colleen's tongue slid inside and began its dance of love. My arms went around her, one around her back and the other slowly sliding down until I could cup her ass. Colleen kept one hand at the back of my head, running her hand through my hair as the other went around my waist. Slowly she brought her leg up, the inside of her thigh massaging the outside my own as she hooked her calf around mine. Our groins were together and we began a small gentle rocking motion.\n\n\"AHEM\"\n\nI was startled by the sound of someone loudly clearing their throat. We immediately released each other as I spun around to face the room.\n\nMike and Sharon had suddenly discovered that the top of the lampshade was the most fascinating thing they had ever seen. Mi Lin was looking down at the floor with her hand shading her eyes and Jimmy had turned his back and was staring at the ceiling. Mom was standing there, staring with large saucer sized eyes and her mouth opening and closing like a guppy. I could feel more that see the color in Colleen's face turning a bright red to match my own. After several seconds that seemed like hours of embarrassment, Mom spoke.\n\n\"Will you two try to control yourselves! Colleen, go fix your make-up. Robert, you have lipstick all over your face.\"\n\nMom only calls me Robert when she is near the snapping point.\n\nLike two small children that had been caught being naughty, Colleen and I slipped into the bathroom to repair the damage.\n\nOnce we arrived at the restaurant and the meal was begun, we understood why it had the reputation it did. There were a total of ten tables in the room but each one had the atmosphere of being the only one there. The staff was quiet and unobtrusive; the only thing for us to do was enjoy the meal and the pleasure of our guests. The experience was proving to be worth every penny. As the waiters were serving the desert I looked down at my watch. I thought that we had been there for only an hour or so and was surprised to see that more than three hours had passed.\n\nAs we began the desert course, Sharon asked the question that we had all been wondering about.\n\n\"Margaret, how are things going with you and Dutch?\"\n\nDutch was the husband of Mom's best friend. Lydia had died a few weeks before Dad and Mom and Dutch had turned to each other for support during the grieving period.\n\n\"Oh, things are going fine, not much new.\"\n\n\"Do you think that you and Dutch will ever marry?\"\n\nMom gave a gentle laugh. \"Good heavens no. Dutch is a dear friend and one of the sweetest men I know, but it's never going any further than what it is now. We both agreed that we're just not interested that kind of relationship, we're simply not attracted to each other that way. All of our dates are when one of us has to go to some function and we need someone to keep the sharks at bay. Once you reach middle age and suddenly become single, it's amazing how much the rest of the world thinks of you as fresh meat. But we did agree that once we turn seventy-five, if we're both still single, we'll become roommates just so we can have someone to talk to at night.\"\n\nColleen asked, \"Do you think you'll ever remarry?\"\n\nMom smiled. \"I don't know, I don't really thinking about it. But if I did it would have be someone very special. Your father set a pretty high standard.\"\n\nWe were all lost in thought for a moment as we individually remembered Dad. Mom was still looking down at her plate when she spoke.\n\n\"I would like to say something.\" Then she looked up. \"First I want to say Happy Birthday Colleen, you look absolutely radiant tonight.\"\n\n\"Thank you Mom.\"\n\nMom paused for a moment then took a deep breath before continuing. She glanced at everyone around the table before settling her attention on Colleen and I.\n\n\"I don't know quite how to say this correctly so I guess I'll just jump right in. When you two first came to us with the news about Noelle coming, I was not pleased, but you are my children and I will never turn you away. Since then, and especially after Brigid was born, your brothers and I have had a lot discussions and they have pointed out a lot of things that I had never seen before. I don't know how your father and I were so dense as to not see how much you two have loved each other your whole lives. But I do see it now and I'm OK with what you're doing. Family or not, I've never seen two people who care for each other like you two. Mike and Jimmy, that goes for you too. Nothing makes a mother happier than to see their children find the person they love and give me such wonderful grandkids. If your father were alive, I think...no, I know that he would be very happy. What I'm saying is that...that I am sorry for being so late to say this but you have my blessing. Keep making each other happy.\" Mom's voice was too filled with emotion to continue so she stopped speaking.\n\nColleen, Sharon and Mi Lin each sat with tears in their eyes. Then Jimmy spoke. \"Mike and I feel the same way you guys, happy birthday Colleen.\"",
        "I didn't speak until I could get my emotions under control, and then it was barely above a whisper. \"Thanks Mom. You don't know what it means to us to hear that from you.\"\n\nWe all sat in silence for a few minutes, then finished the desert and sat enjoying the after dinner coffee. Jimmy was telling us a story about some adventure involving him and his patrol partner, making us all laugh. Colleen was sitting with her arm on the back of my chair, slowly and lightly stroking the back of my neck. There was a lull in the conversation when she leaned over and whispered in my ear.\n\n\"I'm not wearing any panties.\"\n\nFortunately the coffee cup was empty when it slipped from my fingers, bounced off the plate and landed on the floor. The racket startled everyone except for Colleen who stood and said, \"If you'll excuse me, I need to go to the ladies room.\"\n\nSharon and Mi Lin immediately pushed their chairs back and stood up.\n\n\"Sounds like a good idea, we're right behind you.\" Then they all left the dining room.\n\nAs we watched them walk away, Jimmy's brow was furrowed as he asked the question Mike and I were wondering about.\n\n\"Why do they do that?\"\n\n\"Do what?\" Mom asked.\n\n\"Why do women always go to the bathroom in a group like that, is it some sort of herd instinct?\"\n\nMom only laughed. \"It's one of those secrets that only women know and I'm not going to be the one to tell. You're just going to have to suffer without knowing, just like your father did.\"\n\nThe four of us continued talking but after a while I noticed that our wives had been gone for quite awhile. Just as I was getting up to go look for them they returned to the table. As she sat down, Colleen had her half smile on her lips and she gave me a kiss on the cheek.\n\n\"Where did you go, I was starting to get worried.\"\n\nColleen only smiled and whispered, \"We had a very interesting conversation in the ladies room.\"\n\n\"What about?\" I whispered back.\n\n\"Oh just girl stuff, I'll tell you later...when you're ready.\"\n\nSharon and Mi Lin had sat back down by their husbands. Mi Lin scooted her chair closer to Jimmy and it looked as though she had subtly put her hand in his lap under the tablecloth. Jimmy's mouth opened part way and his eyes rolled back as he slowly tipped his head upwards. \n\nSharon leaned over and was whispering into Mike's ear. His head snapped around and looked at Sharon, his eyes bugging out as she slowly nodded her head yes. Mike looked first at Jimmy and then me, beads of sweat beginning to form on his forehead. He gulped as he spoke.\n\n\"This has been a lot of fun, but...umm...I...uh...I...I...I have to get out to the job site early so we better get going.\"\n\nJimmy was quick to add, \"uh...yeah, me too...I mean I have a lot of paper work to finish at the station...we better get going...quick.\"\n\nMom and I looked at each other, confused, but shrugged our shoulders and began gathering our stuff to leave. Mike and Jimmy were doing everything they could to get us to hurry and I noticed that Colleen, Sharon and Mi Lin each had a small conspiratorial smile on their faces.\n\nOn the ride back to the house, conversation was stilted and the twins seemed nervous and agitated. I invited everyone in for some tea before they had to go back to Santa Teresa, but Mike and Jimmy both yelled \"NO!\" The last thing I heard as Colleen and I got out of the limo was Jimmy yelling at the driver, \"There's an extra hundred bucks in it if you get us home by eleven.\"\n\nThe tires were screeching on the pavement as the limo pulled away from the curb.\n\nColleen and I stood on the sidewalk and watched the taillights of the limo as it sped down the block and turned the corner. I was baffled by the twin's behavior and looked at Colleen.\n\n\"What was that all about?\"\n\nColleen looked at me with her half smile and said nothing for a few moments before answering.\n\n\"Let's get inside; I'm sure that Debbie wants to go home.\"\n\nWe walked up the steps of the porch and stood at the door. Before I unlocked the door to go in, I took Colleen in my arms and pulled her to me. I kissed her lips softly and quietly said. \"I love you Colleen.\"\n\n\"I love you Bobby.\"\n\nAfter we got inside the house, we found Debbie sitting at the dining room table with a plate of cookies and a glass of milk, working on some math problems for her homework. Debbie was the teenager from across the street that did most of our babysitting.\n\n\"Hi Debbie, how were kids?\"\n\n\"They were great. Noelle fussed a little about going to bed but Meghan took care her right away. When she and Molly get a little bit older, I think I'm going to out of a job. How was the restaurant?\"\n\nColleen and Debbie were talking as Debbie gathered up her things to leave while I went to kiss the girls good night in their sleep. I was coming back down the hallway when I heard Colleen call out softly, \"I'm going to walk Debbie home, I'll be back in a few minuets.\"\n\nI raced into the bedroom and began ripping my clothes off. I knew that Colleen would take a few minutes to exchange pleasantries with Debbie's parents but time was short and I wanted it to be just right. Finally everything was ready and I lay down on the bed just as I heard the front door open. I listened as Colleen locked the door, turned off the last of the lights in the dining room and heard her footsteps in the hallway.\n\nWhen she stepped into the bedroom, the light from the hall was shining through the doorway and the backlight made her hair glow even more golden. She looked at me lying on the bed as her half smile slowly turned into a grin of eager anticipation.\n\n\"I'm ready for the rest of my birthday present.\"\n\nThis is definitely not the end of the story.\n\n~~~~~*~~~~~\n\nWhat started out as a simple story has now taken on a life of its' own. There will be a third and final (I promise) part. I had not intended to take so long to get this far in the story of Colleen and Bobby but I am a very slow writer and lazy to boot...not to mention that there is this thing called \"Life\" that continues to get in the way of all the things we actually want to do. I can't wait to find out what happens in part three.\n\nSince I'm not getting paid for this story, my only reward are your votes and the comments posted below plus feedback through the e-mail. So the far the comments have been positive and I am very grateful, they have made it all worth the effort. Please give me more; everyone likes to have their egos stoked one in awhile. \n\nThanks. "
    ],
    "authorname": "Texas Refugee",
    "tags": [
        "sibling incest",
        "incest romance",
        "pregnant",
        "brother",
        "sister",
        "sibling"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/colleen-ch-02"
}