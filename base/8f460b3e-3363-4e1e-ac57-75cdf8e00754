{
    "title": "A Summer By The Lake",
    "pages": [
        "This story took a while. My biggest flaw is impatience, so I've decided to slow down and try to give you a better product. There isn't a lot of sex in this one.\n\nThere is some religion mixed in this, because I based part of it on people I know, and they actually met at church. You're supposed to write about what you know, and I was raised in Southern Baptist and Methodist churches. I'm not trying to influence or convert anyone. It's just part of the story.\n\nI myself don't endorse any brand of religion. If I had to describe my beliefs, I believe the best would be agnostic Druid.\n\nEnjoy.\n\n.................................................\n\nJudging by the sound of the stream, she really, really had to go.\n\nI actually heard her before I saw her. Over the last two years, I had developed the habit of walking quietly. I had also started carrying a camera, taking pictures of things that appealed to me. I found if I walked quietly, I was more likely to get a good nature shot, catching the odd deer, squirrel, or turtle. Once I came up on a bear, boy were we both surprised. He took off one way, I took off the other.\n\nI came around the curve of the path, and there she was.\n\nReally pretty backside. That's all I could see as she was squatting, urine splattering the ground. I didn't know what to do, so I said \"Hi. Beautiful morning, don't you agree?\"\n\nShe screamed and almost did a back flip, then started thrashing around, desperately trying to pull her yellow bikini panties and shorts up.\n\nThe scream got louder when I scooped her up in my arms and ran towards the lake. She was using words I had only heard rarely and beating my chest. I waded in about waist deep, damn that water was cold! Her shriek turned into a gurgle as I tossed her even farther out.\n\n\"Stay there!\" I yelled as I reached shore, holding her shorts and panties in my hand.\n\nI ran home, grabbed a handful of towels and a terrycloth robe. I also had a pair of swim trunks.\n\nShe was screaming and cussing to beat the band, it was echoing all over the lake. Too bad there was no one there to hear it. My head was starting to hurt.\n\n\"SHUT UP, YOU STUPID BITCH. THAT WAS POISON OAK YOU WERE WALLOWING AROUND IN! THE COLD WATER OF THE LAKE WILL KEEP YOUR PORES CLOSED. THAT WILL KEEP A LOT OF THE JUICE FROM SEEPING IN.\"\n\nI stopped yelling and started using a conversational tone.\n\n\"Here\" I said, tossing her a bar of soap.\n\n\"This soap has ingredients that will stop the spread and help with the itching, Was your bottom good, and make sure to clean the tender parts. As it is, you're still going to be uncomfortable for a week or two.\"\n\nShe calmed down, and I put the towels and the robe on a big rock.\n\n\"When you get done, use the towels, swim trunks, and robe. I'll leave your clothes here, but wrap them in a towel to carry home. The trunks will stay up if you pull the drawstring tight.\"\n\nShe had finally stopped cussing and stood in the water shivering. I told her to wait until I'm gone if it made her uncomfortable, then come to shore. She apologized and asked if I would bring her a towel out so she could wrap herself.\n\nHell, I was already wet, so I waded out and handed her a towel. Instead of taking the offered towel, she snatched the camera I had around my neck, breaking the strap, and hurling it as far as she could into the lake.\n\n\"That was a nine hundred dollar camera and a four hundred dollar lens! Are you as crazy as you act, or has the cold water numbed your brain?\"\n\nShe had a triumphant smirk on her face.\n\n\"Neither, you pervert. Now you can't post the picture you've already taken, or the ones you were going to take while you hid in the bushes as I came out of the lake.\"\n\nI was six feet tall and weighed one eighty, and worked out religiously. She was about five foot one and weighed one hundred and one pounds, in this case soaking wet. I literally snatched her out of the water, held her over my head, and tossed her as far as I could into deeper water.\n\nThere was a glimpse of bare bottom as she sailed out, apparently she went for the smooth look.\n\n\"YOU BAS...\" was all she got out before she hit the water.\n\n\"See if you can find my camera while you're out there, bitch!\" I tossed over my shoulder as I waded back to shore. I was shaking with rage as I gathered my things. Fuck her, I thought as I started to walk away. The only thing that stopped me was the snuffling and wailing going on behind me.\n\n\"Please leave me the robe and a towel. Please, I'm begging you.\"\n\nWell I didn't want her to get a cold, or hypothermia. The temperature of that mountain water in mid May was about fifty eight degrees on average. I dumped the armful into the path and kept walking, fuming as I went.\n\n..............................................\n\nThis little lake wasn't really developed. Three fourths of the shoreline was owned by the power company. Five families had originally owned the rest of the property. I had managed to buy two of them out, giving me the lions share of the private property. The other three families had vacation homes, and from Memorial Day until Labor Day, I had neighbors.\n\nThere had been a developer sniffing around, trying to buy up the property. I had flat out refused her, and she hinted around about imminent domain, and I circumvented him by having part of my property and a bit of my neighbors' placed on the historic register. There were three family graveyards and a small log church on my land. I gave free access to the descendants, and even kept the church in repair. It was often used for weddings. I let people use it for a donation to the local historical society. The power company property was in the process of being sold to the state to extend a park, so that part of the lake was safe.\n\nAbout eight months of the year I was pretty much alone, sometimes even snowed in. I didn't care. If I really had to get out, I had a four wheel drive tractor with a scrape blade. I would clear my three quarter mile driveway, then get out my 1958 M38A, a one ton, six wheel drive Dodge that I had fully restored. You could drive up cliffs with that thing. Most times I stayed home.\n\nMy house was solar powered, with backup generators. I hadn't had a power bill in five years.\n\nWas I a hermit? Not exactly. I enjoyed people and often traveled for my work. I'd had a bad experience six years before that made me extremely suspicious of people, and gave me a mountain of trust issues.\n\nI was a writer. In my youth I had dreamed of writing the Great American Novel. Majored in English and minored in journalism. Worked for a few years with newspapers, getting better jobs with bigger papers as my skill grew.\n\nI got my big break when I discovered corruption between local officials and state lawmakers concerning the proposed route of a four lane bypass. Bribery, kickbacks, strong arm intimidation, even an attempted murder. I got a nomination for a Pulitzer and three weeks in a hospital out of it. The attempted murder was mine.\n\nOf course I wrote a book about the whole thing that became a best seller in nonfiction. I got a three book deal, specifying one had to be a novel.\n\nThe publisher agreed, knowing if it stank it would never grace a page. My second book was a biography of Billy Dixon, a larger than life Western hero that never got his due. I had been researching it for years before I got a book deal, so I put it together in eighteen months. It surprised everyone by being even better than the first. One reviewer said he could smell the gunpowder and sweat as he read it. \n\nBoth books were made into movies, and the Western got really good reviews.\n\nMy novel surprised even me, staying on the bestseller lists for three months. It became a movie also.\n\nI got a seven figure advance on my next contract, a three book deal, on any subject I wanted.\n\nI was putting the finishing touches on a book about what amounted to a small war between union\n\norganizers, the local sheriff department, and the national guard. It was in 1929, in a small North Carolina town. Many of the union organizers were also Communists. People on both sides were killed, including the sheriff.\n\nThis was fairly recent history, I was able to interview many of the children of the participants, as well as researching the local papers, oral histories, etc. I got lucky and one of the descendents handed me the diary of his grandfather, documenting the whole thing, naming names, talking about under the table deals the organizers and the sheriff tried to put together but couldn't agree on, as well as a love triangle that figured prominently in the whole affair. Sex and money, politics, murder, tragedy, it had a little something for everyone, including candid photos that had never been seen. My editor and publisher were drooling. It was due out in August, and we were giving excerpts on the publishing website.\n\nIf I'm so successful, why was I alone?\n\nGood question.\n\n................................................\n\nI was married at the time I uncovered the road deal corruption, to a local girl. We had courted for nine months, and had been married for twenty two months. Newlyweds. We were still finding things out about each other.\n\nI was at the newspaper, a fairly large one for the area. Like I said, she was a local girl, working for her uncle in the local county tax office. Her dad was county manager. I always had a good source of quotes about county business if I needed one. I got along well with her family.\n\nHarvey Gant was the chairman of the Republican party, a local power broker, and owned a large scale beef farm operation. Her uncle was head of the Democratic party. To say these two didn't like each other was an understatement.\n\nSlurs and accusations flew on a regular basis. I was covering politics, and I never lacked for a story. My wife Angie once told me her dog was run over and killed when she was eight, and her uncle told her a Republican did it. She's hated Republicans ever since.\n\nTraffic through the county had been getting steadily more congested for years, and the state finally decided to build a four lane bypass. Making use of aerial maps, they had four different routes that would work.\n\nThat's when the fight started. Imminent domain was a time honored tradition of acquiring property for the greater good, and that's what ultimately happened. Some landowners actively lobbied to get the road to come through their property, while other threatened lawsuits if they even thought their land would be touched. \n\nThey did impact studies, cost estimations, rough surveying, and computer mapping to determine the best course. They held monthly update meetings with the public.\n\nFinally, two routes were recommended by the state.\n\nWhen the announcement was made, everyone was stunned when neither was chosen. The route that appeared to be the most expensive and least likely was chosen. People were in an uproar.\n\nThe highway commissioner held a press conference, lauding the route and refused to answer questions, giving out press packets instead. It was one of the most interesting fairy tales I had ever read. There wasn't one solid reason given as to why they chose that particular route. Something smelled. Bad.\n\nIt was my area, so I started digging. Without getting long winded, The commissioner, my wife's uncle and dad, and Harry Gant had conspired to have the route approved. It pretty much destroyed the biggest farming rival Harry had, taking almost his whole farm, took an unexplained bend, and just skirted Harry's farm, taking scrub land of little value. Harry got almost twice the value off his acreage, the other farmer got about sixty per cent of the estimated value.\n\nThe other farmer was no fool, and he too had friends in high places.\n\nI had reported weekly on the story, digging deep and finding a disturbing paper trail that led to their downfall. It was getting hot for every one involved when I started getting threatening phone calls, which I taped and stored.\n\nHer father paid me a visit at home. I often worked from home, and had an office set up in a spare bedroom. I had a slogan an old reporter had given me, it was a quote, I never knew from who.\n\n\"It is the job of a good reporter to report the news, factually, and raise hell.\"\n\nI had another quote from Rikki Tiki Tavi, a Rudyard Kipling book of the nineteenth century.\n\nRikki Tiki was a mongoose, a small mammal that liked to hunt and kill cobras. They had no immunity, if they got bitten they died, but they were both smart and quick, and usually beat the snake. There were no slow, dumb mongoose alive.\n\nIt talked about the curiousity of the species, saying the mantra of any mongoose was \"Go and find out\"\n\nMy father in law had evidently read the book.\n\n\"Be careful Sam. A mongoose can easily beat a cobra, but what if there's several, and they all attack at once? Survival chances would be slim to none.\"\n\nI threw him out of the house. That's the day my marriage died. Angie begged me to drop it, but I was like a bloodhound. I had struck the scent, and I had to follow it to the end.\n\nI passed my evidence on the the FBI. I didn't trust the locals, and because we lived in a border county, and part of one of the farms had acreage in both states, they had jurisdiction.\n\nThe players panicked. I had a hot tip and went out to meet my informant. Nobody was there. I walked around for a bit. I was at a small pond in the middle of nowhere. Bored, I bent down to pick up a flat stone to skip over the water.\n\nIt saved my life. They gave a good old boy five thousand dollars to kill me with a deer rifle, a Remington 7mm. The shot went through the top of my shoulder, breaking the collarbone before splitting in half. One part went down the outside of my ribs and out just past my short ribs. The other half went under the ribs, nicking a lung before exiting out just above my hipbone. I dropped like a rock.\n\nI was in shock so I wasn't hurting. I managed to call 911 and give them my location before the pain hit. And when it hit, it rendered me incapable of anything else.\n\nI was less than two miles from a volunteer fire department, and one of them with EMT training was there in less than ten minutes, and had me stabilized before the ambulance arrived. When I came into money later, both groups got a sizable donation. I was taken to a hospital at the state capital and placed under FBI protection. In the next week, Her dad, uncle, the highway commissioner and two of his deputies, Harvey Gant, and a few local flunkies were all indited. Angie was arrested as an accessory, and actually served a year. They ratted the guy who shot me out, hoping for a lighter sentence.\n\nAngie filed for divorce while I was still in the hospital. Mental cruelty, if you can believe it. She was the one who talked the guy into shooting me, sealing the deal with a little bedroom romp. If that had come to light during the trial, she would have to serve at least eight years. I could have given the D.A. what I found, but it just didn't matter to me anymore. We were divorced before she started her prison term. She was twenty four. I never spoke to her after the divorce.\n\nI sued everyone who conspired in my murder attempt, and got a nice cash settlement. Not a lot, but enough to allow me to work exclusively on my book. When the money started rolling in, I never looked back.\n\n................................................\n\nI came home three days later, to find my swim trunks, robe, and towels laundered and stacked neatly on my porch. No note, nothing.\n\nThe next week my sometime neighbor stopped by, I assume to check up on his vacation home. We sat on the porch and drank coffee.\n\n\"How do you like your new neighbor?\"\n\nI looked up.\n\n\"I didn't know I had a new neighbor.\"\n\n\"Bill's girl. Went through a messy divorce, I hear she's staying at their cabin this summer, or until they sell it. Bill's retiring, says he's going South. Says he's tired of being cold even in the summer.\"\n\nInteresting news.\n\n\"Has he listed it yet?\"\n\nHe paused, thinking.\n\n\"Not yet, I think he said he was going to let his daughter stay there until she had her head together before he did.\"\n\n\"Have you got his number? You know I want to keep the property out of the hands of developers. I'll pay fair market value, maybe a little more if he sells pretty quick. I'll even let his girl stay all summer if she wants.\"\n\nThe old man smiled.\n\n\"Thought you may say something along those lines. Here's his numbers. He said call anytime after five. Thanks for the coffee, and keeping an eye on my place. I'll be up for the summer in a couple of weeks. My wife wants you to come over for supper. She thinks you ain't right in the head for not havin' a woman. Gonna dangle a niece and a cousin under your nose. Be prepared.\"\n\nHe's had a lot of entertainment watching his wife try to fix me up off and on for the last four years, says it's better than a soap opera. So far the score has been eight to zero in my favor. But I'll give her her due, she has persistence and doesn't understand the concept of quit while you're losing. One of these days I was going to put her in one of my novels. Still I liked the old girl, when she wasn't trying to marry me off. \n\nI called Bill, he had it appraised, and I gave him ten percent over tax value, a good price, considering the real estate market. I left it in the hands of the lawyers, and up to him to tell his daughter.\n\nI saw her about a week after we first met, at the little town at the foot of the mountain. Two gas stations, two churches, a small grocery store, a Dollar General, and a hardware/feed store, that also sold bait and fishing supplies, and a post office. One small diner. Any thing more than'that you had to travel another thirty miles, to the county seat. \n\nShe was pumping gas. She turned about eight shades of red when I pulled up on the other side of the pumps.\n\nI said hello, she didn't bother to answer me. For some reason that irritated me, but I shrugged it off. Fuck her. She was gone when I came back out.\n\nThe good ol' boys were talking about her.\n\nBob, who had to be at least 130 years old, commented while looking straight at me.\n\n\"She's a looker, that one. Bet she's lonely, up at the lake by herself. Too bad she don't have a friendly neighbor or two.\"\n\nI smiled.\n\n\"Good try, but she's like that actress out of the thirties. She wants to be alone. What was that actress's name? You dated her, didn't you Bob?\"\n\nThe rest of the men laughed while Bob spit into his cup. That shit was gonna kill him someday.\n\nHe surprised us all.\n\n\"Greta Garbo, and she never actually said that. She said I want to be LEFT alone. And, she was a fine lookin' woman. Some say Marlene Dietrich said it first, but who knows?\"\n\nWell, you never know. Bob apparently had a huge collection of classic movies, and a pile of books on movie trivia. His friends spent a bunch of time trying to stump him when they found out, and rarely did.\n\nI left the next week for a short promotional tour of my book, hitting the early morning and late night talk shows. I tried to schedule them in bunches, and they would air them when the book was released. I neither liked nor disliked doing them, they were a job requirement, somewhere comparable to being required to wear a suit or safety glasses on a regular job. Plus, there was one local morning show hostess that I liked to spend time with. Nothing serious, if she was seeing someone it was just lunch, but if she was between relationships, it would be dinner, followed by breakfast the next morning. We had waffles, usually.\n\nIt was eighteen days before I got home. I sighed as I got out of the car, happy to be out of the rat race. I walked through the house, breathing the familiar smells, and out onto the deck, stopping to grab a beer out of the fridge.\n\nThere looked to be a genuine wood sprite sitting on my deck, but on closer inspection turned out to be a girl, between ten or twelve. She had on a green one piece suit and cutoffs, black curly hair, and green eyes.",
        "\"Who are you?\"\n\nShe let out a little scream, going halfway off the deck before she stopped, looking back warily.\n\n\"Who the hell are you, asshole?\" she asked back.\n\nI tried to hide my amusement by taking a firm tone.\n\n\"Do you kiss people with that potty mouth?\"\n\n\"Just my mother. You didn't answer my question.\"\n\n\"I asked first.\"\n\n\"Brittany Brianna Jones.\"\n\n\"Harrison Hardison Smith. Now Miss Jones, how do happen to be on this deck?\"\n\nShe stood as tall as her four foot eleven height would allow, trying to look confident.\n\n\"I've got permission. Mr Howell asked us to look in on his house. I come here because I can get WiFi.\"\n\nI noticed the tablet in her hands.\n\n\"Well, Miss Jones, that[I pointed to the house down the hill, just barely visible] is Mr. Howell's house. This one is mine.\"\n\nShe went about six shades of red.\n\n\"You sure this is your house?\"\n\n\"That's what it said on the deed last time I looked. Want a coke?\"\n\n\"I don't know you.\"\n\n\"That's right. But it wasn't me sitting on your deck. You can stay if you want. I have questions. Chips?\"\n\nI went back in and put my beer away, getting two cokes and a bowl of chips and sitting them on the table. I sat in a rocking chair while she sat at the table, asking questions one after another, between munching on chips and sipping the coke through the straw I gave her. She started.\n\n\"How come I haven't seen a jet ski or a powerboat?\"\n\n\"Because the state owns most of the shoreline and banned them. Canoes, paddle boats, and sailboats only.\"\n\n\"Are you married?\"\n\n\"No.\"\n\n\"Got any kids?\"\n\n\"No.\"\n\n\"Live here by yourself? Got a girlfriend?\"\n\n\"Yes, and no.\"\n\n\"Why not?\"\n\n\"Don't want one.\"\n\n\"Don't want one now, or don't want one ever?\"\n\n\"Just right now.\"\n\n\"You're not gay, are you?\"\n\n\"No, and if I was, I wouldn't want a boyfriend right now, either.\"\n\n\"Can I come back?\"\n\n\"Why?\"\n\n\" 'Cause this is the only place I can get reception.\"\n\nWe switched. I started asking her questions.\n\n\"Who are you here with?\"\n\n\"My mom.\"\n\n\"Mom got a name?\"\n\n\"Sarah Parker. She took back her maiden name in the divorce.\"\n\n\"Ah, is she the one who showed up a while back, before everyone else? The real friendly woman?\"\n\n\"No. She's the one who showed up with a bad attitude. She's here to get away from everything, everything being my dad.\"\n\n\"How do you feel about that? Did you feel the need to get way from everything too?\"\n\nFor the first time, the little girl in her surfaced.\n\n\" Yes, bit it sucks. Dad was mean to her and me. He didn't hit us, but called us, especially mom, a lot of names. I don't think he loved us much. I know he doesn't, now.\"\n\n\"Now, how would you know that?\"\n\n\"Because he told us.\"\n\n\"In those exact words? I don't love you?\"\n\n\"No, his exact words were 'now that the bitch and the brat are out of the way, I can have some real fun'. He was living with some woman the next week. Says he's gonna marry her.\"\n\nWhat an asshole.\n\n\"You're right. That does suck. Look, it's getting dark, do you need a flashlight to get back home?\"\n\n\n\nShe looked around. \n\n\"Oh no. Mom's gonna have a cow. Will you walk me home? I was supposed to be home before now.\"\n\n\"I'll do you one better. Ever been in a canoe?\"\n\nI could see the excitement in her eyes.\n\n\"No, but I've always wanted to.\"\n\n\"Come on, then.\"\n\nI pulled my two seater out of the shed, and put her in the front, making sure her life jacket was tight.\n\n\"Canoe class, first lesson. A canoe is like a bicycle, it'll go in the direction you lean. Lean too far, and over you go. Sit up straight, keep your center of balance. Ready?\"\n\nShe did well, actually listened to me. Once I got us out in the water and going in the direction we needed, I even let her paddle, steering with mine when I needed to correct course. In a third of the time it would have taken to walk, we were beaching in front of her house.\n\nHer mom was in the yard, looking up the trail. She liked to be called B.B., and her mom was calling it out, to get a response. \n\n\"Behind you, mom! Look, I drove a canoe. It was great, can we get one?\"\n\nYou don't actually drive a canoe, but I wasn't going to spoil her mood. I didn't need to worry, mom was more than happy to do it for me.\n\n\"Where have you been, young lady? You were supposed to be back an hour ago. I was worried to death.\"\n\n\"Gee, mom, I'm fine. I was talking to Mr. Smith and lost track of time. He brought me home in the canoe, isn't it great? We need to get one.\"\n\nShe looked at me with blood in her eyes.\n\n\"You! I might have known. Stay away from her, you pervert.\"\n\nB.B. was looking back and forth at us with her mouth hanging open.\n\n\"Mom! Leave him alone! He was nice to me. I was trespassing on his deck. I didn't know it was his house. I thought I was at Mr. Howell's house.\"\n\nShe was still angry.\n\n\"I'm warning you. Stay away from her.\"\n\nI looked at her, thinking if I had been married to her I would have left too, and it wouldn't have been over another woman.\n\n\"If that's your wish. Bye B.B., it was good to meet you.\"\n\nShe looked like she was going to cry.\n\n\"Bye, H.H.\" She had called me that because like her, my first two initials were the same. I thought it was cute.\n\nSound carries over water really well. As I paddled away I could hear the exchange between mother and daughter.\n\n\"You had to do it, didn't you mom? One person in this wilderness, and I can't talk to him. Do we have to make a career out of being miserable?\"\n\nHer voice sounded weary, almost defeatist.\n\n\"No, honey. But I don't trust that man. Stay away from him.\"\n\n\"What did he do, mom? Why do you dislike him so much?\"\n\n\"Stop, B.B. Go on into the house, we'll make some hot chocolate. It's supposed to be summer, damn it.\"\n\nI could hear the child's grumbling voice as she went into the cabin.\n\n................................................\n\nI didn't see them for five more days.\n\nAnd as usual, it was inopportune. They were sitting on the side of the road, with the hood up and steam coming out of the engine compartment.\n\nI pulled behind them and got out.\n\n\"Need some help?\"\n\n\"We're fine.\" she snapped refusing to look at me. It was getting dark. B.B. didn't look fine.\n\n\"All right, just thought I'd offer.\"\n\nI walked back to my truck slowly, shaking my head at stupid, stubborn people. I had walked around the car on the way back. It must have just happened, there was to much steam to see the problem.\n\nI heard the door fly open and running steps. It was the girl.\n\n\"Please, H.H., don't leave us out here in the dark.\"\n\nI felt bad for her.\n\n\"I wouldn't do that. I was going call a tow truck when I got down to the village to pick your car up. I figured by the time I came back your mom would smarten up enough to let me take you home.\"\n\nWhile we were talking her mom got out and came to the truck.\n\n\"B.B.! Get in the car. I can handle this.\"\n\nGod, that woman was irritating.\n\n\"And just how are you gonna handle it? I'm sure by now you know you can't get cell service until you get to the bottom of the mountain. Maybe you were going to walk the six miles into town, just a nice, leisurely stroll in the dark with your daughter. A good bonding moment, huh? By the time you get to town the garage will be closed and no one can get to your car until Monday, Bob refuses to work on Sunday. Then you can walk back up the mountain and on home. It's only eleven miles, more or less.\"\n\nI was standing close to the girl and put my hands over her ears.\n\n\"Get your head out of your ass, goddamnit! Think of your child first, for a change.\"\n\nShe drew in a sharp breath, ready to explode as I took my hand off B.B.s head, hopefully cutting off any profanity riddled rant.\n\nShe was past red, she was purple. I didn't give her a chance to speak.\n\n\"If you need anything out of the car, get it now. If we hurry, maybe Bob will come out before he goes home tonight. B.B., you can ride in the front, okay?\"\n\nB.B ran and got her mothers' purse and a small backpack. My truck had an extended cab, with a small back seat. Sarah refused my help getting in. B.B. settled into the front seat and immediately started chattering.\n\n\"I looked you up. You're kind of famous. Where can I get your books? I've never met a writer before.\"\n\nI glanced into the rear view mirror. Was that interest on her face?\n\n\"Don't waste money buying any. I have a few copies you can have, just tell me when you're coming and I'll leave them out on the porch.\"\n\n\"Can I keep them?\"\n\n\"If you want.\"\n\n\"Will you autograph them for me?\"\n\n\"Yes. But first your mom has to give her permission.\"\n\nShe turned around to her mom.\n\n\"Can I mom? You're always after me to read more. Please.\"\n\nIt nearly choked her to say yes.\n\n\"Leave them on your porch tomorrow morning and I'll pick them up.\"\n\n\"If that's the way you want it. I won't be there, I'll be at church.\"\n\nThe disbelief was obvious in her eyes.\n\n\"You're a church goer?\"\n\n\"Does that shock you? I don't go every Sunday, but I try. You should come.\"\n\nI looked over at B.B.\n\n\"You should come too. It'll give you a chance to meet some of the locals your age.\"\n\nHer eyes lit up. She was starving for contact with people her age.\n\n\"Can we Mom? Please?\"\n\nShe had the decency to look uncomfortable.\n\n\"Maybe later. Remember, our car is down. We couldn't go this week anyway.\"\n\nShe turned her eyes on me.\n\n\"Can we ride with you? You're going anyway.\"\n\nI heard the sharp intake of breath in the back.\n\n\"I'd love for you to go with me, but that's something you should talk over with your mom first. Tell you what, I'll swing by your place about eight thirty. If you guys want to go, come out. If not, I'll go on.\"\n\nThat situation defused, I listened to her chatter all the way down the mountain.\n\n.................................................\n\nWe just made it to the garage. Bob grumbled, but agreed to get her car and check it out Monday.\n\nI was on my way to the grocery store when I found them. It seems that was their destination too.\n\nThe diner was still open.\n\n\"Would you ladies like to join me for dinner? You should taste their pizza, they cook them in a clay oven.\"\n\nSarah was about to say no but B.B.was literally bouncing. Seems pizza was her weakness.\n\n\"Please mom? Please, please, please? I'll do extra chores next week. Please?\"\n\nShe actually relented.\n\n\"All right, if we pay.\"\n\nI shook my head.\n\n\"No deal then. I invited you ladies, so the meal is on me. I will not negotiate.\"\n\nI saw her temper rising, but she swallowed it. She was still giving me evil looks when we went into the diner.\n\nMel and Mabel were the owners. They were also twin sisters, and despite being in their late forties they sometimes still dressed alike.\n\nMel bustled over with menus. She took a long look at us and giggled.\n\n\"Ooh, Harry. I knew some girl would land you eventually. Is this your daughter? She has your eyes.\"\n\nI smiled while mom glowered. I hadn't noticed it before, but B.B., like me, had green eyes.\n\n\"No, Mel. These are my neighbors. I told them they hadn't lived until they tasted your famous pizzas, so here we are.\"\n\nI did the introductions, and B.B. turned to the menu.\n\n\"You know what I want, Mel. Large veggie, mushrooms, red onions, red bell peppers, basil and tomatoes, light on the sauce. Heavy on the garlic. Extra cheese.\"\n\nShe gave me a disapproving look. In her world there was something wrong with a man who didn't subsist on meat. I wasn't a vegetarian, this was just the type of pizza I liked.\n\nB.B. looked over at me.\n\n\"Can I have what I want?\"\n\n\"Isn't that what I told you when we sat down?\"\n\nMom was about to speak but B.B. beat her.\n\n\"I want a large meat lover, double meat, double cheese, thin crust, please.\"\n\nMel was beaming.\n\n\"Good choice, child. Now, what about you?\"\n\nSarah looked confused.\n\n\"I'll just share some of theirs.\"\n\nI grinned and looked at B.B.\n\n\"I'm not sharing, I take it home and have it for breakfast in the morning. What about you?\"\n\nShe gave me an understanding smile.\n\n\"Oh, no. This one is mine. I intend to eat it all tonight. Mom, looks like you're on your own.\"\n\nShe didn't know what to do, so she ended up ordering a medium peperoni.\n\n\"Make that a large, Mel, double the pepperoni. And a pitcher of the house special, please.\"\n\nThere was a local company who specialized in root beer and sasparilla soda, very good products. It even came on tap, and was a local favorite.\n\nIt looked like bock beer. I poured a small taste and handed it to B.B. Sarah went red in the face, thinking I was corrupting her daughter.\n\n\"How dare you give my daughter alcohol! What kind of place is this?\"\n\nThe other diners looked over and grinned.\n\nB.B. played it up. \n\n\"This is great, mom. Have a sip, we'll both be feeling silly.\"\n\nBefore she could say another word a frosted mug was thrust into her hands. The smell hit her and she tasted it. She got even angrier.\n\n\"Root beer! Why didn't you tell me?\"\n\n\"You never gave me a chance. Did you seriously think I would give a child alcohol, especially in a public place? You have issues, anybody ever tell you that?\"\n\nShe sulked until the pizzas came out. The double meat pizza looked like it was about six inches tall with the toppings. B.B. was actually drooling. Mel told me later she put two hundred pepperoni slices on the one for Sarah, and extra cheese. Mine was the only average looking one in the bunch.\n\nThe way B.B. attacked that pizza was definitely unladylike. Sarah ate three pieces, while I had only two. B.B. was about to go for her fourth slice when I made her stop.\n\n\"Don't eat that! Leave room for dessert.\"\n\nHer eyes got big. She started drooling again.\n\n\"Do you like chocolate?\"\n\n\"Does Justin Beiber use hair products? Chocolate is my favorite.\"\n\nI didn't give Sarah a choice, and got three of the house specials.\n\nLarge, triple chocolate brownies with caramel sauce and nuts, served hot with whipped cream and a small bowl of vanilla ice cream on the side. I thought B.B. was actually going to cry. I grinned.\n\n\"Now you know why I only had two slices. Enjoy!\"\n\nThey both gave valiant efforts, but could only get half down. I ordered another each to go, and had the leftover pizza boxed. I think B.B. was actually waddling when we got to the grocery store.\n\n\"Thank you.\"\n\nI couldn't believe what I heard.\n\n\"I'm sorry, what did you say?\"\n\nShe darkened up.\n\n\"I said thank you. B.B. really enjoyed tonight. I did too.\"\n\nIt sounded like she would rather have had an root canal than admit it.\n\n\"You're welcome. I had a good time too. You really should let her go to church tomorrow. She needs kids her own age around her.\"\n\nThe friendliness was gone.\n\n\"I'll decide what's best for my daughter. The rest is none of your business.\"\n\nI just looked at her.\n\n\"As you wish.\"\n\nShe didn't speak to me again, but B.B. was bubbly.\n\nShe talked nonstop all the way back up the mountain. When we pulled in the drive she gave me a big hug. I saw Sarahs' face freeze in hard lines.\n\n\"Thanks, H.H.! I'm gonna have pizza for breakfast too.\"\n\n\"Your welcome, baby. Maybe we can do it again sometime. Go on in the house, now. I want to speak to your mother.\"\n\nShe looked between me and her mom, gave a sigh, and went into the house.\n\nShe glared at me. \"What?!\"\n\nI waited a second, hoping she would calm down.\n\n\"I need to tell you something. I'm not him.\"\n\n\"Him who?\"\n\n\"Your husband. Neither is any other man on this planet. Don't tar and feather us all because you ended up with a world class asshole. Believe it or not, we have no interest in hurting you. You could actually be friends with some of us, if you'd calm down. Get your ass off your shoulders, or your head out of your ass, or whatever contortionist trick you're using to keep reality away, because it's not good for you. Or your daughter.\"\n\n\"You got shit on. I understand it. My ex wife paid to have me murdered. Screwed the guy, too, to seal the deal. I got shot. Nearly died. I'll show you the scars sometime. That doesn't mean I think every woman I meet has a hit out on me. Quit feeling sorry for yourself and think about your daughter. End of rant.\"\n\nShe was quivering, she was so angry.\n\n\"Thank you so much for your concern, but I'll decide what's best for me and my child. Good night!\"\n\nShe stormed inside and slammed the door.\n\nOddly, I was in a good mood the rest of the night. \n\n..................................................\n\nShe must have a change of heart, because they were both on the porch waiting when I pulled up the next morning. And they both looked very nice in their dresses. I complimented them. B.B. was in such a good mood she let her mom sit in the front. I was telling them about the church as we drove.\n\n\"I don't know what religion or denomination you are, but this is a Baptist church. About half the congregation are black, as well as the reverend. There's just not enough of us to have two churches. The only alternative is going all the way into town. They're good people, they'll make you welcome.\"\n\nWhen we got out I slipped B.B. a ten for the collection plate. I assumed they had money, hadn't really thought about it. I just wanted to make her comfortable.\n\nWe were there a little early, so they got a handshake and a hug from everyone, especially the preacher. He had a daughter close in age to B.B., and he introduced her. They seemed to hit it off. Soon they were clustered with three more girls in the same age group, one black and two white, whispering, giggling, exchanging email, Facebook, and phone information. It was a good sign. I noticed a few young boys, checking out the new girl.\n\nThat left Sarah with me. I bet she was about ready to kill the next person who asked if she was my new wife, but she smiled and made an effort to be friendly.\n\nIt got interesting when Sunday school was called. B.B. disappeared with her new friends, while Sarah and I sat with young adults, singles and married. Our teacher was a new age type of woman, we didn't discuss scriptures, but how to hold relationships together, how to deal with grief, adversity, and temptations. How to follow the rules of Christianity in the real world. The discussion was quite animated at times.\n\nSarah got really quiet, but suddenly spoke up about temptations and forgiveness.\n\n\"Sometimes, despite everything you do, you fail. Sometimes love and forgiveness just isn't enough. Sometimes you just have to give up, and recognize things don't always work out. What do you do then?\"\n\nShe was crying.\n\nThree women went into a huddle, hugging her and talking softly. Then they prayed, and even Sarah bowed her head. When she raised her head, it was the first time I saw her without traces of bitterness and anger on her face. It made her look quite beautiful.\n\nThe lesson was over, and there was a ten minute break so everyone could restore circulation. B.B. found us, and begged to be allowed to sit with her new friends.\n\n\"Promise me you'll behave. The first time I hear giggling I'll get up right in the middle of the service and get you. Understand?\"\n\nThe bell rang and we went back into the church. Sarah made sure we sat behind B.B. and her new friends, to keep an eye on them.\n\nThe preacher welcomed every one, including visitors. He called them out by name.\n\n\"And please make welcome Sarah and B.B., guests of Harry. Only our Harry could live in the middle of nowhere and show up with two lovely ladies. Thank you for bringing them. And welcome to our family.\"\n\nHe was a typical black Baptist preacher, thundering hells fire and damnation one minute, speaking in a whisper about love and forgiveness the next, breaking into song without taking a breath. In all the years he served that church, I don't think anyone ever went to sleep during one of his services.\n\nThe biggest surprise of the day was when we sang the first hymn, and the soprano voice of an angel echoed in the chapel. Everyone looked to see who it was.",
        "B.B. didn't even notice until the preacher came up to her as she was singing and hugged her. It might have embarrassed her a little but she never missed a note.\n\nAs the preacher stood at the door, shaking every single hand of his fold over the age of six, he held hers a little longer.\n\n\"You have a gift from God, child. The voice of an angel. We always need new choir members, think about it. And please, come back.\"\n\nHe caught my eye and whispered something. I nodded.\n\nWhen we left the parking lot, I turned left instead of right. Sarah was lost in thought and didn't notice, but B.B. did, right away.\n\n\"Where are we going?\"\n\n\"We have been invited to Sunday lunch with the Reverend Sampson and his family. It's an honor, you don't turn it down. I hope you use more manners than you did at the pizza parlor last night, young lady.\"\n\nSarah finally stirred.\n\n\"What? Why didn't you discuss it with me first?\"\n\nI grinned.\n\n\"I have you captured. Right now, you are at my mercy. I'm your transportation, remember? Relax, you'll enjoy it. Mrs. Sampson is an incredible cook. Be warned, she's the choir director, and when B.B. sang I thought she was gonna pass out. Be ready for the pitch.\"\n\nHis house was a new doublewide. The old parsonage was about to fall apart, and was too small for his family. This had 1800 square feet, four bedrooms, enough for everybody. It was a gift from an anonymous donor. For a long time, Mrs. Sampson couldn't look at me without misting up. I always wondered why.\n\nB.B. immediately disappeared into a bedroom with their daughters. Soon the sounds of a video game was heard. Sarah helped serve the meal.\n\nIt was six o'clock before we left. B.B. actually fell asleep on the way home. I had to carry her in. She hugged me and gave me a kiss on both cheeks.\n\nSarah put her hand on my arm as I got into the truck.\n\n\"Thank you. That was the happiest I've seen her since the breakup. Me too, for that matter.\"\n\nBefore I could say anything she turned and went back into the house.\n\n.................................................\n\nB.B. was on my deck the next day at ten.\n\n\"H.H., come out! Can we use your phone to call the garage? Ours doesn't get reception.\"\n\nI mumbled something and opened the door. I had a thought for a new novel, and stayed up most of the night worrying with it. \n\nShe came into the kitchen as I made coffee. I poured her some juice.\n\n\"Want some breakfast?\"\n\nShe giggled.\n\n\"It's after ten. I had breakfast two hours ago. Our car is ready. Can I have some cinnamon toast?\"\n\n\"I thought you already had breakfast?\"\n\nShe looked at me like I was a little slow.\n\n\"This isn't a meal, it's a morning snack. Any time is the right time for cinnamon toast.\"\n\nI got out the bread, the cinnamon, the sugar, and butter and left her on her own to take a shower.\n\n\"Don't make a mess.\"\n\nShe was already spreading the butter.\n\n\"I won't.\"\n\nIt looked like a terrorist cell had used my kitchen for bomb making practice. I followed the trail of crumbs, chocolate sauce, and peanut butter into my office. She had found my computer.\n\nI cleared my throat. She looked up and grinned.\n\n\"You need to add peanut butter to your shopping list. And you really should password protect your computer. What if your arch enemy tried to get to your files?\"\n\n\"The only arch enemy I seem to have at the moment is a, wait, how old are you? Thirteen? Well the only threat I seem to have to my security is a thirteen year old girl too darn nosy for her own good. I don't remember giving permission for you to use my equipment.\n\nShe waved a piece of toast around carelessly. A splotch of chocolate sauce hit my screen.\n\n\"I knew you wouldn't mind. And I'll clean up, I promise. Look.\"\n\nIt was her new friends from church on Facebook.\n\n\"Can I have a few more minutes?\"\n\n\"Now you're asking? Stay here. I'm taking your Mom to get her car. This place better be clean when I get back. I know you'll do it anyway, but eat anything you want.\"\n\nShe waved a piece of toast around in goodbye while the other worked the keyboard. How can kids do that?\n\nI pulled into her drive and tapped the horn.\n\n\"Your car is ready. Want to get it now?\"\n\nShe actual smiled. I looked at the numbers on her mailbox to make sure I was at the right place.\n\n\"If you don't mind. Wait, where's B.B.?\"\n\n\"She's at my house, destroying my kitchen and office. I let her make cinnamon toast. She was on my computer talking to her friends when I left.\"\n\nShe had her hands on her mouth.\n\n\"You let her use your kitchen? Are you insane? Hurricanes don't do as much damage.\"\n\n\"Well, that would have been nice to know before now. Come on, let's get down there and back before she burns my house down.\"\n\nShe didn't say much on the way down. I didn't push it. At least she wasn't ranting at me.\n\nThe water pump had gone out, easily fixed, and pretty cheap.\n\n\"You're gonna need tires soon, especially if you stay this winter.\" Bob told her, as she paid the bill. \"I've got a special going right now.\"\n\nShe thanked him and said she would get back to him later. By then it was noon. I pulled into the diner parking lot.\n\n\"What are we doing?\"\n\n\"I'm in the mood for a burger and a mug of root beer. We'll get B.B. something to go.\"\n\nShe seemed a little upset.\n\n\"Shouldn't we get back to her?\"\n\n\"I had her lock the doors behind me. Besides, I've got enough guns lying around the house should she feel the need for one.\"\n\n\"WHAT!\"\n\nShe looked down right panicky.\n\n\"Relax, I don't have guns lying around the house. You got no sense of humor at all, do you? Here.\"\n\nI handed her my cell.\n\n\"Just hit home and see what she wants for lunch.\"\n\nShe had to leave two messages before B.B. answered.\n\n\"Why didn't you answer the phone?\"\n\nShe had it on speaker so I could hear the whole conversation.\n\n\"Because it wasn't my phone. I had to listen to the message twice to make sure it was you. Boy, he sure has a neat house. You should see the size of his bed. If you get up enough speed, you can bounce at least a foot in the air.\"\n\nShe colored slightly.\n\n\"Young lady! He offers his hospitality and you snoop. You should be ashamed of yourself.\"\n\n\"Relax mom, he'll never know. I'm not messing with anything, I'm just looking.\"\n\nI spoke up.\n\n\"You know, that's a real bearskin in front of the fireplace. And if you go to the bookshelf and pull War and Peace, the secret door to the dungeon will open. Be careful, I haven't fed Igor in a couple of days. He might be a little out of sorts.\"\n\nShe screamed and hung up. Sarah called her right back.\n\n\"Brittany Brianna Jones, you pick the phone up right now, or your punishment will be twice as long. Good. I'm handing the phone to Mr. Smith so you can apologize.\"\n\nShe was crying when I spoke to her, telling me how sorry she was. I shushed her, telling it would be all right, and asked her what she wanted for lunch.\n\nSarah wanted to go home right then, but I talked her into eating lunch to give her a chance to calm down. She managed half a salad and two mugs of root beer. B.B. wanted hot wings, so I got her a double order, with macaroni salad, and a brownie. I also got a gallon of root beer.\n\nShe kept apologizing all the way through lunch, until I lost my patience and told her if I heard one more I'm sorry she was going to pay.\n\nShe followed me home, and instead of turning into her driveway she drove into mine. You could see B.B. peeking out the blinds.\n\nThe house was even cleaner than when I left. No mess to fuss about. I suspect she vacuumed my office. Sarah was having trouble holding her temper, so I sat the food on the table for B.B. and told her to eat her lunch while I showed the house to her mother. Her look of gratitude was well worth it.\n\nSarah was suitably impressed. I even managed to get her out on the deck, to enjoy the lake view.\n\n\"I'm calm now, you can let me in the house with her.\"\n\n\"All right. Just remember, she's a kid. Lonely, away from her friends, bored. I gave her permission to be in my house. Any kid alive would have done the same thing, given the opportunity.\n\nYou're all she has, don't push her too hard. And before you say it, yes, it's none of my business, but you know I'm right. Now, let's go get your wayward child.\"\n\nB.B. looked up from the table, mouth smeared with wing sauce, trying to judge the trouble she was in. I snapped a photo with my phone and showed it to her.\n\n\"If your mom tells me you complained once about your punishment, I'm going to make this your official photo on Facebook. Is that all right, mom?\"\n\nShe could see the look of terror in her eyes.\n\n\"You have my permission Harry. In fact, I think that would be a good punishment. Do it.\"\n\nShe was at her mothers' side instantly.\n\n\"Mom! Please don't! It'll make me look like a doofus. I'll lose my friends before I actually make them. Please, mom.\"\n\n\"First you apologize for snooping through his things, and promise to never do it again. Trust is a fragile thing, honey. He offered to let you use his computer, and trusted you in his house alone. You repay him by snooping through his personal belongings. If it was me, It would be a long time before I'd allow you back.\"\n\nShe looked stricken, but rushed over and made a heartfelt apology. I accepted.\n\n\"You're welcome anytime, unless I'm working. You can still come by, but if I'm in my office, don't bother me. And this is only if your mother says it's all right. And the offer extends to your mother. Bring your laptop, and you can piggyback my WiFi. Speaking of that, I need to work this afternoon. Spend quality time with your mom.\"\n\nThey both took the hint and left. I did indeed have to work, My novel idea was still nibbling at my brain, and I needed to get the thoughts out while they were still fresh.\n\nTimes like this made me glad I'm not married. I tend to zone out and ignore everything around me. I could literally write twenty four hours at a stretch, sometimes more, only stopping when my head hits the keyboard in exhaustion. I know, it's not healthy, but it happens.\n\nI worked ten hours straight, not even going to the bathroom. When I finally stopped I ate a sandwich, showered and collapsed. Seven the next morning I was back at it.\n\nI didn't even hear B.B. come in, but I felt eyes on me and looked up to see her grinning.\n\n\"You know you stick your tongue out when you concentrate?\"\n\nI did know. My ex used to tease me about it. It was time for a break, so I shut down the computer and stood, rolling my back to get the kinks out.\n\nB.B. had disappeared, but I could hear her in the kitchen. She was making a sandwich when I walked in. She couldn't weigh over eighty pounds, where did she put it all?\n\nShe put the sandwich on a plate and got the chips and a coke, handing them to me.\n\n\"I bet you haven't eaten yet, have you? Let's go out on the deck, it's so pretty today.\"\n\nIt was, and I hadn't eaten at all that day. I inhaled the sandwich while she chattered away.\n\n\"Can we take a canoe ride?\"\n\n\"Sure, as soon as your mom says it's okay, and I need to hear it directly from her.\"\n\nShe looked crestfallen, but agreed. She cheered up instantly, telling me they were definitely attending services Sunday. Seems they were Catholic, but never attended. I couldn't understand why people would kill each other in the name of religion, the concept of my God is Better than your God, and I'll kill you if you disagree, was just so outlandish I would never understand it.\n\n\"Dad didn't like us to go, but we tried to attend holiday services. Our church was so huge. I like this one much better.\"\n\nTrue to a cliche, I didn't think about religion much until I got shot. Something about laying on the ground watching your blood pool makes you reexamine your priorities. I wasn't a hundred percent in agreement with some things, but it gives me comfort, and most times that's enough. I give a lot to my church. I have it, so it's not a big deal.\n\nWe worked out a system. B.B. came out every day, and if I had a red card stuck in the window, it meant I was working and leave me alone. She would creep quietly in, go directly to the fridge and get a drink and a snack, and go out on the deck. She would sit under the umbrella so she could see her computer screen better, and play games or talk on Facebook. If she saw me get up she would follow me around, asking a million questions.\n\nShe really liked my book on Billy Dixon. It made her want a horse. She liked my book on the road corruption, but it upset her to find out I'd been shot. I had my shirt off sometimes, working in the yard, and she noticed the scars. It made her quiet for a few days. Children do not like to dwell on mortality. A thirteen year old thinks she'll live forever.\n\nI wouldn't let her read my novel, it had too much adult content for her age. All right, it had a lot of sex scenes. One reviewer said it teetered right on the edge of erotica. But it was a good story, and erotic sold well in the current market.\n\nThe movie almost didn't get the R rating it needed to be seen in theaters.\n\nSarah took a copy, and for a few days later it seemed she was looking at me with an unreadable\n\nexpression.\n\nThey also discovered my bookcase, that took up one whole wall of my den. Some were old classics that I had read in my youth, some fairly new novels with autographs I had collected, some how to and technical manuals I had gotten as research for my books. A good many were biographies and histories. Sarah borrowed a few, and I would often find B.B. curled in my recliner reading, having been there for hours.\n\nSarah had thawed out a good bit. Mrs. Sampson, turns out, had taken some counseling courses in college, and Sarah went to see her once or twice a week for awhile. It helped her, a lot.\n\nHer parents came up and spent three weeks with them, and I didn't see them much. Her dad came up to see me one afternoon, and thanked me for buying his property, keeping it out of the hands of developers.\n\n\"Diamond Realty was sniffing around the other day. They know that the last two landowners on this side of the lake are you and Jimmy Howell. They've made Jimmy an offer. If they get it, they'll use it as a base for development and try to get yours through imminent domain. Little vacation condos will pop up everywhere. I'm glad I won't be around to see it.\"\n\nThat was news to me. I made a mental note to talk to Jim, and get my lawyer going on a plan to block development.\n\n\"Thanks for letting Sarah and B.B. stay. They'll be going back to Chicago pretty soon, Sarah is a teacher and has to be back the week before school starts. She wouldn't go back, I don't believe, if she could find something local. They like it here.\n\nBut everyone is laying off these days, and she's having no luck. I worry about them, financially. Her jerk of an ex hasn't been real reliable about alimony and child support, and she doesn't have the money to take him back to court.\"\n\nHe paused, looking out across the lake.\n\n\"I'm gonna miss this place, we had a lot of good times here. Before I go, Sarah doesn't know you bought our place, does she?\"\n\nI had to confess.\n\n\"No, when we first met, we didn't get along very well. If she knew I owned the property, her pride would have made her move or try to pay rent. If you haven't already, don't tell her. She seems much happier, lately. I don't want to spoil that. Do you know they joined the church? B.B. is a featured soloist in the choir.\"\n\nHe seemed to swell with pride.\n\n\"We attended services with them last Sunday, and heard B.B. sing. Her grandmother cried, she was so proud. It was good to see them both smiling. Well, Harry, I don't know if we'll be back, we're moving to Florida this fall. If I never see you again, I hope you have a good life, and it brings you what you need regardless of what you want.\n\nSo long, Harry.\"\n\nI shook his hand and watched him walk off, pausing here and there to catch a view. I was gonna miss him.\n\nI went back into the house and made a few phone calls. My publisher was in Chicago. So is my lawyer. He was an entertainment lawyer, but his firm also did criminal and civil work.\n\nHe listened to my story, and one of them paid a little visit to Mr. Parker. Seems on investigation he was a lot more financially secure than he told his ex and daughter. The next week Sarah got two checks, one for alimony and child support including all arrears, and a nasty note from him asking her to call off the dogs. Sarah of course had no idea what he was talking about, she was just glad to get the money.\n\nWe had bonded, sort of. She would be the sweetest person in the world for five minutes and then turn into a screaming bitch for two hours. I found I could only take her in small doses.\n\nIt was sad really, I was attracted to her in spite of her bad case of UMS[ugly mood swings] and adored B.B.\n\nI was pushing thirty, maybe my male version of a biological clock was kicking in.\n\n...............................................\n\nI had to go see my publisher to plan the hoopla that always went with a new book, and was gone for six days. I was young, fairly handsome, and very marketable. The public relations firm assigned an assistant to me to made sure I made my appointments and make sure I didn't do something stupid, fairly common for writers. She took her job seriously, staying by me twenty four hours a day, literally.\n\nShe was nothing if not dedicated to her job.\n\nShe assisted me orally, vaginally, and anally, as many times as I wanted, and a few times when I just wanted to sleep.\n\nShe surprised me the first time, sliding into the bed with me while I was asleep.\n\nEver stuck your finger into warm pudding when you were a kid? Hot, smooth, solid yet yielding? That's what it felt like. I woke to see a slender, well defined back arching backwards, attached to one fine looking ass, as she did a reverse cowgirl on me. I instinctively grabbed her, and she grinned over her shoulder.\n\n\"Oh good, you're awake. Now we can get serious.\"\n\nI didn't think the human body could move that fast. If there was ever a version of a human jackhammer, she was it. She knew I was getting close, and she suddenly stopped, sitting upright. I thought she wanted me to settle down and extend\n\nthe feeling. Instead I felt just the tiniest amount of movement, and it felt like an invisible hand was milking me, starting at the base and rippling all the way to the head. I lasted about a minute, before I started coming. I never exploded, more like squirted, but she kept it going for what felt like five minutes. It actually hurt, but I would have killed the first person who tried to stop me.\n\n\"What brought that on?\" I asked, when I could get enough breath to speak.\n\n\"Nothing. I like you, you're fun, and I was horny. Believe it or not, it's been awhile for me. And I'm not looking for love. When you leave, I'll probably never see you again, and it'll be okay. So, if you want, we can have more fun, starting right now, if you're up for it.\"\n\nI saw part of an interview I did later. I looked exhausted.\n\nI even made a few of the gossip shows, apparently nobody needed rehab or had smacked their wife lately, or anything else stupid enough to cover. \n\nMy new book went on the bestseller list the week it was released, and stayed there for forty one weeks.\n\nI came home to a cool reception from B.B. and Sarah. I wondered why, until one day while we were out on the deck, B.B. got around to asking me if the girl she saw on television was my girlfriend. I laughed.\n\n\"No, honey. She worked for the publicity company my publisher uses. It was her job to keep me on schedule. We had been going wide open for a few days, and needed to relax. She's a good dancer.\"\n\n\"You're not in love with her?\"\n\nOdd question.\n\n\"No. I liked her a lot, she was fun, but we had just met. There's nothing going on. Why the interest?\"",
        "She had a little smile. So did Sarah.\n\n\"Oh, no reason. Just wondering.\"\n\nKnow what's more irritating than a woman? A woman in training.\n\n..................................................\n\nGood news usually comes to you slowly, with little fanfare, but bad news travels fast and loud.\n\nSarah had taken some of the money she had gotten from her ex and had put a phone in, and they now had computer access. They still came over, just not at often. For a couple weeks I would think I heard B.B. in the house, but it would be wind or imagination.\n\nShe had bonded with Reverend Sampson's daughter, and they were almost always together, at one house or another, cutting even more into what I considered \"my\" time, and Sarah grew even more distant. With her, I never knew why.\n\nThe church was planning the end of summer picnic, that I always hosted. It wasn't a big deal, I had a large yard and house, plenty of room to park. I learned early, stay out of the kitchen and be available to move things heavy.\n\nI went by one day to see if they were available for lunch. Sarah was obviously upset and I could see traces of tears, but she said she was fine, but she just wasn't in the mood to go to town.\n\nB.B., her best friend Sandy, and her little sister Jan were there, and B.B. announced she and her friends would like to go. I looked askance of Sarah, and she said it would be fine, she needed a little alone time anyway.\n\nThe girls chattered about the picnic, boys, the upcoming school year, boys, their latest pop idols, and boys. B.B. was a little quieter than usual.\n\nI caught a chance to ask her what was wrong when her friends got captured by a lady from our church, who was on the picnic committee and wanted them to volunteer for an activity. B.B. already had her assignment, so she didn't have to participate in the discussion.\n\n\"What's up, B.? And don't to try to song and dance me, your mother is definitely not happy.\"\n\nI saw a glimpse of fear on her face.\n\n\"Mom lost her job! She didn't have tenure, and they blamed the economy and let her go. I think my dad had something to do with it. Without her job, we can't afford a good apartment. She's been working on her resume, but there's nothing here either. Dad is hinting about seeking custody, saying he can provide for me better. If that happens, it'll kill both of us. We don't have the money for a lawyer, we're in deep trouble.\"\n\nShe let a few tears go, and I gathered her to me and hugged her, tightly.\n\n\"Hush, baby. Maybe I can help. Let me talk to some people. Come by the house day after tomorrow. We'll do some planning. And don't tell your mother.\"\n\nShe put on a happy face when her friends came back, and we had a nice meal.\n\nI called my lawyer and started the ball. No asshole was taking my kid without a fight. I actually said that to my lawyer, then stopped, not knowing where that came from. Freudian slip, maybe?\n\nMy lawyer was pretty sharp, and caught it right away.\n\n\"I think this is a little more than helping out a friend, don't you agree? Are you in a relationship with the mother?\"\n\nI snorted.\n\n\"Yeah, if you mean we get along five to ten minutes at a time. The rest of the time she's either not talking, or saying a lot of things I don't want to hear. She's been carrying a lot of anger around since she moved here. If she finds out I'm trying to help, she'll go ape shit on me.\"\n\n\"Right now, this is more about the kid. She hasn't had much of a life up to now. She told me she's been happier here than any other time in her life. She has good friends she cares about. She really doesn't want to leave. Help me out here, if you can.\"\n\nI was paying the bills. If that's what I wanted, that's what I got. Again, he didn't handle such things, but turned me over to the associate that had helped me before.\n\nI called her dad, explained what was going on, and swore him to secrecy.\n\n\"I'm sending you a little money. I want you to give it to her, to help her out. Say you cashed out some bonds or something, and you wanted to give her some money before the government tries to get it. Can you do that in good conscience? Remember, this is a gift, and she can't know I had anything to do with it.\"\n\nHe thought for a minute.\n\n\"Before I do, what's in it for you?\"\n\n\"It's simple. I like your daughter and granddaughter. Her ex is an asshole that can't seem to leave her alone, and I want them to stay around me. To do that, she has to have enough money to fight him off and live on. Is it love? I don't know. Could it develop into love? I'll never find out if they leave. Either way, this gives her a cushion. If she decides to take the money and leave, so be it. You know I got a few bucks, so this won't hurt me, unless she finds out.\"\n\nI could hear the humor in his voice.\n\n\"If you ever become my son in law, we're going to have a serious talk about how reckless you are with my granddaughters' inheritance. Send me the money.\"\n\n..................................................\n\nB.B. came blasting up to my house five days later. I had some friends over, unloading the chairs and tables into my shed to keep them out of the weather until the picnic.\n\n\"H., hi. Got a minute?\"\n\nI left the guys to it and went into the kitchen. I had a cooler full of drinks to take out anyway, It was the last week of July, and hotter than normal. It must have been in the low nineties.\n\n\"What's up, baby?\"\n\n\"We're going to stay here! Isn't that great? Grandpa gave mom some of his retirement money, enough to live on for another year, plus mom still gets unemployment. We're going school shopping next week. I'm gonna be in the same class with Sandy, isn't it great?\"\n\nI hugged her.\n\n\"That makes me very happy. The thought of buying less groceries, picking up books and returning them to the right shelf, getting disturbed while I'm trying to work, and other things I won't mention, was filling me with dread.\"\n\nShe eyed me, trying to see how serious I was, before she smiled that miniature woman smile she had developed.\n\n\"I knew it! You can't do without me and mom. Relax, I've got at least fifteen more months to keep you straight. I might have you trained by then, with mom's help.\"\n\nHer smile warmed my heart.\n\n\"Trained to do what, exactly?\"\n\nShe had her head in the fridge by then, looking for the gallon of root beer I had taken to keeping for her. She found it and took a big drink right from the jug before she capped it and put it back.\n\n\"How to be a good dad. See ya.\"\n\nShe ran out the door, giggling, before I could think of something to say.\n\n.................................................\n\nSarah was in a much better mood. They showed up about a week later to invite me to lunch. I was a little surprised when they asked me to drive my big SUV, but I wasn't about to refuse.\n\nWe got to the little village and I started to turn into the diner parking lot. B.B. giggled.\n\n\"Not there, silly. We're going to Morgantown for lunch.\"\n\nWe drove the next twenty miles, B.B. talking nonstop. School, boys, DVDs, boys, music, boys.\n\nShe was gonna be a terror when she got older. Sarah just smiled and let her ramble.\n\nWe had lunch at a very nice steakhouse, getting the buffet. I told B.B. not to stand too close to me later on.\n\n\"Why?\"\n\n\"Because when that massive amount of food you've consumed causes you to explode, I don't want to be splattered.\"\n\nShe stuck her tongue out and went back to her third dessert. Sarah actually laughed.\n\nWe waddled out of the restaurant.\n\nI got behind the wheel.\n\n\"The mall, or do you need to stop at Walmart?\"\n\nThey both tried to act surprised.\n\n\"Can't we just take a friend to lunch?\"\n\n\"Yes, but the diner would have been fine. B.B., you were drooling on the window when we went by the mall. I need a few things myself. Again, mall first?\"\n\nIt was the week before school. The mall was packed with about five thousand teenage girls and their moms, and four or five guys who looked as uncomfortable as I did.\n\nB.B. locked down on my hand. Old Navy, Banana Republic, Macys, Kohls, and a few names I couldn't pronounce, we ended up in all of them.\n\nI handled it all right until B.B. started holding up bikini panties, asking my opinion.\n\nThat was the last straw for me, so I hid in the small pub on the ground floor until they came and got me.\n\nWe had to lay half the back seat down to get it in. Then we were off to Walmart.\n\nI was having trouble seeing out of the rear view mirror, when I asked them if they had their boots yet.\n\n\"Boots?\"\n\n\"Yes, B.B., boots. You haven't been here in the winter. Waterproof, thermal boots are a necessity. Your feet would freeze going to the bus stop in regular boots. You guys need at least two pair each.\"\n\nWe stopped at Dick's, and they got two pair each. Sarah had comfort in mind, B.B. went for style. they compromised and got one pair of each.\n\nSarah went to use the restroom and I grabbed B.B. and hustled her over to the coats. I gave her my debit card and the pin number.\n\n\"Get one parka for you and your mom. I'll go stall her. Put the bags in with the others. Believe me, in January you'll be thanking me.\"\n\nOf course two days later I got the call.\n\n\"I'll pay you back.\"\n\n\"Do it and I'll never say another word to you. Consider it an early Christmas gift. Gotta go.\"\n\n.................................................\n\nWe set up the tables and chairs, and used pop up canopies for shade. The picnic was a success. The food made the serving tables sag, the kids had a ball playing games, while the adults enjoyed horseshoes. People of all ages enjoyed the volleyball and batmitton competitions. B.B. and I won the parent child three legged race, although some cried foul because her legs hardly touched the ground, and she and her mom almost won the two man sack race before getting tangled up and falling right before the finish line.\n\nWe had developed the habit of having Sunday lunch together, usually with one or two of B.B.s friends. They would bring bathing suits and play in the lake while we prepared the meal. Simple stuff, usually salads and something grilled. Sarah was an excellent cook and there was often dessert. After everything was cleared up the girls would play on my computer until it was safe to go back into the water.\n\nWe would sit on the dock under the umbrella and watch them. I had a hammock and she would lie in it a lot, usually dozing off. I let her, because she was so much prettier when her face was relaxed.\n\nI had a glider rocker, and we were sitting on it, rocking back and forth gently, listening to the happy screams of teenage girls as they played in the water, when I asked her.\n\n\"Would you like to go out next Friday?\"\n\nI felt her tense and straighten up.\n\n\"Define go out.\"\n\n\"A man picks a woman up from her house and takes her out socially. They're alone, without a child who thinks a large belch is amusing. They eat at a nice restaurant, maybe see a movie that has a rating higher than PG, or go to a place that serves more than root beer. In some versions of the date dancing may occur. That kind of going out.\"\n\nEmotions ran across her face like water over stones. I could tell she wanted to say no, but then she surprised both of us, I think.\n\n\"We'll drop B.B. off at the Sampson's, and pick her up afterwards. Wear a suit, I want to dress up. I like Italian, and we'll skip the movie.\n\nAfter we dine, we'll go to Dino's. I hear they make the best mojitos in the county and usually have a decent band.\"\n\nShe never said another word about it, and I got stuck taking the girls home, and B.B. rode with us.\n\n..................................................\n\nB.B. teased me unmercifully all week.\n\nWednesday I came in to see most of my clothes lying on the bed. B.B. was rummaging trough my drawers.\n\n\"Lose something?\"\n\nShe didn't even look embarrassed.\n\n\"No, but you did, any sense of style. When was the last time you bought a new suit? And your underwear. Tidy whiteys? Really? This is the boxer generation, get with the program.\"\n\nI turned bright red.\n\n\"Young lady, I refuse to discuss my underwear preferences with you. Out, right now.\"\n\nIt didn't faze her the least.\n\n\"Don't get your underwear\" she held up a pair, twisted them, and smirked \"in a bunch. I'm hungry anyway.\"\n\nDespite her pleas I did not go out and get a new suit. I must have been presentable enough because B.B. gave me a thumbs up behind her mother's back.\n\nWe had a bottle of wine at dinner, along with a very good meal. I don't know if it was the wine, but she was relaxed. The conversation was good. I found out she taught high school history. We had a long discussion over my latest book.\n\n\"Dino's was THE place for people our age. She was a very good dancer. I enjoyed dancing but was nowhere near as good as she. She danced with me until I was gasping. She sat, tapping her foot.\n\nA friend came over and asked her for a dance. She looked at me.\n\n\"Fine with me, let someone else try to keep up with you.\"\n\nHer smiling face as she twirled out on the dance floor told me I had made a wise choice. She danced with him and two others, always making sure I danced every third one with her, and all the slow dances. As the night got later and the mojitos starting working, she got closer and closer.\n\nI couldn't help it, that fine body rubbing up against me hard as a rock. The first time she felt it she drew back a little. The second time she didn't bother. I tried to apologize.\n\n\"Don't!\" she giggled. \"It's nice to know I still have it.\"\n\nWe closed the place, and I had to support her out to the car. I propped her against it while I unlocked the door. I don't know who was surprised more when she grabbed me. We must have kissed for five minutes. No hands roaming, just straight up kissing. She finally pulled away, rubbed my cheek, and dropped into the seat.\n\nShe didn't say anything for the first thirty minutes. She did reach over and take my hand. She held it until we pulled into her driveway. I escorted her to the door. We stood there awkwardly for a few minutes before she reached up and kissed me again.\n\nWhen she broke it she smiled.\n\n\"Goodnight Harry. I enjoyed it, thank you.\"\n\n................................................\n\nI was in love.\n\nIt scared the shit out of me.\n\nThe memories of my first wife still haunted me occasionally. But Sarah was nothing like her. She was like nothing I had ever encountered before.\n\nUnfortunately, events started interfering with my courtship.\n\n..................................................\n\nSapphire Jade Diamond, of Diamond Realty, didn't like to lose. And as bad as she hated losing, she loved equally making money, lots of money.\n\nTwice now that pissant author had thwarted her attempts to gain control of the lake shore. She already had the plans drawn for twenty six condos in a gated community. The profits would be enormous.\n\nThere was one piece of property left he didn't own, and she was determined to get it.\n\nA loud, aggressive woman, she had been married three times. In her youth she was quite beautiful, but age and hard living was starting to catch up with her. Her last husband left her after she gained sixty pounds, telling her he couldn't live in the animal world.\n\nAttitude of a shrew, face resembling a jowly bulldog, screeching laugh of a hyena, and an ass big enough to put a saddle on.\n\nShe didn't take the description well, and broke his nose. He had the audacity to call the police, and she spent two days in jail for spousal abuse. By the time she got out, he had taken everything out of the house he wanted, and half the bank accounts. Adding to her woes, he was also her accountant and knew where the money was. He ended up with a house and a nice cash settlement.\n\nShe now hated all men in general, and a few in particular.\n\n.................................................\n\nJimmy came to me when she tried to buy his place.\n\nHe didn't want to sell to her, but she was offering him fifteen percent above value. I made him a counter offer of twenty five percent above.\n\nJimmy and I got along well, but of all my neighbors, he was my least favorite. He complained to me once that since I had redone our private road to state standards, his property taxes went up.\n\nHe was having a ball, visions of big money and the pleasure of playing us off each other.\n\nI had my own plans. My lawyer did some research and got me in touch with an attorney in Morgantown to handle my real estate dealings.\n\nHe was young, but seemed to be sharp as a tack.\n\n\"The new imminent domain ruling from the Supreme Court could hurt you. It's all about tax base now. If the county can be convinced that a significant boost to the tax base will occur, you'll be in serious trouble. In my opinion, your best bet would be to take key strips of your property and turn them into tax exempt or historical areas, destroying the viability of condos or vacation homes. I'll look into it.\"\n\nI had to do a quick book tour, ten days. I told B.B. and Sarah to watch my house, and got a nice kiss from both of them. B.B. lingered, trying to catch me alone.\n\nShe followed me to the truck, and as soon as Sarah went back into the house she started talking.\n\n\"Something is bothering Mom. She's used to working but can't find a job. She's looking online, and there's a good chance there is a job in Morgantown. That's too far to commute in the winter, and she's looking at apartments. I'd have to change schools, I wouldn't have my friends, especially Sandy. We'd go to a new church, too.\n\nEvery time I tell you my troubles they seem to disappear. You're my good luck charm. Help us if you can.\" \n\nI told her I would see what I can do and she smiled with the faith of a child. Problem solved\n\nShe pulled me down so she could whisper in my ear.\n\n\"Most of all, I would miss you...Dad.\" She kissed my cheek and ran back into the house giggling.\n\nI thought about it a lot on the plane, racking my brains. Our little county has a paper that is printed biweekly, the editor is often quoted saying there just isn't enough interesting stuff going on to fill a daily. I had picked one up on the way to the airport, knowing I would be reading mostly about births, deaths, anniversaries and marriages, mixed in with a picture of somebody's ten pound tomato and ads for the next VFW dance and bingo nights. Maybe a crime report, mostly vandalism by teens like throwing bubble bath in the fountain in front of the court house or painting love messages on the water tower. The front page caught my eye.\n\nEND OF AN ERA, it read, picturing a smiling woman with white hair standing in front of a brightly painted cargo van.\n\n\"Friday marked the end of an era. Mrs. Edwina Spivey drove her trusty old bookmobile for the last time Friday. She's retired, and the county has retired the van and discontinued the program, citing budget woes. All involved were deeply saddened, the bookmobile was a lifeline to the rural communities, especially the elderly and disabled without computer skills. The van was badly in need of replacing, and the county can't afford another one, or the salary to replace Mrs. Spivey.\"\n\nI thought about that for awhile, and made some quiet arrangements. I picked a paper up on the way home.\n\nA MIRACLE, ran the headline.\n\n\"Just eight days after the retirement of Mrs. Spivey and the bookmobile program, a nonprofit, private foundation dedicated to keeping libraries and other programs that make books and educational materials available to rural areas has given the county a grant to both keep the bookmobile route going and open a branch library in the Bear Lake community, to be named in honor of Mrs. Spivey.\"\n\nIt went on to explain that a brand new van was being outfitted immediately. The library would have six state of the art computers in a dedicated room, donated by a department of the federal government created to assure computer access to areas not normally covered, and classes would be offered on a rotational basis to train users. The service was free and also federally funded.",
        "At the very bottom was an announcement that Ms. Sarah Parker, a former high school teacher and recent resident of the community, would be the head librarian and part time driver of the bookmobile. The rest of the staff would be volunteers, including Mrs. Spivey. Her salary would be payed for the first three years by the nonprofit foundation.\n\nMs. Parker seemed very pleased with the opportunity, and pledged to do her very best to keep the library current and relevant to the community and the county.\n\nGod does indeed move in mysterious ways sometimes.\"\n\nB.B. was standing in the middle of the road with Sandy and some more of the local kids.\n\n\"Did you hear? Did you hear?\"\n\n\"Hear what? I just got home.\"\n\n\"Mom got a job! We don't have to move! We can stay with you!\" \n\nShe kissed me and blurted out\n\n\"Congratulations, it's a girl!\"\n\nthen got really quiet, and hung her head.\n\nI hugged her to cover her embarrassment, and whispered in her ear so softly that only she could hear.\n\n\"I always wanted a little girl.\"\n\nShe surprised me by crying and running into the house. I told the rest of the kids to call their parents and tell them they were going to be a little late, they were all having dinner with Sarah and B.B. at my house in one hour.\n\nIn due time chicken breasts, burgers, and hot dogs were on the grill. Sarah made coleslaw, and steamed a bunch of mixed vegetables.\n\nWe sat watching them eat and chatter. Soon they were by the lake, where they had spent the afternoon. Cool weather was on the way, and they wanted to enjoy every moment. Sarah rocked and smiled, watching them.\n\n\"You heard?\"\n\n\"Yeah, B.B. almost threw herself in front of the truck to tell me. Congratulations.\"\n\n\"I was so surprised when I got the job. They told me they wanted someone that lived in the community to run it, and my teaching credentials put me at the top. Not what I imagined my life to be, but I'm very happy. It's going to be a challenge, but the emotional rewards will be worth it. I'm gonna hit you up for books from you and every author you can strongarm, you know that, don't you?\"\n\nI was laughing when I told her I would expect nothing less, and I would talk to my publisher as soon as I could.\n\nIt was probably one of the happiest moments of my life, sitting in the glider holding her hand while we watched the kids play and splash in the lake. B.B. would look up towards the house and smile occasionally.\n\nShe wanted to take her friends for a canoe ride and was disappointed when I told her no.\n\n\"Aside from Sandy, none of you have experience. The worst thing I could do would be turn you loose. You'd flip over, maybe get hurt. Sorry girls, but I can't let you.\"\n\nB.B. was disappointed. I had bought her a small two seater for her birthday and taught both how to use it. B.B. discovered my kayak, and soon she was out in the water paddling like she had years of experience. I thought Sarah was going to pass out when she flipped it over and paused for a second before she righted it. Sarah was already knee deep in the water by then.\n\n\"Relax, Mom. Watch this!\" She rolled about five times, laughing and splashing before Sarah made her stop.\n\n\"I get it! You know what you're doing. Now stop showing off!\"\n\nShe gave me one of those looks I hadn't seen in a \n\nwhile. I decided the best defense was a good offense.\n\n\"What? You didn't want me to teach her? She had been eying it all summer. I figured if I didn't teach her, sooner or later she'd sneak it out. Without training, those things ARE dangerous.\"\n\nI could see it was an internal battle, but in the end she let it go.\n\nLooking at the disappointed faces she made an observation that changed both our lives.\n\n\"You know, it's too bad these kids don't have a place like this to go to in the summer. It's all state property except our corner, and there is no access anywhere. There's summer camps, mostly Methodist and Baptist, but most are halfway across the state and most kids can't afford to go, even if they could get there.\"\n\nI almost knocked her off the swing with my kiss. She was surprised no end, but she responded.\n\n\"Whoa, what's going on here?\"\n\nThe kids were standing there looking at us. I grabbed B.B. and twirled her around before kissing her too.\n\n\"I always knew librarians were smart, but your mother is a certified genius! Come on, help me get this crew home and I'll tell you about it later.\"\n\nSarah didn't know what happened, but she knew it was good. She waved us off.\n\n\"Go on, take them home. B.B., stay with me to clean up.\"\n\nI hustled the kids home. Reverend Sampson and his wife looked at me and knew something was up.\n\n\"What are you grinning about?\"\n\nMrs. Sampson asked.\n\n\"Did you read the paper today about the library?\"\n\nThey both smiled.\n\n\"A miracle indeed. June and I both agree this will help everyone. June is going to volunteer one day a week if she can work it into her schedule.\"\n\n\"Remember the tag line at the end of the story. God does indeed move in mysterious ways, and today I think He smiled down on all of us.\"\n\nI wouldn't give them any details.\n\nLater on, when I told my girls, they actually cried. They didn't know about Diamond Realty, and the thought that they might lose their home and the beauty of their surroundings shook them badly.\n\nI approached Jimmy Howell, told him what was going to happen if my plan went through, and told him I would honor my last offer, if he agreed right away. I had my lawyer with me, and a check already made out. He was no fool, and when I told him he could still stay there the rest of the season, he accepted immediately.\n\nIt was a tricky deal and I had a whole team of lawyers on it, but a month later it was done.\n\nA SEASON OF MIRACLES read the headline.\n\n\"Bear Lake, until now in private and state hands, is now in the public domain. Almost all the private acreage has been purchased by a non profit, nondenominational foundation. It will be developed, disturbing the land as little as possible,into a spiritual retreat, catering mostly to children, of all faiths. When developed it will be able to handle one hundred fifty to two hundred guests, complete with bunkhouses, dining halls, and educational centers. When fully operational, the retreat will hire local residents for staff positions, estimated to be as many as twenty five seasonal and full time positions. Currently the foundation is seeking board members to oversee the integrity of the organization. So far the only members are Greg Sampson, minister of Bear Lake Baptist Church, Sarah Parker, the soon to be local librarian, and the internationally recognized author H.H. Smith. Anyone seeking to serve on the board should call the number provided. \n\nMr. Smith held most of the privately owned property, and sold all of it except his house and immediate property, making him the only private landowner on the lake.\"\n\nIt went on about housing designs and construction dates, and as soon as the board was assembled bids would be accepted for construction. The plan was to be at least partially operational by next Memorial Day.\n\n................................................\n\nSapphire Jade Diamond ripped the paper to shreds before calling her lawyer.\n\n\"Sorry, Ms. Diamond. The county will make more off the retreat than they would off property taxes. Direct and service jobs could reach a hundred or better. Sales tax would rise, goods and services would expand dramatically. There's no way the county commission will change their mind.\"\n\nShe fumed, she plotted, but there was nothing to be done. Her hatred of Harry went beyond normal emotions.\n\n.................................................\n\nI might have been fooling her mother, but B.B. was a pretty sharp cookie. She knew there was a guardian angel hovering over her and her mom, and she pretty much knew who it was.\n\nShe had taken to calling me Dad when we were alone.\n\n\"Fess up, Dad. Just because I'm young doesn't make me stupid. I've thought this over. Everything is too easy, and doesn't seem to happen until I say something to you.\"\n\nEvery time she would bring it up, I would grab her and twirl her around.\n\n\"Daughter, I have no idea what you're going on about. Have I ever lied to you before that you've caught me at? Let it alone, be happy for all of us.\"\n\nShe would just shake her head, but the look in her eye never changed.\n\n................................................\n\nParadoxically, by arranging for them to stay, I got to see less of them. As often as she could, Sarah spent her time checking on the progress of the library, a discontinued school building. The county had donated the property to the foundation. Three buildings, the larger one holding a three hundred seat assembly hall. Plans were already in the works to expand it and turn the other building into a community center.\n\nSarah was driving the bookmobile just as soon as it got outfitted. She got to know everyone on her route, usually just setting up in a church parking lot for a few hours, but there were a select few that for health or transportation reasons couldn't come, and she would go to them. \n\nFollowing the village example set through the ages, these drops became social events, she may be the only person they would talk to that week. She always blocked the time for them. Often there would be cookies, brownies, or a small cake delivered with the books. Sometimes she delivered medicine. She became an advocate for these people, getting them cellphones through Medicare or Medicaid. They were free and preloaded, some used up all their minutes before they got more, and it taught them to conserve, always keeping a few minutes just in case.\n\nOne old lady really got to her. Disabled and without a car, what she missed most was not being able to attend services.\n\n\"Too bad we don't have one of those church buses,\" Sarah said sadly \"we could get volunteers to drive them.\"\n\nShe was sniffling.\n\nB.B. looked at me and grinned.\n\n\"I'm sure if you say a prayer tonight, Mom, it'll go straight into God's ear. I'm sure Harry and I will do the same, won't we, H.H?\"\n\nI mumbled under my breath, after agreeing, about smart and pushy kids.\n\nTwo week later the church owned two twelve seater vans. They were used because that was all I could get on short notice, but they were in very good shape. The first week they ran we had a celebration in the church hall, preparing lunch for all who rode and anyone else who wanted to participate.\n\nI saw the old woman that meant so much to Sarah cry and hug her, and B.B. as well. To me, that made it worth it.\n\nThe only thing I didn't like about it was everybody knew who donated them, as well as the money to keep them in top form.\n\nThe Reverend Sampson ambushed me.\n\n\"We have been blessed. I had a dear friend remind me lately that God does indeed move in strange and mysterious ways. The living testament to that is our Harry. He endured pain, lost a woman he loved through greed and spite, almost died from a gunshot wound. But he survived and has done wonderful things with his life, including amassing a great deal of money. But unlike many who hoard their wealth and fight to keep it, he gives it freely when the need is just. He does it with little fanfare, enjoying the pleasure of giving quietly, because he can.\"\n\nHe looked at me with tears brimming.\n\n\"Stand up, Harry. Quit hiding your light under a bushel, and let us thank you.\"\n\nHe was beside me as I sat in the pew, pulling me up. Both Sarah and B.B. were crying, but made sure they hugged me first after the reverend. Everyone in the church regardless of size and age hugged me or tried to. The outpouring of love overwhelmed me, and I had to sit down, my own tears flowing down my cheeks.\n\nWhen we finally moved to the hall to share the meal, I tried to chew out the reverend.\n\n\"If you embarrass me like that again, I'll go somewhere else.\"\n\nHe laughed at me.\n\n\"When you say that and I look into your eyes and believe it, I'll pray for your soul. Now, let's eat.\"\n\n................................................\n\nB.B. started school. Sometimes her mom would drive her, sometimes I would, sometimes she took the bus.\n\nSarah fussed, but I put a shelter at the bus stop to keep her out of the weather while she waited, complete with heater. It could get pretty cold in these mountains. \n\nI just smiled at her.\n\n\"My property, my decision. You can always forbid her to use it.\"\n\nThat never happened.\n\nI had to go to Chicago for the new book, and took them along. They visited old friends, and shopped while I did my business. They were having a ball until they ran in to her ex, completely by accident. Even though he had visitation rights he had never once come to see B.B. She had matured quite a bit, shooting up two inches and started developing a figure. No doubt, she was going to be a heartbreaker. He didn't recognize her at first. Sarah just stopped dead on the sidewalk.\n\n\"B.B.! Is it really you?\"\n\nHe hugged her, not even acknowledging Sarah.\n\n\"Have you moved back?\"\n\nWith a glimmering of what a she devil she could be when she wanted to, she smiled sweetly.\n\n\"No, we're here on a visit. Mom's new boyfriend brought us. Here he is now.\"\n\nI had just walked up. She grabbed my hand.\n\n\"Here he is now! Da...I mean Harry, this is my father.\"\n\nHe was frowning as he shook my hand. Sarah and B.B. had moved closer to me, for security. He noticed.\n\nHe tried to smile.\n\n\"Well, since you're here, how about spending a few days with your Dad?\"\n\nShe gave that sweet little smile of hers.\n\n\"Sorry, father, we're leaving today for home. Remember it, the place you've never been to? If you're in the neighborhood, stop by. Now, please excuse us, we're in a bit of a hurry.\"\n\nHe went bright red and turned to Sarah, reaching out to grab her arm.\n\n\"You've turned her against me! You bi...\"\n\nI had instinctively slipped between them, blocking his attempt to touch her.\n\n\"Mind your language! There are children present.\"\n\nHe snarled at her.\n\n\"So, you're with this loser. What's wrong, have I spoiled you, are you unable to be with a real man?\"\n\nSarah suddenly regained her voice.\n\n\"You're right. I am spoiled. By Harry. He's shown me what a real man is, and you'll never attain that level. You're just a controlling, manipulative little boy compared to real men in general and Harry in particular. Now, we really have to go.\"\n\nWe went by him, and he grabbed my arm.\n\n\"You! You're the one behind my troubles. I knew she couldn't afford those high dollar lawyers. If you think you're the sugar daddy who can protect you, you're wrong. I'm coming after custody, watch out!\"\n\nI grabbed his little finger and twisted outward. He almost went to his knees. I looked over at Sarah.\n\n\"Ready to go home?\"\n\nShe smiled and took my arm.\n\n\"Whenever you are, dear.\"\n\nWe left him, fuming on the sidewalk, vowing vengeance.\n\nShe waited until we were on the plane before she started asking questions.\n\n\"What was that sugar daddy crack about? What high dollar lawyers? Truth time here, Harry.\"\n\nI squirmed a little before I gave her the Reader's Digest form of the truth.\n\n\"I knew you were having a hard time. I also knew he was jerking you around over support and alimony. He lived in Chicago. My publisher is based in Chicago. So is my lawyer. I reached out through him, and was able to see you get what's coming to you.\" \n\nShe sat and had the trial in her head before she rendered verdict and sighed.\n\n\"Thank you, Harry, but you need to let me fight my own battles.\"\n\nI gently pointed out at the time she was suffering from her version of combat fatigue at the time, and reinforcements were needed.\n\n.................................................\n\nThe asshole did sue for full custody, saying he could give her a better life. My lawyers ripped him to pieces. I actually went to court with them. B.B. held my hand the whole time, scared to death.\n\nIt was short and sweet.\n\nHis lawyer presented his case, doing a good job for what it was worth. Then my/our lawyers got up and destroyed him.\n\n\"You live in a rented apartment, correct, sir?\"\n\nHe answered yes.\n\nOur lawyer looked at the judge.\n\n\"I would like it placed in the records that my client owns a house, free and clear, in a rural setting, on a lake. It is a three bedroom split level.\" He submitted pictures of her house, and his apartment.\n\nThis was true. When the foundation deal went through, I cut her house and five acres out. I had her dad present her with the deed before he left for Florida. I know, sneaky and underhanded.\n\n\"I understand you have a good income. True?\"\n\nHe bragged about his job.\n\n\"Then sir, could you tell me why on several occasions in the last year you have withheld paying your child support and alimony?\"\n\nHe had no answer. Our lawyer submitted her starting salary in her new job, noting the schedule of raises she would get if she reached certain goals.\n\nYour honor, would you please note that with her salary, alimony, and child support, her gross income is slightly higher than his. Plus, since both her house and car are paid for, her living expense is considerably less than her ex husband.\"\n\nHis lawyer had had enough.\n\n\"Your honor! Income is not enough reason to keep a man from his child.\"\n\nThe judge, a woman, looked over her glasses at him.\n\n\"You are quite correct, counselor. Quality of life, however, is a big factor. So please let your opponent continue.\n\nOur lawyer switched to another subject.\n\n\"Tell me sir, what is the name of the school she would be attending if she lived with you? Do they have a good record? Have you prepared to have her enrolled? Where is the nearest park? Who will watch her while you work after school and in the summer? And if you love her as much as you say you do, why haven't you visited her once in almost a year, or brought her here to spend time together while she was on summer break?\"\n\nHe obviously hadn't thought about any of that.\n\nIn the end he said he thought he would work all the details out after he got custody, and he just hadn't had the money to make the flights.\n\n\" You just told us what a great salary you made. What did you spend the money on? Was it the vacation you and your girlfriend spent in Cancun?\n\nOr the weekends in Miami or Myrtle Beach? As much as you and your girlfriend like the sun, you should consider moving. That's six tickets, all first class, you've bought last year, none of them for visiting your daughter. For the money you spent, you could have flown down, rented a car, and got a motel room every other week and still have money to spend on her. What did you get her for her birthday this year?\"\n\nMy attorney looked at the judge.\n\n\"Could we wind this up, ma'am? No further questions for Mr. Parker. I'd like to call Miss B.B. Parker to the stand. Let's hear what she has to say about all this, and who she'd like to stay with.\"\n\nHis attorney had fought to keep her off the stand, and lost.\n\nI had to walk her up to the stand before she would let go of my hand. The judge gave me a look.\n\n\"I know you. Have you been in my court lately? And clarify, the child obviously is very familiar with you. What's you role in this mess?\"\n\n\"You have a good eye, your honor. I was in your court two years ago, following a criminal trial I was thinking about making into a book. And I'm proud to say that Sarah and B.B. are very special to me. We're neighbors, but more importantly we're friends, and I tend to stick by when my friends are in need.\"\n\nShe shook her head.\n\n\"I remember, the writer. You gave me some of your books. Quite good. You may step back.\"\n\nB.B. was eloquent on the stand. She described the breakup of her parents from her view, and how lonely she was when they first moved. Then her eyes glowed as she described her life later, her friends, her school, her church, how much better it was in a country setting. She bragged about her perfect grade point average, her certainty to be on the principals list in the newspaper.",
        "She addressed the judge directly.\n\n\"Ma'am, my life is almost perfect. I'm a country girl now, if you force me back into the city I'll wither and die.\"\n\nHis lawyer was drowning and knew it. He tried to get her to say that she and her mother were under my influence and were just puppets. He was trying to lead her several times before the judge warned him.\n\nFinally she snapped and started crying. I was out of my seat in a flash, but Sarah pulled me down. The judge didn't say anything, but it wasn't lost on her that when she was crying I was almost fighting to get to her, while her father sat and did nothing. \n\n\"Child, I think we've heard enough. If you got to choose, where would you go?\"\n\n\"I'd go home with my mom and Harry, you're honor.\n\nI'm safe there, Mom and Harry would make sure I was well cared for. Please your honor, can I go home now?\"\n\nHer father didn't take the loss well, fuming and vowing revenge while his lawyer tried to pull him outside the courtroom. He just barely missed a contempt citation.\n\nBetween sniffles she addressed the judge again.\n\n\"Thank you, ma'am.\"\n\n\"You're welcome, my child. If I ever travel in your direction, I might stop by to say hello.\"\n\n\n\nThe judge smiled when B.B. showed her some pictures of her house and the lake. I was pretty much in every one of them. They drifted to the side and held a little private talk before coming back to us.\n\n\"Well, I'm going home now. I'd like to hug my daughter, but she's thirty and lives across the state. Think I'll call her tonight.\"\n\nShe looked at me.\n\n\"I just finished your last book. It's hard to believe it wasn't fiction. It was a tragedy, but a very good read. Working on the next one?\"\n\nI told her I was about half done, a novel, my first stab at pure romance. She pressured me until I promised her an advanced copy. B.B. giggled and said she would send her what she promised when the time is right.\n\n\"What did you promise to send her?\" I asked as we got ready for the flight home.\n\nShe smiled her newly acquired grown up smile.\n\n\"A woman needs her secrets, Dad.\"\n\nSarahs' head snapped up. It was the first time she had heard her call me Dad. However, she said nothing. In fact, she was smiling when we left for the airport.\n\n.................................................\n\nTo use the old fashioned term, we were going steady. Everyone assumed we were a couple now. Any invitations we got now were to both of us.\n\nB.B. spent a lot of Saturday nights with the Sampsons while we went out. We returned the favor, watching over their children when they needed a little alone time. B.B. had her own room in my house now, and she and Sandy took advantage of it when they were over. Sarah and I would watch the youngsters until bedtime. We would do a little quiet snuggling and quite a bit of kissing before I would go back home to make sure B.B. and Sandy hadn't broken any furniture.\n\nMost times I would find them asleep in front of my fifty two inch television, a romance in the DVD player. I would wake them gently and send them to bed. It was nothing for me to find them back in front of the television, asleep on a blowup mattress I bought just for these sleepovers, snuggled together, sleeping like a rock.\n\nI usually started breakfast, calling Sarah to bring the little ones as soon as the things started getting done.\n\nI was taking a break from writing a few months ago and B.B. had Rachel Ray on the TV, yelling for me to look.\n\nThe girl loved waffles, and Rachel was making them with cake mixes. Red velvet with cream cheese icing drizzled across the top. Chocolate with chocolate syrup. Strawberry with fresh strawberries and cream. The combinations were endless.\n\n\"Ooh, dad, look! Can we make some?\"\n\nI just grinned at her.\n\n\"Maybe. Promise to be as neat as always?\"\n\nShe blushed. She wasn't inherently messy. just extremely disorganized. I had been working with her, threatening to banish her from my kitchen. Her mom had long ago banned her from theirs.\n\nWe bought a few cake mixes and syrups, and experimented. She was very good at it, and soon it became our Saturday morning breakfast. She would make the batters the night before and cook her concoctions the next day. Sarah would grumble about having to get up early on her day off, but would come. One day she came in, took off her heavy coat and boots, and redonned her robe. She was in flannel pajamas, and the lingering cold told me she hadn't bothered with a bra.\n\n\"I'm tired of getting dressed up to eat breakfast.\", she said as she walked over to the fireplace, pulled a pair of thick fuzzy socks out of her robe pocket, and dragged a chair a little closer to the fire. Pulling a footstool in front of her, she propped her feet up with an audible sigh.\n\n\"Please Sarah, feel free to come over here undressed anytime.\" I said with a grin. We could hear B.B. giggling in the kitchen.\n\nShe blushed before she could stop herself and then smiled the adult version of the way B.B. did.\n\n\"I might just take you up on that.\"\n\nIt was my turn to blush. Her smile got bigger and she told me to get her some coffee.\n\nAfter that they would both show up in pajamas, and after breakfast we would idle around the fireplace, reading the paper or catching up from our week, while B.B. played on the computer.\n\nWhen B.B. had Sandy over and she tasted the waffles, things got complicated. As she made more friends, they became part of the breakfast group.\n\nIt kind of got out of hand. Sarah and I would go out and come back to a houseful of teen girls. It became a chore to get everyone up and to my house.\n\nB.B. quickly solved that dilemma.\n\n\"Da..H., you've got this four bedroom house all to yourself. Why don't we all just spend the night here? We girls could have two bedrooms, Mom could have one, and you'd have yours. If you and mom were to share, I could have even more friends over. Wouldn't that be fun?\"\n\nI don't know who blushed more. We hadn't been intimate yet, but we were close. Still, I didn't want our first night together to be in a houseful of teen girls. \n\nSo we started hosting sleepovers. We made sure all the parents knew us and knew the situation. Most just grinned and secretly thought we were idiots for not sleeping together. It worked out well, because sometimes the other parents hosted sleepovers, and we didn't have to worry about B.B.\n\nIt was one of those nights when B.B. was gone, right before Christmas, that it happened. \n\nWe went out dancing, her favorite activity. I had gotten better, but still couldn't keep up. We had a circle of friends, and she danced almost every dance. We had two newcomers in our group, friends of friends. She seemed nice, he seemed on the make. He made it a point to try to dance with all the wives and girlfriends. Most did, once. I don't think I saw anyone repeat.\n\nShe never danced a slow song with anyone but me. I had gone to the bathroom, and she was standing to let a couple back into our booth, when he grabbed her and had her on the floor before she could recover. She tried to keep distance but he kept pushing against her. I came out just in time out to see her struggling. He did a turn and had her back to the group, grinned at them, and started inching her dress up. I was practically running across the floor. She stamped his foot and he let go. You could have heard the slap in the next county. The bouncers got to him before I did, in fact one of them had to hold me while the other two hustled him out, his embarrassed wife trailing behind.\n\nShe clung to me, not in fear but rage.\n\n\"I'm glad the bouncers got to him first, in a way. Would you have hurt him?\"\n\nI had calmed down a little by then.\n\n\"I would have done my best to kill him. Nobody touches my woman like that.\"\n\nShe stiffened and looked in my eyes.\n\n\"Am I your woman?\"\n\nI looked into her eyes. Time to declare my intentions.\n\n\"Yes, you are. You will be, for a long, long time if I get my way.\"\n\nIn a surprisingly meek voice she \"Okay, honey. Can we go now?\"\n\nI wrapped my arms around her and guided her to the door. I got her in the car and before I could turn she pointed across the parking lot.\n\n\"Take me there.\"\n\nIt was the local motel. They got a lot of trade from the bar. Couples not wanting to drive after drinking, people hooking up, travelers trying to relax, that sort of thing. It wasn't five star, but it was a clean, well kept place. It was managed by the wife of the police chief, so it was patrolled a bit more often. Misbehavior of any kind was not tolerated.\n\nI didn't hesitate. Marissa Cook lived in my neighborhood and worked at the motel to make extra money. She handed us the key and tried her best not to smirk. It would be common knowledge where we spent the night before breakfast.\n\nWe weren't on each other like animals, but we did manage to pop some buttons and ruin a good pair of hose. I hadn't been with anyone since we started dating, and she hadn't been with anyone since her husband.\n\nSo, the first time was a little hurried. But over the night we grew acquainted with each others' bodies. She was short, just over five feet, with small firm breasts proportionate to her frame. Just a bit more than a mouthful. I know, I tried my best to suck them all into my mouth. Very responsive to stimuli, as attested by her moans.\n\nHer ass was in my opinion, perfect. Heart shaped and firm, I had a hard time getting enough purchase to nibble, but her squeals and the way she shoved it back into my face made it more than worth the effort. And her taste was like honey from wildflowers, sweet and aromatic, from what I actually got to taste between her bucking and moaning, before she finally settled down and shoved my head forward so far I couldn't breathe.\n\nHer smoothness was gone, replaced by a nicely furred strip. She told me later she had gone native, didn't country girls like fur? \n\nShe gave as good as she got when it became my turn. I've always considered myself average at six and a half inches. I was amazed when she went down to the base the first time, holding and humming softly. She stroked my shaft with her small hands and played with my balls the whole time. She would slid all the way off, circle the head with her tongue slowly, looking me in the eye, before plunging back down. When I felt myself losing control I tried to pull off, but she reached up and covered my hand with hers and pushed down, firmly. I literally saw stars when I erupted.\n\nShe let me rest for about fifteen minutes before sliding down my stomach. Ten minutes later she slid over my body, lining up and slowly, slowly, sinking down. She was so incredibly tight it took her almost ten minutes to get firmly seated. She sat, giving little gasps as she started rocking, working around in small circles. After a few minutes I started thrusting up. She started sliding up and down, short small strokes at first, but in a few minutes she was pounding into me savagely. I rolled her over and she locked her legs behind me, pulling me in. For four or five minutes I pounded her mercilessly, her urging me on the whole time.\n\nShe surprised me with her strength, arching into me, actually pushing me back. I responded by slipping almost out before ramming hard and holding it. She shrieked as we both exploded. Her muscles clamped around me so hard I didn't think I could force it out, but I did.\n\n\n\nAfter a few minutes of savoring the feeling, I rolled off, pulling her to me.\n\nI started to tell her I loved her but she put her fingers to my lips.\n\n\"Shhh. Let's just enjoy the glow for a minute.\"\n\nThe next thing I heard was the shower running. I stumbled to the bathroom to find it locked.\n\n\"Just a minute\" I heard.\n\nI was about to get dressed and find a bathroom when she came out wrapped in a towel.\n\n\"All yours\" she said.\n\nI stumbled in and emptied my bladder, then hopped into the shower. I left the door open but she didn't come in. When I came out she was gone. She had left a note.\n\n\"Getting coffee\"\n\nI dressed and she came back in with the coffees. She wouldn't look me in the eye.\n\n\"Sarah, what's wrong? Are you ashamed of what we did last night? Was it a mistake? Talk to me.\"\n\nShe fidgeted for a moment.\n\n\"I swore I would never let myself love anyone else. My husband ruined me. It took you telling me and a year of reflection and a little counseling to get to where I didn't automatically hate all men.\"\n\n\"I'm sorry I took most of it out on you, but you were handy, and you let me rant. All my hate for my ex got dumped on you. I still don't know why you took it.\"\n\n\"But you were so kind, so patient. The only time you forced me to behave was over B.B. You know she loves you, don't you? I saw one of her school notebooks and she had B.B. Smith on it. As far as she's concerned you're her father, and she fusses at me to make it happen.\"\n\n\"So you've got two hearts to consider here. If we don't work out, they'll both be broken.\"\n\n\"I'm sure I love you, I just don't know how to handle it. Help me, please? Please?\"\n\nI got down on my knees and hugged her as she sat on the bed.\n\n\"Honey, I'll help you. It's in my own best interest. I carry my scars, they're just not as visible as yours. But you melted them. I promise I'll do the same for you. Okay?\"\n\nI held her while she cried. I might have been a bit misty eyed myself. When she calmed down I helped her up.\n\n\"Come on, we have to go home. I'm sure our child will notice something is up if we don't\"\n\nWhen I said 'our child' I felt her shudder and grip my hand tighter.\n\n..................................................\n\nTo say B.B. knew something had happened was an understatement. When we picked her up she immediately saw the stubble on my face[she knew I hated being unshaved]and that we were wearing the same clothes we left her in. In retrospect, we should have gone home and changed, but neither of us were thinking clearly. Her grin made her face disappear.\n\n\"Not a word\" I whispered in her ear as I collected her.\n\nShe made it five miles before she couldn't contain it any longer.\n\n\"So, did you guys have a good time last night? Dancing I mean?\"\n\nSarah blushed and hid her face in her hands. I just grinned.\n\n\"Why yes we did, B.B. A really good time. Thank you for asking. I hope to do a lot more dancing in the future. Don't you, honey?\"\n\nSarah just moaned a little and shut her eyes.\n\nI looked at B.B. in the rearview mirror and caught her eye. I cut my head over at her mother and mouthed 'stop it' to her. She nodded.\n\n\"Well, I'm just glad our family is all home safe and sound. What's for lunch?\"\n\n..................................................\n\nEverybody knew. There was no such thing as a secret in our little community. \n\nNobody said anything, well, not directly of course. A lot of odd things came up in conversation at church, though.\n\nSarah got the brunt of it. Little things kept coming up.\n\n\"My Aunt Carole makes the prettiest cakes you ever saw. Her wedding cakes are famous. I have her card dear, in case you ever need a cake for a festive occasion.\"\n\n\"You know, we haven't had a wedding in the church in ages, don't you miss them? Nothing makes me happier than to see two young people start out on the right path. And Reverend Sampson's youngest, what is she five, six now? I bet she'd make an adorable flower girl, don't you think?\"\n\nOne lady gave her a card for a seamstress that specialized in wedding dresses.\n\nShe stormed up to me between Sunday school and regular services.\n\n\"What have you been saying?\"\n\n\"Not a thing my love. But these people aren't blind, they see the way I look at you. And that kiss you gave me when we got out of the car fueled a few tongues, I'm sure.\n\nShe colored. She had been so happy she did give me a nice kiss in the parking lot.\n\nI embarrassed her further by kissing her cheek.\n\n\"Get used to it. They're probably already planning the bridal and first baby shower.\"\n\nShe got even redder. Then sad.\n\n\"We need to talk, later.\"\n\nI just hugged her tighter and walked into church. Half way through the service her little hand reached out and captured mine. She never let go until we left.\n\nReverend Sampson grabbed me while June was deep in conversation with Sarah.\n\n\"Just so you know, I do a mighty fine wedding service.\"\n\nI grinned.\n\n\"I'll keep that in mine, should the need ever arise.\"\n\n................................................\n\nChristmas came. It was a joyous time. Sarah and B.B. made me take them for a Christmas tree, and we spent seven hours going from farm to farm before they agreed on the perfect one. The farmer was going to cut it when B.B. stopped him.\n\n\"Can we get it with roots?\" \n\nHe got out his tractor with an odd attachment. We watched as he scooped it out of the ground and then ran it through a machine that wrapped it in burlap. He gave me a list of instructions for keeping it alive.\n\nIt went into my house, they already had a small artificial tree. I was terrible at decorating, so the girls took over while I sat with a cup of coffee, watching. I don't think I was ever so happy.\n\nB.B. called me Dad openly now, as if she were daring her mom to say anything. Sarah never commented. To her, we were already a family.\n\nShe told me she hoped we married soon, she hated having different last names. Sarah had taken her maiden name back after the divorce. So, B.B. had given her name as Parker at school, even though legally she was Jones.\n\n\"Smith is just so much better, don't you think?\n\nMuch simpler to remember.\"\n\nSarah and I went Christmas shopping together and separately. She made me promise not to get carried away, which I did and promptly broke.\n\nIt was a lot more fun to shop with B.B., in her opinion too much is never enough. I had to reel her in a little when it came to her friends.\n\n\"Honey, don't get carried away. Most of your friends don't have the financial means you do. Some may not even be able to give gifts. Consider their feelings.\"\n\nI could tell she hadn't thought of that. It troubled her for a few days. The economy was still in a slump. Jobs were hard to come by in our little area and many were struggling. \n\nI was often amazed at her analytical mind and huge heart.\n\nShe approached me while her mother was at work. She got home from school before her Mom left work, and she always stayed with me until she got off. We would usually have dinner ready and would talk about our day. It was getting harder and harder to let them leave.\n\n\"Dad, I have an idea. I've talked to all my friends, and instead of exchanging gifts this year we're going to donate our money to the 'White Christmas' program. Will you help us?\"\n\n\"White Christmas' was a program started by Christian Ministries, a coalition of local churches to help the community. They worked with the Department Of Social Services, identifying and helping people in need, however they could. Sometimes it was help with power and heating bills, sometimes it was food and clothing, sometimes it was just counseling. This particular program targeted people who wouldn't have a Christmas without help.\n\nOf course I was willing to help. We got a list of families in our area who were in desperate need.\n\nWe took the money her friends and church youth group donated and bought presents for the families. An unknown donor pledged to triple whatever they and the church in general raised. We had the age, sex, and size of each family member.\n\nThe whole church got behind the program. It was decided we would distribute the presents on Christmas Eve, early in the morning. That way the parents could put the presents under the tree for Christmas morning. \n\nWe made sure everyone had at least one new set of clothes, and enough groceries to last a week, including a feast for Christmas.\n\nI took one church bus, filled with kids in one direction, while Sarah took the other. We met at seven in the morning. Reverend Sampson gave them a small lecture about being kind and respectful.",
        "\"Remember, it could have been you we're helping if circumstances were different. Think how you would feel.\"\n\nHe said a brief prayer and we set off. He rode with my group, June rode with Sarah.\n\nIt was a very humbling experience for the kids to see how hard life could be. But it was also filled them with joy. They made sure they had lots of gender neutral small gifts that the smaller children could open right away. Every family got a large box filled with fruit and candies.\n\nIt was a bittersweet group that got out of those vans that afternoon. The kids, most in their early teens, grew up quite a bit that day.\n\nSarah's parents came up for a week. I surprised B.B. by flying her other grandmother in. B.B. had been fond of her, talked to her every week, but only got to see her twice since the divorce.\n\nI was really surprised when my parents accepted my invitation and came up. Our relationship had been strained over the years, first because of my career choice, then my marriage. The shooting, instead of bringing us closer, seemed to drive us even farther apart.\n\nIt was a bit odd when we got them together the first time. B.B. finally broke the ice when she looked them over and said, \"Boy, am I gonna get a bunch of birthday and Christmas presents if things work out.\"\n\nBy the end of the afternoon she had them all charmed, my mother especially. One of our biggest conflicts was that I hadn't given her grandchildren yet.\n\nThere was a quick conference, and soon all five official and unofficial grandparents were gone in my SUV. B.B., Sarah and I took off just as soon as they were out of sight. Our Christmas tree was just barely visible already, so the new batch of presents went under the one at Sarah's.\n\nThe sleeping arrangements caught me by surprise. All the grandparents took over Sarah's house and Sarah and B.B. stayed with me. B.B. had long ago designated one bedroom as hers and had decorated it accordingly.\n\nWe sat drinking hot cocoa and talking about the day when Sarah yawned. I took her hand and pulled her off the couch.\n\n\"Come on honey, time for bed.\"\n\nI kissed B.B.\n\n\"Goodnight, daughter. Try to get some sleep, big day tomorrow.\"\n\nI pulled Sarah behind me into my bedroom. She followed in a daze. As I shut the door B.B. gave me a thumb's up, smiling even as tears trickled down.\n\nSarah finally seemed to come awake.\n\n\"Are you sure about this?\"\n\n\"As sure as I can possibly be. You can always go to another bedroom if you want.\"\n\nShe sat for a minute.\n\n\"No, this is where I want to be. I have to go get my clothes though. I'll be right back.\"\n\nAfter five minutes I peeked out the bedroom door. She and her daughter, our daughter, were in a tight hug. I eased the door closed.\n\nShe went right by me into the bathroom, coming back out in a sensible gown. She looked at me and smiled.\n\n\"Even if she is fourteen. tomorrow she'll be four. Expect to wake up early, to her bouncing up and down on the bed.\"\n\nShe we lay down and snuggled. As she nestled on my shoulder, her warm breath tickling my chest, I wondered if she'd like my Christmas present.\n\nSure enough, at five thirty the next morning, the bedroom door slammed open.\n\n\"Get up! Get up! Merry Christmas. Come on, we have to get breakfast started.\"\n\nShe had premade the batter last night. Her village of grandparents got to taste her waffles and were suitably impressed. They all sat back when they were done with contented sighs.\n\nWe teased B.B. by talking about what we would do next.\n\nWatching parades, football games, and dog shows were discussed. I suggested going back to bed for a few hours. B.B. finally stamped her foot. \n\n\"Fine! I guess I'll go unwrap presents by myself.\"\n\nWe all laughed and trooped to the living room.\n\nIt must have taken an hour, but the presents were all distributed and opened. Then we had to go back to Sarah's and do it again.\n\nFinally, everyone thought it was over. I looked at my mom, and she nodded, looking towards the tree. I had asked her to hang a couple of extra ornaments for me.\n\n\"I think you guys missed a couple.\"\n\nI pointed at the tree. There were two decorated laminate eggs hanging in front. The pink one had B.B. monogrammed on it, the light blue one had Sarah.\n\nB.B. opened her first. Small diamond earrings I had bought months ago, when she had shown them to me in the window of a jewelry store in Chicago. It set off a wave of tears.\n\nSarah instinctively knew something big was about to happen. She slowly opened the egg and collapsed on the couch. I never was impressed with diamonds, so I had her ring custom made, a beautifully cut sapphire, surrounded by small diamonds.\n\nI was beside her by then, holding her shaking body. \n\n\"Well, honey, do you like it? If not, pick anything you want, just as soon as you say you'll marry me.\"\n\nShe sat and rocked, crying as the parents congratulated her.\n\nI slipped it on her finger. She held it out, admiring the sparkle. Then she surprised us all.\n\n\"I say yes, conditionally. I want to marry you with all my heart. But we need to discuss something. When I'm finished if you still want to marry me, I accept. If you don't, I'll understand.\"\n\nShe looked at our parents. \n\n\"We're going back to Harry's house for a bit. Please give us and hour of privacy.\"\n\nIt was a silent walk up the driveway, but she held my hand the whole time.\n\nShe made fresh coffee and we sat in front of the fireplace.\n\n\"Honey, do you know how old I am?\"\n\nI assumed she was around my age. I shook my head no.\n\n\"I'm thirty seven, Seven years older than you. When I was pregnant with B.B. my husband pushed me down the stairs. B.B. was born six weeks premature. I'll always believe that's why she's as small as she is. Because of complications, I can never have children again. So, my age doesn't matter. I can't give you children. Do you still want to marry an old, barren woman?\"\n\nI took her hand.\n\n\"Look at me\" I commanded, not speaking until she held my eye.\n\n\"I didn't fall in love with an old woman, or a baby factory. I fell in love with you. As good as you look now, when we're seventy and you look fifty I'll have to beat the men off of you with my cane. And you've already given me a child, a man couldn't ask for a more perfect daughter. If we decide we want more children, there are plenty out there that need a loving home.\"\n\n\"Before you answer, I have a few things I need to tell you. I bought your house so you'd stay here with me. The retirement money your dad sent you came from me. I'm the mysterious foundation that funded the library and got you the job. If you needed it and it was in my power to give it to you you got it. Please don't be angry. I was in love with you even then, and I would have given my last dime to keep you around.\"\n\nShe sat for a minute, absorbing what I had said. Then she smiled.\n\n\"You loved me that much?\"\n\nI nodded. \"You, and your daughter.\"\n\n\"So, to address your concerns and conditions, I am more than happy with you just the way you are. I couldn't love you more than I already do. The rest is up to you. Yes or no?\"\n\nI think she actually fainted. She sat stock still in my arms before she turned and gave me the softest kiss I had ever had. They felt like they had been brushed by angel wings.\n\n\"Yes\" she said quietly, before grabbing my head and jamming our mouths together so hard I figured we'd have bruises later.\n\nI finally had to pull back.\n\n\"we have to stop now babe. But you have my solemn promise we will resume this later. Now, we have family waiting on us.\"\n\nThe afternoon went by in a pleasant blur. Her ex mother in law pulled me aside.\n\n\"You're a good man, Harry. She deserved to be happy. My son had, no, in honesty he still has issues. I see how B.B. looks at you. Be a good dad to her. And please, allow her to keep in touch with me.\"\n\nI shocked her with my conversation. I knew she was on a fixed income and struggling.\n\n\"Do you like it here? Anything besides your son holding you in Chicago? We'd like you to move down here, so you can be close to your granddaughter. It wouldn't cost you a thing, this house is going to be empty soon. Think about it.\"\n\nShe was crying quietly as I passed her off to my mother. I saw my mom look at me like it was the first time she had ever seen me.\n\nWe all bundled up to go to Christmas services. We had to drive two vehicles. B.B. had two solos, one with the youth choir, and one with the full choir. \n\nThe younger kids put on a play, and Greg gave an inspired sermon.\n\nIt was Christmas, and I felt as happy as a human should be allowed to feel. Greg was there shaking hands and hugging everyone. I held back while he talked to B.B. and the assembled grandparents.\n\nWhen I got him alone I asked him a question.\n\n\"Do you know who that new minivan with the temporary tag belongs to?\"\n\nIt had been parked there since yesterday. He had no idea.\n\n\"Why reverend, I'm shocked. I thought you knew everything about your flock right down to their underwear size. You really don't know who it belongs to?\"\n\nHe shook his head, wondering where this was going.\n\n\"Surely, Greg, you recognize your own car, don't you?\" I handed him the keys.\n\nIt was the first time I had ever seen him speechless. His car was on it's last leg. There's nothing more embarrassing than being late to church when you're the reverend.\n\nBefore he could protest I cut him off.\n\n\"Don't say a word. I didn't give it to you. God did. If you have a problem, take it up with Him.\"\n\nI paused as I went out the door.\n\n\"If you really want to thank me, I am looking for someone to conduct a marriage service. Call me if you find a preacher willing to do it. Merry Christmas to all.\"\n\n.................................................\n\nThere were a lot of tears and hugs later when everybody left. Before I had a chance to argue, the grandparents started talking about which weeks B.B. was going to stay with them this summer. I almost lost my new daughter before I got her. The single grandmother just smiled when they asked her what week she wanted, saying it really didn't matter.\n\nShe went back to Chicago and stayed just long enough to pack what she wanted to keep, get rid of the rest, and say goodbye to her friends. Her son went ballistic when she told him.\n\n\"Why would you care? I've lived six blocks from you for two years, and you've been to see me once. I talk to you once a month on the phone, and I have to call. You're not angry about me leaving, you're angry about where I'm going. Maybe I'll send you pictures of your daughter from time to time.\"\n\nShe left before he could reply.\n\nWhen Sarah found out what I did she looked at me stunned. Then she smiled.\n\n\"Just when I think you can't surprise me or make me love you even more, you prove me wrong.\"\n\nSo \"Granny J\" moved in. She immediately volunteered at the new library and joined the church. It soon became apparent where B.B. inherited her voice from. June paired them with her best two male voices. Pretty soon the quartet started singing at rest homes and local gatherings. They were even invited to some statewide concerts.\n\nI was writing, Sarah was working, B.B. had church and school, and we ended up spending less and less time together. I took if for about six weeks before I called a family meeting.\n\n\"The purpose of being a family is to be together. I know what we do is important to people, but we need to keep our focus on us. I don't want us to be soccer parent/committee members/professionals.\n\nI want us to be like we were before, but better. All right?\"\n\nWe all agreed and Granny J broke the ice.\n\n\"Does this mean I have to give up my bingo night?\"\n\nWe all laughed and hugged, and started making sure we blocked out most of the weekend for each other.\n\nThe wedding was set for the first week in May. Sarah spent most nights with me and B.B. divided her time between houses. Most times we all stayed in my house, It just made it easier. \n\nJane, I didn't like addressing her as Granny J, was a voracious reader with an amazing memory. I had finished the first draft of my new novel, and was looking into doing an historical based novel on the Over Mountain Men, a loose group of Revolutionary War irregulars from most of the Southern border states and territories, who converged on Kings Mountain, On the North/South Carolina border to battle and defeat the loyalist troops under the command of Major Patrick Furgueson.\n\nMany considered it the turning point of the war, driving Cornwallis to his ultimate defeat and surrender. Up until then these men pretty much ignored the war, fighting Indians and trying to keep their farms going. When Cornwallis put out his proclamation stating that he intended to burn their homes, kill their livestock, and leave their children orphaned, they took offense.\n\nThese weren't regular troops, but frontiersman who grew up fighting Indians. They had no formal knowledge of battle. They would hide behind a tree, shoot you, then run away until they could reload. They massacred the loyalists, including their leader, and then killed many who surrendered in their rage.\n\nJane became a paid researcher, giving me a lot of help. When the book was finished, she got credit for her contribution.\n\n................................................\n\nMeanwhile, things were not going so well for Mr. Edward Jones. He lost the job he loved so much in the continuing disintegration of the economy. The hot young blonde, seeing the end of her shopping sprees and vacations, left him. He started drinking more, and misbehaved so badly to another tenant the police were called and the management sent him a formal letter, threatening eviction if anything similar happened again.\n\nHe brooded and fumed, and came to the conclusion if Sarah hadn't left him everything would be fine.\n\nThen he blamed me for taking them away from him, even though they had divorced and she had moved well before I came into their lives.\n\nFinally, he decided that all he needed to do to get his life back on track was his family back. With that in mind he flew into the closet big city and rented a car. He'd straighten the whole thing out, by God, and put their asses on a plane back home.\n\nIt was early April and the snow was still on the ground and there was a chance for more in the next few days. Already dark by five, we had settled in for the night. Sarah and B.B. were spending the night with me. B.B. had her room exactly as she wanted it by now, but Sarah was making little comments like \"Wouldn't a different window treatment look nice?\" or \"Wouldn't some bright pillows liven up this couch?\" until I hugged her and told her she could do anything she wanted right up to the office door. That room was strictly forbidden.\n\nB.B. was talking about riding her new fourwheeler down to check on her grandmother, something one of us always did before bedtime. The phone rang and it was Jane, in a panic. Edward had shown up, demanding to see Sarah and B.B. She told him they were out, and he should come back later. He was roaring through the house looking for them. \n\nSarah had called 911 while I went down to her house. I carried my .40 Smith and Wesson. When I told Sarah months ago I didn't have guns laying around the house I wasn't lying. That didn't mean I didn't own them.\n\nLuckily there was a deputy close by. He pulled into the drive the same time I did. He saw my holstered weapon.\n\n\"Wiley, lay you weapon in the back seat of my car. Let me handle this.\"\n\nI complied, I had no choice.\n\nHe got Edward out of the house, keeping his hand on his taser. By then he had calmed down, but he told the deputy he was staying until his wife and daughter came home. I got Sarah on the phone with the deputy.\n\n\"I am not his wife. We've been divorced for almost two years. I have primary custody of our child. I did not invite him and I don't want him there. Can you make him leave? Tell him to call me and set up a time and he can come out, if he's sober and rational. Now, he's upset his mother, who does live here, pretty badly. Can you help me?\"\n\nHe forced him to leave, telling him he would be charged with trespassing and spend the night in jail if he didn't. Some of what he said sunk in, and Edward left. The deputy followed him all the way down the mountain.\n\nHe came out the next day, sober, I sat out on the deck, giving them privacy but being close at the same time. It started quietly but soon got loud.\n\n\"Honey, I want out family back. Come home, we can be happy again.\"\n\nSarah and B.B. looked at him like he had grown two heads.\n\n\"Ed, were divorced. I don't love you anymore, and I don't think you ever loved us. You just loved your lifestyle. We can't work things out, I'm in love with someone else.\"\n\nShe held up her hand and showed him the ring. He lost it.\n\n\"So, your rich boyfriend got to you, did he? How does it feel to have a sugar daddy? How much do you think he spends on you per average for a piece of your pussy? How long before you get tired of him, clean him out and move on?\"\n\nSarah went pale and B.B. started crying and ran out to me. I was in the house instantly. I didn't pretend to be reasonable.\n\n\"Look, asshole, you don't have a family anymore. You threw them away and you can't have them back. She's my woman now, and B.B. is my daughter. Know why? Because I give them love, and try to made their lives better any way I can. If she wanted me to sign everything I had away to her before she'd marry me, I'd do it in an instant. You've said your piece, made your argument, and lost. Go home now. If you want to see B.B., come during your scheduled visitation, we won't stop you.\"\n\n\"As far as visitation, we're going to amend it so you can't take her out of state. I don't trust you, and I have to worry about the safety of my daughter. Fight it if you want, we'll be glad to see you in court. I'm even willing to let you stop paying child support if you leave us alone. Think about it and get back to us. Now, it's time for you to leave.\"\n\nHe was furious. Sarah had her hand on the phone. She had already dialed 911, all she had to do was hit send. He was a lot bigger than me, but I was in better shape and had taken a few self defense classes. The fact that I was ready to fight him made him stop and think.\n\n\"This isn't over.\" he snarled as he left.\n\nI had all three girls in a group hug, promising it was going to be all right.\n\nAfter I got them settled I made a phone call.\n\n\"Harry, how you doing? I got something I need a little help with. Can you meet me at the diner at lunch? Thanks Harry. See you then.\"\n\nHarry Winston was a retired cop, a former detective with the sheriff department. I had used him as a source a couple of times when I had to verify procedures and protocols for one of my books. He loved it, it relieved his boredom. It didn't hurt when I sent him a check for consultant services. He was a widower, his wife died a few years ago in a car crash. I went to the funeral.\n\nHe wasn't actually retired, he was a reservist. These were guys who had retired but kept their certification, helping with traffic at big events and patrolling at least two days a month. This worked well because it gave them a little extra income and broke up the monotony of retirement, and it gave the active guys time off. They would work weekends mostly, or anytime a regular deputy needed time off.\n\nI sat down at the table.\n\n\"How you doing Harry?\"\n\n\"Pretty good. How you been, Junior?\"\n\nHe called me junior because we both had the same name. I t seemed to make him feel good so I didn't object.\n\n\"Great in one way, not so good in others. You know I'm getting married, Right?\"\n\nHe grinned. \n\n\"Yeah, never thought I'd see it. She's pretty and seemed intelligent, and she's got a firecracker for a daughter. My grandson has a crush on her, so I get to hear all about her. You're a lucky man, junior. I got the invitation, we'll be at the wedding. I have to see it for myself.\"",
        "I had forgotten what a recluse I had been when I first moved there. It didn't seem like my life, looking back.\n\n\"The reason I called you, Harry, is I need your advice and maybe your help for a couple of days.\"\n\nI explained about her ex, and how I didn't trust him.\n\n\"I need you to spend a night or two at the house, just until I'm sure he's actually gone. I'll pay of course, and as a bonus you get to spend time with an attractive woman your age. Will you help me?\"\n\n\"Yes. It'll be good to work again. I'll call the sheriff, have him keep a closer eye on your neighborhood. He seems unstable from how you describe him. He may already be gone. I'll reach out to some friends, if he's still got the rental car we'll know he's still here. An attractive woman my age, you say?\"\n\nI laughed and described Jane.\n\n..............................................\n\nI went home and explained about Harry. I was keeping B.B. and Sarah with me. I had an alarm system at the house but hadn't actually turned it on except when I traveled. After B.B., I didn't turn it on at all. I checked it out and gave them the codes, telling them to make sure it was on if I wasn't there.\n\nWe teased Jane about Harry, telling her not to distract him with her feminine wiles.\n\nWhen Harry showed up with a suitcase it was obvious after the first hour there was an attraction there. Sarah grinned at Jane when she decided to make her famous chocolate cake for dessert, and she blushed.\n\nAt two that morning Jane called us screaming. Ed was back, trying to break in. He had picked up a pistol somewhere and was threatening to shoot if she didn't let him in.\n\nHarry identified himself, saying the police were on the way, telling him to drop the weapon. When Ed kicked the door in Harry shot him.\n\nIt didn't kill him. When he got out of the hospital, he was charged with felony trespass, breaking and entering, destruction of property[the door], possession of an unregistered weapon, assault with a deadly weapon, and communicating threats to a police officer.\n\nHe was evaluated and found unfit to stand trial, and remanded to the state correction facility for mentally unbalanced prisoners. He was there for two years. He lost rights to B.B. while he was there, and left for Chicago just as soon as he got out. No one knows where he ended up.\n\nSpring came slowly, beating back the ice and snow relentlessly. Everybody got antsy as the wedding approached. My mom showed up two weeks early, dad joined her the next. Her parents came up at the same time, and things were hectic for awhile.\n\nJane asked Harry to stay with her for a few days until her nerves were settled. Six months later they determined she was still emotionally fragile, and he moved in permanently.\n\nB.B. summed it up.\n\n\"That's great! You can never have too many grandparents.\"\n\nSarah was getting all worked up, insecure one minute, tyrannical the next. I just smiled and endured it. \n\nMy accountant nearly had a stroke when I told him there would be no prenup. He begged and Sarah said she didn't mind, but I was adamant.\n\nI was worth about twenty million, give or take. Between the foundation for the library, the nonprofit charity we had started to establish the spiritual retreat, and the donations I had made to different charities, I had spent almost three millions dollars in a six month period. I thought about it, and gave my church a one time donation of one million dollars. That way it was separated from any control or influence from me, making it a true decision of the church board how and when the money was spent.\n\nFinally the day arrived.\n\nThe church overflowed. We nearly wiped out two local florists. June was matron of honor, B.B., Sandy, and an old college friend were bridesmaids.\n\nMy dad actually cried when I asked him to be my best man. My local lawyer had become a good friend and was happy to be a groomsman. Harry and Sarah's dad Bill were the rest of the wedding party.\n\nI asked Greg to be my best man but he surprised us by refusing.\n\n\"As much as it would honor me, I would rather officiate, if you don't mind.\"\n\nOf course we didn't mind.\n\nWe did use the local seamstress for her wedding gown. It was shimmery and layered, and the bodice fit like a glove. She seemed to float down the aisle. June and Greg's daughter was the ring bearer, and Harry's youngest son was the ring bearer. The bridesmaid gowns were also made by the same seamstress, a light pink. I know bridesmaid dresses are supposed to be unattractive to make the bride shine, but in this case it didn't work. They were works of art in pale pink.\n\nWe used the auditorium beside the library for the reception. The twins didn't get to cater it because they were guests, but they didn't seem to mind. The orchestra started up, and we danced the traditional dances. \n\nB.B was over the moon with happiness. As we prepared to leave for our honeymoon, three weeks in the islands, we pulled her to the side.\n\n\"I'd tell you to behave yourself, but with three sets of grandparents to watch over I don't think that'll be a problem. We have something for you before we leave.\"\n\nI handed her two envelopes.\n\nShe tore them open and Sarah had to catch her before she fell.\n\nThe first envelope held her adoption papers, ready to be signed and filed. She would be Brittany Brianna Smith, at least until she married.\n\nThe second envelope contained tickets to the resort we would be staying at for the last week of our honeymoon.\n\n\"You didn't think we could stand being away from our daughter for that long, did you?\"\n\nWhen we in the car on the way to the airport, Sarah handed me her wedding present.\n\nIt was a camera, almost exactly like the one she threw in the lake a year ago.\n\n\"Now you can take all the pictures of me naked you want, pervert.\" she said giggling. It sounded like a fine idea to me, so I did until she tried to make me stop twenty years later. I refused.\n\n\"The day I stop wanting to see you naked is a long way off. Now, lose the bra.\"\n\nShe gave me a present from B.B. also, three pair of silk boxers with a note.\n\n\"Get with the times, Dad. You have a hot wife now, you have to keep her interested.\"\n\n.................................................\n\nLife went on. Our daughter grew up, went to college and got a degree in child counseling.\n\nWhen my next book, A Summer At The Lake, came it out, it became my bestseller ever. The girls tried to pretend to be mad at me because it was basically the story of how we fell in love. The movie was ranked third all time in romance for twenty years.\n\nThe retreat was built, including a fifty space campsite that parents could use, sometimes alone, sometimes in conjunction with the children.\n\nGreg and June became directors, jobs they held until they retired. He preached at our church on occasion, and also at the retreat in the big hall. B.B., Sandy, and most of his other children became staffers in the summer, guiding and watching over the eight to ten years olds. It led B.B. to her choice in careers, and when Greg retired she took over. Sandy became a minister like her dad. She actually served at our church for two years before she was moved.\n\nWhen B.B. went to college Sarah went into a depression. One day I came home to find Sarah rocking a three year old girl in her arms, while her twin brother lay sleeping on my old bearskin rug.\n\nI remembered them from the retreat, they came with their parents and Sarah was enraptured with then.\n\nTheir parents had been killed in a house fire, they managed to drop the children out the window before the smoke rendered them unconscious. So, at forty two, Sarah became a mother again.\n\nB.B. was thrilled when she met her brother and sister for the first time. Bob and Bobbi are in junior high now, and Bobbi has a remarkable talent for writing. She told everybody that someone had to carry on the family business. Bob is a standard fourteen year old boy, starting to notice girls. He does love the outdoors, especially kayaking. He even competes in races, winning a lot. He says he wants to try out for the Olympics when he's seventeen.\n\nAll the grandparent were thrilled to have a fresh set of grandchildren, and most summers, one or both were gone most of the time. I don't like it but I don't complain. Much.\n\nI still write, but at a much slower pace. Maybe one book a year. We have more money than we'll ever spend, and each child has a trust fund. We can't wait to see what life has in store for us.\n\nLife has turned out well for us. Like a famous writer once said, life goes on.\n\n..................................................\n\nOnce again, thanks for reading. Comments, good or bad, are always welcome. "
    ],
    "authorname": "qhml1",
    "tags": [
        "outdoors"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/a-summer-by-the-lake"
}