{
    "title": "My Feather Girl Ch. 02a",
    "pages": [
        "My Feather Girl 02a - Polishing the stone\n\nLEGALESE: Don't read this if you are underage, if it is illegal in your area, if it is offensive to you, or if you cannot distinguish fiction from reality. This is a work of fiction.\n\nAll sexually active characters are above the age of consent on their planet of origin.\n\nMany thanks go to RF-Fast and thor_pf for editing and polishing. Any bad grammar left is wholly on me and my artistic style... and a strong reliance on spell check.\n\nCopyright (c) 2018 by Acup\n\nA word of warning, I write good stories, I hope, with some decent sex in them. If you're looking for a stroker look somewhere else. \n\nThe disclaimers have been moved to the end of the story for my ADD readers.\n\nThis is the story of a young woman who has been keeping company with a rather pathetic guy who has succeeded in warping her sense of what a 'normal' relationship and sex should be. It's about her finding an average young man and her learning that what she thought she knew really isn't so, then slowly working through to what should be a normal relationship and coming to terms with it. Finally coming to be a lovely woman who doesn't hide her body and eventually begins to enjoy and even revel in being looked at. \n\n___\n\nI thought I heard knocking, but I must be dreaming. Then as I woke I realized I was alone. It had all been a dream. Betty was down the hall and it had all been a fantasy.\n\nBut as I raised my head I grinned, realizing it was real. Betty's dress was still on the floor. And here she came through the connecting door in a robe with, pushing a cart with breakfast.\n\nBetty let her robe gap open showing her nakedness underneath. I looked from her feet to her face taking her in. She sat beside me on the bed letting her robe fall off her shoulder baring that delicious tit, then leaned across me for a kiss, \"Morning.\"\n\nI put a hand on her waist as she did, then brought it up to cup her tit, \"Morning.\"\n\nI'm yours for the taking Hank. Any time, anywhere. I want you, I think I'm falling... NO, I can't be can I? It's only been a week... but I can't stop thinking about him. \n\n\"I tried to let you sleep. I had them deliver breakfast to my door.\"\n\n\"You scared me there, I thought this weekend was a dream and you were in your room down the hall.\"\n\nHank is... he's scared of losing... ME?\n\nBetty looked at me, not saying anything for a few seconds, then leaned forward and gave me another kiss, long and soft. \"If there wasn't hot biscuits and gravy over there I'd jump your bones mister.\" She leaned over for another nice kiss, \"That and we have to check out in a little over an hour,\" Grinning as she stood and dropped her robe walking back to the cart shaking her ass with every step.\n\nI groaned, Betty giggled.\n\nMaybe I am...\n\nNaked breakfast is wonderful, but Betty was in an ornery mood. About half way through the meal she just happened to let a little gravy dribble on her tit... and left it there for a bit until she finally noticed I was staring at her tit and wiped it up and licked it off her finger.\n\nWell most of it, when I finished my meal she came over and sat on my lap putting her nipple in my face. \"Honey, would you mind making sure I got all the gravy?\"\n\nI think Betty was just going to tease a bit, but I put my arm around her and took her nipple and tit into my mouth and enjoyed myself.\n\nI wish we had time to try the blueberry...\n\nBetty was a bit flushed but grinning when I let her up.\n\nWe packed up the last of our stuff, and Betty was setting out her top and jeans, \"Hey babe?\"\n\nOh god, why does it make me quiver when he calls me that?\n\n\"Yeah?\"\n\nI came up behind her and wrapped my arms around her waist pulling her back to my firm cock. \"How difficult would it be for me to get you to wear your other dress for the trip?\"\n\n\"Why?\"\n\n\"You mean beside keeping you as naked and accessible as possible?\" bringing my hands up to cup her tits.\n\nOH GOD YES! Play with me, take me, make me yours!\n\nBetty wiggled her butt against me, \"Yeah, besides that.\"\n\n\"Well, you look absolutely ravishing in it, and I was thinking about wearing my sports coat and we could look good together.\"\n\nBetty reached back between us to grip my cock, \"Does that mean you'll be packing your shorts instead of wearing them?\"\n\nAnd maybe fuck me over a bench a few times? GOD what kind of slut am I turning into?\n\nI kissed her neck, \"I guess I could do that.\"\n\n\"Okay.\"\n\nI like being naked for Hank, the way he devours me with his eyes, not making me cover up like... HIM!\n\nNow we packed, but Betty draped her dress over her suitcase, staying naked even as she helped me with my jacket. It wasn't until we'd made the rounds in both rooms and were ready to leave, that she slipped her dress on.\n\nIn an almost repeat of last night, Betty lifted her dress to sit in the car, and let her strap fall from her shoulder to just above her nipple on my side. Betty was at my side all the way through dropping the car off and checking in at the boarding gate. If I wasn't signing or carrying something, she had her arm in mine pressing that barely covered tit into it, or was pulling mine around her waist. Even occasionally letting her strap drop from her nipple momentarily and blushing and sighing as she let go of my arm to pull it back up.\n\nWhile we were waiting for the plane Betty turned a bit and leaned back against me, the arm rest pulling my arm up under her tits and making her dress billow open a bit to let me look. After a bit she actually turned sideways in her seat putting her knees over the next arm rest to cuddle against me, letting her dress come waaay up her thighs and making no effort to cover up. If she hadn't turned to the seatback a bit, anybody walking by would have been able to look up her dress.\n\nMmmmmm, Hank pushing my boobs up, letting him look down my dress, a little more movement and he might even get a glimpse of my puss... IN THE DAYLIGHT!\n\n\"Do I need to pull my dress down?\" Betty asked quietly against my chest.\n\n\"Not for me you don't.\" I whispered back to her.\n\nI could almost hear her smile, \"Good, I like the way you look at me.\"\n\n\"Mmmm, but you're giving the guy at the magazine rack a complex.\"\n\n\"Am I?\"\n\n\"Yeah, he's trying to find the right place to look up your dress. You move much and he's going to lose it.\"\n\n\"Should I?\"\n\nCOULD I?\n\n\"If you want.\"\n\n\"You don't mind?\"\n\n\"Who are you going home with?\"\n\nHank's going to let me do it, he's going to let me flash my puss! I can see the guy through my lashes, he is kinda cute. And he looks like he has a decent dick, now that I know what a real one is like! And if I, oh fuck I can feel the sun on my puss! That guy is staring right at me, he's looking right between my legs seeing my dribbling puss. How far do I need to move my leg before I open for him to look in me? \n\n\"Mmmmm.\" Betty spread her knees enough to reach down and scratch at the inside of her thigh. The guy went wide eyed and grunted. Betty scratched a bit more then let her hand fall to her mound kinda tucking her dress in her crotch since it had now fallen to almost her hip.\n\nI had to stop myself, I almost reached down and diddled myself... almost. \n\nI kissed her forehead, \"Oh you naughty girl, making that poor guy dirty his shorts. And he looked like he hadn't gotten off in months from the grunt when he did.\"\n\nBetty giggled and cuddled in. As it got closer to boarding time for our flight and several others, the lounge was getting full and Betty had to turn and sit up. The guy that sat next to her didn't mind when she didn't pull her dress down much. His girl on the other side of him didn't seem to appreciate it much though.\n\nI can't believe all these guys wanting to look at flat chested little me. I like them looking... but DAMN!\n\nOur boarding was called and we made our way to the plane. For as crowded as the waiting area had been, our plane was relatively empty. But then we had to go to Salt Lake with a two hour layover to get home. Gotta love the business office saving a few pennies.\n\nWe had gotten to our seats when Betty snagged a flight attendant, \"Miss?\"\n\n\"Yes Ma'am?\"\n\n\"Would it be possible to get a couple of pillows and blankets? We work nights and it's past our bedtime.\"\n\nThe attendant grinned, \"I understand completely. We're waiting on two more passengers, and I don't think we have anyone reserved for the back. If you wait until after take off you can move to the back and stretch out.\"\n\n\"That would be wonderful, thank you.\"\n\n\"You're welcome, and I'll let the other attendants know so you're not disturbed.\"\n\nShe also told arriving passengers that we were practically empty so most of them moved to the front to be able to get out quickly, and luckily there weren't any screaming kids.\n\nAs soon as the seat belt sign was off we moved to the back, dropping the window shades in the last eight rows as we went by. Betty pushed me to the window seat and handed me a blanket and pillow while she flipped the arm rests up.\n\nI kicked back and got comfortable, then Betty surprised me by putting her pillow on my lap and lying across the seats. My hand got pulled down under her blanket to her tit, and for some reason her keeping her pillow in place involved her hand under it on my cock. Not a bad way to take a nap.\n\nI'd rather be naked, but Hank's hand on my boob and his dick in my hand is almost as good.\n\nMmmmm, I was dreaming Hank took me in the middle of the aisle, boobs up with my arms and knees hooked on the seat backs spread for him! And he's getting hard. As soon as the attendant disappears I'm going to...\n\nWe woke to the attendant letting us know we were about fifteen minutes from touchdown. As soon as the attendant left Betty dived under my blanket and my zipper was down. How I managed not to scream as she engulfed my cock I'll never know.\n\nBetty was on a mission and I went from firm to rock hard watching the bobbing blanket in front of me. I had to grab the pillow from behind my head and put over my face as Betty sucked me dry, my legs jerking when she had to get the last little bit from me. When I pulled the pillow from my face I saw the attendant a few aisles up grinning at me as she talked to another passenger, and Betty got red faced when she came up to the same sight.\n\nThe attendant came back grinning with a bottle of Sprite, she handed it to me, \"You look like you're a little...dehydrated...thought you could use a little something to drink.\" She winked at Betty and turned to go back up front. There's that lovely shade of red again.\n\nShe knows what I was doing, and she's grinning at me for doing it. Should I lick the dribble of Hanks cum from the corner of my mouth now or wait until she's turned away. Fuck it, oh he tastes sooo good. She's blushing watching me, bet she wishes she was the one with a delicious dick in her mouth! \n\nWe shuffled off the plane, with the attendant grinning and Betty blushing. With the time spent getting off the plane, and what we could expect in pre-boarding, our two hour layover would probably be more like one, or less.\n\nWe wandered a bit hand in hand, and sometimes with Betty clinging to my arm. We stopped at a little food place and grabbed some lunch, and when I went up for some extra napkins I had to stop and stare at Betty. Sitting there next to the window on the stool was the perfect silhouette. Betty in her white gauzy dress with the sun outside.\n\nI finally came out of my stupor and sat down across from her, \"I think that just became my favorite dress.\"\n\n\"I thought you liked the red one the way it clung to me?\"\n\n\"Oh I do, but this one is better.\"\n\n\"Why?\"\n\n\"Because with the light behind you I can see a perfect silhouette of your figure.\"\n\n\"WHAT!\" Betty responded looking down at her dress, \"Uh uhhh.\"\n\nI smiled back at her, \"Oh most definitely. Walking back here I could see the outline of your delicious nipples. And I bet if you stood with your back to the window I could see the outline of your pussy sooooo nicely.\"\n\nBetty pulled the top of her dress open a bit and looked down and sideways, \"You can't see through it.\"\n\n\"No, not through it. a nice sharp outline, like shadow puppets. Every delicious detail outlined but not actually visible.\"\n\nFUCK FUCK FUCK FUCK!!\n\n\"Oh, well, Ummm, should I... I mean... is that okay?\" Betty looked a bit worried.\n\nI wanted to shake my head and then go kill Zack again, \"Betty, did your suit yesterday bother me?\"\n\nBetty grinned, \"More like hot and bothered.\"\n\n\"So why would a dress that only shows your lovely outline bother me?\"\n\n\"So you don't mind me wearing this more often?\"\n\n\"Well, I don't but I don't think you'll be able to wear it to work, do you?\"\n\nBetty grinned, \"Well, not and keep my job.\"\n\nBut that would be almost as good as being a feather girl, I keep thinking about that, walking around amongst all those people in a bra and thong clinging to my puss. With that much skin they might not even notice my small boobs... but here's all these people seeing me and yet not seeing me, the outline of my little boobs. Could they see the outline of my puss, could they tell I'm dripping for wanting Hank? \n\nI chuckled at that, \"No, and there will be times when we have to dress as others say we should and not like we would want to. But when it's appropriate, and maybe even when it's not but you can get away with it, I have no problem in showing you off.\"\n\nBetty snickered, \"You mean like wearing a thin bra and top and sweating enough to make them see through.\"\n\nI chuckled at that, \"Or like going on a water ride in only a white t-shirt and shorts.\"\n\nOh fuck, out in the water in wet clothes, or maybe even in that little white sheer when wet bikini... With others around looking at me again!\n\n\"Damn, now I wish we had a room to go back to.\"\n\n\"Yeah, you'll just have to imagine me putting my head up your dress and licking you until you scream.\"\n\nStanding here in the middle of all these people with Hank licking my puss until I scream his name as I cum all over his face! I'm CUMMMMMMMMING!\n\nBetty's eyes flashed and then she gripped the edge of the table and clamped her eyes shut, \"Damn Hank, now I'm going to leave a wet spot on my dress.\"\n\nI made like I was licking her, \"And?\"\n\n\"Accchhhhhh!\"\n\nWe finished our sandwiches and began walking around some more to let her dress dry a little, but Betty wanted to go walking and I was in the mood to sit a bit, and it was getting close enough to boarding to get some seats close to the gate. So we divided our efforts, I sat and babysat our chairs while Betty had her retail therapy.\n\nI had only been there about fifteen minutes when I got a text from Betty, 'WHEN I GET THERE BE GLAD TO SEE ME, GRAB MY ASS AND PICK ME UP AND TWIRL ME AROUND.'\n\nOkay, something's up. I was watching for Betty, and she came around the corner with three guys following her... I'm not the only one that likes her thin dress.\n\nWhen she got close I stood up, \"Well there you are!\"\n\nBetty skipped the last steps and almost jumped into my arms, I grabbed her ass as she wrapped her arms around my neck and kissed me like she hadn't seen me in years while I spun her. The reflection in the glass showed she lifted her foot, and my swirling her around was letting a LOT of leg show.\n\nBetty broke the kiss and whispered 'thanks'.\n\n\"Want to moon them?\"\n\nBetty snorted, \"Hell yes.\"\n\n\"Slide down.\"\n\nI let Betty slide down, but held her dress, momentarily letting it ride up her ass before letting go, and then putting my hands on her side, my thumbs resting on the outside of her tits.\n\nCan I jump back up and slide down on your dick? \n\nThe three amigos following her were bug eyed like they had just been kicked in the nuts. The babe they had been chasing was with someone, and he flashed her bare ass at them with no response from her. I could just hear it echoing in their minds, 'FUUUUCK!'\n\n\"You know I'm going to have to take you to the doctor when we get home,\" I said a bit loud. \"You went shopping and didn't come back with a single bag.\"\n\nBetty giggled and kissed me. The guy to one side enjoyed the partial moon and chuckled at the comment. His wife next to him with four overflowing bags in front of her didn't seem to appreciate either one.\n\nOH WOW! The guy across from us is checking me out, while he's got this big boobed babe next to him. I mean look at those monsters, they have to be DD's at least. Kinda hard to tell in that lacy top, but they're huge. And he's checking ME out!.\n\nWe sat and cuddled and hugged, much to the chagrin of said woman. Her man just enjoyed Betty's lovely legs.\n\nWe had a nice surprise during boarding, we got bumped to first class! A decent drink and more than one bag of peanuts! Betty took the window seat, I objected strenuously to seeing her outline in her dress... and we had to settle for just cuddling and groping instead of a nice blow job... that really sucks you know? I grinned and chuckled, or didn't actually.\n\nThe flight was fun, we talked 'what if?'\n\nI brought her hand to my lips, \"So Betty, where do you want to go from here, us I mean?\"\n\n\"Besides going home with you?\"\n\nI grinned, \"That is a wonderful thought, but you have someone at home waiting on you.\"\n\nFUCK ZACK! He's not waiting on me, he had me waiting on him... NO MORE!\n\nBetty stiffened, then relaxed. \"He may be waiting, but the woman coming home is not the one that left.\"\n\n\"But you still have an apartment full of your things, you have obligations there. I'm pretty sure the girls wouldn't object to you staying over a bit, but are you sure we can make it together?\"\n\nBetty sat up quick and turned to me wide eyed, \"You don't...\"\n\nI put a finger to her lips, \"I do like you... a lot. But we've just been thrown together for the last week.\" Betty started to say something, but I continued. \"Yes we've known each other for several years, but at work, not socially, and certainly not intimately.\"\n\n\"So what are you saying...\"\n\n\"I'm saying that we need to take it slow. I mean you could snore like a grizzly bear,\" Betty giggled. \"Or I could be a serial killer.\"\n\nThat made her chuckle, \"I could believe that,\" my turn to look surprised. \"Well, there was a few times I thought I'd died and went to heaven...\" she couldn't hold it in and had to laugh at her own joke.\n\n\"I'm serious Betty. I want this to work... for the long term. We need to take it slow.\" Betty ran her hand up my thigh, \"Well not toooo slow anyway.\" I leaned over and gave her a nice kiss.\n\n\"So what are we doing this afternoon?\"\n\n\"I'm going to try and get some sleep. I have to work tonight, my weekend is Sunday Monday.\"\n\n\"Oh, I didn't realize, mine is Monday Tuesday.\"\n\nBut I could come home with you and curl up for a few years...\n\n\"See, there we go, having our first disagreement.\"\n\nBetty gasped, grinned, and swatted at me.\n\nIn reality I probably was going to need a lot of caffeine tonight. The nap on the first flight was okay, but there was a good chance Tarra and Ebi were going to be home when I got there and you can't sleep when there are two hot babes getting it on in the next room.\n\nBetty wasn't happy about it, but eventually she agreed to wait until Thursday afternoon before we had a 'date'.\n\nSo Hank was taking me out before we went to work Thursday. I tried to get him to let me come over and cook something. Maybe even give me a good fucking before we went in. I think he knew that so we were going out, not eating in. But I could be his dessert... I better pack extra panties in my purse, maybe even a pad or two... \n\nThat was after our second disagreement. We both worked nights, but I slept when I got home and was up in the afternoon while the girls romped. Betty on the other hand stayed up in the morning and slept afternoons and evenings using an ALARM CLOCK to make it into work, UGH!",
        "Since Betty was a newbie to outside work, she had rode to the airport with a friend and now needed a ride home, and she just had to pull her dress up around her waist again...\n\nI dropped her off with a nice kiss and a parting squeeze of her lovely ass.\n\nOh I wish Hank had lifted my dress and squeezed my ass out here in front of everyone, claiming me for his own! The feeling of his fingers snaking between my cheeks...\n\nI wonder if Hank will notice the wet spot I left on his seat. It's his own fault wanting me to show off my body. The breeze and sunlight on my puss while he was driving me home had me SOOOO wet.\n\nI was on cloud nine walking back up to the apartment, the heavy suitcase not bothering me at all.\n\nI stepped in the door, and something was wrong. I came around the corner... and there were dirty dishes in the sink.\n\nZack has been home, and he's not supposed to be back for a few weeks. SHIT!\n\nI turned to the bedroom.\n\n\"About time you got home, where's the...WHAT THE FUCK ARE YOU WEARING! YOU'VE BEEN OUT IN PUBLIC LIKE THAT! BEEN RUNNING UP AND DOWN THE BOULEVARD IN THAT?\"\n\n\"Zack... I just got back from...\"\n\n\"FROM WHAT, THE LOCAL SLUT CONVENTION? HOW DARE YOU INSULT ME LIKE THIS?\"\n\nZack pulled his hand back and took a swing at me. I tried to duck it, but he was too fast and he caught me on the jaw knocking me to the floor.\n\nNO NO NO, this wasn't happening. I was back in the nightmare. I needed to get back to...\n\nI managed to get to my hands and knees, then launched for the bathroom. I lay on the floor with my foot on the door while Zack pounded on the other side.\n\n\"I'M CALLING FOR HELP, GET OUT YOU LAZY MOTHER FUCKER!\"\n\n\"THIS ISN'T OVER BITCH, YOU'LL PAY FOR DISRESPECTING ME!\n\n\"YEAH, THAT AND YOUR LITTLE PENCIL DICK HAVE ME REALLY WORRIED.\"\n\nZack just kept on pounding on the door, I did the only thing I could think of. I flipped my phone open and dialed. \"Hank... help.\"\n\nZack made another run at the door and I had to drop the phone and push against the wall to keep him from getting the door open. He was pounding and yelling, then there were other voices and then he was gone. At least I hoped he was. I stayed there braced against the door... \n\nI pulled into the parking lot and practically skipped up the stairs. I was dropping my suitcase and waving to Tarra and Ebi in their robes when my phone rang. It was Betty, she couldn't wait to talk to me again!\n\nI was grinning as I put it to my ear, and then the world crashed, \"Hank...help.\"\n\nI spun and ran for the truck. Burning rubber getting out on the road, and going as fast I dared, pushing all the stop lights, it's amazing I didn't get pulled over. I skidded to a stop and didn't pause at the cop at the door trying to stop me.\n\nI came through the open door, \"BETTY!\"\n\n\"HANK!\" she was coming up off the couch beside a cop. I just held out my arms to hold her. She was trembling and crying.\n\nI'm never leaving him, I'm never leaving him. \n\nBetty gave the cop the rest of her statement, never letting go of my arm. When they were done it was time to get her out of there.\n\n\"Get a few outfits for work and anything else you need for a week or so, you're coming home with me.\"\n\nBetty trembled and then slumped against me, \"okay...\"\n\nAfter all that he still wants me...\n\nI followed her to her room and waded through the mess, a stark contrast to the pristine condition of the rest of the apartment. I grabbed some hangers of things from the closet while she put a few things in a bag and turned to me. We grabbed her suitcase from the living room and went back to my place.\n\nI drove, and Betty clamped her hand in mine making me wish for my old truck with the bench seats. I looked over at her face, the welt starting to show where he hit her. WHERE HE FUCKING HIT HER!\n\nI was about to boil over, and then a calm came over me. I would be there for Betty, I would do what it took. But no matter how it turned out between us, HE WAS GOING TO PAY!\n\nI was hoping Tarra and Ebi would be okay with Betty staying for a few days. I needn't have worried. They were waiting there, my foxy roommates in silky robes and skimpy lace bras and panties. Blond Tarra in black, and ebony Ebi in white, the classic ying and yang taken to new erotic heights, my sudden departure interrupting their getting ready to ravish each other. One look at Betty and they both turned into mother hens, any sense of modesty in holding their robes closed was GONE!\n\nI left Betty in good hands and went back to the truck for her things. Hanging her outfits on the back of my door, putting a few things that looked clean on top of my dresser, taking the things I knew were dirty and starting a load of wash. And yes grinning and getting a bit of a hard on with those two oily skimpy bikinis in my hand.\n\nI came back out and the girls got quiet. I sat beside Betty and took her face in my hand, she winced when I touched her jaw, making me cringe. I dropped my hand, but Betty caught it. I pulled her close and ever so lightly kissed her for fear of hurting her more.\n\nIt wasn't you, it was HIM!\n\nBetty pulled me close and kissed me hard as I slid my arms around her. I pulled back and looked her in the eye, \"He will never lay a finger on you again.\"\n\nHer gaze never faltered, \"I know.\"\n\nThat was followed by an, \"Awwwww,\" from our audience. Betty gasped, the girls giggled, Betty joined the giggling.\n\nWe sat for a bit on the couch hashing things out, Betty under my arm with her feet tucked up under her, the girls across from us in the chairs. I made a quick call to the Casino to tell them I wouldn't be in tonight, and found out the Samuel had let them know about my change in travel arrangements and I actually already had the night off. Thank you Samuel!\n\nShortly the adrenalin was wearing off and Betty was feeling a bit sore. I was going to take Betty to my room and then the shower, but mother hens Tarra and Ebi took over and I was relegated to the couch, kicked out of my own room.\n\nOh this is different! Tarra and Ebi undressing me. These two hot babes and they're checking me out. I mean I know they're into girls, but little old me... I can feel them running their fingers over me as they undress me, making me tingle, seeing Ebi's dark fingers on my pink boobs as she pushes my dress off. I turned to Tarra and I looked back quick, I thought I felt fingers under my boobs. Did Ebi just feel my boobs?\n\nTarra pushed me to the shower as Ebi disappeared. I've showered with the girls back in school, but not with girls. And Tarra was being so nice and gentle lathering and shampooing me, making sure I really was okay and not putting on a front for Hank. I think I even felt her nipples in my back as she soaped my butt, God I wish I had boobs like hers. How would they feel? I know the guys like to watch boobs bounce. But mine barely jiggle!  And her nipples are sooo perky. Just standing out waiting to be noticed and played with.\n\nTarra's watching me as she lathers me up, like I'm hot or something. Feeling her hands on me, on my back and up my sides catching the edges of my boobs. Oh, now this is just too much, I could swear I felt her nipples and puss on my arm and thigh when she turned me. Doing my legs while she's eye level with my puss. Did I feel her fingers on my lips? She's into girls, but compared to Ebi I'm just... me. \n\nI took the soap from her to do her, but she stopped me. \"I already had a shower, this is just for you.\" She leaned forward like she was going to... but then grinned and stepped out handing me a towel and helping me dry off with a second one. Her lips look so delicious... Did her nipples touch mine? God I wish I had a body like hers! \n\nA few minutes later Ebi plopped back down beside me, oblivious to letting her chest bounce in front of me, \"So what's with you two?\"\n\n\"We work together.\"\n\n\"Uh uh, that was no 'we work together' kiss.\"\n\n\"Well we found out a few things the other day. Betty thought you two were my girlfriends,\" that made her snort. \"And I found out what an asshole her boyfriend was, and now I REALLY know what kind of asshole he is.\"\n\n\"Soooo?\"\n\n\"Well we were going to take it slow. Now I don't know what I'm going to do. She can't go back there...\"\n\n\"You're not going to kick her out are you!\" Ebi responded with hands on hips.\n\n\"No, but I haven't had a chance to talk to you guys about her, and maybe staying here for a bit... and...\"\n\n\"And?\"\n\n\"And I need to find a way to take him down without it coming back on Betty. He's screwed with her mind enough as it is.\" I wasn't EVEN going to elaborate on what he'd made her think about sex!\n\nEbi smiled and gave me 'the look', that mysterious female look... you know the one. \"Betty said she didn't want to file charges. She's afraid he'll come after her.\"\n\n\"I figured as much, just do me a favor. She'll open up to you two more than me. Keep your eyes and ears open for some kind of leverage.\"\n\nWe were going to talk more, but Betty and Tarra made a reappearance wrapped in robes. Quite the change for Tarra, not flaunting her body in the apartment to taunt me. Betty scooted me over on the couch and laid her head on my lap like this afternoon, minus the hand under the pillow groping my cock.\n\nI put my hand on her waist, enjoying the feel of one of Ebi's white silk robes under my hand and a nice view of Betty's tit through the gap, but Betty had other ideas. She took my hand from her waist and brought it up and around to cup her tit, putting her hand over mine and sighing with eyes closed as I gripped her softly.\n\nThis is where I belong... \n\nTarra's eyes went wide, and Ebi mouthed 'Later.' That got her a 'this better be good!' look.\n\nOver the next hour or so we came up with a game plan. Betty reluctantly told them some of the basics of Zack and his band. Tarra jumped up and looked it up on the web. We had three weeks before he was scheduled to be home again, it turned out the county fair he was supposed to be playing this weekend was rained out. Just our luck they were close enough to make a trip home.\n\nCan't we just forget about him. \n\nSo Betty and I were going to do our best to sleep in in the morning, and stop at her place after picking up some boxes. We would pack some things to bring here and decide on what to do with all her stuff.\n\nThat's when Tarra and Ebi came unglued. It was Zacks' apartment, but Betty was paying all the bills so he could spend his money on 'the band'. After a bit they managed to drag out of her that she paid for most of the things in there, and since they weren't married and she wasn't on the lease. He could lay claim to all her things and she couldn't do anything about it.\n\nPlans changed suddenly. Tomorrow was a planning day, getting a storage room and reserving a trailer for Wednesday.\n\nWith all that said, Tarra couldn't take it any more. \"Okay you two, fess up about this trip. What happened?\"\n\nI found my prince, that's what happened! The one I didn't know I needed. \n\nBetty smiled and turned on her back, the robe gaping open and not covering her pussy. She also took my hand and put it inside the robe directly on her tit. That started the narrative of our whirlwind week.\n\nThe two days of the sweat box and Betty teasing me with her thin tops, the working with me to train her on the machines, the finding of the problem with the quarter slots and me unknowingly having the regional director running as our errand boy. That made Tarra and Ebi gasp. The commendation letters and the evening at the restaurant, the skimpy bikinis and the revelation about my roommates out at the pool.\n\nSomehow all the great sex and Betty flashing her body on the way home was missed, simply described as 'we got together'. I can imagine it would be questioned in detail when I was not around.\n\nYou girls have no idea what you're missing out on. A guy like Hank wanting you, just for being you. \n\nIt was getting late and the girls went off to bed, leaving us to ourselves. We sat there in silence, enjoying the peace and quiet after today. Well actually I sat with my hand still cupping Betty's tit while she lay back with the robe completely open. I thought back and snorted.\n\n\"What?\" Betty asked.\n\n\"So much for taking things slow.\"\n\n\"Sorry.\"\n\n\"I'm not. I kinda like having you here, I just didn't want you to be pressured into anything.\"\n\n\"You sure? It's going to be weird for a while, and who knows what Zack will do, he's not a guy to tangle with.\"\n\n\"Neither am I when I'm protecting my girl. He's just a pencil dick who can't face up to his problems. When I get done with him he'll wish he'd never laid a hand on you.\"\n\nDON'T! I CAN'T LOOSE YOU NOW! Wait... did he call me his girl?\n\nEvidently I said that with a bit more force than intended. Betty was looking up at me a bit wide eyed. \"Don't do anything that will get you in trouble, he's got a lot of bad friends too.\"\n\nI looked down at her and smiled, then brought her hand to my lips, kissing first her palm then her wrist. \"If he's the genius I think he is, he'll do all the work. I just have to give him plenty of rope to hang himself.\" I sighed, \"And I meant what I said, he'll never lay a hand on you again. For the next few weeks you're going to disappear. You'll be at work, but you'll ride with me to and from. Your car will be elsewhere, you'll have a new phone number, and you'll stay here. Only those that need to know where you are will, nobody else.\"\n\nI had to grin, \"Of course that means you might have to lay low coming and going to work, laid across the seat with your head in my lap.\"\n\n\"Oh I can see this is going to be pure torture for you now isn't it?\"\n\nI dropped my hand on her tit a little to be able to run my thumb over her nipple, \"Yeah, pure torture.\"\n\n\"Hank, take me to bed,\" she said flopping her robe completely open, not even letting it cover what little bit of her thighs it had.\n\n\"I think that could be arranged.\" I lifted her up and carried her to bed kissing her all the way. I sat her down and kissed her nose. \"Be back in a few minutes, I still need a shower.\"\n\nI undressed with Betty making it difficult, lying there spread eagle, tasty pink nipples just calling to my lips, her shaved pussy needing attention from the way it sounded with her finger running between her lips. Betty giggling when I forgot to take my shoes off before dropping my pants.\n\n Would Hank carry me over the threshold like that? Would he be that anxious on our... no don't jinx it! I'm with him. Everything smells like HIM! \n\nI didn't exactly dally in the shower, but came out to find her asleep, curled up on her side strangling my pillow. I grabbed one from the couch and curled up behind her, hearing her sigh just a little and snuggle back into me, never waking up.\n\n___\n\nI vaguely remember Betty getting up a couple of times, but she came back and we curled up. Her against my chest since I took my pillow back somewhere along the way. I did wake to one of the best feelings ever know to man, lips on my hard cock!\n\nHank looks like a little boy lying out like that, hair all rumpled. Mmmm but little boys don't have chest hair like that, and little boys  definitely don't have something as wonderful as this! \n\nBetty had pushed the covers down and was lying sideways on the bed, stroking my cock and licking the head, her knee kicked up putting her whole body on display. \"I'll give you a couple hundred years to quit.\"\n\nBetty looked up at me pouting, \"You sure? I mean here I was going to hop up there and ride that thing, but if I have to go at this for a hundred years or so...\"\n\n\"You little minx, get up here.\"\n\nBetty turned and slid up my body dragging her nipples along my cock and then through my chest hair grinning, \"I thought you'd never ask.\" She slid up a bit more and used the tip of my cock against her clit, rocking back and forth a bit, then in one of those mysterious female moves she pulled above me, rotated her hips, then rotated back and sunk down on me without reaching down to put me in her.\n\n\"Mmmmmmmm,\" I moaned as she sunk down on me. \"I LOVE self feeding pussy.\" I reached up and brushed a strand of hair back behind her ear. I almost cupped her jaw but caught myself before I hurt her... FUCKING ZACK! It wasn't swollen much, but the bruise was beginning to show. Thank god she didn't get a black eye from it. I did drop my hand to her neck and pulled her close for a kiss.\n\nFill me Hank, fill me until I can't hold any more of your sweet cum and then fill me some more. \n\nBetty just lay on me, rotating her hips back and forth, her silky pussy doing wonders for my cock. We lay there a bit with Betty enjoying herself, and I was in no hurry. But Betty seemed to be, she was picking up her pace, breathing harder.\n\n\"You know if you cum too quick you're going to have to sit on my face so I can clean you out.\"\n\nBetty's eyes went wide and her pussy clenched, \"Oh that's not fairrrrrrrr.\"\n\nBetty drove down on me and started cumming, her spasming body on mine, her pussy almost self fucking with her spasms. And my reaching around and squeezing her ass didn't hurt either... LOL\n\nBetty lay on me a bit catching her breath, then whispered in my ear. \"I can't sit up to sit on you.\"\n\nI thrust my cock into her, \"So that means I get to have lunch at the Y.\"\n\nBetty groaned, \"You did NOT just say that.\"\n\nI rolled us over and lifted off of Betty making her hiss.\n\nI grabbed her hips and turned her to hang her legs off the edge of the bed. \"I not only said it,\" I lifted her legs. \"I'm going to do it!\" and dived into her flowing pussy. \n\nYES YES YES OH FUCK YESSSSSSSSSS! \n\nBetty screeched, but those screeches turned into a different screech as she came for me again. Surge after surge of her juices flowing into my mouth. My finger teasing her ass, keeping her going. And the best part was being able to sit on the floor and enjoy my breakfast, no crick in my neck to stop me.\n\nI'm afraid I was greedy, I sat there and licked and nibbled and lapped at her nectar. Enjoying every sweet drop given to me, reducing Betty to a trembling woman. And even then as I sat back looking at one of the most lovely sights known to man, a juicy pussy with DARK inner lips. I had to lean back in and take another lick, and maybe one more.\n\n I'm exhausted from cumming from Hank eating my puss, and all I can think about is when he'll do it again. \n\nI got Betty a cold bottle of water, making her screech when I let the condensation drip on her nipple. Betty drank, she scowled, but she drank. I got her in the shower and softly soaped her down and shampooed her hair, \"You're not out of the woods yet mister!\"\n\n\"What? You didn't seem to mind dripping it on me down working in the casino.\"\n\nHer mouth opened, closed, \"But that was different.\"\n\nI kissed her nose, \"Is that because it was you doing the dripping and not me?\"\n\nShe didn't answer, merely grinned, Ah ha! Female logic.\n\nWe got dressed and headed for her apartment, no bra, no panties... and no boxers.\n\nJust to be safe I had Betty sink down as I pulled in and went up to check it out before she came in. No signs of pencil dick so she came up. We started going through things, and we were going through the bedroom when Betty dropped on the floor crying.\n\nI was going to walk away from all of this, but the girls talked me into coming back, and I would have hated to lose grandmas china cabinet. That and my good...NOOOOO! \n\nI sunk beside her until she settled down. She wouldn't tell me what was wrong, merely pointed to the bed. I looked over and realized what she saw, the remains of a large wet spot in the middle of the comforter. I know it was a bit hypocritical, but jumping whoever's bones in their bed was a bit much.\n\nI managed to get her standing and out to the living room. She settled down and we sat and went over what she was taking. Besides all the little stuff to be boxed, there was all the kitchen things, table and chairs, living room furniture, and the miscellaneous stuff. It would be a couple decent trailer loads but not bad.",
        "Betty grabbed a few more things from the bathroom to take back to the apartment. We stopped for a nice bite of dinner then went home to get ready for work. Betty was getting ready, and felt she had to put a bra and thong on, but snickered when she held up what I had grabbed for work clothes.\n\nMEN! \n\n\"What?\"\n\n\"Of all my outfits, not what I would have expected you to grab,\" holding up one of her tan pants suits and a top and long skirt.\n\n\"Why?\"\n\n\"No short skirt?\" she asked with a raised eyebrow.\n\n\"Well you look wonderful in those...\"\n\n\"And?\"\n\n\"And what?\"\n\n\"And why these two?\"\n\n\"Honestly?\"\n\nBetty nodded.\n\n\"Well I can see your panty lines in that one,\" pointing to the pants suit, \"and your butt loves that skirt,\" pointing to the long skirt outfit.\n\n\"WHAT! No way.\"\n\nI smiled and closed my eyes, \"Mmmmm, watching you walk away in that pant suit, the line of your boy shorts, or no line at all. I knew you were probably wearing a thong, but in my mind you were commando.\"\n\nI did a few times. GRIN \n\n\"And the skirt?\"\n\nI chuckled, \"You butt loves that skirt. It wouldn't let go for at least six or seven steps after you pulled a reserve bag.\"\n\n\"AND YOU NEVER SAID ANYTHING?!\"\n\n\"Betty, stop and think. What would your reaction be? 'Ma'am, I've been staring at your ass all night and I love the outline of your panties.' or 'Ma'am, your ass loves that skirt, would you like me to reach back and pull it out?'.\"\n\nI might have at that... \n\nBetty snorted and put the skirt outfit back on the door and took the pants suit outfit off the hanger, \"You look at women's butts too much.\"\n\n\"Only yours babe, only yours,\" well mostly.\n\nI hope so, god he's making me wet AGAIN! \n\nBetty looked at me for a bit as I put my shirt on before resuming her own outfit, slipping her silky top on and flashing her lace covered tit before buttoning up completely.\n\n\"You know there is one problem with your pant suit now?\" I came up to her and cupped her mound, \"Now that I know I can get away with this if there are no cameras around,\" and kissed her lips softly, \"I can't slip a finger between your wet lips.\"\n\nBetty put her hand on mine holding it tight to her own mound and squeezing her thighs around our hands, \"That sounds more like a perk than a problem,\" then kissed me again.\n\nWe finished getting dressed and headed out for work, making a quick stop at her place to get her credentials from her car.\n\nIn some ways work was a bit of a let down, just a 'normal' evening. That is for Betty, my night was a chain of impromptu meetings. The first and most important was with a tech who had Monday Tuesday off, to ask if he was interested in trading days off. He was thrilled to have a weekend day with his kids and asked why.\n\n\"Adam, don't ask. It's to accommodate someone with family problems, not something to advertise. If anyone asks it was from something that happened while I was down south.\"\n\n\"Bad?\"\n\n\"It almost was, trying to keep it from.\"\n\n\"But serious enough to give up your Sunday?\"\n\n\"Very.\"\n\n\"Sure thing, and tell whoever, good luck.\" holding his hand out.\n\n\"I appreciate it, I'm headed to talk with Thomas in the morning. I wanted to clear it with you first, so act surprised.\"\n\nHe chuckled, \"will do.\"\n\nThe next meeting was with Stewart, well kind of a meeting. I was able to catch Adam up on the smokers' deck and faced away from the cameras, but Stewart was on the floor.\n\nI found him piddling with a dollar slot... in front of a lovely lady in her party dress. And her crotch had his attention through the glass.\n\nI leaned over and spoke softly, \"Don't let your wife catch you at that.\"\n\nHe jumped and then muttered at me, \"Asshole. And Sally is on third tonight.\"\n\n\"Keep working,\" and I made like I was pointing to something in the machine. \"I need to have an off camera conversation.\" I looked through the glass, \"Damn, commando!\"\n\nHe chuckled, \"So is her girlfriend next to her, and they both are too drunk to care.\"\n\nHe stuck his screwdriver under the hopper and made like he was working while we enjoyed the view and talked.\n\n\"You sleep mornings or afternoons?\"\n\n\"Mornings while the kids are in school, why?\"\n\n\"I need a hand moving some furniture down the stairs and into a trailer for someone getting out of a bad situation, no questions asked.\"\n\n\"I don't kno... OH MAN!\" he hissed through his teeth. Her red head friend decided to slip forward and let her shaved pussy show completely... from our angle anyway.\n\nI had to chuckle at Sally doing the exact same thing to him many times and her grinning at him coming after her after work when he'd had such lovely visions on the floor. \"I'd threaten you with blackmail, but this is for Betty.\"\n\nHis head snapped around, \"Betty? Is she okay?\" looking across the floor to see if he could see her.\n\n\"She's safe now, only minor bumps and bruises.\"\n\n\"Is the asshole dead?\"\n\nI chuckled, \"No, he's not getting off that easy.\"\n\nThat made Stewart grin, \"Text me the address, I'll call you when I'm on my way.\"\n\n\"Sure thing. It shouldn't take long, just a couple of couches and a china cabinet, the rest I can get myself. And this is just between us, don't even say anything to Betty, she's in a bad place as it is.\"\n\n\"I understand,\" and he did. Sally came from a bad relationship, he understood all too well and that's why I asked him. We stayed there a bit enjoying the two drunk lesbians teasing each other and then put the machine back in service. I had to grin as she ran her fingers through her girlfriends pussy for a quick taste. I was wanting to find Betty and do the same to her.\n\nThe last meeting of the night was a bit strange, talking to a highway patrol officer about how to snag an asshole is not the most comfortable subject. A couple of theoretical questions quickly changed to an interesting history of all the different abuse cases he'd worked and what tripped the assholes up. I had some ideas, but nothing came to mind right off.\n\nWe stuck around a bit in the morning, and a quick meeting with Thomas about changing my days off and we headed home. Surprisingly he didn't ask why, just an \"Are you sure? You can't switch back if you change your mind.\"\n\nWe left the casino, Betty grinning beside me holding my hand. I asked \"Want to stop at Denny's for some breakfast before I take you home and ravage you?\"\n\n\"I could make some eggs and bacon when we get home.\"\n\nI grinned at her, \"Maybe tomorrow, but right now my fridge is a bit bare.\" a cloud came over her face and I realized what I had said. \"Sorry, I didn't think about that.\"\n\n\"I know,\" she said softly.\n\n\"I do have some cereal though.\"\n\nBetty made a face, \"Cold cereal?\" I nodded smiling. \"No way...\" and rolled her eyes.\n\nSo Denny's it was. And I got to listen to all the things Betty would have done better. But the best part was Betty... smiling. Something I hadn't seen since I dropped her off Monday. The way her face lit up when she grinned...\n\n\"Have you heard a word I said?\"\n\nI grinned, \"Probably not, it's past my bed time. Want to tuck me in?\"\n\n\"Aren't we going to my old apartment?\"\n\n\"This afternoon, when the girls are home and I have help with your couch and stuff.\"\n\n\"Who?\" Betty asked all guarded again.\n\nHelp? WHO!! \n\n\"Just Stewart, and he won't say anything.\"\n\nShe was relieved, and understood why I had asked him. He would tell Sally of course, but it would never pass beyond them unless Betty said so. So with a warm meal in her, a warm and not too frisky shower, a dark room, clean sheets, and a warm body to snuggle with we settled in for the 'night'.\n\nI know Betty got up a few times since I'm a light sleeper, but she finally came to bed for a while. It was nice to have her snuggled under my arm.\n\n___\n\n\"YES... YES... YES... YESSSSSS\" I heard, the familiar sounds of my two alarm clocks going off, or more precisely getting off.\n\n\"What the fuck?\" Betty asked from beside me.\n\n\"Correct. That is Terra and Ebi, and that's why I sleep mornings before they get home. Ebi gets horny from flirting with the girls and all the guys staring at her chest. On a good day they make it to the bedroom before she drags Tarra to the floor, today is not a good day. Or maybe it is from the way she's screaming.\"\n\nBetty snorted, then giggled, \"That's what she meant.\"\n\n\"What who meant?\"\n\n\"Tarra, she said not to worry if we made too much noise, it wouldn't be noticed.\"\n\nI pulled her close with the arm under her neck, groped her tit and kissed her, \"Want to try and outdo them?\"\n\nEven in the low light I saw Betty blush, \"NOOOO!\"\n\nIf she thought that was bad, the look on her face when we went out to the kitchen for our lunch was priceless. You see, Tarra and Ebi didn't really care if they had clothes on while they were home, and truth be told I think they took great pleasure in teasing me. Betty halted for a second seeing them naked, with Tarra's face and Ebi's thighs wet with her juices.\n\nThe girls took sheer delight in gigging Betty when they could. After a while it was a girls cackle fest around the table, and I was totally forgotten. But Betty was in a good mood so I didn't care.\n\nAfter the requisite gab time, the girls went to their room to clean up and get dressed. Betty and I slipped something on and headed out to pick up the trailer, the girls would meet us there. And it was just soooo hard to keep my attention on the road with Betty in a thin t-shirt and lace bra beside me.\n\nMy other reason for waiting until mid day, was that we had an almost empty parking lot. I had just backed it in when the girls showed up... in their trucks. You see for as much of the airhead bimbo impression they gave, the girls were smart as whips. They were both in their third year of their engineering courses, and 4.0 students to boot.\n\nI first met them at the parts store when they were arguing power bands and gear ratios with a young kid that didn't have the brains to realize he was outsmarted and outclassed by these two braless babes in thin tank tops across his counter. So here they were, Tarra in her bright pink truck, and Ebi in her bright orange with the confederate flag on the roof, and the same horn from 'The Dukes of Hazzard' show.\n\nAnd since the girls were braless Betty grinned, slipped her bra out from under her shirt and tossed it at me. She turned beet red when I hung it from my rearview mirror.\n\nI CAN'T BELIEVE HE DID THAT!! Should I put one of my g-strings up there too?  \n\nWe went through the apartment for a quick run down, and then I was relegated to tapeing and hauling boxes until Stewart arrived, which thankfully was only a half hour later. I left the girls to their packing and sorting system while we moved the heavy stuff.\n\nI was dreading this, but with Tarra and Ebi here it isn't bad! I haven't really had any 'girl' friends that I would even think about inviting over.\"'Ebi put that down!\" my bras aren't band aids... but they do look like that on her.  \n\nIt wasn't too bad, the couches were just awkward, and the kitchen table came apart. The only fun part was the china cabinet with Betty hovering around as we went. It was her Grandmothers and the way she acted it was fragile china and not the heavy beast it was.\n\nWe loaded some boxes around the furniture and headed for the storage room, thankfully Stewart tagged along to help me unload the beast. We slid the last few pieces off just as the girls were pulling up. Stewart decided to stay and help a bit since Tarra and Ebi were in bimbo mode. I think sometimes they just enjoyed the attention their massive cleavages got.\n\nOH GOD THOSE TWO ARE BAAAD! But if I had boobs like that I'd tease the guys too. Why is Hank grinning at me? \n\nDamn that shirt looks good in the sunlight, almost like her dress and clinging to her chest juuuuust right! With the storage room half full we went back for another load. Betty and I got things loaded in the truck and trailer and said goodbye to the girls, we would meet them back at the apartment later. Tarra also pressed a piece of paper into my hand as she said goodbye. I looked at it when I walked around the truck to climb in. 'Call me later when you are alone.' I crumpled and dropped it before climbing in the truck.\n\nThat's over, I'M DONE WITH ZACK! Even the hugs from Tarra and Ebi were nice, feeling their big boobs and hard nipples pressed into me, and I  think  Ebi was grinding her puss against me when she did the cheek thing. Did her lips touch mine?! She's just taking pity on the flat chested girl, but it was kinda nice... Oh god we've been driving around with my bra hanging from his mirror! Everyone's going to know I'm stripping my bra off for Hank...  \n\nBetty blushed again and took her bra from the mirror but left it spread across the console. We got the boxes unloaded despite the constant need to reach out and touch each other. Dropping the trailer off was next and then back to the apartment to change for work. And once again Betty was in rare form. Getting dressed in one of her short skirt outfits, then pulling the skirt up around her waist to slip her florescent orange thong on... could we both be late for work and it not be noticed?\n\nI keep thinking this is all a dream, I'm going to wake up beside Zack and it will start all over again. But Hank keeps grinning at me, soooo... \n\nI dropped Betty off at the door and parked my truck, it was a nice thing to do for her, and it had the added benefit of us not coming in the door together. As far as the rest of the world knew nothing had changed with her or me.\n\nI walked by her chatting with her co-workers on my way in and just because, I licked my lips smiling at her. Don't know if she blushed or not, I kept right on heading down to the shop to call Tarra.\n\n DON'T DO THAT TO ME HANK! I'm getting wet just thinking about you eating me! \n\n\"Hello.\"\n\n\"Hey Tarra, what's up?\"\n\n\"You said to keep my ears open about the asshole, might have something you can use.\"\n\n\"Let me have it.\"\n\n\"Well I found some unmarked prescription bottles. According to Betty he had a back injury a few years back and had been taking medication for it ever since.\"\n\n\"Okay.\"\n\n\"Hank, he's got a good sized bottle of Oxy in an unmarked bottle. No prescription.\"\n\n\"That might do a little, but I was hoping for something a bit more serious.\"\n\n\"Well, Betty says he takes them with him on the road, has to stash them behind the microwave in a dead space. If it's a four week supply and he's transporting across state lines, it might be enough.\"\n\n\"Thanks Tarra, I'll do some checking on my end.\"\n\n\"No problem, you just take care of that girl, you hear?\"\n\n\"Yes Mom.\"\n\nI chatted with our gaming officer friend later that night, and he agreed with Tarra that if Zack had enough, and if he had transported across state lines, and if the judge wasn't too lenient, and if Zack had any kind of record, and if... And if I won the lottery I'd never have to work a day again in my life.\n\nHe said he could put in a call about an overheard conversation and have the locals check out the bus and Zack. I asked him to have them wait until late Friday or on the weekend, no sense in making things easier for the asshole, and I still had two more things to do for Betty.\n\nWe had moved her things to the storage room, in my name. Tomorrow, well today actually, we would stop off and I would get another phone on my plan for her, and I had a friend of a friend with a service shop. I was hoping he would know where we could stash her car for a while without costing us an arm and a leg.\n\nMy thong is SOAKED. He keeps looking at me and making like he's licking my puss! And now that he said it, I have caught him looking at my ass! FUCK I WISH HE'D JUST COME OVER HERE AND BEND ME OVER, I can't sit down now and not leave a wet spot. \n\nI saw Betty several times at work that night in passing, but not much more. I did enjoy the nice wiggle in her ass as she walked away though. And her smile was still lighting up the room long after she left.\n\nBetty wasn't too sure about a new phone and new number, but I told her for a while at least she needed to disappear. She was even more upset about stashing her car, losing her independence.\n\n\"Betty, you can drive my truck any time you want, but I want to close off your old life for a bit, I don't want that asshole to come back until he's gotten enough rope to hang himself good.\" She seemed to relax at that a bit, \"And besides, then I get to have you next to me as much as possible,\" and kissed her softly. That turned into a much steamier kiss when she wrapped her arms around my neck and her legs around my waist.\n\nTake me Hank! Right here, right now. Hike my skirt up and rip my soaked thong off and take me! \n\nWe drove home with me once again wishing for a bench seat, and with Betty stripping just inside the door I was about to ravage her on the spot.\n\n\"Uh, uh, shower, breakfast, then sex.\" then dropped to her knees and fished my hard cock from my pants. \"But the cook gets a snack first.\" Betty bobbed like a possessed woman, getting me oh so close, \"Okay, time for your shower,\" as she stood up and turned me to the bathroom. FUCK!\n\nI will get him down my throat, I will get him down my throat, I will get him... \n\nWe showered... separately in the same shower, Betty grinning at me watching her lather and soap. I was about to shoot all over the wall. And Betty grinning cooking breakfast in just her apron didn't help much, her chest was covered, but her ass and pussy were visible from behind whenever she bent over the stove. I got a bit of a reprieve when we ate, only because her tits were the only thing visible.\n\nI was starting to gain some sense of control near the end of breakfast when Betty just happened to dribble some jelly from her toast on her tit. I just watched it begin to run down toward her nipple. I groaned and dropped my head to my arms.\n\nI heard the stool slide on the floor, then Betty tipped my head up and pulled me to her tit. Instinct took over and I devoured her tit, licking and sucking every last bit of the jelly from her as I groped her ass and other tit.\n\nI was just really getting into nibbling on her when she pulled away from my mouth, \"And now that you've had your snack, I get mine!\"\n\nBetty dropped to her knees and swallowed me until I hit the back of her mouth, pressing like she wanted to take me down her throat. All I could do was to reach out and grab her head. Betty pulled back and tried again, moaning around my cock as she serviced me.\n\nYES! Grab my head, push me on, take my throat like you should. Oh Hank has such a lovely dick, so wonderful on my tongue, stuffing my mouth and filling me... Look at me Hank, worshiping your delicious dick, licking and sucking and playing. You know you want it, grab my head and shove it in me. I'll learn to take it... \n\nI know she was enjoying herself from the vibrations her moans were making on my cock, and there is just something so animalistic about a woman on her knees worshiping your cock. But the way Betty was going at it, almost made me cum right there. She was bobbing on my cock, pulling back to lick and service the head of it, pulling off completely and licking up and down and around my shaft, all with her arms clasped behind her back.\n\nHer lips and my cock the only connection between us other than my hands on her head, I was watching her tits jiggle on either side of me disappearing between her lips. It was apparent she was enjoying herself as well, her moans became whimpers and her hands were no longer behind her, she had brought one up to cup her tit and pull on her nipple while the other had dropped to her crotch, her wet pussy betraying what her fingers were doing.\n\nGod I can't help myself, I'm such a slut for Hank, my puss is dripping and my nipples ache. Take my throat Hank, fill me... ",
        "Betty's whimpers became louder, and I looked down to see her soft puffy nipples turning to firm raisins and I lost it, I held her head and roared. Betty screamed around my cock and just planted herself on me, egging me on further and further as she took my first few loads right down her throat, pulling up to breathe and then diving back down. Finally pulling back to take my cum in her mouth, sucking every last drop from me until my legs were twitching with sensory overload as I fell back on my elbows on the table.\n\nMINE! Every. Last. Drop. Every bit that he gave me, every little bit I didn't take in, every little bit even on his balls.\n\nI sat there trembling and doing my best not to slide right off the stool to the floor. Betty would not relinquish my cock. She stayed there keeping me between her lips, feeling me soften, then looked up at me smiling as she took my whole soft cock into her mouth and then stuck her tongue out to lick my balls. I failed, I slid from the stool to the floor almost cracking my head on the stool.\n\nI lay there on the cold floor, not having the energy to move, only to breathe. Betty shifted around and lay on me taking my now VERY limp cock in her mouth and straddling my head. I looked up at her engorged dripping lips and wished for the strength to raise my head and lick her. I watched a dollop of her sweat nectar form on her lips, growing and growing, I opened my mouth and caught her sweet gift before passing out...\n\nMmmmmmm, not quite the way it's supposed to be, but my man is well satisfied. He still tried to grab my boob when I got him into bed. I went back to the kitchen to straighten up, and there was my mess. I had left a puddle on the floor when Hank filled my throat. I am his slut...\n\nBetty got me to bed, and I vaguely remember sucking her sweet juices from her fingers, but that is it, I was OUT OF IT. I'm not sure when Betty came to bed, I'm only able to tell you she did because I remember rolling around and cupping her tit when she snuggled back into me. At least I remembered the important stuff.\n\nI don't know if it can get any better than this, but I'm going to try and find out. \n\n___\n\nI wasn't woken to one of the girls screaming in orgasm so it was a good day, but after taking care of my bladder I slipped my boxers on and stumbled to the kitchen and female voices. I walked past the girls gathered around the table to get my bottle of caffeine and sat down to join them. They were all looking at me as I drank my first few gulps of Pepsi, \"What?\"\n\nBetty leaned over and kissed my cheek and groped my soft cock, \"You're overdressed.\"\n\nI looked down at her and realized she wasn't wearing anything, then leaned down further to look under the table, Ebi thought it appropriate to spread her legs and give me a peak of pink pussy between chocolate thighs.\n\nI CAN'T BELIEVE HE DID THAT! \n\nI brought my head up smiling and Betty slapped my head before kissing me again. I had barely recovered when they started in again as if I wasn't even there, like it was just the three girls living there and no guy in sight.\n\nThe girls began going over the apartment, moving and shuffling things helping Betty get settled. New idea, naked women moving company! While Ebi had Betty off in our room distracted, Tarra showed me one of the bottles she had found. She consolidated three bottles into one and put it in a zip lock marked 'Zacks medication'.\n\n\"He could say it's planted.\"\n\n\"Maybe, but I wore gloves to consolidate the pills so it's only his fingerprints on the bottle, and Ebi saw me 'find' the full bottle.\"\n\n\"Okay, I'll ask tonight what we should do with it.\"\n\nTarra hid it back in their room and the girls continued on for the better part of the afternoon. Then they decided we were going out, the girls got dressed up in their 'I'm about to bust out of these' party clothes and Betty in a nice outfit I didn't remember seeing before. A nice yellow top and skirt that wasn't a cling to her legs skirt, letting it flow and move, flipping in the breeze to let her stocking tops show. I threw my work clothes on and grabbed one of my sports jackets to at least look like I belonged.\n\nI CAN'T BELIEVE TARRA TALKED ME INTO WEARING THIS HERE AT HOME. What if someone sees me out like that? What if Hank throws a fit and kicks me out for letting my cleavage and legs show, what if... \n\nNow, walking into a nice restaurant with one beautiful woman is nice, but three is fantastic! And the way they were carrying on you'd have thought all three were chasing me. Only Betty and I knew that they had their hands up each other's dresses and not groping me. Betty was taking care of that all by herself.\n\nHank's still looking at me, he's smiling and not mad. Oh, and this tells me maybe he's okay with my dress. I could always slip under the table and make sure... \n\nA nice meal and a lot of kissing and groping later and we parted ways, the girls off to party and us off to work.\n\nIt was a fairly busy night, and I didn't get a chance to talk with Betty much, but when she did stop by, she brushed against me, or turned to let me see a little further down her dress. Not much, but definitely nice. We took our lunch break together, but were joined by several of her co-workers necessitating our scooting together in the booth. Without thinking about it I put my arm up around behind her and just let things continue. I also took a few nice glimpses down her dress at a nice light yellow bra.\n\nCan you see how much I ache for you Hank, can you tell I want you to rip my dress off and take me? Would he take me the way Alice's boyfriend does her out at the park, out in public?\n\nEventually we had to head back to the floor. I was kneeled down in the middle of working on one of our regular problem child's when Betty came up to me all flushed. \"Hey Hank, have you ever hitchhiked a girl?\"\n\nI stopped and turned to her, looking up at her tits and then her face, \"Have I ever what?\"\n\n\"Have you ever done it that way, hitchhiked a girl?\"\n\n\"I have no idea what you're talking about.\"\n\n\"It's when you... well you... Um, can we meet up where we talked the other night?\" Betty was practically dancing from one foot to the other.\n\n\"Oh I guess we could do that.\"\n\nBetty looked around, then ducked her head in beside mine behind the machine door and gave me a quick peck before dashing off. Well whatever it was it had her all wound up.\n\n Would he do it, or would he think I'm a sick woman and kick me out? \n\nI handled a few more calls, then took a break when I saw Betty heading up with her eyes darting about like she was being hunted. I grabbed a bottle of pop from the machine and saw Betty darting out the door as soon as I turned around.\n\nShe was waiting on me to lead the way out to the far corner, then practically ran to the edge of the roof looking at all the city lights. I had just put my hand on her back when she turned and wrapped her arms around me and kissed me hard. \"So you've never heard of hitchhiking a girl?\"\n\n\"Not that I know of. What is it? You seem to be pretty interested in it.\"\n\n\"Well I overheard Alice talking about it, you remember her?\"\n\n\"Ah, the one that likes to tease her boyfriend with the skimpy bikinis?\"\n\nBetty bit her lip and nodded, \"So anyway, she was telling Savannah what game they've been playing lately, and they call it hitchhiking a girl.\"\n\n\"So what's involved?\" bringing my hand up to cup her tit feeling her hard nipple even through her dress and bra.\n\n\"Nothing and everything. Alice wears a short skirt or dress, and her boyfriend tries to get her off out in public.\"\n\n\"That doesn't sound like anything new.\"\n\n\"No, but it's how he does it. If she's standing in front of him, or leaned over, he slips his hand between her legs from behind and slips his thumb in her puss to play with her g-spot and his finger on her clit. The object is for him to get her off and her not to scream before they are caught.\"\n\nI got hard at her description and gripped her tit a bit tighter. \"Sounds like an interesting variation on six packing.\"\n\nHe's interested! Wait a minute, what's six packing? \n\n\"What's six packing?\"\n\n\"Finger fucking your pussy and ass at the same time, and putting a finger on your clit if I take you from behind.\"\n\n\"OH Fuck that's ornery...\" trembling against me.\n\nI held Betty for a bit, then she pushed back to look at me, \"Am I bad for thinking about this?\"\n\n\"Not in my book.\"\n\n\"Good,\" and turned and leaned partially over the cap, her ass sticking out nicely.\n\n\"Oh, this is something that needs to be tested does it?\"\n\n\"Mmmmm Hmmmmm.\"\n\nI'm such a slut. \n\nI reached my hand under her dress, lightly running my thumbnail across her rosebud as I headed for her pussy making her hiss. I pushed her thong aside and slid my thumb into her soaking wet pussy. I would have had better access with my fingers, but I think I can reach her g-spot if I push just...\n\n\"FUCKKKK.\" Betty groaned falling to her chest on the cap.\n\nOH GOOOOOD. Hank's taking me fully dressed. Do it Hank, take my puss, do what you want. Take me and make me... \n\nI pushed my finger up under her thong to her clit and she clamped down hard around my thumb. As I began moving my fingers, Betty... Well I'm not sure what you would call it. Her head came up and she clamped both hands over her mouth and she began cumming around my fingers, but those hands were no match for her lungs. There was a good chance someone out on the front smoking deck heard something, the only question was if they would recognize the muffled screams of an orgasming woman.\n\nCAN'T STOP, CAN'T STOP... DON'T STOP!! DEEPER... HARDER... NOOOOOOOOOOOOO... \n\nI put my other hand on Betty's shoulder to make sure I was getting my thumb all the way into her g-spot and that set her off again. If we had been at home I would have kept it up, but we had to go back to work so I pulled my thumb from its warm temporary home. And even then I had plenty of her juices to lick from it.\n\nI let Betty catch her breath then pulled her to stand beside me still quivering, \"Been thinking about that a little have you?\"\n\nBetty didn't even look at me, merely put her hand up with her thumb and finger about a quarter inch apart, I put mine between hers and opened them up as far as they would go. She giggled and wrapped her arms around me, but growled when I slipped my hand under her dress and wiped some of her juices from her thighs, \"Oh that's ornery...\"\n\n\"Would you rather I kneel down and lick them clean?\" She just groaned as my finger enjoyed its trip around her clit.\n\nYES! \n\nWe stood there a bit with my hand up her skirt playing with a sloppy juicy pussy, but we were going to have to get back inside. I helped her back to the door, but had to leave her there outside as I ducked in to come in separately. Good thing the ladies room was a few steps down the hall. For some odd reason Betty blushed all night, could it be because I gave her a thumbs up and then licked my thumb when I saw her?\n\nBetty actually made a quick meal and came to bed when we got home, starting to get on a morning sleep routine.\n\n___\n\nTarra and Ebi actually let us sleep in, if I had known getting a live in girlfriend would get me a good nights sleep I would have done this a LONG time ago.\n\nI turned enough to play with Betty, tracing her nipple through the sheet. Her eyes flickered open, \"Morning.\"\n\n\"Morning,\" she smiled back up at me. She glanced down at my finger tracing her nipple, \"Are you going to ravage a poor defenseless woman?\"\n\nI stopped circling and began flicking the tip of her nipple back and forth, \"Well I don't know about poor or defenseless, but definitely all woman,\" taking her nipple between thumb and finger and giving it a slight twist.\n\n\"And the ravaging part?\"\n\n\"Commencing immediately,\" cupping her tit and rolling on top of her. I held her jaw on her right, but her neck on her left, her bruise now getting to the nice rainbow stage, and her jaw was still sensitive. That didn't stop me from nibbling on her neck though. Oh and her ear lobe...\n\n\"Oh Hank...\"\n\nUnlike last night, this afternoon was going to be an afternoon of pleasure and not a rocket ship. Going back down her neck, nibbling and licking my way down the slope of her tit, that precious nipple in sight. Then detouring across her cleavage and out and around her other tit before coming up and licking, just barely, the tip of her nipple before blowing on it.\n\n\"Haaaankkkkk...\"\n\nYou're supposed to take me, show me what you want. This is supposed to be about you... \n\nI took my time, concentrating on just one tit. Cupping and squeezing while kissing and nibbling. Tracing my tongue around the edge of her areola as Betty tried to turn and put her nipple between my lips. Then surrounding it with both hands pushing her nipple up and taking it and as much of her tit as possible in my mouth, sucking hard and lavishing her nipple with my tongue. Pulling up, keeping just her nipple in my mouth sucking hard until I let it go with a pop, and a hiss from Betty.\n\nShe deflated for a bit, then tensed up as I made the transition across her cleavage to her other tit, licking and suckling the soft underside of her tit, reveling in the tenderness. Watching her nipple harden as I got closer, taking my time to suckle and nibble. Running my tongue around and around as Betty got closer and closer to her peak.\n\nShe was right on the edge as I nipped the tip of her nipple and reached down and put a finger to her clit. A few strokes back and forth and Betty was trembling in a nice little orgasm. And unlike the other day I let it subside not turning it into a body quake. Merely dropping back to her other nipple and licking softly.\n\nI looked down toward the source of that aroma, the one with a direct link to my brain... both of them. I kissed my way down her belly, following the scent, and almost chuckling at her landing strip, pointing the way for me. Kissing along that landing strip, feeling the stubble that told me Betty was about due for a trim. Would she do it in front of me, or should I do it myself this time?\n\nI should be sucking him off, making him come. Am I wrong for wanting him to do this to me this often? \n\nMmmmmmm, seeing her pussy open for me as she lifted and spread her legs, the little bit of stubble on her lips as I licked her nectar. No cave man deep-dive feast, just gentle licks savoring my dessert. Catching a nice sip from the base of her slit and licking up to make sure I didn't miss anything, stopping just short of her clit.\n\nHank keeps me right on the edge, so close. Giving me all those little orgasms, just over the edge and back. Over and back, my body aching for him. O GOD I'M SUCH A SLUT FOR ENJOYING HIM BREATHING ME IN!\n\nI opened her further with my fingers, pausing again at the sight before me. Betty's delicious pussy glistening with her juices inviting me in. I inhaled deeply, hearing a little chuckle from above, turning to a squeak when I took a quick lick at her clit. Taking first one lip and then the other between mine, sucking every bit of her essence, dipping back to her open pussy as she flowed, licking and suckling every bit I could.\n\nI don't know how long I was there, and frankly I didn't care. I know I gave Betty several nice little orgasms, never doing more than putting my tongue into her and an occasional nibble on her clit. There were hands on my head, Betty pulling me up.\n\n\"No more... I need you in me...\"\n\nI kissed my way back up her belly, stopping at a tit and rubbing her juices from my face on her nipple and then licking them off making her groan and giggle. Getting to my knees and sinking into her in one smooth stroke, kissing her soft lips.\n\nOh that is almost too much, rubbing my juices all over my boob and licking them off. He still tastes like my puss, his tongue deep in my mouth like it was in my puss... I DON'T CARE. \n\nLooking in her eyes hovering above her on my knees and elbows, her nipples barely in my chest. \"I love you...\" I said without thinking as I sank in her. As soon as I said it I wanted to take it back, not because I didn't mean it, I'm pretty sure I did anyway. It was just too soon getting her away from Zack.\n\nBetty's eyes went wide and she sucked in enough air that I felt her pussy contract... I DONE SCREWED THE POOCH! Her eyes began to water and I knew I was done for. But then she was smiling...\n\n\"I love you too...\" she said softly, then wrapped her arms and legs around me pulling me down on top of her, rotating her hips to take me as deep as she could.\n\nI managed to lift my head enough to kiss her while I slid in and out of her with long deep strokes, shifting up and down, in and out in a good strong pace, working her and working her, rocking on her with her tits in my chest.\n\n\"Close...\" I hissed.\n\nBetty pulled my head down beside hers so she looked right in my eyes. \"Fill me Hank.\"\n\nFill me with your love, your essence, your seed!! \n\nI managed two more strokes and absolutely exploded in Betty, driving deep and holding there as I did, hearing her scream and bite my shoulder in response with her own orgasm. I managed some semblance of body control and slid my arms under her shoulder blades and hooked her shoulders with my hands and proceeded to finish her off, driving the last of my cum into her, reveling in her quivering body below me.\n\nWe lay there a bit trying to catch our breath, I managed to roll off of her somehow, my whole body ached from cumming in her. Damn, I wish that ceiling fan had a remote!\n\nBetty lifted my arm and rolled her sweaty sticky body against mine, her tits and soft nipples pressing into me, her slick pussy against my thigh. Running her finger through my sweaty chest hair making little swirls and grinning, running her fingers up and over where she bit me making me wince, \"Sorry about that.\"\n\nI chuckled, \"Adds a whole new meaning to needing protection during sex...\"\n\nBetty gasped, then chuckled before settling back in. \"Hank?\"\n\n\"Hmmmm?\"\n\n\"Did you... did you mean what you said earlier... when you said... said that you...\"\n\nI tipped her head up and kissed her forehead. Then looked her in the eye, \"Yeah, I think I love you.\"\n\nBetty smiled and stretched up for a real kiss, \"Me too,\" and snuggled back under my arm.\n\nWe lay there a bit, but kitchen noise got us up, the girls were back and Betty dashed out of the room, all grins. I looked over and grinned at the sight of her, make that OUR, juices running down her thighs. There was a chorus of squeals as I came in, followed by grins and looks at me and mouth covered whispers.\n\n\"He said it!\"\n\n\"Said what?\" Tarra asked.\n\n\"He said he loved me!\"\n\n\"He didn't!\" Ebi chuckled.\n\n\"Twice!\"\n\nTarra shoulder bumped Ebi, \"Told ya.\"\n\nI looked between them, \"Told ya what?\"\n\n\"The way Hank dropped everything and ran out the door when you called. I told her he was in love.\" Ebi grinned and rolled her eyes at Tarra.\n\nI was going to get more out of them but Hank came in. \n\n\"What?\"\n\n\"Nothing,\" came the three way chorus followed by giggles. The comical part was Betty was naked, me in my boxers and the girls still in their corsets from work. What blew my mind was when they began stripping down right there in the kitchen. Well, not exactly. Tarra undressed Ebi and vice versa, with a LOT of caressing and nibbling. Ebi even making a point of running her finger through Tarra's pussy and licking her finger clean.\n\nThe girls had always teased me, running around naked or in towel turbans, but never the strip and make out session before... WOW!\n\nOH GOD! Hank's cum is dribbling down my leg, and they're going to do it right in front of us like a live porn movie. Could I do that, could I lick and taste another woman? I mean Tarra kinda kissed my cheek... How would her nipple feel between my lips compared to Hank's delicious dick? Hank's getting hard, if I take him now I can get him in my throat!",
        "Betty had been watching them a bit wide eyed, watching Ebi's chocolate hand playing with Tara's tan tit, her dark lips around Tarra's brown nipple. She turned to me and dropped to her knees taking my hard cock between her lips as soon as I cleared my boxers, \"Mmmmmmmmmm,\" she hummed around my cock taking me in until I was pressed to her throat.\n\nI may have recently cum, but Betty on her knees with the sight of her tits and soft nipples on either side of my cock and Tarra and Ebi making out not four feet away and I didn't last long, \"FFFFFFUUUUUUUUUCCCCCCKKKKKK!!\"\n\nOH GOD, Hank's still covered in my juices! Fill me Hank, fill my throat like you filled my puss!\n\nI had to grab the top of Betty's head and the counter to keep from falling down as Betty drank me in, sucking every last drop from me even if it was probably just a dribble, holding me between her lips until I softened then pressing in to let me go in her throat a bit and lick my balls. Nobody but Betty had ever done that to me before and I was definitely NOT going to tell her to stop.\n\nBetty looked up and me and licked a few drops that had escaped her lips. \"EEWWWWW!!\" the girls exclaimed, \"How can you do that?\"\n\nBetty grinned up taking one last lick around her mouth, \"Practice, looooottts of practice,\" she said in a sultry voice then chuckling at the girls rolling their eyes and scooting off to their bedroom hand in hand.\n\nAnd as often as I can. \n\nBetty stood and grabbed my hand hauling my barely functioning body off the stool, \"Shower time, studly!\"\n\nWe soaped and played, taking our time. \"So what do you want to do about it?\n\n\"About what?\" Betty responded.\n\n\"I love you, but getting a little grabby at work could cause problems,\" grabbing her tit and ass for emphasis.\n\nGod my puss flutters when he does that. \n\n\"Mmmmmm, I guess. I know married people can't work in the same department. But as far as I know dating isn't a problem, and I know of an engaged couple in hard count and soft count.\"\n\n\"So we should go in and announce you're leaving asshole and you're shacking up with me?\"\n\nBetty got wide eyed and then grinned, \"As good as that sounds I see your point. How about we take it slow?\"\n\nI reached down and cupped her pussy slipping a finger in against her clit, making certain to move it s-l-o-w-l-y to emphasize my point. \"Okay.\"\n\nBetty looked a bit wide eyed when I grabbed her razor, and squeaked so nicely when I ran a finger across her stubble. I managed to kneel down and put her foot on my leg. We need a bigger shower. I got her situated with her pussy right in front of my face, spreading her and slowly dragging the razor across her stubble until she was baby smooth. Her pussy wet with her own juices to the point I was forced to lean forward and lick her. Scratch that, we definitely DO NOT need a bigger shower.\n\nThis is SOOOO decadent. Spreading my puss for Hank to shave me, him sitting there between my spread legs. I can feel his breath on my puss. I can feel his eyes on me even as he stands up, his dick firming up nicely. \n\n\"Hank?\" Betty asked leaning forward and brushing her tits across my chest as she groped my cock, \"Could I trim you up some time?\"\n\nI pulled her to me and squeezed her soft ass, \"Trim sure, but not too close. Tried shaving once a long time ago and got such a rash I couldn't have sex for almost two weeks.\"\n\nTWO WEEKS... NO FUCKING WAY! \n\nBetty gasped, then grinned, \"Well, we can't have that, now can we?\"\n\nWe managed to get dressed without too much groping, and tonight was a top and skirt night again, and the smallest little white thong I had seen on her yet, barely wide enough to cover her lips and landing strip. \"I don't remember that one,\" staring straight at her barely covered pussy as she pulled her skirt up.\n\n\"It was in my stored stuff, Zack wouldn't let... that is he...\" Betty looked worried.\n\nI took two steps to her smiling, \"Well I'm glad you kept it, even if it is a little big.\" Trying to reach under her tight skirt and stroke her pussy, not getting very far and sighing at the wasted effort.\n\n\"What?\"\n\n\"Nothing.\"\n\nBetty took my hand and brought it up to her lace covered tit, \"Hank?\"\n\nWhat's wrong, what did I do wrong??? \n\n\"It's nothing. I was just thinking, that for as much as I enjoyed your tight skirts before, letting your panty lines, or lack of, show when you had your jacket off, it makes playing with you a little difficult.\" I kissed her softly, \"And you know how much I would just hate to be able to sit down and put my head up your skirt to nibble on you...\"\n\n\"You wouldn't mind loose short skirts?\" Betty asked softly.\n\nCould I get away with working in loose short skirts? I mean I guess other girls wear them, so it's not like it would be exactly new... \n\nI reached down with both hands and grabbed the hem of her skirt and made like I was pulling for all I was worth to lift it, \"I... I think I could handle them,\" making like I was exhausted.\n\nBetty was snickering, \"Next thing you'll want me to go braless to work too.\"\n\n\"Works for me.\"\n\nBetty gasped and covered her tits with her hands, \"I'd get fired for sure letting my boobs show!\"\n\n\"Not with a double breasted shirt... like my good dress shirts.\"\n\n\"But...\"\n\n\"Yeah, that would cause another problem though. Then you'd have to fight me off when I put my hands in your shirt to cup and squeeze and play. And god forbid I opened your shirt and nibbled and sucked on your nipple during break some time.\"\n\nThe thought of Hank taking me at work, having his way with me... \n\nBetty wasn't covering her tits now, she was squeezing, \"Hank! Now I'm going to need dry underwear!\"\n\nI made like I was licking her, \"Can I help?\"\n\n\"AARRRGGGG!\"\n\nBetty stayed on the other side of the room as she changed thongs, then slipped her silk shirt and jacket on. She did at least grin and chuckle when I held my arm out for her.\n\nIt was a typical Friday night, and even with the extra manpower we kept pretty busy. I only saw Betty a few times, and only felt her brush up behind me at the main cage once.\n\nA little before my lunch break my gaming commissioner friend walked by and tossed a little folded piece of paper at my feet while I was working on a machine. I finished the work and picked it up, waiting until I was around the corner to open it and read it.\n\n<c>\n\nHE'S IN JAIL,\n\nPOSSESSION WITH INTENT TO DISTRIBUTE\n\nAND STATUTORY RAPE.\n\n</c>\n\nI grinned so hard I almost split my face. Give stupid people enough rope and they'll do it up right!\n\nBetty kept looking at me through out the evening grinning, raising an eyebrow. I just kept grinning and mouthed 'later'.\n\nHe's thinking about putting his head up my skirt and licking me, AND I'D LET HIM! \n\nI found Betty in the lunch room with a few friends. I smiled and slipped the note in front of her and headed for the order window. At least that was my intent. I took about four steps when there was a screech behind me. I turned to see Betty running toward me in her tight skirt and half leaping against me and wrapping her arms around my neck to kiss my cheek soundly.\n\n\"If there wasn't all these people around I'd drop to my knees, suck you off, and let you blast all over my boobs,\" she whispered in my ear. She gave me a quick peck on the cheek and then scurried back to her friends with the note in the air. I grabbed a sandwich and a bottle of pop and headed out to the vacant corner.\n\nAnd go topless if I thought I could, to show it off! \n\nCrystal is giving me the evil eye.\n\n\"What?\"\n\n\"Sooo, Hank huh?\"\n\n\"No we're not. Hank just gave me some good news about pencil dick. He's in jail!\" \n\nIs it that obvious how much I love him? They keep grinning at me and glancing at Hank.\n\nI watched Hank leave and it looked like he turned left instead of right, could he be going out to our corner? OH GOD NOW MY PUSS IS GOING TO DRIBBLE THINKING ABOUT HIM FILLING ME! \n\nI stood leaning against the top of the wall enjoying the lights, a slight mist in the air giving everything a little halo. It hadn't been that long ago when I brought Betty out here to talk, and now she was living with me. Thinking back on the times I would stare at her ass and panty lines as she walked away, the times her ass would take a nice bite on her long skirts, wishing it was my hand in there. Thinking those little bumps in her shirt were her nipples and not the bra seams, how's that go, two out of three ain't bad?\n\nI was so lost in thought about Betty I didn't hear her come up behind me until the last few steps on the gravel. \"What ya thinking about?\" she asked as she slipped her arms around me from behind.\n\n\"You,\" I responded enjoying her pressed to my back.\n\nBetty turned me to face her, \"What about me?\" grinding her mound into my firming cock.\n\n\"Just thinking back on all the times I was watching you on the floor, your skirts and stuff, and now you're here with me...\"\n\n\"And I'm not going anywhere.\" Betty pulled me down for another nice kiss, I could almost lift her and fuck her right here and now. \"So how did you find out Zack is in jail?\"\n\nI smiled, \"I had a conversation with a highway patrol friend a while back, he said something to a friend who said something to a friend and so on. Evidently Zack screwed up and now he's paying for it. We'll get more details later if we can.\"\n\nI want him in me sooooo bad, feeling him drip down my thighs while I suck him clean after he's filled me. Take him in until his hair tickles my nose licking his balls. What would it be like with him trimmed? I mean I know I wasn't supposed to ask, but Hank lets me do a lot of things I'm not supposed to. Things I really want to do. \n\nWe kissed and cuddled a bit, she ground her mound into me and I squeezed her ass as best I could in her tight skirt. Betty was all smiles the rest of the night. \n\nShe was all grins coming into the apartment, stripping off her top and skirt as quickly as possible then pushed me back on the bed. I was going to lavish her, but she had other ideas.\n\n\"MY TURN!\"\n\nAfter pushing me back on the bed Betty climbed on throwing her legs over my chest and scooting back, her wet pussy above me as she took my hard cock in. But for as much of a hurry as she was to get me into bed, now she was taking her time.\n\nAnd along with Betty enjoying my cock, she was being a tease. I put my hands on her ass to pull her pussy down to me, but she refused to let it drop to me, I had to settle with playing, so I wet my finger in her pussy and began playing with her ass. Her mouth came off my cock in a hurry, \"OH FUUUUUCK!\"\n\nThis is supposed to be for Hank, pleasuring him the best way I know. Servicing his cock and working him in my throat. THAT'S NOT FAIR! \n\nBetty's head dropped beside my cock from the way I felt her breath, \"be nice.\"\n\nI felt Betty take me back in, sucking and lavishing, then slowly sliding my cock between her lips until I was against the back of her mouth, Betty held me there, nudging into her throat. Pulling back a bit, and pressing me in again, and again. turning and twisting. Occasionally pulling me back between her lips but going right back to pressing me to her throat. \n\nBetty kept this up, pressing me to her throat. She would occasionally gag a little, but pulling back only for a few seconds before pressing further. She was making headway, working the head of my cock into her throat, but the effort was getting to me. I had started playing with her ass, but the constant pressure on my cock was getting to be more than I could take.\n\n\"COMMMMING!\"\n\nDOWN MY THROAT!! \n\nBetty jammed my cock into her throat as I shot the first few loads, she pulled back enough to breathe and then did it again and again. Even as I slowed Betty kept my cock between her lips, suckling me like a pacifier for every drop of my cum.\n\nI lay there exhausted, Betty still on me with her lips around my cock, my finger still stuck in her ass above me. I did manage to pull it out with a little sigh from Betty before I passed out.\n\n___\n\nAnd now for my disclaimers which were inspired by JimBob44, thanks for the inspiration.\n\nYes, I never met a comma or ellipse I didn't like.\n\nYes, it jumps around too much.\n\nYes, it's in the wrong category.\n\nYes, it's too long.\n\nYes, it's too short.\n\nYes, this is stupid shit.\n\nIf you want a perfect story go find one written by Mr. Data.\n\nAnd, yes, I suck.\n\nGo have yourself a warm and fuzzy day.\n\nBTW, you only get to comment on spelling and grammar if you are volunteering to be an editor. Those comments and rants will be deleted, you've been warned.\n\nAND DON'T FORGET TO VOTE!"
    ],
    "authorname": "acup",
    "tags": [
        "flashing",
        "small tits",
        "oral"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/my-feather-girl-ch-02a"
}