{
    "title": "Barefoot Girls Love Playing Games Ch. 04",
    "pages": [
        "Bad-ass Editor: Macart\n\nQuick and efficient, what you really want in an Editor! Highly recommended. \n\n*****\n\n\"Will you pay attention?!\"\n\nMy sister throws a piece of popcorn at me to make sure I heard her. I look up quickly from my phone, hiding it on my now shirt covered chest. As I look her over It is plain to see that she is both a tiny bit tipsy, and a lot a bit annoyed with me. I had been discovered hiding on the porch which was \"off limits\" for the hiding game we had just been playing. I was also getting glances from every other girl in this room. Erica's beautiful full lips kept being sucked into her mouth as she made eyes at me, her dark eyes trying to send messages to me as she sits relaxing on the far end of the couch. Amy is sitting in the middle of the couch, legs criss-crossed, her blue eyes glancing quickly at me before she blushes brightly and looks down, understandable after what we just did. And Kelly, playful as always, with her feet up on the rest in front of her on the closer part of the couch. One of her green eyes subtly winks at me as I look her over. I am sitting on the lone recliner to the right of the couch, a glass of vodka and cranberry in my hand. All the girls have a glass and are sipping slowly. I had been looking at some very graphic pictures taken by Kelly about twenty minutes ago, causing me have to sit with my legs crossed to hide a weak boner.\n\nIt's hard to really believe it but all three of the girls on the couch have gone down on me tonight, and my sister is still oblivious to this fact. I know this because I am still alive. I can't stop looking at the evidence I have on my phone of both Amy and Kelly sucking me off, and I even have a few great shots of Amy's feet around my shaft most of which is inside Kelly's greedy mouth. Not to mention the ones of Kelly sucking on Amy's toes. If I didn't have this phone with these pictures, I would honestly doubt it any of it had ever happened. Especially Amy! I glance over at her and blush. She looks right back and we lock eyes and smile, both thinking about what just took place. I glance at my sister and she gives me an frustrated look, so I sigh and put my phone next to me on the seat.\n\n\"Ok Madz fine, phone down now whats the plan?\" I say, playing a bad mood even though that is not even close to the case. My answer seems to calm the little demon. She looks to her friends and shrugs, \"You guys done with hiding?\" she asks and they girls all nod and give signs of being drunk and wanting to just chill out. I smile and start thinking about dragging myself to my bed, it's definitely almost time. \"How about a movie?\" Kelly pipes in. \"You know, just relax and probably pass out in here?\" She says and looks around at the other girls for their opinions. \"Sure, as long as I don't have to move,\" Amy says sliding lower into the couch. Erica pokes her side and she jumps. \"You only have to move a little. I'm down for a movie as long as Mac sits in the middle of the couch.\" The girls all giggle and Kelly chimes in, \"Yeah we could have a little cuddle party.\" This elicits more laughter. I am probably sweating at this conversation, but I smile and try to play it cool. I had no problem with the idea at all, I was so relaxed at his point being cuddled up to by three hotties...yeah I could get behind that idea.\n\n\"Well ok, but don't get mad at me if I fall asleep, that sounds like a very comfortable place to be,\" I say slowly. The girls laugh and I hear Madison make a tutting sound.\n\n\"Whatever,\" she says, standing and walking to where I'm sitting \"you all do what you want but I am not cuddling with my brother so I'll take the recliner.\" I jump up, not wanting to be in queen bitch's way right now, I hope she was not mad that her friends are being nice to me.\n\n\"Hey Mac, throw on something scary!\" Kelly says, and the girls start moving things around on the couch to get ready for the movie. My sister pulls out her phone and starts texting like mad as she pulls her feet quickly under her and sits on the recliner. I blink and start thinking about her, she had been on her phone quite a few times tonight I just hadn't really paid it any mind. Was that what she was mad about? Was one of her friends pissing her off on Facebook or something? I put it out of my mind and start browsing our DVDs, we could just watch one of the many programs on out TV but I pull out a few of the scary ones we have in the collection. My dad is a DVD madman so we have tons to choose from. I pull out a few select favorites and turn to the group...and I blush quickly at what I see: Kelly and Erica are coming back into the room having left when I was looking through the movies. They are dragging my blanket and pillows into the room. It shouldn't have surprised me that those two would just go in my room, but still it is embarrassing. They pay me no mind as they start laying out my bedspread all over the couch. After the couch is ready and the movie selected, Erica looks to the group.\n\n\"I don't know about you guys but I'm getting changed for bed if we are going to be getting this comfy.\" I can't help but think to myself how she was part of team 'let's make the couch super comfy' in the first place. Kelly agrees, but Amy admits to not having brought sleepwear. After a little talk, and dragging Madison off her phone, the four girls head off to Madison's room to get changed.\n\nI walk into my room with a puzzled look on my face. Kelly had ushered the girls out of the den and waited for me to come out last, she slinked over to me and put her lips to my ear. \"Wear something with a button in the front, no boxers,\" and after nipping at my ear and a quick grab of my crotch, she bounded out of the den. Something with a button in the front? No boxers? What did Kelly have planned now? I mean, all the girls would be there including my sister. Then again Kelly had been running the show for a while now, I should probably just go with it. I pull out a pair of my sleep pants, an older pair so they are super baggy, but as requested they have a button in front. I keep the same shirt on and look in the mirror trying to give myself a pep talk, calm myself down and all that, but it's not so easy. Even after everything that had happened I was still intimidated by the room of giggling girls. I do throw on some deodorant and a quick spritz of the cologne I never use [a gift from Madison last holiday], and head back into the den. I am the first one done of course, the girls take forever. I get the movie ready and try drinking my vodka...still gross. I am pretty tired and the girls seem to take forever to change so I flip through the special features of the movies to kill time. After a good 25 minutes the sound of many padding feet announce the return of the girls. I look over, ready with a sarcastic comment about how long girls take getting ready, but my voice sticks in my throat when they come in. Erica comes in first, followed by Kelly and Amy. All three of the girls have on overly large shirts and I as far as I can tell...nothing else. I can't help but look down as three sets of beautiful bare feet come trooping in. Erica's large tan set with her red nails, stepping toe to heel with louder pads. Kelly walking on the balls of her feet almost bouncing as she walks, her blue toes a little more chipped, possibly from being in my mouth. Then Amy's purple capped set, small and pale as she comes in, one foot comes over the other just as before, still very shy. As I drag my eyes up at Amy my eyes widen in shock. Amy has on the shirt I was wearing when I first got home, the one Erica had been holding for me, that little thief! But...Well...I look Amy up and down, she is blushing like crazy under my gaze but I just can't stop, she looks so good in my shirt. I widen my gaze to look at them all, each looking at me as if waiting for approval! When I realize this I stumble to give a complement, but the problem is my filter seems to be broken and my thought simply becomes what I say. \n\n\"Holy fuck you girls are sexy,\" comes out of my mouth, and the three girls each respond differently. Amy turns bright red and tugs on my shirt wrapped around her body, Erica winks, giggles and pulls her shirt up slightly to expose more of her legs, and Kelly giggles hard, blushing slightly. Kelly walks over to me. \"You're damn right we are!\" she exclaims loudly. \"Now take this off,\" she demands tugging on my shirt and walking by me to sit on the couches right side. I am already red from my verbal slip but I probably go even redder at that. I look at her for confirmation when Erica walks up to me and I feel her hands on my waist as she grabs my shirt.\n\n\"I'll keep taking them off every time you put one on ya know, if I have to hide your shirt drawer too I will! Men with hot bods should never wear shirts,\" she says bluntly, and starts to tug my shirt over my head. I struggle mostly out of embarrassed confusion, but she manages to tussle me and get it over my head anyways. I stumble forward a bit after the interaction and almost walk right into Amy. Amy smiles at me, not moving as I lock my focus on her. I look into her eyes as she brushes her hair off her face and we just kind of look at each other for a moment before the other two speak.\n\n\"Man that Tattoo is sexy\"\n\n\"How is it feeling Mac Attack?\"\n\nI calm myself down for a second and turn to the girls as a whole right as my sister comes in.\n\n\"Oh yeah my tat is ok, still stings a bit but no pro..um problem...\" I stutter as I look over at my sister...oh man...\n\nMadison is also wearing one of my old shirts, one that she took from me a long time ago...but...well...I had never really noticed her as 'all grown up' so to speak. Until now. Her long red hair is in a ponytail that is tied to the side of her head and is trailing down the side of her face. Her brown eyes, much like mine, are pointed downwards still looking at her phone. The shirt is my old fan shirt from a video game, black with a faded symbol from the game on the front. But the shirt is older meaning it is even shorter than the shirts the other girls are wearing. I still can't see her shorts, or whatever she must have on under there, but I can see way more of her legs then a brother should. And I was certainly enjoying trailing my eyes down her pale legs more then a brother should. Her small ankles end in a huge disappointment on my part, she had put on a pair of socks that were very old and almost worn because I can still tell her toes are painted black. \n\nThe embarrassment of what I just did hits quickly, I just checked out my sister big time and I had really liked what I had seen.\n\nI quickly turn and walk over to the couch where the girls are sort of getting ready, I need to get under the blanket before my tent gives me away, and there will be no hiding it in these pants! As I sit Erica sidles up to me on my left side, her breasts brush against me and I can immediately tell she is not wearing a bra. I can feel her pillowy, soft chest squishing against my arm. I feel like a swarm of lover bee's are just buzzing in this small room. But with my sister here I need to act as natural as possible, this movie idea might not have been so hot after all.\n\n\"Well, ready to get started huh?\" Erica says, pointedly looking at me very close. Her breath smells like toothpaste, the girls must have freshened up. I think to myself that I should have done the same as I nod at her.\n\n\"Yeah, sure, ready to start.\" I say with a grin. Erica suddenly mocks shock.\n\n\"Oh yeah the movie, I almost forgot,\" she says with a slight bite of sarcasm, she looks back toward the TV. \"What?!\" my mind barks, \"What did she mean by that?!\" I feel Kelly slide over toward me and her hand rests on my leg as she leans in to whisper in my ear. \n\n\"Oh I forgot to mention, Erica told me that you let her suck your dick under your sister's bed earlier.\" My chest suddenly swells with fear as she she pinches my leg and continues. \"You ass! You could have told me I wasn't the first to get to you tonight!\" She sounds like she is just teasing, not truly angry. \"If you can just get Madz to do it you will have gotten blowies from all four of us tonight!\" she says ultra-quite in my ear. I can tell from her tone that it was definitely meant as a joke, but damn the visuals it provides are incredible! I look over at my sister and almost on cue she puts one of her fingers to her mouth, I can just see those brown eyes looking into mine while my shaft disappears into her mouth! I give what must be a super nervous laugh.\n\n\"Pshh yeah ok, real funny!\" I say and give her a poke in the side for good measure. She laughs and jumps at my poke, then lays over my arm saying for me to start the movie. I look at Amy who for some reason looks even more nervous than when we were under the table. Amy's red face shocks me out of the dream world of the two hotties pressing their breasts against my arms. She seems to be crazy nervous about something, but Kelly and Erica tell her to hurry and sit down. I look around and start to wonder: sit where? Amy pulls the blanket with her as she moves, I panic slightly as she sits right between my legs, I have a major hard on and there will be no padding between us. I am saved for a moment when she just sits in front of me, leaning forward and reaching for the remote just out of her reach.\n\nI sit trying to figure out what to do when both Erica on my left and Kelly on my right wiggle themselves under my arms, cuddling their heads onto my shoulders. I'm now out of options. I mean Amy was 69ing with me not too long ago, so it's not as if she would not know what it was. I stop worrying about it when Kelly's hand, hidden from my sisters eyes, reaches down gives a firm squeeze to the tip of my hard on. I try very hard not to jump, but I can't stop myself when I feel Erica's hand reach down to do the same. I don't know where this is going but It both horrifies and wakes me up. Oh man what do these girls have planed for me now?\n\nKelly gives Amy a nudge and she jumps; she does not look at me but she glances at Erica and Kelly.\n\n\"Yeah you're all good Amy, settle on back,\" Erica says matter of factly. Amy nods and she leans back. They had been planning this! I can't believe it, they had been talking about this! They are all in on whatever is about to happen! I feel Kelly undo the button to my pants, with my arms over the girls I can't do anything about this! Amy pulls back the blanket and then plants her hands on my legs, the other two girls use their hands that are not at my crotch to pull her, well my shirt that she is wearing, slightly up as she pushes herself back and hovers over me. I feel Erica reach into my pants through the button and pull my cock out...this can't be happening \n\n\"Lights out guys,\" Madison says suddenly. My head bolts over to look at her as she leans over to hit the lights, right as I feel something very warm and very wet brush across the head of my cock. Something very soft that instantly calls to mind when I was going down on Amy. Just before the lights fade I get one last clear glimpse of the girls around me: Erica holding my pulsing member steady in one hand while holding up Amy's shirt with the other, Kelly is helping hold the shirt while also holding the blanket to keep it from slipping down, and Amy's hands are planted on my thighs. Amy rests her head next to Kelly's and looks over at me with those beautiful blue eyes, they would normally look so innocent but here she was doing all of this right in right in front of her friends, hell right in front of my sister!! \n\nAmy must have started the movie before she sat down because the opening music suddenly swells, and right then I feel Amy lower herself down onto my shaft. As the thunder claps in the opening scene I can feel the head of my dick push about 3 inches into Amy's throbbing pussy. I can't believe it, Amy was going to fuck me under a blanket...in my den...with my sister and her friends in the same room! As Amy impales herself a few more inches on my dick I feel waves of lust wash over my body once again. My virginity was being absolutely stolen right here and now. And quite honestly even I wanted to there wasn't anything I could do about it! Amy has a vice grip on my legs, and I can feel her suppressing moans in her throat as her tiny pussy tries to make room for it's very large invader. \n\nErica and Kelly cuddle up against me after letting go of both my cock and Amy's shirt. Kelly keeps rubbing both mine and Amy's legs to soothe us and keep us from bursting out loud with noise. Erica is licking her lips next to me, clearly loving the fact that I am so helpless. As Amy lowers herself down a few more inches I glance over at my sister, how can she not be noticing this?! Madison looks up from her phone at TV as it prattles on about how the town is involved in some murder, and just as Amy's ass comes to rest on my lap both the character on screen and Amy let out a sigh of relief. The soft walls of her pussy are pulsing in time with my own heartbeat as I feel myself settle in to a female body for the first time. It had not at all happened the way I would have ever guessed, but it was easily better than all the times I had been in any girls mouth tonight. It was so warm and so wet I just wanted to stay like this forever! \n\nKelly leans forward to whisper to Amy but I can clearly hear it.\"Biggest you have ever had?\" she breathes. And Amy nods quickly. \"Oh yeah,\" she says and I am made aware of the fact that I was the only one losing their virginity. \n\n\"Quiet down over there! Or turn the volume up!\" My sister bitches. 'Seriously, how can she not know?' I think to myself, as I focus on the feeling of my member pulsing inside Amy. She is almost motionless, most likely fighting back sounds of pleasure like I am. God she feels incredible! I can feel her wetness dripping down me and onto the couch; honestly this is not really intimate the way I feel it should be, I want so badly to hold Amy around the middle or something and keep her close, but the girls on either side of me are keeping me from doing so. Kelly is sneaking kisses onto my neck and Erica is running a hand over my abs and purring in my ear. I can feel a need building inside of me, I know what my body wants and my cock is being tortured not being allowed to move inside of Amy. I gently push my hips and flex my cock a bit, it sends huge waves of lust pulsing through my body but it's just not enough. It is absolute torture to just have to sit inside of her, it is a great feeling but I'm mere moments away from just picking her up and bringing her to my room. I mean there's no way she weighs more than Madison, and I can lift Maddie easily. I feel Amy's hands clench again on my legs, I know what's coming and I break myself with my hands ending up grabbing Kelly's shoulder and around the back of Erica's neck. \n\nAmy lifts herself into the air again and I can feel her pussy clench and drag achingly slowly up my full length to my head. I bury my face in her back to let a small sound out between her shoulder blades. The feeling was making my head spin with ecstasy. She descends again slowly and my cock pushes its way back inside her. The process is slow and loving... maybe one full pump up and down in one of the longest 60 seconds of my life. I feel Erica slowly move my hand down as she keeps getting closer and I feel something soft as my wrist passes her neckline. She pulls my hand down into her cleavage and I respond by diving my hand lower, I can sense what she wants. I completely forget my sister is even in the room as my fingers bush past Erica's nipple and my hand takes as much of her breast into my palm as I can. They are much bigger then I thought! She moans lightly when I give it a squeeze, right as Amy descends again. At this point Kelly loses restraint as I thought she might. She takes my hand from around her and places it in her lap as surreptitiously as possible, I glance past Amy's back to quickly peek at my sister as this happens, worried this is where we would be caught. I am being pulled apart by these beautiful girls and even though the room is dark if she looks right over at us...but I am relieved to see that she is still engrossed in her phone, texting away at high speed, her hand coming down briefly to scratch her socked foot. I vaguely wonder what could have her so focused, but the tits in my one hand and Amy's pussy gripping my shaft have me locked behind a wall of ecstasy. And it's about time I repay Kelly for teasing me and then stopping under the table earlier! I slide under her shirt as Amy is coming back up my shaft with a quiver, as my fingers slip under her shirt I see her soft and dripping lips right out in the open, and I'm hit with the realization that all three girls on this couch must not be wearing anything under their shirts. I briefly wonder whether my sister bothered to put on any panties under her shirt. I reach down and start rubbing around Kelly's soft pussy and darting the tip of one of my fingers inside her. She presses her legs together and squishes my hand; I look over and she is blushing and biting her lip. Amy descends again and my body is really starting to feel the vibes from all three of these beauties around me, the desire emanating from all three of them. I steal a glance over at my sister again to make sure she is not watching me fuck her friend and fondle the other two, and my timing could not have been better.",
        "My sister is still engrossed in her phone ignoring the movie, but her left hand is still scratching her foot which she has pulled up onto the chair with her. I squeeze Erica's breast while simultaneously pushing my finger and cock inside the other two girls just as my sister gets annoyed at something and pulls her sock from her ankle to halfway down her foot, I stare open mouthed as she slowly drags her nails across the bottom of her lovely sole and then decides to just ditch her socks all together. My luck doesn't seem to want to quit and she peels them both off quickly and tosses them to the floor, takes a few moments to inspect her nails; her feet are easily the cutest set out of all the girls in the room. I can feel Amy begin to shudder again on my cock, I start to think that must be her cumming because each time she does she stops and tenses her body before picking up again. My sister leaves her feet propped up on the seat showing off her delicate soles in my direction and I can't help myself, I start pushing myself up to meet Amy as she comes down making us fuck just a little bit faster. Kelly's lips come shockingly close to my ear all of a sudden and she breaths a whisper at me.\n\n\"Calm down big man. Amy has nine inches inside her right now and you're torturing her, it must be hard not to scream when you're doing this. Just calm down and enjoy it,\" Kelly whispers. She smiles and follows my eyes, I look away from my sister and bump noses with Kelly. She blushes and quickly steals a quick and quiet kiss. Her lips press against mine as as Amy shudders again, mewling softly. Kelly speaks again, \"And its ok, Maddie doesn't even know you're staring at her feet so stop worrying about it.\" She punctuates this with another kiss and I blush bright at her words, this girl doesn't miss a beat. I glance back over at Madison's feet and see that she is getting up suddenly.\n\nAmy freezes, my whole length inside her. Maddie walks over and whispers to Kelly, I'm terrified that she heard what Kelly said!\n\n\"Hey my phones dying and Matt is being a real dick. I am going to hop on my computer for a bit and message him. Be back,\" she says and Kelly looks concerned. I feel concerned too, as much as I can be at the moment. I was not even thinking about the fact that my sister had a boyfriend, never mind that things were rocky. I do feel bad as she closes the den door quickly. There is a 10 second space of just movie noise in the background before we hear my sisters door close with a click, and I do not even have time to think before all three of the girls are in motion.\n\nErica pulls the blanket down to give Amy some more room to move and Kelly spins to lay on her back with her head on the right arm rest and her legs pointed at me. The moment I am free I do what I have wanted from the start and put my hands on Amy's waist, and she moves herself up my shaft almost pulling off of me so she can plant her feet just above my knees. Her purple toes clench on my pants as she leans back on me and lets me glide back inside her much faster then before, she moans slowly but quietly as my thickness presses inside her. As I open my mouth to let out a sound in return, Kelly manages to wiggle a few of her toes into my mouth as well as start driving my fingers into her mound, demanding that I start multi-tasking. As I start sucking on Kelly's toes I hear Erica laugh. \n\n\"Oh my god you weren't kidding, he does like licking feet!\" She says as I see her pull her phone out to take a picture. \n\n\"Mmmm Erica use his phone! It's over on the couch!\" Kelly says and then moans as I push a third finger inside her. \"Oh my god hurry up Amy, I want to ride him so badly right now,\" she pleads and Amy starts bouncing faster, using her legs and arms to keep me gliding in and out of her. Amy speaks quietly through her moans.\n\n\"I'm...I'm almost there...Oh my god Mac your dick feels so good,\" she says, lust spilling from her mouth as she concentrates on ensuring she uses my full length to bounce on. Erica snaps a few pictures of Amy riding me hard, and then of me running my tongue over Kelly's long smooth soles and sucking on her toes. One of her hands is running over her slit as she takes what must be a video from close up of me pumping inside Amy. \"I'm...I'm...oh Mac...\" Amy moans and I feel her body shake violently as she cums, dripping out around me. I am still holding strong having cum so much today I honestly don't know if I can finish again. To my chagrin Kelly pulls her toes out of my mouth and kneels next to Amy who is leaning over and breathing hard. \n\n\"You ok Amy?\" Kelly asks, holding her up straight. I am pulsing and I want to keep fucking her, but she seems to be quite done so I rub and kiss her back. She was amazing and now she had my first time, and my first kiss, regardless of if I had finished. She leans back and puts an arm around my neck and I do what feels right, I begin to kiss her. We start kissing rather sloppily as our tongues swirl and we pant from being out of breath. I pump into her slightly and she moans into my mouth, but Kelly does not let our moment continue. \n\n\"Amy pleeease,\" She begs and Amy seems to remember she still has me inside her. She blushes and bucks one more time on me, making me smile and moan.\n\n\"Will you go out with me Mac?\" Amy asks breathily, still keeping me deep inside her. I must go pale, I even feel my cock stop moving. Both Erica and Kelly freeze too, looking at her in plain shock. Amy is blushing but she keeps staring at me waiting for an answer. I gulp and think about the situation she has chosen to ask me this question during. Amy keeps looking me in the eyes. \"I'm not going to stop you from fucking Kelly or Erica, but I want to claim you now before anyone else gets the idea,\" she says going bright red. I feel my face go as red as hers and both of the other girls giggle, seeming much more at ease considering they will still get their turns with me. I glance over and notice Kelly looks a bit, well, maybe jealous? \n\nI look back at Amy and she is still staring into my eyes, her hope very obvious on her face. I smile at her, crazy timing or not the answer would have always been the same.\n\n\"Hell yeah I will go out with you Amy, I have actually had a crush on you for years,\" I admit and she beams at me, right before kissing me again. We break our kiss and I flex my cock inside her; Amy looks over at Kelly who smiles back at her. Kelly speaks with a rueful giggle.\n\n\"Well played, I think you saw I had my eyes on him,\" and Amy nods. My mind is blown at that comment. \"Well like I said well played. Now, can I please have sex with your boyfriend?\" She says pointedly with a smirk on her face. We all laugh and Erica sits back down on the couch. \"Here babe,\" she says handing my phone to Amy. \"You take your break and snap some pics of your man, I kinda want to see what this foot licking thing is all about while Kelly has her fun.\" And she sits just like Kelly had been, but on my other side. I am finally going to get the treat of kissing Erica's feet too!? Tonight rocks so much! Amy pulls slowly off of my rock hard member and stands up. At least for a moment, her legs give way and she has to sit on the floor. The girls giggle as Kelly moves over to straddle me, my hardness pressing against her stomach. I look into Kelly's green eyes, so full of lust. If Kelly is as good with her hips as she is with her feet, I am in for a world rocking experience.\n\nKelly props up on her knee's and grabs my shaft, directing my head underneath her. She smiles at me and bites her lip. \"God I wanted this so badly under the table,\" she says and I smile back at her. \"No interruptions this time,\" I say, and I grip on her hips dragging her down, my dick impaling her slowly. She opens her mouth and closes her eyes as I push all the way inside her. She pulls her knees in tight to let me sit inside her for a few seconds, savoring how full she must feel. I hear my phone clicking away and Amy giggling. Kelly opens her eyes and smiles at me. \"Oh fuck yeah!\" she says and blinks as she looks to her right. Erica is resting her feet on the back of the couch, jealously watching my cock inside Kelly's juicy lower lips. Kelly grins and pulls Erica's large soft feet toward our faces. \"One for me and one for you.\" She says and kisses Erica's foot, inhaling deeply as she does it. Erica blinks and giggles as Kelly starts sucking on her big toe much the same way she did my cock. I smile deeply and turn my eyes to Erica's other foot. My tongue runs from her heel to toes and I push as deeply into Kelly's pussy as I can. Erica is apparently very ticklish because she starts giggling uncontrollably, I have to use one of my hands to hold her ankle firmly as I suck her toes in and out of my mouth. I keep my eyes on Kelly as she too sucks lovingly on each of Erica's toes in turn, her soft large feet are covered in saliva in just a few seconds. Kelly starts to bounce in my lap at a quick pace, only coming up a few inches before letting herself smack back down into my legs. My cock feeling her soft lips sucking me in and out of her body with small dirty sounds. Erica can't take the two of us tickling her for long, as Amy gets a close up of her now boyfriend licking quickly between her toes when she breaks.\n\n\"Oh my god please stop *giggle* please! Oh man, *giggle* I will give you something else to lick if you let me go *giggle*!\" she begs. Kelly keeps her steady fucking pace but she does raise an eyebrow at me and pulls Erica's big toe slowly out of her mouth. I follow suit and decide to let Erica's leg go, Kelly does as well and Erica breathes deeply. I hear clicking from my phone and can only assume Amy is shooting where Kelly and I are fused at the moment. Erica then gets up, standing on the couch and pulling her shirt up high, a dangling belly button ring is pointing down her belly to a neat line of close trimmed dark hair, her pussy lips looking very pink next to her tan skin. Kelly rides me harder, looking over and licking her lips as Erica pulls her pussy open for us to see. I am still very new to eating girls, but honestly Erica looks delicious right now and Kelly seems to agree. \"Bring that beautiful Italian ass over here then,\" she says with a low growl, and I can't help but lick my lips. Erica blushes,\"well it's meant for Mac, but I guess if he wants to share I'm ok with letting a girl in on the action. I should have known you would eat pussy if it ever came up!\" And the girls giggle, Amy even takes a picture of Erica standing like that. \"I never have but hey, I found out I like licking girl's feet today, why not pussy too?\" Kelly asks with a smile, her pussy still pressing down over me slowly as she talks. I have lost a lot of my control again, I know I where I want Erica so I smile and say \"You know I think I was promised something to lick when we let you go.\" I smile. \"Or should we just go back to licking your feet?\" I say with a tease, I was starting to get used to this girl thing finally. Erica puts one of her feet over the other just like Amy. \"Oh yeah? You want my pussy baby? Ok,\" she says and slowly lifts her leg over and between me and Kelly's body's; being tall, she is actually still above my face. Her hands press on the wall and Kelly leans forward grinding her pussy onto my cock. I let Kelly go, not wanting to be beaten to the prize. I grasp Erica's beautiful full ass in my hands and kiss forcefully right on her clit. She moans and one of her hands finds my head pushing it firmly toward her to keep me there. She must perch up on her toes because she raises suddenly and I feel Kelly's chin meet mine, and soon after my tongue finds hers darting along Erica's pussy with me. Erica seems to not be ready for things to escalate so quickly, her body twitches every which way and dirty sounds keep escaping her mouth. Both Kelly and I put a stop to her moving by criss crossing her legs with our arms, I hold firm to her ass and Kelly to her thighs and together we pull her pussy down onto our greedy mouths. Erica's body shakes hard more than once, occasionally in time with Kelly, and I realize the two of them are cumming multiple times all over me. \n\nI still hear Amy taking pictures but my body is far outside my control at this point. Erica is covering her mouth now because try as she might she is not being given a break from Kelly or I, we are kissing and licking her pussy with the enthusiasm of a starving pair at a banquet, with Erica's soft pussy drenched from the attention. Finally she breaks again, \"Kelly...oh Kelly please I can't take it, let him take me...please...oh fuck,\" she begs, and Kelly's greedy voice comes in between licks, this girl has no reserves anymore. \"Oh I don't know Erica, it feels sooo good!\" she moans as she drags me inside her again and again. \"I want to keep cumming like this for a while more...\" She coo's and trusts her tongue inside Erica again as I suck her clit into my mouth. What comes out of Erica's mouth next is what proves to me that this night will never stop surprising me.\n\n\"I'll lick you! Ohh god I promise I will eat your pussy right now just...oh...please let me fuck him before Madison comes back!\" She says in a rush, tears of pleasure pooling in her eyes. I look at Kelly and her eyes show the same surprise mine must at those words, but Kelly's mouth breaks into a succubus grin as she pushes a few fingers inside Erica, still bouncing on my cock. \n\n\"You will? Really? Ok I'm down for that, just make sure you smile when Amy takes some pictures for me!\" She says and pumps her fingers a few times inside Erica's pussy, a pussy I realize I am about to be inside of. Kelly wiggles herself off of me without hesitation, I feel her lips grip hard on my cock as she pulls off of me. She then lay on her back, her beautiful long legs spread out from her wet and open lower lips. She lets her head rest on the far left arm of the couch, her nipples poking hard through the thin shirt she has on. I see her face flush and the pleasure there is undeniable as she plants one of her feet up on the head of the couch and lets the other relax down on the ground, leaving her whole womanhood displayed to the room; I'm half tempted to move over on top of her and keep having sex with Kelly, but Erica's body is desperate at this point, and she knows what Kelly has planned.\n\n\"Oh my god you're such a little slut!\" Erica says, bending down to put her face in between Kelly's legs. This of course leaves Erica with both of her feet planted on the couch, and her ass, slightly covered by her long shirt, sticking up into the air. My instincts do not fail me as I move toward Erica. Amy comes up beside me and I see a red light on my phone, she has the phone pointed right at Erica's ass and giggles at me when I stare at her. I am a little surprised by her giggle, but she points to Erica's ass, as if giving her boyfriend permission now, and honestly I feel like I sort of asked by hesitating. \n\n\"Don't keep her waiting Mac!\" Kelly says earnestly, and I am really stunned to see Erica's face is buried very obediently in Kelly's pussy. Erica had always struck me as the leader of the little group but she was eating Kelly's pussy right now just for the chance to get me inside her! What a night, damn man what a night! Kelly is blushing and biting her lip enjoying what Erica must be doing to her, but now my eyes come to rest on the round full ass in front of me just barely covered up. I slowly reach out and pull the shirt up onto Erica's back, I feel like I really might be drooling right now. My sister may have the cutest feet, Kelly the best legs, and Amy may be my favorite overall, but Erica's ass was straight out of a centerfold! It was perfectly round and her tan was flawless, her pink lips spread slightly from her position, and her soft light soles on display for me, my cock was dripping with anticipation.\n\nI grab firmly on to Erica's cheeks and she moans in Kelly's lap. Her feet perch up and she points her ass out toward me a little bit more, she wants it so bad. Guys in this town would kill me to take my place right now! I don't want to let go of her firm ass so I press the head of my cock against her lips and press in carefully. She moans again as I start to rub the head across her lips, she is so tight though I can't seem to get a good angle. I am saved the trouble of having to let go as Amy comes to my rescue, she giggles and I bite my tongue as her small hand grabs hold of me and I watch in bliss as my new girlfriend directs my cock directly into Erica's desperate pussy. \n\nI hold back a loud noise with my teeth clamped tight together, Amy's gentle hand gives a small squeeze as I push the first few inches inside Erica. I hear both her and Kelly moan together as Erica no doubt pays back the feeling she is getting from me into Kelly. Erica is much tighter then I would have guessed being quite a bit bigger then Amy, it's odd for the sensation of her tightening around my cock to seem even more mind blowing than either of the two other girls. 'Maybe it was this new position?' I wonder as I sink further and further into her. I grip her hips tight as I push forward, her back arches as she pulls her face away from Kelly's pussy. Kelly is just smiling and watching with a sort of proud smirk like this is all her doing, well knowing her it probably is. Erica looks back at me and I feel my shaft pulse. \"Jeeez-us Mac, how much more is there?\" she gasps in disbelief, it takes me a second to realize she is talking about my length. I smile, beaming with pride every single time one of them brings that up. It may be late in the game to try my hand at cocky, buuut what the heck right?\n\n\"Really? You forgot already? I mean it was only like an hour ago that you had the whole thing in your mouth under my sister's bed wasn't it?\" I ask trying with all my drunken focus to sound like a badass. I have no idea what it sounds like, but the reactions seem ok. Erica blushes bright red, bites her lip and stares me down as Kelly let's out a string of laughter, and Amy covers her mouth to hide embarrassed giggles. And with that I give her ass a quick little pull. As my last inches disappear inside her she looks down quickly and somehow manages not to cry out.\n\n\"Fuck that was hot,\" Kelly says trying to lock eyes with me as she stares over Erica's back, but I have my eyes locked on Erica. Her hands are gripping tightly to the leather of the couch and I can hear her breathing heavily, forcing herself to keep quiet. Kelly runs her fingers through Erica's beautiful thick hair, and slowly directs her mouth back to her pussy. As Erica starts to kiss and lick at Kelly again, I feel her body relax around my stiffness. This seems to be a sign for me to start pumping. Amy gets a close up shot of our bodies locked together as I slowly pull myself out of her about half of my length, before hungrily plunging back inside of her. I notice Amy has her hand between her own legs and keeps licking her lips as she films her boyfriend's cock plunging in to her friend, and this only turns me on more. The feeling burning in my chest is taking over again, I start to pick up my speed letting my hips smack into Erica's bountiful ass every time I thrust inside her. I decide I like this position better than being ridden, I like the feeling of being in charge. Seeing Kelly hold Erica's head tight between her legs gives me a feeling of dominating Erica that I never thought I could have, and it was made all the better as Erica's moans prove just how she was loving it. \n\nAs I find my rhythm Amy moves away to get some close ups of Kelly's pussy being worshipped by Erica's desperate lips. I look over and Kelly locks eyes with me, a semi high of ecstasy letting her look so calm and in charge, her long legs spread out in relaxation; I can't help it, I lick my lips at her, I want her like this: I want Kelly underneath me and clinging to me, lost in her own pleasure. ",
        "The look in my eye seems to trigger something in Kelly, her hands still weaving tightly in Erica's hair, she lets her right leg raise up off the back of the couch and glide quickly toward me. 'This girl,' I think as she presses the sole of her foot once more onto my face. She leaves no doubt in my mind that she loves it as I take one hand off Erica's ass to hold tight Kelly's ankle tightly, and let a few of her toes pass into my mouth. She moans a little louder as I move her toes around with my tongue, this simple exchange between the two of us amplifies our lust. Not being able to get at each other it is Erica who benefits from our emotions, I start pumping as hard as I can into Erica's warm body willing her to eat Kelly faster, and from Kelly's face it really seems to work. One of Erica's hands darts onto Kelly's lap and Kelly has to stuff one of her hands into her mouth to stop from screaming. As I suck hard on Kelly's toes, I thrust even harder into Erica, and I feel my body reach it's tipping point at last. \n\n\"Erica...I'm... I'm gonna...\" I manage, and Erica pulls her mouth off a twitching Kelly in a rush.\n\n\"Pull out! Mac pull out-pull out!\" She says rather loudly, but apparently just in time. I yank myself out of her just as the first shot of hot cum fires out. I let Kelly's toes fall out of my mouth as I pump myself hard, my body barely noticing what's around me. The streams fall beautifully all over Erica's ass and back, the second shot even finds its way past her onto Kelly's bare stomach. I can tell that my body is done, I have nothing left as I take all my time to focus on standing up.\n\nI glance to my left and see Amy, my girlfriend getting a wide shot of the slowing action with a sexy grin on her face. She lowers the camera when I smile at her. I feel Erica sit back on her butt and lean against me, she is still catching her breath, but curls her finger at me for me to lean down to her. In my stupor I think she must want to whisper to me, and lean down right away. Her lips meet mine in a kiss and I stand stunned for a moment before kissing back. It is a quick kiss, but her brown eyes are smoldering when we break apart. \n\n\"If she ever leaves you we had better do this again!\" she says adamantly. And I give a sort of shy laugh. Totally spent I sit down finally and Amy comes over to me, I feel her light touch as she pulls my pants up for me; I smile at her as she does this, and she blushes hard at my look. She then sits on my lap once my button is fully fastened up again, normally I would be amazed to not get a boner just from Amy being this close but right now I literally have nothing left to get myself going. \n\nThe girls all have the same kind of happy drained kind of looks on their faces as well all try as hard as we can to get back to how we were when my sister left. It takes longer than it should, but we do finally get all cuddled in together... I look around at the girls around me.\n\nKelly is holding my right arm hostage, holding it tight to her body and laying her head on my shoulder, I can feel her breasts surrounding my arms and even her heartbeat she is clinging so tightly, her eyes finally getting heavy. I look to my right and see Erica, her beautiful legs laid along the couch and her head resting on my leg, right next to Amy's arm. Her eyes are closed, her body having gotten quite a workout from both Kelly and I. And I look forward to pull my left arm tight around my new girlfriend's waist. Amy is also slowly nodding off too, her petite body laid lightly on top of mine, her head nuzzled into my chest. I look over at the TV and see that the credits are rolling. Wow, we went at it for quite a while. I perk my head up a little, where is my-\n\nOn cue the door opens, I glance over to see my sister creep slowly in. Her eyes glance at the movie, and then over to the pile of body's on the couch. She shakes her head and flashes an off kind of smile. She then notices I am awake and looking at her. She frowns at me, but can't keep the slight smile off her face. She looks down at our feet and reaches for something on the couch.\n\n\"I can bet you want a picture of this,\" she whispers, and I see her hold up my phone. My heart had not jumped so badly in any of the shocking moments throughout the night. The amount of smut on that phone involving me and her friends would be enough to send me to the gallows of Mount Madison! She grins an evil grin at me. \"Smile loser,\" she says quietly. And I hear the phone click. My heart is beating into my throat as I watch her tap the screen to look at the picture, she grins at it and gives a laugh. She looks over to me, \"Hey my charger won't work again looks like I have to drop some cash to get another, but I need to call Matt.\" Her voice is calm for once, something is up and I can tell even in my drunken state. My heart calms a bit, making room for Maddie's issue. It must show in my face because she gives a dead laugh. \"Yeah, I think it's time to find another guy...cuz...well...he's being... ahh well a douchebag,\" She finishes lamely. \"But the least I can do is do it over the dam phone instead of online,\" she says trying hard to shrug it off, but I know my sister and even like this I can tell it's really getting to her. Her eyes really look hurt. \"I would ask Erica or Kelly but they seem to be out.\" I look around, I do seem to be the only one awake. \"Mind if I use yours?\" She asks, also unlike her. Normally it would have sounded like: \"I'm taking your phone loser, I'll give it back later,\" or something like that. This guy must have really gotten to her. I instantly don't like this Matt guy.\n\n\"Oh course, hey I know we don't talk a lot anymore but if you need me...\" I say sincerely. She scoffs at me.\n\n\"I'm a big girl Mackie I can deal with it just fine on my own, don't try to play the big brother just because you finally get to touch a few girls,\" she says and pokes me square on the nose. That comment brings my mind rocketing back to the present, was I insane? I had just given her permission to use my phone, the one with all the sexy pictures and videos on it! I immediately start to think of a way to get in back but my mind is not working at 100% capacity right now. Before I can think of anything she turns for the door, \"I'll be sleeping in my room tonight, I'm gonna want to be alone tonight so don't wait up,\" she says and promptly walks out, closing the door lightly. I shut my eyes tight, I knew it!\n\nI knew it was all building up! The good luck I'd had all night was all ready to fall around me! Oh man she was going to kill me! I look down at the sleeping girls all around me, chests rising and falling lightly as they breathe, it was calming somehow but... \n\nAW MAN! IF SHE SEES THOSE PICTURES I AM SO DEAD!"
    ],
    "authorname": "ScarredRaven",
    "tags": [
        "mac",
        "madison",
        "kelly",
        "amy",
        "foot fetish",
        "erica",
        "blowjobs",
        "three girls",
        "harum",
        "lesbian"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/barefoot-girls-love-playing-games-ch-04"
}