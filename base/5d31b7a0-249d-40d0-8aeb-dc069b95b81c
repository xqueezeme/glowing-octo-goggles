{
    "title": "The Twelve Tables Ch. 19",
    "pages": [
        "Authors Note: This chapter is set out differently but I hope you enjoy it non-the-less. Thank you to everyone left comments or sent me feedback about previous chapters of this story. Thank you again to Margaret who proofread for me. ~ellie\n\n*****\n\n\"I was thinking,\" Dante said as he and Josh returned to his apartment late one night after leaving the hospital. \"If we started the renovation now, we could turn Lio's apartment into a place for you and Peri to stay when you're in the city or at least a place for the babies and nannies when and if she decides to come back to work with me. I don't want to sell it or rent it out, and it's just sitting there.\"\n\n\"Where did that come from?\" Josh asked grabbing a couple of beers. \"I mean it sounds like an ideal solution to being able to spend a night in the city without being away from the children, but that place is yours to do what you want with.\" He was tentative feeling that Dante was still grieving for his twin.\n\n\"You know Lio was happy with his secret life. He and Matteo loved each other deeply, cared about each other deeply. They knew they wouldn't ever have their happily ever after, and he was good with that. They were content with what they had, and they were happy. You know?\" Dante asked.\n\n\"Yeah I hung out with them quite a lot before I met Peri, it was easy to see how in love they were,\" Josh nodded. \"They were good together. It's a shame not everyone got to see that side of him.\" \n\n\"Yeah Lio and I both kept our emotions pretty well hidden. Possibly only Charles knows the real story of what happened between Celeste and me after she ran from the farm. Though Papa has made it clear he knows all,\" he gave a rye smile and told Josh the story he hadn't ever spoken about since the day he had walked away from the woman who all but destroyed him.\n\n\"Fucking bitch! Screw this beer we need a drink,\" Josh felt his anger rise not just at the story but at himself for not realising there was more to the story of Dante's dark moods than just a broken heart. He was pleased at least that Lio and Charles had done something about the gold-digging tramp. He grabbed a bottle of Sambuca and two glasses returning to his brother. \"Salute!\" he said after pouring two glasses and downing the two finger amount in one gulp.\n\n\"Salute!\" Dante echoed him and gulped down the fiery liquid.\n\n\"It's good to have Bridgette staying at the hospital during the nights now,\" Josh said refilling their glasses. He and Dante had been there close to forty-eight hours until Peri had all but kicked them out to sleep, shower and change. They'd managed to shower and cat nap at the hospital, but changing meant coming home. \"Alright, so what does your sad sack story have to do with turning Lio's apartment into a playroom for my kids?\" Josh chuckled as he sat back nursing his beer again.\n\n\"Well I guess you might have noticed that my dark, brooding, family grouch persona has lifted over the last year or so,\" Dante said downing another Sambuca before picking up his beer.\n\n\"Yeah there's been more than one comment about it. I just assumed you met someone new. At first, I thought maybe Louisa but that fizzled pretty fast,\" Josh mused. \"I'm guessing after what happened with Celeste you weren't letting anyone new near any of the family. Lio would never force you to make it public like Nik did to me,\" he said with feeling. \"Yet another fucking bitch,\" he took a slug of his beer and feeling unsatisfied poured more Sambuca.\n\n\"Yeah,\" Dante agreed, \"But she was our bitch, and we helped create her,\" he said sadly.\n\n\"Izzy's a self-absorbed bitch, I can't imagine she would kill anyone,\" Josh said disgustedly.\n\n\"I imagine it could come to that if Giovanni ever took a Kept. You let Nik treat you like a surrogate boyfriend, as far as she was concerned Peri was the other woman, and she was protecting her territory,\" Dante shrugged. \"I wouldn't have been surprised to find that you two lost your cherries together.\"\n\n\"Fuck no,\" Josh scowled at his brother. \"I like my women softer and curvier and far more feminine than Nik ever was,\" he admitted.\n\n\"Lio and I lost ours together. I mean not together-together but with the same woman at the same time. His heart was never in it though I think he did it just for me,\" he admitted as Josh chuckled. \"He hadn't declared himself back then and how would he know unless he tried it,\" Dante explained. The conversation took another turn away from what Dante had been psyching himself up to say to his brother bust Josh brought it back on track. \n\n\"So your mood changed last year,\" Josh frowned. \"A woman finally mend that broken heart of yours?\"\n\n\"In a manner of speaking. More like restored my faith in the female race,\" he chuckled not sure now about opening himself up to Josh's possible rejection. It was highly improbable at this point; he consoled himself, but he wasn't sure about risking his place within his brother's life now that they had left the hospital and Peri. Her radiant, smiling face as she held all three of her babies filled his mind.\n\n\"So do I know her?\" Dante prompted further swilling the last of his beer and getting up to grab another. \"Someone at work maybe?\"\n\n\"Yeah,\" he answered honestly, \"She belongs to someone else though so I am just happy being close to her every day. She makes me happier than I have been in years, probably since Celeste destroyed me if I think about it. She's smart and sassy and gives as good as she gets, but she has a submissive side that just makes me wonder...\" his voice drifted off as if his mind took over for his mouth. \"Anyway, she's married now, and I respect that, it's enough to be close to her and I have a Kept that has a similar sort of look that I can work out my frustrations on.\"\n\n\"Okay let's stop fucking around,\" Josh came back to the couch and put the beer on the table. \"Pour,\" he commanded in a grumbling voice pushing his glass towards Dante and waiting until the clear liquid filled the bottom of the glasses. \"You're in love with Peri, and I'd like to hate you for it, but I can't and I don't.\"\n\n\"How long have you known?\" Dante asked quietly.\n\n\"Since the night Lio died,\" Josh spoke with the same quiet tone.\n\n\"You still let me into your life, into Peri's life the way you have?\" Dante frowned. \"You don't share well, you never have.\" He was confused now. \"Why?\" he asked.\n\n\"You needed us, you needed her more precisely, and I am not quite as selfish as you think,\" Josh said in a hurt tone. \"I've watched the two of you since then. I believe she cares for you more than she is willing to admit as well,\" he sighed. \"She loves me have no doubt of that, I am her husband, and we have a new family together. So where does that leave us?\" Dante downed his drink in one gulp and shrugged unsure what to say.\n\n\"The line was never crossed, by either of us. Fuck Josh, I'd never do that. I am happy just to be such a big part of your life at this point,\" Dante ran his hands through his hair.\n\n\"I didn't want her to go to the Battaglia, the thought of sharing her made me crazy. We made a pact that we wouldn't talk about her time there even before she left. I know one, if not all of those guys who came to the engagement party, fucked her. I dealt with them being there because she is mine, and she loves me as much as I love her,\" Josh tried to explain what had been going through his head over the last month since he had finally seen what everyone else obviously could.\n\n\"My money was on Francesco,\" Dante poured another drink wondering how this conversation had gotten to this point. \"I could have wiped that smarmy smile off his face a few times that night,\" he admitted making Josh chuckle.\n\n\"Fuck,\" Josh sighed. \"That's just it. I trust you to look after her, to look after my family. I want you in our lives. I want this,\" he gestured between them. \"I want this fucking honesty between us. This bond we have that I had when Nik and I were kids, and she ruined,\" he said his emotions showing in his face and voice. \"I don't know if I can share any more than I already am, I don't know how I will feel if that line gets crossed. I can't guarantee I won't become the world's biggest bastard, but I am okay with things as they are,\" he finished lamely.\n\n\"Get up,\" Dante said abruptly lurching to his feet. Not having eaten much when they stopped for dinner on the way home, the alcohol had affected him more than he would have thought. As Josh came to his feet, Dante embraced him and kissed him fully on the mouth. \"I love you man, the bond between us will be stronger than any bond you ever felt with Nik. Lio would be proud if he could see us now.\"\n\n\"I love you too man,\" Josh said as he returned the fierce embrace. \"Now I'm sharing a lot here, tell me about this Kept you mentioned,\" he grinned.\n\n\"I'll do you one better, let's take a trip downstairs,\" Dante chuckled. \"At least you know what she looks like, sort of,\" he continued to chuckle taking his seat and picking up his beer. Better yet she can come up here.\"\n\n\"My wife just gave birth less than forty-eight hours ago to not one but three children, I think the only thing I will be sleeping with tonight is my pillow,\" Josh shook his head.\n\n\"Suit yourself,\" Dante raised his drink in salute to his brother as Josh staggered to the bedroom knowing the kept was a poor substitute for the real thing.\n\n*****\n\n\"Hello, baby girl,\" Peri grinned accepting her daughter from the nurse's hands. She knew that the babies would probably need to have supplementary feeds, but she enjoyed the bonding moments of trying to feed each of them. She hated the pain in her womb as she tried to feed them but seeing the little face nuzzle into her breast gave her a wonderful warm feeling she couldn't explain.\n\nShe ran her finger over the little elf-like face and saw Eden turn toward the warmth of her hand. None of her babies had to stay in the NICU, and she was beyond grateful to the doctors who had looked after her and them during the unplanned birth. Peri unwrapped the bundle and began to change the nappy with Bridgette standing nearby to hand her what she needed.\n\n\"She's perfect, isn't she?\" Peri asked for the hundredth time in the forty-eight hours. Eden squawked at the cool air on her flesh and began to cry as Peri changed her nappy and wrapped her tightly again. The nurse helped her with the twin feeding pillow and supervised the positioning of Eden before handing her Cruze. Peri worried that she didn't seem to have enough milk, but the midwives had assured her that on day three she would regret her worries as the milk came in and filled her breasts to aching point.\n\nPeri stared down at her babies. The love she felt was automatic, deep and unconditional. She had made these little people; they had lived inside her, and she grinned like a Cheshire cat as she marvelled all over again at just how perfect they were. Peri looked over at the nurse cradling Blaze feeling the loss of him as she held the other two while they fed. When Josh was here, he had fed the third child a small bottle but without him here she felt like she was neglecting the baby. He would be first next time she promised.\n\nShe had a large private room, and the babies were able to stay with her there, although on the first night the doctors had insisted she sleep and leave them with the nurses in the nursery. She had begged Josh and Dante to stay with them, so they knew they weren't alone as the small sedative they had given her began to kick in, and she slept for the first time since she had woken after wetting the bed the night before.\n\nAll this time she had thought she was helping Dante with his grief and keeping him close to make sure he was doing okay without his twin. The reality was that he had kept Josh and her close and had been there to fill the gaps in their lives. He'd been there all through her pregnancy when Josh couldn't be and then at the birth, she stroked Eden's cheek again waking her from her sleepy suckling to try harder, at the birth he had been there for her while Josh looked after his children. Without him, she would not have been so calm, without him Josh would have been torn between her and his newly born babies. She was grateful to him beyond words and she knew Josh felt the same way.\n\n\"I think this little one is far more interested in sleep than food right now,\" Bridgette said gently as Peri gazed at her children lost in thought.\n\n\"Get some sleep that brother-in-law of yours managed to keep the visitors at bay today but they will come again tomorrow. Your mother is coming in early as well.\" Bridgette advised.\n\n\"Dante has been wonderful helping to look after me,\" Peri smiled as she spoke. \"I'll just have a little cuddle with Blaze first,\" Peri whispered turning to look at the nurse holding her son.\n\n\"You're going to be a busy mama with so many babies to nurse, get as much rest as you can while you are here in the relative quiet of the hospital,\" the nurse advised reiterating what Bridgette had said.\n\n\"With all of you helping me, and Josh and Dante acting like bodyguards I don't think I will have any problems with visitors overstaying their welcome,\" Peri laughed lightly letting Bridgette take Eden and taking Blaze from the nurse. \"Hello handsome,\" she said softly stroking his cheek as he looked up at her with wide dark eyes. \"Don't look so serious, little one, you are loved by so many people. You are so lucky to be born into such a big and loving family. You will never want for anything, and your Mummy and Daddy will make sure of it.\"\n\nAfter a few minutes, she reluctantly let the nurses take her babies away for the remainder of the night and settled down into the bed pulling the blankets up to her neck. As she fell asleep, her thoughts pictured Josh as he had been when they first met, formidable and frightening, standing in the research department demanding who had messed up the research on one of the books he was editing. He was a known perfectionist who raged and railed at anyone who was less than perfect in their work. She had stood toe to toe with him and explained her actions; that was the moment she realised that her fate had been sealed. He had told her as much, but as she looked back, she knew it too. Her mind scrolled through their first date as she drifted off into sleep her dreams taking over where her conscious mind left off. \n\nShe was at the art gallery with Josh on their first date and once again she felt eyes following her around the rooms as she looked at the exhibitions. Josh left her to speak to Charles but somehow rather than Pete standing beside her as she looked at the picture of a girl in bondage Dante appeared.\n\n\"I bet you look good like that,\" he murmured huskily in her ear. She looked around for Josh and could see him still talking with Charles but catching his eye she saw that he nodded and smiled almost indicating that she should stay with his brother. She looked back up at Dante and saw the look of desire in his eyes that she had seen so often in Josh's eyes. He took her hand and rather than saying something or pulling her hand away she let him lead her out of the gallery and away from the party and Josh.\n\n\"Wait, I'm with Josh,\" she looked back over her shoulder, but the art gallery was gone.\n\n\"You're with me now. I know what you need. I knew the moment I saw the way you looked at that portrait,\" Dante said opening the door to his apartment and dragging her inside. \"Enough talk, remove your dress.\"\n\n\"Here? Now?\" Peri tripped over her words.\n\n\"Yes, leave it on the floor where it belongs, you can keep the boots. I like the boots,\" he smirked. \"They make your legs look longer,\" he paused before adding, \"Less stumpy looking.\"\n\nSomewhere in her mind she knew she shouldn't want to do this; she shouldn't crave this man's attention but in the end, it wasn't hard to remove the dress and her underwear revealing her flawed figure in all of its glory.\n\n\"Exquisite,\" he murmured advancing on her. She had thought he would run his hand over her as Josh tended to do but instead she found herself pushed to her knees. \"You will crawl like a good slave in here. This way,\" he turned and walked away from her.\n\nStartled she took a moment to take in what he had said. She wasn't a slave she was; she was what? A nobody that his brother had taken on a mercy date to an X-rated art gallery? She put her hands on the floor and crawled after him. She wasn't sure why, but his disregard of her feelings and his abrupt speech aroused her. She followed him into a bland looking room that held a strange chair at its centre. She remembered seeing one of these in her early research for Josh on a book about the BDSM culture.\n\n\"Have a seat and get comfortable,\" he said in a matter-of-fact tone that seemed to assume she would obey him. She looked at the chair as she approached it. It was leather, the narrow back and armrests seeming elongated and the seat though cushioned was segmented with three distinct and deep seams. The leather was cold against her bare skin as she slid into the seat.\n\nShe watched as if from far away as he bound her wrists and ankles to the chair. This was Dante, not Josh. She had gone to the gallery with Josh she reminded herself and went to lift her hand to stop him but it was too late, and she had forgotten how to speak, her protest coming out like a squeak. He moved behind her and after a series of loud clicks, the part of the chair under her bottom fell away leaving her resting her weight on her thighs. She looked up at him nervously as he came back into view and stood in front of her. He placed his hands on her knees and what remained of the seat split in two as he pushed her knees apart, the base of the chair swivelling outward moving her ankles apart simultaneously.\n\n\"Look at you so wet and willing,\" he said in a deep rumble so similar to Josh's voice when aroused. \"I always knew you were a pain slut,\" he accused, and she blanched at the word slut. He gripped her nipples and pulled them out from her body raising her breasts to unnatural peaks before releasing them to bounce back to her chest. She whimpered as he gazed at her a moment longer, before moving from her view again.\n\n\"You'll need a safe-word though I am sure it is unnecessary for such a needy slut,\" his voice was emotionless as he spoke from somewhere and everywhere around her. A sharp crack punctuated his words making her jump and she strained to see where he was in the sterile room. He appeared again with a long leather flogger in his hand. \"You're safeword will be Wah-wah,\" he said in a mocking tone. She blushed deeply and hung her head what would Joh say if he found out she was here like this with his brother. He was a jealous man; they had talked about his feelings of her being with someone else during her trial, and she knew he would not approve of this. \n\n\"Are you going to use your safeword already like a scared little bitch?\" he taunted her. \"You know you want to be here with me as much as I want you.\" His wrist flicked out, and the stinging tendrils of the flogger caressed her breasts leaving their mark on her skin. She gasped and looked up at him. \"You know this is going to happen. It's inevitable. You've known for some time how I feel, why deny that you feel the same way,\" the flogger whirled before her eyes as he moved it in a figure eight, colouring her breasts from both sides with painful red welts. \n\n\"Admit it, admit you fantasise about being with me, just like this,\" he demanded letting the flogger rest at his side so she could take a moment to answer him. Peri was hurting, and she knew her body was betraying her arousal at being here at his mercy, she looked up at him trying to focus on the man who seemed to morph between both himself and Josh. \"you're even more beautiful when you cry,\" his voice softened, and he bent to kiss her tenderly. Accepting the kiss, was as if she had accepted his use of her, and he stepped back with a smile.",
        "The flogger moved before again but rather than focusing on her breasts his hand looped down, and it crisscrossed over her belly and cunt as well now. She arched in the chair and cried out as the wrongness of the whole situation added to the painful flogging she endured. He closed the distance again his hand cupping her cunt and delving his fingers into her. His thumb rubbed over her clit as his fingers moved within her hot wetness and she gasped feeling her legs tremble. \n\n\"I know what you need Peri. I know what you and Josh need you just have to let me in, and we can all be happy,\" he crooned his face so close to hers she could feel his hot breath on her lips. Her body shook within the restraints as he approached the point of no return. She arched up straining against the bonds and the hand that manipulated her so well in the beginnings of what promised to be an intense orgasm.\n\n\"I thought I'd find you here,\" Josh's voice sounded from inside the room, and Peri froze her eyes widening. She felt his hands slide over her shoulders to her breasts and his voice murmur in her ear, \"Having fun, Mine?\" \n\nPeri woke with a small cry and looked around the hospital room. \"It was just a dream,\" Bridgette crooned from beside her stroking her hair from her forehead. \"Shh, sleep now, you need your rest.\"\n\n\"It was just a dream,\" Peri said drowsily taking a slow breath. \"Just a dream,\" she repeated as her heavy eyelids closed. Her mind though whirled with images from the dream. \"I just gave birth, I shouldn't be having a sex dream,\" she berated herself silently, but her thoughts continued to jumble with images of the two men and she realised she loved them both. With Dante, she felt the closeness and warmth of their partnership. He shared everything with her over the last six months, possibly more than Josh in their everyday lives. Everything that was except, intimacy. She considered the dream and why it might have manifested that way as she dozed lightly, too scared to fall truly asleep.\n\n*****\n\n\"The new table begins,\" Joseph said handing pictures of his newest grandchildren to his brother. Smiling he turned to Andreas and clapped him on the back, \"The Gods have not always been kind to us this year but look at what riches are coming to us now.\"\n\n\"It is good to welcome new life into the family,\" Andreas nodded. \"How is the girl?\"\n\n\"She is a strong girl, Joshua chose well, and now the babies are here we will start to prepare them for the future. She will grow to understand the burden she must bear, as will my sons.\"\n\n\"In time perhaps, Joshua may find some of the necessary arrangements unpleasant at first,\" Andreas said cautiously. \"The new generation have a different view of such things, but I don't doubt his commitment to the family.\"\n\n\"We were not so different. We thought we knew it all. It is a shame that Christo died before Joshua got to know him better. It perhaps would have made the transition smoother for him,\" He said in a considered tone. \"You have done well stepping into the role, but you could not provide all that Christo did for the family, it would not have been fair to anyone.\"\n\n\"I think you underestimate them, the Donati family has always thrived and ruled the twelve tables. All tables may be seen as equal to those that know no better, once they know and accept our role in the grand scheme of things I believe they will be more than willing to step up and become the next leaders to take our family into the future.\" Andreas had given up a lot when Christo died and had come into the real family knowledge later in life. He had a different way of looking at things to his brother who had been born to lead.\n\n\"Jules and Romey believe they are now the ones most likely to succeed. They have had a keen insight into the family workings from a young age and were favoured by Christo. It's why they never rebelled as the others did. They understood there were watchers. They chose their wives carefully from the opposite ends of the spectrum and attaining a legal background gives knowledge that others can't grasp. Christo told them much, possibly too much, and they will need their places to be respected in the order of things,\" Andreas continued.\n\n\"Yes, they will be an asset to the family, but they are not leaders, they are soldiers, as you once were. Their knowledge and expertise will make their roles easier in this modern world. Now the time has come for us to manipulate the final pieces into place. We waited long enough for the right elements to present themselves and have taken care of the major risk to our plan. There can be no going back now,\" Joseph said sadly. \n\n\"We lost far more loved ones from our generation,\" Andreas said without emotion. \"And whether Nik was compromised or whether she was a monster of her own making is still debatable. She is heavily monitored and if something occurs before the enigma is solved, then we will take steps as we did with the other breech.\"\n\nJoseph checked his watch, to hide the pain he felt. \"It's time,\" he stood and they went down to the dock where a ship was moored. It was an unimpressive vessel that looked like it had been sailed through many rough seas and storms during its time as a trawler and fishing boat. The exterior was old and needed a facelift, not unlike himself he mused.\n\n\"Been waiting long?\" Andreas asked conversationally. \n\n\"Not as long as I will for the last person to arrive,\" the burly young man answered with a dry laugh.\n\n\"If they are not here in ten minutes we leave without them,\" Joseph muttered and continued below deck. Unlike the exterior of the big old ship the interior was state of the art with all of the modern comforts available to the seafaring community.\n\n\"Vincenzo,\" Joseph embraced his brother relishing the feel of the man he spoke to most days but rarely saw. \"It's so good to see you.\" \n\n\"You old fool, you see me every day,\" the man said gruffly. \n\n\"We are all getting old,\" Joseph said releasing him the embrace. \"Manny's the only one who wears it like a badge, though,\" he turned to greet his grumbling brother.\n\n\"Shut up,\" Manuel grouched at him. \"Sit down and have a drink, we've got a long night ahead of us.\"\n\n\"Have you heard from Charles?\" Andreas asked Vincenzo.\n\n\"Con's plane was delayed, they're on their way,\" he said as Andreas walked to where Joseph had taken a seat near Manuel.\n\n\"So Josh's chubby bubby had a litter of pups I hear,\" Manuel said goading his brother into defending the young woman.\n\n\"Do you want to see the photos?\" Joseph said proudly not taking the bait of his taciturn brother.\n\n\"Fuck, do I have a choice? That'll teach me to keep my big trap shut,\" he grumbled but took the pictures Joseph had pulled from his pocket.\n\n\"There's more on my phone when you're done with those,\" he offered with a perfectly straight face.\n\n\"Each of the men congratulated Joseph on the new additions to his family and spoke of their grandchildren proudly until fifteen minutes later Charles walked in with Constantine beside him. Even as they had aged and with a great distance between them the identical twins remained almost impossible to tell apart.\n\n\"Con,\" Joseph stood and embraced his brother kissing both his cheeks. \"It's so good to have you home. How are things on the continent?\"\n\n\"I'll give you a complete report once we've dealt with the business at hand. Triplets in the family hey? That deserves a toast,\" he embraced Joseph a second time. \"Pour us some drinks you grumpy old bastard,\" he grinned at Manuel, who grumbled but filled the glasses. \n\nThe engines whirred quietly to life, and the ship began to move away from the dock as the men toasted each other and enjoyed the friendships born of brotherhood and a lifetime of experiences together.\n\n\"Let's get on with this then,\" Manuel grouched and stood leading the men forward into the prow of the ship \"We're not here for a cruise, we all know decisions must be made and soon.\" He stomped over to the table and took his chair. As the men took their seats, they took a moment's silence for the four empty chairs at their table. Of the ten Donati brothers of their generation only six remained.\n\n\"I'll begin,\" Constantine cleared his throat. \"I've been kept abreast of family business, and Emilio was the likely candidate to assume my mantle as Ambassador. He had a gift for languages and a charm that put people at ease, I expect that's why he was compromised.\" He paused and looked at his brothers, \"His loss to the family was a necessary evil, and I suggest they will not be expecting or even suspect a married man. Jules and Bianca could make an impact with the representatives, but they would need to return with me and start acclimating not only to the country but the people they would need to make their friends.\"\n\n\"Jules and Romeo may as well be Siamese twins,\" Vincenzo scoffed. \"They act as if with one thought, never alone.\"\n\n\"Romey holds Jules back,\" Andreas interjected. \"I believe that they are following his plan for ultimate leadership. He is cold and calculating. He's happiest when his siblings fail, or he can point out their mistakes in his effort to show himself as the front runner for leadership. It was he that gleefully went to confront Nik when she was arrested.\"\n\n\"He made a very moving speech at the funeral, though I wouldn't be surprised if Jules wrote it for him, or at least co- wrote it. He was always better with those sorts of things,\" Vincenzo defended his nephew who never seemed to put a foot wrong\n\n\"Jules was always better with languages in general. He's my first choice, but I would take Ben even though Emily does not have the same style Bianca possesses,\" Constantine laid his cards on the table. \"Angelo and Carlo are too uncouth though given a month in charm school Carlo could look the part, but he has no aptitude for language. Dante lets his emotions get the better of him. He's dark and moody which is a deficit in my role. Carmen is not even close to being in the same league as these women so no to Romey. Josh would be too big of a loss for the family here, he is loved and respected by each of his brothers, and now he has started his family, I'll vote him up as the new Chair if he is one of the chosen.\"\n\n\"Could be good for Ben, he is the second son,\" Charles advised, \"And he believes it is his right to inherit the seat. He oversees the family in the city as if he already has an ass cheek on the cushion of the Chair,\" Charles snorted. \"The reality is, however, that he is perfectly poised to take over for Vincenzo. Emily will die if she tries to have any more children and for better or worse the man loves her deeply.\"\n\n\"He would be my first choice as Watchman, he knows more about each of the family members than anyone else and he has compassion enough to try and understand the reasons behind decisions being made. He also lives his life with the good of the family in mind,\" Vincenzo began to lay his cards on the table. \"Dante maybe if he mellows after the death of his brother. He's been almost happy in the months before his brother's death and hasn't bottomed out as we feared he might. Jules, Carlo and Ang are maybe's each have the ability and temperament in some form. I think it would be too much of a conscience wrestle for Josh, and Romey would use the information at his fingertips for his own benefit at times, so no to both of them.\" He turned the last two cards bearing those names face down.\n\n\"Dante or Carlo, with CJ remaining with whoever takes over,\" Manuel announced into the silence. \"Maybe Ang, maybe Josh, the others are useless to me.\" He didn't beat around the bush as he put his votes on the table. \"I'll go with Con on the vote for Josh as Chair,\" he pushed the one card further up from the others in front of him. The role of engineer has to go hand in hand with the tech role these days, so it may as well stay combined,\" he grumbled.\n\n\"Romey or Dante,\" Charles moved his cards into place. \"None of the others has the ruthlessness for Human Resourcing.\" He looked at his brothers, \"I'll put up a card for Josh too.\"\n\n\"In light of how this is proceeding,\" Joseph said with a sly smile and turned over a single card in front of him showing Josh and sat back looking at Andreas, the last to speak.\n\n\"I have held these two burdens long enough, and I am glad to be divesting myself of the burden Christo's death put on my shoulders,\" Andreas spoke carefully. \"I don't mind admitting I have helped to groom Josh for leadership. I had hoped he would succeed me in my role as Chamberlain, but as he grew to manhood, there was much of his father about him. He became an exacting man demanding the best from those who surrounded him and took nothing less, but it has always been tempered with honesty and fairness. While he would make an extraordinary Chamberlain I too will vote him to lead the future of our family and take the Chair of the new Donati table.\"\n\nThis announcement was followed by each of the men tossing their cards showing Josh's name to Joseph, who set them out before him in a row of six identical cards.\n\n\"I agree that whoever succeeds Manuel should work closely with CJ, who has already taken up Zino's role as Tech,\" Andreas began to deal with the business of the brothers who had succumbed to untimely deaths. \"Pete is like a brother to these men, and it is only right he take his place at the table as Physician in Bruno's place.\" He paused while they all nodded their agreement. All assumed it but it was necessary to have it formalised. \n\nCharles had sent his children to the farm to be raised with their cousins after his wife had died. Each of them had strived to prove they were as deserving of places within the family as the children of Joseph and Antonia. They deserved their places on the new table alongside their cousins and with Josh leading the table these men knew they would be welcomed as equals.\n\nThere are seven brothers however, and I hold two roles. Firstly, that of Chamberlain,\" he spread out one set of the cards he held before him. \"Ben has already taken on much of the lighter responsibilities of this role. To retrain someone else would be a waste of valuable time that will be needed elsewhere as we prepare the new Oracle and leader for their twin roles.\" He turned over a single card and looked at his brothers as if daring them to argue with him.\n\n\"He was one of my first choices,\" Constantine spoke first looking serious, but then grinned, \"Seeing as no one else asked for Jules, who was the best of my choices, I'll take him.\" He tossed his card of Ben and signalled to his brothers. \"Gimme me your Jules, you know you want to,\" he chuckled. Then once they were arranged in a neat line, he sat back from the table as Joseph had.\n\n\"Ang could do it,\" Vincenzo argued, \"He has a business degree and honestly Ben doesn't do that much other than give his siblings their pocket-money. He has to go to you for finances for business purposes. Ben is best suited to Watchmen. Dante as a second choice if you feel Ang isn't up to it. He could do it but not as well as Ang in my opinion.\"\n\n\"I gotta go with Vinnie on this one,\" Joseph leant forward and threw his Ben card to Vincenzo. Andreas saw Charles and Constantine side with Joseph as they always did and Andreas smiled. This was going to be easier than he had thought when Joseph had come to him with a plan to stack the votes in their favour for the optimum outcome.\n\n\"Ang, it is then,\" Andreas admitted defeat on the vote and tossed his two Ben cards over and replaced it with Angelo's. \"Now as I see it regarding preference, only Charles has put up Romey, and Manuel has Carlo neither of who are suitable for Oracle, which leaves me with Dante, who I believe is the best man for the role.\"\n\n\"With Josh as leader, he is the obvious choice,\" Vincenzo agreed. \"Given recent events I suspect they will make a formidable team.\"\n\n\"Alright done,\" Manuel said gruffly keeping only the one card in front of him. \n\nCharles nodded but said nothing also choosing the one card to sit before him. The role of Oracle was the true power in the family and one that left the holder vulnerable to opposing shadow organisations. Dante could never be like Christo. He was strong and opinionated. Perhaps as Vincenzo suggested, recent events would mellow him, and he could find a way to make it work. \n\n\"That's nine of our own if we include Lucia's husband Dino as the warrior we have ten,\" Andreas spoke of the obvious choice of Lucia's husband who belonged to the Battaglia family and had strong ties to the ruling family there.\n\n\"He's a good choice,\" Vincenzo added weight to the conversation. \"I'll veto Giovanni right now as well. The man has no spine, and we may as well put Izzy on the table.\" There was a murmur of agreement. \n\n\"That leaves two chairs. Anyone want to duke it out for their kid? This quorum has been altogether too nice,\" Constantine chuckled.\n\n\"I'm too old for this shit,\" Manuel grumbled. \"My boys will continue working for Carlo as they did for me. They know enough to be an asset if ya want 'em, but I won't be fucking fighting to make this shit their life, they like their freedoms.\"\n\n\"Charles has two in already, Constantine is still living like a playboy and Andreas shoots blanks, so why don't you and I split the difference and throw in one each,\" Vincenzo said in response to Manuel's outburst. \"Dominic will make a good second to Ben,\" he gave up the name of his second son.\n\n\"Lorenzo knows his place and will be loyal,\" Manuel said with some pride rather than the grumbling words that usually fell from his mouth.\n\n\"That's twelve,\" Joseph said with an air of finality before anyone could say anything more. The whole business of selecting the new table had been smooth and devoid of argument, thanks to a little creative manipulation on his and Andreas's parts.\n\n\"We will gather on the day of the epiphany at the House of Lorraine,\" Andreas said then. While Joseph was the public face and official leader of the Donati family, there was no doubt in anyone's mind who held the real power in this room and once again Charles worried whether his dark and brooding nephew was up to the responsibility of it. Joseph could and would use his power over the family to countermand Andreas, but the leader was reliant on the Oracle, who saw all and heard all within the family. It was a delicate balance, and he hoped that the two young men could find that fragile balance. \n\n\"Why can't he just say, January sixth,\" Manuel grumbled scratching at his cheek. \"Fuck I need a drink.\" He stood and opened the door back into the entertainment lounge and came back with a bottle to pour shots for them all. \"I told them to head back to the mainland, no use hanging around in this leaky old tub.\"\n\n\"Funny that's how I usually describe you,\" Vincenzo said dryly in response to his home being insulted. The conversation relaxed, and the older men seemed subdued as they talked of plans they each had for their replacements on the table and their eventual retirement.\n\n\"I remember when we were twelve taking up the mantle of geopolitical affairs,\" Constantine mused. \"Even if they know twice as much as we did at the time, I wouldn't be planning those retirements yet.\" He chuckled. \"With half of our table gone we will all be pulling double duty to get the ready for what must be done.\" There were murmurs of assent around the table. Then Manuel started to laugh, a dry, hoarse sound that made them all look at him. \n\n\"I just remembered when Zino created that computer game back in the '80's for his personal enjoyment and then forgot about it,\" he continued to laugh. \"His kid Frankie found it a decade or so later and sent it to all his cousins.\"\n\n\"Heh, Pete tried to tell me it was one of Bruno's interactive anatomy computer models,\" Charles shook his head. \"Frankie hasn't changed any. He's one of the best trainers we have now.\" The men continued to reminisce about the early days of their table and the mistakes made as they grew into their roles.",
        "\"Ya drink like a fish,\" Manuel accused Constantine picking up the empty bottle. \"Let's go back to the bar where we won't run out in a hurry,\" he said giving Vincenzo a cheeky grin.\n\n\"You don't have to ask me twice,\" Constantine responded, and the two men led the others back out into the entertainment lounge.\n\n\"Well played,\" Vincenzo murmured to Joseph as the others began to move back into the comfortable lounge. \"I wondered how you were going to get that to play out. I doubt Dante would have been anyone's f irst choice for Oracle. I expect there is more going on between the three of them than even I know,\" he said his voice rising at the end of his comment as if it was a question.\n\n\"We have reason to be cautiously optimistic,\" Joseph gave a sly smile. \"As always the mother of the table is the key to everything.\"\n\n*****\n\nPeri smiled as her phone buzzed softly below her pillow. She never minded getting up during the night for her babies, and she wanted to feed them as much as she could on her own. She'd managed over the weeks since bringing the babies home to begin expressing enough milk to be able to sleep through the night and have the nannies feed them, but she liked to do it herself. She slid from the bed trying not to wake Josh, who had been working hard going into work at dawn so he could be home during the evenings when the babies seemed most alert and happy.\n\n\"Do you want me to come?\" he murmured as she pulled a light robe around her to ward off the small chill of getting out of a warm bed.\n\n\"No get some sleep, I like the quiet night time feeds,\" she said softly leaning over to kiss his cheek realising he was not truly awake. \n\nShe walked through the short corridor to the dimly lit nursery where Madeline stood holding Blaze. The nannies took shifts during the night, but the babies were good and tended to sleep well, and seemed content to wait their turn when they began to wake to be changed and fed. \n\n\"Blaze is always hungry,\" Madeline said softly. The doe-eyed girl's gentle nature endeared her to Peri, who smiled.\n\n\"It seems so, but I don't mind. I love his chubby little cheeks,\" she held out her hands for her son. \"Hello my handsome boy,\" she whispered stroking his cheek. \"Are you hungry already?\" She asked rhetorically taking a seat in the cushion rocker she used for feeding during the evenings. Peri began feeding Blaze and Madeline picked up Cruze and went to the change table. The middle of night feeds seemed eerily quiet; even the babies seemed to cry softly in the dim light. \n\nThe babies had easily adapted to the four-hour routine starting at six each morning and going through ten, two and then starting all over again at six in the evening. Pete and Dr Bliss had come to do the babies weekly check-ups and were pleased with the amount of weight each had gained. Eden continued to lag behind the boys as she lost a good deal more of her birth weight in the first few days in the hospital. At two weeks she was almost back to her birth weight while the boys continued to make gains, Blaze more so than Cruze. They were happy and healthy babies and she was enjoying every moment of motherhood.\n\n\"I'll take him,\" Peri said softly, \"Can you give Eden a small bottle and I will feed her first next time?\"\n\n\"I'd like that, Peri. Thank you,\" Madeline arranged Cruze onto the feeding pillow for Peri and went to pick up Eden. Bridgette had become territorial with Eden and the other two younger girls rarely had the opportunity to change or feed her. Madeline was enchanted with Eden and her small pixie like face, and she hurried over to the crib that held the squirming, pink bundle. \"Hello princess,\" Madeline whispered lifting her up to cradle her against her body.\n\nPeri looked down at her sons, all her worries about recognising them and loving them immediately had been unfounded. Her heart burst every moment she held them knowing that she had created these little human beings within her body. Josh was a proud father who seemed to revel in his instant family. He got up before her in the morning and dressed for work before going into the nursery and waiting for the babies to wake so he could spend some precious time with them and feed one or possibly two before he left for the day. It was the one time of day when her phone didn't buzz to wake her and Josh would bring in the still hungry baby for her to feed in bed. While they talked for a few minutes before his left to start his day.\n\nPeri went back to bed after the babies were settled again, sliding in and snuggling up next to Josh. She couldn't imagine being any happier with life than she was at that time. She only had one niggling worry which for the most part she chose to ignore. She'd had several dreams about Dante since having the babies and the morning after them she found it hard to look at him over breakfast which they always shared together.\n\nJosh and Dante seemed to have bonded even closer because of the shared experience of bringing the babies into the world. Peri tried to tell herself that the dreams had come from that bonding. It was as if she had two husbands now and although she lacked the sexual intimacy with Dante it seemed they were intimate in a different way. He had seen her at her worst and most emotional and yet had nothing but love for her. She just had to convince herself of that and the dreams would subside she decided.\n\nShe could talk to him about anything and everything, and he often asked about how the details of how she was recovering and the state of her breasts. She was a little embarrassed at first but as he pointed out he had been there and seen her as she gave birth, so after that she had nothing to be embarrassed about with him. She tried to rationalise the dreams and her feelings for him from that perspective, but it wasn't always so easy.\n\nPeri woke as Josh kissed her forehead and lay Eden on the bed beside her as he sat on the edge of the large bed. She sat up, and he helped her prop up the pillows behind her back. Picking up her little girl, she smiled softly and looked up at Josh. \"We make the most beautiful babies.\"\n\n\"Good morning sweetheart. Did that big bad Papa wake you up?\" she crooned as she opened her wrap around nightshirt and offered the nipple to the baby's open mouth. \n\n\"As if I would do that,\" Josh chuckled guiltily. \"I've got to go in early this morning. D. and I are going to meet with Papa and Andreas this afternoon so I will be home around lunchtime,\" he said softly watching her nurse his daughter.\n\n\"They're coming here?\" she looked up at him.\n\n\"Andreas will use any excuse to come and see the babies; I wouldn't be surprised if Marisol and Mama are with them as well,\" he mused. \"It's not a problem is it?\"\n\n\"No, of course not,\" she said quickly, \"You could have told me last night,\" she said with a slight complaint.\n\n\"Why what would you have done differently last night if you knew earlier?\" Josh was amused by her comment.\n\n\"I guess I wouldn't have, but that's not the point. You and Dante seem to be running rings around me lately, and I feel right out of the loop,\" she tried to explain how she was feeling.\n\n\"You have three little people to look after now and a house full of new staff, we are just trying to lighten the load a bit,\" Josh held her hand. \"You're the most important person in this whole house, everyone who visits comes to see you, not me or D. and if we didn't treat you like the queen of the castle, there would be something wrong. Plus, Mama would probably skin us alive.\"\n\n\"When did you become we?\" she asked carefully. \"I knew you were a close family, but I suddenly feel like I have two husbands or something like that.\"\n\n\"Is that such a bad thing? He needs us, he's been lost without Lio, and we have become his anchor, his surrogate,\" Josh said seriously. \"He's shared one of the most important days of our lives, more than one if we include the wedding. I'm not asking you to sleep with him,\" Josh chuckled misreading the strange expression that came over her face as he said the words. \"We've talked about this. I thought you agreed that he should be part of our family.\"\n\n\"I did, I mean I do, think that,\" she shook her head slightly. \"It just seems like you are becoming interchangeable lately and it's taking some getting used to,\" she admitted.\n\n\"For you and me both but I feel better knowing he's here, especially when I can't be,\" Josh said. \"You're mine, and I admit that normally I'm not good at sharing,\" he grinned. \"It's different with D. though. He doesn't push or cross any lines, he just takes what we give him without crossing any lines. I'm happy he is here and we,\" he stressed the word, \"are a family. He loves us, and he is possibly the one person I trust to look after you and the babies the way I do.\"\n\n\"I understand,\" Peri said and lifted her free hand to his cheek in the familiar gesture of love. \"Thank you for telling me that. I trust him with the most precious things in my life, too,\" she looked down at Eden, who continued to nurse happily.\n\n\"I have to get going we can talk more about this tonight, with him if you like,\" Josh offered before kissing her and dropping a kiss on Eden's little cheek. I'll see you at lunch time my beautiful girl's\"\n\n\"Have a good day, we'll be here waiting for you,\" she said softly watching him stand and smooth out his pants. \n\n\"Have a good morning. I love you,\" he said turning and walking from the room.\n\nPeri finished feeding Eden and got up from the bed to return her to the nursery and say good morning to her boys. \n\n\"Their Papa wore them out with a big playtime this morning,\" Heather the second of the nannies whispered as she entered with Eden. \n\n\"That's okay I will have my playtime with them at the next feed,\" Peri whispered back and placed Eden in her crib patting her gently until she was sure she was settled and asleep once again. \"I need to get a few things done this morning anyway, so this will give me more time.\"\n\nPeri took some time to express and fill up the extra bottles needed for her hungry babies after not having to feed the boys this morning, then went to have a shower. She let herself enjoy a long shower pampering herself with the myriad of products she had been given as a new mother. The girdle from Dr Bellino had helped greatly, but she hated that her belly still felt so spongey, and the stretched out skin puckered in places. She needed to be more routine with her visits to the gym room Josh had built in the cellar. She knew that she needed to be doing more pelvic floor exercises at the very least. \n\nPeri walked out of the bathroom wrapped in a towel to find Dante in her room. She let out a squeak of surprise as she saw him lounging on her bed looking at his phone.\n\n\"I missed you at breakfast and thought you may not be feeling your usual energetic self this morning so I brought you breakfast in bed,\" Dante grinned at her. \"Except you are no longer in bed,\" he said plaintively.\n\n\"No, you're in my bed,\" she laughed and shook her head. \"If you let me get dressed I will come out for breakfast in a little while. I need to dry my hair and try and look halfway decent if we are having visitors this afternoon.\"\n\n\"You always look great,\" he scoffed. \"Motherhood suits you.\"\n\n\"Have you had your eyes checked recently,\" she raised an eyebrow at him. \"I still look six months pregnant,\" she exaggerated, but her belly still seemed swollen to her. She walked through into the wardrobe out of his sight and pulled on some underwear and the girdle Dr Bellino had prescribed before picking up one of the firm fitting maternity bras. \n\n\"Want any help in there?\" Dante called out with a chuckle.\n\n\"No, I've been managing to dress myself for a few years now, thanks anyway,\" she called back. Choosing a loose fitting skirt and one of the cross over blouses Andie had found her, that were so easy to breastfeed in, she quickly dressed. Then walked back into the room towelling her hair dry.\n\n\"Eat something,\" he encouraged as she brushed out the tangles in her wet hair.\n\n\"Fine,\" she said picking up a bowl of muesli and yogurt, sitting on the edge of the bed. \"I think you have all forgotten I am a grown-up too and can look after myself.\"\n\n\"You're so cute when you pout, now eat your breakfast like a good girl,\" he chuckled. He sat up helping himself to a piece of cold toast as she ate. \"I think I will go and check if my baby is awake enough for a cuddle before I go into work.\" \n\n\"Blaze is not your baby,\" Peri laughed. \"The other two are going to think you don't like them at all if you keep this up.\"\n\n\"You forget Carlo won Josh's first born son in a bet years ago, so I have to claim Blaze before Ben gets his hands on him. You can keep Eden, it's not like you don't have a few babies to spare after all,\" he said as if it was perfectly reasonable logic. \n\n\"You and your brothers are going to drive me insane long before my boys do. Thank goodness I had a girl to even it all out,\" she sighed dramatically.\n\n\"See it all works out. I don't know what you're complaining about,\" he chuckled and walked down the small corridor to the nursery.\n\nPeri shook her head and finished her breakfast inspecting the ends of her hair. She wondered if Andie knew a hairdresser that would come to her home all the way out here. She still wasn't ready to leave the babies with their nannies and go out for the morning. She was content being at home and being at their beck and call. She blow-dried her hair, brushing it out as straight as she could, before pulling it up into a loose ponytail so it sat softly around her face.\n\n\"Well, this is as good as it gets,\" she said to her reflection and pulled a face.\n\n*****\n\n\"Zio!\" Josh greeted his Uncle Constantine with a warm embrace. \"It feels like years since I have seen you.\"\n\n\"Triplets how could I not come and see such a miracle,\" Constantine said loudly in cheerful tones returning the embrace.\n\n\"If we waited for an invitation we'd never see them,\" Manuel pushed through the door past the two men grumbling in his usual gruff way. \"Dan, go and tell that little Mama we are here to inspect her handiwork,\" he grouched at the stunned Dante, who was embracing Constantine.\n\n\"Yeah, we'll bring them out to the living room,\" Dante seemed to recover himself enough to realise that this many visitors would be too much of a crowd for the nursery.\n\nJosh stood back greeting each of his five uncles as they followed his father through the door feeling like he had just been ambushed. \"Better go and tell Bridgette to do her loaves and fishes trick,\" Josh quietly instructed the house maid who stood near the door collecting jackets as the men entered.\n\n\"Yes, Sir,\" she gave a small curtsey and hurried off after resting the jackets on the entrance sideboard carefully.\n\nDante had gone the opposite direction in search of Peri knowing he would find her in the nursery, She had known Joseph and Andreas we coming and that the babies would need to be changed and ready, but to have the full table of men here was different, and he wasn't sure how to explain how momentous it was to have them all in one room at the same time. \n\n\"Peri, you remember when you researched the current table of Donati's,\" Dante asked without preamble.\n\n\"You and your brothers were not exactly research,\" she laughed.\n\n\"No the current table,\" Dante said with an urgency in his voice that made her look up from the baby she held in her arms.\n\n\"Yes, your father and his brothers, there are six still living including him,\" she smiled, \"Why what's wrong is there a problem with the research?\"\n\n\"No but you need to remember all of their names and pictures because they are all in the living room waiting to meet you and the babies,\" Dante said. \"It's a big deal. I can't even remember the last time I saw them all together. Not even at the gathering.\"\n\n\"I'm sure they are just curious about the babies. Triplets seem to get a lot of attention I am finding,\" Peri gave a soft smile and tickled Blaze's chubby cheek. \"Let's not keep them waiting then. Here, you can take your baby,\" she teased and handed Blaze to his uncle and went to pick up Cruze. \"Madeline, could you bring Eden please?\"\n\n\"Thank you, Ma'am,\" Madeline said happily and immediately swept the little girl into her arms.\n\n\"Once we are settled could you bring in two of the rockers?\" Peri considered the nursery. \"We may not need them but just in case. She picked up a few small towels for accidents and led the way back to the living room confidently. She was proud of her babies and loved being able to show them off to visitors. She hadn't expected the feel the powerful presence of these men when they all stood as she entered.\n\n\"You must be the little Mama I have heard so much about,\" a man she thought was Charles stepped forward to greet her.\n\n\"You have known me for quite some time now Charles, you gave me away at my wedding,\" she gave a confused laugh as he kissed both her cheeks.\n\n\"I'm the better-looking twin, Constantine,\" he chuckled. \"That fat guy over there is Charles,\" he pointed to his mirror image.\n\n\"Gosh, you look identical even at your age. I'm so sorry,\" she blushed realising what she had said.\n\n\"And who is this handsome young man?\" he asked taking Cruze from her arms. \n\n\"Cruze Joseph,\" she whispered watching how he held her son and satisfied that Joshua was close by she turned and took Eden from Madeline. \"This is Eden Ann and Dante is holding Blaze Emilio.\"\n\n\"Interesting names you have chosen,\" he smiled and began to sway slightly from side to side as he held the baby.\n\nPeri was introduced to each of the men she had not as yet met, and she smiled at the gruff Manuel embracing him and whispering her thanks once again for the work he had done on her car and asking if he might make sure it could be fitted with three safety belts for the baby's capsules. \"I just couldn't trust anyone else,\" she said sincerely, appealing to his pride.\n\nAndreas and Vincenzo hung back from the others watching as Peri spoke with the others individually, charming each of them in her own way. She listened and discovered something about them that she could engage with before beginning to speak. When she could have bored them all with talk of baby milestones and the joys of motherhood she refrained and made each of her conversations more about them than her new family.\n\n\"She's impressive to watch in person like this,\" Vincenzo said. \"I knew she was what we needed but to be proven right is so refreshing.\"\n\n\"You need to get out more,\" Andreas said dryly. \"I guarantee Ben won't be happy being stuck on that barge twenty-four hours a day.\"\n\n\"What he does with the role is his choice,\" Vincenzo shrugged. \"I'm happy to retire on the old girl if Ben doesn't want her.\"\n\n\"I had hoped that Josh would build on my place and take over the winery when I retire. Marisol and I intend to travel eventually,\" Andreas said.\n\n\"We still have a few years yet until they are ready, but it seems closer now than it ever was,\" Vincenzo murmured, seeing Josh walk toward him with a baby in his arms.\n\n\"Have a seat Papa,\" Andreas moved over so Josh could sit between them. \n\n\"Is someone going to tell me why all of you are here together. I'm not stupid enough to think this is a social call anymore,\" Josh looked directly at Andreas who he believed had always been honest with him.\n\n\"What's for lunch?\" Andreas asked, \"I'm starving how about you Vin?\"\n\n\"Starving,\" he agreed. \"I've heard this cook is good though so I bet it's worth the wait.\"\n\n\"Give me Princess Eden and go and check on lunch for us,\" Andreas said with a grin. \"She is such a pretty little thing, not like the usual babies who don't get any personality for a couple of months. She's a heartbreaker already.\"\n\n\"You're going to have to tell me eventually,\" Joshua grumbled.\n\n\"I suppose we will eventually,\" Andreas agreed causing Vincenzo to chuckle. \"I bet you're getting hungry too aren't you little one,\" Andreas spoke to Eden in a crooning tone. \"Your Papa is going to find us both some food.\" Eden stretched and looked up at the man holding her as if recognising the words making him smile.",
        "With the extra help she now had, Bridgette managed to pull together a small feast for the eight men, sending a plate to the nursery for Peri, who had retired there to settle her babies and get ready for their mid-afternoon feeding. She had apologised for her absence at the meal and promised that should they visit again in the new year she would be the perfect hostess.\n\nJosh's patience was wearing thin by the time the lunch ended, and he could tell that Dante seemed equally impatient and on edge. They waited because any attempt to draw their uncles out on why they had all come to meet with them and why they both had been asked to be there was easily deflected by their uncles.\n\n\"We will use the spare suite, it has a table for eight,\" Joseph announced standing. Joshua, you can bring Peri to us now and join your brother in his suite and wait for us to be ready to speak with you,\" he commanded and walked away towards the guest suites where Dante now resided.\n\n\"Wait? What?\" Joshua and Dante said almost in unison. \n\n\"No harm will come to her we merely wish to speak to her,\" Joseph said over his shoulder not entertaining any further argument. Josh looked to Andreas for help but he merely came closer to where Josh stood and looked at him.\n\n\"He speaks as the Chair now, not your father, do as he asks, Josh,\" Andreas said quietly and followed his brothers to the other end of the house.\n\n\"You can't send her in there alone,\" Dante said, concern evident in his voice and stance.\n\n\"What choice do we have? You heard Andreas,\" Josh said still considering the situation.\n\n\"We say no, we stand together and just say no. We aren't children anymore Josh. We are the next table. There has to come a point in time when they listen to us,\" Dante encouraged him wishing Emilio was there to be the voice of reason and suggest a valid reason they were all here at the same time and wanting to see Peri. \"At least give her a choice.\"\n\nJosh nodded, but he knew, if given the choice to obey his father who was indisputably the leader of a family much bigger than anyone realised she would agree to talk with them rather than disgrace her husband. He had no clue what was going on and that bothered him more than anything else. He hated not being in control of his world, and he was still feeling as if he was on very slippery slope with the babies and Dante both altering his daily routine and priorities. He needed to know what was going on and if Peri going to talk with them would get him the answers he needed then he would send her. If he didn't, he might never know the real reason they had come.\n\n\"D. just give me a moment to talk to her. I will give her a choice and she can decide,\" Josh said with authority placing his hand on Dante's shoulder as if to stop him from following him. Dante opened his mouth as if to say more but closed it again and nodded. Josh had drawn a line in the sand, and he was not about to jeopardise the bond they had created by defying him as well as his father. He swallowed his misgivings and sat back down pouring the dregs of the wine bottle into his glass.\n\n\"How did the lunch go?\" Peri asked quietly as Josh walked into the nursery.\n\n\"I don't know,\" Josh said honestly. \"Something is going on. They rarely come together like this. They want to talk to you alone, in the guest suite,\" his face showed his concern as he said it.\n\n\"Okay,\" Peri said slowly and tilted her head questioningly. \"I can't imagine why? There isn't another trial you haven't told me about is there?\"\n\n\"Not that I'm aware of,\" Josh shrugged. \"I feel like it's something important, though. I wish I knew what you could be walking into but honestly I have no idea.\"\n\nPeri could see that he was worried, and she put the baby she had been nursing into his crib. Taking a deep breath, she smiled at Josh. \"I love you, and I knew what I was getting into when I married you. I did all that research. I possibly know more than I should about your family and how the table works,\" she said quietly. She moved to him then and placed a hand on his cheek. \"I chose this life with you. I'm sure whatever they want to talk about will be nothing more than that I remember the lessons of my trial and know my place in this family.\"\n\n\"I love you,\" he murmured and kissed her wrapping his arms around her. \"You have a choice, and Dante is concerned that we do not know what they want. So as we go in, make sure he knows this is your choice.\" Josh did not want a rift between his brother and himself to develop over whatever was happening today. She nodded, and they walked toward the other wing of the house through the kitchen. Dante waited for them at the small corridor leading to the suites on that side of the house.\n\n\"Don't look so worried,\" Peri smiled at him. \"I'm sure they just want to ask me if I am prepared to have more babies in the future after having so many at once,\" she laughed lightly.\n\n\"You don't have to do this,\" Dante said looking at the closed door to the guest suite.\n\n\"That's so sweet and exactly what Josh said but I think we all know I do,\" she straightened her back and knocked lightly on the door. Without looking back at either of them she entered at the invitation and took the seat offered at the end of the table as the door was shut behind her.\n\n\"You did well in your research of our family and the tables that have sat at the head of it over time,\" Andreas said once she was settled in the chair. \"We have to commend you on that. You possibly know more about the positions each seat holds than we did before assuming our seats. I imagine you know more than the two men who wait for you on the other side of that door.\"\n\n\"Joshua vetted all my research, the book was his project for the family, I merely helped him with it,\" Peri said her loyalty to Josh making her push his efforts before her own.\n\n\"Tell me,\" Vincenzo interrupted pushing forward a sheet of paper that listed the position names and the work undertaken by each position toward her. \"Did Josh read this?\"\n\n\"I found random snippets of information that alluded to these, but I couldn't quite put my finger on any of them to say it was fact rather than just how some of the men were referred to because of their roles. Josh likes facts to be checked and doubled checked before adding them to information that is published, particularly by him, so I had planned to look into that further once I went back to work and had more time. Assuming that everything is moving along as planned with my team and there are no big issues for me to untangle when I return,\" she explained. \"It's an incomplete list of assumptions at best, at worst I have wasted some time chasing a few generations way of doing things.\"\n\n\"I see, so the short answer is no?\" he asked again.\n\n\"No, I didn't show it to him. Honestly, I didn't show him most of my notes. I guess my next question would be, how did you find it? I am sure I didn't allow anyone access to the protected files on my computer,\" Peri said curiously.\n\n\"I am the Watchman of my generation,\" he jabbed his finger at the list she had written some time go. \"I know more about you than you would be comfortable believing,\" he said with a sly smile.\n\n\"So this was fact?\" She asked her eyes widening. \"That's wonderful!\" Then her brow creased as she looked at the list and back at the six men around the table. \"There are more roles than men here, do you have cousins that come to the table to make the twelve? I mean, I'm guessing there should be twelve even though I have only found nine mentioned in my research.\" She was excited more by the discovery that she had been right than by the fact that the men surrounding her held those roles.\n\n\"A member of the Battaglia family joins each table as a warrior, and there are always two men at arms. These are lesser roles and can be taken as you said by cousins,\" Vincenzo answered her question again. \"You were right she has wisdom to go along with her intelligence.\" He nodded in the direction of Andreas and Joseph, who sat together at the far end of the table from Peri.\n\n\"What else can you tell us about this list and how the table is set up?\" Joseph prompted her.\n\n\"Well,\" Peri said nervously pulling the list closer. \"I believe that Papa is the Chair and the leader of this table. He drives the agenda, and it is his duty to populate the next table as best he can. The ultimate goal of having nine sons seems to have been out of reach of most of the tables I have researched. You came close though, Papa with eight.\" She lifted her head to look at him directly. In driving the family agenda, he links with the other tables both here and overseas to ensure the control of certain markets.\" She paused and looked at them nervously.\n\n\"That is a reasonable summary of my role, go on,\" he instructed, \"The Oracle?\"\n\n\"From what I could understand the Oracle is next to the chair, it's the Oracles role to mirror Chair. I had thought they would live together and share much of their lives, like living one life and sharing much of the leadership between them. The Chair is the public face and the Oracle holds the hidden power but that does not seem the case with this table,\" she paused and looked thoughtfully at how Andreas had pulled his chair alongside Josephs. \"I could be wrong about that though.\" \n\n\"Go on,\" Joseph encouraged not correcting her or giving further information.\n\n\"The Oracle would be the one to gather information from each of the other members of the table including the chair, predict issues that may occur in various sectors of family, finance or politics and co-ordinate a pre-emptive solution. Ah, I get where the Warrior and Men at Arms come in now,\" she said out loud although she was talking to herself now. \"Sorry, I just had an ah-hah moment,\" she gave a small nervous laugh. I had thought that the Oracle would possibly hold more power than the Chair but was protected by the Chairs public profile.\n\n\"My brother Christo was our Oracle, he died when Joshua was quite young,\" Joseph nodded to confirm her assumptions.\n\n\"The Chamberlain controls the family finances, not the general day to day things but the greater wealth accumulated by tithes and used by the Chair and Oracle in furthering the family agenda,\" Peri went on and found that with each role she named one of the men at the table identified themselves. \n\n\"The last two, the Physician, I assume is Pete, who looks after us all so well, and the Magician I assume was an alchemist, but I am unsure how that would translate into modern society,\" she finished lamely feeling like she had been talking for hours.\n\n\"Pete has taken over where our brother Bruno left off. Zino was our magician and worked mostly with technology though he was a fine inventor. The lesser roles are people who you have met but are of no importance at this time,\" Joseph said.\n\nPeri sat back and considered the men and why they would have gone through this information with her and identified themselves to her. She said nothing as her thoughts chased each other around in her mind and the silence stretched out between them all.\n\n\"There is a major point of power behind each table and one you touched on only briefly,\" Andreas broke the silence with his deep strong voice. \"There is always a mother of each table. A mother who brings forth and raises strong sons with family values. Our family values,\" his voice took on a strong tone, and she sat up straighter under the piercing gaze he gave her. \"Antonia has been the perfect Matriarch but then she was born and bred to assume such a role.\"\n\n\"She is a wonderful woman and has made me feel like one of the family from the first moment I met her, although I didn't know who she was at the time,\" Peri still couldn't understand why she was receiving this information. \"Emily is a wonderful mother, and when Ben steps up as Chair, I am sure she and her children will be the epitome of Donati strength and power.\"\n\n\"Why do you assume Ben will be given the Chair?\" Vincenzo studied her.\n\n\"He is the second son. It is his by right of birth isn't it?\" she said uncertainly. \"Papa was the second son amongst you all.\"\n\n\"That is true, but it is not always the way. You have not studied the other tables as you have ours, but you will find that the law states a younger son, not specifically the second son, may inherit the Chair. It was a second son who was chosen to begin a new colony in the new worlds when they opened up but that was more tradition than family law.\"\n\n\"I hadn't considered the discrepancy in the wording. I had just assumed younger referred to the second,\" she mused. She looked up at them then as awareness dawned on her. \"You are considering Josh for the Chair?\" she asked incredulously.\n\n\"That will depend entirely on you and our discussion here today,\" Andreas said seriously. \"Are you prepared for what will be required of you as Mother of the table?\" \n\n\"Josh and I have always talked about having a large family like the one he grew up in,\" Peri said quickly thinking that a large family was the main requirement of being the mother of the table.\n\n\"That is not a requirement but rather a given of any woman who married one of our sons. The Mother of the table must take on responsibility for maintaining family tradition and structure. She must know each and every member by sight and name, that includes aunt's uncles and cousins and can extend beyond that over time. She must cater for the gathering every year and a meeting of the twelve tables once a year. She must know each of the chairs well including their likes and dislikes, by being in constant contact with the Mothers of those tables,\" Andreas spoke again outlining some of the bigger responsibilities she would be required to undertake.\n\n\"You're the Oracle, and I am the problem you are trying to pre-empt,\" Peri said before she could stop herself. \"You don't think I am worthy,\" she said sadly.\n\n\"Quite the contrary little Mama,\" he gave her the first smile he had let slip since she entered the room. \"You are the reason we are considering both Joshua and Dante to lead the next generation of the Donati's.\"\n\n\"I am? I don't understand,\" her mind was reeling, and she looked at each of the men. \"You will give them both the chair? How is that possible? And why should it matter what I do where Dante's future is concerned?\"\n\n\"You were right when you spoke of the Oracle. It is a position of great power and must be the mirror the Chair, though we refer to it as a shadow. You were right that they would live closely. So closely that they share a home and a family. More importantly due to the time each of them would be required to be away from the home they would share, the Mother,\" Andreas paused and watched her as she took in the words. \n\n\"Dante loves you. He has for some time, but it has become more obvious to everyone since the night that Emilio passed from our lives. I have known of the potential for love since your altercation with Sabrina Avic,\" Vincenzo added.\n\n\"Dante requested access to a Kept with similar attributes to yours because he would never expect you to betray Josh as he wouldn't want to either. Nor would he purposefully hurt either of you,\" Charles said quietly. \n\n\"Joshua is aware of his brother's feelings but trusts you both implicitly despite your growing affection for Dante,\" Vincenzo continued his report as the Watchman. \"They have spoken about it, he does not hate the affection between the two of you, but he is not ready yet to see it manifest.\"\n\n\"I would never betray Josh like that,\" Peri said aghast at the idea.\n\n\"Josh will request it of you in time, you merely need to be open to the idea,\" Andreas said. \n\n\"Do you share Antonia?\" Peri accused not imagining for one moment that that was the case.\n\n\"No that is not my role, but Christo did,\" Andreas said gently.\n\nPeri looked at Joseph confused. She had seen the way he and his wife doted on each other. She couldn't imagine someone coming between them. She felt an overwhelming need to speak to Antonia. The silence lengthened as her mind whirled again. Josh would be the leader of this family. The family he loved above all else in the world and one she had willingly joined because she loved him. Her mind went to Dante and the dreams she had been having about him since having the babies, and she felt her face heat with a blush at her thoughts.\n\n\"I would like to talk to Antonia about all of this,\" she said quietly. \"If Josh requested anything of me including this I would do as he asked. I may ask questions, but ultimately, I love him. I loved him enough to go through your trial of signing the contract, and I loved him enough to go to the facility. I loved him enough to put what Nik did to me behind me and look to the future even though every day I am terrified that she will come back to finish what she started.\" She gave an involuntary shiver and looked at them all. \"If you're asking if I can do what is necessary to make sure my husband and in turn his brother, have the life they want and deserve, then yes, I can.\"\n\n\"This will not be a quick process, and each of the members of the next table will train with the man whose role they will eventually take over. In some cases, this may take years where we will sit at the table with them, but as they take over the role, we will each retire and let the next generation take over until they find the next generation prepared to take over. As with all of the positions on our table you will work closely with Antonia to learn things the other girls have known their whole lives. You will also continue your research and learn more. You have a keen mind, and it would be a terrible waste to let it atrophy,\" Andreas spoke again.\n\n\"And in my spare time I'll sleep?\" she laughed shaking her head. \n\n\"She's not intimidated by any of this,\" Constantine who had been silent up until this point roared with laughter. \"She's got my vote. I reckon she will give Antonia a run for her money.\" He continued to laugh. \n\n\"She made Dante smile again. That alone was good enough for me,\" Manuel nodded. \"There's no reason to vote we all knew who the mother would be when we gave our agreement to the order of things. It is better for everyone especially Josh and Dante that you are agreeable, to the life you will need to lead, though.\" He turned to address Peri.\n\n\"I don't think it's me that you have to worry about,\" she said quietly. \n\n\"Joshua will come to understand what is necessary as he did when you went on your trial,\" Andreas said confidently. \"I have helped to raise that boy for this day. The rest of the table will be told of the handover and their roles in the new year. Until then this conversation remains here amongst those who must know.\" He looked at her carefully. \"The three of you, who will lead the next table, will have until the last day of December to prove you are all willing and able to embrace the traditions and laws of our family.\"\n\n\"Antonia knows more than anyone about the family, she will contact you and organise to spend some time with you between the wedding and the holidays at the farm,\" Joseph said. \"You may go back to your babies and let my sons in here now. I am sure they are concerned with the amount of time we have kept you. Reassure them you are unharmed and send them in.\"\n\n\"No need to mention our conversation before they learn their fate,\" Andreas gave another rare smile.\n\n\"I understand,\" she whispered coming to her feet and stumbling as she was startled by the men coming to their feet as she left the table and the room. The door to Dante's suite was open, and she came to the doorway she saw them both hurry towards her.\n\n\"That was all very interesting,\" she said lightly with a smile. \"It's your turn now.\" She returned Josh's embrace and laughed. \"I love you,\" she murmured into his ear. \"They're expecting you both,\" she said as he released her and leaned up to kiss him. Josh took a step past her and through the door turning back to look at Dante, who was following him before moving across the small corridor and into the room.",
        "\"Dante,\" Peri said and put a hand on his arm as he stepped past her. He turned to face her, and she reached a hand up to his cheek. \"I love you too,\" she said quietly. He looked at her for a moment and placed his hand over hers on his cheek. \"Be patient with Josh, he loves you too.\" She added feeling awkward under the look in his eyes.\n\n*****\n\nPeri had been in the meeting with Papa and his brothers for just under an hour and when she came out she returned to the nursery to hug her children but they were all sleeping so peacefully that she didn't want to disturb them. She sat in the rocker and closed her eyes thinking about what she had just agreed to.\n\n\"How can I possibly live with and love two men?\" She asked herself. She and Josh loved so intensely she couldn't imagine letting anyone else into their bubble of happiness. She considered Dante and how much of their lives he already shared. The only thing they didn't share with him was their intimacy. If Vincenzo knew as much as he said he did then, he must have known that. They all must have known that. \n\nCharles had said that Dante spent time with a Kept, who looked like her, and she felt a pang of jealousy wondering if he shared her with Josh in the same way that Josh would soon be expected to share her affections. She tried to kid herself that she couldn't do it, but the memories of her dreams betrayed her. In each dream, she had woken when Josh appeared and seemed happy to find them together. She considered that fact and wondered if her subconscious could feel the pull of what was happening in the greater family dynamics. \n\nShe closed her eyes letting the memory of that dream play out in her mind and imagining Josh approving of her adultery. She drifted off to sleep in the quiet room after weeks of broken sleep her mind morphing the dream to a different scene.\n\nThere was a knock on the door as she knelt at Dante's feet sucking his cock. She heard him call out to whoever it was to come in and she froze in the act of what she was doing. He placed his hand on her head and pushed her mouth down onto his cock again, groaning as she swallowed him deeply. She heard the door at the other end of the large room open and close, and she froze again.\n\n\"Keep sucking,\" he growled putting pressure again on the hand on her head before calling out, \"About time you got here, I'm glad your home.\" Dante said in a voice thick with arousal, and Peri heard Josh's voice answer him.\n\n\"Fuck, do you ever stop?\" Josh chuckled, and Peri could hear the heavy fall of shoes followed by the squelch of his body sinking into the leather of a chair.\n\n\"Not when it's this good,\" Dante groaned again as she took him to the balls sucking hard. \"Oh, yeah, she loves it too, such a good little cocksucker\" he held her head down for long seconds before pulling her back up and cumming loudly, spurting ribbons of cum onto her tongue, which she obediently swallowed. Allowing her a few moments to drain and clean him as he regained his control he finally pulled her up to the couch with him and turned her to face Josh. \n\n\"You kept her to yourself for so long, I'm just catching up,\" he chuckled.\n\n\"Do you blame me?\" Josh shrugged. \"Don't suppose you want to give my wife back now?\"\n\n\"Our wife,\" Dante corrected him draping an arm over Peri's neck and shoulder to play with her breast. \"What do you want her for?\" Dante asked dubiously.\n\n\"A head job like the one I was just witnessed sounds about right,\" he smirked.\n\n\"Sure why not,\" he shrugged looking at Peri. \"Off you go then,\" he gave her a little push from the couch and watched as she knelt before Josh, who had stood to kick off his pants.\n\nPeri's mouth tilted up at the corners in a half-smile as she took in the cock she knew so well and loved. She parted her lips slightly leaning forward to kiss the tip expecting him to sit again. Instead, he remained standing and gathered her hair into one hand holding it up from her face and tilting her head back slightly.\n\n\"Keep your eyes on mine the whole time,\" he growled at her. \n\nShe nodded slightly within the firm hold he had on her hair recognising the tone in his voice and quietly murmured, \"Yes, Mine.\"\n\n\"Mine\" he growled and placed the tip of his cock between her lips and began moving in and out slowly filling her mouth as she gazed up at him. Peri knew he liked the complete control and willingly gave herself over to his desires as she closed her lips into a tight ring around his cock. He bucked his hips pushing further and making her gag slightly. She noted a slight smile touching his eyes as she looked up at him. \"Open,\" he commanded, and she let her jaw drop, opening her mouth wide for him as he drove deeply into her throat making her gag once again.\n\n\"Can't blame you for enjoying this so often,\" Josh murmured thrusting his hips again.\n\n\"I'm a lucky man to share her with you,\" Dante grinned back enjoying watching Peri take the punishment Josh was giving her and feeling his cock begin to grow again at the sight before him.\n\nPeri began to drool as she relaxed and gulped around the cock that buffeted at her throat. Her eyes began to mist, and tears ran to her cheeks, but she did not strain against the position he held her in as he fucked her face. Instead, she fixed her eyes on his as she blinked more tears to her cheeks. Her tears seemed to arouse him even further, and he yanked her head back further by the hair and stepping forward slightly lowered his ball sac into her wide open mouth.\n\nFluttering her tongue and sucking at the pebbled skin as best, she could in her position she took deep breaths through her nose knowing this was only a small respite. She could feel her arousal build and the wetness of her cunt start to flow to her thighs. The ball sac was eventually pulled away, and the cock was returned to her mouth with more force. Josh held her head with both hands and began fucking in earnest uncaring, it seemed, of her lack of breath but making sure now and then not to penetrate her throat as she sucked in air through her nose.\n\nJosh became lost in Peri's teary eyes and the power she gave him. He felt the pleasure she afforded not only his cock but his need for control, groaning deeply before pulling out and spurting cum across her lips and tongue and then driving back into her warm wet mouth again. Finally satiated he collapsed back onto the chair.\n\nPeri was so hot and needy for her own release as she was pulled up into his lap. She looked up at him with teary eyes her need evident. \"Please,\" she whispered, \"Fuck me, I'm so hot.\"\n\n\"I don't need to fuck you to make you cum,\" he growled and pinched a nipple in each hand, twisting them until she whimpered loudly. \"But seeing as you asked so nicely,\" he flipped open the chest that appeared beside the chair. He withdrew the tri-clamp set watching as Peri saw it and immediately spread her legs and laced her fingers behind her head in a display pose as he had taught her so long ago at the chalet.\n\nHe glanced up, and Dante nodded appreciatively. Peri was panting heavily and mewling loudly when he was finally satisfied by the positioning of the clamps. He picked her up and placed her on her hands and knees on the low coffee table that had suddenly appeared between the two men\n\n\"Well if you're not up to it yet, I am,\" Dante growled and stood behind her. He entered her roughly making the clamps swing and Peri cry out both in pain and pleasure. He slowly withdrew from her and then slammed in again growling, \"Is this what you need, little slut,\" he rammed into her with force.\n\n\"Yes, please,\" she cried out both humiliated and aroused by the names he called her. She grimaced at the pain of the clamps as well as the words that fell from her mouth. Then Josh was there standing before her with a half hard cock. He grabbed her hair and guided her mouth to his cock again as Dante continued to slam into her. Her whimpers turned to gurgles as his cock rapidly grew in her mouth, her head and body moving because of the rough fucking she was receiving as Josh just stood staring down into her face.\n\n\"Prepare yourself, slut,\" Dante growled as he leant over her body and tugged on the chain making her squeal around the cock in her mouth. As the clamp came loose from her clit, she screamed, and Josh drove into her throat savouring the vibrations her pain gave her voice. Peri's eyes rolled in her head, and she jerked spasmodically as she came hard between the two men. The men continued to fuck her hard as she continued to cum giving her little respite as Dante pulled the clamps from her nipples making her scream around the cock in her throat again. \n\nHer eyes fluttered open as her body shook roughly.\n\n\"Peri?\" Bridgette's voice sounded worried as she shook her shoulders. \"You're having a bad dream, you're waking up the babies,\" she whispered trying to get her to wake up properly. \"Peri? Wake up.\"\n\n\"Oh Gosh, I'm so sorry,\" Peri whispered back, looking around the nursery and seeing the Cruze squirm restlessly. \"I didn't mean to fall asleep. I'll just freshen up a bit and be back in a little while. She got up feeling flushed and embarrassed and hurried from the room. \n\nWalking through her room to the bathroom, she splashed cool water on her face. \"What is wrong with you?\" She asked her reflection. \"Have you become so immune to how bizarre this family is?\" She was happy for Josh, but she worried. She had thought the new table would be the domain of Ben and while Josh would be involved it would more like Andreas and Marisol, living on the winery and living their own lives.\n\n\"Andreas had obviously fooled her about his involvement in family business and she guessed that was how it was supposed to be. There was one public face of the table, one official leader and for anyone who never looked closely at or questioned that there was a table of twelve that would be enough. She knew for certain now though that the power was shared and not only did they have great influence over their families but as a society across several continents they held influence in world markets and politics. It was like she had been wearing blinders this whole time and suddenly she could see.\n\nShe walked purposefully to the library and turned on her computer plugging in her hard drive. She wasn't exactly sure what she was looking for but she knew when the Donati's had intermarried with the Medici's a powerful alliance had been formed. She realised now that there was probably more happening there than she had allowed herself to see or take in. \n\nShe hadn't noted much about the alliance, but she had tagged the small amount of information with the names of the books she had been using at the time. She scribbled them on a piece of notepaper intending on asking Dante to retrieve them from the Athenaeum in the city.\n\nShe had been so engrossed in what she was doing she hadn't realised how long she had been sitting there until she reached for another notebook and her arms brushed over her now wet bra and blouse. Guiltily she packed up her things and returned to the nursery but her mind stayed on all of the information she had learned today and how it had changed her view of this family's place not only amongst the twelve table here but those throughout the world.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "submissive",
        "dreams",
        "fantasy",
        "family",
        "leadership"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-tables-ch-19"
}