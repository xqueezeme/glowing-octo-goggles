{
    "title": "The Damp, Gray Gone Ch. 01",
    "pages": [
        "INTRODUCTION\n\nWe've all no doubt read our fair share of Loving Wives stories where the husband, upon discovering his wife's infidelity, suddenly reveals himself to be a top-secret super spy with ten years of training as a ninja warrior before his distinguished career in with John Wayne in the Green Berets. So equipped, he wreaks fantastic vengeance upon the wife and her paramour, usually, at least in part, in the form of destroying lover boy's testicles with repeated phantom kicks to the gonads.\n\nSue me if you will, but I tend to enjoy these stories. Few of them are even remotely plausible, but they are still a nice fantasy.\n\nHaving been in the Army, though, and having also met my fair share of soldiers in the Airborne, the Rangers, and Special Forces, I've never met any of the superheroes for whom I root in the stories I read here. Also, while I'd probably dream of beating my wife's paramour half to death if she ever got herself such a thing, I'd still do no such thing. Sorry, but jail scares me a hell of a lot more than being called a wimp by an ex-wife who cheated on me.\n\nThus, please consider this my modest contribution to the genre. Yep, there's a soldier boy, a paramour, and a confrontation. Sure, none of it would probably go this way, but it still has--I hope--the stamp of plausibility. I've also thrown in some characters from past stories--including a descendant of Ernie the Pug from The Bar and Grill--love interests, flirty students, and main characters who are lost. This is the story of how at least a few of those lost characters find their way.\n\nSorry, but it's pretty slow going at the beginning, and there's no sex until the finale. The pace of the story is necessary, though, as it sets up the rest of what is to come.\n\nIt's also pretty long, and I'm sorry for that, too. I seem to have had diarrhea of the word processor on this one, and there only seemed to be a few natural breaks for multiple parts.\n\nThus, this is being submitted on consecutive days in three parts of roughly equal length.\n\nAs always, I ask that you all please take the time to comment, both good and bad. Obviously, the more detail to your comments, the better. Still, we're all pretty busy, so even just a few words of what you like or dislike is greatly appreciated.\n\nCHAPTER ONE\n\nMy right hip hurt like a son of a bitch from the moment I awoke.\n\n\"Bad weather on the way?\" Whitney murmured, her half-open eyes following my limping figure to the bathroom.\n\nI only grunted in response.\n\nDays like this were the worst. Most people looked forward to Spring, but not me. Spring meant cold and damp, which, in turn, meant that my old hip injury would ache almost constantly for two months or more. And my mind would be flashing back to those terrifying hours leading up to the cause of my hip pain.\n\nAfter taking a leak, I stared at myself in the mirror while washing my hands. The face staring back at me was still somewhat chiseled. Okay, not really chiseled so much as not covered with sagging jowls and two or more chins like most of my contemporaries. My gray eyes looked tired and lined with a few crow's feet, my short-cropped hair was now sprinkled with gray, and the flab of my chest and skin was noticeable as my body began feeling the inevitable effects of age and gravity. Still, I was only seven pounds more than the day I'd graduated the Point, and my body seemed to be holding up as well as could be expected.\n\nEverything except that damned hip. And the visions that would now be popping up more frequently and at the worst times.\n\n\"You okay?\" Whitney said through her yawn, leaning against the doorframe.\n\n\"Yeah,\" I said, watching her stretch her tiny, lithe body behind me.\n\nAny other day--and any other mood--and I'd have been sporting thoughts of a morning jump. There she was, her soft brown hair a tousled mess, her tiny, petite body covered only in an old tee shirt and a pair of skimpy panties. And beneath it all, I knew, was the sex drive of a tigress in heat, an unquenchable passion and joy for carnal delights that exceeded that of any woman I'd ever known.\n\n\"Your hip?\" she said, now nudging me aside and reaching in the drawer for her tooth brush and the tube of paste.\n\n\"It's gonna rain today,\" I said.\n\n\"The dreams?\"\n\n\"Bad,\" I confirmed.\n\n\"You were tossing and turning all night,\" she said.\n\nShe started to brush her teeth, and I reached for my toothbrush to join her in our morning ritual.\n\nOnce done, Whitney hopped into the shower while I shaved. After finishing and rinsing my face in ice cold water, I trudged down the hall to awaken Kyle and get him ready for the day.\n\nFifteen minutes later, I was sitting at the table, sipping coffee and reading the paper while Kyle ate his bowl of Corn Puffs and munched on a piece of toast.\n\n\"I got my second grade assignment,\" Kyle said with a mouthful of food.\n\n\"Don't talk with your mouth full,\" I said, lowering the paper.\n\nHe finished chewing. \"I said I got my second grade assignment yesterday.\"\n\n\"And?\" I asked.\n\n\"Miss Palmer,\" he said.\n\n\"So what do they say about Miss Palmer?\"\n\n\"She's cool,\" he said. \"Kinda old, though.\"\n\nI tried to suppress my smile. A 7-year old's idea of old was relative.\n\n\"As old as me?\"\n\nHe frowned. \"Not that old. More like Mom.\"\n\n\"I won't tell her you said that,\" I said.\n\n\"Why?\"\n\n\"It's not nice to tell women they're old. It's not nice to tell anyone they're old--man or woman--but especially women.\"\n\n\"Why?\"\n\nI shrugged. \"Just one of those mysteries of life, little man.\"\n\n\"What mysteries of life?\" Whitney said, buttoning the last button on her blouse as she entered the kitchen. She was perfectly coiffed and professionally dressed in a white blouse with gray skirt and jacket, ready for another day saving the citizens of Lincoln County from its felonious predators.\n\n\"Nothing,\" I said.\n\n\"Dad was saying that I shouldn't say people are old even if they are. It's not nice.\"\n\nShe chuckled, pouring herself a cup of coffee.\n\n\"Did you call your Dad old?\"\n\n\"No,\" he said, ignoring my finger-to-lips shushing gesture. \"I said you were old.\"\n\nShe laughed aloud at that.\n\n\"So you're not mad I said it?\" Kyle pressed, shooting me a 'told you so' look.\n\n\"Your father's right,\" she said, pulling out a chair and sitting with us. \"It's not polite.\"\n\nKyle said nothing to this, preferring to finish his cereal in silence.\n\n\"He got his second grade assignment,\" I said.\n\nShe raised her eyebrows, sipping her coffee.\n\n\"Miss Palmer?\" I said.\n\nMaggie nodded. \"Sure. Kristin Palmer. She started four or five years back.\"\n\n\"Then how is she old like you?\" I said, grinning.\n\n\"We graduated together,\" she said. \"High school. She got her degree pretty quick, I think. Didn't start teaching again until she came back up here and got divorced, though.\"\n\n\"Same age?\"\n\n\"Yep.\"\n\n\"So is she any good?\"\n\nWhitney shrugged. \"Dunno. She was real popular back in school. Prom queen, head cheerleader. You know the type. We didn't exactly run in the same crowd. She didn't have as much time for books and studying. What, with her busy social calendar and all.\"\n\n\"Jealous?\" I tweaked.\n\n\"Not any more.\"\n\n\"Meaning?\"\n\n\"Tyler Collins?\" she prompted. \"The writer?\"\n\nI nodded. \"Sure. Lives out on Twin Oaks Road somewhere.\"\n\nShe nodded. \"Her ex-husband. The first one. The second one was a cop from around here. So no, I'm not jealous.\"\n\nI nodded. \"But she's a good teacher, right?\"\n\n\"Not a clue,\" Whitney said, putting her coffee down and looking at her watch. \"Can you hurry up? I really need to get into the office. Final preparations on that hearing today.\"\n\n\"What hearing?\"\n\n\"The LaBruzzi drug case,\" she said, impatience creeping in. \"Their motion to suppress the evidence.\"\n\nI nodded, pushing back from the table, putting my coffee mug in the sink, and going back to hop in the shower and finish getting ready before relieving Whitney so she could get to the State's Attorney's Office. Then I'd finish getting Kyle ready for school, drop him off, and make my way to Rensinger Hall at Chadwick College for my morning Classical History II class.\n\nIn a nutshell, just another weekday morning around the Patterson household.\n\n* * * * *\n\nDriving to Chadwick, something was niggling at my brain.\n\nIt was Whitney. Her moods. She'd been more impatient, silent, brooding, always on the edge of saying something before pressing her lips in silence. Something was bugging her, and that something was more than the typical stresses of her job.\n\nI mulled this over as I parked in the faculty lot and grabbed my briefcase.\n\nThe wrist on my watch confirmed I was twenty minutes early. As usual. Oh well, old habits die hard.\n\n* * * * *\n\nIt was almost seven-thirty when Whitney walked in the door.\n\n\"You guys already eat?\" she asked, hanging her coat in the foyer closet before turning to me.\n\n\"I fed Kyle,\" I said, marking my place in the massive tome on the Punic Wars before setting it aside and getting up to greet her. \"He's in his room doing some homework. I decided to wait for you.\"\n\nShe gave a weary smile. \"You didn't have to do that. You must be starving.\"\n\n\"You, too,\" I said.\n\nShe shrugged.\n\nHer face was weary to the bone, a combination of frazzled and dead tired.\n\n\"Everything okay?\" I asked, pulling her into my arms and giving her a hug. \"You seem really . . . I don't know . . . distant lately. Something on your mind?\"\n\nShe murmured something into my shoulder, then hugged me tighter and held me there. This was the same response I'd been getting for the past month. She just wouldn't open up.\n\n\"You wanna talk about it over dinner?\"\n\nShe broke the hug. \"It's nothing, babe. You know. Work. Same shit, different day. I guess it's all just getting to me.\"\n\nHer face said more, though. It said that yes, she did want to talk about it, but she was afraid for some reason.\n\n\"The hearing go okay today?\"\n\nHer quizzical look flashed into a look of recognition. \"The hearing. Yeah. Continued for another three weeks. Like what else is new, right?\"\n\nMy eyes narrowed, and she tried to smile at my suspicion. \"Welcome to life with the LaBruzzis, y'know?\"\n\nI didn't react, preferring to stare at her for more reaction.\n\nGetting none save a look of wide-eyed openness, I nodded my head toward the kitchen.\n\n\"Come on. Roast chicken and grilled asparagus with lemon viniagrette await.\"\n\nShe spent a few minutes in Kyle's room while I got our plates ready. Five minutes later, we were seated across the table from each other, and the silence was deafening.\n\nShe picked at her food, and I barely touched mine.\n\n\"Is it okay?\" I asked after ten minutes during which she'd eaten only three or four bites.\n\nShe looked up and tried to smile. \"Yeah, Luke. It's really good. I guess I'm just not that hungry.\" She looked at my plate. \"What about you? You feelin' okay?\"\n\n\"Just the hip.\"\n\nShe nodded, then pushed her plate away.\n\n\"Let's go get Kyle tucked in. It's almost his bed time.\"\n\n\"Okay,\" I agreed, picking up her plate and mine, scraping the leftovers into a tupperware container with the rest of the chicken and asparagus before putting it into the refrigerator. When I turned back, I saw Whitney leading Kyle into the hallway bathroom to brush his teeth.\n\nMy suspicions from the morning were now turning to outright worry. Don't get me wrong: Whitney's hours were long and hard. Her promotions from traffic court to misdemeanor to felony had correspondingly increased her hours as the complexity and importance of her case load increased. Truth be told, she wasn't even that late, though her long hours had become more frequent in the past eight months since she'd made the jump to lead felony prosecutor.\n\nBack in the bedroom, I stripped down to my underwear, a tee shirt, and a pair of reading glasses. Throwing my robe on, I went back and hugged and kissed Kyle goodnight, grabbed my book, and looked around for Whitney. I heard a scrape in the garage, and made my way there.\n\n\"You out here?\" I said into the darkness.\n\nShe sniffled. \"Over here.\"\n\nI flipped on the light. She was in the corner, her arms wrapped tightly around herself, her head turned away from me.\n\n\"Whit,\" I said, stepping onto the cool cement floor. \"Baby, what's wrong?\"\n\nShe just shook her head, and I could hear her crying.\n\nI walked toward her, and she squeezed herself even tighter as I approached. Dread began coursing through my veins, the kind of cold, shivery feeling you have as you watch something terrible begin to unfold.\n\n\"What's wrong?\" I said, my voice now a hoarse whisper.\n\n\"You're going to hate me,\" she said, her eyes staying glued to the wall opposite me.\n\n\"Why? What's going on here?\"\n\nWhitney's head dropped to her chest and she didn't answer.\n\n\"What have you done?\" I pressed, not wanting to know, but afraid not to find out.\n\n\"I . . . we need . . . there's . . . .\" She looked to me for help, her eyes pleading with me to back off.\n\nLooking back on it, I'm not sure whether I made a mistake. To this day, I still sometimes wonder whether everything would've still happened the way it did if I'd just given her time to figure it all out on her own. If I'd left her alone to figure it out for herself--if I hadn't pressed for an immediate answer--would she have worked it through on her own and eventually been shaken into reality?\n\nUnfortunately, I'll never know the answer to that. Whatever was tearing her apart so much was now tearing me apart, and I had to know what was going on. For my own sanity, she had to tell me why she was so upset and withdrawn.\n\n\"I'm your husband,\" I finally said. \"I love you, and I'm here for you. Whatever it is, you can tell me.\"\n\nShe hesitated, her eyes pleading with me to let it be.\n\n\"This is only getting worse, Whit,\" I said, my voice cracking with emotion. \"You're not talking to me anymore. I have no idea what's eating at you, and you won't share it. Is it me? Us? Something going on at work?\"\n\nShe said something, but I couldn't hear her voice.\n\n\"What?\"\n\nShe turned and faced me, her face a mask of anguish. \"It's everything. It's you; it's me; it's us. It's work and bullshit and I'm just not happy.\"\n\nHer words were like a slap in the face and a quick, solid punch to the solar plexus.\n\n\"Us?\" I croaked. \"What's wrong with us?\"\n\nShe shook her head. \"Not just us, not just our marriage. It's everything all together. It's just all getting so . . . I don't know. Stale? There's no spark, no excitement. Just drudgery.\"\n\nI said nothing, trying to decipher what she was saying and what it meant for our family.\n\n\"I don't feel alive anymore, Luke,\" she pleaded. \"It's like I'm just going through the motions. I mean, I love you. I love Kyle. But, well, it seems like my whole life is just in a rut. I get up, get ready for work, snatch a few minutes with you guys before rushing off to work. Then I get to spend ten or twelve hours a day trying to keep up with the rushing tide of scumbags who can't keep their shit together. Keep trying to lock 'em away until they get a fucking clue on how to behave. Then I rush home, manage to spend an hour at most unwinding while trying to get Kyle in the bath and the dishes done and then it's off to bed. Get up the next morning, repeat the cycle.\"\n\n\"I usually do the dishes,\" I said. \"And the cooking and the bathing and the homework.\"\n\n\"I know,\" she cried. \"That's not the point. You do. You manage to do it all when I can't help you. But then our weekends are spent around the house, getting stuff done to get ready for the next week. I just want it all to be different.\"\n\n\"Different how? Different job? Go for it. You know I'll support you.\"\n\nShe shook her head. \"Will that really fix it all?\"\n\nMy eyes narrowed. \"What're you saying?\"\n\n\"I'm saying that I think we should separate,\" she said, the tears drying and a firm look setting in. \"I need some time to figure out what I want. What I need.\"\n\n\"And what about us? What about Kyle?\"\n\nShe snorted at that. An angry snort. \"Kyle doesn't need me to take care of him. He's got you.\"\n\n\"So you're just leaving him?\"\n\n\"I'm not leaving him,\" she flashed. \"I'm not abandoning him. I'm not running away from my baby.\"\n\n\"Then what are you doing?\" I pressed, anger now overcoming my emotions as well.\n\n\"I'm taking time to get my shit together. Time to make sure I'm squared away so I can be a better mother for him.\"\n\nI just stared at her, waiting for her to finish the thought. After a moment, I was left pondering what she had left unspoken.\n\n\"So you're not going to spend this time trying to figure out if you want to continue being my wife,\" I surmised. \"You've already given up on us.\"\n\nWhitney's lips tightened.\n\n\"Answer me.\"\n\n\"I don't know.\"\n\n\"Is there someone else?\"\n\nShe hesitated, then shook her head.\n\n\"Who is he?\"\n\n\"I said there was no one else,\" she hissed. \"I haven't fucked around on you. I'm not seeing anyone.\"\n\n\"But you've got your eye on someone, don't you?\"\n\nShe turned away, refusing to answer.\n\n\"And this separation,\" I said, building steam. \"You're going to use it to see if maybe it'll work between the two of you. If it does, then you'll cut me loose, right? Or were you just gonna cut me loose either way.\"\n\n\"It's not like that,\" she said. Her voice was going flat, emotionless. Like she was steeling herself to confirm that it was exactly like that.\n\n\"And this separation,\" I said. \"When does it start? Where are you moving to? In with him?\"\n\n\"I don't know.\"\n\n\"Which part? Which part don't you know?\"\n\nShe turned back to me, her eyes dead and her voice low and cool.\n\n\"I don't know when it's going to start. I don't know where I'm moving to. I doubt I'll be moving in with him, but it may happen. I just don't know. I haven't thought that far ahead.\"\n\n\"What do you mean you haven't thought that far ahead? You're a fucking lawyer, for Chrissakes. Thinking and planning, that's all you fucking do for a living.\"\n\n\"You pressed me,\" she said. \"I didn't want to tell you.\"\n\n\"Yet,\" I corrected her. \"You didn't want to tell me yet. So what were you gonna do? Get all you ducks in a row, pack your shit, give me a peck on the cheek, and ride off into the sunset? After almost ten years together, that's really how you were gonna play it?\"\n\nShe didn't respond, but her face told me that was exactly how she was going to play it.\n\n\"Fine,\" I said. \"Do whatever the fuck you wanna do. It's pretty clear where I fit in your pecking order. And Kyle, too, for that matter.\"\n\n\"Don't you dare,\" she started.\n\n\"And as long as we're on that topic,\" I interrupted, \"you should at least start giving some thought to what we're gonna tell Kyle here.\"\n\nHer face froze at that, the rest of her interrupted retort cut off in her throat.\n\n\"It'll be both of us,\" I said. \"And we'll both be polite and not point any fingers. But you're the one that's gonna plan the fucking strategy on this one, lawyer girl. Got it?\"\n\nShe only nodded as fresh tears ran down her cheeks.\n\nI watched her for a minute, all of my anger and fight leaving me.\n\nThis was like a weird sci-fi movie. Like Harrison Ford in Bladerunner. Was I a loving husband willing to give up without a fight? Or was I an unfeeling automaton not willing to wage a losing battle?\n\nMe. West Point Class of '89. I'd fought, and been a part of, a victorious war. And every day for the rest of my life, my right hip would remind me of the personal costs associated with that war.\n\nIf I fought and won this war--if I fought for my marriage and managed to hold our family together--would I forever be reminded of similar costs? Would I see Whitney's regret every day for the rest of our lives? Regret that she'd stayed with us or that we were somehow--in her mind, at least--holding her back? Or would I be reminded every day with happiness in a stronger marriage and a happier son?\n\nToo overwhelmed to consider the options and plan a course of action, I turned and left the garage.",
        "CHAPTER TWO\n\nWhen I awoke the next morning almost an hour before the alarm, Whitney was curled up in bed beside me, snoring softly. That surprised me. The manual seemed to indicate someone should be sleeping on the couch here. Then again, what the fuck did I know? It's not like divorce was a common thing for me.\n\nNope. This was the first time.\n\nI thought back to our wedding and the words of my best man.\n\n\"You sure this is what you wanna do?\" my brother Mark said then.\n\nI only smiled.\n\n\"It's not too late,\" Mark continued.\n\n\"Really,\" I assured him. \"She's the one.\"\n\n\"Okay,\" he nodded. \"Just remember: If there's one thing you never want to be, it's anyone's ex-husband. So no matter what it takes, you keep your shit together, okay? And make sure she does, too.\"\n\nI only laughed. \"Will you quit worrying?\"\n\nThat conversation kept playing in my mind as I went to the hallway bathroom and brushed my teeth, shaved, and showered.\n\nHow could I do it? How could I keep my shit together when I didn't even know what I'd done wrong? How do I keep her shit together when she's already given up on us and--obviously--hitched her future to some other horse? I just had no idea how to proceed.\n\n\"Morning,\" Whitney said from the now-open doorway as I stepped from the shower.\n\nWithout thinking, I stepped back into the shower and draped myself in the shower curtain.\n\n\"Jesus, Luke,\" she said, her sad face turning angry. \"It's not like I've never seen it before.\"\n\n\"Yeah,\" I said, fighting to keep my voice low and my emotions in check. \"Back when we were lovers, right?\"\n\nHer anger turned to astonishment, like I'd slapped her in the face. Part of me was overjoyed at scoring a direct hit, the kind of hit I'd taken the night before; the other part of me was ashamed to be so intentionally striking back. After a few seconds, overjoyed won.\n\n\"Now if you'll excuse me,\" I said, \"I'd like to finish getting ready. I'm pretty sure the master bath is still there if you need it.\"\n\nShe stared for a few seconds longer before closing the door.\n\n* * * * *\n\nI was dressed in jeans and a golf shirt, reading the paper and drinking coffee while Kyle ate his cereal and toast. Halfway through my second--and final--cup of coffee, Whitney appeared from our bedroom.\n\n\"Hey, Mom,\" Kyle chirped up.\n\n\"Mornin', sweetie,\" she said, stooping to kiss his cheek before turning to pour herself a cup of coffee.\n\nI felt her eyes on me, but I just concentrated on reading the paper.\n\n\"You sleep okay last night?\" she said.\n\nLooks like the Cubs were going to have another shitty season.\n\n\"Dad,\" Kyle said.\n\nI lowered the paper. \"What, little man?\"\n\n\"Mom asked if you slept okay last night.\"\n\n\"Oh,\" I said. Then I smiled at him. \"No.\"\n\n\"Me neither,\" Whitney said.\n\nI ignored her and went back to reading the paper. She gave a light sigh, and I sensed the energy leave her body.\n\n\"Can we talk?\" she said.\n\nI lowered the paper again, fighting to stay impassive in front of Kyle.\n\n\"About what?\"\n\n\"Last night.\"\n\n\"There's more? You're gonna somehow top yourself?\"\n\nShe shot glances to Kyle, who was busily munching his cereal while reading the comics page.\n\n\"Please?\" she said.\n\n\"Now?\"\n\nShe shook her head. \"Later. Tonight, maybe. When I get home.\"\n\n\"Tonight then,\" I said, raising the paper back up and reading--for the tenth time or so--that the Cubs had no real pitching prospects and were still going to suck.\n\n* * * * *\n\nI was piling my notes and books back into my briefcase at the conclusion of 20th Century American History. I could hear the doors clanging as most streamed out, and I heard snatches of conversations between the few students who were still milling around, undoubtedly planning some party or date rather than plotting the theses of their term papers.\n\n\"You okay, Professor?\"\n\nI looked up. Heather Farley was standing a few feet in front of the lectern, her angelic face an exaggerated mask of concern. Twenty-one years old, an apparently natural blonde with long, straight hair all shiny and combed, and a body that would make Pope Benedict look more than once.\n\n\"I'm fine, Ms. Farley,\" I said. \"Is there something I can do for you?\"\n\n\"You don't seem fine,\" she said, her voice lowering so the others in the room couldn't hear her. \"You seem distracted. And upset.\"\n\nI tried to smile, but it never reached my eyes. You can tell these things.\n\n\"Welcome to life,\" I said, trying to introduce a measure of levity. \"Some days just aren't as good as others.\"\n\nHeather looked at me, saying nothing. Her bright green eyes bored into mine and held there, her lips pursing.\n\n\"So if there's nothing else,\" I said, breaking the reverie by snapping my briefcase shut, \"I've got to run.\"\n\n\"If you need to talk to someone, I'm a real good listener.\"\n\n\"I'll keep that in mind, Ms. Farley.\"\n\n\"Okay.\"\n\nShe turned, scooped up her book bag from her desk, and walked out.\n\nMy eyes followed her ass every step of the way, and I finally took a breath as she disappeared into the hallway.\n\n\"Pretty sweet, huh Doc?\" Tony Granger said, grinning broadly as I turned to look at him.\n\n\"Indeed, Mr. Granger,\" I agreed. \"Pretty sweet indeed.\"\n\nIf the faculty lounge rumor mill was to be believed, Heather Farley had comforted at least one faculty member during her three years at Chadwick College. Before, I had always considered the offending professor a bit sleazy for taking advantage of her.\n\nNow, I envied the hell out of him.\n\nAnd I'm pretty sure he wasn't the one who took advantage of her. I was willing to bet it was the other way around.\n\n* * * * *\n\n\"So who do I see?\" I asked.\n\n\"And you're asking me why?\" Doug Morrissey said.\n\n\"Because you've gone through this before.\"\n\n\"And you're asking me to re-live the whole goddamned thing?\"\n\n\"No,\" I insisted. \"I'm just asking you what lawyer I should call. I mean, come on man, I don't know shit from attorneys.\"\n\nHe sighed, his puffy cheeks and tendrils of whispy hair all sagging with the breath expelled from his lungs.\n\n\"Just tell me who you used,\" I pleaded with the English Lit professor.\n\n\"Don't use him. He was clueless. Absolutely pathetic.\"\n\n\"Well, did you see anyone else that may be worth a damn?\"\n\nHe nodded, grimacing at the memory. \"Germaine's attorney. Rebecca Galarza. She works for Erik Taylor. I think they're partners now.\"\n\n\"And their office is here? In Grant City?\"\n\nHe nodded.\n\n\"And they're good? She's good?\"\n\nHe looked at me, frowning. \"Remember my sixty-one Triumph? My pride and joy?\"\n\nI nodded.\n\n\"I think Germaine used it to pay her legal fees. My car to pay her damned lawyers. And she got it in the divorce, along with most everything else.\"\n\n\"Sorry,\" I commiserated, thanking God I didn't have some beloved, cherished token to have to give up in the divorce. Well, nothing except my battle dioramas in the basement, but Whitney would never want any of those.\n\nNo, I had nothing to lose in the divorce.\n\nNothing except Kyle, which was everything.\n\n\"You okay?\" Doug said. \"You look like you've seen a ghost.\"\n\n\"What if I lose him?\" I asked. \"Kyle. What if she gets custody?\"\n\nHe reached across the table and put his hand on my shoulder.\n\n\"Listen to me, Luke.\"\n\nI looked at him, tensing at the tone in his voice.\n\n\"Is there any way this can be fixed? And I mean any way.\"\n\n\"I don't know,\" I answered. \"Honestly, I never even saw this coming. I don't even know what the fuck is going on, you know? This is so totally out of left field.\"\n\nHe nodded, shaking his head.\n\n\"Because this is really going to suck, my friend. Big time. Take my word for it: As bad as you think it's going to be, it's going to be worse. So if you can stop it, I recommend you do so immediately if not sooner.\"\n\nFor the second time in twenty-four hours, I felt cold and shivery all over.\n\nCHAPTER THREE\n\nKyle and I were hunched over the kitchen table, him working on an addition and subtraction worksheet, me filling out a client questionnaire I'd been given by the receptionist at Taylor & Galarza, Attorneys at Law.\n\nWhitney walked in the door shortly after five. Kyle's face lit up, and he leapt from the table and ran to her.\n\n\"Hey, baby,\" she said, scooping him into her arms and hugging him tightly with her jacket still hanging from one arm. \"How was school?\"\n\n\"Okay,\" he chirped, then wriggled from her hug and ran back to the table, scooping up his homework.\n\nMy eyes followed him every step of the way, from the hug back to the table then down the hall to his bedroom where he was stashing his homework to finish later.\n\n\"Hey,\" Whitney said, placing her hand on my shoulder.\n\nI turned and looked up at her, then looked at her hand on my shoulder. She snatched her hand away like my eyes were scorching her skin.\n\n\"Sorry.\"\n\nI went back to the questionairre, dutifully filling in the blanks.\n\nWhitney sat across from me at the table.\n\n\"So you didn't even bother waiting for us to talk, did you?\"\n\nI looked back up to her and raised an eyebrow. \"Wait for what?\"\n\n\"To see a lawyer.\" She nodded at the questionnaire I hadn't bothered to hide from her. \"They're good, by the way. God knows you could've done a whole lot worse.\"\n\n\"Could I have done better?\"\n\nShe shrugged. \"Dunno. Not really my field. I only know what I hear around the courthouse.\"\n\nI nodded.\n\n\"Why the big hurry?\" she asked. \"Why couldn't you at least wait for us to talk?\"\n\nI put the pen down and folded my arms over the questionnaire.\n\n\"Is it going to do any good?\" I asked. \"Have you already changed your mind? Decided to give us a chance maybe?\"\n\nI watched the emotions stream through her eyes and over her face. She was trying to think of the right thing to say, and her lips started moving a couple of times. But she was conflicted, clueless on how she wanted to proceed.\n\nAnd that's why I had the questionnaire out in front of her. I decided the best thing to do was to force her to immediately consider the costs of her choices. Get her off the damned fence and get her thinking long and hard about what she was contemplating.\n\n\"Kyle, honey,\" I said over her shoulder to my son, who was running back out of his room, \"can you go back into your room and finish that homework? Mom and I need to talk, then we'll all eat, okay?\"\n\n\"Sure Dad,\" he chirped, then turned and went back into his room.\n\nWhen I turned back to her, Whitney's eyes were on the table in front of her.\n\n\"Okay,\" I said. \"You wanted to talk. We've got about a half hour before he's done with his homework and dinner's ready. So what is it you want to talk about?\"\n\n\"Why are you rushing this?\" she said. \"You've already seen a lawyer, for Chrissakes. I mean, Jesus H. Christ, Luke, what's the sudden hurry?\"\n\n\"If I hadn't forced the issue last night--if I hadn't caught you out there in the garage and made you talk to me--you would've never told me. Not until you were already gone. Not until you already had your own lawyer lined up and all your shit together, right?\"\n\nShe said nothing, but her face confirmed the simple fact.\n\n\"Well, Whitney, I don't think I want to get blindsided again, okay? I don't want to show up one day with the locks changed or with you and Kyle gone to live your new life with my replacement.\"\n\n\"I wouldn't do that to you.\"\n\n\"Really? Really, you wouldn't?\" I laughed. \"That's funny. Then what is it you've already done?\"\n\n\"I just told you I'm confused. I'm not happy, and I need some time to get myself squared away. For my own sanity.\"\n\n\"And you told me that getting 'squared away' probably includes another man. A man you're supposedly not already screwing and already making future--\"\n\n\"I told you I wasn't doing that,\" she flared. \"And I'm not. It's just been a . . . we've just . . . .\"\n\nHer face told me she'd already said too much and she knew it.\n\n\"You've just what, Whitney? Just held hands? Just had a few intimate lunches? Maybe just a hot make out session or two? What have you and Mr. Right just been doing?\"\n\nShe pressed her lips together. \"This has nothing to do with him.\"\n\n\"You're right. He's tomorrow's problem. No, this is all about you and me. All about you suddenly--and without even telling me why--just suddenly deciding you're not happy with me. So what is it you're not happy with? The fact that I'm the one who damned near single-handedly keeps this house running? Does the cooking and most of the cleaning and more than my share of the laundry? Makes sure Kyle's homework is done and he's fed and clothed? Is that what you're not happy with?\"\n\n\"Your hours are lighter than mine,\" she said, her eyes avoiding mine. \"You know that. It's always been that way. You never used to care.\"\n\n\"And I don't care now,\" I said, fighting to keep my voice low. \"Don't you see that? When's the last time I bitched about any of this? Huh? When? Have I ever thrown any of this in your face? Ever insisted you cut back?\"\n\nShe was silent.\n\n\"Well have I?\"\n\n\"No, Luke. You've never done that.\"\n\n\"Then why, Whitney? What the hell is it?\"\n\nTears were streaming down her face, and she shook with silent sobs. I got up and fetched the roll of paper towels, putting them on the table in front of her.\n\n\"Don't I at least deserve some sort of explanation?\"\n\nShe nodded. \"I just . . . I don't know. I'm just not happy.\"\n\n\"Then get a different job,\" I suggested. \"Why are you starting with us? Instead of changing your job and seeing if that makes it better, you decide to change husbands? Families? That's really your first choice here?\"\n\nShe turned and looked out the window, wiping her cheeks and blowing her nose and getting her emotions under control.\n\n\"If it's really everything like you said last night, then why don't you see if just changing one thing would fix it? Maybe get a different job? Maybe go into private practice and see if you can cut back on your hours or change fields of practice or something? Why are you trying to change everything?\"\n\nHer stare remained out the window, and her voice when she spoke was so low I had to lean over to hear her.\n\n\"I feel like running away sometimes. Getting away from everything and everyone. Just going, I don't know, maybe to a small cabin in the mountains.\"\n\nThen her lips twitched, and a small smile played at her lips.\n\n\"Except when you're with him,\" I guessed.\n\nThe smile disappeared in a flash and her face froze at my accusation.\n\n\"You're not denying it, Whit.\"\n\nShe closed her eyes and leaned her head back. \"He's just so easy to talk to. He cheers me up, makes me think everything's going to be all right.\"\n\n\"Maybe because he's the one you've been sharing your problems with. Maybe because you haven't been talking to me for months now.\"\n\nShe turned and faced me. \"But you've already got so much on your plate. You already do enough for us.\"\n\nI smiled at that. \"Really? If I do so much for us, then why couldn't you take just that one small step to save us? Why are you going to someone else for your comfort and allowing us--our whole family--to disintegrate? You really think I have so much on my plate I'd have resented the request to keep us all happy? Keep us together?\"\n\nHer body sagged like a puppet. Head, shoulders, posture, all of it just collapsed into the chair.\n\n\"But you already do enough. I feel so guilty all the time. Like you're the only one doing anything around here. Like you're Perfect Mom and Perfect Dad all rolled into one. Like I'm not even needed.\"\n\nI reached my arm across the table. She stared at my hand for a moment, then placed her tiny hand in mine.\n\n\"If you want to do more,\" I said, trying to smile, \"I'm more than willing to let you. Cut back on your hours some. Maybe just try to get home about this time every night. I'm more than willing to let you do more, take a bigger part in all the fun stuff you're missing out on.\"\n\n\"Like cooking,\" she smiled.\n\n\"And cleaning, homework, mowing the lawn. The whole shebang.\"\n\nHer hand squeezed mine, and her head lifted.\n\n\"I don't know if I want to do that.\"\n\nCHAPTER FOUR\n\nThe next night, Whitney again arrived home shortly after five. By five-thirty, we'd all eaten, and I got up from the table.\n\n\"Where are you going?\" she asked as I walked toward the basement door.\n\n\"To the basement,\" I said. \"You clean up for a change. I'm going to go play with my soldiers.\"\n\n\"I thought we could talk some more,\" she said.\n\n\"Then you know where I'll be,\" I said, not hearing whatever she was saying to my retreating back.\n\nOnce in the basement, I flipped on the lights and was greeted by a sight I'd not really seen or spent much time around for three years. Raising a son has a way of making you cut back on your hobbies.\n\nLaid out before me in the long, narrow, low-ceilinged basement were a series of tables. On each table was a diorama of a turning point in time, the turning point of a great or famous battle from history.\n\nI walked to the first table and stopped. Thermopylae. The Hot Gates. I had constructed the mountain to the west and the sea to the east. Along the narrow strip of beach, King Leonidas and his Spartan warriors, along with scattered soldiers from other Greek city-states, were waging a titanic struggle to hold off King Xerxes and his vast Persian Army. The Persians outnumbered the free Greeks fifty-to-one or more. And hidden in a meandering mountain pass, about to flank the brave Greeks, a string of Persians were creeping down toward them. The Persians had been given the route by a traitor. And so the brave Greeks were attacked from the flank and the rear and died to the man. The three days Leonidas and his men held off the Persians gave the rest of the Greek city-states time to plan and mouth their successful defense to the invasion.\n\nI pondered this for a moment before going to the second battle scene from Gettysburg. No, this one wasn't Col. Chamberlain's valiant bayonet charge down Little Round Top, nor was it Pickett's suicidal charge up the exposed slope straight at the Union center. Instead, the scene was from the first day--nearly the first moments--of the battle. Brig. Gen. Buford's cavalry dismounted and fighting alongside the 1st Brigade of the 1st Division of the 1st Corps. The Iron Brigade. Together, they are fighting and dying to hold off the stream of Confederate soldiers from Archer's Brigade who are attacking them down the Chambersburg Pike, the main road into Gettysburg. By holding off this charge at great cost, the Union kept the high ground, which made all the difference for the rest of the pivotal clash. The cost, though, was great, including the best general in the Army of the Potomac. I leaned in and stared hard at the figures I'd crafted. The figures gathered around the splayed body of Maj. Gen. John Reynolds as he lay dead in the opening minutes of the battle, felled by a sniper's round or just a wild bullet from the clash. Because of their courage and sacrifice, the battle was all but preordained from the opening volley of bullets.\n\nThere were two more complete battle scenes, and one half-finished diorama. There was a cutaway view of the tunnels being dug--and explosives being packed--beneath both trench lines of the Ypres Salient, one of the worst meat grinders of World War I. In the other, Hannibal and his Carthaginian forces--along with various allies--were snapping shut their double envelopment of the superior Roman forces at Cannae. And thus the Carthaginians reached their zenith in the Second Punic War.\n\nI barely glanced at those two. The meat grinder and the crushing double flanking movements were not nearly as poignant to me just then as the cost of traitors and the need to hold the high ground at all costs.\n\nI stopped at the last table, running my fingers over the harsh, destroyed landscape of Stalingrad. It was all there on the biggest diorama I'd ever tackled: The stark shells of bombed out buildings, Pavlov's house, the tractor factory, rubble-strewn streets, the pocked hill at Mamayev Kurgan overlooking the remains of the city and the River Volga beyond. It had taken months to get the landscape just right, and the only figures inhabiting it were boats packed with reinforcements crossing the Volga amidst explosions of fake water. It was time to start making the various Russian and German soldiers and weapons, time to start populating the dying city with dying men.",
        "I sagged, staring at the landscape. Dying city. Dying men. Dying marriage. Maybe dying fatherhood.\n\nI turned at the sound on the stairs.\n\n\"Dad?\"\n\n\"Over here,\" I said, trying to banish the thoughts from my mind.\n\n\"What're you doing?\"\n\n\"I'm gonna make some soldiers.\"\n\n\"Can I help?\"\n\n\"Sure.\" I waved him over. \"Get over here, little man.\"\n\nHe gave a broad grin and scurried to my side.\n\n\"What's this?\" he asked, his eyes wide at the stark victim of the Nazi onslaught.\n\n\"This is what happens when people hate each other,\" I said, pulling him in and hugging him to my side.\n\n\"They do this?\"\n\n\"Uh huh.\"\n\nHe nodded. \"It's pretty sad.\"\n\n\"Yep.\"\n\n\"So what're we gonna make?\" he asked, his voice getting bright at the excitement of getting to work with me on these for the first time in his life.\n\n\"Time to start carving some soldiers,\" I said.\n\nI spent the next two hours showing Kyle how to carve and shape soldiers from clay before making plaster casts of them for the ultimate casting process.\n\nWhitney never came down.\n\nAfter I got Kyle bathed, brushed, and into bed, I went back to the living room and pulled out my book on the Punic Wars.\n\nThe Third Punic War, I knew by heart, had started because Carthage had finished paying Rome reparations from the Second Punic War. Rome, with a growing population and no more reparations coming in, decided to feed its people by conquering Carthage and its rich farmlands once and for all. Thus, they ultimately besieged Carthage and starved its people out. When the Carthaginians surrendered, they were all enslaved and the city and its magnificent harbor razed. And Carthage simply ceased to exist.\n\nIt was gone.\n\nNever to rise again.\n\nAnd the Romans, who had commenced the war on false pretenses and through trickery, were forever burdened with the Punic Curse.\n\n* * * * *\n\nKyle and I spent Saturday morning carving and shaping soldiers, making plaster casts, and pouring molten tin into the casts.\n\nAt eleven thirty or so, Whitney appeared at the base of the basement stairs.\n\n\"Do you think that's wise?\"\n\n\"What?\"\n\n\"Letting our son play with molten metal.\"\n\n\"He's not playing with molten metal,\" I said. \"He's learning how to do something. Learning the right way. The safe way. And learning, in the process, what can happen if he ever does something the wrong way.\"\n\n\"Still,\" she said.\n\n\"C'mon, Mom,\" Kyle said. \"He's not letting me pour it. I just get to hold the funnel is all. And I have to wear this.\"\n\nHe held up his tiny arm to show the massive fireproof mitt covering his tiny hand and arm to the elbow.\n\n\"And it's fun,\" he continued. \"We're making soldiers.\"\n\n\"Well,\" she started, then just looked at us.\n\nI turned back to pour the last cast.\n\n\"Ready?\" I said.\n\n\"Uh huh,\" he confirmed.\n\nI poured a stead stream of liquid metal into the funnel, my free hand over Kyle's as I held the funnel steady, my eyes peering in to see when the cast was full.\n\n\"Okay,\" I said, putting the pan aside and guiding his hand as he lifted and let the last drops fall harmlessly before moving the funnel and setting it into the pan.\n\nWhen I turned back, Whitney was still there, a soft look on her face. Catching my eyes, her face went taut.\n\n\"Do you . . . are you two going to be doing some more?\"\n\n\"You need us for something?\"\n\nShe struggled, her eyes avoiding mine. \"I . . . uh . . . well, I was going to run out for awhile. I was wondering if you could keep an eye on him for a few hours.\"\n\nI stared at her, not believing the words coming out of her mouth.\n\n\"You said you wanted to spend more time around the house. With Kyle, at least.\"\n\nWhitney's teeth were grinding, and she sighed. \"I know, but I--\"\n\n\"That talk,\" I said. \"With Kyle. Take some of your time with Superman planning it, because it's going to be tonight. After dinner. So try not to be late, got it?\"\n\nShe looked at me for a moment, then jerked her head in a tight nod.\n\n\"What talk, Dad?\"\n\nI looked down at Kyle. Worry was all over his face.\n\nI put my hand on his shoulder and squeezed. \"Don't worry about it, okay?\"\n\nHis face said it wasn't okay.\n\n\"I really don't want to say more now, Kyle. It's a family talk.\"\n\n\"Like when I wanted a dog?\"\n\n\"Sorta like that.\"\n\n\"But worse,\" he concluded.\n\n\"Yeah.\"\n\n\"Did I do something wrong?\"\n\nI scooped him up and held him tight.\n\n\"Not a thing,\" I whispered into his ear. \"Not a damned thing, little man.\"\n\n* * * * *\n\nWhitney was home when Kyle and I got back from the park at three. If she'd spent the lunch hour screwing her new love, it didn't show. To the contrary, she was a bundle of nerves, sitting at the dining room table with her hands fidgeting back and forth through a cookbook and her eyes looking to us when we walked in before turning back to the cookbooks, then the windows, then us, and so on. She couldn't sit still.\n\n\"You wanna do this now?\"\n\nShe shook her head. \"I'd rather just talk to you for a few minutes.\"\n\n\"Why don't you go hop in the bath now,\" I said to Kyle.\n\n\"But Dad,\" he pleaded.\n\n\"Hop in the bath, get cleaned up and into pajamas, and we'll order some pizza and stay up past your bedtime watching movies, okay?\"\n\nThe grin nearly split his face. \"Deal.\"\n\n\"Okay,\" I said once Kyle was in the bathroom running his bath and I was seated at the table.\n\n\"I'm confused.\"\n\n\"About what?\"\n\n\"About everything.\"\n\nI nodded, saying nothing.\n\nAfter a minute, Whitney spoke again. \"It's just that--I don't know--it all seemed like such a great idea. Like this fantasy I had in my head and it was getting better and better the more I thought about it.\"\n\nStill I said nothing; I just relaxed back and sank lower into the chair and watched her.\n\n\"Are you going to say something?\"\n\n\"I'm listening,\" I said. \"Trying to figure out what's going on here. Just like I've been trying to do for the past four days.\"\n\n\"I told you,\" she said. \"I maybe got carried away with a fantasy world.\"\n\n\"And with another man,\" I added. \"Someone else has been part of it. How actively you've been fantasizing with him . . . .\"\n\n\"I told you. I haven't been screwing anyone else.\"\n\n\"Then what have you been doing?\"\n\nShe looked out the window.\n\n\"That's what I thought,\" I said. \"And still you won't tell me. All you'll tell me is that I'm no longer really the one for you. That I'm--for some unknown, undefined reason--a major reason why you're in a rut. But you won't tell me why. You won't tell me what I can do to help fix it. And you won't tell me how to compete with some fucking quasi-lover you refuse to name.\"\n\nI leaned over the table, and her head jerked to face me, her eyes wide.\n\n\"I shouldn't even have to compete with someone else, Whitney. We're fucking married here. This isn't junior high school. We're not going steady like a couple of fucking pre-teens.\"\n\n\"I'm sorry, Luke,\" she said. \"I can't help it. It's just . . . I don't know.\"\n\n\"Yeah. I remember. 'It's just how you feel.' But tell me this: Did you start feeling like this before he came into your life or after?\"\n\n\"What difference does--\"\n\n\"Because I'm wondering if you started feeling this way all on your own or if he helped you along in ditching me.\"\n\n\"It's not like that,\" she argued.\n\n\"See,\" I said, leaning back in the chair again. \"There you go again. Defending this guy. This guy you won't tell me about or tell me what you've been doing with--or doing to. It's like you think you have some kind of fucking right to keep all of this secret from me. Tell me you're leaving me; tell me there's someone else; but then fail to tell me what I did wrong or who he is or what he is to you or what you're doing with him.\"\n\n\"I'm entitled to a life of my own, too,\" she argued.\n\n\"That's right, Whitney. You're entitled to a life of your own. And that's exactly what you're going to get. A life of your own. On your own.\"\n\nHer eyes went wide. \"What're you--\"\n\n\"I've got an appointment on Monday afternoon. I'm going to retain them as my lawyers.\"\n\n\"But I don't--\"\n\n\"You don't what? Don't want one? But you still wanna keep your little fucking loverboy on the side? Keep things from me? And you want me to continue living with a wife who suddenly doesn't love me anymore?\"\n\nTears were streaming down her face. \"Why are you pushing this? Why can't you just give me some time?\"\n\nHer face was a mask of anguish, completely conflicted emotions. It tore at me, took the wind from my sails and the anger from my bones.\n\n\"Do you really see any chance for us here?\"\n\n\"I don't know.\"\n\n\"So there may be some chance?\"\n\nShe nodded.\n\n\"Better than fifty fifty?\"\n\n\"I don't know.\"\n\nI thought back to what Doug had said. Whatever it takes, do it. Anything to avoid divorce. Anything to keep the marriage together.\n\n\"When do you think you'll know?\"\n\nShe shrugged.\n\n\"Would you see someone? Maybe a therapist or a counselor or something?\"\n\nIn an instant, her face was a mask of fury. \"For what? You think I'm nuts because I may not want to be with you anymore?\"\n\nI bit back my tongue and took a breath. \"No. I think that maybe you're suffering from depression.\"\n\n\"Because I'm not happy with us? Because I don't want to be married to you anymore?\"\n\n\"And there you have it,\" I said, pushing back from the table. \"You can't even tell me the truth.\"\n\n\"What do you--\"\n\n\"Thirty seconds ago you said you didn't know. That maybe we still had a chance here. Now you're saying you don't want to be married to me anymore.\"\n\n\"That's not what I said.\"\n\n\"But it's what you meant,\" I said.\n\nI walked around the table toward the bathroom to check on Kyle. She reached her arm out to stop me, and I froze.\n\nWithout looking at her, I said, \"We'll give him one last happy night tonight. Get your shit together enough for the talk with him tomorrow.\"\n\nHer hand gripped my shirt, trying to hold me there.\n\nI reached down and pried her fingers off of me, then I continued to the bathroom.\n\nI had twelve feet to get my emotions in check so my little boy wouldn't realize his world was about to fall apart.\n\nCHAPTER FIVE\n\nSay this for Rebecca Galarza: She was smoking hot. I mean the kind that distracts you; the kind of incredible beauty combined with that extra something that exudes a sexual aura that leaves you fantasizing about her the whole time you're in her presence.\n\nShe strode into the small waiting room and held out her hand.\n\n\"Mr. Patterson?\" she said.\n\n\"Luke,\" I corrected her, trying to keep my jaw off my chest. She was mid-thirties, and dressed simply in a white blouse and tan slacks. Yet, the simple colors somehow served to accentuate her smooth olive skin and long, black hair. Her face was that of a classic Spanish beauty with high cheekbones, narrow chin, large, round, deep brown eyes, and full lips, and her body was that of a Playboy centerfold. Her breasts were obvious, but not enormous, and the rest of her seemed slim and perfectly proportioned. It was the way she held herself, though, and the way she looked at you. Direct, challenging. It was a look that dared you to jump in the sack with her and try to screw her brains out. A look that must have men lined up around the block for a shot at her. And none, I noticed from the empty ring finger, had yet leashed her in.\n\n\"So, Luke,\" she said after a moment, a smile playing over her lips and her eyes twinkling at my response.\n\n\"Right,\" was all I could manage.\n\nShe waved her arm toward a door, and I walked around her and into a conference room.\n\n\"Okay,\" she said, pulling a pair of reading glasses from her pocket and putting them on to read my questionnaire. \"Why don't you tell me what's going on?\"\n\n\"I don't know.\"\n\nShe looked up and raised her eyebrow. \"You don't know?\"\n\n\"Seriously. Whitney--that's my wife--she tells me she's not happy. With her job, her marriage, me. Pretty much everything.\"\n\n\"Is she going through a bad phase of some kind? Death in the family or someone sick? Sudden pressure at work?\"\n\nI shrugged. \"No one's died and no one's about to, either. Not so far as I know, at least. Still, I'm pretty sure I would've heard about it. Same thing with work. I mean, there's some kind of drug case going on now. Supposed to be a real big deal. The LaBruzzis?\"\n\nHer eyes narrowed. \"Your wife's Whitney Patterson the prosecutor?\"\n\nI nodded. \"That a problem?\"\n\n\"Not really. It's just that most of the judges will probably recuse from the case. We'll probably end up with someone from out of county.\"\n\n\"And?\"\n\nIt was her turn to shrug. \"Hard to predict how another judge will react to certain things.\"\n\n\"But it's not a problem with your office?\"\n\nShe shook her head. \"I'll check with my partner, but I don't think so. I mean, we do some criminal stuff. Hell, I used to work with her before I started here four years ago.\"\n\n\"Were you friends?\"\n\n\"Colleagues. We never had a drink or anything, though. So I wouldn't really say friends.\"\n\nI nodded. \"She says you guys are good.\"\n\nShe nodded, like such compliments were commonplace around the office. \"So back to what's going on. Is there someone else?\"\n\n\"Yeah. She says they're just friends, but she's let slip a few times. I'm pretty sure they're more than friends. How much more, I have no idea and she's not saying.\"\n\n\"Who is it?\"\n\n\"She's not saying.\"\n\nShe pursed her lips, and I had a sudden fantasy of leaning across the table and kissing her.\n\nSeeing my glassy eyes, she gave a smile.\n\n\"It says here you have a little boy together. Have you really thought this through?\"\n\n\"In what way?\"\n\nShe leaned over the table. \"You sure you don't want to just wait a little while? Maybe see if she gets her head out of her ass?\"\n\nI shook my head.\n\n\"Pride? The other man?\"\n\n\"It's not that.\" I paused for a moment, trying to put words to my jumbled thoughts. \"Take that back: It's partially that. What it really is, though, is her adamant refusal to even tell me what the hell is going on. She's just . . . well, she doesn't want me anymore. I have no idea why, and she's not really telling me why. I mean, Jesus, I do everything for her. For us. For our family. I'm the one who takes care of Kyle; mostly, at least. I do most of the housework and everything else to help support her career. And the thanks I get is that she doesn't love me anymore.\"\n\nRebecca was writing furiously on a pad in front of her. \"When you say you do most everything, including taking care of Kyle, let's get more specific.\"\n\n\"How?\"\n\n\"Who makes his breakfast?\"\n\n\"Usually me.\"\n\n\"Usually?\"\n\n\"Nine times out of ten.\"\n\n\"Who helps him with his homework?\"\n\n\"The same.\"\n\n\"Laundry?\"\n\n\"Ditto.\"\n\n\"Dinner?\"\n\n\"Ditto.\"\n\nShe stared into my eyes, and I saw that hers were ablaze with glee. \"He's in first grade?\"\n\nI nodded.\n\n\"Did you go to the parent-teacher conferences?\"\n\n\"Of course.\"\n\n\"Did Whitney?\"\n\n\"She couldn't get out of the office.\"\n\nShe smiled. \"You want custody?\"\n\nMy eyes went wide. \"Is that possible?\"\n\n\"From what I'm hearing, it's not only possible, it's probable.\"\n\n\"Really?\"\n\nShe gave a throaty chuckle. \"The judge isn't going to care who has the pecker. You're both equal. Unless you're doing a pretty crappy job, though, the one who's taking care of him--we call that the primary caregiver--that's the one who gets custody.\"\n\nI didn't know what to say. I'd assumed Whitney, being the mother, would almost automatically get custody. Now this Hispanic goddess was telling me that I'd probably get custody if I wanted it.\n\n\"Well?\" she said.\n\n\"Well what? Of course I want custody.\"\n\n\"And you'll be able to handle it with your job as a . . . .\" She flipped back to the first page of the questionnaire. \"You're a history professor? At Chadwick?\"\n\nI nodded. \"Yeah. And yes, I'll be able to handle it with my job.\"\n\n\"Sweet,\" she said, her face a gleeful mask. She wrote on the legal pad. 'Custody to LP.'\n\n\"Now let's go over your financials.\"\n\n* * * * *\n\nI was walking on air when I left the law offices of Taylor & Galarza. Was it going to suck? Yep. But it wasn't going to suck nearly as bad as I'd feared it would. The property split would probably be about fifty-fifty, the chances of alimony were slim, and--Thank You God!--I was probably going to be getting custody of Kyle.\n\nI drove to the park to pick up Kyle. He was there with Sally Romescu, our neighbor, and her posse of children.\n\n\"Dad,\" Kyle cried out from the swings upon seeing me.\n\n\"Hey, little man,\" I said, walking toward him as he leaped off the swing and ran toward me and into my arms.\n\n\"You doing okay?\" I asked as I held him to my chest.\n\n\"I guess so,\" he whispered into my ear, squeezing me tightly.\n\nI squeezed him right back, knowing there would be times coming up when he'd again be crying as he had the day before. Sobbing uncontrollably at the loss of his family and of one of his parents.\n\n\"I love you,\" I said. \"You know that, right?\"\n\n\"I love you, too,\" he said, leaning back and looking at my face. \"Can we go home now and make some more soldiers?\"\n\n\"Absolutely,\" I said, letting him down as his weight began to make my hip ache.\n\nI said our goodbyes to Sally, who seemed like the calm at the center of the storm with her four kids running around and screaming.\n\n\"Thanks,\" I said as we turned to leave.\n\n\"Anytime, Doc,\" she said.\n\nSally--and her husband Charlie--both called me Doc. At school, the students all called me Professor, but I was only addressed as doctor when being introduced to give some boring lecture or present a paper to my colleagues. Charlie and Sally, though, seemed somehow proud to be living next door to a real professor, like it was proof positive that an electrician and his wife, neither of whom had a college education, could still make it in America and live with all of us who got the educations.\n\nSo they called me Doc. Not so much to honor me in any way as to remind themselves of how good they had it.\n\nWatching her patience around four screaming rugrats, though, it was I who envied them, and not for the first time. They made me realize how good they had it and how bad I now had it. They made enough money to live happily in a nice home and to spend time together and with their children. Their devotion to each other was obvious to all who saw them together, and I simply couldn't envision them ever being in my shoes.\n\nAnd me in comparison? The only reason I had a doctorate degree was because it was the only way of really escaping my father's business; my family was collapsing around me; and I would soon be juggling a full-time job with full-time parenting.\n\nSo there you go: The bonus of seven years of higher education for both Whitney and me, and we were failures in the most important thing in our lives.\n\n* * * * *\n\nAgain, Whitney was home by five-thirty.\n\n\"Hey, Baby,\" she said to Kyle.\n\n\"Hi, Mom,\" he mumbled back, not bothering to look up from his homework.\n\n\"That's it? No hug?\"\n\nHe sighed, then got up, walked to her, and gave her a brief hug.\n\nShe tried tousling his hair, but he went back to his homework.\n\n\"What're you doing?\" she said.\n\n\"Spelling.\"\n\n\"Need some help?\"\n\n\"Dad already helped me.\"\n\nShe turned to me, and her face was sad.\n\nI tried to feel bad for her, but I couldn't. Instead, I felt bad for Kyle. He wasn't old enough to really know what was going on, but he'd managed to figure out that Whitney was behind it all. Either that or he knew most of his time was spent with me and he didn't want to do anything to screw that up.\n\nWhitney lowered her head and walked to the bedroom to change.\n\n\"You wanna come in here and help me for a sec?\" I asked Kyle.\n\n\"Sure,\" he said, joining me with a smile all over his face.\n\n\"Here,\" I said, handing him a vegetable peeler. \"Let's peel some carrots, okay?\"\n\n\"Sure,\" he said, taking the peeler and starting in on the carrots.\n\n\"You know,\" I started, not really sure how to proceed.\n\n\"What?\"",
        "\"She's your mother,\" I said. \"And she loves you very much. More than you'll ever know until you have kids of your own someday.\"\n\nHe didn't say anything, but his bottom lip started sticking out.\n\n\"You should maybe give her a break, little man.\"\n\n\"Why? She's the one that's leaving, Dad.\"\n\nI kneeled down beside him. \"But it's not because of you, okay? You've got to believe that. She's not doing this because of you.\"\n\n\"I don't care,\" he said, his voice getting louder. \"Who cares why she's leaving. All that matters is she's leaving. And I won't get to see you anymore.\"\n\nTears were welling in his eyes and running down his cheeks.\n\n\"Sure you will,\" I said, using my thumb to brush away his tears. \"We'll see each other all the time.\"\n\n\"That's not what Tammy Palewski says. She says she never sees her dad. Never.\"\n\nI pulled him in for a hug.\n\n\"But you're not Tammy Palewski, and I'm not Tammy Palewski's dad.\"\n\n\"But what if we move away? Then how will you see me?\"\n\nI held his shoulders and looked into his eyes. \"I don't care if you move to the South Pole. I'm still going to see you. Got it?\"\n\nHe nodded.\n\n\"If I have to wrestle polar bears and beat up the penguins, I'm still going to get to you, okay?\"\n\nHe giggled through his tears.\n\n\"Why would you beat up the penguins?\"\n\n\"Just let them get between me and you,\" I said.\n\nHe giggled some more, then went back to peeling.\n\n\"Dad?\" he said after a few minutes.\n\n\"Yeah?\"\n\n\"Can we make some more soldiers after supper?\"\n\n\"We'll ask your mom. If she says it's okay, then we will. Fair enough?\"\n\n\"I suppose so.\"\n\n* * * * *\n\nIt was almost eleven before I went to bed. The lights were off, and I shed my jeans and was pulling on a pair of flannel pajama bottoms when Whitney spoke.\n\n\"Thank you,\" she said.\n\n\"For what?\"\n\n\"For talking to Kyle. Earlier. I heard you.\"\n\nI grunted.\n\nShe was silent as I slid under the covers, and I laid there looking at the ceiling for a few moments.\n\n\"Luke?\"\n\nI said nothing. We'd been sleeping together in the same bed since the shit had hit the fan. It somehow seemed natural. But we hadn't spoken to each other. Talking in bed seemed somehow more intimate, and now unnatural.\n\n\"Why are you wearing pajama bottoms to bed?\"\n\nI thought about that. It wasn't something I'd been consciously doing. Not like using the other bathroom, which had been a planned affair. No, wearing pajama bottoms just seemed like the thing to do now.\n\n\"Are you still awake?\"\n\n\"Yeah, Whit, I'm still awake.\"\n\nShe rolled over, and I could see her outline as she drew closer and her face was almost touching mine.\n\n\"I want you,\" she said.\n\n\"I don't think that's a good idea.\"\n\n\"Why not?\"\n\n\"Because it's not.\"\n\n\"Because you don't want me anymore?\"\n\n\"I'm pretty sure it's the other way around.\"\n\n\"But I want you now.\"\n\nI reached over and turned on the light, then rolled back and faced her.\n\n\"What's going on here?\"\n\n\"I just . . . I don't know. It's just that we seem to be--I don't know--strangers all of a sudden.\"\n\nI gave a bitter snort. \"No shit.\"\n\n\"You know what I mean.\"\n\n\"No, Whit, I have no clue. I'm still trying to figure out how you can just wake up one morning and decide you want someone else.\"\n\n\"I don't want anyone else.\"\n\n\"Really? Could've fooled me.\"\n\n\"But I don't.\"\n\n\"Yeah. Well. I guess the point is that you really don't want me, either.\"\n\nI slid out of bed.\n\n\"Where are you going?\"\n\n\"The couch,\" I said, picking up a pillow. \"This doesn't seem like a good idea anymore.\"\n\n\"Please,\" she said.\n\nI looked down at her and saw now that she was naked under the sheets. She looked so sexy and vulnerable and . . . and . . . and I hadn't been laid in almost three weeks.\n\n\"Please, Luke,\" she said again, her hand reaching out and brushing over my erection.\n\nI wanted to. More than anything, I wanted to shed my clothes and jump back into bed and fuck her until neither of us could walk. And I felt myself leaning toward her before all of the images of the past week began rushing to my brain.\n\n\"I'm signing the papers on Thursday,\" I said, my voice hoarse.\n\nHer hand went still, and her eyes flashed with fear.\n\n\"What papers?\"\n\n\"To start the divorce,\" I said. \"They'll be ready on Thursday.\"\n\nShe pulled her hand back and cuddled in on herself in a fetal position.\n\n\"They said you can go to the Sheriff's office and pick them up. To avoid a scene having you served at work or here.\"\n\nShe gave no reaction, just a blank stare at a spot on the far wall. She was lost in her thoughts.\n\nI looked at her for a moment, all carnal thoughts now banished.\n\nThen I reached over, turned off the light, and made my way to the sofa.\n\nCHAPTER SIX\n\n\"What's your hurry, Luke?\" Doug Morrisey said.\n\n\"Hurry on what?\" Peggy Marsh said as she slipped into the booth next to him and placed her tray on the table.\n\nHe looked at me for my assent before answering her.\n\n\"He's getting a divorce.\"\n\nPeggy didn't react. Instead, she buttered her dinner roll and dipped it into the bean soup.\n\n\"Did you hear me?\" Doug said.\n\n\"I heard,\" she said.\n\n\"And?\"\n\nShe bit the roll and chewed, looking at me the whole time. When she swallowed, she put the roll back on her tray and spoke.\n\n\"You screwing around?\"\n\n\"No.\"\n\n\"Is she?\"\n\n\"Sorta.\"\n\n\"Sorta? Jesus, Luke, it's a simple question. Is she screwing someone else? Yes or no?\"\n\n\"Probably not,\" I said. \"There's someone else. Another guy. I know that much. She says they're not sleeping together, but I'm not sure if she's telling the truth.\"\n\n\"Then she's probably screwing him,\" she said, picking up her spoon and tackling her soup.\n\n\"She says she's confused,\" I offered, sipping my coffee. \"She's in a rut. Not happy with work and with me.\"\n\nPeggy just nodded, eating her soup and not saying anything.\n\n\"You think she's just going through something?\" Doug asked her.\n\n\"Like what?\" Peggy said.\n\n\"I don't know. Her . . . well, her period. Or depression?\"\n\nPeggy laughed. \"Men. Anytime we act a way you don't expect, it's because our monthly visitor has come a calling.\"\n\n\"You know what I mean,\" Doug said. \"Come on, you're the expert here.\"\n\nShe looked at him, then turned to me. \"Okay, give me what you've got.\"\n\n\"I just did,\" I said.\n\n\"Has she been withdrawn?\"\n\n\"Yeah. Two or three months.\"\n\n\"She been sleeping more than normal?\"\n\n\"No.\"\n\n\"Her appearance slipping? You know, hair not done. Maybe looking a touch more disheveled?\"\n\nI shook my head. \"None of the above.\"\n\n\"Then it's probably not depression,\" she said.\n\nI sagged. This wasn't something that could be cured with counseling and some medication.\n\n\"Don't get me wrong,\" Peggy said. \"It could be depression. Still, except being suddenly unhappy with her lot in life, there are no other signs that I can tell.\"\n\nI nodded. \"Fair enough.\"\n\n\"So what're you doing about it?\" she asked once her soup was finished.\n\n\"I'm going in tomorrow to sign the divorce papers.\"\n\n\"Seems a bit quick.\"\n\n\"No shit,\" Doug joined in.\n\n\"It's a lot of things,\" I said. \"Yeah, she only told me nine or ten days ago. That she wanted a separation and she was kind of seeing someone else. But I can't just sit back and do nothing. I can't just wait in limbo and let her spring it on me. I can't live in limbo.\"\n\n\"You need to feel like you're retaining some control over your life and your family,\" she said.\n\n\"Exactly.\"\n\n\"Including the control to be the one who ends it.\"\n\n\"I guess so.\"\n\n\"Why?\"\n\nI pondered this, my eyes going from big, chunky, bearded Doug to tiny, frail little Peggy. They were certainly an odd couple. Doug, the middle-aged, burly literature professor, divorced and a personal mess with a mind that scattered thoughts all over the place. Peggy, late-thirties and never married, with the precise mind and pinched looks not commonly associated with clinical psychologists. Oh, and the no-bullshit approach without excuses and qualifiers. She was very much a black-and-white person; there were no shades of gray and no excuses.\n\n\"You ever have the absolute love of your life--just totally out of the blue, without a clue it was coming--have her tell you she doesn't really love you anymore? That she's spending time with someone else, and that he's the only thing keeping her sane?\"\n\n\"Yeah,\" Doug sighed. \"Germaine.\"\n\n\"You?\" I said to Peggy.\n\n\"Not really.\"\n\n\"Let me tell you something. It's horrible. I mean, words cannot even describe what that did to me. How suddenly empty and useless I felt. It was a whole ton of things, y'know? Like betrayal and like I wasn't good enough, like there's something wrong with me. Like how could she do this? If not just to me; it's to Kyle, too. Like she was suddenly a stranger.\"\n\n\"You're trying to understand,\" Peggy surmised.\n\n\"At first I was,\" I said. \"Not now. Now I don't really care. Now I just--\"\n\n\"Don't want her to stay in control of what happens here because you're not sure you can handle it. Because you don't want to go through that all over again.\"\n\n\"Bingo.\"\n\nShe shrugged. \"Seems healthy enough.\"\n\n\"Really?\" Doug and I said in unison.\n\n\"Sure.\" She finished her soda, slurping up the last drops, before putting her glass down and looking at me. \"You're not a dumbass. I don't really know your whole history, but I can guess at quite a bit of it. And you're not likely to go running off half-cocked to just get revenge or try to hurt her back. You've thought this through, decided you can't play it by her rules and on her time lines, and you're taking control of the situation.\"\n\n\"Exactly,\" I said. \"And that's good?\"\n\n\"Don't see why not.\"\n\nI looked at Doug, who seemed to doubt this.\n\n\"One other thing,\" Peggy said.\n\n\"What's that?\"\n\n\"Remember, this is just a guess,\" she said, sliding out of the booth and picking up her tray. \"I haven't talked with her or observed her or seen anything, so it's just a guess.\"\n\n\"Okay.\"\n\n\"But she's slept with him. Whoever this guy is, she's slept with him.\"\n\nIt was like a punch to the gut.\n\n\"It wasn't depression that drove her to finally confront you,\" she said. \"It was guilt. Guilt about her double life. Guilt that while she's doing it--or at least did it--you were there taking care of everything for her.\"\n\nI couldn't say anything. Whitney still insisted she hadn't slept with him, and I half-believed her. Not totally. Hell, who wouldn't have doubts. Still, she was so insistent.\n\n\"Maybe it was just once,\" Peggy continued. \"Maybe a few times. It could still be going on.\"\n\n\"Last night,\" I finally said. \"When I went to bed, she was still awake.\"\n\n\"And she tried to seduce you, didn't she?\"\n\nI nodded.\n\nPeggy smiled. \"Then the affair's probably over. Her guilt is probably overwhelming, and sleeping with you--having sexual relations with you--may help her expiate her guilt.\"\n\n\"But it won't,\" I protested.\n\n\"But she thinks it will.\"\n\nPeggy hesitated, like she wanted to say more.\n\n\"What?\" Doug finally prompted her.\n\n\"Just thinking,\" she said.\n\n\"Thinking what?\"\n\n\"That I wouldn't want to be in your shoes right now.\"\n\n\"Why?\"\n\n\"Because now your decision just got a helluva lot more difficult.\"\n\n\"How so?\"\n\n\"Before,\" she said, \"you filed for divorce in response to her rejection of you. Now, though, she's not rejecting you anymore. If I'm a betting man, she's trying to figure out how to get past everything--forget what she's done and get you to forget it, too--and just go back to the way it was.\"\n\n\"So now I really am the one pushing for the divorce. The divorce that she really--at least probably--doesn't want anymore.\"\n\nPeggy nodded, then gave me a tight smile.\n\n\"Good luck with that one.\"\n\nI just slumped.\n\n* * * * *\n\n\"Where's Kyle?\" Whitney said when she walked in the door.\n\n\"Next door,\" I said, staring out the window and watching him run around and play in the backyard abutting ours.\n\nI listened to her hang up her jacket, then her footsteps approached me. I was surprised--and froze instantly--when she put her arms around my waist and hugged me from behind.\n\n\"I don't want a divorce,\" she said, her voice barely above a whisper.\n\n\"When did you quit seeing him?\" I said, not moving.\n\nShe said nothing.\n\n\"When was the last time you slept with him?\"\n\n\"I said I didn't do that,\" she said, her voice sounding tiny.\n\n\"You lied.\"\n\nI unclasped her hands at my waist and turned to face her.\n\n\"So when was it? Saturday, when you had to run out for a few hours?\"\n\nShe didn't say anything.\n\n\"Or maybe over an intimate lunch on Monday?\" I pressed.\n\nShe just stared at me, her face begging me to let it be.\n\nI stared back at her, not willing to give in until I had some answers.\n\n\"I said I didn't sleep with him,\" she finally said.\n\n\"Fine. You two didn't sleep together. When's the last time you fucked him? Or sucked his dick? Or let him eat you out? Huh? When was it, Whitney?\"\n\nShe covered her ears with her hands. \"Why don't you believe me?\"\n\n\"Because I don't,\" I yelled. \"Because I think you had an affair and you were all ready to leave me for him. But now I think you've changed your mind, and I don't know why. I don't know if it's because you really do love me, or if you just don't want to give up everything we've got.\"\n\n\"But I do,\" she yelled back. \"I do love you, Luke. And I'm sorry. I just forgot about that for awhile.\"\n\nI looked at her and could tell she was serious. Her face said it all. Her face and the rest of her body. She was pleading with me to just drop it all. To let it alone and forgive her and just go back to the way things were. To take her into my arms and hold her tight and tell her it would all be okay.\n\n\"Say something,\" she begged. \"Please, Luke. Say you still love me.\"\n\n\"I never stopped,\" I said, all of the fight going out of me.\n\n\"I'm sorry,\" she said, throwing herself at me and hugging me tightly. \"I'm just so sorry.\"\n\nI didn't hug her back, and she noticed after a moment.\n\n\"Luke?\" she said, looking into my face.\n\n\"I got in to see Rebecca early,\" I said. \"I signed the papers an hour ago.\"\n\n\"But you can--\"\n\n\"No, I can't. I won't, Whitney. I'm going through with it. You still won't tell me a goddamned thing, and there's no way in hell I'm going to just let it drop and spend the rest of my fucking life hoping it--whatever the hell 'it' is--hoping it doesn't happen again. I can't do that. I can't go through this again, and I can't live in dread of you doing it to me again.\"\n\nShe collapsed into a chair, sobbing and apologizing all in the same breath.\n\nI went out to intercept Kyle and take him out for a burger.\n\nCHAPTER SEVEN\n\nA few things they never really tell you about divorce.\n\nFirst, apparently it's common to still live under the same roof while the whole thing plays itself out in the courts. That's why Whitney got to live in the house until the final judgment even though everyone knew I'd be keeping the house. (It was a gift from my parents; they're loaded.) As such, Whitney had no claim to the house and wouldn't be getting any portion of it in the divorce, but she could still live there until the final judgment was entered and the judge agreed with what everyone already knew.\n\nSecond, even relatively simple divorces can take longer than you'd ever imagine. If everything was agreed upon up front, it could be over in three months or so. If even the smallest thing was still at issue, though, it could take a year and a half. A year and a half of still living in the same house, by the way. I still shudder at the thought.\n\nThird, it's damned trying on everyone to still live in the same house while the divorce is going on. Doug was right: It sucked way worse than I'd ever thought possible.\n\nSo once the written discovery was done, and we all confirmed that we both knew most of the financial picture, Rebecca suggested a settlement conference to speed things up.\n\nImagine that: A lawyer trying to get it done quickly and cheaply with the least amount of pain. I know, it surprised me, too.\n\n\"Professor Patterson,\" Whitney's lawyer said, extending his hand to shake mine. \"I'm Jim McNally. Whitney's attorney.\"\n\nHe was tall, late forties, full head of graying hair, and handsome as hell. Rebecca had already mentioned all of this to me, of course. His dashing good looks, easy charm, and instinct for the jugular. He was good, which still seemed like an oxymoron when discussing a lawyer.\n\n\"Call me Luke,\" I said.\n\n\"And I'm Jim.\"\n\nHe said hello to, and hugged, Rebecca. They seemed like old friends from way back. How do they do it? How can lawyers act so friendly with each other, then turn around and fight like hell against each other? They were all a different breed of cat, that's for sure.\n\nWe all walked into his conference room, and I saw Whitney already there, sitting and fidgeting.\n\n\"So,\" McNally said once everyone was seated, \"how're we gonna fix this mess?\"\n\nHe was looking at me, as was Whitney, but I said nothing. Instead, I did what I was told: I shut my fucking mouth--Rebecca's words, not mine--and let Rebecca do the talking for me.\n\n\"It's really pretty straightforward, Jammer,\" she said. \"Joint custody of Kyle; Luke as residential parent; Whitney can--\"\n\n\"Luke as residential parent?\" McNally interrupted. He turned to Whitney, who avoided his stare.\n\n\"Luke as residential parent,\" Rebecca confirmed. \"He's the one who's taking care of the boy now, so why change?\"\n\nMcNally's eyes narrowed. This was clearly coming as a surprise to him.\n\n\"When you say he's the one taking care of Kyle now, you mean he's . . . .\"\n\nRebecca turned to me and nodded.\n\n\"She means,\" I said, \"that I'm the one who feeds him, helps him with his homework, goes to his parent-teacher conferences, gets him to the doctor and the dentist, gets him to school. You know: The one who takes care of him.\"\n\n\"And Whitney? You're saying she does nothing?\"\n\nI looked at Whitney, my eyes staying on her as I spoke. \"Not at all. She helps out as best she can. But I'm only in class nine hours a week. I've got office hours another nine hours. Then I spend some time with research and meetings and the like. Still, my schedule works around his school far better, and I'm the one who takes care of it. Whitney words longer hours. Way longer hours. She helps out when she can. That's how it's always been with us.\"\n\nHe looked at Whitney, but she refused to meet his stare. After a moment, he turned back to us.\n\n\"All right, let's leave the issue of residential parent to the side for now. What about visitation?\"\n\n\"Standard,\" Rebecca said.\n\nHe nodded, expecting this.\n\n\"Support?\"\n\n\"Statutory,\" she said. \"Nonresidential parent pays the residential parent twenty percent of net income. They can equally divide the cost of health insurance--or both keep him on their respective policies, for that matter, at their own costs. Equally divide uncovered medical expenses and school tuition and stuff.\"\n\nHe jotted this down on his legal pad, saying nothing.\n\n\"What about financials? The house?\"\n\n\"Luke's nonmarital asset.\"\n\n\"You gonna give Whitney a disproportionate split based on this?\"\n\nRebecca had warned me to expect this. Even though the house was mine, and there was nothing Whitney could do to get any part of it, the court could still take my total assets into consideration when splitting up the property. So because I had a house worth two hundred grand already, the judge could award Whitney a disproportionate share of the marital assets.\n\n\"What's she looking for?\"\n\nMcNally looked up, hesitated, then spoke. \"She's got a 401(k) plan.\"\n\nRebecca smiled. \"I noticed that when I went through the discovery. Came as quite a surprise to Luke, too. He knew nothing about it.\"\n\nI looked at Whitney, saying nothing about the newest bit of information that had come out in the divorce and wondering what other secrets she'd been keeping from me. She only stared at the legal pad in front of her.",
        "\"Yeah,\" McNally said unapologetically. \"Well, it's there. Ninety grand. She wants to keep it.\"\n\n\"And everything else?\"\n\n\"Fifty-fifty.\"\n\n\"Their pensions?\"\n\n\"They each keep their own pensions. They're valued almost the same, so any paperwork to get 'em split would cost more than we're arguing about.\"\n\n\"Household furnishings?\" \n\n\"Kyle's things stay with Kyle,\" McNally said. \"Wherever he ends up. And I don't really want to waste our time arguing about anything else, do you?\"\n\n\"Not really,\" Rebecca said. \"Still.\"\n\nMcNally looked at me. \"You think you and Whitney will have any problem splitting the personal property?\"\n\nI looked at Rebecca, who nodded, then at Whitney, who still wouldn't look at me.\n\n\"No,\" I said, turning back to him. \"You're right. So long as I can keep my own stuff, I don't care about the rest of it.\"\n\n\"Whitney?\" he asked.\n\n\"That's fine,\" she concurred.\n\nHe looked at Rebecca. \"Think you can give us ten minutes or so?\"\n\nShe nodded, and we left the conference room.\n\nOn the sidewalk in front of the office, Rebecca lit a cigarette and inhaled.\n\n\"So it's going well?\" I asked, my body a bundle of frayed nerve endings.\n\n\"Oh yeah,\" she said, exhaling and smiling. \"Better than I expected.\"\n\n\"How so?\"\n\n\"Remember what I told you up front? Don't lie to me?\"\n\nI nodded.\n\n\"Now you see why,\" she said. \"The whole custody issue blindsided him.\"\n\n\"You mean she lied?\"\n\n\"It's not really a lie,\" Rebecca explained. \"It's really more like an inability to objectively see the facts. She thinks she's the great mom always there for everything--whether she is or not--and that's how she paints it. She's afraid--swear to Christ, all clients are--she's afraid he won't like her or something if he thinks she's a lousy mom. Also, she can't really admit to herself that you're the one doing most everything.\"\n\n\"But she's admitted it to me. I mean, Jesus, she's a lawyer. She doesn't already know this?\"\n\nRebecca shrugged. \"She's never been in private practice. And she's a mother, too. That usually overrides everything else.\"\n\n\"So she's lying to herself?\"\n\n\"Sorta like that.\"\n\n\"And how do you know it's not me that's lying?\"\n\n\"Did you see the look on her face when you got done talking?\"\n\n\"Not really. Just that she kind of shrank in the chair.\"\n\n\"Bingo. If you'd been lying, she'd have challenged you. But she didn't say a word.\"\n\n\"And McNally? He realizes that?\"\n\n\"Of course.\"\n\n\"And?\"\n\n\"And he's probably advising her right now that she doesn't stand a chance in hell of winning a custody battle. And that even if she does, it's gonna cost her a goddamned mint.\"\n\nI pondered this while Rebecca finished her cigarette.\n\nIt was closer to twenty minutes before McNally called us back in.\n\n\"The 401(k) split,\" he said once we were all seated. \"You didn't really answer me, Becca.\"\n\nShe grinned. \"I'm looking to make this global,\" she said. \"Settle everything. Custody and all.\"\n\nHe smiled, but it was a painful smile. \"And if we concede residential custody?\"\n\nShe looked at me, and I nodded back at her.\n\n\"Concede residential custody and she can have it.\"\n\n\"And if not?\" he asked, his eyes on Whitney as he asked.\n\nRebecca also turned to Whitney to drive home the point.\n\n\"If she doesn't agree, then we'll seek a fifty-fifty split of everything, 401(k) included, and we'll still end up with residential custody.\"\n\nWhitney looked up, her eyes finding mine and holding there.\n\nMcNally looked at her. \"You want a couple of days to think all this over?\"\n\nHer lips moved, but no words came out. Her eyes stayed locked on mine, and I thought she was going to break down. Before she did, though, she shook her head.\n\n\"Write it all up,\" she said, holding her emotions in check. \"I'll sign it.\"\n\nI didn't react, amazed it was all so simple.\n\nIt was early-August, little more than five months after Whitney first told me she didn't love me.\n\nAnd now, with all of the written discovery in and all of our assets disclosed to the other, it took less than an hour around a conference table to settle up and neatly divide ten years of married life together.\n\nI seemed somehow disappointed that it could all be so goddamned simple to just end a family.\n\n* * * * *\n\nRebecca told me how we should do it, and that's how we were doing it on a hot Saturday morning two weeks later.\n\nThe settlement papers were all prepared and signed, and the final hearing would be in four days. We had to our personal property split up now or the hearing would be delayed until we could.\n\nSo there we stood, in the den, putting stickers on the things we wanted. Yellow dot stickers for her, blue dot stickers for me.\n\nWe'd already gone through the kitchen, dining room, and master bedroom. We had the family room, guest bedroom, and den left. Only a few words had been spoken, and we hadn't disagreed on a single item. It was a somber affair, and I was ready to go throw myself in front of a fucking train. That or just let her keep everything. It would be a lot less painful.\n\n\"Remember this?\" Whitney said, her fingertips tracing the frame as she looked at it.\n\n\"I'll never forget,\" I said, staring at the ten-years-younger version of us sipping margaritas on the beach at Cabo during our honeymoon.\n\n\"Remember what we did after we finished those margaritas?\"\n\nI smiled, remembering as she stood, led me to a distant rock outcropping, and attacked me with her womanly wiles. She damned near fucked me blind a hundred feet from a crowded beach, and I'd been so lost in the moment I'd forgotten to put my trunks back on until we were almost caught.\n\nShe turned and looked at me, searching my face for an answer to her question.\n\n\"What happened, Whit?\" I said, my voice choking. \"What went wrong?\"\n\n\"I don't know,\" she said, her voice a whisper as the smile at the happy memory faded from her face. \"I don't know.\"\n\nI brushed the tears from my cheeks, slapped a sticker on my desk and chair, and turned to her.\n\n\"You can have everything else,\" I said. \"Everything.\"\n\n\"Luke,\" she said to my retreating back. \"I'm sorry, Luke. Really.\"\n\nBut sorry wasn't cutting it anymore.\n\nFive months later, and she still wouldn't tell me why.\n\nOr who.\n\nOr what, for that matter.\n\n* * * * *\n\n\"Dad?\"\n\n\"Yeah, Kyle,\" I said, worried by the tiny tone of his voice. We were sprawled out on opposite ends of the couch, our stocking feet touching, as we read out books.\n\n\"I'm still gonna see her, right?\"\n\nI folded the book against my chest.\n\n\"Anytime you want,\" I said.\n\n\"Promise?\"\n\n\"She's your mother,\" I said. \"I'll never keep you from her.\"\n\n\"Okay.\"\n\nThus ended Week One Post Marriage.\n\nShe'd missed visitation on Wednesday night so she could get her apartment unpacked and set up. When I offered her the weekend starting tonight, she'd declined so she could finish getting settled in.\n\n\"She promised to be here on Wednesday, right?\"\n\nI nodded. \"She's just trying to make her place nice for you, little man.\"\n\nHis face said he didn't really believe me.\n\n\"Hey,\" I said, deciding that now was the time to spring the surprise on him.\n\n\"What?\"\n\n\"You still want that dog?\"\n\nHis face lit up. \"You mean it?\"\n\n\"Sure,\" I said. I'd been wondering for a few months how to get Kyle excited about life again. He'd always wanted a dog, but Whitney had always refused and I had never cared. Now that it was all over and Kyle wasn't getting any better, I knew it was now or never.\n\n\"What kind of dog?\" he said, tossing his book on the floor and crawling up to me.\n\n\"What kind do you want?\"\n\n\"I don't know,\" he said, his hands now on my shoulders pinning me to the couch, his face a wide-eyed bundle of excitement.\n\n\"Well, why don't we start looking around?\"\n\n\"Tomorrow?\" he said.\n\n\"That'll work.\"\n\n\"Man,\" he said, his eyes glazing. \"A dog.\"\n\nThen he hopped off the couch.\n\n\"Where you going?\" I asked.\n\n\"Next door to tell Tyson.\"\n\n\"Back in fifteen minutes,\" I called to him as he ran out the door.\n\n\"Sure thing,\" he called back.\n\nI didn't really know it at the time, but the next day would bring some pretty major changes into our life."
    ],
    "authorname": "Rehnquist",
    "tags": [
        "cheating",
        "divorce"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-damp-gray-gone-ch-01"
}