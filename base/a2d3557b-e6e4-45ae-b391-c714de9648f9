{
    "title": "The Novelist Pt. 09",
    "pages": [
        "Author's note: This story contains themes of incest, BDSM and Dominant-submissive relationships. If these themes offend you, please stop reading now!\n\nPlease read this story from Part 1 to understand the story progression. This can't be read as a stand-alone story.\n\nAll characters are fictional. Any similarities to actual people are purely coincidental.\n\nI encourage all readers to comment and vote. There is no better way to hone your writing skills than feedback\u2014good or bad.\n\n******\n\nThe Novelist: Part 9\n\nKimmie was up bright and early. Today was a big day for her. Her first official day on the job. Sir had mentioned some important meetings. She'd gone through her closet already and set out some clothes. Normally she'd shower in the morning, but the bath looked inviting. She put on some music, soaked in the tub and ran a fresh razor down her legs to be sure she was silky smooth.\n\nAfter her bath, she dressed herself in the St. John Collection Lilac fitted tweed suit with the matching jacket. She put on a lilac crepe cap sleeve top with a pleated boat neckline. She hadn't put on any underwear. Then she stopped and thought about whether she should wear stockings. It looked better without them, she decided. She took a seat in the armchair and put on her cream-colored Jimmy Choo Kuki patent leather platform pumps. They had an open toe and sexy crisscross straps that she just loved.\n\nShe went to the bathroom and applied some subtle makeup. Less is more, Tom had said when they purchased it. She used a light lipstick and a touch of eye shadow. She took a moment to style her hair. A quick spritz of Chanel perfume, then she walked to the full-length mirror to get an idea of how it all came together. She adored the outfit.\n\n\"Oh, it's lovely to meet you too.\" She said pretending to make an introduction. \"These? They're Jimmy Choo. I just adored them. Sometimes a girl needs to spoil herself.\"\n\nIt still felt like she was living someone else's life. Being rich must be nice, she thought. It pained her to think that she would have to go back to Northridge at some point to her mom's crummy house and her asshole stepdad. She wanted to live here forever.\n\n******\n\nTom was awoken by Alexis kissing his neck. He opened his eyes and smiled his wry smile. Marie and Alexis had fallen asleep on either side of him, and he couldn't remember the last time he felt so rested.\n\n\"Good morning, birthday boy.\" Alexis whispered pulling his face to the side and giving him a wet, sensual kiss on the lips.\n\nMarie reached over and tilted his head back over toward her. \"Happy birthday, Sir.\" She said planting a kiss that rivaled Alexis'.\n\n\"Good morning, Lexi. Good morning, mom.\" He said contentedly. Then he rubbed Alexis' belly. \"Good morning, little man.\"\n\nMarie still got a little choked up at the gesture. The news was still fresh, and it made her emotional. She knew now that she was right when she first arrived. This woman did love her son. A part of her wondered what it must be like to carry his child and share him at the same time.\n\nMarie let her hand drift down to his cock. \"Don't worry, Sir. Mommy's going to take care of her big boy's cock. You just stay right there, Sir.\"\n\nShe crawled down between his legs and lifted his limp length in her hand surprised to see how full his balls looked. She wondered how his body managed to keep up with it all. She stared for a moment admiring his sack. She'd never really thought much about a man's scrotum before she arrived here. She loved how it looked. The sack itself hung low and each testicle was visible as the loose skin draped over it. They were large, she thought. Larger than she imagined a testicle could be, but then again everything about his manhood seemed a bit oversized.\n\nShe pushed her head low and let her tongue wriggle down beneath his balls teasing the edge of his ass. Then she licked just below his balls in that spot that she didn't realize was so sensitive until recently. Finally, her tongue reached his sack licking it lightly, and swirling around each testicle. He let out a long, satisfied groan. She would have preferred to slip his shaft into her mouth right then, but she lingered and took her time making sure his birthday was extra special.\n\nAlexis straddled his torso and let her voluminous chest hang down above his head. Tom looked at her large pink areolas, and then reached up squeezing each breast and lowering them down to his mouth. He sucked one nipple and then sucked the other, biting each one softly.\n\n\"Ass or pussy, Sir?\" She asked innocently. \"The birthday boy gets to pick his hole.\"\n\n\"Ass, please.\" He said quietly.\n\nAlexis scooted back moving her perfect round ass toward his mother.\n\n\"He wants it in my ass, Marie.\" She said without looking back. \"Would you do the honors?\"\n\nMarie unlatched herself from his balls taking his thick shaft in her head and holding it up as Alexis pushed backward. It pressed on her little asshole.\n\n\"Mmmmmm.\" She moaned softly. \"A little lube please.\"\n\nMarie let go of his shaft and spread her ass cheeks burying her face and tongue in her rear. She got carried away and licked her voraciously.\n\n\"Oh god.\" Alexis said closing her eyes and enjoying the attention.\n\nThen Marie pulled back, lifted his cock, spit on the head rubbing it around with her palm, and finally pressed it back into her hole. Alexis sat back and felt it stretch her open.\n\n\"Fuck, I love that...\" She whispered as she took him deeper.\n\nTom hooked his hips and lifted upward sliding the rest of the way inside her. His ass was just slightly off the bed, and Marie took the opportunity to wrap her mouth around his sack.\n\n\"Oh my god, that feels good.\" He said feeling his mother's tongue.\n\nAlexis moved forward feeling his thickness sliding inside of her. Then she pushed back and proceeded to fuck him with her asshole. No one screamed. No one said another word. It was just collective moans as she rode him until he sprayed his cum inside her ass.\n\nMarie watched the entire act just inches away letting her tongue occasionally slip out and graze his sack or her tanned ass. She waited for the moment that Alexis finally slid his cock from inside her, and then she latched onto her hole and let his seed fill her eager mouth. She wasn't hesitant any longer about these perverted acts. She didn't care where it had been. She wanted to taste him. She wanted to please Alexis. She had two lovers now. Two owners.\n\n******\n\nAngie sat in her bed staring at the ceiling. She was feeling awfully conflicted about heading back to Saratoga Springs. She enjoyed her day here yesterday, and she enjoyed the company of these women. She wondered why it was that she couldn't seem to make friends easily at home. Her life was back there, though. There wasn't anything she could do about it.\n\nShe crawled out of bed and took a shower. Then she looked at her suitcase. She had clothes today. It wasn't necessary to prance around nude anymore. But she couldn't seem to select an outfit. None of it seemed right.\n\n\"What am I doing?\" She said to herself.\n\n******\n\nJane helped Marie prepare breakfast in the kitchen. She was happy to be let out of her room so early. It was Sir's birthday and she hoped to be able to see him before he left. They were making pancakes. Marie had set the table in the dining room already. She wanted it to be perfect. Everything had gone so well since she walked into his room last night.\n\n\"You seem happy.\" Jane said watching her sister operate with familiarity in the kitchen.\n\n\"Why shouldn't I be?\" Marie replied with a smile on her face. \"Everything is going to be just fine. I haven't felt this good in years.\"\n\nIt was the first time that she truly believed that everything in her life was finally okay.\n\nJane had to agree. She couldn't remember a time when her sister seemed so light hearted and content. Somehow things seemed to be working out for them in this house. Sure it was still difficult to adjust to everything, but Jane preferred to not think too hard about it. She just wanted to enjoy herself and tried not to imagine the complications of the life changing move that seemed inevitable at this point.\n\n\"Let me ask you a question.\" Marie said as she sliced some strawberries on a cutting board. They were in season and she ate a sliver savoring the sweet taste. \"When I went to get you yesterday morning and I opened your door... I guess I thought your room was like mine. Is it just not decorated? Did Sir mention why it looks so empty?\"\n\nJane didn't want to say much about the room. Alexis and Fran barely acknowledged it when she said she was staying there. It was like an unspoken rule. And deep down, Jane was beginning to dread the day she might have to leave it. But all the girls left that room after whatever time he deemed necessary. It's just how it worked.\n\n\"I'm not sure what you mean.\" Jane replied without much expression. \"I think my room is quite nice.\"\n\nMarie stopped for a moment and looked her up and down. She couldn't mean it. There was something strange in her response. She shook it off and moved on. She didn't want to be burdened by her curiosity.\n\n\"Tradition.\" Marie stated holding up a cookie cutter. \"This is what I did for every birthday when he still lived at home.\"\n\nJane laughed. \"You were always such a perfect mother. I couldn't have survived the world of bake sales and PTA meetings. You loved it though. From the second he was born. It came so natural to you.\" She paused for a moment before saying what she had needed to say for the last few days. \"I love him, Marie. I really love him.\"\n\n\"I know.\" Marie said fixing a perfectly arranged plate of food. She looked up at her sister. \"I love him too. I'm in love with him too. It's okay, Jane. I'm okay with it.\" She arranged some strawberries on the plate. \"And.... Voila! Here. Go put that at his place.\"\n\nJane needed to hear her sister give her approval again. The deep connection she felt toward her nephew was undeniable.\n\n******\n\nAlexis selected some clothes while he finished his shower and dried himself off. She was being particularly attentive this morning. She walked out with his grey Hugo Boss suit.\n\n\"I think this one is perfect, Sir.\" She said hanging it on the bathroom door. \"Aren't you nervous or excited? You seem so calm.\"\n\n\"Why shouldn't I be calm?\" Tom asked.\n\n\"You're going to collect a million dollar check, Sir! That's a big deal.\" She replied. \"And you're signing your new contracts. I just wish it didn't have to be today.\"\n\n\"It's just money, Lexi. It's just work.\" He stated frankly. \"And I'm sorry it had to be today, but I'll be home tonight. We can go out for a nice dinner or stay in and watch a movie. I'll eat light during my meetings.\"\n\n\"It's your birthday, Sir. Let's do whatever you want.\"\n\n\"Okay.\" He said. \"Hand me my suit.\"\n\nShe walked up behind him and wrapped her arms around his waist resting her head on his shoulder. She looked at him in the reflection of the framed mirror over the sink. She didn't say anything. She just squeezed him tightly in her arms. She never wanted to let him go.\n\nThere was a nagging thought in the back of her mind that kept bothering her. She truly enjoyed sharing him with Marie last night and this morning. The thought of losing her was so difficult to think about today.\n\n\"Sir?\" She said quietly. \"Are you really sending Marie away? Did you see the way she reacted when she found out I'm pregnant? You just can't, Sir. I'm begging you.\"\n\nAlexis noticed his eyes water slightly.\n\n\"I know, Lexi.\" He said looking down for a moment with his blank, pensive stare.\n\nIt's the look he got when he began to overthink things. He brought his eyes back up slowly to meet hers.\n\n\"I'm imperfect.\" He stated softly. \"When I made that agreement I never could have understood what my life would become. My feelings about this lifestyle are different than Stephen's. My feelings have evolved. Stephen looks at everything more coldly. I want to say no. But part of me doesn't want to break my word... and... the other part of me knows I need to say no. I can't let either my mother or my aunt go. I'm not sure what to say to Stephen. He's not an enemy I want to have.\"\n\nAlexis looked hopeful. \"I think you just worded it beautifully, Sir. Just say that.\"\n\n\"We'll see, Lexi. We'll see.\" Then he pushed those thoughts away and flashed his wry smile.\n\nTom lifted her up and set her on the bathroom counter. He kissed her lips lightly. Then her chin. Then the nape of her neck. His lips moved down her chest kissing the swells of each breast. Then across her flat tummy until he settled himself between her legs. He glanced up as his tongue snaked out across her sex. He saw the surprised look on her face and admired her soft, delicate features. He felt her fingers comb through his short brown hair encouraging his actions.\n\n******\n\nKimmie was chipper as could be as she walked down the stairs with a newfound bounce in her step. She nearly floated into the kitchen. She set her handbag on the island as Marie and Jane looked up and noticed her outfit.\n\nJane let out a whistle. \"Hot stuff!\"\n\n\"Wow, Kimmie.\" Marie exclaimed remembering how she felt after her makeover last Wednesday.\n\n\"This old thing?\" She twirled practically bursting with joy. \"It's my first day as Sir's assistant. I wanted to look perfect for the meetings. He's just amazing, isn't he? I don't think I've ever met such a thoughtful person.\"\n\n\"His assistant?\" Marie asked.\n\n\"Yeah. Sir wants me to help him with his work and running the house. He said if I do well that he'll train me. But I'm going to do better than well. I'll show him how perfect I can be.\"\n\n\"A big day starts with a big breakfast.\" Marie said in a motherly tone. \"Sit down and let me fix you a plate.\"\n\nKimmie knelt on the small bench seat next to Tom's chair in the dining room. Marie placed a healthy sized breakfast in front of her. She was starving as usual. She looked up as Tom entered the room. He smiled seeing the heart shaped stack of pancakes on his dish. His mom had spelled out the number thirty-one with strawberry pieces. Some things never changed, he thought. Then he looked at the petite girl stuffing her face.\n\n\"Kimmie, you look amazing.\" He said taking in her appearance.\n\n\"Thank you, Sir.\" She replied smiling.\n\n\"Stand up.\" He said watching the young girl get to her feet. He kicked the small bench away from her place. \"Now stand like I told you at the desk last night.\"\n\nShe immediately spread her legs open, bent at the waist, and placed her forearms on the table on either side of her plate with her palms down. Her stack of pancakes was just in front of her face.\n\n\"Good. Don't move.\" He said examining her tiny frame.\n\nHer ass hung out and the skirt was hugging it particularly tightly. He wondered how long he could wait before he would want to fuck her again.\n\n\"Jane, come in here.\"\n\nJane came in and knelt next to his chair. \"Happy birthday, Sir.\"\n\n\"Thank you.\" He replied graciously. \"I need you to feed Kimmie for me.\"\n\nShe wasn't sure what he meant at first. She looked up at the girl and then got to her feet. Jane took the plate of food and cut off a bite of pancake lifting it to her mouth. Kimmie opened wide cleaning the fork.\n\n\"So my lawyer's name is?\" He asked quizzing her.\n\n\"Frank Donovan.\" Kimmie responded taking another bite from the fork and swallowing.\n\n\"Good. My agent?\"\n\n\"Jim Cohen, Sir.\" She replied before turning toward Jane. \"Orange juice, please.\"\n\nJane took the glass of orange juice lifting it to her lips and tilting it slowly so she could sip it. It left a small lipstick smudge on the glass. It was a challenge to eat this way, but she kept herself in position. If this pleased him then she'd do it for as long as he wanted.\n\n\"Did you cum last night?\"\n\n\"No, Sir.\"\n\n\"Why not?\"\n\n\"Because you told me that you'd let me know when I can cum, Sir. You told me that you were going to make me earn it.\" She replied. \"Sir?\"\n\n\"Yes, Kimmie?\"\n\n\"That doesn't mean I didn't want to, Sir. I thought about it all night long.\" She said. \"Pancake, please.\"\n\nShe turned her head toward Jane waiting for another bite.\n\nTom looked down at his watch. It was already ten in the morning. He never responded to Kimmie's comment, which she found a little frustrating. She wanted him to know that she struggled with it. And did she ever. By the time she left his office last night her pussy was a sopping mess and her ass was sore. It's all she thought about until this morning.\n\nHe looked up surprised to see Angie enter the room. She came over next to his seat and knelt on the floor.\n\n\"Good morning, Sir.\" She stated.\n\nHe noted that she was still naked. \"Why didn't you put on clothes?\"\n\n\"I can wear clothes when I get back home, Sir. Until then... I want to be like the other girls.\"\n\nTom knew then that she had finally forgiven him for everything. He'd honor the agreement that he made and purchase her ticket home for the following day. He was going to be sad to see her leave. She was such a genuine person, and genuine people were few and far between.\n\n\"Come, sit.\" He said patting the small seat on his other side. Angie got up and walked around and then settled herself back on her knees at the table. \"Jane, would you lift up Kimmie's skirt, please.\"\n\nJane set the fork down and lifted the hem of the young girl's narrow skirt until it was up around her waist.\n\n\"Well...\" Tom said as if she should know what to do next. \"Get on your knees and lick her pussy.\"\n\nAngie squirmed hearing his command. She immediately moistened remembering the pleasure she got from the older woman yesterday. She still couldn't believe how incredibly turned on it made her watching Tom direct these women.\n\nKimmie just looked at him unsure. Then she felt the tongue as it touched her. She gasped. Her face looked shocked by the intensity of the sensations. Tom picked up his knife and fork and continued eating without even glancing in her direction. The minutes ticked by as he listened to her breathing get shallower.\n\n\"Oh god...\" Kimmie finally groaned. She wanted to look back, but she kept her forearms and palms on the table as he instructed. Her body began to tense. \"Oh god... Sir, I'm going to cum...\"\n\nTom cut another bite and then took a sip of his juice. He dabbed his face with a napkin looking very relaxed.\n\n\"You better not, Kimmie. I haven't given you permission.\"\n\n\"What...?\" She looked alarmed and confused. \"But I'm not sure I can stop it, Sir...\"\n\nThen he looked over at her finally making eye contact. \"Maybe you should try thinking about something else.\"\n\nKimmie's hands began to tremble on the table. She tightened her muscles even more trying to remain still. Her entire body felt rigid. She started thinking about a calculus lecture she listened to last semester that she never fully understood. It only helped for a moment.\n\n\"Eeergh.\" She croaked out straining to remain silent.\n\nTom could see her knees shaking now. Her body was giving in no matter how hard she fought it. She kept her eyes locked on him in distress. She was barely even breathing except for the occasional gasp when her oxygen ran out.\n\n\"I...\" She started but then stopped straining harder. \"Oh god, I can't...\" She clamped her mouth shut again. Her body was a tense, trembling time bomb. \"Oh god, Sir...\" She pleaded with her eyes. \"I can't!\" She screamed. \"I can't! Please I can't hold off any longer. Please, Sir. Just let me...\"\n\nTom leaned back and opened his mouth to speak. She watched his lips waiting for them to form the words she needed to here. And then he said, \"That's enough, Jane. Thank you.\"\n\nThe tongue disappeared as Jane leaned back on her heels.\n\n\"No...\" Kimmie gasped quietly.\n\nThose weren't the right words. She was ragged and needy. She looked at him again and saw in his eyes that she wouldn't get to cum. He merely wanted to torture her.",
        "Jane's eyes were focused on Angie's pussy under the table. She looked between Kimmie's legs seeing Angie's fingers rubbing her clit with ferocious need. Nobody else seemed to notice it, but Jane licked her lips involuntarily thinking about being forced to pleasure her again.\n\nTom finally pushed his chair back and stood up. He walked over behind his assistant and cupped her pussy in his right hand rubbing it back and forth. \"Shit, Kimmie.\" He said quietly. \"You're soaking wet.\"\n\n\"I know, Sir.\" She whined softly feeling his fingers move back and forth.\n\nIt amazed her how quickly she felt the need to cum. Maybe this is what he wanted, she thought. Maybe he wanted to be the one to get her off.\n\n\"Well, we need to head out in a few minutes.\" He said.\n\nThen he removed his hand and walked back out into the kitchen.\n\n******\n\nAlexis snapped into action the moment he walked out the door. She ran upstairs and jumped in the shower. It was going to be such an exciting occasion. Even she hadn't seen all the girls together in one place. She wondered what it would be like to see them meet each other. The anticipation was palpable.\n\nShe couldn't remember the last time she'd been in such a good mood. Something had changed inside her. He was beginning to tell people about her pregnancy and she was just certain that her future in this house was secure. It always scared her when she thought of the unknown. And not being in his life anymore was the scariest thought of all. But it seemed unlikely now.\n\nAlexis remembered the day early in their relationship when she asked if he wanted to hear about the men she had been with before him. Tom had been quiet and introspective as he thought about it.\n\n\"No.\" He had told her. \"Nothing up to this point matters to me. I only care about the present and the future.\"\n\nShe never mentioned it again. There was something about his answer that she always thought hinted toward a long life together. He didn't want any of the jealousy that came with knowing past history. He just wanted her.\n\nShe had the radio on in the bathroom singing along to the golden oldies station while she got ready. The girls would be arriving throughout the day. She expected Gabriella, Francesca and Karine would get here first. She applied some makeup, which was not a typical routine for her, and then she fixed her hair. Finally, she ran downstairs to begin the preparations.\n\n******\n\nMarie stood in the kitchen with a woman she'd never met before. Gabriella unloaded grocery bags onto the kitchen table getting ready to start cooking for the party. She was an attractive woman in her late twenties. She had shed her clothing and Marie noted her thin face, small bust, tiny waist, wide hips and incredibly large ass. It was the feature that, quite literally, stuck out the most. Her skin was light, almost white, and her normally long brown hair was dyed blonde. It was a typically curvy body for a South American -- buxom and toned and thick in all the right places. She was one of those women that exuded sexuality.\n\nGabriella was Venezuelan, although she was born in the states and grew up for the most part in a community in south Miami. It had been six years since she moved to Los Angeles to pursue her dreams of being a culinary chef. Currently she worked as a sous chef at the Coupa Caf\u00e9 just up the street from Fran's salon.\n\nAlexis came down around the corner seeing them together.\n\n\"Gabby!\" She screeched. \"Oh my gosh, it's been weeks since I've seen you!\"\n\nGabby ran over and gave her a big hug. \"Sir's mother?\" She said deviously. \"What exactly has been going on here?\"\n\n\"Oh it's such a long story.\" Alexis sighed and then in a more upbeat voice she continued. \"But tonight is going to be so special! All the girls will be here.\"\n\n\"I know. I'm nervous.\"\n\n\"Don't be nervous.\" Alexis replied. \"I have the feeling that this is going to be the beginning of a lot of new changes. I think it's going to be wonderful. I want to see everyone more often. Do you have everything you need?\"\n\n\"Yeah.\" She smiled and batted her big brown eyes. \"Marie is going to help me make dough for tequenos. I'm making mini arepas too. My mom sent me some Venezuelan cheese. It's impossible to get it in the states. It'll be delicious.\"\n\nThe doorbell rang interrupting them.\n\n\"More people!\" Alexis said. \"Pardon me. I'm going to be running around all day.\"\n\nMarie noted her excitement. It seemed that there was an underlying nervousness about it. Alexis hadn't been receptive to the idea of a surprise party at first. When Marie mentioned it in the car in Saratoga Springs she seemed to think he wouldn't like it. Now, she had committed herself, and Marie wondered if she was worried that he might not be pleased after all.\n\n******\n\nAlexis turned leaving the two women and moved back toward the foyer. It must be Francesca, she thought. She also needed time to prepare. She walked briskly toward the door and swung it open.\n\n\"Oh shit! I'm sorry. I'm not looking.\" Erik turned his head and covered his eyes as he stood on the doorstep with a small carryon bag slung over his shoulder.\n\n\"Erik!\" She squealed. \"Oh you made it! I thought you wouldn't be in until later. Please come in.\"\n\nShe grabbed his free hand pulling him into the house.\n\n\"I...\" He still had his eyes closed. \"... You're naked.\" Then he thought about how strange that was. \"Do you always answer the door like that?\"\n\nAlexis reached up and grabbed his hand pulling it away from his eyes.\n\n\"Sir never said you were such a prude.\" She teased him. \"Come on, take a look and get it over with.\" She did a twirl showing off her body. \"There's going to be a lot of women here today. You can't be so shy. Just remember, you can look but don't touch.\"\n\nErik couldn't take his eyes off her breasts. \"He... he really wasn't kidding when he told me about his lifestyle?\" He asked timidly already knowing the answer.\n\nHe wouldn't have believed him at all a few days ago had it not been for Alexis nodding along with his story. It just seemed so crazy.\n\n\"Sir never kids about that.\" She responded sweetly. \"I didn't think you'd be here until tonight. I'm so happy you made it on short notice. I don't want you to do anything today. Just relax. I'll take your bag and then have someone get you whatever you need. Does that sound okay?\"\n\nErik looked around the foyer taking in the first view of his best friend's house. It seemed far grander than he ever expected. Part of him wasn't sure how to respond. He stared back at the nude blonde woman in front of him.\n\n\"How did he end up with someone like you?\" He asked. \"You're just...\"\n\nAlexis gave Erik a kiss on the cheek.\n\n\"You're sweet.\" Then she hollered out loud to the kitchen. \"Marie, I need your help.\"\n\nAlexis had failed to mention that she invited Erik. Marie turned to head into the foyer. She wanted to feel useful today. What she hadn't expected was to see the boy that she'd known since he was eleven years old.\n\n******\n\nTom leaned back in his chair on the patio at Geoffrey's. Frank had changed the location from Nobu thinking that a relaxed location might be nicer. The restaurant was located off the Pacific Coast Highway in Malibu just north of Pepperdine University. The patio hung over a cliff hovering high above the ocean. The waves crashed against the rocks below offering a both tranquil and spectacular view.\n\nKimmie was polishing off an order of jumbo coconut shrimp dipping her last one in a mango chutney sauce. She had a napkin tucked into the collar of her lavender shirt terrified about spilling anything on her new outfit. She kept her notebook open. She'd been writing down any important tidbits as they were discussed.\n\nTom and Frank had spent the majority of the lunch discussing his home and the events of the other evening. Tom wanted his advice on how to manage things with the baby. He asked what he thought about purchasing another home on his street. They hashed out some ideas. Now, it was time to get to business.\n\n\"So before we meet with Maryanne, I wanted to talk through the deal points on your new contract.\" Frank stated rather comfortably.\n\nThis was second nature to him. He loved the delicate art of deal making.\n\n\"I got a call from their lawyer agreeing to the offer we posed to Maryanne on the phone. Honestly, Tom, it seemed a little too easy.\"\n\n\"That's good news. Why do you think it's too easy?\" Tom asked.\n\nHe was always curious about the way Frank handled his business. The amount of money they offered him to write befuddled him. He never thought it was worth all that much, and he didn't consider himself a great writer.\n\n\"I got a sense that they thought they had done well. Usually they're reluctant, Tom. Usually they make it sound like I'm bleeding them. I took a guess that they might have higher expectations for your new book than they let on.\" He continued. \"So I told them that there was a misunderstanding. I said we were asking for fifteen percent gross, not ten.\"\n\n\"And?\" Tom asked.\n\n\"What do you think they said?!\" He replied sarcastically. \"They lost it. Their guy called me every name under the sun and accused me backtracking on our offer.\" Frank paused. \"Which was closer to the response I initially expected. It took a little hardball, but they agreed. As for the bonus, they countered at $150K per book if it stayed on the best seller list for more than ten weeks. That's fine. That's chump change compared to an extra five percent of gross.\"\n\n\"I don't know what to say.\" Tom replied.\n\n\"Don't say anything. Consider it a birthday present.\" Frank replied. He smiled as he watched Tom's expression. \"What? You didn't think I knew?\"\n\n\"Pay attention, Kimmie.\" Tom said putting his hand on the young girl's thigh. \"You'll get quite an education in business if you hang around this guy.\"\n\n\"Speaking of which,\" Frank added reaching down and lifting a box from under the table, \"I got you a little something.\"\n\nTom looked at the plain brown wrapping on the box. He tore back the paper and uncovered a wooden humidor of Cohiba Cuban Cigars. He opened the box and smelled the rich tobacco scent.\n\n\"You didn't have to, Frank.\" Tom said genuinely touched.\n\n\"Oh course I did. Those are the Cohiba 1966s. That was voted one of the world's best cigars last year. It's a limited edition run with some of the finest tobacco. Those came straight out of the factory in Cuba last week.\"\n\n\"I'm not going to ask.\"\n\n\"Good. I'm not going to say.\" Frank smiled. \"Come on. We've got to get back to Beverly Hills. I have to stop at the office briefly. I'll meet you at The Ivy at 5pm.\"\n\nFrank paid the bill and they stood up to leave.\n\n******\n\n\"Mrs. Bolden?\" Erik said with wide eyes.\n\nAlexis immediately realized her mistake. It hadn't occurred to her the long history these two shared, nor did she consider the utter confusion it would cause Erik when he saw her submission.\n\nMarie tried her best to cover herself. She ended up crouching down and wrapping her hands around her body.\n\n\"Erik?\" She was just as confused as he was. \"I... uh... I didn't know you were coming out.\"\n\nAlexis wasn't sure how to approach it. She didn't know how delicate she should be. In her view there was only one way to tackle this situation.\n\n\"Shit.\" She finally said. \"Erik, you have to understand that Sir's life is...\" He looked at her waiting for an explanation. \"... well... What's going on here is...\" She paused again.\n\n\"Is what?\" Erik asked.\n\nHe wasn't angry or grossed out. On the contrary, he studied the woman crouched down on the floor. He'd jerked off to her plenty of times in his teens. Something here seemed amiss.\n\n\"Oh hell.\" Alexis said. \"Tom fucked her.\"\n\n\"No way!\" Erik blurted barely able to comprehend the blunt reality. He wore a wide, amused smile as if Tom had attained some pinnacle of achievement.\n\nMarie cringed and closed her eyes tight as she heard the terse statement. The only time she felt embarrassed was when someone she knew was judging her. It felt similar to the reaction she got from Jane when her secret was revealed. After a moment, she opened her eyes back up and stared at her son's friend feeling his glare burn into her naked body.\n\n\"Yes. He did.\" Alexis replied recognizing his amusement and feeling better about the situation. \"Marie, stop acting so foolish. This was bound to happen.\"\n\n\"Um... yes, mistress.\" She whispered as she reluctantly shifted onto her knees into a proper position. She looked up into Erik's eyes and with the most stern, motherly glare. \"Don't you dare tell your mother what you saw here.\" She saw the shocked, lustful look on his face. \"I'm serious, young man.\"\n\n\"I won't. I promise, Mrs. Bolden.\"\n\nHe felt like he was a teenager that just got in trouble. He wouldn't conceive of telling anyone about this. He didn't think anyone would believe him anyway.\n\n\"Please don't call me that.\" She replied glancing down. \"It's embarrassing. Just call me Marie.\"\n\n\"I... I promise, Marie.\" He stuttered again. There was an uncomfortable silence. Erik finally smiled and said, \"I guess it doesn't hurt to say that I had a huge crush on you when I was in high school.\"\n\nMarie didn't know how to respond. Then she realized the naughty smile that was creeping across her face. All these years she felt neglected and inherently nonsexual. It appeared that she was far sexier than she ever realized.\n\n\"Well, she's owned now, mister.\" Alexis said playfully pushing him. \"So hands off.\" Then she smiled her graceful smile again. \"Geez, you two are so serious.\"\n\nErik looked back to the blonde. He studied her soft features. Her smile was radiant and her lips were full and perfect. Everything about her seemed absolutely beautiful with a somewhat innocent undertone. She wasn't innocent at all, though. He realized that now as he watched her standing there displaying her tanned, toned figure with her hands on her hips.\n\n\"Come on, Erik.\" She said putting her arm around him and giving him a squeeze. \"Let's go get you a drink.\" She could see that his eyes were still on Marie's body. \"Marie, I want you to crawl back to the kitchen.\"\n\nShe didn't say anything as Marie slipped onto her hands and knees and began crawling slowly in front of them. Her bare ass swished back and forth flashing her bald pussy. \"That's the view you were hoping for, right?\" She asked giving Erik another squeeze and a devilish grin. \"You're going to love it here. I'm so glad you came.\"\n\nErik couldn't hide the erection pushing at his pants. Between the view of his best friend's mom crawling naked in front of him and the large breasts of his best friend's girl pressing into his side, he wondered why he hadn't come out to Los Angeles sooner. He wondered how his friend could be so tempered and reserved about the life he had here. He remembered all the times Tom had tried to mention it in passing, and how he thought it was just an exaggeration. He wished he had listened. This was something worth boasting over.\n\n******\n\nJohn Bolden continued packing his bags. Fuck this place, he thought. Fuck this town. Fuck that stupid bitch of a masseuse. Fuck his son and his money and his career. Fuck it all. No one was going to tell him what to do. No one was going to push him around. He was going home. He was going home with his wife. He'd have it out with her once they were back in upstate New York. Then she'd know who wore the pants in this relationship.\n\nHe sent his clothes down to be washed by the hotel services. He packed up the rest of his belongings into his suitcase. Finally, he grabbed the broken computer and shoved it inside. He took the thumb drive and smashed it with the metal ice bucket. He kept smashing breaking it into smaller and smaller pieces in an effort to vent his rage over its contents.\n\nJohn still had a searing headache. The hangover had been severe, and the lumps on his head weren't making it any better. He drank more water and popped another few aspirin. He cursed himself for getting so drunk. He wondered how he could let his son get the better of him without putting up much of a fight at all. Well it wouldn't happen again, he thought. He mentally pumped himself up thinking about how to teach him a lesson.\n\n******\n\n\"Please, Sir!\" Kimmie squealed in the passenger seat. \"Oh god, I'm begging. I'm begging you to let me have it. I... I can't hold it... I... I can't...\"\n\nHer skirt was hiked up above her waist again. Tom had one hand on the wheel and his right hand on her clit. He paused letting the sensations subside. He heard her pout as her imminent climax disappeared. Then he began the action all over again.\n\n\"Oh no!\" She whined. \"Why are you torturing me, Sir...\" She pressed her bare ass harder into the leather seat. She could feel it becoming slippery beneath her. She knew she was leaking heavily. \"Oh yes! Yes. Sir, I'm so close...\" Then she felt his fingers stop. \"No!\"\n\nTom kept his eyes on the road. They were on a curvy portion of Sunset Boulevard cutting eastward back toward the city. He enjoyed listening to her beg. He hoped that when he finally allowed her the release she craved that it would be blindingly strong and satisfying. He was adept and using orgasm denial to keep a woman on edge for long periods of time. He could see her hips grinding down searching for something to press her pussy against.\n\n\"You'll get to cum soon enough.\" He replied.\n\n\"Please, Sir!\" She begged. \"I can't wait anymore! I just can't! I've never needed to cum so bad. Never, Sir.\"\n\n\"You can wait.\"\n\n\"I can't!\"\n\nTom had considered making her wait for a month or more. All of her begging had given him a raging hard on, though. Now he considered pulling over and fucking her in a vacant lot. He took her hand and placed it on his inner thigh. She ran her palm up and down his cock. Then she looked up at him with a needy gaze.\n\n\"I... I can help make that go away, Sir.\" She said in a hopeful tone. \"You can put it inside me. I'm so wet. It'll slide right in.\"\n\nHe reached over and ran his fingers up her slit. She was soaking wet. He heard the soft moans begin to escape her mouth. He felt her hand close around his shaft over the fabric. Kimmie could feel his need. The veins on his cock pulsed as more blood flooded down through his length causing it to throb. He worked his fingers faster.\n\n\"That's it, Sir.\" She moaned. \"Get it ready for your cock.\" She squeezed him again.\n\nTom got a hold of himself. He removed his fingers from her pussy. \"That's all for now, Kimmie. You'll cum when I allow it.\"\n\nShe whined quietly. She thought he was caving. She kept her hand on his cock teasing him hopefully. He was a guy after all. How much teasing could he handle. She studied his face as he drove. She could tell he enjoyed the attention she was giving him. He would crack. It was only a matter of time. Kimmie was certain that he wouldn't be able to resist it.\n\n******\n\nAlexis walked into the kitchen with Erik. He watched as Mrs. Bolden sat back on her heels waiting for some sort of instruction. Then he looked up to see another woman cooking. He took in her body thinking she wasn't quite his type, but she was still attractive.\n\n\"Erik, this is Gabriella.\" She stated politely making the introduction. \"Gabs, this Sir's best friend. He flew out for the party.\"\n\nGabby walked around the island holding her hands up, which were covered in eggs and flour. \"It's so nice to meet you.\" She said as she approached. \"I'm a mess. Sorry.\" She held her hands out to the side and then leaned in giving him a light kiss on each cheek.\n\n\"It's nice to meet you too.\" He said staring at her tits and her puffy little nipples. Then he lifted his gaze to her collar. Hers was similar to Jane's red one with a thin black strip around the center. He looked back to Alexis. \"Does everyone wear a collar?\"\n\nShe smiled warmly. \"All the girls have collars.\" She said noting that she didn't. \"Oh, I've forgotten to put mine on today. I've been a bit frenzied.\"",
        "Gabby walked back around the counter to continue cooking. \"Didn't Sir tell you how things work?\" She asked curiously.\n\n\"Uh, not really. He hasn't told me a lot apparently.\"\n\n\"Oh!\" She said with a grin. \"You mean you didn't expect to find us nude?\" She laughed lightly. \"Well this must look scandalous.\" She paused. \"I'd love to talk to you later after I'm finished with all this.\" She said noting the mess in front of her. \"I'd love to hear some stories about Sir.\"\n\nErik chuckled. \"Oh, I've got stories.\"\n\nAlexis took his hand. \"Would you like to rest, Erik? We can set you up outside by the pool. Or in the living room with the TV. Did you want to shower or nap? You just let me know.\"\n\nHe paused for a moment. \"Maybe a vodka tonic with lime.\" He said. \"And I guess I wouldn't mind sitting outside for a bit.\"\n\n\"Marie, would you get Erik his drink.\"\n\nAlexis took his bag and set it aside. Then she led him through the French doors out onto the patio. He looked amazed at the sheer size of the yard and the well-manicured beauty of it. She was talking excitedly about the house and the women. Erik knew Tom well enough. Sure he was surprised, but he smiled knowing that his friend always had grand plans for his life.\n\nErik sat at the table off to the side of the pool near the back gate. He kicked his feet up on the table before deciding to take his shirt off. He grabbed the neck of his t-shirt and pulled it over his head. Erik's tall body was muscled and strong. He worked alongside his crew back home, and the heavy construction equipment kept him in good shape.\n\nHe thought he was alone when he noticed a figure emerge from the pool. Her body lifted from the water as she walked up the submerged steps to the flagstone patio. Erik was not particularly good at talking to women. He admired her body. Her tear drop breasts weren't large nor were they small. They looked appropriately sized. Her brunette hair was wet. He hadn't adjusted to the strangeness of so many naked women, and this girl made him feel nervous.\n\nShe spotted him sitting at the table.\n\n\"Oh, hi. I didn't think anyone was out here.\" She said without moving to cover herself.\n\nErik stood up mostly because he thought it was the gentlemanly thing to do. \"I'm sorry.\" He said a little awkwardly. \"I... I'm Erik. Tom's friend.\"\n\n\"I'm Angie.\" The young woman replied taking a seat at the table.\n\n\"So...\" He said unsure about starting a conversation as he retook his seat. \"... you don't have a collar?\"\n\n\"Me? Oh, no.\" She said a bit amused. \"I don't even live in California. I'm just visiting. Well, sort of.\"\n\n\"Me too.\" Erik said. \"I just assumed...\" He waved his hand noting her nakedness. \"... you know, that you were a part of... this?\"\n\nIt sounded profoundly uncomfortable as he struggled to mention nudity and submission in front of someone.\n\n\"No. It's a long story. I sort of ended up here by accident. Well not by accident... but I'm not sure you'd understand.\" She babbled. \"Anyway, I ended up here, and I guess I haven't wanted to leave yet. It's hard to explain, but there's something about this place.\"\n\n\"Where are you from?\" Erik asked.\n\n\"Saratoga Springs in upstate New York.\" She replied.\n\n\"No way!\" Erik blurted for the second time today. \"The masseuse?\"\n\n\"Wait...\" She said confused. \"How did you know that?\"\n\n\"I'm from Saratoga Springs too. I called you to book him an appointment.\"\n\nIt didn't take long for the two of them to fall into a deep conversation. They shared their feelings about home and about Tom's life. It was comfortable having someone else there that wasn't a part of the lifestyle. It allowed each of them to laugh about the awkward nature of being thrown into the middle of it. She recounted the story of her trip as he listened intently hearing the details. Erik just couldn't believe how much he enjoyed talking to her; nor could he believe the events that took place. He knew John, Marie and Jane very well.\n\n******\n\nKimmie was beyond frustrated by the time they reached the restaurant. Despite her best efforts Tom never gave in to her teasing. It was worse than that. He had taken it upon himself to make her suffer more because of it. His fingers had pawed at her pussy endlessly throughout the drive. He even let them slip inside of her. She was in quite a state.\n\nThey dropped the car off with the valet in front of The Ivy on Robertson Drive. The restaurant was one of those industry hotspots that were popular among movie producers, studio executives, agents, and actors. It wasn't a particularly fancy establishment. It was actually fairly unassuming from the outside, but the people that frequented it, and those that ran it, gave it an air of importance.\n\nTom stepped through the front doors and immediately saw Jim, Frank and Maryanne sitting at a table in the back. As he got closer he noticed another person sitting with them. It was Peter Sperling, Maryanne's boss and owner of Sperling Publishing. He usually only joined for important business. It made him wonder why he was here.\n\n\"Peter, what a surprise!\" Tom said cordially extending his hand.\n\n\"I told Maryanne that I wanted to be here. I'm elated over the new book. There are big things in store for you, and I wanted you to hear it from me.\"\n\n\"Well I certainly feel lucky to be worth your time. I appreciate it.\" Tom said and then he leaned over giving Maryanne a kiss on her cheek. \"Hey, Maryanne. It's good to see you. Thanks for all your help this week.\"\n\n\"Of course, Tom. I love working on your books.\"\n\nTom truly enjoyed working with her as well. Maryanne was a short, slightly chubby woman. He often thought her face looked cherubic. It was round and youthful with cute button features. She kept her brown hair up, wrapped in a loose bun, and her reading glasses sat securely on her nose. Maryanne had pleaded with Peter to publish Tom's first book. She had been his champion from the very beginning, and it paid off in spades for her career.\n\n\"Oh, where are my manners?\" Tom said looking to his side. \"Peter, Maryanne, Jim... I'd like you all to meet Kimmie. I've hired her on as my assistant.\"\n\nKimmie politely greeted each person at the table. Mind your words, she thought. Don't say anything stupid. She was very concerned about her performance today. In their view, she looked like a lovely and professional young lady.\n\n\"You see that, Tom!\" Peter noted with a smile. \"You reached the point where you need an assistant.\"\n\nTom smiled his wry smile. \"I think you mean that I've reached the point where you need to pay for me to have an assistant.\"\n\nMaryanne tensed as the words came out, and Tom noted the scowl on Peter's face.\n\n\"By the way, I told her you're offering three grand a month plus benefits. Frank and Jim can work out the details later.\"\n\nKimmie realized immediately that it was a thousand dollars more than he promised her. She was giddy at the sound of it. Peter did his best to brush over the comment. He hadn't said no, but he disliked being ambushed. They settled themselves at the table and ordered a round of drinks.\n\n\"So, Tom, why don't we start this on a good note?\" Maryanne suggested. She reached into her bag and removed a small envelope. \"Your delivery payment. That's one million even.\"\n\nTom happily accepted it and passed it on to Jim.\n\n\"You can handle this, Jim. Settle out with Frank and then have the rest deposited into my account.\"\n\n\"Sure thing.\" He said tucking it in his inside jacket pocket.\n\n\"So where are the proposals?\" Maryanne queried.\n\n\"I didn't bring them.\" Tom replied confused. \"Frank, you said I didn't need them.\"\n\n\"I... shit. I must've misunderstood.\" He replied. It was his intention to create a reason to head back for the party.\n\n\"Well we need them as part of the completion for the new contracts. We can't process your commencement checks until we receive an official delivery of your book proposals.\" She noted.\n\nTom scrunched his face displeased by this oversight. \"Can't I e-mail them?\"\n\nFrank chimed in. \"Why don't we just stop by your place after this and grab them?\"\n\n\"Is that necessary?\" He asked.\n\n\"I'd prefer a hard copy.\" Maryanne said. \"Same as always. I don't mind following you over there. I'd like to have this finalized tonight.\"\n\n\"Fine.\" Tom said.\n\nHe wondered why Frank would suggest it. His lawyer knew that the situation at his home was complicated. It's fine, Tom thought to himself. Even if Alexis was there, maybe it was time to let Maryanne get a tiny glimpse. She deserved that much. He always noted how she tried to pry into the details of his research. She was searching for something, even if she didn't know what exactly.\n\n******\n\nErik had moved back inside to the living room with Angie. The sight before him was becoming more unreal.\n\n\"Wait. So... you're saying he sleeps with each of you? He's had sex with every person in this room? Recently?\"\n\n\"Yes.\" Abby replied.\n\n\"Si.\" Ybeth answered.\n\n\"Yeah.\" Karine said.\n\n\"Yes, Erik.\" Marie stated.\n\nAlexis laughed at the look on his face. \"Is that so hard to believe?\" She asked.\n\n\"Yes!\" He said exasperated. \"Yes, it's hard for me to believe that he's sleeping with all of you. I always thought my hero was Gandhi or Bruce Willis or some other cool dude. Not my best friend! God, I've haven't even been laid in over a month.\"\n\n\"Pobrecito!\" Gabriella's voice could be heard from the kitchen. It caused all the girls to laugh.\n\nKarine rifled through the box on the coffee table handing out lingerie to each of the girls. Abby took the garter belt and slipped it on. The lace design was stunning on the black garment. She slid on one stocking and secured the hooks on the top to the straps on her garter. The stockings had a black line that ran down the back of the leg. It was very sexy. Then she slipped her foot into a stunning strappy stiletto. She repeated the action on her other leg.\n\n\"How do I look?\" She asked.\n\nKarine bent down and shifted the garter slightly making sure it fit just so.\n\n\"Perfect.\" She said.\n\n\"Erik?\" Abby asked. \"A guy's opinion please?\"\n\n\"Are you kidding?\" He asked. \"You're so hot. You're all so hot. Nobody has ever dressed like this for me!\"\n\n\"Oh, he likes it alright.\" Karine said nodding toward his crotch. \"I think that's just the reaction we were hoping for.\"\n\nAngie looked down seeing the tented fabric of his pants. It gave her a rush of adrenaline wondering how big it might be. She couldn't tell exactly. His shirt was still off and she studied his pectoral muscles and biceps. It didn't make sense to her that he couldn't get a girl. But then she thought about the conversation they had outside. He seemed incredibly sweet. It was almost as if his personality didn't match his build.\n\nErik shifted in his seat trying to hide the obvious strain of his erection. \"This is cruel. Yes, I'm hard. Okay?! What man wouldn't be?!\"\n\n\"Aw.\" Alexis said. \"It can't be that cruel.\"\n\nErik didn't think he could be more envious of another man. He considered jerking off in the bathroom just to get it out of his system. And then this unbelievable situation got just a little more unbelievable.\n\n\"Hello?\" A voice carried in from the kitchen. \"Alexis?\"\n\n\"In here.\" She called back.\n\nA trail of women walked into the room. \"Jen!\" Alexis said kissing her cheeks. \"What did you do with the kids?\"\n\n\"They're at my mother's house. I've got the whole evening and I really need it. They're little twin terrors.\"\n\nMarie looked up at this woman. She recounted the whole scene from exactly a week ago. This was the squirter she had barged in on. This was the woman that marked the beginning of her submission. Jen looked at Marie and winked. God, it shot fire through her pussy.\n\n\"Fran.\" Alexis greeted her. Then she continued. \"Karen! You naughty slut. I have someone upstairs in your old room that wants to meet you.\" She paused and moved. \"Joya! I missed you. Welcome.\" Then she moved to the next woman. \"Nicole.\" More kisses. \"And Elizabeth.\"\n\nErik watched as each woman began removing their clothes as if it were the most natural thing in the world. They secured their collars, and turned to Alexis for introductions.\n\n\"This is so exciting. Everyone who hasn't met her, this is Karine. She's going to give you lingerie and shoes.\" She explained. \"Oh first, I want you all to meet a very special guest. This is Erik. He's Sir's oldest and best friend. He flew all the way out here from New York for the party.\"\n\nErik tentatively stood up as all the women turned their attention toward him. Each one stepped forward and gave him a kiss on the cheek and introduced themselves. He was beet red with embarrassment not knowing exactly how to act.\n\nStephen walked into the room in the midst of everything. \"Peaches!\" He said with a wide grin.\n\nThey all turned to see him. \"Stephen!\" It almost came out in unison.\n\n\"Alright, girls.\" Alexis said in a sing song voice. \"We have work to do and then we can relax and meet everyone.\"\n\n******\n\nTom glanced at his watch to keep track of the time. He saw Alexis' disappointment this morning when he left. He didn't want to spend too much time on business. She had said that they should do whatever he wanted for his birthday. What Tom really wanted was to spend time with her. This was already lasting longer than he planned.\n\n\"I know you don't want to have this conversation, but I'm begging you to do a book tour.\" Peter was saying. \"It could significantly increase your exposure and your sales.\"\n\nTom sighed. He'd had this conversation more than a few times with both Maryanne and Peter.\n\n\"What's the point of a penname if I'm going to do any press?\" He asked. \"I told you when you published my first book that I'm not interested in exposure. My books have done well without it. I want to remain anonymous.\"\n\n\"We gave you a very good deal on these contracts.\" Peter said seriously patting the signed stack of papers in front of him. \"Wouldn't you consider doing at least an interview or a morning show? Give us a chance to drum up interest since we cut you in on our gross sales.\"\n\n\"No.\" Tom said definitively. \"And I'm not going to have this discussion anymore. You know how I feel.\"\n\n\"Well what's the time frame on the new books?\" Maryanne asked trying to shift the conversation. \"We were thinking of doing an initial run of two hundred thousand copies of your new book and moving toward a quick release.\"\n\n\"I think that sounds fine.\" Tom said. \"The two new books are already started.\"\n\n\"You started writing already?\" Maryanne asked.\n\n\"Yeah.\" He replied. \"What I really want to discuss is a new idea I have in mind already. It's been stuck in my head and I want to write it.\"\n\n\"What's the premise?\" Peter asked intrigued.\n\n\"It's something a bit more risqu\u00e9.\" Tom paused for a moment. \"It involves incest.\"\n\n\"Absolutely not!\" Peter shot back instantly. \"Our company does not need that kind of criticism. We don't deal with incest. Besides, it won't sell. Nobody wants to read that crap except for maybe a small segment of the population. It's not enough to make a profit.\"\n\nAll eyes were on Tom as he stared down at the drink in front of him. He slowly looked up glancing at each face around the table. With the exception of Kimmie, he was the youngest person here. It still surprised him that he commanded any respect, but he did, and he used it as best he could.\n\n\"You never wanted to publish my first book.\" Tom finally said. \"It paid off well for you considering you had a similar reaction to the subject matter.\"\n\n\"Yeah, but...\" Peter began.\n\n\"I'll write it for free.\" Tom said bluntly.\n\n\"Not going to happen.\" Jim quickly interjected himself into the conversation. \"Your quote is five million plus gross.\"\n\nFrank nodded emphatically agreeing with Jim. \"We can discuss this another time, Tom. You don't work for free.\"\n\nPeter just stared at him trying to size up the young man.\n\nTom gave a stern, dismissive glance to both Frank and Jim. \"I'll write it for free.\" He said again more forcefully. \"And, I'll give you the chance to read it and make your decision on whether you want to publish it. If not, let me go shop it to other publishers with your blessing. If you do want to publish it, I want fifty percent gross sales. No advance. No money at all for my services. Just an even split.\"\n\nJim's mind reeled as he tried to figure out what that would mean. He was trying to run numbers in his head. If it were a New York Times bestseller, the money would be astronomical.\n\n\"I've never made a deal like that in my entire career.\" Peter said in a stern yet contemplative voice. \"I've worked with plenty of writers for over thirty years, and I don't think any of them would even consider trying to make that offer.\"\n\n\"I'm writing it regardless, Peter. You can have first rights of refusal... But it'll cost you fifty percent gross.\"\n\n\"And that's to be your new quote if we want to work with you in the future?\"\n\n\"No. It's a one-time deal. Just for this one book.\"\n\n\"And you'll complete these two first?\" Peter asked lifting the new contracts and studying his face.\n\nThere was a long pause. Maryanne, Frank and Jim didn't utter a word. Kimmie just wished she didn't have to pee so badly.\n\n\"Those two...\" Tom said nodding at the contracts. \"... those are already completed. Written. Polished. Proofed.\"\n\nTom initially planned on keeping that information to himself. He thought it would give him time to concentrate on other things in his life. At the moment, he enjoyed watching the befuddled and slack jawed expressions in front of him.\n\n\"That's not possible.\" Maryanne whispered. \"You'd have to have been writing nonstop.\"\n\n\"I work, Maryanne. I enjoy what I do. I assure you they're complete. I wanted to do some traveling. I figured I'd just submit one every six months and have a year to myself. But this new book is consuming my thoughts. I want to write it now.\"\n\nPeter looked at Tom the same way that Frank often did. He wasn't sure what to make of him. The kid had balls.\n\n\"When can we have them?\" Peter asked.\n\n\"Now that you know they're finished, I don't see why you can't have them right away.\"\n\nPeter processed it, and began to get excited at the prospect. \"We can roll these out over the course of the year. Every three or four months. The next release will drive the sales of the first, and publicize the release of the next.\" He was really just thinking out loud instead of strategizing.\n\n\"And the new book?\" Tom asked. \"I'm asking you to do this for me, Peter. You and Maryanne have been extremely good to me. We've had a lot of success together, and I don't want to work with another publishing house. I like where I am. But this one means a lot to me. I promise it will be lucrative for both of us. Then I'll get back to pumping out the stuff you love so much.\"\n\nFrank didn't think he could have done a better job negotiating. Tom played hard, but then he turned around and complimented the man he was trying to extort. The deal itself, Frank thought, could be a total bust. If the sales tanked then he'd get next to nothing for his efforts.\n\nPeter stood up with a blank expression on his face and walked around the table. Tom sensed the answer. He stood up as well. Then Peter extended his hand and they sealed the verbal agreement.\n\n\"It's a deal, Mr. Bolden.\" Peter said. \"You're going to make this a banner year for us with this trilogy. I look forward to reading the next two. Good luck with your taboo project. I have a feeling you might surprise me.\"\n\n\"Thank you.\" Tom replied.\n\nHis heart was racing as he thought about the expectations he set out for himself.\n\n\"I've got to get going for another appointment.\" Peter said as he turned toward Maryanne. \"Please get me those new manuscripts asap.\"\n\n\"Yes, Sir.\" She replied. \"I'll handle it tonight.\"\n\nPeter turned and departed. Tom kept standing as he watched him go. Then he turned back to the table.",
        "\"Shit, Tom!\" Jim said still unsure of what to make of everything.\n\nTom smiled. \"Good news, gentlemen. It looks like we'll be getting paid again shortly. That's a million apiece for each of you off that new contract. A lot better than the hundred grand from this check.\"\n\n\"You make this new book marketable and we're all looking at a lot more money than that.\" Jim replied.\n\n\"Maybe so. I don't care if it sells well or not. I have a story to tell. This one is a passion project for me.\" Tom glanced over at his publisher. \"Maryanne, it looks like you'll need to stop off at my home for more than just a proposal.\"\n\nShe smiled back at him.\n\n\"It's my birthday.\" He added. \"Maybe we can have a drink to celebrate once we're there.\"\n\n\"It's your birthday?\" Jim bemoaned. \"I'll kill my assistant for not reminding me. Happy birthday, Tom.\"\n\n\"Happy birthday.\" Maryanne said raising her glass.\n\nFrank leaned in close. \"As your attorney, I suggest you get NDAs before inviting guests over.\" He whispered quietly.\n\n******\n\nJane stared at the brown-haired woman talking to Marie in the yard. Her heart raced. They were about the same age. She was dazzled by her brown eyes and thin lips. Jane wanted to introduce herself, but she felt incredibly nervous. It's just a woman, she told herself. But it wasn't just any woman. It was Karen. She looked at the way her breast hung. They weren't large and her nipples and areolas were small by comparison to her own. Her figure was nice, she thought.\n\nJane stepped forward gathering her resolve until she was standing in between her sister and Karen. But she didn't say anything. She just looked at the woman flashing a crooked smile.\n\n\"This is my sister, Jane.\" Marie said trying to be polite. \"Jane, this is...\"\n\n\"Karen.\" Jane said.\n\nMarie looked puzzled that Jane seemed to know her. Karen cocked her head to the side slightly confused.\n\n\"Um... yes.\" Marie said. \"I didn't know you two had met.\"\n\n\"We haven't.\" Karen replied studying the words on Jane's chest.\n\n\"September nineteenth.\" Jane said quietly with an unwavering glare. \"The day your life changed. 'Sir whipped me brutally. I thought my skin would crack and bleed. Any woman would have begged for mercy. I cried as he struck me but I begged for more. I needed him to hurt me badly. My thighs were black and blue, front and back. My breasts tortured with toothed nipple clips that bit my skin. He tied a belt around my neck and pulled it tight. I thought I would pass out. When he loosened it, I struggled to fill my lungs. I begged for more. And when he slapped my fuck hole, I came so powerfully that I could feel it in my fingers and my hair to the tips of my toes. Nothing that happened in my life up until that moment mattered anymore. I feel reborn.'\" Jane finished an almost spiritual recitation of a journal entry she read a few times a day. \"I... I'm a pain slut too.\" She whispered in a shaky, soft voice.\n\nMarie just stared at the two of them completely confused by the soliloquy her sister delivered. Then she watched Karen open her arms, and Jane fell into them sobbing and happy. The brown-haired woman slid her hands to Jane's breasts and twisted her nipple causing her to whine. Jane dropped to her knees and pulled the woman forward latching onto her puffy, thick pussy lips.\n\n\"You're the only one that understands.\" Jane said as she pulled back and looked up at her.\n\nKaren smiled down at her. \"You're still new to it.\" She noted. \"It gets easier to accept.\"\n\nJane dug her tongue back into Karen's cunt. For her, it was a thank you. Without Karen's journal entries, she was sure she'd be lost. Marie stepped away quietly realizing that something much more complicated was taking place here. Her sister looked happy.\n\n******\n\nThe backyard had been transformed for the evening. Stephen had planted tiki torches along the pathway adding to the already Polynesian feel of the landscaping. Alexis had set out hurricane candles on all of the tables including the ones between the lounge chairs by the pool. Francesca was still busy cooking on the grills. The smell of food from inside and out permeated the air.\n\nThere was a bar station set up near the outside dining area. The table near Fran was already filling up with hors d'oeuvres. She placed dish after dish on the tablecloth with small plates and silver cocktail forks.\n\nThe outdoor sofa and lounge area had been expanded with additional chairs. Alexis set up a table just outside the kitchen, which was now overflowing with gifts. All of Sir's women were here, she noted. Including Marie, Jane and Angie there were thirty one women total. They all wore black lingerie and strappy black stiletto heels, and all wore a collar except for Angie.\n\nErik was holding court with a sea of women on the patio in the back. Marie had brought him another cocktail as he told stories. The drinks had loosened his nerves, and he felt uniquely special to be able to stand here with so many beautiful women even if he wasn't allowed to touch them.\n\n\"... So Tom climbed out the window on the second floor and scaled down the side of the administration building. He was sure that he outsmarted them. When he finally dropped from this ledge about fifteen feet into a flower garden, he stood up and came face to face with the dean...\" There was a collective gasp from the group. \"... and that was it. He was brought before the school disciplinary board and they expelled him for breaking and entering and theft of school property. No more all boys school for him. He finished his last two years at the public school down the road.\"\n\nThere were laughs and giggles from the rest of the women. Erik's stories offered a much different view of the man they all knew.\n\n\"Elizabeth?\" Erik asked looking at a slender Korean woman. Her skin looked soft and her tiny brown nipples hooked upward slightly on her perfectly round breasts. She had such an innocent face. It was narrow, almost oval shaped, with a tiny nose and lips that puffed up near the center drawing attention to her mouth. \"How long have you known...\"\n\nHe didn't get to finish talking to her. Alexis stepped out onto the patio and called everyone's attention.\n\n\"Ladies! I just got a text that Sir is on his way home. I want everyone waiting outside.\" Her nervousness was evident in her voice.\n\nMarie was now standing at her side. \"It's okay, Mistress.\" She said softly. \"He's going to love it.\"\n\nAlexis looked at Marie and then leaned in giving her a very sensual open-mouthed kiss that left them each a touch breathless.\n\n******\n\nFrank drove with Maryanne in the passenger seat of his Lexus. She had walked to the restaurant from her office, and didn't want to go back and pick up her car. The tension was evident. They really didn't get along well at all.\n\n\"Your client made quite a deal without you, tonight.\" She stated.\n\nThe deal itself had surprised her. It wasn't like her boss to agree to such unusual terms. The undertone of the comment made it sound like she was pointing out that Frank had nothing to do with it. As if she was trying to deflate his ego.\n\nFrank turned his head to see the smirk on her face.\n\n\"You know there's no reason why we shouldn't get along. I have nothing against you. I have nothing against Peter or your company. I just try and make the best deal for my client.\"\n\nShe expected a snide retort. His actual reply made her feel bad for a moment.\n\n\"I bet you say that about all your clients.\" She replied.\n\n\"You're right. That's my job.\" He said. \"But Tom is different. He and I have been close friends for years now. That friendship is important to me.\"\n\nMaryanne thought there was something unusual about his statement. It wasn't the cold, calculated lawyer that she was used to seeing. There was a soft spot in his heart. He seemed to care about Tom.\n\n\"I'm sorry.\" She said. \"I didn't mean to suggest...\"\n\n\"Let me give you a heads up.\" He said cutting her off. \"There's a reason you haven't been to his home. There's a reason for his privacy. He chooses to live a somewhat eccentric life by most standards. Open my briefcase.\"\n\nMaryanne reached down and picked up his thin attach\u00e9 case unzipping the top.\n\n\"The non-disclosure agreement on top.\" He pointed. \"I won't let you into his house without signing it.\"\n\nShe glanced over the agreement reading it once, then a second time. Her curiosity overwhelmed her.\n\n\"What could be so secret to require something like this?\"\n\n\"You always liked his books. Where do you think he got the base knowledge for all of those characters and those sexual details about submission and bondage?\"\n\n\"Research.\" She responded. \"He discussed it with me.\"\n\n\"Well he began living his research.\" Frank said casually.\n\n\"Really?!\" She replied a bit shocked. \"You're saying he's into sex and submission?\"\n\n\"Sign it.\" Frank asked.\n\nIt wasn't a forceful demand as much as a courtesy to him. He watched as she scribbled her name across the document. Then he had her place it back in his case.\n\n\"We're going to a surprise party for him.\" Frank continued. \"I'm not sure how liberal you are, Maryanne, but this isn't going to be what you're used to. If you need to leave then take my car and leave. Just remember to respect his privacy or I'll make sure you regret it. Not because he's my client... Because he's my friend.\"\n\n\"Okay, Frank.\" She replied looking at him in a different light. \"Maybe you're a better man than I thought.\"\n\nShe tried to understand what could be so different about a party. She wondered if she would meet a real submissive woman.\n\n\"Do you like that lifestyle?\" He asked. \"You like his books, right?\"\n\n\"I'm not gonna lie. I like reading about it.\" She said.\n\n\"Then be careful.\" Frank said seriously. \"You know what curiosity did to the cat.\" He glanced in her direction seeing the look on her face. \"I'm just offering you some advice.\"\n\n******\n\nTom drove quietly while he tortured Kimmie's needy pussy. She'd given up begging altogether. She just accepted the fact that he wouldn't let her cum. She felt alive with all the attention despite her deep frustration. It occurred to her that he was training her. Whether he wanted to call it that officially, that's what he was doing. She felt a sense of joy and satisfaction to endure his game.\n\nTom checked his rearview mirror seeing Frank's car following close behind. Jim was slightly further back. Frank had suggested parking on the street. He said it would be easier to take them through the front since there was a good chance that Alexis, Marie or Angie were probably sitting out back. It made sense. Better to ease them into it, Tom thought.\n\nHe parked his car on the street and waited for the other two cars to park behind him. Then he walked them up toward the front door. He put his key in the lock and pushed the door inward.\n\n\"Sir! You're home!\" Alexis called out as she made her way into the foyer. It took no time at all for Maryanne to get the sense behind Frank's comments. \"Oh my! You have guests. Sir, you didn't mentione that you were bringing anyone.\"\n\nMaryanne couldn't take her eyes off the blonde woman. She looked at her fancy stiletto heels, her perfectly defined calves and shapely thighs. She glared at her breasts. The most obvious thing that stood out was her inaction to cover herself along with Tom's comfort with the situation.\n\n\"Frank!\" Alexis beamed as she gave him a hug pressing her breasts into his chest and kissing him on the cheek. \"It's been nice seeing so much of you lately.\"\n\nJim looked stunned. Frank had warned him that they were attending a surprise party a couple days ago, but he hadn't said anything about Tom's lifestyle. He had met Alexis once in Beverly Hills. She looked quite different now standing naked in front of him. He got the sense that Frank knew much more about their client than he did.\n\n\"Alexis, you remember Jim, my agent.\" Tom said reintroducing them.\n\n\"Hello. It's good to see you again.\" She gave him a kiss on the cheek.\n\n\"And this is Maryanne, my publisher.\" He said.\n\n\"How wonderful to finally meet you!\" She said. \"Sir says such wonderful things about you.\"\n\nThe way she referred to him seemed to immediately garner Maryanne's attention.\n\n\"Y... you... you have a lovely home.\" She stuttered trying to be polite.\n\nShe couldn't understand why no one acknowledged the unusual nature of the introduction.\n\n\"Thank you.\" Alexis replied with her graceful smile. \"Technically it's Sir's house. But I do try to make it a home for him.\"\n\nTom inhaled deeply smelling something delicious. \"Are you cooking?\" He asked.\n\n\"Yes, Sir. The birthday boy needs a birthday dinner. Why don't I set up the table outside? It's such a beautiful evening. I have plenty for everyone.\"\n\nShe saw him smile at her. It was a warm, caring smile and her nerves settled immediately.\n\nTom walked his guests through the foyer and into the kitchen. Something seemed unusual. The house was clean. There were a few dishes in the sink, but not enough to suggest that she cooked. Maryanne and Jim glanced around at everything curiously. His home wasn't surprising to either of them. They knew how much money he made.\n\nTom reached his hand out and grasped the handle on the French doors.\n\n\"You'll love the backyard.\" He said looking to Maryanne and Jim. \"It might be my favorite part of the whole house.\" He paused for a moment. \"I know that was probably awkward for you. I'll explain everything in a minute. I have a lot to share with both of you.\"\n\nHe turned the knob swinging the door open.\n\n******\n\n\"Happy Birthday, Sir!\" The voices boomed in unison giving Tom the shock of his life.\n\nFrank stood just behind him equally stunned by the sight of it. He'd only met a few of the women in Tom's life. He couldn't believe there were so many. Maryanne and Jim gasped out loud. They didn't step forward any further. They just stopped paralyzed by the scene.\n\n\"Holy shit...\" Jim whispered quietly.\n\nMaryanne looked at Jim and whispered. \"What's going on?\" He just shrugged unable to say anything else.\n\nThe women were lined up on the pathway just below the raised patio. As soon as the words came out of their mouths, they all dropped down onto their knees. The lingerie may have been the same, but each looked uniquely beautiful as they submitted in front of their owner and his friends.\n\n\"Surprise!\" Alexis leaned over and whispered in his ear. It was loud enough for everyone around him to hear. \"Happy birthday, Sir. I love you.\"\n\nTom was still silent, and the silence was beginning to cause a small panic in her heart. She turned to look him in the eyes. Then she noticed his awed expression. He wasn't upset. He was just quietly digesting the reality of everything. Alexis had completed the final act of bringing them all together.\n\n\"Happy birthday, asshole.\"\n\nHe turned to see his best friend sitting on the outdoor sofa just to his right. \"Erik? What are you doing here?\"\n\nErik stood up and gave Tom a big embrace. \"Alexis asked me to fly out for your birthday. She said she planned some big celebration. You fucking douche, how come you never told me about all this?\" He threw his hand up to reference not only the home but the women.\n\n\"I...\" Tom still struggled to believe this was actually happening.\n\nHe looked around one more time and the wry smile crept back across his face. He let out a loud, joyful laugh.\n\n\"I don't think I've ever been so surprised in my life!\" He exclaimed to everyone. \"I can't believe everyone is actually here. This is a perfect gift! This certainly changes my plans for the evening!\" He looked at Alexis. \"How did you pull this off? I had no idea.\"\n\n\"Your mom helped, Sir.\" She said beaming. \"It was her idea.\"\n\n\"Wait?!\" Tom said looking back at Frank. \"That meeting in Malibu...\"\n\n\"They needed me to get you out of the house.\" He grinned. \"I picked a place as far away as possible without being suspicious.\"\n\n\"And Jim? You knew about this?\" Tom looked at Jim's expression.\n\n\"Frank said a surprise party... but...\"\n\nClearly Frank hadn't told him everything. That much was evident by the look on his face. Tom stepped down the flagstone steps and walked up to Francesca who stood at the end of the line.\n\n\"Fran.\" He lifted her to her feet and then he leaned in and kissed her lips. He rolled her nipples between his fingers lightly giving her a small thrill.\n\nHe stepped to his right. \"Elizabeth! You look tasty.\" He pulled her to her feet and kissed her lightly. His hand slid between her legs and rubbed down across her gash.\n\nHe continued down the line until he had greeted each woman taking an opportunity to touch each of them. \"It's my birthday, everyone. Please enjoy yourselves. I'll try and get around and talk to everyone.\"\n\n******\n\nAlexis pulled up a mix of party music that she'd put together. It started with Frank Sinatra's My Way. She often joked that it was the most appropriate song for someone with his singularly stubborn and dominant personality. The girls broke off into smaller groups filling the yard and making new friends. Tom walked back up onto the raised patio.\n\n\"Happy birthday.\" Frank said handing him a small box.\n\n\"Frank, you already gave me a gift.\" Tom replied.\n\n\"That was nothing. This is my real gift. It's been a great year and great friendship.\"\n\nTom unwrapped the small box and then lifted the lid. He stared down unsure of how to respond. It was a Breitling Bentley Mark VI watch. He wasn't sure what something like this cost, but he was certain that it was easily north of twenty grand.\n\n\"I don't know what to say.\" Tom said. \"It's a beautiful watch.\"\n\n\"For someone obsessed with time and punctuality, I never knew why you don't own a watch.\"\n\nTom gave Frank a manly embrace. \"Thank you.\"\n\nHe turned back toward Maryanne, Jim and Erik. \"How are you three doing?\"\n\n\"Is this really happening?\" Jim asked looking around at all the women spread out across the yard.\n\nTom let out a genuine laugh and then smiled his wry smile. \"I've always wanted to tell you and Maryanne. I'm just particular about keeping this side of my life private. But without you guys... well... I wouldn't have this life. I guess it's time you finally got to see it. I just didn't expect it to be quite like this.\" He laughed again and flashed a disarming smile.\n\n\"So... you're an honest to God real sexual dominant?\" Maryanne asked.\n\n\"For a few years now.\" Tom responded with his natural ease, which helped diffuse the awkwardness. \"Nudity is the norm around here. Please don't be put off by it. If it's too awkward, though, I'll understand. I just want you to know that you don't have to be uncomfortable. Staring isn't rude.\" He called for Marie and Alexis. They walked up the path and climbed the steps. \"These are the most important women in my life.\" He continued. \"You both met Alexis. This is Marie.\" He turned and looked at her. \"Mom, this is my agent, Jim, and my publisher, Maryanne.\"\n\n\"No, shit?\" Jim said seeing the older blonde-haired woman with the black collar walking toward him.\n\nShe stepped forward with excitement to greet them both. Maryanne's jaw dropped as she realized in that moment why he chose the topic for his new book. Everything about his writing and his books and his demeanor now began to make sense to her. Frank had told her leave if it proved too much. She didn't want to leave though. She wanted to know more. Then Frank's other warning flashed through her mind. She was all too aware of what curiosity did to that cat.\n\n\"Please, sit.\" Tom said gesturing to the outdoor lounge area as he took a seat on the couch. Maryanne, Frank, Jim and Erik all sat down.\n\n\"Alexis, my crop please. Marie, I'd like a glass of wine.\" Then he looked around. \"Kimmie?\"\n\nHe watched the young girl step out from the kitchen where she had been hiding. She reached up placing her hands on the buttons of her blazer and held them there. It was a silent request to remove her clothing. Tom shook his head no, and then whispered something in her ear. He made a decision in that moment to take advantage of the situation and begin the changes he'd wanted for so long.",
        "\"Yes, Sir.\" She said scampering off toward the guest house.\n\n\"You're like Hefner.\" Jim stated.\n\nHe looked over at Tom who was displeased by the analogy. He thought he was nothing like that man. His women were real people with real lives and real needs, not some ditzy fame whores.\n\nAlexis returned with his crop and knelt down at his side handing it to him.\n\n\"I'd like you to present, Lexi.\" He stated watching her push down and press her breasts into the flagstone with her ass raised in the air.\n\nJim liberally soaked in the view of her curves.\n\nMarie returned with a glass of wine and set it in front of him before kneeling at his feet. Erik couldn't help but stare at her and rub his crotch, which reacted approvingly to her obedience.\n\n\"Present.\" Tom stated pointing toward Alexis.\n\nMarie crawled over and knelt down next to the blonde. She turned her head facing Alexis and smiled knowing they were both in trouble. Alexis smiled back.\n\n******\n\nKimmie walked into the guest house feeling more frustrated than ever. It was bad enough that he tortured her pussy and denied her a release all day long, but now she just wanted to be naked and he wouldn't allow it. All she wanted was to be treated the same as the other women. Her shock at the birthday surprise was certainly eye opening. Now she had a much better idea of the scope of his dominance.\n\nShe reminded herself again that this was no different than being trained. He was testing her, and she wasn't going to fail now. She climbed up the steps into his office. He had given her a password that she repeated over and over out loud so she wouldn't forget it.\n\nKimmie walked to the oak cabinet on the far wall by his desk. She knelt down opening the doubl doors on a lower compartment. There was a safe mounted inside. She typed the numbers into the electronic keypad on the front and listened to the gears shift and the metal door pop open.\n\nShe peered inside. It contained two thick manila envelopes each with a USB card taped on the front. She removed the envelopes. It also contained one hundred thousand in cash, which she left untouched. Lastly, she removed a small box. Her curiosity got the better of her and she peaked inside. Kimmie sat there in silence and just stared at its contents. Then she gathered the envelopes set the box on top and rushed back out to the party.\n\n******\n\nAbby was serving drinks for Tom's guests. Stephen had joined them on the patio, and began discussing the lifestyle with Maryanne and Jim. They were filled with questions. Tom talked animatedly as he explained to Erik the chain of events that led to his mother's submission. Kimmie finally returned and handed him the items he requested.\n\n\"So, I believe this is what you came here for.\" Tom said as he stood up and handed the manila envelopes to Maryanne. \"Those are hardcopies of the manuscripts with USB keys that have digital copies for your editor.\"\n\nMaryanne leaned forward taking the items. She pulled one out of the envelope and began to page through it. \"You really weren't joking.\" She noted. \"You actually wrote three complete books in a year.\"\n\n\"Yeah. Right back there.\" He pointed to the guest house. \"It was sort of liking writing one long one and breaking into three pieces.\" Tom replied. \"Not that I didn't struggle from time to time. But it came out quicker than I expected. You can see I had inspiration.\" He looked to his right seeing the two women in their prone position. \"Excuse me for a moment.\"\n\nTom stood up and then twirled his crop in his right hand. It felt so natural for him to hold it, like an extension of his hand. He took the end and traced it across Alexis' ass.\n\n\"What's he doing?\" Maryanne asked.\n\nFrank grabbed her forearm, squeezing it lightly, and stopping her from asking any more questions. \"Shhh.\" He whispered. \"Don't interrupt him. This is how it works. Just watch.\"\n\nJim and Maryanne stared on in fascination. Tom continued to examine the women in front of him. He took his time contemplating his next move. It was as if the other guests were no longer here. His attention was devoted to the task at hand.\n\n\"Whose idea was it?\" He asked.\n\n\"Mine, Sir.\" Marie spoke up quickly. \"This girl will take her punishment now.\" The words came out so easily and without hesitation.\n\n\"Alexis?\" He asked.\n\n\"Marie came up with the idea, Sir. I arranged it.\" She replied.\n\n\"Do you both know why you're down there?\"\n\n\"We broke the rules, Sir.\"\n\nThey each responded with the same words at the same time. It caused them to smile at each other again. They knew that he might punish them for it. It was in his nature.\n\nTom looked up seeing a crowd of women gather near the bottom of the steps. They weren't used to seeing Alexis get punished. He raised the crop and brought it down on Marie's ass first. She stoically took her due. Tom was brutal and direct. Thwack! The first one startled Maryanne who flinched at the sound. The red mark began to darken immediately. Thwack! Thwack! Thwack! Thwack! Thwack! Thwack! Thwack! Thwack! Thwack! Thwack!\n\nAnd then he stopped. \"Have I made my point?\" He asked looking down at her. His intention wasn't to make this too difficult for her.\n\nMarie could feel the sting sinking in to her skin and the familiar heat from the new marks. \"No, Sir. I'd do it again no matter how many times you strike me.\"\n\nThere was a gasp from the crowd. Maryanne grabbed onto Frank's arm as if she couldn't believe the response. He just couldn't whip her again, she thought. It looked so painful. Tom just smiled his wry smile. Then he raised the crop again brought it down much harder. He heard her whimper slightly at the strength of the blow, and then administered four more.\n\nTom lifted her back onto her heels, and helped her to her feet. He brushed her cheek gently and then placed a sweet kiss on her lips.\n\n\"Thank you.\" He said. \"I can't tell you how much this all means to me.\"\n\nShe smiled wide. \"Of course, Sir! Happy birthday.\"\n\n\"Go have a seat.\"\n\nMarie walked over toward Frank and Stephen. She saw the wide-eyed shock from the others. She just smiled back as if everything was right with the world. She knew he wasn't upset with her. He only did it because he valued his rules. Marie knew now that there were times when his rules were meant to be broken even if she had to suffer for it.\n\n\"Doesn't that hurt?\" Maryanne asked confused by her smile.\n\n\"Oh yes.\" Marie responded. She turned letting the chubby woman see the bruises setting in. \"They're beautiful aren't they?\" She continued. \"It helps me remember to act properly. You can touch them if you'd like.\"\n\nMaryanne's hand reached out almost instinctively. She pressed her palm against Marie's ass feeling the heat. She took her index finger and traced down feeling how the skin had raised up slightly.\n\n\"They're hot.\" She said reverently. She looked over at Frank who gave her a knowing look. He didn't have to remind her of his warning, but she began to realize what he meant.\n\n\"The heat will go away in a couple hours.\" Marie responded. \"The soreness goes away in a day or two.\"\n\nMaryanne couldn't deny that her curiosity was getting the best of her.\n\n******\n\nTom stood behind Alexis. He didn't want to punish her. He looked out at his women staring back at him. Then he turned and looked at Maryanne, Jim and Erik. He took a step back and slowly removed his suit jacket. He folded it and then draped it on the back of his chair. He loosened his tie and slid it off.\n\nHis slow actions seemed to draw the attention of his guests. There was a fascination with his movements. They seemed so easy and fluid, but they also seemed inherently purposeful and methodical.\n\nHe lifted his crop high in the air. It was silent as everyone waited for it to drop. The he stopped and brought it to his side.\n\n\"I just want to take a moment and say that everyone here is important to me.\" Tom said genuinely. \"My best friend. My publisher. My agent. My lawyer. My mother. My mentor.\" He looked at Stephen after this last comment, and saw the man smile back at him. \"And all my girls. All of you are so unique and wonderful. I've wanted to bring everyone together for a long time. I didn't realize that would be tonight. You've all made this a special night for me. A night I won't ever forget.\" He walked over and set his crop down on his chair.\n\nAlexis remained still. She didn't understand why he hadn't punished her. \"Kneel up.\" Tom said.\n\nAlexis sat back on her heels. She looked at his outstretched hand, but she wouldn't take it. \"This girl will take her punishment now.\" She said pushing back into her presentation position.\n\nTom smiled and then laughed. \"Come on, Lexi.\" He said softly. \"Stand up.\"\n\n\"I want to kneel. Don't give me special treatment, Sir.\"\n\n\"You don't get to kneel.\" He said lifting her to her feet. \"I can't punish you for this.\" He continued. \"You've always said that you don't want to be treated differently than the other girls. But you are different, Lexi. You know me so well. What better way to make you believe it than to say it front of everyone.\" He paused pulling the small box from his pocket, and then he dropped down onto one knee. \"Marry me, Lexi.\" He said as he opened the box presenting a ring. \"Do me the honor of being my wife.\"\n\nMarie let out a small shriek and then began to cry as she watched her son propose. All of the girls had watery eyes.\n\nAlexis' chin began to quiver and then she blurted it out. \"Yes!\" The tears began to overwhelm her immediately. \"Yes, Sir!\"\n\nTom slid the ring onto her finger and she stared at it finally realizing that this life was hers. Forever.\n\nTom stood back up and she jumped into his arms wrapping her legs around him. She leaned in and locked her lips on his.\n\n\"I'm so happy, Sir!\" She gushed out as she looked at him with adoring eyes.\n\n\"Do you want to tell everyone the other news?\" He asked with his wry smile.\n\nAlexis looked out at everyone as she clung to his body. \"I'm pregnant!\" She announced excitedly.\n\nA collective gasp rippled through the crowd. Tom set Alexis down and she turned directly toward Marie holding up her hand. Marie cried harder and ran toward her with open arms.\n\nFrancesca climbed the steps walking toward the two women. She knelt down on the ground. Alexis looked down at her still overwhelmed by the excitement.\n\n\"Fran!\" She cried.\n\nFrancesca looked back at her and responded. \"Mistress.\"\n\nAlexis scrunched her face confused by the word. She glanced at Sir who smiled back. Fran was setting a precedent. The wife of her owner would be her mistress. It took a moment for it to sink in, and then Alexis looked at all the girls. They were hers now too. It seemed too good to be true, but she was far too excited to get caught up in that tonight.\n\n\"Fran! Get up! God!\" She squealed. \"Look.\" She said holding out her hand. Fran got to her feet and gushed over the ring with Marie. It was a four carat cushion cut diamond with a pave halo on a platinum band. It sparkled on her thin finger.\n\nTom began to walk back toward his chair to let her have her moment in the spotlight. \"Wait, Sir!\" Alexis said pulling him back toward her. She began to unbutton his shirt. Fran reached out began to take off his belt sliding it away from his pants. Marie slid the shirt off his shoulders. His pants were unbuttoned and dropped. His shoes were removed. Then they pushed him backwards toward his chair and sat him down naked.\n\nMaryanne stared in utter surprise at his thick towering erection. Alexis jerked it with her hand getting him hard. Then she climbed on top of him sliding it into her pussy. Maryanne looked away feeling uncomfortable. Then she glanced up seeing the woman's ass bouncing on him. Her face was half turned, but she was watching carefully seeing how his cock stretched her pussy lips. Her hand slipped to her breast squeezing slightly through her shirt. She realized what she was doing and quickly removed it looking toward Jim and Frank to see if they noticed. No one was looking at her. They were watching the show.\n\nAlexis moved her hips in that almost unnatural way pushing him inside her just right. \"Oh shit.\" She cried softly. \"I'm cumming on you, Sir.\" She rode out her orgasm and then lifted herself up. She turned around and sat back on him again. \"Mmmm. I'm going to be such an obedient wife, Sir. You can have all my holes whenever you want.\" Her breasts bounced as she rode him driving herself toward another climax.\n\nMaryanne looked around again. She'd known Tom for such a long time now, and had trouble with the ease in which he exposed himself and his life. It wasn't his ease that bothered her, she thought. It was her intrigue. It was her need to watch. It was like being present in a scene out of his books. She shouldn't want it, but she did.\n\nAlexis came again with a loud, girlish grunt. \"Why don't you pick who gets to have you next.\" She said sweetly.\n\nTom glanced back over his shoulder at the girls who looked on hopeful and expectant. \"I want them all.\" Tom said honestly. \"Maybe Joya to start.\"\n\nJoya nearly ran up the stairs. Her heels clacked on the flagstone. She was tall and the heels pushed her well over six feet. She was Tom's Indian princess -- curvey and voluptuous with the most piercing eyes. She had large, heavy breasts, brown skin, and a thick stunning hour glass figure. She dropped to her knees and waited for him to nod his approval. Then she leaned forward and swallowed his cock pressing it all the way into her mouth until her nose settled against his skin.\n\nKimmie couldn't believe she had swallowed him with such ease. Then Joya pulled her head back and dropped down to lick his balls. She knew what he liked. Fran leaned forward to take his length into her mouth. Tom groaned out enjoying the dual pleasure.\n\nMaryanne, Jim and Erik just watched in amazement as these women took turns on him. It finally became clear that this was really happening. This was really his life.\n\n******\n\nAnne walked up the steps in a slow, sultry stride swinging her hips. She carried her toy box out in front of her. It was Frank's request when she first mentioned the party. Tom had plenty of women at his disposal. He didn't get to have his wife tonight. She was there for Frank's pleasure.\n\n\"Hello, Sir.\" She said kneeling down in front of him and setting her toy box at her side.\n\nMaryanne looked over at him with confusion. She couldn't believe how respectful and obedient these women behaved. They knew their place, and acted almost elegantly when they moved.\n\n\"Maryanne. Jim. This is my wife, Anne.\" He said.\n\n\"No fucking way!\" Jim blurted. \"You too?\"\n\nFrank just smiled as Anne began to unbutton his pants eager to pleasure her owner.\n\n\"But your warning?\" Maryanne asked.\n\n\"Be careful...\" Frank replied with a smile. \"...or you'll end up like Anne.\"\n\nAnne freed his erection and sucked it into her mouth. Maryanne didn't want to see the Frank's cock, but once it came out she stared at it fascinated. It was fat. She suddenly had a realization that she had seen more cock tonight than she had in a very long time. It sparked a need that she hadn't felt for quite a while.\n\n\"Ropes.\" Frank said.\n\n\"Yes, Sir.\" Anne replied reaching into her toy box.\n\nFrank looked at Stephen. \"I've started out with the nylon, Stephen. Six millimeter gauge. I'm practicing my harnesses.\"\n\n\"Atta boy.\" Stephen let out with his raspy laugh. \"Let's see you make it happen on this little subby slut. She's a peach I'd like to taste.\" He looked her up and down. \"You liked the way I tied you up on Monday, peach?\"\n\n\"Yes, Stephen.\" She said lustfully.\n\nThis man turned her on with his gruff demeanor.\n\n\"Maybe Frank'll let me peg you with this cock.\" He said grabbing his crotch.\n\nFrank had the lark's head loop secured and began wrapping up her breasts.\n\n\"Good!\" Stephen commented feeling how tight he pulled them. \"Not too tight but still secure. Be careful with her circulation.\"\n\nFrank smiled at the acknowledgment of his improved progress. Maryanne and Jim watched the lawyer maneuver the ropes with precision. They each had a feeling of being left out. It was like walking into to a secret club where they didn't belong. But they were invited guests, and as with most things sexual, they wanted to see where it went.\n\n******\n\nThe party was well underway. The girls were mingling. Tom made his way through the yard saying hello to everyone.\n\n\"Shit, dude! You know how to throw a party.\" Erik said giving him a hug. \"Congratulations. Alexis is fucking awesome. Insanely hot, dude. You couldn't have done better.\"\n\n\"Thanks, Erik.\" Tom said. \"It's important to me that you two like each other. She'll be around a long time. I'm sorry it's taken so long to show you all this. You never seemed interested when I tried to say something.\"\n\n\"It's my fault. I always assumed... well it doesn't matter anymore. I'm here now.\" He replied and then tentatively added. \"That other girl... you know... Angie...\"\n\nTom saw the look on his face. Erik had never been great when it came to girls.\n\n\"She's not spoken for at the moment if that's what you're asking.\"\n\n\"Really?!\" Erik said excitedly. \"I think she likes me. I've never seen a woman naked before I tried to sleep with her. It sort of takes the mystery out it. But she seems really cool.\"\n\n\"As long as you know I slept with her first.\" Tom joked.\n\nErik punched his arm. \"You're such a dick.\"\n\n\"Seriously, though, I like her a lot. She's a good girl. You'd be good together.\"\n\n\"You always carry that thing around?\" He asked looking down at the crop.\n\n\"Pretty much.\" Tom replied. \"You never know when one of these girls might misbehave.\" He swung it smacking Gabby in her thick rear end as she talked to some of the other girls behind him.\n\nShe dropped to her knees immediately and slid into a presentation position. \"Sir?\" She asked assuming he wanted something from her.\n\n\"I was just playing, Gabby.\" He said laughing. \"Come here.\"\n\nShe stood up and wrapped her arms around him.\n\n\"I love you, Sir.\" She said sweetly. \"Congratulations on your engagement.\"\n\n\"It doesn't change anything. You're still mine too.\" He said smacking her in the ass again and watching her give him a naughty smile.\n\n\"How do you do it?\" Erik asked.\n\n\"Do what?\"\n\n\"There's just so many.\" He was unsure quite what he wanted to ask. \"How did you get them all? How do you get them to be submissive? It's kinda hard to believe.\"\n\n\"You disapprove?\" Tom asked looking at his friend.\n\n\"No!\" He exclaimed. \"I'm envious really. I'd do it if I could.\"\n\n\"Why can't you?\"\n\n\"I dunno. I wouldn't know where to begin.\" He replied honestly.\n\n\"What do you see when you look at Gabby?\"\n\nErik looked at the Venezuelan. \"I'm not sure. She has a big butt.\"\n\nTom laughed. \"Kneel, Gabby.\" The woman dropped to her knees. Tom pressed her forward on to her hands. \"It's a beautiful ass. Not just big.\" He spread her cheeks giving him a view of her pussy too. \"You need to appreciate a woman first. Not just their personality, but their body. Every woman I've met is beautiful in their own way.\" He lifted her back onto her heels. \"Look at her breasts.\"\n\n\"They're nice.\" Erik said timidly.\n\n\"Gabby, is it alright if Erik touches you?\"\n\n\"Yes, Sir.\" She replied shyly as the other man examined her with his eyes.\n\n\"Feel them.\" Tom said. \"Look at her puffy nipples. Look at her hips.\"\n\nErik caressed the woman's chest and pinched her nipples. He was surprised by Tom's words. His friend looked at this woman differently than he had. Erik let his eyes roam over her figure again. He'd never really taken the time to drink in the curves on a woman's body. Erik mostly spent his time trying to get a woman naked without appreciating the end result.\n\n\"Chanel.\" Tom said.\n\n\"Yes, Sir?\" A woman replied from the group that Gabby had been talking with.\n\nTom stood her in front of Erik.",
        "\"Kneel.\" He watched as she dropped down next to Gabby.\n\n\"What do you see?\" Tom asked.\n\n\"She's black.\" Erik stated and then he saw the look on his friend's face. He thought for a moment. \"I like her lips.\" Erik said trying harder. \"And her eyes.\"\n\n\"And?\" Tom pressed.\n\nErik began to relax and study her. \"She has nice tits. Her nipples are so dark and thick.\" Then he looked closer. \"She has a great ass. It's so round.\"\n\nTom pushed her forward and spread her ass for his friend to see.\n\n\"Her pussy are lips are long.\"\n\nTom slid his hands down to her pussy and spread her lips apart.\n\nErik gasped. \"It's so pink.\" He said softly bending over and looking closer. \"Against her dark skin it looks so pink.\" He'd never been with a black girl. He watched the lips begin to moisten. \"She's getting wet.\"\n\n\"Is that true, Chanel?\" Tom asked her.\n\n\"Yes, Sir. I... I love hearing him talk about my pussy. It's such a turn on.\"\n\n\"You don't get a woman, Erik. You earn one. Being appreciated is the biggest turn on. A woman wants to feel wanted. Then you can begin to earn their trust. Once that happens you can try submission. But you can't force it. A woman has to choose. Choice is the key to the lifestyle.\"\n\nTom left the two girls on their knees. \"Let's try again.\" He said waving a last woman over. \"What do you see?\"\n\n\"My best friend's mom.\" Erik said. \"A hot older woman.\"\n\nMarie stood there while this boy stared at her body. No, no. He's a man now, she thought. She was allowed to be turned on by it.\n\n\"Touch her. Tell her what you think of her.\" Tom urged him.\n\nErik reached out and cupped her breasts. \"Man, you've got such great tits, Mrs. Bolden. I used to stare at them every time I came over.\" He said. \"I used to make noise when I slept over because you'd come downstairs angry. You always wore that nightie and if the lights were off in the basement then I could see right through it when you stood in the doorway with light on behind you.\"\n\nMarie's breathing quickened listening to him confess to stealing glances.\n\n\"I could see your pussy while you told us to go to bed. But it wasn't shaved then. I could always see the thick curly pubes.\"\n\nHe looked to Tom wondering if he could take more liberties. Then boldly reached out and touched her pussy.\n\n\"Oh man, you're still so fuckable.\" Erik groaned.\n\nTom stood behind her and held her arms behind her back.\n\n\"Erik is touching your pussy, mom. Do you like that?\"\n\n\"Oh god...\" She groaned as he found her clit. \"Yes. I like it.\"\n\nShe glanced up at Erik with a shy, guilty look on her face.\n\n\"Do you want him to stop? Tell him what you want.\"\n\nShe groaned more knowing what she should say. \"Make me cum.\" She whispered quietly.\n\nErik's eyes opened wide as he heard the words. He grinned as he rubbed her pussy faster. He reached out and squeezed her breasts with his other hand pinching her nipple. Marie's eyes were lustful. She kept looking at him. All she could think of was taking pictures of him and Tom before their senior prom. Oh god, she thought! What if I had just fucked them both instead of sending them off with those stupid little girls? The thoughts were driving the pleasure. She wondered where these thoughts had been all her life. She had trouble thinking of herself as anything other than sexual being now. She was meant to be filled with cock.\n\nShe took a sharp intake of breath and felt her body go rigid. She began to tremble just slightly.\n\n\"I'm cumming.\" She whispered staring at her son's friend. Then she thought of Diane, his mom, and wondered what that woman would think of her if she knew what she'd become.\n\nAngie walked up and stood beside Tom just as his mom walked off. \"Hello, Sir.\" She replied.\n\nTom put his hands on her shoulders and stood her just in front of Erik. \"Hey, Angie. Help me for a minute. Stand right here.\" He looked at Erik. \"Well? What do you see?\"\n\n\"Beauty.\" Erik said almost immediately.\n\nAngie blushed slightly. It was honestly how he felt, not just an exercise.\n\n\"And?\" Tom asked with a smile.\n\n\"Her breasts are perfect.\" Erik said in admiration. \"I love the way they crease. They're just big enough to hang a little. And her nipples make me want to touch them.\" He continued. \"She looks so elegant when she stands. And it's hard to look at her eyes because it's like they see through me...\" Erik's eyes roamed her body as he spoke. \"Her lips look so soft. Her smile makes me want to smile. She has the cutest butt...\"\n\nAngie's face was beet red. She looked down briefly not used to being complimented so much.\n\n\"He's right, Angie.\" Tom whispered in her ear. \"Everything he said is exactly right.\"\n\nShe looked back at Tom with a shy smile.\n\n\"Thank you for staying through tonight.\" Tom said. \"It means a lot to know that you've forgiven me. But... you're not mine.\" He paused. \"I think you're amazing. If only I knew a good man that lived in upstate New York... A guy that appreciated you and thought you were perfect...\"\n\nAngie eyes watered a little. She didn't know why she felt like she needed to Tom's permission or approval, but it felt good to hear him tease her. She was coming out of her shell in his house. For once in her life, she felt confident about herself.\n\nShe turned and took Erik's hand, and pulled him closer. She put her arms around his neck pulling him close and kissed his lips. \"So... Erik, I met this guy recently who showed me that being spontaneous can be fun...\"\n\n\"You did?\" Erik said still dazed from the kiss and not understanding her.\n\n\"How do you feel about sex on a first date?\" She asked with naughty smile.\n\nHe began to catch on, but he was still nervous. \"Is this a date then?\" He asked.\n\n\"It'll have to do because I'm really horny.\" She said pulling him away. \"I like this whole submissive life. Maybe you could spank me... or ask Tom to help you learn the ropes...\" She laughed at the accidental pun. \"Come on! That was sort of funny. Loosen up!\" She laughed again. \"You're so getting laid right now... let's do it on the lawn...\"\n\nErik looked back at Tom and mouthed, \"Thank you.\"\n\n******\n\nChanel reached up and tugged on Sir's cock. He looked down seeing that she was still kneeling at his feet with Gabby.\n\n\"I see you two had a chance to meet.\" Tom said softly.\n\n\"Yes, Sir.\" Chanel replied. \"I like it when you show me off.\"\n\n\"Me too.\" Gabby replied. \"I like your friend too, Sir. He's hot.\"\n\nTom sat down on the edge of a chair and spread his legs.\n\n\"Gabby, I need this nice and hard.\" She looked at his semi erect cock. Then Tom brought the crop down hard on her tits. \"Now.\"\n\nShe dove forward and shoved his cock into her mouth. Tom knew she had a bad gag reflex, and he was a little rough as he grabbed her head and pulled it down. She gurgled and coughed with his cock in the back of her throat. It caused thick strands of saliva to drool out of her mouth and down his shaft. It was such a turn on for him.\n\nChanel rested her chin on his thigh watching her spit and gag letting it drip from her chin and land on her breasts.\n\n\"Mmmm. Suck that nigger dick.\" She encouraged.\n\nTom had chastised her for using that term on regular basis, but she didn't seem to care. He was bigger than every black man she'd been with, and she was in love with his size. She'd only told one of her friends that she was sleeping with a white guy, and she prefaced it by explaining he was hung, as if that made it okay.\n\nTom took his crop and brought it down hard on her ass. \"Don't say that.\" He warned.\n\n\"Sorry, Sir.\" She turned back and watched the Latin girl struggling. Her jaw was strained around his girth and Chanel thought it looked nasty.\n\nTom lifted her head off of him and she gasped for air catching her breath. He grabbed Chanel by her neck and pulled her closer. She liked it rough.\n\n\"Sit on it.\" He instructed.\n\nChanel got between his legs and sat back on him.\n\n\"Stretch that cunt, Sir.\" She moaned as he slid inside her. His cock was covered in Gabby's spit allowing it to slip in easily. \"Fuck it. Fuck it hard, Sir.\"\n\nHe grabbed her ass pulling it back down every time she lifted it up. She was an energetic fuck. He didn't need to help much as she pounded his cock into her pussy.\n\n\"Oh shit. Split me open, Sir!\" She demanded. \"Work that pussy! Work it!\" She whined. \"Oh shit, Sir! You're gonna make me cum so good. Ohhhh fuck that shit... with... that... big... white... dick.\"\n\nShe looked up as she was about to cum and saw Marie standing a few feet away rubbing her pussy. Marie didn't know why it turned her on so much to watch this woman riding her son. She never imagined seeing Tom with a black woman. Tonight proved that her son didn't have any specific tastes, or maybe his taste could best be described as eclectic. There were women of all ages and ethnicities. This girl fucked Tom differently, though. She fucked with purpose.\n\n\"Ohshit! That's the spot. Fuuuuuuu...\" Her scream began to crescendo until she became the center of attention. \"... uuuuck! Fuck it. Fuck.\" Chanel had fallen forward with her hands on the ground bracing herself while her ass bounced in his lap. \"Yes! Yessss! Uuuuuungh!\"\n\nHer cum was thick and creamy and it gathered at the base of Tom's cock as she continued to push down on him. Tom grabbed her hair lifting her back up from the ground with his cock still inside her. She was breathing heavily. Chanel may have had a foul mouth, but she became very emotional after a powerful orgasm. She often cried.\n\nTom whispered to her as he wrapped his arms around her waist holding her still. She needed that kind of attention.\n\n\"Do you know who that is?\" He pointed in front of them.\n\n\"Yes, Sir.\" She said softly with a suddenly fragile voice.\n\n\"I want you to make her cum with your tongue.\" He began to lift her off his length. \"Be a good girl.\"\n\n\"Yes, Sir.\" She crawled across the ground until she came to rest at Marie's feet.\n\nMarie just stared blankly and watched as this dark-skinned woman opened her mouth revealing a very long tongue. She stared in awe watching as it inched forward and then wiggled into her pussy. Her knees bent, and Chanel guided her backward until Marie was spread eagle on the ground. She didn't lick pussy the same way that she fucked. She took her time. Marie realized that every woman that went down on her had a different technique. She couldn't decide which was best.\n\nGabby stared back at Tom looking at his cock twitch. She knelt with perfect posture. He stood up and walked toward her. She instinctively leaned forward and began to clean the thick globs of cum from his cock. Then he pushed her forward onto her belly and pressed it into her big ass.\n\n\"This is where I'm going to put to my cum.\" He said as he stretched her asshole.\n\nGabby closed her eyes as he filled her up. She preferred anal. It made her cum so hard. She squeezed her ass as tight as she could to make it hurt just a little as he pushed inside.\n\nTom fucked her with hard, deep, methodical thrusts. Gabby whined softly as he pounded into her. She never said much until she got ready to cum. Once that happened, she almost always spoke in Spanish. Tom never knew what she said and it didn't necessarily matter to him. He looked up seeing some of the girls gathered around him. Watching him. He wasn't used to being on display. He closed his eyes and fucked her harder and faster. The first words escaped her mouth. And then a long stream of Spanish followed. He was getting close. He could feel his balls lifting.\n\n\"Fuck my big, fat ass.\" Tom looked up to see Ybeth kneel down next to him. \"She says fuck my big, fat ass with your thick fucking cock. Yes, Papi, shoot it in me. I need it! It's so good.\"\n\nIt caught Tom off guard seeing the thin Colombian translate her words. It sent him over the edge. He felt his cock shoot inside her. Gabby kept screaming out. Tom turned to Ybeth who looked back at Gabby with a surprised look.\n\nTom slid his cock from inside her as she panted on the ground. \"What did she say?\" He asked quietly.\n\nYbeth leaned in close so no one else would hear. \"Nothing, Sir. It's not meant to be translated. It was very personal.\" Gabby stared a quiet thank you to the other Latina girl.\n\nTom stood up slowly seeing the girls' attention turned behind him. He looked back and saw Chanel with three fingers in his mother's pussy and a tongue on her clit. She pumped them into her faster and faster. His mother's face was a mess of emotions. Then she howled out loud and squirted an immense stream across the black girls face and chest.\n\nTom smiled. He turned to leave as Ybeth quietly bent down and buried her face in Gabby's ass.\n\n******\n\nTom went to find Frank and Jim. They were deep in conversation while Abby brought them fresh drinks on the patio.\n\n\"How are we doing?\" Tom asked as he approached the two men.\n\nFrank held out his hand. \"Congratulations on the engagement. You should've done that a year ago.\"\n\n\"I know.\" Tom replied with a smile. \"Did Stephen tie her up?\" He asked staring at Anne bound tightly to the outdoor sofa.\n\n\"Nope.\" Frank smiled. \"I did that.\"\n\nTom flashed his wry smile. \"Well look at you! That's good work.\" He noted. Tom dragged a finger across her pussy seeing the cum seep out of her. \"Drink up, slut.\" He teased as he brought it to her mouth and watched her lick it clean.\n\n\"Who are you two?\" Jim asked with a facetious tone. \"Congratulations, Tom. But you're going to have to explain the rest of this to me. This is nuts.\"\n\n\"Where's Maryanne?\" Tom asked.\n\nFrank grinned. \"Over there with Alexis.\"\n\nHe pointed to a lounge chair near the pool. Stephen was tying Karen and Jane down in some complicated rope bondage. Karen had alligator clips on her nipples and butt plug in her ass.\n\n\"Tell me you're not going to fuck her, Tom. I know that look in your eyes.\"\n\nTom looked at the smile on Maryanne's face while Stephen whipped Karen with a leather strap.\n\n\"I won't make that promise.\"\n\n\"It's time for your gift.\" Jim said interrupting . \"It just arrived.\"\n\n\"I thought you didn't know it was my birthday.\"\n\n\"Really? Please! You're my best client. Don't insult me. I was just playing around.\" Jim walked over toward the rear gate as they spoke. \"It's not really from me. It's from all the senior partners at United Writers Agency.\" Jim swung open the back gate. Parked in the driveway was a brand new black Aston Martin with an oversized red bow on the top.\n\n\"Did you buy me a car?\" Tom asked dumbfounded.\n\n\"UWA bought you a car. For your birthday and as a congratulation on the new book deals.\" Jim said excitedly. \"And not just any car... That's an Aston Martin DB9 fully loaded. That's got a V12 engine. She purrs like a lion. Happy Birthday.\"\n\nTom walked around the vehicle looking at the sleek design. Then he opened the driver door and got inside. He started the engine listening to it roar to life. He pressed the accelerator revving the engine.\n\nJim patted Frank on the back. \"Don't worry. It was a nice watch and all.\" He grinned. \"But it wasn't an awesome fucking sports car.\" He did a little fist pump just annoy Frank. \"Suck it, asshole.\"\n\nFrank looked a bit deflated. \"Well done.\" This certainly blew his gift out of the water.\n\n\"Guys you both did way too much.\" Tom shouted from the driver seat. The look on his face told a different story. He liked his new toys.\n\n******\n\nTom made his way over toward Alexis and Maryanne. He watched Stephen whip Karen's ass. Stephen wanted to have some fun tonight, and Tom allowed him to tease his two pain sluts. Karen came again from the abuse. Jane strained her head to the side mesmerized by the woman that shared the same affliction as her.\n\n\"Hey, Sir. I was wondering where you went.\" Alexis said leaning into him lovingly.\n\n\"Jim just gave us a new car.\" He said dropping the key into her hand.\n\nShe looked back at him unsure she heard him correctly. She looked down at the Aston Martin key chain with a smile. People were beginning to realize his worth. It made her happy.\n\n\"How are you doing?\" He said wrapping his arm around Maryanne.\n\n\"With the fact that I'm watching two women get tied down and whipped? Or the fact that you're naked with your arm around me.\" She asked before looking down. \"Or that fact that you're hung like a horse and run some kind of sex club?\"\n\nTom laughed. He took his arm away from her. \"Sorry didn't mean to make you uncomfortable.\"\n\n\"I wasn't complaining.\" She said nervously leaning back into him. \"It's a lot to process...\" She watched the woman cum again in front of her. \"How is that possible? How does someone cum from being whipped?\"\n\n\"These two are different.\" Tom responded. \"Trust me they enjoy it. Not every submissive is the same. Their needs are all different. The key is to know what that is. A good Dominant knows just how far to push a sub in his care. These two like the extreme. They get off on it.\"\n\nMaryanne stared back at him amazed. She let her hand drop down to her side and then she shifted it over brushing his cock. She wrapped her chubby fingers around it as her heart fluttered. She could feel the pulse of the veins as it responded to her touch.\n\nTom whispered. \"You're not supposed to mix business with pleasure, Maryanne.\"\n\nShe withdrew her hand feeling stupid. \"I'm sorry. That wasn't appropriate.\"\n\n\"I wasn't complaining.\" He smiled his wry smile. \"It's... just a lot to process.\"\n\nShe gave him a gentle shove. He was so relaxed about everything and it made her feel silly for being uncomfortable.\n\n\"I need you on my team, Maryanne. I can't let this get in the way of that... but if you think that this wouldn't get in the way of our work... well then...\"\n\nShe looked back at him with a warm smile and placed her hand back on his shaft. He gave her a wink.\n\n\"We'll talk about it. You're welcome at my home anytime.\" He said quietly.\n\nAlexis put her arms around Maryanne and rested her head on the woman's shoulder. Maryanne looked back seeing who it was. Alexis just smiled her graceful smile.\n\n\"Give it a squeeze.\" She said softly. \"He loves that.\"\n\nMaryanne squeezed it a couple of times in her hand and felt it stiffen almost immediately. She looked back at Alexis surprised.\n\nTom detached her hand and stepped forward behind Jane. He ran his hand over her recently whipped rear. Then he slid it down between her thighs and cupped her pussy. She groaned out loud at the attention. He grabbed his cock in his hand and pressed it into her slit.\n\n\"Oh fuck, Sir.\" She whined. \"I'm such a needy slut.\"\n\nHe thrust into her as Maryanne watched.\n\n\"That's his aunt, you know?\" Alexis said in her ear.\n\nMaryanne moistened at the thought. He was so nice -- a perfect gentleman -- but so incredibly bad.\n\nJane squirmed beneath him with what little mobility she had. She reveled in the fullness she felt with him inside her.\n\n\"Fuck me, Sir. Hurt me.\" She cried. His thrusts were deep and hard. \"Ohfuckohfuck. Yes!\" She moaned. Her head was still turned toward Karen tied down next to her.\n\n\"Do you want my cum?\" He asked with his dominant voice.\n\n\"Yes, Sir! I need it.\" She begged. He pressed the fresh bruises on her ass. \"Oh shiiiiit.\" Then he reached up a brought his hand down on her ass with blinding force. \"Unnnngh.\" She grunted.\n\n******\n\nJohn came to a screeching halt at the end of the driveway. He looked worse for wear. The rental car idled for a few minutes while he sat behind the wheel. Fuck this, he thought. It was time to go home and get back to his life. He stepped out of the car and marched up the driveway with purpose -- a man on a mission.\n\nHe recognized the sounds of a party the closer he got to the rear gate. It infuriated him even more. He followed the noises until he saw a brand new car parked at the top of the driveway. Everything about Tom's life bothered him to his core.\n\nJohn threw open the back gate. Then he stopped completely still seeing the yard filled with naked women. It startled him. No. No. No. He wasn't going to let his son play tricks on him anymore. No more confusion. They were all deviants and whores, he thought. He refused to be distracted by it. He knew exactly what he was here for and no one would stop him."
    ],
    "authorname": "Nicequip",
    "tags": [
        "mother",
        "aunt",
        "anal",
        "big cock",
        "dominance",
        "bdsm",
        "collar",
        "submissive",
        "lesbian",
        "collar"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-novelist-pt-09"
}