{
    "title": "The Low Road",
    "pages": [
        "Thanks to BlackRandi for the invitation to write in the Highway Song event. Special Thanks to Bebop03 and sbrooks103X for the edits. Editors are the reason any of this is readable at all and I really appreciate everything they do. Really, when I pass the stuff off to them, it is primarily written in purple crayon on torn construction paper...\n\nThis may not be quite in line with expectations. I chose to interpret the Highway as the old Scottish \"Low Road.\" It's a highway that we will all walk eventually, perhaps knowingly, perhaps not. This is based off of a true story told to me by a friend. \n\nWalking the Low Road\n\n*****\n\nPeter Schnell was a loser.\n\nEvery Soldier in the Brigade knew it, especially him. It wasn't that he was a bad guy, he just wasn't actually good at anything.\n\nHe passed the Army Physical Fitness Test, but no matter how hard he tried, he always just made it by the skin of his teeth, coming off the timed run red-faced and blowing like a steam engine, barely ahead of the clock.\n\nHe usually had to walk off to the side after a run to throw up. Sometimes he didn't make it very far, so most of the guys knew to give him a little space. He couldn't seem to get in really good shape no matter how hard he tried. He always kind of reminded me of a sack of potatoes. \n\nWeapons qualification meant he was the last guy off the firing range, barely passing again. \n\nHe had the bad haircut, the crumpled uniform, the hanging boot laces, the skewed crumpled \"hat.\" He was \"that\" Soldier. It ran so deep in him that it made you secretly wonder if it was the Soldier that was wrinkled instead of the uniform. \n\nHe'd been promoted to Sergeant by sheer perseverance and a lot of luck. They just needed a lot more Sergeants than usual that year. It happens sometimes. Especially during wartime.\n\nNobody really disliked him, but then nobody really thought of him as their best friend either. He didn't hang out with the rest of the guys. He didn't play video games or watch much in the way of movies because he tended to get nasty migraines. \n\nHe was no \"leader of men.\" Nobody would follow him to Hell. Maybe to the mess hall, at least on pizza day, but not to Hell.\n\nThe only thing he'd ever done that was notable was to climb into a burning Humvee to pull another Soldier out after an IED strike. The badly burned Soldier, PFC Tony Campbell, died in his arms a couple minutes later, before the MEDEVAC helicopter even got close. The kid had just rotated in, too. That had devastated him and pretty much shattered whatever self-worth Schnell had. \n\nSchnell ended up getting a medal for doing what he did, but it felt more like the Command was saying \"you really tried hard.\" At the award ceremony when they described his attempt to comfort a dying Soldier, I remember he looked really green the whole time. You could see he felt like he had failed again.\n\nHis marriage, if you could call it that, was an absolute disaster. He'd gotten married more or less because his domineering mother had wanted him to. She introduced him to a girl named Janice who she liked a lot, probably more than she had ever liked him. He sort of got railroaded into it. The marriage lasted less than three years and it had ended uglier than usual while we were deployed. We hadn't been out very long before rumors began to drift in. Janice had been seen at the club. Janice had been seen out with a guy at a restaurant. Janice was seen at a hotel with a guy. Janice had actually moved some guy into their house. Four different guys, a couple civilians and a couple military guys.\n\nPretty bold, moving some guy into their on-base house, and the Brigade Sergeant Major put a stop to that when he heard about it.\n\nRumor had it he stopped a couple careers over it as well, but I never knew for certain. He couldn't really touch her civilian boyfriends, but no Soldier is ever beyond the reach of a truly pissed off Sergeant Major.\n\nI guess somebody must have also told Schnell too; Janice found out he knew and emptied the house and their bank account, with all his combat pay and savings. She was long gone by Arrival Day, so he came back to nothing. \n\nThat might have been the worst part of it. He never got to confront her. He never got to face her, tell her what she was and make her own that shit, at least for a moment. Maybe gain a little self-respect back. Or in Schnell's case, maybe grow a little self-respect.\n\nHe couldn't even turn to his family, since his mother apparently believed whatever story Janice told her and pretty much disowned him. Or maybe Janice had just told her the truth, since neither of them really seemed to think much of him to start with. \n\nAll he could do was go ahead and sign the divorce papers that had been left on the kitchen counter, there was just no point to contesting anything. Six weeks later, the \"shake and bake\" divorce was complete. He had to pay Janice some maintenance for six months. She claimed to be broke; she even claimed she'd sold his car. Rumor had it that one of her boyfriends was driving his old car around, so she probably just gave it to the guy. \n\nIn that time-honored military tradition, a couple of the guys collected up some money and took him to a really high-end strip club in Atlanta. It was probably more out a sense of duty than because they really liked him. Instead of getting tons of lap dances and getting hammered like he was supposed to, I heard he'd spent the whole time whining to one of the girls there about how his life had turned to shit. I was pretty sure he was paying for her time while she listened.\n\nSergeant Schnell just wasn't a winner. He never had been, and now he wasn't going to get the chance.\n\nHe was laid out in his casket. \n\n*****\n\nI attended his funeral for no real definable reason. He wasn't one of my Soldiers; he wasn't in my Company, much less the platoon I was responsible for. I didn't know him all that well. I didn't even know he was still in the unit. I vaguely remembered that he'd been assigned to the Brigade Staff sometime after we got back, but that was it. I hadn't actually seen him in several months. By the time of the funeral, not many of us who had been deployed with him were even left in the unit. That's a Soldier's life, rotating to another unit every few years.\n\nMaybe because of that, he'd let the Command know that he didn't want his funeral to be mandatory and he didn't want a full military funeral. Why drag people to a funeral for someone they didn't even know? He wanted it all to be low key. For some reason, that bothered me. I even heard he was to be cremated immediately after the funeral.\n\nSoldiers are Soldiers, even Peter Schnell, and the idea that there wouldn't be a full funeral ate at me a bit. My wife was back home helping her mother with a house renovation, so I had way too much time on my hands. Schnell just kept floating to the surface of my brain. The thought ate at me until I got up that Saturday morning, put on my dress blues and headed over to Hill Chapel. \n\nThe Chapel was nearly empty when I arrived. Just the Brigade Sergeant Major standing near the casket and the Colonel looking out at the mostly empty parking lot. The Chaplain must have stepped out for a moment.\n\nI went to pay my respects and looked down at Schnell. He was shrunken, kind of folded in on himself, and instead of his usual bad haircut, his head was shaved bald. He was pale and waxy.\n\n\"Cancer.\"\n\nI turned to face the voice. \"Sergeant Major?\"\n\n\"Brain cancer, Sergeant. Those headaches he always had? It was inoperable brain cancer.\" He said it woodenly, staring at the body.\n\nI closed my eyes for a second. \"All the shit we saw out there and he gets killed by cancer? Helluva way to go.\"\n\nSomething, almost a smile, picked at the corner of the Sergeant Major's mouth. \"It was, Sergeant. It really was.\"\n\nI blinked. He sounded almost...happy. But a Sergeant Major is never happy. Not in my experience anyway. Damn sure not at a funeral for a Soldier.\n\nHe looked me over. \"Your uniform looks good. I'll need help folding the Flag.\"\n\nI nodded, I could do something at least. It wasn't really a request anyway. We talked and I stationed myself at the back of the Chapel so I could come forward to assist with the Flag at the right time.\n\nAt first I thought it was going to be just me, the Brigade Commander and the Sergeant Major, but a little at a time, Soldiers started drifting in. Some in blues, some in utility uniforms, some in civilian clothes. A lot more than I would have expected, really. I guess it was eating at more than just me, but it was still just a sprinkling in the huge Chapel.\n\nI was watching the clock move slowly forward when I heard a murmur run through the crowd. Schnell's ex-wife had walked in with an older woman that had to be his mother. Janice brashly went straight to the front of the Chapel, and without even looking at the casket or trying to pay her respects, she headed straight for the empty next-of-kin pew in the very front.\n\nJust as they were about to seat themselves, the Sergeant Major moved up and blocked them. He gently but firmly directed them back one pew. I could see Schnell's ex-wife hiss an argument at him, but it was pretty pointless, the man didn't get to his rank by giving in to anyone. Looking more than a little peeved, they moved back.\n\nThe world completely stopped making sense about three minutes later. \n\nA long black limousine pulled up to the main chapel steps, almost soundless.\n\nThey got out, walked straight up the stairs to the main chapel doors, then straight down the center aisle of the Chapel. Perfectly in step, perfectly synchronized. It was unreal, more like a scene from a movie than anything from real life. \n\nI could feel my brain glitch like a burst of radio static over the net as they went past.\n\nA perfect set of the most attractive women I'd ever seen. Not girl-next-door-pretty or even \"she should be in movies\" pretty. They were eerily flawless and untouchable looking. Perfect, polished, and graceful.\n\nA matched set in an odd way, even though they were completely different. A redhead with blazing green eyes partly hidden by a half-face black veil. An icy platinum blonde with pale blue eyes and pale white skin, a tiny rakishly canted veil just covering her forehead. An Asian girl, probably Korean from the look of her, with the same canted partial veil and a dark-skinned black girl with pale brown eyes above high cheekbones, wearing that same canted partial veil. \n\nThey wore the exact same dress, skin-tight, black silk, insanely short, with the back cut as low as legally possible. Black silk gloves and six inch spike heels that no woman I ever met would even try to walk in.\n\nYet, walk they did, in perfect syncopation, straight down the aisle. They moved with absolute grace and elegance. I'll admit that I was distracted for a moment. An inane thought of \"you don't see that every day\" rushing through my head before it was pushed out by an appreciation of the unbelievable view. \n\nThey went straight to the casket, falling perfectly into line along it, heads bowed, reaching slowly to each other until they were hand in hand. After a very long moment, they wordlessly peeled away from Sergeant Schnell and headed for the front pew. \n\nThe Sergeant Major stepped in their direction and I braced myself. He took funerals very seriously and, though the dresses, what there was of the dresses anyway, were black, they looked more like they belonged on a runway or on an escort than in a Chapel.\n\nHe stopped in front of the red head at the end of the pew, and to my utter and complete shock, he gave her a respectful greeting and very formally gestured for her to take her place in the front pew.\n\nEach of the women paused in front of him, just long enough for him to address them with words I could hear across the suddenly soundless chapel.\n\n\"I'm sorry for your loss.\" \n\n*****\n\nMilitary funerals are solemn, quiet things, but Peter Schnell's funeral was nearly dead silent. Everybody in the chapel seemed to be holding their breath, afraid any sound at all would break whatever spell had been cast. The Chaplain spoke, the Brigade Commander delivered a brief eulogy that completely left out any word of his family, and focused on Schnell's hope that everyone would make the most of every bit of their life. I waited for something, anything, to explain the four women with their heads bowed, holding hands in the front pew, but nothing came. \n\nAll too soon \"Taps\" sounded over the speakers and then I was assisting in folding the Flag, stepping away to see the Sergeant Major pass the Flag to the Brigade Commander. \n\nSchnell's mother half stood, but sat slowly back down in shock as she watched him walk up to the redhead and present the Flag to her. \n\nThe four women hadn't moved at all, they had sat as soundless and motionless as possible through the whole ceremony. But I could see tears steadily, unashamedly, streaming down their faces. \n\nAt the end of the funeral, the four women stood as one and walked out, the blonde in the lead while the redhead was escorted out behind her with head down, clutching the Flag, flanked by the other two women.\n\nThere was one tiny moment as they passed his ex-wife that I thought I saw something. Just for a second, I was sure I saw something as the redhead's eyes flickered to the ex-wife. \n\nIt was hate. Unmitigated, venomous, and absolute hate.\n\nThen it was gone as she focused ahead and they flowed out the chapel doors to the waiting limousine. \n\nI could see his mother and ex-wife staring after them, slack-jawed. \n\n*****\n\nAs I walked out, I stopped to watch as Janice confronted the Sergeant Major in the parking lot. \"Who was that?\"\n\nHe languidly raised one eyebrow. \"That's really none of your business.\"\n\nRed faced she glared at him. \"Shouldn't his mother have been given the Flag?\"\n\n\"Not in this case. The Flag goes to his family.\"\n\n\"But she is his family.\" \n\n\"Not according to him.\"\n\n\"What about his benefits?\"\n\nIt dawned on me that this was what she was really looking for. Soldiers have fairly hefty life insurance, for obvious reasons and most of them pay it out 'by law' which means it would go to the spouse or the children. If a soldier has neither of those, it typically goes to his mother. \n\nThe Sergeant Major gave a weary sigh and glanced at his watch. \"Thirty-three minutes. I was wondering how long it would take you to get to the real reason you showed up.\"\n\nShe gawped at him, trying to say something, but he cut her off. \"You don't have to worry about that either. It isn't your problem. Or his mother's.\" He pitched his voice so it wouldn't carry to the rest of the parking lot. \"Have a great fucking Army kind of day.\" \n\nHe slid into his car and started it, pulling away from her without even looking in her direction.\n\nAnd that, it seemed, was that.\n\n*****\n\nOf course that wasn't all there was to that. I heard that Janice showed up repeatedly with a lawyer in tow and after several meetings and much screaming and shouting, she had finally left, defeated. \n\nBeyond that, though, I heard nothing. Brigade Staff is always rumor mill central, but if anyone knew anything, they absolutely kept it to themselves. \n\nI lost track of everything when I was promoted to Master Sergeant and then transferred to another base, although every once in a while memories of the funeral crept back up into the light, leaving me lost and puzzled.\n\nIt was over a year later that I got the invitation to the Sergeant Major's retirement ceremony. The base he was stationed at was only a day's drive away and I decided to head up there for it. \n\nOnce the formal ceremony was over, everyone headed to the \"reception\" which was really a large barbeque picnic. I wandered around for a bit until he called me over.\n\n\"Have a seat, First Sergeant.\"\n\n\"Sergeant Major. I guess you heard about that.\"\n\n\"Recommended you for that position myself. You earned it.\"\n\n\"Thanks.\"\n\nI sat down with my beer and we talked about how the new Soldiers in my Company were shaping up. After that, though we fell silent and I watched him watch me for moment.\n\nHe raised his beer. \"Go ahead. Ask.\"\n\nI started to deny it, but figured there was no point to that. \"So what the hell was that all about?\"\n\nA grim frown slowly formed on his face. \"Schnell was fucked and he knew it. Not long after you guys came off the deployment, he went to a doctor for his headaches, but this one really looked and found the tumor. There was nothing anyone could do beyond help to manage the pain. They gave him a little over a year and a half at most. We reassigned him to Brigade headquarters so he could just focus on keeping his shit together and getting everything in order. Figured we could transfer him to Medical Hold when it got bad.\"\n\n\"That sucks.\" I shook my head. \"He just always had shitty luck.\"\n\nHe nodded slowly. \"The counselors tried to talk to him, but you know how that shit goes.\"\n\nI sighed. \"Going through the motions.\"\n\n\"Yeah, so finally one of the counselors tells him he needs to talk to someone, anyone. He couldn't think of anyone he thought would actually care. Sure as fuck not his ex or his mother.\" A slight smile appeared on his face. \"Then he remembered somebody who had actually listened. You remember when Michaels and Diaz took him to Atlanta?\"\n\n\"Yes, but it didn't sound like he had any fun.\"\n\n\"No, maybe not the way everybody expected. But one of the girls sat down and let him tell her all about how his wife cheated on him and left him. Told her all about how his life turned to shit.\"\n\nI looked at him as a suspicion formed. \"Really?\"\n\n\"Really. A redhead named Amber. So he goes back to the club, finds her and sits with her again. It all just comes out, all of it. The cancer, the loneliness, everything. Told her he wished he had the balls to just get it over with, just end it all.\" He leaned back, taking a pull on his beer. \"I don't know which of them came up with the idea. Doesn't matter, really; but they cut a deal. He'd marry her, make her the beneficiary of his military and civilian insurance policies, and she'd make whatever time he had left worth living.\"\n\nI had to chuckle at that. \"Looks like she could have done that.\"\n\n\"She sure as hell did. He had just over a million in insurance altogether. You can get a lot done with a million dollars on the line. She got three of her friends to go in on it with her. The other three girls that were at the funeral. Tasha, Lin, and Sienna.\" \n\n\"Pros?\"\n\n\"Yeah, feature dancers and high-end escorts, just like Amber.\" He pulled his phone out and put it on the table. \"But they really did it. He was never, ever alone, one or more of them was with him all the time. Usually three of them. Amber had Sienna, the blonde, keep a schedule to make absolutely sure.\" The Sergeant Major shook his head. \"She had that shit locked, she'd have been a damn good operations officer.\" \n\nHe tapped on his phone for a second and slid it over so I could see it as he paged through pictures. \n\nA wedding photo of Peter Schnell in a tuxedo with his new wife in a wedding dress that had to have come from Frederick's of Hollywood. That was apparently where the three bridesmaid's dresses came from as well. The smiles looked pretty real. I was certain sure his was.\n\nThere were pictures of him with his new wife in Cancun on their honeymoon. Except they weren't alone, the three \"bridesmaids\" were with them. The women wore swimsuits that looked to be made of wishful thinking and some string, but not much of either.\n\n\"They spent that last year doing everything they could think of.\" He flicked through the pictures. They were at restaurants, baseball games, at the beach, hiking and camping. In most of the pictures the women were wearing just barely enough not to get arrested. In the camping pictures, it was just-long-enough flannel shirts and boots, and I hoped a fair amount of DEET.",
        "\"Looks like he got his money's worth.\"\n\n\"Looks like it. I think Tasha, Lin, and Sienna got more than they bargained for though. I don't know how they felt about it at the beginning, but by the end, when he was in the hospital, they were all in. They held his hands, read to him, sang to him, and talked to him right up to the very end. Twenty-four hours a day, seven days a week, one of them was always there. When it got close, they were all there, all the time. Sure as hell wasn't about money by then, he'd never have known if they left.\" He studied the table for a minute. \"I was there. They really loved him.\"\n\nI looked closer at the pictures and managed to ignore the remarkable amount of bare skin. Lin touching his hand and resting her head against him sitting next to a campfire. Tasha with her forehead pressed to his at a ballgame, both obviously laughing near to tears. Sienna with her arms around him while they floated in the water, both of them half asleep and dreamy. Amber was always there, watching him with concern and care, taking her laughter in his. Holding his hand at every opportunity. Not the slightest fleck of jealousy anywhere. \n\n\"Schnell had two albums of the pictures sent to me. Probably two hundred pictures or maybe more. I've got one of the albums at Headquarters. Not sure what the hell to do with it.\"\n\n\"What happened to the other one?\"\n\n\"He said to do whatever I wanted with it. I gave it to his ex-wife. She finally stopped arguing about the insurance after I gave it to her. A lot of the pictures are more...graphic than the ones I have on my phone. Made it pretty clear that they'd done their damn level best to make him forget she even existed.\" \n\n\"Helluva way to go.\"\n\n\"Yeah, it was, wasn't it?\" He looked up at the night sky. \"I don't think it was ever about the money though. It wasn't for Amber anyway.\"\n\n\"Really?\"\n\n\"I was worried when Schnell told me about the deal. I knew I had a vulture on my hands and I wasn't going to let that happen, so I looked into it a bit. Found something a little odd and just decided to let it go. I was right. I just got this a few weeks ago. She must have been just about three months along at the funeral.\"\n\nHe pulled a picture up on his phone. The picture was of Amber, much less formal in jeans and a t-shirt, smiling and holding a baby, sitting next to a picture of Schnell in his full dress uniform. The baby's resemblance to Schnell was unmistakable.\n\nI blinked. \"What the hell?\"\n\n\"Schnell never really looked into things or connected the dots. He was too distracted to really pay attention to anything beyond the fact that she really seemed to be the only one who cared at first. Then they kept him distracted. I guess I can understand that. Diaz admitted that Amber paid him to make sure Schnell ended up in her club in Atlanta that first time. I never said anything and I'm pretty sure Schnell never caught on. She didn't want him to know.\"\n\n\"Know what?\"\n\nHe pointed to the shelf behind her in the picture, where another framed photograph of another Soldier sat.\n\n\"She used to have a twin brother. Her last name was Campbell.\"\n\nPost Production Notes: \n\nWe all have to walk the Low Road eventually; it is inevitable. Perhaps, though, we may not have to walk it completely alone.\n\nThrough Amber and her choices, Peter Schnell lives on. Antigone would recognize the obligation that Amber felt, both for her brother, and for Sergeant Schnell.\n\nThis was a short one -- we're hoping to see all the craziness of the last year or so slow down, but we still have a bit to go. Some of the issues are boring, some are as dramatic as anything you'd see in fiction. We have several more tales in the chute. (Hah! One of my first stories has \"coal shoot\" in it vice \"coal chute\" -- see, I really can learn!) We will get them done. One way or another.\n\nSpecial thanks to my friend, we'd been sharing tales of the oddest funerals we had been involved in when he told me the tale on which this story is based. He even had proof of at least some of his story. \n\nVery Special Thanks to the Missus, who has a special knack for developing characters and for hearing the real voice of the story. Without her, I wouldn't even have started writing; with her, the stories are far better than I could write on my own.\n\nI talk with a lot of other writers and I get amazing advice and suggestions; they're mostly far more experienced than I and they've been incredibly selfless. You know who you are, so thanks a hundred times over.\n\nAnd I still shake my head in wonder when I see the kind of encouragement and support I get from the readers here. I couldn't have asked for a better place to learn to do this or a better group of people to learn from. Thank you."
    ],
    "authorname": "Todd172",
    "tags": [
        "cancer",
        "cheating",
        "funeral",
        "highway song story",
        "justice",
        "military"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-low-road"
}