{
    "title": "At His Majesty's Pleasure Ch. 04",
    "pages": [
        "Authors: We've submitted both this chapter and the next at the same time, so look out for Ch. 5 soon, if it's not already out! The reason for this is because Ch. 4 is mostly setting the scene, whereas Ch. 5 is where a lot of the action finally takes place. ;) We didn't want to keep you waiting any longer!\n\nAlso, a few commenters asked whether there was a system to alert them via email when a new chapter comes out. We just set up a quick subscription for that, which you can find in our profile page - in case you don't want to keep checking back on the site!\n\nAs always, thank you all for your support, and your lovely comments.\n\n******\n\n\"Stop the carriage.\" Alais gripped the windows, her gaze fixed on that little strawberry pin, and the corpse that it belonged to. \"Please, stop the carriage!\"\n\nHer previously good behavior afforded her the added advantage of startling the guards when she did yell out.\n\n\"Halt!\" declared Ser Bryant (the one she had nicknamed Scruffy in her head). He was older than the rest, and of all in the Chevaliers, he had been the most gentlemanly and deferential toward their captured princess. Part of her had wondered how these chivalrous instincts had survived the tenure under his terrible King, but that was far from her mind now - except to be grateful that it was he who happened to be guarding her then.\n\nThe carriage jolted to a stop rather abruptly, allowing her full vantage of that gibbet.\n\n\"We are to keep moving,\" said a younger voice - Ser Lionel. \"His Majesty would not want a delay.\"\n\n\"His Majesty also wants her to arrive in one piece,\" returned Bryant gruffly, unhorsing himself. The older knight approached the carriage resolutely and, with rather absurd manners given the situation, rapped on the door before opening it and slanting a quick bow. \"Is something the matter, Your Highness?\"\n\nJust beyond his shoulder, a gang of peasant children were gathered about Edmure's gibbet and chanting some awful rhyme or another, while they took turns throwing stones at his remains. \n\nEdmure, Edmure, was so bold\n\nHere he lies - all behold!\n\nThe King once gave him chances three\n\nTo fall and kneel and make a plea\n\nBut Edmure, Edmure, would not bow\n\nThis he made his solemn vow\n\nIt was the chanting which prompted her to slowly stagger out of the carriage - staggering opposed to gracefully maneuvering around Ser Bryant, considering her legs seemed to have been caught asleep in the most inopportune moment.\n\n\"There's something I need to see, Ser,\" she explained in a detached manner, continuing the trend of her 'good behavior' in spite of the present aberration. She knew she could have been stopped and (yet again) restrained, but she wasn't - perhaps her guards knew that there would've been no point to it. Her last conceivable chance to flee died with the stubborn principles of another foolish knight beyond last week. Even if the impulse to fling herself off the side of the bridge were to overwhelm her, she couldn't have gone twelve feet in either direction without some guard or soldier frantically seizing then safely depositing her back into the carriage.\n\n...So the King took his fingers\n\nThe King took his his toes\n\nThe King took his eyes\n\nHis ears and his nose\n\nChop chop chop!\n\nWent his hands and feet\n\nPlop plop plop!\n\nWent his limbs complete\n\nShe moved slowly, her footwork wobbly but sustaining a melancholy sort of balance in spite of it all. Her brows were knitted together as though in disbelief, and her pathetic few strides had finally left her a bit off to the fringes of the frolicking children. \n\nAnd no matter what cries\n\nNo matter what pleas\n\nThe King would not let\n\nPrince Edmure go free\n\nInstead he did laugh and scold:\n\n'For was he not Edmure the Bold?'\n\n\"Excuse me,\" Alais addressed the nearest child gently, suddenly an apparition of controlled tranquility. \"That rhyme - is that all true?\"\n\nA tiny girl with red plaits turned toward her. At first, there was just a bit of wide-eyed staring, and the girl's hand rose to bashfully wrap itself around one of her braids. \"Papa says so, milady. He was there.\"\n\nWithout missing a beat, Alais inclined her head softly in gratitude for the verification. \"Thank you...\"\n\nA straw haired boy had wandered toward them, looking boastful. \"Espifically the plop plop plop!\"\n\n\"How would you know?\" said the girl.\n\n\"Because I was there too, pumpkinhead!\" said the boy.\n\nAs the children continued arguing amongst themselves (\"Espifically isn't even a word!\" - \"Is too!\" - \"Is not!\" - \"Is too!\"), cuffing one another as they did, Alais's attention had already drifted. They had told her he was buried somewhere - under a tree, facing East. The details had always been poetically insubstantial, and now she knew why.\n\n\"That's my brooch,\" she said out of the blue, to the knights who naturally remained within direct earshot. She stared straight at the pinned strawberry emblazoned with red gemstones, crusted over with congealed blood and probably other gritty fluids too. How generous that the torturers and executioners should have left it pinned to the tattered remains of his shirt, and how fortuitous still that the thieves and robbers had yet to achieve a means of salvaging it out of that cage. \"May I have it back?\"\n\nShe'd learned it was best to be reticent and clung onto enough self-discipline to be just so - and she'd already promised herself that she would not cry - but inside, she was screaming.\n\nSer Bryant's confusion had quickly turned to a sort of mortified realization. \"Your Highness, perhaps you had better return to your carriage,\" he said, unable to quite hide the sympathy in his voice. \"It is not seemly.\"\n\nHe might have said more, but the clipped staccato of hooves stilled his tongue, as the monstrous black steed of the King's mount cast its shadow over them. Ser Lionel trotted behind him, ostensibly having fetched his master.\n\nThe King pulled on his reigns, pausing just before the two of them, the cage, and the trio of children that were now quietly gaping. \n\nFor a moment, he looked merely surprised - which, she thought, must have been a testament of just how many former enemies languished in his gibbets, that he could have actually forgotten Prince Edmure's presence among them.\n\n\"Ah.\" So even he was able to look caught off guard. Not that shame followed. \"I'd hoped you'd meet under...better circumstances.\" \n\nAlais did not crane her head to look at him, instead keeping her gaze fixed on the gibbet. A silence hung about her, her features frozen with something inscrutable. A sense of hyper-awareness washed her over in the meantime; if she wanted to make a scene, now would have been a very good time, here in broad daylight and with all the eyes of the capitol grapevine upon them. Come to think of it, there'd yet to have been a more compelling excuse to break into hysterics. Could he fault her for it? How much disciplinary action would she be risking if she were to fall dramatically to her knees and violently sob, delaying his itinerary for who knows how long? And just how much would that even hinder him?\n\nShe continued standing quietly. Overreactions did not come naturally to her, no matter their appeal in the heat of the moment. And she was drained, so drained, that she doubted she could pull off an immaculate display. Though he may have been her friend, Edmure certainly was not her beloved. But the revelation was enough to give her nightmares for the remainder of the week; she valued his friendship that much.\n\nShe saw the King approached by Ser Bryant, and spoken to in muted tones, which prompted his gaze to the strawberry ornament. He straightened, after a moment. \"You torture yourself by lingering, princess. Return to the carriage.\" He paused, and allowed, \"I will have the trinket returned to you, later.\"\n\nTruth be told, she wanted nothing more to do with the brooch, but she couldn't stand the sight of it pinned to the lapel of those wretched remains with an even greater ferocity. A whimsical notion would've been to pass it onto one of the urchins, like the girl she kept in mind, as a parting souvenir. But she could think of something for it later all the same - and it was good of him to acquiesce to her request, the lone silver lining against a backdrop of overmastering terror. Her expectations for the benevolence in him was already so low that any small gesture of actual magnanimity would have come as a vaguely pleasant surprise.\n\nWho knows, perhaps her delayed response (combined with not actually following the command) was impertinence enough as it were, but she owed it to her late betrothed to try one last thing.\n\n\"...Will he be taken down?\"\n\nShe brushed her eyes with the back of her hand for effect, blinking once or twice. It was an amendment to her prior convictions: she had promised herself that she would not cry, unless it was the calculated sort of crying. Apparently, displays of emotional weakness bore slightly more desirable results than acting out - and as long as her recent behavior had been good, which it had.\n\nIt wasn't too difficult anyway. She wept delicately and realistically, discreet enough not to cause a stir beyond those who were already paying attention, and was in fact making a visible effort to stifle herself. Soon her face was lowered into her palms, her shoulders drawn tight and trembling. He was her friend, platonic affection and all.\n\nIf this had any effect on the King, he didn't show it. His expression remained utterly implacable, though she noticed that he was observing her with a particular intensity. \n\n\"His time hasn't come,\" was the long-awaited answer. His tone brooked no argument. \"Taking him down will not make him any less dead.\"\n\nHe made a gesture, and Ser Bryant gently took hold of her arm, guiding her back to the carriage. \n\nThere wasn't that much disappointment, but she made the effort to appear crestfallen nonetheless. This combined with a slight nod of acceptance made for a pitiful sight indeed. Even if it hadn't moved him, she couldn't possibly quit halfway. And if she could make herself appear... somewhat... less than what she was, perhaps that might do... something for her later on. For now, she behaved with a distant sort of obedience, her expressions blank and her reactions made bland by trauma after the artful tears had dried.\n\nAs she climbed into the carriage, she saw the King toss a few coins to the urchins who had spoken with her, and then they were on their way once more.\n\nThere were more gates to traverse, more checkpoints to pause at and archers to go under, making it amply clear that it was a place not easily breached. But the palace itself was not merely bleak and utilitarian - indeed, the architecture was grand and lavish, not above displaying opulence in its flourishes. Eight stone pillars lined the entrance, each one as thick as a man was tall, so that to stand next to one was to feel as an ant.\n\nAnd it was this that was to be her new home.\n\n*****\n\nAlexander was not immune to feeling empathy, per se, but he was so desensitized that it took particular circumstances for it to register. He objectified most people and detached himself from them; only those who were especially close to him (a number he could count on one hand) could trigger genuine feelings of guilt or compassion, or curb a streak of malice halfway begun. The princess did not fall in this category. Certainly he was interested in her, and he was exceptionally attracted to her. He might even say he liked her, in his way. But she was not, for all that she mourned so beautifully, someone that Alexander had yet to think of as more than some trophy he'd plucked from Vvaria's walls.\n\nHe'd sentenced Edmure to rot in the gibbet for a full five years, just as he'd sentenced every other transgressor on this bridge. It was important that would-be plotters and rabble-rousers take a good long look as they traversed this bridge, lest they forget the fate awaiting them should they step out of line. Edmure was a particular triumph - the evidence of his latest conquest, and a story that remained burned in the minds of every witness to his punishment. Beyond pragmatic reasons, the terrible part of Alexander enjoyed seeing his former enemies reduced before him, and displayed in all this wretched depravity.\n\nReally, she shouldn't have been disappointed. The lack of mockery was a generosity in of itself.\n\nAs the procession finally entered the courtyard, they were assailed by a veritable army of servants and stableboys, swarming them and ready to make preparations for their welcome. \n\nAlexander arranged for the princess to be stolen away in the midst of all this commotion, so that she would be swept discreetly into her rooms and not draw the eye of too many nobles at the same time. He knew enough of his court - which he generally had far less loyalty from than the masses - to anticipate the machinations that would unfurl at the first sign of her arrival, whether it was to poison her or convert her to their various causes. He had enough to deal with as it was.\n\nAs he made for his own rooms, he asked for any letters to be sent for. There were plenty awaiting his arrival, many of them the usual fare - obsequious requests, disputes between squabbling nobles, tributes from nervous neighbors, and so on. He swept all of these aside and asked only for news from Vvaria; three letters were duly fetched, and once he settled into his quarters, delivered for his inspection. \n\nThe first was from Prince Radvar, twin brother of the kidnapped princess. Days ago, and not long after the tumultuous discovery of Alais's disappearance, a falcon of remarkable intellect (whom Radvar affectionately called 'Gretka') had burst into the ravenry with a missive attached to her leg. The contents of the missive were actually quite civil in writing, for all the chaos Gretka's mean and imposing disposition stirred among all the lesser brained ravens that day, and after what had to have been numerous onslaughts of \"I told you\" and \"Old man\" and \"How could you let this happen\" and \"I'm taking her back\" (begrudgingly curtailed by a \"Listen to me, you reckless dolt\") from prince to grandfather.\n\nIn any case, none of that high-strung emotion bled into the ink. The relevant content itself was as simple as thus:\n\nWe were deeply disturbed to discover that a charlatan had dared to impersonate Your Majesty.\n\nSince masquerading as one's divine authority is also a crime of heresy, we have taken it upon ourselves to, summarily, try and execute the pretender. His head shall be delivered shortly for your inspection.\n\nWe were compelled to resort toward more barbaric means of interrogation (i.e. boiling) in order to extract a confession, so the rest of him is regrettably unfit for travel. After a bit of hot water, the pretender seemed convinced that Your Majestic Person was complicit in his crude devices. This is naturally absurd, especially for one as Majestic as yourself, and so we have discarded his final words as the drivel of a dying lunatic, as per our good faith. Please do not be alarmed; it was no trouble at all. We are positive you would have extended us the same courtesy, were the roles reversed.\n\nAs for the remainder of your countrymen, rest assured that we have similarly presumed their innocence for the time being. They are being treated well. I even played chess with Leander the other night. Needless to say, he loses with grace.\n\nKind regards.\n\nWith the added footnote of: Where is my sister, and little else.\n\nA week after this first letter's arrival came an ornate box carved with exceptional woodwork, the aforementioned head sealed inside; it was scented and prepared in such a way to stave off the worst of that pungent decay, out of courtesy of course. It came with the barest slip of a note, as the formal letter of accompaniment had already been delivered previously: Don't you think it looks like a potato? I think it looks like a potato. And once more, in larger writing: Where is my sister.\n\nThe most recent, last, and third of the deliveries was naturally King Esterad's response, having actually arrived very shortly before Alexander's homecoming. Once more, the mean-spirited Gretka swooped into the ravenry without any regard for the residing (and thereafter violently cawing) ravens. And once again, the content of the letter itself was extremely cordial in comparison.\n\nThis particular letter expressed disappointment and displeasure that Alexander had foregone the proper, customary channels of betrothal in favor of recklessness, for that was the only way to put it. It was a long-winded sort of chiding more easily forgiven in the elderly, which Esterad was most likely taking advantage of, as the correspondence continued in this fashion for the entire first two pages, citing the disgruntlement of several princes (and the odd king) previously in the running (Prince Hadrian composed a whole new limerick detailing his heartbreak, but he would not speak of it here), and how Alais's ladies in waiting had been made to be very, very distraught and dispossessed by the sudden change. \n\nOn the third page, he finally wrote his blessing, and that his son still awaited instructions as to how they might proceed with their Obsivian guests.\n\nAlexander read through each of these letters with care.\n\nThe prince's first letter stirred traces of a smile, for all its cheek and communication, but the second note in the accompanying box (as well as all the care that had obviously gone into its preservation) produced outright, if surprised, laughter. Alexander felt only minor vexation at the death of his decoy, beyond the irritation that another sovereign had thought himself authorized to punish his subject. Had it happened in some other context, such an act could have easily incurred his wrath and invited (or more accurately, served as an excuse for) war, no matter what duplicity Alexander himself had engaged in to invite it. But never let it be said that Alexander did not have his own brand of humor, nor indeed that the right kind of amusement could well divert his anger. A potato, honestly.\n\nBeyond that, he was largely in a (very) good mood, having secured, with Esterad's letter, the compliance of Vvaria as planned, and an alliance that was far less tenuous than the kind he disliked. His arrangements were coming along nicely, and with luck, he could put Vvaria's ships to good use before the year was out - and see its Vale traversed. Presently disposed as he was to be indulgent, he was also able to overlook Esterad's lectures without much distaste.\n\nHis response was almost rudely succinct, and blithely ignored all rebukes and insinuations - such was the privilege of power:\n\nI'm pleased to receive your acceptance of my terms - I would have been disappointed in your reputation for wisdom, otherwise. I expect we will have a very promising alliance together. You will hear more from me once the marriage is finalized.\n\nPlease inform Prince Radvar that his sister is perfectly safe. I daresay she is even as safe as the Obsivian guests he is currently charming, though I'm certain my hospitality could never match his. I have enclosed my own gift, to aid his study in anatomy.\n\nA plain potato had been wrapped in white silk, and placed in a box more ornate and fine than had been delivered to him. It would serve as a potential scare; his words could have easily implied he had sent some chopped extremity in turn, which was enough to sate Alexander's mild vengeance when it came to his pretender's death. \n\nThe Vvarian falcon had yet to depart from the ravenry, and was still in the midst of terrorizing the other birds, or so Alexander was told. He instructed it to be fed and watered well, before being entrusted with the return missive.",
        "-\n\nThe next morning, he was awake by dawn with a small cluster of soldiers, practicing his swordsmanship in the courtyard. He never slept long these days, and even less so whenever he was about to accomplish a campaign or stratagem - which was to say, too often. The Archmagister always cautioned that he would tire his body, and in a way Alexander knew that the manic energy that seized him at these junctures was not wholly healthy. But he'd never been able to stop himself all the same, and presently, the vitality and clarity of mind he received from swordplay was far more attractive than lazing in bed. He liked to keep strong and ready, able to defend himself; he thought poorly of rulers who would waste away simply because they could. With a particularly rapid series of lunges and parries, he was able to disarm his last opponent, and concluded the practice with satisfaction. \n\nA servant offered a towel, and he retreated with it to his private library, where breakfast was quickly called for and brought to him, steaming and fresh-cooked. The selection was a a little more limited than the palace library proper, but it served his purposes fine for this morning: a quiet place for a chess match, and consultation with an advisor.\n\nThe adviser in question was a Duke Ethan Seymour, who also had the distinction of being one of the very few men that Alexander trusted, and was now the closest thing he had to a friend. Ethan had known Alexander long before he was King, for they had grown up together in the palace. The boyish friendship they'd formed then had somehow persisted years later, in part because of their shared intellect and interest in military tactics, but also because Ethan was patient and yielding where Alexander was decisive and aggressive. Though he came from an old and noble line, Ethan did not have a family that boasted wealth or power; nonetheless, it was to him that the King turned most often for counsel.\n\nAlexander did not have to wait long for Ethan to arrive. They fell into conversation about the the events of the last days, and here Alexander had a simultaneously incredulous and awed audience (\"You did what?\" and \"Of course you did\" being often-repeated echoes). Ethan also had news of their southern frontier, which he'd journeyed from, and Alexander questioned him about the particulars as they set up the chessboard together.\n\nIt was only after these topics had been exhausted that Ethan ventured into another territory. \"So what was she like, then, this Princess Alais?\"\n\n\"Hmm?\" said Alexander idly, studying his chess pieces. \"I've already told you about her.\"\n\n\"You told me that you abducted her. Alexander, you've said nothing of the lady herself,\" said Ethan. He glanced sideways at his King, the analytical look in his eyes belied by the smile that threatened to break. \"She must be beautiful,\" he suggested, studying his friend, as if to decipher a confirmation or denial. \"Or special in some way, I'm sure, to move you to such...romantic passion.\"\n\nAlexander smirked. \"It was a political gambit, Ethan.\"\n\n\"Yes, I'm sure that's all there is to it,\" said Ethan. \"But fine, fine, I'll let you be mysterious for now.\" He moved a pawn forward, pausing for a moment, and then broached, \"I heard she came across Prince Edmure, this afternoon.\"\n\nAlexander raised an eyebrow. \"What do you mean, 'you heard'?\"\n\nEthan shrugged innocently. \"I may know a guard or two who was present.\" He was brave enough to smile, and added, with good-natured humor, \"Don't bother asking for their names. I won't be responsible for spilled blood on my account.\"\n\nAlexander was silent long enough to instill discomfort, but he finally offered a short laugh. \"I should have expected you to meddle in my affairs. So very well, you consulted your spies. I suppose you disapprove?\" He took out a bishop with his queen, laying the piece aside.\n\n\"He was her betrothed,\" said Ethan. \"And it was a reasonable request. What did it cost you to give her such peace of mind?\"\n\n\"Her peace of mind is meaningless to me,\" retorted Alexander, indifferent. \"I have what I want.\"\n\n\"I know. And the plan has its merits - the alliance is secure. But there are...\" Ethan fumbled for the right words. \"There are reasons for being...charitable, even if she is now promised to you.\"\n\n\"I think Edmure's fate was very educational for her. A far better incentive to behave than being charitable, don't you think?\" Alexander voiced, amused, his eyes still on the board.\n\n\"And how long is that going to last?\" said Ethan, with guarded frustration. \"You know your court better than I do. You know how many different factions would love to sink their claws into a despondent Queen. She'll be more useful to you if she's happy.\"\n\n\"I see what you're trying to do,\" replied Alexander, this persistence finally drawing his attention from the game. \"Using pragmatism to win me over. I know you're otherwise motivated. You've always been swayed more by your high-flung principles than by your good sense.\"\n\n\"And why are my principles so distasteful to you?\" Ethan returned, with rare terseness. \"There was a time when you made room for them.\" He hesitated, then went on, \"Was this not the very same thing all those years ago that so offended - \"\n\n\"That's enough,\" said Alexander. His voice was quiet - dangerously so.\n\n\"I apologize, Your Majesty,\" Ethan said stiffly, after a moment. He was wise enough not to press that particular point. \"I forget my place.\"\n\nAlexander said nothing, but they resumed their game. This continued in uninterrupted silence, until - \"Your principles aren't distasteful to me, Ethan. But I am not you.\" It was as close to a concession as could come from him.\n\nEthan relaxed, somewhat, enough to lighten his tone. \"Neither would I ask you to be. Such greatness cannot be equaled, and I would not place that burden upon you.\" As his opponent cracked a smile, he continued, \"Just - grant her some reprieves, sometimes. If not happy, let her not be tormented.\"\n\nHe was nothing if not persistent, especially after Alexander showed some weakness, and he managed to slip in several more reasons why prudent kindness might prevail over cruelty:\n\n(1) A Queen actively working against him would not a smooth-running monarchy make (\"She'll only be Queen in whatever capacity I allow\" was countered by \"Even a symbolic figurehead can wreak plenty of havoc, Alexander\")\n\n(2) The legion of hopeful would-be Queens (and their families) should not be given the added incentive of an unhappy marriage\n\n(3) Too many schemers would be all too eager to recruit her into their conspiracies\n\n(4) Vvaria would be more cooperative if their princess was treated well\n\n(5) There was a non-negligible chance that Alexander's brand of torment could drive her to hurting herself\n\n(6) She would be more enjoyable company if she were happy (\"A wild wild guess, anyway\")\n\n\"Hmm,\" said Alexander, thoughtfully. He was not immune to reasoned argument, particularly when it came from the right source - not that he currently gave any evidence of this, only silently \"Why do you care so much about this?\" \n\n\"Your mood, when foul, is a terrible thing indeed. Some small chance at marital bliss would spare us all,\" Ethan returned, prompting another chuckle. More seriously, he continued, \"But also because I do believe you would be better served this way. You know I have your best interests at heart.\"\n\n\"Unfortunately.\" Alexander toyed with a pawn, shifting it forward.\n\n\"You have to admit, even for you, this whole kidnapping gambit was a little on the extreme - \" The door opened at this juncture, and Ethan's words stilled in the air, unfinished, now that their privacy was disturbed.\n\nA servant entered, curtseying. \"Princess Alais, as summoned.\"\n\nAlexander nodded. \"Sendher in.\"\n\n*****\n\nThat previous night, Alais had been ushered away into a removed wing by a bevy of servants. Not much (read: absolutely nothing) was to be done in the way of unpacking. The masquerade gown was long since discarded after that first hellish stint of travel, and she hardly had any possessions left that could be considered personal. The intricate necklace-watch and a few hairpins were the last of them which remained; for these, she lacked the heart to wear, instead keeping them tucked away away in a pocket close to her for as long as she could manage.\n\nBut as far as worldly materials went, she never wanted for anything; her assigned... slaves made sure of it. Granted, it did take her the first few hours to realize that all she needed to do was ask, as none of them ever spoke to her as they attentively carried out their duties. There was paper and paint, books (most of it Obsivian history), cards for solitaire, and even obscure puzzle games to stave off boredom in her idle confinement - and confinement was still what it was, for all the luxury and decorum beaming down from the lavish walls of her quarters. After her bath, an array of dresses and shifts had been laid across the large bed - more than she could wear in a week, much less a day. When did they take the time to measure her size?\n\nAlais was not unfamiliar with affluence (though the extent of it here actually seemed a little obnoxious), and she could have easily written the remainder of the evening off as uneventful...were it not for the discovery that at least some of these mute attendants had been dispossessed of their tongues.\n\nThat night, she huddled completely beneath the sheets, chasing away spectres of wide-eyed men rotting in gibbets and of children with gaping, bloody holes in their mouths in her sleep. Who else had slept (or attempted to) as guest in this very bed, and where were they now? How many of them were still alive, and how many of them had wasted away in a gibbet - or on a pike? She was awake before daybreak, and the same odd rituals with these forever-silenced working girls began anew, until the morning summons.\n\nHer choice of dresses this morning hadn't been much of a choice at all, but she still managed to make a point of selecting the marginally plainest one. As for the rest, including her hair, she surrendered to the hands of the attendants, allowing them to carry out their (or his) will. What was the purpose in struggling there? At least where the styles were not exceedingly ridiculous to her tastes, at which point her hands would have flown to her head and ripped all the pins out herself.\n\nAs the servants led her to him, anxiety knotted and unraveled, only to knot again in her chest. Was he actually serious about making her Queen? It felt much more like she was being groomed into becoming a glorified pet - but what did she know? The roles of queens here were unlike those of elsewhere. Gods forbid she come into a position of actual agency... he probably should not have been so crass in his methods if this were so. He probably should not have tried to make her detest him with a such heavy hand, because that was, essentially, what he had done.\n\nIn a distant world, he might have even commanded her admiration. Instead, he chose cruelty and her growing dread and simmering resentment (but it wasn't quite abhorrence just yet).\n\nPoor Edmure, though. He really didn't deserve such a fate, pigheaded though he may have been.\n\nThe doors opened to what seemed a private library, where the King was seated opposite a companion, a chessboard between them. \n\nShe was aware of how he looked her over, the same possessive quality in his eye. \"Ah, Princess Alais. May I present to you Ethan Seymour.\" With something of a smile, he added, \"The real Duke of Lourbon.\"\n\nEthan rose to his feet, at once, and bowed - a full, respectable thing, not merely the slant of a gesture. He was more wiry and scholarly-looking than his counterpart, with a shock of red hair and quiet intelligence in his eyes. \"A pleasure, Your Highness.\"\n\nThe King had not changed out of the simple tunic and breeches he'd donned for his morning exercise, a far scanter garb than he'd had on in their previous encounters (aside from the change after the spilled wine). His sleeves had been left rolled up too, exposing the sinewy muscles there, and she was conscious of the effort it took to keep her view steadfastly clear of him. He had a ridiculously mesmerizing physique. It was so unfair. Probably even more inappropriate would have been to overcompensate by gawking incredulously at the real Duke of Lourbon too much. Thus, she resigned herself to studying the various positions on the chessboard.\n\nFor a moment it seemed as though she would've much preferred joining the ground outside via self-defenestration. Her presumed indecisiveness lasted for all of ten seconds before she finally stepped forward, a conceptually taciturn 'Oh, so he exists' quickly suppressed in favor of a perfectly respectful \"Your Grace\" and accompanying slight dip. \n\nThere was still no life in her voice; she did not want to give the misconception that she'd come to terms with her... predicament, much less be happy with it. \n\n\"Would you care to join us?\" said the King. He spoke courteously, but it always hard to tell if this would persist. \"The game is almost over.\"\n\n\"That's confident,\" said Ethan wryly, under his breath.\n\nA servant quickly fetched an additional chair for her, situated adjacent to the game, so that she commanded a full view. The setup of the pieces suggested that a very long game had elapsed, and the excess of lost pieces implied a fairly even match of skill. But Ethan's king-piece appeared to be in trouble, whereas Alexander was currently on the offensive. Nonetheless, she also picked out a few moves, though self-sacrificing, that could potentially prolong the standstill for even longer. The present setup was not unfamiliar to her, but she took care in not appearing too engaged with the board in spite of having eyed it for some time.\n\n\"Are you much of an expert on the game, Your Highness?\" queried Ethan.\n\nAlais sat down somewhat stiffly, her hands fidgeting on and off with the seams on her lap. \"Not particularly, Your Grace,\" she answered, a looking a little outwardly uncomfortable.\n\nShe also tried to smile at him a little - a gesture he returned - as a small forewarning that any potentially objectionable behavior from her part to come would not have been his fault (most likely), for the benefit of doubt, but she was uncomfortable. The atmosphere seemed all too benign, considering. \"Was I summoned for introductions?\"\n\n\"No, there are a few things I'd like to discuss,\" the King replied. \"But if you wouldn't mind waiting for a few minutes, I'd like to first resolve this game.\" His tone was perfectly polite, which was at least a marked improvement over some...earlier circumstances, but the sentiment still carried some presumption; he expected others to wait for his attention.\n\nShe saw Ethan glance at him with raised brows.\n\n\"You musn't think I am being discourteous,\" said Alexander, at this prompt. He smiled. \"On the contrary. I know that I would be too distracted by an ongoing match that I would fail to provide my full attention.\"\n\nHis Majesty's predisposition to resolve his game was met with none other than blank staring. What did he mean, if she wouldn't mind. When did her minding ever matter. Were she not so deliberately dispassionate, she might have erupted into a fit of maniacal giggling right then.\n\nAlais thought she had a vague concept of what he was doing, wearing the same sort of face he wore when he paraded himself as that deceitful iteration of his friend. How convincing he was then, to have her believe he was like any other human being with reasonable ethics, and how convincing he was now, so much that she could even see flickers of that maddening world where she might have grown fond of him. She'd be such a fool to actually discourage this side of him, even if she did doubt in its sincerity; but then, just how long was this going to last? For as long as Duke Ethan kept them company? What new mind game was this?\n\n\"Hmm, so he says,\" Ethan mused. She noticed that he was studying her, however subtly, though she did not blame him for the curiosity - and could see he was taking pains to include her in the conversation. \n\n\"Well,\" he continued, \"if you've an interest in the game, perhaps you would be so kind as to lend me a little help.\" He glanced at his opponent, who looked rather smug. \"His Majesty takes his games far too seriously, in my opinion. He approaches each of our matches with so much studiousness that you'd think he was conducting real battles every time. How can I hope to compete against such stern resolve?\"\n\n\"He has nothing to attack me for but my earnestness,\" Alexander replied, with a laugh. \"I hope you won't side with him just because of his sly appeal to you. The game is far closer than he would represent.\"\n\nConflict stirred in her as the two bantered so cordially with one another. The exhausted spirit in her which craved warmth wanted so bitterly to embrace the turn for what it seemed, to try and find some comfort in this arrangement, while pessimism and pride refused to take it with anything less than a sea of salt. The fitting compromise was, of course, not to fall blindly into it, but not to resist it either. She had the good fortune of the chessboard to pour her ruminations toward, as though her chief concern was whether or not she might help.\n\nReally, she had every reason in the world to side with anyone but him.\n\n\"I'm not certain I would be of any use...\" With this utterance, her eye fixed over a rook, one of Ethan's, in a curious enough position a bit aways to the side. Indecisiveness lingered for a moment longer before she reached forward with her fingertips, and gently moved it those few rule-abiding spaces toward center. And now His Majesty's queen was doubly threatened, with its options now being: either relinquish its current line of offense or be eaten, one way or another.\n\nWhen she settled back into her seat, she resumed her dour staring, this time at her hands. To the critical eye, however, her posture might have appeared just a little more at ease.\n\nEthan shook his head, instinctively. \"I considered that, but...\" he began, but paused, glancing over at his opponent's queen-piece. \"Huh.\" \n\nRealization dawning quickly enough, his uncertainty immediately changed to delight. Alais noted to herself that he did not seem of the temperament to feel insecure at the demonstration of another's skill - he appeared to lack the arrogance for it. (In her opinion, the King, on the other hand, had enough arrogance for insecurity to bounce off altogether.) \n\n\"Well-played,\" Ethan said, warmly. He glanced across the board to his opponent, sharing a meaningful look. \n\nThe King did not look as surprised, but he had conjured back that same expression of seeming peeved and also oddly pleased at the same time. After a reluctance pause, he shifted the queen back. \n\n\"There we are,\" said Ethan. He glanced sidelong at her. \"Did you speak a lie when you denied being an expert?\" \n\nUpon this gently accusational question, Alais kept her silence. She did direct him another quick and unassuming half-smile, for courtesy's sake. It wasn't really his fault, but the added effect of the certain other presence at the table made speaking freely exceedingly distasteful. No matter how charming or amicable he was being right now, it wouldn't redeem him from all those... afflictions he'd subjected her to. So what if she did had something of a thick skin and wasn't really as impacted as she was supposed to (and as she'd made herself out to) be. The presumption that all could be forgiven after twenty minutes of apparent goodwill was even somewhat insulting.\n\nDeep within, she knew this line of thought had to have been borne from a reckless, fruitless sense of stubbornness. It would get her nowhere; it had destructive potential... but how was she to abide this? This? Lounging about as though they were now betrothed in perfectly happy and ordinary circumstances? Was this even real?",
        "The game carried on. Ethan was by no means a poor player, and he had a deft way of saving his pieces with a last-minute formation. But when it came down to it, she had to reluctantly (begrudgingly, resentfully) concede that the King was possessed of a certain genius. He was clever and adaptive, but more importantly, creative; he implemented two plans when it looked like one, and he seemed forever to be predicting Ethan's moves at least a few turns in advance.\n\nAnd for all the uncaring she strived to exhibit, an apprehensive sort of impatience was beginning to itch away at her chest. When was this chess match going to end? He wanted to discuss something? The sooner he did, the less time it was required of her to bear his company, and the sooner she could pretend to be somewhere else... And more time to think about things on her own.\n\n\"An unfortunate quandary,\" sighed Ethan, fiddling with the first bishop he'd lost and eyeing its brother. His pieces were scanter now. \"I can save it, but only by sacrificing my position - and my plans.\"\n\nThe King smiled, glancing at Alais. \"Duke Ethan is far too protective of his pieces,\" he explained. \"It's his greatest strength and his greatest weakness - I find it hard to take even a pawn without his interference, yet I have only to threaten one bishop and he retracts a strategy ten turns in the making.\" \n\nEthan laughed again. \"Well, the pieces are important. Being too aggressive with them is a vice of its own, Your Majesty.\" \n\nThe King moved another piece. \"And what do you think your vice is, princess? Are you too careful, or are you willing to make sacrifices when you need to?\"\n\n\"You've phrased that question entirely in your favor,\" Ethan protested, but mildly.\n\nShe shifted in her seat, an uncomfortably out-of-place insertion (so she felt) between their back and forth - the King made her uncomfortable with his presence alone, this heightened by his strangely mellow demeanor when she knew what he was capable of - but she said nothing of it. It took effort enough to pin down a steady and polite tone even in so many words.\n\n\"Neither. Both have been inconsequential to me.\" Was that even her voice? How airy and unfettered it sounded. At this, she couldn't resist the touch of self-gratification, and the complementary relief, that she was doing something right for herself.\n\nThe real answer to this: a mix of both seemed to suit her best, depending on circumstances. She was, however, not of the frame of mind to enlighten His Majesty on anything she considered to be personal or private. If he still wanted an answer, even as casually as he'd posed his query, she could settle with tossing out something he might've already guessed. What vices had she? The ones which strung her along into this entrapment, for a start.\n\nHer eyes were settled over the back of her hands, again, when she finally uttered, \"Complacency. Negligence.\" He was probably intelligent enough to catch onto that which remained unspoken - her regret.\n\nThe King only smiled at her comment, but the expression lingered for a moment rather too long, as if he knew perfectly well what she was implying. She felt unease begin to fester again, under his cool gaze, but it was here that Ethan smoothly intervened.\n\n\"Alright, you've wheedled me enough,\" said the Duke. He sighed and finally inched his bishop forward diagonally. \"There - I've made my sacrifice. Now who's willing to take risks?\"\n\nHe succeeded in his objective - the King's attention turned back to the match at hand, and at once, a grin stole over his face, quite sly, but also genuine and pleased.\n\nEthan seemed to understand immediately. \"You wanted me to do that!\" he exclaimed, but he was smiling. \"What a low trick, indeed, to call me out on my honor.\"\n\n\"And yet you fell for it all the same.\" The King slid his castle forward, where the bishop once stood, and now had a clear line to Ethan's king-piece. \"Checkmate.\"\n\nEthan looked disgruntled, and studied the board to assure himself of this conclusion, but at length brought his hands together a few times. \"Very well, I concede the game,\" he said, nudging the king-piece and letting it fall. \"But you had better know that I won't fall for such a cheap parlor trick twice.\"\n\nThe King lounged back, clearly satisfied, and began cleaning up the pieces. \"We'll see.\" \n\nShe noticed he had kept a fairly leisurely pace in his conduct despite the fact that he knew her to be waiting. Not that this surprised her, entitled as he was. But now his attention shifted, and he turned to fully regard her.\n\n\"Thank you for your patience.\"\n\nA pause stretched out, rather uncomfortably. She had the impression that he was coming to some kind of decision.\n\nFinally - \"I'd like to apologize for my behavior. I know that means enormously little to you,\" he continued, \"but it's a necessary first gesture. I do not regret my methods in securing your hand - and I doubt you'd believe me if I said so. But I do regret my attitude toward you, which could have been more...refined.\" That was an absurd euphemism if there ever was one, and judging by the twitch of his smile, he knew it too. \"To that end, I would like to turn over a new leaf.\"\n\nHe seemed to consider, for a moment, and then pulled out a small box, laying it on the table with her reach. \"I will have Prince Edmure taken down,\" he said. \"And he will be buried.\"\n\nFor the first time since Alais took her seat, true and unmitigated emotion sparked across her features. \n\n\"I - really?\" Although she couldn't completely shield the incredulity in her voice, the gesture had her blinking. She sat up a big straighter, carefully reaching out to accept the box with both hands. Something told her that she hadn't needed to open it to guess what was inside; she peeked nonetheless, confirming the strawberry brooch within, before closing the compartment in a slow and deliberate motion of hand. This was... unexpected, but she quickly batted away the alarming impulse to be relieved.\n\n\"Of course,\" said the King, still much too benignly for her comfort. It just didn't seem natural after all the cruelty he had shown to her, and yet his performance was seamless. \"Is that amenable to you?\"\n\nSea of salt, she chanted internally. As long as she upheld her guard, there could be no disappointment even if he were to show signs of being a (very) horrible person again.\n\nAll the same, she was in no position to reject the extended olive branch, and neither would it have been very smart (or conducive to living) to. Whether she felt the personal desire to, she couldn't say. But no matter how she spun it, there was no denying that this - however long this was meant to last - had to be a change for the better... from before. She glanced sidelong from the King to Duke Ethan, then swiftly back to the King, suspecting where this turn of leaf had come from; the Duke's expression remained neutral, but the way he stared off to the side was so studious that it might as well have been a confirmation of his investment. \n\n\"Thank you, Your Majesty.\" It was a truer response than 'yes' or 'no', considering that part of her feared still he was expecting something incommensurate in return. Even with her limited experience, however, she supposed it wasn't in his habits to give before he took.\n\n\"But what you did,\" she began with furrowed brows, then paused indecisively. \"... was actually a little flattering.\" Even if the words were spoken more as a matter of fact than anything intrinsically light-hearted, it could have gone either way; but for the time being, she was made content enough with these token reprieves that she found more comfort in (even if just slightly) easing off on the torpor hanging over her than to express more of her grief. \n\nThe King smiled, the expression pleasantly softening his features. \"Oh, it was flattery of the highest kind,\" he replied smoothly. \"I think the impulsive quality of it all speaks for itself.\"\n\nShe already regretted broaching the topic, and chose not to dwell. \"Was there more you wished to discuss?\" she inquired, covering the top of the little box from view with her palm.\n\n\"Yes.\" The King folded his hands together, looking across the now barren chessboard at her. \"Your grandfather has written back. He has agreed to give his blessings.\" \n\nThe tight knot of anticipation lodged in her throat, though there was actually a little less dread now with the knowledge that this arrangement was, however the circumstances, agreed upon by both parties. It wasn't as though she expected for her grandfather to refuse in the first place. Methodology aside, there was nothing inherently undesirable about the proposition on paper - which, ironically enough, made those very methods seem all the more ridiculous. And yet, there was a certain dreaded finality to the arrangement now, one that she could not ignore even in denial.\n\nHis next words were almost matter-of-fact. \"We will be married tonight, by way of a small ceremony. The grander and more public wedding will follow later.\" \n\nHer inscrutable staring persisted. Married tonight. She wasn't ready - a few more months, she was meant to have just a few more months. \"...Congratulations,\" was all she managed, wanly, feeling silly as she said it.\n\nHe studied her. \"I know it is - soon. But trust me when I say it will be safer for you this way. There are...\" He considered his choice of words, and an amused smile twisted his lips. \"There are those who would desire to be Queen in your place, and they are not without their dangers.\"\n\nThe subterfuge made sense. Expression grim, she gave a slight nod to indicate her understanding. (Why didn't he just appease one of those would-be Queens? No she knew why, and it had to do with a certain vale.) It certainly explained why he isolated her from courtly contact, which, to be fair, carried as much value as an act of mercy as being strategically sound. In spite of certain stubbornness, there was a resounding notion clamoring for attention in her head that this was not... as bad as it could've been.\n\nAnd now the outlined agenda gave life to an entirely new realm of mystery. Her fingers fidgeted again with the box. \"I still don't know - what does it mean to be Queen in my place?\" \n\nShe'd waited on enough queens - had certainly been taught the standards of expectation. But those were simply mere standards; logically, there would have been some discussion over the matter before the wedding day, at least. The King's unrefined (in his words) attitude defied all preconceptions. Did he expect her to maintain a presence at his court? To wait on him? To dote on him? Lovingly?\n\nHe still intimidated her - frightened her. She did not know if theirs could be a marriage of affection, but at least he would get his vale.\n\n\"The role of the Queen will be largely ceremonial,\" the King replied. The phrasing of this seemed specific - not is ceremonial or was ceremonial, but will be ceremonial; from her experience, different Queens carved out different degrees of power, which was largely dependent on individual ambitions and their influence over their husbands. The King's late mother had wielded substantial power herself, attending council meetings and all but ruling in his father's absence. But she suspected it was not in his nature to think of sharing his power or letting himself be influenced, and it did not occur to him to offer. \n\n\"You will be in attendance at Court, and at various formal events. I will expect you to behave with grace and decorum, in representing the Crown,\" he continued, but almost lightly, \"which I doubt will be a problem.\" He tapped his fingers reflectively. \"Other than that, you will have plenty of freedom to pursue your own interests. In terms of material needs, I can assure you that you will want for very little.\"\n\nSo, glorified pet was the right of it. Then again, if her role was to be just as he described - and that was a large \"if,\" as she didn't trust him one bit - it didn't seem so bad. She was still terribly vexed for the circumstances of their engagement, and it'd be a while yet before she could share the same breathing air as him without all her nerves and tendons stiffening up as an automated response - but ultimately... this was endurable. Even the obligatory childbearing. No one could be that oblivious, and the only way to have avoided this, regardless of who her betrothed may be, was to have committed herself to a cloister.\n\nAlais really, really wasn't so desperate.\n\nThe King seemed poised to speak further, but they were interrupted as the creak of the door sounded.\n\nIt was a soldier who paced in, sketching a quick bow as soon as he was within view. \"Forgive me, Your Majesty, but an urgent message just came from Hampstead's Outpost, and I was told to deliver it at once.\" He held out a roll of parchment.\n\nThe King rose immediately, and she stiffened just slightly as he moved past her - towering height and all - to take the message. He unfurled it and read it over, his eyes rapidly scanning the words there, and then abruptly putting it away. \"I'm afraid I have to cut this meeting short,\" he said, his manner a little distracted. He did spare the time, however, to turn back to her, his more indulgent disposition still intact. \"Have you any other requests of me?\" He smiled faintly. \"Within reason, of course.\"\n\nIt was probably within reason to call this whole thing off and deliver her safely back to Vvaria, but he likely meant reasonable for him.\n\nHer gaze fell back down to the box nested in her hands. If she was meant to reside in this palace permanently, there were probably more than a few possessions worth requesting for - things from home. And yet, for all her simple attachments, she lacked the heart to have anything brought here, for fear of tainting that which she onced treasured. Nor could she find it within herself to ask that anyone be summoned, though there were probably at least one or two ladies (previously) in her service who might've considered the excursion something of an adventure. No, no, all out of the question.\n\nThere was one thing, the thing which immediately popped into mind after he'd posed his question. The brief delay was for her indecision on the matter, until finally, just before he might have taken her silence as an answer of its own: \"My falcon. If Your Majesty finds it within reason, I'd like to have him with me some day,\" she responded distantly. No urgency. Part of her still felt poorly for the notion of splitting Gretka and Ser Swoops-a-Lot (Ser Swoops for short) apart again; more selfishly, it'd be nice to have something to look forward to.\n\n\"Of course. I will have him sent for at once,\" he replied, managing to sound almost gallant about the whole thing. He must have sensed her hesitation in other matters, for he continued, \"And you have plenty of time to consider other requests, naturally. I look forward to hearing them.\"\n\nHe rolled up the scroll in his hands. \"I'll see you tonight.\" \n\nA passing glance was shared with his friend, but nothing spoken aloud. He made his departure, his steps echoing heavily against the floor and out the double doors.\n\nThe messenger followed him out, leaving Ethan alone sitting there with her. As Ser Bryant shifted forward, to escort her back, the Duke shook his head a little. \"A moment, if you would,\" he said, and though his manner was quite soft-spoken, apparently his word carried weight; Bryant nodded at once, and removed himself to give them privacy.\n\nA moment, was it? For what? She had every reason to remain cautious, even if Duke Ethan did seem remarkably genuine. But it also wasn't a bad thing, to entertain company who was, for the first time in a while, not the King.\n\nEthan met her gaze. \"I would like to offer you some advice.\"\n\n******\n\nAuthors: As we mentioned, Ch. 5 should be out soon if it's not out already! And if you like this series, we always appreciate your votes/favorites/comments!"
    ],
    "authorname": "lady_temily",
    "tags": [
        "medieval",
        "historical",
        "princess",
        "kidnap",
        "royalty",
        "reluctance",
        "slow",
        "nonconsent",
        "noncon",
        "non-con"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/at-his-majestys-pleasure-ch-04"
}