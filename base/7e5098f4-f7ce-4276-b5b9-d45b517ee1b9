{
    "title": "Succubus Summoning 208",
    "pages": [
        "C\u03adr\u03bcl\u0259a was and wasn't in the classroom when Phil walked in for another extra lesson. There was a young woman sitting on the teacher's desk with her legs casually swinging underneath. She was dressed in outdated fashions\u2014a twenties flapper if Phil had to guess, and he was only going from period movies he'd seen. Wide bright eyes peered out from beneath an indigo bonnet. The fringe of hair poking out from underneath was lighter blue in colour. She wore a dark blue dress cut to just above the knees and a black scarf. Also around her neck was a long string of pearls. Thinking no one was watching, the young woman pulled out a shiny metal hip flask and took a surreptitious swig.\n\n\"C\u03adr\u03bcl\u0259a?\"\n\nPhil hadn't seen C\u03adr\u03bcl\u0259a take this form before, but as the girl had sparkling red eyes and cornflower-blue hair he thought it might be her. The hair and eyes had been common features of all of C\u03adr\u03bcl\u0259a's forms.\n\n\"Oh there you are, bunny,\" C\u03adr\u03bcl\u0259a\u2014if it was her\u2014said before jumping down off the teacher's desk.\n\nTeacher looked a little worse for wear, Phil thought. He wondered how many surreptitious swigs she'd taken. C\u03adr\u03bcl\u0259a normally had half her mind in cloud cuckoo land anyway; a little alcohol in the mix wasn't likely to make much difference.\n\nHe hoped.\n\n\"I remembered you as being hunkier,\" C\u03adr\u03bcl\u0259a said, giving his bicep a cheeky squeeze.\n\n\"What's the lesson today?\" Phil asked.\n\nIdeally one that didn't end up with him being fucked by a creature dredged up from the depths of hell.\n\n\"Lessons?\" C\u03adr\u03bcl\u0259a said, her pretty face twisting up in an expression of disgust. \"Don't be a flat tire. You're taking me out to dinner.\"\n\n\"Dinner?\" This wasn't the extra tuition on the topography of hell Phil had been expecting.\n\n\"Yes, dinner. Now don't stand there like a dud. Ain't you ever taken a flap out for grubstake before?\"\n\nShe looked Phil up and down. His new robes were only moderately less tatty than his last robes.\n\n\"No, don't answer that.\"\n\nShe took his hand and marched him back out of the door.\n\n\"Where are we going to dinner?\" Phil asked.\n\nAs far as he knew, outside of the castle was Verd\u00e9's garden and beyond that the great forest. And from Phil's experience that was a place where they were more likely to be dinner than have it.\n\n\"Why Mr G's of course,\" C\u03adr\u03bcl\u0259a answered. \"Everyone knows his grub is the cat's particulars.\"\n\nPhil had no idea who Mr G was. Maybe he was the unseen cook that prepared the meals left outside Phil's door. He still hadn't seen any castle staff -- no maids, cooks, or anything like that. Someone had to be doing the work and he doubted it was the succubi.\n\nC\u03adr\u03bcl\u0259a\u2014if it was C\u03adr\u03bcl\u0259a, she was behaving even more oddly than usual\u2014led him down a couple of corridors and down a spiral staircase. Phil thought they were supposed to be going out, but instead they seemed to be heading deeper into the castle. C\u03adr\u03bcl\u0259a dragged him into a squarish room with plain stone walls and two exits.\n\nPhil recognised the room. It was some kind of storeroom. N\u00ffte had sent him down here to retrieve a particularly horrifying-looking torture device. He didn't ask her what it was for. He was just relieved she hadn't been planning to use it on him.\n\n\"Mr G makes the scrummiest grub in all of hell,\" C\u03adr\u03bcl\u0259a said.\n\nThat might be, but Phil was wondering if C\u03adr\u03bcl\u0259a had got her directions screwed up. He wondered how inebriated she was.\n\n\"Um, isn't that a cupboard,\" he said as she stopped outside a plain wooden door.\n\nHe was pretty sure it was a cupboard. Behind it were shelves full of\u2014\n\nC\u03adr\u03bcl\u0259a opened the door onto a featureless brown plain that stretched away into the distance. Yeah, he probably shouldn't be surprised by that now.\n\n\"Silly goof,\" C\u03adr\u03bcl\u0259a said. \"Of course it isn't a cupboard.\"\n\nNope. It was a door right at the heart of a big stone castle that somehow managed to open out onto a flat landscape that stretched in all directions as far as the eye could see. The floor was muddy brown in colour and resembled freshly ploughed clay. The sky was the colour of boiled ham and empty. Phil saw no clouds, nor any celestial bodies.\n\nNope. Nothing unusual about this at all, he thought.\n\n\"Where's this?\" Phil asked. He wondered if 'which universe?' might be more appropriate.\n\n\"Mr G,\" C\u03adr\u03bcl\u0259a said.\n\nShe grabbed his hand and dragged him over the threshold. It was warm on the other side. And close. It felt how Phil imagined a dense tropical swamp or jungle would feel in the mercifully cool mid-morning hours before the sun dialled it up to sweltering. The brown floor felt a little squishy beneath his shoes. It could be mud, but there was a disconcerting give to it, as though he'd stepped onto a surface of living tissue. There was a spark of yellow light on the horizon and it was towards this that C\u03adr\u03bcl\u0259a headed.\n\nBehind them the door stood alone on the flat brown plain. It was just a frame, unconnected to anything. On the far side of the door frame the brown plain rolled away towards a seemingly endless horizon. Through the doorway Phil saw the same storeroom within the succubi's castle, a room that shouldn't be there in the same way this vast featureless brown plain could not be contained within the castle walls.\n\n\"A little walk will be perfect for whetting the appetite,\" C\u03adr\u03bcl\u0259a said. She took out her hip flask and took a swig. \"As is a little bootleg.\"\n\nShe offered the flask to Phil. He took a sip and instantly regretted it as a burning liquid set fire to his tongue and throat.\n\n\"Strong,\" he hacked out between coughs. Certainly stronger and rougher than any other spirit he'd tried.\n\n\"My dinky little coffin varnish?\" C\u03adr\u03bcl\u0259a said. \"Never mind, you'll get used to it.\"\n\nThey walked across the vast plain. The yellow dot of light grew bigger and resolved into an old-fashioned street lamp decorated with curls of wrought iron. Beneath it stood a short, portly moustachioed man dressed as if he was the head waiter of a fancy French restaurant. Or maybe the parody of a head waiter of a fancy restaurant. His stance was a little queer\u2014a little too forced, a little too motionless. He resembled a caricature of a pompous French waiter, yet stood to attention as though he was one of the Queen's Guard.\n\n\"Mr G,\" C\u03adr\u03bcl\u0259a said.\n\nThe maitre d' responded with professional courtesy.\n\n\"Good evening, mademoiselle. Table for two?\"\n\n\"That's right, Mr G. A table for me and my goof here.\"\n\nShe wrapped an arm around Phil and gave him a boozy squeeze.\n\nPhil gave the portly man with the moustache a nervous smile. The waiter unnerved him. Most people in authority tended to unsettle him, but this was something else, more than just the haughty demeanour. The man gave off a vibe that intimidated Phil at a visceral level.\n\n\"Right this way, mademoiselle.\"\n\nThe waiter led them to a table that seemed more part of a stage set than a room in a restaurant. There were no walls. A door stood alone with its frame beyond the table. Some way apart from that was an antique chest of drawers. Phil also saw a hat stand and a couple of potted ferns. The furniture was positioned as if present within an invisible room. There wasn't even a carpet. Beneath their feet was more of the same glistening brown surface they'd walked on to get here.\n\nThe table itself was a massive antique. It was long and rectangular and looked like a prop from a period drama\u2014a dining table for wealthy families to entertain equally wealthy guests. Giggling, C\u03adr\u03bcl\u0259a took a seat at one end while Phil took a seat at the other end.\n\nThis was surreal, Phil thought as he looked around. They were completely exposed to the elements, assuming this plane had any.\n\n\"What would be your pleasure, mademoiselle?\"\n\nC\u03adr\u03bcl\u0259a batted her eyelids with a vulgarity that was out of keeping with their surroundings.\n\n\"Why the usual, please Mr G.\"\n\n\"As you wish, mademoiselle.\"\n\nThe portly waiter opened the entirely superfluous door and walked through.\n\nPhil had no idea what the usual was. As usual no-one had told him what it was or even if he wanted it. C\u03adr\u03bcl\u0259a smiled at him from the other side of the table and put her thumb and forefinger together to give him the A-ok.\n\n\"Mr G's is the bee's knees,\" she said.\n\nMr G's restaurant seemed to be lacking in some essentials, like walls and a roof for starters, Phil thought. There was something not right about that waiter either. He couldn't put his finger on it, but it made his skin crawl to look at him.\n\nThe waiter returned with a gleaming silver trolley loaded with dishes. So many dishes. This looked an awful lot of food for two people, Phil thought. Were others coming later? Rosa? Verd\u00e9? C\u03adr\u03bcl\u0259a hadn't said anything about the others, but this form of hers did seem a little more scatterbrained than usual.\n\nShe took another not-quite-so surreptitious swig from her hip flask.\n\nThe waiter started placing dishes on the table and immediately Phil's mouth started to water as the air filled with delicious aromas. It was all of Phil's favourite foods. The waiter lit burners on the table and placed a variety of bubbling Indian dishes\u2014succulent chunks of meat surrounded in various mouth-watering sauces\u2014on them. In front of that he placed a plate piled high with naan breads, their surfaces shiny with a thin glaze of butter. He followed with not one but three separate bowls of rice\u2014creamy boiled rice, spicy yellow pilau rice, and fried rice containing egg and herbs.\n\nThis wasn't all. The waiter placed another burner onto the table and this time placed Chinese dishes onto it. Phil saw orange chicken, strips of tender beef in black bean sauce, and pork and cashew nuts. As the waiter continued to add more dishes to the table it looked as though someone had ordered the entire menus of the best Indian and Chinese restaurants in Britain. Phil didn't know where to start.\n\nAnd still the waiter hadn't finished. He trundled the silver trolley back through the door only to return moments later laden with fresh steaming plates. He placed a huge platter piled high with succulent sausages, crisp bacon and fried eggs onto the table. This was followed with another plate piled high with cheeseburgers that looked even tastier than the misleading pictures fast food restaurants used to entice customers.\n\n\"This is too much,\" Phil said. \"We'll never be able to eat all of it.\"\n\n\"Shh,\" C\u03adr\u03bcl\u0259a said. \"You'll hurt Mr G's feelings. He's very sensitive about his cooking.\"\n\nThe waiter returned and placed a third load of dishes\u2014roast duck, roast chicken, spare ribs coated in glistening barbeque sauce\u2014onto the table. Phil gave the man a weak smile. What was he going to do when they left most of this delicious-but-way-too-much food\u2014fly into a berserk rage?\n\nC\u03adr\u03bcl\u0259a picked one of the dishes and placed a tiny spoonful at the centre of her pristine white plate.\n\n\"What?\" she said, noticing Phil's incredulous stare. \"A flap's gotta watch her weight.\"\n\nPhil could see C\u03adr\u03bcl\u0259a wasn't going to be much help with this. At least the waiter had stopped bringing in more dishes. Phil wasn't sure if that was because he was out of food or because there was no more space left on the table. His mouth watered as he looked over the appetising feast. It all looked delicious and yet he'd only be able to sample less than a fifth of it, if that.\n\nAnd then the waiter would probably batter them to death in a blind fit of rage.  He started by tearing off a small chunk of naan bread and scooping up a chunk of meat and sauce. Wow, that was the best chicken madras he'd ever tasted. The meat was so tender it practically melted in his mouth and the sauce was the perfect blend of aromatic flavours and hot spice. It was so tasty Phil was tempted to eat only the madras. Then he tried a mouthful of beef in black bean sauce and thought it was just as good. The Singapore noodles were the same. And the succulent sausages that burst between his teeth with strong savoury flavour. It didn't matter which dish Phil sampled, it was the best version of that dish he'd ever tasted.\n\n\"Mr G is just the best, isn't he,\" C\u03adr\u03bcl\u0259a said.\n\nPhil nodded. That was all he could manage as his mouth was currently full and savouring another delicious morsel. He saw C\u03adr\u03bcl\u0259a still had that same tiny portion of food sitting in the centre of her plate. She'd barely touched it.\n\nThen he noticed that some of the plates on her side of the table had been emptied. A roast chicken had been picked clean. A whole rack of lamb had been reduced to bone and gristle. Who'd eaten them? Phil thought.\n\nHe took a mouthful of tangy orange chicken and when he looked up he saw two more dishes on C\u03adr\u03bcl\u0259a's side of the table had been demolished. C\u03adr\u03bcl\u0259a herself was still playing with the tiny portion on her plate.\n\nPhil glanced away to look for a new dish to sample. As he did he caught a blur of blue movement in the corner of his eye. It must have been a mirage as when he looked back C\u03adr\u03bcl\u0259a was still sitting in her seat and nudging her little blob of food around her plate. Then he noticed a bowl that had been full of jambalaya a few moments ago was now empty aside from a couple of grains of rice. And while he looked at that bowl an entire 18oz steak vanished. C\u03adr\u03bcl\u0259a continued to push her tiny morsel of food around her plate as if nothing untoward was happening at all.\n\n\"Hey, it's rude to stare at a gal while she's eating.\"\n\nC\u03adr\u03bcl\u0259a flung an olive at Phil. It pinged off his temple and while he reflexively closed his eyes another dish was completely devoured.\n\nJust another day of weirdness in the succubi's universe, Phil thought. He ignored it and sampled as many dishes as his stomach would allow. C\u03adr\u03bcl\u0259a continued to push her miniscule portion of food around her plate.\n\n\"Hmm, that was scrummy,\" C\u03adr\u03bcl\u0259a said after finally scooping up her meagre portion and putting it into her mouth.\n\nPhil looked around and his eyes widened. The food was gone. All of it. Every dish was empty. It had all been eaten. But how? There'd been enough food to fill two entire rugby teams, and probably their wives and children as well.\n\nC\u03adr\u03bcl\u0259a let out a hearty belch, and then put a hand to her mouth as she blushed with embarrassment.\n\n\"Was it to mademoiselle's liking?\"\n\n\"Scrumptious, as always,\" C\u03adr\u03bcl\u0259a said.\n\n\"Thank you, it was delicious,\" Phil added. \"The best I've ever tasted.\"\n\nThe moustachioed waiter turned to Phil as if noticing him for the first time.\n\n\"Why thank you, young master,\" he said. His haughty demeanour thawed. \"Your compliment brings a warm glow to my belly.\"\n\nHe even rubbed the large expanse of his stomach for emphasis.\n\n\"I'm ready for dessert,\" C\u03adr\u03bcl\u0259a said. \"How about you, darling?\"\n\nPhil stared at her incredulously. He'd already eaten so much it felt like a heavy bowling ball was lying in his guts. If he tried to take another mouthful he feared he'd burst open like that character in the old Monty Python film. Phil was sure he couldn't eat another mouthful, but he remembered what C\u03adr\u03bcl\u0259a had said about Mr G and he didn't want to offend him.\n\n\"I suppose so,\" he lied.\n\nC\u03adr\u03bcl\u0259a put a finger to her lips in thought. \"I don't suppose there's time for a giant bowl of jello,\" she asked the waiter. \"That's always a blast.\"\n\nThe waiter checked an antique pocket watch. He rubbed his other hand against his expansive belly. \"I fear that would be cutting things perilously fine,\" he said.\n\n\"A pity,\" C\u03adr\u03bcl\u0259a said. \"Then I suppose it would have been a little too similar to our last lot of fun and we can't have that or our readers will get bored.\"\n\n\"Indeed, mademoiselle,\" the waiter said. \"Variety is the most important flavour of all.\"\n\n\"True, G, very true.\"\n\n\"If mademoiselle would permit me to make a suggestion,\" the waiter said. \"How about a deluxe selection of chocolate and cream?\"\n\n\"Ooo yes. Scrummy chocolate. It's like you read my mind, G. But no honey, we've had quite enough of that already.\"\n\n\"As you wish, mademoiselle,\" the waiter said. He loaded the trolley up with empty plates and took them away through the superfluous door.\n\n\"Mmm. Chocolate and cream. How dreamy,\" C\u03adr\u03bcl\u0259a said.\n\nPhil leaned across the table to whisper. \"I don't think I can eat any more.\"\n\nC\u03adr\u03bcl\u0259a ignored him. Her eyes were focused far away and she licked her tongue against her lips as if already savouring a delectable dessert.\n\n\"Will he\u2014\"\n\nPhil paused as the waiter returned with a trolley piled high with an exotic range of desserts. Phil had never been much of a pudding person. He didn't even recognise most of the elaborate confections of fruit, chocolate and fluffy cream the waiter placed onto the table. His eyes widened at a cavalcade of delights fit for a decadent feast. His mouth longed to taste all of them. His stomach\u2014already stuffed to capacity\u2014growled no.\n\n\"He's not going to take offense if we leave most of it?\" Phil hissed to C\u03adr\u03bcl\u0259a after the waiter had pushed the trolley back through the door.\n\nC\u03adr\u03bcl\u0259a didn't answer. She dipped a finger into a swirling melange of coloured ice creams and sucked on it suggestively.\n\nSuggestive was also a word that could be applied to the cake the waiter wheeled out last, although blatant might have been more appropriate. The cake was so gigantic the silver trolley teetered under its weight. The surface was decorated with a magnificent swirl of pink icing . . . in the shape of a vagina.\n\nPhil gave the vaguely intimidating waiter a smile while wondering how he was going to eat any of it without throwing it straight back up. Under the waiter's watchful gaze he scooped up a spoonful of frosted sorbet and dolloped it into his bowl. He could manage this. Maybe. It was just frozen fruit juice after all. Under direction from his stomach, the muscles of his throat downed tools and picketed his oesophagus. The waiter stood by the door and watched Phil as he pushed a melting blob of sorbet around his bowl.\n\n\"I don't think I can eat any more,\" Phil whispered across the table to C\u03adr\u03bcl\u0259a.\n\n\"Who said we were eating dessert,\" C\u03adr\u03bcl\u0259a said.\n\nShe took her clothes off and climbed up onto the table. Compared to the other succubi\u2014and C\u03adr\u03bcl\u0259a's other adult form\u2014this incarnation of C\u03adr\u03bcl\u0259a had a more normally-proportioned body. Her breasts were small and perky, and she was skinnier\u2014more a sexy waif than a curvaceous glamour pin-up.\n\nAn extremely sexy waif. What she had she made full use of as she performed an erotic burlesque routine on top of the table that mostly involved pouring molten chocolate down her naked front. She followed up with a pitcher of whipped cream. She danced wantonly, pouring more cream directly onto her sex as she thrust her pelvis forwards. Her naked feet came down on top of exotic pastries, squirting fresh cream onto the table.\n\nPhil kept glancing over at the waiter, wondering what he made of all this wanton vandalism. The waiter remained impassive, even when C\u03adr\u03bcl\u0259a slipped and fell right into the enormous cake. Giggling hysterically, she sat amongst the ruin of sponge, icing and cream.\n\n\"Don't sit there like a lemon,\" she called out to Phil. \"Help a gal up.\"\n\nIt was an obvious trick and Phil cursed himself for being sucker enough to fall for it. He climbed up onto the table and offered C\u03adr\u03bcl\u0259a his hand. She yanked down, pulling him off balance. Phil's back foot slipped on a blob of cream and toppled over onto C\u03adr\u03bcl\u0259a amidst the wreckage of the cake. She put a hand behind his head and pulled him down until their lips met in a kiss. Phil tasted mint cream on her lips and strong liqueur. He would have enjoyed it more had he not been terrified of the waiter's reaction, especially as they'd just completely demolished his fancy cake without so much as taking a bite out of it.\n\nPhil was able to pull his head up enough to determine the waiter wasn't currently advancing on them with murderous rage. Instead the portly man seemed completely unconcerned by the mess C\u03adr\u03bcl\u0259a had made of the table.",
        "Phil heard a gurgling rumble. The waiter said, \"Pardon moi,\" to no-one in particular and rubbed his expansive girth.\n\nGreat, Phil thought. The bloke was hungry and they were currently in the process of demolishing all the food on the table.\n\nC\u03adr\u03bcl\u0259a grabbed his chin and twisted his face until his attention was solely back on her.\n\n\"Gee, you're a wet fish tonight,\" she said. \"What's a gal got to do to turn your gas on?\"\n\nShe reached between his robes and took hold of his cock. She encircled his shaft with a hand lubricated with dripping whipped cream and stroked up and down.\n\nHe really needed to get hold of some underwear, Phil thought. Didn't Wargsnouts have a laundry? Maybe he could steal himself a pair of underpants.\n\nC\u03adr\u03bcl\u0259a rubbed her crotch against Phil's lengthening erection.\n\n\"We can't do it here,\" he hissed.\n\nHe gave the impassive waiter an apologetic glance.\n\n\"Don't mind Mr G,\" C\u03adr\u03bcl\u0259a said. She planted sticky kisses on his cheeks, jaw and throat. \"He only cares about food.\"\n\nAfter another heavy session of smooching Phil managed to escape and get back up to his knees.\n\n\"Isn't he going to be mad we're not ea\u2014\"\n\nPhil didn't get a chance to finish as C\u03adr\u03bcl\u0259a scooped up a handful of cake and shoved it into his mouth.\n\n\"Problem solved. Now you're eating,\" she said and then giggled.\n\nA gooey confection of sugars and cream melted on Phil's tongue. It did more than melt; it crackled with effervescence, like an explosion of flavours was detonating on his palate. This was the best cake Phil had ever tasted in his life. So moist, so scrumptious, so\u2014\n\nC\u03adr\u03bcl\u0259a grabbed the back of Phil's knee and yanked. He fell over backwards and his head crashed through a big flan. C\u03adr\u03bcl\u0259a, her naked body splattered with various foodstuffs, clambered on top of him. The rounded swell of her ass was covered in gobbets of mashed cake. They squelched against Phil's face as she sat on him. It was like getting a cream pie in the face, but delivered by ass cheeks instead of a hand. C\u03adr\u03bcl\u0259a grabbed his penis and jerked up and down.\n\nFor a horrible moment Phil thought he might drown in deluxe cake and ass. Thankfully, C\u03adr\u03bcl\u0259a shifted position to sit on his chest instead. Phil coughed out chunks of sweet cake. His mouth was sorry to let the wonderful flavours go, but his lungs were grateful for the air.\n\nC\u03adr\u03bcl\u0259a picked up an enormous linen bag of icing sugar. She squeezed the bag and pinkish-white froth squirted from the nozzle. She scooped up a blob on her finger and tasted it.\n\n\"Mmm,\" she purred. \"You remembered the special ingredient.\"\n\n\"Extract of gooulb gland from a silren'gulba carefully blended with floompfthis pollen to maximise their aphrodisiac properties,\" the waiter said.\n\n\"Brilliant, Mr G,\" C\u03adr\u03bcl\u0259a said.\n\nC\u03adr\u03bcl\u0259a was heavier than her waif-like appearance suggested. Sitting on his chest she kept him pinned to the table. She leaned over his groin and moved the icing bag in a circle, squeezing out a thick coil of soft cream around Phil's cock. The frothy substance fizzed pleasantly when it came into contact with Phil's naked skin. His cock grew warm and the same warm sensation travelled down into his balls. For a moment Phil forgot the presence of the waiter as a wave of hormones washed over him.\n\nC\u03adr\u03bcl\u0259a made a big fat spiral around Phil's cock and then topped it off with a large dollop that melted around the outside of Phil's glans. She paused to admire her handiwork.\n\n\"Whatcha think, Mr G?\" she asked.\n\n\"Looks most palatable,\" the emotionless waiter replied.\n\nC\u03adr\u03bcl\u0259a bent over until her nipples were rubbing against Phil's belly. Slowly, deliberately\u2014savouring each tongueful\u2014she started to lick the cream off Phil's penis.\n\nThat wave of hormones intensified into a pink fog smothering all of Phil's thoughts. C\u03adr\u03bcl\u0259a wiggled her ass and pushed it back up against Phil's face. Heedless of who might be watching, Phil started to lick the frosted clumps of cake from C\u03adr\u03bcl\u0259a's ass cheeks. His tongue slithered down the groove of her vagina, savouring the taste of sugar and cream mixed with C\u03adr\u03bcl\u0259a's juices. Lost in a sweet haze he lapped his tongue back and forth while C\u03adr\u03bcl\u0259a attended to his erection with the same detail.\n\nDimly he heard another gurgling rumble, as if the waiter's stomach was grumbling again. Strangely it seemed to be coming from beneath, the vibrations travelling up through the table legs.\n\nThen C\u03adr\u03bcl\u0259a started sucking on his cock and the strange rumbling sounds slipped from his mind. Her warm mouth closed over his glans, first smooshing the cream into his sensitive skin and then sucking it off him.\n\nSmoosh. Suck. Phil's hips trembled. He felt an orgasm rise within him.\n\nSmoosh. Suck. Phil's resistance broke and he spurted his own cream up into the mix. C\u03adr\u03bcl\u0259a sucked that up as well, savouring each drop.\n\nShe sat up and wiped the back of her hand against her lips.\n\n\"That was one scrummy dessert,\" she said.\n\nThe ejaculation allowed Phil to recover some of his senses. He realised where he was and what he'd been doing. His cheeks reddened. He gave the waiter an apologetic glance. \"I'm really sorry about this,\" he said.\n\nThe waiter's impassive mask finally slipped and his mouth turned up in a wry smile of understanding.\n\n\"This stuff is so dreamy one serving is never enough.\" C\u03adr\u03bcl\u0259a looked thoughtfully at the still-plump bag of icing. \"I wonder . . .\"\n\nShe sat with her legs apart and squirted pinkish-white cream in a spiral around her pussy. She inserted the nozzle between her fleshy labia and squeezed the bag until pink-white goop was overflowing out of her pussy. She closed her eyes, her body shuddered and she gave a long erotic sigh.\n\n\"Oh Mr G, you are a true master,\" she said after the tremors running through her body died down.\n\nThe waiter's grin grew broader.\n\n\"I wouldn't have been able to perfect the recipe without your assistance,\" the waiter said.\n\n\"All it needs now is a little extra seasoning,\" C\u03adr\u03bcl\u0259a said. She glanced at Phil's prone form.\n\nUh oh.  The waiter's smile changed to a frown as his stomach gave another loud rumbling gurgle.\n\n\"Time grows short,\" he warned.\n\n\"It's hunky-dory, Mr G,\" C\u03adr\u03bcl\u0259a said. \"We've got plenty of time.\"\n\nShe grabbed Phil's ankles and dragged him towards her. She gave his still-hard erection a flick.\n\n\"Extract of silren'gulba gooulb gland,\" she said. \"Works wonders on droopy male libido.\"\n\nShe hopped astride Phil and lowered her body down onto his cock. He plunged upwards into a vagina full of creamy froth. It bubbled out over him like hot mud at a geyser. The sensation was just as before, but magnified this time as it was the whole of C\u03adr\u03bcl\u0259a's tight pussy rubbing the creamy froth into his erection. Once again a warm sensation flowed down into his balls and pulsed until his thoughts were subsumed within a thick pink fog.\n\nC\u03adr\u03bcl\u0259a bounced lithely in his lap and molten foodstuffs squelched between them as their bodies came together. Little blue devil wings emerged from C\u03adr\u03bcl\u0259a's back and quivered in ecstasy. She closed her eyes and gave out little sighs as she rose up and down. They increased in frequency and loudness until she hit climax. Her pussy completely enveloped Phil's cock and sucked the sugary cream off him in soft tickling waves. Sucked and sucked until the sensation became too much and Phil erupted inside her. At the same time C\u03adr\u03bcl\u0259a gave an orgasmic cry and squeezed the icing bag in her hand hard enough to squirt a jet of pink-white cream into the air.\n\nPhil fell back, spent, in the ruins of the cake. C\u03adr\u03bcl\u0259a didn't seem done quite yet. She dismounted and looked around her with bright red eyes. Glancing down, Phil saw the succubus's vagina had sucked his cock completely clean. Not a trace of icing remained on it.\n\n\"Hmm, what to try now,\" C\u03adr\u03bcl\u0259a said.\n\n\"Mademoiselle!\" the waiter warned. Much louder this time.\n\nThe rumble of his stomach was also louder. So loud it sounded like an earthquake.\n\nIt was an earthquake! Phil even felt the tremors vibrating through the table legs. It jolted him from his comfortable post-coital glow. The ground was shaking. That rumble he'd thought was the waiter's stomach was coming from all around them.\n\nC\u03adr\u03bcl\u0259a didn't seem to have noticed. She flitted from dessert to dessert like a sugar-crazed hummingbird.\n\nPhil swung his legs over the side of the table and stood up. What was that out in the distance? There was some kind of commotion on the horizon.\n\n\"C\u03adr\u03bcl\u0259a, I think we should leave,\" he said.\n\nAn ominous feeling of dread was growing in his gut as fast as the commotion on the horizon was drawing closer.\n\nHe looked to the waiter for guidance. The man was staring mournfully at his rumbling belly.\n\nPhil glanced back at the horizon. The thing on the horizon was moving up and down in a sinuous wave like a line of serpents. It was also big. Very big. And moving towards them extremely quickly.\n\n\"I would advise haste, young master,\" Mr G said. \"My hunger is terrible and swift when aroused.\"\n\n\"C\u03adr\u03bcl\u0259a!\" Phil said.\n\n\"Hey don't rush a gal when she's trying to get her knickers back on,\" C\u03adr\u03bcl\u0259a complained.\n\nShe glanced over her shoulder. Her eyes widened. The sinuous something had resolved into a line of monstrous worms fused together at the sides. They chomped through the terrain in a vast masticating wave. C\u03adr\u03bcl\u0259a jumped off the table and grabbed Phil's hand and started running back towards the exit.\n\n\"Thanks, G,\" she said. \"Until next time.\"\n\n\"Thanks for the meal,\" Phil said to Mr G.\n\n\"A pleasure,\" Mr G said. He glanced to the horizon. \"But I would really advise running at this point.\"\n\nPhil saw the doorway back to the succubi's castle off in the distance. It looked a long way away. Hand in hand, Phil and C\u03adr\u03bcl\u0259a sprinted across the spongy brown ground. The soft organic feel of the surface made Phil think about things he didn't want to think about at this precise moment. Neither did he want to contemplate why the whole floor was shaking and convulsing.\n\nHe glanced over his shoulder and wished he hadn't. A wall of mouths\u2014each filled with gnashing, plate-like teeth\u2014rose up behind them. Drool ran from cavernous maws in rivers of slime as teeth the size of cars clicked together. The vast, multi-headed wave was gaining on them. Phil put his head down and ran faster.\n\nThe door was close now. Only a few metres. Phil daren't look behind him. Already he felt blasts of hot breath at his back. The exhalations carried the putrid odours of meat gone bad.\n\nC\u03adr\u03bcl\u0259a reached the door first. A gigantic black shadow fell over Phil and instinctively he dived through the open door. He hit the stone floor of the storage room and skidded into a wall. There was a loud thud behind him. It sounded like a herd of dinosaurs had crashed into the doorway. He turned and saw the doorway bulging as if it was an image projected onto elastic. A cavernous, roaring red maw gaped open on the other side. Thankfully the wall separating the two dimensions rebounded and the distortion went away. The straight lines of the doorway were once again straight lines. On the other side of the doorway two rows of enormous teeth came together with a loud click.\n\nFuck, that was close, Phil thought.\n\nAnd not over.\n\nThe vast mouth opened and a long tongue, muscular like a tentacle, slithered through the doorway and wrapped around Phil's ankle.\n\nOh shit.\n\nHe scrabbled furiously and was able to get his arms around the post of a shelving unit as the tongue tightened its grip on his ankle and started to tug him back towards the door. Rather than help him C\u03adr\u03bcl\u0259a fell about laughing in the corner.\n\nNurse Honey stepped between Phil and the door and jabbed the tongue with a small trident. The appendage released Phil and slithered back down the cavernous red tunnel. White teeth closed behind it with a porcelain clink.\n\nThe blonde succubus was wearing a different costume to her usual latex nurse outfit. She was still wearing tight rubber, but this was deep red in colour. It hugged her curves like a second skin and was cut low enough to show off most of her substantial cleavage.\n\nNurse Honey looked over to where C\u03adr\u03bcl\u0259a was giggling away in the corner and tsked. \"That form,\" she said.\n\nThe white teeth opened like horizontal curtains, revealing the portly waiter. He stood at the entrance to an endless red gullet.\n\n\"My sincerest apologies.\" He bowed to Nurse Honey. \"Please forgive my intrusion. This hunger . . . it is difficult to contain sometimes.\"\n\n\"Forgiven,\" Nurse Honey said. \"No harm done and I'm guessing\u2014\" She shot a glance over to the giggling C\u03adr\u03bcl\u0259a \"\u2014some provocation was involved.\"\n\nThe waiter turned his attentions to Phil. \"It was a pleasure to meet you, young master,\" he said. \"Please do come back any time.\"\n\nHe gave Phil a little bow. Then he disappeared from view as giant white teeth clicked together in front of him to form an impenetrable ivory wall.\n\n\"Later, G,\" Nurse Honey said as she walked over and shut the door.\n\nPhil understood then why she was carrying the trident. The red figure-hugging rubber was part of a cheap and tacky fancy dress costume\u2014some kind of devil girl. She was even wearing a pair of fake plastic horns.\n\nShe caught Phil's look of surprise. \"Stag party in Tallinn,\" she explained.\n\nA tiny hand and face pushed up against the rubber covering her hip.\n\n\"The bride will grieve, but ultimately she's better off,\" she said.\n\n* * * *\n\n\"He's through here,\" Darvill said, looking at the strange contraption in his hand and then at the bathroom door. \"But a long way off.\"\n\nThe four students stood in Phil's room at Wargsnouts.\n\n\"There is some serious fucking enchantment on that door,\" Higgins said.\n\n\"It's a portal to hell,\" Darvill said. \"Probably the Second Circle of Lust. The signal from Gary's soul is coming from there.\"\n\n\"Then we're fucked,\" Jack Stone said. \"We're the best students of The Scrote's advanced classes, but we're still students. They don't take students into hell until at least their seventh year.\"\n\nDarvill brought out another contraption\u2014this time something that resembled a large magnifying glass with a heavy, baroque frame\u2014and examined the strange object on the wall next to the door.\n\n\"We could wait here,\" Joey Chalk suggested. \"Ambush the bastard when he comes back through.\"\n\nHis daemon, a squat goblin thing with tusks, banged a fist into its palm for emphasis.\n\nDarvill shook his head. \"We don't have time. The succubi might not come back through until they've finished draining him to death. We have to go in and pull him out.\"\n\nThe other three students were less than enthused by the prospect.\n\n\"I'm going through,\" Darvill said. \"I'm not holding any of you under any obligation to follow, but I'm not going to lie\u2014I'd really appreciate the help.\"\n\nThe others looked at each other.\n\n\"Let's fucking do it!\" Chalk said.\n\nThey opened the door.\n\nto be continued . . . "
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "demon",
        "succubus",
        "food",
        "blowjob",
        "messy",
        "magic",
        "hell"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-208"
}