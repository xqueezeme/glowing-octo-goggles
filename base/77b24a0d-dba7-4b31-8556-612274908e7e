{
    "title": "Buried Treasure Ch. 56-60",
    "pages": [
        "Jesus Correria's POV \n\nNear US-Mexico Border, East of Nogales \n\nThe Chapter Presidents had been trickling into the parking area of the National Forest that we used as our meeting place all day. I sat on a picnic table, eating a burrito I picked up before leaving Nogales, as Manuel tore into his bag of fish tacos. The Denver President was last to arrive, Pedro driving into the lot in a Prius. \"Really? A fucking Prius,\" I yelled as he got out. \n\n\"Nobody is going to look for a biker club President in a Prius,\" he said. \"Plus it gets fifty miles a gallon.\" \n\n\"You smell like a hipster,\" my father said. \"You getting a man-bun and a murse next?\" \n\nSome of the others laughed. \"Very funny, let's spend more time figuring out how to end this shitshow instead of busting on my ride.\" \n\n\"We found the mole,\" Alejandro said; he was President of the Bay Area chapter, and had the most to lose with this visit with the Cartel. It was his Chapter that lost the shipment. \"My Vice President gave us up; the warrant names him as their informant, and the DEA let him go after the raid. We picked him up as he was trying to run with his family. He's been moved to a quiet place until I get back.\" \n\n\"Why would they let him go,\" I said. \"It's too easy. If they have a cooperating witness, he and his family would be in protective custody. They had to know we'd kill him.\" \n\nManuel spoke up. \"Unless they want us to take him. They know we won't kill him until we know everything.\" \n\n\"FUCK,\" Alejandro said. \"They know they didn't capture the leadership, so they're using him as bait! I've got to warn them.\" \n\n\"We'll get word to your Master at Arms in a few minutes,\" I said. \"The Brotherhood is as much of a problem as the Feds. You heard on the news that they found the tunnel from my Clubhouse to the building two blocks away?\" Heads nodded. \"What they didn't say is that they found anything but dead bodies there. That was our money drop, a shipment was supposed to go out this morning. If the Feds had it, they would be posing with the money on the news right now. No, the Steel Brotherhood is behind this. They worked with the Feds to set up the raids, then took the money for themselves.\" \n\n\"Bastards,\" one of the men said. \"Do we know who?\" \n\n\"Manilo met a Nomad member at the memorial service, a guy named Chase Nygaard and his wife, Rori King. He asked for background checks because they are both werewolves.\" \n\n\"Wait, the Brotherhood has Packs working with them?\" The Houston President looked shocked; we had no werewolf Packs in our territories, except the ones in the Rocky Mountains. \n\n\"At least one. I don't know what Manilo found out before he died, but we had four panthers disappear after going up to Minnesota to find Harleigh Ryder. Manilo was convinced the Pack had taken her up there, we don't know why. I sent a dozen men up there; he's got a young wife and infant children. If they don't kill them all, they'll take his family, and we'll use that to get Harleigh and the money.\" \n\n\"A dozen isn't much against a Pack,\" the Denver President said. \n\n\"It's what I had to send, and I couldn't risk calling you guys.\" \n\n\"We all have people hiding out, they may as well go to Minnesota and help out,\" the Dallas President said. \"It's a twenty-plus hour drive for us, but we're closer. The boys could use a diversion.\" \n\n\"Well said, we'll get the word to all the Chapters,\" Manuel said as everyone gathered around. They figured out a place to meet, a hotel in Duluth, and a contact number. \"Let me get Oracle on the line.\" Our Club had emergency procedures in case the cops tried what they did this morning. Every Club officer had an escape plan, including an identity, transportation, and housing. We knew the Cops could hit the Clubhouses, so they were kept clean or able to be sanitized quickly. For my chapter, we had laptops and the tunnels. The cops could search all day and not find anything that could hurt us. \n\nAll of us had left our Chapters after the Oakland raid, and were on the road when the Clubhouse raids went public. I'd listened to the news as I drove through the desert; I was angry at the number of dead, but no senior people were listed. The Attorney General's press conference told us they were using RICO statutes to go after my Club. The attacks in Florida and the drug smuggling were the two crimes they needed to invoke the charges. \n\nThe humans in the club were expendable; they always had been. They were the muscle we needed. The heart of the Club was around me, all Panthers, all family. \n\nManuel finished dialing the Oracle. No one knew who she was or where she was; each Chapter was given one phone number to use in an emergency, and only called it from a phone not traceable to the Club. You would call in with your status and needs, and a number you could be reached. The Oracle was the link between the people, gathering the information and passing it back when directed. It was slow, but secure. A woman picked up. \"Identification code?\" \n\n\"Jaguar One Five Two Delta.\" \n\n\"Voice match. How may I help you, sir?\" \n\n\"Summary status.\" \n\n\"All units have checked in from alternate locations. Primary locations are all under hostile control.\" \n\n\"Rat status?\" \n\n\"They brought in outside teams, and the locals we owned are compromised. Frank Grimes was the source and ran the Oakland and Los Angeles raids. Raids on the Chapters were due to bank transfers linking them to the operation.\" \n\n\"Anything else?\" \n\n\"No.\" He gave her a message to pass to the chapters about helping up in Minnesota, and warn the Bay Area chapter, then gave her a contact number for another phone. When he hung up, he crushed the phone in his hand and tossed it in the trash can. \"BY THE GODDESS I WILL HAVE THEIR BLOOD IN MY TEETH,\" Manuel yelled to the darkening sky. \n\n\"Grimes?\" \n\n\"Yes, and Nygaard.\" He looked at the sun setting over the mountains. \"Time to go, boys. We need to get across the border fence.\" \n\nMost of the border included a tall fence with a patrol road, but the terrain was too rugged in some areas for the fence to go through. We shifted and made our way along the ridgeline, single file, clothes and our stuff in small bags hanging around our necks. The Border Patrol used drones and cameras on the areas the fence couldn't cover. When we got to the border, we went across singly or in pairs, moving quickly along the rocks and scattered trees. It was almost four in the morning before we arrived at the meeting house in the mountains northwest of Santa Cruz. \n\nWe shifted and pulled our clothes on, then walked to the gate of the estate. The adobe structure was large and well-protected, armed men on patrol on the fences and top of the house. The guards, all Cartel gunmen, searched us before letting us in. We were fed and given rooms to sleep; the housekeepers would wake us before the Cartel heads arrived. \n\nI showered and slept, waking just after eleven. My clothes had been laundered and were folded neatly in the hall outside my room. I walked next door where my father was getting ready. \"How are we going to play this?\" \n\n\"It's a setback, but we are handling it. The Club might be taken away, but we will rebuild the organization and continue on as usual. As long as we have our contacts, we will be all right.\" \n\n\"I'm nervous, Pops. We shouldn't be away from our Chapters when we are in a crisis like this.\" \n\nHe patted my shoulder. \"The men are pawns, they won't tell them anything. It is a smart move for the Cartel to move us all here until things settle down. Now that we are here, we can move up our plans,\" he said as he sat down. He expanded the link to all the other Presidents. \"After today, we will no longer dance to the tune of the human Cartel masters. It is time our people move beyond Clubs and into true money and power. The three top men in the Sinaloa cartel will be meeting with us today. Our family in Mexico is waiting for the signal to move on Cartel captains and lieutenants across the country. Play it cool, do not rise to the bait or the taunts. When I kill Juan, shift and kill everyone else. Before we leave this house, we WILL be the Cartel.\" \n\nThey wouldn't know what hit them. \n\nPresident Manuel's POV \n\nMeeting Room \n\nI was sitting at the center, my son to my right and the other Chapter Presidents filling our side of the long conference table. I heard a helicopter land outside, but we stayed seated. Armed Cartel men stood in the corners and along the wall; I smiled at their ease. They thought because they were the ones with the guns, they were safe, but our jaguars would tear them apart in seconds. It wasn't long before the door opened and Juan Jose Esparragoza Moreno came in, flanked by his two top assistants. I bit back my disgust for this man, smiling and opening my arms as he came around to greet me. \"Manuel, welcome to my home,\" he said as we embraced. \"Maria, Tequila!! We toast our friends.\" \n\nHe and his men moved to the other side of the table as the maids brought in trays of tequila glasses and two fancy bottles. They passed out the glasses as Juan showed us the bottle. \"Clase Azul Tequila Ultra, two thousand dollars a bottle,\" he said as he opened one up. He poured a glass and passed it to his left, while his son opened the other and passed the bottle to his right. \n\nWe all poured a full glass, and I set the bottles back on the table between us. I took my drink and held it up. \"To the Sinaloa Cartel, may our enemies fear us and our customers pay us,\" I said with a smile. We drank it down and slammed the glasses back on the table; the tequila burned, and my eyes started to water. I could feel my lips going numb, and I sat down in my chair as my legs started to shake. \"What did you do,\" I said. \n\n\"I'm taking care of business,\" he said. His men moved forward, handcuffing us to the chairs as we struggled to take control of our bodies. \"You and your men were sloppy and unprofessional. Your son allowed his vendetta to harm my business, and you stirred up a hornet's nest with law enforcement. My people compromised, people working for me in law enforcement arrested, and my drugs seized. You've cost me millions, and destroyed intelligence assets that took decades to develop.\" \n\nI struggled, but my body didn't want to play. \"How?\" \n\n\"The glasses contained a poison called Tetrodotoxin. It is extracted from pufferfish and is going to give you a prolonged and painful death. The burn on your lips and the excess saliva is the start; soon there will be seizures, and death in a few hours as your body shuts down. You and your men are all dead; nothing can stop that now. You may only bargain for the lives of your families now.\" \n\nI looked at my men; they were struggling as I was. The neurotoxin was naturally deadly to large animals, and our Jaguar side couldn't fight it any more than our human side. \"What do you want?\" \n\n\"I want my money,\" he said. \"My sources tell me gunmen hit your Los Angeles warehouse, not the Police, and your shipment of cash is gone. The drugs I shipped to you in Oakland are gone. You owe me twenty million dollars, Manuel. Pay me what you owe, and I won't kill your families.\" \n\nI linked with the others; we'd seen our fortunes change quickly. As long as our families lived, we would see our revenge on the men who had killed us. The offshore accounts would be lost to our family; my son was the only other person who had the codes. \"I'll need a computer.\" \n\nManuel snapped his fingers, and a laptop was brought over. I was in handcuffs, but I had the information memorized, and one of his men logged in to my account. My eyes got wide when I saw the balance. \"THE FUCK,\" I said as I looked at the emptied account. \n\nIt had less than twenty dollars in it, and the account was frozen. My money was gone, my cash was gone, my drugs were gone, and my Club was gone. \n\n\"I guess that answers the family question,\" Juan said. \"Take the men and throw them in the dirt with the snakes. I don't want them shitting on my carpet when they lose control of their bowels,\" he said. \n\n\"When they die?\" His son looked at me like trash. \n\n\"Cut off their heads and pack them in coolers,\" he said. \"Gentlemen, enjoy each moment of your painful deaths. I have other business to attend to.\" \n\nI tried to stand, but ended up on the floor. I watched as Jose walked out of the room, leaving me drooling on the carpet and cursing his family. \n\nCh. 57 \n\nCarlos Pachino's (VP, Bay Area Sons) POV \n\nUnknown Location \n\n(Trigger warning- sexual violence) \n\nMy two-year-old son had crawled into my wife's lap, crying loudly into her chest. She sat in the corner of the darkened room, unable to get him to stop crying. She couldn't hold him with her hands cuffed behind her back and her left ankle chained to the wall. She was crying as well, trying to understand how everything in our lives had gone to shit in one night. \n\nThe men who took us were our friends and Club family; men who respected her as the Vice President's old lady. Now they looked at her with disgust, and me with barely hidden rage. We could hear them in the next room as Ten Taco and Rattler argued back and forth. \"Look, the President isn't going to care if we start the party early,\" Rattler said. \"We won't beat her up yet, everyone will still get their turn with her.\" \n\n\"We're just supposed to watch them until he comes back,\" Taco replied. \n\n\"Dude, it could be days. If I have to put up with that crying, I'm gonna tap that ass.\" \n\nJordanna's eyes got wide, and she started sobbing harder, the tears soaking the bandana gagging her mouth. I couldn't do anything; I was tied to a chair in the center of the room. My hands were cuffed together behind me, then ropes tied through the metal frame led to my ankles. The result was that I couldn't move. I was gagged but not blindfolded; they wanted me to see my family suffer before I did. \n\nI looked over at my five-year-old boy; he was in the opposite corner of the room, his ankle chained to the wall. He had tried to fight them, and a hard backhand knocked him into the wall and out cold. The rings my Master-at-Arms wore had ripped his cheek open. I could see the blood creating a hand-sized pool on the dirty vinyl floor. \n\nHe was still breathing, but I almost wished he wasn't. I'd been involved in the execution of a traitor once, ten years ago before I met my wife. We raped and tortured everyone he loved to death in front of him the first day, taking everything away before we even touched him. We took our time with the torture; his screams went on for days before we finally put a bullet in his head. I'd rather my boy die now, peacefully, than go through that. \n\nThe door opened, letting some light in from the lamp in the next room. We were in an abandoned house, one that long ago had been taken over by vagrants and drug users. There were hundreds of them in the Oakland area that were waiting to be torn down; the sparsely populated neighborhoods wouldn't hear our screams, and if they did, the people wouldn't do anything. Nobody trusted the cops, and they knew enough to mind their own business. \n\n\"The President isn't going to like this,\" Taco said. \n\n\"Don't be such a puta, Rattler. I've been watching her shake that ass for years, and I'm trying it out before it gets worn out. It's not like Carlos here is going to need it anymore.\" I struggled to get free as Rattler walked up; he stood over my wife as she shivered in the corner. \"Come quietly and your boy won't get hurt. Fight me, I'll hurt him and you, and I'll like it. Are you going to do what I tell you?\" She nodded. \"Good.\" He picked up my younger boy and moved him across the room, setting him with his big brother. He punched me in the gut as he passed by, then unlocked her ankle cuff. \"Come on, bitch. There's a couch in the other room we can use. Don't worry, Carlos. I'll take good care of your wife, and I'll leave the door open so you can watch.\" \n\nI screamed and fought, but I could do nothing as he pulled her out of the room. He tossed her onto the stained and torn couch, then moved it around so the back was facing me. Grabbing my wife by the hair, he stood her up and used his knife to cut her clothes away. He grabbed her tits, then smacked her ass before shoving her onto the couch on her knees. Her head was over the back, her eyes looking in mine as he dropped his jeans and moved behind her. \n\nI heard a smash and a door hitting the wall, then the sound of gunshots. \"POLICE,\" someone yelled as Taco turned towards the sound. The knife in his hand moved up just before his head exploded in a red mist. He fell forward, his body bouncing of Jordanna's back before sliding to the ground. \n\n\"CLEAR,\" someone said, and a man in black body armor and helmet rushed through the door to my room. He moved in and to the right, while another man behind him went left. The flashlight on their rifles checked the room before returning to the boys in the corner. \"CLEAR,\" the first man yelled. \"SEND IN THE MEDICS,\" he yelled as he walked over to them. \"TWO CHILDREN, ONE INJURED.\" \n\nThe second man came up to me, tugging the gag out of my mouth. \"Carlos Pachino?\" \n\n\"Yes.\" \n\n\"Our boss wants to talk to you.\" \n\nI looked at him like he was an idiot. \"This was all the fault of you cops! I never betrayed the club, but you let them believe I did. You set me up to be killed, you bastards!\" \n\n\"You are all still alive, be thankful for that. We raided this place for your wife and kids, not to save a piece of shit like you,\" he said. \n\nThe SWAT medic was checking out my older boy as another carried my young boy out. Looking past the officer, I could see Jordanna had a blanket around her while another medic checked her out. They wheeled a gurney in, carefully loading my son and wheeling him out while I remained tied to the chair. The officer finally cut the ropes away, then removed my handcuffs. \"I'm not under arrest?\" \n\n\"If we place you under arrest, you have the right to an attorney,\" a man in a suit said as he came into the room. \n\n\"Director Lawrence Miller,\" I said. \"This is twice now you've had the cuffs taken off of me.\" He was the one who cut me loose from custody after the raid. \n\n\"You're a lucky man, Carlos. We planted a tracking device and a bug in your cut before you were released. I apologize for the delay in the rescue, but it only sends information out once an hour, and we had to plan the raid.\" He helped me to my feet, my legs a little shaky after being tied for hours. \"I don't have much time, so I'll get right to it. You have a choice, right here, right now. I can let you join your family at the hospital, and you can go about your business, for as long as you can stay alive. Or, you become a cooperating witness against the Sons and help us put them away. If you do that, you and your family will stay on a military base where you will be safe until the trials finish. After that, you will be sent into the Witness Protection Program. We'll give you a new identity and a new life, Carlos. You have to choose.\" \n\n\"I'll rat them out,\" I said without hesitation. \"I'll do whatever you need. Just take them somewhere safe.\" \n\n\"I thought you would say that.\" Another gurney came in with a black body bag on top. \"We're going to have to divert attention from you, so hop up here and we'll zip you up.\" \n\n\"A body bag?\" \n\n\"We put out the story that the Sons killed you during the raid. Your family is already on their way to a secure location; we will wheel you out with the press here and I'll make a statement. Your two buddies are already in the meat wagon, your ride just arrived.\" \n\n\"Fine.\" I laid down on the gurney, and they moved my legs in and zipped me up. The zipper was left an inch or so from the top so I could get air. Straps tightened across my hips, legs and chest, then it started to move. ",
        "\"Try holding your breath as we go outside until you hear the coroner's van door close,\" Miller said. He patted my arm. \"Relax, you're safe now.\" \n\nI took a couple of deep breaths and held them as I was lifted down the stairs and rolled to the street. The gurney pushed inside the van, and I heard the door slam. The attendant unzipped the bag so I could breathe. \"Relax, we need to get away from the scene before you get out.\" A few minutes later, he unbuckled the straps and helped me sit up. \"Take off your clothes and put on this,\" he said as he handed me a set of blue overalls. I looked at them, they were from \"A-1 Office Cleaning\" and looked big enough. I pulled my boots off, then got dressed before putting my boots back on. He handed me the matching logo ballcap and a pair of sunglasses as the van came to a stop. \"Get out and into the other vehicle, and good luck.\" \n\n\"Thanks,\" I said. The door opened, and an agent helped me down then I was put in the back of a black Suburban with darkened glass. We drove over the bridge into San Francisco, parking in the basement of the Government Building. \n\nFor the next three days, I told them everything I knew. I ratted out every friend I ever had. I told them every detail of our drug business and showed them where the bodies were. At night I returned to the holding cell, waiting for the Skype call to come from Jordanna and the kids. They wouldn't tell me where they were, and she didn't know, but that was all right. They were alive and had a future now. \n\nRori's POV \n\nArrowhead Alpha Home \n\nThe babies woke me just after six, leaving me with very little sleep. I nursed them but couldn't finish; my milk supply was drying up, from the pregnancy and my trips. Mark screamed bloody murder as I pulled him off, stopping a few minutes later when his bottle was ready. I didn't know how a single Mom did it; I had staff and nannies and security, and I was still exhausted. \n\nThe hits kept coming. I went downstairs to get some coffee, and the smell of bacon caused my stomach to flip. I ran to the bathroom, barely making it before I was throwing up in the bowl. Of course, I managed to get vomit on my curly red hair. I wiped as much as I could off with toilet paper and flushed. \n\n\"Alpha? Are you all right?\" It was one of Cheryl's warriors. \n\nI rinsed my mouth out with water and spit it into the sink. \"I'm fine,\" I said. \n\n\"All right. The nannies took the babies to finish eating in front of the fireplace. Breakfast is ready.\" \n\n\"Thanks.\" I didn't want to risk the smell upsetting me again, and a cold fear ran through me. What if I couldn't eat bacon during my pregnancy? By Luna, what did I do to deserve THIS punishment? \n\nI looked at my bedhead and raccoon eyes in the mirror, then trudged back up to my room to take a shower. I asked my Omegas to bring breakfast for me out to where the babies were; toast with jam, coffee, and juice. I shampooed the morning sickness out of my hair, wondering why it was hitting so soon. \n\nMaybe I needed to get a shorter hairstyle. \n\nTen minutes later I was coming down the stairs, dressed comfortably in jeans, a T-shirt and a sweatshirt. \"How are my babies,\" I said as I sat on the blanket during their tummy time. Both could hold their heads up, and they giggled and reached for me as I came closer. \n\nCheryl smiled at me as I laid on my back between them. I picked up Cheryl, and she giggled as I held her over my face, my nose going up to tickle her belly. She giggled, then hiccupped, then projectile vomited into my hair. \"Oh my Luna I'll take her,\" the nanny said. She used her ever-present towel to wipe her face, then handed it to me. I cleaned my head as best I could, then trudged back upstairs to take another shower. \n\nI was pulling on a new sweatshirt when Cora linked me. \"Rori, Chairman Coffey just showed up at our gate and says he needs to talk to you and Chase,\" she said. \"He asked we keep this visit quiet.\" \n\nShit. What else could happen? I hadn't seen the Chairman since my grandfather Charles' funeral four months ago. Charles had been flying to a Pack in Montana when his plane disappeared over Lake Michigan. There wasn't a distress call, and with the wreckage strewn over such a large area, the National Transportation Safety Board accident investigators knew it broke apart at altitude. There wasn't enough evidence to determine if the explosion was accidental or intentional, and the small jet didn't have a flight data recorder. It was likely I would never know how he died. \n\nI had my suspicions. \n\nWe had killed the bastards responsible for the mistreatment of wolves, and the ones involved in the destruction of my entire Pack, Keith and I excepted. The Chairman had been a big help as we got the Pack up and running, but not everyone was as excited. The balance of power had shifted; when one group gains power, another loses it. The Nygaard family is in charge of three Packs now, and another three Packs are close allies. When rumors started that Chase's mother Colletta was involved with my grandfather Charles, someone panicked and killed him. \n\nSomeone who didn't want Charles to be the next Chairman. \n\n\"Have him brought to my home, he can have some breakfast and we can talk. I need you to keep preparations going, Keith can make sure I don't kill him.\" \n\n\"He's on his way. The guards will have the Chairman at the front door in four minutes.\" I linked the Omegas in the kitchen that I had a meeting in my office and to bring food and coffee for my guest. I made it to the front door just as the Chairman's car stopped. Grabbing my jacket and slipping into my Uggs, I met him as he got out. \"Mr. Chairman, welcome to Arrowhead,\" I said. \n\nHe looked past me. \"Thank you, Alpha King. Is Chase inside?\" \n\n\"He's out of town, sir. Please, this way.\" I led him inside and to the office, offering him coffee and danishes as Keith arrived and closed the door. He sat at the chair in front of my desk as I added sugar to my cup. \"What can I do for you, Mr. Chairman?\" \n\nHe set his cup on my desk and stared into my eyes. \"Your actions have not gone unnoticed by the Council. Despite our warnings, you continue to involve your Pack in the affairs of a human biker gang. This puts all of us at a great risk of exposure, a risk that will no longer be tolerated.\" \n\nMy hackles were up. \"What do you mean by that, sir.\" \n\n\"There are a dozen Pack Affiliates in the continental United States, humans who know our secret and have been allowed to live. All but one are in your Pack.\" I let out a low growl; these Affiliates included my adoptive mother and stepfather and the Steel Ladies Presidents who had protected me while I was on the run. They were Pack just like they had a wolf. \"Your Pack maintains close ties with human clubs, inviting them onto your territory and visiting them. Now your relationships have drawn the attention of Law Enforcement.\" \n\n\"That is my business, Mr. Chairman.\" \n\n\"It is our risk of exposure, therefore it is Council business. This is your only warning, Alpha Rori. This Pack was given a lot of leeway due to your background and makeup, but that time is coming to an end. You need to separate your Pack from the humans before our secret is compromised. The Council will not approve any additional requests for Pack Affiliates, and you are to follow our laws for humans learning of our true nature. You can and will conduct yourselves as all other Packs do in regards to humans.\" \n\nI was squeezing the edge of the desk as I forced my claws back before they could make more dents in the white oak. \"That sounds like an ultimatum, Mr. Chairman.\" \n\n\"It's the way it has to be, Alpha King. Thank you for the coffee; I must be going. My plane will be done fueling shortly. I would appreciate it if you would keep this conversation between us and your mate; I don't want to stir things up any more than it already is. Stay out of the news, Alpha.\" He stood and shook my hand while I was debating whether to smile he was leaving or growl and rip his throat out. I went with the smile, holding my wolf back while I walked him back to his car and watched him drive away. \n\nThat was three. The rest of my day better be fucking unicorns and rainbows, because the morning was a shitshow. \n\nI heard the nanny asking for paper towels to clean up the blowout from Mark's diaper, and just leaned against the wall and smiled as the smell hit me. It wasn't in my hair, so I was in luck. Someone else was at one. \n\nCh. 58 \n\nGreg Barks' POV \n\nAlexandria, Minnesota Safe House \n\nI was trying to behave, but she was making everything hard. Literally. \n\nLast night, I put her to bed and went out to watch the news for a while. The Sons of Tezcatlipoca were leading the broadcast, with more reports and arrests announced all the time. The Feds were doing a fine job of wiping that club out; they were using the RICO statutes to seize their Clubhouses and other assets. I would have felt a lot better if they had arrested the leadership, though. They couldn't avoid arrest forever, not with the resources the Government was putting towards them. \n\nI took a quick shower and tucked into bed a little after midnight, wearing boxers and a T-shirt. The queen-sized bed in the master bedroom wasn't big enough to avoid us touching, but I put my back to her and dropped off to sleep. \n\nHer scream woke me up. \n\nI sat upright, instantly awake with my wolf forward in my mind, and I looked for threats. A sniff and a look around showed nothing, but Heather was dreaming. Her eyes were rolling around behind her eyelids, and her legs started to move before her arms joined it. She screamed again, and I grabbed her hands as they came out from under the covers. \"Heather,\" I said. She continued to struggle, her leg kicking me a little too close to the danger zone. I swung a leg over, sitting lightly on her thighs while I held her hands to the mattress. \"HEATHER, WAKE UP!\" \n\nHer eyes opened, and I could see the fear in them as clearly as I could smell it from her body. \"Greg?\" \n\nI let go of her hands and moved up on my knees, so I wasn't putting weight on her. \"It's all right, baby. You were having a nightmare.\" \n\nHer fear turned to tears, and it broke my heart to watch her cry. I laid back down, and she moved a leg over mine and rolled until her face was on my chest. I held her as she let it out, her tears soaking my shirt while my heart broke for her. I just caressed her arm, back or head to calm her down. \"Want to talk?\" \n\nShe didn't say anything for a minute, and when she did, it was barely a whisper. \"I was back there, back home,\" she said. \"It was that day. I got off my motorcycle and walked towards the door. There were four motorcycles out front; I didn't recognize them, but they had Texas plates, so maybe it was another chapter. I walked across the driveway to the front door and opened it.\" \n\nMy wolf was howling as she started to cry again. \"It's all right, just close your eyes and relax. You're safe here; I won't let anyone hurt you again.\" \n\nShe nodded, then continued. \"I saw my Dad first; they had him tied to a chair, two men behind him with a gun to his head. Someone grabbed my arm and pulled me inside as the door closed again. I looked in the living room, and Mom was lying on the floor. She was covered in blood, naked and not moving.\" She started to sob louder. \"The man whispered that I was next.\" \n\nI moved her until she was lying on top of my chest so I could hold her close. I kissed her hair as my hands moved down her body, trying to ease her pain. She fell asleep a few minutes later, leaving me unable to move and painfully hard. I eventually fell asleep again. \n\nI had the most amazing dream. \n\nI was lying on the beach, the sun on my body and Heather stretched out on top of me. She had the most amazing body, all oiled up and glistening in the tropical sun. We were both naked as we kissed, her hand behind her as she lined me up to her core. Heather moaned in pleasure as she sank onto my hard cock, her tight pussy stretching until I was seated inside her. \"I love you, Heather,\" I said as she started to move up and down. \n\nIt felt so good, so real. Heather had this move where she rotated her hips with each time she bottomed out, rubbing her clit onto me. I reached for her hips, holding her in place as I started rising to meet her. She was moaning loudly, begging me to go faster as I began to hammer up into her. \"Baby, I'm close,\" I said. \n\n\"Fill me, Greg. Fill me with your love.\" I held out a little more, then held her down on me as I started to cum hard into her hot young body. I felt it shoot out, four strong pulses, causing her to tip over the edge with her own scream of pleasure. \n\nHer nails on my chest woke me up, and I looked up to see Heather leaning over me, her head tossed back as she rode out the orgasm. Her shirt was bunched up above her proud breasts, and her loose shorts pulled to the side. \"Heather?\" \n\nShe leaned down and kissed me. \"Good morning, love. That was as amazing as I dreamed it would be.\" \n\nI couldn't believe I'd done this. \"We...\" \n\nShe laid back down on my chest, breathing hard. \"I can't believe you woke me like that,\" she said. She pouted as my softened member popped out, causing our combined fluids to run over my thighs and down to the bedsheet. \n\nNow I was really confused. \"I woke you?\" \n\nShe nodded. \"One hand on my tit and one hand on my ass, with that big cock of yours pressing against my stomach. All I had to do was move my shorts aside and guide you home.\" She rolled off of me, biting back the cry but I caught her wince as the wound pulled with the motion. \"Let's clean up and eat, then we can do it again.\" \n\n\"I'm sorry, Heather. I hurt you, we should have waited until you fully recovered.\" \n\nShe slowly stood up, letting her shorts fall to the floor. Turning back towards me, she ran her hands down to the spot on her side where the bullet had exited. \"I'll be fine. It felt so good, I hardly noticed.\" \n\nI put my leg on then followed her into the bathroom as she carefully pulled her shirt off. I made sure she got in the shower, then I went back and stripped the bed. Putting our dirty clothes and sheets in the laundry basket, I took them down the hall to the washer and started a load of bedding. \n\nWalking back, looked out the drapes in the bedroom and shivered. Despite it being late in the morning, it wasn't that light out, and the snow was blowing hard from left to right. The news was talking about the blizzard moving in from the Dakotas, and it was here. I couldn't see my car in the driveway through the blowing snow, and the storm wasn't going to blow out until tomorrow. \n\nI set my leg aside then got into the shower behind her. \"Great timing, I need my hair done,\" she said after kissing me. \n\nI leaned against the wall and used my hands to shampoo and condition her as she cleaned what she could reach. While the conditioner set, I took her washcloth and did the parts she couldn't reach. As I cleaned her inner thighs, I suddenly realized what we had forgotten. \"Heather, are you on birth control?\" \n\nShe tensed up. \"I was on the pill,\" she said. \"I haven't taken them since I got shot.\" \n\nOh shit. \"When was your last period?\" \n\n\"Two and a half weeks ago.\" Double shit. \"It takes a while for the drugs to leave your system, right? You don't think we, um, we couldn't have...\" \n\n\"I don't know, love. I'll do some research on the web later, see what our options are.\" My wolf growled in my head; if he had sired a pup, he wanted the pup. He told me he would take over before he would let me kill it. I finished washer her, then helped her rinse her hair. She waited as I washed up, then I hopped out and grabbed towels for both of us. I was glad the home had been owned by an older person, with handicapped rails installed in a few key places. I put my leg back into the prosthetic and held Heather's hand as she stepped out. \"I'll go get a morning-after pill for you,\" I said. \n\n\"All right,\" she said. \"Not until we eat, though. I'm starving.\" \n\n\"Another hour won't matter,\" I said. We dressed in sweats, and I went into the kitchen to make breakfast while she sat in the living room watching the news. \n\nThe weather was the only story, and I listened to the meteorologist on the local station. \"The first bands of snow have moved into the Alexandria area already, and heavier bands are on the way. The total snowfall is only expected to be eight to twelve inches by tomorrow morning, but snow isn't the hazard. A blizzard warning is out for the entire region until ten o'clock tomorrow morning, with sustained winds of twenty to forty miles an hour and gusts that could reach seventy miles an hour. Visibility is less than a quarter-mile and degrading fast.\" \n\n\"That's a sobering forecast,\" the anchor said. \n\n\"This isn't a storm to trifle with, folks. Interstate 94 is already closed from Fergus Falls west through all of North Dakota, and the State Patrol is preparing to close the road west of Saint Cloud in the next hour. All schools in the area were called off today and tomorrow, and snowplows are being pulled off the road due to the high winds and low visibility. If you're thinking of heading out, don't. Whatever you need isn't worth it.\" \n\n\"Sobering advice, let's hope people follow it. Coming up next, Sports!\" \n\nI pulled eggs, cheese, and sausage patties out and set them on the table. I wasn't great in the kitchen, but I had mastered Bachelor Cooking in my old Pack. I started heating the skillet while I grabbed a pack of English Muffins. \"How many breakfast sandwiches do you want?\" \n\n\"Two, please.\" Heather came into the kitchen, looking out into the yard. The trees weren't that far away, but you couldn't see them. \"You can't go out in this, Greg.\" \n\nI looked out and had to agree. These were the kind of storms you waited out; if you got stuck, the cold and the wind could kill you. \"We'll be all right. We can camp out in the living room, and binge watch something on Netflix.\" Her eyes lit up, and she got up to grab the remote. \"I get veto rights, though!\" The last thing I needed was to end up watching The Handmaid's Tale or the like. \n\nI started a pot of coffee, and ten minutes later brought her a plate and a cup plus a glass of orange juice. She had moved all the pillows and afghans onto the Papasan chair, and moved over on the couch when I set it down on the coffee table. \"Thank you,\" she said as she leaned over to kiss me. \n\n\"You're welcome.\" I went back to get my food and drink, and then we ate while she started the first season of Breaking Bad. I had four sandwiches to her two during the premiere. I cleaned up the dishes while she got up for the bathroom. \"More coffee?\" \n\n\"Travel mugs,\" she said. I came back out of the kitchen to find her sitting naked on the couch with a six-pack of condoms in her hand. \"More?\" \n\nI pulled off my sweatshirt as I walked over to her. I pushed my sweatpants off, and she took me in hand as I rapidly hardened. She rolled a condom over me before I arranged her carefully with her hips over the edge of the cushion so I wouldn't hurt her. Our lovemaking was slow and tender, and I took advantage of the time to learn about her body and what it liked. I cleaned us up afterward, then set her in front of me on the Papasan chair before pulling the afghans over us. \n\nSeason One lasted seven episodes and six condoms. \n\nGetting snowed in wasn't going to be so bad after all. \n\nCh. 59 \n\nSpider Monkey's POV \n\nSilicon Valley Condominium \n\nI woke up in the middle of the night to the sound of teeth chattering. Vic was shivering and covered in sweat. \n\nI pulled the covers down; he had soaked through his clothes and into the sheets, and every place I was touching him was sweaty. I put the back of my hand to his forehead; he was burning up. He was still sleeping, but he had the chills, and his shivering had woken me up. ",
        "I rolled out of bed, grabbing my phone. It was two in the morning, about twenty hours since Vic was shot twice during their attack on the Sons of Tezcatlipoca building. I opened the door and ran to the guest room, banging on the door. Chase had said to monitor him for a spike in his fever. \"Chase,\" I said as I heard him moving around. \"He's burning up.\" \n\n\"Damn.\" He opened the door, dressed in scrub bottoms and a white T-shirt. He moved past me to the bedroom, grabbing the thermometer off the bedside table and giving it to me. \"Check his temperature, I have to remove the bandages and check the sites.\" I held it under his tongue until it beeped. \"One hundred and four-point-seven,\" I said. \n\n\"Too high. Go get any fans you have, and make up a bucket of ice water.\" I went out to get the stuff; I filled a five-gallon bucket with ice, then took it into the shower and added cold water before carrying it next to the bed. I only had one fan, a box fan I used in the garage, but I brought that in too. Chase had the bandages off and was checking the thigh wound. It looked red and swollen. \"His leg is infected,\" he said. \n\n\"Can you do something?\" \n\n\"I have to operate.\" He drew a syringe and injected it into his arm, then one more. \"It's a sedative to make sure he stays under, and another round of antibiotics. They might not work, but these are the strongest I have right now.\" He reached into his medical bag and pulled some things out, setting them on the bedside table. \"I need more light in here, bring in the adjustable light from behind the couch in the living room and shine the lights on his thigh. We'll also need some towels you don't care about, and a bowl filled with rubbing alcohol. When you've got that ready, wash up to assist.\" \n\n\"Wait, I'm a hacker, not a nurse,\" I said. \n\n\"You're whatever Vic needs you to be right now, Spider. I have to open him back up and clean out the wound before the infection gets out of control. This is no joke; he could lose his leg, even his life from an infection, and I can't bring him to a human hospital. Just go get the stuff, you'll be fine.\" \n\nI walked out of the room, shaking my head. He didn't know that I was a wimp when it came to blood. I'd gotten sick at the Fair one year when I watched a veterinarian spay a cat as part of their demonstration. \n\nI brought the light in; it was one of those gooseneck floor standing lamps with three bright lights for reading. I set it near Vic's feet, moving the lamps out to light up the area. I grabbed a clean metal bowl from the kitchen and poured in the contents of the bottle of rubbing alcohol from under my sink. I had some old beach towels in the hall closet; I brought those in as Chase came out of my bathroom, hands up. \"Roll him onto his side and move his leg towards the edge of the bed, then put the towels underneath him from thigh to shin,\" he said. I put them in place and then he had me wash up. \n\nWhen I came out, he had me put a headband-mounted light and his gloves on. He then had me pull out the dirty surgical instruments from the Tupperware box in the bottom of the case and put them into the alcohol. \"I don't have enough clean instruments with me, so I have to reuse these, as much as I hate to,\" he said. \"Put on gloves, then take the Betadine and some of that gauze, and clean the entry and exit wounds. Start at the edge of the scabbing and work your way in a spiral out six inches.\" \n\nI did that as he grabbed a pair of surgical scissors out and cut the stitches holding the skin together. \"Carson is pretty sloppy with his stitches,\" he said. \n\n\"I'm sure he'd do better if he wasn't in the back of a moving van,\" I responded. \"Why are you taking those out?\" \n\n\"I might have missed something, dirt or clothing or a piece of the bullet. I'll clean it out again and pack it so it can drain. See the yellow stuff? That's pus building up.\" \n\n\"Gross.\" I stood between him and the table as he opened the skin up again, handing him instruments as he asked for them. He spent about fifteen minutes digging around in there before he was happy; he packed the wound with gauze and left the skin open, covering it with a bandage. \"What now?\" \n\n\"I'll wipe off the instruments and put them back in my bag, and you can toss the trash and the bloody towels,\" he said. With that done, we used the ice water to soak the sheet and turned the fan so it was blowing across him. \"The evaporation will cool him better than the ice will,\" he said. \"We just need to keep him wet.\" \n\n\"Then what?\" \n\n\"Then I need to use a phone, one that can't be traced.\" I went to my computer desk, pulling out a burner and returning to give it to him. He sat down on the opposite side of the bed, and I sat with him. I couldn't believe I'd seen the inside of Vic's leg and didn't throw up, but it could still happen. \"I need to move him to a real medical facility, Spider. I don't have the drugs or the equipment here to properly treat him now that he's fighting off an infection.\" \n\nI looked at him, my gut twisting at the words. \"You can't bring him to an Emergency Room with gunshot wounds,\" I said. \n\n\"I know. I need to get him back home to my Clinic. I'd like you to stay here.\" \n\n\"No.\" I stood up and put my hands on my hips. \"We've been through this already. I'm staying with Vic, and if that means I need to go to the frozen lakes of Minnesota, then I'll just have to find my wool socks.\" He tried staring at me, but I wasn't having it. \"Get the plane, I'm getting packed.\" I turned and grabbed the bag I'd taken to Los Angeles, tossing the dirty clothes in my hamper and going to my closet to get new ones. This time I'd pack warm. \n\n\"Hey big bro. He's running a fever, and I need to get him home quick. Can you send the plane?\" He listened for a bit. \"Eight in the morning is too late, by the time he refuels and we're up in the air again it will be past ten. I'm going to try and find another way.\" He ended the call as I turned around. \"The pilot can't leave until the airport opens at six. Do you know any private jet services we could use?\" \n\nI just laughed. \"Yeah, normally when the Steel Ladies pop out for lunch in Beverly Hills, we order up a private jet with half-naked stewards,\" I said in a Valley Girl accent. \"I'm not rich, Chase. I've never flown in a private plane.\" \n\nHe looked over at Vic. \"Come on, you can help me find someone.\" We went out to my computer in the living room. \"We need to stay away from corporate jet services, what we need is a small charter company that flies out of somewhere close by,\" I said. She looked for companies while I made calls; cash could ease the pain of an early wakeup. \n\nWe hit pay dirt on the third call; a pilot agreed to meet us at the airfield at six, and he'd be fueled and ready for a flight to Duluth. The cost of the charter was eight thousand dollars, and the six-passenger executive jet was big enough for us and our cargo. We gave him a deposit using one of the reloadable debit cards and Chase started loading up the rental car again. \n\nI met him at the door and handed him my clothes bag and a slightly lighter bag of cash. \"You're bringing this,\" he asked. \n\n\"I filled up my safe, but I don't have a secure place big enough to store all this,\" I said. \"I'd rather keep it with me.\" \n\n\"All right.\" I had put a luggage tag on mine, and when the back was full again, I covered it all up with the blankets. I left the back door of his car open, along with all the doors in between as we went back to the bedroom. \n\nChase picked him up and carried him out as I locked up behind him. He set his butt on the edge of the seat, and I ran around and helped pull him so he was lying down on his side again. His fever was still high, but he wasn't shivering. I closed the garage door behind him and jumped in the passenger seat as we drove off to the airfield. \n\nThe twin-engine executive jet was waiting, one pilot walking it down while the other one greeted us. \"Good morning, sir. I need your names for the flight plan filing.\" \n\n\"Nick and Grace Johnson, and Charles Anderson,\" Chase said. \"Thanks for coming through on short notice.\" \n\n\"It's no problem, sir. We are in somewhat of a hurry, bad weather is moving into Minnesota, and we only have a short window to arrive before the airports close. Your balance is seven thousand two hundred and eighteen dollars and twenty-eight cents.\" \n\n\"I'd rather not have this show up on the company accounts, so I hope cash is acceptable?\" \n\nHis eyes widened. \"It's not our normal practice,\" he said. \n\n\"Not everything needs to be reported to the government or the auditors,\" Chase said. He pulled out a stack of hundreds and handed it over. \"That's nine thousand, the extra is to forget who we are after you land. I don't need my wife finding out I was at a buddy's bachelor party when I was supposed to be on a business trip. She's close to divorcing me as it is, and I can't afford to give her any more ammunition for her lawyer.\" \n\nThe pilot smiled. \"Of course, sir. We'll get you there safely and quietly.\" He took the money and put it in his jacket as he walked away. Vic had woken up, so Chase helped him walk to the plane and up the stairs, setting him into a seat and buckling him up. \n\nThe luggage compartment was open, and Chase started loading the bags as the pilots finished their preflight checks and filed the flight plan. When it was all stowed, I drove the rental car into the lot and parked it. Going inside, I approached the young man manning the desk. \"This needs to get back to the rental car return at the San Francisco airport,\" I told him. \"Do you know anyone who could do that for us? I'll pay for the help.\" \n\n\"My brothers can do it,\" he said. We agreed on a price of a hundred dollars each, and I handed over the keys and rental papers. I walked back out to the plane, where the pilot was waiting for me. As soon as I was inside, he closed the door behind me and went back into the cockpit. \n\nI sat down in the big leather seat across the narrow aisle from Vic; the jet had six seats, we were in the two facing forward. Vic had fallen asleep again; his seat reclined part way. The four behind me faced each other over a small table, and Chase was buckled in behind me. \"Pretty damn nice,\" I said as we started to move. \n\n\"You're rich now, Spider. We have to be careful about how we use it so we don't attract attention, but you can afford a few luxuries now.\" \n\nI looked out the window as we taxied. \"I didn't do this for the money, Chase. I would give it all back if it meant Vic didn't get hurt.\" \n\nHe reached his hand back and took mine. \"You're a good woman, Spider. What we did was righteous, and it prevented war from breaking out between the Brotherhood and the Sons. You'll never have to buy another drink in any Clubhouse after this.\" \n\n\"I could buy everyone drinks in every Clubhouse after this,\" I said. \"I just want to take Vic and spend some time together, someplace warm and private.\" \n\n\"I know.\" He pulled out his phone and made a call. \"Doc, it's Chase. I'm bringing one of my guys in; he's got an infection after puncture wounds to his thigh and chest. I'll need transportation from the Duluth Airport, and I need you to bring what you can to treat on the way.\" I couldn't hear the response. \"Yeah, we'll bring him to my clinic. Don't say anything to them; it's a surprise. Thanks, Doc, we are expected to land at twelve-twenty.\" He ended the call. \n\n\"Who was that?\" \n\n\"A doctor in the area I trust. He'll bring more supplies, then take us to my clinic so we can treat Vic properly.\" \n\n\"I get to stay with Vic?\" \n\n\"I'm sure Roadkill and Possum will give you a guest room at their place, but you can be with him at the Clinic as much as you want.\" We took off, the acceleration like being on a Harley that kept going faster and faster. We lifted off with the rising sun and headed east. \n\n\"Get some sleep; I'll keep a watch on Vic,\" he said. \n\nI reclined both our seats until they were more like beds, then took Vic's hand and fell asleep to the drone of the engines. \n\nCh. 60 \n\nAlpha Rori's POV \n\nArrowhead Pack House \n\nI left the babies with the nannies and their security detail; Coral had left Hope there too. We both went over to the Pack House to oversee preparations for the party. \n\nThe place was a madhouse. The decorating theme could best be described as \"Australian Christmas,\" ignoring the foot of snow outside in favor of beach and sun. There were Christmas trees, candy canes and other decorations, all mixed in with palm trees, flowers and beach stuff. Long tables were set up for the buffet, a few in the pool area, the rest in the Dining Hall. It was an adult party, like most Pack parties. Due to our low fertility rates, most Packs only had a few children at any time. Oxbow had three, ages two, seven and ten. Vic's granddaughter Gina was the three-year-old, and Celeste and her mate Ted were coming expecting to visit Granddad. We hadn't told anyone that Vic and Chase might be gone for an extended time, dealing with the Sons. \n\nMy Pack had our three babies at six months, and one girl of fourteen. With the way our Pack was put together, almost half being former Omegas or slaves rescued from abusive Packs and unmated, we didn't have as many mated pairs as most. It would get better, as the more recent additions and some matings were starting to fill our numbers. \n\nMykayla was the older girl, born into slavery in the Bitterroot Pack, and still learning to trust the males of our Pack. I spotted her in the kitchen as I walked through, cleaning pots in the big sink. \"Mykayla,\" I said with a smile as she noticed me. \n\n\"Good morning, Alpha,\" she said as she dried her hands. \"Can I be of service?\" \n\n\"You're already working hard. I just wanted to make sure you set aside time to relax and have fun yourself today.\" She froze; with no one close to her age, and an entire life where she had no choices in what or who she did, adjusting to life in our Pack hadn't been easy. I'd checked the duty roster for today when I came in the kitchen and noted she'd signed up for every shift. \n\nShe looked down at her feet as she shook her head no. \"There is so much to do, and I wanted to make sure the others had time to be with their friends,\" she said. \"It's not like I matter for this. I'm the only teenager, and too young to find my mate.\" She hadn't shifted yet and wouldn't for a few years. \"I don't like being around unmated males,\" she said. \n\n\"Those men are Pack or friends; they will not harm you, Mykayla. I need you to have fun and socialize; it's why we are having this party.\" \n\nShe shuddered but nodded her head. \"A group of naked males never ended well for me,\" she said. \n\n\"You aren't alone in that, but the other women who came out of those situations are trying. I need you to do two things for me, Mykayla.\" I put my hand on her shoulder to calm her. \"Scratch your name off two shifts during the party so you can spend time in the pool and dining room with the Packs. The second thing is I want you to find three people who went to human schools recently and talk to them about their experiences.\" \n\n\"Why? I'm just going to work here until some man claims me as his!\" \n\nI pulled her into a hug as she started to cry. \"You aren't some prize at auction, and your future is not doing dishes, Mykayla. You're a young woman who will become a strong werewolf and contribute to the Pack,\" I said. \"If you find your mate early, that is wonderful. I know you fear the idea, but Luna has the perfect match for you out there, someone you can love and trust.\" \n\n\"Luna ignored my cries,\" she sobbed into my shoulder. \"She left me there!\" \n\n\"Luna brought you here to my Pack, and we need to trust knows what she is doing. You are going to live for hundreds of years, Mykayla. Your early years were shit, but things have changed. You have a Pack that loves you and wants you to succeed.\" I patted her back to calm her. \"I don't believe in waiting around in the kitchen for a mate to find you and take you to HIS kitchen. Chase and I want every wolf in our Pack to reach their full potential. I've seen your test scores and talked to your teachers; you're a smart young lady. As soon as you have caught up to your age group, we're sending you to the high school in Two Harbors.\" \n\nHer eyes got big; she'd rarely been off Pack lands, and only interacted with humans when she helped babysit during Steel Brotherhood events here. We were officially homeschooling her so she could catch up from the lack of formal education in her old Pack. \"School?\" \n\n\"Yes, high school and college. Our Pack needs people who are highly educated, and who can get good jobs in the human world or help our Pack businesses grow. Chase and I have high hopes for you. We think you can be whatever you want to be.\" \n\n\"Why?\" \n\n\"Your wolf is just starting to show herself, and she's strong. You aren't an Omega, and deep down, you know that. Your wolf will not be held down, and neither will your human. To go to school, you need to be comfortable around people, and to do that you have to come out of your shell a little. You are among friends, so behave that way. You know these people, you've lived with them, but did you ever spend time just talking to them?\" \n\n\"No,\" she said. \n\n\"Start today.\" I kissed her on the forehead and let her go. \"We're all going to have fun at the party, no exceptions.\" \n\nShe smiled, and I turned to talk with the Beta in charge of the kitchen, then I sent a mental message to my Betas with a quick summary of our discussion and what I had asked of her. They promised to keep an eye on her during the party and help her find good people to talk with. \n\nI headed outside to where some of my men were setting up our barbecue pit. The pit was basically a concrete block rectangle, and they had a good fire started already. The fire would burn down to coals, and we had hinged sections of chain link fence we could use to hold chickens, and big grates that went across it to grill steaks and such. \"Are you guys going to be able to keep cooking with the storm coming,\" I asked. \n\n\"We should be all right for lunch, probably dinner,\" Joe said. They were using scaffold poles to build a wind shelter around it. \"We'll use tarps to keep the wind off, but with the snow and cold forecast for tomorrow that's about it,\" he said. \n\n\"I appreciate your work, and I appreciate a rare steak more,\" I said as I laughed. \n\n\"Alpha, you are needed in the security center. I have Alpha Michael and his leak Beta skyping us right now,\" Keith said. \n\n\"On my way.\" I went back inside the Pack House and down to the basement, where the Security Center sat behind a heavy steel door and a foot of reinforced concrete. Keith was sitting in front of a laptop, and I could see the Oxbow Lake Alpha and Beta on the screen. \"Uncle Michael, Beta Peter, is everything all right?\" \n\n\"We're looking at the updated forecasts, Rori, and it doesn't look good. That blizzard intensified overnight, and it's expected to hit us about three this afternoon. They are saying we could get a foot of snow before midnight with the moisture from the lake feeding into it, plus near hurricane-force winds and below-zero temperatures.\" \n\n\"Are you canceling the visit,\" I asked nervously. \n\n\"No. Either way, we end up waiting out the storm. My Pack would rather wait it out by your pool than in our Pack House,\" he said with a smile. \"It does change some of the plans. We won't be able to rotate people out after two or so with the weather. I've gotten volunteers for our minimum staff here at our Pack; those people will come over at ten and rotate back just before the storm hits. I just wanted to be sure you could handle the rest of our Pack staying not just today, but maybe tomorrow and into the next depending on when the storm ends, and the roads get plowed.\" Even in wolf form, deep snowdrifts sucked the energy out of you and made travel difficult. ",
        "\"Staying is not a problem, we'll keep the party going for another day,\" I said. \"We have plenty of extra rooms, plus the bunks in the basement of the Pack House.\" I was glad we had designed our buildings to allow for lots of extra space for guests and expansion. The big houses the female Omegas used now had lots of open bedrooms, and we could sleep fifty in the basement bunk rooms. \"Are you sure you want to leave your Pack security light that long?\" \n\n\"You're the one under threat, not us,\" Michael said. \"The good news is that no one will be able to move during this storm.\" \n\n\"It's going to strain our security plan as well. Our cameras will be blinded, motion detectors useless, and we won't be able to send out patrols.\" \n\n\"We can help you watch the inner perimeter, and you'll have three dozen more fighters to defend you. It's the best plan, Rori. We don't want anything to happen to you or the babies.\" \n\nI had to agree, and my wolf settled at the thought of having more Alphas and Betas around to fight. \"That sounds great, I'll let our people know to prepare rooms. We'll figure out who sleeps where tonight. Michael, you and Margaret will be staying in our guest suite.\" \n\n\"We'll see you in about ninety minutes, Rori.\" The Skype ended and I looked over at Keith. \"Work with Peter when they arrive, I don't want anyone stuck doing security all day. Work out a plan to watch around the houses.\" \n\n\"Already working on it. There's one more change, Rori. We aren't sending out the teams to find Greg and Heather; there isn't enough time to get to the target area before the storm does. We'd trap them in a hotel waiting it out. Western Minnesota will be shut down for at least a day.\" Shit. They needed the warning. \"On the good side, it's not like Greg will be able to take her anywhere in that storm. They'll be watching Netflix and eating popcorn, not getting in trouble.\" \n\nI had to agree. \"Fine, we have to keep our people safe too. Let me know when Oxbow arrives at the gate.\" I walked back out, sending messages to the Omegas and warning them about the change in plans. We diverted a few people to make sure the extra rooms were ready while the rest kept up the party preparations. \n\nEveryone worked hard to get things prepared for their arrival, and just before ten, the caravan arrived at the gates. The lead car with the Alphas pulled up in front of the Pack House, and I embraced my Aunt and Uncle as they stepped out. \"Welcome to Arrowhead,\" I said. \n\n\"Thank you, Rori. Where are your babies?\" \n\n\"Inside,\" I said. Ever since the twins were born, they were the center of the attention, and I was lucky to get a 'Hey how ya doing' brushoff. \"There are tables in the Dining Hall where you can put the snacks and desserts, and Coral will let everyone know where they are staying so we can get your bags there. Cars can park in garages or the Pack Garage; then you can use the tunnels to come back.\" \n\nIt took about twenty minutes to get all the food unloaded and the people back into the Pack House to start the party. Thanks to our tunnel system, they didn't need to wear boots and coats, leaving those in their rooms. The weather was beautiful before the storm, in the high thirties, but clouds were building in. I didn't see the person I needed to speak with. \"Margaret, is Doc coming?\" \n\n\"He'll be here later, he had to go down to Duluth for something,\" she said. \"Are you all right?\" \n\n\"It's nothing, but with Chase gone, I was hoping to have him here in case someone gets hurt.\" \n\n\"Your Mom is a nurse. I'm sure she can handle it,\" she said. I had to agree, but I wasn't going to have my Mom do a pregnancy check. \n\nCeleste was disappointed Vic was out on assignment. Her daughter couldn't wait to swim, so I told her I'd see her soon as they took their stuff to Vic's room. \n\nThe Oxbow Pack took one look at our work schedule and started taking over shifts for people, despite the protests that they were guests. \"Many hands make light work,\" was their answer. \n\nThe party started right away, with most of the people headed into our huge indoor pool area. The locker room was full of people stripping down and leaving their clothes and shoes in the cubbies. I stripped and rinsed off in the shower before walking out into the pool area. Werewolves didn't like swimsuits, and we didn't need them for this party. Being naked for us wasn't sexual; it was natural. Many were in the pool, some sitting and talking, others playing basketball or volleyball. My parents were sitting at a table talking with a few others, both naked and comfortable in their nudity after their time living here. The rest were sitting on towels at the tables, drinking and eating from the snacks along the side. Three kegs in tubs of ice were over at the side, and the pizza oven in the snack bar area was working to capacity. \n\nI saw Margaret; she was sitting with Coral in the zero-depth entry area where we had shallow water and bubblers for young ones. They and the nannies had the three babies in swim diapers, and they were sitting in their crossed legs playing with the water. Celeste was watching Gina as she ran around stepping on the bubblers, squealing in delight as the water sprayed. I went over and sat with them; we talked for a while, and Cheryl emptied my breast then cried for more. \"I'm drying up,\" I said. \n\n\"I'm having to supplement more, Hope wants more than I can give her,\" Coral agreed. \n\n\"We're starting them on solid food,\" the nanny said. \"It's time. They are growing so fast, you can't keep up anyway.\" \n\nI just nodded; Margaret went with them as they returned the three to the nursery to finish their feeding and go down for their naps. I got up and walked around, even taking a turn on the big slide that went into the deep end. I saw Mykalya sitting alone, and brought her with as I stopped at a few tables to chat. I left her with Angela, who had gone to Two Harbors High School ten years ago. \n\nTime flew as I talked and ate. The party was going great, and I could tell how much better our Pack was feeling now that we could have fun and socialize. It was too good to continue. \"Alpha, Doc, Chase, and Vic just showed up at the front gate with a human female. They're heading for the clinic; he's hurt.\""
    ],
    "authorname": "partwolf",
    "tags": [
        "biker",
        "club",
        "gang",
        "luna",
        "mates",
        "motorcycle",
        "pack",
        "werewolf"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/buried-treasure-ch-56-60"
}