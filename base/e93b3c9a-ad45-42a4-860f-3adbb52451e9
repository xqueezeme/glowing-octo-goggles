{
    "title": "Marriage of the Fae Ch. 04",
    "pages": [
        "A/N: Welcome to Chapter 4! It's been a long fucking wait, hasn't it? I want to thank everyone who's stuck with me from the beginning and apologize for another looooong delay. Finding time to write narrative that I feel is up to my own standards, and up to the standards that loyal Lit readers deserve, has been kind of a harrowing process. But I know from personal experience with my favorite stories on here that it really sucks to wait even a few days, let alone months. I want to thank everyone who has commented with kind words, constructive suggestions, and encouragement to keep writing.\n\nIf you're new to this story, thanks for hopping in, and I recommend that you start at the beginning!\n\nI'll stop talking now. Without further ado, here it is! I hope it was worth the wait.\n\nChapter 4\n\nSiobhan\n\nRhys' advisor nears us, and bows deeply. \"Princess Siobhan.\"\n\n\"Jerome,\" I reply.\n\n\"I'd like to speak with you, if you would not mind.\" Jerome looks pointedly at Aibhlinn, offering her an apologetic smile.\n\n\"Consider me gone. It was a pleasure riding with you, Princess.\" It's a double entendre Jerome would never catch, but I blush beneath my riding tunic. Aibhlinn walks her horse into the barn and is gone.\n\nI stroke my steed's mane as I look to the advisor. \"How is your prince, Jerome?\"\n\nThe man shifts in his boots, seeming to choose his words carefully. \"You take me right to my point, Princess.\" He smiles, a bit sadly, but his smiles always seem to be rather so.\n\n\"Oh?\"\n\nHe nods. \"Princess Siobhan, I need your help.\"\n\nI glance back toward the barn, where somewhere inside Aibhlinn is tending to her mare. \"Oh?\" I repeat. I know where this is going. Do I want to let on?\n\nJerome sighs quietly. \"I apologize for the intrusion. I'm sure this can't be easy for you.\" He steps forward in a conciliatory gesture. Right, I'm supposed to be mourning the end of my engagement. Or is he putting on airs as well? If he's been alone with Rhys and Noelle for more than five minutes he surely can't be too sympathetic toward the prince.\n\n\"I've spoken to our Priest Aodh and Prince Rhys...and Noelle,\" he says. The last bit surprises me. What did she have to say? \"After some thought, I decided it might be best to come to you with this request, considering your situation.\"\n\n\"My situation?\" The words are silly and euphemistic, and I want to force something direct out of the all-too-polite Jerome.\n\n\"We thought that the Council and those in power between the two clans may be more sympathetic to Noelle were she to become familiar with the customs of our people, and then greet them officially on a sort of middle ground.\" Jerome lets the statement hang in the air for a few blinks.\n\n\"And considering my...situation, you want me to teach her,\" I say.\n\nJerome nods.\n\nAdmittedly I have no problem with the girl; she seems likable, even. But I want to probe further. \"And you don't think a royal tutor could offer the same services?\"\n\n\"I believe a royal tutor would not show the same grace toward her as I know you possess.\"\n\nI nod. He wants her taught with the full benefit of the doubt, not to mention by the woman who a few days ago was set to marry her husband. I can understand how a man may see a sort of inexplicable solidarity there.\n\nOne more complication rises to mind. \"Will Rhys be there?\"\n\nJerome's passive expression flickers infinitesimally. \"I'm sure the Prince can arrange to be elsewhere if it so pleases you.\"\n\n\"That would be best.\" Not only will I not have to deal with him, Noelle will find a short respite.\n\n\"There is the concern of their Elixir bond. Neither can be very far from the other.\" I'm caught off guard by Jerome's reminder. But I shake my head.\n\n\"Let me deal with that.\"\n\nHe nods. \"I trust your word, Princess Siobhan. And I believe these lessons should begin as promptly as possible.\"\n\nThere's one thing left to put into place. I've had arrangements for weeks, long since I thought it would be me requiring the particular service I am now about to seek. \"Give me half of an hour,\" I tell him, \"then please meet me on the path toward the Grass Clan royals' quarters, on the border between the clans.\"\n\nHe bows deeply. \"I will be there.\" Jerome straightens and strides away, back from whence he came.\n\n**************\n\nNoelle\n\nBathing with Rhys is surprisingly uneventful, in relative terms. Once he's made it clear he's uncompromising on having me lie against his bare chest, I find myself dozing off in the warm water.\n\nI don't realize I've completely fallen asleep against Rhys until he's gently shaking me awake, pulling me up to stand with him and climb out of the tub, set deep into the shimmering marble of the floor. Rhys' hands are still steadying me by my elbows once I'm on solid ground, holding too tight.\n\n\"I'm fine, you can let go,\" I tell him. Whether I'm actually fine is irrelevant; in fact, the polished floor looks like a death trap for someone with slippery wet feet. Rhys seems to notice my reservation and holds my arms a moment longer, probably enjoying it. He lets go and I stalk away, turning to the sink before I notice Rhys walking naked to the open door to pick up a slip of paper waiting just outside. After having been skin to skin for so long, the thread in my chest tugs irritably at his distance and I resist the urge to smack myself. Any relaxation left over from the bath is gone. My body is betraying me in every way.\n\nRhys turns around as he reads the paper to himself, his face impassive. I find myself wondering again how those enchanted missives work, if not only by magic. Would they work outside of the Fae's borders? Could they reach another dimension?\n\nWhat if I could contact my family?\n\nRhys looks up from the letter as if he forgot I was there, standing naked in front of him. \"Right,\" he mutters. He reaches up into a high cupboard above the sink and pulls out two towels, draping one over my shoulders with his free hand and wrapping the other around his waist. \"You're to begin lessons with a tutor of Jerome's choosing tonight.\"\n\nI glance over his shoulder out the wide windows of the bedroom, displaying the darkness outside and the deep blue night sky. It's late, but I'm guessing lessons on how not to fuck up crucial matters of diplomacy can't wait. And, I realize with a rush of relief, it's probably better than whatever alternative nighttime activities Rhys had in mind.\n\nI pull the towel tightly around me and begin drying off, moving away from Rhys to shimmy it over my wet skin. He frowns but only says \"Hurry up,\" then stalks into the bedroom. The thread between us shivers and I try to ignore it.\n\nI take a quiet moment to think as I twist the towel over my damp hair. Before Rhys interrupted my thoughts by draping me in a towel, I was considering the range of the grass paper\u2014whitegrass, Rhys called it\u2014used to send messages here. I apparently can't leave here myself, but what about a letter from me? One sent with \"thought and intent,\" as he had said.\n\nNot being Fae myself, I imagine it wouldn't be possible for me to use the paper in such a way. Would Rhys be willing to help me send a letter to my family? The thought gives me pause. Granted, he's been a raging, possessive asshole, but only in regards to my own behavior and location. Would he have any reasonable reservations against sending a simple letter to the human world, telling them I'm alive?\n\nIn other words, how far past logic does his raging, possessive assholery run?\n\nAnd what are my other options?\n\n\"Noelle.\" Rhys' voice is a sharp end to my reverie. \"Come out here.\"\n\nI wrap my towel under my armpits and walk into the bedroom, where Rhys is fully dressed. A nasty little piece of me lashes out and I smirk. \"I'm not dry yet.\"\n\n\"That's too bad.\" Before I can react, Rhys tosses a bundle of blue fabric at me. \"Get dressed, sweetheart.\"\n\nI'm not your sweetheart. I bite back the words and pull the dress over my head. It flutters down to my feet. It's a light matte blue, but seems to be made of the same fussy fabric as the gold thing that now sits in scraps on the floor.\n\nI have nothing against dresses; I like them, even. I always\u2014used to\u2014wear them on the weekends, when I wasn't with my old-boys'-club programming team and could get away with being the least bit feminine. Now, though, the lack of something concrete on my hips and legs just reminds me of how vulnerable I am. How I cannot close myself off from anything, most of all from him.\n\nI push down the cynical tears threatening to rise and test my luck. \"Could I wear a pair of pants sometime?\"\n\nRhys gives me an odd look, like I've just asked him to manufacture the pants himself. \"We can discuss that later,\" he says.\n\nThere's a knock on the door. Rhys strides across the large room and opens it briskly, then freezes. \"Siobhan,\" he breathes.\n\nThe stately redhead steps into the room, barely giving Rhys a glance, and Jerome comes in after her, shooting an apologetic look at Rhys.\n\n\"Hello, Noelle.\" Her voice is gentle, steady. I've forgotten how much taller she is than I am, almost as tall as Rhys. She's wearing a set of well-fitted riding clothes, and I'm reminded again of my status as pantsless and small.\n\nI smile at her waveringly, beginning to feel relaxed again despite the obvious tension in the room. When Siobhan is here, Rhys can't touch me.\n\nRhys, who is in the corner by the door looking resentful. \"You're the one who's giving Noelle lessons?\" he mutters.\n\nSiobhan gives me a look that seems almost conspiratorial\u2014the type you'd give a friend to say can you believe him? She puts a smile on her face and turns to Rhys. \"Yes, I am. Jerome thought it would be best for the tutor to be someone with whom Noelle is familiar.\" Her tone is short. \"We also thought it best that the lessons are one-on-one.\"\n\n\"Of course, how else?\" Rhys nods.\n\n\"Meaning you and Jerome will leave.\"\n\nI stand perfectly still for a moment, trying to process what I'm hearing. She can't mean that Rhys leaves, right? That he exits the room, and I get a break, however brief, from his looming and patronizing and penchant for sexual assault?\n\nRhys seems just as disbelieving. \"That's a good one. You do understand how the Elixir works, do you not?\"\n\nSiobhan simply rolls her eyes. \"I've made arrangements.\" She reaches into a pocket of her jacket and pulls out a small glass bottle stoppered with a cork. Inside a small amount of clear liquid sloshes around.\n\nJerome gawks. \"I'm sorry, but that's not\u2014?\"\n\nI can't hold back my curiosity. \"It's what? What?\" I look from Siobhan to Jerome, utterly confused.\n\n\"You're absolutely right it is.\" Siobhan looks proud, and maybe a little abashed. She looks at me. \"Noelle, this is called a trench potion.\" She sloshes the liquid around inside and it seems to shimmer. \"It significantly dulls the effects of any illness or spell...including the adverse effects of the Elixir bond.\"\n\n\"It's illegal,\" Rhys says.\n\n\"It's absolutely essential,\" Siobhan retorts. \"It's only illegal because of times like these\u2014when you want to be rid of the effects of a spell or ritual that is considered immoral or inadvisable to reverse.\"\n\n\"It's also addictive,\" Rhys says, his voice growing darker. \"You're not giving that to Noelle, and you're certainly not giving it to me.\"\n\n\"I can\u2014\" I interject without thinking, but Rhys glares so deeply at me that my voice catches in my throat.\n\n\"It's addictive in large amounts over time, of course,\" Siobhan says. \"Not if it's used in controlled increments.\"\n\n\"I will not disgrace the Council like that,\" Rhys says finally.\n\nSiobhan visibly loses her temper, spinning to face Rhys head on. \"If you recall, the Council doesn't give a shit about you anymore, and certainly won't unless we come up with a way to help Noelle assimilate,\" she snaps. \"And she's not going to be very comfortable trying to learn anything with you breathing down her fucking neck.\"\n\nThere's silence for a moment as Siobhan leans back, regaining her composure as if she never lost it in the first place. Finally Rhys takes a heavy breath. \"Fine.\"\n\n\"Good.\" Siobhan holds the bottle out, and I take a moment to register that she's handing it to me. \"It's not addictive, Noelle. It'll simply dull the bond so that you're able to be apart from each other for a while. There may be a slight hangover afterward.\"\n\nSounds good to me. I gingerly take the little bottle, pulling the cork out and looking inside. \"How long do the effects last?\" I ask.\n\n\"Dose like that, maybe half an hour,\" Siobhan says. \"It takes less than a sip to be effective, and we need to make this supply last\u2014not to mention make sure there isn't any adverse effect. It'll be plenty of time.\"\n\nI nod and stare into the bottle. Rhys sighs, pressing his fingers to his dark brow. \"Go on, Noelle.\"\n\nI deliberately wait another moment before placing the bottle to my lips and tipping it back. The moment the first drop lands on my tongue I pull it away with a grimace.\n\n\"Oh right, and it tastes like shit,\" Rhys says. I glare at him weakly and his handsome face breaks into a wide grin at my reaction. \"That's a great face, sweetheart.\"\n\nBy way of revenge I thrust the bottle at him, hoping it stings his tongue as much as it's stinging mine. He swipes it from my hand and takes a sip, then coughs. \"Gods, that's bad. No wonder it's illegal.\"\n\n\"Alright, now that it's over with, you need to leave\u2014fast,\" Siobhan says. \"Both of you, out.\" She motions at Rhys and Jerome. \"Now!\"\n\nRhys casts a glance at me before turning to walk out of the room, Jerome on his heels. He steps into the hall, closes the door, and...nothing.\n\n\"Wow,\" I whisper. The tugging of the thread is all but gone, replaced by a gentle numbness at the center of my sternum.\n\n\"Feel good?\" Siobhan arranges herself in a chair by one of the large windows, and motions me over. I nod and come to sit beside her, still marveling at the feeling of, well, nothing. It's a distinct absence of sensation. It's almost exhilarating.\n\n\"I suppose we should get right into it then, since we haven't got much time,\" Siobhan says. \"Though I need to figure out what 'it' exactly is, I don't really have a lesson plan...\" She smiles at me amicably, and I let myself smile back.\n\n\"We can start with general customs, I think, and then branch out into more complex topics,\" she muses. \"History, some basic laws of magic...\"\n\nThat strikes a chord and I'm suddenly reminded of my earlier thoughts. Is it safe to ask? I fidget in my seat.\n\nSiobhan notices my discomfort and immediately grows quiet. \"Or we could just talk,\" she murmurs. \"You look like you might need that.\" Her words carry a weight. I know what he's been doing to you. All I can do is listen.\n\nWith the weight of her words comes immediate trust. I can ask her about the paper. Even if she refuses to help, she won't let anything on to Rhys. Here, she is my confidant, if nothing else.\n\n\"I wanted to ask you about the whitegrass paper, actually,\" I begin. It now sounds like an awfully trivial topic for someone who's just been offered a judgment-free ear. \"Do you know much about how it works?\"\n\nSiobhan gives me a strange look. \"A lot, actually. You're curious about how it travels, right? It's due to the properties of the whitegrass\u2014the plant is able to completely disintegrate part or all of its body. It's how it reproduces. It was engineered so that the disintegration could be controlled at will through simple magic. Do you know about thought and intent, the two facets of sending a message with whitegrass?\"\n\nI nod. \"Rhys told me,\" I murmur.\n\nShe looks surprised, but carries on. \"Those are controlled by micromagic, which harnesses the communicative power of the reproducing plant. Does that make sense?\"\n\n\"It seems to,\" I say.\n\n\"I can give you a book about it if you want,\" Siobhan says.\n\n\"I'd like that.\"\n\n\"I'll bring it to our next session.\"\n\nI bite my lip. \"Do you know...do you know how far the letters on whitegrass paper can travel?\"\n\nSiobhan's face immediately breaks into an expression of recognition. \"You want to contact your home, right?\"\n\nI lower my eyes, abashed at how quickly she seemed to figure me out. \"I do,\" I say. \"Very much.\"\n\nWhen I look up again, Siobhan's expression is soft. \"I don't blame you,\" she says. \"Our first lesson can be on the whitegrass, then, seems appropriate.\" Siobhan shifts closer to me in her seat. \"The short answer is, yes, in theory, whitegrass can be used to send missives between most parallel worlds. The paper still disintegrates, and then may pass through the 'border' between worlds in the presence of a portal. It's almost analogous to your theory of osmosis, I suppose.\"\n\nI smile gratefully at the comparison. Though it doesn't seem to be a very precise analogy, I can at least visualize it with something familiarly scientific to imagine. \"I think I understand.\"\n\n\"The thing is,\" Siobhan pulls her thick red hair over one shoulder, thoughtfully, \"making the portal is what's difficult. It must be placed in a location compatible with an area in the world you're trying to contact.\"\n\n\"Is it the same type of portal that brought me here?\" I'm full of questions now, barely stopping to consider the ridiculous nature of the question that a few days ago would have sounded like silly fantasy to my own ears. \"Did someone make that?\"\n\nSiobhan suddenly stiffens, pulling back from where she was leaning in beside me a moment ago. \"It would be a similar portal, yes, but not as big. I don't know much else.\" Her words are clipped.\n\nI frown in confusion, loathe to upset this woman who seems to be my closest and only ally. \"Sorry, is that rude to ask?\"\n\n\"No, no.\" Siobhan's tone is still short. \"I'm the one who should be apologizing, getting your hopes up like that. Portals are very complicated to make, and they take a lot of planning. It's not something you should count on happening anytime soon.\"\n\nI press further; it's probably a bad idea. \"But could you help me try? Maybe find someone who can do it, not even now, just once I've started fitting in here better?\"\n\nSiobhan stands. \"I'm sorry, Noelle. I don't think it's something we should even be discussing anymore.\"\n\nI rise to follow her as she crosses the room. \"The trench should be wearing off soon. We will resume your lessons in two nights. Be prepared to learn about the Elixir, I think it's good that you familiarize yourself with it.\"\n\nHer hand is on the doorknob when I chance touching her on the arm. \"Princess Siobhan, if I've said something to offend you...\"\n\nShe shakes her head and turns to me. \"Nothing. You've done nothing wrong, Noelle, alright? Do you understand?\"\n\nI don't believe her, and I don't understand, but I nod. She opens the door to reveal Jerome and Rhys on the other side, Rhys leaning on the far wall across from the door. Leave it to him to look stiff while reclining against a wall. Jerome stands beside him, and their conversation stops when the door swings ajar.\n\nRhys looks up. \"I trust the lesson was a productive one,\" he says to no one in particular. Siobhan doesn't respond.\n\n\"Yes, thank you,\" I say.\n\nRhys pushes himself off the wall, coming up to his full impressive height. His violet eyes land on Siobhan. \"I need to speak with you,\" he hisses.\n\nSiobhan rolls her eyes. I feel a rush of jealousy; she can get away with giving him what-for. \"Prince Rhys, you don't need anything.\"\n\n\"Humor me, Princess.\"\n\nSiobhan casts another glance at me, offering a sad smile. Her hand comes out as if to grasp mine, but she pulls back a second later. \"Make it quick,\" she tells Rhys. He nods and spins on his heel. She follows reluctantly behind and they disappear around a corner, leaving Jerome and me in the empty hallway.",
        "**************\n\nRhys \n\nI spin to face Siobhan as soon as we're out of sight. Her passive expression is infuriating.\n\n\"What do you need?\" she quips.\n\nWere I not so practiced at self-restraint I would slap her. Does she wish for me to spell it out for her like a schoolteacher? \"Where the hell did you even get it?\" I demand.\n\n\"I'm not going to tell you that, Rhys. Just trust that there won't be any repercussions. It's perfectly safe.\"\n\n\"Not so safe that you don't feel the need to hide it from me.\" In front of me stands my beautiful childhood friend, and she is eons away. \"I thought that every trench witch had been taken out for distributing that stuff. How can you tell me this is safe?\"\n\n\"Because of precisely that. If the lauded Prince Rhys\"\u2014her voice drips sarcasm\u2014\"has no knowledge of such goings on, who, then, is to know? For as long as I keep it a secret, that it shall be.\"\n\n\"There's a reason it's illegal, Princess, and it's not because the Councils hate fun,\" I snap. \"What will you say when my wife grows addicted to the shit? Or thinks that she can use it to fully overcome the Elixir? How can you stand there so calmly and offer her that pretty little bottle, knowing what some have become under its spell?\"\n\nSiobhan's green eyes narrow. \"Don't pretend at caring for your wife,\" she hisses.\n\nI'm taken aback suddenly, my chest tightening as soon as the words leave her mouth. \"How dare\u2014\" I cut off as my chest constricts further, and I realize that the pain isn't stemming only from my anger. The cord of the bond has returned in full force, and any tolerance I've built up for it has promptly disappeared after its short absence. \"Damn,\" I gasp.\n\nThrough my squinted gaze, I can see Siobhan glaring at me still. \"What, did something finally leave an impact?\" she snaps, not realizing my predicament.\n\n\"Yes, in fact\u2014the letdown from your little potion,\" I grunt. My hand rubs at my breastbone, trying to soothe the ache.\n\n\"Ah.\" Siobhan makes a sound of recognition, her tone utterly devoid of sympathy, just as she promised me barely a day ago. \"Go back to Noelle, Rhys. Try not to fucking bruise her again.\"\n\nShe turns and walks down the corridor, very pointedly in the opposite direction of whence we came. I'm left to hobble back around the corner, where I find Jerome fussing over a whimpering Noelle. The ache steadily subsides as I grow closer.\n\nI'm struck by her tiny form, curled in on herself as she massages the center of her chest. She's trying to be strong. Pushing Jerome aside, I lean over her, waiting for our proximity to allow her pain to end.\n\n\"I'm sorry for leaving you alone, sweetheart.\" Will she find comfort in my voice, or will it repulse her? Siobhan's remark rings in my ears. Don't pretend at caring for your wife.\n\nNoelle responds with the latter. \"I'm fine,\" she says shortly. Her small hands come up to shove at my arms, as if she thinks she can so easily push me away.\n\nI resist the urge to pull her against me, and instead give her an inch of space. \"Little one, do you feel better?\"\n\n\"I feel fine,\" she repeats. Now that she's recovered, she's back to being adorably irritable. I finally place my hands on both sides of her face, making her look up at me with those wide eyes.\n\nShe fixes me with a weak glare. \"How was your lesson?\" I ask.\n\n\"Fine. We talked about whitegrass paper.\"\n\nAgain with the paper. I chuckle, then; since she seems to be relatively forthcoming, I chance an offer. \"Would you like me to just get you some of your own?\"\n\nShe raises her eyebrows. \"You'd do that?\"\n\nWouldn't I? \"Of course, if it's something you'd like.\"\n\nI'm rewarded with a hesitant smile. \"Thank you,\" she murmurs.\n\n**************\n\nNoelle \n\nGod damn him. One moment he's grabbing me hard enough to bruise and the next he's doting and offering me magic paper. He doesn't seem to see a problem with the harsh inconsistency, and neither does the bond, which hums peacefully as he cups my face in his hands. I'm reminded of my mother's words from years ago after my first unpleasant interaction with a catcaller on my way home from school, You don't owe anyone a smile.\n\nI don't owe him a smile. I owe him a hard kick to the face and not much else. But the bond is functioning as some sort of shitty Stockholm syndrome, thrumming at my sternum with a quiet he was kind to you just then, maybe he's not so bad.\n\nI force myself to pull away from his grasp. He frowns, but doesn't retaliate. Did Siobhan say something to him? What could she possibly have said to make this brat of a prince listen? Hey, maybe don't rape your wife. Yeah, totally something like that.\n\nRhys rubs his temple and sighs. \"Are you tired?\"\n\nAs if in response, my stomach growls. I feel myself blush, but Rhys just smiles. \"Alright, food first then.\"\n\nWe end up sitting a healthy distance apart on the bed, picking at a platter of fresh bread and cheese brought in by a servant. Rhys pushes a few more questions about my time with Siobhan, and I give vague answers, keeping our discussion about crossing portals, and Siobhan's ensuing reaction, to myself.\n\nMy own curiosity gets the best of me and I ask, \"What's the deal with the trench potion? Is it as dangerous as you said?\"\n\nRhys scowls. \"You heard what I said. It's addictive, and unpredictable. Siobhan should have known better than to fuck with it, yet here we are.\"\n\n\"You took some, though.\"\n\nRhys sighs. \"I've tried it before,\" he mutters reluctantly. \"I know how it affects me, so I wasn't going in blind. You, on the other hand...\"\n\n\"Thank you for...letting me use it anyway.\" I hate that I'm thanking him for his permission, but what else was it, really? If he had really wanted to prevent me from taking the potion, he could have, easily.\n\n\"Don't thank me. And don't get any ideas, either, about using it to try to leave. If you use it for too long in great increments, the addiction and withdrawals are said to be hell. And if you use it to try to cross a portal while under an Elixir bond, the effects are debilitating and irreversible.\"\n\n\"Sounds pleasant,\" I mutter.\n\nRhys looks at me oddly and then chortles, shaking his head. \"This sardonic wit of yours is beginning to grow on me, I have to say.\" I'm about to reply with something snarky, but then stop myself, not wanting to give him the satisfaction.\n\n\"I'm tired,\" is all I say instead.\n\nRhys' smile fades only slightly. He's looking at me...endearingly? \"Then let's get you to bed,\" he murmurs. He seems to stop and think for a moment, then nods to himself and walks toward a bureau sitting against one wall. He pulls out a ball of filmy white fabric and tosses it to me. I let it unfurl. It's a nightgown, thin and minimalist but not skimpy. I quickly pull my dress over my head and replace it with the gown, noticeably under Rhys' watchful eye.\n\nHe smiles but doesn't approach me. \"I have some routine business to take care of before the night is over, so I'll be working.\" He gestures to a desk in the corner. \"Sleep, Noelle.\" From the other end of the bed he pulls back the covers and I wriggle under them, not in a mood to refuse his help. He waves a hand at the candelabras beside the bed once I lie down and they go out, and I doze off to the thought that he must be able to see in the dark, by some sort of magic.\n\n**************\n\nI wake when the early morning sun begins to stream through the windows, turning to find Rhys beside me, soundly asleep. I stare for a few moments, fascinated by his slumbering form. The stiff lines of his face are softened, giving him an almost boyish look that's complemented by his dark curls spilling over the pillow. His full lips slightly parted, he breathes deeply, his brow occasionally twitching, maybe in a dream.\n\nHe sleeps like someone who needs it.\n\nI refuse to let myself even consider the fact that I've been too hard on him. That's not the case, it's not even entertainable as a thought after what he's done to me. I won't forgive him. But there are parts of this situation that are no more his fault than they are mine, namely the whole falling-through-a-portal debacle. And last night he seemed almost...kind? By Rhys standards, at least. Even though he doesn't respect me, he respects Siobhan, and whatever she said to him last night apparently had a small effect.\n\nOr I'm imagining it, and it's the fucking bond talking again. I don't know whether I'd like that better or worse than finding some good in him for real. Either way, it's much easier not to hate him when he's sleeping like a baby angel beside me. Baby fairy. Whatever.\n\nI sit up in bed, slowly, trying not to shift the covers too much. I pause for a moment, observing Rhys, and relax when he seems to be just as unconscious as ever. I slide out of bed, the pale wood boards of the floor uncannily warm under my feet.\n\nOn the dresser near the bathroom sits a small ivory book, shimmering faintly in the light of the morning. It's vivid enough that I think I would have noticed it had it been there last night, but other than its color and shine it looks like any sort of bound notebook you could buy at a craft store. I lean over the dresser to read the word etched in iridescent ink on the cover.\n\nNoelle. \n\nIt's mine, it's my paper. I gently pick up the book and open it up, finding blank pages of the same tawny paper I've seen Rhys use on several occasions. Each piece sits loosely in the binding, meant to be torn out and sent off. The notebook is nicer than the pads of paper Rhys uses. I wonder how he had it delivered so quickly overnight.\n\nHe's not getting nicer, he's buying you off. The voice in my head sounds off before I even have time to consider the former. It's only been what, three days? Only manipulators change their tune so quickly, and so often.\n\nEven so, I pet the book admiringly as I flip through its pages. What I really want to do is pull one out and dismantle it, see if there's anything on the macro level that makes it tick, but each soft sheet is so pretty I barely want to touch it more than necessary.\n\nI place the book back down on the dresser, vowing to come back and inspect it more later. Inside a closet I've seen Rhys get into I find a pastel yellow dress that's less gauzy than the others he's put me in, made of a cotton-like material. I pull my nightgown off, and, after establishing that there are no pants or undergarments to be found in the drawers, pull on the dress and button it up the front. The neck of the dress dips to just below the line of my armpits, but is well fitted enough to avoid excessive cleavage. I wonder where he got all of these dresses from. Certainly not borrowed from any of the Fae servants or courtiers I've seen; the women are all nearly as tall as Siobhan, and many not quite as slim.\n\n\"That looks nice on you.\" Rhys' voice makes me jump. I turn to see him lying on his back against the pillows, his arms folded behind his head. \"Wear yellow more often.\"\n\nSo close. He sounded almost sincere for a moment, appreciative, before he started making demands. I narrow my eyes. \"Thanks for the advice, personal shopper.\"\n\nRhys' brow furrows, and where I'm expecting anger, I see only disappointment. Hurt, even? Can't be.\n\n\"Are you going to sulk at a compliment? Would you please wear yellow more often?\" He assumes his usual exasperated tone, rising from the bed. It's only now I notice that he's completely naked. A blush comes on sharply.\n\nI swallow. \"Only if you put on some clothes. Any color.\" I force a smirk and am taken by surprise when he chuckles, closing the distance between us and reaching out to gently grasp my chin.\n\n\"You've seen it all before, little one.\"\n\n\"Not willingly.\" The words come out before I think about them, with all their implications. Oh well, it's the truth.\n\nRhys steps back. \"I haven't been very gentle with you.\"\n\n\"No, you haven't,\" I blurt, shocked into speech by his sudden admission. He just nods, looking thoughtful. Where anyone else would avert their eyes in shame, though, his remain trained on me. This isn't exactly the most conventional of apologies, if it is one.\n\nRhys sighs. \"I'm sure you understand\u2014even if you pretend not to\u2014that as husband and wife in a royal union, there are certain...duties that are expected of us to perform.\"\n\n\"I'm beginning to understand that as a cultural thing,\" I allow.\n\n\"As a Fae prince, and one hailing from a wealthier clan, I was never taught not to simply take what I wished,\" he continues.\n\n\"That much has been obvious.\"\n\nRhys looks pained. \"Fault me for trying, will you, little bird? I'm attempting to explain myself. I never said it wouldn't be shoddy.\"\n\nI sigh and hold my tongue.\n\nRhys continues. \"It never happened to occur to me that taking what I wished did not necessarily extend to people.\" He hesitates. \"Humans especially.\"\n\n\"Because you see us as inferior?\"\n\n\"Because that was the only way in which I was taught to see you. Other than a few words here and there from the high Priest about tolerance, my education in regards to humans was that of a lesser race, those who could not use magic, who were smaller, weaker.\n\n\"In the past few days...not without help...I have come to see that perhaps this teaching was misleading. The actions of the Council now seem, for lack of a better term, archaic.\"\n\nNo fucking shit. \"Did Siobhan make you say all this?\"\n\nRhys starts forward for a second, and I think he's about to grab me, but he stops himself, steeling his jaw. Instead, he strides across the room to his chest of drawers, pulling out a pair of pants and sliding them up his legs. \"Princess Siobhan, imp, and no, she did not,\" he says, looking offended. \"Granted, some of her preaching from the past days has rubbed off on me, but I was not put up to this.\"\n\n\"Oh.\" I'm not sure what else to say, and Rhys doesn't seem like he has much left in him. \"Um, thank you. I think.\"\n\nThis time Rhys closes the distance between us, and before I can cringe his hand is on my cheek. \"I'm going to be gentler,\" he murmurs, \"but...I need your help.\"\n\nMy help? I can't imagine the sort of \"help\" it would take for someone to un-learn Rhys' particular brand of entitlement. \"What kind of help?\" I ask.\n\nHis brow furrows, and he runs a hand through his dark hair. He seems to be...conflicted, almost? Like he's wrestling with the best way to phrase something. \"Help, in the sense that you humor me,\" he finally says. \"I am beginning to sympathize with your situation. You didn't ask to be a part of this world, and you do not have an appreciation of the Elixir as I do. I've placed too much of a burden on your shoulders in that sense.\"\n\nI nod silently. He continues. \"I had convinced myself that you would come around eventually, through my own...insistence. I understand now that this is not the case. Your upbringing, your convictions, are very different from mine, to say the least.\"\n\nI can't help but scoff at that. \"Yeah, you could definitely say that.\"\n\nHe nods, tolerating my sarcasm. \"So, in humoring me, I ask that you sympathize with my own situation. That you allow us to come to a mutual understanding, together. I know you are not fond of me, and you know that I would prefer this bond not exist.\"\n\n\"You're saying you want...some sort of a compromise,\" I infer.\n\n\"For lack of a better term, yes.\" This is the first time I've seen him struggle for words so. \"I promise to be gentle with you, and to respect your wishes to the best of my ability. In return, I ask that you do not fight the natural tendencies of the bond, and that you teach me how to treat you as you wish to be treated.\"\n\nHis words still smack of entitlement, of his apparent difficulty in taking on anything remotely challenging to his own worldview...but it's kind of a start. And as much as I hate to say it, I'll take what I can get at this point. I stare into space for a moment, trying to look like I'm thinking.\n\n\"Alright,\" I say finally. \"If you promise to be gentle, and respect my boundaries, I promise that I'll do my best to teach you how to do it.\" I bite down on the inside of my lip. \"And to try to do better with the bond,\" I mutter.\n\nRhys' face breaks into a smile that looks almost relieved. \"Thank you, Noelle,\" he says. He holds out his hand to me, and I know that once I take it, it'll be my word to hold up my end of our bargain.\n\nWhen my hand slips into his, he leans down and presses his lips to the tips of my fingers. \"To our new marriage vows,\" he says.\n\nWell, when you put it like that. The thread between us hums happily, perfectly slack. I feel like can breathe better than I have in days. \"To our marriage vows,\" I repeat. And to hoping they'll catch on.\n\n**************\n\nSiobhan\n\nIt's not a good idea to be where I am right now, but considering the circumstances, I don't have much of a choice. I lift my hand and knock three times on the light-dappled wooden door before me, the hollow sound a startle to the pristine silence of the surrounding forest.\n\nA few blinks pass before the door swings in to reveal a stooped, elderly woman standing just beyond the threshold. \"Lovely Siobhan,\" she rasps. \"Do come in.\"\n\nI step into the squat house. The inside is brightly lit, not the sort of atmosphere you'd expect from a Fae-witch's cottage in the deep woods. Best to keep up appearances, I suppose, when you're peddling the sort of thing she's got in her larders.\n\n\"Hello, Duana.\" I reach into my hip bag, pulling out a heavy satchel. \"I have the rest of your payment.\"\n\n\"I've told you already, Siobhan, I don't want your money.\" Duana wags a finger at me, and I smile.\n\n\"I want you to have it, old lady,\" I insist, and she smirks at the endearment. \"You've done so much for me already. It's the least I can do in return.\" I set the satchel of precious opals down on her table and push it toward her. \"Please, let me do this, if only to assuage my own guilt.\"\n\nDuana is mollified by my transparency, as she always has been. The old woman hates a fa\u00e7ade. After her many years of working as the head chemist of my Opal Clan, it's understandable why she'd wish to retire far away from stuffy nobles and putting-on-airs. She rolls her misty grey eyes and sweeps the satchel off the table, opening a cupboard above her head and shoving it inside. \"Speaking of your guilt, Siobhan, how is the human?\"\n\n\"As well as can be expected.\" I cast my own eyes down, wringing my hands.\n\n\"Did my trench perform well?\"\n\n\"Of course it did. We'll be using more of it soon.\"\n\nShe nods. \"It makes my bones ache to think of a human woman bound in that way. Are you ever going to tell me why you feel so very indebted to her? Seeking out a potion such as the trench is a bit more than simply going out of your way for a friend in need. You know what could happen if you were found out by the Council.\"\n\nMy jaw tightens; this was the one question I'd hoped she wouldn't ask. \"I feel...responsible for her situation,\" I mutter vaguely. I know it won't be enough for Duana, who has nothing to lose by pressing for more information.\n\nTrue to form, the haggard Fae-witch leans closer to me. \"And why is that, Siobhan?\"\n\nI press the pad of my thumb into my palm, wishing to be anywhere but here. I easily could spin a lie, or simply walk out of the cottage. Duana could do nothing; she wouldn't want to. She'd lose her respect for me and move on. But I've been selfish enough for a lifetime already.\n\nI breathe in deeply, setting my jaw. \"Because I am, Duana,\" I say. \"There's nothing I can ever do to make up for what I've done to her, but I have to try. The portal above the Elixir was my doing. Noelle is here because of me.\""
    ],
    "authorname": "HibouBleuMD",
    "tags": [
        "noelle",
        "rhys",
        "fae",
        "fantasy",
        "non-con",
        "siobhan",
        "size difference",
        "ritual",
        "bond"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/marriage-of-the-fae-ch-04"
}