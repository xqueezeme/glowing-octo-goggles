{
    "title": "Black Velvet",
    "pages": [
        "Author's note: this story has been re-edited to bring it up to my current standards as part of an effort to make Ebooks. It features improved editing, grammar, and punctuation. Please see my bio for more information.\n\nCHAPTER 1: INTO DARKNESS\n\nJules sat in his crash couch as he fiddled with the bulky, black combat armor that he was wearing over his two-piece suit, rolling his shoulders as the heavy ceramic plating settled. He was already going to weigh thirty percent more than usual when they touched down, he wasn't too thrilled about having all of this extra weight to lug around on top of that. He could feel the engines of the dropship making the hull vibrate beneath his feet as it made its way down towards Borealis, the arid planet visible through one of the small portholes in the hull of the troop bay.\n\nIt looked so hostile, even from a distance. The majority of its surface consisted of barren desert, with average temperatures that rivaled the Sahara and a crushing gravitational pull of one point three Earth standard. The only life that he could see was confined to the lakes, the patches of blue water shimmering in the glare of the world's twin suns, like country-sized oases. They were massive, making the Great Lakes of the United States look unimpressive in comparison, and around each one was a band of greenery. Thick, dense rings of tropical jungle encircled each and every lake like the walls of a fortress, trapping moisture to create a sort of micro-climate within their bounds. He could see the way that the rain clouds seemed to cluster around them, each lake having its own weather system that scarcely spilled beyond its borders. These were the Borealan territories, each one spaced hundreds of miles apart, what passed for states or countries on this alien world. As he gazed through the glass, he wondered which of them would be his destination.\n\nHe felt somewhat out of his element. Traipsing around in alien jungles was not part of his job description, but it was his responsibility to investigate and then make a recommendation. The inhabitants of the Araxie territory had made an official request to join the Coalition, and Jules had been sent by the Security Council to evaluate them and to ensure that they could meet the commitments that membership entailed.\n\nThe multi-species alliance known as the Coalition had been formed to tackle the hurdles of interstellar security. Coalition space now made up a roughly one hundred light-year bubble, with four member species including humanity, and at least two that had recently applied to join. The United Nations represented the human colonies, the UNN being their military branch, fielding a vast navy that usually took the brunt of the defensive responsibilities. Along with various other member species were the Borealans, the inhabitants of the planet that Jules was currently speeding towards. They were a feline species, hardy and well suited to their harsh environment, with a notoriously bad temperament. At eight feet tall and weighing around seven or eight hundred pounds on average, they were monstrous from a human perspective, the high gravity of their home planet imbuing them with proportionally impressive strength. Their innate resistance to injury and their repertoire of natural weapons like vicious claws and sharp teeth made them excellent shock troopers, making Borealan packs a common sight on the front lines.\n\nBorealis was not a unified planet, however. They had no equivalent of the United Nations, and so the Coalition had to treat with each territory on an independent basis. The largest and most well-known of the territories was Elysia, they had the closest ties to the Coalition, and their territory provided the majority of the Borealan troops that fought alongside UNN soldiers. They were the most influential and the most technologically advanced territory on the planet, but even so, they had only recently discovered gunpowder when the UNN had made contact with them. Now, they had access to modern ships and weapons, trading in goods and technology with the rest of civilized space. There was some debate as to whether changing the course of their history in such a manner had been wise or even legal, but a rampaging Bug fleet would make no such distinctions.\n\nBetelgeusian hive fleets harassed the outlying planets on a regular basis, attacking indiscriminately with their biomechanical vessels, their ruthless life cycle demanding that they attempt to seize and colonize any habitable planets that they could reach. It made sense for the different species in this arm of the Milky Way to band together against the common threat.\n\nA hiss of static came through on the intercom, the pilot's voice echoing through the troop bay.\n\n\"We should be hitting the atmosphere shortly, secure your harnesses, and prepare for landfall. Things might get a bit bumpy.\"\n\nJules strapped the harness across his chest, pulling it tight, glancing over at the alien who was seated across from him. She was an Elysian, obviously female, her sparse clothing leaving little to the imagination. She was sitting in one of the specially designed seats, larger and reinforced for use by her kind, her yellow eyes fixed on the window as she waited patiently for planetfall. At about eight feet tall, her round, furry ears would have brushed the ceiling were she to stand at full height.\n\nMost Elysians had pale skin and rusty hair that bordered on orange, and this female was typical of her territory. Her ginger fur was striped with faded markings like those of a tiger, and her exposed skin was pale and smooth. Unlike their Polar cousins, the Borealans who lived in the more temperate equatorial regions were not fully furred, their coats were confined to their forearms and their lower legs to give the impression that they were wearing fuzzy elbow gloves and knee socks. There was hair on their heads and on their long tails, but the rest of their bodies were naked, much like humans. Their body plan was similarly humanoid, it was only the digitigrade legs ending in paw-like feet, and the four-fingered hands tipped with wicked claws that gave them away. Their faces bordered on the feline, with a pink nose that reminded Jules of a cat, but their features were not so alien as to be off-putting.\n\nThis one was a Ranger, so he had been told, Elysians who lived primarily in the jungle band of their territory, and who made excellent guides and hunters. She had joined him on the jump carrier up in orbit, a massive UNN ship that ferried troops and supplies across interstellar space, but she hadn't said much so far. It seemed that she had traveled from Elysia to the carrier upon special appointment by the Patriarch, the Alpha of Alphas, and the leader of her territory. The Patriarch claimed that he wanted to provide a qualified guide in order to ensure the safety of the expedition, but Jules suspected that her appointment was as much about keeping tabs on the mission as ensuring its success.\n\nHer orange hair was cut short in a bob, practical, and he noted that her skin was covered in faded scars in many places. The aliens lived packs not dissimilar from wolves, and they fought for their social position using their claws, brutal bouts that left them bloody and scarred. It wasn't as bad as it sounded. The resulting wounds were trivial by their standards, but never the less, Jules found his eyes drawn to the curved talons that protruded from the ends of her furry fingers. They looked like meat hooks.\n\nShe wore primarily form-fitting, brown leather that clung to her figure, it looked tough and durable. Her top was comprised of a vest that fought to contain a pair of weighty breasts befitting her exaggerated stature, and below it, she wore a pair of shorts that ended at her knees. Her midriff was bare, her muscular abdomen on display, and around her wide hips were various belts from which pouches and containers dangled. It looked as though she was carrying all of the tools and supplies that she needed on her person. She wore no shoes, preferring to go barefoot, the claws on her toes scraping on the metal deck. Her tribal getup was decorated with beads and feathers, much in the same style as the jewelry that she wore. Pendants made from precious stones and shells hung around her neck, and colorful plumes from alien birds protruded from her hair. It was all obviously handmade, but that was no dig against its quality, the care and detail that had been poured into every bracelet and stitch made his own clothing seem synthetic and bland in comparison.\n\nThe centerpiece of her outfit was the fur cloak that she wore, the strands of hair catching the light, refracting and glittering with a mesmerizing iridescence. It was rainbow spider pelt, a giant arthropod that haunted the Elysian jungles and whose coat was prized for its beauty. Jules had read that hunting one was a rite of passage for the Rangers, proof of their skill and bravery.\n\nDraped across her chest was a kind of bandoleer, its leather loops threaded with massive bullets in brass casings that were designed to be fired from the enormous rifle that was resting against her shoulder. It was as long as Jules was tall, a primitive but devastating weapon that fired a single slug at a time, comparable to what one might have seen on a battlefield during the nineteenth century back on Earth. While the Elysians had access to the standardized railguns and plasma rifles that the UNN supplied, they might not be available to everyone, or perhaps this individual simply preferred to use more traditional weapons. Much like her clothing, it was clearly made by hand. The wood was lovingly engraved, inlaid with metal reliefs that were decorated with scenes of hunting, as much a piece of art as a simple gun. As primitive as it was, he didn't fancy being on the receiving end, those bullets looked large enough to put down an elephant.\n\nShe looked so out of place amidst the bare metal and the exposed wiring of the dropship, yet this environment was not new to her. She was not some barbarian, staring slack-jawed and marveling at the magical iron bird in whose belly she was riding. It had been six or seven years since the Borealans had joined the Coalition, and if she was as old as she looked, then the existence of aliens and the prevalence of their technology might have been the status quo for most of her adult life.\n\nThe other occupants of the dropship were all Marines. Three of them were spaced out around the troop bay, fiddling with their tablet computers and checking their weapons. They wore Navy-blue uniforms beneath their black body armor, and each one was armed with an XMR configured as a railgun. The modular rifle platform was the standard-issue firearm of the UNN, made from black polymer, the barrels lined with the telltale copper-colored rings. It could be configured by the user to perform various roles, and it could be scaled up for use by the Coalition's larger members.\n\nThese were not your average Marines, however. They were scruffy, and their uniforms were not up to spec. Back on the carrier, everyone had been prim and properly groomed, the Marines had looked just the way that they did on the recruitment fliers. These guys had rolled their sleeves up all the way to expose tattoos and scars, two of them foregoing their shoulder armor entirely. Another had let his beard grow out, and he wasn't wearing a helmet at all, preferring a faded green bandanna and a pair of dark sunglasses. Much like the Ranger, they had trinkets and small decorations made from beads and feathers attached to their clothes in places. They had a few additions made from leather, one of then sporting a bandoleer that had been modified to hold magazines, and one of them even had a Borealan-style engraving on his chest-piece. These guys weren't fresh off the boat. If Jules had to guess, they had been deployed to Borealis for a long time. Some of those scars looked suspiciously like claw marks.\n\nThe dropship lurched as it entered the atmosphere, Jules reaching down to grip his seat, his knuckles white and his eyes wide as the vessel began to shake. He glanced at the Marines, and none of them seemed concerned, the one with the bushy beard wasn't even strapped in.\n\nWhen he turned his eyes to one of the windows, he saw that flames were licking at the hull, the nose of the craft burning as the friction of reentry blasted it with searing heat. The blackness of space slowly gave way to a deep azure, the ship leveling out, and the vibration fading as it began to glide towards its destination on its stubby wings.\n\n\"Is all of this firepower really necessary?\" Jules asked once he was able to hear his own voice over the noise. The bearded Marine slammed a magazine into his XMR's receiver with a click as if to make a point, locking it into place as he grinned across the bay from behind his opaque sunglasses.\n\n\"Never been on a Borealan safari before, Mister Lambert?\"\n\nJules shook his head, his combat helmet shifting with the movement. He reached up to straighten it as the Marines exchanged amused glances.\n\n\"Araxie is uncharted,\" the bearded man elaborated, \"we don't know what kind of critters we might encounter down there. Not to mention the fact that the locals might not be as friendly as they make out.\"\n\n\"Better to have it and not need it, than to need it and not have it,\" the one with the engraved chest plate added. Jules inspected the relief more closely, noting that it portrayed the same insignia that was sewn into the patch that the man wore on his sleeve, but larger and more stylized.\n\n\"I'm Simmons,\" the one with the beard said, then he gestured to the man with the decorative chest-piece who was sat beside him. \"This is Edwards, and that over there is Velez.\" The third man waved to Jules with a gloved hand, his tan skin covered in colorful tattoos where it was visible on his arms and his neck. \"It's our job to make sure you don't get eaten.\"\n\n\"So...we don't know anything about our destination?\" Jules asked.\n\n\"She does,\" Simmons said, pointing his thumb in the direction of the Ranger. She turned to look at them, seeming somewhat annoyed that they were involving her in the conversation.\n\n\"The Araxie are an elusive people,\" she explained. Her voice was gruff and husky, yet distinctly feminine. \"We know only that they inhabit the dense jungles of their territory, and that they are seldom seen beyond its borders.\"\n\n\"But you can guide us through the jungle?\" Jules asked.\n\n\"Maybe,\" she replied with a shrug, shifting the weight of her weapon as it leaned against her. \"I am familiar with Elysian jungles, but Araxie is not Elysia. The terrain will be subtly different, there may be new breeds of animals and unknown plants. The territories are as islands on an ocean of sand, separated by natural barriers for millennia. I cannot say what we might find there.\"\n\n\"So, why do you think they're coming out of the woodwork now?\" Jules continued.\n\n\"Trade with aliens has made Elysia prosperous,\" she said, \"now other territories seek to expand their influence. They want technology, weapons, powerful allies.\"\n\n\"Well, it's not as simple as just signing a piece of paper,\" Jules continued. \"If they'll be permitted to join the Coalition or not depends on several factors. For example, they have to commit a certain percentage of their gross domestic product to defense spending, and they'll be required to provide troops or material support of some kind for the war effort. They must commit to inter-species cooperation, work towards integrating their society into the interstellar community, and pledge to respect the sovereignty of their neighbors. Then the Security Council has to vote on it, of course, and all of the different representatives have a say. I'm here to evaluate whether they can live up to those commitments.\"\n\nNobody asked any further questions, perhaps they weren't fans of politics, and so Jules sat back in his seat and went quiet as the dropship descended towards the ground.\n\n\"Have you guys spent a lot of time on Borealis?\" he asked, the silence getting uncomfortable after a few minutes.\n\n\"Yeah, you might say that,\" Simmons replied. \"We must look pretty different from the boys in blue that you met on the carrier.\"\n\n\"Yeah, they were a little more...uniform,\" Jules replied.\n\n\"Borealis is a tough place, it's hot, high gravity. Command doesn't pay much mind to enforcing dress standards as long as we do our jobs properly, and UNN uniforms don't exactly breathe too well.\"\n\n\"The locals like to decorate their gear,\" Velez added. \"They're fond of engraving, damascening, jewelry, things like that. You spend enough time with the mad cats, and you'll pick up some of the local customs.\" He brandished a sidearm, Jules recognizing it as a modular handgun, its tactical black finish coated in some kind of decorative enamel that had no doubt been applied by the aliens. Velez noticed that Jules' eyes were wandering to the knitted scars on his forearms. \"Another local custom,\" he explained with a toothy grin. \"Borealans tend to get physical when you piss 'em off, but once you start to understand how they think, they're easier to deal with than you'd expect.\"\n\nThese Marines certainly seemed to have adapted to their environment, and Jules was starting to suspect that those who could not adapt would be taking the first transfer off the planet that they could get.\n\nThe dropship hit a pocket of turbulence, Jules gripping his seat again, peering out of the nearest window as the vessel banked and weaved to shed velocity. He could make out foliage now, the canopy of a vast jungle zipping past far below. The bands of greenery that encircled the lakes had looked deceptively small from orbit, but now he could really appreciate their sheer size. It was like flying over the Amazon rainforest. As they dropped lower, the jungle seemed to extend infinitely in every direction.\n\n\"I don't suppose they'll have a landing pad ready for us?\" Jules asked apprehensively, and Simmons just laughed. \"Do we even have a destination?\"\n\n\"We're gonna put down in the nearest clearing, and then we're gonna make our way through the jungle towards the coordinates that we were given,\" Edwards explained.\n\n\"So how long will we have to spend in the jungle?\"\n\n\"We have enough supplies for a few days,\" the Marine replied. \"Hopefully, it won't take that long.\"\n\nThe dropship circled for a while, the pilot searching for a place to land amidst the thick jungle canopy. He finally found a suitable clearing, the thrusters on the belly of the vessel flaring as it hovered, the landing gear deploying with a clunk as it began to slowly descend. Jules watched the trees rise up to engulf the vessel through the portholes, casting them into shadow as the canopy blocked the harsh rays of the twin suns. There was a tremor as the ship touched down, and then the troop bay was filled with movement. The three Marines rose from their seats, slinging large rucksacks over their shoulders and collecting their gear. The Ranger stood at full height, moving towards the landing ramp as she waited impatiently for it to open.\n\nJules fumbled with the clasp on his harness as he freed himself from his crash couch and made to join them. The ramp began to open with a hydraulic whine, the sliver of light growing as the relatively dingy bay was illuminated, and then he reeled as a wall of heat hit him. It was like opening the door to an oven, hot, humid air that carried the alien scents of the jungle flooding the bay. Immediately, he began to sweat, already regretting his choice of attire. His companions didn't seem bothered by it, this was just a regular day for them. They hadn't just spent several weeks on a climate-controlled jump carrier.\n\nHe watched as they descended the ramp one by one, the Ranger following after them, her hair and the short fur on her tail and forelimbs blown by the idling engines. Jules was almost afraid to leave the confines of the ship, but he didn't have a choice, slowly making his way towards the ramp. It only seemed to grow hotter as he left the bay, it was difficult to breathe at first, the heat searing his throat. As he set foot on the planet and left the artificial gravity field of the dropship behind, his legs very nearly buckled, Jules stumbling as what felt like two bags of sand were deposited on his shoulders. The gravity was nightmarish. He leaned over with his hands on his knees, trying to catch his breath. They had warned him about this, the doctors back on the carrier had made him undergo a physical before they would even let him set foot on the planet, but their warnings hadn't done it justice. The armor that had already been uncomfortably heavy now felt like lead weights, just standing up was a feat of athleticism.",
        "\"You'll get used to it,\" Simmons said, looking back over his shoulder. \"Just take it easy, let us know if you need to take a break.\"\n\nNo wonder the Marines were so ripped, just moving around on the surface of Borealis was the equivalent of a strenuous workout. What he had first dismissed as machismo was now revealed to be a product of their environment. They weren't gym rats, their muscles were a result of the crushing gravity. He couldn't imagine living here long-term the way that they did, he had only been on the surface for a matter of seconds, and he already found himself counting down the minutes until the assignment would be over and he would be allowed to leave.\n\n\"What's our heading?\" Edwards asked, Velez lifting a wrist-mounted computer and tapping at the touch screen with his gloved fingers.\n\n\"If we go due North from here, then we should reach the coordinates that they gave us before nightfall.\"\n\n\"We came down pretty close then, that's good. I didn't fancy spending the night in the bush.\"\n\nThere was a gust of wind, the dropship kicking up dust as it began to lift off, Jules stumbling forwards to get clear of it as it rose into the air. The fern-like plants that carpeted the ground blew like waves on the surface of a lake, the treetops rustling and shaking as the ship angled its nose upwards and fired its main engines. Jules shielded his eyes against the glare of the suns as he watched it climb into the sky and vanish, the glint of its metallic hull lost in the haze. Well, there was no going back now...\n\n\"Stay close,\" the Ranger said, Jules nearly jumping out of his skin as he turned to see her standing a foot away from him. He had to crane his neck to look her in the eye, the top of his head scarcely reached her bust. \"The Patriarch has tasked me with keeping you alive, so do not wander.\"\n\n\"I hadn't planned on it,\" he mumbled, her yellow eyes meeting his. They looked like a cat's eyes, the pupil a vertical slit. Her furry ears swiveled like a pair of little radar dishes, tracking the sounds of the forest around them, her pink nose twitching as her striped tail waved back and forth idly. Her senses were probably many times more sensitive than his own, he could see the benefit of having one of these aliens as their guide.\n\n\"We shouldn't waste time if we want to make it to our destination before sunset,\" Simmons said, waving his comrades forwards. These guys didn't seem to strictly adhere to the rank structure that Jules had become accustomed to during his stay on the carrier, but Simmons called the shots, he was obviously the squad leader.\n\nThe Ranger left his side and took point, her rifle clasped in her furry hands as she approached the edge of the clearing. Her padded feet made her alarmingly quiet as she vanished into the brush, the odd rustle of leaves and the snap of a fallen twig the only thing giving her away. Jules didn't feel as though someone so large should be able to move so quietly, it was unnatural, spooky. The three Marines followed after her, making far more noise as they pushed into the jungle. Jules hurried after them, his joints already aching as the planet put more strain on them than he was built for. At least they hadn't made him carry one of those massive rucksacks...\n\nThe jungle was so dense that once he was beneath the canopy, he lost all sense of direction. It was just green everywhere he looked, his eyes struggling to focus. It was oddly gloomy, the thick leaves high above him blocking out the suns, a few bright rays finding their way through here and there to create what looked like puddles of golden light on the ground. There was a thick bed of plants that reached up to his thighs, it was like wading through a green ocean, waxy leaves that were wet with moisture impeding his progress.\n\nEverything looked slightly off, he couldn't identify any of the plants, and what flowers were visible were exotic and unfamiliar. The gnarled trunks of the tightly-packed trees were covered in layers of clinging moss and hanging vines, their roots jutting from the soil, threatening to twist ankles and trip the unwary. The oversized boots that they had insisted that he wear slipped in the wet mud, and he cursed his employers for failing to properly prepare him. He hadn't realized that jungle literally meant that he would be traipsing through miles of untamed rainforest. The Elysians lived on the borders of a jungle, after all, and they were perfectly civilized.\n\n\"So...does this high gravity...not bother you?\" Jules panted as he took up formation behind Edwards. The Marines were clearing somewhat of a path for him, and the Ranger was using a knife the size of a sword to cut through vines and other native flora that blocked their way.\n\n\"You grow accustomed to it after a while,\" Edwards explained. \"We rotate out to one of the orbiting ships every six months, though, just for a couple of weeks. Stops us from developing too many joint problems.\"\n\n\"Joint problems?\" Jules asked, climbing over an exposed root.\n\n\"Oh yeah, the human body isn't designed for this kind of gravity. It'll wear down the cartilage on your joints after a while, gives you a kind of arthritis. It's all good as long as you take time off to recover, and you take your meds.\"\n\n\"So...why do you and the others...stay on Borealis?\"\n\nEdwards shrugged, holding a flexible branch out of Jules' way as he let him pass.\n\n\"I guess I got into the routine. Borealis is a...strange planet. There isn't anywhere else like it. It's harsh and inhospitable, but it's also beautiful, wild. If you can cut it here, then going back to civilization feels like putting the kid gloves back on, y'know? Borealans do things differently, they have a unique attitude, and I guess it just clicks with some people. The brass doesn't complain, the more experienced personnel they have down here, the better. Working on Borealis has...a bit of learning curve.\"\n\n\"Yeah, I read the pamphlet that they hand out to new arrivals,\" Jules muttered. \"Calling the locals antisocial would be an understatement.\"\n\n\"They're not antisocial,\" Edwards chuckled, \"they're just...differently social. The mad cats aren't so bad once you get to know them. There's a method to their madness, a kind of primal logic that starts to make sense once you understand how they think.\"\n\n\"You look like you've gotten to know a few of them,\" Jules said, gesturing to the scars on the Marine's forearms.\n\n\"Let's just call those beginner's mistakes.\"\n\n\"Some of those mistakes look like they required quite a few stitches.\"\n\n\"You should see the other guy,\" Edwards replied with a grin. Jules couldn't tell if he was joking or not.\n\n***\n\nAfter walking for a while, they took a break, stopping amongst the tangled roots of one of the larger trees to pass around canteens and catch their breath. The heat and humidity were nightmarish, as if the increased gravity wasn't bad enough. Jules was coated in a layer of sweat, the salt stinging his eyes, the intense humidity preventing it from evaporating so that it wasn't even cooling him down properly. The Marines were sympathetic, despite their grizzled exteriors. They probably remembered their first few days on Borealis in acute detail, and they didn't seem to mind that he was slowing them down.\n\nSimmons insisted that everyone stay hydrated, practically force-feeding Jules some kind of sugary sports drink on top of the liters of water that they were required to consume. It seemed like far more than was necessary to quench his thirst, but the Marines knew better than he did, so he made an effort. On top of the copious amounts of water that they carried in their packs, the Marines also had food and other emergency supplies. Edwards passed Jules a protein bar along with a small container about the size and shape of a tube of toothpaste. It was full of an amber-colored, sugary substance that had the consistency of honey. The Marines called it Jarry Juice, but they didn't elaborate on where it came from or what it was made of. It tasted good, and it made him feel reinvigorated, so Jules didn't press the issue.\n\nThe Ranger kept her distance from the humans, perched on one of the taller roots like a gargoyle as she surveyed their surroundings, on watch for native animals perhaps. She certainly seemed on edge, like she was expecting something bad to happen. Her imposing rifle was always at the ready, her fuzzy ears twitching at every unknown jungle sound. There were birds in the canopy, Jules couldn't see them, but he could certainly hear the racket that they were making, and the buzzing of insects was incessant. Fortunately, none of them seemed too interested in biting him.\n\nJules stood and brushed away some of the fallen leaves that were clinging to the seat of his pants, his boots sliding in the mud as he stumbled over to where the Ranger was sat. Networking was important, if he wanted the best and most up to date information that he could get, then he would need to engage with the alien as well as with the Marines. She seemed to be the only one who knew anything about the enigmatic Araxie.\n\nOne of her ears swiveled to track him as he approached her from behind. Remembering what the pamphlet had said about how to behave around Borealans, he decided not to pat her on the shoulder to get her attention, clearing his throat instead.\n\n\"So...seen any monsters yet?\" She turned to look back at him, glaring down at him from atop her perch. She didn't seem angry, more annoyed that he was interrupting her silent vigil. \"What's your name?\" he continued, taking a seat on another raised root beside her. The gnarled wood was uncomfortable, a large knot stabbing him in the butt, but he tried to hide his discomfort as she watched him with her feline eyes.\n\n\"You would do better not to distract me, human.\"\n\n\"Oh, sorry,\" he said as he retreated a little further back. \"Are you expecting something to come after us?\"\n\n\"I cannot say,\" she replied tersely, looking out into the densely packed trees. \"My people have not charted this territory, its native animals are a mystery to us. There are many dangerous creatures in the jungle band of Elysia, and there may be many here as well.\"\n\n\"I wanted to ask you about that, if it's alright,\" he continued.\n\n\"Very well,\" she grumbled, \"but make it quick.\"\n\n\"My job here is to evaluate the Araxie and see if they meet the requirements for joining the Coalition. The more I know about them, the more informed my decision will be. Do your people know anything about them at all? Rumors, hearsay maybe? At this point, I'll take baseless conjecture, it's better than going in blind.\"\n\nThe Ranger sighed, but she didn't send him packing. She turned one ear in his direction as she kept the remainder of her senses focused on the trees.\n\n\"The Araxie are as shadows, little is known about them besides that they prefer to remain unknown.\"\n\n\"Can you elaborate?\" he asked, frustrated by her less than informative answer. \"Why do they choose to stay hidden? How do you know of them at all if that's the case?\"\n\n\"Do you know of the Rask?\" she asked.\n\n\"The Rask? I've heard of them, yeah, they're another Borealan territory. They supply front line troops for the Coalition. They trade primarily in weapons, and their exports aren't much to write home about, mostly raw materials like ores and unrefined metals for use in the Martian shipyards.\"\n\n\"The Rask are desert pirates. They make their living traveling the barren lands between the great lakes, raiding trading caravans, and mounting incursions into lesser territories.\"\n\n\"Not anymore,\" Jules interrupted, \"one of the conditions that they agreed to when they joined the Coalition was to cease all illegal activity and to respect the sovereignty of neighboring territories.\"\n\nShe didn't reply, merely giving him a sideways glance before continuing her tale.\n\n\"The Rask stopped raiding near the borders of Araxie a long time ago, long before your Coalition arrived on Borealis. They are a stoic people, accustomed to cruelty and hardship, there isn't much that strikes fear into a Rask. But something about Araxie kept them away for good. Maybe it was superstition, perhaps the stories that they returned home with were exaggerated, but they never again dared to set foot inside this jungle. They claimed that it was cursed, taboo.\"\n\nThat certainly explained why she seemed so nervous, but he couldn't let her stop there, the story intrigued him.\n\n\"So, what stories did they come back with?\" he asked. \"What had them so spooked?\"\n\n\"The raiders that made it home spoke of shadows, ghosts striking from the trees. They came at night, shrouded in darkness, attacking quickly and then retreating before the Rask could retaliate. They were said to be silent, invisible, with no discernible scent to set them apart from the jungle itself. It may be hard for you to understand, human senses are so dull compared to ours.\" Jules let the implied insult slide, shrugging his shoulders as he waited for her to get to the point. \"But for a Borealan to be unable to see a foe, unable to hear or smell them, that is something that troubles us deeply.\"\n\n\"I think I'm starting to understand. So they might be lurking just out of view, and you would have no way to know that they were there at all?\"\n\nShe remained silent, scanning the trees, her massive rifle clutched in her hands. She didn't seem scared exactly, just on edge, hypervigilant. Jules had to admit that it was a disquieting thought, joining her as he peered between the moss-covered trunks, the deep shadow cast by the canopy playing tricks on his eyes the longer he stared. There could be anything out there, in a jungle this thick, you could scarcely see fifteen feet in any direction. It was gloomy, the lines of sight broken up by plants and trees, the sounds and smells unfamiliar. He felt an involuntary shiver crawl up his spine.\n\n\"Perhaps we should get moving,\" he muttered, \"Simmons said that we shouldn't dawdle if we want to make it to our destination before sunset. Somehow, I feel even less enthusiastic about spending the night out here now...\"\n\nShe grunted affirmatively, and as he made his way back to where the three Marines were sat, he turned to look back at her.\n\n\"You didn't tell me your name.\"\n\n\"It's Yuta,\" she replied.\n\n***\n\n\"How much further?\" Edwards asked, Velez's face lighting up with an orange glow as he checked the instruments on his wrist-mounted computer. The suns were starting to dip below the horizon now, making the already shadowy forest even darker and more foreboding, the sky stained pink in the scant places where it was visible through the thick canopy.\n\n\"I don't understand,\" Velez replied, wiping the sweat from his brow with the back of his gloved hand. \"This should be it, but I don't see anything. There are no buildings, no people here to greet us. Do we even know what we're looking for?\"\n\nThere was indeed nothing to differentiate this patch of jungle from anything that they had seen so far. It was deserted, and there wasn't a single artificial structure in sight, no evidence of any Borealan activity whatsoever. The Marines glanced around warily, their hands creeping instinctively towards the rifles that were slung across their chests.\n\n\"They just gave us the coordinates, no further instructions beyond that,\" Simmons said. \"What's your take, Yuta?\"\n\nShe stopped, her leather clothing creaking as she rested the ornate barrel of her gun across her shoulder. She didn't seem as bothered by the humidity as the humans were, the Rangers spent their lives in these jungles, so Jules had been told. Her skin glistened where it was exposed, beads of sweat catching the light like droplets of dew on a blade of grass. She was certainly an impressive woman.\n\n\"My guess is that they do not wish to reveal the location of their village to outsiders,\" she said. \"They do not trust us, they will likely lead us to our final destination once they have made contact, and they determine that we are not a threat.\"\n\n\"They called us, not the other way around,\" Jules complained from the rear. The lull in their hiking gave him the opportunity to sit down and take some of the load off his legs. His joints ached, and his muscles burned, he couldn't remember ever being so exhausted in his life. He sat heavily on the bed of ferns and leaned against the trunk of a nearby tree, catching his breath. They wouldn't let him take off the heavy armor, but he had at least been able to hang the stifling helmet from his belt, Jules running his fingers through his damp hair as he took in gulps of the humid air. Simmons passed him a canteen, and he took a long draw from it, screwing the cap on and handing it back to the Marine before continuing. \"Why would they be suspicious of our motives? They know who we are and why we're here. They invited us, didn't they?\"\n\n\"It doesn't matter,\" Edwards said, shrugging off his pack and joining Jules beneath the tree. \"We don't have any choice but to play by their rules. That's obviously the way that they want this to go.\"\n\n\"You sure about the coordinates, Velez?\" Simmons asked.\n\n\"I'm sure, boss. You can check for yourself. The magnetic poles are a bit fucky on this rock, but we got the GPS satellites up and running a few months back. It's all good.\"\n\n\"Alright,\" Simmons said, his eyes darting about as he examined their immediate surroundings. He seemed almost as wary as Yuta was. \"We'll make camp here, and if nothing happens before morning, then we'll put a call through to command and ask them for instructions. Keep your eyes peeled, I don't like being at a disadvantage. Yuta, you're on first watch.\"\n\n***\n\nJules had imagined them starting a crackling campfire, but there was no wood in this humid hell that wasn't soaked through and rubbery, making starting a fire through conventional means practically impossible. Instead, the Marines had brought some kind of camping lantern with them, a cylindrical device that folded up for transport and then opened to reveal a bright bulb that illuminated the jungle around them. It created an island of light in the pitch blackness, the humans clustering around it as though it might protect them from the unknown dangers of the alien rainforest.\n\nJules watched as swarms of Borealan insects bumped into the glass, like moths drawn to a flame. They were large and stocky, and they had two sets of wings like dragonflies. Perhaps more lift was required for them to stay airborne in this high gravity environment. The glow reflected off their colorful shells, iridescent like the carapace of a beetle or the wings of a butterfly. The forest was full of what sounded almost like cicadas, and every so often, there was a strange and haunting howling that set his teeth on edge. Did Borealis have wolves? He didn't want to find out.\n\nOnce everyone was settled in, hunger became their most immediate concern, the mood lightening as they passed around MRE packets and snacks. Jules couldn't remember the last time that he had eaten a real meal. He had been cooped up on the carrier during its long voyage from Earth to Borealis, it could take months for vessels to cross such enormous interstellar distances, and the food in the mess hall hadn't exactly been gourmet. He was used to eating lunch in some of the high-end coffee houses and restaurants near the United Nations building back in Brussels, where he did most of his work, and so the switch to eating from a metal tray in the company of hundreds of people had been jarring.\n\nNow, however, he hardly cared. The smell of a packet of ravioli being warmed by a flameless ration heater was just as appetizing as the scent of a freshly baked cream cheese bagel or a steaming bowl of French onion soup.\n\nEating with the Marines was a social affair, they traded food packets and bartered for snacks like kids on a field trip, Jules marveling at the variety of their contents. He was pleased to see that his tax money was going towards something worthwhile, he had only been in the bush for a day, but he could already see what a comfort good food would be to an army on the march. By the time they had finished their impromptu haggling, he had found himself with a main course of chicken and spring vegetables, along with a packet of crackers with salmon paste, and a cinnamon bun for dessert. There was also a nut and raisin mix, instant coffee, some kind of powdered fruit drink. It wasn't just fuel, it was a real meal.",
        "He watched Yuta as he ate his chicken with a plastic fork, the alien keeping a lookout, her rifle always at the ready.\n\n\"Isn't she going to eat anything?\" he asked. His question was directed at Edwards, who was digging into a packet of ravioli beside him.\n\n\"Someone'll relieve her after a while, then she can get something to eat and a little shut-eye.\"\n\n\"Can you guys even see anything in this?\" Jules asked, looking about the dark jungle pointedly. Beyond the glow of the camping lantern, everything was near pitch black, like the jungle had been washed in a layer of dark ink.\n\n\"Sure can,\" he replied through a mouthful of food. He paused to swallow, then pointed to the helmet that was hanging from Jules' belt. \"Borealans might have good eyesight, but that's beside the point. Put your helmet on, and I'll show you.\"\n\nJules set his packet of chicken down on the ground between his boots, taking a moment to ensure that it wouldn't fall over, then unclipped the helmet from the belt on his armor and pulled it over his head. Immediately, the ambient sounds of the jungle became muffled, the padding on the inside trapping heat and warming him more than was pleasant.\n\nEdwards leaned closer and pushed a button on the exterior of the helmet, about where Jules' ear was, and suddenly he could hear clearly again.\n\n\"These helmets have all kinds of functions,\" Edwards explained, sliding down the full-faced visor. He hit another button, and suddenly the ghostly, green glow of a heads-up display flared to life. It was unobtrusive, occupying the extremities of the faceplate like something from a videogame, displaying numbers and values that meant nothing to Jules. He felt the Marine press the helmet again, and then the view changed. Rather than simply being transparent like a pane of glass, everything was suddenly tinted green, Jules looking about the camp in awe. It was like someone had just switched the lights on, albeit green ones, he could see the jungle around him with almost the same clarity that he could in direct sunlight.\n\n\"Night vision,\" Edwards explained, \"there are other functions on the helmet too. You can access them with the analog buttons near the ear or through the display on your wrist guard. Just turn the screen on, yeah, that's it, then you can navigate the menu to switch view modes. There's no weapon linked to the system right now, so don't bother with any of the combat functions like the scope or the ammo counter.\"\n\nEdwards sat back and continued his meal, Jules amusing himself by playing with the helmet. He switched to infrared mode, the warm bodies of his comrades displayed in shades of red and orange, while the cooler foliage around them was colored in hues of blue and black. There was a thermal imaging mode, which was apparently a different setting, showing heat sources in shades of white that made them stand out against the dark background. There was even a function that tagged the squad of Marines with glowing numbers that floated above their heads on his display. As he turned up the sensitivity of the microphones, he was able to hear the buzzing of the nearby insects and the chewing of the Marines in greater detail. Yuta had gloated about how her species had superior senses, but these helmets certainly seemed to make up the difference.\n\nHe turned his head in her direction, confident that his eyes were obscured behind the opaque visor, using the zoom function and the night vision to get a closer look at her. She was sat on a root maybe a dozen feet from the rest of the group, in profile from Jules' perspective. Like eyeballing women on a beach from behind a pair of dark sunglasses, he looked her up and down, taking in the curves and contours of her feminine figure.\n\nThe leather getup that she wore was so tight that she might well have been sewn into it, leaving very little to the imagination. Her thighs were thick and muscular, yet soft, and there was a subtle dimple where the hem of her shorts pressed into her flesh. She had an hourglass figure with wide, child-bearing hips that tapered into a muscular core, her impressive six-pack on display. The night vision was a little grainy, but he could make out a lot of detail, the humidity making her skin moist.\n\nHer rear too was packed with muscle, yet soft and springy, the fat molding around the root that she was sitting on despite the tightness of her shorts. As his eyes roamed upwards, her bust leapt out at him, a pair of breasts larger than his own head fighting against the leather that contained them. They were massive, heavy, but not inappropriate considering her immense stature. He chuckled to himself quietly as he considered that despite her lack of a rucksack, she had plenty of weight to carry around.\n\nOne of her ears swiveled in his direction, and he quickly averted his eyes, picking up what remained of his meal and raising his visor to continue eating.\n\nCHAPTER 2: GHOSTS\n\nDespite how tired Jules was, he found it almost impossible to sleep. The Marines had no issue using rocks as pillows, but even the bunks on the carrier had kept Jules awake at night. The armor actually helped a little bit, the interior was padded, and so it eliminated the problem of sharp rocks and roots prodding him in the back. It only covered his torso, however, which meant that his butt was exposed to the rough ground.\n\nHe tossed and turned, trying to get comfortable, grunting in annoyance as an errant stick jabbed him through his clothes. He crossed his arms over his chest, staring at the canopy above him, the twinkling stars just visible between the breaks in the leaves. Everything was still illuminated by the glow of the lantern, the three Marines spaced out between the roots nearby, one of them snoring intermittently.\n\nYuta was still on watch, she didn't seem to have tired at all. After what she had told him about the forest ghosts sending the Rask packing, he wasn't sure that she would even let one of the Marines relieve her from her post, perhaps not trusting the humans to keep them safe.\n\nBack home, when he had trouble sleeping, he would turn on his bedside lamp and read a book for a while. He couldn't do that here, and so he decided to play with his helmet some more instead, flipping down the visor and switching through the view modes. He was amused to see that the heat vision mode could detect small animals in the branches above him, what looked like birds, and maybe what passed for squirrels on Borealis. He couldn't make out any detail, just colored splotches, but he watched them run up and down the branches, leaping between the trees every so often.\n\nThere was so much activity here, but it was all just out of view, the local creatures were just as wary of the humans as the humans were of them. He propped his head up against the trunk of the tree lazily, yawning as he scanned the surrounding jungle.\n\nSomething near the top of one of the trees directly across from him caught his eye. The tree that they were sat under was a large one, and it created a kind of small clearing beneath its canopy. At the edge of the clearing, and perhaps halfway up one of the trunks, was an orange blob. It wasn't one of the smaller animals, it was much larger, bigger than a man if he had to guess.\n\nHis heart skipped a beat, his blood running cold, and he switched to a different filter in an attempt to get a better look at it. The whitewashed heat vision mode showed the same vague shape, it was lighter than the dark background behind it, but he couldn't make anything out when he switched to night vision mode. How deep into the foliage was it?\n\nHe zoomed in on the thing slowly so as not to lose track of it, switching modes again as he focused his eyes on the spot. There was definitely something there, something that Yuta had not seen.\n\n\"Yuta,\" he hissed, keeping as quiet as he could while still raising his voice enough to get her attention. She turned a single ear in his direction, her tail flicking back and forth in annoyance.\n\n\"What is it? Do not distract me.\"\n\n\"I see something,\" he whispered. \"It's up in the trees.\"\n\n\"Where?\" she asked skeptically.\n\n\"Up in the trees to your right, up off the ground.\"\n\nShe slowly turned her head in that direction, her ears pointing forwards as she scrutinized the jungle. Jules waited for her to raise the alarm with bated breath, but she merely gave him a dismissive glance as she looked back over her shoulder at him.\n\n\"I see nothing. Your eyes are playing tricks on you, get some sleep.\"\n\n\"I'm looking at it right now,\" he insisted, pointing to the red blob. As soon as gestured at it, the thing moved, retreating deeper into the canopy. Yuta snapped her head back around, standing and shouldering her rifle as it rustled the leaves and made the branches creak. Whatever it was, it was fast, heavy, and smart enough to recognize that it had been discovered.\n\n\"What is it, some kind of animal?\" Jules whispered.\n\n\"Quiet!\" she snapped, her rifle pointed at the trees. \"Wake the others.\"\n\nHe crawled over to Edwards as she had instructed, the Marine sleeping soundly nearby, and shook him. The Marine jerked awake and sat up straight, clearly alarmed, Jules lurching backwards in surprise.\n\n\"What's up?\" the Marine asked groggily.\n\n\"Something is in the trees,\" Jules whispered.\n\nEdwards reached for his gun, which was propped up against a nearby root, closing his visor and hitting buttons on the side of his helmet. He stood and gave Velez a kick with his boot, who then roused Simmons in turn, the three Marines soon joining Yuta as they stood back to back and aimed their weapons at the canopy.\n\n\"Sitrep,\" Simmons ordered.\n\n\"Movement in the trees,\" Yuta replied.\n\n\"I saw it with the heat vision,\" Jules added, \"it was hiding in the branches.\"\n\n\"Any idea what it might be, Yuta?\" Simmons asked. \"You're our expert on Borealan jungles, give me something I can use.\"\n\n\"I...I didn't see it, but it sounded heavy.\"\n\n\"It looked big,\" Jules said, \"bigger than a person.\"\n\n\"I'm not picking anything up on the thermals,\" Velez said, swinging his XMR about as he searched the treetops. \"If there was anything here, it's gone now.\"\n\n\"Maybe local fauna?\" Edwards suggested. \"Even Yuta isn't familiar with the local ecosystem. Might have just been some curious critter checking us out.\"\n\n\"No, it only ran when I pointed at it,\" Jules added. \"It wasn't a dumb animal.\"\n\n\"I don't like it,\" Simmons muttered, \"it's too much of a coincidence. The Araxie sent us coordinates that led us to the middle of nowhere, and now they're taking the opportunity to spy on us. Mister Lambert, as our resident diplomat, is this kind of behavior at all normal?\"\n\n\"Normal is a relative term,\" Jules replied. \"If what Miss Yuta told me about the Araxie is accurate, then their interactions with outsiders thus far have been profoundly negative. If they invited us or not, they may be very suspicious of our motives.\"\n\n\"How did they contact the UNN at all?\" Simmons asked. \"If they're so xenophobic, then how did they get access to a transmitter, and how did they patch into the UNN comms system? It's not like they sent us a carrier pigeon, right? Yuta, is there no trade between the Araxie and other territories at all? No contact?\"\n\n\"That I know of, no,\" the Ranger confirmed.\n\n\"Fine. We'll wait until the morning, and then if no Araxie show up, we'll put a call through to command and ask for some new instructions. Lord knows I have better things to do than play these stupid games.\"\n\nSimmons lowered his weapon, and everyone else followed suit, Jules watching from his hiding spot between the roots as they left their tight formation. Simmons had brought up a good point, how had the Araxie contacted the UNN? He wasn't sure if the Borealans had invented radio by the time they made contact with humanity, and if the technology had been confined to Elysia and their trading partners. There was so much that they didn't know about this planet, it was a source of endless frustration. Could this territory be hiding a secret society of super-advanced Borealans? It didn't seem likely, there was no evidence of that from the air, no glittering radio antennas or skyscrapers protruding from the canopy.\n\n\"Yuta, you're relieved,\" Simmons commanded. The Ranger's ears drooped, perhaps she felt that she had failed in her task of keeping her charges safe. \"Get some sleep, Velez and I will take over until morning. That goes for you too, Mister Lambert. Let us worry about the ghosts for a while.\"\n\nJules returned to his place at the foot of the tree, lying down and struggling to get comfortable, Yuta curling up behind an adjacent root. She seemed to be sulking, and he thought it best to leave her be. He didn't think that she would be sleeping much tonight, and nor would he. Edwards, on the other hand, was already snoring. As Jules closed his eyes, he wondered how the Marine could switch off like that.\n\nImages of the formless blob of heat flashed in his mind, invisible even to Yuta's superhuman vision, silent save for when it had made its speedy escape. It must have been an Araxie, the specters that the Ranger had described to him, but what were they doing? Why hadn't they made contact yet? Only time would tell.\n\n***\n\nJules' troubled sleep was interrupted by someone shaking him awake, and he opened his itchy eyes to see that Yuta was standing over him like a mother cat protecting her kitten. As he rose to a sitting position, he saw that the three Marines had taken up defensive positions, using the protruding roots for cover as they aimed their weapons at the jungle beyond. They looked like they were dug into foxholes, the barrels of their rifles resting on the uneven wood as they tried to keep a low profile.\n\nJules flipped down his visor and turned on the thermal imaging view mode, and after a moment, the dark trees that surrounded them came to life. It almost looked like the forest was on fire, there were dozens of heat signatures surrounding the clearing, whatever was creating them silent and unmoving. They were just watching...\n\nFear gripped him, Yuta gesturing for him to stay down and out of the line of fire, Jules all too happy to oblige.\n\n\"Contacts all around us,\" Velez said, \"I count at least twenty.\"\n\n\"They've taken no hostile actions yet,\" Edwards added, \"what do we do?\"\n\n\"Keep your weapons ready,\" Simmons said, \"don't fire unless I give the order.\"\n\nThey were speaking out loud for Yuta's benefit, but Jules could also hear them inside his helmet, they must all be linked up to some kind of local radio channel.\n\n\"What do we do, Yuta?\" Simmons continued. \"Any advice? You're our Borealan expert here, is this some kind of challenge?\"\n\n\"They are Araxie,\" she hissed, keeping her long rifle pointed at the trees as she exposed her sharp teeth in a snarl. \"It is as the Rask described, they came at night, silent and undetectable. I do not know their customs. In my people's culture, challenges are made face to face, we do not skulk in the darkness.\"\n\n\"Lower your guns,\" Jules said, the Ranger looking back at him with a confused expression as he lay on the ground behind her.\n\n\"Mister Lambert?\" Simmons asked, waiting for him to clarify.\n\n\"I'm willing to bet that the last outsiders these guys met were pointing guns at them too. They brought us here for a reason, they've been watching us, evaluating us. If we're going to prove that our intentions aren't hostile, we can't do it looking down the barrel of a rifle.\"\n\n\"That's a pretty major assumption,\" Velez said, \"how can you be sure that they won't just attack us as soon as our guard is down?\"\n\n\"I'm not sure, but what I do know is that we need to be diplomatic here, we need to show them that we aren't a threat.\"\n\nAs afraid as he was, this was his area of expertise, and he rose to his feet unsteadily as his heavy armor weighed him down. He tried to move forward, walking past Yuta, but he felt her massive hand impact his chest plate as she held him back. It was enormous, the size of a dinner plate, her sharp claws scratching the black material with an audible squeak. She looked to Simmons, and he nodded his helmeted head at her, the Ranger withdrawing her arm and letting Jules continue.\n\n\"We really doing this, Sarge?\" Velez asked. He sounded nervous, not happy about setting down his weapon in the face of what to the Marines must seem like an impending attack. It must go against his every instinct as a soldier.\n\n\"Do as he says,\" Simmons replied, \"we can't shoot our way out of here in any case. We're here to make contact with the Araxie, not to kill them all.\"\n\nThe Marines lowered their weapons as Jules took a few more tentative steps forward, leaving the safety of the roots and standing in the open amongst the bed of ferns. He felt exposed, vulnerable, but perhaps that was exactly how the aliens wanted him. He flipped up his visor to show them his face, the heat signatures giving way to pitch darkness, the only light coming from the camping lantern. He couldn't make out a damned thing, there was no sign of anything, no movement at all save for the natural waving of the leaves in the breeze. He extended his hands to show that he was unarmed, waiting for some kind of reaction.\n\nJust when he was starting to think that he had made a colossal miscalculation and that his head was about to be blown off his shoulders, the leaves in the tree directly ahead of him began to rustle. It was hard to see in the darkness, illuminated only by the yellow glow of the lantern, but something was descending from branch to branch. It was stealthy, the wood creaking as it put what must be considerable weight on the limbs of the tree, what looked to Jules like a living bush dropping to the ground quietly. The mass of leaves and fronds stood up, rising to around eight feet, consistent with the height of a Borealan.\n\nAs it stepped closer and more light was cast on it, he saw that it had a humanoid figure. The leaves and other assorted plant matter seemed to be sewn into some kind of cloak that was draped about its head and shoulders, obscuring its features, a kind of camouflage that made it very hard to spot in the dense jungle. From beneath the mesh, two green eyes reflected the glow, like a pair of mirrors as they stared back at him. It flowed like water, graceful, so light on its feet despite its imposing stature that he could scarcely hear a twig snap or a fern rustle as it moved.\n\nThe closer it came, the more he had to turn his head up to look it in the eye, until it was towering over him so close that he could have reached out and touched it. As afraid as he was, he was determined not to be intimidated. This whole scenario might have been deliberately engineered to put the newcomers on the wrong foot, to scare them, and to influence the proceeding negotiations. Perhaps the aliens thought that they could throw him off with this theater, but he was a seasoned politician, not one to shy away from confrontation. The fire in his belly gave him the courage to speak up, the Marines and the Ranger watching from the safety of the roots as his voice rang out confidently through the silent forest.\n\n\"You are the Araxie delegation that was sent to meet us, I presume? My name is Jules Lambert, I'm here on behalf of the Coalition Security Council.\" The alien cocked its head at him, the leaves on its camouflaged cloak rustling. Did it even understand English? He continued regardless, the creature watching him curiously. \"If you would be so kind as to lead my companions and I to your base of operations, we can begin the inspection.\"\n\n\"In...spec...tion?\" the alien hissed. Its voice was low and raspy, not unlike Yuta's.\n\n\"Yes, I've been sent to carry out an inspection in order to determine if your territory meets the requirements for becoming a member of the Coalition. Our presence here was requested by the Araxie. I'm assuming that you're a representative of the people who transmitted the coordinates of the meeting place? We'll be needing accommodation for the duration of our stay, of course, and it's customary to appoint a liaison that can act as an intermediary while we perform our duties.\"",
        "The creature seemed taken aback, and Jules couldn't help but feel that he had gained the upper hand over the situation. The initial fear and tension had been diffused, and now the alien was just standing there looking rather foolish and unprepared.\n\n\"I...take you back to village,\" the alien said. He noted that its voice was low, almost like it was whispering. \"Patriarch of Araxie request you, we take. Come.\"\n\nThe rest of the Araxie began to descend from the trees all around the clearing, each one of them dressed in similar garb. They flooded down from the canopy with the same silent grace, sliding down the gnarled trunks and using their claws for purchase. It looked as if an army of shrubs were launching an attack. Jules looked around, trying to conceal his alarm. There had been even more of them hidden in the trees than he had first assumed. The aliens were so quiet, stealthy. If the Marines or the Ranger had mistakenly fired on them...\n\nSimmons led the others out from between the raised roots, the Marines slinging their rucksacks over their shoulders, Edwards pausing to collect their lantern. Rather than folding it up and stowing it in his pack, he held it by the handle and used it to light their way in the darkness, perhaps not fully trusting the motives of these Araxie. Jules could sympathize, their ways were certainly strange, but not so strange as to be out of place or unexpected on this alien planet.\n\nThe stranger led them through the jungle, his comrades boxing them in on all sides. Jules wasn't quite sure whether they were being escorted or guarded. The aliens seemed to blend into the scenery if he lost track of them for even a moment, the camouflaged specters vanishing into the background like characters in a magic eye puzzle. No wonder the Rask had described them as ghosts, they were nigh invisible when they wanted to be. If it hadn't been for the thermal cameras on the helmets, the party would never have figured out that they were being observed until the Araxie had chosen to reveal themselves.\n\nIn a way, it was a form of diplomacy. Observe and study, wait for the most opportune moment to make contact for maximum impact. Awe, intimidate, take the lead in the negotiations. Thanks to the helmets, now Jules was in control. The aliens had been exposed before they were ready to play their hand, and it had thrown a spanner in the works.\n\nThe Araxie dodged and weaved through the jungle, their feet scarcely seeming to touch the ground. This was their domain, and it was hard for him to keep up. Yuta was similarly accustomed to traversing these environments, and the Marines fared a little better, but they had to stop after a while to let Jules catch his breath. He leaned against a tree and took a long draw from one of the canteens, Simmons foisting more sugary sports drinks on him, along with more of the strange honey. Jules wasn't a fitness buff, but it was probably full of sugars and electrolytes, things that would keep him hydrated and energized.\n\nAs he drank from the bottle of unnaturally blue liquid, he took the opportunity to examine the Araxie more closely. The one who had first descended from the trees was nearby, lurking just beyond the glow that was cast by the lantern like a vampire afraid of the sunlight. It was definitely a Borealan. He could make out a furry, black tail protruding from the cloak, and beneath the leafy hem were a pair of paw-like feet. They were clawed, identical to those of Yuta save for the darker coloration of its coat.\n\n\"They're like ghillie suits,\" Velez volunteered, startling Jules as he leaned in to whisper from behind.\n\n\"Ghillie suits?\" Jules replied, wiping his mouth with the back of his sleeve before fastening the cap.\n\n\"Yeah, they're camouflaged suits used by snipers and scouts, designed to make you blend into the environment. They're covered in strips of cloth or replica foliage, breaks up your silhouette, makes you look like you're just part of the scenery. Can't hide them from the thermal sensors on the helmets though,\" he said as he tapped his visor with a gloved finger. \"I wonder what kind of weapons they use, I don't see any rifles...\"\n\nJules glanced over at the nearest alien, its green eyes reflecting the light as they peered back at him, making them seem to glow in the gloom. The ghillie suits, as Velez had called them, were certainly intricate. There were pieces of dyed fabric woven into the mesh to give the appearance of leaves, and there were even some real pieces of foliage that looked like they had been sourced from the local environment.\n\nSimmons slid in from the side, taking a seat beside the pair as he glanced between them conspiratorially, taking his sports drink back from Jules and stowing it in his pack.\n\n\"Where are they leading us, Velez?\" he whispered. \"Do you still have a connection to the GPS satellites?\"\n\n\"Affirmative, Sarge. They're leading us pretty far from the original coordinates, and they're swerving all over the place, I've been keeping track. If I had to guess, I'd say that they're trying to make us lose our bearings, but I don't think they know that we have global positioning.\"\n\n\"Either they don't want us to be able to find our way back, or they're really anal about keeping the location of their village a secret,\" Simmons mused. \"We can call a dropship down right on top of us if we need to, but they don't have to know that right now. Let's keep our lips sealed for the time being, don't give them any unsolicited information about our tech or our capabilities, we've already seen how our thermal optics caught them off-guard. We might need to get out of here in a hurry, so having them think we're lost and helpless works to our advantage. You too, Mister Lambert. Don't show them so much as a tablet computer or a watch if you can avoid it.\"\n\n\"Understood,\" Jules said with a nod. As uncertain as their situation was, things were starting to become rather exciting. \"There's something else that's bothering me, Sergeant Simmons,\" he continued. \"These Borealans speak English, or at least some of them do, albeit in a somewhat limited capacity. How did they learn the language while being completely isolated from outside influences?\"\n\n\"There's a lot that doesn't make sense here,\" Simmons muttered under his breath. \"Perhaps when we reach our destination, we'll finally get some answers. In any case, keep up the good work Mister Lambert, that was a good call you made back there.\"\n\nJules nodded, pride welling in his chest. Simmons moved over to where Edwards and Yuta were sitting, the three talking in hushed voices as he relayed the plan. So, all Jules had to do now was play dumb? That should be easy enough, he didn't know half of the technological capabilities of the equipment that the Marines used himself, and so there was little danger of him blowing their cover.\n\nAfter a few more minutes, Simmons ordered them to move out, and the ghillie suited Araxie led them off into the darkness of the jungle once more.\n\n***\n\nThey trudged through the dense undergrowth for what felt like hours, Jules' joints aching as though he had been carrying around a rucksack full of bricks. All he wanted to do was get under a stream of cool water and wash off the layer of sweat that clung to him, but he doubted very much that the Araxie had any shower cubicles on hand.\n\nSuddenly, the lead Araxie stopped them, its cloak rustling as it extended an arm and gestured for them to halt. Its limb was covered in black fur, and even the pads on its clawed fingers were jet black, in contrast to Yuta's pink.\n\n\"From here, you must walk in my footprints,\" it warned. \"The same steps.\"\n\nThe Marines exchanged glances, then tightened their formation, following in a line behind the alien as it led them forwards. Yuta was at the rear, just behind Jules, he could feel her eyes on his back. She had been watching him like a hawk the whole way, like she didn't want to be more than a few feet away from him lest he need her to pull him out of some proverbial fire.\n\nThe Araxie took a winding path over what looked like relatively clear terrain, there were fewer trees here, and there was a carpet of dense ferns covering the ground. Jules' first instinct would have been to walk straight across, but he didn't take the ominous warning lightly, tracing Edwards' footsteps as the Marine marched ahead of him. To their left and right, the other Araxie were taking similarly circuitous routes, seemingly committed to memory.\n\n\"Feels like I'm walking across a minefield,\" Edwards muttered, glancing back over his shoulder at Jules. \"My guess is traps, we must be getting close to their HQ. These guys really don't like uninvited guests...\"\n\nJules glanced about the meadow warily, trying to spot anything that might give away a tripwire or a pitfall. What kind of traps would the Araxie make?\n\n\"There,\" Yuta hissed, pointing with a clawed finger. \"The soil has been disturbed.\"\n\nHe followed her finger and looked to where she was pointing, but it took him a minute to spot what she was referring to. There did indeed seem to be some misplaced soil, a few of the black specks clinging to the tops of the fronds of the ferns were it didn't belong. She had eyes like a damned eagle, he would never have noticed if she hadn't pointed it out, certainly not without the light from the lantern. The Araxie had dug a pit somewhere nearby, perhaps they had filled it with sharpened sticks to impale the unwary, or maybe they would simply rely on gravity to do the job. Considering the higher gravity on Borealis and the sheer weight of the Borealans, a fall like that could do them some serious damage, regardless of how dense their bones were.\n\nHe lurched suddenly as something lifted him off the ground. When he got his bearings, he saw a pair of fuzzy arms cradling him like an oversized baby, and he looked up to see Yuta's face peering down at him.\n\n\"W-what are you doing?\" he stammered. He struggled, but she was inhumanly strong, keeping a tight grip on him. After a moment, he felt her pointed claws press into him through his clothes, and he tensed up. It was a clear warning to stop his fidgeting.\n\n\"It is dangerous,\" she replied tersely, \"and you are clumsy.\"\n\n\"I'm perfectly capable of walking on my own,\" he protested, but she ignored his complaints.\n\n\"I was ordered by my Patriarch to keep the humans safe. You are the most vulnerable and the least experienced human. If you should stumble and fall into a trap, I would be disgraced before my Alpha and my Alpha's Alpha. I would lose standing.\"\n\nEdwards stifled a laugh as he looked back over his shoulder at the pair, then he turned his attention back to the path, careful not to deviate from the trail. It was no use arguing with the Ranger, and so Jules swallowed his pride, taking advantage of his newfound elevation to observe the movements of the nearby Araxie. They were coordinated, moving as a cohesive group despite how spread out some of them were. It was hard to see much beyond the limits of the light cast by the lantern, the long shadows dancing as it waved back and forth in Edwards' hand, but he could make them out a lot more easily when he switched his helmet to infrared.\n\nThe Araxie at the head of their group came to a stop before a wall of tangled vines and creepers. It looked like the growth had spread between the trunks of two large trees, and the undergrowth here was even denser than usual, to the point that it appeared quite impassable. The wall extended all the way into the canopy, and it didn't look like there was a way around. The jungle to either side of this natural barrier was too dense for even a small human to squeeze past.\n\nAs Jules watched, the lead alien reached out with one of its furred hands, parting the vines like a curtain. Jules caught a scant glimpse of what lay beyond before the creature vanished inside, and the vines fell back into place behind it, melding into the background as though it had never been there at all. He used his helmet to peer through the darkness at the rest of the Araxie, seeing that they too were vanishing into their own respective curtains of vines that were spaced out around the forest. It played tricks on the eye, one second they were there, and then they weren't. Even knowing that these secret entrances were here, they were so well camouflaged, and they blended so expertly with the scenery that Jules doubted whether he would be able to locate them a second time. In combination with the traps, stumbling across this location would be practically impossible.\n\nYuta set her ward down on the ground, moving to the front of the small procession of humans.\n\n\"Stay behind me,\" she said, reaching out to pull back the curtain. It took some effort, Jules could see that the weight of it surprised her, which indicated that it was probably woven from real vines and plants rather than being some kind of elaborate facade. She poked her head through, looked around for a moment, then gestured for the humans to enter as she held it open for them.\n\nThey emerged into an open space that was perhaps the size of a football field, but more rounded in shape, the night sky visible above them in places where the canopy was thinnest. The thick trunks of the ancient trees that encircled the clearing looked as large and as strong as the buttresses of any fortress, curtains of vines, and other smaller plants bridging the gaps between them where they weren't so densely packed so as to be impassable. The jungle enclosed them on all sides, like a natural wall that kept the clearing out of view and protected from the outside world.\n\nThe interior wasn't completely clear of trees, however. It was like the difference between the unchecked growth of a wild forest, and a carefully tended orchard. The stout trunks were spaced out in a way that seemed artificial, likely planted and tended by the Araxie.\n\nThat wasn't all. Built around the bases of the gigantic trees were clusters of buildings, nestled between their roots. At first glance, they almost reminded Jules of beaver dams or maybe bird nests, but this was yet another facade. They were far more sophisticated than they first appeared, dome-shaped, with rounded roofs that were strewn with leaves and other concealing plant matter sourced from the forest that served to disguise their true nature. They were built from sturdy wood, squat, but clearly very structurally sound. There were no windows, only a solitary door on each dwelling. The structures appeared to be about the right size to accommodate several people of Borealan stature.\n\nFrom the air, this would have looked like any other patch of forest. It was no wonder that the satellites hadn't seen anything out of the ordinary. It was as if they had draped a gigantic ghillie suit over their entire village.\n\n\"Guess we found their base of operations,\" Simmons muttered.\n\n\"Coordinates locked,\" Velez whispered, \"one button press and I can broadcast its location to Command.\"\n\n\"Do it,\" Simmons said with a nod, \"let them know our new coordinates.\"\n\nJules couldn't help but feel a little guilty after overhearing the exchange, but it wasn't as if the Araxie had laid out the red carpet for them. Trust had to go both ways, and the Araxie had shown them nothing but suspicion thus far.\n\n\"How big do you reckon those trees are?\" Edwards asked.\n\n\"That's got to be at least a couple of hundred feet tall,\" Jules replied as he craned his neck to look up at the canopy. \"Maybe fifty feet around the trunk.\"\n\n\"Their tech level looks low,\" Edwards continued as they proceeded deeper into the village, turning his head to take in the strange scenery. \"All wooden huts, no electricity that I can see, no comms gear.\"\n\n\"It resembles one of the more remote Ranger outposts from deep inside the Elysian jungles,\" Yuta said, \"but we are still members of the Elysian territory. We still trade in goods and technology, the hunting posts are just too far from the city to benefit from many of its amenities. This is even more remote, more isolated.\"\n\nThe Araxie that had escorted them fanned out now, perhaps returning to their posts or maybe their homes, leaving only one alien to lead them onwards. There was nobody else in view, no villagers peeking out from the doorways of their wooden huts, not one person going about their daily business. Were they hiding?\n\nJules activated the trusty heat sensor on his visor and looked around the village, searching for clues as to the whereabouts of its inhabitants. The first thing that stood out to him was that many of the wooden dwellings had heat sources inside them that looked like fires. The aliens must use them for cooking, because there was no way that anyone needed to warm themselves in this stifling, soupy hellscape. He hadn't seen any plumes of smoke, which would undoubtedly give the location of the village away, so that meant that they must have a method to make smokeless fire. Jules was no outdoorsman, but such a thing was likely possible with the right fuel and the proper conditions.\n\nThere was nobody moving around inside the houses, nobody tending the fires that he could see. The structures in the village were cold and deserted. Were they out hunting, maybe?\n\nHe felt Edwards nudge him with his elbow, and Jules turned his head to see the Marine pointing at the treetops. Jules looked up to see a mass of heat signatures nestled within the canopy. The Araxie had all fled to the branches like cats escaping a dog. There were dozens of them up there, maybe hundreds, peering down warily at the intruders from a safe height.\n\nTheir guide led them deeper into the trees towards what felt like the center of the village, until a far larger structure came into view. This one was constructed all the way around the base of one of the trees, ringing it and extending a short distance up its trunk. There were two guards posted at the door, these ones also clad in a camouflaged cape that obscured their features, long spears clasped in their hands. The weapons were maybe twelve feet long, enormous by human standards, and they were tipped with wicked spearheads that seemed to be made from metal.\n\n\"Hang on,\" Velez muttered as they approached the building's large door. \"Look at those spears...\"\n\n\"What about them?\" Edwards asked.\n\n\"Don't you recognize the tips? Those are the bayonets used on XMRs, the ones configured for use by Borealans.\"\n\n\"Holy shit, you're right,\" Edwards hissed under his breath. \"What the fuck are they doing with those? I thought they had no contact with the outside world? How did they get their hands on UNN weaponry?\"\n\n\"I have a feeling we're about to meet the head honcho,\" Simmons interjected. \"When we get inside, let Mister Lambert do the talking. That's what he's here for.\"\n\nThey all nodded their understanding, Jules along with them.\n\nTheir cloaked guide opened the door with a creak, and they stepped through into a dingy room. Jules took his helmet off and stowed it under his arm, wanting to make a good first impression when they were introduced to the Araxie leader. Diplomacy could not be conducted from behind an opaque visor.\n\nThe structure was large even by Borealan standards, the ceiling perhaps twenty feet above their heads, the wooden support beams and rafters that anchored it to the gnarled trunk of the tree shrouded in darkness. There was a gentle slope to it, perhaps designed to let rain and moisture run off the roof, and there wasn't a window in sight.\n\nCalling it dimly lit would be an understatement. The only light came from hanging lanterns that were suspended from the ceiling on lengths of knotted rope. They resembled the thuribles that you might find in a church, but instead of burning incense, these seemed to house candles. They did such a poor job of illuminating the room that it almost seemed pointless. Their flickering glow cast dancing shadows on the wooden walls, and as Jules' eyes adjusted to the darkness, he was finally able to make out some more detail.",
        "Much like what he had seen of Elysian culture, everything here was intricately decorated. The walls were covered in engravings and hanging animal pelts of indeterminable origin, what might be horns or antlers from similarly unknown animals proudly on display. The rough bark of the tree trunk that made up the core of the room had been stripped away, exposing the smoother wood beneath, from which were hung woven tapestries. It was too dark to make out what they depicted in any clarity, but it was impressive all the same. The wooden floorboards had been covered with rugs that looked like animal skins, the roots of the tree must have been selectively stripped away to keep the floor level. There were various pieces of furniture scattered about the circular room. He could see chairs and benches clearly built for Borealans, their legs carved to resemble the paws and claws of animals, like something you would have seen in a Victorian-era study. There were shelves on the walls and a few tall tables that were loaded with unknown items and trophies, all equally difficult to make out in the gloom. It came across to Jules like a hunting cabin as built by someone who only had access to archaic tools and materials.\n\nFrom around the trunk of the tree strode something very large, the dim light from the candles reflecting off its black coat to give the impression that it was carved from a solid slab of onyx. It was a Borealan, at least eight and a half feet tall, putting it near the upper limit for its species. As it drew closer, Jules realized that it was unlike any Borealan that he had seen before.\n\nHe was familiar with the Elysians and the Rask, with their partial coverings of fur, and he had seen pictures of Polars who were entirely enveloped in a fluffy coat that helped them survive the cold climate of their home territory. This creature was covered from head to toe in jet black, velvety fur, so shiny and slick that it almost made him look wet. It was obviously a male, broad-shouldered, and sporting the muscle tone that living on this planet necessitated. The thin fur clung to his figure such that Jules could make out muscles and veins, even in the dim candlelight. Despite his stature, he was not as stocky as the other Borealans. He was less toned than Yuta, lithe and sinewy like a swimmer or a gymnast as opposed to a weight lifter or a bodybuilder.\n\nThe alien's gait was graceful, quiet. Just like his ghillie-suited subordinates, he seemed to flow through the environment like water. His eyes were a striking, reflective green, staring down at his guests with enlarged pupils as they peered back at him in turn.\n\nUnlike the other Araxie that they had encountered, this one was wearing only a pair of leather shorts and a harness that went over his shoulders and across his broad chest, almost like some kind of primitive tactical rig. There were pouches and bags sewn into it, along with other tools and items. Jules could see small vials of liquid in a leather holster, what must be a canteen, as well as a large knife sheathed on his hip. In contrast to the colorful beads and feathers that the Elysians favored, the decorative flair here was made mostly from animal parts. It wasn't garish, there were no bright colors or patterns that might draw attention to the wearer, it all seemed very muted and practical. There were small bones, tufts of animal pelts, and he wore a kind of hanging loincloth made from fur over the top of his shorts.\n\n\"Welcome,\" the alien said, his voice deep and gruff. \"I am Bozka, Patriarch of the Araxie.\"\n\n\"My name is Jules Lambert, I'm here on behalf of the Coalition Security Council,\" Jules replied as he tried to put on an air of confidence. Once again, he was determined to stay on top of the situation. He wasn't going to let this alien's sheer stature and his strange appearance throw him off, which might well be the intent. \"This is Sergeant Simmons, Corporals Edwards and Velez, and our Elysian guide, Yuta.\"\n\nThe two Borealans exchanged suspicious glances. It was odd seeing them together, they were so similar and yet so different. There were Borealans with varying hair colors and skin tones analogous to human races, but there were also subspecies that were far more distant from a genetic standpoint, more akin to the differences between a human and a neanderthal. That wasn't to say that one population was archaic while another was modern, just that they had adapted to different environments and diverged often in total isolation from one another.\n\n\"You speak for the Coalition?\" Bozka asked, glancing between the humans and examining their strange clothing and equipment.\n\n\"I represent the Coalition, yes,\" Jules replied as he tried to direct the alien's attention back towards him. This Bozka needed to understand that he was treating with Jules and Jules alone. \"Your government made an official request to join the Coalition, correct? It's my job to evaluate your territory and ensure that you're capable of fulfilling the commitments that being a member entails. I'm authorized to negotiate treaties on behalf of the CSC, and then make a recommendation to the council, which they will then vote on.\"\n\n\"You will...test the Araxie?\" Bozka asked, cocking his head.\n\n\"In a way, yes. When you have the time, I'll run you through the different criteria and requirements, and I'll be needing unrestricted access to your territory while I'm here. Government, military, banking institutions...if you have them.\"\n\nJules was starting to suspect that the government might consist entirely of Bozka, and if they had any banking institutions, their vaults were probably full of shiny beads. Could the Coalition mandate that five percent of the territory's GDP be committed towards defense spending if the gross domestic product was comprised primarily of animal hides and leather slacks?\n\nNo, things in the Araxie territory were not as they seemed. Much like the ghillie suits worn by their soldiers, this primitive exterior was masking something deeper. The bayonets, their language skills, the transmission...\n\n\"It will be so,\" Bozka said.\n\nThe Araxie in the ghillie suit who had led them here stalked past them, whispering to the Patriarch in their own language, none of the humans able to understand them. Jules looked over his shoulder at Yuta, but she shook her head, indicating that she had no idea what was being said either.\n\n\"I am told that you require accommodations, and a...liaison,\" Bozka said as his underling stepped away. \"Tell me, what is liaison?\"\n\n\"A liaison is someone who can act as an intermediary during our stay,\" Jules explained, \"someone who can interact with the locals and speak their language. Someone who knows the local customs and who can assist in negotiations.\"\n\n\"I believe I understand,\" the alien replied, gesturing to one of the tall tables with a long arm. He wanted them to sit on the stools that were spaced out around it. Jules did as he was asked, the Marines following suit, clambering up onto the seats. They were scaled up for use by Borealans, making them far too large for a human. It made Jules feel like a child sitting in a booster seat. Yuta, on the other hand, seemed perfectly at home. She crossed her arms and leaned them on the table as the Patriarch sat down opposite them.\n\n\"The first thing I'd like to ask,\" Jules began, \"is what prompted you to contact the Coalition? What's your motivation for wanting to join?\"\n\n\"Is it not obvious?\" the Patriarch asked.\n\n\"I have some ideas, but I'd like to hear it from you.\"\n\n\"The Coalition strengthens the other territories. You give them weapons, technology, power, and protection. Those who do not wish to swear allegiance are left behind, at the mercy of those who do.\"\n\nJules exchanged some worried glances with the Marines, Yuta raising an eyebrow.\n\n\"That's...not our intention,\" he replied. \"The Coalition is a voluntary assembly of like-minded governments that offers mutual protection against common threats. By bringing new governments into the fold, we strengthen and enlarge the alliance with the ultimate goal of improving security and stability across Coalition space. We provide weapons and equipment along with training in their operation, but only in the context of bringing a member's security forces up to specification. Any trade beyond that is usually carried out by independent organizations.\"\n\nThe Patriarch did not seem convinced, but Jules wasn't quite sure what he was suggesting. He might be laboring under the misapprehension that the Coalition would just give out crates of guns and free spaceships like candy. Trade was an important benefit of joining the Coalition, but as he had explained, that was usually carried out by independents. It wasn't the Coalition who provided the Elysians with their spaceships or their appliances, those were independent traders.\n\n\"I have not understood all that you have said,\" the jet-black alien continued, \"but the Coalition strengthens our enemies. They attack us with Coalition weapons, your technology makes them strong.\"\n\n\"That's not possible,\" Jules replied, a frown darkening his features. \"One of the core tenets of Coalition membership is a respect of sovereignty. Any member state that was found to be engaging in hostile actions against a neighbor would be violating the terms of that membership. They would be expelled.\"\n\nThe Patriarch stood abruptly, making Jules jump and setting the Marines on edge. Yuta bared her teeth reflexively, the fur on her tail puffing up like a startled cat. The Patriarch remained soft-spoken, however, making his way towards the door.\n\n\"Come, I have something that you must see.\"\n\nJules slid down off the stool, confused, his companions following after him as Bozka led them out into the village. Some of the villagers had come down from their hiding places now, milling about and craning their necks to get a look at the newcomers. They were all similar to Bozka in appearance, their lithe bodies covered in a coat of silky, black fur that made them hard to spot in the darkness. They were all dressed sparsely, the males wearing shorts and the females wearing a combination of shorts and leather slings to conceal their breasts. Most of the aliens wore some kind of utility belt from which satchels and small bags were strung, or a chest rig covered in pouches. A few wore the camouflaged cloaks over their shoulders, it appeared that they could be flung over the wearer to conceal them in an emergency. There were children, too, or perhaps kittens would be a better term to describe them. They were squat, chubby creatures that clung to their mothers like monkeys as they watched the humans with wide eyes.\n\nThe two guards who had been posted outside the Patriarch's dwelling flanked him on either side, their bayonets glinting in the starlight. How had they obtained those bayonets? It must have something to do with the Patriarch's claims, and Jules was beginning to feel a sinking sensation in his gut. Something was very wrong here.\n\nBozka led them through the giant trees, weaving between the domed huts that were built around their roots, eventually arriving at a wooden box. It was maybe nine feet by nine feet, constructed from sturdy wood, and on the near side was a barred door made up of thick poles that had been tied together with strips of leather. Two Araxie were standing to either side of the door, their camouflaged cloaks draped over their shoulders, their spears clasped in their hands. They were guarding it, their eyes scanning the jungle beyond warily, Jules' gaze drawn to the inky darkness behind the bars.\n\nBozka said something in his native tongue, the guards sharing a glance before turning towards the barred door. One of them opened it, while the other stood ready, the bottom end of his spear poised to jab as if he expected to face some kind of dangerous animal.\n\nJules took a couple of steps backwards as he heard the sounds of a scuffle, claws scraping against wood, vicious spitting and hissing like they had an angry tiger locked up in there. The two guards dragged a third figure out into the open, its hands bound behind its back, one of them giving it a swift swipe to the back of the legs with the haft of his spear to bring the captive to their knees.\n\nA curtain of matted, blonde hair obscured its face until the second guard took a handful and raised its head, forcing it to look the Patriarch in the eye.\n\n\"Rask!\" Yuta spat, her voice dripping with venom. It was a male Borealan with ebony skin and straw-colored fur on his forelimbs and tail. He glared back at them with his yellow eyes, he looked crazed, practically foaming at the mouth as he hissed and growled at his captors. He was covered in scars, Jules couldn't tell how recent they were, and he was wearing what looked like the tattered remnants of a dark blue UNN combat suit. It was similar to what the Marines were wearing, their black armor placed over the top of it. This one had been modified, it didn't look standard issue. It was overlaid with leather in places, and there were patches and markings that he didn't recognize. It was torn, stained with blood, it looked like the Araxie had been roughing him up.\n\n\"What is the meaning of this?\" Jules snapped, his eyes darting between the prisoner and the Patriarch.\n\n\"The Rask have been raiding our jungles for months,\" Bozka explained, \"they have been attacking us with Coalition weapons and supplies. Rifles, radio equipment, Coalition armor, and food rations.\"\n\n\"Clawless bitch!\" the Rask hissed, his insult apparently directed at Yuta. She recoiled, her disgust palpable as she bared her sharp teeth at him.\n\n\"We ambushed a raiding party some time ago, this one survived the battle,\" the Patriarch continued. \"We took him captive along with what weapons and gear remained, interrogated him, learned how to use his radio equipment.\"\n\n\"So that's how you put a call through to the UNN,\" Simmons mused, \"you captured a transmitter from the Rask.\"\n\n\"What were they doing with UNN gear?\" Velez asked, \"where did they get it?\"\n\n\"From your people, obviously,\" the Patriarch replied.\n\n\"No, no,\" Jules said as he shook his head emphatically. \"We supply the Rask government with weapons and equipment, yes. But they signed treaties assuring us that they would ban piracy and that they would respect the articles of the Coalition charter, one of which prohibits hostile action against neighboring territories. He must be some kind of criminal, an outlaw.\"\n\n\"Is this true, Rask?\" Yuta asked. The Rask turned his eyes up to her, a wide grin on his face. He didn't reply, he merely chuckled to himself. One of the guards jabbed him in the gut with his staff, the laughter halting as the sandy-haired alien groaned and doubled over.\n\n\"Stop that,\" Jules demanded, the guard looking up at him in surprise. \"There are conventions that deal with the treatment of prisoners, too. If you want to join the Coalition, then mistreating a captive in full view of the Coalition diplomat who was assigned to evaluate you is a bad way to go about it.\"\n\n\"Do you protect your allies over the victims of their crimes?\" Bozka asked sternly.\n\n\"What? Absolutely not, and this person is no ally of ours. But that doesn't mean that you can beat a subdued prisoner, regardless of what his crime was.\"\n\nThe guard looked to the Patriarch for confirmation, and Bozka nodded his head.\n\n\"Can you show us what you recovered?\" Simmons asked, \"maybe we can figure out where it came from.\"\n\nAgain, the Patriarch nodded silently. He set off into the village, flanked by his two guards as the others began to drag the Rask back into his cell. Jules looked back over his shoulder as they shoved him inside and shut the door. He would have to go through the charter with the Patriarch and make sure that he understood the concept of prisoner's rights. If he discovered that the Rask was being denied food and water, or tortured for information, the Araxie would have to shape up pretty damned fast.\n\n\"They usually come in wheeled vehicles,\" the Patriarch explained as they walked. \"We do not know how to operate them, nor do we have any use for them, and so we let the jungle reclaim them. Once the Rask are dealt with, we bring back whatever we can carry. Some of it has obvious uses, like blades, and rifles. What we cannot identify, we store at the edge of the village, where it can do no harm.\"\n\nThey arrived at another wooden shack, this one far larger than the prison cell. Jules could see no weathering or moss growth, which indicated that it might have been constructed more recently than some of the other structures. Bozka led them inside while his guards took up positions at the door, Jules and his companions stepping into a dark room. The Patriarch retrieved an item from his rig and then reached up to light one of the hanging candles with some kind of flint or maybe a magnesium tool, striking the two halves together until they produced a spark. The room was lit by the flickering flame, and Jules was immediately reminded of a tool shed. Instead of tools, however, it was packed with recovered UNN technology. There was a whole armory in here.\n\nThe Marines began to walk around the room, examining the items as Jules looked on. Every wall and surface was strewn with pieces of armor, weaponry, and other random gear.\n\n\"Ceramic armor made for Borealans,\" Simmons muttered as he struggled to lift one of the massive chest-pieces. \"XMRs, magazines, batteries, spare barrels and parts. Grenades, flares, laser designators. What have you got over on that side, Edwards?\"\n\n\"We got some self-filling canteens, the ones with water condensers. Plenty of MRE packets, ten thousand calories apiece, the Borealan variety. Medkits, this looks like a tablet computer, a collapsible shovel.\"\n\n\"This is some kind of powder revolver,\" Velez said as he showed them a handgun that looked as though it weighed more than the average rifle, visibly straining as he turned to place it back on the table. \"Not UNN-issue, there's other Rask shit here too.\"\n\n\"How do you know this stuff came from the Rask?\" Jules asked.\n\nVelez turned around to show him a serrated dagger that was closer to the size of a machete, a cruel gut hook shaped into the pointed end.\n\n\"Because the UNN doesn't make anything like this, and I've never seen anything like it in Elysia, either.\"\n\n\"So, some of this gear came from the UNN, and some of it didn't?\"\n\n\"Hard to say exactly where it came from,\" Simmons said as he turned an oversized XMR over in his hands. It looked identical to those used by the Marines, except that it was blown up in scale, designed to be used by the larger member species of the Coalition. \"Someone has scratched out the serial numbers on these. It looks like UNN tech to me, though. This is mil-spec, it's not surplus. Same goes for the armor and the grenades.\"\n\n\"They were definitely manufactured by the UNN,\" Edwards confirmed as he opened one of the MREs and spilled the various packets onto a table, examining their contents. \"This is all standard-issue. Someone is misappropriating Coalition supplies, if that's happening before or after they reach Borealis, I have no idea.\"\n\nJules fished in his pocket for his tablet computer, the screen lighting up his face as he began to type.\n\n\"We need to document everything that was recovered, and I need to take some statements. I'll be making a full report, and there will certainly be an investigation into the Rask activity. Will that be enough to assuage your concerns, Patriarch Bozka?\"\n\n\"That sounds satisfactory,\" he replied. He still seemed suspicious, but the fact that they were doing something about it was a show of good faith, at least.\n\nCHAPTER 3: WINE AND DINE\n\nThe negotiations dragged late into the morning, Jules and Bozka sitting around one of the carved tables in his dwelling while Yuta and the Marines milled about outside. It wasn't that they were prohibited from sitting in on the discussion, but the recent events and their strange new environs were of far greater interest than drawn-out political discussions. Not only was going through the conventions and ensuring that the Patriarch understood them all a difficult and time-consuming task in itself, but many of the concepts were entirely alien to him, requiring a more in-depth explanation than usual.",
        "Defense spending must be five percent of the territory's GDP, which due to both conceptual and language barriers, he had to explain was the total sum of the territory's economic output. The Araxie supplying troops to the Coalition was simple enough, as was the pledge to tolerate diversity and inter-species cooperation. Based on Bozka's outrage at the Rask raids, it was obvious that he understood what it meant to respect sovereignty. They went over the minutia of the charter for hours, everything from prohibited weaponry to sapient rights, until the sunlight finally began to peek over the jungle canopy.\n\n\"If everything is clear and you agree to the terms as laid out, the next step is the evaluation,\" Jules said as he resisted the urge to rub his eyes. He had been staring at the glow of his tablet's screen for so long that it left afterimages when he looked away. \"I will require unrestricted access to your territory. I'll need to interview people and make an estimate of your economic output, inspect your armed forces to determine if and how they might be incorporated into our own, and I'll need to determine whether you can meet the stated requirements.\"\n\n\"Your laws seem just as you have explained them to me,\" Bozka replied. \"I see a great reverence for life, which is something that your people and mine both share. But I worry that these laws are merely talk, that your Coalition states one thing, yet does another. The Rask too agreed to these same terms, did they not?\"\n\n\"I can assure you that these laws are ironclad,\" Jules insisted. \"Anyone found violating them would face criminal charges, and any government found to be routinely infringing on these conventions would be expelled from the Coalition. We take it very seriously, but you have to understand the scale of the territory that we police. We have tens of billions of citizens spread out across dozens of planets, they live light-years apart, piracy and crime are a problem even in our own sphere of influence. We don't promise a Galaxy free of injustice, but what we can promise is that all Coalition members will work towards rectifying injustice wherever they find it. We are stronger together, and if the Araxie face threats more dire than even the Rask, we will be required by law to protect you. Our Marines and our carriers will be at your disposal.\"\n\n\"I do not fully understand much of this technology,\" Bozka said as he drummed his claws on the wooden surface of the table. \"These carriers, they are vehicles that can transport armies between the planets? So, if Araxie was threatened by an enemy, they would come to our aid?\"\n\n\"That's correct,\" Jules said with a nod, \"but it's not just about protection. You'd be gaining access to an economy that spans known space. You could trade in technology and weapons, products, and materials that can help elevate the Araxie and make you the equals of the Elysians and the Rask. Medicines that cure diseases and make you live longer lives, amenities, and conveniences. There's so much potential.\"\n\n\"I fear for our way of life,\" the Patriarch continued, \"too much change happening too quickly could erase our culture. Yet I do not have a choice. If I do not ensure that the Araxie are brought into the fold, we will not be able to defend ourselves. Our territory will eventually be conquered or absorbed by another, be it the Rask or the Elysians or someone else. We need weapons and technology that only the Coalition can provide, all in service of countering a threat that your people had a hand in creating...\"\n\n\"We're going to be looking into this problem with the Rask regardless of whether you join or not,\" Jules explained, \"I can assure you that they will be dealt with accordingly if it's discovered that they're engaging in criminal activity. But if you want my opinion, I think you should talk to Yuta. She's Elysian, the Rangers live in the jungles of their territory much as you do, perhaps she can give you some more insight into how joining the Coalition changed her society. If you won't take my word that our intentions are good, then perhaps she can convince you. Do you have any other questions?\"\n\n\"This process is...complicated,\" the Patriarch grumbled. He was probably used to alliances being formed and broken based on the whims of all-powerful leaders, but the Coalition did not function that way. There were councils, votes, hearings. Jules couldn't even guarantee that the Araxie would be accepted when everything was wrapped up, he could only put forward a proposal, and the Security Council would then vote on it. It could be months yet before they had a definitive yes or no answer.\n\nThe Patriarch unfastened a small canteen from his belt and popped the cork, taking a quick draw before gritting his teeth and hissing. Whatever it was, it didn't go down easy. Bozka offered the canteen to Jules, but he refused, returning his eyes to his tablet. Knives, little bottles of spirits, fire lighting tools, and who knew what else. Why did the Araxie carry everything on their person rather than storing it in their homes? Perhaps they tended to range further away from the village than he imagined?\n\n\"The suns rise,\" the Patriarch said. \"Soon, the village will sleep. But before that, we should eat. Will you and your people join us?\"\n\n\"Oh, your people sleep during the day?\" Jules asked. \"I suppose that makes sense, it explains why you don't need much light to see by. We should adjust our schedules accordingly. And, of course, I'm sure everyone would be happy to eat with you.\"\n\nThat seemed to please the Patriarch, and he stood up from the table, clasping his furry hands together with a muted clap. He was no doubt glad to escape the proceedings for a while, even Jules was happy to take a break.\n\nThey exited through the large door, the dark sky turning a shade of deep blue above their heads as the twin suns rose. Edwards and Velez were sleeping, the latter using his rucksack as a pillow, while Simmons and Yuta were chatting nearby. They were probably discussing the situation with the Rask. They halted their conversation as Jules and Bozka approached, Simmons turning to greet them.\n\n\"How are the negotiations going?\"\n\n\"We're making progress,\" Jules replied with a grin. \"The Patriarch has invited us to eat with him, I thought that you and the others might join us?\"\n\n\"Sounds very diplomatic,\" Simmons replied, \"I'm game.\" He walked over to Velez and gave him a kick with his boot, the swarthy Marine jolting awake. \"Grub's up,\" Simmons said. Velez roused Edwards, and the two stood, yawning and blinking their eyes groggily.\n\n\"By the way,\" Jules began as they trailed behind Bozka, \"we're going to have to change our sleep schedules. Looks like the Araxie are nocturnal, so we'll need to be awake at the same times they are.\"\n\n\"Not a problem,\" Simmons said, \"we're used to catching some shut-eye whenever the opportunity presents itself. We're rarely on a set schedule when we're out in the bush.\"\n\nThe Patriarch led them through the village until they arrived at a giant felled tree. One of the larger examples had toppled over at some point in the past, the massive network of torn roots extending out like skeletal fingers. Jules wasn't sure what force could have brought this massive behemoth down, it was at least fifty or sixty feet in diameter and maybe two hundred feet long from what he could see. It was covered in moss and plant growth, carpeted in a blanket of greenery that made it look like the jungle was slowly reclaiming it.\n\nAs Bozka made his way towards the tangled roots, Jules realized that there was a massive door built into them. The alien opened it and ushered them inside.\n\nThe humans looked about in awe as they emerged into a truly gigantic, hollowed-out tree. The Araxie had carved away the dead wood with an expertise and finesse that could only have been attributed to a master woodworker. The curved ceiling was at least forty feet above their heads, the same hanging candles suspended on ropes present here, too. It was far better lit than the Patriarch's dwelling, and the heat was stifling due to the fire pits that were spaced out along the structure's length, casting the hall in their flickering glow. The floor beneath their feet was level, not made from planks, but actually carved from the wood of the dead tree itself. The growth rings were still visible, serving as a kind of natural decoration.\n\nIt seemed as though they had carved holes into the trunk to expose the earth beneath it, then they had filled those holes with stones, transforming them into fire pits that were presently being used for cooking. They burned without smoke, stocked with what looked like charcoal or something similar, their heat adding to the already sweltering temperature of the jungle.\n\nLong tables lined the center of the hall, spaced out between the fire pits. They appeared to have been carved from the wood of the tree as well, along with the benches to either side of them. Their legs transitioned seamlessly into the floor, the same growth rings visible in their varnished surfaces. It must all have been treated with some kind of stain to prevent it from rotting, especially in this excessively humid environment. Everything was one seamless piece of wood, a single engineering project of massive scale. They must have known exactly what they were going to make from the tree before they had started cutting away the excess wood, carving it from the inside out, every bench and pit carefully planned.\n\nThe curved walls were decorated with trophies from hunts, there were the horns and antlers of truly massive animals, and pelts that sported exotic patterns and colors. The hall was packed with Araxie. They were sitting at the long tables, and eating from a buffet of strange foods, others rotating spits over the fire pits that were laden with the carcasses of native animals. The smell of cooking meat was enticing, it was like the scent of a barbecue wafting over from a neighbor's yard, but the heat was making Jules sweat buckets. It was like a sauna in here, he didn't know how long he could tolerate it.\n\nBozka led them over to one of the benches, and they all sat down in a row. Jules found himself sandwiched between Yuta and the Patriarch, their size making him feel minuscule. Just like the stools back in Bozka's dwelling, these benches were far too tall for a human, his feet swinging a clear foot off the floor. The table was a little high too, but not so much that he couldn't reach it.\n\nThe Araxie sitting across from him scrutinized him curiously. They all looked very similar to the Patriarch, with a full coat of black fur that seemed to shine in the light and a pair of striking, emerald eyes. They were dining on the legs of some kind of local animal that was analogous to a deer or a cow. It had muscular thighs, the hooves still attached, the skin crisped like roasted chicken. They didn't use cutlery, they dug their hook-like claws into the meat like knives, their sharp teeth shearing away chunks of flesh. When the sauces and juices matted their furry hands, they extended long, rough tongues to comb their fingers like a cat grooming itself. They were so flexible, almost like tentacles, coiling around their digits and leaving the fur shiny and clean in their wake.\n\n\"We Araxie pride ourselves on our dishes,\" Bozka explained, waving his long arm across the table. There were earthen jugs that contained what looked almost like gravy, and there were massive, wide trays that were piled high with veritable mountains of meat. There even entire animals the size of wild hogs. There were drinks too, including water, and other colored liquids that Jules couldn't identify. \"Freshly killed meat roasted over open flames, flavored with oils and sauces. Take your pick.\"\n\n\"Hang on,\" Simmons said, pulling a device from one of the pouches on his uniform. They had removed their black armor for the time being, but the suits that they wore beneath were covered in pockets and small bags. \"While we appreciate your hospitality, humans have different nutritional requirements to Borealans. We need to scan the food first to make sure that it won't make us sick.\"\n\n\"This tool can tell whether food is safe to eat?\" Bozka asked, looking over at the handheld scanner.\n\n\"That's right, think of it as a kind of...electronic nose.\"\n\nYuta reached across the table and hooked a large hunk of flesh in her claws, bringing it into range of the Marine, oils raining down onto the wooden table. He ran the scanner over it, reading from the small display that was mounted on the tool.\n\n\"It's basically just animal protein and fat. It's cooked properly, if a little on the well-done side. It should be alright for humans to eat, but I'm going to recommend that Mister Lambert abstain. If you get food poisoning or you react badly to something, you won't be able to perform your duties. You'd do better to eat one of the MREs instead.\"\n\nYuta had no such concerns, raising the chunk of flesh towards her mouth and sinking her teeth into it gleefully. It seemed almost relieving for her to be able to tear into something, stripping away meat with her pointed teeth and chewing contentedly. After a few bites, she set the meal down on the table and reached into one of her pouches, withdrawing a glass vial of brown liquid with a screw-on cap. She opened the container and upended it onto the meat, some kind of grease or oil spilling forth. When she was done, she put the bottle back in the pouch and took another bite, nodding as if to indicate that the taste had been improved.\n\n\"What was that?\" Jules asked, looking up at her.\n\n\"Fish oil,\" she said over a mouthful of her food, \"it's a seasoning.\"\n\n\"Oils are like ketchup or mustard to Borealans,\" Edwards explained, leaning forward across the table so that Jules could see him. \"They all have their preferred flavor, vegetable or fish oil, usually. They carry it around with them wherever they go.\"\n\nBringing a bottle of your preferred brand of ketchup to a restaurant with you would be in extremely poor taste, but the Patriarch didn't take offense, Yuta tearing away a piece of meat with her claws and passing it to him. He seemed to like the taste, giving her an approving nod.\n\nJules was handed an MRE packet from one of the rucksacks. He was a little disappointed that he couldn't sample the alien food, but Simmons was right. It was best not to take risks, he couldn't negotiate the Araxie's entry into the Coalition if he was vomiting his guts out in the jungle. Edwards was also forgoing the meat, choosing an MRE for himself as well.\n\n\"I wanted to ask you something,\" Jules said, Yuta pausing her chewing to glance down at him as he began to cook one of the self-heating rations. She was most of the way through the leg of who-knows-what that she had been eating. Jules found himself marveling at how much meat she could put away in one sitting. She required a ludicrous quantity of food and protein to maintain her gigantic, muscular body. He thought back to the Borealan MREs that they had found amidst the stash recovered from the Rask. Ten thousand calories apiece, enough to feed the average human for four or five days.\n\n\"What is it?\" she asked.\n\n\"That Rask back there...why was he speaking English? Was it just for our benefit?\"\n\n\"Many of the territories are at odds, or otherwise isolated from one another,\" Yuta explained. \"I do not speak Rask, the Rask likely does not speak Elysian, but any Borealan who deals with humans knows English by necessity. It has become somewhat of a common tongue as of late.\"\n\n\"A lingua franca,\" Jules mused, \"I see. Why did he call you clawless? What does that mean?\"\n\nShe looked uncomfortable, and he wondered if it had been a bad idea to repeat the word. Perhaps it was a slur or a curse word of sorts. It had sounded innocuous enough to him, but it clearly had some hidden meaning.\n\n\"There was a period in our ancient history that we are not proud of,\" she explained. \"In those days, the Borealans were just starting to leave the equatorial deserts, and we were colonizing the lakes. Wars were fought over territorial boundaries, and those eventually resulted in the territories that you see today. Sometimes, when we conquered tribes that were attacking from the deserts, we would make them slaves. We forced them to build our cities and harvest our crops.\"\n\n\"There are similar periods in our history,\" Jules said with a solemn shake of his head, \"many of our ancient cultures kept slaves. The Romans, the Egyptians...\"\n\n\"Unruly slaves had their claws filed down or torn out,\" Yuta continued, \"and they came to be known as the clawless. The practice was barbaric, but more than simple mutilation, it was un-Borealan. If a slave had the strength to challenge his master, then he should not be a slave, it went against the very core of what makes us who we are. It prevented them from gaining status, of asserting themselves. It was outlawed before long, but the term clawless still persists. It's usually used to refer to someone who is cowed by external factors, forced to curtail their instincts. Some Rask like to refer to Elysians as clawless, they say that we are slaves of the humans, that we go against our nature by working alongside those that they deem to be weaker than themselves.\"\n\n\"I see,\" Jules muttered, \"so it's a status thing. They think that Borealans should be the ones in charge?\"\n\n\"It runs deeper than that. It's hard to explain to someone who is not familiar with our ways, but Equatorials resolve conflict with violent bouts. Challenges are met with claws and teeth, and then the loser must submit to the victor. The strongest and fittest Borealan is Alpha, but this is not the way of your people. The desire to overpower and dominate is strong, but those instincts must be controlled, redirected if we are to work alongside other species. When we provide soldiers to the Coalition, they must undergo special training that teaches them to obey a human of high rank as if he was their Alpha, despite the fact that subduing him would be child's play. Some Rask see this as being un-Borealan, and so they call us clawless. The Rask soldiers undergo the same training, with varying success I might add, but they seem to use the term exclusively as an insult to refer to Elysians these days.\"\n\n\"What about you?\" Jules asked, glancing up at her as she resumed eating. \"You take orders from Simmons, and you don't seem like you want to twist his head off.\"\n\n\"We Rangers are disciplined, patient,\" she explained as she licked a droplet of grease from her chin with her prehensile tongue. \"For a hunter, it can be no other way. I have also worked with humans before, which might be why the Patriarch chose me for this task. If my Alpha orders me to obey a human in his stead, then I will do so without question.\"\n\nShe almost seemed flowery when she spoke of her Alpha, staring off into space as she stripped another mouthful of flesh from the bone, her round ears twitching excitedly.\n\n\"So...you think highly of your Alpha?\" Jules asked, watching her reaction closely.\n\n\"Oh, yes!\" she replied enthusiastically. \"He is the strongest of our Ranger outpost, wise and powerful. Even if anyone had the desire to challenge him for leadership, I doubt that they would succeed. I still bear the scars from the first time he subdued me,\" she added as she thrust her hips towards Jules. She directed his attention towards a trio of healed claw marks that ran across her abdominal muscles, the pink flesh standing out against her white skin. \"I'll never forget the ache of his teeth sinking into my neck as he mounted me.\"\n\nHer eyes glazed over again, Yuta smiling warmly as though she was reliving a fond memory.\n\n\"Alright then,\" Jules muttered, his eyes wide as he turned his attention back to his food. That didn't sound like something to reminisce about to him, more like a reason to make a police report, but to each their own..."
    ],
    "authorname": "Snekguy",
    "tags": [
        "size difference",
        "large breasts",
        "femdom",
        "aliens",
        "muscle",
        "voyeurism",
        "public sex",
        "long tongue",
        "massage",
        "bathing"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/black-velvet-1"
}