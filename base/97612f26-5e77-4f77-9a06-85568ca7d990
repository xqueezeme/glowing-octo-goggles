{
    "title": "A Handyman's Memoir Ch. 39",
    "pages": [
        "All characters in this story are age 18 or older\n\nA gulp of cold beer splashed down my gullet after a long day of installing kitchen cabinets for a customer. My feet were up and I was completely relaxed, watching the boats go by outside my screened porch. Lee emerged from the trees next to the dock and approached with a tired smile on her pretty face.\n\n\"You're the best looking wild animal to come out of those woods all evening,\" I said as she entered the creaky screen door. \"Help yourself to a drink sweetie. I'd get up and get it for you but I'm just as beat as you are today.\"\n\n\"Pretty customer?\" she asked with a wink, and she went inside.\n\n\"Nope. Most of them are just regular jobs you know. We're not ripping our clothes off at every house we go to,\" I said loudly through the door.\n\nLee came back from the refrigerator with a fresh beer for me and one for herself.\n\n\"I know hun, I'm just kidding,\" she said. \"I still think it's wild and crazy though. Especially Ronnie. I can't believe Kathy's cool with it all, but she seems to be.\"\n\n\"Well she's gettin' her's too,\" I said. \"That seems to be keeping things in balance.\"\n\nLee snuggled up against me on the futon and we watched a dozen geese land on the calm river.\n\n\"Speaking of non-traditional relationships,\" she said, \"I need to put in for vacation time pretty soon. Were you serious when you invited me on the boat a few weeks ago?\"\n\n\"Absolutely,\" I said. \"You never made it down this winter, so yeah, what do you wanna do? A weekend? A week? A month?\"\n\n\"Well, anything more than a long weekend might be pushing it, what with you and my daughter being in love and all,\" she said.\n\n\"Yeah, I guess that is non-traditional,\" I said with a smile.\n\n\"It sure is,\" she said. \"I know she won't mind us going, but let's do it when she's in Brazil for that trip she's doing for school. It'll be less weird for me if she's not around.\"\n\n\"Sounds great,\" I said. \"Just give me the dates and I'll tell Ronnie.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nA week before our little getaway, our wild biker bartender friend Denise ended up in the emergency room again, beat up by another loser guy. Lee was working in the E.R. again when it happened, and helped to patch her up. The two of them had become good friends over the course of the past year, and Lee was really upset by the whole thing. Denise took some time off from her job to heal up and was staying with Lee at the river. Emma was home for the summer too, and the sight of the three of them in their bikinis sunning on the deck was enough to reanimate a dead guy.\n\n\"Jesus, I don't know if I can handle seeing the three of you like this very often,\" I said when I went over to say hello one morning.\n\nThey were sprawled out on lounge chairs in various states of bikini removal \u2014 Lee sitting normally, with both pieces on, reading a book; Emma on her stomach with her top off; and Denise flat on her back with her removed top draped over her small tits and her legs spread sensuously, letting the sun in to her creamy smooth inner thighs.\n\n\"There's our favorite lover,\" Denise said. \"Just in time, we were gettin' horny.\"\n\n\"Dennie!\" Lee said, shaking her head at her wild friend.\n\n\"What?\" Denise shot back at her. \"Your sweet little daughter's far from innocent you know. Steve makes us all happy from time to time, don't you Steve.\"\n\n\"I do my best,\" I said, leaning back against the deck railing, looking over my three blonde beauties.\n\nEmma just smiled and giggled, as twenty-year-olds are wont to do when the topic turns sexual. Her ass looked particularly sweet, barely clad in her wispy thin cotton bikini bottom.\n\n\"I was just gonna go get a yogurt,\" Denise said, \"but I can think of a better tasting source of protein. Whaddya say Stevie?\"\n\n\"Jesus Dennie! At least go in the house,\" Lee said.\n\n\"Come here Stevie,\" Denise said. \"We're all adults, and I haven't seen anybody on the river all morning.\"\n\nI walked over to Denise, and she quickly unzipped my shorts.\n\n\"You're all fuckin' crazy people,\" Lee said, shaking her head again, but with a little smile this time. \"Crazy orgy man moves in next door and the whole world goes nutty.\"\n\nEmma giggled again, and lifted her head up off the lounge to get a better look as my half hard cock slipped into Denise's magical mouth. Of all the women I knew, Denise was the undisputed cock sucking champion, a grand master of the skill, and any chance I got to let her work her mastery on me I was going to take.\n\nEmma could tell something special was going on, and she rolled over and raised the back of her lounge chair to watch, the milky white flesh of her lovely young tits almost glowing in the sunshine. Denise took me deep, massaging my cock with her throat and tongue muscles, and my balls with her hands. It was that combination, especially the particular way her hands massaged my balls and the area behind them, that seemed to affect me so much. She was relentless, with no regard to prolonging the activity, just a steady build in intensity that left no place to go but a massive orgasmic explosion and a big mouthful of hot cream.\n\n\"Ohhhh! Uhgggg!\" I grunted, and my knees weakened as I pumped her mouth full. When she had wrung me dry I had to stagger to a seat, as I always do after she sucks me off. \"Fuck!\" I said quietly, barely able to speak, holding my shell-shocked crotch gently in my hand.\n\n\"Whoa!\" Emma said quietly. \"I've never seen him like that before!\"\n\n\"Fuck!\" I said quietly again, still trying to pull myself together.\n\n\"You'll show me?\" Emma asked Denise, with big hopeful eyes.\n\n\"Sure sweetie,\" Denise said. \"We better give him a few minutes to recover first though.\"\n\n\"Fuckin' crazy people,\" Lee said, her nose buried in her book. She shot me a sideways glance and a sexy smile. \"Can we cover up please? It's not a nudist camp you know.\"\n\nEmma giggled at her mother's attempts at trying to keep things under control, and she and Denise put on their tops. I retrieved my shorts, stopping along the way to give Lee a little kiss. \n\n\"Crazy orgy man loves living next to you ya know,\" I said to her. \n\n\"Yeah yeah,\" she said, and she smiled again.\n\nA little while later, after some small talk on the deck, I went into the house to get a bottle of water. When I came out of the kitchen Emma and Denise were waiting for me in the living room.\n\n\"Time for Emma's lesson,\" Denise said, and she winked at me. \"Strip big boy.\"\n\n\"Well this is turning into an excellent day,\" I said with a smile, and I was quickly out of my shorts and naked.\n\nA blow-job from Emma was a rare and delightful thing. She and I didn't partake in sex much. She never said so, but it was pretty clear she felt funny about it because her sister Becka and I were so close. I knew Becka didn't mind \u2014 she was a remarkably open minded girl \u2014 but Emma kept her distance anyway, and I respected that. There were two magical nights when she appeared at my door, and a quickie in my boat when I was working on it one day, but other than that I let her play it the way she wanted to play it.\n\n\"All right sweetie,\" Denise said as Emma got on her knees in front of me. \"Are you right handed? All right, move over like this so your massaging hand gets good access.\"\n\nShe placed Emma's hand under my balls, and my cock came to life.\n\n\"Yeah, that's it,\" Denise said.\n\nLee came in through the creaky screen door and sat down in a comfortable chair to watch the lesson. \n\n\"I can't believe I'm taking notes while I watch my baby daughter blow a guy,\" she said, and Emma giggled.\n\n\"Watch this,\" Denise said to Emma as she replaced Emma's hand with her own under my crotch. \"See what I'm doing? It's firm pressure, not to hard on the balls, just enough, and firmer behind them, that area between his balls and his asshole. Try that.\"\n\nEmma tried it, and Dennie gave her further direction.\n\n\"Yeah, that's it, now do sort of a rolling massage from the ball of your hand all the way out to your fingertips near his asshole,\" she said. \"Yeah, that's it, nice! How's that feel Stevie?\"\n\n\"Oh yeah!\" I said.\n\n\"Now,\" Denise continued, \"once you get his cock in your mouth you can add your second hand to the massage, and use it on the cock too sometimes, if it's big like Steve's. And for extra credit you can stick a finger in his asshole while you're doing everything else, but you might want to save that for special occasions.\"\n\nEmma giggled at that last part, and then she took my throbbing cock into her sweet little mouth, looking up at me with her big beautiful eyes.\n\n\"Are you able to deep throat honey?\" Denise asked her.\n\n\"No,\" she said, stroking my saliva covered shaft. \"I've been kind of afraid to try.\"\n\n\"I'll show you how to practice it later,\" Dennie said. \"But it's nothing to be afraid of. The worst that happens is you gag and your eyes water, but that's kinda sexy too. Guys love it.\"\n\nEmma looked up at me again as she took me back in, her head moved forward until it met resistance, and she pushed through, gurgling and gagging like a trooper until she had to pull off.\n\n\"Nice!\" Dennie said, \"That's fuckin' hot! Once you get so you can hold it deep like that, use your tongue and your throat muscles on the cock while you're doing your ball massage, and you're golden. For now though, don't push the throat to much. Just give him a regular blow job with lots of hand work while you do the massage underneath and see what happens.\" Dennie looked up at me and winked as Emma went back to work. \"Yeah, that's it. Keep it nice and wet so your hand slides good on the whole length of it. Spit on it if you need to. Yeah, that's it. Now, keep the massage underneath slow and even, but pick up the intensity on the blow-job.\"\n\n\"Fuck!\" I said as my knees started to weaken, and then I felt a massaging finger pop into my asshole. \"Oh Shit!\"\n\nAs Emma worked her new-found magic, one of those orgasms that seems to start in your toes and rise up worked it's way through me, and I came hard with my hands on Emma's head, my cock spasming in her sweet mouth.\n\n\"Fffuuuuccckk!\" I groaned when it was over and I could form a semi-coherent word.\n\n\"Oh baby, you get an 'A' from teacher today!\" Dennie said to Emma. \"What does she get from our volunteer?\"\n\n\"A+,\" I said, staggered and swaying. \"Fuck!\"\n\nEmma looked up at me, amazed at how she had rocked me. She swallowed the cum in her mouth, for what may have been the first time in her life, and a smile broke out across her sweet face as she licked the cum from her lips.\n\n\"You'll show me how to do the deep throat?\" she asked Dennie.\n\n\"Sure sweetie,\" Dennie said. \"Lee, you got any bananas honey?\"\n\n\"Crazy fuckin' people,\" Lee said, shaking her head but smiling.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"You okay?\" I asked a concerned looking Lee. We were sitting in Connie's wheelhouse sipping coffee, the big diesel droning quietly beneath our feet as we made out way East on the Erie Canal.\n\n\"I'm thinking too much, that's all,\" she said, forcing a smile. \"Leaving the camp in the hands of my wildest friend and my sexually active daughter . . . I guess I shouldn't worry about it.\"\n\n\"I'm sure they won't burn the place down,\" I said.\n\n\"I don't care about that,\" she said. \"I just don't want Emma hooking up with any of the guys Dennie hangs out with. They're trouble, most of them.\"\n\n\"Well, you've got a point there,\" I said. \"But Dennie understands that I think. And her ribs are still hurting, so she's probably not up for a wild party.\"\n\n\"Ha!\" Lee said. \"I don't think there's anything that would keep her away from a good time.\"\n\n\"Would you feel better if they came with us?\" I asked.\n\n\"Oh, you'd like that wouldn't you!\" she said, giving my ass a squeeze. \"Four days of three-on-one action. Nope, I'm sure it'd be fun, but I'm also sure you've noticed that breaking the ice of having sex in front of my daughters has been a tough nut for me to crack, even with all of Allie's pep talks about how liberating it was for them. Watching Emma give you a blowjob the other day was . . . interesting.\"\n\n\"That was your DNA giving that blowjob you know,\" I said with a little smile.\n\nLee laughed a little, and then she laughed harder.\n\n\"That's one way of looking at it I guess,\" she said, still giggling. \"I wish it was my mouth.\"\n\n\"Is it jealousy?\" I asked.\n\n\"A little, but in a friendly kind of way,\" she said. \"Nothing serious. That would really mess things up, wouldn't it.\"\n\n\"Sure would,\" I said. \"You know, I'm not saying I'm jealous worthy or anything like that, but with the amount of women in my life, I'm often surprised it goes so smoothly, and everyone's remained good friends.\"\n\n\"Yeah, it is unusual,\" she said. \"That all comes back to you though.\" She got up off her seat and put her arms around me from behind. \"You radiate good karma, and it infects all of us.\"\n\nLee kissed me softly, but it quickly built into a kiss of passion with her hand on my crotch, and Connie drifted out of the narrow channel into the shallows before I got her back on course. \"We stopping soon?\" Lee asked. \"I'm a horny girl all the sudden.\"\n\n\"It's a fairly narrow section for anchoring, but there's a terminal wall just around the bend at the next lock,\" I said. \"There's a park there though, and there might be people around.\"\n\n\"Ooo! That sounds hot,\" she said.\n\n\"Naughty girl!\" I said. \"My little Lee's an exhibitionist?\"\n\n\"Maybe,\" she said coyly. \"You'll probably think I'm goofy, but lately I've been hooked on sex in public video clips on the web.\"\n\n\"So you've never tried it?\" I asked.\n\n\"Nope,\" she said with a sexy little smile. \"Just . . . intrigued.\"\n\nWe approached the terminal wall adjacent to the lock, right in the middle of a small canal-side village. It was lunchtime, and quite a few folks were enjoying the sunshine in the park. I put out the big bumpers and Lee and I both jumped off the boat to tie it up. I tied the bow and she held the stern until I got there and gave her a quick lesson in the proper way to fasten the lines.\n\n\"Beautiful day!\" she said to a salt-and-pepper haired business man sitting on a bench about ten feet away. He was eating a sandwich and had his nose buried in an iPad until he saw Lee in her bare feet, short shorts and bikini top.\n\n\"Yes, lovely,\" he said with a growing smile as he admired her petite form.\n\nShe winked at me as we stepped back aboard, and we walked the side deck to the front companionway, Lee swinging her ass just a little more than usual. We went down the steep steps and I stopped at the bottom.\n\n\"Open or closed,\" I asked, gesturing to the companionway opening.\n\n\"Open,\" she said with a wicked smile.\n\nI left the side port-lights open to, which were round and about a foot in diameter, with a clear view of the little park.\n\n\"You're gonna have to be quiet you know,\" I said. \"We can't be too crazy.\"\n\n\"I know,\" she said, with a small fire starting to burn in her eyes.\n\nShe stripped, lit up by the overhead hatch and within view of the man on the bench, but she didn't look to see if he was watching. I could see him from my position in the shadows, and he was indeed watching. Lee's smile was wonderful \u2014 nervous and excited, and sexy as hell. She sat on the end of the bed and beckoned me, and I stripped off my shorts and t-shirt. Her hands encircled my waist and I put my cock in her waiting mouth.\n\nHer oral skills were always wonderful \u2014 soft and relaxed and heavenly. This day was different though. Her 'note taking' during Emma's lesson with Dennie was being put to use. A hand moved under my balls and started Dennie's rolling massage, and her soft relaxed mouth had more intensity than I'd felt before. She took me deeper too \u2014 had she been practicing with Emma's banana? She moaned a little louder than usual, like she wanted to be heard, and even allowed herself to gag a little on my long length. It was quite a sexy show, and I came hard with some loud groans I couldn't control.\n\n\"Fuck baby!\" I said breathlessly. \"You've been practicing!\"\n\nLee winked at me and smiled as she swallowed her creamy snack. I pushed her down on the bed and buried my face in her sweet little pussy, and she threw her legs in the air and giggled like a schoolgirl. When I had her close to cumming I plunged my cock into her tightness and she let out a loud shriek. Her eyes got huge when she realized how loud it was, and she covered her mouth with her hand and started giggling again.\n\n\"Oh my God I love it!\" she giggled as I fucked her.\n\nI knew she loved the fucking, but it was obvious she loved being watched as well. I've never seen such unbridled excitement in her eyes. I quickly glanced towards the park and another guy had sat on another bench within view.\n\n\"There's two men out there now,\" I whispered in her ear as I fucked her, and she met my thrusts with even more enthusiasm.\n\n\"On your back stud!\" she said, and we switched positions.\n\nShe mounted me reverse cowgirl style, putting her whole body on vivid display by leaning back with her hands on my chest, and she rocked her hips into me with a quick rhythm.\n\n\"Oh, fuck yeah!\" she said quietly. \"God I love fucking you!\"\n\nI let her do it until she slowed, and then I lifted her ass a little and thrusted up into her with everything I had.\n\n\"Ohhh Ffffuuuuccckk!\" she said a little too loudly, and she came with a vibrating shudder and a gurgling exhale.\n\n\"Oh baby! This weekend's just what the doctor ordered,\" she said quietly a few moments later, lying next to me with a leg over my belly. Her sweet ass and open pussy were facing our audience.\n\nWe dressed and casually walked across the deck to the wheelhouse and I fired up Connie's engine. Lee stepped off onto the wall and untied the lines.\n\n\"Enjoy your evening,\" she said to the man with the salt-and-pepper hair.\n\n\"You too sweetheart,\" he said.\n\nShe stepped back aboard and we glided across the glassy water into the empty lock in front of us.\n\n\"That was fuckin' hot!\" she said quietly with a huge smile.\n\nWe had been through a few locks already, so Lee knew the procedure, and she stood on the side deck and used a boat hook to hold us in place. She looked cute as the devil in her little bikini top and tight shorts, and one of the lock tenders came out to chat her up as we started our descent.\n\nWhen we made our way down and out the other end of the lock she came back in the wheelhouse to relax. She exhaled loudly and fanned her face with her hand.\n\n\"You know, I could still feel that orgasm when I was standing there talking to that guy,\" she said, obviously still excited. \"Wow, that was wild. I kept thinking, does he know I just had a huge cock in me five minutes ago?\"\n\n\"I take it you liked your little taste of exhibitionism,\" I said.\n\nShe exhaled through pursed lips with puffed cheeks. \"I never would have thought I would have liked that kind of thing,\" she said, looking out the front window at the ribbon of river ahead of us. \"Live and learn I guess,\" she giggled.\n\nShe asked me if I'd had had any exhibitionist adventures, so I told her about Julia and me at Carol's erotic art class. \"No way!\" she exclaimed with big eyes when I told her we had grinding, hardcore sex in front of a class of art students. \"Fuck!\" was all she could say, numerous times, as I told the whole story.\n\n\"I've got a long way to go before I can top that!\" she said. \"Crazy orgy man really is crazy I think.\"\n\n\"You know, you and I could do that,\" I said. \"The class really liked it, and Carol loved it.\"\n\nLee looked over at me with a blank stare, and then a smile showed through. \"Crazy orgy man,\" was all she said before returning her gaze out the front window, but 'Yeah, you'll probably get me to do it' was what it looked like to me.\n\n\"So, we should plan our evening,\" I said after a couple hours of relaxing cruising. \"We can anchor out, or tie up at a lock, or tie up in a village. We've got plenty of food onboard, but a village would have a restaurant. It's up to you sweetie.\"",
        "\"I kinda like the idea of anchoring out,\" she said. \"Let's try that.\"\n\nI looked at the chart book and the widest section of river coming up was sandwiched in a valley with the State Thruway on one side and the main East/West railroad line on the other.\n\n\"I'm not to sure how peaceful it'll be, but you might get a chance to show off a little,\" I said with a smile.\n\nWe found a good safe spot to anchor and I fired up the barbecue grill on the back deck. Lee brought out two beers. She had discarded her bikini top and shorts, and was wearing nothing but her little lacy panties. Luckily, we were far enough from the highway so she didn't cause a massive accident, but if anybody was looking she was definitely visible, and it obviously gave her a thrill. We were closer to the railroad tracks, and it wasn't long before we heard something coming. It was a freight train, moving slowly.\n\n\"What should I do?\" Lee asked with a big smile and big eyes.\n\n\"Show em that beautiful body,\" I said.\n\nShe got up and walked to the bow of the boat, and then walked back, slower, and with more 'sexy' in her step. The tracks were right on the shoreline, about forty feet from us, and the big engine slowly rumbled by. The loud air horn blew, and an arm came out the window and someone whistled and yelled something as they passed. Lee smiled and waved at them as she strolled back and sat down next to me.\n\n\"Oh my God!\" she laughed. \"This is too much fun!\"\n\n\"You are one sexy woman,\" I said, shaking my head.\n\n\"You wanna fuck me when the next one goes by?\" she asked, with excitement radiating off her smiling face.\n\n\"Whaddya think, I'm gonna say no?\" I said, and I kissed her hard.\n\nI had a feeling it was a pretty busy right-of-way, because there were numerous tracks and it cut right through the center of the State, and we didn't have to wait long before we heard another big air horn blow and the distant rumble of an approaching train off in the distance. \n\n\"Hurry up!\" Lee said like a little kid at Christmas as she pulled off her panties and I whipped off my clothes. She dove in with her mouth on my cock and I was hard with plenty of time to spare.\n\n\"What do you think, like this?\" she asked. She had her hands on the side deck railing facing the tracks, her back arched seductively, and her sweet ass beckoning me.\n\n\"Fuck yeah, that's hot!\" I said.\n\n\"Oh fuck!\" she gasped when I entered her. \"I've never been so horny in my life!\" she said as the slow moving freight train approached.\n\nBy the time they got to us I was giving it to her good, with one hand under her belly and my other hand pulling her light blonde hair to keep her back arched so the boys could get a good look at her sexy face and tits.\n\n\"Fuck!\" she screamed right after the big horn blew, and a head emerged from the window and yelled something.\n\nI kept up my relentless thrusting, slapping hard against her ass. Just then the noise increased, and an Amtrak passenger train went by in the other direction, on a track closer to us. It was going faster, but slow enough for us to see people's heads swivel and look out at us. It was all too much for Lee, and she came hard, screaming at the top of her lungs, adding to the noisy cacophony. I came too, deep inside her, and as the trains pulled away I pulled her up against me and held her tight, both of us gasping for breath.\n\n\"Did I mention you are one sexy woman?\" I said, still trying to catch my breath.\n\nLee turned her head and kissed me. A sloppy wet, super sexy kiss.\n\n\"Oh my God!\" she said quietly. \"I can't even tell you what that felt like. That was beyond words.\" She turned around and embraced me. \"You . . . you are beyond words.\"\n\n\"Holy shit, I forgot about the grill!\" I said with a laugh. \"At this rate we'll burn up all the gas in one night.\"\n\n\"As long as this things still burnin', I don't mind,\" she said as she fondled my sticky, half deflated cock.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThat evening we lounged on the bed in the warm glow of the oil lamps, listening to the crickets and the bullfrogs, talking about life and love, music and movies, and whatever else grabbed our attention. After the bullfrogs took over the conversation for a while, Lee jumped in again.\n\n\"So tell me more about that art class,\" she said.\n\n\"Well you know Carol, and that awesome mural she painted for Lindsey's playroom,\" I said. \"Erotic art's really her favorite thing to do, but it's tough to make a living at. She does a lot of other kinds of art to make money, and she gives classes on the side in her studio to students at the art school at the university. They're mostly regular art, but sometimes she does erotic classes and they're really popular. It's usually just a regular model in a provocative pose, sometimes a student from the class will go back and be a model the next time, stuff like that. Sometimes they masturbate. Anyway, it was always just a single model, but she always wanted to have a couple do it, so when she and Julia and I got tangled up sexually she encouraged us to do it. Julia's wild side was just beginning to come out, and she decided she wanted to try it, so of course I said I would. The first pose was a sixty-nine. I thought it would probably be kind of static, but Carol encourages movement, so the kids can learn to capture fleeting erotic moments. Anyway, the sixty-nine got pretty wild, and it went so well we all decided to do some full-on fuck poses. Actually, calling it posing isn't really true \u2014 we just fucked our brains out in like three different positions. It was really wild, I can't even begin to tell you what it felt like, being up there on a little stage with all those eyes trying to capture the essence of it all on paper.\"\n\n\"Wow,\" Lee said. \"I'm all tingly just thinking about it.\"\n\n\"I know, so am I,\" I said. \"It was awesome. That's where we met Chloe. She's a student that insisted Julia and I call her. She's pretty awesome too.\"\n\n\"Christ, you got more women than you can shake a stick at, don't ya,\" Lee said.\n\n\"There's a guy that was there too, another student named Bobby. He and Chloe hooked up, and he's been to some of Julia's parties. He's got \u2014 I kid you not \u2014 a ten inch cock.\"\n\n\"Fuck!\" Lee said, her eyes getting huge. \"And I though you were mister monster cock.\"\n\n\"Carol just loves that thing,\" I said, smiling.\n\n\"So whaddya do, just take off your clothes in front of them all and start having sex?\" she asked. \"I don't know if I could do that.\"\n\n\"Well, it's all set up nice. There's a bed that's got nice soft lights on it, and music and wine. We wore robes and mingled with the kids beforehand \u2014 Carol thought it would help us see how serious they were about their work. It was good. Don't get me wrong, our hearts were pounding like crazy when we slipped off our robes, but it was excitement more than fear. It was unbelievably exciting. And starting with a sixty-nine, it was easy to relax into it \u2014 within a minute or two we weren't thinking about anything else but each other.\"\n\n\"Wow,\" she said. \"Wild. Did you get to see the artwork they did?\"\n\n\"Oh yeah,\" I said. \"It was awesome! They were all charcoal drawings, but all completely different. They just blew our minds, all of them. And Carol did one of the two of us beforehand as a gift. Julia's got it and had it framed. Last time I was there she had it hanging in her living room!\" I laughed. \"If you're thinking of doing it, I'm sure she'd do one for you. It's a pretty valuable gift really \u2014 her artwork isn't cheap.\"\n\nThere was silence again, and the bullfrogs took over the conversation while I let Lee mull things over in her mind.\n\n\"I'm sure she'd love to have you model on your own too if you want,\" I said. \"You could do like a classic nude pose just to get used to it all, or like I said, they do masturbating poses for the erotic class. You could make yourself cum while six or eight people watch. That'd be hot, right?\"\n\n\"Fuck!\" she said as she trembled a little. \"I just about came when you said that. You're a bad influence Mister Mills.\" She snuggled up even closer to me. \"It's crazy that I'm even thinking about this. I'm an R.N. at the hospital for God's sake. What if one of them came in there and recognized me?\"\n\n\"Carol made a nice speech at the beginning and again before they left, about discretion and not even telling their peers what went on there,\" I said. \"They all seemed really cool and professional. I don't think she's ever had a problem, because the kids don't want to mess up what she does there.\"\n\n\"You should be a salesman, you'd make a fortune,\" she said as she rolled on top of me. \"Now shut up and fuck me.\"\n\nWe fucked nice and slow, and Lee had her eyes closed, which was unusual for her. I'm pretty sure I know what she was imagining.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nA train rumbling by woke us the next morning. We had heard a few during the night, but it was a surprisingly restful night.\n\n\"Pleasant dreams?\" I said, and she rolled against me and rested a leg on my crotch.\n\n\"Mmm,\" she murmured, and smiled. \"I love sleeping on a boat. And you filled my head with so much deviant behavior, how could I not have pleasant dreams?\"\n\n\"So, should we keep going today, or head back to town and have Carol set something up?\" I said.\n\n\"Stop with that!\" she said and she pinched me. \"I'm not cut out for that kind of thing.\" She looked a little disappointed in herself for saying it.\n\n\"I think you're selling yourself short, but that's okay sweetie,\" I said. \"I'll drop it.\"\n\nShe looked even more disappointed at that.\n\n\"Pancakes for breakfast?\" I asked.\n\nAfter the last maple syrup drenched pancake was consumed Lee sat back and smiled.\n\n\"Holy shit that was good!\" she said, and she looked me square in the eye. I could see her thinking, and the silence was deafening. \"You got Carol's number?\" She said, and her eyes flared briefly with excitement.\n\n\"I do,\" I said. \"What should I tell her?\"\n\n\"I don't know,\" she said, sounding a little nervous. \"Just see what's what.\"\n\nI made the call, and Lee had so much nervous excitement she couldn't even stay and listen. She paced around on deck waiting for me.\n\n\"Tomorrow evening sweetie,\" I said as I walked on deck, and Lee looked shocked. \"She's thrilled, and she's gonna post a notice right now. You can do as much or as little as you like \u2014 go full out with me or just do a simple static nude pose. No need to decide 'till we get there.\"\n\n\"Okay,\" she said quietly, still seemingly in shock. \"Is it . . . is it okay if nobody knows about this but you?\"\n\n\"Sure baby, whatever you want,\" I said. \"It's gonna be a blast, trust me.\"\n\nWe hauled up the big anchor and turned back towards home.\n\n\"I'm gonna call one of the marinas in town and reserve a berth,\" I said. \"That way nobody'll know we're back. We can get a taxi up to Carol's place.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Hey you guys!\" Carol said as we walked up her steps the next afternoon. She hugged us both. \"So good to see you both. Most of the students are home for the summer, but the class filled up in two hours.\"\n\n\"Great!\" I said. \"Anybody I know?\"\n\n\"No, I don't think so,\" Carol said, \"but they've all been here before, and I trust them with something like this.\"\n\n\"Lee's pretty nervous,\" I said. \"She may want to ease into all this with a simple static pose or something.\"\n\n\"That's fine honey,\" Carol said. \"Just having a couple pose in any fashion is great for the class. It's totally up to you guys what you want to do. So, Steve said you might like to have one of my drawings in exchange for your time here?\"\n\n\"Oh I'd love it!\" Lee said, finally putting some of her nervousness behind her.\n\n\"Great, lets get started,\" Carol said. \"Then we can grab a pizza before the kids get here.\"\n\n\"Hey, this is different,\" I said as we walked into the studio.\n\n\"Yeah, I moved a few things around,\" Carol said. \"It gives more room for the bed, and I can light it better now.\"\n\nCarol had things all set up, with six drawing stations for the students and the bed up on a bigger platform, draped with an earthy looking sheet. She walked around switching on the stage lighting, and switched on the music.\n\n\"There's more room up there now,\" she said, \"so you can stand next to the bed, and have more access if you need it.\" She winked at me, and Lee smiled nervously. \"So Lee, this one's for you honey. What kind of pose do you want?\"\n\n\"Oh God, I don't know . . . I'd like to see a lot of Steve,\" she giggled. \"That beautiful ass of his, and the muscles on his back.\"\n\n\"I just had a vision when you said that,\" Carol said. \"Get out of those clothes and we'll try something.\"\n\nLee and I stripped. She seemed nervous, but she had been in an orgy with Carol at Lindsey's, so I think it was the anticipation of the students coming later that had her wound up a little. We sat on the bed and Carol adjusted the lights to a nice mellow glow with some nice shadowy definition on Lee's petite curves.\n\n\"You've got a great body girl,\" Carol said to Lee. \"That ass is just to die for.\"\n\nAfter she got the lights set she posed Lee, on her knees at the end of the bed, with her body upright and her shins hanging off.\n\n\"Is she the right height for you to fuck her like that baby?\" Carol asked me. \"She can bend over to let you in, but just try standing there behind her first so we can see what it'll look like . . . Yeah, that's it, now put one arm around her waist, and your other hand on her chest, sort of cupped under her tit, so I can see it . . . Nice! You'll be able to fuck her like that, right?\"\n\n\"You bet,\" I said. \"You must be psychic or something, 'cause she likes it like this.\"\n\n\"Every girl likes it like that baby,\" she said, \"when they're lucky enough to have a big cock to play with. So what do you think Lee? You like this pose, or do you want to try something different?\"\n\n\"I love it!\" she said, breathing hard already.\n\nCarol pulled her big easel a few feet across the floor to get the angle she wanted.\n\n\"Okay you horny bastards,\" Carol said. \"Commence fucking. Nice and slow to begin with, and try and hold off the orgasms if you can. But be natural. Make noise, have fun.\"\n\nLee lowered her upper body and arched her back to give her sweet pussy to me. She was very wet and ready, and I pushed into her. She moaned deeply, and it was easy to see the excitement had her in a heightened state. When I was in deep she raised up and I wrapped my arms around her as Carol wanted.\n\n\"Holy shit!\" she whimpered, nearly cumming on the spot. \"Holding off an orgasm might not be possible,\" she said.\n\n\"That's okay sweetie,\" Carol said. \"Just tell us about it so I'm ready. I'm sure you'll have another one anyway,\" she giggled. \"Turn your head towards me . . . not all the way, just . . . yeah, right about there. That's sort of where I want you. You can move, but just sort of use that as a home base for your head position. And Steve, look right at her face, wherever it happens to be.\"\n\nI started slowly thrusting up into Lee, and her body was alive like I've rarely seen it.\n\n\"Beautiful guys,\" Carol said, frantically sketching away. \"Lots of nice movement there. Steve, let me see that nice tit a little more.\"\n\n\"Oh fuck!\" Lee whimpered. \"I'm gonna cum!\"\n\n\"So me your face sweetie,\" Carol said, and Lee assumed the position as a grinding orgasm ripped through her.\n\n\"Nice!\" Carol said, completely absorbed in her work, and I kept up a slow thrust into Lee's bliss filled body.\n\n\"Oh God!\" she said quietly. \"That was one of the more amazing things I've ever felt.\"\n\n\"Better than when the Amtrak train went by\" I asked.\n\n\"Ooo!\" Carol said. \"I wanna hear that story when I'm done!\"\n\n\"Let's just say it's been a weekend to remember,\" Lee said, giggling a little.\n\n\"We're just gettin' started baby,\" I said, picking up the intensity of my thrusts.\n\n\"Oh shit!\" Lee gasped, and she looked back at me with a wild fire in her eyes.\n\n\"Take a little break, and then we'll go for orgasm number two to finish things off, all right?\" Carol said.\n\nWe sat on the bed and let our bodies calm down, wandered into the kitchen and I poured us some wine as Carol worked, and then we browsed through the other end of her studio looking at the artwork on the walls.\n\n\"Any time you're ready guys,\" Carol said, still working at the easel.\n\n\"Last time Julia let me get him hard again,\" Carol said to Lee with a sly smile. \"It's up to you though.\"\n\nLee beckoned her to the bed with her index finger and a smile. \"Do you do this when your students are here?\" she asked Carol.\n\n\"Ha! No, I try and remain neutral,\" Carol said as she gobbled me into her warm mouth. \"Okay, you're ready,\" she said with a big smile when I was rock hard again, wiping her mouth with the back of her hand.\n\nLee and I resumed our pose and Carol was still smiling as she started working again. \"No holding back this time guys, I'm ready for fireworks whenever you are.\"\n\nI gave it to Lee hard, and she just about levitated off the springy bed. She screamed and shrieked and came hard again, and I exploded deep inside her.\n\n\"Perfect!\" Carol said. \"You guys are awesome! Steve, you wanna call for a pizza while I finish this up?\"\n\nLee giggled at how businesslike it was. I was still inside her, and she and I were both gasping for breath, and Carol had already recruited me for Pizza duty. I had to laugh too.\n\nThe charcoal drawing Carol did was flat out amazing, as I expected. Lee was blown away, and couldn't stop looking at it.\n\n\"So, whaddya think honey,\" Carol asked Lee as we ate pizza, \"You wanna do a simple pose with the class, or something more. It's totally up to you.\"\n\n\"Well I wanna do something more,\" Lee said, \"but I'm kinda terrified.\"\n\n\"I've never done it, so I can't give you any personal experience,\" Carol said, \"but Julia, even with all the wild sex she's had since, she still says it was the most exciting experience she's ever had. That's the end of my sales pitch \u2014 I don't want you to feel pressured. I tell you what, let's play it this way \u2014 you guys'll meet everybody, and you can judge the excitement level and how you're feeling, and if it's too overwhelming we'll do a nice hand-job pose, with you sitting next to each other, leaning back against the wall, your legs sort of intertwined. If you get out there and you feel like showing off what you got, well do something harder \u2014 sixty-nine is a good way to start I think, and it looks great on paper.\"\n\n\"Okay,\" Lee said. \"If we do the hand-job can I sit so I'm not directly facing everybody?\"\n\n\"Sure honey,\" Carol said. \"That's one reason I picked a sixty-nine for Julia and Steve to start with, because you feel a little more enclosed in your own little world.\"\n\n\"Yeah, I can see that I guess,\" Lee said. \"Except my ass . . . and the rest of me . . . wow, it's like wide open in that position, isn't it?\"\n\n\"That's one of the sweetest asses I've ever seen honey,\" Carol said. \"I'd be proud of it if I were you. Plus, Steve's head'll be in there munchin' on it, so it won't be too wide open.\n\n\"Oh my God!\" Lee said with big eyes and a nervous smile.\n\nCarol filled her in on how long we'd be going, and told her that the second session could be more of the same, for the students to polish up their drawings, or we could go free-form if we wanted. Lee's eyes got big again thinking of the possibilities. Carol offered us her shower, and we cleaned up and lounged on her front porch for an hour, talking about old times, and she got us up to date on Julia, who was away on a book signing trip.\n\nThe first students arrived on foot \u2014 Lee lived in the middle of a popular student housing area near the university \u2014 with large portfolio cases hung over their shoulders. We chatted on the porch until more arrived, and we all made our way into the studio. There was a nice buzz of excitement in the air, as I remembered from my session with Julia. There were four guys and two girls this time, just the opposite of last time, and I could tell Lee thought the guys were cute. I wasn't sure how that would affect her decision on how far to go with her posing. The girls were damn cute too. Lee and I went in the house, got into the robes Carol provided, and sat at the kitchen table waiting for Carol. Lee downed a whole glass of wine in two gulps. \"Courage,\" she said as she set her empty glass down on the table. She looked deep into me and her nordic blue eyes sparkled. \"Crazy orgy man,\" she said, and a delicious smile lit up her face. I wasn't sure what the best way to encourage her was, so I just told her the truth.",
        "\"You know those guys out there think you're hot, right,\" I said. \"They're gonna cream their pants when they see that ass of yours.\"\n\nWith impeccable timing, Carol came in to get us. \"I gave them the speech about discretion and respect and everything,\" she said. \"They're very cool kids, I feel comfortable with them. You guys ready?\"\n\nI took Lee's hand and we walked out to the bed. I handed Carol my robe, and Lee glanced at me as she slipped hers off.\n\n\"Lay down big boy,\" Lee said quietly, her voice quivering a little.\n\nShe climbed onto me sixty-nine style, we both looked up at Carol, and she adjusted Lee's position a little. \"Go for it,\" she said with a smile.\n\n\"Eroticism people!\" she said loudly. \"If you can't capture it from this you never will.\"\n\nI kissed Lee's beautiful little pussy and her body was fully charged and electric again. She took my rapidly stiffening cock in her mouth and quickly lost herself giving a wonderful blowjob. The sound of six people sketching furiously took my mind back to the last time, with Julia, and I glanced out half hoping to see Chloe there again. Instead, right where Chloe had been, a cutie named Ashley looked mesmerized by what was happening just a few feet from her. Carol noticed too.\n\n\"Concentrate sweetheart,\" Carol said to her. \"I know it's hard.\"\n\n\"It's not only hard, it's fuckin' huge!\" she said, and almost everybody laughed, including Lee.\n\n\"Yup. it's a big one,\" Carol said loudly, for everyone to hear. \"Channel that knowledge. Capture that bigness, without making it a caricature. Capture the fact that the woman loves that it's big, that she worships a big hard cock. Use that feeling in your gut that makes it difficult to concentrate, that energy that's radiating into you from them. Use it. Let it flow onto your paper.\"\n\nAshley started working, and when I glanced at her a few minutes later she was really into it, her nostrils flaring and her hand flying across the paper. She looked like she could have an orgasm from the act of making art.\n\nA few minutes later Carol walked up to us and quietly asked us for orgasms. \"I don't know what Steve's got left, but keep in mind the visuals,\" she said to Lee.\n\n\"Okay people, like I told you before you started, if you want to incorporate orgasmic expressions and motions, now's the time to pay attention. It's fleeting so don't take your eyes off it while it's happening, let it burn into your brain, and while Steve and Lee take a break you can work some of that in to your drawing.\"\n\nI dove in to Lee's sweet pussy with increased vigor, and she squealed with delight again. With my tongue on her clit, I pressed my thumb into her ass. Her back arched and she came hard, with violent spasms and wordless mumbling moans that sounded wonderful. A super sexy woman oozing sex from every pore as she came hard for her admiring spectators.\n\nShe took two deep gasps of air, and plunged her head down on my rock hard shaft. Her hand went under my balls and Denise's massage technique started my launch sequence. Her sloppy wet mouth devoured me, I came with grunts that were much too loud, and I shot a spurt of cream onto Lee's chin as she continued her deep massage of my crotch. She took me in her mouth again, and then licked all around the tip and the shaft, sticky cum coating everything before she licked it all up and sucked me clean.\n\n\"Eroticism people!\" Carol said loudly. \"Eroticism. Keep working, I'm gonna give these two a break.\"\n\n\"Oh my God!\" Lee said quietly as Carol handed us our robes.\n\n\"You can wipe you face on that if you want,\" Carol said. \"I'll wash them later.\"\n\nLee wiped the sticky cum off her chin and face and giggled a little.\n\n\"Wow!\" she said, still trying to get her equilibrium back.\n\nI took her hand and we went in the house.\n\n\"That was fuckin' crazy!\" she said in the privacy of the kitchen, and then she started laughing. \"I mean what the fuck!\" she said through her laughter, and I laughed to.\n\n\"Didn't I tell you it'd be a blast?\" I said.\n\nCarol came in and saw Lee laughing.\n\n\"I take it you had fun?\" she said to Lee. \"That was fuckin' hot! So what's next, more of the same, or are you in the mood to get fucked?\"\n\n\"Oh I think I absolutely need to get fucked,\" Lee said, and she laughed again, a little nervously, and her eyes got big and sparkled even more as she thought about what it would be like.\n\n\"This is so fuckin' hot!\" Carol said. \"You guys are awesome. Come on out in about ten minutes.\"\n\nLee downed another glass of the crisp Riesling wine, and we walked out to rejoin the class. Carol joined us at the bedside.\n\n\"I didn't say anything yet,\" she said quietly to Lee. \"You still wanna go for it?\"\n\nLee looked out at the students, most of whom were still working on their drawings, and she looked very nervous again.\n\n\"You got anything left for me?\" she asked me quietly.\n\nI took her hand and put it on my robe so she could feel my growing hard-on, and her eyes swelled with excitement. She nodded nervously at Carol, who smiled and turned to the class.\n\n\"Okay people, listen up,\" she said. \"You're gonna finish those drawings up on your own later, because we've got a special treat. We did this at another class last year, and it was lot's of fun and everybody loved it. Steve and Lee are gonna go a little more hard core for y'all, and it won't be a single pose. They're just gonna do what comes naturally. They'll be moving, changing positions \u2014 no sustained poses, so it's gonna be great practice for working fast and capturing fleeting moments. It's exciting, but try to channel that excitement and really capture the energy of it all. Burn up some paper, try some new things and have fun with it. I know Steve and Lee are going to,\" she said as she turned to us and winked.\n\nLee walked over to her portable CD player and took out the mellow acoustic guitar music and put in some modern jam-band funk. She turned it up, switched off one of the stage lights to cast us in a slightly dimmer glow, and smiled at us as she came for our robes.\n\n\"Did I ever tell you I love watching people fuck?\" she said quietly, making Lee giggle and breaking some of her nervous tension as she disrobed in front of the suddenly very attentive class.\n\nThe music was in a quiet section, and you could have heard a pin drop as Carol walked off the little stage with a dozen eyes looking at us. They were probing, deeply observant eyes, and Lee froze. I put my arm around her and we got on the bed, both of us on our knees, face to face, and I pulled her tight against me. I kissed her and she was stiff and tight, and I could already feel her body getting sweaty. I slipped a hand between us to her pussy, and massaged it gently.\n\n\"You wanna fuck me now baby?\" I whispered in her ear. \"Fuck me hard in front of all these cute boys? Show 'em what a real woman can do?\"\n\nI massaged her pussy deeper and slipped two fingers inside.\n\n\"I'm gonna fuck you baby, with all these people watching,\" I whispered. \"Fuck you deep. I'm gonna make you cum.\" Lee moaned and whimpered. \"You wanna fuck me?\" I said. \"You wanna fuck this big cock?\"\n\n\"I wanna fuck you,\" she said softly, breathing hard.\n\n\"Say it louder baby,\" I said.\n\n\"I wanna fuck this big cock,\" she said louder.\n\nShe reached between us and stroked my long hot shaft, and she stepped backward on her knees and lowered her sweetly arched back and took me into her moaning mouth. I reached over the top of her and my fingers slid down the crack of her beautiful ass and into her hot, wet pussy. She groaned on my cock, sending vibrations into it as I thrusted slowly, deep into her throat.\n\n\"Oh God baby!\" I said. \"You make my cock feel so good!\"\n\nShe groaned her approval as saliva oozed around her lips and dripped down her chin.\n\n\"I love your cock baby!\" she said breathily as she stroked the sloppy wet shaft with her hand. \"Oh fuck!\" she said as my fingers played with her clit.\n\n\"You want me to put it way up deep inside you baby?\" I asked, making her shudder. \"Turn around baby, let me fuck you way up deep inside.\"\n\nLee turned around and dropped her head to the bed, looking out sideways at the students with her eyes half shut as I slipped into her velvety pussy, balls deep with eight rock hard inches, way down in her steaming hot gut.\n\n\"Fffuucckk!\" I said as I bottomed out, and Lee uttered a muffled scream.\n\n\"Shhiitt!\" Ashley said quietly from the front row of easels, and I was suddenly aware of the students again.\n\nI glanced at her as I started a fantastic feeling deep thrusting, and she was mesmerized again but Carol was on her way to get her back on track.\n\nLee rose up and started meeting my thrusts, encouraging me to speed up. Soon we were fucking in earnest, slapping together loudly, with a wild funk guitar riff mingling with our noises.\n\n\"God I love fucking you baby!\" Lee said and she thrusted her ass back into me even harder. \"Oh Fuck!\" she yelled.\n\nHer body was glistening with sweat, and her nordic light blonde hair was sticking to her and getting wet. She looked like a wild horny slut, a fuck machine that no man could resist.\n\nI pushed her down flat on her stomach, with her legs together, and straddled them and fucked her that way, gathering the wet hair off her back and pulling it tight to arch her back so everyone could see the wildness in her blue eyes.\n\n\"Oh my God!\" she grunted as my cock pumped into her tightly squeezed pussy. \"Oh fuck yeeeaaahhh!\" she yelled, and I gave it to her good and hard.\n\nI tried to keep the students in mind, and held a position for as long as I could stand it, which was pretty intense for Lee, but she was wild and into it. She came hard, flat on her belly, her hair still tight in my hand, a deep, low pitched \"Ohhhh Yeeeaaahhh!\" emanating from her, rattling the rafters.\n\nThe time was right for her to be on top and really put on a show, so I lifted her still quaking body and switched places with her. She tried to lay on top of me, but I turned her, reverse cowgirl style, and angled myself so she was facing more towards the students. She started out with her hands on my knees, closed off a bit from her audience, and I lay still while she fucked me, rocking her body back onto my cock in fluid motions, exhaling with deep moans. As the feelings within her expanded, she sat up and rode me with her hands on her sweaty tits. \n\n\"Oh fuck yeah!\" she said as she rode harder.\n\nAs the intensity built in her she leaned back, with her hands on my chest, and her sweaty sexuality was on full display. She was dripping wet, no doubt from the nervous energy and the 'performance' aspect of what she was doing, but it just made the whole thing hotter. My hands supported her slippery body just below her waist, and she continued to do most of the work, driving her pelvis hard, fucking nearly the full length of me. The view from the easels must have been spectacular \u2014 a beautiful sweaty blonde, her rosy red pussy wide open, riding a big cock for all it was worth.\n\nI looked out at the students and they were working furiously, their eyes big and wild, darting between the intense action and their drawings.\n\n\"Fuck me baby!\" Lee said, snapping me back into focus.\n\nI started to thrust up into her, moving my hands under her hips to hold her up slightly, so I could get my big piston up to speed.\n\n\"Oh fuck . . . Oh Fuck! . . . Oh Fuck!\" she said, her voice getting louder as the speed increased. \n\nThe springs in the bed were a perfect turbocharger for my movements, and soon my engine was spinning at red-line. I held it, hoping she'd cum, and her steady stream of shrieks told me it wouldn't be long. The shrieks turned to whimpers as her oxygen depleted, and a crying, stuttering, spastic orgasm overtook her. My cock was just about in flames, long strokes slithering in and out of her faster than ever before, and I came hard as her body spasmed. My long held breath escaped, sounding like a caveman yelp, and we slowed to a stop, every ounce of my energy given to Lee's beautiful body, and every once of her's given to mine.\n\n\"Oh fuck . . . oh fuck . . . oh fuck,\" she continued to say, quietly and between gasping breaths.\n\nShe laid back on me, my cock still deep in her, and she turned her tired head and we kissed. It was a beautiful, sloppy, passionate kiss, and my hands roamed her slippery, sweaty tits.\n\nCarol turned the music down low, and Lee gave me a 'Oh my God, I can't believe we just did that' look. She glanced out at the students, still working on their drawings, and pushed the wet hair off the sides of her face.\n\n\"God I'm a mess,\" she said quietly.\n\n\"You're the most beautiful woman I've ever seen,\" I said.\n\n\"I'll second that,\" a male student in the front said, and he blushed as everybody laughed.\n\nLee had slipped off of me and we sat next to each other as Carol approached.\n\n\"I don't even know what to say,\" Carol said to us and to the class. \"That was beyond erotic. That was just . . . so beautiful. I hope all you guys got something great out of that, because that was as good as it gets,\" she said to the class. \"I've never done this before, but I think the star of our show deserves a round of applause . . . Lee?\"\n\nEveryone burst into applause and cheers and whoops and whistles. Lee looked at me, surprised but excited. \"Take a bow sweetie,\" I said, and she stood in all her sweat dripping, sticky haired, red pussy glory and curtsied like a ballerina.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Did you guy's get some nice peace and quiet out there?\" Denise asked as we unloaded our things off the boat at my dock. \"You needed a nice quiet vacation like that,\" she said to Lee. \"I pictured you lounging in the sun with a cocktail in some nice quiet cove all day, and a nice relaxing fuck before bed . . .\"\n\n\"Somethin' like that,\" Lee said, and she winked at me. \n\n\"It's nice to have a few days away from reality once in a while,\" Denise said. \n\n\"You said it sister,\" Lee said with a smile."
    ],
    "authorname": "riverboy",
    "tags": [
        "outdoors",
        "public",
        "modeling",
        "blonde",
        "petite",
        "train",
        "outside"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-handymans-memoir-ch-39"
}