{
    "title": "Jane in New York Pt. 14",
    "pages": [
        "At three o'clock in the morning, Jane drove to Veronica's apartment to pick her up for their early flight. As always, the Asian supervisor was ready to go, already wearing business attire and makeup.\n\nRemembering Jane's punctuality from their old company, Veronica made sure to be ready as soon as she arrived. The Latina ran downstairs, wearing the same comfortable outfit she wore when she first arrived in New York.\n\nThough she didn't consider herself dressed up, aside from a light amount of makeup, Jane still found her breathtaking.\n\n\"Good morning, Jane,\" she said, getting into the car.\n\n\"Good morning, Veronica.\"\n\nThey drove off to the airport, with the sun nowhere in sight. Though Veronica knew it was a long shot, she hoped they would start talking in the car and mend their relationship. Unfortunately, Jane was intent on remaining dead silent.\n\n\"So, this is your new car?\" Veronica asked, hoping to open the line of communication.\n\n\"Yeah, I just bought it a couple weeks ago.\"\n\n\"It's kind of reminds me of your old car...\"\n\n\"Maybe that's why I chose it...\"\n\nVeronica looked around, inspecting the interior. \"No offense, but I kind of thought you would get a fancier car now that you're making really good money.\"\n\n\"Oh... uhh.... No offense taken... I used to dream of having a fancy car when I was poor. But now that I have money, I don't know... I guess I just realized it wouldn't be the smartest investment right now.\"\n\nThe Latina smiled and nodded her head. \"I think that's pretty wise.\"\n\nAs Jane refocused her eyes on the road, a thought came to her mind, This might be tough... I forgot how pleasant she can be...\n\nEventually, they got to the airport and started the long process of boarding the plane. Not wanting to continue engaging in casual talk, Jane tried to remain quiet. However, Veronica wasn't ready to give up.\n\n\"Are we in first class?\" Veronica asked, looking down at her ticket.\n\n\"Umm... I think so.\"\n\nA smile came over the Latina's cute face. \"That's so nice! Does Sunshine always fly their employee's first class?\"\n\nJane took a moment to think about it. \"Every time I've flown with Sunshine, it's been first class. But I'm not too sure. Now that I think about it, all of my flights have been booked by Camilla or Miranda.\"\n\n\"Ah, ok,\" Veronica responded, looking for their seats on the plane. \"Speaking of Camilla, do you think everything will be okay with her in charge?\"\n\nJane smirked to herself. \"I'm sure she's loving it.\"\n\nVeronica shook her head at her supervisor. \"That's not what I meant. I'm sure she will be fine. I mean, it already feels like she's in charge. But now that she's the acting supervisor while you're gone, I fear the safety of the other employees.\"\n\nThe new supervisor immediately burst with laughter, thinking about how fierce Camilla could be. Then, as they found their seats, Jane turned and asked, \"Do you mind taking the window seat?\"\n\n\"Are you afraid of heights?\"\n\n\"It's not that. I prefer the aisle because I get up to use the restroom a lot.\"\n\n\"Yeah, that's no problem,\" Veronica answered. However, Jane was in front of her in the tight aisle, leaving no room to get around her.\n\n\"Oh, sorry...\" the new supervisor said, realizing what an awkward position they were in. Seeing no other option, she took her outside seat and allowed Veronica to slide past her.\n\nAs the Latina carefully slid through, Jane couldn't help but stare at her backside. Veronica's tight lavender shirt didn't fully cover her waist, exposing her sexy hips.\n\nThen, as her eyes naturally worked their way down, she noticed how nice Veronica's bubble butt looked in those white pants. The material was soft, and it was tight on her ass. However, what stood out the most were the lack of panty lines, leading Jane to assume she was wearing a thong.\n\nShe bit her lip, watching the hot Latina finally collapse into her seat. Then, as they sat next to each other, Veronica gave her a cute smile.\n\nThis is going to be tougher than I thought... Jane silently said to herself.\n\n***************************\n\nMaking her way to the office that morning, Camilla was dressed to impress. She wore a cute little black dress with a dark green jacket, and stockings with high heels. Wanting to enjoy every minute of her temporary role, the blonde arrived several hours before her coworkers.\n\nThough it was bright and early, and she was indoors, Camilla refused to remove her sunglasses or her smile as she let herself into Jane's office.\n\nShe immediately took a seat in her boss's chair and placed her own nameplate on the desk. \"That's more like it. Even if it's just for a few days, I'm going to enjoy this.\"\n\nThe blonde sat back in her chair and propped her feet on the table before kicking her heels off. \"Yeah, I'm really going to enjoy this.\"\n\nCamilla remained there for hours, doing nothing but basking in the joy of being in charge. She knew it was temporary, but it was something she had dreamed of for so long. She owed it to herself to enjoy it.\n\nWhen her fellow employees finally arrived, she stepped out of the office to greet them for the first time. \"Hello everyone. As you all know, Jane is off on a company trip. So, until she is back, I will be in charge.\"\n\nAll the employees gave her a blank stare until one of them finally asked, \"When are you not in charge?\"\n\n\"Before eight A.M., I wasn't in charge,\" Camilla explained. \"But guess what? My watch says it's eight o' one. So, unless there's a problem with the satellite it's getting signals from, I'm in charge now.\"\n\n\"You've always been in charge,\" another employee responded.\n\nSuddenly, more of their coworkers started to chime in. \"You hired all of us,\" one said. \"You delegate all the assignments,\" another added.\n\n\"Oh, my!\" Camilla reacted, placing her hand over her mouth. \"It's my first day in charge and everyone is trying to test me. I've read about this!\"\n\n\"No one is testing you!\" an employee quickly argued.\n\n\"I better take control or the entire office will go down in flames,\" the blonde narrated to herself.\n\nCompletely confused, one girl asked, \"Why are you wearing sunglasses indoors?\"\n\nCamilla shook her head, unable to comprehend the confusion. \"Because I want to look cool.\"\n\n\"Okay, but... why aren't you wearing any shoes?\"\n\nThe Latina quickly pulled her shades off and stared at the woman. \"It's a new rule I just came up with. Shoes are now optional in the office. This applies to everyone except you, Nancy, since you want to ask so many questions.\"\n\nShe then glanced around at the other employees. \"Does anyone else want to join Nancy in the mandatory shoes crew?\" After scanning the room, she continued, \"I apologize, Nancy. That was pretty harsh of me. You may take off one shoe.\"\n\nAnother employee interrupted Camilla. \"Okay, besides the shoes thing, is anything going to be different at all?\"\n\n\"I don't know if you've noticed,\" the temporary supervisor started, pointing at Jane's office. \"But I will be using this as my office. I even have my own name plate. And while I'm in there, I will have an Open-Door Policy. That means if I'm in there, you can knock on the door, and I might or might not answer, depending on my mood. If I'm in a good mood, I will open the door for you, hence the name Open-Door Policy.\"\n\n\"That's not what Open Door Policy means!\" several employees argued while laughing.\n\n\"Okay, okay! No more arguing with the woman who signs your checks.\"\n\n\"You don't sign our checks!\" someone countered while laughing at the quirky woman.\n\n\"I'm sorry,\" Camilla quickly responded, putting her shades back on. \"I guess my fantasy runs a little beyond the scope of this job.\"\n\nShe then clasped her hands together and regained her focus. \"Let's get to work! Try to get a lot of work done, because we're going to have a pizza party at the end of the day.\"\n\nThe entire office cheered as Camilla led them in her own eccentric way. Had she actually received the promotion, she would have been a much different Branch Director than she displayed. But knowing she was only doing it for a few days allowed her to explore the fun she could really have.\n\n******************\n\nAfter a long flight, Jane and Veronica were able to enjoy the sights as they caught a ride to the resort. It was a sunny day on the beautiful island, and with their move to New York, it had been so long since either of them experienced such nice beaches.\n\nOnce they got to their destination, they were left gasping at the luxurious resort. The hotel looked so clean and beautiful, with swimming pools and restaurants; and it was all right off the beach. Though it was a business trip, both women couldn't wait to utilize all the amenities.\n\n\"Sunshine really goes all out for these getaways, don't they?\" Veronica said as she grabbed her luggage.\n\n\"They sure do,\" Jane responded, staring at the resort, wide-eyed. \"Let's check in and get our room.\"\n\nVeronica led the way, taking charge since she was the Spanish speaker. She spoke to the concierge and got the keys to their reserved room.\n\nAfter riding the elevator to the top floor and locating their suite, Deja Vu suddenly struck Jane as she opened the door. \"Oh no, no, no, no, no, no!\" she complained, before immediately turning around and walking back.\n\n\"What's wrong?\" Veronica asked. \"Was there a roach in there?\"\n\n\"It's not that,\" Jane refuted with a serious tone.\n\n\"Is it a spider?\"\n\n\"No! Even worse!\"\n\nVeronica finally looked in and realized what Jane was talking about. Though it was a beautiful suite, it didn't have the two Queen-sized beds they were expecting. This isn't as bad as a roach, she thought to herself.\n\nIn Jane's mind, this was even worse than the time it happened with Camilla. In that instance, she didn't want to bother her mysterious coworker, who she didn't know very well at the time. In this case, she upset about sleeping in the same bed with the woman she tried to convince herself she didn't love.\n\n\"We can change it,\" Jane quickly pointed out. She remembered when it happened to her and Camilla, they never went to the concierge to resolve the situation. Hoping she could immediately get it fixed this time, she ordered Veronica to follow her back downstairs.\n\nWhen they got to the desk, Jane looked at her Latina employee and asked, \"Can you explain the situation to her, and ask why we didn't get two beds?\"\n\nShe then watched and listened as Veronica and the employee had a discussion in Spanish. Reading their body language, Jane could tell things weren't going well. However, to her employee's credit, it looked as if Veronica tried to find a solution.\n\nThe Latina employee turned to her boss and explained, \"She said for an event like this, you have to specifically ask for a two-bed suite, since those are in such high demand for business events. If you don't specifically request it, they automatically sign you up for a one-bed.\"\n\n\"What?!\" the Asian reacted. \"What kind of rule is that?!\"\n\n\"It kind of makes sense,\" Veronica responded. Then, as the concierge said something else, she turned towards Jane again and translated, \"She said our best bet is to speak with whoever made the reservation for us.\"\n\nWith a deep sigh, Jane quietly responded, \"That would be me...\"\n\n\"You didn't ask for two beds?\"\n\n\"It didn't even give me the option!\" she argued, thinking back to the time she made the booking. \"I figured we could just choose when we showed up, since it wasn't on the website!\"\n\n\"I guess you have to call them and specifically ask,\" Veronica said, scratching her head.\n\n\"Ugh!\" the new supervisor groaned, completely frustrated by the entire situation. \"Just ask her if there's anything at all they can do for us.\"\n\nVeronica turned back towards the woman and asked what Jane requested, but the answer was simply, \"No.\"\n\nJane grew even angrier as they walked back to the room. She wasn't just frustrated by the staff and the situation; it bothered her knowing she missed such an important detail. Though she was upset with herself, she attempted to divert her anger.\n\n\"Are you telling the truth?\" she asked her employee in an unpleasant tone. \"Are you sure there wasn't some type of miscommunication?\"\n\nThe Latina stopped and gave her supervisor an annoyed look. \"Jane... She literally shook her head and said, 'No.' No, is the same thing in Spanish as it is in English.\"\n\n\"Ugh, I guess you're right,\" Jane responded, stomping her feet the entire way back.\n\nAs the day went on, Jane continued to grow more agitated from her own mistake as she shared the room with Veronica. As much as the Latina tried to break her of her funk, it was no avail, as she just kept snapping at her employee.\n\nUnfortunately, Veronica didn't know Jane was mad at herself. Taking all the blame, she wondered to herself, Is she just going to treat me like this the entire time?\n\nSecretly, she hoped aside from the work meetings, they would be able to relax and re-establish their old friendship. However, as she made suggestions to explore the facilities, see the beach, or even grab some food, they were all met with rejections.\n\n\"I just want to focus on preparing for my meeting,\" Jane would respond with a snappy attitude. \"Only the Branch Directors are required for today's meeting. If you want to check the resort out, just go without me.\"\n\nNeeding a break from her supervisor's rude behavior, Veronica exited the room to get a breath of fresh air. As she walked around, looking at the all the amazing sights, she could only think about how much fun it would have been if Jane joined her.\n\nMaybe this is why Camilla didn't want to go... she thought to herself while walking around. Probably not... I'm the only one she treats this poorly.\n\nSuddenly, she was left standing still as she laid her eyes on a happy couple. They weren't there for work, and it looked as if there wasn't a thing in the world bringing them stress. All she could see were two people enjoying their beautiful relationship.\n\nI can't give up, she said to herself, clutching her fists. When will I ever have a chance like this to fix our relationship? This might be my only shot!\n\nVeronica spent the rest of the afternoon trying to motivate herself until she finally went back to her room. Unfortunately for her, when Jane finally came back from her meeting, the young supervisor seemed to be in an even worse mood than before.\n\nAfter walking past Veronica, who was sitting on the couch, Jane tossed her bag on the floor before falling onto the bed. She let out a big sigh as she stared at the ceiling with a defeated look on her face.\n\n\"Is... everything okay?\" Veronica dared to ask.\n\n\"Everything is great...\" Jane said with a loud sigh.\n\n\"What happened?\"\n\nNever taking her eyes from the ceiling, Jane answered, \"Nothing... Just some of the stuff we talked about... I don't know...\" Then with another loud sigh, she continued her thought. \"It just might have been better if Camilla was at that meeting... She handles a lot of that stuff...\"\n\nThough the young supervisor was comparing herself to Camilla, Veronica couldn't see it as anything but a personal shot. Her heart sank, and it was hard for her to put up a fake smile. \"I'm sorry...\"\n\nJane finally sat up and looked over at her beautiful employee. \"I'm sorry I'm in such a bitchy mood... It's just... this supervisor stuff is harder than I ever imagined.\"\n\n\"Yeah...\" Veronica stared at the ground, thinking about the difficult time she was having herself. Hoping that being supportive would bring Jane out of her bad mood, she offered some food. \"I went to a really nice restaurant earlier and I saved you a meal. Do you think that would make you feel better?\"\n\n\"Thanks, but no thanks,\" the Asian woman responded, completely dismissing Veronica's kind gesture. Then she grabbed her phone and walked towards the door. \"I need to talk to Camilla.\"\n\nVeronica sat in silence with her own thoughts, wondering if she could ever provide the security and comfort that Camilla did. Though she entered the room with a new sense of confidence, she was left there feeling more defeated than ever.\n\n\"Sorry about that,\" the young supervisor said as she reentered the room and collapsed on the bed. \"I needed to get some information from Camilla... but she was no help.\"\n\n\"Oh?\" Veronica reacted, inching closer to the Asian woman. \"What happened on the phone call?\"\n\n\"She didn't really have the information I needed,\" Jane said before pausing. Then she looked over at the Latina with a confused expression. \"And... it sounded like... she was having a party...\"\n\n\"A party?! Why would you think she was having a party?\"\n\n\"There was just a lot of noise in the background. And I heard someone yell something about pizza... I don't know... Maybe I'm just going crazy.\"\n\nSitting there, just as confused, Veronica tried again to lighten the mood. \"I'm going out for a walk. Would you like to join me? There are so many things to see! Maybe that will take your mind off things.\"\n\n\"No, thank you,\" the Asian woman responded, falling back onto the bed. \"I'm just going to lie down for a while. I'm exhausted...\"\n\n\"Oh... okay...\" Veronica looked off before walking out of the room by herself. Not knowing what else to do, she grabbed her phone and called Camilla.\n\nBy the time the phone started ringing, she had almost forgotten about the strange conversation Jane had with Camilla earlier.\n\nAs the phone was answered, the first thing she heard was Camilla yelling, \"I like pineapples, and I like pizza, and when you combine the two, it's suddenly a problem? If you have such a problem with it, then you're no longer part of the no shoes crew... Hello, Veronica?\"\n\nCompletely confused, Veronica just responded, \"Hello...?\"\n\n\"Oh, hey Veronica!\"\n\n\"What... is going on over there?\"\n\n\"Nothing's going on... and if you overheard anything, you definitely don't need to repeat it to Jane.\"\n\n\"Oh, okay... Is this a bad time?\"\n\n\"No, no, no,\" Camilla responded, trying to get serious. Stepping into a quiet room, she started to speak to her coworker with a more attentive tone. \"What's going on?\"\n\n\"I think it was an awful idea for me to come here,' Veronica explained. Pouring her heart out, she continued, \"You deserve to be here; not me. I'm just...\"\n\n\"You deserve to be there,\" her coworker interrupted. \"The branch director is supposed to take her best employee as a reward for their hard work. You've done the most work out of all of us, and you get the best reviews from clients and investors. You deserve to be there.\"\n\n\"Thank you...\" Veronica responded, a little shocked to receive such a sincere compliment. \"But you deserve to be here... You pretty much run the entire office.\"\n\n\"Maybe I deserve to be there, but that doesn't mean you don't. Acknowledging another person's value doesn't mean you need to put yourself down. Two people can deserve the same prize for their own separate achievements.\"\n\n\"That's really sweet of you... It really is. Thank you... It's just Jane has been so upset the entire time. And I feel so bad for being here because she keeps bringing you up. You might think I belong here, but she doesn't...\"\n\n\"This isn't about you...\" Camilla again interrupted, causing Veronica to go silent for a moment. \"This is about her...\"\n\nShaking her head in confusion, Veronica asked, \"What do you mean?\"\n\n\"She doesn't think I should be there instead of you... She thinks I should be there instead of her.\n\nThe brunette stood there in the silence. It didn't make sense in her mind, so she never took it into consideration.\n\n\"She's just being insecure,\" the blonde continued. \"And she's the most insecure when it comes to things she really cares about. Same goes for you and same goes for almost anyone else in the world... including me.\"\n\n\"Same goes for me?\" Veronica asked, astutely.",
        "\"Remember when you first got to Sunshine?\" Camilla asked. Then, she mocked Veronica, saying, \"My name's Veronica and I think it was a bad idea to take this job. Thanks for getting me this awesome job Camilla, but Jane hates me and will never get over it.\"\n\nAfter a moment of silence, Veronica responded with a flat tone, \"That wasn't the first time you've done an impression of me like that, was it?\"\n\n\"Maybe once or twice, but that's not the point,\" Camilla answered before getting the conversation back on track.\n\n\"Ever since she got the promotion, she's been filled with self-doubt because she feels guilty about getting the position over me. That's what has been bothering her the last few weeks. It's her insecurities in herself, not you.\"\n\n\"I'm sorry, Veronica,\" she continued after a deep breath.\n\n\"Huh? Sorry for what?\"\n\n\"I know she's taking it out on you,\" Camilla explained. \"You expressed that to me when you first got here, and I should have taken your feelings into consideration. It's completely unfair to you and I'm sorry.\"\n\n\"It's okay...\" Veronica responded, unable to hold back a smile. \"I really appreciate you saying that.\"\n\n\"Just hang in there, okay? Try to be patient with her because this is a vital moment in her life. And if you think she's getting out of line and being too disrespectful towards you, then fuck it! You're in Puerto Rico because you deserve to be on this trip. You're a beautiful girl at a beautiful resort. Have a good time with or without her because you deserve it.\"\n\n\"Okay, Camilla... That was really sweet of you... I feel... much better now! Thank you!\"\n\n\"No, problem. I need to get going, okay? Now go try to enjoy yourself.\"\n\n\"Okay, I think I'll do that.\"\n\nBefore Camilla could hang up, Veronica grabbed her attention one more time. \"Oh, hey Camilla...\"\n\n\"Yeah?\"\n\n\"That was a terrible impression you did of me earlier.\"\n\nThe blonde just laughed at Veronica's cute come back. \"Oh whatever! I don't need your sass. I have an important pizza party to get back to.\"\n\n\"So, you are having a pizza party!\" Veronica replied. \"I'm going to tell Jane.\"\n\n\"Ugh, fine! I won't do any more impressions of you. But I do have to go now. The other girls need me. They can't finish all that pizza without me.\"\n\n\"Okay, bye-bye,\" Veronica said, giggling.\n\n\"I'll talk to you later!\"\n\nAfter getting off the phone, Veronica had the boost of confidence she needed. She continued walking outside, getting a fresh breath of air.\n\nNow that the sun had gone down, she had a chance to see all the attractions at night. This place is so beautiful, she thought. I really wish I could get Jane out of the room so we could enjoy this place together. That would definitely bring her out of her funk.\n\nI still think a significant amount of her stress is because of me, but I never considered she might be insecure about the promotion. Then, with a smile on her face, she started to motivate herself. I can help her with her insecurities! I've done it once and I can do it again! I just have to be understanding and supportive. I can do this!\n\nUnfortunately, when she got back to the room, her smile was immediately wiped when she found Jane sitting down, finishing a meal. \"Oh... You went out and got food?\"\n\nJane turned around and looked at her. \"Oh, yeah. Sorry. Did you want to get food too?\"\n\n\"It's not that... Well, kind of... But I already got you food, remember? I put it in the fridge.\"\n\n\"Oh, sorry about that,\" the young woman responded nonchalantly. \"I just wanted to get out and grab something.\"\n\n\"Oh okay...\" Veronica responded in a quiet voice. \"So, you already went out?\"\n\n\"Yeah, I was just working on this presentation for tomorrow, but I stepped out for a minute because I needed a break.\"\n\nVeronica let out a sigh of defeat as she finally walked into the room. I guess I missed my opportunity, she thought to herself. And she didn't even bother to eat the food I got her. I guess she just doesn't appreciate me...\n\nJane shrugged her shoulders and asked, \"Should I have waited for you?\"\n\n\"No, it's fine... Do you plan on going back out when you finish your stuff?\"\n\n\"No,\" the stressed woman answered, adding to Veronica's sadness. \"I have an important presentation tomorrow and I'm really tired. I'm probably just going to go to bed now.\"\n\n\"Alright...\" Veronica responded, finally admitting defeat to herself. Feeling as if she had been knocked down several times, she was too mentally exhausted to get back up. \"I guess I'll go to bed too...\"\n\nAfter quickly putting her things away, Jane went to the bathroom to get ready for bed. As she finished up and changed into her comfortable clothes, she returned to the bed, where Veronica still sat in silence.\n\nGazing upon the cute Asian wearing a t-shirt and shorts, Veronica started thinking about all the nights they spent together in the past. This feels so different, she thought, trying not to stare at her new supervisor.\n\nThen a random thought came across her mind. I guess she wears shorts to bed now... She used to sleep in her underwear, but I guess that isn't appropriate around me anymore.\n\nFollowing suit, Veronica got ready for bed by putting on comfortable clothes, making sure not to wear anything inappropriate.\n\nThis is going to be awkward, she thought, returning from the restroom. I never thought I'd share a bed with her again... but things are different now. I wonder if I should just sleep on that little couch.\n\nAs soon as the Latina got to the bed, she noticed Jane was already fast asleep. She was relieved there wasn't another awkward moment between them, but no interaction also meant no progress.\n\nVeronica simply turned off the lights and slipped into the large bed without disturbing her tired boss. Hopefully, she'll feel better when she wakes up, she thought while staring up at the ceiling. And hopefully I will too.\n\nShe lay in bed for hours, never coming close to falling asleep. In her mind, her shitty day technically didn't end until she woke up and a brand-new day began. Unfortunately, as her insecurities continued to plague her weary mind, she became less tired and more frustrated.\n\nFinally, around two in the morning, she could no longer lie awake. Not wanting to disturb Jane, she quietly slipped out of bed and left for a walk.\n\nEventually, she found herself at the beach, where she sat down and stared at the waves. Hours passed by as the sight of the beautiful ocean making its way up and down the shoreline started to calm her soul. As the wind blew through her long black hair, she was able to take an honest dive into her own heart.\n\nWhat has happened to me? Why am I like this all the time? It's like, ever since Jane left, I've had to rely on other people to make me happy.\n\nFirst, Ashley had to help me. Maria and Monica helped too, of course. Then there was Vicky, who did an amazing job. And now, I've had to rely on Camilla, who probably doesn't even like me. They all helped me so much but... eventually I have to learn to help myself, right?\n\nI can't just keep blaming the circumstances and people. I need to rely on myself for my own happiness, or else I don't even deserve to be with someone else. I would just bring them down.\n\nWhy would someone want to be with me? I've become the damsel in distress, always in need of someone to lift my spirits. But what do I provide? What would Jane get out of being with me?\n\nAs a big wave came in, she watched a flock of seagulls fly out of the way just in the nick of time. Then, I thought came to her mind, forcing her to take a different perspective.\n\nBut... what does she offer me anymore?\n\nIt's been a long time since she has been the source of my happiness. I'll always love her for the person she was and the relationship we had, but we no longer have that and... I don't even know if she's that person anymore...\n\nShe took a deep breath as she got up to her feet. I can't just sit around, hoping she turns back into the sweet woman she used to be. I need to take control of my own fate.\n\nI need to be... who I used to be... The me that Jane loved so much... The me that... I loved so much...\n\nCamilla was right... I need to have fun. I'm here in Puerto Rico on a paid vacation, and I haven't even let myself enjoy it. The circumstances aren't great and I may never win her back, but that doesn't mean I can't have a little fun. I deserve it!\n\nI wasted so much time and energy focusing on others. I hated Camilla for so long, even though I didn't know anything about her. If anything, I should aspire to be like her.\n\nWhen she came to offer me the job, she was a completely broken woman. I could tell by her eyes she was holding a lot of pain inside. And yet, she still managed to carry on and do things her way. She even had fun by toying with Vicky and asking me to take her to the zoo!\n\nAnd as for Jane, I need to make her remember how great I actually am. And if she can't appreciate that... then she doesn't deserve me anyway.\n\nAs she watched the tide grow stronger, she demanded of herself, It's time to start having fun.\n\nShe suddenly had an urge to jump into the water and experience the ocean all over her body. How stupid am I? I'm at a freaking beach and I haven't even jumped in.\n\nNot wanting to waste time going back to get a bathing suit, she stripped down to her blue sports bra and her lacey pink panties. Smiling from ear to ear, she rushed towards the water, but almost came to a stop as a large wave came crashing towards. After a quick deliberation in her head, she furrowed her eyebrows and took the wave head-on.\n\nFrom head to toe, she became soaking wet from the chilly water. Goosebumps covered her skin, and she let out a squeal as the wave almost knocked her down. Quickly, she rushed back to her spot, giggling from the intense rush.\n\nThat was the most fun I've had since I got here... she said to herself, blowing a big sigh of relief. I think this is going to be a good vacation, after all...\n\n**********************\n\nAfter a rough first day, Jane was just happy to get a good night of sleep. Despite her awkward relationship with Veronica, there was a comforting feeling knowing she wasn't in bed alone.\n\nShe woke up and fell back asleep several times throughout the night. However, she never realized that Veronica had left sometime early in the morning. When she finally woke up for good, she turned and noticed she was alone.\n\nI wonder where she is, she thought to herself. Maybe she went to get breakfast... Or maybe, she got sick of my attitude...\n\nI know I should be nicer. She's a great employee, after all. It's just... I need to prove that I'm worthy of my Branch Director position. And having her here... just complicates things.\n\nSuddenly, she was startled by the sound of the door opening. Her heart stopped as she watched Veronica enter the room, soaking wet.\n\nThe Latina wasn't wearing a shirt, showing off her nice body. Her nipples showed through her sports bra, and her underwear visible through her wet shorts.\n\n\"Oh, sorry!\" Veronica said as gently tossed her shirt on the bed. \"I thought you'd be awake by now, or I would have been much quieter.\"\n\nGazing upon Veronica's body for the first time left Jane speechless. Though the Latina had become a little skinnier, the cute Asian still found her stunning, with her nice breasts and voluptuous ass.\n\n\"That's okay... I was just getting out of bed. Did you... go for a swim or something?\"\n\n\"I couldn't fall asleep for some reason,\" Veronica responded with a smile. \"I wanted to sit on the beach, but the water looked so good, I just had to jump in!\"\n\n\"Oh... that sounds...\" Jane suddenly stopped mid-sentence, staring at Veronica's body again. \"That sounds... nice...\"\n\n\"I didn't bring my bathing-suit so I just jumped in, wearing my underwear.\"\n\n\"Oh...how... fun...\"\n\n\"Any who... I just came back to grab my swimsuit.\" Veronica then grabbed her bag and quickly went into the restroom.\n\nWithout realizing it, Jane became more intrigued. She sat up from the bed and leaned towards the restroom. \"Are you going back to the beach?\"\n\n\"Not yet,\" Veronica called out from the restroom. Then, reappearing wearing a small black bikini with yellow and pink strings, she explained, \"I'm going to grab a bite to eat from this tiki restaurant by the pool.\"\n\nJane became even more surprised and was unable to keep her eyes off Veronica's swimsuit. It was the same one she wore when they went to Maria's house and used the hot tub. Hot memories started to flood her mind, leaving her silent in her own thoughts.\n\n\"I'll see you later,\" Veronica said, snapping Jane out of her trance.\n\n\"You're going... dressed like that?\"\n\n\"Umm, yeah...\" Veronica answered innocently. \"Did I mention it's a tiki bar by the pool?\"\n\n\"Oh, yeah... I was just asking...\"\n\n\"Okay, I'll see you later!\"\n\nAs Veronica turn to grab the doorhandle, Jane fixed her eyes on her juicy tush. The bikini bottoms might as well have been a thong, the way they accentuated the Latina's nice ass.\n\n\"Veronica!\" Jane called out, not even realizing she was doing it.\n\n\"Yeah?\"\n\n\"I... I sent you the presentation I'm doing today. You'll be translating for me at the investors meeting, so can you go over it?\"\n\n\"I already looked at it,\" Veronica responded, assuredly.\n\n\"Oh, good... Uhh, well can you look at it again? I just want to make sure you have all the information, and you can translate it.\"\n\nA confused look came over the Latina. \"You want to make sure I can translate it into my first language?\"\n\n\"Umm, yeah...\"\n\nStill looking a little confused, Veronica gave a little smile before responding, \"Okay... I'll take another look at it.\"\n\nWhen she finally closed the door behind her, Jane remained in bed, wondering What... just happened?\n\nFinally, the new supervisor was able to get herself out of bed so she could prepare for her day. However, as she got dressed, she couldn't help but think about the difference she saw in her employee's demeanor.\n\nShe sure seemed like she was in a better mood, today... And she looked... really nice... Jane then groaned and shook her head, trying to snap herself out of those thoughts. I need to focus but... this trip is going to be even harder than I thought...\n\nShe grabbed the food Veronica brought her the previous day and placed it in the microwave.\n\n*********************************************\n\nBeing the Director of the new branch, Jane wanted to make a good impression to the other members of her company during her presentation. Though these types of projects were normally a strength of hers, her heart pounded as she entered the conference room.\n\nUnfortunately, no amount of preparation could make her confident for this moment. And to make matters worse, having Veronica present only added to the anxiety she was already experiencing.\n\nVeronica had always proven herself to be a fantastic employee. However, her supervisor was also aware that she had been known to just wing projects from time to time.\n\nJane was also nervous about the outfit her employee chose the wear. Instead of wearing a business jacket, the Latina went with a small dress. Though Veronica looked stunning, the new supervisor was afraid it was a bit inappropriate for such an occasion.\n\nThere was tension in the air as all the attendees could sense the nervousness in the young Director's demeanor. Her shoulders were slumped over, her eyes remained on the screen to avoid eye-contact, and her voice was quiet.\n\nIt was a difficult situation for her, knowing some of the room couldn't understand her, anyway. In her mind, she kept thinking things would have been better if Camilla were doing the presentation instead of her. Not only would she not need a translator, but she would also have done a better job on the project too, she thought to herself.\n\nFortunately, she had Veronica there, whose biggest strength was building a rapport with her clients. The black-haired Latina didn't just read from the presentation, she spoke with confidence to her audience.\n\nMuch to Jane's surprise, once the presentation was over, everyone was left clapping and showing appreciation for her work and her ideas. She was able to blow a sigh of relief before looking over at Veronica and sharing a smile.\n\nThe cute Branch Director then started fielding questions, answering a couple from English speakers first. She gained more confidence knowing she was able to provide them the information about Sunshine Industries' plans and products.\n\nHer heart started to race again as the first question in Spanish came in. Veronica looked over to her and translated the question into English, while wearing a big smile the entire time.\n\nWhen Jane would give an answer, she noticed the crowd would laugh and smile once her employee translated the answer. The young Asian woman became confused, thinking her answers were not intended to be funny. However, Veronica and the different members of the audience kept talking back and forth, exchanging pleasantries and laughs with every response.\n\nAs more questions came in, Jane noticed a similar pattern where Veronica would give a much longer answer in Spanish than was given English. Every single time, the other Spanish speakers would laugh with her as they got into longer and more positive sounding exchanges.\n\nBy the time the questions were done, the entire room seem to be in a light-hearted mood. Everyone had smiles on their faces as they got to their feet and started making their way out. Several people came by to shake hands with Jane and thank her for her presentation. However, even more people approached Veronica to compliment her on doing such a great job.\n\nSuddenly, Jane heard a familiar voice say, \"Hey stranger.\" As she turned around, her eyes lit up at the site of her former supervisor.\n\n\"Miranda!\" she exclaimed with a big smile.\n\nHer former Branch Director placed a hand on her shoulder. \"You did a fantastic job!\"\n\n\"You really think so? I was so nervous!\"\n\n\"I could tell you were nervous,\" Miranda responded with a comforting tone. \"But your material is always well prepared. And your employee did a great job too!\"\n\n\"Oh... yeah...\" Jane said, looking over at Veronica, who was still talking with others. \"She worked with me at my last company.\"\n\n\"Well, it looks like you made a great decision to bring her along.\"\n\n\"More like Camilla made a great decision...\" the new Director mumbled. \"By the way, what was she saying during my presentation? It felt like her answers were much longer than mine.\"\n\n\"She did a great job answering the questions,\" Miranda explained. \"She already knows so much about our company.\"\n\n\"Oh great... Well, why was everyone laughing?\"\n\nWith a smile, Miranda answered, \"I don't remember everything she said, but she was just being cute and funny the entire time.\"\n\nJane was unable to take her eyes off her pretty employee. \"Cute, huh?\"\n\n\"I don't know her but she seems great!\"\n\n\"Yeah...\" Jane said, staring at Veronica with a smile. \"She's great...\"\n\n***************************************\n\nAfter the presentation, Jane and Veronica attended a dinner party, hosted by the company. By the time they got out there, the sun had begun to set, leaving a beautiful atmosphere along the outdoor restaurant.\n\nDespite a successful presentation, the two ladies sat awkwardly at their table. Neither knew what to say to the other. However, both women were in a better mood after such a successful meeting.\n\nSeveral people came by to greet Jane and to congratulate her on the new position, but even more people came to introduce themselves to Veronica. Much to the supervisor's surprise, several Sunshine members were glowing with compliments for Veronica's dress, the same one Jane feared was too unprofessional.",
        "\"I love that it's short but also flowy,\" one of the women said.\n\n\"I was thinking of just wearing my swimsuit,\" the beautiful Latina explained. \"It's not like we're in the conference room anymore. We're at a resort on a beautiful island!\"\n\nJane's eyes popped wide open, surprised to learn Veronica had planned on showing even more skin.\n\n\"That's a great idea,\" another woman agreed. \"If you want to wear your swimsuit, go ahead and get changed!\"\n\nMore women started to chime in, agreeing with the idea. \"I think I'm going to grab my swimsuit too,\" one said. \"Yeah, I want to wear mine too,\" said another.\n\nOh, great... Jane thought to herself, watching the women have a good time.I guess she'll be walking around in her bikini again...\n\nSuddenly, she was startled by her pretty employee. \"Jane!\" Veronica called out before leaving.\n\n\"Uh... Yeah?\"\n\n\"I'm going back to the room to change into something more comfortable. Do you want to change too?\"\n\n\"Uhhh... That's okay...\" the Asian answered. \"I'll just wear this.\"\n\nVeronica shrugged her shoulders and smiled. \"Suit yourself. But can you get me a plate and a tequila while I'm gone?\"\n\n\"Sure...\" the supervisor answered, already picturing her employee in her swimsuit. \"No problem at all...\"\n\nWhen the Latina returned, she left Jane gasping at the site of her a brand-new bathing suit. She was even hotter than the cute little Asian was expecting, wearing a tight little red and pink bikini.\n\nJane could feel her heartbeat getting faster as her eyes were glued to Veronica's body. Though it was common for the Latina to wear revealing bottoms, these were so small they ran right up her crack, exposing her voluptuous cheeks.\n\n\"Thanks for getting my food and drink!\" Veronica said as she approached the table.\n\nJane was completely dazed, not even realizing her employee was talking to her. Then as she noticed Veronica staring at her, she tried to quickly snap out of her state. \"Oh... No problem! Nice swimsuit...\"\n\n\"Oh, this?\" Veronica asked with a little blush. She looked down at herself before performing a little twirl for her boss. It gave Jane an opportunity to get a great look at her bottom, causing her to gulp.\n\n\"Is it new?\"\n\n\"It is, actually!\" Veronica explained. Shopping and clothes were some of her favorite things to talk about, so she was excited to expand. \"I bought several swimsuits about a year ago, but since I lost some weight, I was afraid they wouldn't fit me. That's why I ended up buying some new ones before the trip!\"\n\nChecking herself out, Veronica continued on, \"This is my first time trying a smaller size. I thought it would fit right, but I guess I didn't lose any size in my breasts or butt. These bottoms are so tight!\"\n\n\"They sure are...\" Jane responded, taking the opportunity to check out the Latina's amazing ass and tits.\n\n\"Is everything okay, Jane?\" the employee asked, taking her seat again.\n\nThe cute supervisor tried to come up with an appropriate response. \"Yeah... Sorry, I just thought it was a nice swimsuit.\"\n\n\"I wasn't talking about that,\" Veronica said with a laugh. Grabbing her glass of tequila, she asked, \"Why didn't you get a drink for yourself?\"\n\n\"Oh!\" Jane quickly shook her head, snapping herself out of the lustful daze. \"I haven't really been drinking lately.\"\n\n\"Oh, why not? Are you trying to quit?\"\n\n\"Uhh, not really,\" Jane answered, reflecting on her reasons for the first time. \"I guess I'm just going through a phase...\"\n\n\"What kind of phase?\" Veronica asked, curiously. She clearly remembered Jane drinking a lot before she left for New York. Notably, she remembered how often the former intern would frequent the bar down her street, including the night they broke off their intimate relationship.\n\n\"I guess I was drinking a lot for a while there,\" Jane confirmed. \"Then I went back to normal, only drinking every now and then. But ever since I got the Branch Director position, I haven't drunk at all. I've been too busy, not to mention I don't really hang out with anyone anymore.\"\n\nVeronica looked around at the dozens of Sunshine Industries employees, many of which who were already drinking. \"You're hanging out with people right now... and you're on vacation.\"\n\nJane made a nervous face but quickly brushed it off. \"I think I'll just take it easy for now. I haven't had a drink in months so I'm afraid I'll get drunk really easily. And as the new Branch Director, I'm worried about making a bad first impression.\"\n\nBy now, Veronica no longer put a pressure on herself to make Jane happy. She simply shrugged her shoulders and said, \"I think you already made a good first impression,\" before starting on her tequila.\n\nSeveral other Sunshine Industries members joined the table, mostly wanting to sit with Veronica. They made it known how much they enjoyed her first impression. They also showered compliments for her swimsuit, causing the pretty Latina to light up like a star in the night.\n\nAs Veronica joked and laughed with the others, Jane sat in silence, scrunching her face. She didn't get this excited when I complimented her swimsuit... she thought to herself.\n\nAfter the dinner and several more drinks, Jane was ready to get back to her room. However, several others from the company called her over to play a game.\n\n\"I don't know,\" she said with a tired look on her face. \"I might just head back to the hotel.\"\n\n\"Don't be silly!\" Veronica exclaimed. \"It's not even that late. Let's spend some more time with all these nice people!\"\n\nAfter being encouraged by several others, Jane finally gave into the peer pressure and sat at the table where they were playing the game.\n\n\"So, what kind of game is it?\" Veronica asked.\n\nMuch to their surprise, it was a game testing how well they knew their partners. Since each Director was allowed to bring one employee, everyone was already paired up in twos. All the contestants would be handed a dry erase board. Once they heard the question, they were to write their own answer down before guessing what their partner wrote for theirself.\n\n\"Eh, why not?\" Jane said that she took a board and passed one to Veronica.\n\nThe first question was simple enough; Where did your partner work before Sunshine Industries?\n\nAs Jane and Veronica answered and revealed their boards, the entire crowd laughed, realizing they worked at the same company.\n\nThe next question was almost as simple; How old is your partner?\n\nThere was history between Jane and Veronica, so they were both able to figure it out. After remembering the last time they celebrated each other's birthdays, and adding the years since then, they answered Jane was twenty-four and Veronica was twenty-nine.\n\nThis actually resulted in more laughter as everyone discovered how young they both were. Veronica wasn't too young for an employee, but Jane was by far the youngest supervisor.\n\nAfter only two questions, several teams had already made a mistake. Jane and Veronica, on the other hand, were just getting started.\n\nTo their surprise, with every question, they were able to find a memory in the past that led to the correct answer. They knew about each other's pasts, about their families, and their goals in life. They could even guess each other's favorite foods from all the times they shared meals together.\n\nEventually, a question came up that had both women sweating from the fun memories; What is your partner's favorite style of dance?\n\nIt brought both women back to the night Veronica took Jane Salsa dancing. Even though the shy little Asian had never gone out dancing, she just had fun bumping and grinding with her hot Latina.\n\nJane confidently answered, \"Salsa dancing,\" which proved to be correct.\n\nHowever, when it was time for Veronica to answer, she said, \"I guess Salsa dancing since that's the only thing she's done?\"\n\nMuch to everyone's surprise, Jane revealed her board, showing that she had answered almost exactly the way Veronica did. \"I guess Salsa dancing because it's the only dance I've ever done.\"\n\nEveryone burst with laughter but were more impressed by how well the two women knew each other. The Sunshine members started clapping and giving high-fives to Jane and Veronica. Eventually, the former lovers were even able to give each other a joyful high-five.\n\nFinally, one of the top Execs for Sunshine Industries had to chime in. \"In all these years, we've never seen a couple get nine answers in a row.\"\n\nBoth Jane and Veronica looked at each other nervously when they heard the word couple. They both grew red and inched away from one another before refocusing on the speaker.\n\n\"Even though everyone else has been eliminated, would you two like to go for lucky number ten?\"\n\nJane and Veronica both looked at each other and shrugged. \"Why not?\" they both answered, exchanging a smile.\n\nThe Exec pulled out of random card before making a face. \"This might be an easy one, but you'd be surprised how many people get tripped up by such a simple question. What is your partner's favorite color?\"\n\nBoth women came to a sudden pause. Much like the Exec warned, they felt it should have been easy but they were having trouble for some reason. Neither could remember a time when the other clearly revealed the answer.\n\n\"I told you this would trip you up!\" the Executive pointed out with a laugh.\n\nSuddenly, everyone started cheering them on, hoping they would continue their streak of correct answers.\n\nJane thought back, trying to find any clues from their past. Without realizing it, her eyes drifted on Veronica's red and pink bikini. Is it red? she wondered to herself. I think I've just been staring at her swimsuit for too long.\n\nSuddenly, a hot memory popped into her mind. She remembered a special night when Veronica wore a sexy corset with a pair of red lace panties. Thinking about how sexy the Latina looked in that outfit, she blurted out, \"Red!\"\n\nMuch to everyone's delight, Veronica revealed her board, which showed her answer, \"Red.\"\n\nJane's face almost matched the color of Veronica's favorite panties. However, as she tried to think of her own favorite color, she couldn't get her mind off her employee's underwear.\n\nJane thought back to her favorite pair of panties Veronica used to wear for her: a baby blue thong with a black waist band. Not knowing which one of the two colors to write down, she wrote both in a panic.\n\n\"Are you ready, Jane?\" Veronica asked.\n\n\"Yes,\" the cute Asian answered, looking down at her answer.\n\nVeronica looked at her former love and remembered the time she expressed how much she loved those panties. Having nothing to lose, she guessed, \"Maybe... baby blue... and black?\"\n\nJane's eyes lit up and she immediately flipped the board over, revealing they had answered exactly the same again. As everyone cheered, they suddenly hugged each other out of pure excitement.\n\nHowever, as our bodies touched, Jane felt something in her heart she couldn't explain. She immediately took her hands away from Veronica's tan skin, hoping she didn't cross any lines.\n\nAs a young Asian woman backed off, Veronica also did the same. They were left staring at each other awkwardly, with a light red hue on their cheeks.\n\n\"Congratulations!\" the Exec said. \"You two seem to have such a great bond!\"\n\nFilled with anxiety and butterflies, Jane quickly took her eyes off Veronica. \"Just lucky guesses...\"\n\n\"Yeah, we just got lucky...\" Veronica also nervously responded.\n\nEveryone just continued to congratulate them as the event was wrapped up. Before everything was over, it was completely dark outside and it was much later than Jane expected to be awake.\n\nMuch to Jane's surprise, when she told everyone she was heading back to her hotel, Veronica stated she would go too. \"You don't want to stay out and drink?\" the supervisor asked.\n\n\"I wish I could...\" Veronica answered as she gathered her belongings. \"But I'm actually running on fumes.\"\n\n\"Oh, that's right. You didn't sleep last night, did you?\"\n\n\"I really haven't slept in two nights,\" the beautiful Latina pointed out. \"I couldn't fall asleep last night, and the night before, I was afraid of oversleeping and missing our flight, so I could barely fall asleep that night as well.\"\n\nJane chuckled and shook her head. \"You know me. I wouldn't have let you miss the flight.\"\n\n\"I guess you're right, Jane...\"\n\nBoth women walked back to their room together. However, now that the sun had set, there was a cool breeze blowing against Veronica's delicate skin. She grabbed a white T-shirt out of her bag and put it on over her bikini top.\n\nAlthough Jane appreciated Veronica's sexy torso, she couldn't take her eyes off the Latina, now that she was wearing a T-shirt and bikini bottoms. Suddenly, her face became red, thinking of the times they spent the night at each other's apartments, and Veronica would wear a T-shirt and panties to sleep.\n\nThough she was caught in a daze, staring at Veronica's ass, she started to notice the goosebumps on her skin. It reminded the young Asian woman of the goosebumps the Latina would get during their inappropriate massages.\n\nJane forced herself out of her deep thought, shaking her head so she could snap back to reality. She pushed her memories aside, realizing there was something more important than her thoughts of lust.\n\n\"Veronica...\" she called out, stopping the Latina in her tracks.\n\n\"Yes, Jane?\"\n\nUnable to hide her care for her former lover, the new Branch Director took off her jacket and offered it. \"Here,\" she said placing, it over Veronica's shoulders. \"You must be so cold.\"\n\nVeronica grinned from ear to ear, showing a level of happiness Jane hadn't seen in a long time. \"Thank you,\" she said, sliding her arms through the sleeves.\n\nThe two women didn't say another word to each other as they walked back to the room. Though there was an awkward silence, they both felt it was a peaceful and somber moment after a busy day.\n\nAs they continued walking, both women had trouble understanding why they were in such good moods. They understood nothing had been resolved in the relationship. However, being able to put things aside and enjoy one night together lifted a weight off both their weary shoulders.\n\nWhen they got back to the room, Veronica handed the coat back to her supervisor. \"Thanks for letting me borrow this.\"\n\n\"No problem,\" Jane responded, tossing the jacket aside. \"Let's get some sleep. I have another busy day tomorrow. And you must be exhausted.\"\n\nAfter Veronica nodded in agreement, Jane quickly got ready for bed by brushing her teeth and changing into the same pajamas she wore the previous day.\n\nOnce the Asian woman was done and in bed, Veronica grabbed her bag and took her turn in the bathroom. When she walked past the mirror, she finally noticed the huge smile on her face and the sparkle in her eyes.\n\nI can't remember the last time I smiled like this, she thought to herself, taking a moment to appreciate everything that happened that day.\n\nI know I'm not supposed to base my happiness off someone else but... today was... really... really... nice...\n\nShe started giggling to herself, thinking about the look she saw in Jane's eyes when she was in her bikini.\n\nThen, after taking a deep breath, Veronica looked into the mirror and smiled calmly at herself. She knew their relationship wasn't fixed, not by a long shot. But even if things were never resolved, she would always have that night to look back on and remember how amazing she felt. Somehow, that was almost enough for her.\n\nAs Veronica grabbed the pajamas she wore the previous day, she suddenly came to a stop. A smirk came over her face as she said to herself, You know what... I think I'm just going to have a little more fun before I go to sleep.\n\nJane was in bed, waiting for Veronica to return before turning the lights out. Despite wanting to get some rest before another busy day, she couldn't get her mind off her beautiful employee.\n\nShe knew Veronica was about to get the rest she desperately needed, but her mind had shifted towards her own needs. She just couldn't stop thinking about the Latina's bubble butt in those little red bottoms and while wearing her jacket.\n\nSuddenly, the cute little Asian let out a frustrating moan. She had been fighting the feeling all day, but couldn't deny it any longer. Slapping both hands against the mattress, she frantically admitted to herself, I'm so horny!\n\nShe quickly threw the covers over her head as she pouted in silence like a little kid. I'm still mad at her for breaking my heart, but she's so fucking sexy!\n\nToday was nice but that doesn't change the past. But her body looks so hot, and she wore bikinis all fucking day!\n\nUnfortunately, she knew there wasn't enough time to masturbate before Veronica returned from the bathroom. Still, she had to touch herself to feel how wet she was.\n\nDiscovering the warm puddle in her panties, she frantically thought to herself, I haven't had sex in so long... And when I masturbate, I think about...her...\n\nQuickly, she pulled her hand away, resisting the urge to get off to her sexy employee. No! she refuted to herself. I'm not going to do that! This is a work trip, not some kind of sex vacation. And besides, I'm still not over how much she hurt me!\n\nAs she heard Veronica coming out of the bathroom, she took a deep breath and told herself, I have to stay strong... no matter how sexy she is...\n\nSuddenly, as Veronica appeared at the other side of the bed, the young Asian woman's mouth popped wide open. She went dead silent, only hearing the pounding of her heart.\n\nMuch to her viewing pleasure, the Latina was only wearing a small white T-shirt, which her nipples poked right through, and a baby blue thong with a thick black waist band. Coincidentally, it was the same thong she imagined Veronica in when she answered her favorite color.\n\n\"You're... You're.... You're... going to sleep... like that?\"\n\nWith a smile, Veronica answered, \"Of course, I am. You know I like sleeping in my underwear... Err... Maybe I shouldn't have brought up something so intimate... I'm sorry!\"\n\nQuickly getting under the covers, she made herself comfortable in bed. \"I figured wearing shorts might have been the reason I couldn't fall asleep last night. I hope this isn't too... I just really need a good night of rest.\"\n\nAs Veronica closed your eyes, Jane was left squirming her legs together. \"That makes sense...\" she said with a trembling voice. \"It isn't awkward at all...\"\n\nShe silently pouted her herself, completely frustrated that her needs couldn't be taken care of. This is so unfair! Why did she have to fucking wear that?! This trip is getting harder and harder... At this point, I don't think things could get any worse!\n\nJust before she could turn off the light, she noticed Veronica grabbing a water bottle by her nightstand. The Latina took a sip but unfortunately, some spilled from the side of her mouth, getting on to her white T-shirt.\n\nAfter a cute little gasp, the Latina said, \"Oh no! I got it on my shirt... Now I'm going to be so cold.\"\n\nFor some reason, the Latina's adorable whiny voice only made Jane more aroused. She stared at the wet spot, hoping to get a glimpse of Veronica's nipple through her shirt.\n\nCatching herself in the act, she quickly got it together and tried to help her sexy employee. \"I could turn the air down if you'd like. Or would you like me to grab you another T-shirt?\"\n\nAfter pondering it in her head for a moment, Veronica simply responded, \"No, it's okay.\" Then, with a big smile, she left Jane in shock by taking her shirt off and exposing those beautiful breasts the young supervisor wanted to see so badly.\n\n\"I'll just sleep shirtless,\" she said with an innocent smile. \"Good night, Jane!\" She then rolled over, sleeping on her side with her back towards the Asian woman.",
        "Jane took a moment before turning out the light to get one final glance at the sexy woman lying right next to her. She then threw herself under the covers, more frustrated than ever before.\n\nLying on her back with her eyes wide-open, she thought to herself, How am I supposed to fall asleep now!?\n\nUnbeknownst to her, Veronica was not yet asleep and heard all the noises of sexual frustration she made. A fake smile came over the little Latina's face as she continued to face the other direction until she comfortably fell asleep.\n\n**************\n\nI saw the look in your eyes and the way you bit your lower lip. I know exactly what you were thinking. It was the same look you had when you first gave me massages. The same lust in your eyes when I would wear sexy lingerie for you. Back when you were just an adorable little Asian intern at my office.\n\nDon't fool yourself, Mami. I know you want me. As a matter of fact, you probably want to touch yourself right now, don't you?\n\nI feel sexy again. I haven't felt that sway since you left... I mean, others have done their best to make me feel sexy, but it's nothing compared to the way I feel when you have that look in your eyes.\n\nWhen I feel sexy, I feel confident, and I'm confident enough to turn around and crawl over to your side. You'd like that, wouldn't you, Mami? I'd stalk you like a predator in the night, and make you my vulnerable prey... But I'm not going to do that... No, not yet...\n\nThat's not how I want this to go down because I don't want your body... I want your heart. And your body won't understand what I'm trying to express.\n\nI still don't know why Camilla gave me her ticket, or why I even accepted it, but if I gained anything while I've been here, it's the opportunity to really sit down and think about my life.\n\nI can't control you or what you want. I understand that now. But I do know what I want... and I'm not settling for less.\n\nBefore we leave this beautiful Island, I will make sure you know... it's All or nothing. As long as I make that clear to you, I can live with myself knowing I tried.\n\n*****************************************************\n\nAfter a surprisingly long night of tossing and turning, Jane was left even more tired and frustrated than she was the previous night. How could I possibly stay asleep, knowing Veronica was dressed that sexy, right beside me? she asked herself in the morning.\n\nAlmost every time she woke up, she had an urge to peek at the Latina and pleasure herself. Unfortunately, she was too afraid of a waking Veronica despite her deep slumber.\n\nJane hoped things would cool down by morning time. However, any hopes of her horniness subsiding quickly vanished as Veronica spent the morning either prancing around in her underwear or trying on different swimsuits.\n\nEventually, Jane decided she couldn't take it any longer. Despite having another busy day ahead of her, she reached out to her old supervisor, Miranda, and asked if they could meet for an early lunch.\n\nCoincidentally, Miranda wanted to meet at the tiki bar by the pool. It was the same establishment Veronica had gone to the previous morning.\n\nJane hoped sharing a meal with her previous boss would take her mind off her own frustrations. Unfortunately, it only made things worse as Miranda immediately asked about her star employee. \"I know I already told you this, but everyone I've spoken to really loves this Veronica girl. She's so smart and beautiful! People are having a hard time keeping themselves from staring at her.\"\n\n\"Doesn't help that she's always walking around in such revealing bikinis,\" Jane mumbled.\n\n\"What did you say?\" Miranda asked curiously.\n\n\"Oh, nothing...\"\n\n\"Jane... How are things between you and Camilla?\"\n\nThe young supervisor was caught off guard by the change of subject. \"Umm... We are good... Why?\"\n\n\"You two don't seem as close as you once were. I was surprised you didn't bring her to Puerto Rico instead of Veronica.\"\n\n\"Trust me... I was just as surprised.\"\n\n\"What do you mean by that?\"\n\n\"It was actually her idea for Veronica to go instead of her. She said she had some projects she wanted to take on instead. Veronica and I are both confused by her refusal to go.\"\n\nMiranda scratched her chin, trying hard to find a reason for her former employee's actions. \"Hmm... All I can say is this; She probably had a good reason, and I doubt it was out of the kindness of her own heart. She's a very calculated woman and she has her reasons for everything she does. Now, whether or not you discover those reasons... only time will tell.\"\n\n\"That's not the only thing about her that's been bothering me lately...\" the new supervisor admitted, looking down at the table. \"I know in my heart she is more deserving of the Branch Director position than I am. I know it now more than ever.\"\n\n\"You should see her,\" Jane continued. \"I'm so flustered with all the new tasks, but she takes care of everything! There are days I get so occupied with scheduling; I completely forget to handle the duties for my employees. But by the time I step out, she has already taken care of everything.\"\n\nWith a sad look, the Asian woman continued to vent about her insecurities. \"My employees respect her more than they respect me. I bet they don't even think of me as their supervisor. I can deal with that... but what really bothers me is I think Camilla only does this because she thinks I can't handle it.\"\n\nMuch to Jane's surprise, Miranda started laughing, completely catching her off guard. \"What's so funny?\" the new Director asked.\n\n\"Jane... That's just how Camilla is. She did that at my branch too! That's the only way she knows how to work.\"\n\n\"She... did that... with you?\"\n\n\"Oh my God, yes! If you don't stop her, she'll end up doing everybody's work for them. She doesn't do that because she thinks you can't handle it. She does it because she wants you to be able to focus on more important tasks. She's just trying to help.\"\n\n\"Oh...\" the new Director responded quietly as she reflected on her own insecurities. \"I guess I never thought about it like that... She just wants to help me...\"\n\nMiranda placed a hand on Jane's tiny shoulder. With a deep breath, she shared more thoughts. \"Jane... do you know why she followed you to the new branch?\"\n\nThe young Asian woman started to reflect on the moment Camilla revealed she was coming with her to the new office. She remembered feeling so relieved, she didn't even think about why Camilla was doing it. \"To help me?\"\n\n\"That's part of it, but I think there's more to it,\" Miranda explained. \"You know, she has worked for me since she was twenty-years-old. I think she realized we both needed to spread our wings and stop relying on each other. I think that's the real reason she followed you.\"\n\n\"... What do you mean?\"\n\n\"She not only wants to help your transition with all those tasks she's already competent in, but she also wants to learn from you because she respects you.\"\n\nA sudden smile came over the young supervisor's face. \"She respects me?\" Jane asked as her face lit up.\n\n\"Of course, she respects you,\" Miranda responded, putting her arm around the new Branch Director. \"We all do; I do, Cynthia does, Veronica does, everyone from Sunshine respects you.\"\n\nSuddenly, a confused expression came over Jane's face. As much as she was honored by the statement, there was one name from the list that left her scratching her head. \"Veronica respects me? How do you know that?\"\n\n\"During the presentation...\" Miranda pointed out. \"When she was answering questions in Spanish, she talked about you a lot. Yeah... she thinks you're amazing.\"\n\nJane could feel her entire body warming up from the inside out. It had been so long since she heard such a sweet compliment from her former lover. \"What did she say, exactly?\" the cute Asian asked, hoping to dig deeper.\n\n\"I don't remember exactly what she said. I just remember her glowing about you.\"\n\n\"Oh... How nice...\"\n\nMiranda then gathered her belongings as she got up from the table. \"Well, I need to get ready for our first meeting of the day.\"\n\n\"So should I,\" the new Director responded, having the confidence boost she really needed. \"Thanks for everything, Miranda.\"\n\n\"No problem, Jane. Oh, and tell Camilla I said hi.\"\n\n\"I will! Do you still talk to her at all?\"\n\n\"I still talk to her quite a bit,\" Miranda answered. \"She said karaoke night was a big hit with the staff!\"\n\nJane did a double take, almost snapping her neck in half. \"Karaoke night?! What the hell is going on over there?\"\n\n\"Oh, I thought you knew... Oh well. We'll catch up later, Jane.\"\n\nThe young supervisor sat there confused for a moment, wondering what was going on at her office with the mysterious woman in charge.\n\nAs Jane sat there, her attention was immediately diverted by a thrilling site. It was Veronica, wearing yet another tiny bikini. This time, it was leopard print, and it didn't just ride up her ass like a thong, it was a thong.\n\nOh, come on! Jane groaned to herself, watching the Latina walk towards her. This just isn't fair!\n\nMuch to her surprise, Veronica walked straight over to her table and took a seat.\n\n\"Hi Jane,\" the Latina said with a glow in her face.\n\n\"Oh, hi Veronica...\"\n\n\"What are you doing out here, by yourself?\"\n\n\"I had brunch with my last supervisor, Miranda. But she had to leave to go get ready for a meeting. I was just about to do the same, myself... What are you doing out here?\"\n\n\"I came out here to use the jacuzzi and work on my tan. That's why I wore this tiny swimsuit.\"\n\nJane looked Veronica up and down, trying not to drool. \"Yeah... I noticed...\"\n\nVeronica then started looking around as if she were contemplating something. \"This might have been a bad idea, though. It looks like families are showing up and this bikini might not be appropriate.\"\n\nJane looked around, noticing there were more people at the resort than before. \"Yeah, it's Saturday so there are probably more bookings at the hotel besides Sunshine.\"\n\n\"That makes sense,\" Veronica said, pulling out a pair of black shorts from her bag.\n\nAs Jane watched the sexy Latina put the little shorts on and cover that nice booty, there was only one word going through her mind. No...\n\nI little chuckle came over Veronica as she noticed the disappointment on Jane's face. \"Well, I'll see you later,\" she said as she put her bag over her shoulder.\n\nJane sat there confused as she watched the beautiful Latina walk off. I don't get it, she said to herself, lost in her own thoughts. I've been wanting her to cover up this entire time. But now that she actually put shorts on, I feel even more frustrated...\n\n************************\n\nFortunately for Jane, the conversation she had with Miranda proved to be the confidence boost she needed. Now, understanding the respect and support she had, she was able to attack the meetings with a new sense of enthusiasm.\n\nIf I can earn Camilla's respect, I can earn anyone's respect she said, motivating herself. And everyone seems to love Veronica! As long as I have her support, I have nothing to worry about!\n\nAfter the final meeting of the day, the other Branch Directors began to show their appreciation to the youngest supervisor.\n\n\"No wonder your branch has gotten off to such a hot start,\" one of them said. \"With women like you, Camilla, and Veronica, how could a branch not be successful?\"\n\nJane blushed from the words of encouragement but immediately diverted the credit to the others. \"How nice of you guys! But yeah, Camilla and Veronica have been amazing.\"\n\n\"I love that all three of you are so powerful, yet so different from each other,\" another Sunshine member added.\n\nJane went completely red, bashful from all the compliments. It was a great opportunity for her to be proud of not only herself, but the amazing employees who helped her get where she was.\n\n\"Where is Veronica, by the way?\" someone asked.\n\n\"Oh... She was out enjoying the resort earlier, but she might be back at the hotel,\" Jane answered, before finishing the sentence in her own head, in her panties.\n\n\"Will she be at the company dinner party, tonight?\"\n\n\"I'm sure she will be.\"\n\n\"Make sure she's there!\" several people requested, with big smiles on their faces.\n\nEventually, the smiles became too contagious and Jane wore one of her own. \"Yeah... I'll make sure she's there.\"\n\n**********************\n\nFor the first time in forever, Jane couldn't wait to see Veronica. She was all jazzed up, walking back to the hotel room, excited to tell her how the meeting went. However, when she arrived, she quickly realized she had returned to an empty room.\n\nWhere is she? Jane wondered to herself, looking around for clues. She's not still in the jacuzzi, is she? She would be a prune by now.\"\n\nAs the supervisor continued to wonder about her employee's whereabouts, she could only come to one conclusion. She's probably out having fun.\n\nAs she put her belongings away, she thought about how much fun Veronica was having without her and it made her feel guilty. You know what? I should be having a good time too. I'm going to find her about all the praise we received. And maybe we can even hang out!\n\nJane quickly changed before going downstairs and walking around the resort. For the first time since arriving, she was able to fully appreciate all the sights and sounds, and realize how much fun she could have been having if only she had accepted one of Veronica's several attempts to hang out.\n\nHer smile quickly faded away, and her heart sank when she finally spotted her valuable employee. The beautiful Latina was spending time with other members of Sunshine Industries, laughing and having a good time.\n\nThe small Asian woman hid behind a pillar, hoping not to be spotted. As she watched her former love spending time with others, insecurities and doubts started to pile in her mind. Why is she hanging out with them instead of me? Did I finally push her away?\n\nBreathing heavily in and out of her nostrils, she continued to stare at the Sunshine members. Why does she look so happy? She never looks that happy with me. I haven't seen her that happy since we used to... A long time ago...\n\nAs she saw another woman place a hand on Veronica's shoulder, Jane rolled her eyes and mumbled, \"Whatever,\" underneath her breath. She then stormed off, making her way straight back to the hotel room.\n\n********************************************\n\nThat night, Jane's frustrations only grew stronger. She quickly realized it wasn't a onetime feeling as Veronica was once again the center of attention.\n\nThey were at a dinner party off the beach, catered for their entire company. Though Jane still had not had any meaningful communication with Veronica since getting to the island, it still bothered her that so many other people were coming to their table, disrupting their chance to be alone.\n\nEventually, Veronica was invited to sit with another group of girls while she was grabbing a drink. Watching the entire thing unfold before her, Jane began seething at her table as she contemplated having her first drink and months.\n\nMuch to the young Asian's surprise, Veronica turned around and tried to wave her over to the table. Jane politely waved her off and said, \"That's okay!\"\n\n\"Are you sure?\" Veronica asked. \"We're having a lot of fun over here.\"\n\nNot wanting to concede for some reason, Jane continued to brush it off. \"That's okay. I'm just going to stay at this table since our stuff is already here.\"\n\nVeronica shrugged it off, understanding how hard-headed her supervisor could be. \"Okay, Jane! I'll be back over there in a little bit!\"\n\n\"Take your time.\"\n\nThough there were others that are table, Jane continued to pout as she sat in silence, staring at the empty chair next to her. She almost wondered why she just didn't tell Veronica to come back.\n\nWhat was I supposed to say? she asked herself, with a dose of reality. Hurry up and come back to me so you can have a boring time? Ugh why am I like this!\n\nThough she knew it was extremely childish, Jane started to lean over, hoping to catch some of Veronica's conversation with the other women. After realizing it was only making her more frustrated, she caved in and declared to herself, I'm going to need a drink.\n\nAfter being sober for so long, the familiar taste tequila going down her throat instantly brought a buzz to her system. However, any hopes of the alcohol making her feel better were instantly proven wrong.\n\nAs one drink turned into two, and two turned into three, the alcohol began to really affect her system. But though it didn't give her the courage to express herself to Veronica, it did give her the courage to lean even further and listen in on their conversation.\n\nShe overheard things going in a direction that made her even more envious. Several people began complimenting Veronica, telling her how sexy she looked in her little red and black dress.\n\nDuh, she looks sexy, Jane snarled underneath her breath. I would know! I was the one that got to massage her before any of them even met her!\n\nFinally, as the alcohol started to completely take over Jane, Veronica said something that crossed the line. \"I've actually lost a lot of weight, so I'm not even that hot anymore,\" the Latina explained, looking unbothered. \"I've gained some of it back recently, but I'm nowhere near as hot as I used to be. You should have seen me!\"\n\nUnable to hold her tongue any longer, Jane shot up to her feet and darted over towards the table. Without thinking it through, she immediately shouted, \"Don't say that!\"\n\nThe entire table went completely silent as they all turned and stared at the frustrated Asian woman. Jane was breathing heavily, like she just pushed her way through a door she never thought would open.\n\nWith a confused look, Veronica faced her boss and asked, \"Don't say what?\"\n\nAlthough Jane knew everyone was staring, her heart was only speaking to one person. \"Don't even say you're not that hot anymore, because you're just as hot and beautiful as you ever were!\"\n\nConfused by the spontaneous compliment, Veronica looked over at Jane's table and discovered the empty alcoholic drinks. \"Let's go talk in private,\" she said before getting up to her feet and grabbing her boss by the hand.\n\n\"What's going on?\" Veronica asked as they got back and took a seat at their original table.\n\n\"Nothing! I just... I don't like it when you talk like that. I know we're not... how we used to be, but you're still beautiful, so don't ever put yourself down like that!\"\n\nVeronica tried her best not to blush. As she turned her head to hide her face, she noticed the drinks on the table again. \"So, what made you decide to start drinking?\"\n\n\"I don't know... I was just having a tough time...\"\n\n\"I've noticed you've been having a tough time,\" Veronica sympathized. \"I know this is a work trip, but you're supposed to have a little bit of fun, aren't you?\"\n\n\"I know, but... it's difficult because I really want to be a good Branch Director. I'm so stressed out... I can hardly even think about having fun.\"\n\nVeronica grabbed Jane's hands and rubbed them gently. Staring into her eyes, she said, \"There's nothing to worry about. You're a great Branch Director.\"\n\nJane looked up into the beautiful Latina's brown eyes. \"You really think so?\"\n\n\"Of course, I do. I've always thought you would make a great supervisor. You're like the smartest person I've ever met!\"\n\nA sudden smile came over Jane's face, bringing a joy to Veronica's heart. \"Thank you...\"\n\n\"I've known you longer than anyone else here,\" Veronica pointed out as she squeezed Jane's small hands. \"You get insecure at times. Obviously, I can't just tell you to stop being insecure; That won't work. But you have nothing to worry about, because you're good at everything you do!\"",
        "Jane almost had to fight back tears. She started squeezing Veronica's hands, clutching on to them like lifelines that were saving her from her anxiety. \"I wanted to tell you something earlier today...\" she admitted with a quiet voice.\n\n\"What is it?\"\n\n\"At my meeting today, everyone had so many compliments for us. They said we're doing a great job with the new branch.\"\n\nA big smile came over Veronica's face. She wasn't surprised, but she loved hearing that others acknowledged Jane's hard work. \"See? Everyone knows you're doing a good job. You've been working your ass off for years and it's about time you start taking credit for what you've accomplished.\"\n\n\"I guess you're right... Thank you, Veronica...\"\n\n\"No problem,\" the Latina responded, placing a hand on Jane's shoulder. \"After tonight, we only have one more day here. You've done enough work. I think you should focus on having some fun.\"\n\nJane nodded her head and gave another genuine smile. \"I think I'd like that...\"\n\n\"Okay!\" Veronica said, relieved the adorable Asian was finally ready to let loose. \"What would you like to do for fun?\"\n\n\"This is the first time I've drunk in so long... I missed it. I really want to keep drinking and hang out with you, but I'm afraid of getting too drunk in front of the Sunshine Execs.\"\n\n\"I got you,\" Veronica said with a wink. \"If you get too drunk, I'll take care of you. I'll bring you back to the hotel room and put you to bed before anyone even notices.\"\n\n\"Are you still strong enough to carry me?\" Jane asked, giggling. \"I might be a little heavier.\"\n\nThe Latina looked the little Asian's body up and down while subtly biting her lip. Just before leaving to grab a couple of margaritas, Veronica stated, \"I might have lost a little weight, but I can still handle you...\"\n\nJane wasn't sure what Veronica meant by that, but the way she said it had her hornier than ever. She couldn't get it off her mind as she drank and chatted with her sexy employee.\n\nAfter several drinks, the two women had really loosened up and almost completely forgotten about their awkward tension. They spent almost an hour just talking and giggling together, as the alcohol, once again, got the better of Jane.\n\nStaring at the beautiful woman with her long black hair blowing in the wind, Jane couldn't hold her tongue any longer. \"Why do you have to be so hot?\" she accidentally let out.\n\nVeronica immediately placed to hand over her mouth in shock. Her face turned red as she started giggling.\n\n\"I'm sorry! Was that awkward?!\" Jane asked, grabbing Veronica's hands again.\n\n\"You weren't kidding about not being able to handle your alcohol!\" Veronica said, blushing.\n\n\"Ugh! Can you blame me?! You know how hard it is watching you walk around in your underwear and bikinis all day?!\"\n\n\"I didn't even think you noticed,\" the Latina said with a wink.\n\n\"Of course, I noticed!\"\n\nWhen Veronica finally stopped giggling, she took a deep breath before asking a question. \"So... remember last night when we played that couples guessing game? Why did you guess my favorite color was red?\"\n\nJane was now the one completely red as she looked around, trying to think of an excuse. \"Well... you're wearing red right now...\"\n\n\"We played that game before I ever wore this dress, Silly! Now, what was your reason?\"\n\nThe young woman let out another groan. \"Ugh! I'm only going to admit this because I've been drinking.\"\n\n\"Don't tell me then,\" the hot employee quickly rebutted. \"I don't want to know unless you want me to know.\"\n\nHearing that only made Jane want to tell the sexy woman even more. \"No, I want to tell you!\"\n\n\"Okay,\" Veronica said with a chuckle.\n\n\"Do you remember that sexy outfit you wore for me a long time ago?\" Jane asked. \"It was after I pulled that all-nighter, and you came to my apartment to take care of me. You wore this hot corset with a really sexy pair of red panties...\"\n\nWith a confident stare, Veronica responded, \"I remember that...\"\n\n\"Well, I remember you saying those were your favorite panties, so I just kind of assumed it was because they were red...\"\n\nVeronica became all bashful, knowing their moments of intimacy were still in Jane's minds. \"That was a very smart guess... Those are my favorite panties... But speaking of panties, do you know why I guessed your favorite colors were blue and black?\"\n\nJane became even more red, almost cringing from her own embarrassment. \"Is it because I told you that baby blue and black thong you have was my favorite? And you promised to wear it for me again someday?\"\n\n\"Maybe...\" the sexy Latina responded with an innocent face.\n\n\"I noticed you wore it again the other night...\"\n\n\"Oh, you did?! I didn't even know you were paying attention to me.\"\n\nPicturing the hot woman in front of her, wearing that sexy thong, Jane just smiled and responded, \"I noticed...\"\n\nThe women hardly knew what to say at this point. They were both left giggling together as they stared into each other's eyes, biting their own lips.\n\nDespite having so much on their minds they wanted to communicate, they immediately became distracted by a sudden blaring of music. Veronica picked up a quick glimpse of excitement in Jane's eyes when people started dancing. Getting up to her feet, she asked, \"Want to hit the dance floor?\"\n\nThe smaller Asian woman sank into her chair. \"No, that's okay... I'll just sit here and watch...\"\n\n\"Don't be ridiculous, Jane! Let's go!\"\n\n\"No... I don't know how to dance...\"\n\n\"You know how to Salsa dance.\"\n\nA frantic look came over the young supervisor's face. \"That was a long time ago and I didn't really know what I was doing... And I probably forgot...\"\n\nVeronica grew tired of all the excuses. Knowing Jane was just being insecure again, she grabbed her by the hand and led her to the dance floor.\n\n\"Veronica!\" the cute young woman kept shouting, to no avail.\n\nWhen they got to the dance floor, the Latina immediately took the lead, helping Jane recover the muscle memory of the Salsa moves she learned in the past. She made sure to be very encouraging, giving the shy woman several compliments along the way to help her with her confidence.\n\n\"Are you having fun?\" Veronica asked as she twirled Jane around.\n\n\"I actually am...\"\n\n\"You're doing a great job! It's like you haven't missed a beat. But in case you're still worried, remember what we did last time; Just concentrate on having fun with me and pretend nobody is watching us.\"\n\nThose words kept playing in Jane's head, as she finally gave in to the alcohol and danced with Veronica like nobody else was there. The less they thought about their surroundings, the more they had fun spending time together.\n\nEventually, their bodies started to communicate what their mouths hadn't been able to. They started bumping and grinding, turning the heat up as they felt more intimate.\n\nAt one point, Veronica leaned back into Jane and began grinding her ass against the cute Asian's crotch.\n\nPretend nobody is watching, Jane repeated in her head, as she let her hands roam up and down Veronica's sexy body. She then grabbed a hold of her waist and helped her grind her ass even harder.\n\nThe Latina turned around and started grinding her front against Jane's body. They held each other face-to-face, staring into each other's eyes.\n\nReleasing all inhibitions, Jane placed both of her hands on the Latina's plump bottom. Though Veronica was surprised, she gave Jane a little wink, letting her know how much she enjoyed the handsy behavior.\n\nJane suddenly stopped dancing as she became lost in Veronica's eyes. She stared at her for a moment, repeating in her head, Pretend like nobody is watching.\n\nStaring back into Jane's eyes, Veronica started to get lost in her own thoughts. I never thought I would dance like this with her again. I'm going to cherish this for the rest of my life.\n\nThe more she looked into Jane's eyes, the more her focus began to shift. She looks really drunk. Poor Jane. She can't handle her liquor like she used to.\n\nThen the Latina noticed a different look on Jane's face. A certain sparkle in her eyes. But that look... I've seen her with that look before.\n\nShe dug through her brain, trying to remember why that look in Jane's eyes felt so familiar. Then suddenly, she grew frantic as she realized where she remembered it from. Uh-oh! That was the face she made when she was about to...\n\nAs Jane puckered up and leaned in for a kiss, Veronica quickly put her finger over the drunk woman's lips.\n\n\"Why did you deny me?\" Jane asked, feeling a little embarrassed.\n\nVeronica grabbed her by the hand, fingers locked, and quickly led her away from the party. Once they were alone, the noble employee started to explain herself. \"Remember when I said I would take care of you if you drank too much? Well, I was afraid you would get it in trouble if one of the Execs saw you kissing your employee.\"\n\n\"Oh, shit!\" Jane responded, realizing how dumb her impulse was. \"I didn't even think of that...\"\n\n\"Sorry. I think I let things get a little too out of hand. I know I told you to pretend like nobody was watching, but I think we were kind of the center of attention, just like the last time we went dancing together.\"\n\n\"Don't blame yourself,\" the cute supervisor responded. \"I shouldn't have drunk that much after being clean for so long.\"\n\n\"Well... luckily, I don't think anyone saw.\"\n\n\"Thanks, Veronica. You really saved me.\"\n\n\"No problem, Jane. I promised to take care of you.\"\n\nAs they continued walking, hand in hand, Jane started to think about another supervisor-employee relationship. \"So, how is Maria handling her relationship with Carmen? Are they keeping their relationship a secret?\"\n\n\"At this point, I think Maria just does whatever she wants,\" Veronica joked. \"She's such a hot-shot over there. They don't dare tell her anything anymore. She pretty much demanded Carmen come with her to corporate or she wouldn't go, and they immediately caved in.\"\n\n\"Wow!\" the young Branch Director reacted. \"I hope I get to that point someday.\"\n\nVeronica felt a little jolt in her heart after hearing those words come out of her former loves mouth. Is she talking about being untouchable in her professional career? she wondered. Or is she talking about dating one of her employees?\n\n\"Can I admit something up you?\" Jane asked, interrupting the Latina's thought.\n\n\"Oh... Yeah?\"\n\n\"I really liked that cheetah-print swimsuit you wore earlier today...\"\n\nA big smile came over Veronica's face. \"It was actually leopard-print, but thanks! It's new.\"\n\n\"What's the difference between cheetah and leopard,\" Jane asked, looking confused.\n\n\"Ummm... I think a cheetah is faster.\"\n\nJane immediately burst into laughter at her employee's adorable explanation. \"That's not what I meant! I mean, what's the difference in the print?\"\n\n\"Oh, I don't know,\" Veronica answered innocently. \"I just know the tag said leopard-print.\"\n\nCompletely red in the cheeks, Jane admitted, \"I was actually kind of sad when you put your shorts back on and covered your swimsuit bottoms...\"\n\n\"Oh, I didn't notice,\" the employee responded with a cute chuckle. \"If you want... I can show it to you again...\"\n\nJane tried to contain herself, but her excitement was clear by the way her eyes shot wide open. \"Maybe I can finally join you in the pool... tonight?\"\n\nThe women giggled all the way to the hotel room where they got changed into their bathing suits. Jane stumbled the entire time, but she had Veronica to hold her hand throughout the process.\n\nEnjoying the influence of alcohol for the first time in months, Jane secretly had a few drinks from the mini fridge as she waited for Veronica to finish getting changed. She knew what she was doing was wrong, but she liked the idea of having an excuse in case she made any inappropriate mistakes.\n\nWhen Veronica came out of the bathroom, she noticed the smell of alcohol coming from her cute little supervisor. Scanning the room quickly, she saw the small empty bottles in the trash and thought to herself, I'm going to have to keep an eye on that.\n\nDespite Jane's drinking, and the sudden urge to be flirtatious, Veronica led her downstairs where they found themselves in the jacuzzi she used earlier that day. It was late at night, and they had the pool area to themselves. They only had their actions to be mindful of, not anyone else's opinions.\n\nJane was the first to disrobe herself, revealing her hot little body in a light blue, two-piece swimsuit. She left the Latina biting her lip as she stared at that body she missed for so long.\n\nVeronica then took off her clothes, revealing the sexy little leopard-print set that Jane wanted to see so badly. She felt sexier than ever, slowly entering the warm water as her hot supervisor stared her down. \"Was this the swimsuit you wanted to see?\" she asked before performing a little twirl for the Asian.\n\n\"It sure is,\" Jane answered with a quivering voice. \"But you look sexy in all your bikinis, to be honest.\"\n\n\"Oh, is that right?\" the Latina asked, giggling. \"Did you like the red one I wore yesterday?\"\n\n\"Of course, I loved the red one! And I loved how tight it was on your butt...\"\n\n\"It was really sweet how you let me borrow your jacket yesterday,\" Veronica said, blushing.\n\n\"I thought it looked really good on you,\" Jane responded, also blushing. \"But I also really like that black one you wear sometimes. You know, the one with the pink and yellow strings?\"\n\n\"I know which one you're talking about. Do you remember me wearing it before this trip?\"\n\n\"Of course, I remember it,\" Jane answered with a cheesy smile. \"You wore it that night we went to Maria's house and sat in her hot tub. Do you remember that night?\"\n\n\"You have such a good memory,\" Veronica responded with a wink. \"But yeah... I remember that night.\"\n\n\"What did we do that night?\"\n\n\"Well... I secretly drank a bunch when you and Maria weren't paying attention. But I guess the tables have been turned, haven't they?\"\n\n\"Maybe...\" Jane responded with an innocent look. \"But what else did we do that night, if you know what I'm talking about?\"\n\nKnowing she could no longer avoid the answer, Veronica grew completely red and chuckled to herself. \"Well... if I'm not mistaken... we had a lot of sex.\"\n\nEven though Jane completely baited her employee into saying it, just hearing the words out of Veronica's mouth had her aroused. Talking about her sexual history was hot enough, but discussing it back and forth with the woman she shared so many intimate experiences with took things to another level.\n\nLetting out a little moan, Jane asked, \"Veronica... did you like having threesomes with Maria?\"\n\n\"Umm... Yes... Yes, I did,\" the Latina answered, thinking back to that hot night.\n\nThen, daring to ask something even naughtier, Jane asked, \"Veronica... did you like having sex with me?\"\n\nVeronica began coughing, shocked at the silliness of the question. After catching her breath, she answered, \"Of course, I did...\"\n\nWithout another word, Jane wrapped her arms around Veronica's shoulders and planted a soft kiss on her lips. Once the Latina kissed her back, the supervisor slowly put her tongue into her employee's mouth.\n\nThey made-out gently, slowly reintroducing themselves through their passionate but hesitant kissing. Veronica wrapped her arms around Jane, moving her hands up and down her supervisor's cute little body, before finding a resting place on her tush.\n\nA rush of emotions went through both women as they communicated with a kiss what words could not. They were eager yet patient, excited but at peace, spontaneous yet controlled. It was like they were starting a new adventure, but were surrounded by the comfort of being at home. Most importantly, as they dove into each other, it felt like their first kiss and their millionth kiss at the same time.\n\nThough Veronica wanted more than Jane's body, she could have kissed the adorable Asian for days, expressing herself physically to the woman she loved.\n\nJane built several excuses in her head, in case she regretted it the next day. She had too much to drink, it was late at night, and she was incredibly horny. But as they made-out, she felt a satisfaction that went beyond the excuses. She was drunk, but she was drunk and in love.\n\nWhen they finally stopped kissing, they pulled away and stared into each other's eyes for a somber moment before gently connecting their foreheads. Jane then closed her eyes and put her head on Veronica's shoulder, feeling as if the weight of the world had been lifted off her shoulders.\n\n\"Let's go back to the room,\" Veronica whispered into the Asian's ear.\n\nJane's eyes shot wide open, excited to take things back to the bedroom. Eager but intoxicated, she had trouble getting out of the hot tub, but Veronica was there to help her out before drying her off and getting her clothes back on.\n\nVeronica noticed Jane stumbling and bumbling the entire way back. Realizing that holding her hand wasn't enough, she wrapped her arm around the drunk woman and assisted her the rest of the way to the room.\n\n\"I'm sorry, I'm having a hard time walking,\" Jane said with the sweet voice. \"I drank way too much tonight.\"\n\n\"That's okay,\" Veronica sweetly responded. \"I'll take care of you.\"\n\nThen, holding nothing back, Jane showed her true desires. \"Just get me back to the room so I can have sex with you!\"\n\nHearing those words ignited fireworks in Veronica's heart. The same fireworks she felt the first time she had sex with Jane. The same fireworks she felt every time she had sex with the woman she loved. \"Are you sure?\"\n\n\"I'm sure! I wanted to have sex with you the entire time we've been here. I wanted to have sex with you the entire time you've been in New York... I just couldn't admit it to myself.\"\n\nIt all came at a major surprise to the beautiful Latina, especially the latter part. There was a part of her that felt complete, like she finally had everything she wanted. However, there was another part of her that was more concerned about Jane's well-being.\n\nAs they got into the room, Veronica put Jane on the bed, gave her a soft kiss and whispered, \"I want to have sex with you, too. But I've been fantasizing about this moment for so long, I want to make it perfect.\"\n\nJane's eyes lit up as she stared at her hot employee. \"What do you mean by that?\" she asked, licking her lips.\n\n\"Lie down like this,\" Veronica instructed, helping her new supervisor get comfortable in bed. \"I'm going to put on a very sexy outfit for you. Would you like that?\"\n\nJane rested her head back against the pillow and gasped. \"Of course, I would like that! I love it when you are sexy outfits for me!\"\n\n\"Just relax, and wait here for me,\" Veronica whispered before giving Jane a kiss on the forehead. \"I'll be back in five minutes.\"\n\n\"With a big smile on her face,\" Jane nodded her head and got comfortable.\n\nVeronica quietly walked around the corner, pretending to go into the bathroom. She then stood there for a few minutes, making sure Jane didn't get out of bed.\n\nWhen she walked back to the bed, wearing the same outfit she was before, Jane was fast asleep, just as she expected. She took the quiet moment to smile at her drunk and exhausted supervisor, who was worn out from the wild night.\n\nGet some rest, Mami. Unfortunately, I let you get a little too drunk.\n\nWithout alcohol, we may have never shared such a passionate night. You said you have wanted to have sex since I got here, but this isn't the way I wanted it, and this isn't the way you wanted it, either.\n\nI don't want you having any excuses, and I definitely don't want you having any regrets. So, goodnight sweet Jane. I'll see you tomorrow.\n\n*************************************************\n\nHuh? What time is it? Jane woke up the next morning groggy and confused. She turned from side to side, wondering where she was.",
        "As she turned and looked towards the other side of the bed, she noticed Veronica staring back at her. \"Oh... Hey....\"\n\nThe Latina looked tired, but was less of a mess than the Asian. \"Good morning, Jane.\"\n\n\"Good morning, Veronica...\" As Jane checked her phone, her heart rate began to rise. \"It's so late!\"\n\n\"We were both pretty tired last night,\" the employee explained. \"We don't have any important meetings today, so I figured you should sleep in.\"\n\n\"Oh... Thanks,\" Jane responded, trying to remember everything that happened the previous night. However, she began to cringe as she started to recall the wild night they had. \"Veronica... did we have sex last night?\"\n\nWith a deep breath, Veronica answered, \"No... No, we didn't, Jane.\"\n\nThe younger Asian woman was a little surprised at the response. \"Oh... I remember us kissing and rushing back to the room.\"\n\n\"You were entirely too drunk,\" the Latina explained. \"I told you to wait in bed for me, knowing you'd be fast asleep before I returned.\"\n\n\"Oh...\" Jane reacted once again, not knowing how to feel. There were so many emotions running through her body. She was impressed that Veronica was so responsible with her. She was disappointed in herself for getting so drunk. She didn't like knowing she was willing to have sex with Veronica, despite the unresolved issues. But strangest of all; she almost wished Veronica told her they had sex.\n\n\"Sorry for getting so drunk,\" she finally said, pushing all her conflicting feelings aside. \"And of course... thanks for taking care of me the entire night.\"\n\n\"Of course... I promised I would.\"\n\nAs they both sat up in bed, Jane started to feel regret over what happened. \"I'm sorry I came on to you like that in the hot tub. I still have some unresolved issues I'm dealing with, so I didn't mean to give you the wrong idea. I was just really drunk.\"\n\nVeronica knew it was a bullshit excuse. She felt something there besides drunken lust. At that moment, she decided it was now or never. It was time to express what had been in her heart for so long. \"Jane... Do you know why I told you there was nothing between us, and that we were just having fun?\"\n\nThe young Asian woman took a deep breath, remembering that fateful night. \"I think so...\"\n\n\"I don't think you understand,\" Veronica explained. \"I care about you so much, I wanted to be with you., and I knew you wanted to be with me... but I was afraid... afraid that you would stay with me and allow me to hold you back from your potential. I never wanted to lose you, but going to Sunshine Industries was the best thing for your future, and I was willing to sacrifice my own happiness to see you succeed.\"\n\nThough Veronica felt relief, getting that off her chest, there was a twisting feeling in her heart as she watched an expression of anger grow on Jane's face.\n\n\"I know that...\" Jane responded, slowly growing furious. \"You think I don't know what?!\"\n\n\"Oh...\" Veronica reacted, feeling dumbfounded. \"Then why are you still holding a grudge?\"\n\nJane started laughing in disbelief at the audacity of her former lover. \"You just don't get it, Veronica. You really don't.\"\n\n\"What the hell are you talking about?\"\n\n\"I'm talking about us!\" Jane yelled, bringing Veronica to a confused silence. \"I'll admit, it took me longer than it should have to figure out your plan. But that's the problem; it was your plan, not our plan.\n\n\"You think I'm so smart, right? You respect me, right? I have all the potential in the world and I can make good decisions, right? Then why the hell did you decide to leave me out of the most important decision of our lives!?\"\n\nVeronica went frozen, feeling completely sideswiped by this new information.\n\nJane was visibly shaking, and her voice quivered in anger. \"You decided not to give us a try. You could have told me what you were thinking and we would have come up with a plan, together. I swear I could have made us work, but you decided, without me, to end us by hurting me!\"\n\nVeronica started stumbling over her words until she found a single point to focus on. \"I... uhhh... I... didn't know... How could you have made us work?\"\n\n\"I don't know, and I'll never know because you didn't give us the chance to make it work. Sunshine wanted me badly, and I had corporate on the ropes after Jennifer and Mark tried to lowball me. We would have figured something out, but you didn't give me a chance, and that's what really hurt the most...\"\n\n\"I really thought you would have been better off without me!\" Veronica argued. \"And look how everything turned out. You're a Branch Director at Sunshine Industries!\"\n\n\"That's not the point! I would have been successful, either way. I would have made something work. To be completely honest, I didn't know what would have happened, but I know I would have made it work. But we'll never know because you took that from me. You took that from us...\"\n\n\"You're right... I should have trusted you with this situation. You're the smartest person I've ever met. But I'm here now, and I'm trying to fix this.\"\n\n\"You're only here because Camilla thinks I'm still in love with you!\"\n\nAn awkward silence filled the room as both women realize the implications of what was just said. The word echoed through both of their brains as they both realized it was the first time the L word had been exchanged between them.\n\nNeeding to escape the awkward situation, Jane went out of deep exhale before walking towards the door. \"I can't do this right now...\"\n\nAfter hearing the door slam, Veronica finally got up from the bed and walked into the bathroom. She stared at herself for several minutes, trying to figure out the feeling looming inside her. Though she was on the edge of tears, she had a new sense of hope because it was the first time she actually fought for their love.\n\nShe stared at herself in the mirror, repeating over and over what Jane had said to her. Because Camilla thinks I'm still in love with you.\n\n***********************************\n\nNeither woman spoke to each other until it was time for the company farewell luncheon. Although Jane and Veronica's flight wasn't until the next day, several others were flying out that evening, making this the last opportunity to get together.\n\nDespite not speaking to each other, they enjoyed a meal together as they sat in silence. However, after the events of the previous night, both women independently decided not to drink.\n\nWhen the speakers were done, and everybody was finished with their food and drinks, several people came by to say farewell to the two women. But once again, it was the Latina who received more of the attention.\n\nJane wasn't jealous in any way. As a matter of fact, she was proud that her employee had garnered so much attention after such a short amount of time. However, she was shocked when the other Sunshine members brought up the dancing from the previous night.\n\n\"That was some pretty hot dancing you two were doing,\" one of the women said while giggling. \"You two have such great chemistry.\"\n\nVeronica and Jane both went red as they glanced over at each other. Then the Latina quickly tried to cover for her boss. \"Yeah... I guess I drank a little too much. I get a little... inappropriate when I dance...\"\n\nMuch to Jane and Veronica's surprise, the other women only replied with compliments. Funniest of all, one responded, \"Your husband must be so lucky.\"\n\nVeronica laughed awkwardly. She knew there was no reason to explain her business, but she felt a need to for some reason. \"I... uh... I'm not married...\"\n\n\"Oh!\" the woman reacted. \"Sorry! I meant your boyfriend is lucky.\"\n\nTapping her fingers on the table and looking around at all the Sunshine members, Veronica further explained, \"I'm... I'm actually single.\"\n\nConfused expressions came from all directions. \"How could such a beautiful woman like you be single?\" one asked. \"Did you just get out of a relationship?\" another one asked.\n\nVeronica took a deep breath and smiled. Never looking over at Jane, she let her heart speak. \"I was kind of with someone, but I messed everything up. And now I realize... I care for this person more than I've ever cared for anyone or anything in my life.\"\n\nEveryone looked on with teary eyes, including Jane, as the Latina bravely poured her heart out. \"Now, I'm doing everything I can to prove how much they mean to me. I blew it the first time, which was the biggest mistake of my life... But if this person ever wants me back... I'll drop everything for them because there's no one else in the world for me.\"\n\nThough Veronica looked at peace with her emotional response, several women hugged and complimented her for revealing such a vulnerable answer. Jane, on the other hand, was on the verge of tears and had to remove herself from the table to get a breath of fresh air.\n\nAfter saying their goodbyes to everyone, Jane and Veronica walked back to their hotel room. They both acknowledged each other with looks, but still didn't say a single word. The Latina could only imagine what was going through the Asian woman's mind.\n\nOnce they got back to the room, the emotions immediately got the best of Jane. Expressing herself through actions, she threw her belongings down and wrapped her arms around Veronica before planting a big kiss on her lips.\n\nEven more surprised than the previous night, Veronica needed a moment to gather herself before she even realized what was happening. Eventually, the power and passion she felt through Jane's kiss prevailed, leading to a long and deep make-out.\n\nWhen their lips finally separated from each other, Veronica looked into Jane's eyes with confusion. \"You're not drunk, are you?\"\n\n\"No,\" Jane said as she dug her head into Veronica's shoulder. \"Did you mean that stuff you said at the lunch table?\"\n\nThe Latina forced Jane to look her in the eyes. \"Of course, I did. I've always felt that way. I was just too afraid to tell you.\"\n\n\"I'm glad you finally did... I don't know why, but it meant a lot to me.\"\n\nVeronica just shook her head. \"I'm sorry for making a plan without consulting you first. I now realize how wrong that was of me. I know that now, and I'll probably continue to make mistakes along the way, but I'll never make that mistake again because I know in my heart, I want to be with you.\"\n\nStaring into the beautiful woman's eyes, a tear ran down Jane's cheek as she said, \"I want to be with you too... But what if we keep hurting each other?\"\n\nVeronica took another deep breath before speaking from the heart. \"I can't promise you I'll never hurt you again, but what I can promise is... I'll always love you.\"\n\nTears began to flow down Jane's cheeks. \"What... What did you say?\"\n\nLooking as confident as ever, Veronica answered, \"I said I love you.\"\n\nJane's heart exploded in a passion of fury, causing her body to express what her words could not. And though she didn't say it back in that moment, Veronica knew she had her.\n\nThey kissed fervently before falling onto the bed in each other's arms. Unable to control her actions any longer, Jane pressed herself against the hot Latina and rubbed her hand directly against her crotch. She then kissed her sexy employee even harder, forcing her to moan as they played with each other's tongues.\n\nVeronica's dress had already risen above her waist, but she decided to pull the entire thing off, giving her Asian supervisor exactly what she wanted. Once she unclipped her bra, Jane ripped it off her and pounced on her nipple, sucking it like a baby longing for milk.\n\nLeft in nothing but a striped blue thong, Veronica squirmed uncontrollably as she had her nipple sucked and her crotch aggressively rubbed. She then grabbed a handful of Jane's long black hair and guided her head close so she could take her lips.\n\nThe sheer passion of the kiss caused Jane to tremble. Veronica took control of her, stripping her of her dress before positioning herself between the supervisor's legs. She then removed Jane's little thong, exposing her perfectly waxed pussy.\n\nThe Latina spread the smaller Asian's legs apart, holding them firmly with her hands as she dug into her soaking wet pussy. Her tongue glided from the bottom to the top, sending Jane gasping for air with every stroke.\n\nVeronica ran her hands up and down Jane's hamstrings, pushing her legs up. She then licked even further up and down the Asian's crotch, making sure to tickle her sensitive clit and anus.\n\nJane was sent into a frenzy, moaning like never before. She could only hope the others staying on their floor were out of the hotel, so they wouldn't hear her frequent howling.\n\nVeronica slowly introduced a finger into Jane's pussy, using it to gently stroke her G-spot. As the little Asian woman wailed even louder, the Latina placed her mouth over her clit and licked in a circular motion until she was ready to explode.\n\nJane's entire body went stiff, and her eyes shot wide open. Feeling a pleasure like never before, she frantically exclaimed, \"I'm going to cum!\"\n\nA little smirk came over the Latina's pretty face as she continued playing with the Asian's clit. \"Cum for me, Mami.\"\n\nBeing called Mami by Veronica for the first time in years set Jane over the edge. A violent explosion rocked the bottom half of her body, causing her to squirt out juices while her endorphins ran wild.\n\nShe closed her eyes as her breathing became heavier. Erupting over and over, her pussy continued to spurt out with every passing orgasm. She then squealed and hung on for dear life, realizing she couldn't handle much more.\n\nWhen Veronica sensed her supervisor had given everything she had, she climbed on top of her and looked into her eyes, wearing a smile and Jane's juices on her face. Satisfying her love's physical needs fulfilled a void in her heart she didn't even realize was there.\n\nBefore Jane was even able to catch her breath, she jumped into action, tearing into the Latina without a second thought. She pushed Veronica onto her back, before ripping her sexy little thong off. She then made-out with her, shoving her tongue down her throat as she began tickling the Latina's juicy clitoris.\n\nVeronica was already on the edge of an orgasm, but she wanted it to be perfect. She quickly undid Jane's bra, being careful not to interrupt their kissing as she left the Asian woman and herself completely naked.\n\nWith one hand, she grabbed a handful of Jane's ass, and with the other she grabbed one of her tits. She then smacked the Asian's tushy as she continued to make-out while being rubbed down.\n\nThe smack caused the smaller woman to gasp and moan into Veronica's mouth. The reaction was even more arousing to the Latina, causing her to sensually rub and smack the Asian's tush, over and over.\n\nSuddenly, hearing the Asian's subtle gasps into her mouth, along with having her clit stimulated by the woman she loved, caused her entire body to stiffen up as it prepared for an eruption. She clung on to Jane as hard as she could, hanging on for dear life.\n\nThough it had been years since they had sex, Jane could read Veronica's body language like a book. Knowing exactly what was coming, she whispered into her ear, \"Cum for me, Baby.\"\n\nVeronica's eyes rolled to the back of her head as she shot out a piercing moan. The dam had finally broken, and a wave of pleasure crashed into all parts of her body, inside and out.\n\nShe grew too stiff and fragile to kiss, but the Asian never disconnected her lips, forcing her to make-out as the waves of pleasure continued making splashes throughout her body.\n\nJane gave Veronica everything she needed, exactly when she needed it. When the Latina got too sensitive, the Asian rubbed softer. When she needed a kiss on the neck, Jane kissed her on the neck. When she was ready to return the kiss, the Asian made-out with her like they would never kiss again.\n\nOne orgasm compounded into another, elevating Veronica to heights she had never been to or even heard of. It was more than having sex with someone from the past; it was a reconnecting of souls. It wasn't a fulfillment of lust; it was a confirmation of love.\n\nEventually, they collapsed into each other's arms, exhausted from the outpouring of their hearts. They were connected like two puzzle pieces that had been missing from each other. Gazing into each other, they stroked one another's hair as they enjoyed the peaceful moment.\n\n\"That was amazing,\" Jane finally whispered, breaking the silence.\n\nVeronica smiled and nodded in agreement. \"It was even better than I remember.\"\n\nJane became red and cringed with embarrassment. \"I'm sorry for squirting all over you...\"\n\n\"That's okay,\" the Latina responded, giggling. \"I liked it. And besides, I needed to take a shower, anyway.\"\n\n\"So do I,\" Jane responded. \"Do you mind if I join you, for old times' sake?\"\n\nSuddenly, Veronica went completely red in the face. \"I think I have an even better idea.\"\n\n\"Oh? What is it?\"\n\n\"How about a hot bubble bath?\"\n\nJane's face lit up as she lifted herself from the bed. \"You were right; That's a much better idea!\"\n\nThey eventually found themselves in the tub, enjoying the hot water. Veronica sat behind Jane, giving her a shoulder massage with her warm and soapy hands.\n\n\"This is so nice,\" the Asian said, closing her eyes as she leaned back against the Latina.\n\nVeronica whispered into her ear, \"You deserve this. You've done such a great job as the new Branch Director.\"\n\n\"You really think so?\"\n\n\"Of course, I do.\"\n\nJane chuckled to herself as she thought about where life had taken them. \"Isn't it kind of funny? Our whole relationship started with me giving you a massage. And here we are; on vacation, sitting in a bubble bath, while you give me a massage.\"\n\nThe Latina was left blushing, realizing there was nowhere else she would rather be. \"I guess it is a little bit of a role-reversal, but I love giving you massages too.\"\n\nSuddenly, the smaller woman turned around and got on her hands and knees so she could face Veronica. \"You know... that's not the only role-reversal that's going on.\"\n\nA curious look came over the Latina's face. \"What do you mean by that?\"\n\n\"Well... for so long, you were the one who hid your emotions from me,\" Jane started, while staring into Veronica's beautiful eyes. \"Now I'm the one that has something to tell you.\"\n\n\"What is it?\" Veronica asked, prepping her heart.\n\nJane took a deep breath as a tear rolled down her cheek. \"Veronica... I love you.\n\nTears flowed from Veronica's eyes and her lips trembled. \"I love you too\" she responded with fireworks going off inside her.\n\nJane calmed her quivering soul by scooting in and giving her a soft kiss. They slowly began to make-out, introducing their tongues as the warm water dripped from their naked bodies.\n\nNo longer hiding a thing from each other, they kissed harder and harder, letting all the passion flow from the inside out.\n\nJane moved down to Veronica's neck, kissing it lightly before proceeding to her breasts. After giving each nipple a lick and a suck, she returned to the Latina's mouth and teased her tongue. Then with her hand, she worked her way up Veronica's inner thighs, slowly rubbing the quivering women's clit in a circular motion before allowing her fingers to slide in her pussy.\n\nVeronica let out a sudden gasp as the pleasure only made her kiss harder. She reached one of her hands between Jane's legs and rubbed her clit. Then, with her other hand, she reached around the Asian's little body and rubbed her tight little anus.\n\nJane trembled into Veronica's mouth from the sudden stimulation, but she did her best to keep kissing. There was nothing that could make her leave the lips of the woman she loved.",
        "Veronica dipped her hands into the soapy water before rubbing down the cute Asian's ass and crotch again. The stimulation became so intense, the smaller woman's little body went completely stiff.\n\nBringing Jane pleasure was the ultimate arousal for Veronica. Though she was about to cum from the pleasure of being fingered, knowing she was providing an equal sensation to her lover and best friend was the ultimate arousal.\n\nJane's entire body flinched as the orgasm shot through her insides. However, she did her best to keep herself up, as she continued to tickle Veronica's gG-spot with two of her fingers.\n\nNot long after, the intensity got to Latina, causing her to crumble from her own climax. Both women were left moaning into each other's mouths until Jane finally collapsed onto Veronica, and they panted heavily in each other's arms.\n\nVeronica held the smaller woman, stroking her wet hair until they were able to catch their breaths. Jane just rested on top of her as they enjoyed the peaceful moment of silence.\n\nNormally, they were the type of women that could go several rounds without becoming too exhausted. But with all the emotional buildup, they were left completely drained.\n\n\"I could stay like this forever,\" Veronica said, finally breaking the silence.\n\nJane looked up at her and smiled. \"Eventually, we would turn into prunes.\"\n\nVeronica just giggled and rolled her eyes. \"You know what I meant. I just love being close to you.\"\n\n\"I love it too,\" Jane responded, getting teary-eyed again. \"But I'm glad we are in each other's lives again.\"\n\n\"I'm so thankful for that too, Mami.\"\n\n*************\n\nThough they only had one day left before leaving the island, the new lovers made the best of it. They spent time together doing the things they should have if it weren't for their silent quarrel.\n\nThey finally saw the sites together before having a date night at a restaurant, where they caught up on old memories. Even when they weren't having sex, the chemistry was undeniable. Both women couldn't stop smiling now that all the drama and miscommunication were behind them.\n\nEventually, as they sat the dinner table, they started to discuss the next steps of their relationship. Though they loved their time on the island, they didn't know what the future had in store for them.\n\n\"So, what happens next?\" Veronica asked. \"Am I even allowed to work for you now that we're in a relationship? Do you want to keep it a secret from Sunshine?\"\n\n\"I don't want to keep this a secret,\" Jane responded, much to the Latina's surprise. \"But I actually don't know if we're allowed to be together.\"\n\nThough Veronica was thrilled Jane didn't want to keep their relationship hidden, she was worried about what might result from this. \"So, what do you think we do?\"\n\nWith a deep breath Jane answered, \"I say we disclose it to corporate and see what happens.\"\n\n\"And if they don't approve?\"\n\n\"Then I'll step down and let Camilla be the new Branch Director,\" Jane answered, looking at peace with her answer. \"That way, we would be equals, which is allowed at Sunshine Industries.\"\n\nVeronica's eyes got big as she realized the sacrifice Jane was willing to make. \"No! I wouldn't want you to get demoted for me.\"\n\n\"This is about more than just our relationship,\" the young Branch Director explained. \"I would be happy with either role. But to be completely honest, I think Camilla deserves the position more than I do. So, it might just be best if things go that way.\"\n\nA genuine look of happiness came over Veronica's face as her stomach was filled with butterflies. \"If that's what you think is best, then I trust you. But even though Camilla would be a great, I think you're an amazing Branch Director.\"\n\nFinally, a thought popped into Veronica's head. It was something she had wondered about for a while, but was afraid to scratch the itch. But for some reason, she was no longer afraid of the answer. \"So... can I ask you a personal question?\" she started.\n\n\"Yeah?\"\n\n\"What is... your relationship with Camilla?\"\n\nJane felt her heartbeat accelerating. She began stumbling over her words as she tried to find a way to explain the situation to her new girlfriend. \"Oh... Uhhhh... Well, we were...\"\n\n\"It's okay,\" Veronica assured, interrupting the visibly nervous woman. \"I always assumed you two had some type of relationship... But ever since I met her, it felt like she has been pushing me towards you. So... I'm just really confused...\"\n\n\"Umm... We had a physical relationship at one point,\" Jane started, getting that weight off her shoulders. \"But she basically called me out and said I was still in love with you.\"\n\n\"I was wondering about that,\" Veronica said, leaning in. \"You brought that up earlier, but I didn't get how that would even come up.\"\n\n\"I guess I talked about you so much that she was able to put the story together in her head and figure out we were both still in love. She actually took your side on a lot of issues we had...\"\n\n\"That's so interesting...\" the Latina responded, thinking back to how much she used to hate the mysterious woman.\n\n\"When I came back from seeing you that first time, she started to grow distant,\" the supervisor explained. \"She's pretty quiet in general, so I didn't notice it at first. But she wasn't talking or hanging out with me like she used to. And the most telling sign of all, she stopped having sex with me.\"\n\nVeronica was left staring down at the table as a new sense of guilt entered her mind. Not only had she misjudged the blonde Latina, but she didn't even know the huge sacrifices Camilla made for her, either.\n\n\"She was right though,\" the young Asian woman said, snapping Veronica out of her deep thought. \"I couldn't admit it to her, or even to myself, but I was always in love with you. I was just too stubborn to admit it.\"\n\nVeronica almost laughed in disbelief, remembering the previous conversations she had with the blonde. \"Now that I think of it, she made a lot of weird statements. I thought she was talking about her job, but I guess she was talking about her relationship with you.\"\n\nJane rolled her eyes and shook her head. \"That Camilla is a strange one. But I hope this doesn't make things awkward around her. I hope you're not too uncomfortable now that you know our past.\"\n\n\"You know what's weird?\" Veronica asked, chuckling to herself. \"Oddly enough, it doesn't make me uncomfortable at all.\"\n\n\"Are you sure?\" Jane asked, raising her eyebrows.\n\n\"In a weird way... I feel like she's an important part of our relationship. I really owe her so much. If anything, it just makes me respect her even more.\"\n\n\"Well, I'm glad we got that out of the way,\" the cute Asian said, sighing in relief. \"That's actually very mature of you. But speaking of maturity, I think it's time for me to be mature and apologize to you.\"\n\nThe Latina's head popped up. \"Apologize for what?\"\n\n\"For so long, I was so angry at you I was blinded from my own issues. I didn't like the way you handled my departure, but I didn't handle things much better. I was just as guilty of not fighting for our love, and for that... I am truly sorry, Veronica.\"\n\nA huge smile came to the beautiful employee's face, as it felt like the world had been lifted off her shoulders. \"It's okay, Mami.\"\n\nJane took Veronica's hand and looked into her eyes. \"I vow to do everything in my power to never let that happen again, because I can't lose you a second time. I need you, so I will always be open and honest with you. And I will never stop fighting for our love.\"\n\nVeronica grabbed Jane's other hand as tears started to flow. \"And I vow to be completely honest with you from now on and do what's best for us. I will be as patient as you need me to be. And no matter what, I will make sure you know how much I love you, every single day.\"\n\nTears rushed from Jane's eyes. She began laughing at herself, embarrassed that she couldn't hide her emotions in public. However, the heartfelt moment got the best of her, and she walked around the table to give Veronica a big kiss.\n\nSurprised at such affectionate display in public, Veronica's eyes got big. But as always, Jane's kiss put her at peace, calming her down so she could just relax and enjoy kissing her back.\n\nThis is my life now, she thought to herself while locking lips with the beautiful Asian. She is mine, and I am hers. And nothing will ever change that.\n\n**************************************\n\nAfter a lovely night and a romantic dinner, the two women returned to their hotel room. As soon as they got inside, Veronica informed Jane, \"I have a surprise for you.\"\n\n\"What kind of surprise?\" the cute little Asian asked.\n\nThere was a sparkle in Veronica's eye as she began to walk off. \"Just get comfortable on the bed, but don't fall asleep this time...\"\n\nThe younger woman started getting wet just imagining what the Latina had store in store for her. As she sat back and waited, Veronica quickly made her return, leaving Jane wide-eyed with her mouth open.\n\n\"Veronica!\"\n\nThe sexy woman returned, only wearing the baby blue thong Jane loved so much. She slowly approached the bed, ready to take her prey captive.\n\nJane started to tremble in anticipation of the sexy woman coming to her. Once again, the beautiful Latina had left her breathless.\n\n\"What's the matter?\" Veronica whispered, kissing Jane's neck.\n\n\"You look amazing!\"\n\n\"Do I?\" Veronica asked while stripping Jane down to a little white thong. \"I think you're the sexy one, wearing your naughty little thong.\"\n\nJane went completely red and was covered in goosebumps. \"So, what do you have in mind?\"\n\n\"This isn't going to be like last time,\" the Latina warned, in her sexiest voice. As she's stared the little Asian down, she confidently stated, \"Last time, we were making love. This time, I'm going to fuck you.\"\n\nAn eruption of endorphins rushed through the smaller woman. With words alone, Veronica had already almost given her an orgasm. She moaned and quivered as the Latina grabbed her by the hair and positioned her for an over-the-knee spanking.\n\nVeronica rubbed the Asian's cute little tushy as she teased, \"Even though I forgave you, I still have some frustration I need to take out on you. I think a little spanking is in order.\"\n\nJane squealed as Veronica smacked her cute little bottom. She could feel herself getting wetter and wetter, as her juices trickled down her inner thighs. \"This is so hot!\" she let out.\n\nVeronica grabbed a nice hold of Jane's long black hair and gave her several hard smacks on her ass, causing her to moan from the pain and from the pleasure.\n\n\"You pretend to be such a responsible and good girl,\" Veronica teased, continuing the spanking. \"But Mami knows how naughty you really are.\"\n\n\"Yes!\" Jane moaned as her cute little body squirmed around. \"I'm such a bad girl! I need you to spank me, Mami!\"\n\nThe Latina continued the hot spanking, smacking the cute little Asian's butt until she couldn't handle it anymore. Then she stripped the hot woman of her thong and placed her on all fours.\n\n\"What are you going to do to me now, Mami?\" Jane asked, rubbing her sore bottom.\n\nVeronica began teasing her by rubbing her soaking pussy from behind while pulling her hair. \"I noticed how much you wanted me this entire time, you bad girl.\"\n\n\"How could I resist you?!\" Jane desperately responded while having her clit rubbed. \"You look so sexy in all your little swimsuits!\"\n\n\"That's not what I'm talking about,\" Veronica whispered into her ear. \"You wanted me before that, didn't you?\"\n\n\"What do you mean?\"\n\n\"I mean this!\" the Latina said before tickling Jane's perfectly smooth crotch. \"You got a Brazilian wax job, didn't you? Why else would you want to be so perfectly groomed unless you planned on getting fucked?\"\n\nThe little Asian went completely red in the cheeks. Despite still receiving immense pleasure, she tried to come up with an excuse through her moans. \"It's not like that! I just... I thought it was a possibility... but I didn't expect it!\"\n\n\"You don't have to say another word!\" Veronica said, interrupting the cute little Asian. Then she gave her another hard smack on the butt before continuing, \"Don't worry. Mami will take care of you.\"\n\nJane sighed in relief before her entire body jumped from a warm sensation. It was Veronica's tongue, ravaging her tight little ass hole. \"Oh! God!\" she moaned uncontrollably. She had almost forgotten how amazing her lover was at eating her ass.\n\nOnce again, the Latina felt the little Asian going stiff on her hands and knees, and knew she was on the verge of cumming. She placed one of her hands between Jane's legs and rubbed her out as she continued eating her tight little sphincter.\n\n\"I'm going to...\" Before Jane could even get the words out, she erupted with a hard explosion, spouting her juices from her tight little pussy. Veronica rubbed her vigorously, sending her screaming as her liquid got all over the place.\n\nThough Veronica had Jane rocking back and forth and flinching uncontrollably, she wasn't satisfied with her work just yet. \"We're not stopping at one orgasm this time,\" she warned, with her tongue still pressed against the little Asian's anus.\n\nJane looked back and gasped as the Latina continued going to town on her little ass. Though she moaned and jerked relentlessly, Veronica took no mercy on her, eating and rubbing her out until she was exploding with cum again.\n\nThough Jane was left completely gratified from several orgasms, she wouldn't be satisfied until she had a chance to return the favor and fuck the naughty Latina. She grabbed Veronica by the hair and guided her off the bed as she demanded, \"Get your sexy ass over here.\"\n\nSurprised by Jane's sudden sexual dominance, Veronica moaned out as she asked, \"What are you doing?\"\n\n\"I'm not the only one who deserves a spanking,\" the supervisor said as she pulled the chair from under the desk. Then she sat down and placed the hot Latina over her knees. \"You've been a naughty girl too!\"\n\n\"Ayy, Mami!\" Veronica squealed as she was held firmly over the smaller woman's lap. But before the spanking started, she felt Jane's soft little hands rubbing her voluptuous ass. It reminded her of all the tushy massages she used to receive from the cute masseuse.\n\nSuddenly, those thoughts were put on hold as Jane gave her plump ass a surprisingly hard smack. \"Ayyyyyy!\" she yelled, kicking her legs like the bad little girl she was.\n\nJane took no mercy on her, giving her the firm spanking the naughty Latina truly desired. \"Now who's the bad girl?\"\n\n\"I am, Mami!\" Veronica let out through her yelps. She squirmed uncontrollably but was turned on by the way the little Asian handled her so easily.\n\nThen, feeling Jane's little hands pulling her soaking wet thong down to her ankles, she frantically looked back and asked, \"What are you going to do to me now?\"\n\n\"Do you remember when I was a masseuse?\" Jane teased, grazing her hands against the desperate woman's most sensitive spots.\n\n\"I remember!\" the Latina said with her quivering voice.\n\n\"Do you remember how you would come to my office and request a butt massage, so I had to start putting you over my lap like this?\"\n\nVeronica let out a deep moan as she wiggled her bottom, hoping Jane would stop teasing her. \"Of course, I remember!\"\n\n\"You were such a naughty girl, weren't you?\"\n\n\"Yes, I was!\" Veronica moaned as she started to rub her own breasts.\n\n\"Do you remember how it felt?\"\n\n\"I think about it all the time!\"\n\nA sly little grin came over the Asian's face as she continued to sexually torment the Latina. \"Did it feel something like this?\" she asked, placing her thumb directly against Veronica's anus, and her index finger against her clit.\n\nVeronica let out an urgent moan as the stimulation took over her body, rendering her defenseless. She was stiff and vulnerable, left at the mercy of the former masseuse.\n\n\"Remember how hard you would cum for me?\" Jane asked in her sexiest voice.\n\n\"Mmmhmmm!!!\" Veronica moaned, unable to talk through such pleasure.\n\n\"I bet you missed being over my lap like this,\" Jane teased, rubbing her hot employee's pleasure spots with even more intensity. \"I know I missed it.\"\n\nSuddenly, Veronica's legs began to tremble. She let out one final cry as she desperately moaned out, \"I'm going to cum, Mami!\"\n\nJane held her firmly, stimulating her until she was sputtering in an orgasmic rage. No matter how hard her body jerked, the little Asian held her still and continued to massage her.\n\n\"That was a big one,\" Jane teased, with a sexy voice. \"You must have been fantasizing about this as much as I have.\"\n\nThose words kept ringing in Veronica's head. Though her hot supervisor never stopped rubbing her down, knowing Jane had been fantasizing about this moment quickly brought her to another climax. She struggled on top of Jane's lap, but the former masseuse showed no remorse, giving her another explosive orgasm.\n\nVeronica wasn't the squirter that Jane was. However, she could feel her pussy throbbing with pleasure, leaving her juices trickling down her smooth legs. When the orgasm was done wearing her sexy body out, Jane finally released her from her firm grasp.\n\nVeronica slowly pulled herself up and straddled her boss's lap. \"Thank you, Mami,\" she whispered before giving Jane a soft kiss. \"I really missed that.\"\n\nJane placed both her smooth hands on her lover's voluptuous cheeks. \"I missed it too.\"\n\nAfter some somber moment of rubbing Veronica's ass, Jane decided she couldn't help herself any longer. She got up to her feet and carried the Latina to the bed.\n\nVeronica gasped. \"Have you gotten stronger, Mami?\"\n\n\"Maybe,\" the smaller woman responded. \"Or maybe you've gotten a little lighter.\"\n\nJane placed Veronica on the bed and laid her on her back. She then rubbed her hands together, preparing for a full-frontal massage.\n\n\"Mmmmm, I remember this,\" Veronica moaned.\n\n\"You didn't think your massage was over, did you?\"\n\n\"I thought it was, but you always leave me wanting more.\"\n\nJane rubbed her soft hands up and down the Latina's beautiful naked body. She massaged every inch of her, starting from her breasts before working her way down to her legs.\n\nJust as Jane was about to touch Veronica's pussy, she gently glided her hands over it before skipping straight to her legs. When the Latina subtly whined, the former masseuse winked and said, \"I'm saving that part for last.\"\n\nThough Veronica had already experienced several orgasms that day, she was already squirming for Jane's touch. After a sensual foot massage, the little Asian worked her way back up the Latina's legs until she finally reached her slit.\n\nImmediately, Veronica let out a deep gasp as Jane's little fingers tantalized her clitoris. She began squirming around, moaning as she stared up into the eyes of the former masseuse.\n\n\"Does that feel good, Baby?\" Jane whispered, wanting to please her former client.\n\n\"Yes, Mami! So fucking good!\"\n\nWith a smirk, the cute Asian asked, \"Are you ready for your happy ending?\"\n\nThe Latina gulped and nodded as a confirmation. Immediately, Jane palmed the back of her head and bent down for a kiss. As Veronica felt her lover's tongue splitting her lips open and penetrating her mouth, she began to crumble from Jane's fingers, stimulating her clit.\n\nShe moaned desperately into Jane's mouth, unable to control her functions. Before she could even warn the cute little Asian, she let out a big gasp as another powerful climax destroyed her body from the inside out.\n\n\"Yes, Baby!\" Jane moaned into her mouth, continuing to please the hot Latina. \"Give me everything you have to offer.\"\n\n\"I'm still cumming!\" Veronica squealed, feeling as if a lifetime of pleasure had passed.\n\nFinally, Jane allowed Veronica to rest once she knew she got every ounce out of her. She then joined her in bed, giggling as they started to cuddle.",
        "\"That was so fucking good!\" Veronica let out, still moaning as her eyes rolled to the back of her head.\n\n\"You did such a good job, Baby.\"\n\nVeronica wrapped her arms around Jane, holding her tightly from behind. \"I'm so glad I finally get to cuddle with you. I've wanted to do it this entire trip.\"\n\nJane backed herself into the taller woman, feeling the warmth and protection from being in her arms. \"You make such great big spoon.\"\n\nThough completely exhausted, Veronica couldn't help but rub her hands up and down Jane's hot little body. She wanted to explore every inch, from her shoulders down to her smooth legs.\n\nEventually, she couldn't resist the temptation to play with Jane's cute and pointy nipples. She gave each of them a little pinch, causing the Asian woman to breathe faster.\n\nHearing her love becoming aroused again on only encouraged her to go further. Her right hand found its way between Jane's legs, and she began rubbing her clit in a circular motion.\n\nJane moaned as her head shot back, leaning against Veronica's shoulder. The Latina began kissing on her neck as she rubbed her wet pussy even faster.\n\n\"Do you like this?\" the sexy employee teased. \"Is this why you wanted me to be the big spoon?\"\n\nThere was a struggle in Jane's face and she could barely talk. With her eyes shut tight, she muttered, \"I wasn't expecting this... but it feels... so fucking good!\"\n\nVeronica continued to pinch Jane's nipples while sliding her fingers up and down her wet little slit. The Asian moaned louder and louder, squirming as the Latina sucked on her neck.\n\n\"I'm going to... I'm going to...\"\n\n\"Cum, Mami!\" Veronica interrupted, rubbing her little Asian as fast as she could.\n\nSuddenly, Jane let out of piercing howl, as her body shook violently. She became so sensitive, she could barely handle being touched any longer. However, the bigger and stronger Latina held her firmly, playing with her until the orgasm finally ran its course.\n\nThe Asian squirted hard, leaving Veronica's fingers nice and wet. When the orgasm was over, the Latina placed her fingers into her own mouth and sucked them clean.\n\nJane turned around and looked at her lover with desperate eyes. They shared one final kiss before reminding each other how they felt.\n\n\"I love you, Baby.\"\n\n\"I love you too, Mami.\"\n\nA new sense of comfort surrounded both women. A comfort in their hearts that no matter what the future had in store for them, they could get through anything as long as they had each other.\n\n****************************\n\n<p align=\"center\">Epilogue</p>\n\n\"Once again, thank you for taking care of everything while I was gone.\"\n\n\"No problem.\"\n\n\"Everyone said you did a great job as the acting Director. Are you still interested in a position like that?\"\n\nCamilla smirked before simply responding, \"No, I'm not.\"\n\n\"Are you sure?\" Jane asked, looking a bit confused. \"You pretty much run everything at this office. I almost think it would be best if I stepped down and you took over, officially.\"\n\nThe blonde chuckled to herself before taking a deep breath. As she started to make her way out, she responded, \"I appreciate the offer, but I've had my fun. I'm no longer interested in the position.\"\n\nShe left her boss confused, sitting in silence behind her desk. But as Camilla was about to close the door, she offered a comforting statement. \"Besides, I still think you're the best fit for the job.\"\n\nAs Camilla made her way back to her desk, she suddenly ran into Veronica. It was their first encounter since the Puerto Rico trip ended. Much to the blonde's surprise, her brunette counterpart immediately ran up and gave her a tight hug.\n\n\"Oof!\" she reacted as Veronica squeezed her. \"Are you okay?\"\n\n\"Thank you...\" Veronica whispered, sounding emotional. She buried her head into Camilla's shoulder and held her coworker in a tight embrace.\n\n\"Thank you for what?\"\n\n\"Jane told me what you did... Thank you for everything...\"\n\nLooking around a bit frantically, Camilla asked, \"What exactly did she tell you...?\"\n\nVeronica quickly grabbed Camilla by the hand and led her into the break room. Once they were alone, she explained, \"She told me about her history with you. You figured out what happened between us and tried to get us back together...\"\n\n\"Oh, yeah...\" Camilla responded, raising her eyebrows. \"It went something like that..\"\n\nVeronica hugged the blonde once again, squeezing her just as tight as she did the first time. Once again, Camilla just left her arms by her side, not engaging in the hug.\n\n\"I know you had feelings for her... but that was really amazing of you to go out of your way and get us back together... I can't thank you enough...\"\n\nFor a split second, Camilla finally let the emotions get to her. She allowed her hands to leave her side and give Veronica a soft touch on the back. It was the first time she reciprocated any affection in months.\n\nAfter a somber moment, they ended the embrace, and Veronica asked, \"Did Jane talk to you about becoming the Branch Director?\"\n\n\"She did, but I'm not interested.\"\n\n\"What? I thought that was the position you wanted for so long.\"\n\nThe blonde brushed it off and shrugged her shoulders. \"I thought it was too.\" As she noticed a look of panic coming over her coworker's face, she asked, \"You guys aren't trying to get me to be the supervisor, so you don't get in trouble, are you?\"\n\nVeronica became visibly nervous, fidgeting around as she stumbled over her words. \"Oh, umm... Well, it's just...\"\n\n\"Superior and subordinate relationships are allowed here,\" Camilla interrupted, solving Veronica's problem before even being able to ask.\n\n\"They are?!\"\n\nThe blonde walked off before quickly returning with a paper in her hand. Handing it over, she explained, \"You just have to sign one of these non-disclosure agreements. It basically promises the company you won't sue them if you guys separate.\"\n\n\"Oh...\" Veronica reacted, surprised her coworker was able to figure that out so quickly. \"I'll... uhh... I'll show this to Jane.\"\n\nCamilla could see the sudden excitement in the brunette's face. Her coworker was eager to show the document to Jane, so the blonde politely excused her. \"I'll see you later. I have some work I need to do.\"\n\n\"Okay, thanks! I'll talk to you later!\" Veronica quickly gave her coworker another hug before rushing out of the break room.\n\nAs Camilla made her way back to her desk, she slowly walked past Jane's office. Pausing for a moment, she looked through the glass and saw the two women smiling at each other as they looked over the document. In that moment, she saw more than the expressions on their faces. She saw two people who were truly happy, and back together for good.\n\nCamilla stared on, not showing any emotion in her appearance. But before moving forward, she took one final glance at Jane to appreciate the special bond they once had.\n\nShe replayed the moments they had together: The time she met Jane during the conference interview, and she gave that silly answer that her special talent was giving massages. The time she picked the nervous woman up from the airport and assured her everything would be okay. The time she helped Jane move into her apartment and became her roommate, the best roommate she ever had. The time she opened up to Jane about her ex, and even had an emotional breakdown. The time she discovered Jane's birthday and got her a strawberry shortcake.\n\nShe remembered it all: The trips, the conversations, the late nights. She was even able to fondly remember Jane getting the Director position over her, because of the way the young woman always supported her and made sure she was okay.\n\nCamilla took one final look at the amazing woman and with a deep breath, she walked away.\n\nJane... I'm glad you're happy now. But this wasn't the selfless act both of you think it is. Secretly, I wished you would have realized you didn't love her... and that you would come running back to me. But I knew that wouldn't happen. And unfortunately, I'm almost never wrong...\n\nThank you for the role you played in my life. Thank you for restoring my faith in humanity. Thank you for caring about me... and making me feel valuable again. Being wanted by someone as amazing as you made me realize how special I am... even if it was temporary. So, thank you...\n\nAnd Veronica... I know you never wanted to like me, and I never wanted to like you either... but I can see why Jane loves you.\n\nThe painful truth is... You were never going to be out of the picture. She was always going to leave me for you. I wasn't doing you a big favor. I was just protecting myself by pushing the timeline forward.\n\nYou two enjoy your new life together. I'll be leaving here pretty soon. I don't think my heart can handle seeing you two so happy together, at least not yet.\n\nI think it's time for a change of scenery. I've been at Sunshine since I was twenty, but it's time to go in a different direction.\n\nShe pulled her phone out and place the call. \"Hey, this is Camilla. If your offer is still on the table... I'm ready to accept it.\"\n\n************************************\n\nWhen the workday was over, and Jane offered to give Veronica a ride. However, when the Latina got in her car, she went straight back to her own apartment.\n\nAs they got inside, the supervisor noticed a big smile on her beautiful employee's face. \"Why are you so smiley?\"\n\n\"I thought you were going to take me to my apartment,\" Veronica answered, giggling.\n\n\"I am, eventually,\" Jane said with a wink. \"Is there any reason you can't spend time with me here?\"\n\n\"I guess not,\" Veronica whispered as she began straddling Jane on the couch.\n\nThe two lovers shared that soft kiss while groping each other's bodies. Jane pulled the Latina's dress above her hips so she could rub her nice ass.\n\n\"I have news,\" Jane said with a big smile.\n\n\"What is it, Mami?\"\n\n\"I already heard back from HR. They said there shouldn't be any issues with our non-disclosure agreement. It'll be approved as soon as they receive it.\"\n\nVeronica gasped and wrapped her arms around Jane. \"That's great news, Mami! I guess we are officially together now!\"\n\n\"I guess we are,\" Jane said, squeezing her ass and giving her another soft kiss.\n\nVeronica moaned from the touch of Jane's lips. \"Mmmmm... I could kiss you all day.\"\n\n\"Maybe you should,\" the cute Asian said with a wink.\n\n\"I wish!\" the Latina responded, giggling. \"But eventually, I'll have to go back to my apartment. I haven't even unpacked yet.\"\n\nAn even bigger smile grew on the cute Asian's face. \"Maybe I don't want you to unpack.\"\n\n\"What do you mean, Mami?\"\n\n\"Maybe you should just bring your bags and unpack over here,\" the supervisor suggested. \"We can move all your other stuff here, too. That way, we would never have to be apart.\"\n\n\"Mami!\" the hot Latina said with a gasp. \"Are you saying what I think you're saying?\"\n\n\"Yes, Baby. I don't want to spend another night without you. If you're willing to, I want you to live with me.\"\n\nVeronica's eyes got watery as she stared into the eyes of the woman she loved. \"I would love that!\"\n\nWith a confident smile, Jane continued to push forward. \"I think tomorrow, we should go to your apartment's office and break your lease. I'll even pay for it. That's how bad I want you to live with me.\"\n\nVeronica chuckled to herself, fighting tears of joy. \"I want to live with you too but... but are you sure we're ready for this?\"\n\nJane continued to look on, confidently. Seeing the beautiful Latina gave her the sense of calmness she needed to answer the question without hesitation. \"I've been ready for a long time. I just didn't know it yet. This is the life I want. This is the life I've grown accustomed to. Everything is always at a hundred miles an hour. And that's the way I want to run towards our future.\"\n\nNow completely balling, Veronica planted a kiss on Jane's lips, showing how grateful she was for the journey they were about to begin. After the passionate kiss, she looked at her lover and said, \"I can't believe this is real. It feels like a fairy tale.\"\n\nJane looked at her girlfriend and smiled from cheek to cheek. \"This is a fairy tale... and you are my happy ending.\"\n\n********************\n\nAuthor's Note\n\nThank you all so much for reading my series! The story meant a lot to me and I think you all so much for taking the time to read it.\n\nAfter a year and a half, I'm glad to finally close out the story. Though I hope to write some smaller stories in the future, updating the lives of some of these characters, the series has come to an end.\n\nIn the future, I may write a short series about Camilla. She has a new adventure ahead of herself, hoping to find her own happiness.\n\nI may take a little break, or at least slow down for a little while. I've been on overdrive these past few months. This last chapter was especially time-consuming and stressful. However, it was a great joy to write!\n\nWhew! I need some rest now. But I have so many projects coming up, I may not be able to stay away for too long.\n\nPlease comment or message me if you have any questions or want to share any opinions about the series. Messages and comments are the biggest thanks you can give me!\n\nOnce again, thank you so much for reading my stories. I will update you all with smaller stories of their lives in the future. Until then, hopefully I'll see you in my other stories.\n\nGoodbye and I love you all!"
    ],
    "authorname": "AimEnigmaClick",
    "tags": [
        "latina",
        "asian",
        "love",
        "romance",
        "anal",
        "massage",
        "squirting",
        "cum",
        "orgasm",
        "spanking"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/jane-in-new-york-pt-14"
}