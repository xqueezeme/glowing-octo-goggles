{
    "title": "There and Back Again Ch. 149",
    "pages": [
        "Chapter One Hundred Forty-Nine: Unrealised Potential \n\n****Trigger Warning: Miscarriage**** \n\nI sat curled up in a ball, forehead resting on my knees, arms wrapped around my legs, trying not to think or feel -- or listen. \n\nI could hear my husband just outside the open door, whispering frantically to Alim and Jowan. They were acting like I couldn't hear them -- like I was asleep, or something. Which, if they thought about it, they knew I wasn't, given I still held the Architect's mana. I could hear them clearly without trying. Honestly, the door's even open, for heaven's sake. \n\nI don't think they were thinking much at all -- just reacting. \n\nTo be fair, they'd all tried to help. Alistair, horrified by the full weight of what was happening -- an unexpected, unplanned pregnancy, and now likely a miscarriage -- had immediately gone for help. With Anders away, and no one else to turn to for help, he had brought both mages up to the small room where I waited. And to their credit, the two men had put aside their differences and both come, even though neither was a healer or had any experience with pregnancy or miscarriage -- and even though they hated each other's guts. \n\nI had cleaned myself up to the best of my ability, stuffing several towels into a loose pair of trousers to prevent soiling my clothes -- and whatever I was sitting on -- yet again. And then I had laid there on the little couch while the two mages did their best to analyze what was happening to me. Both had tried to do something like the diagnostic scan I was familiar with from Wynne and Anders, and had agreed, with some discussion and a lot of uncertainty, that yes indeed, I had been pregnant, and that I was having a miscarriage. But with limited skills and experience, neither had been able to offer anything resembling reassurance as to whether it was progressing normally, whether the miscarriage was inevitable, and whether my bleeding was excessive. \n\n\"Save my baby?\" I had begged, and both mages, so different in appearance, had developed the same, panicked expression and embarrassed flush. \n\n\"I'm not sure even Anders could do that, Sierra,\" Jowan had sadly explained, holding my hand tightly. \n\n\"But even if he could -- and I'm not saying it's possible, but even if it was -- we don't have the knowledge,\" Alim had continued. \n\n\"I'm going to ask Avernus,\" Jowan announced, and had rushed off -- only to return a few minutes later shaking his head sadly. \n\n\"Velanna?\" I asked. \n\n\"Knows even less than us, according to her.\" \n\nAnd the entire time, Alistair had just stood there, looking helpless and horrified, taking deep gulps of air and refusing to meet my gaze. \n\nI just curled myself into the smallest ball I could, put my head down, and concentrated on my breathing. \n\nAnd now I could hear the three of them talking in the hall, and it wasn't helping. \n\n\"What the void happened?\" Alim demanded. \"Getting pregnant in the middle of a darkspawn war? And letting her stay awake for days? What did you expect would happen?\" \n\n\"It wasn't on purpose,\" Alistair almost sobbed, and I had to suppress the urge to go to him, to try to soothe the pain I could hear in his voice. \"We didn't know. It's all my fault. When she was captured...I forgot. I was so distracted trying to save her that I think I forgot to take the powder. This is all my fault.\" \n\nThe regret in his tone lanced through me like a spear, and I squeezed my legs harder to suppress the moan of pain that threatened. All I want is to save this baby I'm losing -- and he just regrets that it happened. I felt tears finally begin to fall, and soak through the knees of my pants. And then I felt another wave of cramps hit me, and I wasn't able to suppress the moan of pain. \n\nAll three men rushed into the little room, but with nothing they could do to help, the two mages just offered their condolences and reluctantly left, encouraging Alistair to come get them if the bleeding got any worse. Alistair went to scoop me up and pull me into his lap, but I objected, scrambling out of his arms. He tried to hold me anyway, and I struggled briefly before giving up and collapsing against his firm chest with a stifled sob. \n\n\"What if I bleed more? I don't want to get it all over you,\" I complained, pushing ineffectually against him. \n\n\"I couldn't care less,\" he insisted, pressing a kiss to my forehead. \"Just relax. I've got you.\" And I couldn't bring myself to refuse the comfort he offered, even knowing we felt so differently about what was happening. I leaned back against his chest, throwing one arm up to cover my eyes with my elbow, and went back to trying my best to meditate, clear my mind and think about nothing -- without falling asleep. \n\nOver the next while, I drank water at Alistair's insistence, but refused anything else, still feeling nauseated and too upset to even care about food. Alistair kept me in his lap except for when I was dealing with the flood of blood that happened periodically, refusing to leave me even to sleep, and I didn't have the heart to argue with him. But I wasn't ready to talk, either, and he was clever enough to know that and choose not to push me. I was too exhausted and sad to cry, needing all of my energy to fight to stay awake, not to let go of the Architect's mana. \n\nEvery now and then I thought I felt silent sobs wrack Alistair's body. Maybe he doesn't want to talk yet either. \n\nI lapsed again into hallucinations, sometimes reliving horrible memories -- the feel of Utha's too-warm, black blood running down my wrist as I stabbed her, or the horror of watching Faren succumb to the poison I'd added to his water -- but sometimes it was something more akin to daydreaming. I was having a particularly insidious vision of the future where the baby I carried lived, and Alistair and I welcomed it into the world and became a family -- and couldn't help the dismayed groan that left me when I woke to discover none of it had been real. Alistair rocked me, stroking my hair and trying to comfort me as I fought down the urge to scream. \n\nAnders and Aedan found us there a while later, having finally arrived from the Circle. They had apparently been warned what was happening when they arrived. Both men came racing into the room, Aedan to wrap his arm around my shoulders, press a kiss to the side of my head, and beg forgiveness for not being there for me when I needed it, and Anders to stand sheepishly in the doorway waiting for everyone to get out of the way so he could offer help. Zev slipped in past Anders, expression sympathetic. I saw Jowan and Alim lingering behind Anders, and heard more talking from the hall; clearly everyone had now heard what had happened and had come to gawk. \n\nEven I knew the thought was uncharitable; my friends were just trying to be supportive, but in that moment I wanted nothing more than to be alone, and allowed to go to sleep. I nodded at Aedan wordlessly, and then curled up tighter, still held securely in Alistair's lap, covering my head with my arms and wishing for everyone to disappear. \n\nFinally after a few minutes like that, where it became awkwardly evident that I was not planning to engage in any conversation with my visitors about what was happening, Anders cleared his throat. \"Perhaps we could have some...privacy?\" \n\nStartled and embarrassed, everyone began clearing out. Aedan, clearly upset with my lack of communication, seemed to think he should stay; he exchanged some kind of wordless conversation with Alistair, and finally slunk out sulkily. \n\n\"Love? Do you want me to go, or...\" \n\nI could see the concern on my husband's face, but also the understanding. He was frightened, and he wanted to help, but if I'd wanted him to leave he would have. \n\nI couldn't do it, couldn't say the words that would have made him walk out the door, knowing the pain they'd cause and the stricken look he'd get even while complying. Instead I closed my eyes and nuzzled into his shoulder without a word. \n\n\"Right,\" Anders muttered anxiously. \"You're fine just where you are, just...\" \n\nThe mage stopped, and I could hear him shifting his weight awkwardly for a moment, and then he sighed. I felt his aura flare, and greenish light emanated from my abdomen, almost blinding me even with my eyes closed. It lasted forever, or so it seemed, while I ruthlessly tried to suppress the horrible scenarios that tried to intrude on my consciousness -- visions of me surrounded by a small lake of my own blood, eyes staring sightlessly at the sky plagued my imagination. I shuddered, and Alistair's arms closed around me tighter. \n\n\"Anders?\" My husband's voice was steady, but barely hidden panic and impotent rage were obvious. \n\nFinally it was over, a minute or a lifetime later, and Anders flopped into a chair facing us with a whoosh of breath. I opened my eyes and risked a peek at the mage's angular face. He had scruffy stubble, long enough that he obviously hadn't shaved in a couple of days; there were deep, dark circles under his eyes and his complexion looked almost bruised somehow. But it was his expression that made me regret looking the most: sadness, empathy, pity. \n\nI almost screamed. The sound that emerged from me -- almost the only sound I'd made since saying the word 'pregnant' to Alistair other than a moan of pain -- was a shrill whine. \n\nAnders winced. \"I'm sorry. Sierra, I'm so sorry. If I hadn't been so distracted by Solona and Faren and darkspawn, maybe I'd have realised...\" I grunted impatiently, and he took a deep breath to steel himself before going on. \"You were pregnant. Two months or so, I'd guess. You've had a miscarriage. There's nothing anyone could have done.\" \n\nI nodded, having guessed what he'd say before he'd said it. \n\n\"You're bleeding rather more than I'm comfortable with, and we need to talk about that. I can help. But you need to know that this isn't unusual, it happens to a lot of women, and it doesn't mean...well, there's no reason to think you couldn't have a normal pregnancy in the future. Everything's going to be fine.\" \n\nMy temper flared in a small portion of a second, and almost before I knew how I'd done it, I leaped out of Alistair's lap and towered over the seated mage, blazing with anger. \"Fine? Everything's fine? If you ignore that my god-damned body killed my own baby, that is.\" The wind was taken out of my sails when I staggered, suddenly light-headed, and almost face-planted into the lap of the current object of my rage. Alistair reached out and caught me, holding me up so I didn't crumple to the floor. \n\nAnders' expression didn't shift from the understanding, empathetic one he'd started with -- like he'd expected my reaction and it didn't bother him. \"I'm sorry,\" he repeated, and then reached out for my hand. \"Lay down, Sierra. Let me help you.\" \n\nMy anger spent, I nodded, and he gestured toward the small couch Alistair and I had been sitting on. I was lifted and placed down on my side, and I curled up, fetal style, around the cramping, uncomfortable seat of my misery, and closed my eyes again. \n\nI heard Anders murmur something to Alistair, ignoring the words and just trying to be comforted by the calm tone of his voice. After a brief exchange, Alistair knelt beside me and stroked the sweaty hair out of my face. \n\n\"Anders says it's better if I go, and that I'm needed downstairs. I won't be far, and I'll be right back, okay?\" \n\nI nodded. \n\n\"I love you, Sierra.\" He kissed my temple, and then he was gone. \n\nAnders pulled his chair closer to the couch, and waited a moment, then finally spoke. \"It's not your fault.\" \n\nI snarled, but half-heartedly -- I'd used too much energy, and I didn't have anything left to fight with. \n\n\"No, really. Sometimes...usually, in cases like these, something went wrong, right from the get-go. It wasn't anything you did. I imagine you're blaming the fighting, the stress, maybe the staying awake...but that's probably not why. It was just bad luck, and nothing you could have done would have changed it.\" \n\nI opened one eye and stared his face, skeptical; he sat calmly through my examination, nodding when he could see that I accepted it as truth. I felt his mana flare, and a soothing wave of restored energy and vitality flowed into me. I finally uncurled and sat up, ignoring my spinning head to slump back and sigh. \n\n\"Thanks.\" I nodded gratefully, and he smiled softly. I looked down, playing with the hem of my tunic absently. \"This sucks.\" \n\nHe nodded. \n\n\"It was an accident. It's too soon; we weren't ready. I should be...\" \n\nHe raised one eyebrow and waited. \n\n\"...relieved. Right?\" \n\nAnders rubbed his tired-looking face with one hand. \"Tell me something. Do you want children with him? Eventually, I mean. A family, a little curly-haired girl or a cute blond boy -- or both -- following you around, blanket in hand, calling you mama and keeping you from sleeping?\" \n\nI nodded, the tears threatening for the first time since this nightmare had begun. \"More than anything. Eventually,\" I whispered. \n\n\"Then tell me, how exactly are you supposed to have felt relieved at this? Early and unwanted aren't the same thing, and you know that.\" \n\nI nodded again, tears finally overflowing. He was right. It would have been a little dicey -- dealing with the Architect, getting to know each other and how to coexist in times of peace, and trying to run the Peak while enormously pregnant wouldn't have been perfect, but we'd have managed. And thinking about a little tow-headed child on my hip while we sorted it all out wasn't an unappealing concept in the least. It's too soon, but we'd have been fine -- more than fine -- despite that. \n\n\"Damn it.\" I gripped his offered hand with one of my own, and scrubbed at my moist eyes with the other. \n\n\"The good news is that this doesn't mean that can't happen. One miscarriage, even a few...it doesn't make that less likely. This is just a little complication, a little delay. But you're going to be fine, and you'll get there eventually.\" \n\nI released his hand and nodded again, my head still spinning. I put one hand hazily to my forehead, trying to hold everything still. \n\n\"You are bleeding too much, though, which might be due to the stress. You have a choice.\" He stood up, encouraging me to lay down again, tucking a pillow under my feet to elevate them. \n\n\"A choice?\" \n\n\"I can make it like a normal miscarriage. You'll bleed for a few days, like a heavier than normal monthly, and heal on your own. A lot of people find that easier, emotionally -- like they have, I don't know, some sort of closure.\" \n\n\"Or?\" \n\n\"Or I can make it like this never happened. Help you expel everything that needs to come out and then stop the bleeding. It's easier on your body, maybe, but harder on your soul. Your emotions might still be a mess, and it might be harder on you later, when you grieve.\" \n\nI thought about it -- thought about trying to stay awake, to do whatever we needed to do with the Architect, to deal with settling in and getting caught up with Levi and trying to manage staff and feed a pack of hungry Wardens and figure out a budget...all while bleeding, having to run to the bathroom and deal with stupid girl problems constantly. \n\nThe answer was obvious. \n\n\"Just get it done.\" \n\nHe nodded, clearly expecting that. \"Look, this is going to be uncomfortable for a minute...\" \n\n******** \n\nAnders and I wandered slowly down the stairs and into the main dining hall a few minutes later, to the shock of everyone standing there and arguing amongst themselves. I felt a lot better -- between the healing and Anders' rejuvenation spell -- but was still a bit woozy. I moved carefully so as not to fall -- and also to test myself with each step and ensure I wasn't too far to hold the Architect's mana. Apparently, I don't have much of a range limit... \n\nI took a moment to look around while everyone goggled at me, and if I hadn't been feeling so...so...whatever, I might have giggled at the looks on everyone's faces. \n\nThere were a dozen templars, a couple of the Tranquil, and a few unfamiliar mages standing there, led by Greagoir himself, to my surprise. The grizzled old Knight Commander nodded at me -- an expression something like grudging respect on his face, and he saluted smartly. The templars weren't staring at me until he did so, so at least I hoped my personal business had not been broadcast that far, anyway. \n\nThe people staring at me included my husband, my brother, the rest of the Wardens -- with the noticeable exceptions of Solona, Faren, and Sigrun -- Levi, and a handful of servants. There was almost complete silence now, but I'd been able to hear the arguing voices, if not the specific words, from two floors up. \n\n\"Welcome to my Keep, folks,\" I finally said, walking over to join the group. I squeezed Aedan's hand surreptitiously as I passed, and then fed my arm through Alistair's once I reached him. \"I'm quite certain no one meant to be so rude as to leave everyone standing here in the hallway shouting, but I'm also certain it's not something we need to have continue. Seneschal Dryden, could you please find these people,\" I gestured to the templars, Tranquil, and mages, \"somewhere to rest and some refreshments?\" \n\nLevi nodded. \n\n\"Commanders, Knight-Commander, Wardens Anders, Jowan, Alim, Rolan, and Conrad, please follow me; I'll find us somewhere private and comfortable to talk. The rest of you, please settle in. If you don't know where your rooms are, these folks can help. Everyone stay close, and we will let you know what's happening when we figure it out.\" \n\nWith that, the servants started leading tired Wardens to their rooms, Levi led road-stained, weary mages and templars away -- presumably to the large dining room -- and those I'd called out followed me. I had one good-sized sitting room near my office, and thought it would have enough room for the nine of us to talk. I settled onto a small couch with Alistair at my side, and the others found seating where they could. An elven servant I vaguely recognised from my previous visit bustled in behind us, carrying a tray with cups of hot tea and a platter of cheeses and bread. I nodded to her thankfully, and Aedan closed the door behind her when she left. \n\n\"So, would someone care to fill me in?\" \n\nBetween Aedan and Anders, I was brought up to speed. Anders had some things to work on with Faren, but they'd wait until we had the Architect secured. Solona was awake and apparently 'fine', but in her room recovering. Whatever that means -- I'll corner Anders once this meeting is done. \n\nGreagoir had taken the death of many rogue templars better than expected, and had sent letters to the Grand Cleric and the Divine; presumably the Wardens would hear from them eventually, but there was nothing further for us to do for the moment. I wonder if they'll apologise, thank us, or condemn us? Never can tell with the Chantry. Greagoir was clearly pissed off that so many templars had gone behind his back, if the ticking muscle in his jaw while we talked about it was any indication. He voiced his apologies several times -- to us, but also to Anders directly, which both surprised and impressed me. And he vowed to try to find out if there were more templars out there gunning for our mages -- and find out who sent them, as well. \n\nAnd then he offered to allow us to recruit a number of templars from his ranks to become Wardens, and function essentially as bodyguards for the mages -- to guard them against future similar attacks as well as from darkspawn. He guaranteed that he would only recommend those he knew were 'of the right mindset', by which he meant they didn't believe all mages were abominations to be watched -- and they also respected the Wardens and their role in Thedas. It was clear to me it was meant as some sort of political move to offset any backlash the Chantry would face, but it was equally clear he meant it as a personal sort of apology as well. He suggested that the mages be allowed to help choose which templars would join, saying they could choose up to four of the templars who had accompanied him -- one for each mage currently in the Wardens. He doesn't know about Velanna, clearly. ",
        "He'd apparently made the offer to Aedan before, and was just restating it, whether for my benefit or to push Aedan to make a decision, I wasn't sure. Aedan told him he'd think about it -- and that he needed to discuss it with Alistair. Personally, I had no objection -- but I'd want to grill any potential recruits very thoroughly before we took them. No one needed a repeat of the Rolan problem. \n\nFinally we moved on to the discussion of the Architect and what could be done about him. \n\n\"I really must insist on knowing all of the details of who you are detaining, and why,\" Greagoir stated darkly. \n\nAhh, now we get to what they were arguing about. \n\n\"Warden secret, Knight-Commander. I've already told you that. All you need to know is that we need a room warded against magic, so that the occupant cannot cast spells at all.\" Aedan was visibly frustrated, and it was clear they'd had this conversation more than once already. \n\n\"This knowledge is specific to the Chantry, Warden-Commander. The Chantry may owe you recompense for what was done to your Wardens by templars not under my command, but I will not give out this information without adequate reason, nor will I risk unknowingly contributing to something immoral-\" \n\nI cleared my throat, interrupting the templar mid-rant. Aedan looked away, embarrassed but still aggravated. \"How much have you been told, Knight-Commander?\" \n\n\"Nothing, and that's exactly my point. Calling in a favour is one thing, but-\" \n\nI sighed. \"Aedan?\" \n\n\"He doesn't need to know.\" I glared at him, and he scowled right back. \"He doesn't!\" \n\n\"What happened to my diplomatic brother? The one who could talk a Chantry sister into committing murder with a smile on her face?\" \n\nHe stood, suddenly, face red. Visibly shaking with anger, he opened his mouth to respond, and I braced myself for a torrent of vitriol. I was shocked and frightened by the look on his face; my brother hadn't been that angry in my presence ever, never mind aimed at me. My reaction must have penetrated his anger, because he closed his mouth, took a deep, calming breath, rubbed his forehead irritably with the heel of his hand, and then leaned over to kiss my forehead softly. \"Sorry sis,\" he mumbled. \n\nI reached for his hand, but he shook his head slightly and pulled away. \"I will defer to my co-Commander in this.\" He gestured to Alistair, and then turned towards the door. \"I find myself needing some air.\" He walked out swiftly, closing the door behind himself with a definite thump. \n\nThe room was deadly silent in the aftermath of Aedan's outburst. What in the hell was that all about? I looked from the door, to Alistair's face -- which echoed my confusion, his brow wrinkled and lips pursed -- to Greagoir and the others. The Knight Commander looked thoughtful, stroking his chin like some movie clich\u00e9. The others winced, clearly having a better idea than I what was going on, but Anders caught my eye and purposefully glanced toward the Knight-Commander, and I got the point: it would have to wait until we had some privacy to discuss whatever was wrong with my brother. And I hope Zevran is out there to calm him down until we can figure it out. \n\nAlistair and I shared an uneasy glance, and then he shrugged slightly and gestured at me with his chin. I sighed, and turned back to Greagoir, shaking my head to clear the fog that was creeping back in after Anders' rejuvenation spell. \n\n\"Knight-Commander, do you remember the darkspawn that killed Duncan during the battle with the Archdemon?\" He nodded. \"It was a mage -- one of the most powerful mages I've ever come across.\" \n\n\"I recall. King Cailan killed it while you disabled its magic, as I remember,\" he replied. \n\n\"Right. Well, we've found another darkspawn like it -- one even more dangerous and intelligent. We captured it. You can probably feel the mana I'm holding right now, if you concentrate. And for reasons we cannot explain, we can't simply kill it. We need to contain it, possibly forever. If it escaped or was rescued, a lot of people could die. It is all but immune to magebane, and we don't have any other reliable method of subduing it. We need your help to create a way to keep it locked away from its magic forever. \n\n\"Will you help us?\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance",
        "modern girl in thedas",
        "celebrities"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-149"
}