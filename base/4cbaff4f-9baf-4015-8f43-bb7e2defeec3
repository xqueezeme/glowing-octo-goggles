{
    "title": "The Three Traditions of Pink",
    "pages": [
        "This is the longest story I've ever written yet and it's dedicated to my fans. In particular, I would like to thank all those who took the time to write either private or public comments for my previous stories and send me emails. I would also like thank all of you who voted for my stories. I still can't believe it that my previous one - \"Love me, Please\" - did so well. You have all made the creative juices flow once more and for that I thank you. \n\nThis is a romantic story about two females. It is a very long text and the sexy parts are there but they are not the main focal point of my story. If you are looking for a quick fix, please exit now, you have been warned. Also, another fair piece of warning: although all of this story is about a female on female relationship, there are two heterosexual scenes being described. If that is not your cup of tea, you can also exit now. \n\nYou will notice that at the start of each chapter I mention the name of a key character. Throughout that chapter this character will share his unspoken thoughts with us. This is accomplished via texts in italics. \n\nI would like once more to express my gratitude and admiration for Literotica writer \"SweetestThing\" for taking the time to highlight erroneous approaches in my writing and to offer invaluable advice. Some of that advice actually managed to penetrate my thick skull and, I should only hope, helped create a better story this time. Harsh teachers offer the best lessons in life and that really shows that they care. \n\nFinally, as always, this story is dedicated to my wife who never ceases to inspire deep feelings within my heart. Without her constant encouragement I would never have finished this. \n\nChapter 1 (Abigail) \n\n\"Can anyone tell me what our field of study is? What is it that we do within the realm of international relations?\" \n\nIt was the start of yet another academic year. Abigail stood with her back to the wall, laser pointer in one hand, power point remote in the other. This was her second year as a lecturer and this was the first time that she would teach the introductory course in international relations theory. She wasn't really nervous; Abigail had that rare gift in public speaking where her speech would naturally flow from her mouth. It's just that a first time is always just that; a first time full of unknowns. And thus with the amphitheater filled with young students, Abi decided to turn the tables and ask the questions instead. \n\nSilence filled the room. \"Anyone? I mean, consider. A doctor studies medicine? We study international relations, what are we?\" \n\n\"Masochists\" came a voice from the upper benches and the class broke down in raucous laughter. \n\n\"I should hope not. We are the doctors of the world, people. We diagnose problems between the key actors of the global system and we try to interpret and solve them. Now, what is the token with which the actors barter in this system? Anyone? What is the currency being used?\" \n\nA ginger haired girl from the middle rows shyly raised her hand. \"Yes miss...would you be so kind and give us your full name as well please?\" \n\n\"Emma Sorensen. It is power.\" \n\n\"Very good Miss Sorensen! And could you give us a notion of what power means to you? What do you perceive as power?\" \n\n\"I would say that power is what enables an entity to force or cajole another into actions that it finds desirable.\" \n\n\"Excellent! Full marks Miss Sorensen! People write this down, I couldn't have said it better myself.\" \n\nAs Abigail looked towards her once more, Emma blushed and lowered her head. Then, as Emma raised her eyes Abigail felt a jolt of electricity coursing through her spine. Inexplicably she was lost in those gray-green misty pools of beauty just like a deer gets caught in a car's headlight. \n\nUmmm...Abigail...ABIGAIL!! You're staring at her! In front of a whole classroom! Oh but...she's...she's just so...so painfully beautiful! And why is my heart beating so fast? Why has my stomach twisted in knots? And um...hmmm...skin is starting to feel all hot! \n\nIn the end, the low-key rumble of whispering going on awoke her from her trance. Regaining her composure she pushed on with her presentation. Now however, her lecture felt like breaking trail in deep snow. For some reason she had to mentally push herself not to stare towards the gray-green eyed distraction that had completely caught her off-guard. \n\nThankfully, the bell came to everyone's relief and rescue. \"Now remember people: we shall be examining excerpts from Thucydides' Peloponnesian War. I fully expect you to familiarize yourselves with his work. I am particularly interested in the Melian dialogues and I shall be asking you all at random next time. Your answers will be noted and may or may not count towards your final grade.\" The last sentence was greeted with audible groans and grumbles from her audience which made her inwardly smile; students were always going to be students no matter what. It hadn't been that long ago since she would have expressed exactly the same sentiments as this new crop. \n\nThen her eye caught the redhead from the middle row as she was making her way towards the exit and without really thinking... \n\n\"Miss Sorensen...Could you please stay for a minute?\" \n\nThe green-eyed beauty turned and looked questioningly towards her as if asking a silent \"me?\" \n\nNo,no,no,NO! This is a mistake Abigail! Why are you doing this? Why did you ask her to stay? You're just asking for trouble missy, that's what you're doing here. Well, now that she's coming towards you, I'd very much like to see how you're going to extricate yourself out of this mess. \n\n\"Yes you...may I have a word please?\" \n\nEmma exchanged a few quick words with her friend before making her way towards the center stage. As Abigail lifted her gaze from the lectern their eyes once more met, only this time the distance was much too close. Dangerously close, was the last conscious thought Abigail made before she lost herself once more. \n\nEmma blushed but didn't avert her gaze. Abigail stared into those eyes unable to move a limb. \n\nFor Christ's sake Abigail! Get a friggin' grip...get a hold of yourself! \n\nBut when those green eyes gazed at her, Abigail was at a complete loss for words. She was strikingly beautiful this girl. Ginger colored wavy hair framed her alabaster face; a cute dusting of freckles served to heighten her cheekbones and nose. A healthy set of pink-red lips completed the dazzling ensemble. \n\nA soft cough brought her back to reality. \"You asked to see me ma'am.\" \n\n\"Oh...errr...yes...yes indeed...and please do leave that ma'am stuff aside...it makes me feel so old.\" \n\nEmma flashed her a warm smile. \n\nJust great! A fantastic smile on top of everything else. Oh and genius level intellect apparently. What is it that they say? The brain is the biggest sex organ of them all? Abigaaaaaaaail...get a griiiiippp...this is SO wrong! She's your student! This can't be happening! And YOU missy are in a committed relationship! Well...one that may be going down the toilet but still... \n\nAbigail once again seemed lost in her thoughts. Emma's smile reappeared as she slightly coughed once more. \"Are you alright Miss O'Donnell?\" \n\nThe dreaded and notorious blush that Abigail was capable of made its appearance on her face. Just perfect! She was going to turn into a beetroot in front of a student. Well, a very attractive student, but that was beside the point. \n\n\"Oh...sorry...got carried away there. Yes, well...I'd like to say once more that your definition on power was stellar. Did you read that somewhere or did you just come up with it?\" \n\nBetter stay on safer ground Abigail, nice recovery by the way... \n\n\"I ummmm...well...I sort of heard it from someone to be honest.\" \n\n\"Someone meaning?\" \n\n\"I...uhhh...\" \n\n\"It's okay. You don't have to say it if you're not comfortable about it. In fact I must apologize: it was rude of me to inquire further.\" \n\n\"No...it's fine. I guess I can tell you. My late grandfather was Ted Sorensen, I heard him quote this often.\" \n\nThe cogs and wheels started turning inside Abigail's brain. \"Wait a minute! You're the granddaughter of the THE Ted Sorensen? Special Advisor to JFK?\" \n\n\"Yeah...but I prefer to keep that information as low-key as possible...so...\" \n\n\"I understand...I totally do...but, just wow! Ted Sorensen! Just imagine the stories he could have shared with you\" said Abigail, her eyes glazing. \"Bay of Pigs, the Cuban Missile Crisis, he was in the midst of it all.\" \n\n\"My grandpa had quite a few stories to tell...as a matter of fact he's the main reason I'm majoring in International Relations Theory...he offered me a view about the world which I didn't knew existed. So, I guess you'll have to thank him for that little snippet on power. It was more his wisdom than mine.\" \n\n\"Well true, but still...it takes a certain amount of courage to stand out like that, not to mention a certain intellect in order to make use of information and place it where it's relevant.\" \n\nEmma bashfully lowered her head. \"It's no big deal...really...\" \n\nAbigail paused and an awkward silence fell between them. \"I'd better be going\" murmured Emma, starting to turn her back. \n\n\"No wait...\" \n\nEmma hesitated, apprehension showing on her facial features. Abigail gulped and a torrent of words gushed out of her mouth. \"...the reason I stopped you...I mean...I'd like to extend an invitation. Since you appear to be such a bright student and...and you're majoring in International Relations, I'd like to offer my personal library at your disposal. Feel free to skip by my office anytime you want to check out a book. I may have a small collection but I do have quite a few seminal texts plus a decent collection of papers. I...I hope you can pass by sometime and have a look.\" \n\n...and the Oscar for best actress goes to...ABIGAIL O'DONNELL...ladies and gentlemen, a warm round of applause! \n\nEmma flashed her a warm smile and Abigail could feel her stomach doing triple Axels and toe loops. The signs were on the wall; she was starting to crush on a student! This was so wrong for a myriad of reasons. \n\nBefore her mind could analyze things any further, Emma did something which caught her completely off-guard. Clasping her hand in both of hers she looked her in the eyes. Abigail started feeling that certain buzz one gets when happiness and excitement start to mix. She felt her heart beating faster and faster. There was a very strong pull between them, that much was evident to her paralyzed brain. \n\nThen, the door to the amphitheater burst open making both of them leap off their feet. Abigail audibly gasped as she tried to regain her composure. At the door was ancient looking professor Williams, the dean of Abigail's department. \n\n\"Oh...I'm sorry. I hope I didn't interrupt anything.\" \n\n\"No...we...I mean I was just discussing something with Miss Sorensen here...a...about class that is.\" \n\n\"Oh yes, yes...certainly. I'll leave you two ladies to it. Oh and Abigail? Did you read that email I sent you about that paper review? Would you be so kind and read it...and then we can perhaps discuss it at lunch break?\" \n\n\"Yes sir, I'll be on it promptly.\" \n\nAnd with that the door swung shut. Both Abigail and Emma exhaled an audible sigh of relief. Realizing what had just happened made Abigail laugh. Her laugh was contagious and soon Emma's laugh joined hers in chorus. \n\n\"Oh God...that felt good...I haven't laughed this much for some time. Thank you!\" \n\nEmma smiled warmly towards her. \"Well, I'd best be off. My...ummm...friend is waiting for me...I'd like to thank you for your kind invitation Miss O'Donnell...\" \n\nAbigail raised her hand and before she could comprehend what she was saying: \n\n\"Please, just call me Abigail.\" \n\n\"Will do Miss...I mean...Abigail...Well...bye then...\" \n\n\"Bye...\" \n\nThey stood there looking into each other until finally Emma spun on her heels and left leaving Abigail alone with her thoughts. And Abigail decided there was a lot of thinking to be done here. Lots of questions to be asked. She wasn't sure she could find all the answers, nor was she sure she would like what she came up with. \n\nChapter 2 (Emma) \n\n\"Sooooo...how did your one-on-one session with the professor go? Is she willing to adopt you as the teacher's pet? Or will you have to grovel a bit more?\" \n\n\"Shut up Ana, it was nothing like that. She just remarked how much she liked my definition on power.\" \n\n\"The way I saw her staring at you it seems to me she has other power trips in mind.\" \n\nEmma playfully swatted her friend on the back which earned her a jab in her sides in return. This went on for a bit until Anastasia escalated matters by making a grab for Emma's jean clad crotch which made Emma sit very still. \"How about we take a power trip together?\" whispered Ana seductively into the redhead's ear. \"It's been a while you know...you up for it?\" \n\nAnastasia and Emma weren't exactly an item together. They had been friends since junior high who also happened to enjoy a romp in the hay once in a while. The unspoken agreement between them was that while they were friends with benefits so to speak, either party was entitled to seek dates as they saw fit. Emma was the more likely of the two to seek other dates, be them male or female, but Anastasia was always there when she was in between them. All in all, it seemed like a cozy agreement, low in maintenance and drama. Provided of course both parties nursed the same agenda out of the arrangement. \n\nEmma's previous bizarre encounter with their gorgeous looking blonde professor had left her with a bit of an itch. Now that Anastasia so shamelessly offered she wasn't going to turn a blind eye to it. Sex was just like ice-cream; you never said no to ice-cream did you? \n\n\"Soooooo...what shall it be?\" said Ana in a whispery voice and a sly smile on her face. \"Am I good enough for you?\" \n\nAna's warm hissing in her ear had her body revving up in no time. She could feel her skin break into goosebumps as her crotch started swelling against the fabric of her underwear. The girl certainly knew how to press all her buttons. With her green eyes already dimmed with scarcely disguisable lust, she turned to face her. \n\n\"Where and when?\" \n\nAnastasia gave her a victorious grin. \"My place. Now if you want. There's no one in my dorm.\" \n\nLightning flashed in Emma's eyes. They were no longer timid pools of green. Now they were like the frothing waves of an angry sea. Giving the cafeteria a brief scan, she pounced upon Anastasia nearly ramming her tongue down her mouth. \n\nYou're going down with me girl! I'm going to fuck the bejesus out of you now! \n\nAnastasia smiled at that ferocious display of hornyness. \"Easy...there...girl...\" she said between kisses. \"The dorm's only a five minute walk from here.\" \n\n\"I don't think I can wait that long\" came Emma's growling reply. \n\nBy now Emma had shifted her weight and was practically leaning on Ana, her hands roaming forcefully over her clothed body. The cafeteria didn't have that many students milling about at that point but still, this was a public place. Emma made a quick decision: \"Get up...bathroom...now!\" she commanded. \n\n\"But Em...there are classes still going on...someone might barge in on us!\" \n\n\"You should have thought of that before you stirred the dragon.\" \n\nEmma grabbed a laughing Ana by the hand as they stumbled out of the cafeteria and onwards towards the girls' restrooms. With an unceremonious barge on the door they crashed inside with Emma still forcefully holding her hand. A quick scan of the premises showed that the coast was clear. Emma nearly shoved a giggling Anastasia inside the last stall and slammed the door shut. \n\nOnce there, the nearly ravenous redhead pounced upon her pray. Their lips locked once more as Ana's arms braced against the walls to better accommodate Emma's ferociousness. Emma positioned herself to Ana's side; one hand groped at the raven haired girl's ample tits while the other was busy undoing the buttons of her jeans. In the meantime, her legs had straddled Ana's thigh as she needily grinded away. \n\nThe room was silent, save for a tap rhythmically dribbling on a basin and their heavy breathing. But that soon changed when Emma, wasting little time, sent her fingers downwards beneath the waistband of Anastasia's panties. The girl was waxed with only a thin landing strip of hair leading towards her pussy. Emma could feel moisture permeating the cotton fabric, a sure sign that the raven haired girl was into it as much as she was. A sharp hiss escaped her mouth when Emma parted her swollen lips and made contact with her protruding clit. \n\nFuck yeah, you're so damned wet girl! I'm gonna make you cum so quick your head is going to spin right off. \n\nEmma didn't waste any time with subtle pleasantries; after dipping two fingers inside Anastasia's dripping slit, she proceeded to methodically rub the girl's clit to oblivion. Her free arm kept Ana's torso steady, while her thighs were nearly clamped on her leg. \n\n\"Fu...fuuckk...what are you doing to me...Oh God! Here it comes...\" \n\nWith a strangled moan, Ana's body spasmed as if an earthquake had hit it. Tremor after tremor shook her body with pleasurable violence; Emma continued her ministrations, her fingers now gliding inside the folds of her pussy and avoiding contact with the now sensitive clit. \n\nAfter a full minute, Ana placed her hand on top of her panties forcing Emma's hand to still. \"Please, no more...\" \n\nEmma obliged and removed her glistening fingers making a point of licking them clean. \"Well someone seems to be horny today...so, what can I do for you?\" \n\n\"Sit on the toilet and eat me.\" \n\n\"Kay\" said Ana with a sly smile. Pulling her jeans up, she sat down on the toilet seat and proceeded to undo the buttons of Emma's jeans. The girl wore a simple black thong which contrasted brilliantly with her milky white skin. Wisps of red hair could be seen protruding from the elastic sidebands; Ana knew that her friend kept her pubic hair natural. The rust colored pubes only served to enhance the whiteness of her skin and gave a fire-like look to her pussy. \n\nPulling Emma's panties down she couldn't help but notice the silvery looking wet patch on the inside of the fabric. The girl must have been leaking the stuff for some time now, Ana reasoned. But that was the last thing she noticed before Emma hungrily shoved her pussy onto her mouth. Slightly bent backwards and with both hands gripping the back of Ana's head, she proceeded to grind away against her eager lips. \n\nLap it all up bitch, just like that! Oh God yeah! Ohhh...Abigail...that feels so good! Wait, whaaaaa? Why is SHE in my head right now? \n\nEmma's orgasm wasn't very far off the corner. Grunting like a wounded animal she came onto Ana's mouth like a shuddering train. Anastasia continued the languid lapping with her tongue until Emma finally flinched backwards. She was a beautiful mess, this girl. Her flame-like hair was all over her place, her face was flustered and sweaty and she reeked of sex. \n\n\"God I needed that...\" mumbled Emma as she buckled up her pants. \n\n\"You're welcome\" Ana smiled back. \n\nEmma glanced awkwardly towards her like she always did after they had sex. It wasn't exactly guilt what she was feeling but it wasn't the most pleasurable feeling on earth either. \n\n\"How about we crash together at my room some more...watch a Game of Thrones episode or something...I'll even order pizza if you want...\" said a hopeful Ana. \n\nUh-oh! Here we go again... \n\n\"While that pizza thing you did there sounds mightily enticing I'll have to pass. Gotta go back...study some...\" ",
        "Yeah, way to go champ! As far as excuses go...studying on a Friday night? Yeah, highly believable! \n\nAna looked upwards towards her with a quizzical look. \"You know for some reason you always behave like that after we have sex...it's not a crime if you come over and spend some time with me after we've fucked.\" \n\n\"Ana...it's not like that...\" \n\n\"Then what is it?\" \n\n\"I just...\" \n\n\"Why won't you give us a chance?\" \n\n\"Ana, we've been down that road before. Please don't make me go there again?\" \n\n\"Fine! Have it your way you cold hearted cow! I'm good enough to suck your pussy dry but not good enough to have a cuddle watching TV. I'm good enough only to get your rocks off! I didn't friggin' ask you to marry me! I just wanted some time with you!\" \n\nAnastasia's angry voice was resonating through the empty bathroom. \n\n\"Anastasia...I didn't...I just don't want to lead you on...I...I thought we had agreed on this before...\" \n\nAnastasia looked towards Emma, hurt and anger filling her gaze. \"Whatever...\" she said dejectedly as she pushed past the red-head and stormed out of the bathroom. \n\n\"Great...just fucking super!\" \n\nChapter 3 (Abigail) \n\nAbigail was comfortably ensconced in a nook of the sofa within their living room, the use of \"their\" implying her increasingly absentee girlfriend. Alexa Vargas, her girlfriend of two years, was once more running late. She hadn't even bothered phoning nor had she answered any of the texts Abigail had sent. \n\nTheir relationship had started off with quite a fire. Abigail was on a night out to the local lesbian bar she frequented. She was minding her own business when all of a sudden these \"aahhs\" and \"ooohs\" started resonating around the room. Her girlfriend to be had just made her appearance clad in business attire and killer heels. Abigail had rolled her eyes at that point, but then the first drink arrived, courtesy of Alexa of course. She had refused it at first; she wasn't one to be swooned by such clich\u00e9d displays of \"affection\". But then Alexa had persisted; she came over in person and asked for a dance. The flame had been lit the moment their bodies pressed together. That flame had engulfed her as pieces of clothing went flying a few hours later, yet another first for Abigail: sex on the first date. The rest, as they say, was history. \n\nAlexa wasn't a bad person per se; she was an incredibly goal driven individual who was used to success and getting her way. Abigail had been the first girlfriend with which she had passed the six month mark. And yet, despite the fact that they had very recently toasted to their two year anniversary, Abigail felt that things were falling apart. \n\nTheir sex life, which had once crackled off like the solid state boosters of the space shuttle, was becoming cooler and cooler as time went by. Where at their beginning they couldn't keep their hands off each other, now sex was both infrequent and felt like warmed over porridge to Abigail. It seemed to her that Alexa was going through the motions just to get it over with and out of the way. \n\nThen, there were other things, the little things. Gone were the funny little \"I love you\" notes on the fridge that Alexa left as she headed out early on her way to the office. Gone were the everyday phone-calls from work just to hear her voice. Gone was their daily dinner routine, where they chatted and had a glass of wine to unwind. In fact, as Abigail thought of it, their relationship was probably kept afloat due to convenience and sheer inertia. They were probably both too busy to contemplate a break up. \n\nThe thought of their relationship being one of convenience both annoyed and saddened Abigail. She wasn't anyone's chair warmer for when they remembered the way back home. She was a beautiful young woman who was highly successful in her line of work. She was the youngest female lecturer ever to join her department and that was no mean feat. She was bright, intelligent and could hold her own in any type of conversation. She was in love with academia and in particular she relished teaching young students. There weren't that many people who could claim that they thoroughly enjoyed their job. That should amount to something, shouldn't it? \n\nFeeling her temper begin to rise, Abigail decided to have a glass of red wine to decompress. Rummaging through the cabinet where Alexa kept their wine stash, she came along a bottle which read: \"Port, Sandeman Vintage 1960\". Now, Abigail wasn't a wine connoisseur like her high profile corporate girlfriend, but she did understand that, usually, the older the vintage, the more expensive the wine. That bottle must have cost a small fortune, Abigail reckoned. What better way to spite her horribly late other half than to binge on ridiculously expensive wine. \n\nShe uncorked the bottle and poured herself a generous portion. \"My world! This tastes just fine!\" thought Abigail as she sloshed the wine around her mouth, relishing in its magnificent tawny sweetness. \"Well Alexa certainly takes the house when it comes to wine selection, I'll give her that.\" \n\nAbigail resettled herself on the sofa, wine glass in hand, her tablet in the other. As her glass continued to drain on a steady pace, she could start to feel the warm buzz of the alcohol coursing through her system. She had always been a featherweight and rarely tolerated more than one glass of wine, but tonight she felt she needed to escape all these suffocating thoughts she had about Alexa. Without any inhibitions she refilled her glass and continued to consume the wine with gusto. Somewhere along the third glass, she was really beginning to feel lightheaded. \"This is actually good\" she thought. \"I should do this more often. No wonder Alexa like this shit, it really loosens you up.\" \n\nSpeaking of Alexa made her frown. She wouldn't let her thoughts stray towards her anymore. Idling through her Facebook page she stumbled upon an invite: \"Emma Sorensen, friend request.\" Abigail usually made it a point to never add her students to her social media. But that's when she was sober. Now the wine bottle sitting on the sofa table was south of half-empty and she was really itching to check out the profile of her brilliant - not to mention beautiful - redhead student. \n\nAccepting her request she noticed the green light listing her as online. Ignoring that, she decided to have a look at Emma's profile photos. There were quite a few of them there. Emma was certainly a party animal; there were a bunch of them depicting her and her friends doing variously crazy stuff. Oh, but there were also photos of the redhead clad in swimwear and that's when Abigail's mouth started salivating. \n\nThe girl was practically oozing sexuality onto her tablet. On this particular image, Emma was clad in a cobalt blue tie-side bikini standing with the sea on her back on some sandy beach. Her hair was loose and flailing in the wind. Her face sported a warm happy smile which shone brighter than the sun. Her C cup breasts stood out proudly and Abigail could make out the faint contours of a nipple piercing protruding beneath the fabric. Her tummy was taught and her whole body seemed not to have an ounce of excessive fat on it. Emma was simply a beautiful girl and a feast to the eye. And to be completely honest it wasn't just her eyes which were happy with the display, if the familiar sensation of her pussy lips pressing against her panties was any indication. \n\nWith a supreme exertion in self-control Abigail forced herself to close the image and perused her album further. There were two more images that caught her eye: one was a selfie of her kissing a dark brown haired girl smack on the lips. Both of them were laughing. Where did she know this other girl from though? The tag on her face read \"Anastasia Bloomingdale\" but that didn't ring any immediate bells. Abigail was certain she had seen this face before but her alcohol induced brain couldn't quite make the connection. \n\nThe other photo made her frown. Again the posing was that of a selfie only this time Emma was lip-locked with a sandy haired boy. She had her eyes closed and seemed really lost in the moment. Well, that certainly clinches it then. The girl was most probably straight. She might have some curiosity in her as the photo with that Anastasia girl showed, but that was imbued with a sense of fun and frivolity. This wasn't that rare nowadays. Many straight girls would indulge their curiosity to explore their sexuality vis-a-vis other females and some would even venture into longer forays in the lesbian world. The sad reality however was this; dating straight girls meant that nine times out of ten the lesbian girl got the rough end of the stick. Abigail was too much of a realist and had seen too much heartbreak from her closer circle of friends to not realize that. Matters of the heart however are rarely if ever resolved with cold blooded realism. Especially if one has consumed half a bottle of Port wine and has an inexplicable pull towards a certain ginger haired student. \n\nNo sooner had she closed Emma's profile when a chat box popped up. And speaking of the devil, it was none other than Emma who had initiated it. \n\n&gt;Abigail, you there? \n\nShould I answer that? What should I say? That yes I'm here ogling your Facebook semi-nude portfolio? Is that glass empty again? I thought I had refilled it sometime before... \n\n&gt;Yes, I'm here \n\nGod what a stupid thing to say. \n\n&gt;What are you doing right now? \n\nGetting drunk on ridiculously expensive wine, stalking out your profile, drooling over your bikini-clad body...take your pick. \n\n&gt;I'm just idling about...waiting for my girlfriend to come home for dinner...she's late...as usual. \n\n&gt;Oh...well I've just had a huge fight with mine... \n\nThat piqued Abigail's interest. Mine as in girlfriend or mine as in boyfriend? \n\n&gt;Is it a gf or a bf? \n\nThere were several seconds of silence as Abigail waited for an answer. \n\n&gt;It's a she...but it's not what you think... \n\nWhat do I think? \n\n&gt;What should I think? \n\n&gt;We're just friends...with benefits... \n\nThat sounds convenient. Why didn't I ever have any such friends at her age? Because your nose was always stuck in the insides of a book, that's why. \n\n&gt;So what happened? \n\n&gt;Conflicting agendas apparently... \n\n&gt;Meaning? \n\n&gt;Well we had sex...which she initiated...and then she wanted more... \n\n&gt;More as in? \n\nYet again more silence. \n\n&gt;As in a relationship... \n\n&gt;Which you apparently don't want to get into. \n\n&gt;Yes. I've been clear on this twice before in the past. We can be friends, we can hang out, we can have sex, but that's it for me. \n\n&gt;Well, being friendly with someone, spending time with her and having sex has all the hallmarks of a relationship to me... \n\nThere's something here which you aren't saying... \n\n&gt;True. But I don't want a relationship with her. \n\nWhat do you want though? \n\n&gt;What is that you're looking for then? \n\n&gt;I don't know...I'm not sure I'm relationship material in any case...but there is someone else though... \n\nAha! Someone else! \n\n&gt;So you are interested in a relationship, just not with your friend. So who is that someone else? \n\nWill she answer that? \n\n&gt;She's someone I met very recently...she had this strange effect on me. I can't stop thinking about her...that's a first for me. \n\nNow, it was Abigail's turn to fall silent. These were incredibly treacherous waters she was headed into, this much was clear despite her alcohol impaired judgment. Just then, she heard the turns of the door lock being worked. Alexa was back from work. \n\n&gt;I've got to rush...talk to you soon. \n\nAnd she signed off tossing her iPad aside. She raised her eyes just in time to see Alexa slam the door shut with a loud bang. \n\n\"Well, well, well...look what the cat dragged in!\" \n\nAlexa turned towards Abigail anger flashing through her eyes. \"Some of us have to do real work for a living you know.\" \n\n\"Leaving that crap about my work aside, you could have at least texted me to say that you'd be running late. It's called courtesy and it's the least you can do towards someone who's prepared dinner for you...and ended eating it cold and alone!\" \n\nAlexa regarded Abigail with ill hidden contempt. Suddenly her eyes focused upon the half empty bottle of wine on the sofa table. She noticed the label on the bottle and her eyes bulged with fury. Almost leaping towards Abigail, she half screamed, half screeched: \"You...you drunk...you bitch! You drunk my collector's edition bottle! Do you know what that costs?\" \n\nAbigail was totally shocked by her outburst. Sure Alexa was known for her temper but she had never called her names before, certainly not for something as trivial as a bottle of wine. And she was also hurt by her accusation; it would appear that she was worth less to Alexa than an expensive bottle of wine. Hurt was soon followed by anger. She had ignored her first derogatory remark about her job and now this... \n\n\"Yes, I did some drinking waiting in vain for you to give me some signs of life. You refuse my calls, you don't answer your phone or my texts or my emails. Something! Anything! I'm alive and I'll be late, don't wait up! But...it seems that I'm worth less to you than a bottle of expensive wine apparently...\" \n\n\"Like I said, I was neck deep in work! I didn't ignore you on purpose! Some of us do actual work instead of being bullshit artists in some dip-shit department pretending to discover...I dunno...the meaning of life maybe!\" \n\nAbigail felt dizzy all of a sudden. She felt as if she had been slapped a thousand times in the face. \"You...you really think that of me?\" Tears started streaking down her cheeks as she spoke in a smallish voice. Alexa seemed untouched by her obvious hurt. She crossed her arms across her chest and didn't offer an answer. Abigail understood. \"Well then...if that's your final answer I'd best be on my way.\" \n\nDesperately fighting back the sobs that threatened to spill out of her chest, she mindlessly gathered her purse and coat and just like that she left. Mentally forcing herself to breathe, she rapidly descended the flight of stairs and once out of the building she collapsed. As she sat on the cold outer staircase, a silent painful cry overtook her as her hands clasped her face. Two years of her life thrown away within the blink of an eye. All those feelings, all those words tossed aside just like that. \n\nAfter having a good solid cry, Abigail's rational thinking kicked as she tried to analyze the situation. Her relationship was finished and this was not due to some row over broken dinner promises or some bottle of wine. These were just the pretexts, she reasoned. Alexa had grown distant the past few months and their relationship had gotten moldy. \n\nHer most pressing problem at the moment was that she was practically homeless! A year ago and against her better judgement, she had moved in with Alexa, letting go of her own leased apartment. Now, all of her things, all her clothing, all her reading material for her work was upstairs. She'd have to think about that later though. Right now, it was getting dark and she needed a place to stay and regroup. Luckily, her mobile was in her purse. \"Aurelia...she's my only hope...\" \n\nChapter 4 (Abigail) \n\nThe kiss was wonderfully, toe-raising deep. Jer's strong grip on her butt and the grinding of his obvious erection on her flank had her juices flowing quicker than a Ferrari needed to reach sixty. His free hand had expertly located the protrusion of her clit over the layers of her panties and leggings and his fingers aggressively circled her outline. \n\n\"Mmmmm...someone's feeling frisky tonight...should I wiggle my tail or would you prefer that I purr?\" \n\n\"You can do what you like, because once I go down on you, I'll make you forget your name!\" \n\n\"Hmph...promises, promises...lots of smoke but no fire.\" \n\nJust then her cellphone started ringing. Jeremy continued kissing and sucking on her neck as she laughingly tried to retrieve the offending phone from her handbag. \n\n\"Do you really have to get that?\" \n\n\"Yeah...mmmmm...that was nice...it's Abigail...I'll...ohhh...I'll be just a couple of minutes.\" \n\n\"Yeah well, good luck trying to speak to her.\" \n\nIn one swift move, Jeremy yanked her panties and leggings down to her thighs and expertly sent his fingers to rest in the slick folds of her pussy. Aurelia closed her eyes, one hand in the air holding the vibrating phone, the other latching onto whatever furniture was next to her as she tried to steady herself. She was of a mind to throw the damned thing away, Jer had her engine fully revved and ready to go. But the caller was persistent, so with great reluctance she accepted the call. \n\n\"Y...yes?\" \n\nAbigail gave her phone a funny look. \"Aurelia? Are you alright?\" \n\n\"Y...yess...ffiiiiinee...\" Jer had just struck a particularly fine chord of her clit. \n\n\"Oh...You do sound a bit funny...Anyways, I'll be short. I'm in a bit of a pinch here actually. I'm currently homeless so...\" \n\nAurelia immediately stood upright and held Jer's hand still. \n\n\"What happened? Where are you? Do you need any help? Are you okay?\" \n\n\"I'm fine...we had a fight with Alexa which ended with me exiting the scene...I'll tell you all about it...but I was wondering if I could couch-surf for a couple of days until I get my bearings...\" \n\n\"Absolutely! Where are you, do you want me to come and pick you up?\" \n\n\"I'll just take the bus, my car keys are upstairs so...it's only a short hop.\" \n\n\"Kay, I'll be waiting for you.\" \n\nAurelia settled the phone down and gently tugged Jeremy upwards. \n\n\"So what gives?\" \n\n\"Apparently Abigail had another fight with Alexa, only this time it must have been a major one. She was kicked out of their house.\" \n\n\"No shit? That bad?\" \n\n\"Yeah, seems so. And this is what you are going to do. Abigail will require some girl-alone time which means that you'll have to be a dear and give us a couple of hours. And...\" said Aurelia giving Jer's crotch a nice big squeeze \"because it's such a shame to let this big chunk of manhood go to waste...what would you say if we did a quickie right before our guest arrives?\" \n\nBefore Jeremy could even utter a syllable, Aurelia's hand was deep within his briefs fondling his rock hard erection. \"Well you do drive a hard bargain miss De Ascentis so...\" \n\nWith a swift move Jer bent Aurelia over the couch with her ass jutting out in the air, her leggings and panties down her thighs. Her luscious spherical globes and her suggestive tan line never failed to get his blood boiling. Placing the tip of his cock on her leaking entrance elicited a soft hiss from her part. Not wasting any time he gradually sunk the whole length of his shaft inside her pussy. \n\nThere was something brutally sexy to be had from quickies, thought Aurelia as Jer furiously rammed his cock behind her. Perhaps it had something to do with the fact that one operates under a time constraint which serves to heighten the rush. The fact was that Jer was giving her a star-bursting fuck, one for the books she was sure. \n\nFinally, with a loud grunt he pulled out and soon thereafter she could feel the coolness of his sperm as load after load hit her backside. \n\n\"Oh man...that was fantastic...you were so wet! And you know how your tan lines never fail to make me super horny!\" \n\n\"Yeah well, Mr. horny guy...you better get a towel really quick here. And if you shot your stuff anywhere near the couch you're dead\" said Aurelia with a definite playfulness in her tone. \n\n\"We're not through here you know. Let me get you cleaned up and then it's you, me, your pussy and my mouth...they have a date which cannot be postponed.\" ",
        "\"But honey? Abigail is going to be here any minute! What If I can't finish on time?\" \n\n\"Trust me, you'll get there!\" \n\nSoon, she was lazily slumped on her couch, towel under her butt, eyes closed and with Jer between her legs happily lapping away. He had this amazing technique, this God send of a man. Aurelia's clit could handle quite well direct stimulation. Jeremy was a very perceptive guy and once he had discovered that, he would latch on her clit and create suction with his mouth. Then he would swirl his tongue around it driving her insane...Pretty much like what he was doing now and... \n\n\"Ohmygoddon'tyoufuckingstop don'tyoufucking stop\" was all that came out of her mouth as violently pleasurable spasms originating from her clit radiated outwards engulfing her body in sexual bliss. \n\nBut alas she didn't have any time to luxuriate in that amazing post-orgasmic feeling; the buzzer from their intercom interrupted her nirvana. \"Fuck, that was quick\" said Aurelia as they both scrambled to get their clothes back on. Aurelia was left on her own as a laughing Jeremy retreated to their bedroom leaving her hopping on one leg trying to get her panties and leggings back on. She was pulling the last strands of stray hair out of her face when their doorbell rang. \n\nAs she hurriedly opened the door, she caught Abigail staring at her shoes. Apparently the sudden motion of the door must have startled her, because she nearly jumped to the ceiling when she heard the whoosh of the opening door. A quick scan revealed to Aurelia that her eyes were puffy and she looked a bit haggard. \n\n\"You alright honey?\" \n\n\"Yeah...you just startled me, is all.\" \n\n\"Come on in and tell me all about it.\" \n\nOnce inside they headed for the living room. Taking her seat, Abigail noticed a peculiarly stained towel draped on the couch and for the first time this evening she managed a smile. \n\n\"What's that?\" \n\n\"Oh...emmm...the towel...yes...I'm on my first day and I didn't want to stain the couch.\" \n\nJust then Jeremy's deep resonating voice bellowed from the hallway. \"Honeeyy? Don't forget to pick up the towel...we don't want Abigail to see all those cum stains and...\" \n\nAbigail snorted out a giggle completely forgetting her plight as Aurelia changed through various shades of red. Finally unable to contain herself she broke down in hysterics as an equally embarrassed Jeremy made his appearance into the living room. \n\n\"Oh...ummm...hi Abi! And I'm on my way out! Enjoy yourselves ladies!\" \n\n\"Yeah and congratulations on the perfect timing awards Jer! Next time use a loudspeaker though. Why not let the neighbors know as well.\" \n\n\"But...don't they already know?\" said Jeremy as he ducked before the incoming pillow. \n\n\"You ladies have a good time, I'll be out for the night.\" \n\n\"No more than five beers! And no shots!\" \n\n\"Men\" rattled Aurelia. \"Can't live with them, can't live without them. So, you've had our story advertised, what's yours?\" \n\nAbigail's mood instantly sunk as she tried to find the words to express what had transpired only a few moments ago. \n\n\"Well...the short version of it is that my relationship with Alexa is, in all likelihood, over. What happened today was just the push which brought the whole tottering structure down.\" \n\n\"Oh dear...sorry to hear about that. I gather though that it's not entirely out of the blue, is it?\" \n\n\"The writing was on the wall for some time now. We were growing more distant by the day. It felt that we stayed together out of sheer inertia. So today we had a stupid fight over a wine bottle and her being late for dinner. I was a bit drunk to be honest and I suspect that she was a bit touchier from work than usual, but I'm afraid this is curtains for us. The bottom line is that I have to find a place to stay...for a couple of days until I get myself reorganized. Could I...perhaps...\" \n\n\"You can stay here for as long as you need honey, you don't even need to ask! And anything that you might need, we're here for you.\" \n\nAbigail stayed silent for a moment desperately trying to fight down a choking feeling in her throat. Despite the best of her efforts she could feel the tears streaking down her cheeks. \"This...it wasn't supposed to happen...why?\" was all she managed to say before the dam completely broke. In an instant, Aurelia was next to her giving her a hug and softly rubbing her back just like a mother does to sooth her child. \"It's OK sweety...it's OK...everything is going to be OK\" was what she kept whispering to her grief stricken friend. \n\nJust then Abigail's phone started ringing. The chirping sound of the device had a startling effect on her which somehow caused her crying to stop. \"That...that's Alexa...probably calling to say she's sorry...\" She went through the motions of picking up but Aurelia's hand on hers stopped her. \"I don't think that's a very good idea sweetie...not in the state you're in anyways...\" \n\nAbigail hesitated and finally the ringing stopped. Only to be followed a few seconds later by the pipping sound of a text arriving. \"It's her...I should probably read it...\" \n\nShe picked up her phone and swiped the screen. True enough, the text was from her girlfriend. It read: \"Abi I'm sorry for what I said. Can we try again? Please come back and we can talk it through.\" \n\n\"She says she's sorry and she wants me to go back and talk it through\" said Abi in a hollow voice. \n\n\"I don't think that's a very good idea honey, not for today at least. I think it's still very raw on you and you're not really thinking straight. You yourself told me only minutes ago that your fight today was just the tip of the iceberg. My advice would be stay here tonight, we can watch a movie and eat all manners of unhealthy comfort food, have a good night's sleep and then, if you're up for it, go and have a chat with her. What says you?\" \n\nAbigail let out a long sigh of relief. \"What would I ever do without you\" she finally offered. \"Yes...that's what I'll do...better this way...it'll help to clear my head...I owe you big time you know...\" \n\n\"Oh shut it! It may sound clich\u00e9 but that's what friends are for! Listen, I'll tell you what: Why don't you give yourself a warm shower...I'll lay some pee-jays on the spare room bed, mine should fit...we're about the same number I reckon. Then we can order some pizza and there's ice-cream in the fridge and we can have it all to ourselves!\" \n\nAbigail managed a warm smile; yes what Aurelia was suggesting sounded just like what the doctor would have ordered. She'd forget about everything for now and deal with the fallout tomorrow. Despite the fact that she was always a do-er and never one to slide problems beneath the carpet, in this particular instance she just wanted to forget about everything for a change and stop worrying. \n\nChapter 5 (Emma) \n\nEmma lay sprawled on her bed, her day clothes still on, shoes kicked off on top of piles of clothing strewn on her part of the floor. Her personal space actually mirrored a part of her character. Emma was quite a rebel when it came to structure and that applied to a wide array of situations. Those could range from simple notions such as the tidiness of one's room and could include, for example, the ability to keep a steady relationship. Emma was a spur-of-the-moment type of person who tended to think with her red hat on. A red hat person usually shoots from the hip, examining issues and problems with a strong sentimental focus. This type of behavior, coupled with her occasional volcanic temper eruptions tended to get her into trouble. However, her intellectual brilliance and perception usually managed to, not only salvage the situation, but most of the times bring her on top. \n\nIn this particular evening Emma was feeling itchy in all manners of ways. She was still horny and irritated after her troubled encounter with Ana a few hours ago. She was vexed and somewhat annoyed with the interaction she was having with her teacher. Why was she having such a strange effect on her? Why was she behaving like some love-sick child when she was in her presence? This was so unlike her usual modus operandi. She was extremely fickle when it came to dating and relationships. Her amorous trysts rarely ventured beyond the second date and when they did, usually a month was the absolute limit before she got bored and disinterested. \n\nBut boredom had another peculiar effect on Emma. As they say, idleness is the mother of all evil and right now the redhead felt bored, horny and irritable, a quite volatile and potentially disastrous mix. Her mind kept rerunning the chat she had with Abigail only a few moments ago. What really stung her was its abrupt termination. No one ever did that to her, usually it was others who were on the receiving end of her volatility and it really itched her in the worst kind of way to be dumped like that. What she needed was some drama-free fun for tonight to clear her mind. It was Friday evening after all and she was shut in her room brooding over Ana and Abigail for crying out loud. \n\nNope! This attitude isn't going to fly. We are going to remedy things fast. Let's see now...what was the name of that dude who kept badgering me? Donald? No...hmmm...Ah yes...Donovan...Let's check him out to see what his story is. \n\nDonovan Sherman was a soccer player on the university team. He was a striker and a damned good one at that. Rumor had it that if he kept scoring like he did he was bound to go professional sooner or later. If you were into dirty blonde muscular athletic jocks then he really took the cake in that department. He had made several passes towards Emma in the past along the lines of \"you're super lucky I laid my eyes upon you girl\" but she had shot him down with just as much eloquence. As a matter of fact once she didn't even have to speak to him to rub his nose; she simply showed him the logo on her T-shirt: \"Break necks - Kill Egos\". \n\nThe guy was none too pleased with that rebuke but then again his reputation wasn't that of an angel. Rumor had it that he had taken advantage of quite a few groupies who in any case were willing to crawl on all fours for a chance to get inside his briefs. Emma usually avoided his type because more often than not, their egos were bigger than their brains. This Donovan guy was in some of her classes and he didn't exactly have all of his cornflakes in one box. But brains wasn't what Emma was after tonight. As a matter of fact she wouldn't mind it if this Donovan fellow fucked her senseless. You don't need much of a brain to do that do you? \n\nThere was a big party supposed to take place in one frat house or the other, Emma had never bothered with these before. The word \"party\" was a euphemism when applied to such events; what they most likely implied was a hard liquor fueled orgy. Usually that translated into terrible sack-time because booze overdose and sex make very bad bed fellows. Emma wasn't after the liquor, she was after Donovan tonight. She'd better get a move on then if she was to have any chance of catching him semi-sober. \n\nHaving decided upon a plan she immediately sprang out of her bed into action. Emma wasn't one for pomp and circumstance; she rarely bothered with the usual female beautification routine and never wore any makeup. If you spend too much time about your appearance then it isn't worth it, was her moto. Emma was supremely confident in her naturally stunning looks; she was the predator not the pray. A quick shower later and a change of underwear and she was ready to leave the pit lane. \n\nThe party venue was not very far from her dormitory. Emma was led to the place by the dull thumping sound of music being played way too loud. Then of course she spotted various party-goers who had already spilled on the sidewalks and were milling about. With a stride in her step she pushed the door open and ventured inside. \n\nOnce within she held her poise whilst scanning the premises and trying to get her bearings. The frat house was essentially a residential house converted for the needs of the fraternity. There was your usual living room, a kitchen and a modest few stairs which probably led to the rooms upstairs. The kitchen was a hive of action and it was most likely the source from where all the hooch was flowing. Emma decided that her best bet was to head there, if only to grab something to drink. \n\nAs she was making her way through the crowd she felt a hand landing on her shoulder and turned. Right in front of her stood Donovan with a beer can in one hand. He looked like he might have had a few safely tucked away but other than that everything seemed normal. \n\n\"So you came after all!\" \n\n\"Yeah, it was a slow Friday evening so I decided to give it a go.\" \n\n\"This place is way too loud. Why don't you grab a beer and we can go someplace else to talk.\" \n\nAs if talking is what's on our minds... \n\nEmma smiled sweetly back at him. Sure she could do the dumb groupie thing if she tried. \n\n\"Sure, a beer would be fine.\" \n\nDonovan or \"Don\" as his chums called him rushed to the kitchen and quickly re-emerged with two fresh cans of Bud Lite. Handing one to Emma he beamed happily at her as if he had handed her the most expensive champagne. \n\n\"Hey I know! How about we chug it?\" \n\nChrist! Why, oh why did I come here in the first place? Doofus over here thinks he's being cute... \n\n\"Eerrmmm...no thanks...I'll just drink from the can...but you can go ahead if you like.\" \n\n\"Hey GUYS!! CHECK THIS OUT!\" \n\nDon's voice boomed over the music. After thoroughly shaking the can he took a knife, slashed the can in the middle and quickly brought the can to his mouth. The content spewed and foamed and spilled all over his chin and shirt as he was gurgling it down. After five or six seconds he ceremoniously tossed the spent can on the floor and finished his antic with a loud belching sound. His palls and groupies clapped and laughed as Don took a mock bow in front of them. Turning towards Emma once more he had that lopsided laugh on his face that people who've consumed one too many usually have. \n\n\"Wasn't that great?\" \n\nAh yeah...how romantic...especially that belching thing you did in the end...yeah that had me wet in like, instantly...Why did I think this was a good idea again? \n\n\"Super. Listen, you mentioned something about a quieter place where we could talk. Where do you reckon that is?\" \n\n\"Sorry, didn't hear you, what did you say?\" \n\n\"I SAID...\" \n\nOh forget it...it's a dirty job and someone has to do it... \n\nEmma grabbed him and forcefully planted a kiss on his lips hungrily biting the lower half as she receded. \n\n\"Uhhh...that wasn't half as bad...\" \n\n\"So...you up for it champ?\" \n\nDon looked a bit confused. \n\nNow repeat after me Emma. You have to let THEM make the first move. Otherwise their machismo short-circuits and they're scared that I'll rape them or something. Better to take baby steps here. \n\n\"I was wondering whether we could go someplace else...the two of us...upstairs perhaps?\" said Emma, pointing with her eyes towards the staircase incase Mr. Genius in front of her hadn't already gotten the hint. \n\n\"Oh...oh that...yeah...right...Yes...we can do that!\" \n\nFinally! We're getting through...this had better be worth it! \n\nDon headed upstairs with Emma close behind. After a couple of closed doors they finally found a room which was unoccupied. He closed the room and locked the door. Turning around he saw that Emma had already taken her hoodie off and was proceeding to unclasp her bra. \n\n\"Uhhh...shouldn't I be doing that?\" \n\n\"Just...focus on getting your clothes off.\" \n\nEmma who was of course sober and with fully functional motor skills was already stark naked as Don nearly stumbled trying to get his pants off. Emma looked on with amusement as he continued to disrobe. \n\nMmmm...well what he lacks in brains he certainly makes up for in muscle, I'll give you that. Nice six pack there...and look at those legs...oooh what is that? I see we're limp Mr. Champion...I'll have to remedy that if we're to get anything out of this...I do hope he's a grower instead of a shower though otherwise we're not in much luck tonight. That's probably why he shaves himself there...and I'll bet you money that he spends more time waxing than many of my friends...But...focus Emma! Focus! Let's go give him a hand shall we? \n\nEmma sauntered over to where he was standing and started fondling his soft dick. It managed to harden somewhat to a semi-erection but nothing too spectacular. Its head had barely made its emergence from beneath the protective hood. \n\nI guess we'll have to do this the hard way...Well...if you want to get some you got to give some...We ain't gonna see any miracles though in the size department that's for sure. \n\nShe sunk to her knees and proceeded suckling on the sensitive tip whilst her hand made jerking motions on his shaft. Gradually he started to respond but it was clearly not the most rigid of erections that Emma had witnessed. Don was breathing hard but that probably had to do with him feeling dizzy from all the alcohol he had consumed. \n\nWell next time you might want to remember that alcohol overdose and sex don't mix. \n\n\"Any chance that you might want to reciprocate?\" said Emma and she pointed towards her rust colored bush. \n\nDon looked positively squeamish as his glance lingered over her pube-covered mound and pussy lips. \"But...there's so much...hair there!\" \n\n\"Relax big guy it won't bite you. Not all of us keep it juvenile down there.\" \n\nSheesh! Another one who believes women are like Barbie dolls... \n\nDon genuinely seemed queasy at the thought so Emma decided to take matters into her own hands. She pushed him down on the bed and fished a condom from her purse. \n\n\"What? You're going to use a rubber on me? I'm clean!\" \n\nThat's why you're gonna end up with an STD by the time you're twenty-three wise guy...but that's not going to be me! \n\n\"It's either the rubber or my hand, take your pick!\" \n\nDon was certainly not accustomed to being bossed about by girls and his alcohol impaired brain was in no condition to offer resistance in any case so he stayed silent as Emma rolled the latex on his shaft. Standing with her legs open above him she proceeded to lower herself towards her object of desire. With one hand she steadied his cock as she tried to sink it in. \n\nEmma steadied herself as she luxuriated in the feeling of having her vaginal walls slowly stretched as she descended. \n\nOh yes...finally...that feels nice...Could have been bigger...could have been harder...could have been thicker...but hey...we work with what we have here. \n\nPlacing her palms on his chest she begun to rhythmically pump her ass up and down his dick. It felt okay but Don really seemed out of it. He wasn't even using his hands to grab her ass and help her with the upward motion. Soon she was starting to perspire and her legs were beginning to burn. He sat there motionless and there was no clue he was anywhere near to cum. \n\n\"Are we...are we getting there?\" \n\n\"Yeah...it feels fine...you're really good!\" \n\nBut after five minutes of this Emma was thoroughly fed up. She dismounted and turning around she positioned herself in a sixty-nine position. \n\nPerhaps he might get a hint that way...hope dies last as they say. \n\nAfter removing the condom she proceeded to suck on his cock, hoping against hope that he'd reciprocate. And although the view of his muscular legs in front of her was quite pleasing to the eye, his completely inanimate posture was beginning to get on her nerves. \n\nUuuhhh...ahhhh...yaaaaawnnnn...this room could certainly use some redecoration...I mean look at these walls...these yearbook photos with all these frat members...sooooo boring...Speaking of boring...my arm is starting to get all sore. I wonder if he'll ever cum at this rate. Let's start taking bets ladies and gentlemen. 2 to 1 says that he's never going to cum, anyone wants to place a bet? ",
        "But after a while and after Emma had mercilessly pounded his dick with her hand a grunt escaped his mouth and a small, pitiful amount of drizzle escaped from his cock. \n\nHuzzah! Alleluia! Finally! My ticket out of here! \n\nImmediately after he had finished, Don went completely limp on the bed with his eyes closed. As Emma was putting her clothes back on she couldn't help but snort out a laugh as she heard his snoring. \n\nYeah and that about concludes this sorry affair. Well...you can't always be on the winning side now, can you? At least we can say that we scratched this itch and there are no regrets to be had, are there? \n\nChapter 6 (Abigail) \n\n\"Are you absolutely sure you're going through with this?\" \n\n\"Yeah...I've got to give her a second chance...I mean...she did say some spiteful things but maybe I was drunk and she probably had a bad day at the office. I'd like to give her the benefit of the doubt.\" \n\n\"Okay...I understand what you're saying there. Well...I wish you the best of luck and should you need anything Abigail...just know that I'm here for you no matter what. Our house is your house too should you need it.\" \n\nFor a lack of a proper reply, Abigail simply opened her arms and gave Aurelia a big hug. They stayed like that, in front of her door for a while until Abi finally disengaged. \"This...your words mean a lot to me you know...I owe you massively.\" \n\n\"Just get some luck going your way and we're even.\" \n\n\"Will do my best.\" \n\nAnd Abigail was off. It was a relatively pleasant autumn Saturday morning and already the streets were starting to pick up in traffic. Aurelia preferred to walk, rather than take the bus in order to use the time to properly arrange her thoughts. She'd try to give Alexa one last chance she reasoned. She was willing to scratch yesterday's unfortunate incident to work stress and bad timing from her part. Abi figured that they'd sit down, have an adult conversation about all the issues that they might have and together, try to rejuvenate their relationship. At the very least, if everything said or done failed to reconcile them, Abi hoped that they'd end this on a friendly note. Last evening's shouting match had really been depressing for her and she didn't want a repeat. As a token of good gesture, she stopped at a local doughnut shop that made Alexa's favorite caramel glazed variety and picked up a dozen. \n\nAfter a ten minute brisk walk she was at the outer staircase of their apartment building. \"Well, here goes nothing\" she said to herself mentally trying to prepare for the talk she was going to have. \"I mean, she did ask to see me and she did text me the when, didn't see?\" Sure the text had been formal, just like Alexa would have replied to a business associate, but then again one should never jump to conclusions from one's texts because it is not always easy to convey feelings through them. \n\nAs she was climbing the creaky old staircase leading to the top third floor she noticed a guy in overalls descending it. \"Locksmiths R'Us\" read the logo on his work clothes. Not paying any further attention she reached outside their apartment and pulled out her keys. Her key however would refuse to turn. That's when the thought hit her like a bucket of icy water: had Alexa changed the locks? This was certainly not a good omen and it certainly didn't spell success for their talk. \n\nJust then, the door swung open with a whoosh which nearly caused Abigail jump out of her skin with fright. After recovering from her startled response her vision refocused. And there she was, her girlfriend of two years wearing an unreadable mask on her face, neither angry nor happy to see her. \n\n\"Welcome\" was her neutral and cold introduction. \n\nAbigail was nearly sweating now with anxiety. This was not going well at all. \n\n\"I...I ummm...I brought you some doughnuts...ummm...they're your favorite...caramel glazed...\" \n\n\"Oh...How nice of you. Please leave them on the kitchen table.\" \n\n\"O...okay...Ummm...Did you have the locks changed?\" \n\nAlexa turned and gave her a cold, imperious look but didn't answer immediately. Instead she motioned towards a stool at one end of the kitchen isle: \"Please be seated.\" \n\n\"Alexa? Why did you change the locks?\" \n\n\"What's her name?\" \n\n\"Excuse me?\" \n\n\"Her name!\" \n\n\"What are you talking about?\" \n\n\"Do you think I'm a complete idiot? Very well...let's play this little game. Who is Emma Sorensen?\" \n\nAbigail's stomach started churning inside her. Suddenly her morning breakfast and cocoa weren't sitting too well. \n\nHow the fuck does she know that name? \n\n\"She...she's a student of mine.\" \n\n\"Do you usually add your students on your social media?\" \n\nShe's checked my Facebook page... \n\n\"Not usually, no. But I still don't get what your problem is.\" \n\n\"Under normal circumstances I wouldn't give a rat's ass. However it would seem that someone was trading relationship Q&amp;A with said student. Viewing bikini-clad images and so forth. And thus my original question still stands. Do you take me for a complete idiot?\" \n\nHow the hell does she know about all this? Think Abigail, think! Holy SHIT! The goddamned tablet! I left it on the sofa yesterday! Without closing the pages! The bitch must have gone through everything in there! The screen-lock code is a joke anyways... \n\n\"You went through my tablet...\" \n\n\"You're not answering my question.\" \n\n\"Leaving aside your extremely classy behavior of going through my things without me being present, my answer still stands. She's a student of mine whom I added on Facebook. Unless I'm much mistaken that's not a criminal offense now, is it?\" \n\nAlexa looked at her with a sardonic smirk on her face. \n\n\"You have thirty minutes to pack your things. A mover will be here at that time to assist you with the boxes. You will find empty boxes and tape next to your side of the bed. Anything left behind will be thrown away. Should you need me, I'll be in the kitchen.\" \n\nAbigail stared at her with her mouth open. \"Are you serious? You're ending this? You're kicking me out just like that? For what? You've got hundreds of women on your Facebook page, even past flings of yours and I've never said a thing! And suddenly now because I have a chat with a student of mine, I'm made to be what? An adulteress? A whore? Is that it? Or is it that you're bored and you're looking for a way out? Just say so Alexa, I'd appreciate an adult and straight answer. Just say it! Abigail, I don't like you anymore, we're through! But no! Alexa Vargas never asks, never discusses, and never pleads.\" \n\nAbigail was shouting now and those damned tears had made their appearance once more. \n\n\"You're wasting time. Like I said, I'll be here if you need me.\" \n\nThe goddamned bitch! She's throwing me out just like that! And I've got...shit! Twenty nine minutes to pack! And she'll keep her word too! Anything that is left behind is gone for good. She'll probably light a ceremonial fire and dance around it for good measure! I'm screwed! \n\nAbigail started frantically throwing stuff from her closets and bookshelves into the boxes. She wasn't taking any care into what was being thrown in, she just wanted to salvage as much as she could. The cardboard boxes were filthy second hand ones which had obviously seen heavy use before and were covered in dust and soot. She'd have to wash everything clean! In her panicked frenzy she was stuffing her underwear together with her books, there were just so many things to pack and so little time. \n\nPrecisely thirty minutes later the doorbell rang. The movers had showed up to take her things! \n\nShit! SHIT! SHIT! I haven't finished! I'm not done yet! This can't be happening! \n\nAbigail was a terrible mess! Her clothing was all smudged from handling those boxes and her face covered with a mix of tears, sweat and dust. Her hair had loosened from its ponytail but she didn't dare to fix it what with the filth which covered her hands. \n\n\"So where are these boxes that I'm to take?\" \n\n\"Right this way please.\" \n\nAlexa showed up together with the mover. \"There they are. Miss O'Donnell is going to be escorting them out.\" \n\n\"Right. Let's get started then. I'll begin with these here. Does anyone of these boxes require special care? Any fragile material?\" \n\nYou've said it! I don't even know which is which anymore and you're telling me about fragile material?\" \n\n\"Just take them. The sooner we get this over, the better.\" \n\nAbigail continued her frantic packing, hoping to clear as much of her stuff as possible in the time it took the mover to take the boxes down to the van. It was however, a losing battle and she knew it. She'd have to conduct a triage taking with her the absolute essentials. She focused on getting her clothes, her shoes, her books and reading material and her laptop. All the rest she assumed were lost forever. \n\nThe departure of the last box, signaled the end of this miserable affair. With ill hidden rage she unchained her copy of the apartment keys and slammed them on kitchen counter. \n\n\"Whatever it is you thought, you could have handled this with a little more class you know. You didn't need to be so damned cruel about it!\" \n\n\"Well I've arranged for the mover to come over didn't I? I mean, if I was really cruel I could have thrown all your stuff out without a word. What would you have said then?\" \n\n\"You know...there's one thing good coming out of this mess. It really showed me what a fake you really are! I've fallen but I'll manage to get back on my feet. I only pity the poor souls who'll fall prey to you after I'm gone.\" \n\n\"Yeah, yeah honey! There's many more from where you came from. Oh and Abigail? Please take these on your way out as well\" and she handed Abi the box of doughnuts she had brought in. \n\nAbigail took the box and without any further words swiftly exited the apartment. The place she had called home for the past thirteen months was no longer hers. But finding a new home and starting afresh was going to be the easy part. Throwing away the memories of a two year relationship, now that was definitely going to be a challenge. \n\nBut there were more pressing issues at hand. Once inside the mover's van there was the issue of where to deliver her stuff. Whipping out her cellphone Abigail dialed her friend and savior, Aurelia. \n\nPlease...please pick up! Please...If this guy dumps my stuff on some sidewalk I would probably die of embarrassment. \n\n\"Hi there Abi. So how did it go?\" \n\n\"Worse than tragic. Listen I'm once more in an incredibly tight spot. Alexa has thrown me out and I have my stuff in boxes. I'm in a mover's van and he's asking me where to deliver the boxes. Could I...ummmm...would it be possible...\" \n\n\"Sure! Bring them over! We have tons of space at the basement. We'll figure it out! Come on over and don't worry about it. I'll be waiting for you and I'll enlist Jer to help too!\" \n\n\"You're my guardian angel! What would I do without you?\" \n\nA few minutes later the van was pulling in Jer and Aurelia's driveway. \n\n\"This is it then Miss O'Donnell...and...that will be...\" \n\nThe bitch didn't even have the dignity of paying them. I should have guessed. \n\n\"...eighty five dollars.\" \n\nEighty five fucking dollars to have the privilege of having your stuff thrown out! Talk about adding salt to the wound! \n\nThe last thing Abigail wanted was to argue with the guy. Silently she fished for her wallet and handed her debit card to the mover. A few seconds later and her account had been swiped to the tune of eighty five dollars less. Just then Jeremy and Aurelia arrived on the scene. Abigail couldn't hold it any longer; once in Aurelia's embrace she burst into sorrowful tears. \n\n\"She...she...she threw me out on the street...just like that!\" \n\nAurelia shushed her and cradled her head just like a mother would to a distressed child. \"Just forget about it honey...you're okay and that's all that matters...we'll get you fixed in no time, this is nothing to worry about. Let's get you inside and Jer will handle all this. Don't you worry about anything...\" \n\nChapter 7 (Emma) \n\nAbigail was busily typing away on her keyboard, totally absorbed in what she was doing. A soft knock on her door reminded her that her office hours for students had arrived. Without looking up from her monitor she answered: \"Yes, come in.\" \n\nEmma stood on the outside of the door with her hand raised in mid-air ready to knock once more when she heard Abigail's voice from the other side prompting her to come inside. Hesitating for only an instant, she pressed the door knob and she discreetly peered inside. \n\nAbigail was sitting behind her desk, eyes glued on the monitor as she feverishly typed away. Unlike in their lecture earlier that day, now her beautiful facial features where framed by a pair of glasses. A stray strand of blonde hair had escaped from her ponytail and was dangling in front of her. For reasons totally unfathomable to her, Emma was drawn to her visage just like an insect is drawn to a lantern. She stood there, door open midway, her gaze completely lost within the blonde's beautifully tranquil blue eyes. Abigail looked up and saw her dazing at her. \n\nShe'll probably think I'm retarded or something...way to go Emma! \n\n\"Oh Emma, it's you! Do come in...here...have a seat!\" \n\nShe's definitely happy to see me...or...maybe she was working on something incredibly boring and is happy for the distraction... \n\n\"So...what can I do for you?\" \n\nFor me or to me? Christ...what's wrong with me! \n\nEmma's wayward thinking caused her to momentarily lapse into an awkward silence. When her consciousness finally registered what her brain had been scheming on she blushed and turned her head down. \n\nBlushing Emma? Really? You've got it bad girl! \n\n\"Are you alright? Can I get you something? A glass of water perhaps?\" \n\n\"No...no...I'm fine...I...I decided to stop by to...\" \n\nCome on...think! Why DID you come here for? \n\n\"...to...errr...have a look at your collection! Yes! Errr...your personal library as you mentioned last Friday.\" \n\n\"Oh...yes, yes...certainly. Of course! Well, it's not much to look at really, only this small collection behind my back. Please feel free to peruse them while I finish off my work here and then I'm at your disposal. Books are on the left, papers and journals are behind my back.\" \n\nEmma stood and pretended to have a look around; Abigail's office was honestly nothing more than an enlarged cabin. There was a single window which offered a nice view to the enclosed atrium, Abigail's desk with an out of date computer monitor sitting on it, a couple of chairs and six bookshelves on the wall behind her desk stacked with books and texts. \n\nThe fire-haired girl gave a cursory look at the book section and ostensibly focused her search on the publication section of her professor's library which also happened to be right behind her back. \n\nHmmmm...yes...Colin S. Gray on why is strategy difficult...Seems interesting...And if I wiggle my way a bit towards that paper... \n\nEmma's legging-clad behind brushed briefly with Abigail's swivel chair, causing her to reflexively move forward and turn the chair sideways. And that's when she realized that her face was inches away from one of the most spectacular pair of buttocks she had ever laid her eyes upon. Emma wore black leggings and a dark green hoodie which rode high upon her waist as her body stretched out to reach the higher shelf, leaving her cloth-covered derriere relatively exposed. The way the girl was situated, left extremely little to imagination. The fact that Abigail could make out the contours of the Emma's underwear caused an immediate swelling sensation in her nether region. \n\nSuddenly, whatever she had been typing on her computer became highly irrelevant. With Emma's scent overpowering her senses, the rational part of her brain decided to call it a day. \n\nRising from her chair she unsteadily offered: \"Here...let me help you with that...\" \n\nThey were dangerously close, was the last thing her mind managed to register. As they looked into each other's eyes, green stormy eyes into timid pools of blue, the distance between them started to close. \n\nWe're gonna kiss? Is this really happening? Is it okay to kiss your prof? Since when did you ever care if something was okay? Kiss her now and deal with the music later... \n\nThere was a magnetism between them which forced them both closer and closer. Both had their eyes open, Emma's dimmed with ill-conceived lust, Abigail's wide open with shock. But the pull was so strong and the distance so small that their kiss was as inexorable as the sun rising from the east. \n\nWhat started out as a gentle exploration between their lips quickly escalated into a passionate lip-lock. Hands were brought into the foray, with Abigail's resting on Emma's waistline and Emma's gently cupping her teacher's cheeks. It was a sensuous and passion-driven kiss which fed upon the inexplicably strong chemistry that they had for each other. \n\nGawwwdd...she's such an addictive kisser...I could do this all day! I wish her hands would go lower and...mmmmmmm...fuck, I haven't been this wet for ages! \n\nA knock on the door made both women nearly jump out of their skin in terror. Abigail's eyes were as large as saucepans with a mixture of fear and surprise in them. Emma's milky white cheeks had turned pinkish in hue and her lips where glistening with saliva. Abigail too felt and looked flustered by the incredibly passionate kiss they had shared only seconds ago. \n\nShit that was close! She looks totally gone though and I must look just as bad! Anyone with half a brain could guess what we did... \n\nQuickly, Emma made her way to the seat opposite Abigail's desk and sat down as if nothing had happened. Meanwhile Abigail, with a voice shaking from their previous explosive encounter answered the knock: \n\n\"Yes...come in.\" \n\nIt was Donovan Sherman, Emma's classmate. \n\nWhat is this ignorant lumberjack doing here? His timing seems to be just as lousy as his ability in the sack it would seem...Now, now Emma...no need to be such a bitch, he was drunk after all...but still...Gawwwddd...She's just so friggin' hot! And...and when she gives me that look I just want to storm over that desk and fill her cheeks with kisses and... \n\n\"Oh...ummm...sorry...I just had a couple of questions about today's lecture.\" \n\n\"I'll be with you in a minute, we're nearly finished. Please close the door behind you.\" \n\nTrue enough, the door closed to be followed by an uncomfortable silence in the room. \n\nWhat do I say now? Why are my cheeks feeling all hot and bothered? Why does my heart feel like it's about to leap out of my chest? And why do my lips still feel like they're burning? \n\nAbigail was sipping water from her glass, probably preparing to say something when Emma blurted: \"Would you like to go out for a coffee?\" \n\nAbigail nearly choked and water came running down her nostrils. Emma was on her feet having fished a packet of tissues from her backpack. \"Oh God...I'm so sorry...here let me help...\" \n\nAbigail nodded and took the offered tissue. \n\n\"Well, I'd better get going...\" \n\n\"No wait!\" \n\nEmma turned expectantly. More silence followed. Finally, Abigail managed a smile. \"I...ummm...I'd be happy to have a coffee with you.\" \n\nYESSSSSSSS!! \n\n\"Ummm...Good! Excellent! Errrr...there is this nice little place I know...it's not very far from the campus...perhaps...perhaps we could go there after you finish?\" \n\nI feel fourteen again! On my first date! What has the world come to I wonder... ",
        "\"Sure...errr...perhaps we should exchange phone numbers? So as...so as to contact you when I'm done that is.\" \n\n\"Oh okay! Yes!\" Emma tore a piece of paper from a notepad in her bag and quickly scribbled her mobile number on it. \"Here...you can call me whenever...\" \n\nAnd with that, Emma was off with a smile on her face and a spring in her stride. In fact her mind was so happily preoccupied with the thought of meeting Abigail again that she failed to notice the leering glance Donovan shot her as he waited to enter next. Had she looked back she would have noticed the borderline stalkerish look as he undressed her with her eyes. \n\nChapter 8 (Abigail) \n\nAbigail could hear blasting music in her ear piece as the phone picked up. \n\n\"Umm...hi...is that you Emma?\" \n\n\"That's me.\" \n\n\"Hi...it's Abigail...\" \n\n\"Ohhhhh! Failed to understand your voice over the phone. Umm...hold on...gimme a sec...\" said Emma as she pressed pause on the YouTube video playing on her monitor. \"...there...that should be better...\" \n\n\"...so yeah...I'm done for today and I was wondering if your coffee offer is still up for grabs?\" \n\n\"Ummm yeah, yeah, absolutely! Just gimme five minutes and I'll be...where do you want me to be?\" \n\nWith your mouth between my legs preferably! \n\nAbigail felt a tingle in the lower pit of her stomach as that particularly raunchy thought made a fleeting appearance before her eyes. \n\n\"Hello? Abigail? You still there?\" \n\n\"Errr...yes...yes...Errr...can we meet outside the faculty's main entrance hall in...say...ten minutes?\" \n\n\"Sure! I'll be there! See you in ten.\" \n\nAnd with that the connection ended. \n\nWhat the fuck is wrong with me? I'm behaving like a schoolgirl! Why do I think about this girl 24/7? Why, when I know that this spells nothing but trouble for me, do I want to jump into it with both feet? Maybe, Abigail, it's because you've always dotted your \"I's\" and crossed your \"T's\", that's why. Maybe it's time, just this once, to stop and smell the roses, don't you think? \n\nAbigail didn't have to wait long. Soon enough she felt a pair of warm palms plastered over her eyes. \n\n\"Guess who?\" \n\n\"Emma?\" \n\n\"Emma who?\" \n\nWith a swift move, Abigail made a hundred and eighty degrees spin on her heels with her face ending inches away from Emma's. \n\nTwo can play that game young lady...We're standing here in front of the faculty entrance and I don't give a fuck what anyone thinks, but I'm going to kiss you right now. \n\nAbigail embraced and kissed Emma softly on the lips and she could feel the red-head melt in her arms. \n\nI've never ever felt this way before with a woman...she's just makes my heart sing...not to mention other parts combusting... \n\nAfter their hungry first kiss they simultaneously pulled back a bit. Emma had her eyes still closed; a warm smile made her whole face radiate with happiness. \n\n\"That was really nice and much welcome...\" \n\nEmma giggled back in reply. \"So...where is that you'd like to go? For...our coffee that is...\" \n\nWell, if it were up to me I'd take you to my...where would I take you? I've got nowhere to stay at the moment...But I'd find somewhere...anywhere... \n\n\"Ummm...dunno...you choose...\" \n\n\"Kay...there is this quaint little coffee shop just off the campus. It's a quiet little place with large booths and old comfortable furniture...I think you'll find yourself right at home there.\" \n\n\"So...if I get this right...you find me bookish and comfortably old, just like an over-worn pair of sweatpants, is that it?\" \n\nAbigail's tone was definitely mocking and they broke into laughter. They were so into each other at that moment that they failed to notice a sleek black Mercedes Coupe parked on the opposite sidewalk. Had Abigail been more attentive she would have immediately noted that the car belonged to her notorious ex-girlfriend. A closer inspection would have revealed that someone was sitting behind the wheel. \n\nBut that was something that neither observed because at the moment they only had eyes for each other. For Abigail, holding Emma's hand and walking towards the coffee shop came so naturally to her as if she had known the redhead for years. It was the first time in some months now that she felt such happiness permeating through her very soul and that was a very welcome feeling for her. \n\nWithin a couple of minutes they were comfortably seated side by side on a worn, but lovingly maintained loveseat sofa. To their surprise they discovered that both of them were not into coffee; Abigail ordered a chocolate milkshake while Emma opted for a hot cocoa. As they sat there, Abigail's jean-clad thigh rubbing with Emma's legging covered one, they were visibly searching for something to say to break the silence between them. The chemistry was obviously there but they both knew next to nothing about each other. Abigail took the initiative and broke the deadlock first. \n\n\"So what do we call this? A date?\" \n\n\"We call it what we want to call it. We shouldn't put any labels on it. I would call it a get-to-know-you-better session if I had to...so...who is Abigail O'Donnell apart from being my IR theory professor?\" \n\n\"Well...Abigail is a very boring person I should say. Not much to know about. Classic sub-urban family, grew up in California. I have a younger sister but we don't see each other much as she's stayed over there whereas I moved to the east coast. I was always a straight A student. Always into books, not much fun, not much party. You may ask yourself how that is even possible when one lives in California but that's just how I was. Realized I was into females relatively early on in the game, came out to my parents when I was sixteen. They took it rather well, my dad better than my mom but she came around eventually. \n\nWon a scholarship to the Woodrow Wilson School of Public and International Affairs, finished first of my class. Continued on scholarship for my MA in International Relations at the University of Reading in the UK. Came back and did my PhD and well...they offered me a lectureship. I just couldn't say no and that's how I became the youngest female lecturer this department has ever had. \n\nSo that's me in a few lines for you...\" \n\n\"Yeah well the academics are all stellar but what about your personal life. You did mention coming out to your parents...so there must have been a reason for that...\" \n\n\"True. There was a reason. Her name was Viola, she was my first love.\" \n\n\"Was she just your first love or your first lover?\" asked Emma with a cheeky grin. \n\nAbigail visibly blushed as she recalled the memories. \"No...Viola...she was my first in all departments...\" \n\n\"And...?\" \n\nAbigail took a big gulp out of her milkshake. \"Despite what you may think of me, in reality I'm quite the introvert. I very rarely open myself up. I've never even had a chat with anyone as young as you. God that makes me sound so old doesn't it? I can't even contemplate what it is that we're doing together...But for some reason Emma, I don't know why...you happen to bring out in me things which I've never felt or done before...We sit here chatting and I'm opening my heart to you in ways which I've never done with anyone else... \n\nAnyways...yes Viola was my first lover as well. She was older than me and...well...experienced...and...\" Abigail could feel blood coloring her cheeks as she spoke. \n\n\"...and you did some wonderfully private first-time things which are no-one's business...But what about after her...I mean you're what? Your bio-page says you're twenty-eight going on to twenty-nine. No relationships? Nothing?\" \n\nFor a student you're exceedingly mature and foresighted, I'll give you that... \n\n\"I've been in a couple of long-term relationships, the latest of which ended dramatically six days ago...\" \n\n\"How long where you together?\" \n\n\"With Alexa...it had been twenty five months...\" \n\n\"So what happened?\" \n\nAbigail took a big huffing breath: \"Oh boy...where to begin...where to begin...\" \n\nWhere to begin and what do I tell you? \n\nEmma shot her a cheeky grin. \"Right from the beginning I suppose. I'm nothing but a giant ear at this moment.\" \n\nWhy is it that I melt like butter when you smile at me like that? \n\n\"Well...I met Alexa at a lesbian bar that I used to frequent back when I was single. Apparently she was the alpha female of the bar or something because as she entered there were all these aahs and oohs...I didn't pay her any attention, but then the first drink arrived. Followed by a tray of shots and so on...then we danced, it was quite provocative...we ended up in bed that night. Suffice to say that I had never ever done anything like that before, it's not my usual modus operandi. \n\nAfter a year I moved in with her, everything seemed like a fairytale. During the last six months however things started falling apart. We grew apart and the flame we had between us turned cold. There was an argument last week...something really trivial which turned outright nasty...she threw me and my stuff out...I'm currently couch-surfing with a friend...\" \n\n\"I'm so sorry to hear that...\" \n\n\"Yeah, well...the writing was on the wall, I just refused to see it. Sometimes a relationship may have died long ago but it continues on by sheer inertia. And then comes an awakening moment when you realize that you're actually living with a complete stranger. And just imagine how horrible things can get if, for example, children are involved or property or worse when things turn ugly...\" \n\n\"Well it was pretty low of her to throw you out on the street just like that...\" \n\n\"True and although she did say some incredibly hateful things and I lost quite a bit of my stuff, I'll live. Better that it happened now, than a few years later...just makes you think how little you know someone with whom you spent twenty-five intimate months of your life...But...enough about myself. What about you Emma? What's your story?\" \n\nNow that the spotlight has shifted upon her Emma became more somber as she obviously tried to phrase her thoughts. \n\n\"Well you obviously know about my family background, I've already told you about that part. We've always been east-coasters, well after my grandfather became involved with Kennedy that is. I was born and raised a New Yorker. I am the youngest from a family of three, I have an older brother and sister. My family is well-off; money has never been an issue. I'm a rather rebellious person if I dare say so myself. I tend to shoot first and ask questions later. \n\nNot to brag or anything but I'm here on a full academic scholarship. I wasn't always like that; during my early teens I was quite a handful. But...there was something which changed me...\" \n\nEmma fell silent and she visibly displayed signs of stress. Her green eyes, usually sparkling with energy and mischief where now reminiscent of an overcast lake. \n\nHmmmmm...an obviously painful memory...if I had to bet money on it, I'd say it was a love-related problem... \n\nAbigail reached out and clasped her hand over Emma's. The red-head visibly flinched at the contact but didn't pull away. Abigail looked at her with eyes filled with adoration and warm feelings. When Emma looked back, her face contorted and her eyes once again flashed...this time in warning! \n\n\"I don't need your sympathy okay? So quit looking at me as if I'm a lost puppy...\" \n\nWhere the hell did that come from? \n\n\"I...ummm...I'm sorry...I didn't mean...I...we can go if you want...\" \n\n\"No! Just...just give me a few moments...\" \n\nEmma took a sip from her chocolate attempting to gather her thoughts. \n\n\"...I've never told anyone about this...I don't know why I'm telling you, okay? I don't even know why since...\" \n\nSince what, little one? \n\nEmma was staring far away now. Tears were threatening to spill from those emerald eyes of hers. Abigail wanted nothing more than to hug and caress her ginger-haired companion but because of the previous outburst she stayed put. Apparently, Emma had a temper which was quick to show and Abigail didn't want to push the girl for answers just yet. \n\n\"...I was fifteen when I met her. I was running with a rough crowd back then...really stupid stuff...cocaine, Molly...shit like that...until Rhea came along. She was the exact opposite of me but somehow we had this connection together. She had the patience of a saint. She gradually pulled me up from the dark corner I had thrown myself in. I began to shape up. I quit the gangs and the drugs. My grades started improving. We were in love! We had eyes only for each other...except...except for her family. She was brought up in this conservative environment were dating another girl was deemed tantamount to heresy. \n\nFor two years we had managed to keep everything secret...or so we thought. We hadn't really done anything sexual, you know...just kissing...some petting over clothes. Then, on my seventeenth birthday...\" \n\nTears were now streaking down her face and those fierce eyes were now reduced to dull grey-green pools of rainwater. Taking a big fortifying breath and with a shaky voice, she went on: \"...on my seventeenth birthday, we were at Rhea's house...we were home alone, her parents were out for the night or something. Rhea had kept that a secret from me...when she opened the door, she practically ravaged me right there on the spot...we...we made love that night...we...we ended up...ended up sleeping naked...cuddled against each other...I don't know what happened...we just fell asleep...her parents came...caught as like that...all hell broke loose...she was transferred from our school...I don't know what they did to her but she never answered any of my texts, phone-calls, e-mails...I kept walking past her house, trying in vain to just catch a glimpse of her...then one day the house was put up for rent. They moved and it's just over three years since I last saw her...\" \n\nDear God! And I thought I had it bad with what happened between me and Alexa! This must have been pure hell on earth for her! \n\n\"...I...I sought solace with my old nemesis...I...umm...I tried partying...used substances...how I got away with it all you might ask. Parents weren't really there to be honest. I think they stay married more for appearances' sake than anything else. Money was never an issue...doesn't take much to fall for that shit. Then one night I really got wasted...as in comatose wasted...my friend Anastasia nursed me through it. I never told her the exact details of what had happened but she might have figured it out on her own. When I came back to my senses I vowed never to touch that shit ever again in my life. Rhea...Rhea wouldn't have liked it...so...I cleaned up my act, studied like a madman and...here I am...in large part because of her...\" \n\n\"And you did and are doing brilliantly if you don't mind me saying so. There is...errr...there is a final question I'd like to ask...actually...\" \n\nAbigail's fiddling about caused the red-head's mood to lighten a bit. Leaving behind her previously downcast mood she sat upright and stared back at her blue eyed professor, some of the fire having returned to her green eyes. \n\n\"...actually...it's two questions...errr...\" \n\n\"You're actually blushing!\" \n\n\"And you're not making this any easier...anyways...I was looking at some of your Facebook pictures...eeerrrmmm...and I must say that you're gorgeous looking, especially with a bikini, but that's not the point. I mean, it's true that you're smashing but...Oh fuck it! The thing is I saw an image of yours kissing with a boy...so...question 1a would be, are you...you know...bisexual? And...question 1b would be...why me?\" \n\nEmma actually smiled this time, that wonderfully shiny smile of hers which could melt granite. \n\nAnd when you do that I feel a million of butterflies doing the salsa in my stomach... \n\n\"1b is easy to answer...because I like you! There is no why about it. There is no rationality in one's feelings. The first time I felt it was in the classroom...and I know you felt it too...there's something there which I haven't felt since Rhea. As for 1a...I wouldn't want to put labels on me, I detest them...I'm no virgin but I guess you've already figured that out. I've been with boys and girls alike. I enjoy no-strings-attached sex but you also know about that too...If I was forced at gunpoint to choose I'd say girls do it better for me...Your best answer to 1a though would be that should a relationship come up for me, I would be attached to the personality and not to the gender...oh...and another thing?...because I've heard so much bullshit about it...when I'm dating someone...I'm with him or her, period. When I'm having sex for fun, I'm having sex for fun. I don't like to lead anyone on about anything...\" \n\nSo how do we proceed from here, my fiery haired beauty? \n\nSilence befell as Abigail stared into Emma's eyes. \"So how do we proceed from here?\" said Abigail in a whispery tone as the distance between them started to close. \"Just...kiss me Abigail...we've worried and talked too much already.\" \n\nAbigail closed her eyes, feeling Emma's nose slide between hers. Her slightly parted lips felt the warmth of the red-head's cocoa covered ones as they sought her own. \n\nGod her lips are dope! Mmmmmmm... \n\nAbigail felt Emma's tongue invade her mouth. Soon it was a playful battle where each of them tried to get the upper hand. Abigail cupped the younger girl's face with her hands as Emma hissed sharply from her nose. \n\nShe just tastes like fucking nectar! She's fucking made me wet! If I don't stop now I don't know what will stop me from ripping her clothes apart and eating her whole...But what an amazing feeling this is... \n\n\"Emma...honey...we...we'd better stop...or else...I...wont' be able to.\" \n\n\"Then why stop?\" The ginger haired girl gave her a playful smirk. \n\n\"Because I have feelings for you which I'd like to explore further...Listen...why don't I walk you to your dorm and we can discuss further outside?\" \n\n\"Okay!\" \n\nDon't smile like that! No...okay smile, I like your smile, it makes me wanna dance! Oh boy...Abigail...shit girl...you've got it really bad! Like...really fucking bad. So much for wanting to take it slow and exploring feelings...yeah right...as if feelings are the only thing you want to explore here. \n\nAs they walked side by side, hands being held and hips occasionally rubbing together, Abigail felt happy and content, the best she had been for a long-long while now. \n\n\"Listen Emma...I've been thinking...I'd really like to see you again if that's okay with you. And...since I'm homeless and you share a room? Yeah, I thought so...well anyways...I thought we could go on a formal date. Two formal dates to be precise. One which I'll choose the venue and another where you'll call the shots. How does that sound?\" \n\n\"We can choose anything we like? Anything-anything?\" \n\n\"Within reason...and I don't really like your sly smile right now...\" \n\n\"Why wouldn't you like my smile sweet Abi? I would choose something truly innocent, I promise.\" said Emma in a mock cutesy voice. \n\n\"Truly innocent? Okay now I'm worried.\" \n\n\"Why don't we choose now? You can go first if you like.\" \n\n\"Hmmmmm...okay...okay...AHA! Lightbulb moment! Okay, here's the thing. There is a place I'd like us to go to. Can you do tomorrow?\" \n\n\"Sure! I've got nothing planned. What do you have in mind?\" \n\n\"Can't tell you that. Formal attire will be required though...AND...and before you raise your hands up in disgust...it's going to be worth your time I promise! You'll just have to wear a dress...\" \n\n\"Abi...I don't have a dress...I haven't worn one since I was, I dunno, five maybe? And that dress probably had princess Jasmine on it too!\" ",
        "\"How about I buy you one? I'll buy you one! And matching shoes. I'll come and pick you up in the morning!\" \n\n\"You definitely seem excited about this. Can't very well say no to you can I? Which means that you'll be more accommodating for my day out then. Okay! Deal! You'll show me your serious, professor-like world and I'll show you how girls my age party.\" \n\nBefore they knew it, they had reached the entrance of Emma's dorm. Abigail unclasped her had from Emma's as the red-head turned to face her. \"I've had a wonderful time with you, Abi.\" \n\n\"The feeling is mutual kiddo. And I'm very much looking forward to tomorrow and...\" \n\nBefore Abigail could complete her sentence, Emma swooped in and smacked her lips on hers. Abigail responded, her mouth opened once more and her tongue joined Emma's as they shared yet another toe-curling kiss. This time, Emma was bolder and sent her hands south of Abigail's jean clad waist. The blonde felt herself softly moaning inside her younger lover's mouth as the feeling intensified tenfold for her. They were on the sidewalk outside the entrance of a bustling undergrad dormitory, they were bound to be seen, perhaps even by a student of hers. But Abigail didn't care. She was so lost in this wonderful feeling that she couldn't care even if a bomb went off right next to her. \n\nAnd just as their kissing had started it ended, with both of them panting for air. \"You'd better go now or else I'll drag you upstairs...\" said Emma in a husky voice. \n\nIf I had a place of my own you'd be dead right now missy! You may think I'm bookish but I'm sure I have a trick or two to show you. But that will have to wait. All good things come to those who have patience as they say. Let me just give you something to think about until tomorrow though... \n\nAbigail looked at the red-head with a twinkle in her eye. With a lightning-fast move she grabbed the girl's hands, twisted her in a ballerina-like move which ended with Emma slamming her ass on Abigail's crotch, with the blonde holding the red-head's arms crisscrossed over her chest. Abigail bent and provocatively whispered in her student's ear, slowly hissing out each word. \"Just so you know that I'm not all work and no play...and a little something to keep you safely tucked in for the night.\" \n\nAbigail applied the slightest of suction upon the girl's neck as she delicately feasted on it. Emma squirmed and sashayed her behind upon Abi's crotch sending pleasure waves up and down her spine. Finally, Abigail released their hands and Emma spun free. \n\n\"You're...you're so naughty Abi!\" \n\n\"Appearances can always be deceptive now, can't they?\" \n\nThey locked eyes briefly once more until Emma blew Abigail a kiss, spun on her heels and headed towards the entrance of her building on a light trot. \n\nAbigail started walking towards the department's parking lot with a huge smile on her face. Oh and occasionally she would click her heels in the air... \n\nYeah and that about sums it up...Could life be any better? \n\nChapter 9 (Emma) \n\nMan that was sooooo hot! I need to cum, like yesterday! God, I hope Chloe isn't in...I just need some \"alone\" time. Just five fucking minutes is all I ask for, honest. \n\nEmma raced up the stairs feeling a combination of elation and extreme hornyness. Her panties felt damp and clingy over her swollen lips. She needed to do something about her predicament like really fast. It was just one of those moments, were sexual relief is an absolute must. She had been on and off wet as they traded kisses with Abigail during the evening, but what her blonde professor had pulled off in the end had, literally, burst the floodgates down below. \n\nAll she needed was a quick fix, nothing more. But to her dismay she could hear music floating from inside their room. Chloe, her roommate must be there. Checking her mobile before entering - they had an agreement of texting each other if there was company involved - she found no messages and turned the key. \n\nTrue enough, Chloe was there dressed in her neat sky blue pajamas sitting cross-legged on her bed. Her laptop was playing some soft instrumental music as she sat there with book and pencil in hand. Chloe was the exact opposite of Emma; were the red-head was rebellious, spontaneous and quick to anger, Chloe was structured, neat and non-confrontational. Although she wasn't what you would call a \"head-turner\" she was pretty in the girl-next-door kind of way. When they were first assigned together Emma had thought that their different styles would cause an inevitable clash between them but Chloe, armed with the patience of a saint it would seem, quickly won her over. In the end, the brunette haired girl with the easy smile had become a friend and a confidant. \n\n\"Oh hi there Em...\" \n\n\"Hey Chloe.\" \n\n\"So how did your date go?\" \n\nAm I that transparent? Does she read minds now? \n\n\"What date?\" \n\n\"The one you left for whirling around the room like a typhoon looking for what to wear?\" \n\n\"Chloe you full well know that I don't do dates. I was out with a friend and I had forgotten about the time, that's why you saw me flying about.\" \n\n\"Okaaaayy...If you say so Em...So how was your non-date with your friend?\" said Chloe, book forgotten, smile on her face and a twinkle in her eye. \n\nJesus Christ Chloe! There's no escaping you is there? \n\n\"You won't be letting this go, will you?\" \n\n\"Nope. So you might as well spill now to avoid the usual...you know...torture chambers, whips, hand-cuffs...\" \n\n\"Well if it was just that I might actually indulge...A little roleplaying never hurt anyone.\" \n\n\"You're typically stalling...\" \n\nEmma had a face palm moment. Collapsing on her bed, clothes and shoes typically still on, she stared towards the ceiling. \n\n\"Chloe if you utter to anyone a word of what I'm going to tell you, you're as good as dead...\" \n\nInstead of an answer Chloe scooted towards Emma's bed. \"Move those long limbs of yours...And for crying out loud...take off those shoes! Here...let me do that...\" \n\nEmma protested feebly but let her roommate take off her shoes. \"Chloeeeeee! But they're on the bedpost! They're not in contact with the sheets.\" \n\n\"Uuuggghhh!! You're such a slob! And those clothes! You're gonna be sleeping in those sheets! You've been wearing those outside!\" \n\n\"What? You want to undress me now as well? Perhaps I should do this more often.\" \n\n\"Oh shut up you slut. You're not turning me to the Dark Side...yet...\" \n\n\"Anything you wish to tell me there Chloe? Because if you want to play both sides, I could give you these great pointers and...\" \n\n\"Oh no you don't! You're not getting away that easily! You were saying something about that non-date?\" \n\n\"Ah yes...Chloe Zimmerman ladies and gentlemen...The delicacy of a lily and the tenacity of a bulldog...Okay you smartass...you win...It was a date...sort of...at least I think it was...\" \n\n\"Okay...and? I need some details here, you've got to give me something to work with.\" \n\n\"Well...it's a she and she's older than me...almost seven years older. She's really smart and has this light blonde hair and...\" \n\n\"...you do realize how you sound, right?\" \n\n\"Shut up Chloe! Anyways she has these lovely baby blue eyes and those lips and...Whenever we kiss...Gawwwddd...\" \n\n\"Em?\" \n\n\"Yeap?\" \n\n\"You've got it bad girl...\" \n\n\"Oh Chloe...it's been so long...so long since I last felt this way...\" \n\nChloe playfully tussled her roommate's hair and stood. \"You're a big softie deep down below, you realize that, don't you? I'm so happy for you Em and I hope this pans out the way you want it to.\" \n\nOh God yes Chloe, you can't even begin to imagine how much I need this...speaking of which...I've got to change panties...AND...I need a shower. Chloe would probably freak out if I schlicked beneath the covers... \n\nJust then Emma's smartphone started chirping: there was an incoming message for her. It was from Abigail: \n\n&gt;Pick u up at 10 tomorrow? \n\nEmma started texting her reply. \"Tell her I love her too Em.\" \n\n\"What? How do you know it's her?\" \n\n\"Your smile has nearly reached your ears girl.\" \n\n&gt;Can't wait! XOXOXO \n\n\"I think I'm gonna take a shower and get some early zee's for tonight.\" \n\n\"Use the last stall on the left row. It has the best showerhead. At least it works for me.\" \n\nEmma looked at her, confused at first, as red as her hair when her mind made the connection. Chloe was nearly in tears from laughing by now. \n\n\"Are you some kind of a psychic Chloe?\" \n\n\"Well duuh! You had a shower like in the morning? I may not be as brilliant as you are but I've got my moments too you know...have fun!\" \n\nMight as well put a neon light on my head while I'm at it! \n\nEmma proceeded to gather her shower kit and stripped down to her underwear. \n\nNo wonder Chloe could see right through me. I can practically smell the stuff as it is... \n\nThe redhead wore her bathrobe and headed down the hall towards the showers. The last stall on the left was unoccupied; as a matter of fact the room seemed quite deserted which suited Emma just fine. She needed her release without any further distractions. \n\nOnce inside, Emma disrobed and started the shower. Hot steaming water started cascading on her head and shoulders as she closed her eyes and felt a warm tingle course through her entire body. Her skin broke into goosebumps and her nipples hardened almost to a painful degree. With a mind of its own, her right hand made its way were she needed it the most. Her fingers made contact with her swollen clit forcing a sharp hiss of pleasure to escape her lips. \n\nWith her eyes already closed and her hand furiously rubbing away her imagination went wild... \n\nThe candle lit room featured a large polished dining table on it. A red-headed naked girl was half on it, hands strapped with leather harnesses on either side, breasts mashed on the cold wood, ass jutting in the air and legs spread open. The girl wore blood-red stiletto heels which showcased her long, alabaster legs in all their brilliance. Her opulent, spherical globes where parted and between them one could see fire-colored pubes glistening with her juices. \n\nOut of thin air it would seem, a hand appeared...a female hand. Its owner was shrouded in mist and the image was hazy. The hand approached with a steady pace towards the red-head's protruding ass. It inexorably crept closer and without any further warning, two fingers deliciously sank in her sopping wet pussy. She could feel the thumb circularly massaging her clit while other fingers applied circular pressure on her puckered hole. \n\nThe red-head begun writhing in pleasure, thrusting her ass back in tandem with the fingers plunging inside her. Her head rested now flat on her cheek on the polished wood, her red flame-like hair sprawled over her face. Her breasts painfully rubbed against the table surface as the invisible owner of those hands gave her quite a thrusting. Her calves and thighs were trembling with effort as she rammed her ass again and again against her maddening assaulter. Her whole being seemed to be boiling with desire as her body marched with a steady pace towards a colossal release. \n\nAnd then, as she felt her pleasure reach unbeknown new zeniths, her back arched off the table, her hands violently straining against her leather harnesses. As she flailed her head back, she saw: the owner of the hands ravaging her pussy and asshole was Abigail... \n\n\"ABIGAILLLLLL...FUUUUUUUCKKK!!\" was Emma's hollering announcement of her orgasm as it hit her like a ton of bricks. The red-head saw stars as pulse after pulse spread from her throbbing genitals throughout her body. Her legs buckled under her weight and she slowly slid down towards the tiled floor, hot water pouring over her wasted body. \n\nShe sat there panting, as if she had ran at full tilt. She felt completely wasted and thoroughly relaxed at the same time. Her vagina was still pleasurably tingling as she idly massaged the folds of her lips with her fingers. \n\nOH MY FUCKING GOD! OH-MY-FUCKING-GOD!! Now THAT! THAT WAS AN ORGASM WITH A CAPITAL \"O\"...Boy...if I cum this hard just by thinking of her...Fucking hell...Boy did I need that... \n\nStanding upright on shaky legs she proceeded to soap herself clean. Her mind was still so saturated with endorphins that she failed to register a small go-pro camera perched on top of the cubicle's dividing wall. Had she been more cognizant of her environment during her fantasy driven self-love session she might have heard the door to the stall next to her open and close. In fact, as she happily lathered away, a mere two feet next to her was a raven haired girl, control monitor in one hand, stick-mounted camera on the other. \n\nChapter 10 (Abigail) \n\n\"Earth calling Abigail?\" \n\n\"What? Oh? Sorry...got lost there...\" \n\n\"You've been lost ever since we sat down for breakfast Abi...and your face has the perpetual grin of the Mona Lisa. Is there something you should be telling aunt Aurelia?\" \n\nAbigail, having been caught daydreaming, felt her cheeks reddening. \"Am I that obvious Aurelia?\" \n\n\"Well let's see: you have that grin on your face which nothing will wipe off, you're daydreaming and I have to call your name a couple of times before you respond. Seems to me someone has been struck by a love arrow. So what gives?\" \n\n\"Oh Aurelia! I can't even begin to describe what's happening to me! I've never ever been this way before! It feels like Viola, only ten times stronger in my heart! I...I think of her constantly...I want to do so many things with her! I can't...I've never been so heads over heals for someone.\" \n\n\"So, it would seem that love is in the air then...Do I know her?\" \n\nAbigail hesitated for a moment, suddenly guarded and anxious about what to say. \n\nShit...what do I say now? She's the department's undergrad secretary for crying out loud! If I tell a name she'll know...If I come up with something fake or stall...she'll know! And she doesn't deserve that...She's been so supportive and such an awesome friend...Well...let's go ahead and drop the bombshell... \n\n\"You probably do Aurelia...ermm...I'm...she's...Her name is Emma Sorensen...it's the redhead from our senior undergrads...\" \n\n\"What?\" Aurelia said laughingly. \"Abigail! You're dating a student?\" \n\n\"God...yes...please don't kill me! Please don't say anything!\" \n\nAurelia fell silent as she studied Abigail. \"You really love her...\" was more of a statement than anything else. \"Oh boy...Abigail! If wind of this gets out you might be in for a shitload of trouble, you realize that don't you?\" \n\nAbigail exhaled loudly at that. \"God Aurelia...I don't know what to do! Half the time I spend in complete terror of what it is that I'm doing. The other half...I can't stop daydreaming of her. Just when I think that my rational part of my brain has managed to put a lid on this thing, all it takes is one glance in her eyes to spread my resolve to the four winds. I just can't explain it...I'm scared shitless that if this gets out the wrong way I'm toast...but on the other hand...we have a date in an hour and I can't stop thinking of her...I've always been so prim and proper and she makes me feel alive in a way no other girl has ever done for me... I don't even know what I'm talking about now...Do I make any sense? Does this make any sense to you?\" \n\n\"Honey, you can't help who you fall in love with! It's just like trying to control a tsunami! There's nothing you can do about that! I just want you to be extra-careful because she's young and because there is a tutor-student relationship between you. Even if you have the cool head to keep it professional when you have to, she might not have the same prescience. I'm really happy for you; just be careful love, is all I'm saying. I'd hate to see your heart broken so soon after that sordid affair you had.\" \n\nAbigail sprung from her seat and gave a bear hug to her friend. \"Oh Aurelia! I'm so happy you understand this! Just so happy!\" \n\n\"I'm happy for you too hon...and she's a pretty one too, if I remember her face correctly.\" \n\n\"Oh soot! What's the time?\" \n\n\"Twenty to ten, why?\" \n\n\"Gotta rush! I've got to pick her up in twenty! Big day today! Don't wait up for me for lunch, supper, whatever...\" \n\n\"Ohhhh dear...Just look at you! And what, may I ask, do you have in store for her?\" \n\n\"Something from my world! We're going to tango tonight!\" \n\nA few minutes later a cherry red Nissan Juke parked right in front of the redhead. Abigail kicked the driver's door open and rushed towards Emma. Their eyes met; once again there was this irresistible pull. Abigail's vision tunneled into Emma. The surrounding scenery vanished into irrelevancy. Emma smiled. They embraced. Their faces were inches apart. Emma's smile widened. \n\nYour smile...your eyes...they're just like a snake charmer's flute. Your scent is like a drug...I want to kiss you...I will kiss you in front of your dorm on a busy Saturday morning... \n\nTheir lips met and parted. Abigail's eyes closed as she felt Emma's tongue darting inside her mouth. \n\nGod that feels sublime... \n\nA loud catcall whistle broke their trance. Abigail turned into a fine shade of crimson while Emma's eyes flashed with anger. She raised her hand probably getting ready to give the bird to their offender, but Abigail gently grabbed her arm and whispered to her. \"Baby girl, it's not worth it. Let's not ruin our day because of some jerk-off.\" \n\nEmma's features immediately softened, the thunderclouds having evaporated from her eyes. \"Awwww...how sweet!\" \n\n\"What?\" \n\n\"You called me...baby girl!\" \n\n\"Oh...ummm...yes I did...errrr...\" \n\n\"I liked it Abi, relax...\" \n\n\"Oh...ummm...okay!\" \n\n\"I can have my girlie moments too you know...\" \n\n\"Well, that's good to know...because those girlie moments are going to be in demand for the rest of the day.\" \n\n\"Which reminds me...where are we going? You've mentioned about spending the day together in your text but you didn't mention how.\" \n\n\"Let's just get going and I'll reveal my plans part by part. Remember, today is my day. On your day you get your turn of fun. Just promise me to keep an open mind and everything shall be fine. \n\nThey made their way inside the red Juke. Once there, Emma rested her arm on Abigail's thigh which earned the redhead a warm smile of approval. \n\n\"So what's in store for me then?\" \n\n\"Store is just the proper word for the occasion. We're going to start by going to the Golden Hall. There's some shopping that needs to be done.\" \n\n\"Oh?\" \n\n\"Well, you're going to need a dress later in the day so I thought I'd buy you one.\" \n\n\"A dress? Seriously? Haven't worn one since I was...? Nine? Horrible thing full of yucky flowers. My mom made me wear it. Along with horrible sequin strap shoes. Ughhh...\" \n\n\"Well, what I have in mind is certainly not floral...and no sequin shoes will be involved. I think you're going to find the end result to your liking.\" \n\nEmma had a skeptical look on her face, but Abigail's wide grin on her face soon had her at ease. \n\nWithin half an hour they had parked the car and were headed towards their first shopping destination. Dandolo's had a fine collection of dresses and Abigail made a beeline for it with Emma in tow. \n\nThey were soon greeted by a saleswoman. \"Can I help you?\" \n\n\"Umm...yes...we're looking for a dress for this young lady here. A tango dress to be precise.\" \n\n\"Certainly, follow me. I should think a size six should do the trick.\" \n\n\"Err...Abigail? What's a tango dress?\" Emma whispered. \n\n\"You'll see. I think you'll like it.\" \n\n\"Now, would you like this for a formal milonga or perhaps something more casual?\" "
    ],
    "authorname": "VF_0079",
    "tags": [
        "lesbian romance",
        "bisexual female",
        "cunnilingus",
        "redhead",
        "student",
        "teacher",
        "college",
        "lesbian",
        "lesbian sex",
        "bisexual"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-three-traditions-of-pink"
}