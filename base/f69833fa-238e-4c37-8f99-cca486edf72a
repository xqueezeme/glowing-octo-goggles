{
    "title": "Play Ball",
    "pages": [
        "The last time I visited home, I passed the old sandlot. There is a house there now, but I could not help but visualise our old chicken-wire backstop, crude frisbee bases, and the pile of dirt we called a pitcher's mound. When the weather was good, all the boys in the neighbourhood (and sometimes the girls, too) would spend their afternoons playing ball on that vacant lot. \n\nAs I drove by, I watched the new homeowner start up his John Deere lawn mower and ride around the lot like my dad used to do so we could play ball. I also noticed, with some astonishment, that the old oak tree on the corner still stood, and my thoughts drifted back to Pete Bradford, who used to sit beneath that tree and watch the rest of us play. \n\nGrowing up, we were like most other kids. We were loud, rambunctious, and always in trouble for getting our good clothes dirty. We also loved sports. Baseball was my favourite, probably because my Dad also loved the game. I could rattle off pro players' stats faster than a Texas auctioneer, and I never passed up a chance to play. Most of the other kids shared the same passion for the game, and we usually had enough people to field two full teams.\n\nPete Bradford moved into the neighbourhood in the summer of '83. It was a good summer: Reaganomics seemed to be working, I got a raise in my allowance, and The A-Team was in its prime. Best of all, the pick-up teams I was on usually won. \n\nEvery day, we'd gather on the vacant lot, choose teams, and play until our mothers called us home for dinner. And every day, Pete would sit in the shadow of that old oak tree while the rest of us ran the bases.\n\nI never got to know Pete well. He and his mother moved in a week after summer vacation began, and they moved out just after school started again in the fall. Pete was the kind of kid who never quite fit in, and he knew it. We didn't actually exclude him; he just never asked to play, and we never invited him.\n\nOne day, towards the end of that summer, our team was losing. I was a team captain that day, and I felt the impending defeat especially hard. It was the top of the ninth, and the other team was up to bat. Two men were on, two outs, and we were down by one.\n\nDanny Blevins was pitching; he was the best on the block and had been my first pick as captain. It had been a long day for Danny; he'd thrown a bunch of strikes, but we could tell he was getting tired. Unfortunately, Jeff Maxwell was up to bat. Jeff was the best all-round athlete on the block and he eventually went to Florida State on a football scholarship. I groaned as Jeff stepped up to the plate, imagining the other team's lead growing by three more runs.\n\nAmidst the ballfield chatter, Danny hurled a sizzling fastball towards the plate. Jeff swung, and with a crack! hit the ball in a low, hard line-drive. Time seemed to stop, and everyone moved in slow motion. In horror, I watched the ball strike Danny in the chest. He doubled over and collapsed onto his knees.\n\nI dropped my glove and ran in from my position at shortstop. I was the first to reach Danny, and I noticed that the ball had fallen into one of his hands. I jabbed my finger at Jeff, \"He caught it! You're out!\"\n\nAt that point, Danny groaned. His eyes rolled up into his head, and he fell over onto his side. He was unconscious, but he'd saved the inning. \n\n\"Uh, Dave,\" Chris Kessler, my first baseman, pointed frantically at Danny, \"I don't think he's breathing.\"\n\nBeing ten years old and not knowing the first thing about emergency treatment, I did what any other kid would have done: I started screaming. I pointed at Chris and yelled, \"Go get Danny's Mom!\"\n\nChris took off at a panicked run as the rest of us gathered around. Danny was breathing...slowly. His mother arrived just as he regained consciousness. She scolded him to be more careful and made him leave early for dinner. She told us that the afternoon was almost over and that we should be going home ourselves. Boys being boys, we had other ideas; as they say, \"The game must go on.\"\n\nHowever, we soon ran into a snag. Jason McGibbon, the other team captain and my best friend, said that we needed to find someone else to fill Danny's place in the batting order. I told him that we'd just skip over him to the next batter. There was a loud disagreement as our makeshift Rules Committee convened on the pitcher's mound.\n\nTo this day, I cannot remember why we decided what we did, but I'm convinced that Jason just wanted an excuse to make us forfeit because Danny's injury left us one player short. The consensus was that we'd have to find a new player or concede (of course, the vote went against our team; with Danny gone, they had one more player than we did). Ideas raced through my head as my eyes fell on to the old oak tree by the third base line.\n\n\"Hey, Pete!\" I called, \"You wanna play?\"\n\nWith a mixture of astonishment and excitement, Pete struggled to his feet as best he could. \"You really mean it?\"\n\n\"Yeah,\" I replied, \"You're up third.\"\n\nWe changed sides, and I hoped desperately that Pete wouldn't have to bat. After all, we just needed two runs to win. \n\nRhett Brogan was up first; he was no Babe Ruth, but he made for a fair batter. Rhett let the first pitch go by. Strike. He swung on the second one and launched a short line-drive into right field. Single.\n\nScott Parks was up next. He stepped up to the plate and glared at the other pitcher. Scott was the nicest guy in the world, but he wasn't all that bright. His lack of thought in class extended to the ballfield. He used to swing at everything, including the awful first pitch he got that day. The ball popped up and was caught by Jeff at shortstop. One out.\n\nI sighed and turned to Pete. He was grinning from ear to ear. As he hefted a bat, I said, \"You just need a hit. Once you get on, we'll put a pinch-runner in.\"\n\nHe just nodded and hobbled out to home plate. Nobody said a word, and even the usual chatter fell silent. Pete stepped into the batter's box and set his legs in a wide stance. Bending over, he locked the knees on his leg braces and began to swing his arms in wide circles. I thought for sure he'd fall, but he was just testing his balance to make sure the swing wouldn't topple him.\n\nStill grinning, Pete nodded to the catcher, who sent a signal to the pitcher, Derek Henderson. Derek wound up and threw the ball. It was a slow pitch; the ball lazily sailed across the plate, a clear strike. Derek got the ball back and went to wind up again.\n\n\"Hey!\" Pete shouted, \"You wouldn't pitch that way to Danny! Give me a real fastball!\"\n\nDerek paused, looking confused. His eyes drifted to me, then to Pete, and then back to me. He seemed hesitant, but didn't say a word. I just shook my head, not sure of what to do. Shrugging, Derek wound up and unleashed his fastball. Pete swung and missed; he must have misjudged his swing because he dropped the bat and began flailing his arms about wildly. The catcher caught him and set him upright again.\n\nUndaunted, Pete choked up on the bat and waited for the next pitch. Derek launched another fastball and Pete swung. The crack! of a hit shocked us all. The ball grounded past the pitcher's mound, between the shortstop and second base, and rolled into the outfield.\n\nNot expecting a hit, Rhett was caught flat-footed and began his run to second base late. John Whitaker came in from centerfield, scooped up the ball, and flipped it to Keith Washington at second in time to force Rhett out. All our eyes turned to Pete, who was running towards first base as fast as his crippled legs would take him.\n\nFor the second time that day, the life passed in slow motion. Pete was half-way to first when Rhett slid into second. We all stood and began screaming. Keith threw the ball to force Pete out at first. Chad Pullen slid over to cover the base. For the briefest second, it looked like he might make it.\n\n\"Go! Go! Go!\" I shouted. The throw was late and Pete needed just four more steps.\n\nMy heart skipped a beat when I saw Pete fall. One of his braces collapsed and Pete landed in the dirt, a foot shy of the base. With a sharp slap! Chad's glove caught the throw and Pete was out in a double-play.\n\nThe other team celebrated while we did the losers' duty and cleaned up the lot. Everyone began to head home; most of us were already late and we didn't want to be in any more trouble. As I mounted my bike, I saw Pete still sitting in the dirt next to his broken leg braces. His mother must have seen what had happened because she was already out the door and on the way over. \n\nI rode up to him and asked if he needed any help. He shook his head and just grinned. I've never seen such a joyous smile since, nor have I heard laughter as elated as the day Pete Bradford fell in the dirt along the first base line.\n\nI remember asking him, \"Why are you smiling? We lost.\"\n\n\"I know,\" he replied softly, \"But I played.\""
    ],
    "authorname": "HLD",
    "tags": [
        "baseball"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/play-ball-1"
}