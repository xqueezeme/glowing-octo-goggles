{
    "title": "Amy's Art",
    "pages": [
        "\"Thanks for all the help you guys,\" Amy said as the last of her friends got in their cars and drove off down the long gravel driveway, leaving her alone for the first time in her new surroundings. It had been a long day of carrying boxes and moving furniture, her new house feeling ever-so-slightly like home now that her things were in it. After walking around to survey the situation she sat on the front steps and soaked in the quiet. Birds chirped in the ancient, overgrown apple orchard that was now her front yard, and the view from her porch of Grambo Lake down in the valley thrilled her just as it had when the real estate agent first drove her up to see the place.\n\nThe property had most recently been a 'gentleman's farm,' owned by a wealthy businessman. He had let the old apple orchard go back to nature, but he kept horses, a cow and a few pigs in a beautiful old wooden barn. A modern metal 'pole barn' housed his equipment and a small antique car collection. Apart from the beautiful view and lovely feel of the old house, it was that pole barn that had sold Amy on the place. A big empty space where she could be creative was just what she needed at that point in her life.\n\nAmy was bored. She had spent her whole life working, and now, after winning a ridiculous amount of money in the state lottery and telling her asshole boss to fuck off, she was bored. She had spent the last six months living the easy life, and needed new challenges. Twenty years ago, when she was in high school, cinematography was her main interest. She had plans to go to college and get a job in the movie industry making documentaries, but that all went wrong when she met the wrong boy and got into drugs and drinking. Her senior year went to hell when she got pregnant, had an abortion, and dropped out of school. She earned her high school diploma at night school, but the dream of college slipped away from her, and twenty years of working mediocre jobs became her life. At thirty-seven years old, with her financial security assured, she was finally able to try and resurrect her old passions \u2014 photography, painting and filmmaking. The old farm high above the valley was the perfect place to do it. \n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nA year later the old farmhouse was freshly painted, the trees were trimmed, flowers were growing in the gardens, and the last of the workmen were gone. Amy had hired a builder to finish the inside of the big metal pole barn. They had insulated it, sheet-rocked the walls and high ceiling, put down a huge wood floor and installed a heating system. It was transformed into a proper 'studio,' and she wasted no time setting it up, with one area for painting and the rest of the big space used for photography, with big LED lights, backdrops, and movable walls to set up various types of rooms. She loved her studio and spent most of her time there, often looking out the big window she had installed to take advantage of the view of the lake down in the valley.\n\n\"You look at the lake more than you look at me.\"\n\nAmy looked at the young naked man reclining on a bed and smiled.\n\n\"I know you by heart,\" she said, and she dabbed some more paint on her canvas.\n\nThe young man smiled and a little blood rushed to his penis, swelling it slightly. Her smile always did that to him. He had modeled for Amy three times before, and always left wishing he had the courage to walk up to her with a big erection in his hand and kiss her, but it never happened. They were both always professional.\n\n\"So Josh,\" Amy asked as she studied the leg she was painting, \"I don't think I've ever asked you \u2014 what do you do for fun?\"\n\n\"Same as most college guys I guess. Watch porn,\" he said with a mischievous smile.\n\n\"Ah, yes, it does seem to be popular these days,\" she said. \"Are the girls into it too?\"\n\n\"Oh yeah,\" he said. \"They like the softer stuff though.\"\n\n\"Softer?\" Amy asked.\n\n\"Yeah. More romantic. More like real life I guess, but with bigger cocks,\" he laughed.\n\n\"And what do guys like,\" she asked as she dabbed some more paint.\n\n\"Uh, I dunno, I guess more than one girl, big groups, more fantasy kinda stuff I guess,\" he said.\n\nThe frank discussion had transformed Josh's penis into a cock, and he held his pose nervously as Amy's eyes darted over him as she continued to paint. It wasn't fully erect and sticking out, but it had doubled in size and it jumped slightly with each beat of his heart. Amy had to hide behind the big canvas to keep him from seeing her heaving chest.\n\nWhen the painting was finished and both of their bodies had relaxed, Amy thanked Josh and he got dressed. She had a small private dressing area for models to use, but he never used it and she always enjoyed watching him dress and undress. On this day he pulled tight briefs over his muscular ass as Amy pretended to put away supplies.\n\nAfter Josh drove out the long driveway Amy went in the house, turned on her old computer and searched for porn. She hadn't done it much in the past, but she felt compelled and had no trouble finding it. Lot's of it. Looking at it all with an artist's eye she was disappointed, but the raw power of it overcame the bad production values and she found herself masturbating, right there in the living room in the middle of the day. Just as an orgasm swept through her the phone rang. She answered it too soon, still breathless as she came down from the head-rush. It was her old friend Jenny.\n\n\"Oh hi Jenny, how are ya,\" Amy said.\n\n\"Did I get you at a bad time?\" Jenny asked.\n\n\"No, no, I was just...\"\n\n\"You got a man there?\" Jenny laughed.\n\n\"No, no, I uh... you ever watch porn?\"\n\n\"Of course I do sweetheart, doesn't everybody?\" Jenny said, laughing even harder.\n\n\"I don't know, do they?\"\n\n\"It's like a gazzillion dollar business Amy,\" Jenny said. \"Sounds like you found some good stuff. Send me a link.\"\n\n\"Did you ever notice how badly it's made?\" Amy asked.\n\n\"No Amy, only you would do that,\" Jenny laughed.\n\n\"I can't believe I'm the only one,\" Amy said.\n\n\"Well there's an easy solution to that kiddo,\" Jenny said. \"Make somethin' better. You got a studio right there at your house.\"\n\nThe phone call went silent as Jenny waited for an answer. A smile grew on her face as she realized her friend was actually thinking about it.\n\n\"Holy shit! You're wondering if you could do it aren't ya!\" Jenny said, laughing again. \"You know I wasn't serious. I should know better than to suggest things to a girl who can afford to do anything she wants.\"\n\nThe phone call went on to more mundane topics, but a seed was planted in Amy's brain. She called Josh the next day to see if he would do another posing session, and he eagerly accepted \u2014 Amy paid well and he was a mostly broke college student, but he also enjoyed her company. He showed up that evening and she set up a pose, with artificial lights this time, Josh sitting in a tall-back upholstered chair with an open satin robe, deeply shadowed, like something out of a film noir movie.\n\n\"So you're a senior in the drama department, right Josh?\" Amy asked as she started to paint the fresh canvas.\n\n\"Yup, just two semesters to go.\"\n\n\"You guys must be getting pretty good these days. Do you all work together with the filmmaking students?\"\n\n\"Some of us do, yeah,\" he said. \"I just finished up a summer project with a guy who's making a student film. Sort of a drug-house romance kinda thing.\"\n\n\"Wow, that sounds interesting. You're probably used to doing nudity from posing for me.\"\n\n\"Yeah, it did make it easier,\" he said. \"How'd you know there was nude scenes in it?\"\n\n\"A romance movie these days... they all seem to have beautiful naked people in them,\" Amy said. \"You and your class mates, you all must be ready for that kind of thing when you go off to get jobs I guess.\"\n\n\"Yeah. It was kinda fun really. The girl that did it with me was really into it. It almost wasn't like acting. It's hard to describe,\" he said.\n\n\"So, was it like real sex?\"\n\n\"It wasn't supposed to be,\" Josh said, \"We were just supposed to simulate it, but...the girl kinda got into it and...my friend running the camera just let us go. He said he'd edit out the stuff he couldn't show.\"\n\n\"Wow! That sounds hot! So it was fun?\" Amy asked as she painted.\n\n\"Super fun,\" Josh said with a sly grin. \"Too much probably.\"\n\nJosh's penis had blossomed into a cock again, and Amy quickly sketched it in with her paintbrush, wanting to capture it's nearly fully swelled size in the painting. She needn't of hurried, as the conversation kept Josh's blood flowing in that direction.\n\n\"So is the girl a drama student too?\" Amy asked.\n\n\"Yeah, she's from out West,\" Josh said.\n\n\"Do you think she'd consider posing here with you? Kind of a sexy pose? I'll pay her too of course.\"\n\n\"Well she's broke all the time, and she's not shy, so...\" he laughed.\n\n\"Good, why don't you ask her and give me a call,\" Amy said. \"I think it'll be fun for you guys.\"\n\nAmy finished up her film noir painting and gave Josh her regular generous hourly rate plus a nice tip after he wiggled his cute butt into silk boxer shorts and jeans.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Amy, this is my friend Brittany,\" Josh said as the two of them walked up Amy's old farmhouse steps.\n\n\"So nice to meet you Brittany,\" Amy said.\n\n\"My friends call me Britt. I love where you live, it reminds me of home.\"\n\n\"Where's that?\" Amy asked.\n\n\"Napa valley,\" Britt said.\n\n\"I love California. Let me show you around the studio, and we'll talk about what we can do,\" Amy said.\n\nShe led the way down a gravel path to the big pole barn tucked into the side of the old apple orchard. It was early autumn and the smell of apples filled the air. Amy showed Josh and Britt the whole studio, more than Josh had seen before. Amy had been acquiring some high quality movie making gear \u2014 three Blackmagic Production cameras, lenses, tripods, accessories, a big computer editing station. Josh and Britt were astonished at it all.\n\n\"What are you gonna do with all this?\" Josh asked.\n\n\"Just getting set up for some art projects,\" Amy said. \"So far I've just been playing, but I'd like to get more serious with it all. I just ordered a crane and dolly system. Movements are key, don't you think?\"\n\n\"So like experimental film kinda stuff?\" Britt said.\n\n\"Exactly,\" Amy said. \"All about the human body. I want to turn the smut world on its head and make the human body truly beautiful. Josh told me about the love making scene you and he did for your friend's student film. What if we took that up a notch, filmed it even more beautifully and expressively, and made a whole short film that revolved around that. The experimental art world's version of female porn.\"\n\n\"Wow, you're ambitious!\" Britt said. \"I love the idea, and I can't wait to see the result, but if you're asking us to do it I don't think I'm ready to be a porn star just yet,\" she laughed.\n\n\"I don't blame you dear, and porn was a poorly chosen word,\" Amy said. \"A sexy art film, that's truly artistic. That's more what I'm going for.\"\n\n\"I'm intrigued, that's for sure,\" Britt said.\n\n\"Good,\" Amy said. \"How about you Josh?\"\n\n\"I thought we were just gonna pose for a painting, but this sounds way more fun,\" he said.\n\n\"Okay, well, why don't we get our feet wet and try some things. We'll just improvise today,\" Amy said. \"That'll give me a chance to get used to the new gear, and you guys can see if you're comfortable with me and if you want to continue. Oh, and for the movie work I'm doubling your fee, so one hundred dollars per hour per person. Sound good?\"\n\n\"Sign me up!\" Josh said with a smile, and Britt was thrilled too.\n\nAmy had set up her cameras beforehand assuming they would agree. She showed Britt the changing area, and the row of brand new terry-cloth robes hanging on the wall.\n\n\"Wow, expecting a crowd?\" Britt said with a little laugh.\n\n\"I'm hoping you two will have fun and you'll bring some of your classmates along when we get things rolling here,\" Amy said. \"We'll see how it goes.\"\n\nBritt stripped and walked out in her robe to the big bed set up in the middle of a pure white backdrop. Josh had stripped out in the open as usual, over by a chair in the corner, and walked into the big space naked.\n\n\"Jeez Josh, ready much?\" Britt laughed.\n\nAmy had come up with an idea to shoot them through semi-transparent coverings at first, to make them feel less exposed and hopefully ease them into doing more explicit work.\n\n\"Why don't you guys climb under that sheet and I'll adjust some lights,\" Amy said.\n\nAmy had found a super thin spandex material that was transparent enough to see through and breath through. Josh slid his body under the stretchy sheet onto the pure white bed.\n\n\"Wow! That looks hot!\" Britt said, admiring the way her friends trim, muscular body looked with the diaphanous fabric draped over him. \"Super sexy. Holy shit!\"\n\n\"That does look good,\" Amy said. \"The camera's gonna love you guys. Can I take your robe honey?\"\n\nBritt slipped out of it and Amy was very pleased with young Britt's body. Curvy and well sculpted, with lovely peaks and valleys to catch the light. She was a beautiful young woman, her blonde hair and pale skin the perfect foil to Josh's dark hair and darker complexion. Now, if she could coax them into a real live lovemaking session she would have some raw material to work on at her editing station to see if the idea of a truly sexy art film was within her grasp.\n\nThe lights were set, a boom mic was lowered above them, and the cameras were rolling.\n\n\"Act if you want, react if you want, be totally real and natural if you want. Don't be afraid to make noise \u2014 the more the better and then we'll edit it down, and don't be afraid to get dirty. It's all good. I'll edit out the hard core, but the other angles will be useful. Lets start with a kiss and let it flow from there,\" Amy said. \"All right, here we go.\"\n\nBritt and Josh kissed, and it was easy to see they were attracted to each other. Amy circled slowly and silently in bare feet with a camera on a steadycam rig strapped to her body, and two other cameras were on tripods. The lighting was low and moody, with deep shadows both on top of and below the semi-transparent sheet.\n\nAmy made a mental note to order another camera to mount above the bed for an overhead view, and she continued her slow movements with the steadycam. Britt had moved on top of Josh, and she had relaxed enough to start moaning audibly as Josh's hands moved slowly across her back and down onto her ass. The light played across and through the transparent white sheet covering them, turning his movements into abstract shadows and tantalizing glimpses of flesh.\n\nBritt moved her body down Josh's, pulling the sheet over her head as she moved, until her head was over his cock and she was completely covered. The light shone through, and the thin, stretchy sheet moved up and down with her head as she sucked Josh's cock.\n\nAmy slowly circled, in close, focusing on the sheet for a while with a blurred, shadowy figure giving head as Josh moaned. She slowly shifted focus onto Britt, mysteriously visible through the shadowy sheet. Her slurping was audible, her eyes caught the light, and the camera drifted away.\n\n\"Awesome, awesome, awesome!\" Amy said. \"I love it so far. You guys know what sixty-nine is right? Can you do that and cover yourselves up completely?\"\n\nBritt reluctantly stopped her blow-job and Josh took some deep breaths. Amy pulled back the sheet and Britt repositioned herself over Josh. Her ass looked spectacular hovering over Josh's face when Amy swept the sheet over them.\n\n\"All right, here we go,\" she said.\n\nThe moment Josh's mouth hit Britt's pussy her head shot up bringing the thin fabric with it, and a kaleidoscope of shadows danced beneath it. She gasped and exhaled an \"Oh, fuck yeah!\" through her clenched teeth as she felt it, and Josh moaned as he tasted her. Her head bobbed on Josh's cock as Amy circled silently. She could tell when things had built to near climax, and she withdrew enough to be clear of the other cameras, so she'd have three angles on the action at the big moment.\n\nShe didn't have to wait long\u2014Josh and Britt were red hot and burning. Britt came first, with a writhing body that threw shadows every which way, her fleshy parts either visible or mysterious depending on her movements, and Josh came while she was still lost in the ether, her mouth sucking down every drop of Josh's gush, the two of them moaning and grunting in near harmony.\n\nAmy let them go silent, their bodies motionless except for heavy breathing. Amy didn't say a word so the microphone could pick it up.\n\n\"Holy shit guys!\" Amy finally said. \"That was unbelievably beautiful! You're not gonna believe it when you see it. I mean stunning! I can't wait to do more \u2014 when I get the crane and the track it's gonna be off the charts!\"\n\n\"That was fuckin' wild\" Britt said, still trying to gather her wits.\n\n\"You're tellin' me!\" Josh said.\n\n\"Here you go sweetheart,\" Amy said, holding Britt's robe out for her.\n\nBritt poked her head out from under the sheet and looked back at herself and Josh through the transparent white fabric.\n\n\"Wow, that's gonna be so fuckin' hot. You gonna edit it all yourself?\" she asked as she slipped out of the bed and into her robe.\n\n\"Yeah, I'll probably work on it all night,\" Amy said. \"Like I said, this is just a test tonight. I sure liked how it looked though. It'll be fun to try and weave something together on the editing station. I hope you guys had fun and want to come back and try some more things. So, let's see, two-hundred dollars each for tonight, and I'll call you Josh when the rest of the equipment arrives.\"\n\nThere was a cabinet and a work table next to the chair with Josh's clothes. Amy made sure she was there working on her steadycam rig before Josh walked over. His cock was still swollen and glistening, and it was a redder color than she was used to seeing. In fact all his muscles seemed to have more blood in them, and his beautiful young body was a vision of masculinity. It took her breath away.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nAmy worked late into the night and all through the next day on the editing. She was thrilled with the results. For a first effort it was amazing to her how beautiful and erotic the footage was, and working on it gave her dozens of new ideas to try. She was unconcerned about commercial viability \u2014 this was a personal creative project for her \u2014 but she couldn't believe other folks wouldn't find the results compelling.\n\nNew equipment was arriving daily, and three days after the first shoot she called Josh. He was available, but Britt had been called home due to a death in the family so she asked him to come alone to test out some new ideas. He drove out that evening.\n\n\"I had a local seamstress make some tubes out of that stretchy material,\" Amy said. \"I've got one that should fit one person, one big enough for two I think, and another bigger one. Some new lights came too \u2014 a light box you can stand on, and some handheld units. They all change colors, so we can try lots of things.\"\n\nJosh took off his clothes and Amy helped him pull the tube of thin fabric over his body. It was closed on the top, and looked a little like a full body version of a criminal with a stocking pulled over his face. Not quite as tight, and much stretchier, but a similar kind of mysterious transparency.\n\n\"Can you breathe all right in there?\" Amy asked.\n\n\"Yeah, it's fine,\" Josh said. \"How does it look?\"\n\n\"Awesome,\" Amy said.\n\nJosh pulled the fabric up a little so he could walk, and Amy guided him to a pure black seamless background with a light box on the floor. As Josh stood on the box Amy made the light a deep red.\n\n\"What do you want me to do in here,\" Josh asked.\n\n\"I'd like you to masturbate,\" Amy said. \"Not yet, let me get the cameras rolling, and then I'd like you to get yourself hard and masturbate.\"",
        "\"Okay,\" Josh said quietly, after a nervous pause.\n\n\"All right, here we go,\" Amy said after she had everything switched on, including a boom microphone just over Josh's head. \"Just think about Britt, and how sexy she was the other day. And try not to cum too fast, okay honey?\"\n\nJosh had no trouble getting hard, and he wasn't thinking about Britt. He was thinking about Amy, the sexy 'older woman' he had fantasized about numerous times. Amy was certainly fantasy worthy. An awkward, gangly teen, she had blossomed in her mid twenties into a tall, sexy woman, and now well into her thirties and confident with her sexuality, she liked to wear clothes that accentuated her trim, curvy body. As she circled Josh slowly with the steadycam rig hanging from her body, he imagined her naked, as he had before, and his hands slid all around his crotch and onto his swelling cock. The light coming up from below made him more visible than he and Britt had been on the bed lit from above, the red light dancing through his legs and hands as his cock grew.\n\nJosh moaned a little as the sensations began to overtake him, and Amy gave him a silent thumbs up to encourage him. If he could have read her mind he would have been even more encouraged, because she was getting very turned on watching her beautiful young model. Josh's breathing was heavy, a mixture of quiet moans and masculine whimpers hung in the air. As the fever in his brain built, his legs spread wider, his knee's bent a little, and suddenly a deep groan preceded a full body contraction as he came, one hand stroking and one clutching his groin. Semen flowed onto the inside of the stretchy fabric, oozing through its pores.\n\n\"Has anyone ever told you you're a very sexy man?\" Amy asked, a little flustered by what she had just witnessed.\n\nStanding in the red light, with his softening, sticky cock in his hand, Josh was thrilled by her words. He still thought of his female peers as girls, so to be called a 'sexy man' by a real woman like Amy was a big moment for him.\n\n\"Let's get you out of that thing so you can clean up,\" Amy said.\n\nShe helped Josh pull up the big stretchy sock. Josh smelled of masculinity \u2014 the scent of semen and sweat mingled together in the still air of the big dark studio.\n\n\"It's warm in there,\" Josh said as he was freed from the cocoon, his skin glistening with perspiration.\n\n\"It looked fantastic with that red light on your shiny skin,\" Amy said, admiring her naked model for a moment. \"Let me get you a robe.\"\n\nAmy handed him a robe and told him to have a seat.\n\n\"I'm gonna run in the house and throw this in the washer before it gets all stuck together. You certainly had a lot in you,\" she winked as she picked up the cum soaked fabric from the floor.\n\nAmy returned from the house with a chilled bottle of Riesling from her neighbors vineyard and two glasses. She called Josh over to her editing station, switched on the monitor, and showed him some of the footage of his session with Britt.\n\n\"Holy shit!\" he said quietly as he watched it. \"That's fucking hot!\"\n\n\"You really think so?\" Amy asked. \"I know I think so, but I'm really interested to get a male point of view. You remember our discussion the other day about male porn and female porn? I think this kind of thing is very appealing to a woman, but do you think men would like it too?\"\n\n\"Oh yeah! Men who appreciate aesthetic beauty,\" Josh said, staring at the mysterious images flickering across the big monitor. \"The others maybe wouldn't be into it as much, but there's plenty of smut porn out there for them.\"\n\nAmy was feeling very horny sitting there watching her sexy video creation and sipping wine with Josh. She could tell he was trying to hide the hard-on under his robe.\n\n\"I had some bigger socks made up from that material,\" she said. \"The one you just used is for one person, and I've got one I think will be about right for two people, and I've got a big one that I hope will fit four. If you want we can wait until Britt gets back to try the double, but I'd love to see how it looks and get a test done with it with some different lighting. Would you mind climbing into it with an old woman like me, or would that be too weird?\"\n\n\"You're not an old woman Amy,\" Josh said with lovely smile, suddenly sounding and looking like a seductive, experienced gentleman. Amy's horny heart melted.\n\nBreaking down the professional barrier between them was a big step. If things got weird between them she would loose her connection to the students at the drama school, but her hormonal instincts were running the show at that point and there was no turning back.\n\n\"Okay then,\" Amy said with a slight quiver in her voice. \"Let me get the third camera locked down on a tripod, and adjust the lights. What do you think, a warm yellow from below, or deep shadows from the sides?\"\n\n\"Let's do one and then the other,\" Josh said, his eyes twinkling and burning into Amy's. \"I've got all night.\"\n\nAmy could barely keep her wits about her as she set things up. She went to the changing area and took off her clothes, her body becoming more charged as each garment slipped off. She put on a robe and walked from the darkness toward the dimly lit yellow glow in the center of the big open room where Josh was unfolding the fabric.\n\n\"It might be tricky getting this over us without someone on the outside,\" Josh said. \"Maybe you can put it on me and then slide in from underneath.\"\n\nAmy made sure the cameras and sound were all operating, and Josh tossed his robe aside. She pulled the big sock over his head and down his body, and he held one side of it down with his foot. Amy took a deep breath, tossed her robe aside, squatted down by Josh's feet and pulled the stretchy fabric over her. Josh's swiftly hardening cock was inches from her face when she looked up. It flustered her, and she nervously slid her body up his while holding the fabric down with her foot. It was stretchier than she had expected \u2014 she could move freely, but for the moment she was letting the elastic hold them tight against each other.\n\n\"Well this is a new experience,\" she said nervously.\n\n\"It's pretty wild isn't it?\" Josh said.\n\nAmy was a tall woman, and their heights were perfectly matched. Their faces were inches apart, and she could feel Josh's big cock swelling between her thighs.\n\n\"Should I call action, or just kiss you?\" she asked. Josh kissed her.\n\nIt was a deep, passionate kiss. By the time their mouths broke apart and they looked into each others eyes there was a rock hard cock between Amy's legs. Their mouths fused together in another red-hot kiss, and they both forgot about the cameras and made love. Lust and carnal desire flowed out of them like a dam had burst.\n\nAmy slithered her way down and took Josh's throbbing cock in her mouth, and soon he was fucking her face with his hands on her head. The yellow light streamed up from below them, illuminating Amy's squatting body and the underside of her tits. The light flashed wildly on Josh's upper body as his thrusting let it through. Amy's blow-job felt incredible to him \u2014 he had never been with a woman who was as experienced in that department as she was.\n\nAmy didn't want Josh to cum, so she tapered off and slid up him again. It was easier for her to move because the temperature inside the sock had shot up and they were both slick with sweat. This was the most erotic situation she had ever been in, and she was dying to be fucked.\n\n\"Fuck me baby,\" she said, loud enough for the microphone to pick up.\n\nAmy pivoted her body around so Josh was behind her, bent forward with her hands up against the stretchy fabric, and Josh entered her dripping wet pussy.\n\n\"Holy shit!\" she said as he thrusted upward, filling her with his young muscle.\n\nShe was amazed that she could relax her upper body and let the stretchy fabric support her out away from Josh just enough to give him a nice protruding ass to thrust up into, and thrust he did as he leaned back to counterbalance her pull. Amy's legs were spread and the yellow light was bright on her pussy and Josh's thrusting piston. Amy's open-mouthed face was pressed hard against the fabric, also lit from below in yellow, looking otherworldly but clearly in ecstasy.\n\nThe fucking grew to furious intensity and Amy was crying out as Josh pummeled her, the two of them barely able to stay on their feet. As a huge orgasm washed over Amy Josh pulled her body to him, took her tits in his hands, and thrusted so hard it repeatedly lifted her feet off the ground as he came, the two of them yelping and screaming like animals.\n\nJosh kissed Amy's neck, fondling her sweaty tits as they came back to earth. Amy turned herself around for a long passionate kiss. She remembered the cameras, put her head on Josh's shoulder to give the scene an end, and then finally spoke.\n\n\"Nobody's ever fucked me like that before,\" she said, and she kissed him again.\n\n\"That was a first for me too,\" he said with a smile. \"You're very inspiring.\"\n\n\"It's fuckin' hot in here,\" Amy said after a few quiet moments embracing. \"I need air.\"\n\nThey pulled up the stretchy material and cool air streamed in onto their dripping bodies.\n\n\"Oh my God!\" she said as she staggered off the big light box. \"We're gonna need a couch in here to relax on.\"\n\nAmy sat on a box and leaned up against the dark grey wall, still breathing hard. Josh dragged over another box and joined her.\n\n\"So, a ten minute break and then we'll try the shadowy lighting?\" Josh said with a sexy smile.\n\nAmy smiled and shook her head. \"Oh, to be young again,\" she said. \"Yes, the shadowy lighting. Lets move the bed into position though, okay? And maybe we can try it without the covering. If I sweat like that again I'll pass out.\"\n\n\"You're the boss,\" Josh said with a wink.\n\n'A star is born,' Amy thought as she looked at Josh and smiled. Little did she know, two stars were born that night.\n\n---\n\n\"God!\"\n\nThat was the only word Amy's friend Jenny could utter as she sat with big eyes and an open mouth in front of the big TV screen on Amy's living room wall. She took a big gulp of wine as deeply erotic images of Amy being fucked by Josh flickered across the screen.\n\n\"How deep am I baby,\" Josh's voice said, seeming to swirl around the surround sound speakers in the room. Amy had processed the sound, making it as psychedelic as the images.\n\n\"Oh God!\" Amy's voice echoed.\n\n\"How deep am I baby,\" Josh's voice repeated.\n\n\"Oh God!\"\n\nJosh was taking her doggie style on the white bed, surrounded by blackness, their bodies bathed in mysterious shadows. Josh's pelvis slapped against her ass as his big cock pistoned in and out of her, the slaps and sounds of heavy breathing echoing and swirling around the room.\n\nThe scene faded into another with Amy riding Josh and cumming hard, with wild echoing screams and a digitally processed image that looked like a fever dream. The screen faded to black.\n\n\"You're a fuckin' crazy insane person,\" Jenny said, shaking her head and looking stunned. \"Crazy insane people shouldn't have millions of dollars,\" she laughed.\n\n\"Forget about me for a minute,\" Amy said. \"All I want to know is if you think it's hot, like, compared to regular porn.\"\n\n\"Yeah it's fuckin' hot!\" Jenny exclaimed. \"Jesus! It's burnin' hot!\"\n\nAmy smiled. \"Good, I guess I'm on the right track then.\"\n\n\"The right track?\" Jenny said. \"What the fuck are you talkin' about! This is crazy! Are you gonna keep doing this?\"\n\nAmy played the scenes with Josh and Britt under the see-through blanket, the one of Josh masturbating in the stretchy fabric tube, and the one of Josh fucking her in the two person tube. Jenny was stunned.\n\n\"I... I don't even know what to say,\" Jenny said, shaking her head. \"I mean it's incredibly erotic and beautiful\u2014I've never seen anything like it\u2014but what are you getting yourself into here?\"\n\n\"Just having fun,\" Amy said. \"It's a hobby.\"\n\n\"A hobby?\" Jenny said, laughing and shaking her head.\n\n\"Yeah, and I'm gonna need an assistant,\" Amy said. \"Wanna help out? I'll pay you the same as the actors.\"\n\n\"You pay them?\" Jenny said. \"I thought they just did it because they wanted to screw.\"\n\n\"No Jenn, they're real actors, from the drama school at the University.\"\n\n\"Oh my God!\" Jenny said. \"How much do you pay them?\"\n\n\"A hundred an hour. They seem pretty happy with it. And they seem to be having fun. You should just come by and hold a light or something and watch. I think you'll like it. In one evening you'd make as much as twenty hours at the store. You could quit that shit job and work with me. We'd have a blast.\"\n\n\"I still think you're nuts, but I'll come and watch,\" Jenny said. \"Only because I think it's hot though, not because I want to get involved.\"\n\n\"OK sweetie,\" Amy said, knowing that she had hooked her.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nA few days later Josh drove in the long driveway and walked up to the front porch of the old farmhouse. Amy introduced him to Jenny, and Josh's charm and good looks set the hook even harder. The three of them went in the house so Amy could play the finished video for Josh. He was as amazed at what he was seeing as Jenny had been, and Jenny's second viewing turned her on even more than the first. The first time seeing it was a shock for her, but this time the feeling she got was pure heat and horniness. She was sitting next to Josh on the couch, barely able to control her fast beating heart and heavy breathing. She was sure he would notice, so she got up abruptly and went to the kitchen.\n\n\"You okay sweetie?\" Amy asked with a wry smile.\n\n\"Just thirsty,\" Jenny said.\n\nAfter the viewing the three of them walked out through the old apple orchard to the studio.\n\n\"So I'm thinking we'll do another solo masturbation scene,\" Amy said. \"I don't know if you realize it Josh, but women find that very hot. But this time I'd like the surroundings and the cameras to be part of the scene. Two older women holding cameras and lights circling a young man on his back masturbating. I think it'll be super hot \u2014 the lights will be dark so Jenny and I'll be sort of mysterious. Jenny'll have a hand held light unit, and I'll have the steadycam rig. I just got the fourth camera I ordered, and that'll be the main shot \u2014 it's on a boom right above the bed looking straight down, with a wide enough lens to see us circling. Sound good?\"\n\nEveryone agreed it sounded good, even though Jenny hadn't realized she was going to be in the scene until just then. Amy disappeared somewhere, and Josh started disrobing right there in the open as he always did. Jenny was spellbound, standing in the dim light, hoping Josh didn't notice her staring, but of course he did. Her breathing was getting ragged again and then Amy appeared, completely naked. She walked to the work table and started strapping on the steadycam rig.\n\n\"Here's your light sweetie,\" Amy said to Jenny, pointing to a big handheld unit with a shoulder strap. \"It's a soft strap, so it shouldn't hurt your skin too much.\"\n\n\"My skin?\" Jenny said, suddenly realizing Amy wanted her to be naked too. \"Amy I'm not...\"\n\n\"It's gonna look pretty odd if you're the only one with clothes on,\" Amy said.\n\nJenny looked at the confidently naked Amy, and then at the unbelievably beautiful Josh. He was standing there as natural as can be, looking at her like he was willing her to go for it. Her hands seemed to have a mind of their own and started unbuttoning her shirt.\n\n\"You're a bad influence Amy. My mother's gonna be mad at you,\" she said with a nervous little smile.\n\nAmy smiled, confident that by the time the session was over her old friend would be screaming in orgasmic bliss in front of all the cameras.\n\nJenny's nerves were on edge as she paused for a moment in her bra and panties. They weren't attractive ones, which embarrassed her a little, but she looked very sexy. Josh was spellbound by her, his cock swelling and rising a bit, bobbing gently with his heartbeat. Jenny took a deep breath and slid off her panties and quickly removed her bra. Amy knew she was nervous, so she quickly engaged her in instruction about the light unit, and Jenny strapped it on. The shoulder strap crossed her chest between her voluptuous tits and the light unit hung just above her hips like some kind of futuristic weapon.\n\n\"The gym's payin' off sweetie,\" Amy said. \"You look hot!\" \n\nShe did indeed look hot. She and Amy had both been 'late bloomers' who struggled with their looks in high school, but now they were sexy, hot-bodied MILF's. Josh couldn't believe his luck as he stood there watching them prepare for the shoot.\n\nAmy switched on the lights, which were moody and shadowy again, and had Josh lie on the bed which was draped in a black sheet. She switched on Jenny's light unit, showed her what she wanted her to do with it, let her practice a little, and then switched on the four cameras and sound.\n\n\"Okay honey, enjoy yourself,\" Amy said to Josh. \"Try not to cum this time though, at least for a while.\"\n\nJosh started moving his hands over his body in a sexy way, his already swollen cock growing hard. Amy had to signal Jenny to keep moving because she was becoming mesmerized by the sight of him. His cock was bigger than any Jenny had seen in person, and certainly bigger than any that had ever been inside her. She was stunned by its beauty and the perfection of its shape, and also by the beauty of the young muscular body it was attached to. She circled, opposite Amy, the two of them moving silently around the young man who was slowly losing himself in pleasure. The muscles in his abdomen rippled, his breathing got louder, and his legs spread wide as his whole body got into a writhing rhythm. Jenny was starting to lose track of things, her wet pussy tingling as she tried to remember what she was supposed to be doing.\n\nWithout realizing it she had slowed enough for Amy to catch up to her, and Amy whispered in her ear.\n\n\"Quietly set the light down, and go help him,\" Amy said.\n\nJenny didn't hesitate. As she knelt next to the bed she lightly touched Josh's arm. When his eyes opened and looked at her she felt like a bolt of electricity hit her. He put his hand behind her neck, pulled her mouth to his and they kissed while Josh slowly masturbated.\n\nJenny climbed onto the black bed, knelt next to Josh, and her hands explored his softly rippling muscles as he continued to slide his hand slowly up and down his big cock. His eyes closed and his back arched a bit when Jenny's hands reached his crotch. One of her hands explored the inside of his powerful thighs and the other slid up the base of the big cock, displacing Josh's hand. He lay quietly on the big bed and let Jenny take over. Amy was sure Jenny hadn't thought about it, but she had positioned herself perfectly for the cameras. Amy circled quietly, smiling as her old friend lost herself in the moment.\n\nJenny's mouth was drawn to Josh's cock, surprising her and thrilling her at the same time. She had never enjoyed giving blow-jobs, although she had done it reluctantly on numerous occasions. Josh's cock was different though. It looked like it would taste good, and it did. Smooth and slightly sweet, with the faint scent of baby powder, it filled her mouth and her senses like nothing she had ever experienced. Her salivary glands exploded, covering the big cock with slippery wetness. Her mind spun out of control as she slobbered and sucked like a woman possessed. It was a long, wet, sloppy blow-job for the ages, and when Josh could take no more the big cock erupted like a volcano. Jenny took a big squirt in her mouth, and then let two big ribbons fly in the air before taking the rest in her mouth, sucking Josh dry. She swallowed it all \u2014 a first for her. It reminded her of the warm Creme Brul\u00e9e at her favorite French restaurant, without the vanilla.\n\nJosh took command and pushed Jenny down on her back. He kissed her hard while his hand massaged her pussy and she had a small orgasm almost instantly. Josh's mouth quickly found her lovely tits. He seemed fascinated by her big nipples, which protruded farther than any he or Amy had ever seen. Jenny often complained about how difficult they were to hide under her clothing, but here, fully erect in the shadowy light, they looked spectacular.",
        "Amy moved in close with her camera, hoping Jenny was too far gone to care. She was right \u2014 Jenny paid her no attention. She moaned deeply as Josh's mouth and teeth ravaged her big nipples, and then his mouth descended to the soft heat of her wet pussy. His body moved like an athlete as he positioned himself between Jenny's legs, his hands under her ass lifting her glistening wetness to his warm mouth. Jenny's body relaxed and she lost herself in the moment, the sensation feeling like pure energy pulsing through her veins. The core of her lower body felt like it was on fire, and she was sure Josh would burn his tongue if he continued. But continue he did, and he drove her to near insanity. She finally really lost her mind, flailing about and clutching at the sheets, Josh's head locked between her thighs as she rolled on her side and took him with her, screaming like the victim of a brutal murder.\n\nJosh reached up and caressed her tits as she slowly released his head from between her thighs, her body still spasming a little, deep moans emanating from her core with every exhale. Josh's cock was rock hard and he wanted, no, needed to be in her. Jenny had a sexy ass that men loved, and he wanted to take her from behind. He rolled her limp body over, lifted her hips, and when she was on her knees he licked her asshole and made her scream again. Jenny couldn't believe how on fire she was\u2014it was like nothing she had ever experienced and her brain was overwhelmed with sensations. As she felt Josh enter her she didn't know if she would survive\u2014she literally thought it might take her to the brink and finish her off\u2014but the feeling of his long, thick piston filling her was like magic. It swept her off the black bed and out of the dark studio, where she floated in warm, humid air, sunlight burning through her as his steady thrusting melted her insides. Josh's moans of pleasure floated through her head like the psychedelic soundtrack on Amy's video, and Jenny's own voice seemed detached from her body and mingled with his in the thick, buoyant air. Josh was slapping against her ass as he pounded into her, and she could feel his balls flicking against her clit with each thrust. His big cock seemed to expand within her until she was sure it would break her apart, and then a massive orgasm hit her, more powerful that any feeling she had ever had. She was silent, holding her breath as it ripped through her, and then a cry of love came from deep within her and echoed through the big studio. Josh yelled out and flailed his beautiful body wildly against her as he came harder than he ever has before.\n\nAs Jenny lay there flat on her stomach, her ass humped up a bit with Josh's big cock softening inside her, her mind started to focus and she saw Amy circling slowly with the steadycam rig. A little smile broke out on Jenny's face. She knew she was a goner.\n\n\"My mother's gonna kill you Amy,\" Jenny said quietly. Amy and Josh laughed quietly, and Jenny's mouth curled into a sexy smile. If Josh was to be her 'co-star,' she knew she would do anything Amy asked her to do.\n\n---\n\n\"You're corrupting the shit out of me you asshole,\" Jenny said to Amy over the phone the next morning.\n\n\"I can wipe the hard-drive of that whole shoot if you want,\" Amy said.\n\n\"No fuckin' way!\" Jenny laughed. \"I'll be watching that 'till I'm a dried up old lady.\"\n\n\"So you want to do more?\" Amy asked.\n\n\"Yeah!\" Jenny exclaimed. \"That was by far the hottest sexual experience I've ever had\u2014I mean off the charts beyond anything else. You'd have to kill me to get me to stop now! But that doesn't mean you're not an asshole for getting me into this.\"\n\n\"I'm sorry Jenn,\" Amy said. \"But it was the same for me, and I wanted you to experience it. Having a safe, conventional life is overrated anyway.\"\n\n\"So what do we do now?\" Jenny asked.\n\n\"I don't know,\" Amy said. \"It can't just be us getting fucked all the time, so, I think I'll call Josh and see if any of his classmates wanna come try something. I'd kinda like to come up with some kind of storyline to work with \u2014 maybe something abstract and dream-like. Think about it and let me know if you have any ideas. I'm gonna spend today editing you and Josh. Come on over this evening around seven for some wine and I'll show it to you.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Josh? Hi, it's Amy. You up for more, maybe tonight?\" Amy said into her phone.\n\n\"Yeah, sounds good,\" he said. \"Britt won't be back for a few more days though.\"\n\n\"OK. How about your other classmates. Do you think any off them would want to get involved with this? They'd have to be cool \u2014 I don't want anybody blabbing to the wrong people about this, you know?\"\n\n\"Yeah, I know what you mean,\" Josh said. \"I already brought it up to a few of them, and definitely got some interest. Two guys and a girl.\"\n\n\"Great!\" Amy said. \"Can you bring them out tonight around eight? I'll show them some footage, and Jenny'll be here.\"\n\n\"Cool, yeah, eight o'clock. We'll see you then.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nJenny and Amy ate take-out and sipped wine as the psychedelic scene of her giving Josh an amazing blowjob flickered across the big screen on the living room wall.\n\n\"Fuck!\" Jenny said. \"I can't believe that's me! I never liked having a cock in my mouth before yesterday, and today it's all I've thought about. It felt so fuckin' good. And look at me go! Holy shit, I'm like possessed!\"\n\nHer face on the screen was huge and otherworldly, completely lost in the thrill of pleasuring a big young cock, saliva oozing from her mouth and coating the steel-hard shaft and her wet, slippery hands.\n\n\"You could win the best blow-job trophy at the dirty movie awards for this one sweetie,\" Amy said. \"I've never seen a hotter one.\"\n\nThe scene dissolved into eerie, shadowy darkness with echoing moans, Jenny's voice gradually rising in the mix until it was loud and musical.\n\n\"Harder! Harder! God I love that cock!\" ricocheted around through effects, sounding like an acid trip. Flashes of powerful fucking overlapped a shadowy shot of Jenny's face as the pleasure of Josh's big piston made her eyes roll. Somehow Amy had built an escalating arc of visuals that eventually climaxed as Jenny did, with an out-of-body magic that exploded off the screen and through the speakers.\n\n\"I think I just had another orgasm watching that,\" Jenny said after being stunned to silence. \"What the fuck Amy! You're like a fuckin' genius with this shit.\"\n\n\"Here they come,\" Amy said, looking out the window at Josh's approaching car. \"You want me to just show them the stuff that doesn't have you in it, or are you cool with them seeing this?\"\n\n\"I'll let you know after I meet 'em and get another glass of wine in me,\" Jenny said with a smirk.\n\nAmy and Jenny went out onto the porch to greet Josh, and he introduced his friends. Mike was a tall, lanky guy, with curly blonde hair and big blue eyes. A laid-back type who looked like he'd be right at home on a surfboard. Tyler, on the other hand, was short and muscular, with short, almost buzz-cut hair and dark, mysterious eyes. Stephanie was the female addition to the crew, and she looked like a party girl, with modern hippie clothes and a 'let's party' attitude. She was a tiny little thing, with strawberry blonde hair done in loose dreadlocks, and big brown eyes.\n\n\"So, you guy's are all actors huh?\" Amy said. \"That's cool, I wish I had done something fun like that when I was your age. Let's see, why don't I show you the studio first, and then we'll have a glass of wine in the house and we'll show you some scenes we've been working on.\"\n\n\"Didn't I tell you this was awesome?\" Josh said to his friends as they all admired the first class equipment Amy had acquired, and the nice big space to use it in.\n\n\"So Josh told us you're not really in business, it's just sort of a hobby kind of thing?\" Stephie asked.\n\n\"That's right, but who knows where it'll all lead. For now it's just for fun. I came into a shitload of money last year. My dream when I was a kid was to go to college for filmmaking, but my life in high school went all to hell and I wasn't able to. Anyway, I'm trying my hand at it now, and having all kinds of fun. I'm exploring the beauty of sexual interaction, in sort of a psychedelic way. Let's go over to the house and I'll show you some of what we've done so far.\"\n\nAmy poured them each a glass of wine in her kitchen, and she took a sparkling blown-glass bong out of a cupboard and set it on the counter along with a small glass canister of marijuana buds.\n\n\"Shall we catch a little buzz before we sit down to watch?\" Amy asked with a smile.\n\nIt was good weed and delicious wine, and when Amy pressed 'play' and started running through the videos the group was stunned by the images on the big screen, and the wild soundtrack assaulting their senses.\n\n\"Josh, you're fuckin' beautiful!\" Stephie said when the screen went black between scenes. \"And Britt! I had no idea she was so...\"\n\n\"Yeah...\" Tyler said wistfully, his eyes still glued to the black screen.\n\nThe scenes of Josh and Amy played next, the first 'out there in the open' sex scenes, and the three new kids gasped when they saw what was happening. As the scene played Stephie moaned audibly and the boys were riveted to the screen, although both Tyler and Mike did sneak glimpses of Amy, comparing her live persona to the wild woman cumming like a porn star on the screen.\n\n\"Jesus!\" Stephie said when that scene went black. \"Josh, what the fuck man!\"\n\nHer eyes glimmered with a 'please do that to me' look as she gazed at him. Amy passed the bong around and she caught Jenny's eye, silently asking her if she could show her scene. Jenny nodded, so Amy played the super-hot blow-job scene, and the doggy style fuck that sent Jenny to another planet. After it faded to black she turned up the lights. Everyone sat quietly stunned.\n\n\"So Mike, you've been kinda quiet, what do you think?\" Amy asked.\n\n\"When do we start?\" he said, his big blue eyes burning into Amy's. The others laughed.\n\n\"Tonight I hope,\" Stephie said with a sexy smile.\n\n\"Tyler, what do you think?\" Amy asked.\n\n\"I'm in,\" he said. He was looking at Jenny when he said it, and her pulse shot up.\n\n\"Awesome!\" Amy said. \"We're gonna have some serious fun! Let's get the business part out of the way \u2014 the pay is a hundred dollars an hour for each of you, and I need us all to sign a standard model release.\"\n\nAmy passed out the forms and everyone signed one. As Jenny signed hers the words 'my mother's gonna kill me' echoed in her head.\n\n\"I'm not quite ready with a storyline to work on yet,\" Amy said, \"so tonight why don't we just go over to the studio and improvise for a while, so we can all get comfortable with everything.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe next day Jenny and Amy sat at the editing desk slack jawed at the footage Amy was weaving together. Stephie's small body was being ravaged by her three classmates, and she was nearly out of control with raw lust. Their four bodies glistened with sweat on the black bed, bathed in deep shadows, surrounded by blackness. Amy's handheld shots were more abstract than before, and she wove together a long sequence that pushed the envelope on avant-garde porn, glued together by a wild soundtrack that took advantage of Stephie's wonderfully raw vocalizations and dirty talk. She really was a wild little thing, and Amy was in her glory working on the footage of her.\n\n\"God, she's hot isn't she?\" Jenny said as she watched the editing process. \"When we were her age we were dorks.\"\n\n\"Yeah, I know,\" Amy said. \"We still coulda had great sex though, but for some reason it never seemed to find us. Guess we're makin' up for it now. Check this out.\"\n\nAmy pulled up the raw footage from later in the evening when she and Jenny had joined in the fun. Stephie had strapped on the steadycam rig and proved a natural with the camera, capturing great footage of the three guys fucking the shit out of Amy and Jenny until the wee hours of the morning. \n\n\"All that working out Tyler does in the gym turned him into a fuck machine,\" Jenny said as she watched herself scream. Tyler was underneath her, ripping her pussy open with machine-gun fast thrusts.\n\n\"He just goes and goes and goes, doesn't he,\" Jenny said. \"You know, when I first saw his cock I wasn't that impressed because it's kinda short, but it's so fuckin' thick \u2014 it feels awesome.\"\n\nAmy switched to a shot of herself on her back with her legs up on Mike's shoulders, just as she was cumming hard, her back arched high off the bed. Mike followed her and came on her stomach.\n\n\"I don't know about you,\" Amy said, \"but Mike's got some kind of magic in those big blue eyes of his. I swear to god I was feeling pretty normal just then, and he shot me a look with those big blues and I came instantly. It was wild. There. See? I'm laughing? That's why. It freaked me out a little, those fuckin' eyes...\"\n\n\"How weird is it that we're sitting here talking so casually about this,\" Jenny said. \"This is not normal. Normal people don't do this.\"\n\n\"How do you know that?\" Amy asked. \"I think there's a lot more fucking going on than you think.\"\n\n\"Two thirty-seven year old women having wild sex with a bunch of twenty-year-olds, and filming it with professional equipment? No, normal people don't do this.\" Jenny chuckled.\n\n\"They would if they could,\" Amy said, and they both laughed.\n\nThey sat and watched a shot of all six of them tangled up on the bed in a ball of sexual energy.\n\n\"Best hobby ever,\" Amy said.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nAmy decided the first storyline she would shoot would be a simple one \u2014 a young party girl, played by Stephie, would have wild fantasies when she took drugs, and started confusing fantasy and reality. She wanted to have Jenny play Stephie's mother, and was hoping a little encouragement from the young actors would give her the courage to try it. Jenny was reluctant, but everyone talked her into it, and the shooting schedule was set up so her speaking parts would be shot last, giving the kids time to give her acting lessons while the rest of the shoot was going on. She even dyed her hair strawberry blonde to match Stephie's.\n\nBritt returned from California and was eager to join in the fun, and it wasn't long before the shooting commenced. Amy had it all sorted out on storyboards, just like a pro, and things went smoothly. They shot all over Amy's property \u2014 in the gardens, on the porch, in the house and barn, and in the old apple orchard. Lots of scenes were depicting drug induced hallucinations, so there was a lot of freedom in how those went down\u2014the sex was wild and free, and the whole group soon became sex crazed, showing up for 'work' ready, willing, and horny.\n\nOne of the scenes Amy needed was a wild, sunlit orgy in an overgrown grassy field behind the old barn. Amy had waited for a sunny day with lots of wind, and she got the perfect day, with the tall grass blowing and swirling beautifully. Amy wanted everybody in it, including herself, like Alfred Hitchcock used to do, so a few of them would trade off the camera work so everybody could join in the fun.\n\nShe spent the morning getting all the equipment set up, and when everyone arrived they stripped and walked around naked in the field, like flower children from the 60's.\n\n\"Damn you guys are beautiful.\" Amy said. \"I should just be filming this.\"\n\nAfter some instruction on how the orgy should progress, how the cameras should move, and how to best avoid the microphones, they were ready.\n\n\"All right, here we go,\" Amy said.\n\nAmy and Jenn were manning the cameras, and they were naked too so they could quickly switch off with some of the others. Amy let the sex happen naturally and organically, only occasionally giving direction. She had mowed a strip of grass for the dolly track, and she was using her small camera crane for some sweeping movements and higher perspectives.\n\nAfter a while Amy needed a piece of the action. Jenn took over the steadycam rig and after some whispered direction of what she wanted Amy wandered casually into the fray. Her naked body was quickly indoctrinated, with young hands and mouths sweeping her out of the real world and into a warm, sunny alternate reality, where sexual bliss was all that mattered. Britt had picked up another steadycam rig, and she and Jenn documented the action, which climaxed with Josh, Mike and Tyler triple teaming Amy. They took her higher than she'd ever been before, three young cocks filling every hole, stretching and massaging every nerve fiber in her body. She rode the big pleasure wave like a champion surfer, screaming at the blue sky as the wind swirled through the tall grass and one orgasm after another ripped through her.\n\n\"Best hobby ever,\" Amy said again after the action had wound down for the day and the cameras were shut down.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nAmy, Jenny and Josh drove into New York City six months later and registered at a big erotic art festival taking place in the convention center of the hotel they were staying at. Amy's film had been entered for judging, and was one of the finalists that would be shown on the big screen before the awards were announced.\n\n\"So, when you go up to accept your award, do you want to be freshly fucked, or do you want to be horny and anticipating a fuck?\" Josh asked Amy in their hotel room as they were starting to get ready for the big night.\n\n\"Hey, this is a big international competition, you shouldn't assume I'm getting an award,\" Amy said. \"I'm just thrilled to be here and be a part of it. This is like a dream come true.\"\n\n\"You didn't answer my question,\" Josh said with a smile.\n\nAmy thought for a moment. \"Both,\" she said, with a big smile.\n\nShe pulled the towel off Josh's young, freshly showered body and dropped to her knees. \n\n\"You know, it was painting this cock when you modeled for me that started this ball rolling,\" she said as she sucked it in and let it slip out of her mouth. \"None of this would have happened without this big hunk of meat.\"\n\nShe proceeded to give Josh a first class blow-job, and then she climbed onto the bed on her hands and knees, her legs spread wide so her pussy and ass were hovering just above the beige hotel bedspread. Josh slipped in to her juicy depths.\n\n\"Oh, that feels so fuckin' good!\" she said as he started to fuck her. \"Oh fuck yeah! Like that baby! Make me cum!\"\n\nJosh's steady thrusting lifted her out of the real world and up into the place she loved to be\u2014floating on a high that pulsated through every molecule of her with every thrust of Josh's big hunk of meat, and then gently coming down onto a soft pillow of satisfaction.\n\n\"I'll never get tired of that,\" she said quietly, as Josh cradled her in his arms.\n\n\"Jesus!\" Jenny said as she came out of the bathroom wrapped in a big towel. \"I can't leave you two alone for a minute without you humping like baboons. Come on, get ready or were gonna be late.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nWatching her film on the big screen with an audience was a deeply satisfying thrill that Amy would never forget. The audience was mesmerized at the intensity of the hallucinogenic sex on the screen, and the wild, twisted way the dialogue was spun into musical phrases, elevating the whole experience to pure, abstract art. Art that made you want to tear your clothes off and jump in.\n\nThe other nominees were shown as well, and were quite wonderful on their own, but it was clear from the audience reaction that Amy's film was on another level\u2014an 'Oh my God, I've never seen anything like that!' kind of level.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"And the award for best erotic film, short form, goes too . . . 'Mind Fuck', Amy Doolitch producer/director!\"\n\nThe audience erupted in applause. Amy sat speechless and paralyzed as tears welled in her pretty eyes. Jenny pushed her from her seat, wiping away a tear of her own as her childhood friend walked up to accept her award.",
        "\"Thank you so much,\" Amy said into the microphone as she looked out at the festival attendees. \"I'm so honored to have won this, especially considering the quality of all the other entries. I loved them all. Congratulations to all of you for your beautiful work. I need to thank my assistant director and best friend Jenny, who also played the part of the mother in the film, and my dear friend Josh, who not only acted in the film, but started the whole ball rolling when he gave me the idea to try something like this. Stand up guys, take a bow.\"\n\nThe crowd hooted and cheered when they stood.\n\n\"Josh asked me a question before we came down from our room this evening,\" Amy continued. \"He made the huge assumption that I was going to win, and asked me, do you want to be freshly fucked when you go up to get your award, or do you want to be horny and anticipating a fuck.\" The crowd laughed and hooted. \"I answered 'both', which I think is the right answer, isn't it?\" The crowd laughed and hooted even louder. \"You ready Josh? I'm horny baby!\" Amy yelled as she held up her award triumphantly.\n\nThe crowd cheered wildly, and Amy smiled. She just stood there, soaking it all in, and smiled."
    ],
    "authorname": "riverboy",
    "tags": [
        "older woman",
        "younger man",
        "orgy",
        "outdoors",
        "movie",
        "voyour",
        "exhibitionist"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/amys-art"
}