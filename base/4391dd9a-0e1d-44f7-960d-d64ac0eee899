{
    "title": "The Oathkeepers Ch. 06",
    "pages": [
        "Aegis stirred, forgetting for a moment where he was. But then he felt her velvety hands against his chest, her heated body pressed against his. She murmured softly in sleep and clutched at him and Aegis felt ready to burst with pride. His cock jerked and he shifted his hips so it didn't disturb her. As he dipped his head to brush a kiss along her brow he felt the other presence in the room. He froze, his lips a breath from her skin. \n\n\"Kiss her and I'll have to find a place to make that lovely skin of hers pay for it,\" Paragon's voice cooed from across the room. \n\nAegis stiffened and then achingly slow pulled from her. She grumbled sleepily, but then turned and her breaths turned deep and restful again as he slipped from the bed. \"She needed comfort after Bastion,\" he whispered as he padded across the room to Paragon. \n\nThe Gilded lazed on the chaise, a low fire burned in the fireplace and lit Paragon's face molten, flickering gold. His eyes were dark though. \"I know,\" he murmured as he followed Aegis with his gaze. Aegis stood across from him. Waiting for a lecture. It seemed it was all he received from Paragon lately. But Paragon's eyes softened as he glanced away, out the window. \"You know I could not deny him. He is War Warden. Placed there by my mother.\"\n\nAegis dropped his head, he did know. But Bastion, as always, had gone too far. Had pushed too hard. And Paragon let him get away with it as his half-brother. Bastion was the eldest son of the last Gilded queen. As an Onyx, he could not lead their people like a Gilded, but his spot was nearly as revered as Paragon. \"He's not happy brutalizing the humans at the front. He must come to Homeworld. Throw his weight by taking a taste of Paragon's human as well.\"\n\nParagon rose, his wings twitching anxiously at his back as he swept out onto the terrace. Aegis followed him. As much harm as Paragon might inflict on his human, there was always a sense of restraint, of balance. Yes, he enjoyed dominating them, but more so, he enjoyed how they learned to crave him. He'd had hundreds of years of practice and was an expert at it. Bastion though...there was no balance. There was only domination. Pain and fear and grinning cruelty.\n\n\"I won't let him touch her again,\" Paragon forced out. Aegis swallowed. Did his cousin reassure him? It was most un-Paragon like. He turned to Aegis and his eyes were dark, haunted. \"Do you think I should let her ago?\" he asked again.\n\nAegis stood stiff, his emotions fought. His need to protect this strange, lovely human warring with Paragon's promise that she could be his in a year if he convinced her of Homeworld's appeal. \"No,\" he grated out again. \n\nParagon nodded, unsurprised. \"What is it about her? Why are you so drawn to her?\"\n\n\"Why are you?\" Aegis shot back. \n\nParagon chuckled as he smoothed his hands over the railing overlooking the Boundless Abyss. \"I found her service records. She's an orphan. Has middling marks on her flight courses, but deeper in her files her instructors noted her advanced intellect, her ability to control her emotions. She was being under-utilized. Too smart and snarky for her own good,\" he smiled wistfully. \"Also I love her hair. It reminds me of what I've lost. The Gilded that are now all but gone from this world.\" He turned back to Aegis. \"And you?\"\n\nAegis looked away, pondering. As always, he kept tabs on Zoe's mind as she slept. She floated in a serene sleep. He liked to imagine he had a bit to do with it. \"Her mind feels like my own Oasis. I want to fall into her.\"\n\nParagon laughed, \"And her tart little body doesn't hurt.\"\n\nAegis gritted his teeth in embarrassment. The image of her on Paragon's lap as she was pawed over by the Oathkeepers at the Gala left him nauseated with jealousy and resentment. But he'd fallen into her eyes as he'd fucked the other females, it was Zoe he buried himself in and her eyes\u2014and rippling emotions\u2014had told him she felt the same. It was astounding. It was like she could separate mind and body like he'd never encountered in another human. Yes, Paragon's cock had been inside her, but it was Aegis that she fucked. \n\n\"Go, sleep.\" Paragon interrupted his flitting thoughts. \"I promise, I will not touch her again unless you're there...or she reaches for me,\" he smirked. \"I can't say I understand it, but she feels safe when you're near, so I will let her have that safety. I know you think me cruel, but I'm no Bastion. I want her to learn to love us.\"\n\nRelief and gratitude flooded Aegis as he bowed his head. Turning, he padded back into the room. He couldn't resist creeping to Zoe before he left though. He crouched beside the bed, ran his fingers feather-soft along her cheek. \"Sleep well,\" he murmured and then hurried from the room.\n\n~~\n\nZoe slept late the next morning. When she awoke, she'd found Paragon stretched next to her, dead to the world. She tried to remember the night before, how had she come to be here? The vision of the brutal Bastion intruded and she shivered, pushing him away. Arms had wrapped around her, carried her to safety. Had held her as she fell asleep. She glanced to Paragon. Not his arms. She looked around the room for Aegis, he was gone. But she hadn't imagined it. He'd held her well into the night. Gave her the comfort she'd needed. She ground her teeth. He could comfort her after she was violated, but would do nothing to stop it.\n\n\"It's too early to have such a racing mind,\" Paragon murmured as he reached for her. She went limp, let him drag her naked body towards his. He was thankfully clothed though and seemed content to just tuck her against him and warm his cool body against hers. \n\n\"That's what happens when you're assaulted in front of a crowd of aliens,\" she whispered. She knew she shouldn't provoke him, but now almost welcomed his hard eyes over the tenderness with which he held her. It seemed so false after what he'd let Bastion do to her. \n\n\"You don't understand our ways. I would have insulted Onyx, my ancestors, if I'd refused him the small concession.\"\n\n\"The small concession,\" she parroted, her words dripping with venom. \n\n\"You are quite small,\" he chuckled as he nuzzled his face into her shoulder. \"You're also strong Zoe, for a human. I think you will do much to survive. What is servicing that brute in the scheme of your life?\"\n\n\"So my dignity, my body, mean nothing to you?\" she snapped. \n\n\"They mean the world to me. And I think they are just fine this morning,\" he said softly, though his voice hardened slightly. He was losing his patience with her. \"You seem intent to not let me sleep any further and I've promised Aegis I will not touch you unless you ask...\" he trailed off and ground his stiffening length against her. \"And you don't seem inclined to do that,\" he chuckled and rolled from the bed. \"So I'll be off for the day. Rest up my love.\" He stretched his golden body in the morning sun as he ran his eyes over her naked form. \"Aegis says you're enjoying your library. Have him take you to the Silverwing Falls today though. I can't bear to imagine you locked inside all day.\"\n\nShe lay in the bed until he tossed on some fresh clothes and swept from the room with a gentle smile. When she was satisfied the door had clicked locked behind him she slid from the bed. Padding towards the bath she stood in front of the large mirror on the edge of the room and took inventory. The bruises were still dark on her neck and wrists. Her lips were red and chapped. Her nipples also red, swollen and tender. She felt at her head, it was tight and achy from Bastion's grip on her hair the night before. Anger pulsed in her stomach at her state. At Paragon's light reaction to it. He was a sociopath, she decided. \n\nTurning from the mirror she dropped into the pool. Though she vaguely remembered bathing the night before. Or Aegis bathing her...? She couldn't get clean enough. She didn't let her mind dwell on Bastion or the dozens of other Oathkeepers that had touched her body at the gala. 'Just a body, just a body,' became her mantra as she scrubbed at her skin until it was beet red. She swiped at her sex with the cloth, cringing from how sensitive and sore it felt. \n\nParagon's large, ridged cock hadn't left her entrance for most of the night, filling her over and over again with his molten seed. She reddened. She'd never let a man fuck her without protection before. It was a death knell to a pilot's career to fall pregnant. At thirty she'd managed to fuck her way through the academy and ranks of pilots without incident. She'd lied\u2014of course\u2014to Paragon. No woman ever revealed their true number of partners. Where men always exaggerated, women always under-sold. 'Oh, you're the most impressive cock I've ever seen.' 'Oh COURSE I've only had ten partners.' She laughed harshly to herself. It was easily twice that number. \n\nThe sound of the door opening rocked her back to the present. She dropped down in the pool, peaking over the ledge to find Aegis slip into the room. He glanced around, his eyes falling on her and he straightened, averting his eyes. \"I'll go wait on the terrace,\" he gruffed and paced across the room.\n\nShe watched him go, then rose reluctantly from the tub. The night sat heavy against her. Her manic arousal at the hands of Paragon left her ashamed. And Aegis had watched all of it. As he'd fucked female after female he'd watched her, lust in his eyes. She shook her head, pushing at the confusing feelings. She was a prisoner. Aegis was nothing better than a guard who treated her slightly better than the others. It was normal for her to want to turn to him...\n\nShe wrapped a towel around herself and quickly dressed. A light golden dress again. Paragon certainly had a taste for her. She tied the dress at her neck and sopped at her thick, damp hair. It would dry in lovely ringlets, the one, strange mercy of being a prisoner of the Oathkeepers is that she could wear her hair loose for once. As a pilot she'd always had it tied tight against her scalp. \n\nShe returned into the main chamber and already Aegis was turning, sensing her approach. His eyes ran over her and then he was gritting his teeth and avoiding her eyes. He moved to the mantle and dropped another of the tiny pills into his palm. Zoe wanted to laugh. It felt like an awkward morning-after. Though Aegis wasn't the one she'd fucked last night, she might as well have for what he'd witnessed. \n\n\"Paragon recommends the Silver Falls,\" she said as she bit into a bite of her favorite quiche. \n\n\"Silverwing?\" he asked, turning back to her.\n\n\"Sure,\" she shrugged. \n\nAegis gave her a curious look as he stepped forward to drop the pill into her hand. \"He said that we should go there today?\"\n\n\"He did.\" She paused in her chewing to consider Aegis. He seemed reluctant. Or maybe it was just Aegis being Aegis with his gritting teeth and intense eyes. The image of him the night before again intruded, and Zoe's heart leapt into her throat. Gritting her teeth in imitation of her severe guard she pushed the vision of him fucking the pale Ivory from her mind. \"So, is it far?\" she asked him, resuming her chewing. \n\nAegis slowly shook his head as he glanced out the window. \"It's not. Just a few minutes' flight.\"\n\nZoe perked as possibilities swirled. If he was taking her to a shuttle she might be able to look around, sneak onto one later to escape eventually. Oathkeeper tech was insanely advanced, but she was confident enough in her pilot skills to be able to figure out one of their ships...given enough time. \n\n\"Well I'm ready to go when you are,\" she said and jumped from the chaise, brushing quiche crumbs from her fingers. \n\nAegis cocked his head at her enthusiasm, but then a smile pulled at his mouth. \"All right, come on,\" he said, but then surprised her by turning back to the terrace. He crossed towards the railing and turned to her, raising an eyebrow. \n\nRealization dawned and Zoe frowned. A few minutes' flight...by Oathkeeper. She followed behind him slowly, her brows knitting as she tried to think of an idea. \"I thought...we'd go by shuttle or something?\"\n\n\"Why?\" he asked.\n\nHer frown deepened as she stepped into the sun on the terrace. \"You're just...going to carry me the whole way? What if you get tired?\"\n\nAegis barked a laugh as he coaxingly reached a hand for her. \"I won't. My battle armor weighs more than you.\" \n\nZoe grimaced as she let him pull her towards him. \"Just don't let me fall.\"\n\nHe dipped his head and met her eyes in what she assumed was his attempt at a reassuring look. \"Never. Now hold on.\" \n\nHe bent and swept her off her feet, tucking her tight against his chest in what was becoming a normal mode of transport for her it seemed. She wrapped her arms around his neck and then they were lifting from the ground. His giant black wings beat in slow, steady strokes as they lifted from the terrace. Zoe gasped and clutched at him, watching the ground fall away. Higher and higher they rose until they hovered over the tallest spire of the palace. Stretching endless in one direction was the shimmering ocean. Craning her neck, she looked the other direction. The huge river delta the palace sat upon churned with sprays of white from the waterfalls. The massive river stretched north, a azure winding serpent.\n\n\"Wow,\" she murmured, forgetting for a moment she sat in the arms of her alien kidnapper. \n\n\"We're following the river several miles,\" he said and she looked up at the smile in his voice. He looked down at her, pride in his eyes as she marveled at the view. His ebony skin gleamed in the sun as his wings lazily flapped. A beautiful, terrible demon, and she clung to him. Zoe swallowed as she met his eyes, and then they were moving again, swooping quickly north. \n\n~~\n\nAegis swelled as he flew north, Zoe held lightly in his arms. She clutched at his vest, her knuckles turning white as the wind whipped at her air. He considered flying, on and on, spiriting her away from the palace and Paragon. He glanced down to her face, her eyes darted delightfully, soaking in the view and for once her mind seemed to flow as freely as the air around them. \n\nSilverwing Falls roiled just ahead. A high, majestic waterfall frequented by lovers. Where the Oasis was Paragon's garden for much needed release and riotous pleasure...Silverwing was where you brought your mate. Your chosen partner. The beauty of the falls was the perfect backdrop for romantic strolls and declarations of love. Aegis's mood darkened as he tried to think of what game Paragon was playing at. Was it just more torture for Aegis? Likely. Zoe would only see the loveliness of the view, not know that here is where Aegis's parents had declared their undying love for each other. \n\nHe gritted his teeth as he touched down at the base of the falls and carefully set on her feet. \"Silverwing Falls,\" he said. \n\nZoe patted at her wild hair as she spun in a slow circle, taking in the view of the falls. They stood on one end of the large clear pool the falls fell into. The foaming, white water churned across the pool, dancing over the smooth rocks. \"Well, it's lovely,\" she said simply as she turned back to him. \"Why do you think Paragon wanted me to come here?\"\n\nAegis forced a shrug. \"The view I imagine. And likely just to get you out of the palace. Bastion is still skulking though I hear he's heading back to the front today.\"\n\nZoe's expression darkened and she turned away from him, strolling towards the water's edge. She lifted the hem of her dress and stepped into the water, walking along the shoreline. \"He's the face of your people. The ruthless, terrifying Oathkeepers that take slaves and brutalize humans.\"\n\nAegis swallowed as he followed behind her. \"Yes. Paragon's leash is...long on Bastion. He feels he cannot check him as it would be a contradict his mother's commands.\"\n\n\"The last, dead Gilded queen,\" she glanced back to him.\n\nAegis nodded. \n\nZoe stopped and turned to face him, her eyes strident. \"Why not make peace with the Confederation? You have so much power. Why doesn't Paragon allow any peace treaties, anything?\"\n\nAegis sighed. Little, na\u00efve Zoe. Small, short lived humans. \"We have. Hundreds of years ago when your people were first dipping your toes into the stars. Oathkeepers welcomed them, tried to guide them. But then we realized how small your lives are. A treaty made with a government would be forgotten, swept aside in the space of a breath to us. The Gilded grew weary of trying to help, of treating with one king or president or Confederation only for them to die and all their work with them.\"\n\nZoe furrowed her brow, looking up into his face as if she might map the history of her people. \"You've seen the rise and fall of all of that? We left earth nearly two thousand years ago. In all this time you've just watched?\"\n\nAegis nodded. \"Little, clever humans that wanted to explore the stars. Like a pack of wolves that has grown ravenous. We are too different. The only thing your people, your governments understand is power. So we hold our borders. We watch you scrabble and grow. And then a few hundred years ago Paragon grew curious, took his first human pet.\"\n\nZoe surprised him by laughing. \"So it really is like wolves. He's working on domesticating us. Turning us into his loyal dogs.\"\n\nAegis couldn't resist. He reached a hand for her, ran it along her arm. She shivered. \"I would not see you tamed Zoe.\"\n\nShe sucked in a breath, turned her enchanting face up to him. Those eyes of hers welled. \"If I am it's because of you. If Paragon breaks me it's because you've brought me here. Because you let him hurt me.\" Her words were accusing, her eyes sad. He knew her strength, he felt her mind ripple with it. But she was also smart. She could fight back as much as her brave mind allowed, but eventually Paragon would break her. Would turn her into another of his devoted human pets. She knew this. Whether it took a year or twenty, Paragon had all the time in the world. Zoe did not.\n\n\"I cannot disobey him,\" he rasped as he gripped her arm tighter. Did he search for her forgiveness?\n\nTears slipped down her cheeks as she turned away. \"I know you can't.\"\n\nHe watched her pick her way along the shore. She made for the waterfall up ahead. As he watched, misery bubbling within him, she found a spot on one of the large rocks next to the churning water. She perched, turning her face up with closed eyes to feel the gentle, cool misty spray of Silverwing Falls. And finally, he let himself wonder. Could he? Could he disobey Paragon? In this place where his mother and father had revolted and sworn to love only each other, could he find that strength in himself? To be called Oathbreaker?\n\nNo, not even for Zoe. Like with all humans her life would be snuffed in the blink of an eye and then he'd be alone. Forever an Oathbreaker. And what hope was there? Could he let her escape? Paragon's fury would be terrible. Aegis had no doubt he would go to the ends of the galaxy to retrieve his pet. No human Confederation could stop a force of Oathkeepers intent on carrying out Paragon's bidding. \n\nNo. The only safe place for Zoe now was here, where at least Aegis could offer some level of protection. After all, she only had to survive a year. Aegis sighed as he watched her bask in the mist. A year. He prayed she'd choose to stay, but deep down, he knew if she did it would likely be because of Paragon. He was inimitable, inevitable. He'd seen it too many times. The adoring eyes of Paragon's pets as they came to crave him. \n\nAnd then her eyes turned to him. The blue shone, nearly the exact color of the pool she sat next to. She stared at him, unblinking and for a moment, he had the feeling she could feel his emotions like he could hers. He blinked as they stared at each other across the shore. \"I'm going swimming,\" she chirped. \n\nShe stood, pulled her dress over her head and dropped it in a golden puddle at her feet. She stood a moment, still holding his eye and her pale skin glowed in the sun. His heart rambunctiously hammered within his chest as he took her in. Full hips, a milky smooth stomach, perfect round breasts, the nipples bright against her skin. His cock surged to attention as he ran his eyes over her. Her thick golden hair fell in waves over her shoulders. She smirked and then dove into the water. ",
        "He blinked as the spell was broken. She broke from the surface, splashing and gasping from the shock of the cold and he was forced to laugh. She flicked her eyes to him and gave him another smirk as she tipped onto her back to float into the center of the pool. Her breasts were milky orbs brushing the surface of the water and the urge to swoop across the distance and pounce upon her grew overwhelming. \n\nHe paced to the edge of the water, keeping watch as she floated. \n\n~~\n\nZoe felt Aegis's eyes on her. They weren't unwelcome. She wondered if she could tempt him to disobey Paragon. It seemed her last gambit. The massive Oathkeeper craved her. His eyes always followed her. She couldn't miss the swell of his manhood as he hungrily watched her. She'd never really used her womanly wiles to manipulate before. Other than a drink here and there in the pilot's bars she'd frequented... \n\nShe sensed the struggle within Aegis. The strange war being fought between him and Paragon. Paragon tortured him. Used her against Aegis. But there was an odd mutual respect between the two and she wasn't sure if her 'little, clever human' maneuvers would come to anything though.\n\n\"Aren't you coming in?\" she asked. Lazily flapping her arms and turning in the water to find his eyes fixed on her. He swallowed and worked to master himself. Even without the psychic control of the Oathkeepers, she was finding it easier and easier to read Aegis. She'd thought before his eyes were an unrelenting black abyss, but now she could only see how expressive they were. How they drank her in. \n\n\"I can't guard you if I'm fluttering about like a schoolboy in the water,\" he gruffed, but stepped to the edge of the pool. He wore his standard black leather pants, black vest that left his arms bare and his wings room to extend easily. She eyed his supple leather boots and nearly burst laughing at the image of him awkwardly trying to pull them off to jump into the water. \n\n\"What if I were to start to drown though?\" she mocked and dropped below the surface. She surged back up, flailing her arms and sputtering dramatically. He crossed his arms, a smirk itching at his face as he watched her antics.\n\nShe let her legs drift back up and floated again on her back, smiling into the sun. For the first time she felt a bit of the weight of Homeworld lift from her chest. She could almost imagine this was a lake on Earth. The man on the shore she taunted might be a friend. A new lover. She glanced back to him. Aegis's eyes were closed, soaking in the sun as well. His eyes were turned up and the sharp angles of his severe face caught the light, made him seem a handsome, ebony carved statue. \n\nZoe dove back below the surface, plunging down down down until her fingers brushed the cool, smooth stones of the lake bed. She grabbed up a handful and then rocketed back to the surface. She broke back into the warm air and filled her lungs with a yell. Finding Aegis anxiously watching on the shore, she grinned and swam back towards him. The closer she drew, the softer his face grew with relief. She scrambled back onto the shore and squeezed at her hair with one hand while examining the rocks she'd grabbed with the other. She dropped all but a deep black one, turning it in her palm so it caught the light. She glanced up to Aegis, he'd picked up her dress and held it out to her, his brows knitting. \n\nShe stepped close to him, let her fingers slide against his hand as she plucked the dress from him. He sucked in a breath and she flicked her eyes down his body. The hard lines of his thickening length were visible through his pants. He was so very large, in every way. If she pressed herself against him, her breasts would come only to his hard stomach. Reaching her arms to full height she would barely brush the tops of his shoulders. He could do anything he wanted to her. Only his obedience to Paragon kept him from sweeping her up, his eyes and bulging manhood told her what he wanted. She wanted to test that obedience. \n\nSlowly, she slipped the dress back over her head, smoothing it over her breasts, thumbing absently at her hardened nipples that stood at alert against the silky fabric. She glanced up to him again, held his eye. \"I want to see the top of the falls,\" she ordered as she flicked her hair from her shoulders. \n\nAegis gulped and nodded. His throat worked as he reached for her, sweeping her again into his massive arms. She let her fingers run along his biceps, thicker than her own legs. With a few hard strokes of his wings they again rose into the air and she sucked in an involuntary breath and grasped at him. She felt carried by a perfectly chiseled statue. Though they rose a hundred feet into the air, she felt safe, enveloped in the solidity of Aegis. \n\n\"There!\" she gasped and pointed to a jutting rock that sat at the tip of the waterfall. \n\nAegis's chest shook against as he chuckled and swooped towards it. He set down lightly, tucking his wings and letting her feet drop to the sunwarmed rock. Zoe grinned as she stepped gingerly towards the edge. The water churned around them, falling into a foaming, white cascade nearly a hundred feet into the pool below. She peered over the edge, then glanced back to Aegis. \n\n~~\n\nZoe's enthusiasm left Aegis grinning along with her. He took in the falls with new eyes. Her excitement and freely darting mind was such a welcome respite from the intrigues of the palace. He watched her step towards the edge. As she glanced back to him her eyes turned calculating. She set her lips in a hard line as she held his eye and then he felt the change in her energy. She rippled with challenge. And then she turned back to the edge and leapt. \n\nPanic screamed in Aegis's mind. He dove forward, tucking his wings tight to barrel over the edge after her. She fell, just out of reach, her wild hair streamed as a beacon for him though and he beat his wings and surged downward. She tumbled in a free fall and he extended an arm and caught one of her legs. Tugging her into him, he grabbed at her waist and pulled her tight against his chest. With another heavy flap of his wings he pulled up, still only halfway down the massive waterfall. A scream burst from her lungs, and then she was laughing, high, hiccupping laughs as the adrenaline coursed through her. Rage settled in his stomach, replacing the bubbling panic. Swooping over the pool he skidded to the ground, landing heavily and still clutching her against his chest. \n\nShe laughed still, turning her face up to meet his eyes. He dropped her to the ground, fury rippling through his limbs. \"What was that? Why would you do that?\" he roared as he stepped back, unsure if he could control his mounting anger. \n\nHer laughs finally died and she smirked up at him, running a hand through her tangled hair. \"You said you wouldn't let me fall,\" she shrugged. \n\n\"You stupid, reckless human,\" he thundered and took a step towards her. His fists clenched. She was so fragile, so breakable. The vision of her splattered and bloody at the base of the falls pounded behind his eyes. \"You could have been killed. You know I'm meant to protect you\u2014\"\n\n\"Yes. From everyone and everything but Paragon. Only he's allowed to harm me. Is that right?\"\n\nShame burbled within him, but then he saw her eyes, sensed her satisfaction. \"You think you prove a point?\" he growled. \n\n\"Don't I? You treat me so delicately. Preserving me so Paragon can have his way. Even my body isn't my own. You're only worried I'd be hurt because of what Paragon would say. How he'd be angry at you!\" her voice rose angrily to meet his. \n\nAegis snarled and grabbed at her arms. He pulled her roughly against him, stooping to smash his mouth against her. Zoe sucked in a breath in surprise, giving him just the opening he wanted. He shoved his tongue into her parted lips, kissed her brutally, dominating her mouth, forcing his way into her. He lifted her, pulling her tight against his chest as he assaulted her mouth. He'd show her. It wasn't just Paragon he preserved her for. He couldn't bare to see her hurt. He clasped his arms around her, palming her head and pressing her impossibly tighter against him. And then she moaned and her legs wrapped around his waist. She grabbed at him, snaking her arms around his neck and melting against him. \n\nHis manic kiss turned hungry, mindless, as he tried to consume her. Her small, tart mouth parted for him and he pulled her small moans of excitement into his own lungs. He would take her, take everything. She was his. No one else's. With a growl he bit at her bottom lip and she whined as she dug her fingers into the back of his head. Her hips rocked against him as she clenched her legs about his waist and his lust for her rose screaming within his every cell. He would throw her onto the sunwarmed shore. Rip the stupid gold dress from her and show her who she really belonged to. \n\nHe grabbed at her hair, tugged her head back to give access to her neck. Her lovely pale neck panted in the sun and as he dipped his head to run his lips along it, his eyes fell on the bruises. The marks from Paragon's fingers were still dark, a collar around her neck. A reminder. \n\nAegis panted, froze with his mouth poised over her. Reality crashed back down and still she clung to him, moved her hips seductively against him, inviting and mewling softly. He dropped his hands to her waist, pried her from him and let her drop back to the ground. She swayed for a moment as she stepped back, her eyes heavy with arousal as she watched him. And shrewdness. There was still that current of calculation within her. She tested him. He darted his mind against her and saw it was true. The lust was real, but deeper, simmering underneath was still her anger, her desire to escape Paragon. \n\n\"I shouldn't have done that,\" he murmured as he stepped back from her. He wanted to give her what she wanted: escape, release in all forms. But he could not. \n\n\"I wanted it,\" she whispered huskily and took a step towards him.\n\n\"Only part of you did. I cannot be your tool to escape Paragon.\"\n\nZoe swallowed and her eyes narrowed. \"I'll tell him you kissed me. Had your way with me.\"\n\nAegis sighed. \"If you do he will punish you. Don't you understand? He hurts you to punish me, little fool.\"\n\nZoe sucked in a breath as realization smacked her. \"He's told you that? He knows that you want me. That you...care about me?\"\n\nAegis leveled her with a severe look. \"Of course he does. Paragon knows everything.\"\n\nHer face softened and she took a step towards him. \"And it's true? You care about me?\"\n\nAegis's heart leapt, his throat closed around the words as she stared so urgently up at him. \"Yes,\" he choked. \"I care very much for you.\"\n\nHer face hardened instantly. \"Perhaps if you're a good boy Paragon will let you have your way eventually. Is that what you think?\" He could not protest. \"Take me back to the palace. I'd hate to tempt you further. I know how much it will wound you to have Paragon punish me for your weakness.\" Her words dripped with sarcastic venom and Aegis hung his head. \n\nGingerly he reached for her, tucking her light body once more against his. As he lifted into the air, he resisted dipping his head to burrow his face in her whipping hair. He felt the acid of her anger at him rippling in waves from her. They mixed with her sadness, her disappointment and her tears fell against his chest as he flew. \n\n~~\n\nThey landed lightly on the terrace and Aegis held Zoe to his chest a moment too long. She tipped her head up to him. The tears had dried on her face and been replaced with somber resignation. She considered pulling his face back down to hers. The thought of forcing him to defy Paragon consumed her. He cared for her. Lusted after her She thought his sense of duty had held him in check before but learning of Paragon's threat somehow changed things. It was her body on the line. Her skin that would pay if Aegis lost control. It made her crave him more. \n\nAegis set her on the ground and stepped from her, hurrying back into the chamber. She heard him shuffling with the pill containers, time for her next dose it seemed. She followed after him and froze in the doorway. Paragon reclined on the chaise, he watched Aegis's back, his brows knitting as the Onyx avoided his eyes. The golden gaze of Paragon slid deliberately from Aegis to Zoe and she felt her mind flipped open like a book. He cocked his head as if he read every thought in her head, his eyes running slowly up and down her body. Suddenly the thought of challenging him seemed terrifying, unspeakable. \n\n\"Did you have a nice trip?\" he asked softly. \n\nAegis turned back to her, holding the small pill in his hand. She stepped forward on stiff legs. \"Yes. It was lovely. Thank you for recommending it.\"\n\n\"Romantic, yes?\" his voice swept like velvet across the chamber. \n\nShe swallowed and glanced to Aegis. He avoided her eyes as she snatched the pill from him and popped it in her mouth. \"Under the right circumstances, yes, it might be,\" she said, trying to swallow the pill with her suddenly dry throat. \n\nParagon swiveled his head, taking in Aegis now. \"What did you think of the circumstances Aegis? Would you consider them romantic?\"\n\n\"Yes,\" he grated out and Zoe inhaled sharply, flicking her eyes to see Paragon's reaction. He smiled, a slow, cruel smile. \n\n\"I thought you might.\" Paragon's callous manipulation of Aegis sucked the breath from Zoe. He was playing with them. They were both like toys within his hands. \n\nHe turned his hungry eyes on her like a cat considering its lunch. \"Come,\" he ordered and Zoe's feet moved. She crossed the room as if she was still underwater, coming to stand across from him. \"Aegis, please remove her dress.\" Aegis stepped behind her and Zoe held Paragon's gaze as she lifted her arms and Aegis gently pulled the dress from her. She dropped her arms limply, staring at Paragon, trying to give him nothing. The gravity of Aegis stepped back from her. \n\nParagon ran his eyes over her, then reached a hand out. He splayed his fingers on her belly then down. He brushed at her pale pubic hair, slipped his hand between her thighs. She felt her slickness as his fingers searched her folds. He raised an eyebrow and glanced to Aegis behind her. \"You prepared her...but resisted?\" He chuckled as he glanced back to Zoe. \"I would know if that massive cock of his had been inside you.\" She squirmed as his fingers continued to gently explore. He held her eyes as he circled her clit. \"So, Aegis resisted you. Perhaps he doesn't crave you as much as I thought.\"\n\nAnger swirled in her belly. He'd sent them to a trap. Wanted Aegis to give in so he could punish her. \"Or perhaps he's not an animal, ruled by his instincts.\"\n\nParagon's eyes hardened though his smile stayed soft. \"Like a human. Wild, untamed Zoe.\" He pushed a finger into her entrance and Zoe stiffened, clenching around him, trying to deny him access. He paused, feeling her resistance, then his eyes flicked up to Aegis. \"Hold her.\"\n\nInstantly Aegis's arms were around her. They wrapped possessively, smashing her breasts tight against his arms as the swelling length of his cock pressed against her lower back. She glared at Paragon, matching his calculating look, and then she tilted her hips back, grinding against Aegis, tipping her head back against him in surrender. Paragon let his finger slip from her as he watched, his expression turning dark. \n\n\"You think he offers you some protection?\" Paragon said as he stood slowly. He stepped close to her and Zoe was pinned between the two massive aliens. Paragon ran a hand up her stomach, then grabbed at her throat. She strained back into Aegis, but he stood at statue, clutching her against him still. Paragon's hand began to squeeze, tighter and tighter until her vision began to swim. She tried to kick out at him but felt her limbs turning to lead as his fingers tightened. Aegis. He would stop it. He wouldn't let Paragon go too far. Aegis, Aegis, Aegis...her mind screamed as the black closed in. \n\n~~\n\nZoe drifted slowly back to consciousness. Her hands were bound, stretched above her head. Her legs were also cuffed, stretched so she laid spread on her back. Paragon stood over her, running a light finger down her thigh. She felt the shadow of Aegis move up to the bed. She turned to him, and the pleading froze in her throat. He held the thick, leather whip in his large hands. His expression was mournful, resigned. \n\nShe snapped her head back to Paragon and he smiled benevolently. \"Here's the deal Zoe. Aegis there is going to start whipping you. He will try to be gentle...but he is quite strong unfortunately.\"\n\nNo...\" she panted, turning her face back up to Aegis. \"Please no,\" she caught his eyes, shook her head as he fingered the whip. \n\n\"Aegis.\" Paragon said softly. \"You do it or I will. Which of us do you think will be more careful?\" Aegis gulped and set the whip on her stomach. He held it still there for a long moment, his jaw working and his eyes running frantically along her skin. Did he look for a place it would hurt less? Finally he raised it slowly back up, dropping it halfheartedly back onto her stomach. Zoe jerked and glanced to Paragon. He frowned and squeezed at her thigh menacingly. \"More enthusiasm. I want to see red on that lovely skin of hers.\"\n\nZoe swallowed, looking back and forth between the two. Aegis's shoulders slumped as he again lifted the whip. She pleaded, \"Please don't\u2014\" \n\nHe snapped it against her stomach and she shrieked, bucking against the bed as the pain arced from the hot sting. \"Again,\" Paragon ordered softly. \n\n\"No,\" she cried, tears welling in her eyes as Aegis lifted it again. \n\nHe slapped it down across her stomach again and she sobbed, struggling against the bindings on her arms. \"Again, on the breasts this time,\" Paragon purred. \n\nAegis gulped and glanced to Paragon, defeat in his eyes. \"Please, Aegis--\" she panted. \n\nHe brought it down across her breasts and she again screamed, arching from the shot of pain and adrenaline it stoked within her. Her sensitive nipples seemed to clench, growing hard as they throbbed. \n\n\"Continue,\" Paragon purred and she bucked in the bed feeling his head drop between her thighs. \n\nAs Aegis again dropped the whip against her breasts Paragon, pressed his mouth against her trembling folds. He parted them slowly with his tongue, easing in with gentle licks. His lips brushed up her pussy, sucking and kissing her deeply, seeming to take her entirely into his mouth. With every stinging slap of the whip she bucked, slamming her hips into Paragon's face. She felt him smile as he lapped at her folds and to her horror the burning heat from whip began to radiate straight to her center. Paragon's mouth grew insistent, suckling at her swelling folds, pressing hungrily into her quickly moistening entrance. As the whip again slapped against her stomach she screamed, arching into Paragon's mouth and he grabbed up her nub between his teeth. He tugged gently, lengthening her scream as she arched against him, trying to follow his mouth. Finally he released her, sending his tongue in quick circles around her swelling clit. \n\nShe panted, horror at her quickly winding climax sending her struggling against the restraints. But Paragon was relentless, his tongue lapped at her slit, sending her higher and higher still. As the whip fell once more across her breasts Paragon wrapped his mouth around her center. He suckled at her clit and her wails of pain turned to howls of pleasure as he pulled her climax from her. She thrashed in the bed, thrusting her hips against Paragon's face. Her body burned with shame but she was beyond caring. The only thing that existed was the pleasure that pulsed through her body.\n\nAnd then it was too much, her insides clenched as Paragon continued to lap savagely against her exploding center. She sobbed, trying to pull her hips from him, but he followed her with his mouth, thrusting his tongue inside her to lap up more of her rushing juices and suckling at her screaming clit. ",
        "\"No, no, no,\" she panted, tears rolling thickly down her cheeks as she writhed in the bed. She found Aegis's eyes again. He'd frozen, whip held in the air as he watched her convulsing, body. Lust filled his eyes. His expression turned hungry, animalistic. \"Please,\" she moaned. \n\n\"She said please, Aegis,\" Paragon said. He'd lifted his head from her quivering channel and rocked back on his heels as he watched the two of them. \"If I said you could have her now would you take her? I think she wants it. She's so lovely and fragile and helpless. If I said you could crawl upon her and fuck this delicious little pussy would you?\" Paragon stood. \"Or would you rather something more romantic. Would you want her to wrap her arms around you as you take her tenderly?\" His eyes turned gleeful as he tugged his pants down. \"I've had both and even I'm unsure which I'd choose.\"\n\n~~\n\nAegis stood frozen. Zoe trembled in the bed. Her body was bright red, her lovely breasts swollen and her nipples dark and standing at attention. Paragon's voice pounded within him. Shame rose as he realized he would fall upon her in a second if Paragon gave the word. The pain in her face only made her more beautiful, the flush of her orgasm gave her eyes a heavy, aroused expression and he would gladly take the beautiful, bound human. \n\nParagon chuckled as he crawled across the bed. His golden body dwarfed Zoe and still Aegis stood stiff, whip clutched within his hand. With a smooth movement, Paragon slammed into Zoe. Aegis tried to look away, he didn't want to see this. But Zoe's eyes held him, they were lust filled and pleading. Paragon grabbed at Zoe's bound wrists, thrusting punishingly into her as she bounced beneath him. Her eyes finally closed as Paragon pummeled into her. He clutched at her, pounding his hips against her and she began to moan as she arched into Paragon. \n\n\"You see how he just watches. It's all Onyx can do. I know you crave him, but who's cock is in you now? Who owns you Zoe?\" Paragon rasped as he slammed into her. \n\nAnd she whined, throwing her head back as she bucked her hips frantically against him. \"You. Your beautiful, golden cock is inside me,\" she gasped.\n\nParagon snarled as her words stroked against him and he picked up the pace, ramming against her in wild thrusts. \"Admit it, you like to be fucked like this, don't you? You like when I show you who you belong to. How I own every part of you?\"\n\nHe gave a last brutal thrust and Zoe howled, arching against Paragon's slowly grinding hips. She pulsed against him with another climax, her breaths coming fast and urgent. Paragon glanced up to Aegis, that golden face grinned with satisfaction as he held a convulsing Zoe beneath him. She collapsed finally beneath him and Paragon pulled back, his hardened cock sliding from her and leaving her belly and thighs shining with her own juices. \n\n\"Unbind her Aegis,\" he ordered as he stood from the bed and unbound her ankles. Aegis swallowed then carefully leaned over her and uncuffed her wrists. Her hands dropped limp to the bed. She seemed to float somewhere far away. Paragon grabbed an ankle and jerked her across the bed toward him. She finally seemed to come back to the present as she shook her head and weakly tried to grab at Paragon's hands. He grabbed her wrists and wrenched her up so she knelt at the foot of the bed facing the Gilded. \n\n\"I think you're going to like this next part, my love,\" Paragon purred as he dropped his head, kissing her deeply as he held her hands tight against his chest. Paragon broke from the kiss and glanced to Aegis. \"You will as well.\" Paragon grabbed up Zoe's chin and held her face to his. \"Go suck Aegis's cock.\"\n\nAegis and Zoe both stiffened and he moved to step back from the edge of the bed but Paragon's eyes hardened, freezing him back in place. He flicked his eyes back down to Zoe and smiled, \"I know you want to.\" \n\nGently he gave her a push. She turned slowly in the bed, meeting Aegis's eyes. She sucked in a breath as she crawled across the bed towards him, her blue eyes huge. He sensed the war within her and it was reflected in him. He wanted this. Had thought of her lovely mouth wrapping around his manhood so many times. But Paragon toyed with them. This wasn't right. Wasn't how he wanted her. \n\nShe knelt in front of him on the edge of the bed and then her light fingers brushed up his thigh, rested against the top of his pants. She looked up to him and he found himself reaching down, tenderly cupping her cheek. She gripped his pants, untied them and began to tug them down. So badly he wanted to stoop to kiss her, but Paragon watched. He couldn't risk it. Tentatively she reached into his pants, and his cocked twitched at her heated touch. She grasped him, freed his throbbing cock. He watched her gulp nervously as she examined him and he felt suddenly self-conscious. But then her tongue darted to her lips and she lowered her mouth to him. As her lips brushed down his length Aegis felt his entire body stiffen in anticipation and heady arousal. She ran her tongue along his base and then traced back up to swirl around the tip. He found his eyes closing as the pleasure rippled through him. As her lips closed around him he nearly lost control, the urge to thrust savagely into her mouth pounded within him. But he held himself stiff, let her take him slowly deeper and deeper within her. His Zoe, he thought as he let himself fall into her. Her gentle, warm mouth wrapped around him. She brought her hands to his thighs, gripping at him as she began to bob her head. His Zoe. \n\n~~\n\nZoe sensed as Aegis's mind began to flee. He clasped at her hands on his thighs. Holding her lovingly as she moved against him. He slowly pressed his pelvis forward but he held himself steady, let her set the pace. His breaths came faster and faster and stroked against her. His arousal stoked a satisfaction deep within her. She wanted to lift him, wanted to set this alive within him. With her mouth around his enormous cock she suddenly felt the intimacy of the moment. They weren't just bodies anymore, this was Aegis, her reluctant protector that she gave pleasure to. Happily. She imagined the cock in her mouth instead pushing inside her dripping pussy. Imagined Aegis holding her with his tender hands as he took her slowly, gently. \n\nAnd then she felt hands on her ass. She sucked in a breath, pulling her face from Aegis to glance behind her. Paragon knelt on the bed. He gripped her hips and smiled patiently as he hitched her ass up. \"Keep going,\" he instructed softly. \n\nAegis stiffened against her, his hands grabbing hers again, pressing them against his thighs. She met his eyes and braced as Paragon positioned himself behind her. And then he was pressing into her, slowly stretching her aching entrance wide. She sucked in a breath as he pushed into her and looked up to Aegis. He held his heavy cock in his hand. Zoe let a low whimper escape her as Paragon began to thrust into her again. She'd never felt so wanted in her life. She found herself opening her mouth, stretching to take Aegis back between her lips. His eyes grew heavy with lust and he guided himself back into her mouth. \n\nWith every slow thrust from Paragon she took more of Aegis into her mouth. The pleasure that began to ripple from Paragon stroking against her inside lit the arousal within her. She sucked hungrily at Aegis. She wanted him. Wanted him inside of her so badly. Could almost imagine it was the girthy, ebony cock that pummeled at her pussy. She began to whine, excitement arcing through her as the Oathkeepers took her. She couldn't tell which one she belonged to anymore, she didn't care. All that mattered was the mindless need that coursed through her. Frantically she swirled her tongue around Aegis, taking as much of him as she could into her. She loosened her throat, swallowing against his ridged cock and finally feeling him begin to thrust shallowly against her. He began to grunt and she realized his climax was close. At her back, Paragon picked up his pace as well, matching the straining, pulsing hips of Aegis.\n\nZoe madly grabbed at Aegis's thighs as Paragon slammed her into the larger Onyx. They were both close, she wanted to keen her exhilaration as she was slammed into from both ends. The two cocks that rammed into her left her so very full, humming and heated with lust. And then she felt the pulsing twitch of Aegis's bulging length. She sucked hungrily, her lips wrapping tightly around the bulbous tip as he began to climax. Behind her Paragon groaned and gave a brutal thrust as he began to pulse as well. She was overflowing. Aegis's molten seed surged down her throat and she suckled greedily, wanting to take all of him. Paragon's hands clenched painfully on her waist as he erupted within her, pulsing and grinding his cock against her swollen and throbbing pussy. \n\nAs Aegis's climax receded he grabbed up her hands, pulled her back up and away from Paragon. She felt the heavy, spent golden cock fall slip from her. Aegis wrapped his arms around her as he pulled her up. His mouth fell on hers, kissing her deeply with the slow passion of his yearning heart. She ran her hands up his neck, held his face to hers as she returned the kiss. She wanted more of him. Wanted him to take her, to overwhelm her in every way. With his mouth against hers and his hands gripping her to him, the rest of the world fell away.\n\n\"You may go, Aegis,\" Paragon's silky voice caressed her back. \n\nAegis released her reluctantly, let his hands drop from her and she collapsed into the bed. Her body was completely spent. Quickly, he tugged his pants back up, glancing behind her to Paragon. Zoe trembled in the bed, a puddle of warring emotions and longing as she watched him straighten to leave. He bent to cup her cheek, running his thumb tenderly along her jaw. \"I'm sorry,\" he whispered. And then he was gone. \n\nParagon's golden arms reached for her. He pulled her against him, nuzzling his face against her shoulder as he molded himself around her. His sticky, slowly softening cock pressed into her ass as he tucked her against him. \"So was his cock everything you imagined?\" he murmured sleepily. \n\n\"More,\" she whispered. \n\nParagon chuckled as he ran his lips along her shoulder. \"And to think, I almost let you go. I'm so glad he dissuaded me,\" he whispered. \n\nZoe's world collapsed as Paragon's words crashed into her."
    ],
    "authorname": "SkuldTheNorn",
    "tags": [
        "forced",
        "alien",
        "sci-fi",
        "whipped",
        "nonhuman",
        "punishment",
        "rough",
        "control",
        "threesome",
        "oral"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-oathkeepers-ch-06"
}