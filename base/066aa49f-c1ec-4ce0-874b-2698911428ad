{
    "title": "Silver Fox Pt. 02",
    "pages": [
        "Author's Note: This one is the last part. It's still a romance and still M/f. And there still aren't really content warnings, as none of them seemed to fit.\n\nI loved writing this one and hope you enjoy :)\n\nEssie\n\nMy week was quieter, I noticed. He made me stay away for that long and I was glad he did, even if it was torture to pass him in the hallway, even if his eyes would meet mine and my pussy felt like it opened in a sense of readiness, which was strange when he didn't have sex at all. I even asked Isabelle about that part of it (not because I distrusted him, but because I was so curious when, like I said, my partner's pleasure had once been so important to me) and she smiled in this quiet way and answered that he really just didn't have sex anymore. It was a thing for him.\n\nI asked more, telling her to not tell me anything that she thought would be a betrayal. I told her why I wanted to know and she'd sighed. \"I'm not exactly the right person to ask for this, honey. I realize that, in setting you up in a weird way, I have some responsibility, but I don't fully understand sadism or masochism myself. They're somehow different from domination, which is what I like. They really are.\" And she'd told me about a woman named Courtney, but I couldn't go to Courtney when I looked her up. She was a cold eyed blonde who made me a coward. I ended up messaging Lily instead, after I found her on Facebook.\n\nShe'd given me quite a bit. At first she'd answered that she needed to get home to properly type out an adequate response and, as a bartender, I'd thought she was just throwing me off, briefly forgetting that this group of people was a little different than that. She definitely messaged back and Lily, I was quick to learn, had a big heart for people on the S&M side of things. First, I'm glad you messaged me. It's a thing for me that sometimes I even have masochists come to me for playtimes because they don't have a safe top to go to and have a craving they need fulfilled. I will always try my best to answer or safely give you whatever you need. I hope that isn't an awkward invitation, as I'm not much of a Dominant, and that you'll genuinely ask if you have needs. I know what that kind of pain is like and I know the abuse that can happen. The abuse part is unsafe and bad.\n\nAs for Jackson, I can tell you that he is absolutely safe and a good person. Well, I can tell you he's safe in general, but should clarify that I can't tell you what he is if he's in love, since love has seemed to change every sadist I've ever met. Also, as a disclaimer, this is exclusively for sadists, since Doms have their own rules (they can be sadists, but aren't always and Jackson has always seemed more on the sadism side. My own fianc\u00e9 was a sadist who became dominant when he fell in love with me, for instance).\n\nBut Jackson not having sex isn't as uncommon as you might think. Sadists get a rush off giving pain, for a start. Now imagine that orgasm is a release valve for pressure for most people, and it can be any kind of pressure. It can be stress, frustration, pleasure. It's just a valve that lets the steam out. Well, sometimes a sadist can be pure enough that they don't want to let the valve open for release. If they know that they won't \"blow a pipe\", so to speak, they'll just let it build. For a lot of sadists, there might be a \"leak\" further along the pipe where it slowly releases, but they enjoy the build that comes from giving pain so much that they don't want to let all the steam go at one time. They want to burn in the pressure and enjoy it. Incidentally, masochists sometimes have a similar thing. They don't want to orgasm. They want to burn in the knowledge that they were a used fucktoy, that they were truly abused with no regard for their own pleasure at all.\n\nThe two ideas seem to hold hands. I think Jackson is in total control, probably in more control than ever, but maybe at a sadism point that has reached that purity level where he doesn't release it. I hope this helps explain a little.\n\nIt did, actually, but it also served to make me more fascinated than ever. I had had fantasies of dark males dominating me, taking total control.\n\nBut this was a little more dark than I had anticipated. Even so, it was intriguing, you know? Maybe a lot of people would think I was crazy, but he was so romantic, in this strange way, about how he tormented.\n\nLike I said, I would forever be glad that he made me stay away for a week. Because of that quietness, that newfound sense of discovering something so very dark... and being unable to stay away from it. It felt like a form of hypnotism in some strange way, a kind of dance with him where I knew I was going to go back. I knew I was going to beg him to keep going.\n\nThe week gave me more of a sense of torment than it did any hope of escaping that fact, but it gave me time to realize that I couldn't stay away. I just... couldn't.\n\n\u2014\u2014\u2014\u2014\n\nJackson\n\nShe came back to me. A week later she messaged with a short text that said, I'd still like to play again. And I'd answered with a date setup on a night when she was off work from her bar.\n\nEven then, I tried to resist, tried to keep us with light playing, though, but she came back to me. It made me feel giddy, made me goddamned elated actually, that I gave her pain and she liked that I did. It was the kind of thing that made my sadist's heart sing, the thought that someone enjoyed my form of love and affection. I'd spent life either being too soft for hardcore masochists, who would rather be left on the floor in a sense of abused numbness, and being too hard for quiet submissives, who only wanted a little pain in their play. I liked a lot of physical pain.\n\nBut I was soft when I gave it, soothing. And she came back to me for more of it.\n\nI couldn't get over that fact. I just couldn't. I was trying to not go into what I knew would be more serious games, the kind where I would actively be training her to take more, the kind that would be my version of dating. I was trying to keep to light games, fun little play dates. Trying.\n\nShe wasn't making that an easy thing. \"Back again, Essie?\" I smiled when she sat at the bar, and she was wearing another little party dress with those - Jesus fucking Christ - latex gloves of hers. She looked much more comfortable in Sulfur's than she had that first time, too.\n\nShe looked like someone who belonged. \"Yes.\" Her eyes sparkled and she looked around. \"I'm back again. Also, do you know, I think I'm getting used to seeing all the latex and exhibitionism.\" She studied a dominatrix who was working over a male submissive and the Domme had cutouts in her outfit so that her breasts and pussy were obviously visible. The male, on the other hand, was mostly naked. Excluding the leather hood over his head and the cage and crusher setup on his genitals, that is. \"Hey, I have a question.\"\n\n\"Imagine that.\" I leaned over the bar to kiss her forehead and she grinned in a way that made my heart warm, a way that made me want to hurt her. \"I might have an answer.\"\n\n\"Do you do the exhibition thing?\"\n\nI laughed. \"Look at you, getting interested in all these new kinds of perversions.\" She giggled and I winked. \"I do, sometimes, actually. It doesn't bother me at any rate, but not for tonight for you.\" I touched her nose. \"I already have tonight planned out and it's all for me, I'm afraid.\"\n\nOh, she enjoyed that thought. Her eyes were alight with a dark kind of excitement, a blend of playfulness and fear that warmed me. \"Yes, Sir.\"\n\nAnd I was getting addicted to the sound of those words on her lips. I had another thought, that I would have her say them all the time, a 24/7 dynamic, which was always a thought that disturbed me. It wasn't the kind of thing I was lightly interested in, when I was more of a play sadist and Dom. \"We're waiting for Isabelle to get done, by the way, since she's apparently volunteered with Christopher to take over for me on these nights.\" Fucking Isabelle. Christopher always kept a couple of bartenders on roster because he had to give me a break some time, but I rarely used that fact and the bartenders were all just DMs who would trade with me anyway. They didn't mind one way or another. \"How was your week, by the way?\"\n\n\"It was good. I watched Music Man again last night. What about you?\"\n\nI laughed. \"Good. I watched the football game on my day off. I have fantasy league investment in it.\"\n\nHer face lit up. \"Which player? With that game, it could have either been fucking horrible for you or amazing after the stats were said and done.\"\n\n\"I'll give you a hint. It was fucking amazing for me.\"\n\n\"Nice. So I'm guessing a certain running back was-\" She cut off with the way I smiled, laughing at the self satisfied look on my face. I'd traded for the player she meant, actually, taking a risk and it had come out beautifully.\n\n\"You're a strange little breed of everything, Essie. I shouldn't be so shocked that you know these things, with what I know about your family, but it does sometimes take me by surprise.\" That was a coward's way of saying what was really in my heart, those words I was starting to realize and couldn't speak out loud. I wanted to hurt her more all over again, wanted to make her cry for me so I could kiss her and tell her how good she was being.\n\nShe held out her hands. \"What can I say? I'm a quiet nerd who ended up with a sports obsessions out of an occupational hazard of working at a sports bar and being the only sister of eight. Warning label, though. I'm actually really boring. This and work are the only places I go to in order to get out anymore.\"\n\n\"Oh, yeah. This is definitely boring.\"\n\nShe turned around to watch with me while the Domme from before moved on to fucking her sub's ass with a massive dildo, which was evil when he was still in the cock cage. Essie turned to me and laughed. \"Okay, well, if I'm getting more interesting, then you and Isabelle are to blame.\"\n\nThat made me remember Isabelle talking with Courtney about Essie a couple of nights ago. Courtney had been in high spirits. She was vanilla but learned on him? Yeah, whatever vanilla was left is long gone. And wasn't that the truth with how she so casually watched the male sub, her head tilted curiously, with a lot less shy embarrassment than she'd had that first time.\n\nIsabelle cut us off. \"Okay, go have fun. Sorry about that. I was making sure a client found his way around alright. You know, I think Christopher is hell bent on keeping me around all the time now because I bring people to buy the cards for this place.\"\n\n\"Wow, Isabelle, it took you until now to realize that?\" She shoved my shoulder when I left, catching Essie around the waist as I did, and I smiled down at her while she easily followed, a little bit of that fear coming back to her eyes. \"Ready, sweetheart?\"\n\n\"Yes, Sir.\" There was definitely more fear obvious in her voice, something that made me thrill to the sound of it.\n\n\"I think I'll show you canes tonight, along with the wooden paddle I told you about.\"\n\n\"Oh, God.\" That sound made me both eager and made me feel guilt at how fucked up I was.\n\nIt's just a play date, Jackson. Just a play date. I thought of her looking up at me so playfully, of her talking about my fantasy football stats so casually and tried to keep telling myself those words. Maybe I'd believe them, eventually.\n\n\u2014\u2014\u2014\u2014\n\n\"Same as before. I'd rather see you try to stay still for me on your own, sweetheart.\" I helped her over a dual barred adjustable standing rack, using one bar at her waist, so that she could bend forward over it, and then tethered her wrists to either end of the higher bar, since I wasn't quite mean enough to leave her totally without restriction. The end result was that she was bent forward in a nice position to receive some impact pain. \"Now, place your feet against either side bar of the rack and grab the top. We're going to play a little game. I want you to keep your feet spread like that and to not let go of that top bar, even if you're bound to it. I want you to show me how much you want me to hurt you again.\"\n\n\"Y-yes, Sir.\"\n\nHer voice was shaky and I kissed her neck soothingly, smoothing a palm down her ass. \"Brave girl. This time, we're going to add a few more toys, as well. You liked the clamps so harsh last time that I thought I'd show you a few light sets of my favorite kind of clamps. These are clover clamps.\"\n\nShe moaned when I toyed with her nipples, making sure they were hard, and I had to laugh in her ear with how ready she already was. \"Deep breath. These hurt.\" I walked around the standing rack, meeting her eyes once before I delicately let the clamp fall closed on one nipple, quickly clamping the other as well when she choked.\n\n\"Sir!\"\n\n\"I know. How pretty you are when you suffer for me.\"\n\nShe had to work to breathe through the pressure and I waited just enough time for her to think clearly enough, then went on to the next part before she was quite overly comfortable. \"For the second thing, have you ever had your ass fucked or used a plug?\" \n\nShe moaned, loud, and I smiled. I'd brought a few different new plugs with the thought that if she had experience, I would use one of the larger ones. If not, I had the intention of training her to it. Just a play date, Jackson. \"No, Sir. Not to either. I've never done... anything like that.\"\n\n\"Not at all?\" I stroked a hand up her side, feeling a lot of emotions that made me afraid of myself again. See, for the first time in a while, her words made me want sex again and it took me by surprise, even while it scared me. Because I knew the reason why those words finally stirred that interest.\n\nIt turned me on to think of hurting and fucking her at the same time. It made me excited to think of her asshole squeezing on me to fight me when I shoved deep and made her cry, while I cooed in her ear that this was just to hurt her when I didn't even want to get off to make it end.\n\nLater, I'd deal with those feelings. She met my eyes, turning to do so, and hers were wide with fear and pain. \"No, Sir.\"\n\n\"Let's fix that. As a sadist, I tend to love anything to do with anal sex or stimulation. There's just something about how painful and degrading it can be, if done right. It's so... exciting.\" I lubricated the smaller of the plugs I had where she could see and I was even kind with the amount of lubricant I used.\n\n\"S-sir? It's so big.\"\n\n\"We'll work up to bigger together. Be a good girl for me when I place it, yes? I don't want to have to fight to fill your asshole, understood?\"\n\nShe moaned and the scent of her arousal was like a hot drug to my senses, something to make me smile with how eager she was starting to get with thoughts of pain and humiliation. \"Yes, Sir. Oh!\"\n\nShe jumped when I pressed the plug to her ass, shivering with the cold feel of the lubricant when I spread one asscheek with my palm and gently worked the end to her hole. I paused to slap her ass when she tightened in resistance. \"No. Open up and relax for me.\" Her whimpers were like music, but she obeyed me, even if she was new to it. I was even nice about it, slowly working the toy inside of her while she shook and gasped over the rack.\n\n\"Oh, my God... I... Please.\" I shushed her whimpers, kissing her hair and pressing over her body to finish filling her up.\n\n\"Good girl. How are we feeling?\" I was reaching close to the widest point and her breath was coming shorter.\n\n\"It hurts! But it's... it's so good.\"\n\n\"Oh? Let's have a little fun, then.\" Instead of letting it seat inside of her, I pulled away to look down, to watch it while I fucked the toy in and out of her hole, never letting it reach the narrow base. \"Still feel good?\"\n\nHer cries rose in volume. \"No! It hurts! Yes? I don't know!\"\n\nWasn't that such a fun answer for me? She was a bundle of stimulated, confused nerves under my body. She was shaking... but she was arching back in rhythm to my fucking the toy inside of her, as if she couldn't quite help herself. Her soft little cries made me hard as fuck, to the point of pain, but I'd gotten used to ignoring that. \"I think you're lying. I think you're my horny little anal slut. I think you're getting all the more excited with the thought of my caning you while this stays put in your ass.\"\n\nShe made a sound that was part lust and part pain, but all animal and I laughed, finally letting the plug seat inside of her. When I stepped away from her, I laughed all the harder with the sight of cum dripping from her pussy. \"You're getting cream all over the floor, messy little slut.\"\n\n\"Yes, Sir. I'm sorry, Sir.\"\n\nI felt different this scene. I felt comfortable with her in a way that I hadn't felt with other playmates. No, that wasn't the correct way to say it, actually, because I had felt comfortable with other playmates before. With her, though, I was... I felt connected. Her soft sounds seemed like they fit perfectly to the words I gave her. Even while shaming her, I cooed in adoration because I was pleased that she liked a little bit of anal pain. With other playmates starting out with it, it had been a concern of mine that they might hate anal entirely if they learned with me, since I wanted it to hurt, but wanted that hurting to be enjoyed as well. It was a predicament a lot of playmates wouldn't reconcile. They'd just be turned off by anal.\n\nI was delighted, happy, that she liked it. \"It's alright. I tend to like the sight. Let's start with your paddling and, as a warning, this one will hurt quite a bit more than the other. Like before, we'll see together whether or not we want to spend more time with the paddle or the cane. Canes can be intense.\"\n\n\"Yes, Sir,\" she answered in a breathy voice, so that I picked up the paddle and tapped her ass with it.\n\n\"Horny thing.\" I had to laugh at how she flinched in fear with the taps of the paddle. \"Don't be so scared yet, sweetheart. You still have to kiss my toys before I actually hurt you, remember? Go on.\"\n\nShe moaned and her eyes were glazed when she met my gaze and pressed her lips to the large wooden paddle. She made it even better, whispering, \"Please paddle me, Sir.\"\n\nGod, I loved the way she asked for it, too. It felt like being asked to love her and I wanted to love on her a hell of a lot. \"So pretty, the way you ask. Don't let go of the bar and keep your legs spread wide for me.\"\n\n\"Yes, S-sir!\" I cut her off with the paddle strike and she shrieked in shock. \"Oh, Sir!\"\n\nI smoothed over where the flesh was reddened. \"Good girl.\" I paddled her again, enjoying the way she whined and twisted. \"Naughty thing.\" Again. \"You need more practice at discipline.\" My blows were hard, admittedly, because she pleased me so much. \"You're not being very still for me.\" She was dancing on her toes, shifting with every strike. I watched her hop with the next five strikes, making them nice and hard so I could hear her choked sobs and see her close her legs in reflex, only to force herself to obey me and stay open. \"Stay.\" She shrieked with that one. \"Still.\"\n\n\"I'm sorry! Oh! Please!\" She held the top bar in a death grip, though. \"It hurts!\"\n\n\"I know it hurts, but we've been over this. That's a good thing, isn't it, baby?\"\n\nShe took a jarred breath with my strikes and had her legs locked open in an effort that made my heart warm with how pretty it was when it wasn't easy at all for her to obey. \"Yes, Sir!\" I had been standing back, but I couldn't do that anymore when she made such a beautiful effort in obeying me, when she tried so hard for me.\n\nI wrapped an arm around her waist, much like I had last time, leaning against the rack to hold her, even while I hurt her more. \"Why is it such a good thing?\"\n\nShe hid her face in my neck in the most endearing gesture and I stroked her hair back when I felt her tears there. Her voice was shaky, but she answered in a fervent whisper. \"Because you hurt me more when you're pleased with me.\"",
        "\"Good girl.\" She jarred with the next blows, while I held her, and it made me feel all the hotter that it seemed to genuinely help her for me to hold her. Her desperate obedience turned more subservient while she whimpered against my neck instead of giving her other shrieks. I kissed her hair again and watched over her shoulder while I left my marks. The count was something I felt in my blood, something I wasn't even actively tallying, but I had it. 20 turned to 25... then 30... then 35. I spoke in the softest voice, a voice that would have scared me if I wasn't so caught up in the moment with her. There wasn't just affection in my voice. It had grown into something more than even fondness, turned into something that was on the verge of love for her. \"You mark so prettily. And I'm proud of you.\" She moaned into my shoulder, while my shirt was turning wet with her tears. On the ground between her legs, more cum dripped and I burned. \"Look at how still you're being, too, and without me giving your pussy any attention at all this time.\" Her moan was louder with my bringing that to her attention.\n\nI felt welded to her, with how connected this made me feel. Pain had always been more intimate for me somehow. A person showed so much when they hurt and it felt like a bonding thing for me that she would show me that, that she would give me her tears and soft whimpers, that she would be vulnerable like with me. It took so much trust and I adored her for having that with me. I finally stopped at 50. 25 for each side of her ass, nice and evenly spaced.\n\nShe stared at me with this lost look when I pulled away, as if unsure of why I would do that, as if lost in the world of torment I'd been giving her, unable to come back without guidance. I cupped her cheek. \"Now that's a gorgeous look in your eyes.\"\n\n\"Thank y-you, Sir. Please paddle me more.\"\n\nI laughed, feeling warm, and kissed her forehead. \"But wouldn't you like to try the cane?\"\n\nShe closed her eyes in a slow blink, as if working to focus, her head resting against my palm. \"I-I want whatever you want, please, Sir. I want to please you.\"\n\nJesus fuck. I paced around her and studied her ass, more fully enjoying the marks I'd left. \"You already do.\" I spanked her lightly so that she squeaked when my palm hurt her. \"So fucking much. I think you'll like these marks, by the way. They're nice and raw, beautiful. They're a deep red, too, with some of the harder parts wounded. Not in a bad way, but just a little.\" I paused to toy with the plug and was rewarded with her loud, sexual moan of desire when I withdrew it in a much more gentle fuck than before. \"Oh, we like anal, it seems. Once I'm done with the cane, maybe you'd like to cum from this, so it hurts a little more.\"\n\nThat's when she fucked up any hope of me staying away from her. It had already felt like a wishful, delicate thought anyway, but she shattered whatever illusion was left with that scene and with that moment.\n\n\"I'll cum if you make me, Sir, but I'd like it if you didn't do that. I... I want to know what it's like for you, why you stay in the space and don't get off. I want to try.\"\n\n\u2014\u2014\u2014\u2014\n\nEssie\n\nHe paced around me, picking up the paddle again, and his eyes were fierce when he tapped my cheek gently with the cruel implement. My ass felt marred from that toy, but somehow, now that I'd had a week to realize that I wasn't capable of walking away from him, I was deep beneath those waters that he'd showed me little parts of before. I was drowning in them this time, though, so far that I didn't have the strength to break through the surface without his help. It would have been scary if I could think straight or if I didn't already have such feelings for him.\n\nBecause I trusted him. I thought I trusted him more than I'd ever trusted anyone not my family. \"Hold my gaze, Essie. Don't look away. You mean that? Your cunt is dripping cum onto the floor and I haven't even touched it. I know it has to be painful, how horny you are.\" I moaned when his words were deliberately more vulgar. There was a touch of violence in how feral his voice sounded and the humiliation made me warm with the thought that I must have pleased my Sir if he was being so degrading.\n\n\"Yes, Sir. You said it was better to not release it when you wanted to want to hurt.\" My words sounded so distant, with my thoughts so far away. \"I thought about it over last week.\" And I had. I'd masturbated throughout the nights in frenzy to the thought of burning like he burned. \"I want to want to be hurt more.\"\n\nHis eyes were fiery, in a way that would have scared me if I didn't trust him so much. As it was, he used his free hand to grasp my hair in a painful grip and pressed his lips to mine in a kiss that felt like it should bruise. I moaned into his mouth, with a hunger I'd never felt before, and it was a moment that felt like it sealed me to him. I had resigned myself to going to him as much and as hard as he would have me, in a happy resignation.\n\nIt felt like I was definitely never getting away after that kiss. I moaned louder when he fed me his tongue, when he fucked it between my lips, his hand harsh in my hair. He growled in a breath when he pulled away. \"I can't show you the cane tonight.\"\n\nI whimpered. \"Please, Sir. Please hurt me more.\" I didn't want this to stop. I wanted to burn in the way that Lily described for some of the masochists she'd known, left in the desire of being used for my Sir, in suffering his cruel affection.\n\n\"I'll paddle you more, but none of the cane.\"\n\n\"Yes, Sir. Thank you, Sir.\"\n\nHe was silent when he removed the clover clamps, while I considered that I had gotten rather attached to his form of dirty talk, but I liked this black intensity of his, too. I enjoyed it all the more when he held me tight to start again with the large oak paddle and he was brutal with his pleasure.\n\nInstead of torturing me over what he'd already left on my ass, he lowered his strikes onto the backs of my thighs with a force that made me twist in his embrace, but he only held on even tighter. The sound of it was terrifying, the paddle making a slapping sound against my flesh. \"Oh, please!\"\n\n\"Bite me,\" he whispered against me. \"When it hurts that much this time, bite my shoulder.\"\n\nI trembled, waiting for the pain to fall, trying to brace when he was playing so hard, and it was so easy to obey his command. Before the pain, it would have made me rebel the idea, the thought of hurting him, but when it fell, I sank my teeth into his shoulder obediently, crying out as best I could with the action. He moaned against my forehead and I pulled away to answer with a moan of my own, then bit him again when he hurt me more.\n\nHe pet my hair while he did, too, in the most loving gesture. \"I can't cane you tonight,\" he whispered between paddle strikes and my screams against his shoulder. Tears fell from my eyes. \"Because I'd hurt you. I'm sorry, baby, but I'll make it up to you.\" Jesus, it already felt like he was making it up to me. He was swinging that massive paddle of his so damned hard that it was delicious hell, but the way he pet me so adoringly made it tolerable. He held me so close, so tight, like he never wanted to let go. I had to be close to making him bleed with my teeth on his shoulder, but he didn't so much as make a sound of protest to it, nothing except his ragged breathing when I pulled away and bit him again sometimes.\n\nI don't know how long he paddled my thighs, only knew that it was enough to make my world fade into a place where time didn't fucking matter. The only thing that mattered was his sweetest words in my ear, his cooing that I was such a good girl, that he was so pleased and proud of me, and I knew it was true when he hurt me so hard, knew he was more pleased than ever.\n\nIt was an age later when he finally pulled away, his hand a gentle pat on my head to silently get me to let go of my bite on his shoulder. My world felt dazed, as if I was seeing everything through a foggy window pane, and I couldn't focus. I rested my head against one arm and I didn't even want to focus on anything. I floated in the knowledge that I had asked him to keep us both like this and vaguely wondered what would happen now, if this would just be how it ended. Maybe he'd take me to the wall again and hold me close while I quietly burned in this wicked world of his, this headspace he had crafted with such loving torment.\n\nI moaned when he pulled the butt plug from my ass, feeling a strange sensation of brief pain and then emptiness. And it was a strange kind of pain, one that made me crave. It had felt raw when he fucked the plug inside of me, a sensation that had sent me falling into this dark place. There was a tearing sound behind me, but I was too out of it to care much what it was, in a good way.\n\nMy eyes snapped wide when he pressed against me from behind, when I felt his cock pressed to my asshole instead. \"No! You don't like to.\"\n\n\"Hush. I do right now, like this, with you.\" That last word was a soft purr in my ear, while he covered me with his body, using one hand to position his cock against me. I cried out a frantic sound when he pressed, that raw stretch so much worse when it was him, and he proved to be not small.\n\n\"Oh, God, please! Please!\"\n\nThere was so much pain to it. There was this burning stretch when he forced himself, along with the sting of the torturous marks on my ass and thighs. It felt like I should be bleeding against his suit pants when the soft fabric felt so raw against my ass. He forced deeper, harder, his breath excited in my ear. \"How good you feel when you struggle, when your hole squeezes with how I hurt you. So tight, baby, but you need this asshole worked open anyway. You need it spread and gaped, later, so that it hurts all the more. I think we'll make it a habit, filling you up with toys, so that eventually you'll forget what it feels like to have your ass empty while I hurt you.\"\n\n\"Oh my, God!\" His words shot me so high into arousal that it was pain. Nothing touched my pussy, nothing filled it at all, but it ached in torment and if he kept talking like that, I had a feeling it wouldn't matter that it was neglected.\n\n\"Good girl.\" His voice was so proud, with a sense of possession in it. \"How sweet you are.\" I pant when he could finally go no farther, but he didn't give me enough of a break to really process that fact before he went to work.\n\nHe was as brutal with his fucking as he'd been with the paddle that last little bit. His hands covered both of mine on the top bar of the rack and he fucked in a raw pace, his breath releasing in low grunts and growls behind me, animal sounds that only fueled my own feral emotions. \"Oh, it's so fucking g-ood! Oh, no!\" That last was a wounded cry when he cinched my nipples, with how sore they were. Pain ruled my world, but he ruled pain and I liked it that way. \"It hurts... It's so... good, please!\"\n\nHis voice was intense with pent up violence in my ear. \"This little asshole isn't fighting me so much now that it's not so virginal anymore.\" He sounded like a fucking demon behind me and that was it, the words and that voice. That was what did me in.\n\nI squealed a broken, endless sound and he let go of the bar to grasp my hair and my throat in a control grip when he felt me orgasm, when I must have tightened in so much ecstasy. The world went white and I couldn't think straight to even panic when I couldn't breathe as his hand tightened and cut off my shriek. He made his own wild sound behind me, one I was only aware of because of how hot it was and how it went with him banging out his orgasm inside of me.\n\nHe was silent when he replaced his hands over my own on the bar and he kept his cock inside of me, only pulling away when he started to go soft, but he kept me still for a long while. He only moved once after getting rid of the condom and that was to turn my face to the side so he could kiss me over my shoulder.\n\nAnd the kiss turned longer... and longer. His lips were gentle against mine this time and he nipped me every now and again, feeding me his tongue as well, making soft little content noises into my mouth while I did the same.\n\n\"Do you want to wear my collar?\" He finally asked quietly.\n\n\"Yes, please, Sir.\"\n\n\"Do you want to go on a date with me?\"\n\n\"Yes, please, Sir.\"\n\nHe reached for the cuffs, and I was glad for that when it felt like my legs were going to collapse soon. \"Let's cuddle and talk about it.\"\n\nI hesitated, then grinned. \"Yes, please, Sir.\"\n\nIt worked. He laughed behind me, catching me when I staggered against him. And he might have been an odd knight to my rescue, but, well... It was a little bit too easy to romanticize him when he'd started to equate every instance of pain he gave with romance.\n\n\u2014\u2014\u2014\u2014\n\nHe had spoken with me quietly beside the wall that night, holding me in his lap, and we hadn't talked about what had happened between us, what it meant. No, we hadn't talked about things like his fucking for the first time in ages, hadn't talked about what that might mean for him. It was a line we didn't cross yet. Of course, I had curiosities about it, like why he didn't like to anyway. And then there was the fact that he still hadn't let me experience it from my part, hadn't left me to burn in the same way that he liked to burn.\n\nNow, that I did bring up. I quietly told him that I'd meant it, that I wanted to know what it was like, and his hands had tightened around me, where he'd been so gently stroking me. \"It wasn't something I could do without having talked about it with you. But okay. Okay, we can do it after we talk about it. I'll... I'll have to think of how to do it. I won't edge you. Er. Well, I want to edge you, but that serves a purpose and it requires you to eventually get off, so I should say that I'm saving it.\"\n\nI'd shivered in his arms, looking up to meet his eyes, then blushed when he was studying me speculatively.\n\nThe end result was for a date. Like a date date. Like, he was taking me to a fucking movie. Admittedly, it was a movie I really wanted to see and it was the late showing after I got off work during the week, on the one day he had off.\n\nBut I was trying to reconcile the guy next door taking me on a date that was so... normal, after what I'd learned about him. I was trying to piece together the man who held me with such intense pain with someone taking me out.\n\nI had to work up the nerve to knock on his door, while he only smiled casually down at me when he answered, so at ease while I was a bundle of terror. The anxiety only intensified, too, when he was dressed down in designer jeans, for once, and a silky polo, mostly because he looked unfairly gorgeous even when he wasn't dressing up, while I was in a casual, cute dress and did not feel like I did him justice. \"Don't you look gorgeous? Come here, baby.\"\n\nI laughed when he let me into his apartment, staring around at the most single guy's apartment I'd ever seen in my life. I had seven brothers, but Jackson passed all of their single days by a long shot.\n\n\"This is the most amazing place I've ever seen in my life!\" He had gun racks against one wall and parts on a work table by it, where he apparently modified rifles and worked as a gunsmith in his free time, something I vaguely remember hearing Sam mention, since he'd known Jackson for longer than I did. An acoustic, bass, and electric guitar sat against one wall. The colors were neutral and mostly bare. There was a Jack Daniels poster on another wall, right beside a Velvet Underground poster. A black leather paddle sat on a coffee table and that huge wooden paddle sat on another one.\n\nJackson blushed. \"I'm glad you think so. I don't exactly do a lot of dating, if I'm being honest, and it's all somewhat predictable if you know me.\"\n\n\"Sure, if people know you have good tastes, you mean. Velvet Underground. It's not as amazing as Grateful Dead, but still.\"\n\nHe laughed and tugged me into his arms. \"Redheaded. Loves classic rock. Enjoys my kind of sex. Sweetheart, if you get any more perfect, I'm going to wonder when you'll kill me in my sleep.\"\n\nI moaned when he pinched the side of my waist, his hand pulling up my dress so that he could do it, his other arm snaking around my waist to pull me against him. \"That's... Oh, please.\" My voice was breathless for a moment when he intensified his pain. \"That's strange. When I first met you, I wondered what the catch was.\"\n\nHe answered by pulling me over to his couch. \"The catch is that I'm a confused sadist at the moment and saying hello to me before going on a date together involves things like this.\" I whimpered when he tugged me over his knee, then moaned when he pulled my little black dress up and spanked me, a hard slap to my ass that made me wet just from that start. \"Hush. I have neighbors.\" I had to bite my lip when he spanked me harder and my nails sank into the denim of his jeans so that he chuckled. \"Better. And I can't stay away.\" His slaps were hard but not as loud as I would have thought. He knew just how to shape his hand, just how to do it, with obvious experience, the kind that felt dangerous. \"Not when you look just so beautiful.\" My moans escaped between my teeth, but I was trying so damn hard. He was so nice when I pleased him and he always told me how good and brave I was, rather than making me feel weak for being so submissive. And it made me want to please him all the more. \"Not when I missed you so much.\" I sank into the pain, falling into the place where he ruled. \"This is my catch. And I don't get nicer as I get more involved. If my past is anything to go off of, sweetheart, I get rougher and more painful with the more feelings I have.\"\n\nOkay, I took it back. Dinner and a movie with him might have sounded so vanilla, but it wasn't. It was not vanilla at all with him. He was working me over so hard that it made me aware of how sore I would feel while sitting across from him for our date. \"Yes, Sir,\" I whispered through clenched teeth.\n\nHe squeezed my ass, smoothing over the flesh he'd heated. \"God, look at you. You're so.\" He spanked so hard I bit his jeans to keep quiet. \"Fucking.\" I snorted. \"Sweet.\"\n\n\"Thank you, Sir,\" I managed when he stopped and his laugh at it was breathless.\n\n\"Jesus, Essie. You're giving an older Dom a lot of bad ideas. Ideas involving your continual submission, for instance, as opposed to just when a scene is set.\"\n\nI couldn't keep in the gasp when lust filled me at the thought, so much of it that it took me by surprise and shot my arousal into pain. \"Oh, please.\" I whispered it. \"Please.\" His cock was so hard beneath me, but it seemed clear that our previous playtime was an unusual event and that he didn't plan on doing it again anytime soon. I don't know why that thought turned me on so much, but it did. I think maybe it was one of those things that I was starting to associate with his control, with how deep he was in that lifestyle. Where I had once been so vanilla, it had taken him all of a couple of scenes to make an assfucking seem like something that I obviously needed as his submissive. Of course a good little girl for him would have her asshole stuffed and gaped.\n\n\"Good girl.\" I clawed the floor when he thrust his fingers inside of me, twisting his hand to hit some magical spot that made me open my mouth in a silent scream. He manipulated whatever that spot was almost painfully and it turned even harder to keep quiet. I wanted to shriek and beg from the onslaught he gave me. \"God, you love the thought as much as I do.\" He worked his fingers in a massaging motion against that one spot and fuck me, I had masturbated a lot lately, but he was driving me wild in a way I hadn't found in myself yet. My vision blurred and I choked, then whimpered when he lifted me a little to cover my mouth with his free hand. And it was a good thing he did too.",
        "I felt like I shattered when the orgasm hit and couldn't keep the cries in, but he managed to cover my nose too and forced me into some kind of silence, even while the suffocation only amped all of it.\n\n\"Oh, my God. Oh, my... God...\" That last word was a moan when he withdrew his hand from me. \"That was... That...\" I couldn't find words. Jesus fucking Christ, I still had stars dancing in my vision and my knees were actually shaking when I tried to place my feet on the floor. My whole body trembled in a spasm of weakness and I moaned quietly.\n\n\"That was a little too rough, actually.\"\n\n\"No, that was the wildest, most amazing- Oh!\" I stared at his hand in a daze, blinking to try to focus on the image of him with blood on his fingertips, from how he'd abused that spot a little too much. It was immediately apparent that it was from his attentions, as well, when it wasn't quite the same appearance as what a female normally had. I moaned, aroused all over again, even while I wondered why I didn't feel any soreness.\n\n\"Easy. Stand up for me, baby?\"\n\n\"Yes, Sir.\" I stood, still dazed, trying to process the sight of that blood with the mind melting pleasure that had come with it. Obviously, it was rough of him, but holy hell, it'd been the kind of orgasm I hadn't even managed to give myself.\n\nHe led me to the kitchen of his apartment, while I tried to think, tried to process. I watched him wash his hands while I thought about changing into a different outfit. My dress was a summer style but the form fitting fabric meant it was better to go without underwear. But I could wear a g-string...\n\nHe opened a cabinet and got a terry cloth, wetting it, then came back to me, kneeling. \"Take your dress off really quick.\" His eyes lifted in appreciation when I obeyed, but then he went back to what he was doing, which turned out to be cleaning me. I held onto his shoulders when he caressed my ass to hold me still, then moaned when he stroked the cloth between my legs. He was as gentle as he'd been rough, too, smoothing over my pussy in the softest motions. I tightened my hold on him when he fingered the fabric inside of me, easing it. At first I was tense over that motion, too, since any girl can tell you that it's not always easy to stay wet enough to suffer fabric like that. But he was delicate with the motions, silently cleaning off where he'd wounded. \n\nAt the end, he looked up at me, eyes dancing while he kissed my thighs. \"Naughty little sub, wounding a sadist's pride like that.\" But it wasn't a chastisement in the slightest. He said it while he soothed, in the tone that someone gets when they're trying to make you smile. It worked, too. \"It shouldn't bleed too much more.\"\n\nI was dazed all over again when he checked me, when he checked my dress to make sure it was okay. I only got more dazed when he led me to my apartment for me to get a g-string.\n\nI was also definitely in love, especially when he tugged me under his arm to walk with me down the street, asking me what I'd done over the course of the week. And my knees still felt like they were shaking, just a little.\n\n\u2014\u2014\u2014\u2014\n\nJackson\n\nThe age difference between us took all of one date to become apparent, but it wasn't as bad as someone might expect.\n\nI think there were two reasons for this, when I had cause to consider it. One was that she was the youngest sibling after seven brothers, who all spanned 18 years older than her, so she'd grown up with other males who were older than herself and that showed, actually. She knew all about the 90s Cowboys team, for instance, even if she wasn't alive for Aikman and Smith's start and was too young to even remember much of the end of that team. Of course, I knew it because I'd grown up with it and remembered them through my teens. The other part of this, and I don't know if this was a side effect of growing up in an older household or not, was that she had older tastes in the things that she'd discovered for herself, like way older than me, tastes. She loved things like The Sound of Music, My Fair Lady, Fiddler on the Roof, Westside Story, and a lot of others I didn't even know.\n\nAnd Grateful Dead? I watched her when she sat across from me at the restaurant we went to, after I brought up the topic, unable to keep from smiling, especially when she shifted every so often on her sore ass. \"Oh, my God. Jerry Garcia was amazing and American Beauty was a work of art. Friend of the Devil, Candyman, Box of Rain. It was just so good! There are a few other musicians I love more, like Rob Halford, but-\"\n\nI'd cut her off with my laughter there. \"Rob Halford, huh?\"\n\n\"I will fight someone over how amazing he is. He once handcuffed himself to Andy Warhol, do you know how cool that is?\"\n\n\"I mean I love the man, but Hell Bent for Leather just speaks to my soul.\"\n\nShe burst out laughing across from me. \"Turbo Lover is Optimus Prime's favorite love song.\"\n\nNow, that had made me choke with laughter and her eyes had been alight with the submissive's pleasure of having entertained, of being enjoyed. And they should have been, when that made her so obviously happy. It had always struck me as a sin that so many submissives never discovered someone who told them that they were beautiful just the way they were, that so many people would rather tell them they were weak or something.\n\nBut the other reason why it didn't feel as odd as it maybe could have was the fact that I worked in a sex club, with a diverse clientele, which meant, in a weird way, I had a little more knowledge about some things that I wouldn't have otherwise. I might not like things like Instagram overly much, for instance, but I had one, thanks to people like Lily and Alex. \"Yeah, I don't do filters or many pictures in general, actually.\"\n\n\"Why not? They're just filters! Would it kill you?\"\n\n\"I feel like it would, yes. Besides, my face is gorgeous. See how the scar twists it?\"\n\nShe grinned. \"Okay, well, that's absolutely fair. Also, you were asking about what the catch with me was? I'll tell you one right now, right before it happens. I am the worst level of choosy eater ever. Cheeseburgers for me are a hamburger with cheese. That's it. I can't deal with anything else and I have a social anxiety attack over the thought of it being wrong, with the terror of having to tell someone it's wrong, so I always end up ordering soup or, like, grilled cheese off the child's menu. Every single time I think that I'm going to order what I want this time and then the waiter or waitress gets back and I end up thinking, 'Well, that was a nice five minutes of useless self delusion'.\"\n\n\"Jesus Christ, just order the cheeseburger and I'll say if it's wrong.\"\n\nShe'd given me a look of play adoration. \"You'd suffer social confrontation for me to finally have a cheeseburger? That's the sweetest thing anyone has ever said to me. I mean I'm probably still going to break in fear, though.\"\n\nOf course, the other thing was the way she was so hyperactive, while I was calmer, someone set in my ways. But that wasn't a bad thing. It... gave me a chance to experience new things and, while I wasn't one to generally enjoy that, I found I didn't mind when I was with her. Of course, it gave me a sense of personal torment when she finally got me to let her take a picture with a filter and she took a picture that gave me rabbit ears, dissolving into laughter when she did. \"You better delete that bullshit right now, Essie.\"\n\n\"No, no, it's already on Facebook with a tag.\"\n\n\"Do you really want to choose this fight with a middle aged sadist? I've got a lot more experience than you, little girl.\"\n\nHer eyes had had tears in them when I managed to get her phone, looking through the images before I realized that she actually had deleted it. \"I told you I'm a coward. I did send it to you, though.\"\n\nIt took one date for me to realize that whatever the differences were...\n\nI thought they were worth working through when the look of excitement and happiness in her eyes made me feel so warm, so alive. Of course, it got better when we went to the movies.\n\nShe squirmed quietly when I pinched her skin to give her affectionate little bites of pain, when I couldn't resist doing it because I was falling for her.\n\nFast. Later that night, I ended up being the coward. I kissed her in the hallway instead of inviting her back in, because I couldn't hurt her in the ways I wanted when there wasn't soundproofing in my apartment and I was still having whatever problems I was having with sex.\n\nI ended up on a gunsmithing project, trying to think through that thought that it made me feel fucked up, that I might have a girl I was really into. And I was still having problems with getting into the actual act of sex. I was as fucking virile as ever, horny as hell all the time, especially for her, but I didn't want sex.\n\nI just wanted to give more pain, to have more control. It felt way better than it should have for me to order for her when she'd still been tripped up over the whole cheeseburger thing. See, even though I could accept the age difference thing, there was another part of it that was a fucking problem.\n\nIt was how much the protective nature of being older than her was exacerbating whatever goddamn issue I was having. Because I was more addicted to control and sadism than ever after that date, which was the real reason why I couldn't invite her over. Jesus Christ, Jackson, what are you doing? You should walk away and let her be with someone her age, who'd invite her in and have wild sex like you should be doing with her.\n\n\u2014\u2014\u2014\u2014\n\nEssie\n\nFrightening disclaimer?\n\nI was starting to get a little scared. Not of him, but of me. When I got home from our date, I had to masturbate to the way it made me feel when he took the reins on everything so easily. He looked people in the eyes, while I was somehow still too shy, even if I was a bloody bartender. He held his head up, facing the world, while I had to fight the urge to look down all the time.\n\nBut that wasn't exactly what scared me about it. No, what scared me was when I finally got the nerve to buy sex toys and rubbed the vibrator over my clit, masturbating wasn't the same. It was slightly different, just enough to be noticeable, because now that I'd discovered this wild fairy tale world, there was something missing for me.\n\nPain.\n\nIt was worse after our date, too. I remember placing the vibrator to one side after a moment, afraid, but unable to resist getting up, too. I found a pack of craft clothespins leftover from when I'd made reindeer Christmas ornaments and got two of them.\n\nIt made me moan when I placed them, made me arch in my pink, butterfly patterned sheets. I rolled the vibrator over my clit again and that time, I rode it hard, flicking the clothespins on my nipples so that it hurt more. I ended up getting a third clothespin and laying back down, swallowing at how wet I was when I felt it, when I trailed my fingers up my entrance, collecting some of the cum there before I stroked it over my clit, making sure it was hard.\n\nI had to manipulate to place the wooden clothespin on it, then had to bite my lip to keep from crying out his name when it was the first thing I thought of with how dark this made me feel, that I couldn't resist it. I whimpered in a kind of helpless personal torment, scared but so horny off of how hard the spring on the new clothespin held me in a grip. I'd even already known to just bring the pack and I couldn't stop myself from continuing.\n\nI just... couldn't... stop. I sat on the edge of my bed and placed clothespins down my pussy's lips, whimpering at each one. I went with three down each side and only stopped because I ran out of room, while I was turning dizzy from the sharp shocks of having to do this myself. In one way, it was a little better, since I had control over it, but in another it was far worse, when I had to get up the nerve, then apply the pain, then gasp through it, then work up the nerve again...\n\nMy headspace when I was done was fucking tortured, even if it wasn't nearly as bad as the pain he'd visited on me. I felt dazed in that way again, felt a kind of magical need and I switched from the slender vibrator to a thicker dildo, holding my pussy open with the clothespins to watch. It helped that it was actually pretty damned erotic, seeing the thick black toy disappear inch by inch, while my pussy was splayed from the clothespins, the pink insides flowered open to accept what I fed into myself.\n\nThe thought was enough to send me over the edge into orgasm. I pumped the dildo, fierce with how horny the pain was making me, twisting my head to bite my shoulder to keep from sound, since I felt like I could scream. It was only at that point that I remembered the soreness from Jackson's fingering me before, when the wake was starting to set in, but the memory and the sensation of rawness only sent me tumbling into another wild spin, slightly weaker than the first one.\n\nI fell back against my pillow, shaking, panting with release. I only moved to release the clothespins, feeling a sense of numbness in a drop out after the crash.\n\nWhat the hell was wrong with me? The more I played with him, the more it seemed like this wasn't just some kind of conditioning that placed his pleasure with pain. This was something that was part of me and I didn't understand it.\n\nWhy did I like the pain so much? See, I could deal with it if it was just physically being a freak. That wasn't what scared me so much. What scared me was how much I was starting to like the thought of being his little horny pain addict, begging for more of his affection and turning more and more twisted with every time \"affection\" meant being tormented. I felt like I stood on a ledge, staring down into a dark vortex.\n\nWhat scared me was how much I wanted to jump, how much I wanted to be emotionally manipulated and conditioned.\n\nEven worse was how the emptiness with the drop... kind of felt good, too.\n\n\u2014\u2014\u2014\u2014\n\n\"Good evening, Essie.\"\n\nIt was late when I got to Sulfur's for our date night. That was partially my fault and partially not, since it was a game night and I had people stay at my own bar later.\n\nThe other part was that I had gone slow in closing, knowing Sulfur's was open much later than my bar, and thinking about my newfound need for pain, my growing preference to have it, and how it wasn't fully connected to him. I could deal with it if it was just with him, since I trusted him, but this? What happened if I started to burn for this kind of thing after we had a falling out? What happened if I had strange needs after this and I went to the wrong place?\n\nBut another thing was that, because I trusted him so much, those fears dissipated when I finally saw him and I smiled. \"Hello. Sorry I'm late.\" I held up my latex gloved hands. \"I did get the important parts though.\"\n\nHe leaned across the bar with a grin and I took the invitation to stroke him, petting the scar down his cheek and then caressing up through his hair while he closed his eyes in a strange fetishized bliss. I could definitely see why with this one though because the barrier of the latex between his skin and mine really was hot as fuck. \"So I see. How was your week, sweetheart?\"\n\n\"Good. I watched Tombstone again last night.\"\n\n\"Nice choice. I think I could honestly fall asleep to that movie every night if I had to and never get tired of it.\"\n\n\"Me, too! I never get tired of watching the same movies over and over again, by the way. Never. I feel like I have to warn you in case you walk in my apartment one day and hate the sound of Julie Andrews because you're definitely going to hear it a lot more than that one time if you keep dating me.\"\n\nHe laughed. \"Baby, I know all about being set in ways and if it bothers me when I'm at your place, there's this wonderful thing called headphones that connect to your phone these days.\"\n\n\"I'm glad to hear you have that perspective because another movie like that is definitely Sweet Home Alabama and I don't exactly see-\"\n\n\"Yeah, I'm out on that one.\" I couldn't keep from giggling at his carefree tone. It was one of those new love moments where those little things stayed so little. Of course, it was part of relationships that you learned if they stayed that way down the line. For the time being, I was on cloud nine and didn't want to leave it. Those little things were still little.\n\n\"Are you sure Christopher is okay with you doing scenes with me like this? I don't like the thought of upsetting him.\"\n\nJackson smiled and I saw him wave to Isabelle behind me, turning in my seat when I realized it. \"So long as we keep it to once a week or so and so long as we don't go too overindulgent with it, he's calm. I played every so often before too, so it's not like he keeps me chained behind the bar all the time. Actually, to hear him tell it, he makes it sound like I turn into a pain if I don't play every so often, so he encourages it if I start getting on his nerves.\"\n\nI laughed and took his hand, feeling that strange fear of myself as I did, then followed as he guided, shoving the sensation away rather than addressing it.\n\n\u2014\u2014\u2014\u2014\n\n\"You asked me to not finish this one off with you, right?\"\n\nI nodded, wondering if I knew what I was getting into, then thinking that of course I didn't, but I wanted to know.\n\n\"Okay. I'll do it, but there's a condition.\" His hand was soft in my hair and it made me shiver with the thoughts of what pain he was going to give to go with that loving caress. \"First, if it looks like it's too much when I'm playing, I'm not going to leave you unsatisfied like that. But second, if it feels bad at the end, you have to let me know, got it? If you wake up at night and it's too intense, then you knock on my door, okay?\"\n\nI tilted my head. \"Why would it feel worse than it would when I left here?\" Wouldn't the worst part of being left on edge be at the very end, when that need for him was at its highest and I knew he wasn't going to soothe me?\n\nHe smiled, sliding his hand under my shirt to make me squeak with those cruel pinches of his. \"Sometimes it happens that the mental arousal effect lasts on and on and if it does, I was telling you that I want you to come to me to fix it. The longer you let it last, the more vicious the drop can be when you're done. Think like when you get done reading some really twisted erotica, the kind they can't even make into video unless it's hentai, jerking off, and then staring at your phone screen in that thought of 'what the fuck did I just orgasm that hard to?' It's kind of like that. But worse.\"\n\nI laughed so that he smiled and I think my favorite part about Jackson was how real he was. He was down to earth, which was pretty entertaining in its own way. It was like he was so strange and kinky with his sex that he was vanilla in the rest of his life.\n\nKind of. \"Yes, Sir, understood. I'll bother you then.\"\n\n\"Alright. Come here. Actually. First thing...\" I helped him when he took my clothes off, then squeaked when he tugged me bent forward in his arms, slapping my ass in those hard spanks of his that I was starting to equate with his missing me.\n\n\"Oh, Sir!\" I held onto the arm that was wrapped around me and smiled, nuzzling his shoulder.\n\n\"I missed you after our date,\" he replied in a quiet voice, that loving voice.\n\n\"I missed you, too.\" The words came out stilted in parts where he was still spanking me, heating my ass.\n\nHe made a low noise before he pulled away. \"Jesus, I can't resist spanking you more. Come here before I get caught up in it or we'll end up like that for the rest of the night instead of giving us both the game we want.\" The thought of it made me nuzzle him one more time, caught up in the fantasy of him giving me a cuddly, patriarchal, over-the-knee spanking for a night, with his softer sadism mood.\n\nI stared in a sense of trepidation when he stood by a strange bench setup. It was almost large enough to be a table, really, and there was a wooden addition where the torso would be if someone crawled over it and stayed on their hands and knees, if they were tied down with those cuffs that were on the edges, the straps on that wooden beam. He chuckled when he saw the look on my face. \"Don't get cold feet now, sweetheart. I think you might like the feeling of more bondage rather than having to stand still on your own. Give it a try for me and if you don't like it, I'll choose something else.\"",
        "It was hard to stay so scared when he spoke so lovingly which, when I considered it, was one of the things that made him so dangerous. He was so caring about giving pain that he could make a girl go weak at the knees while leaving his marks with the paddle. He hurt and numbed me to the fear of the pain he was going to give.\n\nWorse, he made me enjoy it.\n\nI went to him and lifted onto the bench, crawling over the wooden beam while he encouraged me with a palm on my ass, easing me so that my waist was comfortably held over the wooden slat. The restraints were next and he started at my ankles, cuffing them wide apart, then continued to wrap a belt around my waist. That he connected to belts around my thighs as well, then hooked it all together so that I was held tight. For good measure, he ended with my wrists, securing them in front of me. I shifted when he touched my cheek, when he winked. \"Now, that's rather pretty, at least from where I'm standing. How do we feel?\"\n\nI shifted in my bondage, testing how secure I was, how tethered, and then moaned and nodded. \"Good, Sir.\"\n\nHe laughed and pet down my back. \"Brave girl for me. Let's fill your asshole since you liked that so much last time.\"\n\n\"Oh. Oh!\"\n\nI lowered my head against the leather padding of the bench, making fists with my latex covered hands, thrilling to the sensation. It was strange how those gloves almost seemed to just go with the sensation of the large silicone toy he pressed to my ass. \"Relax for me. This one is a fair amount larger than the last but you can take it, especially with how much of a little slut you were for anal last time.\"\n\n\"Yes, Sir.\" It was frighteningly easy to fall under that mental space after practicing with him for a few scenes. I didn't know what it was about him and anal toys, either, but that felt like my personal \"game over\" button. He pressed the toy in and out of me, fucking me with it like he had the last time, and I felt more of a sense of surrender than ever. I went almost calm and waiting, a kind of acceptance taking over me, for what I was used for or given.\n\nHe turned more forceful with the plug, making sure it didn't seat at the base while he had his fun, spreading me. He had one hand on my ass, pressing so that he could watch more easily, and his voice was low. \"How pretty. Does that feel good?\"\n\nMy pussy throbbed and my ass felt raw with his thrusting. \"It hurts, Sir,\" I whispered in reply. And it did.\n\n\"And yet, that tone of voice seems to ask me to go harder.\" He did that and I moaned, sobbed really, at his abrupt pace and forceful rhythm. And after that, I couldn't seem to control the sounds I was making, couldn't seem to keep from crying out in pathetic pleas. \"Good girl.\" He cooed and finally let the toy seat inside of me, which did make things a little easier.\n\nOf course, the toy was large enough to make me feel so full, stuffed, and my pussy felt like it burned to be touched, even when I knew it likely wasn't going to happen, even when I had been the one to beg him to not get me off. I moaned again and then rested on my head on the leather instead of fighting any of the feelings.\n\nI floated peacefully in that headspace instead, like a toy with no will of its own. So dark. I had gotten so dark into these things. At first it had been that mental stillness that came with submission, with having my mind finally shut up, but it was turning into something more.\n\n\"How pretty you look.\" I whimpered when he placed the same clamps from last time on my nipples and he did it with the same sweet attention, shushing me and petting me while he stimulated my nipples to make them harden for pain. \"Especially with that look in your eyes, baby. Nice and easy for me. Subspace does feel good, doesn't it?\"\n\n\"Yes, Sir.\" I had figured out that subspace was that wonderful place where I drifted and opened up to be used. It wasn't just a mental feeling, either. It made my body feel tingly all over, as if I was waiting for another touch or for a command. It was a strange place where I needed to be led and told what to do, but it was nice. \"It feels really good.\"\n\nHe paced around me, pausing to cup my chin so that I lifted my face gracefully, meeting his eyes in obedience. \"Good girl. Let's start with the wooden paddle you seem to like so much and this time.\" He touched my nose and winked. \"This time we'll make sure we reach the cane. We want you in enough pain that you don't feel so awful about how you're not getting an orgasm at the end of this.\"\n\nI moaned with the reminder, even though it felt like the kind of thing I should never forget, and I closed my eyes when he paced around me with the paddle. He was speaking in that low, calm teacher's voice too. \"I don't actually like the distance that this kind of bondage places between us, but it's something I thought you should experience.\" I gasped when the paddle connected with my ass, making myself breathe. I'd been here before. I knew this paddle and I could take this from him. I repeated it to myself.\n\nIt helped in one way. In another way, it was a reminder that I knew how bad this could hurt. But then that gave me a kind of conflict with the thought that I kind of wanted it to hurt more because his love was his pain.\n\n\"Bondage can work just as well for subspace as being made to stand still can. For some, it works better.\" He paused the paddling more often when he couldn't embrace me like he usually did, finding ways to touch me. His free hand stroked down my thighs and occasionally I would feel the paddle petting me in between blows. This time, the paddle was clearly a warm up though. \"It's subduing to know that you're not escaping me, that we're not going anywhere. There's no way out when you're tied down so strictly.\" \n\n\"Yes, Sir.\"\n\nHe laughed above me and the sound was warm. \"Sweet little submissive. I have gifts for you this time, as well.\"\n\nGifts like more pain? Because that's what it seemed like. He fell quiet for a long while, so that the only sounds were of his periodic intakes of breath right before the paddle connected, the loud crack of a sound when it did connect, followed by my own cry and intake of breath. There was this synchronicity to that time, as if I was deeper than ever. The last time had been something to leave its mark on me and it was becoming all too clear how consuming that mark was turning out to be. Our breathing was in a harmonized rhythm that accompanied the sensation of the paddle jarring me, along with the caress of his hand across my sensitive ass, along with the throbbing in my pussy, that heartbeat between my legs that I wasn't going to do anything about this time.\n\nI don't know how long it went. I know he could have flayed me with a paddling and I was too far gone to do anything about it. I also know that he knew that. When he paced around to meet my gaze, he held my cheek for a long moment, gauging me in calm assessment and he was experienced enough to take over even when I couldn't have remembered to safeword to save my life. \"Good girl. Easy. I've got you. Here, let's have a break. Take a few breaths and let me show you your gifts.\"\n\nI wasn't going anywhere and that was the best thing ever. There was nothing to do but to lay still and breathe in obedience, to be calm and to watch him where he went to his bag. I tugged on my cuffs eagerly, though, when he turned around with a gorgeous collar and a leash, so that he chuckled. \"Let's see how you like the feel of this one.\"\n\nIt was so pretty, more chain than collar, but in a decorative way. A heart shaped ruby pendant hung from the throat when he fixed it and the style was a kind that made me feel like a pampered puppy. It only got more wonderful when he clipped the chain leash to it and tugged it over my shoulder so that I could feel the cold metal down my back, a reminder. \"I like it, Sir.\" I especially enjoyed the way it tugged when he pulled it, the way it gave another layer of control.\n\n\"I think I do, too.\" He tugged the chain in sharp little pulls and I lifted my head with the guidance, so that he chuckled and stroked my hair. \"I definitely do, especially when I can't hold you while I hurt you.\" I could tell why when he held the leash tight with his free hand and went back to the paddle. He made a sound of satisfaction when he could hold me in some way, when I jarred forward with his strike and moaned, then moaned louder with the leash tug. \"That's better.\"\n\nAnd it was, terrifyingly so. It was like a weird form of a hug and it had the effect of making me all the more aware of the cuffs he'd used to tie me down. Where they had felt like merely restriction before, they felt like something more with the leash addition. They felt more connected to his touch, somehow.\n\n\"Would you like to try the cane now?\"\n\nI opened my mouth to answer, then gasped with a sharp paddle strike. \"Yes, please, Sir. Please cane me, Sir.\"\n\n\"Good girl. How pretty when you ask for it.\"\n\nWhich meant he was going to hurt me all the harder. The downside to our previously skewed scene was that it'd given me enough time to look into canes, what with the thoughts of my downward spiral into whatever dark emotions I was discovering.\n\nCanes had a reputation, as it turned out. They hurt and the reason was arguably scientific, involving the relationship of pressure and a smaller surface area. Excitement raced through my veins and I fell to that mental addiction that somehow held hands with the depth of my subspace. I'd had time to think about how it might work, how submitting myself to heavier pain to please him struck me as romantic in some strange way. It was this feeling of being made to take it and it was all the more delightfully twisted with how affectionate he was about the pain he gave.\n\nMore pain. More submission. More force. More pressure.\n\nMore love.\n\nI nuzzled his palm when he came back to me after getting a long strip of a cane off the wall and it even looked scary, especially when he held it. Somehow, it looked like it fit with the vest and button up shirt he wore, the silvering of his hair. He paused when he saw whatever my face looked like, smiling, cupping my cheek and gently slipping his thumb between my lips so that I sucked. \"Like what you see, baby?\"\n\nThe vision was frightening, of him holding that cane. The shirt sleeve of that arm was rolled up slightly to show off a hint of his curling tattoos again and the muscles had this delicious flex to them where he held the evil implement.\n\nIt was also hotter than hell. It made me feel all the more desire to build myself up for more pain, when he looked like that before giving it. As if I needed any more of a reason to feel conflicted over my discovering masochism and trying to understand it.\n\nI nodded and then answered around his thumb, \"Yes, Sir.\"\n\nHe leaned forward to kiss my cheek, pulling away from my mouth to grab the leash back. \"Me, too, baby.\"\n\nI moaned and bowed forward again to accept it when he paced back around me, and then I shuddered when he stroked the cane across my ass, having a sudden realization of how sensitive my skin felt after his paddling. \"Canes,\" he said, back to that instructor's voice, \"are sometimes a sadist's best friend. Sometimes. The hard fact about canes is that they sting so bad that it doesn't usually take long to find a masochist's limit with one, which really isn't our aim when we don't want to find that limit before we've had our fun.\" He stroked the thin strip down my thighs before manipulating it so that it pet over my pussy, making me moan, making me shake harder with anticipation. \"If I wanted a nice, long pain session, for instance, it's just not very lucrative. \n\n\"The good news, beautiful thing, is that I have a few years' experience.\" The cane disappeared and then connected so that I yanked on my cuffs and shrieked.\n\nThe stories hadn't been kidding. It really did sting. \"S-sir!\"\n\n\"Good girl. The other thing about canes is that they leave such pretty marks. I think you'll like them.\" I cried out, feeling dazed, with the second one, then moaned loudly with how he so lovingly stroked over the hot spots, smoothing over them in the gentlest massage. \"And the sounds it pulls are just so gorgeous.\" It was easy as hell to give him another of those sounds when he striped me again. \"Yours are already so beautiful, as it is.\" Another. It was a routine I'd experienced before with him. Softest words with harsh sensation, careful petting between hot torment. But I'd never experienced it like this. \"You can do this. Take deep breaths for me.\" He tugged the leash in a loving reminder even while he striped me. And then again. And then again.\n\nEach one felt like more than I could take... but never was when I reached the wake of it. He was too soft with his petting and with those words of encouragement, softer than ever. I would cry out so loud, only to hear his voice in the most adoring, quiet response, telling me I was beautiful, calling me his leashed little sweetheart. It hurt so damned bad.\n\n\"Please cane me more, Sir,\" I whimpered, and I didn't know what number it was at. I knew it was over seven. I knew it was at the point where my mind was gone, shattered. It felt like I'd disintegrated under his attentions, slowly faded until all that was left was a creature for his pleasure.\n\nHe answered with an approving sound of lust that neither of us was going to do anything about and I reminded myself of that fact over and over when the cane felt so hard and so hot with the stripes. Because I loved it. I didn't know why, but I loved the thought that it wasn't about the sex, that I was just suffering for his affection and that it wasn't getting a release valve. I loved it so much that it was a little scary.\n\nAt the moment, I just let myself drown in subspace and the fear from before didn't stand a chance against that kind of ecstasy.\n\nMy body felt like it was tingling, all over. It felt like my blood had turned to plasma and my skin was electric, like it was crackling with energy. The fiery lines from the cane stripes were blending with his soft strokes were blending with the tugs of the collar on my throat until it was all just sensation and I seemed to register that sensation as pleasure. It only got more intense when he released the clamps torturing me, so that the rush of blood flow made me screech, and then went right back to my caning, everything blending all the harder until I couldn't tell what I felt anymore. I couldn't tell the ecstasy of subspace from the torture of the cane. I couldn't even tell my sounds of need from my sounds of agonized bliss.\n\nI whimpered when there was a pause too long between stripes. \"Please cane me more, Sir.\" It was broken and begging. \"Please more, Sir.\"\n\nHis laugh sounded like a god's laugh when he walked around me. Maybe it was the intensity, but he felt like something more than he ever had and when he crossed into my vision, he looked like something more. It was this blend of romantic fantasies I had, ones that ran rampant when I was too far gone in wanton abandonment to keep them under sane control. I adored him at the moment, with the vision of someone who had an obsession with old musicals.\n\nI loved thinking of him as a cruel entity of some kind. \"No more for you, baby.\" He moved one of the benches while I watched and wondered why not more. But then I only whimpered when he sat in front of me, unable to protest against a god like him, and the feeling only amplified when he stroked my hair back while he left the chain of my leash hanging from my throat. He still held the cane and he tapped that against my lips so that I kissed it, soft, cowering little kisses to the hellish toy. \"Not tonight.\"\n\n\"Please.\" I couldn't think, could only feel, and the waves of emotion just crashed through me. It made me more helpless than ever, more at his mercy, but that was what I liked. He belonged in control and this was why he didn't like to finish with sex, didn't want to come back up. Because it made him more perfect than ever to be in that kind of control.\n\nI got it. Because I belonged under that control and pain. I whimpered again and he pet me. \"You can't take anymore.\" That made me afraid that I hadn't satisfied, but he seemed to read the fear. \"No, no. I'm more than satisfied and not sure I could take much more, either, sweetheart.\"\n\n\"Yes, Sir.\" It did make me feel better, too.\n\nHe sat the cane to the side and pressed his forehead to mine, smoothing my hair back while he pressed his fingers between my lips. I moaned when he worked them in and out, then purred in pleasure, nuzzling him. \"Jesus, the things you let me do. You're so sweet and perfect.\" He kissed me down my cheek, up my forehead, caressing my lips and petting down my shoulder and back in this way that no one had ever done to me. My ass throbbed in so much torment while he did, the ever present pain that came with his loving gestures. \"And a beautiful crier, too. Sometimes you don't wear water proof makeup and the mascara runs in these lines, which is a fetish I didn't even know I had...\"\n\nHe went through an entire quiet list, far more than just a man calling a girl pretty. He told me how my eyes glittered with the flecks of tears, told me how my skin marked so beautifully. He told me about the freckles sprinkled over my arms and he ran a hand through my hair, holding the strands out with a smile. \"And this. Deep red and burnished with rust color. When I finally get off at nights after playing with you, sweetheart, I have fantasies of you on your knees, while I use my hands in your hair to hold you how I want you when I fuck your face.\"\n\nInstead of coming up from those waters with the orgasms he could give, I stayed in them. Eventually, I could talk back with him, smiling fearfully while I told him how I had fantasies of pulling his hair too, with my latex gloves on.\n\nThe difference was that my voice was quiet and I stayed bowed while he stayed in that sense of control, so that by the time he let me up and helped me dress, I was present enough to talk. But I also knelt without command when he pressed my shoulders and I held my leash end obediently in my mouth while he finished cleaning up. And I was most subdued when he tugged gently on my collar and guided me out to the bar.\n\nIt was terrifying how much better it felt than even orgasm, how I sat with him behind the bar, quietly at his side while he worked, instead of going home or wandering to see the scenes closer. I was too subdued, like a pet put through its paces, and it only got better with every time he pat my head in approval.\n\nEventually, of course, Isabelle came back to the bar with Kody and the familiarity of their back and forth with Jackson started to pull me back up even while I realized it brought Jackson back down in the same slow way.\n\n\u2014\u2014\u2014\u2014\n\nJackson\n\nIt was terrifying, how good it felt to have her with me while I finished cleaning up. She talked with Christopher and Deirdre while we all left together and that felt even better, like something I would kind of like to make a routine. Christopher and Deirdre always ended up leaving together in this sweet way, while he swung her hand back and forth to flirt with her, a romantic Master and his fun loving slave.\n\nThat night was a first for me, when I had a friend of my own walking beside me. Of course, a large part of it was that she lived in the same building as me.\n\nTo make it all the more deliriously heady was the fact that she still had a residual headspace in the same way I did. It was... God, it was beautiful. Isabelle and Kody had pulled her back to a little more, but it wasn't quite enough and didn't I know that feeling so fucking well that it was giving me problems lately? Because it was how I felt when I didn't get release, that pump of desire getting slowly less furious in its pace, without quite ever dying completely. It was the embers of a fire that wouldn't quite completely go out.",
        "Her voice still had a soft muted quality and mine was still resonant with that strange depth. \"So, how'd you end up with your taste in music?\"\n\nShe grinned up at me. \"Mostly love of finding new music, any new music. I went through phases and obsessions. Alice in Chains and Soundgarden, all the 80's hard rock like Scorpions and Van Halen, the progression of metal, pop music. But there were just a few eras that stuck around in my lists after the obsessions. Anything musical based, along with the 60s and 70s. I could actually talk about Fleetwood Mac as much as Grateful Dead.\"\n\nI wrapped an arm around her to feel her against me and laughed. \"Just natural good tastes, then.\"\n\nShe was laughing and she still had her leash, even if we were out of Sulfur's, which was a thought that aroused the hell out of me. I tugged the chain just to feel it, just as a reminder, and she nestled closer into my arms, kissing my shoulder before she answered. \"It depends on who you ask and what day you catch me on. I'll have my rap obsessed days and Sam would say those are torture.\"\n\n\"I don't know about torture, but they're less awesome than Fleetwood Mac days, for sure.\"\n\n\"Well, that's just not a fair comparison when Stevie Nicks was a goddess.\"\n\n\"Was? She still is.\"\n\nShe laughed happily, then cuddled when I tugged her collar. It felt calmer with her in that state, in a way that made me concerned with how much I enjoyed it when my strange proclivity had so far been a personal thing. It wasn't something I imposed on playmates, especially when I wanted them to always come back for more games.\n\nNothing felt like it was following what I knew with her. Damn that red hair and how sweet she was. Every time I spoke with her only made me fascinated all over again with how we had such strange things in common, even while the differences were just as fascinating.\n\nI stopped with her outside my door, standing in the hallway. \"You can take the leash off, but only I touch the collar, understood?\"\n\n\"Yes, Sir.\" Her words were breathy and it made me hard so easily.\n\nShe shifted away from me and I didn't want her to. She paused and I stood by my door for a moment before I finally broke. \"Essie.\" Her eyes lit up and my heart felt too happy. \"Do you want to-\"\n\n\"Yes.\"\n\nI laughed, feeling giddy in a weird way for a man in a midlife crisis, but it felt all too good to have her wait for me to open the door, then to watch her when I held the door open, even though my apartment was nothing but a perfect snapshot to being a perpetually single slut. But she liked me. She liked me even though I was fucking weird. She liked me even when my returning that attraction came with pain.\n\nFor a long while, she didn't say anything and I didn't either. I just... processed. God, my life had been turning strange and then she gave it the shove to turn it entirely upside down. I didn't know what I felt anymore, besides a lot of attraction and-\n\nThat was a lie. I felt that other word, the one I stayed away from.\n\nShe cried out when I grabbed her, lifting her up to pin her against the wall, riding her through our clothes. The need from before came back and I'd already ridden out my sadism fire. I should have been craving to give pain again, should have been needing that dominant flood to my system all over again.\n\nBut I just wanted her. She growled against my mouth, like a little savage, biting me and I moaned when she stroked those latex gloves down my cheek. I sucked a finger into my mouth before letting go, taken over by the fact that she'd asked me to take her to my edge and leave her wanting, that she'd come to me just for my pain and I hadn't had to end with pleasure. I'd been able to leave it pure and unadulterated, kissing her at the end of all my affection.\n\nI was frantic, but she was, too, so much that she ripped her shirt trying to get it off too fast and then kicked off her jeans. \"Jackson...\"\n\nI lifted her again, having undone my own suit pants just enough to free my cock. \"Horny little sweetheart.\" She moaned when I fixed myself to her entrance and there wasn't much foreplay but there didn't have to be after that night. She was wet as fuck and I was so hard it hurt. She'd come back to me. I didn't even know what the fuck was going on with me anymore, was turning so bad that I was getting freaked out, and she came back. Jesus fuck.\n\n\"Jackson!\" I growled to the sound, to the way she went stiff in shock when I filled her up so suddenly, to the way she hissed through her teeth at the rough thrust. I had to cover her mouth to quiet her when her cries were out of her control.\n\nThose soft whining gasps of air tickled my palm in a way that only fueled my arousal and I couldn't keep from the most punishing pace. How dare she be this sweet when I was some strange form of a nightmare. How dare she make me feel that word I didn't do, no matter how much affection I gave.\n\nShe closed her eyes about the same time I felt her squeezing on me. \"That's it, cum for me. All over my cock, Essie. Show me how fucking good it feels when I fuck you this hard.\"\n\nThe words set her off something fierce and she squealed behind my palm, her pussy pulsing on me, bathing me with her hot arousal.\n\nShe whimpered when I pulled away quickly, when I caught her by her hair, shoving her to her knees. \"But you didn't-\"\n\n\"Because I'm not done with you. Open up and suck me clean.\" No, I for damn certain wasn't done. If I was having this confusing moment of sex without pain, then I was having my fill of it.\n\nWell, without a lot of pain anyway. I twisted her hair to pull it, to hear her moan around my cock, so that the sound vibrated around me. I made her choke on me just to hear it, just to see her eyes water.\n\nThen, I did it again. Because I could. Because it amused me to think of my little sweetheart craving cock down her throat more than she craved air.\n\n\u2014\u2014\u2014\u2014\n\nEssie\n\nLife was getting weirder.\n\nI mean it was already weird. I ended up buying a Sulfur's membership of my own, even though I wasn't sure what was happening with Jackson and I. All I did know was that this newfound need inside of me felt like something that had once been dormant and refused to go back to sleep. After fucking Jackson until the break of dawn, I'd been too much of a coward to sleep with him, but we didn't talk about that together. He was quiet about walking me to the door, his hand soft in mine while he traced the rip in my shirt from how frantic I'd been.\n\n\"Good night, Essie.\"\n\n\"Good night, Sir.\"\n\nThat \"Sir\" fell between us in the air, a word so heavy with how easily I said it and how right it felt. It felt more correct to call him that than it did to say his name and even after his sex spree, his eyes stirred with something dark and dominating and I had to resist the urge to thread my fingers through his silvering hair all over again.\n\nI kept doing scenes with him too, scenes where I started by quietly asking him to not get me off. Each time made me afraid again, but that fear was numbed with the way his eyes lit up in response, the way he nodded and clipped my leash to my collar, tugging me under his arm with a look of adoration.\n\nAnd the way he sometimes tied me down, but mostly preferred to hold me in one arm while he worked me over with the cane, the paddle, the strap, or some blend of cruel toys. He showed me the short whip, which stung in a different way than the hard cane, then showed me the tawse, which turned out to be pure evil. One night, he used something called a quirt on my tits, so that I got to watch his face when he stood in front of me and swung the sharp, twin tailed whip, so that I got to meet his eyes while he hurt me.\n\nThe first time he met my gaze like that, something blazed in his expression. He swung the quirt so hard that I struggled my cuffs and shrieked and then he followed it up with that soft petting of his. There were no words, only a silent conversation where I was incapable of looking away from his hypnotic eyes, where I trembled all over while he stroked my tears away.\n\nAnd I knew what words were behind a whip stripe that hard. He switched to my pussy, striping it just as hard and I knew it was a repetition of those words.\n\n\"Please whip me more!\" I begged it, even though my voice was thick with pain, and he made a low growl of a sound before he kissed me in that way that was bruising.\n\nThen he slashed the quirt again, another repetition of those words in a sadist's language, one he'd taught me how to speak and understand. I was well versed in violence, in the way his arm flexed with brutality, and what that meant.\n\nThat night we actually did part ways when we got home. I curled up on my love seat with a movie on - A Fistful of Dollars - and I burned too hot after he'd made me promise again to find him if it was too much. I knocked on the door and he answered quickly, then gave a soft laugh, breathing, \"Thank God,\" before he tugged me in and that time, we did at least make it to his bed.\n\nWhere I ended up spending the night after he drilled me into his sheets, forcing me spread wide on my hands and knees until I was arching with the force of his thrusts from behind. He was stroking my hair when my phone's alarm went off and my pussy was sore from his attentions and use. He watched me when I stood, smiling in a very satisfied way when I flinched, his eyes going down to study between my legs, where he'd used four sets of clover clamps the night before... spreading my pussy wide by tugging on the chains while I whimpered and shivered in his bed. \"A redhead in a Grateful Dead shirt with the symbol tattooed is a sight I could get very used to if you don't watch yourself, sweetheart.\"\n\nThrills shot through my body. And fear again, where I wondered what was wrong with me all over again, that my newfound masochism was so damned strong. I burned for pain and with him, with the way he always spanked me in greeting before a date, with the way he pinched when he kissed, it was getting all the more twisted. I was already terrified with how heavily my lust was connected with pain.\n\nIt was all the darker when paired with how I was starting to equate it with being loved and adored.\n\nMy cheeks were too bright, as well, too reddened with desire and flame. I was becoming jittery. I was pacing when watching movies at home, restless and in love. I wasn't sleeping well and I didn't care because I wasn't tired. I was infatuated and fiendish, antsy and greedy.\n\nI was so fucking confused.\n\n\u2014\u2014\u2014\u2014\n\nJackson\n\nI was already off my game, but something was throwing me farther off, something about her. And it was pissing me off. I know that's not something that people are used to hearing from a Dom and Sadist. We're supposed to be all robotic or whatever, eternally calm and unaffected, like androids.\n\nI'm breaking the illusion. I get angry. I have a lot of emotions. I just have self control and know when I need to take a step back to calm down before I act on those emotions. The best way to explain is to say that the area of a scene is a bubble of safety. When you enter it, you do not do so with anger and you do not allow anger in once you enter. The practice is surprisingly more natural than you might expect, or so it's always seemed to me. It feels basically wrong to approach a submissive, who bows to a sadist in good faith, with anything like that. Volatility just doesn't have a place in that sanctuary.\n\nWhat made things strange with her was that she was the first submissive I had who had pulled my domination outside of the bedroom. This wasn't because I didn't want to dominate outside the bedroom, actually. It was just because I hadn't had cause to do so when I kept my games isolated in that bubble, keeping my dates at Sulfur's where I could make them beg as loud as I wanted to hear them and didn't have to worry about neighbors.\n\nDating her was coming with a lot of new things and I was forced to realize that whatever my strange midlife situation was, I wasn't leaving it exactly the same. Some parts of me were just going to change. I didn't know which parts and I didn't know how much would change, but something was going to.\n\nI did know that I was fond of her and that I loved her company. I did know that whatever changes were happening, she was putting up with my bullshit and I was happy for that.\n\nBut still, even though I didn't actually know a lot about the whole dating scene, I had enough perception to tell that something was wrong, as it were. The problem was that I wasn't a mind reader and I didn't know what was wrong. I didn't want to pester her about anything if it was something to do with work, when we were still getting to know each other, for instance. She had a right to that kind of privacy and I was infatuated and didn't want to run her off.\n\nWhat was more about it all was the timing of the moments when I noticed something was wrong with her. During our scenes, she seemed better than okay. Afterwards, she seemed to drift in happy submission while I soared in unrequited and unreleased sadism. I didn't get either of us off at all anymore during those moments. I let us both burn, let us both slowly come back down together, while she remained soft in her submission and kept me company at the bar, which was something else she'd taken to doing, a routine I was starting to love.\n\nMy games were exclusively relegated to her, as well, because she was more than enough for me when I was just a guy who kept busy. When I flirted at the bar, she flirted alongside me, drawing people in.\n\nSee, all of that was good. All of that was where it felt like I would see or notice anything that was wrong with her masochism exploration. No, it was when she woke up in the mornings after she started to spend the night with me that I started to see something. It was a sense of stress or strain in her eyes, when she looked at me while I watched her from my bed, feeling like a lazy cat allowing the mouse to leave for a time, knowing it would come back.\n\nBut my little fantasy was discordant during those moments, with that wrong sense.\n\nMaybe I'm just saying all that in self defense, though. Maybe I really should have noticed something. I don't know.\n\nI do know that when Alex, of all fucking people, was the one to call me one night, it did throw me off.\n\n\u2014\u2014\u2014\u2014\n\n\"Hey, Jackson.\" He drew out that first word, while I wondered at what the hell would make Alex, the shyest goddamn sadist I'd ever met, call me. The guy didn't even like to text.\n\nI turned off the game I was watching and this was the one night that Sulfur's wasn't open, my night off. My little bartender was at her sports bar, though, and I was having fantasies for when she got off work, wondering how the night would go. Would I feel like pain and power or like sex? It was a gorgeous thing about her, that she went with either during these strange nights of my life. \"What's up?\"\n\n\"So, uh. Did you know your redhead and mine are thick as thieves these days?\"\n\nI smiled at that, wondering at his tone. I didn't, but it was comforting. Lily and Deirdre had always supported the hell out of each other and it seemed to work really well for both of their lives and needs. The hard truth was that Doms weren't exactly easily approachable to a lot of submissive types. \"I didn't. That's cool, though.\"\n\n\"Yeah. Do you know, I did think it was weird a while ago when she acted shady about going to Cocoa's bar? I mean it's Lily and she's never going to cheat or anything like that, so it wasn't that kind of fear or anything. She loves to go out and I hate most things social, but there was something about it I guess. Anyway, I figured out why it was weird, why she was acting shady.\"\n\n\"Do you want me to talk with her?\" I was just spitballing in a guess that Alex really didn't want anything to do with playing the middle man.\n\nHe laughed. \"Yeah, I do, but she's passed out drunk, so that's not happening. Anyway, your girl is having problems with being 'cursed as a masochist' or some dramatic whatever and I couldn't gather all of it - apparently, Essie makes strong ass drinks, by the fucking way, so much that Lily is blasted from ordering, like, two - because Lily wasn't making a lot of sense. But I caught, 'She said to not tell Jackson'. And it sounded like it'd been going on for weeks, so you know. I don't want to be party to this. Do with it what you will.\"\n\nSee, this is what made me angry about all of that. It was my problem that she'd discovered that masochism in the first place and I was a bartender at a fetish club who had connections to people who could help her. So, for weeks? What the fuck? I'll own the fact that for a few seconds I was ticked off.\n\nOf course, then the sense kicked in. Because she doesn't want to bother you, moron. She's a submissive who would still worry about displeasing you, so much that she'd keep things hidden from you. It was a pitfall of submission, especially new submission, that the fear of bothering a top would keep some players from so much as saying a safeword even when they really needed to. Of course, the older ones ended up a lot like Lily. They were sweethearts who'd apologize while crying out the word, \"yellow,\" and would make sure they charmed you even while letting you know what was up.\n\nGoddammit. Remember when you kept thinking about how you couldn't fucking touch her? This was why. You can't play with new people right now because you're fucked up. Because I was conflicted with how I felt with her, with this newfound desire to have a 24/7 power exchange with her and what that meant for moments like this. How I handled something like this was based in how I wanted my relationship to be with her. Did I want to be her Master, her Dom, her sadistic boyfriend? I'd given her a collar, a gorgeous chain one that was nice and sturdy, one that fit all too well at her throat. What did I want that collar to mean?\n\nBoyfriend. Ugh. I shied away from that word when I felt too freaking old to have it applied to me for a moment.\n\n\"Jackson?\"\n\n\"Yeah, sorry. Thanks. Will you have Lily call me when she's okay tomorrow? I might need help.\"\n\nHe paused, but then did something that made me add him to my annual Christmas present list. See, Alex knew something weird was up with me. There was no way he didn't because Lily knew and Lily told Alex everything, even if she knew he didn't give a shit about it. She just talked to talk to him. So he knew.\n\nAnd he didn't bring it up. That was Alex. He merely said, \"Sure. Whatever you need, man. You know that.\"\n\nGod, the guy was great. He was actually the best sadist ever and it made me smile when I hung up, with the thought that when I made it through whatever was going on with me, I would have my friends to thank for a lot of it. I still remember Lily getting concerned about taking Alex to Sulfur's for a while. At first, it had been because he was just so damned shy, but then she'd had the concern that being around people she'd played with before might make him uncomfortable. Alex flat out told me about it because his response had been, \"Lily, baby, are you fucking one of those playmates still, are you pregnant from one of them, or did you get an STD from any? Because if the answer to all of those questions is no, then I literally do not care.\"\n\nThe introspection made me see a little more clearly, made me think straight enough to turn my thoughts to Essie. My initial anger was a misguided thing and I knew that. It made it easier to breathe out that anger and, if human beings are honest with themselves, sometimes it's difficult to release those wild, adrenaline fueled emotions. I should fucking know.\n\nBut once I did, I realized something.\n\nI was thinking through ways to correct that misguided notion of hers, thinking through ways to help her without being an asshole about it. I was thinking through approaches to a problem, not because I was dating her and wanted to manipulate or anything, but because if I ever needed to help her find someone else to meet her masochism needs, then I wanted to be sure she could communicate with them.",
        "It might not seem like something that would make a difference, but it did. It did because it made me realize that I was still me. I might have stopped the sex with sadism thing, but I was still the same person with the same memories. I was still the same bartender who knew masochists in all their interesting forms, still the same guy who had the same experiences that had brought me to that point.\n\nMaybe it was poetic that I should find the comforting answer to my own problem when I quit thinking about my perspective and thought of someone else's to help them. Sometimes people did change.\n\nBut the saying that said \"people never change\" probably had some truth in it, too, even though it was most often meant as a negative saying. For me, for my case, it was a comforting notion, that my bullshit would have an end and that end would be okay.\n\nThank God for redheads. It gave me another realization. I kind of liked the thought of having a little redheaded masochist to train in my own way, one that could get into trouble with Lily.\n\nEspecially when that redhead sang \"Animal Crackers in my Soup\" while getting out of bed in the mornings.\n\n\u2014\u2014\u2014\u2014\n\nEssie\n\nI do remember Lily messaging me that night. I think we're in trouble. I think something is up.\n\nI'd been on the verge of breaking for a few weeks. I'd had conversations with Lily where I texted her in the midst of my fears, trying to understand what was happening to me. I hadn't gone to Isabelle because I thought Isabelle was the most likely to go to Jackson, but Lily was an experienced masochist. She wasn't a top so she was approachable. She was adorable, friendly, and sweet and she'd had her proclivities for a while, had adapted to having them so that she was happy with them.\n\nBut I didn't tell her everything and I wouldn't because I was afraid of Jackson finding out whatever was wrong. I don't know why, but I didn't understand these dark moments I was having. I didn't understand whatever was going on that was making me enjoy thoughts of long term conditioning. As for the erotica I'd taken to reading?\n\nThat really scared me sometimes. It made me afraid of myself, of what I was willing to submit to. What might happen to me if Jackson and I didn't work out? What would I do? Those were the real thoughts, the thoughts I hadn't told Lily. Actually, the conversations were innocuous enough. They started with me messaging her to ask her if being a masochist ever scared her. I asked her if she knew of masochists who ended up hurting themselves and that had prompted her to ask a lot of questions.\n\nSelf harm is a totally different sphere, honey. Don't do that. Some masochists can do things like use clamps on themselves, but they're ones who know the ropes, so to speak, you know? Where is this coming from, Essie?\n\nI hadn't been completely honest with her, either. I just... I could barely face these things myself and I was falling in love with someone and that was confusing, too. Was it too soon after my divorce? Was this something to do with moving so soon after an already strange life change? Why did I love it so much that he whipped me harder to tell me those three unspoken words? Why did I kind of want them to remain unspoken, so that they remained in that pure language of his, that language that seemed less capable of lying than words were? I knew lies. I knew lies all too well from a failed marriage and that special language that he used wasn't part of those kinds of lies, but what if I felt that way because I was confused?\n\nThere was one thing I did know. He was starting to be something of a calming presence, someone I associated with the ability to make my mind finally shut up. I smiled when I went to Sulfur's midweek, for the date we'd planned.\n\nAnd, of course, I wore the latex gloves again. \"Good evening, Sir.\"\n\n\"Hey, sweetheart.\" He smiled over the bar at me and that time, Christopher was the one covering, something that made me blink. I paused at the sight of him already sitting behind the bar.\n\nChristopher frightened me a little, but that wasn't because of him. It was because everyone who wasn't Jackson was starting to frighten me. Even Isabelle made me shift on my toes lately. I don't know if this was a side effect of getting used to bowing or if it had anything to do with how I had started to prefer to remain in a masochistic headspace at the end of scenes. It felt like parts of me were staying perpetually horny for more control and pain and there was one person I trusted more than any other with those needs. I hid at his side lately and after his scenes, there were moments where he would lift water to my lips and I would obediently take from his hand, only to hide against him again when I realized someone noticed.\n\n\"You okay, Essie?\"\n\nI shifted closer to Jackson even though Christopher's voice was kind as could be. \"Yes, thank you. And you?\"\n\n\"I'm well, doll.\"\n\nHis eyes were as soft as his voice, even, but something about that made me hesitate. It wasn't anything direct or specific. It was just this side feeling that something was... off.\n\n\"Come on, sweetheart.\"\n\nI took Jackson's hand, glancing over my shoulder where Christopher watched with a small smile, then let it go as one of those things that I just wasn't going to address for the time being when I had enough to think about since I'd discovered the strange, wonderful world of Sulfur's. \"Please don't get me off?\"\n\nHe hugged me close outside the dungeon door. \"Tonight is going to be a little different altogether, actually, so that's a lost request this time. Essie, before we start, I have a question.\" I met his eyes, fearful and adoring of him by that point, and he smiled, smoothing a hand through my hair. \"Jesus, that shade of red is my fantasy, baby. But is there anything wrong that I can help you with? You've seemed a little stressed at times.\"\n\nI don't know why I didn't answer when he gave me the most direct opportunity to do so, when the moment was right there. I only knew that I couldn't face it and wanted to escape in his strange sadism. Of course, it wasn't lost on me that the effectiveness of escaping in his pain only served to make me more afraid later. \"No, Sir. It's just... getting used to somewhere new and new things, I think.\"\n\nHis eyes were cute with his smile, his scar twisting on his face with it, too, and where that had once seemed novel, it was a feature I was used to now. I stroked it with the latex gloves so that his smile widened and he kissed my fingertips. \"I gave you the chance, starlight. Come on, then.\"\n\nLater, I felt like an idiot. He was even telling me right to my face. But I still didn't want to face it, even if he had guessed something.\n\nYou know, later I would also realize a character flaw involved in using a sadist for escape from masochism. You shouldn't do that. That's bad. It doesn't make sense.\n\nAlso, they're sadists.\n\n\u2014\u2014\u2014\u2014\n\nAt first, the scene was similar to what we'd had so far. He used a set of cuffs to tether my wrists at the small of my back and pressed me forward over a table. \"Keep your legs spread wide for me and take what I give you, sweetheart.\" And there was no more bondage help. I fell happily into that place that was always so near now.\n\nAnd what he gave me was the paddle he loved so much, nice and hard, really hard. His caresses were softer than ever and his strikes were filled with love and pain. I remember at the beginning I had the thought that he must have been feeling really romantic and affectionate that night, because he paddled me with the intent of tanning my ass.\n\nMy cries devolved into shouts, then screams, then moans, then whimpers. I could take a lot by then, too, and that made me happy to get to feel it, when he always talked about how strange he was about affection. It made me happy to feel his form of love and to be able to understand it as that, to be able to accept him in this way, even if he was strange enough that he didn't blend it with sex anymore. It was one of the things that made it so easy to use his pain for my escapism because everything made so much sense when he hurt me. It felt okay when I was under him, okay for me to be whatever it was that I happened to be. It was only outside of that headspace that my mind tormented me.\n\n\"That's what your hundred feels like, starlight.\"\n\nAnd that. I liked his new nickname for me. \"S-sir?\"\n\nThat was the same as all the rest, too. The way my mind was so gone, so empty. My voice sounded so far away and I was emotionally gutted, laid bare in the best kind of way. \"When we first started, you asked me what it would feel like to have a hundred strikes with that paddle. It's nice and spaced this time, 25 for each side and for both your ass and thighs.\"\n\nI moaned with the thought, then lifted when he tugged me up, following without question. \"Thank you, Sir.\"\n\nHe smiled, holding me from behind while he walked me forward to a chair. \"You're very welcome. And now I think I have you in the space I want for the rest.\"\n\nThe rest? I didn't even question. I just knelt when he had me do so in front of the chair, waiting for whatever Sir wanted. I watched with a kind of vague curiosity when he set up toys to attachments on the chair, a butt plug and a dildo that screwed into place. He lubricated both of them and fitted a kind of spiky padding to the chair. My ass and thighs suddenly burned all the worse with the thought of that, but I didn't have a way to resist him. I lifted when he guided me, whimpering a little, but he was as steady as always, gently stroking my hair while he helped me sit down.\n\nHe fitted the toys to me with a kind of perverse detachment in his eyes, something that made me have to take deep, steadying breaths with the wave of heat it gave me that even the things that were sexual for me were something that he wouldn't take advantage of. He met my eyes and chuckled when the moment passed between us, as if well aware what I was thinking of. \"S-sir.\"\n\nHe pressed my shoulders, working me down so that I moaned. \"I know. It's a tight fit and it will hurt a little when it feels too deep, but you can take it.\"\n\nI moaned louder while he kept pressing, then whined when my ass finally reached the spiky padding. The paddle must have really done its job because it burned something fierce, but then there was the toys filling me up so... damned... much. And I couldn't think straight enough to process and didn't want to, even though this was so different from usual for Sir's tastes. I didn't understand... but I was deep in that headspace that only wanted to submit.\n\nHe looked extremely satisfied when he stood back, while I stared up at him in a world of conflicted sensation. \"Poor little starlight. It's so odd to be given pleasure with the pain in this form when I'm something of a purist about sensations, I imagine.\" I nodded, so that his smile widened, and he wasn't done yet. \"I'll explain in a minute. First, let's make sure you're not going anywhere.\" Like I could do that anyway. Like I'd ever escape him by that point. In that headspace, I was as owned as a toy doll.\n\n\"Yes, Sir.\"\n\n\"Good girl.\" He worked with straps, starting at my wrists, wrapping them with leather around the chair arms. \"Would you like to know a strange thing about some sadists? Their love of giving pain outweighs their domination tendencies. Some sadists just aren't into the commanding side of things, but they know that it holds hands with the atmosphere and they'll work a scene at a time. That's something along the lines of what I've always been. But you, starlight. You make me... very dominating.\" He stroked my hair when he tugged my head back, using my collar and a chain to do that. He strapped me at the thighs and ankles and used a belt around my torso with more chain. \"So much that I asked Christopher about being a Master.\"\n\nI shuddered in my bondage, so much so that it flared the fire in my ass when I shifted on the spikes, so much so that the toys rubbed inside of me and I whimpered again. God, I was pathetic for him at that moment. \"That... sounds good, Sir.\"\n\nHe finally circled around to my side, finished with his tying me down, and he leaned forward to kiss me the softest kiss. \"In a way. It's not quite the right word for what it seems like things would be between you and I. It seems more like you and I will be a steady balance where you'll be something more under control when I hurt you and when I leave us both unsatisfied and then you'll end up a submissive or girlfriend, maybe, when we're both ready to touch that valve or when it releases eventually. I'm still not quite sure yet, but we'll talk about that afterwards. For right now, what matters is that it gave me a different problem.\n\n\"Now, as the kind of sadist I am, how would I go about punishing my little strange mix of a potential slave and a submissive? I can't use pain. Pain is how I love on you and it'd ruin all the conditioning work between us. So that left me in a bit of a strange place I hadn't been to before.\"\n\n\"Punishment?\" I couldn't think. I could only accept, but I knew that was a word I hadn't heard from him before.\n\nHe smiled ruefully. \"Lying to Sir gets you nothing but trouble, dear heart. A submissive who is too afraid to tell her fears or to ask for help is in error. It's an understandable error, but it's error. You tell me when you have fears that have to do with these games. It's something a top needs to know and you do one wrong when you hide things when the games get more serious or continue. When you play darker and deeper, it's not something you fuck around with.\"\n\nI shifted, emptied of any emotion, but with the thought that he knew and I'd been bad. I blinked when he came back with a vibrator.\n\nThat wasn't what I expected with descriptions of the word \"punishment\". \"It's also disrespectful.\" He tapped my lips gently when I made to open my mouth. \"No, I gave you the chance, so it doesn't matter right now. I'll give you another chance once we're done and you're recovered.\" Recovered. Now, that word made me eye the vibrator more warily. \"You're not going to like this, starlight. I had to think about it for a long time, but I finally came to the conclusion that, as someone a little newer to more of the long term domination aspects and as someone who wants to go farther with you, I'd want my submissive to know that I still loved her, but that I wasn't a happy sadist.\"\n\nHe held the wide head of the vibrator to my clit so that I blinked in shock and then moaned, still wondering where this was going. He was soft even then, too, pressing one palm to my abdomen in a caress while he rolled the vibrator over that heavenly spot. \"S-sir? Sir, I- I- Oh!\" He was silent and that made it worse. He didn't command. He forced instead, even though I tried to fight the tide of pleasure with the uncertainty of what I was supposed to do. It was useless, though, even though he used a somewhat lower setting.\n\nBecause eventually it just built whether I wanted it to or not. I jolted in the chair with the force, especially with the toys holding me so stuffed and, of course, I squeezed on those and it only shot my arousal higher. And then it made me cringe away when I was partially through the comedown with how sensitive it felt.\n\nHe shushed me and forced the vibrator over my clit still, so that my eyes went wide with this pain that wasn't his pain, this kind that was awful for the fact that it wasn't the kind to go with the force he loved most. He spoke of that, how he loved the sharp impact of pain, how he loved all the reactions.\n\nI didn't know how I knew, but these weren't the right reactions and this wasn't the right kind of pain. \"No! No, please!\"\n\nHe was unforgiving and stoic, his touch still gentle, but he didn't soothe me with those words that went with all my favorite moments of intensity. Instead, he just softly said, \"Yes,\" and kept going so that it built again. I fought, wondering how many he was going to put me through and how long this would last, wondering if it would be better to try to get it over with or not. What if he just had an amount of time in mind and that only made me suffer worse? He wasn't giving anything away and that vibrator was so damned undeniably good, so much so that it built and I-\n\n\"Oh, please!\" The toys made it worse, too, made me cringe when I pulsed on them too soon after the first one. \"I'm sorry! I'll tell you everything, I swear!\"\n\nBut of course, he didn't answer that because he'd already answered it. He'd already said it, hadn't he, that after punishment, he'd give me another chance. I already shuddered at the thought of what would happen if I didn't tell him the truth then. It wasn't entirely that it was multiple orgasms either, because I'd had those with him, when he fucked me. It was the way they were given, with that steady vibration forced to my clit, when orgasms from clitoral stimulation were intense and something I always needed a while to recover from before indulging in another one. It struck me as all the more awful that I had once had fears of being frigid and now I was too hot.\n\nI shook with the torture of those overly sensitive few seconds immediately after and then sobbed when it started to rise again, already crying.\n\nIt was a shift that made the torment in my ass flare all over again that calmed my crying into soft, broken sniffles. It made me remember his words.\n\nI'd want my submissive to know that I still loved her. It... made it a little more bearable, at least. I gasped quietly when the build started again, then shrieked when I went over with all the more sporadic lack of control after the first two. At least the first one had followed what I knew about my orgasm builds. The next ones seemed to take longer to get me started but once they did get started, I had no idea what they were going to do.\n\nI struggled with the start of the next one, ripping at the restraints, but I was too tightly held to the spiky pads and could only thrash on those, fucking the toys as I did, as that reminder. By the build of that fourth one, I was convinced those spikes were the only things that were going to keep my sanity intact.\n\nWait, was it the fourth one? Did that mean I was on five? I lost track and only cried for mercy. \"S-sir. Sir, please, I can't-\" I squealed.\n\nI think there were two after that, but I really couldn't have told you. I only knew that I'd take those hundred paddle strikes three times over instead of going through it again, especially when the last one felt like it took an hour where every second felt like an eternity.\n\n\u2014\u2014\u2014\u2014\n\nI stared at him through the bars of the cage he'd locked me in when he'd let me up. I'd practically scampered into the cage, actually, even though I would have thought I'd never want to have something like bars between him and I. His embrace was the best part about his pain.\n\nNot that time. He sat against a wall, watching me back while I recovered, as he'd put it, and that word made a hell of a lot more sense afterwards. I knew why he'd punished me, too, knew what lie he already knew about.\n\nI shivered in the cage, with the thought that a sadist like him already gave me quite a bit of pain and we had the game where I didn't even want him to get me off at the end most of the time. Oh, but he'd found a way to give punishment.\n\nJackson had been strange before and he'd scared me a little bit, sure, but it was a sexy fear, one that went with nights of being hurt in his weird form of love. After that, I wasn't just scared of him. That made him terrifying, that he could be so limited and still find a way to make punishment that effective. It had been awful and he'd done it with orgasms.\n\nI loved him more than ever. And I didn't know how that worked, but it did.\n\nHe finally broke the quiet. \"Are you thirsty, starlight?\"\n"
    ],
    "authorname": "Payne_Hall",
    "tags": [
        "dom",
        "sub",
        "dom/sub",
        "d/s",
        "mature"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/silver-fox-pt-02"
}