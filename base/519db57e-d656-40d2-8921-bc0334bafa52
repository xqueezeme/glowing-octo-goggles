{
    "title": "Siren Ch. 08",
    "pages": [
        "Hi! I'm back with more, and just in time before the semester starts. Enjoy! \n\n*** \n\nRoland turned back to Kenna's stricken face. \"Stay here,\" he said, voice dark and serious. \"Kenna!\" he snapped, forcing her attention through the panic he could see in her eyes. Of course it would bring back the memories of the day he'd first seen her, frantic as she was cornered by the Tim and Jasper, and then again, pale and shocked, covered in Dougray's blood. \n\nHer eyes focused on him and he held them with his stare. \"Stay here, I cannot vouch for your safety with the crew during the fight. Do not leave this room.\" \n\n\"My safety with the crew?\" she whispered aghast. There was no time to reassure her of the fight to come, or the inevitability of their defeat. But he had discovered the only way to keep your head in a battle was to leave off the possibility of losing until there was no other option, and then, focus only on surviving. \n\n\"Do not leave this cabin.\" There was no time. He shut the door behind him, wiping the vision of her sitting there, tear bright eyes and shocked expression as she reeled from one undoing to the next. There would be time for comfort later. \n\nTopside, Roland rushed to the sterncastel, the grey evening betrayed only the faintest outline of the Man of War on their heels. \n\n\"Starboard watch never saw them coming 'til we heard the first shot!\" Stephens shouted over the thumping of boots as the men were called to their stations. \"They were well within the cloud bank at stern. I don't know if they even knew we was here.\" Roland heard the low whistle of the cannon ball that quickly shifted to a shrieking cry as it hurtled towards them. It fell short, but not short enough. \n\n\"Mr. Abbott!\" Roland called out, hoping the man's survival instincts outweighed his other, less desirable traits. \"And where is Dooley?\" \n\nStephens shrugged, \"I can tell you that while we have the powder to make a stand, she's not going to withstand the guns on that ship. That's a fully loaded Man of War and we've already got holes we haven't yet plugged.\" \n\n\"Men to the tops! Lower royal and topgallant!\" Roland called out. The only way out was to run. In Dooley's absence, Stephens began doling out orders. The sailors hit the rigging and swarmed up towards the topsails. The ship began to pitch forward as the wind filled their sails, driving them further along. A shout behind Roland alerted him to the Helmsman's fall and he grabbed the spinning spokes of the wheel before the man rolled underneath it as The Charon rolled to port. The man regained his footing and came to brace the far side of the wheel as the ship righted itself in time to cut through the next wave. \n\nAbbott and Dooley appeared up the steps. Dooley's face properly scared; Abbott was looking serious but somehow pleased. \"Running, captain?\" Abbott made no attempt to disguise his distain this time. The whistle of another shot wiped his smirk away quickly however. \n\n\"All watches to quarters,\" Roland shouted, frustration rising. This was no time for their grievances. \"Dooley, do your fucking job and get the rest of the men topside. We need every stich of canvass flying. Abbott, get your crews to the pumps.\" Before following orders, the pair of them went to the rail, assessing the threat for themselves. \n\nStephens ran back up the steps, Barnes on his heels. \"10 knots on the windward rail, Captain, but they are still gaining.\" Stephens didn't spare a glance at the two men clutching the gunwale as they sighted the threat for the first time. \n\nRoland looked at Barnes. \"She's faster than we are in these winds, and won't get tossed about nearly as badly as we will,\" the navigator confirmed the worst. The spray from the sea soaked them all as the bow plunged down below the waves and back up, water slicking the decks with every wave. \n\n\"Then we fight,\" Abbott shouted. \"It's the cannons or the noose and I know which I prefer.\" \n\nRoland didn't turn to look at him. \"How long until their gun can reach us?\" he asked Barnes. \n\n\"We've got an hour at most.\" \n\nStephens looked back and then over into the gathering darkness. \"Can we stay ahead of them till nightfall? We can lose them if we douse our lanterns.\" \n\nBarnes looked up at the darkening sky, the storm clouds gathering to port but still thin enough to let the light through on their current trajectory. \"Not unless we change course.\" \n\nRoland followed the navigator's eyes over towards the very storm they had been edging for days, the one that they had agreed would likely rip the ship apart. \"It seems we have a third choice, Mr. Abbott.\" \n\nDooley saw their thinking and reeled back towards the group. \"There is no way we make it out alive of that!\" \n\nStephens shook his head. \"Three ways to die, Dooley. I'd prefer the sea to these English fucks any day. But if you like I'll give you a skiff and you can take your husband here and surrender yourselves to His Majesty's Navy and see if they hang you or just leave you to float away.\" \n\nDooley's face went red and he opened his mouth to shout back at the boatswain but the harsh boom and shriek of another cannon shot cut him off. \n\n\"Enough,\" Roland said, employing a tone he rarely used with any of the men. But now was not the time for politics. He released one grip on the wheel and stepped between the two men glowering at each other. \"Barnes, change course, take us into the storm. Dooley, get men topside to take in sail as soon as we get behind the cover of the clouds. Abbott, your men to corking the pumps. Stephens, Make sure Toby has enough men to plug the holes below and then get back up here to the rig.\" \n\n\"There's no\u2014\" Abbott began before Roland turned to him. \n\n\"Mr. Abbott,\" Roland's voice rolled out across the deck so even the busy crew around them slowed at the sound. \"Are you arguing with direct orders from your captain in a time of imminent threat to your vessel and crew?\" \n\nThe older man glowered at him. \"You-.\" Roland would not let him finish. \n\n\"Now, Mr. Abbott, the pumps. One more word and I will take Stephen's suggestion of a private skiff seriously.\" The edge in Roland's voice could not disguise the slip in his accent. As he grew more imperious, his words began to sound more like his father's, and the men would not take kindly to it. But the matter at hand was more pressing. And he chose the compliance of the crew to the possibility of giving Abbott another thing to use against him. If they survived this storm Abbott could call a vote, and Roland would deal with it then. Now he needed the men following orders. \n\nThree of them dispersed while Barnes and Roland shifted the wheel. Roland watched as the bow turned from the light grey skies ahead into the rolling black seas. The Navy would not risk its men in pursuit into the storm. But they would patrol downwind. There would be no taking in sail and waiting this out below. \n\nRain began falling, mixing with the salty spray from the waves as the ship cut the waves in two as it plowed into the foaming sea, water sloshing over her waist with every roll. Roland braced the wheel while Barnes joined him and the Helmsman to hold it still. \n\n\"The rudder?\" Roland called out over the winds. \n\nBarnes nodded his head, \"She'll hold, Captain. We've seen her through worse.\" \n\n* \n\nKenna grasped the edge of the berth as the ship tossed her around. The bucket she'd used for washing was just out of reach. She gave up her grip and took three steps towards it before the ship rolled again and she fell against the wall of the cabin. The bucket turned on its side and eased itself in a great arch across the floor. Kenna thought of every curse she'd heard in the last few weeks but refused to open her mouth, sure that would be the last straw of her control. \n\nThree more waves later and she had the bucket in hand, and gratefully released the contents of her stomach into it. The dizzying sensation of the ship rocking actually helped distract her from the numbing terror that permeated every calm moment she had. They were going to die, all of them, to the man, and she would sink with them, or be ripped apart by cannon fire, or stabbed by Abbott when no one was looking. \n\nShe cursed again, and emptied her stomach once more. The pitch of the ship was more violent than anything she'd felt up until this point, and it was getting worse. Above her, the porthole leaked water down the wall and she grasped the vertical beam to steady herself as she stood to look out. \n\nThe windows in the back of the cabin showed only distorted grey shapes, though the large one at the center could only be the navy's pursuit. The porthole on the starboard side told a different story, as black waters rushed up towards her. He had steered them into the storm. \n\nKenna sank back to the floor. The creaking of the ship in the high winds covered the sounds of the Navy's shots. But only just. \n\nShe fisted her hair and leaned her forehead against her knees. Dread filled the void her food has left behind. The rain began, the sounds of the storm terrifying as they filled the empty room. Rage, desperation and fear stormed inside her. He would lead her to her death, just as she'd always assumed he would, snuff out everything she had worked so hard to keep sound\u2014her sanity, her body, her purpose. \n\nHe faced certain death on all sides, but she hadn't. If he had surrendered, she could have been saved. It hadn't occurred to him, she was sure of it, fury rising even as she reached for the bucket again. Bile burned her throat worse than her anger. What a foolish woman she was, to feel affection for a man who would rather her dead than free from him. \n\nIt was idiotic, to be angry at a man for choosing the tiniest possibility of life instead of certain death. But some part of her, the same part that loved the stories she told, the believed in redemption and goodness in the world, that stupid part of her had hoped he would do it for her, save her above himself. But rationality faded faster than the daylight as the storm closed around them, the windows at stern now completely black. Kenna's body was tossed from the wall with a violent shuddering of the ship as the wind howled through the wood. The bucket flew to the far end of the room, its contents filling the space with the smell of sick. Kenna turned on all fours and made her way back towards the berth. \n\nShe longed to retreat into the crawl space she had claimed. She needed to be away from his smell, the bed she had just betrayed herself upon over and over again. Her fear was so easily pushed into hate that it simmered inside her, murderous and violent. Every feeling she'd ever had for him twisted itself into that flame, and she lost herself in it. \n\nWhen her husband had led her to the stocks she'd felt panic, the desperation as she searched the crowd for some sign that they would stop this madness, that one of them would speak against it. It wasn't until the fifth blow that clarity had bloomed through that chaos. The pain, the feeling of her own blood dripping down her ribs, the unchanging faces before her, in that moment she'd known, if she survived, she would escape. There was no other recourse, no hidden savior who would help her. She would have to break herself free. \n\nAs the ship around her shuddered and water began to foam under the door, that edge of desperation rushed up at her, and as she teetered on the brink, she swore this would be the last time. \n\n* \n\n\"Strike the topgallants!\" Roland called over the winds. \"Take in the canvass and reef the mainsail!\" Stephens didn't bother shouting back, but made the calls up the rigging to the men still in the tops. \n\nThe ship shuddered more violently and Roland could hear Barnes muttering reassurances to himself. The Helmsman was joined on his side by Jasper and the four men tried to keep the ship running before the storm. Men in the tops fought with the billowing canvass, struggling to take it in. Roland looked behind him again as the last bit of light was swallowed by the clouds, and with it, the Navy's pursuit. \n\nMizzen mast and main mast sails came in and men began to descend. The Charon rolled and pitched forward almost as if she hoped to shake her crew loose. But the dark smudges of the men held fast to their lines and Roland gratefully heard boots hitting the deck shortly thereafter. \n\nA man appeared from below, fighting his way up the stairs through the shattering rain fall. \n\n\"Captain!\" Mr. Schmidt called out as he grasped the line to steading himself. \"The pumps are at maximum and Toby's still got more holes. We're taking on water at port and we need more hands.\" \n\n\"Take the wheel, Mr. Schmidt. I'll see to it,\" Roland traded places with the man and made his way down to the main deck. \"Below!\" he shouted to the men clinging to the lines as water sloshed over the sides, foaming at the scuppers and pulling their footing from underneath them. \"Mind the pumps and fill holes as needed.\" \n\n\"Captain!\" Stephens appeared next to him. \"We should heave-to and go below. There's nothing left to do but wait this out.\" \n\n\"We run before this storm Luke,\" Roland shouted back, rain and sea foam filling his mouth as another wave filled the wait of the ship before retreating. \n\n\"Aye, but soon it won't make a lick of difference if we can't see the waves.\" \n\nHe was right, of course. \"Get up the rigging on the foremast and help take in the last of the sails. I'll inform the men at the wheel.\" \n\nRoland turned back towards the stair, the water soaking him to his core as another wave crashed over the gunwales and sent his back painfully into the rail. He took another step upwards, clinging to the soaked wood as The Charon plowed downwards into the next swell. \n\nA great cracking sound erupted from above as he reached the bottom of the steps. The foremast mainsail, reefed to ease the strain but still propel the ship, snapped in the wind as its securing lines came loose. The men above it, still fighting with the top gallants, swayed in the ropes as the mast bent under the strain. \n\nRoland changed direction and charged up the forecastle as Stephens, quick as ever, launched himself into the rigging. \"Stephens!\" Roland shouted into the wind, trying to keep the man from ascending any higher. But his voice was lost in the gale. \n\nThe lashings for the main sail caught and the canvassed billowed with the force of the wind. Stephens was halfway up to the top gallant when a man clinging to the yard arm screamed and lost his grip. Roland didn't see his body hit the waves in the dark and though the call went out, there was no man to do anything. \n\nRoland grabbed an axe and went to the lines holding the sails in the place, intending on easing the strain on the smallest mast. The boat keeled hard, dipping the starboard yard arms into the sea before righting. Roland slipped as the deck disappeared from under his boots but he stood again as the water rushed over him and took up the axe again. Someone came alongside him to work as well. With one side free, Roland turned to the starboard lines to find the man next to him was Dooley, surprising him even through the acute focus he'd found during the storm's course. \n\nThe ship heeled, the sails taking them alongside the break of the waves so they were at beam sea in turbulent waters. The topgallant fell despite the men working to secure it, filling immediately and snapping another sailor off and into the waves. The crack of the mast breaking shot through the sounds of the storm, and Roland and Dooley turned to see the top of the foremast snap off, sending the royal and topgallant into the sea, along with the few crew members still clinging to it. \n\nThe lines that secured the sails and mast pulled on the wreckage as it made it's descent into the foaming sea. Roland shoved Dooley out of the way as a line pulled tight across the forecastle, nearly sending them flying to the main deck below. \n\nBarnes was there before Roland could stand. \"Cut it loose, Captain!\" the navigator screamed through the rain and wind. \"We can't keep her running this way.\" He lost his footing as the ship keeled over towards the broken mast, pulled by the weight over till the leeward gunwale skimmed the waves. Roland and Dooley wedges their footing between the deck floor and the gunwale, the tilt of the ship too extreme to stand on the deck alone. \n\nBarnes was screaming to the men in the water, but Roland couldn't make out his words. It didn't matter. There was no choice in the matter. Dooley swung his axe faster than the man had ever moved before. The two of them worked on the lines until one remained. Roland cast a look out to the wreckage, and found he couldn't see it any longer. Dooley struck the last line and the men who may or may not have still been there were lost into the night. \n\n* \n\nThe terrifying sound of the dismasting was all the warning she had before the ship pitched. Kenna slammed into the wall next to the berth, her back hitting the wood with the full force of her body as the ship keeled violently to starboard. Her head struck the wood hard enough to make her vision blacken, or it would have had she been able to see anything; the lantern she'd lit before dinner was long put out for fear of fire. Water sloshed on the floor and she tried to pull herself from the side of the cabin, only to find the ship was not righting itself. \n\nIn the dark she thought she could hear the sea foaming at the windows, the water hungry for some entry. She lay there, dazed from the blow, her back pressed to the wood, as the world tilted deeper into the waves. In her mind's eye she was arriving to port on The Orion, he sister waiting for her on the docks with her children. They stood there, straight and solid, smiling and holding out their hands to her, the offer of freedom at the tips of their fingers, the promise of a new beginning in their joyful faces. And still Roland intruded into the fantasy, the wood at her back became his chest, the pit in her gut became his anchoring arm around her middle as he hauled her back. \n\nThe ship rolled again and Kenna tumbled back into the berth. The pounding in her head began to overwhelm her, the loss of all she'd eaten dragging her downward. The sunny dock disappeared and all that was left was darkness and the phantom embrace of a man who was not there. \n\n* \n\nRoland followed Barnes down the steps to the gun deck. Dooley shut the hatch behind them and the three stood before the crew. \n\n\"Night's fallen and we will ride this out below,\" Roland informed the men who sat on wet wood, water still sloshing through the gun port lids as the waves beat the sides of The Charon. \"Keep switching out with those on the pumps. Where's Toby?\" \n\n\"Still below with ten men,\" one of the crew said in the absence a superior to speak up. \n\nRoland nodded and turned to Barnes. \"Check on the pumps. I'm going to help in the hold.\" \n\n\"You don't have to do that, Captain,\" Dooley said from behind him. \"Toby's got ten men down there. Surely they don't need you as well.\" \n\nThe ship rocked violently and Roland grabbed an overhead line to keep from falling. He gave Dooley no such help as the man was laid out on the deck. \n\n\"I have a responsibility to this crew, Mr. Dooley, as do you. Why don't you join me below? I'm sure we can find something useful for you to do.\" \n\nBarnes turned back to Roland. \"Luke?\" \n\nRoland shook his head, \"Luke Stephens was lost with the rest of the men on the foremast. It could have been all of us if not for Mr. Dooley's help.\" There was a sharp point in the way he said 'help' as if perhaps the Quartermaster had been helping send the men to their watery graves instead of releasing the ship from the drag of her foremast. It was unkind, but Roland found himself looking at Dooley's face instead of Stephens and the anger he felt at that threatened to bubble over more violently. ",
        "\"Captain,\" the man whined as he stood up. \"I was\u2014\" he sputtered. \n\n\"Coming to the hold with me.\" Roland finished for him. \"Very good, Mr. Dooley.\" \n\nWith that Roland turned on his heels and made his way across the gun deck, checking in on the crew as he passed, Dooley following begrudgingly behind him. \n\n* \n\nA shrill sound punctured the thickness of sleep that had shielded her from the storm. The first thought that followed it was that she was still, at least relativity, and the sensation of the arm across her belly was very much not a fantasy. She opened her eyes slowly, her head still aching fiercely from when she'd struck it. She raised her hand to the back of her head, feeling the large knot of flesh beneath her hair and hissing at the sharp pain elicited by her fingertips. \n\nThe man at her back did not stir until the sound rang out again and Kenna jerked to sitting, her head protesting the movement but the rest of her too eager to slow down. Roland groaned and turned on his back as she wriggled out from under his arm and threw herself at the bench below the windows. The latch gave and the smell of long grass and swampy land rushed in. The seagulls above called out now, their shrill voices a welcome sign. \n\nKenna breathed in the smell of land, her eyes latching on the green expanse beyond the windows. The sea that stood between them seemed insignificant after so many weeks of nothing but sky and ocean on every horizon. \n\n\"Come back to bed.\" Roland's gravelly voice came from behind her. \n\n\"Where are we?\" she asked, ignoring him and keeping her eyes on the trees that promised sweet shade over firm ground. \n\n\"The storm blew us into the coast, somewhere south of the Carolina's colonies.\" His hand came up and he beckoned her again, but her eyes were fixed outwards and she didn't see it. \n\n\"Carolina...\" she whispered to herself, though not soft enough that her meaning was lost on her companion. \n\n* \n\nRoland rolled on his side and glanced her way, seeing her small form perched on the sill as if she might leap out at any moment. The boat rocked gently and he put his head down again. He hadn't returned to his chamber until they'd steered into the outcrop and dropped anchor and that couldn't have been more than a few hours ago. His body ached and his head hurt, but something in her voice troubled him enough to keep him from sleep. \n\n\"Is it safe to go topside?\" she asked, the same edge of excitement in her voice. There was something reckless there that Roland didn't recognize. \n\n\"No,\" he said shortly, resting the bend in his elbow over his eyes to block out the light from the windows. \n\n\"Why not?\" she demanded, her voice closer. \n\n\"Stephens is dead,\" Roland said it as bluntly as possible and moved his limb so he could see her reaction. \n\nSurprise, a whisper of sadness and then back to her determination. \"What happened?\" \n\n\"The same thing that always happens in storms.\" Roland gave up the pretense of sleeping and looked up at her. \"He drowned.\" \n\nKenna chewed her lip and looked to the door before glancing back at him. \"Do Abbott and Dooley have the upper hand already?\" \n\n\"No, but Dooley proved to be less of a coward than anticipated and might have helped save us all, so is now back in good graces with many of the men.\" Roland propped himself up on his elbow. He didn't like the way she stood, her body leaning ever so slightly towards the door. When he'd left her she'd been vulnerable, all softness and tears. That was not what he saw before him now. \n\n\"Well, perhaps I can help. I'll go topside and speak to the men.\" She gestured at the sounds of hammers ringing out above them. \"Surely they could use a song to help the work ahead of them.\" \n\nNo, he though. The instinct to catch her arm and hold her still tickled his palms. But he thought better of it. Perhaps this was not the opportune moment to be hard with her. She'd shown herself to him, confessed and found comfort in it. His suspicious nature warred with his sense of triumph; that voice that warned him of her past wiped away all thoughts of sleep. \n\n\"Very well, Kenna,\" he said, lying back. \"But don't stay too long, and keep a sharp eye out for Abbott.\" \n\nShe was gone without another word. \n\n* \n\nTopside, Kenna flew to the stern, her eyes fixed on the land at their backs. The New World, the colonies her sister had wrote to her about. Endless space, no wars or feuds to bring them to ruin, the beginning of something entirely new. \n\nShe breathed deeply, letting the smell of earth and foliage wash over her again. The terror and panic of the night before still resonated in her bones, and the promise of finally reaching a destination point created an intoxicating mix of excitement and nerves. Her hands shook as she held the gunwale, leaning over it a bit too far. \n\n\"You'll want to be careful, Mrs. Bell,\" Barnes said behind her. She turned quickly, suddenly aware that her flight up here was devoid of any of the caution Roland had advised. \n\n\"Mr. Barnes,\" she said, a nervous laugh escaping with his name. \"It's just the smell, and the green...\" she trailed off. Her mind felt jumbled, too many extreme emotions is too short a time. She felt off balance, overly excitable as though she was poised on the edge of something much more terrible. \n\n\"Aye, this long at sea, and troubled ones that they were, it can make the sight of land a powerful shock. Mind yourself that we won't be going ashore here as we're a mite too close to the ruffled types.\" Kenna cocked her head in a question and Barnes gave her a wolfish smile. \"The proper folk with their skirts and collars and such.\" \n\nKenna only nodded, her mind galloping away on that sandy beach. Her wide eyes went back to the earth at their backs and she practically vibrated with unspent anticipation. \n\n\"Give us a song, love,\" a sailor called from below. Kenna turned, and for the first time she looked at the ship for longer than it took her to find her footing. The deck was littered with debris, groups sailors worked on mending sails that lay in crumpled heaps upon the wood, others hammering at broken planks and restringing lax lines. The missing foremast gave the space an empty feeling, and the jagged remains of it stabbed into the air in an ominous reminder of what had been and was no longer. \n\nShe felt a pang of sadness for Stephens. He had been a good man, at least to her, and loyal to Roland. His loss would be felt in short order given the tenuous positions of the crew. Kenna began running through the list of all the men who were on their side, as she'd done dozens of times in the last few weeks; it was becoming reflexive. \n\n\"How many others were lost?\" she asked quietly, hushed tones in the face of the aftermath displayed before her. \n\n\"Well, Mistress, Paget, Jacobs and McGowan were on the foremast with Luke, Lyster and Gunn were lost as well though when or how no one can say.\" \n\nKenna nodded. Four from their list, one from Abbott's. Those were not agreeable numbers. A seagull screeched overhead, so close she almost ducked her head before looking up. She watched the bird dive between the masts and back out to sea, charging back towards the beach. The list in her head stopped, the question she was about to ask about Abbott and Dooley disappeared. \n\n\"Best sing for the crew mistress,\" Barnes said as he made his way down the stairs. \"The faster the hammers fly, the sooner the lads have her back on the waters and we're skipping the rest of the way home.\" \n\nKenna barely heard him. But there was a song on her lips all the same. The song her mother taught her as they sat above the Eastern Sea, looking across its expanse, back to where they belonged. The same song that her mother wrapped up in the feeling of belonging and home, of hope and family. It was the song she sang when her loneliness became too much, when all felt lost, to remind her that there was still a way. \n\n\"Speed, bonnie boat, like a bird on the wing, \n\nOnward! The sailors cry. \n\nCarry the lad that's born to be King \n\nOver the sea to Skye\" \n\nThe familiar melody was like a balm to the turbulence inside her. She had a new point of focus, a chance to be free. \n\n\"Loud the winds hole, loud the waves roar, \n\nThunderclaps rend the air; \n\nBaffled, our foes stand by the shore \n\nFollow they will not dare.\" \n\nThe breeze fluttered through her hair, bringing that intoxicating smell of deep woods and greenery. The song swelled inside her, never sung at more than a whisper in the past, it flowed out across the bay, rolling towards the shore just beyond her reach. \n\n\"Though the waves leap, soft shall ye sleep, \n\nOcean's a royal bed, \n\nRocked in the deep, Flora will keep \n\nWatch by your weary head.\" \n\nShe lost herself, her mind tripping over itself towards her escape. Nothing might stop her now; surely this is was the land where her mother's promises of finding her true place in the world would come to fruition. After all that time looking back, her parents had lost the perspective to look forward. But here her sister had found a home, and she would too. The song tumbled from her, louder than she'd ever sung before, a call to that future. \n\n\"Speed, bonnie boat, like a bird on the wing, \n\nOnward! The sailors cry. \n\nCarry the lad that's born to be King \n\nOver the sea to Skye\" \n\nShe didn't notice taking off her coat, or that her hands had wrapped themselves around the rigging, with the intent of pulling herself up on the gunwale. Her entire focus was lost in that singular intention, the only one that kept her from falling back into the pit he'd dragged her down into. She would not be caged again. \n\nBut when she pulled to bring her feet up, a steel bar crossed her middle, an impossibly hard wall at her back, \n\n\"Let go, Kenna,\" his voice was low and dangerous in her ear. Her thoughts struggled to keep her attention forward, but the fantasy unwound itself even as she clung to the ropes. \n\nThe sounds of the ship came back, the men banging in nails around her, the creaking of the wood and splashes of the waves against the hull. The world opened up, and ripped the dream away. Her fingers gave up their grip and she slumped back into him, disgusted when she felt safe as he held her. \n\nHer head went back against his shoulder, her hands rested lightly on the arm he clasped her with. The fatigue and pain from riding out the storm alone and terrified dragged at her limbs; the great release and tragedy of revealing herself to him the night before it drained her energy. Whatever moment of reckless hope she had to tear herself away dissipated into the morning air. His arm relaxed as he felt her body lose its tension and he turned her into his body, blocking the sight of land with his chest, holding her there as her body collapsed against his. \n\n* \n\n\"Do not run from me, Kenna.\" It was all the warning he'd give her. The next time she tried he would be forced to take more drastic measures. \n\nShe didn't acknowledge his words but the press of her body to his spoke of surrender. He pulled her back, looking into her face, disturbed to see the blank emptiness there. It was simply a matter of circumstance. Much had happened this last day. She needed to sleep and recover. He took her hand and made for the stairs, intent on his cabin. \n\nA call came up from below and Roland came to a halt. The hammering had stopped and men lined the gunwales that overlooked the main deck. Some were looking at him but most had their eyes fixed below. \n\nBarnes climbed the stairs before them, his face grave. He nodded to Roland, his silence speaking more than all his rambling talk ever could. Roland's grip on Kenna's hand tightened. So this would happen now. \n\nMen poured out from below, surrounding the open main deck and crowding the stairs and banisters of the forecastle and stern. Dooley stood in the center of the main deck, Abbott not far behind him. His eyes met Roland's and he smiled with a cocky triumph Roland found both over confident and worrying. He could not leave Kenna unguarded, and bringing her down into the pit with Dooley was worse than stupid. \n\n\"If you don't mind me offering the service, I'll stay here with Mrs. Bell, Captain,\" Barnes said in a low voice. \n\n\"Charlie and I will be here as well.\" Roland turned to see Munro, scabbard and knives in his belt, waiting with his gangly apprentice. \n\nThey would have to do. The beast inside howled as he ignored every instinct they shared and released her hand. Every step forward was a punishment for letting her loose on his ship. The creeping feeling in his back as he strained not to look back a fitting price for his indulgence of her. He had worried holding too tightly would have made her surrender harder to obtain, but what were her feelings in the face of all this? \n\nRoland stepped to face Dooley, his height and build far outstripping his mutinous quartermaster's. But Roland had sworn not to underestimate him, and would not again. \n\n\"You have a word to say to the crew, Mr. Dooley?\" Roland locked eyes on the man, the pricks at his back irritating still. \n\n\"Aye, Captain Roland, I've called for a vote.\" The man shifted but kept his smile. \"It's time you stepped down as captain of this crew, ill-gotten as it was.\" \n\n\"I see no cause to call for a vote, especially given the situation we now find ourselves in. Are you intentionally harming the chances of survival for this crew, pushing your own agenda as we sit not a few miles from those who would see us at the end of a noose?\" \n\nDooley lost his smile. \"You are the one who threatens our survival, Captain.\" The word dripped with derision. \"You compromised this ship, you took us into that storm, you colluded with a woman who killed our captain.\" An accusatory finger joined the fray, aimed at his chest. \n\n\"I believe the storm was a better choice than the Navy, Mr. Dooley. And it seems I've been proven correct.\" Roland crossed his arms and drew himself up. He longed to swivel his head, to make sure she was still standing there. But he didn't take his eyes off Dooley, and Abbott behind him. \n\n\"Luck and the skill of your crew don't make it right. If it weren't for me, you'dve left the foremast attached to save your men at the expense of us all.\" \n\n\"I dare say your logic is impeccable, Mr. Dooley.\" Roland drawled, posture falsely confident. \n\n\"Enough of this!\" Abbott stepped into the sunlight directly over Dooley's shoulder. \"You are an unnatural captain for this crew of freemen! You are nothing more than a fat ruffled lord in disguise. We've all seen it, we've heard it. And then you bring that thing on board, after you let her murder Captain Dougray, and you let her whisper in our ears, and sing us into complacency.\" Abbott's tone rose as his rhetoric picked up. Roland could almost feel the men around him begin to sway to it. \"This journey was cursed from the moment she arrived! The death of our captain was only the beginning. She's destroyed our rudder over and over again, sprung leaks in the hull to bring her precious life water into our ship. We have never suffered the ills we have on this journey, and it's your doing for bringing her here and not returning her to the sea as we should have! She's an unnatural siren who will sing us all into the grave!\" \n\nRoland's fury rose, and with it the hard grip he kept on it. He would not be baited. \"Mrs. Bell has done no such thing. You'd be wise to keep your wits about you Mr. Abbott. Old age might be claiming your thoughts for the worse.\" He could hear it, the way his accent became more clipped as he spoke, how his tongue tensed around his vowels despite the years he'd spent losing those habits. He was losing the crew, and yet he couldn't turn from these men who threatened them so. \n\n* \n\nKenna watched, aghast and then frustrated as Roland continued to ply logic and force to emotions and superstitions. If the men were not so ragged from the storm and the loss of their crew members, he might have been heard. But as things were, her gifts of pretty songs were nothing when her death might bring their ship home safely. \n\nAnd she could not entrust her survival to him, not with the performance he gave below. If he did not win this vote they were both doomed. \n\nShe stepped away from the protective band of men at her back and to the top of the stairs down to the main deck. \"Am I being accused of willfully sabotaging this ship?\" She raised her voice, using a tone that managed to convey both incredulity and deathly seriousness. Roland's head snapped around, as did the faces of the crew as they looked to the small woman standing barefoot in weathered soldier's garb. \n\nAbbott, in his unyielding conviction that she was indeed the enemy, was the first to speak up. \"You are accused of being what you are, a devious siren who would like nothing more than to sink us to the sea so you can claim our souls.\" \n\nKenna took a step down, feeling Munro at her back. She turned and stayed him with her hand. \"Your Master gunner has some strongly held beliefs,\" she said to the crew, meeting their eyes as she looked around. \"I'm sure I've heard them spoken often enough, you lot must be sick to death of it.\" Someone chuckled. She continued to another step. \n\n\"I must admit, the story is a compelling one. Why if all my failings could be put on another, wrapped up on their head and thrown into the sea, I believe I might be tempted to do the same.\" She looked directly at Abbott this time. \"We can't stand for a Jonas on board, now can we?\" \n\n\"You are unnatural, woman!\" he shouted at her. Dooley tried a calming hand on his partner's chest but it did no good. \"You prance around in, indecent, sowing your discord with these men. You're worse than a whore and I should have slit your throat when I had the chance.\" \n\nKenna didn't blink. After all, she'd been called worse. \"Mr. Abbott, I do confess to some confusion,\" she spoke plainly, without mocking that would turn the men away from her words. \"If I am a woman, worse than a whore, can I also be a mystical siren who would sink you for your souls?\" \n\nThe man fumed, his face red beneath his impressive beard. \"You are a murdering witch is what you are!\" \n\nKenna had set him alight now, and Dooley was concerned with actively holding him in place. She turned her attention to the crew, her eyes falling briefly on Roland's serious face. She refused to be distracted by the way her heart sank at his gaze. The task at hand was too important. They were not with her yet. Superstitions ran deep in these men, and Abbott's passion might not hurt him as much as she thought. \n\nSo she must become human to them. \"I admit that the circumstances of my joining you aboard The Charon were unfortunate,\" she addressed the men above her. \"But I am no different than any of you, flesh and bone, searching for a new life, far from the cruelty of the old world. \n\n\"Mr. Cummings,\" she called to one of the men hanging from the gunwale. He looked shocked at being addressed directly and the men around him swiveled their heads towards him. \"Did you not flee your home as the lord of the manor became too vicious to be borne? Have you not told us of the way he beat all in his service?\" \n\n\"Aye,\" the man answered, hesitant to be drawn into the drama below. \n\n\"And Mr. Fritz and Mr. Wright,\" she addressed a pair on the opposite side of the ship as they hung from the rigging for a better view. \"Were you not starved out of your livelihoods by corruption and malevolence by officials protecting the rich?\" They nodded. \n\n\"And Mr. Scott, Mr. Tandley and Mr. Cape,\" she addressed the former slaves who were clustered together by one of the cannons. She met the eyes of all those who she did not call by name. \"Did you not cast off the chains of those who stole you from your homes? ",
        "\"So many of you have escaped the cruelty of the officers in the Navy, who whipped and beat and kept you in squalor. Have you not come this far to become your own men, who would answer to no lord or king?\" \n\nAn affirmative cry went up from many of the men, but not all of them. \n\n\"Don't listen to her!\" Abbott screamed. \"She is bewitching you again! She will be the death of us all!\" \n\nShe did not look back at her accuser, but kept her gaze on the men she had sung to, listened to and entertained for all these long weeks. She knew them, but they did not know her. And with that would be Abbott's advantage. She could not deflect the blame to him as long as they still suspected her. \n\n\"I too seek as escape,\" she said, mixing the edge of sadness into her voice but careful not to over play her hand. \"I have suffered as much as any of you at the hands of the same men who beat and tortured you, who treated you ill and stole your freedom. And like you, I seek only the chance to escape that fate.\" She turned as she spoke, meeting as many eyes as she could. Those who were not already sympathetic did not quite believe her. \n\nIt was a last card to play, but when better than now, when she faced the end of Abbott's sword? If they could see her as kindred, they would not betray her to Abbott. She walked over to Roland who turned so that her back was not to the man foaming for her death. She looked him in the eye, ignoring the cold stillness she found there, knowing it belied his fury at her taking the situation in hand. \"You have to show them.\" \n\nRoland's hands flexed into fists, undoubtedly wishing her arms were wrapped in them, carried off to somewhere far from here. \"No,\" he said quietly, steel edge in his voice. \n\nShe looked straight ahead into his chest, seeking strength for what she was asking. \"It's the only way. If you lose, we die. Please, Roland.\" \n\nHe didn't move, and the silence rose behind her as the men waited to see what she would do next. A woman revealing the flesh of her back would be no surprise to these men used to the whores of Nassau. But for her, the mysterious passenger, it would make the impact to shake them loose of Abbott's poisoned words. \n\n\"Please,\" she whispered, more desperate. She could hear Dooley talking to Abbott. The spell would be broken, her work on their minds lost if he tarried any longer. \n\nRoland finally unwound his arms and brought them forward. She closed her eyes as she felt him tug the shirt from under her makeshift belt of twine. She had seen the scars of many of the men, and besides the whip marks on a few of the freed slaves, hers were worse. Cool sea air met her skin and the sun kissed the top of each ridge so she might feel the exposure acutely. \n\nThe silence left by the crew at the sight of her marked skin, filled with the call of sea birds and the creak of the ship. Roland turned her so that the rest of them might see. Excruciatingly slowly, her shame was broadcast to them all. The quiet, coupled with their stares conspired to freeze her bones, lower her heart deep into her stomach and bring tears she could never let them see to burn her eyes as she held them back. She wanted to press against him, to bury her face in his body as if it might save her the humiliation of what was occurring at her back. But she held herself still. \n\n\"Witch!\" Abbott screeched at her, snatching the moment away. But she had them, she must have. Roland immediately tugged the shirt back over her skin with the barest touch of his hand at her back as if making sure she was still there. Dooley stood dumbly next to him. Kenna met his eye and the floundering desperation there. \n\n\"This is not the matter at hand!\" Dooley cried, he turned back to the men around him, the men who were now looking with disdain at Abbott and his violent intentions. \"Captain Roland is nothing more than a Lord in disguise! He has commandeered our ship and our lives for his own use!\" The crowd had turned, even the loyalists at his back were pulling away from him. \n\n\"Call for your vote,\" Roland said harshly, holding Kenna behind him, the familiar grasp on her arm. \n\n\"You will kill us all!\" Abbott roared, his sword whistling from his belt. Roland's hand dropped from her and before she could blink, he had two swords in either fist. \n\n\"You do not want this fight, old man.\" Kenna stepped further back, away from the blades and the bristling men wielding them. She took a quick look around and saw that most of the men were hanging back, letting their captain confront the quartermaster. A fight was better sport than a vote after all, and any excuse not to return to work would do for now. \n\nKenna turned to the stairs she'd just descended to further her retreat only to find them full of sailors cheering as metal crashed into metal behind her. She fled in the other direction, up to the forecastle as Dooley and Abbott attacked Roland in unison. Only once she reached the top did she dare turn to look at the fight below. \n\nHe moved so fast she found herself breathless. Dooley himself was not unskilled, and Abbott attacked with the same harsh directness one might expect from him. Even then, their disadvantage was obvious to Kenna who had never seen swords crossed before meeting this crew. Roland's twin swords met every attack and returned them in kind, Dooley bled from his arm, Abbott lost the dagger in his left hand. Dooley rushed in and Roland turned his blades on him, Abbott recovering and coming up at his back. \n\nShe had long lost her fear of his hand, and day after day she lost sight of the brutality she had grown to expect after years of beatings. At some point she'd lost sight of his capacity for carnage, no doubt by his own design. But now, watching his blades as he beat back his enemies, she was forcibly reminded of the savagery he was capable of, and she should have been more afraid. Kenna would not recognize the gratitude she felt at that moment, the hope that he would lead them out alive. \n\nEvery time Kenna had ever faced violence she had learned to close her mouth, take her licks in silence. Her jaw would lock closed and her efforts to keep it there offered a point of focus away from what was wrought upon her. But this time, when she spied the Master Gunner scramble to his feet and launch himself back at Roland, she found her silence abandon her. \n\n\"Mr. Munro!\" she screamed across the space above the main deck. The cook wrestled his way forward, grabbing a line and dropping onto the deck in front of the older man, his sword still in hand. He set about confirming to Kenna that his days as a cook were not his original occupation. \n\nMore of Abbott's men joined the fight, met with hollers and knives from the other men. The main deck erupted in violence and Kenna stood aghast. Roland fought three men, including Dooley even as his crew came to snatch away those focused on defeating the man they'd been poisoned against. \n\nSuch was her attention on the men threatening Roland, she failed to see the man slip up to the forecastle as the others rushed down to join the fray. She was too intent on Dooley pulling a pistol to aim at Roland, the loud crack of the shot, knocked up by the flat end of one sword, while the other blade buried itself in the quartermaster's gut. Her cry of relief was captured behind a hard palm pressing her head back into his shoulder. Her hands, clutched as they were on the railing, were wrenched off in his other fist. \n\nKenna tensed to fight, pitiful though it might be, her voice silenced by the crushing hand and her own instincts. She felt herself lifted up, and suddenly every hold on her was gone and she flew free. Just before the water welcomed her into its cold embrace, she saw Jasper's face over the side as she plummeted off the ship. \n\n**** \n\nSo hopefully the lack of naughty bits wasn't a bad thing, as it was high time something happened aboard this ship. \n\nI still don't know the fate of this story as of my leap to publishing, which grows ever more complex as I try to balance everything. Updates will be forthcoming if I ever have any :) \n\nThanks to everyone for your support! Let me know what you think!"
    ],
    "authorname": "AmoryParks",
    "tags": [
        "pirate",
        "non-con",
        "captain",
        "captive",
        "captured",
        "historical",
        "kidnapped",
        "colonial period",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/siren-ch-08"
}