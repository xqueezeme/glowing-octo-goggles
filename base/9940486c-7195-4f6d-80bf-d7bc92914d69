{
    "title": "The Fool Ch. 12",
    "pages": [
        "Authors Note: Thank you once again to everyone who leaves comments and feedback on my writing, it is much appreciated. This is the final chapter in this series. As always, I know there are a few loose ends which will be handy if I ever get inspired to write a follow up series. Thank you very much to Paul who has been my second set of eyes throughout this whole series, he is a great friend to help me out so much. I hope you enjoy it. ~ellie\n\n*****\n\nThe Fool Ch. 12\n\nThe freedom to choose her fate.\n\nThe men had been separated into smaller groups and led away to adjoining rooms, starting with the new association members who hoped to regain their family's places in the association of Hats. Jordan, Gerard and Joseph were taken to a smaller conference room where they met with another woman who introduced herself as Lady Helena Windsor.\n\n\"I want there to be no confusion for you,\" she began. \"The men you were just with are a brotherhood. Despite family feuds and rifts in the association, they have family ties that bind them tightly together. Your bonds were severed. You cannot expect, nor do you deserve the same rights and advantages as those men have. Not until you have worked to become one of them and prove yourselves worthy.\"\n\n\"That's bullshit,\" Gerard Myngs raged. \"My ancestor was the first of the Brotherhood alongside Mansvelt!\"\n\n\"That means very little to anyone here aside from you. You are like the foster children joining a large unruly family who already have the bonds of friendship and love to tie them together. You cannot expect them just to accept you because some Port Royal slut opened her legs for your ancestor. Before you become indignant,\" she held up her hand and spoke quickly. \"Make no mistake, Edvard Myngs was never married, and, by definition, all of his progeny were bastards.\"\n\n\"I think I'd rather that than the fact that my ancestor ran away to sea to get away from his nagging shrew of a wife and children,\" Jordan said with a perfectly straight face. \"I imagine she sailed here from Barbados and nagged the Governor of Jamaica into handing over all of his stolen treasure, and they did, just to be rid of her.\"\n\n\"I think the woman ran away when she found she was pregnant to my ancestor. He was such a cruel bastard, he probably would have killed her and the kid, but the woman went to Lord Windsor, and he sent the mother and son back to England so he would get a proper education. Or, at least, that's how the story goes,\" Joseph said.\n\n\"The terms of your contracts with the Windsor's reflect your lesser status with the group, but there is provision for them to be amended, and or upgraded as time passes. Take your time to read them carefully and know what you are not only committing yourselves to, but also your family,\" Helena warned, placing folios on the table before them. With that, she got up and left them, leaving a guard outside the door.\n\n*****\n\nThe three men named as associates of Edith were the next to be separated from the larger group and were also taken to a smaller conference room.\n\n\"Hello, Gentlemen, I am Lady Marina Windsor,\" the woman greeted them. \"Well, haven't you been naughty boys then,\" she said with a wink. \"So naughty in the fact that the Windsor's have deemed it a fitting consequence of diminishing your power within the association for a period until you have proven that you can embrace true mission statement of the brotherhood instead of using it solely for your personal gains.\"\n\n\"Be less? I won't be a slave to another man's agenda!\" Vane protested.\n\n\"That is, of course, your choice. The Windsor's have decided to take a more hands-on approach in light of recent events and the scrutiny of the world police that is aimed at you all right now. We have no doubt that Edith will go down trying to drag everyone one of you down with her, and, if you want our assistance in this matter, you will read the terms thoroughly before making your decision to reject them. If even half of what we have learned is true, you will need the help of people who can make a difference for you.\"\n\n\"What does a more hands-on approach mean, exactly?\" Roberts asked carefully. After hearing what Carrington had told them, he had every reason to want to make a deal and keep as much power and influence on his side as he could.\n\n\"A Lord of Windsor will preside over the association until it is recognised as being able to function on its own as a brotherhood. You will become what you once were, the elite warrior arm of the Windsors, who will work as a force to be reckoned with and be rewarded heavily. Now, gentlemen, I will leave you to read and discuss the terms of the agreement.\" Marina stood and left the room with a smile at the large man who stood guard at their door.\n\n*****\n\nThe two steadfastly neutral members of the association were taken next and introduced to Lady Charlotte Windsor.\n\n\"It's a wonderful thing to stay neutral in arguments and be the voice of reason. It is quite another to be neutral only until the question of what's in it for you has been decided. So I will tell you what's in these agreements for the two of you, nothing!\" Charlotte placed the two terms of agreement folios on the desk before them. \"If you do not take a more active and altruistic role in decision making within the brotherhood, you will find the power you hold there will diminish with the rewards you will receive for service. Times have changed, gentlemen, and sitting back to reap the rewards while others take risks is no longer an option for either of you.\"\n\n\"I hardly think that's fair,\" Rackham argued.\n\n\"Really? Do you think Edith will go down without a fight? Do you think the brotherhood is strong enough to withstand that sort of scrutiny unless you are all united and working toward the same goal? The Hats need us far more than we need this sort of publicity and drama. We can lessen the effects and possibly negate them, but we expect a return to the original reason the Brotherhood was formed in the first place. To have honour amongst thieves, you must first be able to trust each other, and, I guarantee you, no one trusts either of you because of your self-serving ways. Read the documents and join us or go it alone, the choice is yours, as it always has been.\" Charlotte waited a minute after her speech for them to say anything else, but they stared at her in stunned silence, so she left the room.\n\n*****\n\nCarrie looked at the remaining four men in the conference room and smiled softly as she got to her feet. \"If you would all follow me, please.\" She led them up to the lounge where her grandmother still sat.\n\n\"Welcome, gentlemen, I am Carrington Cartier Windsor, though I prefer to be addressed as CC at this time,\" she said and indicated the seating with a sweep of her hand. \"Can I offer you a drink?\" she asked.\n\n\"I have a feeling we're going to need one,\" Freddy said with a tight laugh, and went to the bar, startling the manservant by picking up a bottle of Dimple and several glasses before returning to his seat and pouring for himself and his friends.\n\n\"Not at all. You are each to be commended for the work you have done for us since taking your place amongst the brotherhood. While the others of the association are facing some harsh realities and consequences of their actions, I have information instead of ultimatums I would like to share with the four of you,\" CC said in an even tone. \"Then I will leave you to discuss that information and read over the terms of the agreement before dinner.\"\n\n\"Harsh realities?\" the kind-hearted Ben asked, suddenly worried for his associates.\n\n\"Don't look like that, Ben, we aren't keelhauling them or making them walk the plank,\" she cackled. \"Carrington, why don't you go and check on how your cousins are doing with their charges while I have a chat to these gentlemen.\"\n\n\"I'd be happy to,\" she said lightly, and left the room, relieved not to have to be there during the conversation with the four men.\n\n\"Now where were we? Ah, yes, harsh realities. Myngs, Bonnet, and Nau are learning that they will be seen as apprentices rather than full members of the Brotherhood until they have proven their loyalty and trustworthiness. Vane, Teach, and Roberts are learning that there are consequences to doing deals with the devil, and, if they do not accept the probationary period we have offered them, we will allow Edith's allegations against them to go unanswered and let them deal the outcome of that themselves,\" she paused and took a sip of her tea.\n\n\"What does a probationary period look like in reality?\" Christopher asked.\n\n\"The rewards offered to each family after successful missions will no longer be shared evenly. Which brings me to the two fence sitters. They have been told to be actively involved in the Brotherhood or receive nothing like their current participation warrants.\" She paused, again looking pleased with herself.\n\n\"Rackham must have had an embolism when he heard that,\" Freddy whistled.\n\n\"You gentlemen will suffer no such censure, you will have a greater voice and a greater share of the rewards until such time as the others come up to standard. There will be a mentoring program for the three men who have not grown up within the bosom of your families, and I expect all four of you to take that on board with each of the men. That would include Bonnet spending some time with the Mansvelt's,\" she looked meaningfully at Sinclair.\n\n\"Given time, that may be possible,\" he conceded. \"With Edith gone, so are the aspirations he had that I didn't like, hopefully.\"\n\n\"Lovely, because that brings me to my next point. With the restructuring, the Windsor's would like a more hands-on role within the Brotherhood to bring it back to the elite warrior arm of the Windsor's. We believe a representative of the Windsor's within the core of the Brotherhood would be ideal, as we plan to step up operations in several hot spots over the next few years.\" CC looked at the men carefully; they did not seem overly concerned about the announcement.\n\n\"Double embolism for Rackham,\" Freddy nodded.\n\n\"I wouldn't be surprised if Vane decided to go it alone rather than lose his autonomy,\" Christopher said thoughtfully.\n\n\"Would we know who this was? I mean, do we already have a relationship with the Windsor you want to join us?\" Sinclair asked carefully, unsure how he felt about having, what amounted to, an overseer watching his every move.\n\n\"We have two candidates in mind, and, depending on how negotiations go today, they may be able to work in tandem,\" she said enigmatically. \"First I would like you to look at the terms of the agreements we are offering each of you. There are no surprises in there; it is just a more formalised version of what we have historically held onto as the Hat contract.\"\n\nShe watched them carefully as they huddled together and murmured, each taking a different section of the contract before sitting back to read carefully. CC noted that Sinclair took the initial pages. She wondered at his natural leadership abilities, or whether these men had known him for so long, that was just the way it was now.\n\n\"If you'll excuse me, I will just go and freshen up as you read,\" CC excused herself and walked from the cabin.\n\n\"It seems like we get a great deal here, reward wise,\" Freddy said into the silence. \"We'd be officers, the others would be bosons, and the newbies would be crew, going by this pay scale.\"\n\n\"It's the same with decision making, our votes will count for more at the moment, but it is expected that the others would rise in rank fairly quickly, that's where it become a little grey. We would have a say in the promotions, but the Captain would make the decision as to whether to send that recommendation to the Windsor's,\" Ben added his agreement to Freddy's assessment of the rankings.\n\n\"Sounds like some sort of shadow operations team. A bit James Bond-like, the premise being that, with the connections our families have built over the centuries, we can get into any home or castle within the world through the front door,\" Christopher was rereading his part to ensure he understood what the missions would entail and the parameters they were expected to work within.\n\n\"It's pretty much what you all said, the mission statement is to work toward the good of the people, but fails to name those people or location. The best I could hazard a guess at is that the Windsor's are planning on meddling with the politics of the world, and we are the ones who will smooth the way for them by doing the covert James Bond stuff,\" he, like Christopher, was rereading sections as he spoke.\n\nEach man looked up as the engine of another boat seemed to come closer and then just cut out, as if someone had docked to the cruiser. They heard voices, and, though none of them moved from their seat, they craned their heads as one as if to hear what was being said as the voices came closer.\n\n\"Perhaps it's our new brother, Lord Windsor,\" Ben spoke in hushed tones.\n\n\"I'm sorry I took so long, gentlemen,\" CC said, coming back into the room minutes later. \"Another guest arrived, and I needed to greet them personally. Carrington is showing him to his room while we finish up our discussions.\"\n\n\"The terms of the agreement seem quite generous, there are a few grey areas, but I am sure from the rest of the document that it is nothing that can't be worked around,\" Sinclair said.\n\n\"Good, I believe those grey areas can be discussed through the Lord of Windsor,\" she purposefully changed the way she said the title.\n\n\"It that who just arrived?\" Freddy asked bluntly.\n\n\"No, dear, though our new guest will make the transition easier if the first candidate accepts the role and all that comes with it,\" she said enigmatically, enjoying the looks of frustration she received from the men. The truth was that, although she knew what she wanted, she wasn't sure how to word it to get the desired result.\n\n\"You've known Sinclair all of your life, Christopher?\" she asked. \"Ben? Freddy? So you're already like brothers, no doubt.\" She said as they each nodded and the quizzical looks deepened. \"Do you think he will still marry Carrington, despite his learning that she set up the stunt in the museum and came here of her own free will?\"\n\n\"I dunno, there's that, but then admitting she was the Fool was a little hard to take when we had begun to trust her. It would be a lot to forgive, even if he has been acting like a love-sick schoolboy ever since he met her,\" Freddy shook his head.\n\n\"It might help you to know that she believed my life was in danger if she didn't disappear the way she did,\" Sinclair jumped to Carrie's defence.\n\n\"She's put him through the wringer more than once,\" Christopher mused in a teasing way, \"He's a glutton for punishment though, so, probably.\"\n\n\"The question is... why would she still want to marry him? He's not getting any younger, and there are some very good looking young men crewing this ship,\" Ben nodded. \"If it's a Mansvelt she wants, though, his cousin's like a carbon copy, only younger, and, I dare say, fitter.\"\n\n\"And gay,\" Sinclair grumbled about his friend's good-natured teasing.\n\n\"Should Sinclair marry my granddaughter, Carrington, he would, through marriage, become a Lord of Windsor,\" she said tentatively, trying to read Sinclair's expression before speaking again. \"Should he choose to use that title and take up the role as Captain of the Brotherhood, he would need to vacate his seat, which would go to his cousin, Oliver, of whom you speak, if the male line of succession is adhered to, of course. The balance of power would shift within the brotherhood, and my questions still stand... does he still want to marry Carrington Wordsworth Windsor?\"\n\n\"Stop looking at me as if I will say no. I dragged you all out here to get Carrington back only hours ago. We are going to be married, as soon as I get to talk to her properly and remind her why she asked me in the first place. The question is... what sort of a captain I would be? Maybe it's better to have an unknown, so there are no bad feelings or assumptions about how things will work!\" Sinclair said angrily, feeling like he was being ambushed.\n\n\"Better for who? Not better for me,\" Freddy said. \"What about you guys?\"\n\n\"I'd prefer someone I knew I could trust with my life sending me out on missions,\" Christopher agreed.\n\n\"Ditto,\" Ben said wide eyed.\n\n\"I doubt the rest of them will feel that way,\" Sinclair said. \"And I still haven't had the chance to talk to Carrie, let alone find out if she still wants to marry me, it's not just about me, you know.\"\n\n\"So, we get Carrington in here, simple,\" Christopher said. \"No one can make an informed decision until the issue of a wedding date is resolved.\"\n\n\"We could always get the Captain of this ship down to do the deed at the same time,\" Freddy chimed in, \"They could have a proper ceremony later as well, wherever they wanted.\"\n\n\"Harder for the others to fight the issue if it's already said and done,\" Christopher looked at it logically. \"It would be even more concrete if Ollie was here as well.\"\n\n\"Did someone ask for me?\" A younger version of Sinclair strode into the lounge with Carrie still marvelling at the family resemblance.\n\n\"Ollie!\" Sinclair exclaimed, coming to his feet and embracing his cousin. \"I haven't accepted anything,\" he spoke to CC.\n\n\"Hedging my bets,\" the old woman cackled.\n\n\"I have no idea what's going on. I was told your fianc\u00e9 was in trouble and you needed my help,\" Oliver said, looking between Carrie and Sinclair. \"You both seem fine to me. So, a free holiday, I'm guessing?\"\n\n\"It comes with a pretty big catch, I'm afraid,\" Sinclair said seriously. \"I'll let the guys fill you in while Carrie takes me to find the Captain.\"\n\n\"The Captain? Why do you need the Captain?\" Carrie suddenly worried that he was leaving the ship before they had the chance to talk properly.\n\n\"You knew your grandmother's plan once she had us all here?\" he asked.\n\n\"I thought I did, but now I'm not so sure,\" she admitted.\n\n\"Walk with me,\" he said, taking her hand. They had walked a little way from the lounge out onto the aft deck. \"So, you're free to make your own choices now?\" he asked tentatively.\n\n\"Yes,\" she said. \"I don't have to worry about my friends being hurt or being guilted into doing anything because of family duty or Robyn's memory,\" she explained further. \"I expect the Windsor's will want a different type of family loyalty, but I feel like I can trust CC, in a way I couldn't trust Edith or Jordan.\"\n\n\"You trust what she says and the promises she makes?\" he tilted his head.\n\n\"I do. You are here and safe. Edith and Jordan no longer have a hold on me, and I no longer have to lie to you about anything, including the fact that I knew your parents never had the real Heart. I wish they have trusted me enough to tell me that, or that you had,\" she said sadly. \"That hurt when you all tried to treat me like I was dumb enough to fall for the replica.\"\n\n\"I didn't know,\" Sinclair turned her to face him to show the truth in his words and expression. \"I believed we had it, just as I had always been told. Truthfully, I don't even know that Dad is aware, or if he thinks the one with the flaws is the real one. It would have been stolen after the great war when everything was so chaotic. I'm not even sure where it was located back then. Possibly the only person who would know the truth is Lady Ophelia.\"\n\n\"You didn't know?\" Carrie repeated, as if it was difficult to believe.\n\n\"I didn't know,\" he echoed her words, hoping she believed the sincerity in his voice. \"Until you unveiled it, I didn't believe the message left by the Fool at the museum. I would like the chance to view it up close once the terms of the agreement have been met.\"\n\n\"I think we can organise that,\" she laughed. \"It will be yours to do with what you will.\"\n\n\"In that case, I believe it belongs to you after a certain promise I was reminded about recently,\" he chuckled.",
        "\"Your father would kill you, and that would seem a tad ungrateful, considering I just saved you from certain death at the hands of some powerful enemies,\" Carrie gave a light laugh.\n\n\"I believe that is why my father would be more than happy to use it to repay the debt we owe you,\" he grinned at her before turning serious. \"I want you to have the freedom of choice to live your life where and how you want, so I am releasing you from any promise you made to me. I assume your grandmother told you about the deal she offered me, and I want to know that, if you decide to marry me, it is because you choose it, not because of a promise you made out of fear or out of duty to this new family. I will be content in the position I have always held within the Brotherhood if you choose to walk away and live your life far away from Windsors, Bonnets and the rest of the families here. Not happy, perhaps, but content knowing you have done what you needed to do to heal.\"\n\n\"You still want to marry me?\" she asked in a quiet, unsure voice. \"Or are you releasing me so that you are not bound by the rings we wear anymore?\"\n\n\"Me? I want to find the Captain of the ship and make it legal right now,\" Sinclair told her. \"Just say the word and I will ransack this ship looking for him.\"\n\n\"Slow down, why the rush?\" she looked at him, confused, and he led her to a comfortable looking couch and sat down, pulling her close.\n\n\"The Windsor's have offered me a unique position within the Hats. Should we be married, I would become a Lord of Windsor through marriage and lead the Hats while Oliver took the Mansvelt seat at the table. Alternately, we can be married, and I can let a stranger come in to lead the Hats and retain my seat. Your grandmother would like me to be the Windsor liaison and lead the Hats into a new era of prosperity; it is why she invited Oliver here and is giving us the time to decide if we are still serious about being married.\" Sinclair paused to let her take that all in.\n\n\"I wasn't sure you'd forgive me,\" Carrie admitted. \"I believed she brought Oliver here to boost my confidence that things would work out. When I met him, he looked so much like you I wondered if she bought him in as an alternative option for me.\"\n\n\"I suppose he is an option, he's a much nicer man than I am. You could go back to a cosy life in the suburbs, have your two or three kids and live a perfect life,\" he admitted. \"I'm not sure I will ever settle down completely. I want my children well-travelled and able to speak several languages, as if they were born to it. I want them to attend the best schools and be well connected. I want them to pursue any dream they have from the youngest of ages. If a boring life in the suburbs is what you're looking for, then I am not the man for you. If, however, you are as excited as I am to explore the world together and experience all it has to offer, then marry me, right here, right now.\"\n\n\"Yes, please. I want that life, not just for me, but for my children,\" she looked up at him, her eyes shining. \"Sinclair, I need you to be very sure about this,\" she paused. \"Think about your time here today and the people you've spoken to, Marina, Charlotte and Helena have been the Windsors to present the terms to your colleagues in the small groups,\" she said, and noted his frown as if he didn't understand what she was saying.\n\n\"The Windsor's are the power behind the thrones, so to speak,\" Carrie did her best to explain. \"The Windsor's are all women. They bestow Lordships on those they favour, but even my father is not a true Windsor, when he was born he was adopted out to the Wordsworth's in Australia. No man can be a true Windsor in their eyes.\" She paused as he took this in. \"You would be a Windsor by marriage only.\" She stopped and let the information sink in.\n\n\"Do you think I care?\" he asked. \"I am a Mansvelt; I'm not willing to give up my name any more than they are willing to give me anything more than a token title while you hold the real power of the Windsors.\"\n\nHis understanding and seemingly uncaring attitude toward the Windsor family and their structure surprised her, and she said nothing else.\n\n\"Can I go and find the captain now?\" he asked.\n\n\"Would you mind if I talked to Jordan first?\" she asked.\n\n\"If you must,\" he agreed, but thinking of him as an orphan twice over had softened his heart against the man she thought of as her brother.\n\n\"I must,\" she said gravely. \"He's still my brother, and I want to be there for him. He's lost everything, Sin, including me. Seeing me marry you will be hard for him. It may be the last straw, and I couldn't bear it if he hurt himself.\" Sinclair was shocked at her words and held her tightly.\n\n\"Go find him then, I understand,\" he said softly. He kissed the top of her head, \"I will go and tell Oliver the good news. Then maybe we can make some arrangements for a proper ceremony for everyone to witness once we get home.\"\n\n\"I'd be just as happy to announce that we eloped,\" she groaned, thinking of having to deal with Georgia and her preparations again. Carrie pushed herself up from where she had been leaning against his body and stood.\n\n\"Where are you going?\" he reached up and grabbed her hand.\n\n\"You told me to go find Jordan,\" she shook her head, \"You were going to go find Oliver, remember?\"\n\n\"I changed my mind,\" he stood beside her and pulled her into his arms, kissing her deeply. \"I think I would like to see your cabin first. You made me suffer through too many long sleepless nights alone in an empty bed.\"\n\n\"They will come to find us, it's getting late,\" Carrie lowered her voice, even though she knew they couldn't hear her.\n\n\"Trust me, what I have in mind won't take long, I think I'm halfway there already,\" Sinclair groaned into her ear, pressing up against her body.\n\nCarrie's breath caught. She couldn't pretend that she wasn't just as eager to become physical with him again, so she took his hand and led him to the deck below the lounge where her suite was located. She had barely opened the door when he pushed her through it, slamming it closed behind them and pinning her to the wall.\n\n\"This is the second time you've run from me, and there won't be a third,\" he growled, sounding almost desperate behind the obvious heat and desire in his voice. \"Promise me.\"\n\n\"I promise,\" she whispered, as he kissed her again.\n\nThere was no finesse or foreplay in his movements. He ran his hand up her leg and ripped her panties off her and almost simultaneously pushed his pants over his hips. Trapping her between his body and the wall, he pulled her leg over his hip and entered her, forcing her open to him as he pushed deeply in a few short strokes.\n\nCarrie whimpered and clung to him, her arms wrapping around his shoulders as he took her hard, releasing all the pent up worry and anger that had driven him since her disappearance. She was his perfect mate, physically, mentally and emotionally he'd never met another woman like her, and was sure he never would again, and he buried himself in her as if claiming her as his own and proving to her that he was her perfect match.\n\nThe suppressed need she had for his touch, and the physical closeness of Sinclair crumbled away as he took her, and Carrie felt every nerve ending react to him. Her climax built rapidly as he dominated her, pinning her to the wall and lifting her so both legs dangled around his hips, restricting her movements. She wanted this, she wanted him, and she was beyond relieved that he had forgiven her for disappearing the way she had.\n\nTheir sense of mutual relief at being with each other again drove them, and Sinclair sunk his teeth into her shoulder while she scored his back with her nails during their twin climaxes. He stumbled with the power of it and pulled her with him to collapse onto the floor beside the door, having barely made it three steps into the room. Unwilling to release her yet, he held her tightly in his arms.\n\n\"You may hold all the power here in this place, Lady Windsor,\" he said breathlessly. \"When we leave this ship, however, there will be consequences for running away without a word.\"\n\n\"Consequences?\" she asked, looking up to try and read his face to see if he was serious or if the dreaded smirk was in place.\n\n\"I am thinking one week for a honeymoon should be sufficient for you to show me how much you regret the decision to run away without confiding in me,\" he said softly. \"I have a friend with a castle in a remote area of Germany; it has a working dungeon. Not like the one we visited on Valentine's Day, but complete with all the medieval ambience of a torture chamber,\" he couldn't keep his mirth from his voice as she looked up at him in horror. \"On the other hand, I could be just as satisfied with a week on my sailboat, if you play by the rules.\"\n\n\"The rules?\" Carrie asked nervously.\n\n\"I'm the winner in all of this,\" he said easily. \"My enemies are vanquished, and I got the girl. I think the Victor's rules should apply, at least for a week.\" He leant down and kissed her, \"You can even make it a wedding present to me,\" he grinned.\n\n\"This isn't Diego's, Sinclair; you can't just impose those rules whenever and where ever you want,\" Carrie laughed.\n\n\"True, but considering you put me through hell for the last few days, you could indulge me just for one week, surely,\" he laughed, \"Or we could arm wrestle for it,\" he offered. \"Prove why I should be able to impose Victor's rules.\"\n\n\"You're right, I did put you through hell, and I'm sorry about that,\" she said sincerely. \"Okay, I will wrestle you for it, but be warned; I have been training since being here and learned a few new tricks.\"\n\n\"Took your frustrations out on a sparring partner, did you?\" he chuckled.\n\n\"Maybe,\" she admitted. \"You better get back before this turns into something else again. You have a lot to do to cement your position in the association before we can tie the knot.\"\n\n\"Fine,\" he grumbled, getting to his feet. \"From the moment we get married, though, you don't leave my side for one complete week.\"\n\n\"It would be my pleasure,\" she giggled and went off to find some underwear to replace the ones he had destroyed.\n\n******\n\n\"Remember when we used to talk about running away,\" Carrie said as she stood on the bow with Jordan. \"We'd sail the world like the pirates we read about, stealing what we needed as we went.\"\n\n\"I would have done anything for you then. I'd do anything for you now,\" Jordan admitted reluctantly.\n\n\"We can't go back, Jordie, too much has happened, and I think of you as a brother now. Just a brother. I'm sorry. I know this whole crazy plan for us to marry wasn't your idea, but you went along with it, and I do love you, but like my brother,\" the words spilt from Carrie's mouth. \"I can forgive you for the attack on Sinclair, the threats and the manipulation, but I can't make myself feel something that's not there. It would have been a loveless marriage if you had forced me into marrying you.\"\n\n\"I loved you from the first moment I met you,\" Jordan said softly. \"I wanted to be the one. I wanted to be the one to protect you from Robyn, to make you smile, to unlock the hardened heart Robyn had purposely cultivated. I hated Sinclair for being the one to melt the ice princess even a little. My feelings made it easier to manipulate me, I guess, but those feelings were real, Carrie.\"\n\n\"I'm sorry, Jordie. I never saw a real future with you, even when we were younger and experimenting...\" her voice trailed off. \"Emotions were for the weak, Robyn said. I cared about you, I cried when she sent you away, but even now I don't think I understand the full range of emotions I felt, or even could feel at the time. Robyn messed with my head on so many levels,\" she shrugged and went to stand at the rail.\n\n\"Then how do you know you love Sin?\" Jordan went after her.\n\n\"He makes me feel accepted for all my messed-up emotions and childhood. He makes me feel desired and needed. He makes me feel safe, Jordan,\" she said meaningfully. \"He's never threatened me or anyone I loved, even when we were at crossroads. We fought far more than you might believe. Each time we fought, though, he never withdrew his love, never tried to manipulate or threaten me. He was always just there loving me for who I am and accepting me, no matter what was happening. He never just gave in to any of my demands; he challenged me with demands of his own.\"\n\n\"You fought?\" Jordan asked.\n\n\"All the time,\" she nodded. \"Sinclair fought to know me and understand me on a deeper level. I fought letting down all of the barriers I had put up in response to Robyn's training. He persevered, never expecting me to be meek and mild, even though he asked for my submission all the time. He made fun of the museum mouse persona I had,\" she laughed. \"He preferred the wildcat who fought him and knew her own mind.\"\n\n\"I knew both personas,\" Jordan said, starting to understand what she was saying. \"It didn't matter to him, though, did it?\"\n\n\"No, I think if I'd have turned into a raging hose beast he would have just accepted it as part of me and adjusted his needs to suit rather than making me into something I wasn't,\" she smiled, finally satisfied with her explanation of why she loved Sinclair.\n\n\"I've seen that hose beast, it isn't pretty,\" Jordan chuckled. \"I guess if he could weather that storm he's a better sailor than me.\"\n\n\"Jordan, you're the one person in the world who can understand what it was like growing up with Robyn. I care about you so much, and I want you to be happy, really I do, but I'm going to marry Sinclair, tonight, on board this ship. I would like you to be happy for me, but if you can't be, don't come to the ceremony,\" Carrie tried to sound confident, but knew she sounded needy as she asked him to be happy for her.\n\n\"All I ever wanted was to make you happy,\" he said woodenly. \"The truth is, I am possibly even more messed up than you by a childhood steeped in secrets, lies and manipulation. You were my rock, Carrie. My touchstone. The one real thing in my life that wanted nothing from me but trust and affection.\" He paused. \"I can't bear the thought that I let you down and a future without you in it somewhere, so, if I need to accept Sinclair as part of that life, then so be it,\" he said in a strained voice.\n\n\"Thank you, Jordan. I will make sure Sinclair understands how important our relationship is, to both of us,\" she said quietly and embraced him.\n\n\"I'm sorry to interrupt,\" Joseph said almost shyly. \"We're all headed back to the conference room for a short conversation before dinner.\"\n\n\"Alright,\" Jordan disengaged from Carrie, grateful for the fact that she didn't hate him, and determined not to disappoint her again.\n\n*****\n\nIt was Christopher Davis who presented the facts as he and the rest of his group saw them, and introduced the idea of Sinclair as a Lord of Windsor. When he fell silent, he opened the table for discussion as Sinclair sat ready for the barrage of accusations.\n\n\"It's got to be better to have someone you all know and trust as the Captain than a stranger,\" Jordan said, surprising everyone, not the least Sinclair. If he had suspected he had any support it was not from the young man he had treated so badly over the last few days.\n\n\"I know our vote doesn't count for much,\" Joseph agreed. \"But, for what it's worth, I agree with Bonnet.\"\n\n\"I'll be honest, if no one else will,\" Teach said. \"It doesn't matter who the captain is, or if he's fucking the Windsor Princess. You are all thinking it, even if you aren't saying it. The fact is they out rank us and out vote us. So what does it matter if we support it or not?\"\n\n\"Well, I'd trust Sinclair over a stranger,\" John interrupted the diatribe. \"If we have some say we may as well use it. It's simple, Teach, Sinclair or a stranger who doesn't know anything about us but words on paper.\"\n\n\"You're correct, but no one has to pledge allegiance. We didn't have to tell you we chose to, just as we offer you the right to vote without us,\" Christopher answered the murmurs going around the table. \"One barrel, one vote. Friend or foe, brothers, but we need to start acting as one entity, and if the majority don't want Sinclair as Captain and Oliver in the Mansvelt chair, so be it.\"\n\nThe men sat in silence as the barrel was passed around the table. Once it returned to Christopher, he slid it toward Rackham. \"You're neutral, you count 'em,\" he said to ensure no accusations were made against the four men who would lead this association through the next phase of its evolution into the twenty-first century.\n\n\"Just as well there are only eight votes, he can use his fingers to count,\" Vane grumbled.\n\n\"Six for, two against,\" Rackham announced, glaring at Vane. \"Majority rules, you're the boss, Mansvelt, congratulations. I doubt it's going to be all sunshine and roses though, so good luck too.\"\n\n\"That's done, so let's not keep the Windsor's waiting for dinner any longer,\" Freddy announced and got to his feet. He patted Sinclair on the shoulder as he led the way from the room.\n\n\"You ready for this?\" Christopher asked him once they were alone for the first time since arriving on the ship.\n\n\"Seriously, I have no idea. The Windsor's have always had their own agenda, but they did move against traffickers, and I believe they have put a lid on Vane and Teach's nefarious dealings. Roberts has been far too quiet, so he was probably the one to jump the fence. I think what happened to Edith has shaken him up,\" Sinclair answered in a considered way. \"It is what it is now, and it will be good to have Ollie around.\"\n\n\"Plus, you get the girl,\" Christopher chuckled.\n\n\"Yeah, there is that,\" Sinclair grinned widely and came to his feet, and the friends walked from the room.\n\nBy the time they got to the dining room the other men had discovered Oliver's presence and were greeting him warmly.\n\n\"This is why we are the newbies,\" Jordan murmured to Joseph. \"This guy may be new, but he grew up knowing all of these people. He will just be able to slot into his seat having already built relationships.\"\n\n\"Gerard's demands for instant equality seems a bit over the top now,\" Joseph murmured, even though he had felt the same way at the time. \"We better go introduce ourselves since we're the odd ones out here.\"\n\n\"Jordan,\" Oliver grabbed his hand as soon as he approached. \"I hear we're going to be a family once the lovebirds get hitched. Between my three sisters and Sin's four sisters it will be good to have a little more testosterone around at family gatherings.\" He smiled warmly welcoming Jordan into the family.\n\n\"I imagine that would have been interesting when you were younger,\" Jordan chuckled. \"Luckily I only had the one sister.\"\n\n\"I hear she can kick ass though,\" Oliver said conspiratorially. \"I imagine that would have been interesting for you growing up.\"\n\n\"That's one way to put it,\" Jordan rolled his eyes, enjoying being treated like a friend by the man who would take Sinclair's seat. \"Have you met Joseph? He's taking the vacant Nau chair,\" Jordan introduced the young man beside him.\n\n\"Ah, L'Ollonais was the better known name, wasn't it. It will be nice to have the French brotherhood back on board. I have a house in the south of France. I love it there, England just doesn't have the same decadent ambience.\"\n\n\"You live in France?\" Joseph asked, surprised by the fact.\n\n\"Not exactly, my family home is on Tortuga, but until I inherit outright, I am happy travelling between homes and continents.\"\n\n\"Lifestyles of the mega-rich, if not famous,\" Gerard said scathingly after joining their conversation.\n\n\"Well, you're one of us now, Gerry. Better get used to it,\" Oliver said, having taken no offence. He loved his life and knew how fortunate he was that his family was so well looked after. Not all of the families in the association looked after their extended family so well. Not that his father hadn't worked hard throughout his life, but it didn't hurt to have connections.",
        "\"Jordie, Gerry, Joey and Jolly, it's gonna be fun having you newbies around to make fun of,\" Freddy said, approaching the small group and watching Gerard and Joseph bristle at his comment.\n\n\"Don't hate us because we're young and beautiful. The truth is, old man, they had to bring in some younger and more handsome faces to make you old farts look good,\" Oliver retorted with a chuckle, making Jordan genuinely laugh for the first time in weeks at the indignant look on Freddy's face as he narrowed his eyes at Oliver.\n\n\"Don't get too cocky; we old farts have experience and skill to go along with our devilish good looks. That far outweighs youth and a pretty face. We all get older, but we don't all get smarter, just ask Vane,\" he chuckled and walked away.\n\n\"If we're going to have any friendship at all between us, don't call me Gerry,\" he warned the other three men, making Jordan laugh all the more, and the others join in its infectious nature.\n\n\"Sure thing, but so that you know, Gerry suits you. It makes you seem like that kid brother we never had. Don't you think, Jordie?\" Oliver asked.\n\n\"Carrie always called me Jordie, so it's more a term of familial affection for me, maybe you could look at it like that. There are worse things they could call you than Gerry,\" he chuckled again.\n\n\"I'd rather be Joey than newbie,\" Joseph agreed. \"But if you've always been Gerard rather than Gerry, I can respect that, and they all will eventually. I'd prefer just to be Joe, though, if it's all the same to you guys.\"\n\n\"No worries, we newbs have to stick together,\" Oliver said. \"Anything I can do to make that easier, all the better. Just a heads up, though, when we all get together like this you have to expect a fair bit of playing around, it's how they show they like you, just like normal brothers. Having said that, I am going to go and flirt with Carrie in front of Sinclair. Let her know the younger Mansvelt man is available,\" he chuckled and walked away from the small group.\n\n\"I think I'll go talk to Ben about the offer he made,\" Jordan looked to where Ben was chatting with William Roberts. He'd met Roberts before when he had been meeting with Grant about something, and had walked in on a strained conversation he couldn't quite remember. He wasn't sure if Roberts would remember the meeting, but there was only one way to find out.\n\n\"We don't even know if what Carrington said was true or if we are being fed bullshit here to make us sign the contracts,\" Roberts seemed to be campaigning to have everyone not accept the terms of the agreement. Jordan considered his words as he angled away from the pair to where Sinclair stood with John.\n\n\"Sorry to interrupt,\" he said in a mild tone as he stepped toward the pair. \"I have a question, and I'm not sure whether to find Carrie and her Grandmother or have you ask it for me,\" he said to Sinclair.\n\n\"What's the question?\" Sinclair tried to keep his voice even and remember how much Jordan had lost today, both personally and professionally.\n\n\"We were given a lot of information regarding Edith's arrest and that of those who worked with her, but I guess I'd like to be able to make a call, or at least look online to know it's true. I know the likelihood of Carrie lying is very slim, but I feel like everything people told me in the last six months has been twisted and manipulated. I'd just like to see a news report, if I could,\" Jordan said tentatively, not wanting to piss Sinclair off again now that he had stopped snarling at him.\n\n\"The boy has a point, Sin,\" John said easily. \"What proof do any of us have? We had to hand over all our devices when we arrived. We've had no contact with the outside world since arriving here. Not that we should insult our hosts by calling them liars, but it might be nice to know what happened for ourselves.\n\n\"I believe them, but I understand why you have to ask,\" he said quietly to Jordan. \"Oliver came onboard much later than us, maybe he heard something, and, if not, maybe he would be able to call his Dad and tell him the news, a seat being vacated to a cousin is rare enough to make him want to call Uncle Roger,\" Sinclair nodded.\n\n\"Sounds like a lot of effort when you could just ask if they could stream a news channel to the lounge monitor, then everyone can see for themselves. Something this big couldn't be kept out of the news, and I get the feeling they would want it made public, not cover it up,\" Jordan suggested.\n\n\"There's something to be said for the straightforward approach,\" Sinclair nodded. \"This is your family we're talking about, Jordan, and you have every right to want proof, so maybe the request would be better coming from you. I'll see if I can find the old woman for you.\"\n\n\"Straightforward works on a few levels. We were told to make ourselves at home, so let's do just that and turn on that big ass television over there and see what sort of news service we can find,\" Freddy, who had joined them, suggested with a grin.\n\nFifteen minutes later there was no further doubt in anyone's mind about the fate of Edith Ward and her associates. When CC arrived to announce dinner was ready she looked directly at William Roberts.\n\n\"What you're about to ask is something I can't grant, you will have to plead your case to the brotherhood,\" she indicated the men in the lounge. \"But do that after dinner, another hour or two won't hurt the situation.\"\n\nThe thirteen men were joined by the five ladies of Windsor for dinner, and Sinclair's face lit up when Carrie entered wearing a simple white sheath dress and flowers woven through a thick, complicated braid in her hair.\n\n\"You look beautiful,\" he said as she took the seat beside him. \"We don't have to do this tonight if you'd rather wait, we talked it out with the rest of the men, and the marriage isn't as urgent as we thought.\"\n\n\"Getting cold feet?\" she asked in a teasing way, even though her heart dropped at the thought that he might have felt forced into proposing that they marry immediately.\n\n\"Not in the slightest,\" he shook his head. \"I am just making sure you have all of the choices you want and need to go along with that freedom you won today.\"\n\n\"Then I choose tonight, in case you do get cold feet about giving up all your other girlfriends when the public finds out,\" she laughed.\n\n\"So, Lady Windsor,\" Oliver gained Carrie's attention from where he sat on the other side of her. \"Any idea when we will get out phones back and access to the outside world? I can't wait to call Uncle Frazer and tell him Sin gave up the family chair to me,\" he smirked at his cousin.\n\n\"If you care about me and, more importantly, value your own life, I probably wouldn't tell him like that,\" Sinclair groaned, much to Oliver's delight.\n\n\"As far as I know, as soon as everyone has either signed the terms or renounced their heritage, you are all free to do as you wish, including calling your loved ones,\" she said, knowing not all the men had signed their terms of the contract.\n\n\"How many are you waiting for to sign it?\" Sinclair asked quietly, worry lines creasing his forehead. While he could live without Vane or Teach in the association, he knew that their sense of self-preservation would keep them tied to the brotherhood they shared. Sinclair gazed around the table and considered the other men. Roberts obviously had a problem, and Gerard was still standoffish with the other men. If he had to hazard a guess, those two would be the ones holding out because this had not worked out as they had planned. He hated the thought of having resentments and dissatisfaction before the contracts were signed to bind them all together.\n\n\"Including you and Oliver?\" Carrie tilted her head, and a small smirk touched her lips as Sinclair's eyes widened. \"You two should probably see CC about that after dinner,\" she grinned as the first course arrived.\n\nBetween the first and main course, CC had the contract brought in for Oliver to sign and had asked that Sinclair come and see her after dinner to discuss what would be required of him in relation to the new position created for the group.\n\n\"Shit!\" Jordan exclaimed, dropping his fork to loudly clatter onto his plate as the main meal came to a conclusion. He stared wide-eyed at William Roberts, but quickly regained his composure. \"Sorry, all, I just remembered...\"\n\n\"That you left the oven on at home?\" Freddy teased.\n\n\"Yeah, something like that,\" he laughed self-depreciatingly.\n\n\"It's alright, Jordan,\" William said reluctantly, \"you don't have to lie for me. I was about to tell them all anyway. It would seem, gentlemen,\" he turned to the rest of the table, \"that I am in need of your assistance.\"\n\n\"Perhaps you can tell us once the table has been cleared and dessert brought in,\" Carrie cut through the tension. \"The staff are anxious enough having such a large party on board,\" she said softly, indicating the people floating around the table.\n\n\"I believe that would be preferable,\" CC gave Roberts a look that said she would not be happy if he persisted with the conversation before dessert was served.\n\n\"I need to do something. Would you excuse me for a few minutes please, gentlemen?\" Carrie asked.\n\n\"Everything okay?\" Sinclair asked.\n\n\"Everything is perfect. I just have a question to ask your BFF, before we get married,\" she laughed and winked at him, moving along the table until she stood beside Christopher Davis. \"I hate to interrupt the fun, but would you mind terribly helping me with a small wedding surprise for Sinclair?\" she asked sweetly.\n\n\"I'm at your service,\" he replied with a wide grin at Sinclair. Christopher stood and walked from the room with Carrie, feeling Sinclair's eyes follow them.\n\n\"Chris,\" she said as they mounted another set of stairs and walked to the rear of the half deck looking down over the lounge they had been in earlier. \"I need to show you something before William asks the group for help.\" Carrie picked up a tablet she had left there earlier and brought up the screen she needed, offering him earbuds before pressing play and handing it to him.\n\n\"Okay,\" he said, frowning at her, but taking the device and earphones, moving to a nearby seat. Carrie had asked to be the one to soften the blow for Christopher Davis, who they were sure was unaware of his wife's involvement with the Leather Barrow. She had been arrested along with William's son, with whom she had been having a long-standing affair. Carrie said nothing as he watched it several times before pulling the buds out of his ears and looking at her.\n\n\"The Windsor's used their influence to have that footage pulled from the media. No one will know unless you choose to tell them yourself or William mentions it,\" she paused so he would understand why she had chosen now to show him the footage.\n\n\"Roberts will be asking for help to cover up his son's involvement and free him, I assume,\" Chris nodded sadly.\n\n\"Did you know?\" Carrie asked, unsure of his quiet sadness and what it meant.\n\n\"If I'd known I wouldn't have let her be as involved in Hats business as she was. I guess that explains why we never caught the ringleaders or bigger shipments as our intelligence had told us were about to be moved.\" He sounded devastated. \"I'll help with the cover up and suppression of names, but I won't be voting to free either of them, any more than you would vote to free Edith,\" he said through clenched teeth.\n\n\"I'm sorry,\" Carrie whispered. \"I didn't want you to find out from William. He may not even mention it or know himself, but Sinclair loves you and needs you to stand by him during this whole restructuring event, and I wasn't sure how'd you'd react if you were blindsided by what's coming. I know that's probably selfish of me, but I love Sinclair, and because of that I care about you too. You're the closest thing he has to a brother, and I'm sorry you are hurting.\" She reached out and took his hand. \"I'm so sorry, Chris, please believe that.\"\n\n\"She was a pure bitch to you, Carrie. Why would you be sorry?\" Christopher shook his head.\n\n\"Because I care about you, and the next few days are going to be a nightmare for you,\" she said. \"Maybe you could come and stay with us for a little while, just until the initial hype of it all blows over,\" she suggested.\n\n\"I'm not normally a jealous man,\" Sinclair said from behind them. \"Possibly finding my best friend holding my fianc\u00e9's hand as she suggests he move in with her might even push me to react a little dangerously.\"\n\n\"I got divorced today, Sinclair. You can't blame the woman for hedging her bets now that I am a free man,\" Chris said lightly, masking his true feelings.\n\n\"Stella was arrested in the raids?\" Sinclair guessed, not even trying to be delicate about it. Christopher nodded and handed over the tablet with the screen still showing.\n\n\"I'll give you two a few minutes,\" Carrie started to get up.\n\n\"Stay, please,\" Christopher gripped her hand tighter. \"I appreciate you telling me like this and giving me time to wrap my head around it, but I've done nothing wrong and have no reason to hide from this. Women have affairs all the time, and, let's face it, Stella was a bitch.\"\n\n\"You know they probably told her to try and break Sinclair and me up when I saw you in Panama,\" Carrie said. \"They had other plans for me and my Windsor heritage. It would make sense that was why she was such a bitch to me.\"\n\n\"I sat across the table from that little fucker and never recognised him. Fuck!\" Sinclair cursed and shook his head. \"And I would bet heavily on the fact that Jordan just recognised his pretend boyfriend's father down in the dining room.\"\n\n\"When Roberts asks, I will agree to a cover up, but I won't vote to free his son, even if I'm outnumbered,\" Christopher repeated his earlier words.\n\n\"Regardless, they sent me to find you so dessert could be served. So, are you alright? Need a few more minutes?\" Sinclair asked.\n\n\"No, I'm good. I've done nothing wrong, unlike Roberts, who knew what his son was into,\" he replied.\n\n*****\n\n\"So, you will forgive the orphan over there, but can't forgive Grant?\" William raged at Ben who had spoken in defence of Jordan.\n\n\"I think there is a great deal of difference between Jordan's role in all of this and Grant, who was involved at a senior level of their organisation. Both Carrie and Jordan were unwitting dupes in the machinations of a bigger entity,\" Ben shot back. \"Don't for one moment think you can intimidate me, Will. You probably had a greater role in all of this as well, so you should probably be grateful that Sin isn't asking you to fall on your sword right now, and if I were Chris I wouldn't even be offering a lawyer, let alone a cover up. So, take what you've been given and shut up, or find out first hand just what a total bastard I can be when pushed. As far as I'm concerned, your son betrayed us all, Will, and nearly destroyed us and what we stand for. He deserves nothing but our condemnation.\"\n\nThe whole table fell silent, looking at the normally placid Ben Morgan as if he had grown two heads. He seemed to recover himself and took his seat again, looking around at the men he called brothers.\n\n\"What? You know I'm right,\" Ben said to the gathering.\n\n\"He's right, Will,\" it was Teach who finally spoke. \"We've all done some pretty bad stuff, me more than anyone, but we never endangered each other or dishonoured our very name. Grant crossed the line. He didn't care about any of it. Edith lied and manipulated to keep Carrington and Jordan in line and doing what she wanted. Grant grabbed the opportunity to destroy our association and rebuild it with Edith as the guiding hand. There is no honour in that, no matter how you twist it.\"\n\n\"Say we freed him,\" John said carefully holding up his hands in a gesture to stop anyone cutting him off. \"With the proviso that your younger son took the chair instead of Grant. What's to stop him from just picking up the pieces of what's left of his association and continuing to try and destroy us, especially knowing he would never have a place among us? Will you ground him and take away his private jet?\"\n\n\"He's still my son,\" William said. \"I can't just stand by and let him rot in jail.\"\n\n\"I never worried about what I did because I always knew my parents would bail me out,\" Freddy admitted. \"The threat of jail time never scared me because I knew my Dad would fix it, so I didn't serve a day. That backfired on me though, and I learnt the lesson early enough for it to matter. I agree with John. If we bail him out and pull all the strings we have to get him out, what's to stop him turning on us again? For all we know he ordered one or both of the hits on Sinclair when it looked like he would mess up their plans for Carrington and Jordan.\"\n\n\"Did he?\" William looked at Jordan for confirmation.\n\n\"He was aware of them, I don't know if he organised them,\" Jordan said somewhat timidly, not daring to look at Sinclair.\n\n\"So, all those in favour of helping to cover up the story of his arrest and the upcoming trial?\" Sinclair asked, not wanting to remember the injuries sustained when he had been run over, or the image of Carrie falling from the cliff face.\n\n\"Aye,\" went around the table unanimously. Concern for keeping a lid on their own identity paramount in their minds.\n\n\"In favour of assisting in freeing him?\" Sinclair asked.\n\nThe nay vote carried, and William slumped in abject misery.\n\n\"Those in favour of assisting in enabling the pronouncement of a lighter sentence at a possible white-collar penitentiary?\" he asked for the third time.\n\nWilliam looked up with genuine surprise and hope in his eyes. They'd bandied around the idea of funding a lawyer, but what Sinclair proposed now had not specifically been tabled for discussion.\n\n\"Aye, as long as he does some time, I don't care where,\" Freddy shrugged.\n\n\"Aye, as long as we agree he can't inherit the Roberts chair,\" Christopher stipulated. \"I mean it, Will, you start training Bart to take your place among us. Grant won't be welcome, not now, not ever. Renege on this, and there will be consequences.\"\n\nWilliam nodded slowly as the vote went around the table, with each making similarly barbed comments but agreeing to manipulate the judicial system on his behalf.\n\n\"That's it then,\" Sinclair said. \"You accept those terms, Will?\"\n\n\"I do, and would be happy for Stella to have the same, if Chris wants,\" Will said, looking at the man his son had wronged so badly.\n\n\"That won't be necessary, I owe her nothing, and that's what she will get from me,\" Chris spat, his anger still rolling just below the surface.\n\n\"Great, we're done then. Those of you who have signed the terms offered by the Windsor's can go and recover your personal items and relax for the evening. Call your loved ones, just in case there are any more surprises out there. We'll be docking tomorrow morning near Port Royal. Those who haven't yet signed; please hang around and make a choice before retiring for the night,\" Sinclair instructed, using a commanding tone he knew would grate on some of his colleagues, but he also knew he needed to let them know right from the start that he intended to lead with authority.\n\n\"I'll be more than happy to check in with the boys,\" Vane said, getting to his feet immediately, and was closely followed by Teach. Sinclair knew both men had reason to be worried, particularly in light of William's disclosure. William opened the file in front of him and signed it, sliding it up the table to where Sinclair and the three now senior members of the association sat.\n\n\"Thank you,\" he said contritely. \"Grant's a shit, but he's my shit.\" He turned to Jordan. \"Thank you, you didn't have to say anything, but you did, so I owe you one, and I don't take debts like that lightly.\"\n\n\"I only told the truth. I remembered that argument you had when you tried to talk him out of what he was doing, it was how I recognised you at dinner,\" Jordan acknowledged. \"Truthfully, it was the only time I ever saw you,\" he said thoughtfully.",
        "\"Regardless, a smart man might have kept his mouth shut, given the atmosphere in here, so thanks again. If you want mentoring in my business, come whenever you want,\" William invited.\n\n\"Thank you,\" Jordan said. \"For what it's worth, I cared for Grant. He was more than a friend, but I get the feeling I didn't know him very well.\"\n\n\"Me either,\" William admitted sadly and patted his shoulder before leaving the room. John Brassilano and Miles Rackham had left the room while William had been speaking. They both knew it was in their best interests to take the deal being offered.\n\n\"Mine!\" Ollie chuckled. \"You know I have to call Uncle Frazer first, or Dad will as soon as he finds out.\"\n\n\"Tell him this,\" Sinclair said, writing quickly on a notepad and handing the piece of paper to Oliver, who roared with laughter. \"And tell him I'll call him tomorrow when the kinks are ironed out of the agreement with the Windsor's.\"\n\n\"You mean, getting married? I probably shouldn't tell him about that, right? Aunt Georgia might reach down the phone line and throttle me,\" he continued to laugh and left the room. The four senior members looked across the table at the three newbies listening to the laughter fade as Oliver walked away.\n\n\"So, who wants to go first?\" Ben asked in a mild tone.\n\n\"I signed it,\" Joeseph said quickly. \"I'm happy to be treated as a no-brain newb and soak up the power and influence enjoyed by the rest of you in the mentoring program. I'd rather not be a no-friend-Nigel, however, if these guys leave. So I'm sticking around to hear the answers to their questions and fight with them like a pesky little brother because I want them to do this newb thing with me.\"\n\n\"If he calls me Gerry even once I'm going to hit him,\" Gerard grumbled, making the group stifle a laugh. \"How long's the probation period?\" he asked abruptly.\n\n\"Truthfully, it's all new rules. The fact that the three of you didn't grow up with the rest of us, learning as you went about the responsibility of holding the power to influence others on a grand scale. I expect that once you start spending time with the rest of us, and start building your profiles in your chosen areas, that you will progress pretty rapidly,\" Sinclair mused.\n\n\"So we choose what we want to do?\" Gerard asked curiously. \"There isn't some greater organisation who dictates that?\"\n\n\"We, in conjunction with the Windsor's, are that greater organisation. I guess they pull the strings, but you choose your speciality. I'm in transport, I can get anything and anyone from point A to point B with a fanfare or undetected,\" Ben said. \"Planes are my passion, but within my extended family, we have a shipping line, rail interests, trucks, buses and the rest. My son is into helicopters.\"\n\n\"Stealth technology?\" Gerard asked, his interest obvious.\n\n\"It's all part of the machine,\" Ben nodded. \"Freddy is the tech guru, though,\" he acknowledged. \"Search, rescue and rehabilitation,\" he pointed to Sinclair and Christopher. \"They are the James Bonds of the brotherhood.\"\n\n\"He's overstating it a bit, let's put it in terms of being retrieval experts,\" Christopher corrected his friend. \"Do you have a particular interest? We have lawyers, doctors and pharmaceuticals, historians who think they were born to be Indiana Jones, Construction, Automotive, we all have businesses. The Myngs were publishers, I believe.\"\n\n\"Still are,\" Gerard admitted. \"I wouldn't mind having the power to influence news organisations, but, going by tonight's events, I imagine much of that is taken care of.\"\n\n\"The Windsor's did that, so there's room for another player on that field,\" Sinclair agreed. \"It wouldn't take you long to make an impression, I expect, with our backing. You just need to learn how far your influence could go and how to use it wisely.\"\n\n\"Come on, Gerry, just sign it already,\" Joseph said in a mock whine and held up his hands. \"Save your punch for Jordan, you know we're both gonna have to hit him.\"\n\n\"Alright,\" he grumbled and took up a pen, signing the contract and pushing it to toward Sinclair. Then he turned and deliberately flicked Joseph's ear, making him grimace but laugh.\n\n\"Okay, Jordan, you have the floor,\" Sinclair said evenly.\n\n\"Here's the difference between growing up in the bosom of these families and not,\" Jordan said to Joseph. \"It's no secret to these men that I helped Carrie steal their family artefacts over the last decade. I aided Edith and Robyn in manipulating Carrie, and, as recently as last week, tried to blackmail her into betraying the men you both call brothers now in order to further the plot against the association. I tried to force Carrie into marriage to reap the rewards of her heritage, and because I have been in love with her since we were ten. Did I miss anything?\" He asked Sinclair.\n\n\"I think that covers it,\" he said in a deadpan voice.\n\n\"Yet I am here and not in jail, I guess Carrie had something to do with that,\" he mused. \"Knowing all that you know, and now that you are the undisputed leader of this association, why would you want me here?\"\n\nSinclair turned to his friends and detailed the first night he had ever met Carrie. From the purposeful disappearance she had let him see through the hidden door, the sound on the stairs and finding her exiting the bathroom into the hallway opposite the very room the pistol was stolen from. He detailed the way the dress hugged her body so that nothing, not even the valet parking ticket, could be hidden beneath it, chuckling as he admitted his surprise when she pulled it from her hair as she left the party. \n\n\"You were all there; you all saw what I just described. Now tell me, how did Carrington get the pistol out of that mansion?\" Sinclair asked the group. \"There was no prior set up or anything in place before the event, by the way; it was stolen that night.\" \n\n\"Jordan was on the balcony?\" Ben said easily. \"That's what the evidence says happened.\"\n\n\"Jordan was at least ten kilometres away from the Rackham estate that night,\" Sinclair shook his head. He looked at the confused faces of his colleagues. \"It took me months to work it out, so you may as well tell them, Jordan. The whole story, including why she let me see her.\"\n\n\"Wait, you flew a quadcopter how far?\" Freddy was astounded and stopped Jordan in the telling of the story.\n\n\"I tweaked it. It's what I do, I'm a mechanical engineer,\" he shrugged as if it was nothing.\n\n\"He even managed to get a tracker on my car for a few days,\" Sinclair chuckled. \"I'm hardly going to hold your taste in women against you. As for how you went about it... Carrie has encouraged me to believe you were manipulated into that by the only family either of you had left.\"\n\n\"Did you know about the Leather Barrow stuff? The arms, drugs or human trafficking? Take part in it in any way?\" Freddy asked almost too eagerly, but not for the reasons Jordan believed he asked.\n\n\"No, I had no idea about Edith's dealings. I just assumed it was family monies that she lived off. Carrie became considerably wealthy after Robyn's death, not that I am poor, but my wealth isn't in the same league.\" Jordan admitted.\n\n\"So, aside of the thefts, you weren't involved in any illegal activity?\" Christopher asked, to clarify his role with Edith and Grant.\n\n\"They kept me out of all that. The plan was that I would marry Carrie and use her links to the Windsor's to take control of the association with Grant's help. I believe Edith had visions of a large dynasty for the Bonnet family starting with the remnants of the last one\" he explained.\n\n\"So, aside from the fact that you're in love with the woman he's about to marry, what's stopping you from signing this?\" Joseph asked.\n\n\"Him,\" Jordan indicated Sinclair. \"He doesn't trust me, and I don't blame him, but without trust, I can hardly be part of this brotherhood.\"\n\n\"True enough,\" Sinclair admitted. \"I trust Carrie, however, and she trusts you, despite everything. If Freddy is prepared to take you on board as a mentor, and you want a second chance, then this is the best place for you. The rest you and I can work out as we go along.\"\n\n\"Sign it,\" Freddy encouraged, \"Because you and I are going to do great things together!\"\n\n\"You may as well sign, I think Carrie has a pretty dress picked out for you to play bridesmaid for her,\" Christopher smirked, testing Jordan's reaction.\n\n\"It's not the green one, is it?\" Jordan assumed a distasteful look, making Christopher laugh loudly.\n\n\"I want you here, Jordan, if only to keep an eye on you at the moment,\" Sinclair pushed a pen toward him. \"I have to meet with Lady Windsor, I'll see what I can find out about their publishing arm for you, Gerry,\" Sinclair chuckled and left the room, not having seen Jordan sign the contract, leaving it in the hands of Christopher and Freddy.\n\n*****\n\nCarrie giggled as the people surrounding them jeered Sinclair as he went to kiss her after the short ceremony conducted by the captain. In response to the jeers, he wrapped his arms around her and dipped her backwards, kissing her hard and deep, taking her breath away as the jeers turned to cheers.\n\n\"No reception, gentlemen,\" he announced as they stood facing the small gathering. \"I have a wedding night to ensure my wife doesn't forget,\" he smirked and picked her up, carrying her from the deck to the motor launch where a member of the crew was waiting to take them ashore.\n\n\"Wait! What about my clothes?\" she asked in a panic as she realised they were leaving the safety of the Windsor's and the ship immediately.\n\n\"It's our honeymoon,\" he grinned. \"You won't be needing any clothes.\" He laughed then, a relaxed, full, loud laugh and embraced her. \"Relax and enjoy this time alone, Carrie,\" he murmured. \"We have a lifetime ahead of dealing with everyone else's demands, just be in the moment with me. No family pressure, no sense of duty to a greater power, just you and me and the Caribbean Sea.\"\n\nIn less than ten minutes the motor launch docked beside a small jetty, and she peered into the darkness trying to work out where they were.\n\n\"The caretaker has readied everything you need and retired to the other side of the island,\" the crewman instructed and handed over a package. \"This is from Lady Windsor; she said to inform you that your ship will dock on the other side of the island in the next day or two. Instructions in case of emergencies are in the package.\" With that, he cast off, leaving them standing on the jetty.\n\n\"Where are we?\" Carrie asked quietly into the silent darkness that now surrounded them.\n\n\"Officially off the grid,\" he said, and placed an arm around her waist as they walked toward the island. With each step they took, a small footlight lit up guiding their way. \"This place is powered by solar panels and propane gas, but there's a backup generator if needed in the rainy season.\" The jetty swept out at the end into a beautifully landscaped tropical oasis that took Carrie's breath away. She'd been in a lot of beautiful places over the last year she had spent with Sinclair, but this place was a visual delight. From the tropical wooden structures to the gauzy length of cloth that acted as flimsy walls that billowed in the breeze and swung back to be unobtrusive to the view from any on the intersecting rooms.\n\n\"So, about the proposed wedding gift?\" he smirked, taking hold of both her hands and playing with the wedding ring she now wore as he pulled her hands up to his mouth and ran his lips across her knuckles.\n\n\"I'm yours,\" she said softly. \"Utterly, completely yours,\" she smiled as a matching smile transformed his face. \"For tonight, at least, then we can reopen negotiations,\" her laugh turned into a squeal as he picked her up and began carrying her through the open rooms.\n\n\"I guess I'll take what I can get for now then. Come, woman, time to see what being married to me really entails,\" he said in a voice made deeper by desire. Carrie shivered with both anticipation and dread, unable to hide the smile of pure pleasure that spread across her face that this man, this genuinely good man, that she loved and trusted like no one else, loved her and was her husband, now and forever."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "choices",
        "secrets and lies",
        "ships",
        "island",
        "family",
        "brotherhood"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-fool-ch-12"
}