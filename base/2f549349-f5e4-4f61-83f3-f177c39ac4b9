{
    "title": "Freja and Jeanie Ch. 04",
    "pages": [
        "Aboard a 747 flying over the American Midwest...\n\n\"I was thinkin', Fre,\" Jeanie mused as she looked out her window and down at the ground so very far below. The Midwestern states were not as flat as the Prairies, but even from up here she could tell they didn't have a lot goin' on.\n\nHer wife turned to look at her. \"What were you thinking, yndling?\"\n\n\"Well,\" the brunette began, speaking in a quiet voice, as if she didn't want anyone around her to hear what they were saying. \"Seven hours is a long time to go without getting laid, and I was wondering if you'd ever joined the Mile-High Club.\"\n\n\"I am not familiar with this term,\" the Danish girl admitted.\n\n\"It means we find a secluded area somewhere on this plane and fuck at thirty thousand feet,\" Jeanie explained. \"We've still got five hours until we reach L.A., and I'm already wetter than an otter's pocket...\"\n\nShe glanced around furtively to make sure no one could see her and then lifted the hem of her short skirt, exposing her pussy to her wife. Predictably, she wasn't wearing panties, they were already in her purse. \"See?\"\n\n\"I do indeed see,\" Freja replied, licking her lips. \"And it looks good enough to eat, my love. But alasfully, I have joined this 'Mile-High Club' many times over before tonight.\"\n\n\"Oh,\" Jeanie said, looking down at the floor of the plane and pondering the dilemma. \"Well... have you ever joined it going to the American West?\"\n\n\"No.\"\n\n\"Then it's all new again, isn't it?\" Jeanie pointed out, beaming and feeling like a smartie. \"When we get a chance, let's lock ourselves in the bathroom and fuck until we're boneless and wouldn't die if the plane crashed. Sound good?\"\n\nFreja smiled warmly. \"I begin this trip by fucking you high in the clouds. And by the end of this trip, we will be very, very wealthy. It sounds perfectsome.\"\n\n\"I love you, Fre,\" Jeanie murmured.\n\n\"I love you too, yndling,\" Freja whispered before leaning in and kissing her wife lovingly.\n\n***\n\nDisclaimer: All people depicted having sex are at least 18 years of age. This story is part of my larger story cycle, commonly known as \"The Alexaverse.\" As always, many thanks and gratuitous panty-shots courtesy of Freja and Jeanie are directed at my long-suffering editor and beta-reader, who makes sure my grammar is on point. Constructive reviews and critiques are welcome. Pointless flames and anonymous trolls will be snickered at and deleted. Enjoy!\n\nFreja &amp; Jeanie\n\nChapter 4- 'Despite Our Worst Efforts...'\n\n\"Ooh, right there, Fre! Yeah... yeah...\" Jeanie gasped as quietly as she could, reaching down and pulling her wife's face into her pussy, grinding it in circles while she leaned back against the sink. They were squashed together in the tiny economy-class bathroom, determined to have some fun during this flight down to L.A.. Not surprisingly, that meant giving each other orgasms.\n\nThe ever-flexible Freja had squatted down and pushed her knees out to either side so that she could get below Jeanie and now was lapping at her womanhood eagerly, loving how naughty they were being. Her tongue snaked deep inside Jeanie's pussy while her thumbs pulled the thick netherlips open, giving Jeanie a delicious little sting. She felt her own cunt getting wetter with each passing moment, looking forward to Jeanie making her cum.\n\n\"Oh, God, that tongue,\" Jeanie murmured as her whole body tingled in pleasure, with the best was yet to come! She shuffled her feet even farther apart, and Freja managed to wiggle a finger under and up into her tight ass. Jeanie but her knuckle to keep from squealing. \"Gnnn, Fre, you're so evil...\"\n\n\"Mmmm, but you are liking it,\" the Danish girl purred, flickering her tongue against her wife's clit and making her shudder. \"You love how evil I can be between your legs.\"\n\n\"I do I do I do...\" the brunette gasp-whispered, her eyes closed. \"Ohhhh, I love how fucking evil you are down there. You make evil feel so good!\"\n\nHer breath caught in her throat and she clutched Freja's head with both hands, doubling over and shaking as she willed herself not to scream while the orgasm pulsed through her. Freja kept licking, lapping up her wife's cum hungrily. Making Jeanie cum thrilled her as much as her own orgasms. Giving her wife pleasure every moment of the day was what she lived for.\n\nJeanie grappled onto her wife's shirt and pulled her up, kissing her fiercely. Their tongues plunged and wrestled between their mouths as they both lifted their shirts and squashed their bra-less tits together. Jeanie whimpered through the kiss as the last vestiges of her climax fluttered through her body. Her heart was pounding in her chest, and she prayed no one had heard them.\n\n\"Y'ready for your turn, Mrs. Kjaer-LeTourneau?\" Jeanie asked in a husky whisper, her brown eyes smouldering with desire. Freja nodded and moved back, allowing Jeanie to shuffle over, lift her skirt, and sit down on the toilet. She slouched down, lowering herself and then waited while Freja got in position. The honey-blonde Dane placed her legs outside Jeanie's and then wiggled backward so that her behind was in her wife's face. While Jeanie's lifted Freja's skirt, Freja leaned forward and down until her ass was in the air and she braced her hands against the bathroom stall wall.\n\nJeanie wasted no time in pulling Freja's cheeks apart and burying her face in her slick pussy. Freja bit her lip and groaned, squirming in need. Her fingers flexed on the wall as Jeanie's tongue slid into her and began exploring.\n\n\"Yndling,\" she sighed, pleasure sparkling through her as Jeanie touched all the right places. \"I love you...\"\n\n\"Muff yuh tuff, Fruh,\" Jeanie replied, her tongue moving up and down slowly in her wife's gooey slit. Freja was so tight because of her athletic build and all the exercising she did. She squeezed her walls around Jeanie's tongue, which caressed her so sensually. She gasped as one of Jeanie's fingers found her puckered knot and slowly pushed through, wiggling down into her.\n\n\"Yes, my love,\" Freja murmured, pushing back against the intruding finger. \"Fuck my ass, Jeanette. It is yours. I am yours.\"\n\nJeanie relentlessly tongued and fingered her wife until Freja squirmed and shivered, letting out a long sigh as the orgasm flooded over her. She turned herself around and nestled down onto her wife, pushing one leg under Jeanie's and slinging the other over. They squirmed close until their pussies were pressed, and they kissed each other lovingly, tasting their mingled cum on their lips.\n\nTheir clits were still throbbing against each other when they began to pee, bathing each other's shaved womanhood, sharing a taboo and so very intimate gesture. Once they were finished, they sighed and pressed their foreheads together.\n\n\"I'm still nervous, Fre,\" Jeanie said in a quiet voice, her eyes closed.\n\n\"It is natural, yndling, to be nervous. This is a big move for us,\" Freja replied, smiling and caressing her wife's cheek gently. \"But so very soon, we will be wealthy, and glad we took this chance. Our product, it is amazing, it will sell. How can it not?\"\n\n\"I know, but I still get the yips,\" the brunette confessed. She nestled a little closer, feeling her pussylips mingle with Freja's again. \"It's a big step. I've never done anything this crazy in my life.\"\n\nFreja raised an eyebrow at the statement.\n\n\"Okay, not true,\" Jeanie confessed. \"But I've never done anything this crazy on such a large scale, y'know what I mean? This is doing business with major corporations, like the music industry. And I can barely spell MTV. And... well, this is our shot, Fre, because we've sunk all our remaining money into this little caper.\"\n\n\"And that is why is will not fail, my love,\" the Danish girl said softly, smiling and loving the feel of her wife against her. \"Because we have faith that we cannot fail when we are together. Have we not proven this?\"\n\n\"Yeah, we have,\" Jeanie agreed, nodding pensively. \"From the moment we fell in love fucking in that equipment room in the gym, we've overcome everything, haven't we?\"\n\nThey kissed again for some moments before cleaning themselves up and then wiggling around to get dressed. It was a tight fit, of course, but they didn't mind rubbing on one another, after all. Somehow they managed to not get turned on, and they had to get back to their seats.\n\nFreja kissed Jeanie. \"I shall go first, you follow me in two minutes, ja?\"\n\nJeanie nodded, smiling. \"See you in a few, Fre.\"\n\nA quick kiss and then the Danish girl was gone, closing the door behind her. Jeanie stood still, thinking about what her wife meant to her and taking heart in Freja's optimism. The confidence she gave Jeanie, the willingness to stand up and take things head-on meant everything to her. They would succeed at this, and they'd go home richer than they could ever-\n\nSuddenly the door swung open and a woman barged in hastily, bumping into Jeanie. She seemed momentarily shocked at the sight of the brunette standing idly in the tiny stall. \"Oh, shit! Sorry! I-\"\n\nThe woman looked alarmed and then locked the door behind herself before trying to barge past Jeanie toward the toilet and undoing her pants. \"I dunno what you're doing and I'm sorry, but this can't wait!\"\n\n\"Ack! Sorry, I-\" Jeanie yelped as the heavier-set woman pushed past. \"Lemme get outta here and-\"\n\n\"No!\" the woman protested as she dropped her pants and plunked down on the seat. \"You can't go out and leave the door unlocked!\"\n\nJeanie was still panicking. \"Well I don't wanna stay in here while you-\"\n\nShe was interrupted by a loud, disgusting sound, her eyes going wide and she stopped talking, subdued by the woman's intestinal shout. She was pinned by her new stall companion's sturdy legs, and said woman was so preoccupied by her near-disaster that she wasn't paying attention to Jeanie. Jeanie tried to step over them, even if she couldn't leave the tiny stall.\n\nAnd then the smell hit her. Her eyes crossed and she could feel herself turning green. Everything she'd eaten for the past year roared angrily and surged up her esophagus.\n\n\"Are you okay?\" the woman asked as she heard the young brunette burp and then wobble, her eyes rolling up in her head. \"You look like you're gonna- NO!!!\"\n\nBeyond reason and driven by horror and desperation, Jeanie flopped to her knees in front of the woman and wrenched her legs wide. Before the woman could protest, Jeanie thrust her head between the woman's legs, looking down into the metal and polymer bowl just before her body tried to fling itself inside-out.\n\n\"BLAHHHHHHHHHHHHHHH!!!!\"\n\n\"AIEEEEEEEEEEKKKKK!!!!!\" the woman screeched at the top of her lungs.\n\n***\n\nThirty minutes later...\n\n\"Do not feel so bad, Jeanette,\" Freja said in a quiet but encouraging tone as she sat next to her wife in their seats. \"After all, you are not the one in trouble, ja? That woman is waiting to be arrested for what she was illegally carrying in her butt.\"\n\n\"The horror... the horror...\" Jeanie murmured, staring blankly at the back of the seat in front of her. Her skin was somewhere between pale and porraceous, and almost translucent. The ruckus had disrupted the entire back half of the plane, that being the economy flyers. Freja wished they'd been flying farther up, but these seats were what they could afford.\n\nAnd Jeanie hadn't been the only one retching. Once the stewardess had flung the door open and the stench wafted through the cabin...\n\nReminds of the smell on Jeanette's family's farm, in the animal pens, she mused, shaking her head. Whatever, we just need to kick this off and not declare it the start of our gig. Fuck, we're gonna be so rich!\n\n\"Leave it behind you, my love,\" she cooed, patting Jeanie's shoulder. \"Besides, did they not offer you a free meal for the troubles you experienced?\"\n\n\"I may never eat again, Fre,\" Jeanie answered in a quavering voice, as if the mere thought of food would set her stomach on full bazooka mode. \"Not the start I was hopin' for.\"\n\n\"It can only get better from here, yndling,\" Freja said soothingly, smiling. She wanted to kiss her wife to assure her, but was worried Jeanie might puke in her mouth. Freja wasn't ever going down that road again, thank you. \"You just wait and watch.\"\n\nWhat could possibly go wrong?\n\n***\n\nA modest hotel room, downtown Los Angeles ...\n\n\"Well, this doesn't seem too bad for what we paid, does it?\" Jeanie remarked, sitting and bouncing on the side of the bed, testing it. \"No creepy-crawlies, no dead hookers in the mattress...\"\n\n\"I am thinking we did well for the price point,\" Freja agreed, sorting out her suitcase. \"We should be careful with our remaining funds until the deals are signed. Not too much of the going crazy, ja?\"\n\n\"True dat,\" Jeanie said. \"By the end of this trip, the bank account is zeroed, so it's a good thing we've got a slam dunk, y'know?\"\n\n\"We can stay in tonight and have some fun, and then perhaps look around tomorrow,\" her wife suggested. \"Los Angeles has such a reputation, after all.\"\n\n\"I think I can kill an evening having sex with you in a cheap hotel,\" the brunette said, smiling slyly. \"I've fucked in seedier locations.\"\n\n\"I have as well, and I believe I have not told you all of them, so I must do so,\" Freja concluded, pulling off her top and then her skirt, leaving her clad on in a push-up bra to enhance her cleavage. She wasn't wearing panties, of course, since nothing down there needed enhancing. \"I am thinking the seediest ones, they will turn you on.\"\n\n\"Mmmm, I bet,\" Jeanie purred, standing and stripping off her own clothes, including her bra and panties. Once she was naked, she pulled her wife to her, so that they were embracing and looking into one another's eyes. Lost in each other's gaze, it was some time before either of them said anything.\n\n\"Just think, Fre,\" Jeanie finally whispered, slowly rubbing her breasts against Freja's while they both pressed their hips closer, their mounds finally touching. \"A few nights from now, and we'll be able to roll around in hundred-dollar bills on our bed that don't come out of a Poleconomy or Monopoly box. There isn't a sex toy on the planet we won't be able to buy.\"\n\n\"You are right, my love,\" Freja breathed, tingling at her wife's sensual touch. She found that she surrendered to Jeanie in a different way than she had for all those years when she and Alexandra had been lovers. Freja was almost submissive to her best friend and soulmate. Alexandra was the dominant one, except maybe during their arguments. But with Jeanette, she surrendered to them becoming one, and still equal. Jeanette gave herself up to Freja as readily as the other way around.\n\nThey lived for one another, to make one another happy. It was their greatest desire.\n\nSinking onto the bed, they wrapped their limbs around one another as their lips locked and tongues tangled. It was nowhere near the most comfortable bed they'd ever slept or made love on, but if they had their way, it was the last uncomfortable bed they would ever sleep or make love on. It was part of their vow to one another, to make the other feel as secure and as loved as possible.\n\nA shot rang out somewhere outside their hotel. Jeanie squeaked in fright and bolted upright, her eyes wide as she looked at their window. Thankfully, they were on the third floor.\n\n\"Are you okay, yndling?\" Freja queried, still lying on her side as she looked up at her wife. While she'd also found the sound disconcerting, she lacked Jeanie's startle reflex.\n\n\"Fre, if we're gonna fuck, we'd better do it in the shower,\" Jeanie breathed, trying to calm down. \"If that happens again, I don't wanna piss all over you and the bed in fright.\"\n\nThe Danish girl smiled and sighed, standing up and taking her wife by the hand. \"Come, my love, you can piss on me in fright in the shower. I will somehow survive the trauma.\"\n\nWhat the Hell, they'd need one before bed anyway.\n\n***\n\nThe following morning...\n\n\"Hm, not the kinda breakfast I was expectin' when I saw it advertised,\" Jeanie mused as she took a bite of her toast. The small dining room they sat in was mostly empty, and she couldn't really blame anyone. The 'breakfast' barely qualified as edible. The toaster had burnt her toast, the orange juice was watery, and the little, single-serving cereal boxes were all stale. The yogurt was thin and reminded her of jizz. About as salty, too.\n\nFreja shrugged, seemingly not bothered by the poor quality as she powered through a mountain of flabby bacon. \"I have eaten worse things, my love, I assure you.\"\n\n\"Guess I have too,\" Jeanie sighed, sipping at the supposed coffee, which was little more than hot black water that seemed to have been flavoured with the gunge under the fridge before serving. \"But this whole trip is so important to us, I was hopin' things'd be little more... oh, what's the word... agreeable.\"\n\nFreja stopped eating and smiled. \"Yndling, the difficult part, it has been taken care of. That was getting down here. Now comes the easy part for us, where the product sells itself. This city, it is built on glamour and appearances, yes? So the kinetic makeup will be so very easy to sell. Music, movies, modeling... it is a gift for anyone who spends time in front of any camera.\"\n\n\"True dat,\" Jeanie agreed, swallowing hard to choke down her hard-boiled egg. It was meant to be poached. Whatever. \"Eyes on the prize, right?\"\n\nHer wife smiled. \"In martial arts, when you break a board with your fist or your foot, you are instructed to 'see through' the board, to see past it. There is no barrier, you see. This terrible breakfast, the lumpy bed, the woman on the plane with the rotten bowels... they are not there. They are nothing.\"\n\n\"Not so sure about these eggs,\" Jeanie grunted as she thumped another egg against the side of the table to try and open it. \"I could probably stick these up your cunt and they wouldn't break. Jesus, who sold them these eggs, Gwyneth Paltrow?\"\n\n\"They are even kind of green on the inside,\" Freja quipped, smirking. \"Do not despair, my love. When we finish here, we can go find some fun, maybe a place to be naughty.\"\n\n\"Well, grinding my puss on yours in a new city does sound like a good time,\" the brunette agreed. \"And the weather seems nice. I'm in.\"\n\nThirty minutes later...\n\nThey were crabbed up together between two buildings, with Jeanie lying almost upside down on her shoulders with her jacket underneath her head. Her legs were spread wide. Freja was straddling her wife, mashing her pussy down on top of Jeanie's, grinding in squishy circles. The alley they were in had a small corner out of sight of the busy street beyond, just big enough for them to violate one another without being noticed.\n\n\"Mmmmm, yeah, Fre,\" Jeanie breathed, reaching under her shirt and fondling her breasts as her wife pussy-fucked her. Her skirt was puddled around her middle, while Freja had shimmied out of her shorts to stand over her, wearing only her sneakers, socks, and her T-shirt. Freja hugged one of Jeanie's legs to keep her steady, moving around and shivering as she felt her slippery netherlips mingle with her wife's, their clits throbbing as they brushed. \"Mmmm, just like that. I love fucking you in places we shouldn't fuck!\"\n\n\"I am loving it too,\" Freja panted, feeling the delicious tingles spreading through her trim, toned body. \"And I am so in love with you.\"\n\n\"Show me by getting all that yummy cum in my cunt,\" Jeanie almost hissed, her face flushing as she felt her orgasm looming. She had no idea how the two of them would keep from screaming loud enough to be heard when they came, but they needed to somehow refrain, lest they attract unwanted attention, especially from the cops. The couple panted and squirmed, fucking one another heatedly.",
        "Freja hugged the leg tightly, bending over as she fought to hold on, kissing and biting at Jeanie's calf and ankle. Her controlled circular motions were little more than trembling thrusts now, but they were both so very wet that the sloshing sound of their gooey pussies was all she could hear. Her heart pounded in her chest as she rubbed her tits desperately against Jeanie's skin.\n\nJeanie was hissing and squeezing her breasts hard, pinching and pulling at her brown nipples, feeling the electric pleasure jolt through her whole body. She squirmed and writhed beneath Freja, flexing her ass cheeks as best she could to help. \"Gnnnn, Fre, you're gonna make me squirt, I swear.\"\n\n\"Squirt all over my cunt, my love,\" Freja gasped, almost beyond speaking by now. Fucking in public was an immense turn on for her, the danger of getting caught fueling her desire. She was reminded of her public orgies in Denmark with her friends, and the one she and Jeanette had participated in where they were nearly arrested. She clenched the leg tight and fucked harder.\n\nJeanie grunted and bit her finger to keep from screaming, pushing up on her shoulders as hard as she could, mashing herself into Freja as she lost control, her pussy bubbling over with cum. She shook and squirmed, sighing as Freja bit her calf to control her own scream. The pain was a welcome pleasure; they had bite marks all over one another's bodies. The vast majority faded away in due course, but one or two seemed determined to stay. It was their way of claiming each other.\n\nFreja indeed bit Jeanie's calf, sighing as she surrendered to orgasm. Her cunt slathered Jeanie's in cum, the wet sounds louder than ever. Her body shook from head to toe, pleasure touching every nerve. Her hard, deliberate thrusts split Jeanie's lips, meaning her cum indeed got in Janie's cunt, and Jeanie's cum in hers. Her wife's lush body was slippery and warm beneath her.\n\nNo sooner had the climaxes ended than Freja pulled Jeanie to her feet and they wrapped their arms around each other, kissing fiercely. Their sticky cunts met again, still rubbing. Jeanie leaned back against the wall in the narrow passage, pulling the smaller Freja into her. She slid her feet forward, her legs now on an angle. Freja slipped her own feet behind Jeanie's ankles, locking them both in place, her pussy resting on top of the brunette's. They kissed greedily, tongues tangling as they ground and fondled one another.\n\n\"Mmmmm, yndling,\" Freja murmured quietly, her eyes closed. \"I love you so much.\"\n\n\"Mmm, I could marry you all over again and just fuck you until we die,\" Jeanie murmured back, her fingers tangling in Freja's short, sandy blonde hair. She craved the sensation of how their bodies felt together, the way they moved together, how... right... they felt together. This was what she wanted, more than anything else in life.\n\nThey both paused the kiss as they heard a slow clapping.\n\nEach girl opened one eye and looked up in the direction of the noise, their bodies still fused together.\n\nThe tall, bald-headed security guard was just looking down at them, unimpressed, and still clapping.\n\n***\n\nRoughly an hour later...\n\n\"Stupid hidden security cams,\" Jeanie grumbled, scowling at the floor of the hotel room while stripping off her clothes. \"How were we s'posed to know we were being watched by stupid Bull Shannon from inside the building? Talk about entrapment.\"\n\n\"It is one of the risks one runs if one wishes to fuck in naughty places,\" Freja replied, already naked and waiting on her wife. She was less concerned than Jeanette. This sort of thing was old hat for her. At least they'd managed to cum before getting hauled into the security office. \"And he did not report us, of course. All we had to do was give him a blowjob and fuck him before he let us go.\"\n\n\"Stupid pencil-dick rent-a-cop...\" her wife groused, clearly not mollified. Jeanette wasn't unhappy about having to fuck a stranger, although this was not uncommon for them. Jeanie just seemed put out by how everything seemed to be going up to this point, at least where their pleasure-seeking was concerned. There'd been a hitch just about every time. \"Let's just shower his jizz out and then try again tonight.\"\n\n\"We will go find a legitimate thing to do, maybe even put on the makeup, see how people react,\" Freja offered, walking over and taking her wife by the hand. She led Jeanette to the tiny shower, barely big enough for them both, and liberally applied body wash to her lover and then herself, allowing them both to slide in. They simply hugged close, letting the water cleanse them. Jeanie looked into Freja's eyes, their lips almost touching.\n\n\"It'd just be nice to have something go right, y'know?\" Jeanie murmured, holding Freja tightly.\n\n\"It will, my love,\" the Danish girl said soothingly. \"Remember what I said about seeing past the board.\"\n\n\"I know,\" Jeanie sighed, nodding. \"I'm trying. I guess I've still just got the smell of that woman's intestines in my nostrils. I promise I'm trying.\"\n\nFreja made a wry face. \"You do not smell this when you are licking my cunt, do you?\"\n\nDespite the tight confines, Jeanie slid and wiggled down until she was squatting, her knees outside of Freja's legs. She began kissing and lapping at Freja's pussy, sending shivers through her wife.\n\n\"Nofe,\" she mumbled as she set about the task of giving her wife an orgasm. \"Ftill taftes life ife cremf...\"\n\nMoments later, Freja came loudly, not caring who heard them.\n\n***\n\nLater that night...\n\nBoth girls were looking around in wonder as they walked arm-in-arm down Hollywood Boulevard, taking in the myriad sights. The sidewalk was crowded, and they bumped into more than a few people as they got distracted, but they apologized profusely.\n\n\"Wow, it's like downtown Toronto, but with a lot more silicone,\" Jeanie murmured, watching a woman with enormous, rigid tits walk by. They must've been twice the size of Karen's or Lexi's and that was no small feat, since the sisters were both easily a 40D.\n\n\"Warmer as well,\" Freja noted, trying to not stare at all the palm trees.\n\n\"And sleazier,\" her wife noted with some distaste, stepping in something and then walking funny for several seconds. \"Gotta admit, even I'd think twice about fucking in one of these alleys. Once you're past all the glitzy lights and hardbody fake tits... li'l scary.\"\n\n\"The identifiably gay people, they are looking the same as back home,\" the Danish girl observed, watching two men walk by in tight leather outfits that turned out to include assless chaps. Nothing she wasn't used to, but she'd been wondering.\n\n\"Well, we'll fit right in, then,\" Jeanie said, shrugging. \"So what're we gonna do, since we can't make our pitches to companies until tomorrow morning at the earliest?\"\n\nFreja considered. \"Our hotel is not so far away, and we are dressed well. Why don't we... take in a show?\"\n\n\"Like a movie?\"\n\n\"Maybe something a little more classy, I am thinking,\" the Danish girl replied. \"We can take pictures of us, before we were millionaires, but getting ready to be, ja?\"\n\nJeanie pulled Freja off the sidewalk and leaned back against a building, pulling out her phone. While she pulled up her Google function, Freja was leaning into her, looking around while subtly sliding her hand up the back of Jeanie's skirt and fondling her butt. Jeanie did not object.\n\n\"Hm,\" the brunette said, widening her stance slightly as she researched, allowing her wife to reach underneath and stroke her pussylips with her fingers. Hopefully nobody noticed, but if they did, hopefully nobody cared. It bothered Jeanie that there were still areas and neighbourhoods in Toronto where this sort of public intimacy was considered unacceptable. \"Seems to be some kinda classical music show at a dinner club close by. Dinner and music and not too expensive. How 'bout that?\"\n\n\"We are neither of us very knowledgeable about classical music, maybe this could be good for us?\" Freja suggested. \"To show the profs we can sit still for more than ten minutes when violins are involved.\"\n\n\"Okay, let's go,\" Jeanie said cheerfully, pulling up a walking map on her phone. \"Site said there's still spaces to go sit...\"\n\nThe two girls followed the directions, walking for maybe ten minutes before they arrived at the specified building. It was indeed a dinner club. They paid for dinner and went inside, looking forward to a new experience.\n\nWhat a great way to begin their new lives as rich people!\n\n***\n\nInside the club...\n\n\"Got some pretty posh-lookin' people here, but I feel like I could fit in,\" Jeanie mused as she looked around in the dark club. A young Asian man in a tuxedo was deftly playing on a grand piano up on the stage. \"We're not overdressed, or underdressed. Talk about a win.\"\n\n\"And the food, it is the first decent thing we have eaten since our arrival,\" Freja added, slicing into her medium-rare steak. Jeanie, meanwhile, had opted for the seafood dinner, which was salmon. \"I am very much enjoying this.\"\n\n\"Better than snacking on my cunt?\" Jeanie teased, winking at her wife. She saw the two older people at the table next to them look her way after her query, and she blushed, cleared her throat, and went back to eating. Freja tried to not snicker.\n\n\"Once we're rich and stuff, d'you think you can see us doin' this on the regular with the profs?\" the brunette asked, enjoying her pilaf. \"Y'know, without them wanting to instantly kill us.\"\n\n\"Perhaps,\" Freja replied, looking around. The place seemed classy enough; she thought it would be more expensive than it had proven. Still, this was their only splurge, because their bank account was nigh-empty. She'd heard people playing piano countless times, but the man up onstage sounded exceptional. If she had to guess, he was nearly as good as the profs, and that took some doing. It helped that he was kind of cute, too. \"It might not be so bad, once in a while. Good food helps, ja?\"\n\n\"Think the bathrooms're monitored here?\" Jeanie asked in a quiet voice, trying to make sure nobody heard her this time. \"Kinda wanna record us gettin' off in a place like this, in L.A..\"\n\n\"I am not knowing, but we can check carefully beforehand, perhaps,\" Freja answered. Her wife's dedication to pleasuring themselves everywhere possible was one of Jeanette's greatest traits. \"But I am thinking we must wait, because it would be rude to get up during the show.\"\n\n\"I'm kinda enjoying the music, tbh,\" Jeanie said, swaying and bouncing in her seat in time with the classical music as much as she thought she could get away with. \"This guy's really good, isn't he?\"\n\nFreja nodded. \"Very, very good. We must make sure he knows it.\"\n\nThe pair watched intently as the young man performed, his generously-sized hands and nimble fingers fluttering back and forth across the keys expertly, his focus total. Freja was nodding her head, while Jeanie swayed, getting into the performance. He had short, spiked black hair, a decided contrast to his tuxedo, but he was making it work. The music sang to them both. Maybe it was the way he played, but they could rarely remember a time they'd enjoyed a classical piano performance more, even from Mike or Karen.\n\nThe song ended and the audience began to applaud while the young musician stood and bowed.\n\n\"Woo!\" Jeanie yodeled, waving her arm in the air, and causing a few other diners nearby to look at her.\n\n\"That was the 'Sonata en re' by Mateo Alb\u00e9niz, ladies and gentlemen, and my own arrangement,\" he announced.\n\n\"Yeah, go Alb\u00e9niz!\" Jeanie shouted, flinging her panties at the stage, followed quickly by Freja.\n\nThere was dead silence in the establishment as their predictably spare undergarments gently hit the musician, one on the chest, the other in the nose before they both fell to the stage.\n\nThe other patrons and staff were looking on in shock, while the young Asian man stood perfectly still, seemingly stunned as he looked at them.\n\nThe girls paused in their enthusiasm, looking around uneasily while everyone stared at them. They could have heard a pin drop on the carpet beneath their feet.\n\nFreja noticed the musician's eyebrow twitch.\n\nLort... she thought, seeing his face start to turn red.\n\nEveryone else was still watching silently.\n\n\"What... the... HELL?!\" the man finally exploded, shouting at them from the stage they were sitting near. Both girls almost jumped as his voice echoed through the club. His eyes were almost bulging out of their sockets, and the spectators could see the veins bulge in his forehead and neck. \"AM I SOME SORT OF JOKE TO YOU TWO?!\"\n\n\"Oh, no!\" Jeanie said hastily, moving out from behind her table and hurrying up to the stage, desperate to calm him down. Freja was right behind her. \"No no no no! Not at all! We just wanted to show our appreciation!\"\n\n\"YOU CALL THAT APPRECIATION?!\" he raged, still shouting even through she and Freja were standing in front of him. Jeanie was bouncing up and down on the feet in panic, which had a decidedly pneumatic effect on her figure while she tried to pacify him. The dress she was wearing showed off her cleavage to begin with, and the anxiety bouncing just enhanced the effect. \"I'D HATE TO SEE WHAT YOU'D DO IF YOU DIDN'T LIKE MY PLAYING!!!\"\n\n\"Ohhh, please!\" Jeanie almost whined, seeing that the staff of the place had finally begun moving around, clearly not knowing what to do but determined to do something. Freja was standing on his other side, patting his shoulder to hopefully make him relax, but to no avail. He pulled away from her touch furiously, glaring at her as if she'd kicked his puppy into a woodchipper. \"We're sorry! What can we do?\"\n\n\"I THINK YOU'VE DONE ENOUGH!!! YOU'VE RUINED MY VERY FIRST GIG AS A PROFESSIONAL!!! YOU'VE TARNISHED MY LEGACY FOREVER!!!\" he snarled.\n\n\"How... how about a beej?\" Jeanie asked nervously, hoping nobody else could hear her speak, except him and Freja. His eyes somehow widened further until his eyebrows were in his hairline. If he'd looked stunned before, it wasn't a patch on his reaction since hearing this suggestion. \"We could... um, we could make it up to you after the-\"\n\n\"YOU THINK ORAL SEX WILL ATONE FOR WHAT YOU'VE DONE HERE?!\" the man shouted, causing several people at table to gasp in shock at his language. One woman even seemed to faint. \"I'LL... I'LL...\"\n\n\"Yndling, run!\" Freja yelped as the maddened pianist made a lunging grab for Jeanie, who squealed and ducked while he staggered. She almost waddled across the stage, still hunkering low. Freja had peeled off to the left, trying to avoid him when he saw her and then dashed after her.\n\n\"GET BACK HERE!!!\" he roared, chasing the two girls around the stage. The other patrons stared in disbelief at the unfolding scene. The Asian man in the tuxedo rampaged, trying to lay his hands on the women, who were squealing, jinking, and ducking to avoid his wrath. At one point, Jeanie climbed up on the piano, her heeled feet making a terrible racket on the keys as she moved to avoid him, diving into the case in her desperation where she grated across all the strings, the cacophony beyond belief.\n\nHe nearly got his hands on Freja when she ducked and crawled quickly under the piano, coming out the other side under the bench. She remembered she hadn't worn a bra, and whoever was sitting directly in front of her was getting quite the show. Just hopefully not the last one she'd ever give anybody.\n\nThe staff was rushing around now in a panic, clearly not knowing what to do, and it occurred to Freja that they had no such thing as security. Apparently it was up to the staff to try and quell this situation. The manager had come out and was shouting for everyone to calm down, but the pianist's enraged bellowing drowned her out.\n\nHe dived at Freja, but she yelped and threw herself to the stage and he sailed over her head, through the air and crashing into the table the girls had been sitting at, knocking their desserts everywhere. Freja's bananas foster caused the tablecloth to catch fire, causing a small panic at the adjoining tables.\n\nNow he bounced off the table and tumbled onto another, landing in the dinners of several people. A woman at the table shrieked in fright, but he had already launched himself back toward the stage, despite being covered in lobster bisque and garlic mashed potatoes. Freja was not within his range, but he saw Jeanie inside the grand piano case, struggling to get free from several strings that entangled her. He roared like a deranged bull and went after her.\n\nJeanie squeaked and threw herself out of the instrument, losing a shoe and tearing the hem of her persimmon-coloured dress in the process, just as he crashed inside the piano, making the worst racket yet. He grunted as he got caught in the much-abused strings and the heel of Jeanie's abandoned shoe lanced him in the groin.\n\n\"Jeanette, come!\" Freja barked as she smacked the lid prop, buckling it and causing the heavy lid to crash down, trapping the madman inside the instrument. Jeanie gathered up her skirt, kicking off her other heel and burst into a run, following Freja toward the front door.\n\n\"Do not forget, we have already paid!\" Freja shouted as they sped by the flabbergasted host. \"Thank you for the food! Sorry about the fire!\"\n\nThey ignored the stares of every single person while they bolted down the street toward their hotel.\n\n***\n\nBack in the hotel room...\n\n\"That evening... did not go... as I had hoped it would...\" Freja panted as she flopped down on the bed, her eyes wide. She was so frazzled, she hadn't even bothered to shed her dress once she closed the door behind herself. \"I did not even get to have my Bananas Foster for dessert. I do not even know what a Bananas Foster is, but I wanted one.\"\n\n\"That guy was nucking futz,\" Jeanie sighed, sitting down beside her wife, her curly hair a mess and her dress frayed and shredded. She looked like a girl from an Eighties slasher flick right before the bad guy got her. \"Who the Hell turns down a Freja Kjaer blowjob?\"\n\n\"I am knowing, right?\" the Danish girl breathed, shaking her head as she gazed at the ceiling. \"I can suck the chrome off a trailer hitch. What a waste.\"\n\n\"At least we remembered our purses,\" pointed out the brunette, also lying back now and looking at the ceiling. \"That was kinda scary. Who'd'a thought musicians could get so bugshit nuts about fans showing enthusiasm?\"\n\n\"We must have done the getting ahead of ourselves,\" Freja admitted, sitting up and rubbing her face. \"Not everyone is as ready for the DTF as we are, my love.\"\n\nJeanie snorted. \"S'not like we wanted to suck his dick right there onstage. Even I don't need an audience like that.\"\n\nShe considered something and then frowned. \"Fuck. That was my only set of heels I brought. Do we... do have enough for another decent set of shoes, Fre?\"\n\nFreja pulled out her phone and quickly accessed their bank account. She sighed and shook her head as she logged out. \"Ingen. Not nice enough to match the dress you are planning to wear, my love.\"\n\n\"Jeez, y'mean I've gotta soccer-mom it and wear my sneakers with my presentation dress?\" Jeanie almost groused, frowning.\n\nHer wife shrugged. \"It is the product that will dazzle them, Jeanette, not your footwear.\"\n\n\"Nobody remembers a magnificent marble bust if you prop it on a pedestal made of petrified shit,\" grumbled Jeanie, still not mollified. \"They'll remember the shit pedestal, not the marble bust.\"\n\n\"Come, my love,\" Freja said, turning on her side and smiling at her (understandably) disconcerted wife. \"Let us get undressed, make love, and go to sleep. Tomorrow is the official first day of the rest of our fabulous lives. Let us greet it with a determined smile.\"\n\nJeanie sighed and nodded, knowing Freja was right. She needed to calm down and shake off these setbacks. She needed to be on tomorrow. She was acting at the makeup model, after all. \"'kay. Let's fuck and then sleep, we'll shower in the morning.\"",
        "They both stood up and slipped off one another's dresses. Neither had been wearing a bra, and they'd both left their panties on the stage at the dinner club. Freja sat Jeanie down and then gently slid off her wife's remaining shoe and then her stockings. She kissed her way up Jeanie's leg from her foot to her thigh, showing her wife that she loved her, and that none of what had happened mattered to her. There was only Jeanette.\n\nShe leaned in while she knelt and pressed her lips to Jeanie's, kissing her lovingly while their breasts squashed together. Their tongues tangled for a few seconds before Jeanie switched places with Freja, slowly undressing her until they were both naked. She kissed her way up Freja's toned, athletic leg and then her torso, kissing her wife's small but sensitive breasts for some moments before arriving at her lips. The girls wrapped their arms around each other, kissing and letting the world fall away around them.\n\nJeanie pushed Freja onto the bed before standing and wiggling over to turn out the light. In the dark, she got under the sheets and they embraced each other, making out tenderly for several minutes. As promised, Jeanie soon forgot the woes of the day and lost herself in the thought of pleasuring her wife, and how radiant Freja would look in the morning when they got up and began their new lives.\n\nThere was a pause in the make-out session, an unusual silence in the dark.\n\n\"Fre?\" Jeanie queried in a quiet voice. \"Uh... is your hand on my butt right now?\"\n\nAnother pause. \"No, it is not.\"\n\n\"There is definitely a dead hooker in this mattress...\" the brunette muttered, wondering if they'd ever be truly alone again.\n\n***\n\nThe following afternoon...\n\nThe hotel room door almost slammed open and Freja stomped in, her face red with rage. Just behind her, Jeanie slipped into the room, bursting into tears the moment she'd closed the door. Freja paced in circles for several seconds before grabbing a pillow from the bed, falling to her knees and screaming into it as loudly as she could. Jeanie had just flung herself onto the bed, sobbing against the mattress. Freja screamed until her voice was hoarse, and then pulled her face up, tears already on her cheeks. Her eyes were red and bleary. She could barely breathe, almost choking as she fought for some semblence of control.\n\n\"How could they, Fre?!\" Jeanie managed to say between sobs. \"Why?! Why were they so damn cruel?! We didn't deserve to be mocked!\"\n\nFreja couldn't help herself and slumped onto the bed, breaking down crying. She gripped her hands together tight as she wept, her heart pounding in her chest. Everything had gone wrong. Everything! How had they fucked it all up so badly? They tried so damn hard.\n\nHow had it all gone so very wrong? Three separate times!\n\nThe two girls just cried, utterly devastated. Freja wept until her chest hurt and her throat was raw. She'd been clenching her hands together so hard that they were almost locked in that position. It hurt to uncurl her fingers.\n\n\"I am so sorry, yndling,\" Freja murmured, still staring at the far wall. \"I understand if you hate me for messing all this up.\"\n\n\"I... no, Fre,\" Jeanie sniffled, sitting up and noticing that she had tears on her cheeks. Her eyes stung, and she was certain she looked hideous. \"It wasn't you who fucked up, it was me. And I... I hope you can forgive me, I ruined us.\"\n\nShe turned and looked at her wife now, her eyes a bleary red and glistening. \"I've cost us everything. We have... oh my God, Fre, we have nothing.\"\n\nThe Danish woman swallowed and looked at her wife, squeezing her hand. \"I have had nothing before, Jeanette. I survived it to find you. And yes, this failure hurt me very badly, but... not as much as thinking that you blame me for... for...\"\n\n\"I don't,\" Jeanie interrupted, shaking her head. \"Maybe we're both to blame, maybe neither of us is, and it was just a big suck sandwich. Fre, I don't want to sound weak, here, but...\"\n\nShe looked into her beloved's eyes, pleading with her own. \"I need you more than ever right now. I'm so overwhelmed, and I'm so scared.\"\n\nJeanie looked at the floor, trying to not flail about with her hands. \"What do we tell my parents? We can't pay for anything anymore. We're flat broke! Oh my God, Fre... what... what do we tell the profs? And Alex and Lexi? I'm used to my parents bein' disappointed in me, but... if the profs are, I'm gonna die.\"\n\n\"I know, my love,\" Freja rasped, her voice little more than a whisper as she struggled with her emotions. She felt like she'd failed her wife, worse than she'd ever let anyone down before. And it hurt so very bad. \"To have to tell them, it will be so painful. To hear them say how stupid we were, how disappointed they are. I will die too.\"\n\n\"I'm not even sure we can make it to the airport to get outta here,\" Jeanie whimpered, knowing she could be weak and frightened in front of her wife. If not Freja, then who? \"What do we do?\"\n\nFreja sighed, dreading what she was saying next. She shook her head. \"We accept the fact that we have messed up beyond what we can repair, my love. We are going to lose our condo. We will have to sell the car, and perhaps many other things. And I hate it, but... we both know that the DeBournes, they will let us stay with them for as long as it takes until we have our feet again. And they will be so very gracious about it.\"\n\nJeanie swallowed, her eyes tearing up again. \"I guess... I guess there's no point in delaying the inevitable, right? I'll call everyone and let 'em know we're comin' home with our tails between our legs. I... I don't even know who to call first, my parents or the DeBournes.\"\n\n\"Then get the tough one out of the way, my love,\" Freja said, trying to small. \"Call the professors. Your family, they will seem easy after that, excepting maybe your grandparents. Alexandra, she will let me have it, but that is what I deserve. Go ahead and call, they should be up by now. It is around eight for them.\"\n\nJeanie was sniffling, tears streaking her red cheeks as she pulled out her phone and began dialing a number. She hadn't quite gotten herself under control by the time she put the phone to her ear, and she heard it ringing. Freja just sat beside her, content to let Jeanie do the explaining, since she doubted her own English was up to the task. If they'd been talking to Alexa, she might have been the one to call, and explain in Danish, but she knew better. Alexa would let her have it both barrels. And she wouldn't have been wrong to.\n\n\"Hi, Lady Prof,\" Jeanie said finally, trying not to cry and doing a poor job of it. Her voice trembled while she talked. \"We're... not good, actually. We have something of a situation on our hands. Well, really more of a shit-uation...\"\n\nShe listened for a moment and then took a deep breath. Now came the awful part.\n\n\"So like, remember the kinetic makeup? Yeah. Fre'n me came down- sorry, Fre and I... came down to L.A. to sell and license the stuff, make a bundle, right? Easy-peasy, product sells itself. N-no, we fucked it all up. Everyone in L.A. hates us, and we're so completely flat broke that we're not even sure we can make it out to the airport and come home. They hate us so much that even the dead hooker in our mattress won't touch us. We're... we're really scared. What do we do? We've lost everything and even getting' home is gonna be a challenge.\"\n\nJeanie had finished her initial explanation, but now she was starting to panic, Freja could tell. She was starting to hyperventilate, her eyes squeezed shut as she waited for Karen to explode, tear her head off and scrape out what few contents she could find to eat. Freja closed her eyes and held Jeanie's free hand. It was all she could do for now.\n\n\"You'll... you're gonna call back in a few minutes?\" Jeanie queried to something said on the other end of the line. \"Well, okay. Not like Fre'n me have anywhere to be right now. We'll wait for your call. Yeah. 'kay, bye.\"\n\nJeanie ended the call and stared at her phone, saying nothing. Freja looked at her curiously and finally wiggled her hand on top of her wife's. \"So?\"\n\n\"Well, you heard,\" Jeanie replied. \"She said she'd call back in a bit. And she didn't sound furious. She actually ended the call with that 'Ta!' thing she says when she sounds all sophisto and everything. I... Fre, she didn't kill me, and... I'm kinda worried. I expected her to come through the phone, rip my head off, and fuck the neckhole with a strap-on, but... no, she just said she'll call back, as if she wasn't bothered by it.\"\n\n\"I do not know what to tell you, my love, but it makes me paranoid also,\" Freja agreed. If Karen hadn't come through the phone and killed them on the spot for being the two stupidest and most incompetent girls to ever live, then what did she have in mind for them? The thought almost made her wet herself in fear, and she clenched her Kegel muscles a little harder. \"I am guessing we wait. What else is there to be done?\"\n\nThey both just stared silently at the floor or the wall for nearly half an hour. At one point, Freja got up to go to the bathroom, but that was about it. Jeanie gave herself the easy task of trying not to think, just letting her mind go blank.\n\n\"My persuasion\n\nCan build a nation\n\nEndless power\n\nWith our love we can devour\n\nYou'll do anything for me!\"\n\nThey both looked down at the cellphone as it announced Karen calling back, her personalized ringtone leaving no doubt as to who it was. Jeanie was slow to pick up, swallowing and trying to steady her trembling hand as she reached down to the phone...\n\n\"Hello?\" she said with hesitation, trying not to wince in anticipation of the hellstorm she expected. \"Yeah, we're... we're here in our hotel room. No, our ticket isn't set to leave for another like, five days'r so. But we're gonna starve before then.\"\n\nShe listened again to something. \"How much money do we have? Like, in our account?\"\n\nJeanie looked at her wife, who hurriedly pulled out her own cellphone and logged into their bank account. She displayed the screen to Jeanie, her own expression nothing short of grim.\n\n\"Ummm... we have exactly one hundred and eight dollars and eight cents to our name,\" Jeanie said, feeling a cold sweat on her forehead. \"That's literally all the money on earth the two of us have, to last from now until we die. Uh-huh...\"\n\nJeanie listened for some moments before her eyes went wide.\n\n\"What?\" she asked in disbelief. \"I... uh, okay... yeah, we'll... we'll do that. Uh, okay... yeah, I... see ya...\"\n\nThe brunette ended the call and then stared dumbly at the wall for several seconds. Freja, determined to be in the loop, clasped her wife's arm. \"So?\"\n\nJeanie turned to look at Freja, her eyes rather blank. \"Tomorrow morning, we've gotta go to Napa.\"\n\n\"How?\" Freja queried. \"What is a Napa?\"\n\n\"It's a place here in California, I think. We rent a car and go to Napa,\" Jeanie said.\n\n\"But this will eat up all the rest of our money,\" Freja almost protested.\n\n\"I know, Fre, but... Lady Prof instructed us to go to Napa. No arguments.\"\n\n\"Why?\" Freja asked in confusion.\n\n\"Because that's where they're meeting us tomorrow afternoon...\" Jeanie said, her mind still whirling.\n\n***\n\nEarly the next morning...\n\nBoth girls were looking and feeling very morose when they finally got up. They'd spent the night crying together and holding one another, not attempting to console each other so much as share their grief. Their sure-fire success had ended up being a disaster, and now they had nothing. They were virtually penniless, and far away from home in a foreign country that was less than hospitable to them.\n\nThere was no customary morning kiss, no whispered words of love, no spontaneous make-out or heated sex session. They both sat on the side of the lumpy bed, staring blankly from red-rimmed eyes. Crying aside, they barely slept at all, either. Jeanie's hand rested on Freja's, but that was the limit of the contact they shared at the moment. They were not at all mad at one another, they both just felt very... withdrawn and insular at that very moment. Emotional and physical expressions were almost beyond them.\n\nBy silent consent, they stood up and went into the shower together, cleaning themselves off. The ablutions had been quiet and efficient, with none of their habitual playful caressing and lovemaking. They dried themselves and started getting ready, knowing they had somewhere to be and fighting the feeling of lead in their limbs. They were informed by the front desk that they would not be receiving a refund for the days they weren't using if they checked out early, they'd just have to eat the cost. Even Freja didn't have the energy or will to contest the absurdity of the claim, and they left the hotel behind, heads hung in defeat.\n\nAn few hours later...\n\nThey were heading north now, in a rented car. All their possessions that they'd brought with them were in the trunk, and they were rationing out the granola bars they'd bought. At this point, their bank account was running on fumes, and if they needed more gas for the car's tank, they hoped blowjobs were an acceptable form of barter in California gas stations.\n\nThey hadn't brought their Garmin with them, so Jeanie was watching the instructions on her phone as it directed them about how to get to Napa from the tangle of settlements that made up the greater Los Angeles area. It seemed like they were doing okay for now, having found Interstate 5 heading north. Jeanie just hoped that her phone wasn't lying to her, because there was no room for error.\n\n\"How long does it say the driving will take?\" Freja asked, her hands on the wheel. She agreed to drive them out of the city, since she wanted to snooze briefly before they reached this placed called 'Napa'. Even with the aid of Jeanie's phone, getting out of the city had been rather nightmarish, and the hoped against hope that their gas would hold out.\n\n\"Uhhhh...\" the brunette replied, fiddling with her phone. \"Assuming nothing goes wrong? Five and half more hours.\"\n\n\"It already took us almost three hours to get out of the city,\" Freja said grimly. \"We will be needing more of the petrol, ja?\"\n\nJeanie nodded. \"Gas, too. I think we've got like ten bucks in coins, we can use that. Hopefully it's enough. Want me to take over driving?\"\n\n\"If it means that I can get an hour or two of sleeping in, then yes, please, my love.\"\n\nThey pulled over onto the shoulder of the freeway and switched positions. Jeanie began driving while her wife settled into the passenger seat and passed out almost immediately.\n\nPoor Fre, Jeanie thought as she eased them back into the stream of traffic heading north. We came down here thinkin' this couldn't fail, and I fucked everything up. She must really love me if she can forgive me for being this stupid. A five-year-old could've sold this stuff!\n\nHer phone beeped, shaking her out of her self-castigation reverie and reminding her to peel off onto a ramp. She sighed and kept her eyes on the road, wondering what on earth they were going to Napa for. She tried to recall if she'd ever heard anything about the place, but nothing came to mind. If she'd ever been told about it, it hadn't penetrated or stuck, so she hadn't considered the information relevant. Given how small her hard drive was, she didn't really have a lot of room for info that didn't matter. If it wasn't about fucking, food, or making her friends happy, she was unlikely to remember it.\n\nKaren had told her that they were coming to meet Freja and Jeanie, and all the pair had to do was make it to Napa. Jeanie guessed it was cool that they were coming down, but why didn't they just come to L.A.? She'd told them that they had absolutely no money left. Was Karen making them drive somewhere just to let them sweat it out before she tore them apart for being such absolute idiots?\n\nNo, while Lady Prof might kill them, she doubted that she'd fly to another country just to do it. Jeanie had fully expected her and Freja to slink back to Toronto, and then have to visit the Manor, their heads hung in shame, while they were allowed an audience in one of the studies, where they would explain their situation, explain how stupid they'd been, and then beg for help, for a place to stay, so that her wife wasn't forced to sleep on the street now that Jeanie had fucked everything up so badly.\n\nIt made her face warm, knowing that after this farce, they'd be living in an even more luxurious environment than what they were already used to. They'd be treated with the utmost respect and diligence, but they'd have earned none of it. They deserved... no, Jeanie deserved... the exact opposite. She deserved to be sent to Collingwood, where her parents would criticize her and shit all over her for being a screw-up who thought with her cunt before anything else. And then she'd be sent to her grandparents, who would finally treat her with the cold disdain she deserved.\n\nShe bit her lip and felt a tear on her cheek as she thought of how painful this all was. Why hadn't they stopped to think this through? What could they have done different?\n\nNo, wait... different-ly. Lady Prof insisted she get that right.\n\nFucking up was so easy. Why did succeeding have to be so difficult?\n\nBecause you're an idiot, LeTourneau, a fucking moron. You're impulsive and it's finally cost you everything. You've run outta excuses and horseshoes. You're officially living on everyone else's charity. The DeBournes... your wife's...\n\nHow would she make this up to everybody?\n\nApparently heading to this Napa place was how it began...\n\n***\n\nThree hours later...\n\nIt was early evening, and they had switched positions once again. Freja had gotten some sleep, feeling not exactly refreshed, given how stressed and defeated they both were, but she was in better shape than Jeanie.\n\n\"Sleep, yndling,\" she said soothingly, noting how red-rimmed her wife's eyes were, and that she kept blinking as she watched the road. Jeanette had gotten even less sleep than she had the night before. \"I will awaken you thirty minutes before we get to this Napa airport.\"\n\n\"The rate we've been driving, that'll be tomorrow night,\" Jeanie grumbled, trying to settle in and get comfortable. Even the 401 traffic back home wasn't this bad on the reg. \"Okay, I'll try to get some sleep. Y'sure you're okay with the phone's instructions, Fre?\"\n\nThe Danish girl smiled. \"My comprehension of English is fine, Jeanette, it is only my speak what does the strange things occasionally.\"\n\n\"Sorry,\" Jeanie mumbled, turning onto her side as much as she could without the seat belt digging into her ribs. \"Lemme know.\"\n\nFreja nodded and watched the road intently. She may have still been stressed and tired, but Jeanette needed her. It was the least she could do after destroying their dreams by not being prepared and not thinking things through. She knew Jeanette did not trust her own judgement or her judgement, and that she relied on Freja to be sensible in their decisions, to guide them down the right path.\n\nThis sin, this transgression, this lapse in Freja's sensibility... it had cost them everything. She had been so thoughtless, rushing forward recklessly, convinced that the product would sell itself, with virtually no effort on their part. Roadblocks she couldn't have imagined were thrown up in front of them, and the sheer, blood-boiling mockery she'd endured... that her wife had endured, at the hands of these corporate executives...\n\nHad she deserved it? Had she been so na\u00efve that she deserved it? Jeanette didn't, no. She was so kind-hearted and innocent, she just wanted them to be financially independent of her overbearing parents. Jeanette couldn't possibly have deserved that. Didn't she love Freja, despite how broken and fucked-up she could be? Always defiantly choosing the simplistic or wrong way to do things, calling the universe out, daring it to disappoint her. Which it did, because she deserved what always happened.",
        "Her life had always been full of forgiving people. Her father, her mother, her brother and sister... the professors and Alex...\n\nAlexandra...\n\nShe squeezed her eyes shut for just a moment as they stung, blinking them open so that she could keep an eye on where she was driving. She didn't want to pull over; she didn't trust that they had enough gas to make it there. She'd get out and push if she had to. She would not fail Jeanette again.\n\nShe couldn't understand how all these sensible people were so forgiving of her. Alexandra, her best friend, her soulmate- she'd never abandoned Freja, no matter how insane she'd acted. For a decade now, she'd been Freja's fast friend, her rock. How could she look her dearest friend in the eye now?\n\nFreja had been confused when Jeanette had told her that not only were Mike and Karen coming down, no doubt to punish them for their utter stupidity, but her stomach fell into her feet when Jeanette had mentioned that Alexandra and Alex were coming as well. Freja flushed slightly at the notion of them bringing her best friend down to watch them lecture Freja, but then reminded herself that she deserved it. None of them had done this incredibly stupid and impulsive thing. Wasn't she going to be relying on their charity now?\n\nAnd as much as she'd let them all down, it paled in comparison to how she'd failed her wife. Their whirlwind romance, which started the moment they met, ending up in a tangle of limbs on the floor of a gymnasium supply room at the university, began a new and wonderful chapter in Freja's life. She'd never been happier. But now she'd lost their best chance at financial security. Her only hope was that Jeanette loved her enough to somehow forgive her.\n\nBecause Freja was pretty damn sure she couldn't forgive herself. How many times had she gotten her wife in trouble? Nearly murdered by a crazed incel... nearly arrested by the police in Roskilde for holding an impulsive orgy in a park...\n\nNow she'd bankrupted them.\n\nShe deserved whatever happened next.\n\nThey moved by a sign indicating their next freeway turn-off.\n\nHoly shit, was I really hating on myself for that long? she wondered, pulling onto the ramp. She looked at the fuel gauge, noting that it was on the red line. Please hold on, please hold on... just get us there, for my wife's sake...\n\n***\n\nNapa County Airport, two hours and one blowjob for gas later...\n\nThe two girls waited patiently in the small Arrivals area. This hardly felt like an airport at all. It felt more like a bus station or a warehouse that was used as the terminal for an airport. Napa was not a big place, and the airport seemed to deal in mostly local traffic, along with smaller jets from other states. Freja and Jeanie were still unclear on why their friends had instructed them to meet here. As inhospitable as L.A. might have proven, at least they might not have made a nine-hour drive just to get told what idiots they were.\n\n\"Are you sure that you two are waiting for someone?\" a security guard asked, walking up to them. They'd walked into the small terminal, explained that they'd been instructed to meet friends here this evening, and that was the extent of what they knew. They showed the guard messages they'd been receiving about how far out their friends were.\n\n\"They didn't tell you the number of their flight or anything?\" he asked. Both girls just shook their head and said they'd come all the way from L.A. per their friends' instructions. The security guard shrugged and wandered off, since the two were not actually doing anything wrong aside from looking rather lost. They went back to looking out the large windows, still wondering what was going on.\n\n\"We only called them this yesterday night; the fact that they're getting here this evening means they're pretty pissed. I guess not telling 'em was our first big fuck-up,\" Jeanie sighed. \"I'm sorry, Fre. I just... I'll accept responsibility for this.\"\n\nFreja bit her lip and blinked her eyes, trying to get rid of the sting. \"No, my love, this was my failure, and I will shoulder the blame. I should have known better than to say nothing. I... wanted to impress everyone with our initiative?\"\n\n\"Not your fault, Fre,\" Jeanie said, shaking her head. \"It was my idea back at Christmas to come tearing down here. Maybe... maybe I'm glad that we're here now, instead of L.A., y'know?\"\n\n\"Well, we have no money to go back now, so this is where we are staying,\" Freja replied, smiling wanly. \"Maybe they will just take us by the ear, drag us on a plane, and take us back home, this whole disastrophe put behind us.\"\n\nBoth their phones buzzed.\n\nTwo minutes out. Look for us.\n\nThey both swallowed and put their phones in their pockets, looking out again at the tarmac. They had no idea what they were looking for, but they were reasonably sure it would be a plane.\n\nAs they watched, a gleaming black jet taxied toward them from some nearby runway. It wasn't a giant jet, of course, because one wouldn't fit at this airport, but this apparition was sleek, elegant, and looked expensive. A business jet. It rolled slowly forward and turned, revealing its flank. Lettering near the nose that indicated it was made by Bombardier, but it was the gold lettering in the middle that caught their attention, and apparently named the aircraft.\n\n'Thunderhawk'.\n\n\"They... they own a jet?\" Jeanie said rather nervously. \"Shiiiiiit...\"\n\nFreja took her hand and squeezed it, every bit as stunned as her wife. \"No matter... no matter what happens, yndling, we will face it together.\"\n\nJeanie nodded, unable to say anything. She could feel her heart thumping and her throat was doing dry.\n\nThe imposing jet rolled to a stop, not far from the tiny terminal. The darkened windows of the cockpit faced the two girls silently, ominously. Several minutes passed, and runway crews scurried around the Thunderhawk, getting it ready for its passengers to debark.\n\nJeanie wasn't exactly sure why, but she felt her breathing speed up, and she was starting to sweat. She was anxious. Whatever ass-beating awaited her, it was getting her worked up. She tried not to whimper.\n\nThe stairs were lowered from just behind the cockpit and both girls trembled as the titan form of Mike DeBourne moved down the steps, the jet wobbling and ricking under his weight. He was followed by his beautiful wife, Karen, and then their son, Alex. Right behind the handsome young man was his aunt and wife, and Freja's best friend, Alexa. Bringing up the rear was one of their employees, Valentina Prospero. Once they were all at the bottom of the steps, they turned and started walking toward the small terminal.\n\nJeanie and Freja both felt their hearts thrumming at the sight of the five individuals, but Jeanie found her anxiety bleeding away, replaced what she could only describe as relief to see her friends. A desperation to hug them. Her eyes welled up again, and she felt like she had to pee. Beside her, Freja was also trying to control her tears, looking at the way Alexandra smirked at her. Mike's warm smile as he towered over everyone caused her dread to almost crumble. And Karen looked at her as she walked, and all she did was smile serenely and nod.\n\nThe girls waited while the small group checked themselves in with security and then moved to the reception area, walking directly toward them. Jeanie was almost bouncing on her toes and choked back a sob. Freja glanced at the gleaming black jet and then back at Alexa, confusion mingling on her face with her worry.\n\n\"Don't ask, slut, I just found out myself this morning,\" Alexa said in Danish as she pulled her best friend into a tight hug. Despite all her anxieties, Freja broke down crying, all her emotions flooding out of her. Jeanie burst into tears as she crushed herself against Alex's muscular chest, and his strong arms held her.\n\n\"Don't worry, the cavalry's here,\" he said soothingly, stroking her curly brown locks while she wept.\n\n\"I ams so sorry for the crying,\" Freja sobbed, unable to control herself. Every single emotion had crashed over her and fallen away, and she felt very raw right now. \"We just... we have had so...\"\n\n\"Hey now, it's fine,\" Mike said in his deep, comforting voice, pulling the two into a hug in his huge, powerful arms. They both sighed through their tears at the sense of protection in that embrace, an emotion every other woman present could readily identify with. \"What's happened has happened, ladies. \"And we're here now to help you fix the issue.\"\n\n\"The issue, I am not so sure it can be fixed,\" Freja sniffled as Karen hugged them both now. \"We have lost everything. We have no money at all now, we spent our very last funds coming to meet you here.\"\n\n\"Of course it can,\" Valentina assured them, taking their hands and smiling at them both. \"So you had a false start, and now you've got the best backup anyone could ever ask for.\"\n\n\"Maybe you are right, Miss Prospero,\" the Danish girl said, breathing deep and trying to get hold of herself. \"It has been a very bad few days for us. We are just feeling... what is the term... very dragged out.\"\n\n\"Yeah,\" Jeanie agreed, wiping at her eyes as relief flooded through her. \"Pardon my French, but I feel like cat shit on linoleum. We really screwed up, guys. We've made enemies of everyone in L.A., we're a laughingstock, and we don't have ten cents in the bank. We're so damn broke.\"\n\n\"Wow, you blew through all your camgirl money?\" Alexa asked, raising her eyebrow and looking at Freja. \"Impressive.\"\n\n\"It was not just this trip,\" Freja insisted, trying to defend herself just a little. \"There was our trip to Roskilde for Christmas, and maybe we have done some splurging because our spirits were high. We thought... we thought we could not fail.\"\n\n\"And you will not,\" Karen assured her, stroking her cheek gently. \"We are here now, and we will see this through with you. Promise.\"\n\n\"Thank you,\" they both murmured, hugging the woman they admired most in the world. They were no longer anxious, they just felt... overwhelming relief.\n\nThey began walking out of the terminal, with Freja and Jeanie occasionally looking back at the jet that had spirited their friends down here on a moment's notice to rescue their sorry asses. Alexa just shrugged. She hadn't been lying, she'd only found out about the Blackwell corporate jet that morning. They were gathered out on the curb waiting for their porter to bring the luggage while Mike began explaining the plans to everyone. Jeanie managed to interrupt him only once.\n\n\"Sorry, but... Fre'n I can't get back to L.A. now, and what do we do about our dead hooker hotel room?\"\n\n\"Nothing,\" the giant man said simply. \"Leave it, let them cancel your stay on their own and rent it out again. Put Los Angeles behind you, we'll be working out of Napa now.\"\n\n\"Why is this?\" Freja queried. \"Could you not have met us in Los Angeles?\"\n\nKaren smiled. \"Since we decided to come and assist you, I thought I would use the opportunity to visit my family's wineries here in Napa. We'll stay here while we figure out what to do to handle your crisis. That means plenty of wine for everyone, not to mention any other fun we can find for ourselves.\"\n\n\"Like finding out our besties own a damn jet?\" Jeanie mentioned.\n\n\"Don't get me started,\" Alexa sighed, shaking her head. \"I am the world's worst proletarian.\"\n\n\"We've arranged for rooms at the Hotel Arquero not far from here,\" Mike said while Karen tipped the porter. \"You two could no doubt use a good night's sleep. Tomorrow, we relax and enjoy ourselves, let you destress.\"\n\n\"This is sounding good,\" Freja agreed, nodding. \"If you had not come down in your mystery plane, we might have been sleeping on the streets of Los Angeles tonight. We spent our last cash to come meet you here in Napa, it was a nine-hour drive with bad traffic. Yes, we are rather tired.\"\n\n\"Money is not your concern anymore,\" Mike said firmly, looking at them both with his laser-blue eyes. Those eyes made a person feel like he was stripping away not just their skin, but all their defences, and leaving them bare, so that he could see everything about them. It was unnerving if one didn't know him, but it could be so very exciting and enthralling as well. \"Kar and I will handle the expenses from hereon in for this trip. Ladies, your only duty for the next few days is to relax, recover, and then get ready for round two. Understand?\"\n\n\"Yessir,\" they both said readily. Submitting to Mike was something of a kink for them both, after all.\n\nKaren was talking with Miss Prospero, and Mike was arranging for limo-taxis to take them to the hotel, when the four youngsters all stood in a small group together, holding hands.\n\n\"We have been so worried,\" Freja confessed, sighing. \"We had convinced ourselves that Michael and Karen, they were coming down to do the chewing out of us, and to drag us back to Toronto in shame, doomed to live at the Manor with their charity because we have now lost our home.\"\n\n\"You Danish dodo,\" Alexa giggled, squeezing her friend's hand. \"The minute Jeanie told them what was up, they resolved to come down here and help, silly. And if they need to cover your condo fees for a few months, they will.\"\n\nAlex allowed his aunt-wife to draw the two girls into a close hug, speaking gently to them in her lyrical, crystalline voice. \"You need to remember,\" she whispered. \"Kar and Mike will never forget the part you both played in bringing me back home after I ran away. I don't think you'll ever truly understand the depth of the dedication they feel toward you. When you called, they dropped everything and made sure that Alex and I could come down and help fix this.\"\n\nShe leaned back now and smiled at them both, her dazzling, enchanting smile that would melt winter and turn it into summer. \"And believe me, guys... it will get fixed. You will succeed. Just... stop being such dumbasses and running off to do crazy shit without us, okay?\"\n\n\"No promises, but we'll try,\" Jeanie said, half-laughing and half-crying as Alex hugged the three girls.\n\nIt was good to be back together.\n\n***\n\nNinety Six Chop House, Main Street, Downtown Napa an hour later...\n\nThey were sitting around a large table near the back of the establishment while soft jazz played over the speakers. The dining room felt dark and comfortable, despite its size. Freja and Jeanie sat between Alex and Alexa, while Mike, Karen, and Valentina filled out the rest of the circle. A waiter had just brought three bottles of aperitif wine and poured when Karen looked at the young couple.\n\n\"So,\" she began, sipping her Lillet to make sure it was to her taste. \"You have expressed your concerns in the broadest sense, you made a dog's breakfast of things. And while I intend for us to absolutely enjoy ourselves for the next day or so, it would be best if you caught Michael and I up to speed on the relevant details, in case we need to see to anything forthwith. You may begin.\"\n\nFreja and Jeanie looked at one another for a moment, shrugged, and then the brunette started trying to explain. \"Well,\" she said, trying to recall everything. Her memory was far from epidemic. Was that the word? Epidemic? Idolatric? Dammit. \"Fre'n' me decided-\"\n\n\"Freja and I,\" corrected the bronze-haired woman.\n\n\"The two of us decided back at Christmas that we were probably sitting on a fortune with the kinetic makeup and that we should give it a shot. Rather'n stick to small potatoes, we get it in our heads to go right to Ground Zero and go for the big time.\"\n\n\"Straight to Los Angeles,\" Mike mused. \"Impressive.\"\n\n\"Right?\" Jeanie confirmed, nodding and rather missing the point. \"We'd been standing in our en suite shower, having a good time with Fre skewering me on Bossa Nova when-\"\n\n\"Jeanie?\" Karen interjected, smiling.\n\nThe brunette paused, looking at the matriarch.\n\n\"Relevant details, darling,\" Karen said gently but firmly. \"Knowing which of the interminable sex toys in your shower you bruised your brainstem with is of no consequence or interest to me whatsoever.\"\n\n\"Sorry,\" Jeanie said, blushing.\n\n\"Why did you two decide to not tell us at all?\" Alexa asked.\n\nFreja and Jeanie both sighed. \"I... we jus' thought this would be a walk in the park and that we could impress everyone with what we'd done. I mean, imagine getting to go back to my parents and explain that we were as rich as they were? They couldn't hold anything over me anymore.\"\n\n\"That's completely understandable, my dear, but planning is always key to success,\" Karen pointed out. \"If you had told us, we could have helped you form a strategy, even if you were determined to do this yourself.\"\n\n\"I know,\" Jeanie pouted. \"I know now, anyway. We landed in L.A., we rented a cheap hotel room, because we were trying to conserve our money, and then we would visit the various cosmetics companies, and they'd go nuts and buy it from us for a ton of money.\"\n\n\"So you went to various headquarters,\" Mike said, keeping the pair focused on details.\n\nJeanie nodded. \"We tried a big, famous one first. Didn't have an appointment, but we said we wanted to see execs because we have a new makeup that would revolutionize the industry. They actually let us in, and there was, like, five of 'em sitting around in a meeting room. We tried to make the pitch, but it went to Hell immediately.\"\n\n\"How so?\"\n\nJeanie scowled. \"They were asking for dumb business details, and smirking the whole time, like they knew we had no idea what they meant. Freja could provide some technical ones about how the makeup worked, but they were really shitty about her English, not to mention my running shoes. I couldn't explain it, and they were raggin' on us about a business model. I asked why that was necessary, we just wanted them to buy the rights to use it. Freja tried demonstrating by putting some on me, but when we asked them to kill the lights so we could show it to them, they wouldn't even do that.\"\n\n\"And then?\" Karen asked.\n\nJeanie almost went silent, looking at her lap. \"They offered us a hundred bucks for the rights, and they were laughing when they did it.\"\n\nMike and Karen gave each other a sidelong glance before letting Jeanie continue.\n\n\"We got mad and we left, with those bastards all laughing loudly as we did,\" she said, her face hot as she blushed at the memory. \"There was no need to be so damn mean. One of 'em even commented that we'd've done better if I put the makeup on my tits!\"\n\n\"So that was strike one,\" Mike said, nodding. \"I'm assuming that means you moved on to another company?\"\n\n\"Well, we figured we had to do better than that, so we tried the next one on our list.\"\n\n\"Did that go better or worse?\" Alexa asked as she nipped into her prawn cocktail.\n\n\"Y'wouldn't think it possible, but they were even meaner,\" Jeanie admitted. \"After making fun of us for almost half an hour, they offered to take the makeup off our hands for free, so that we didn't hurt ourselves with it. We stormed outta there, too, but not before Freja hoofed a security guard in the nuts for trying to make us leave the makeup behind. It was a makeup company, not a mafia den! We made a really quick getaway then.\"\n\nFreja was frowning at the table. \"They were so mean. Why?\"\n\n\"They might have been trying to just humiliate you into giving it to them,\" Karen said, shrugging. \"Nobody likes spending money when they don't have to. But they were remarkably offensive to you, no question.\"\n\n\"They wouldn't've done that to you two,\" Jeanie grumbled. \"They were just pickin' on us because we're a pair of dumb girls. And now we're dumb girls without a penny to our name. Don't ask what we had to do for the gas necessary to get here. But we figured third time was a charm, right?\"\n\n\"And that meant the last of the big names in town,\" Mike posited reasonably.",
        "\"Yeah,\" Jeanie sighed. \"And as if things couldn't go any worse, they did. These guys were even meaner than the other dickheads. They criticized us immediately for wasting their time and not having an appointment and just insisting we be seen for our amazing opportunity. If they were that busy, they didn't have to see us at all, right?\"\n\nMike and Karen both nodded, still listening intently. Alexa squeezed Freja's hand, feeling her friend getting angry as she listened to her wife relay the events of the previous day.\n\nJeanie began to blush as she talked, remembering some awful. \"So after we tried to explain, we thought maybe getting interactive would help, and allowed one of the suits to apply it to my face. He tickled my nose with the brush and I... I sneezed, blasting him right in the face with almost half of our supply. He went into anthropomorphic shock. That set off a lot of panic in the board room, best believe it. One of the guys was screaming like it was a terrorist attack. I think they had to put an oxygen mask on the guy who inhaled the makeup. He's... probably also blind, too.\"\n\n\"Note to self, make sure makeup has labeling about being a breathing hazard if snuffed in large quantities,\" Karen said dryly, resting her chin on her hand and looking at the two girls steadily. Mike assured the girls that the makeup was safe, provided one did not inhale it in toxic amounts, but that was true of any makeup that wasn't organic. And kinetic makeup, by definition, was not organic.\n\nThe second round of aperitifs arrived, several of them, since Karen had to keep her husband, son, and baby sister well-fed. While they tucked in, Jeanie continued explaining the fiasco.\n\n\"So between all the cursing and the shouting and the medics running around, Fre'n'I made a hasty exit before security decided we needed to be probed. We'd already been through that once since we arrived.\n\n\"I'm sorry, Jeanie,\" Karen said with genuine sympathy, while Alexa put her arm around Freja and gently pressed her forehead into her best friend's temple, caressing her shoulder at the same time. \"I'll be blunt; things obviously did not go your way, because that product really should have sold itself, with some proper planning.\"\n\nJeanie smiled wanly. \"Don't s'pose you two'd care to invest in the kinetic makeup industry, would you?\"\n\nKaren almost snorted. \"Fat chance that you two ding-dongs would ever see a penny of mine.\"\n\n\"Ow,\" the younger woman said, looking hurt. \"Are we that bad?\"\n\n\"You're menaces, in fact,\" Mike pointed out. If he was chiming in, it must be true. He was normally very jovial and full of jokes, but Jeanie doubted this was one of those times, so this was serious. \"And no, Karen and I did not come down to get our finances tied up with yours. But having said that, we are absolutely determined to see this plan of yours succeed, and we will help however we can. This is still your caper, after all. We'll help you succeed, but we won't do it for you.\"\n\n\"Can't believe how nice you guys're bein' about this,\" Jeanie sighed as she noshed on a cheese plate. \"We really thought you were gonna mop the floor with us. We wouldn't blame you. We've been dumb, even by my standards.\"\n\n\"The important thing is to be allowed to learn from your dumb moments, Jeanie, not for everyone else to look forward to punishing you,\" Karen said simply. \"There are people out there for whom punishment is the most important thing, even if it's themselves who must be at fault. The need for repudiation and punishment is so strong in them. Do not torture yourselves when consequences are usually enough as is.\"\n\n\"I didn't follow all of that, but thanks,\" Jeanie allowed. \"I just... I feel like I could cry for a whole year, y'know?\"\n\nThe bronze-haired woman smiled. \"Cry as much as you need to, my dear, but also try to get some sleep. We can't have that pretty face all stressed out and full of worry lines in the days to come, can we?\"\n\nThe topic was finally diverted away from the girls' folly, just as dinner arrived. The women had all opted for some form of seafood, while Mike and Alex powered their way through enormous, aged porterhouse steaks. They were laughing and listening to Valentina tell them all about shenanigans the Blackwell Manor staff had been getting up to. It felt good for Freja and Jeanie to take their minds off their troubles for a while. They may have had no idea yet how their problem would be solved, but they would simply have to trust to it for now.\n\nBefore long, their desserts were served, with Freja avoiding the bananas Foster, just in case. Mike ordered their final drinks.\n\n\"Four bottles of the Krug, please,\" the huge man said to the waiter. Mike was almost as tall sitting down as the local man was standing up.\n\nAs the waiter hurried away, Karen smiled at her husband. \"You just like ordering the Krug because it still gives me an eyebrow twitch thirty years later, don't you?\"\n\n\"Does the prettiest woman anywhere in the Valley deserve anything less than the best?\" he replied, smiling and stroking her cheek.\n\nAlex, Alexa, and Freja just rolled their eyes as the older couple shared a kiss. Jeanie looked at Valentina and made a gagging gesture, poking her finger at her open mouth and throat. The servant stifled a snicker somehow. The waiter returned in short order, and popped the bottles, pouring the bubbly into elegant flutes for everyone.\n\n\"As we have already mentioned, ladies, this was just a false start for you,\" Karen said, smiling at them, holding up her glass. \"A good night's sleep, we have some fun for a day or two, and then we take the matter in hand. You will be successful, and none of us are leaving until this goal is accomplished. Michael and I do not care if it takes until next March Break. This is happening.\"\n\nThey toasted to the success of the endeavour, and Mike began filling glasses again. For the first time in several days, Freja and Jeanie began to feel real hope.\n\n\"So I guess we're headin' back to L.A., hm?\" Jeanie said, shaking her head as she nibbled at her pecan pie. \"Even though they hate us.\"\n\n\"No, we should change tack,\" Mike said, clinking glasses with his wife. \"Napa will be our base of operations, and Los Angeles is just too far to be convenient.\"\n\nFreja and Jeanie both looked at him. \"Then where?\"\n\n\"From now on, we'll be selling your wares in San Francisco,\" he said simply, his laser-blue eyes leaving no doubt as to his intentions.\n\n***\n\nThe Hotel Arquero, First Street, bedtime...\n\n\"You two sure you don't wanna come and be social for a bit?\" Alexa asked, dressed in a plush robe. \"Kar's already in the hot tub, and the boys've gone to check out a video arcade they noticed while we were downtown.\"\n\n\"Forgive me, my love, but I am thinking that Jeanette and I are just wanting to do the crashing in a comfortable bed,\" Freja said apologetically, smiling and holding her wife's hand while the three stood outside the door to their room. \"We are simply exhausted. It is best we sleep, and if I may be honest, I think we still have more crying to do. It is not the seemly to do such a thing in a jacuzzi.\"\n\n\"That's fine, there's plenty of time left,\" Alexa said simply. She hugged them both close and gave them each a loving kiss. \"This will all work out, I promise you,\" she said quietly. \"Believe it or not, you two dodos deserve to be happy.\"\n\nThey watched as the blonde goddess wiggled off toward Karen's room, humming to herself and disappearing through the door, already shucking her robe. A brief glimpse of her incredible ass was all they got before the door clicked shut.\n\nFreja and Jeanie turned and silently went into their own delightful suite, gazing about them in wonder. It was sumptuous, certainly, and they had their own hot tub sitting on a raised area and looking out a window into the night, with Napa Valley beyond. The bed was huge.\n\n\"I am thinking their will be no dead prostitutes inside this mattress, yndling,\" Freja mentioned, going over to the bed and sagging down onto it. She was short enough that her feet didn't quite touch the floor. \"But I am so... maybe it is because I am also full, but I am so very, very tired.\"\n\nJeanie nodded as she joined her wife, sitting beside her and holding her hand. \"I know, Fre. I gotta admit, once my head hits that pillow, I...\"\n\nThe Danish girl smiled and pressed her forehead to her wife's. \"Come,\" she said quietly. \"Let us undress and get under these lovely covers, ja?\"\n\nOnce Freja had turned out the lights, the girls undressed and slipped under the luxurious covers, quite naked. Lying on their sides, they held one another close, eyes closed and just breathing. Freja could feel Jeanie shifting around a tiny bit. She knew this meant something was on her lovely wife's mind.\n\n\"What is it, my love?\" she asked, moving a strand of curly brown hair away from Jeanie's face.\n\nJeanie opened her eyes, and even in the dark, Freja could see that they were shining, as if they had tears in them.\n\n\"I can't believe how patient and understanding you all are with me,\" Jeanie murmured, sounding very small and hurt. \"I do nothing but fuck up, and you... you guys just never quit giving me chances. I know I don't deserve it, Fre. Why do you love me?\"\n\n\"You are not the fault-causer here, Jeanette,\" Freja said earnestly, her own eyes stinging. She hated that her wife felt responsible, when everything was her fault. \"It is me who is so trying of everyone's patience. Why you still love me, I will never know.\"\n\n\"Maybe... maybe we're just fuck-ups together,\" Jeanie sniffled, her eyes leaking. \"'m sorry, Fre, I think I'm gonna cry. This has just worn me down so bad.\"\n\n\"You are no fuck-up, my love,\" Freja rasped, her voice cracking and feeling tears on her cheeks. \"You are the most wonderful, loving, and caring girl. You deserve all the happiness in the world, and I am bad because I have not given it to you. I have failed.\"\n\nJeanie could no longer speak and just began crying. Freja may have wanted to console her wife, but the stress of the past few days overwhelmed her as well. They held one another tight and just cried, letting everything they'd kept in out.\n\nWhat else could they do? Against all odds, the people who should have been punishing them for their stupidity were here as guardian angels, once again, and determined to see this manufactured crisis through with them. How on earth could they ever deserve to have such incredible friends?\n\nThey both finally drifted off, still sniffling, but unable to stay awake any longer. They held one another as their dreams took them and didn't let go until the following morning.\n\n***\n\nRoskilde, 2012...\n\nAda Kjaer sat beside her daughter inside the principal's office, looking at Freja, her eyebrow raised. The thirteen-year-old scowled at the floor, her arms crossed. Not surprisingly, they'd been sitting here for nearly fifteen minutes, and Freja had stubbornly refused to apologize.\n\n\"Freja, how many times have we been over this?\" her mother chided. \"I let you take the shop class, but it is not your place to decide what you can work on. If your teacher says you must work on the chosen subject, you cannot ignore them. And you certainly cannot get uppity with them and tell them off, young lady.\"\n\n\"Their projects are stupid and boring, mor,\" the teenager groused, not giving up. \"Why should I do them?\"\n\nAda looked at the principal, who was coolly observing the pair from behind her desk, her fingers steepled. \"Freja, could you do those assignments on your own? Do you know how?\"\n\nFreja frowned as she thought about that. \"I... no, I don't think so, not without instruction.\"\n\n\"Then why would the school let you do anything with equipment you haven't paid for if you won't do the minimum required of you?\" the woman asked firmly, her green eyes hard behind her wire-rim glasses. \"You have paid for none of it. It is an instructional tool. It is meant to teach our young minds the basics, and we have allowed you a lot of leeway with its use for your own experiments and projects.\"\n\nThe woman now leaned forward and looked directly at Freja. \"Until such time as you agree to do your assignments and behave respectfully to your teachers, consider yourself removed from the classes you were allowed in to, and are also not welcome in the work shops and machine shops. Effective immediately.\"\n\nFreja's eyes widened and she looked at her mother in shock and panic. \"Mor! You can't let them do this!\"\n\n\"Not my decision, young lady,\" Ada said firmly, not letting her daughter's protests hold. \"If you refuse to do what they say, then the only other recourse is to send you to the trade school on the other side of town, where they also have machine shops.\"\n\nFreja went pale. \"But Alexandra goes to school here!\"\n\n\"And she'll be bitterly disappointed if you end up going elsewhere because you think you're too good for the rules here,\" Ada said ruefully. She hated saying what she said next, but her daughter needed a wake-up call, as she did around once a year. \"Not only will she be disappointed that you are going to another school, but she will be disappointed in you, for thinking yourself so high and mighty, too good for the opportunities given to you.\"\n\n\"Your mother is right, Freja,\" the principal piled on, not giving her time to think, although she could see the horror on Freja's face. \"Miss Blackwell aces everything she touches, every course and project she sets her mind to. She has since the day she arrived, as you well know. She is, hands down, the most brilliant student in the school, and if she is not too good for the rules and structure here, what makes you think any of the rest of us are?\"\n\nFreja blushed furiously, her hands clasped tightly in her lap. The thought of being separated from Alexandra make her sick to her stomach. Her cheeks felt hot as she struggled to not squirm in her seat.\n\n\"The choice is yours, Miss Kjaer,\" the principal said simply, taking a form and pushing it across the desk for Ada to sign, along with a pen. \"When you are ready to decide you are not better than everyone else, the shops are open to you once again. But that is predicated on you doing the assigned work in the classes as well. I am sorry to have troubled you, Mrs. Kjaer.\"\n\nAda smiled as she pushed the signed paper back across the desk before standing up. \"At least Kresten and Rada aren't giving you grief right now, they seem much more docile than their older sister. Come, Freja, I'd say we've bothered Miss Larsen enough for one day.\"\n\nThey left the office and walked down the hall of the now empty school, everyone else having gone home. The principal had been nice enough to allow Ada to come after classes had ended, sparing her the indignity of parading her rebellious daughter past the other students. It helped that the two women had been classmates and friends many years before. Freja walked alongside her mother sullenly, knowing that her mother would say nothing. It was up to Freja to start making this right and open a dialogue. After all, she was the reason Ada had been pulled away from the house and all the work she'd been doing.\n\nFreja finally sighed. \"They really are boring projects, mor.\"\n\n\"Freja, who gives a damn?\" her mother said somewhat curtly. \"The world is full of boring, inconvenient tasks, duties and toil that people must do every day in order to make life go forward.\"\n\nShe looked down at her daughter as she walked now. \"Do you think your father actually enjoys his work in the textile factory? No, it's boring as Hell, so he makes it tolerable for himself. What do you think would happen if he suddenly announced to his bosses that his job bored him and that he should be paid for doing whatever he liked and ignoring his assigned work?\"\n\n\"They'd fire him,\" Freja muttered, knowing where this was going.\n\n\"Humans have been doing crap jobs on this earth for a hundred thousand years, girl,\" Ada pointed out. \"And now, magically, you're the member of the species designated by the cosmos to be too good to do anything dull? You're the special one it all gets tossed aside for?\"\n\n\"No...\"\n\n\"Freja, no one can make these class assignments exciting for you,\" her mother said. \"You either do that for yourself, or you find a way to endure it with the promise of something better to come. But as things stand, you will lose it all, because you refuse to believe the rules apply to you. And I can't protect you from yourself.\"\n\nFreja winced inwardly. She hated when her mother told her that she was her own worst enemy, but she also seemed to be right. Nobody made Freja's life tougher than Freja did by acting like a stupid, stubborn cow. Alexa was going to poke fun at her for hours about this. Without access to the shops, Freja would be stuck making stupid little bottle rockets in her back yard for entertainment.\n\nEveryone seemed to have her number, though. Apparently she was predictable. When she'd been much younger, not much more than a toddler, she'd been prone to biting her tongue in order to get attention. People had begun taking bets on it when they were around her and she was being bratty. After any incident where she felt ignored, the adults had a betting pool on how many minutes passed before Freja came running in, whining and crying that she'd bitten her tongue. She stopped after she saw them laughing and passing money back and forth.\n\n\"When will it start being fun, mor?\" she asked, hoping for a little encouragement.\n\n\"It may never, I know nothing about your mechanics and engineering, my dear,\" Ada replied. \"Maybe that's the price you pay for getting to finally do what you like once you're an adult. Doing the boring along with the fun. But what I can guarantee you is that if you don't do this boring stuff now, and do it well, nobody will give you a second look down the road when the good stuff comes along. And they'd be right not to, because other people would deserve it more. Even if they're not as talented as you, they'd still deserve it, because they were willing to try.\"\n\nShe looked at her daughter as they walked down the street. \"Those are the engineers I want working on our future, Freja. Not snotty brats who think it's okay to walk away whenever they get bored. Who do you plan to be?\"\n\nAs they walked into the house, Freja knew what the right answer was. She just needed to stop challenging the universe and daring it to prove her wrong.\n\nThis really sucked.\n\n***\n\n\"Fre? Fre?\"\n\nThe Danish girl blinked and looked up at her companions, who were all giving her curious looks from around the table. They were down in the dining room of the hotel, having their breakfast. To the delight of the men, there was a buffet, along with special breakfast items to be ordered. Everyone was having coffee and juice, but Karen and Alexa both seemed to be enjoying mimosas as well. \"Hvad?\"\n\n\"Y'went really far away there for a bit, I thought I'd better check on you,\" Jeanie said, taking her hand and giving it a gentle squeeze. \"You okay?\"\n\nFreja nodded. \"I am fine, yndling, I was just... remembering something from long ago.\"\n\n\"One of your mom's lectures?\" Alexa asked, smirking across the table at her soulmate.\n\nFreja frowned. \"How were you knowing that?\"\n\n\"C'mon, Fre,\" Alexa replied. \"Even when your expression is blank, I can see the scowl in those eyes of yours, and that was always the look you had on your face after your mom told you she couldn't save you from yourself.\"\n\nThis earned the blonde a scowl from Freja. \"This... this is why we are not married, and why I am married to Jeanette. She is nice to me.\"",
        "\"We're not married because I'm not nice, that you and I squabble like besties?\" Alexa asked almost unconcernedly as she napalmed her scrambled eggs with Tabasco sauce and tilting her head at Alex. \"Silly me, I thought it had something to do with Tyrannosaurus Sex here.\"\n\n\"Alli, behave,\" Karen chided, making her sister and Valentina giggle. \"After breakfast, we have a Napa Valley train tour planned for a few hours. We sample wine during the trip and stop at a few wineries on the line. How does that sound?\"\n\n\"I promise that Jeanette and I will try to relax and enjoy ourselves,\" Freja said, enjoying her soft-poached eggs. \"But a good night of sleep, that will no doubt have helped.\"\n\nLater that morning, a quaint train station just off McKinstry Street...\n\nFreja and Alexa were standing some way down the platform from everyone else, giving them time to talk. They were standing close, holding one another's hands and their foreheads were pressed together. They spoke in Danish, just so that Freja felt less stress.\n\n\"I know I deserve all the shit that's gone down,\" Freja murmured, trying to control the trembling in her voice. Every bit as much as with Jeanie, she tried to be completely honest with Alexa. She always had for a decade now. In fact, Freja was, in some ways, more honest with Alexa than she was with her wife. Because she didn't want to worry Jeanie. But Alexa was strong and objective, and seemed to always have answers, even if it was just to fight your way out of the shitstorm you'd created. And whenever possible, she'd been right beside Freja, fighting. There had never been a better friend. How could there be?\n\nThere was nothing that her best friend and soulmate didn't know about her, no idiotic stunt, no depraved act. Alexa took in all in stride and loved Freja all the same. \"What if I keep fucking things up for Jeanette?\"\n\n\"Y'haven't yet, have you?\" Alexa whispered back, squeezing her best friend's hands gently. She'd taken Freja down the platform to talk, with Jeanie's blessing. Jeanie, just like Alex, had no problem with how close the two girls still were, or even if they were still in love in some ways. Frankly, it made Jeanie's life easier that Alexa knew her wife so well. She was always willing to tell Jeanie how to deal with Freja. \"And let's be honest, Fre, you're giving yourself too much credit here, thinking that you're the only one at fault.\"\n\n\"How can you say my wife's at fault?\" the Danish girl asked, sounding more exasperated than she was. \"You know damn well how sweet and innocent she is, she radiates it.\"\n\nAlexa smirked. \"You're in love with her because she's every bit as perverted as you are, Fre, don't lie. Yes, she's wonderful and sweet, but no girl who takes two dicks in each hole at once is innocent. She's your match in that regard, you just get to the bad ideas faster and she jumps on for the ride, shimmying her tits the whole way.\"\n\nFreja sighed. \"Why'm I still in love with you when you're such a bitch?\"\n\n\"Because that's what's always kept you honest, you silly slut. I love you because you're more reckless than I could ever be, and you love me because I not completely insane and somehow always pull you back from the brink.\"\n\n\"And maybe the tits, too,\" Freja mentioned.\n\n\"Sure, and the tits, but that's just a given,\" Alexa said. \"Look, I'm not kidding, Fre. Jeanie's in it for the long haul. She loves you, no matter what. She can't believe you love her despite how dumb she thinks she is. She's not used to it, you know that.\"\n\nShe moved her head slightly so that her lips were barely touching Freja's as she whispered, brushing them ever so gently. \"You two struck the jackpot, finding each other, y'know.\"\n\n\"I know,\" Freja replied, whispering back, feeling the familiar tingle she always felt when she talked with Alexa this way. She knew the others could see them, and she knew none of them cared, Alexa's husband and her own wife included. \"D'you... do you think we could've been happy together? You and me.\"\n\nAlexa smiled. \"Yes, Fre. We could've been married and happy, going on great adventures together. But let's face it, we both know we're happier now than we would've been with that ending. Alex is my everything, and Jeanie is your other half in ways even I can't be. It's like we built one another up to be who we are, so that when the people who were intended for us found us, we were ready and ripe for the picking.\"\n\n\"So you admit that it's your fault I'm this way,\" Freja stated, giving her friend a wicked smile. \"I can blame my misbehaviour all on you.\"\n\n\"If that's what it takes to make you happy,\" Alexa replied, shrugging. \"'sides, pretty sure you get a lot of the credit for making me who I am. I mean, I had to steal all this extra tit I carry around from somewhere, and you're the obvious victim.\"\n\n\"God, why do I love you when you are SUCH a cunt?\" Freja pretended to grouse before dissolving in giggles with her best friend. \"D'you really think we'll muddle through this, no matter how badly we've fucked it up?\"\n\nAlexa was still smiling, but looked serious when she spoke. \"Fre, I want you to pretend to be my sister and Mike for moment, okay? Put yourself in their shoes. Alexa has just run away and destroyed everyone's lives in ways she can't imagine, not least her own. But her insane bestie and said bestie's wife help solve the mystery of where Alexa has gone, doing everything they can to bring the mopey bitch home.\"\n\nShe was caressing Freja's face, moving honey-blonde hair away from it, and smiling lovingly. \"From their point of view, would helping set Freja and Jeanie up for life with financial security come even close to paying back that debt? I guarantee it doesn't. I'm afraid you're stuck with their undying gratitude, slut. Best get used to it.\"\n\nCloser toward the middle of the platform, Jeanie was standing with Alex, also having a heart-to-heart, although maybe not quite as deep. She'd been leaning back against him, using his sturdy build as a wall while watching the tracks to see when the train was coming.\n\nOne Massasauga... two Massasauga...\n\n\"You seem like you're in better spirits today,\" he mused, putting an arm around her to make sure she stayed propped up, his hand on her midriff.\n\n\"Yeah, a decent night's sleep'll do that for you,\" she replied casually, taking his hand and moving it up until he was cupping her ample boob. She knew how she was comfortable. \"I'm glad you guys're here and all, but I still dunno how we're gonna work this out. I mean, the profs said they're not doin' it for us, and we're still two idiot girls who don't know anything about selling products to industries, or business plans. So... if it's still up to us, we're just gonna fuck it up again, right?\"\n\n\"I doubt it's that easy for you,\" Alex said, shrugging. \"You know my parents, they've thought this through from angles even Lovecraft and Euclid don't understand. It may be up to you to get it done, but they're gonna set you up to not fail.\"\n\n\"Weird way of puttin' it, but I guess that's encouraging,\" she sighed, liking the feel of his strong hand on her breast. She knew that Freja and Alexa could see what they were doing, and didn't give a damn. The four of them were dearest friends, and lovers. Jeanie was pretty sure she could've married either Lexi or Alex and been very happy (if they could put up with how dumb she was), but in Freja she'd found a partner she'd only ever dreamed of, someone as perverted and prone to misbehaviour as her. How could she ever give that up?\n\nHow had Freja not ditched her by now because she was so stupid?\n\n\"I guess I just feel like we don't deserve this, y'know?\" she explained. \"I mean, we've been so dumb how we handled this. We could've asked for help, like normal, sane people when they don't know what they're doing, but noooooo, we had to go and do things the hard way. Seriously, how much crazy shit are normal and smart folk required to put up with before you are allowed to throw in the towel and walk away?\"\n\n\"Would you expect Fre's family to walk away?\" Alexa queried.\n\n\"Well, no, but they're Fre's family.\"\n\n\"Jeanie,\" Alex said, turning her around and holding her gently by the arms and looking down into her brown eyes. She shivered as she looked up into the piercing laser blue of his. \"You just have to accept the fact that you're a part of this family now. You helped bring Alexa back. We're in no danger of ever paying off that debt. Hate to say it, but you're stuck with us, believe me.\"\n\n\"I believe everything you say...\" Jeanie said dreamily, lost in his eyes and falling in love with him, as she always seemed to.\n\nThe blare of a train horn from down the track snapped her out of her reverie, and she looked over at the approaching engine before scowling up at Alex.\n\n\"Thanks, DeBourne,\" she groused. \"I was tryin' to count how long it took the train to get here, but then you had to make me do all that thinky stuff. Not like I'll get to start over.\"\n\n\"At least you will with your business proposals,\" Alex laughed, not at all bothered by her complaining. They walked to join his mother and father in the middle of the platform. Freja and Alexa also approached, and the couples swapped off. Freja immediately took Jeanie in her arms and held her tight.\n\n\"Lexi make you feel better?\" the brunette asked, breathing in her wife's scent as they hugged.\n\n\"As she always does,\" Freja replied, nodding. \"That is her way. And Alex helped you?\"\n\n\"In that weird DeBourne way, yeah,\" Jeanie said, shrugging. \"He told me stuff I didn't wanna hear but needed to, and he fondled my tit. Win-win, right?\"\n\n\"I am thinking those two are here as moral support to keep an eye on us, while Michael and Karen see to things in other ways, ja?\" Freja mused, looking over at their friends. They were standing around, talking and laughing while the train came to a stop. It was an old-style engine, pulling several cars paneled in maroon and gold. They waited while the current passengers debarked and fresh supplies were brought on board. Freja watched the family intently. As unusual and exceptional as each of those people was, they all fit together seamlessly, and they were perfectly at home in this environment. \"We are lucky to have them as our friends.\"\n\nBefore long, they'd boarded, the seven of them sitting in the most exclusive car. Mike, Karen, and Valentina sat at one table, while the two younger couples occupied one nearby. Jeanie was already making faces about some of the food listed on the menu.\n\n\"Duck liver mousse? Ew...\" she said, wrinkling her nose.\n\n\"Bitch, please, I've seen what parts of Freja you're willing to put in your mouth, you're not fooling anyone,\" Alexa almost snorted. \"Just have the salmon crudo, or the ricotta ravioli for your starter.\"\n\nThe train started making its way down its route and was supposed to take a few hours before it returned. Freja and Jeanie watched as wines were paired with their small courses, the attendants explaining what they should watch for in each glass. How that didn't include getting shit-faced, Jeanie would never know. She ignored the fact that her salmon crudo was raw fish (Lexi was right, she'd had squishier and more disgusting things in her mouth), and got into the spirit of the trip, laughing, talking, and trying to retain at least some of what the nice attendants and waiters were telling her. It seemed only polite, and she did actually like knowing things.\n\nShe just hoped this new wine info didn't push anything important out of her brain to make room.\n\nFreja was sitting next to Alex and across from her wife at the table, and she watched the way everyone interacted and laughed. She felt relieved about how natural this all seemed. It was at odds with all the screw-ups she kept causing, but somehow she always ended up surrounded by friends, loved and cared for, assured everything would be all right.\n\nShe felt her cheeks flush at the thought of how lucky she was, because just about anyone else on planet Earth would be living on the streets by now, penniless and starving, if they'd done the stupid shit she was always doing. She didn't deserve this. But she also had Jeanette to look after now, and however much she may have wanted to beat herself up, there were bigger considerations now. Her wife was everything to her.\n\nShe didn't dare fail again.\n\n\"Try this one, Fre,\" Alex said as the attendant presented a bottle. \"It's from one of our wineries, so a little bit of home, in a sense.\"\n\nFreja sampled the wines, letting the alcohol soothe her still somewhat sensitive nerves. Her friends were here with her, and they had no intention of letting her fail. Maybe nobody really ever accomplished anything good entirely by themselves. If they came out the other side of this fiasco successfully, she promised herself that she would do everything she could to accept the help people offered.\n\nWhat a tall order that would be...\n\n***\n\nThe vineyard tasting train earlier that day had indeed been a fun experience for the pair, and they'd assured Jeanie she had to memorize next to nothing about what she was exposed to. Karen had expressed an interest in fine dining that evening, so proper outfits would be necessary. The little group strolled around downtown near the riverfront, looking at various boutiques where one could find elegant cocktail dresses for the ladies. Alex and Mike wandered off to a different store for men's suits.\n\n\"Mmm, I dunno,\" Jeanie mused as she held the smoky grey dress in front of herself and looked in a mirror while an attendant stood off to the side. \"I mean, yeah, you're right, it's nice grey, but... I want a grey that's a little more sensual. Y'got anything in more of a Sasha Grey?\"\n\n\"That one'll look good on you, Fre,\" Alexa said as she watched Freja hold an emerald green dress in front of herself. Freja seemed uncertain.\n\n\"You are thinking it is not making my breasts look small?\" she asked. Given that her best friend and soulmate was easily a 40D, she had confidence issues. It was even worse when it was Alexa's time of the month, when she habitually went double D. When Freja got her period, her tits stayed the same stupid scrawny B they always were.\n\n\"No, it'll be great,\" Alexa pointed out, reaching into the dress and twirling her finger around in the cups. \"Take a look, it'll give you some lift. You'll have great cleavage, Jeanie'll love it.\"\n\n\"She will?\" Freja asked, her voice carrying a note of nervous hope.\n\n\"Mistress, you'll look splendid in that,\" Valentina said as she stood next to her tall, statuesque employer. Karen was considering a slinky black cocktail dress, the skirt of which almost touched the floor, but had a long slit up one side that reached her hip. It had sheathed shoulders, giving it a sensual feel. A black lace panel in the front promised almost scandalous cleavage. \"That's been my favourite so far, I really hope you go with it.\"\n\n\"Thank you, darling,\" Karen said easily, nodding as she pictured how it would look on her. She even had the right jewelry to accessorize with it. \"If you like it, then maybe it's what I'll go with. Now we should find something for you.\"\n\n\"Oh, no, mistress,\" the shorter woman replied, sharking her head. \"No, my suit that I am wearing is fine, and it fits my look as your attendant. I'll think about a dress another time, I promise.\"\n\n\"Wow, Lexi,\" Jeanie breathed as she watched Alexa come out of the changing cubicle to display her deep blue cocktail dress. It didn't reach the floor like her older sister's stopping just shy of her knees. But she was absolutely stunning in it. \"I mean, you'd rock a potato sack, but that looks incredible on you.\"\n\n\"Everything looks good on Alexandra,\" Freja sighed, now wearing her own green dress. \"As it is, was, and ever shall be.\"\n\n\"Oh, Fre,\" Jeanie cooed, holding her wife and kissing her cheek. \"You look beautiful. I'm so proud of how pretty my wifey-poo looks,\"\n\n\"Maybe you have the 'poo' part right...\" Freja muttered.\n\n\"So, tonight we'll be dining at the Cinnamond Club,\" Karen announced while they waited for Valentina to pay for everything, since she was her attendant. \"We can head back to the Arquero and spend a few hours relaxing, because the club is not far away. Maybe some beverages in the caf\u00e9?\"\n\nAs they walked down the street, with Karen and Alexa leading the way, followed by Valentina, Jeanie and Freja followed not too far behind. Jeanie took her wife's arm and whispered to her. \"Is... izzit just me, or is Lady Prof seeming a little bit wistful these days?\"\n\nFreja pondered the question. \"I would have to think about it. Maybe all I can think is that she has been somewhat softer than normal?\"\n\n\"I guess, maybe,\" the brunette said, shrugging. \"She hasn't threatened to kill us, which is kinda what we expected when we started this clusterfuck, right? I'm still kinda off balance about why we're not dead yet, y'know?\"\n\n\"This is perhaps true, but I am now relieved,\" Freja admitted nodded. \"Our lives, they seem to be charmed.\"\n\n\"Well, none of it is our fault if they are,\" Jeanie muttered.\n\nThey reached the hotel and hung up their dresses before heading down to the caf\u00e9, having a good time laughing and discussing nonsensical things. Karen seemed to be in no rush to discuss the matters at hand, so Freja and Jeanie trusted to that. They'd never known her to not be on top of things before, after all. It was her intent that they relax and enjoy themselves. Maybe an hour had passed before they were joined by the boys. Karen excused herself to go upstairs with her husband, apparently to 'check on some issues'.\n\n\"That's Lady Prof code for gettin' it in, isn't it?\" Jeanie posited, making Valentina snicker.\n\n\"Possible, knowing mom and dad,\" Alex allowed. \"But they also might be doing some planning and just didn't wanna bore us with the deets.\"\n\n\"Maybe Jeanette and I, we should be involved in these deets of yours?\" Freja suggested, not sure if she was bothered by the implications.\n\n\"Yeah, because that's worked so well for you up until now,\" Alexa quipped, pinching her best friend's ear. \"We're all fetuses, Fre, let the adults handle this. Sometimes it's our job to just sit back, watch and learn. Accept it.\"\n\nFreja scowled and nipped the side of Alexa's hand while everyone else laughed. Fine, she'd leave it to the adults. Apparently she was a menace to herself, after all. She still had no idea how this situation would be resolved, which made relaxing hard. Didn't she have a wife to look after?\n\nShe just needed to have the same faith in everyone else that she'd had in herself and Jeanette before everything had fallen apart. She had no business being difficult. This had all been her fault, after all.\n\nHow would she ever forgive herself, even if everyone else did?\n\n***\n\nThe Cinnamond Club, Main and First streets, later that night...\n\n\"Wow, ritzy,\" Jeanie murmured, looking around as they were led into the establishment. The place was dark and warm, with lots of booths and tables surrounding a stage that sat against the back wall. The place was old brick, and seemed to have once been a series of vaulted rooms, now opened to one another. A jazz quartet was playing as they were led to their booth. \"I dunno if we'll ever be chic enough to fit in a place like this, Fre, no matter how dressed up we are.\"\n\n\"You are only saying this because we are here with Karen and Alexandra,\" Freja assured her wife quietly, giving her hand a gentle squeeze. \"Never decide how much we deserve to be in a place if they are with us. If they were not, we would fit right in, based on how we are dressed. We do fit in, my love. We just must not compare ourselves to people who are better at this sort of thing. Just be confident in us.\""
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "romance novel",
        "lesbian",
        "emotions",
        "humour",
        "threesome",
        "music"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/freja-and-jeanie-ch-04"
}