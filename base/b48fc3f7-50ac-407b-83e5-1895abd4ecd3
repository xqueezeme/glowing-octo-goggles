{
    "title": "Tales from the Shack: Nobody",
    "pages": [
        "***\n\nAnother Tale from the Shack. This one is after Pogo and Spooky. Really it fits right before the last paragraph of that story. You don't have to read that one to get this one, but it will make it better. There is no graphic sex in this story line. Special thanks to sbrooks103x and Crkcppr for editing and beta reading it for me. Any remaining errors are entirely mine -- probably added after their assistance. And thanks to everyone for the encouragement and support.\n\n***\n\nI'm nobody.\n\nThe woman staring across the sad, flaking grey metal table clearly knew that already. She never bothered asking my name.\n\nJust gave a dismissive glance at me as if to try to figure if I had any use at all. Just a raggedy-girl crumpled in the chair in front of her.\n\n\"Fifteen years. You're mine for fifteen. If the police had rolled you up, you'd have probably been sentenced to twenty. Maybe gotten parole after six.\"\n\n\"So why fifteen, if it's six?\" I wasn't even sure I cared anymore, but I had the sense that looking weak to her would be a very, very bad idea.\n\n\"Because the police didn't catch you. We did.\" She paused, waving her hand dismissively, \"Well, he did. And you may not understand it, but that was a death sentence.\"\n\nI opened my mouth to argue, but nothing came out. She was telling a cold unvarnished truth. I'd been dead. Lying in a cold grave in the basement of a house. I knew, absolutely, knew that I was dead. My life had ended and it didn't matter to anyone. The only one who would have even realized I was missing was lying in the grave next to mine.\n\n\"Who is he?\"\n\n\"That's not really important, is it? The important part is that you were dead the second you walked into that house.\"\n\nThere was no arguing with that either - the white-haired guy had put Duarte down so fast and smooth I still hadn't figured out how he'd done it, and I'd been looking right at him. I'd been in, and seen, plenty of fights. But nothing like this. It was more like watching a lion attack on a nature show. Or a crocodile come out of nowhere.\n\nHe'd played us. The limp, the stiffness that had gotten my attention, and convinced me he was a good target had been a lure.\n\nWhenever I thought back to it, I could still feel it.\n\nThat terrified, startled, feeling you get when you are just starting to drift to sleep and it suddenly feels like you're falling.\n\nYour leg kicks out.\n\nYour heart explodes.\n\nAnd after a fraction of a second, you calm down and try to relax.\n\nExcept I hadn't calmed down. Because I wasn't in bed and I wasn't going to wake up.\n\nI was trapped in a suddenly too-small room with a real predator.\n\nI'd managed to suppress my panic just enough to try to run and found the door somehow locked to trap me in. When I turned around, he was standing stone still over Duarte's bloody form, not even breathing heavy.\n\nThere wasn't any question; this was the end. I would be killed and nobody would ever know or care what happened to me.\n\nI was so stunned by how quickly everything had turned I went numb. No fear, no panic, just acceptance of my fate.\n\nBut it hadn't happened. For his own reasons, he'd decided to let us live.\n\nNot unscathed, in Duarte's case.\n\nAnd I wasn't sure I wouldn't have been better off dead.\n\nThe grimly amused woman across the table from me had made it perfectly clear without saying a word that \"dead\" was still an option. Maybe even the preferable one, as far as she was concerned.\n\nI only knew her as \"Donna\". That was all her guards called her, all anyone ever called her. It felt more like a title than a name.\n\nI waited.\n\nShe glanced down at a piece of paper then back up at me, calculating.\n\n\"You do what I tell you or we finish what he started. He thought you might have use as a bird dog.\"\n\nSeeing my confusion, she clarified herself. \"He thinks you can follow people.\"\n\nI tried to suppress a little smile at that. He'd actually seemed impressed, and for some stupid reason that felt important to me.\n\n\"Don't get too happy. You're a throwaway. You don't know anything. The important thing is that you're clean. Unknown.\"\n\nShe paused, looking through me cold eyes. \"The important thing is that you're nobody.\"\n\nNobody.\n\nAt least they gave me some oversized jeans and old tennis shoes to go with my sweatshirt before they took me back to a room and locked me in. I pretty much sat and rotted in what looked like an old-school room with painted over windows for an eternity, until one of the guys I was thinking of as one of \"Donna's Dobermans\" opened the door. Barely looking at me, he gestured me to follow and led me out to a half-rust beater car. A skinny, ragged, washed-out guy in a faded, tattered, brown crew cap and a jacket that might have started off blue about two decades ago, was sitting in the driver's seat, with a lost, spaced-out expression.\n\nThe Doberman just turned and walked away toward an alley, leaving me standing by the car. He hadn't said a word.\n\nThe driver looked up and gave a halfhearted smile that was missing a few teeth. \"Hop in. I'm Tommy, your cruise director.\"\n\nI shrugged and walked around the car to the passenger seat. He seemed somewhere between thirty and fifty, colorless, brittle. Like he'd just crumble away at any second.\n\nI fumbled my way in, sweeping a couple hamburger wrappers off the battered used-to-be leather seat, and keeping an eye out for any rats that might still be alive. From the smell, I suspected they'd died of black mold.\n\nOnce I was in, he looked over at me with the slightly jittery eyes of a speed addict. \"What do I call you?\"\n\nNot \"What's your name?\" I noticed.\n\nI thought for a second. \"Spooky. Just call me Spooky.\"\n\n\"Cool. S'all good, Spooky. I'm taking you to your new home, the Ritz Carlton.\" He paused and shrugged with a slightly crazed half smile. \"Maybe not the Ritz, but the doors lock, mostly. And the toilets flush, and sometimes you can even get hot water.\"\n\nHe scratched underneath his cap for a second, leaving a few strands of wispy light brown hair sticking out. He fumbled in his jacket and pulled out a ratty looking envelope, shoving it at me. \"Your key's in there. And a cash card --there's a PIN number on the back. And an unlimited subway card. Your cash card has $500 dollars, and it will be loaded with another $500 every two weeks.\"\n\nEnough to live on, but not really easy to build enough to run with.\n\nWe drove through a maze of streets, each one worse than the last until he pulled in front of a sleazy 1950's two story motel. The sign was broken out and unreadable. The parking lot was edged with dead weeds.\n\nHe stopped in front of the main entrance. \"There's never anybody on duty at the front desk. You're in room 223. Next to Amber.\" There was a hint of something when he said \"Amber.\" Something, a tone, a feeling, maybe, in his voice.\n\n\"How do I...\"\n\n\"You don't. They'll call when they need... anything.\" He seemed to pause heavily at that word, and for a second I really considered that maybe \"dead\" might have been my best option. \"If they need you, they'll call between 4 and 5 in the morning. \"\n\n\"What if I'm not there?\"\n\nHe shrugged. \"I don't know. But I don't think you want them to have to go looking for you.\"\n\nHe pulled out without saying anything else.\n\nI made my way past the desk to the stairs and down the hall to my room.\n\nFaded. Stained. There were more holes than carpet, and the peeling veneer desk next to the bed was a collage of cigarette burns and coffee cup rings. The only things on it were an ancient liver-colored phone and a neat stack of maps -- Washington DC, Arlington, Rosslyn and so on. The maps might as well have had \"study me\" printed on them.\n\nThe closet had a battered, off-kilter door and the bathroom had no door at all. A fragment of one hung from the top hinge though.\n\nAt least there was toilet paper.\n\nI'd been sitting on the folding metal chair by the desk trying to make sense of the maps for an hour when somebody knocked hesitantly on the door to my new home.\n\nA watery-eyed, bone-thin bleach-blonde girl stood there. Garish makeup and gold lame shorts with a white fur-trimmed jacket made her profession pretty clear.\n\n\"You must be Spooky. Tommy told me. I'm Amber.\" She held up a white paper bag. \"Indian food. You okay with that?\" Her voice was slightly nasal, the way characters in movies from New Jersey talk.\n\nI didn't even really have a chance to answer, she just walked past me and plopped her skinny butt down on the bed.\n\nAs much as her skinny, 90-pound ass could \"plop\", anyway.\n\nShe kicked off ridiculously tall heels and sighed with relief.\n\nShe began to pull Styrofoam containers out, standing them precariously on the bed. \"We have chicken vindaloo... and... chicken vindaloo.\" She looked up at me with a slightly apologetic, fragile smile. \"I like chicken vindaloo and I didn't want to take the chance you'd choose it.\" She pulled a couple of bottles of water out.\n\nI closed the door, realizing I hadn't eaten since... since sometime before Duarte and I had run afoul of the white-haired man. I even kind of tried to smile when I picked up one of the containers and walked back to the pulled out chair.\n\n\"Thanks. I'm starving.\"\n\n\"Confusing, isn't it?\"\n\n\"Who are they?\"\n\n\"We don't ask them, it's probably not a good idea.\"\n\n\"I can see that.\"\n\n\"Tommy thinks it's some kind of syndicate thing. I think it's some kind of industrial spy stuff. The guys I, uh, entertain? Well, they're usually pretty flush.\"\n\nI had my own ideas about it, but I sure as hell wasn't going to tell anyone I'd just met. We stopped talking for a while. After not eating for so long, the spicy food tasted better than I'd even dreamed food could taste. I finally stopped when only raw Styrofoam squeaked under my plastic spoon.\n\nShe put her container on the floor and laid back with her legs dangling off the edge of the bed.\n\n\"I'm not asking, but you must have really, really fucked up to be here. We all did. That woman...\" Amber shuddered, \"she ain't playing.\"\n\n\"I noticed.\"\n\n\"She doesn't care what you do when she's not using you; I'm trying to build up a little money...\" she hooked the strap on one of her spike heel shoes with a toe and waved it around to make it clear just how she was earning the money. \"She doesn't care.\"\n\nI shrugged. \"Thanks for the job offer, but that's not my thing.\"\n\nShe smiled up at the ceiling without looking over. \"Didn't think it was. Whatever you do though, don't get in real trouble. There was a guy -- he was a mook, did strong arm stuff, a leg-breaker. Mostly played the heavy in badger games. He got busted for robbery and assault while he was here -- he had this room, actually -- ended up hanging himself in jail.\" She sat up and shot a serious look at me. \"Thing is, he wasn't the type to kill himself. He was a really big guy and he wasn't afraid to go to prison.\"\n\nIt felt scripted, artificial, like she was giving a formal warning. \"I got the idea.\"\n\n\"Seriously. Tommy's worried you're gonna run. They'll find you sooner or later.\"\n\n\"I don't have anywhere to go.\"\n\nShe shrugged dramatically. Kind of like one of those actresses in really old black and white movies. \"Story of my life. Nowhere to go. \"\n\n\"So how long...?\"\n\n\"Two years ago, I promised them ten years for getting me out of the prison sentence. I was holding a kilo of coke for my boyfriend. Got caught with it and he bailed.\" Her face twisted in disgust, though with her ex-boyfriend or herself I wasn't sure. \"Of course. Public Defender told me I was looking at 15 years if we bargained it down. Then that woman showed up...\" she trailed off for a second, maybe thinking about decisions. \"She told me that all I had to do was keep doing what I'd be doing anyway, but for her. She'd make it all go away.\"\n\nShe stopped and focused back at me. \"I do what they tell me to do, wear what they tell me to wear, go where they tell me and do my best to screw whoever they tell me to screw. They don't even use me all that often -- once a month, maybe twice, usually not at all.\"\n\n\"And?\"\n\n\"And nothing. They don't explain why, they don't tell me anything 'cept what I need to know to do my part.\"\n\n\"Tommy?'\n\n\"He's a good guy.\" I got the same strange, not-quite-right, vibe from her that I got from Tommy. \"But he's a mess.\"\n\n\"Speed?\"\n\n\"And a little blow sometimes. He's trying to forget.\" She looked down at the floor. \"He used to be an emergency room nurse. His wife was a nurse too. When she had their baby, it was a blue baby. Ya' know that can only happen when the mommy and the baby have different blood types? Tommy and wifey had the same blood type.\" She glanced over at me. \"You know what that means.\" I nodded. \"Tommy figured out who the doctor banging his wife was and started a fight with him in right there in the emergency room.\" There was a hint of pride in her voice. \"Ended up sentenced to five years for assault.\"\n\n\"She got him out of it?\"\n\n\"Oh, no. He did three years and then got paroled. But he was already hooked when he was a nurse, and when he got caught with speed while he was still on parole, she showed up.\"\n\nTommy definitely didn't look like prison would have been easy for him. \"And the doctor?\"\n\n\"Tommy's wife divorced him while he was in prison and then married the pig. Or maybe the doctor married the pig. Whatever.\" A slight scowl and a hint of anger crept into her tone. \"At least he made the asshole remember him. He was bigger than Tommy and beating him real good until Tommy tackled him over the edge of one of those ambulance beds with the handrail raised. 'Crack!'\" She made a breaking motion with her hands and moved her head in that peculiar way only Jersey girls do. Her voice suddenly sing-songed for a second. \"The Doc's in a wheelchair for life.\" She smiled, a lurid, too-wide smile.\n\nMaybe Tommy was a little tougher than he looked.\n\nStill, I heard it in her voice and almost bit my tongue at the irony of it. Tommy's wife was screwing another guy and it ended their marriage and put Tommy in prison. Now he obviously had a thing for an honest-to-God streetwalking whore. And she just as clearly had a thing for him.\n\n\"I wasn't asking before, but since you asked me?\" She let the question hang.\n\n\"Me and a friend did some home invasions, and a guy got shot. Cops didn't catch us, a friend of the guy did.\" I stopped, remembering. \"Scariest man I ever saw. He was going to kill us, but instead he hurt my friend real bad, then turned me over to her.\"\n\n\"Somebody like maybe one of those guards of hers?\"\n\nI shook my head, shivering a little. \"He makes them look like toy poodles.\"\n\nAmber nodded once. \"I know they have some real hard-cases. Before she left, Candy used to work my corner; Tommy dropped her off there, just like he does me. One of the pimps threatened her and Tommy. Some guys just kind of showed up. The pimp got hurt bad that night. Real bad. Along with about a dozen other guys. Bad busted, knees, elbows, trigger fingers all smashed with hammers.\"\n\nI felt that falling sickness again. \"I think... that may be kind of a signature thing. That's what happened to my partner.\" I didn't tell her that the white-haired man had made me do it to Duarte myself.\n\nThat I either did it or we both died.\n\nShe studied the threadbare carpet for a second. \"Yeah...\" she flashed a weak smile. \"Well, they made their point. I don't get hassled.\"\n\n\"So, what happened to Candy?\"\n\n\"Her time was up, she just left.\" There was a hint of fear, a taste of desperate want-to-believe in that.\n\nBut I don't think she believed herself any more than I did. Not really.\n\nI faked a smile. I know it wasn't very convincing, but it seemed to help a little.\n\n\"I'm pretty tired.\"\n\n\"Yeah, me too.\" She picked up the containers and dropped them back in the paper bag. \"The dumpster is out front. Housekeeping is kind of slow. As in I ain't seen anyone in two years. So if you don't want any more bugs, rats, or mice than already live here, you gotta drop your own trash off.\"\n\nShe stopped at the door. \"It ain't all bad, you do your thing - whatever your thing is - and they leave you alone, mostly.\"\n\n\"Thanks.\"\n\n\"You get bored or just want to hang out, I'm usually right here during the day.\" She pointed over toward what I assumed was her room. \"Just not on Sundays. Never on Sundays.\"\n\nShe walked out in bare feet holding her shoes in one hand. Brave girl, I wasn't sure the carpet wasn't septic. And I'd slept behind more than a few dumpsters in the last few years.\n\nShe'd been making sure she told me the rules -- and she seemed to think somebody was listening. It fit with what I sensed of Donna's people.\n\n***\n\nI spent my days exploring the city. DC is nowhere near as large as Chicago, and much easier to move around in by subway. I sought out a thrift store, a discount grocery. A pawn shop.\n\nClothes from the Salvation Army, clothes that would swallow me, make me the raggedy homeless girl. Human debris, not just something people didn't notice; I wanted to be something people avoided noticing.\n\nEvery morning, waking up at four, waiting for the phone to ring. Wondering if it ever would or if this was some kind of purgatory. Sometimes I wondered if maybe I had died. If maybe I was really buried in that dirt floor basement. Sometimes during the day, I picked it up just to hear a dial tone. Make sure it was working, I told myself.\n\nAmber knocked on the door occasionally. \"To talk.\" she said. Always with some kind of food. Indian, Thai, Cuban, Mexican. Always with the wariness of a rabbit in room full of foxes. Always trying to feel me out, to see what I was thinking of doing. Stilted. Desperate to protect herself and Tommy from the consequences of anything I might decide to do.\n\nI got the impression she didn't know if they would blame her. But she was terrified to take a chance.\n\nI was right about her and Tommy. He stayed in her room on Sundays, they walled themselves off from the world until Monday. Sometimes I could hear muffled domestic sounds. And sometimes laughter. As if they were real people.\n\nIt was almost two months before the phone range. An odd clicking ring, like the phone had seen some hard days.\n\n\"Out front. 8AM.\"\n\nThe line went dead, then came the rasping croak of a busy signal.\n\nI tried to sleep more, but in the end just lay awake until it was time to go.\n\nWhen I walked out, Tommy sat in his rattletrap of a car waiting.\n\nHe handed me a picture.\n\n\"Study him, then give it back. Just follow and report.\" He handed me a little black notebook and a couple pens.\n\n\"Report what?\"\n\n\"I don't know. Whatever the target does, whatever you think, maybe. They didn't say.\"\n\nTarget. That was the word. \"How long?\"\n\n\"All week. Until Saturday night. There's a phone number inside the notebook. Call every night at midnight and just listen. If the plan changes that's how they'll let you know.\"\n\nThe \"target\" was staying at a hotel, one of the aging, less fancy ones. I picked him up less than an hour after Tommy dropped me off in a back alley.\n\nSix days of tourist shit. He seemed intent on hitting every museum, every memorial and every food cart in the city. Six nights of watching the hotel. Watching the housekeeping crew spend half the night on the loading dock and arguing loudly in Spanish and laughing raucously.\n\nWatching the night desk clerk slip out to smoke pot with his girlfriend in her car in the parking lot across the street.\n\nSix nights of dead air on the phone number.\n\nI didn't know what to write, so I wrote everything. Where he went, what he ate, what he looked at. I snagged receipts from his table. The names of the housekeepers with their schedules, the desk clerk. Even the desk guy's girlfriend. Along with her bra size, because they didn't always just smoke pot in that car and they left the front window down while they were in the back seat.",
        "I made my last call at midnight on Saturday.\n\n\"This number is not in service. If you have dialed it in error...\"\n\nI made my way back to my hotel, my room. At 4 in the morning on Monday my phone rang again. I was instructed what to do with the notebook. I dropped it into a hat of a grizzled old black panhandler outside the Capital South metro station. He just glanced up with leaden eyes and went back to talking to himself.\n\nIt was another three weeks before my phone rang again. Two days of following this time. Then another four weeks later. It slowly fell into a rhythm over the course of months.\n\nSometimes it was a day or two, sometimes it was a week. Occasionally, a room key card would be included in the notebook and a midnight message might instruct me to get something out of the target's room, usually a laptop, or a briefcase - once it was a shirt. Then I took it outside to meet a van -- a plumber, a carpet cleaner, a furniture delivery van - in a specific place. I waited outside the van and was given the \"whatever\" to put back. None of us ever said a word.\n\nThe van drivers changed as regularly as the vans. Once, I recognized the driver as the grizzled old black panhandler, neatly groomed and wearing an electrician's uniform. His nametag said \"Jackson.\" When he handed me the laptop, he saw the recognition in my eyes and gave me a wordless wink of recognition.\n\nI could tell Amber and Tommy were still worried about me, but I'd told her the truth. I had nowhere else to go.\n\nTime went by faster than I expected; it seemed like I was always a lot busier than Amber.\n\nIt was five years before I saw Donna again.\n\n***\n\nInstead of a four in the morning phone call, it was a tap on the door. Tommy was leaning on the doorframe; head down, idly biting his lower lip.\n\n\"She wants to see you.\"\n\nThere was no need to explain who \"she\" was, even if we'd never said her name. He followed me in and waited.\n\nI walked back to my closet and threw a set of clothes on the bed. Tommy stood by while I stripped the giant t-shirt I slept in off, and pulled them on.\n\nTommy didn't even seem to notice, but then he only had eyes for one girl.\n\nWe walked out to the car in silence and darkness.\n\nI didn't bother asking Tommy if he knew what Donna wanted. He wouldn't know. And if he did, he wouldn't be stupid enough to say as we drove through dark streets.\n\nAnother ruined building with painted over windows and the smell of urine on the steps.\n\nTommy stayed in the car while I walked in through the gaping front door and headed toward the only light there was, a single door open in the hallway. Donna was sitting at a twin to the last desk I'd seen her at. Or maybe it was the same desk and they'd brought it for her. What light there was came from a single, cordless camping lamp on her table.\n\n\"Sit.\" She waved toward an old wooden dining room chair in front of her. One of her bodyguards loomed in the darkness behind her.\n\nI sat. Good puppy.\n\nShe pulled a sheet out of her folder. \"He was right. You have talent. Your reports are detailed, you improvise well and you don't panic.\" She looked back down at the sheet. \"And you're a ghost. When we've tested you on our own people, they don't even know you're there. Even when we tell them to keep an eye out. You may be the best we've ever had.\"\n\nFor a fraction of a second I wondered if she'd told the white-haired man. For some reason, I really wanted her to. Realizing that shocked me into silence. I hadn't thought about him in a long time.\n\nShe looked up at me with an arched eyebrow. \"And you don't talk too much.\"\n\nI just waited, which seemed to be what she wanted.\n\n\"We're going to teach you some things. Make you more useful to us.\"\n\n\"What kinds of things?\"\n\n\"Security systems, locks, alarms, hotel key card systems. Room search techniques. Some techniques for copying computer and phone data.\" She paused. \"Do you speak any Spanish?\"\n\n\"Maybe a few words. Mostly insults.\"\n\nI saw a hint of a smile flicker on the corner of her mouth. She scratched a note. \"Housekeeping crews usually have a lot of Spanish speakers. So you'll learn Spanish.\"\n\n\"You'll be off for about six months. You'll be in New York City. I don't want you training around here.\"\n\nMy opinion or thoughts on the matter didn't appear to be necessary -- or desired. But it was better to warn her now. \"I never did well in school.\"\n\nShe didn't even look up. \"I know. Dropped out in ninth grade. Shitty home life, shitty school systems. Your assessment tests from grade school and child services are pretty clear that while you were behind developmentally, it wasn't because you weren't smart enough. But you really are just about as anti-social as it's possible to be without being a sociopath.\"\n\nI stared, trying not to show my surprise. Whatever, whoever \"They\" were, I was pretty sure it wasn't a criminal enterprise. Maybe a really big corporation, but the grinding, queasy feeling in my stomach was pretty certain that was wishful thinking.\n\nShe kept on without pausing. \"This makes you more useful and it will have some benefits for you, if there's something you want.\"\n\nWant. A rush of memories, a flash of sitting in that dimly lit basement across from a man....\n\n\"I want to meet him. Talk to him.\" The words were out before I even knew I was going to speak.\n\nShe looked up sharply. Silent. She knew I was talking about the white-haired man. And she was not happy about it.\n\nI knew I'd crossed a line. But I didn't know why it was so important to her.\n\nAfter a long moment. \"Why?\"\n\nMy heart started again. \"I don't know. He... he saw me. Nobody else...\" I just stopped. I didn't even know what I meant by that.\n\nShe blinked. Twice. \"We'll see. Maybe.\" She seemed a little off balance. \"If you see him, it will probably be the last thing you ever do.\"\n\nThere wasn't much point in arguing that.\n\n\"Don't get cocky because of this. Just remember what's important.\"\n\n\"I know. I'm nobody.\"\n\nShe nodded grimly and handed me a bus ticket to New York City and a hotel key card folder.\n\n\"Listen for the phone.\"\n\n***\n\nFor the next six months, six days a week, I met with \"Maria\" and \"Brandon.\" I'm sure those weren't their real names. I know Rose wasn't mine.\n\nMaria taught me Mexican style street Spanish three days each week. Within two weeks I was only allowed to speak to her in Spanish and within two months we spent nearly every \"class\" in places where only Spanish was spoken. Restaurant kitchens, hotel laundry companies, a slaughterhouse. We even went to seemingly endless numbers of street fairs.\n\nBrandon was clean cut and athletic. Every day we met, he brought a backpack with something in it -- a lock system, a security camera, a mockup of a sensor or whatever. We spent the day taking it apart and putting it together. He would show me how to beat it or fool it -- sometimes it took tools, sometimes electronics. Then he would leave me an address and a time we would meet and use what I learned.\n\nThe scariest thing about Brandon was that I was sure he was military. The way he carried himself, the way he talked.\n\nWhich meant Donna definitely knew that I knew.\n\nTommy and Amber might be able to fool themselves, but I couldn't. I was sure I was right, and if I was, none of us would ever leave. They couldn't risk letting us go.\n\nOn the other hand, at least I got laid for the first time in five years. In all the jobs I'd been on, I'd more or less worked alone, but now I was breaking and entering into hotels, businesses, and private houses with Brandon three days a week.\n\nThe rush of getting away with it, of not getting caught. It's very primal, very exciting. The first time, we'd just slipped away from a house -- a very, very expensive house with a very, very expensive security system, and were crossing a very large golf course. An overpowering urge, a wave of desire struck me and I just pulled him into the trees and started tearing at his clothes. Twenty minutes later we were racing in the shadows along the edge of the greens and fairways, flashing grins at each other like a couple of teenagers.\n\nAfter that first time, it pretty much became a ritual. We never said anything about it; both of us understood that it was more a release of tension for each of us rather than anything between us.\n\nThen it was over. Maria didn't show up, Brandon didn't show up and I just got an envelope with a bus ticket back to DC in it.\n\nThe first night I was back, Amber knocked on the door and walked in with a bag of chicken vindaloo as if I'd never been gone.\n\n***\n\nIn some ways, nothing changed; Amber, Tommy, 4 AM phone calls.\n\nIn other ways, everything changed. I wasn't just following anymore, sometimes I was given addresses, times, things to look for. Places to break in. I wasn't always working alone anymore either.\n\nSometimes a distraction operation was used -- a girl, never one I knew, would hook up with the target, and keep him \"occupied\" while I searched his room, his car, or use a device to clone his phone. The sheer number of different girls meant Donna's organization was far larger than I'd thought. Brandon had talked about this kind of thing. The girls were called \"swallows.\"\n\nAt first it was a little odd, quietly copying a laptop while listening to a couple in the next room.\n\nTalking dirty, moaning and screaming.\n\nI suppose it was inevitable.\n\nOne of the \"swallows\" was keeping the target very loudly and vigorously occupied in the bedroom while I did my part. From the squealing and gasping, the guy must have been rougher than the usual ones and I was feeling a twinge of sympathy for the girl.\n\nI heard the target imperiously order the girl to get him a drink from the hotel room bar just as I was almost done cloning the sim card from the target's phone. She strolled out of the bedroom, stark naked. She was a wreck -- mascara, eye shadow and lipstick streaking down her face.\n\nAmber.\n\nShe looked right at me but didn't say or do anything; she didn't even acknowledge me. Just quietly mixed a drink and carried it back to the bedroom.\n\nThat night she knocked on my door. She was obviously freshly scrubbed, wearing a bathrobe and carrying a bag I recognized as the type that usually contained a couple slices of Tivoli's chocolate cake.\n\n\"Hey, Spooks. Want some dessert?\"\n\nI just stood back and let her walk in. She looked a little frailer, a little more vulnerable without her makeup.\n\nShe pulled two small ribbon-tied white cardboard boxes out of the bag and handed me one before sitting on the bed.\n\n\"Love Tivoli's.\"\n\nWe sat on the bed, eating the rich cake wordlessly.\n\nAs she finished, she sighed contentedly and settled over to look at me seriously.\n\n\"It's all pretend. You know that, don't you?\"\n\nI shrugged.\n\nShe looked back in the direction of her room. \"It is, Spooky. Think about it. I sell fantasies. To make it work, I have to pretend there's some kind of human connection. Something emotional. Pretend to enjoy it, pretend to be or feel whatever it is they want. That's what most of them want.\"\n\nShe pulled her feet up to sit cross-legged, huddled under her robe. \"Then there's guys like 'Morton Gallagher, Esquire,' born with more money than God. Wants to be the big tough guy, so he picks up a girl a little smaller, maybe a little scared looking. Somebody who makes him feel like a big man.\"\n\nI waited for her to go on.\n\n\"So I look a little nervous, wear makeup that isn't waterproof, so it runs. Squeal and moan like he's too much man for me.\" She smiled crookedly. \"Think how funny that it.\" She gestured down between her thighs. \"We're made to push a 20 inch long, ten pound baby out through that. Do you really think Morty's 'six inches of steel' can really hurt if I use a little KY?\"\n\nI smiled at that. \"Maybe not.\"\n\n\"Gallagher is all about the big man thing, makes me fix him a ginger ale highball before we start, halfway through and then at the end. \"\n\n\"A highball?\"\n\n\"I think it's a thing he got from his dad. One of those passed-down-from-father-to-son things that guys have. He always starts off tripping on something anyway. He's usually pretty out of it by the time I leave. I always roll him on his side so he doesn't choke if he throws up. I don't think she'd like that.\"\n\n\"Probably not. \"\n\nShe looked at me with a kind of helpless look. \"This is what I do. Tommy understands. He drives and he treats bullet holes, knife cuts and overdoses for them. Sometimes he has to get rid of the ones that didn't make it. That's what he does, and he knows what I do. He knows I can't be what he deserves. We don't have choices anymore, not 'til this is... over. All I get... all we get, is Sunday. She lets us have that. Probably because Sundays are lousy days to do this stuff. I mean, who wants to see a hooker on a Sunday?\"\n\n\"That makes sense.\" I thought about my own request. \"Did she agree to it, or did it just kind happen?\"\n\n\"Tommy asked her for it. She didn't really answer, but neither of us has gotten a Sunday morning call since. During the rest of the week he and I just work together.\"\n\nIt was none of my business, really, but I asked. \"So how does Tommy feel about you 'earning extra money,' anyway?\"\n\nShe actually smiled a little. \"He gets it. Like I said, what choice do we have? I have to show up on the street regular anyway, or everybody would think I'm a cop. That'd be a real bad idea, even with them knowing I'm protected. You could fake it for a while, maybe, but not day after day, year after year. Tommy understands. And I use condoms every time.\"\n\n\"Maintaining your cover.\"\n\n\"Yeah, that.\" She flicked the lid on her cake box up and down a few times, and looked sharply at me, then down at the box lid.\n\nI looked down at my own. The inside of the lid was covered with writing.\n\nShe looked immensely sad for a second, then got up stuffing her box in the bag, and walking to the door.\n\n\"I'm just tired today, Spooks. Thanks for listening. Sometimes I just need someone to talk to.\"\n\nAnd she was out.\n\nI stared looked at box lid while I pretended to study a map of Arlington.\n\n***\n\nSpooks,\n\n If anything happens to me, take care of Tommy. He doesn't deserve any of this. He's not so good with money, so I need you to help him.\n\nPlease.\n\nAmber\n\nThe rest of the note just explained that where she'd been hiding the cash from her 'cover' nights.\n\nShe couldn't tell Tommy where the money was. Addicts are addicts even if you love them. I realized I was the only choice she had.\n\nI had to ask myself: in what kind of shit-world do I become the one to trust?\n\n***\n\nAmber never said anything about it after that. But Tommy did. Sort of. On the way back from a job, he pulled into a diner parking lot with no warning, saying he'd missed lunch and was getting the shakes from not eating. We sat in a booth and stared at each other for a few minutes.\n\n\"Amber says she talked to you, about us.\"\n\n\"Yes...\"\n\n\"We're not stupid Spooky, we know how this probably ends. One of us dies, both of us die, or they decide we aren't useful anymore.\"\n\nThere just wasn't much to say to that.\n\n\"I just wanted to ask you to take care of Amber if anything happens to me. She's a good kid. She got fucked over by that asshole boyfriend of hers. He put her on the street, made her carry drugs. \" He gave a tilted gap-toothed smile. \"Somebody has to watch out for her, she has a taste for loser boyfriends.\"\n\n\"You think you're just another bad choice?\"\n\nHis smile faded a bit. \"Seriously, is there any way I would ever be a good choice? The only day I'm clean is Sunday. I can do that, but I'm full-blown tweaker for fuck's sake. I'm one really bad day from an overdose. I saw enough overdoses when I worked the ER, I know where I'm headed.\" He shook his head in a jittery, nervous shake. \"And I have a lot of bad days, Spooky.\"\n\n\"She thinks you're a good choice.\"\n\n\"Then you're probably smarter than me or her, just take care of her, will ya?\"\n\n\"I'll probably get sick of chicken vindaloo, but if anything happens I'll keep an eye on her.\"\n\nHe smiled tightly with too-shiny red eyes. \"Thanks. Don't tell her I asked, okay?\"\n\nThe way he said it, he didn't know she'd already asked me to take care of him.\n\nThe world was maybe a tiny bit less shitty when we walked out of that diner.\n\nWhen I had to do a house three days later, I was supposed to make it look like a break in. Steal a laptop along with whatever I thought would look like a spur of the moment burglary.\n\nIt was a spectacular house -- all marble and exotic wood. Rich people spending money to show how rich they are.\n\nI found the laptop, then took jewelry from an armoire and some small electronics. But on my way out, I saw a wine refrigerator in the kitchen and pulled a couple bottles of champagne out of it.\n\nI turned the laptop over to the ever-waiting van and dumped the electronics and jewelry in a storm drain.\n\nThe next morning was Sunday, and I did something I was sure would never do. I knocked on Amber's door at ten.\n\nShe answered, wearing a pair of jeans and a big flannel shirt. No makeup, hair just pulled back. This was Tommy's girl, the real girl I'd gotten only the smallest glimpses of.\n\nShe was wearing a ring I'd never seen before. A little band with a small diamond. An engagement ring.\n\nOf course. She would only wear that on Sundays.\n\nShe just stood there studying me, not saying a word. Face utterly impassive. I'd broken the one rule she'd asked me to keep.\n\n\"I missed the party, but I just had to give you guys an engagement gift.\"\n\nI held out the bottle to her.\n\nShe took it without looking at it, smiling a real smile.\n\nThen she stepped suddenly forward, hugged me fiercely and whispered, \"Thank you.\"\n\nShe let me go and stood back. I could see her uncertainty about what to do so I shrugged. \"I have to get going, but give Tommy a hug for me.\" And walked away before she felt like she had to invite me in.\n\nBut I was smiling as I heard the door close behind me. Not everybody gets to celebrate their engagement, even years late with 1959 Dom P\u00e9rignon Ros\u00e9. I guess that's understandable since it runs forty thousand dollars a bottle on a good day. I wondered if they would ever look at the label, but I didn't really care. It's the thought that counts.\n\nI heard giggles and laughter late into the night that night.\n\nThe laptop turned up four days later at a pawn shop with classified weapons plans on it. The guy who owned the home was arrested. It was in all the newspapers.\n\nDonna wasn't even pretending to hide it from me anymore.\n\n***\n\nYou roll dice every day. Step off the curb into the crosswalk without looking, change lanes without thinking. Most of the time nothing happens, but sometimes, once in a while you roll snake eyes.\n\nSeven years, six months.\n\nIt was supposed to be an easy one, another Swallow Game. Maybe I'd grown jaded about it over the last couple years, but I wasn't nervous at all. Give the distraction time to work -- maybe ten minutes, and copy the cell phone memory and sim card, like usual.\n\nIt was on the third floor of the hotel, a corner suite. I glanced in the front of the hotel at the nearly empty lobby as I walked past, then around the back to the loading dock. I'd already rigged that lock earlier in the day, disconnecting the alarm and making sure my stolen punch code worked.\n\nThe door was already partly open -- just half an inch, but enough that the latch hadn't caught. I felt the hair on the back of my spine stand up. My route was blown. But something kept pushing me forward through the door, glancing at the green lights of the alarm panel, just to be sure. Across the loading dock and up the maintenance stairs.\n\nTommy was lying on the third flight of stairs -- awkwardly sprawled, feet up toward the third floor landing, head down. Eyes wide open, unblinking. A hole just above his right eye, ringed in black burn marks. Not much blood at all. He didn't look scared, or angry or anything, really. Blank. Just an upside down doll on the stairs.",
        "I sprinted the rest of the way, the pulsing sound of blood in my ears drowning out everything.\n\nThe key card worked perfectly, just as it was supposed to, and I burst in ready to swing my electronics laden backpack at anyone in the way.\n\nI was too late. And just as I somehow knew it would be, it was Amber.\n\nSlumped in a couch where she'd manage to pull herself. She hadn't even gotten undressed and her clothes were soaked with blood. I pushed her over, desperate to help, but as soon as I saw her blank eyes, I knew it was too late.\n\nNo last words. Another broken doll just tossed to the side. I stood up, shaking, and caught a glimpse of myself in the mirror behind the bar, looking past the whisky bottle and ginger ale. Pale, wide eyed, another doll waiting to be broken.\n\nI looked at my bloody hands for a minute and began to woodenly clean up. Make sure I'd left no prints. I took one last look at Amber, touching her hair.\n\nI stood slowly, straightened up and walked out.\n\nDown to a gas station where I called the number in my note pad. It was off schedule, but that had to mean something to them. There was a click on the other end, but no voice.\n\n\"It went bad. Two... two dead.\"\n\nI hung up. I didn't know what would happen, so I headed back to my room.\n\nI'd barely sat down on the bed when the phone rang.\n\n\"Out front 10 minutes.\"\n\nA carpet cleaning service van pulled up and the side door opened. I got in and got a glimpse of \"Jackson\" as he put a black cloth hood over my head. I didn't fight it. I didn't care anymore.\n\nWherever we were, we parked in a parking garage and I was walked through several doors and sat in a chair. Nobody tied my hands or put handcuffs on me. They could sense that I'd given up.\n\nWhen the hood came up, it was Donna that took it off. We were in some kind of office -- a pretty nice one.\n\n\"What happened?\"\n\nI numbly went through the events. My voice seemed too steady, too far away.\n\nA couple minutes later a guy with a hooked mustache and a build like an MMA fighter came in.\n\nDonna looked over at him. \"The op is blown. The swallow and the delivery man are both KIA.\"\n\n\"Shit. We can use blackmail, tell him there were witnesses.\"\n\n\"That's about it. Give him a month to stew on it, then pop it on him. Cut him a deal; a cover up in exchange for the information on the dual use tech.\"\n\nThe guy nodded. Then looked over at me with narrowed eyes. \"This is the Nobody Girl?\"\n\n\"That's her.\"\n\nHe studied me for a second. \"I was starting to think she wasn't real.\"\n\n\"I'm not even sure she's real.\" Donna turned to me and handed me the hood. \"I need you to put this on, they're going to take you back to your room. \" She paused. \"I would've let them go in a few months. I really would have.\"\n\nShe said it quietly, like she needed me to believe that. Like maybe she needed to believe it.\n\n***\n\nI sat in my room for two days. Trying to catch my breath. Trying to think. Trying to figure out why I was even doing this. Let them kill me. It didn't matter.\n\nI managed to walk over to Amber's room, let myself in. It was locked, but locks barely even slowed me down anymore.\n\nAmber's room was a little better than mine, at least her bathroom had an actual door. But she'd done things. Put up pictures, put out things that made the room more like a little home. A champagne bottle held a bunch or flowers on the a little caf\u00e9 table with two chairs.\n\nHer closet was separated into two parts. On one side were gaudy, flashy things, with high heeled boots and shoes. On the other side were jeans, t-shirt, flannel shirts, and a couple sets of clothes set away from everything. A pretty pale blue dress and a man's suit, with a nice shirt and tie.\n\nI wondered if they ever went out like that or if they just had dinner together on Sundays dressed up. It didn't matter, I supposed. As long as it was Sunday.\n\nI touched everything, looked through everything. And I didn't find anything that helped.\n\nI went back to my room and lay awake for hours.\n\nIt hurt. I'd never felt like this. I couldn't explain it, couldn't describe it.\n\nAnger, so much anger. At first it was aimed at Donna, but Donna hadn't done this to them. She'd taken advantage of it, but she'd just repurposed some ruined lives.\n\nI waited until after five in the morning, after any possible phone call, and slipped out. I left everything but some clothes and headed out to keep some promises. Amber's stash of money was in a bunch of plastic baggies in a hotel rooftop water tank. Seventeen thousand dollars. She must have saved nearly every dime of her \"cover\" money.\n\nI had places to go. Fuck Donna.\n\n***\n\nI waited in the condo for hours, waiting for him to get home. Listening to him shower and fix himself a last drink before turning in.\n\nWarren Gervais, age 38. Occupation: Nightclub owner, pimp and drug supplier. Former \"boyfriend\" of Amber Coyle.\n\nI'd watched him for over a week. I was practically living in his condo with him. He'd kept on driving on, ruining lives and screwing people over. I looked for any sign of redemption, anything that might make him worthwhile.\n\nI didn't want to find any, but I made myself look. For Amber's sake. She'd gotten a little bit of redemption and she'd have wanted anyone to have a chance at it. She was a better person than me.\n\nIt didn't matter, there just wasn't any good to find.\n\nHe fell deeply asleep, courtesy of the GHB I put in his drink. Just for the irony of it, I bought it at his own nightclub from one of his own pushers.\n\nWhen he finally woke up, he was tied up in the middle of his own living room.\n\nAs confused as he was waking up like that, it got worse when I walked over to where he could see me.\n\n\"Hello, Walter.\"\n\nI pulled out a small photo of Amber and held it up for him -- it'd taken some looking, but I'd found an old high school yearbook picture of her.\n\n\"You remember Amber? Nod if you do.\"\n\nHe shook his head violently.\n\n\"Bullshit. I know you do. You whored her out, you used her. You ruined her life.\"\n\nHe stopped.\n\n\"I just wanted you to know that she found someone and was happy. She'd probably have forgiven you.\"\n\nHe had a look of hope, of relief in his eyes.\n\n\"She probably would have. But I'm not her. I don't think I've had four real friends in my whole life and what you did to her killed her. Eventually.\"\n\nHe started to try to squirm out of his bonds. I walked around behind him and stood on one end of the stocking that was loosely tied around his neck, then rolled the other end around my gloved hands.\n\n\"Burn in hell, Walter.\"\n\n***\n\nTommy's ex and her husband were a little harder to find, I had less to go on. And I wasn't really sure what I was going to do. Tommy wouldn't have wanted the kid to suffer for something her mom did. The girl was fifteen, so she could probably survive without parents, but Tommy would have been horrified if I'd sent her down a path that would likely end up like me or Amber.\n\nTommy's ex wasn't a nurse anymore, just another full time trophy wife to a rich doctor. She spent a lot of time doing the rich-bitch shit that trophy wives do. Charities, spa treatments, cross-fit, yoga, spin classes, \"finding themselves in art\" -- whatever the hell that means.\n\nThe doctor spent most of his time working for a research hospital and lecturing. Most of his time. He had hobbies, too.\n\nI was waiting for her when she walked out of the shower into their bedroom.\n\n\"Have a seat, Carrie.\"\n\nShe looked at the automatic and sat. Good puppy.\n\n\"Who are you?\"\n\n\"You know what a guardian angel is, right?\"\n\nShe nodded, wide eyed.\n\n\"I'm the opposite, I'm here to personally fuck up your life.\"\n\nShe started to speak before I cut her off. \"Shhhh.\"\n\nI looked at her. Nothing special at all. Nothing to drive a man over the edge like Tommy had gone.\n\n\"I don't know what the fuck Tommy saw in you.\"\n\nShe had no idea who I was, but she could feel my anger and she thought on her feet. \"We didn't want what happened. I wanted to let Tommy down gently but I didn't realize Catarina would be a blue baby. That gave it all away.\"\n\n\"Were you even planning on telling him?\"\n\n\"Roger and I weren't sure what we were going to do. The whole thing... Tommy and I were on different shifts all the time. Roger and I just started as flirting, and ended up... out of control.\"\n\n\"So you sent him to prison.\"\n\n\"I didn't plan that. Roger was angry -- you know he's paralyzed, he'll never walk again.\"\n\n\"He deserves it. He earned it. Was Tommy supposed to be okay with your shit?\"\n\nShe looked down at her feet fidgeting. \"I thought we could sit down and work it out. I don't know how, but Tommy was always good at... compromise.\"\n\n\"I just wanted you to know that Tommy died a hero. A real one. Like you see in comic books. He sacrificed himself.\" Maybe not on purpose, maybe he didn't really know; but I knew who we were working for. I knew what we were doing.\n\nShe paled. \"He's dead?\"\n\n\"He and his wife died together.\" Close enough anyway.\n\nShe sucked in her breath. \"I didn't know he was married again. I... we lost track of him years ago.\"\n\n\"She was totally his, no matter how bad it got. And it was a hell of a lot harder than a few months of different shifts. A hundred of you wouldn't be worth one Amber.\"\n\nShe at least had the grace to look guilty.\n\n\"So here's the deal. You get three more years. On the day after Catarina graduates, I'm sending Roger these.\"\n\nI tossed pictures down in front of her. Her fucking her physical trainer. \"You're a fucking clich\u00e9. You made this easy. I've seen the pre-nup. Totally one-sided and you'll get fuck-all in the divorce. And just so you know...\"\n\nI tossed another set of pictures down. Roger never walked again after his encounter with Tommy, but his equipment worked just fine. These pictures had a dizzying array of nubile young med students earning extra credit in very inventive ways. Most of the med students were female, but certainly not all of them.\n\nI wasn't too surprised at what I'd found. I'd spent years following people, a lot of them rich privileged people. Faithfulness wasn't too common in their world. Hypocrisy was, though.\n\n\"You two should call the CDC, start a study. Neither one of you seems to know what a condom is. How the hell you haven't caught anything is beyond me. Maybe you can use these to try to break the pre-nup. After Catarina graduates. If you do anything before that, I'll kill both you and Roger. I mean that.\"\n\nShe looked at the pictures, trying not to hyperventilate. \"But...\"\n\n\"Three years. That's it.\"\n\nI left her sitting there trying to figure out what to do. It wouldn't matter, I had video of both of them, and in three years, I'd made arrangement with a lawyer for sealed envelopes to go to everyone I could think of. University boards, hospital and charity directors, newspapers. They'd be ostracized at best. It'd all be hypocrisy, of course. Few of the indignant voices of condemnations would be from anyone who wasn't just as dirty.\n\nBut that's how witch--burning works. Point at someone else -- someone who's made a mistake - and scream \"heretic\" so nobody does it to you.\n\nBesides, as long as I was still alive, I planned on coming back as often as necessary to make sure their lives stayed fucked up in new and interesting ways.\n\nEverybody needs a hobby.\n\n***\n\nIf I hadn't been so pissed off, I would have gone after Morton Gallagher, Esquire before the others. I hadn't forgotten the ginger ale highballs.\n\nDonna must have figured out what was going to happen. I'd been in his house before, but when I cased it this time, the security systems were state of the art. The type of systems you'd find on an Embassy. Brand new. Most of it wasn't available to the public. Even the insanely rich Gallagher's couldn't have bought it. But Donna wanted him alive. If I'd have had a few special pieces of equipment, I'd have ghosted right through it. But I didn't.\n\nI settled in to watch. For weeks he barely left the house at all.\n\nBut most people can't live like that for long, especially an uber-rich asshole who was used to having everything his way. So I used a different tool, one I did have. Brandon had called it \"Tactical Patience.\"\n\nI could almost feel \"Morty\" going stir crazy, losing his mind to boredom.\n\nHe lasted almost another month.\n\nI waited. I wanted to make sure he wasn't bait.\n\nPatience.\n\nI knew where he was going anyway; \"Morty\" needed to feel like a big man.\n\nIt took me a few hours to find the hotel. Always the honeymoon suite, complete with hot tub.\n\nFor another month, I watched over him. Checking for surveillance teams, slipping in and out of the hotel, watching for anything out of the ordinary.\n\nFinally, I was convinced. Donna had either decided I wasn't a threat or had hung him out to dry.\n\nI waited until the 'working girl' left his room; from the way she was holding her face he needed more than a few squeals to feel like a big man now. She was skinny and wore a bleach blonde wig along with her fresh bruises.\n\nHe was sitting in the hot tub, pretty buzzed when I slipped in. A lot more than a few highballs. Barely able to even focus his eyes on me when I stepped in.\n\nI held the gun on him. \"Stay in the tub.\"\n\n\"What... what are you here for?\"\n\n\"For Amber. And Tommy.\"\n\nHe looked lost. \"Who's Tommy?\"\n\n\"The guy on the stairs.\"\n\n\"Wait... that woman, the one with the guards, she said we had a deal. She'd cover it up if I got her what she wanted.\"\n\n\"I'm not her. Why did you do it?\"\n\nHe looked around desperately, looking for a way out. \"I was so high, I don't even remember it very well. I remember doing it...but I don't remember why.\" He shook his head. \"I tried to leave the back way and ran into the guy on the stairs.\"\n\nI didn't say anything.\n\n\"Shit. You're her, aren't you? The one she warned me about.\" I could see panic setting in. \"What does it matter, it was just a goddamn whore!\"\n\nI almost shot him right then, but his leg kicked up in front of me and I grabbed it, lifting as his head ducked under the water.\n\nI shoved the gun in my jacket pocket and lifted with both hands. He fought, but he had no traction and I was standing on dry ground. He tried to kick my hand away, but that didn't last long. Too stoned, too drunk. He couldn't keep his head above water. All he could do was splash. For a while.\n\nI held his leg up until a few minutes had passed without movement.\n\nLet his leg fall back in. Turn the tub up to max heat. Drop the whisky bottle - and another - into the hot tub.\n\nI hung the Do Not Disturb sign on the door on my way out.\n\n***\n\nI could have run. Mexico City maybe. Easy to hide in 9 million people.\n\nBut I didn't really want to. I could have purpose here.\n\nIt took months to find her, of course. Months to figure out the patterns and movements. Find the right rabbits and shadow them.\n\nWary and vicious as they were, they were still rabbits.\n\nIt was a red brick warehouse with an underground parking garage, near Georgetown with a dull blue and dark red sign that said \"Calliope, LTD.\"\n\nNo fence, just a low brick wall around the building and a bunch of concrete planters full of flowers. The kind of planters you surround buildings with to keep car bombs out. I could see dozens of things that had to be cameras or other sensors.\n\nI was calculating whether to find a way to slip in or wait until Donna left and simply follow her home, when I realized the right answer was neither. This would either work or it wouldn't.\n\nI went into Georgetown and bought a nice charcoal-grey business suit with a skirt. I'd never had anything like that before and I had to get the shop girls to help me figure out shoes and a purse and all of that.\n\nI even went and got my hair and nails done.\n\nI'd never done that before. But I figured you should always try to look nice going to a funeral. Especially if it's yours.\n\nI just walked straight up to the security guard shack at the entrance.\n\n\"I'm here to see Donna.\"\n\nHe looked at me with offhand amusement.\n\n\"Is she expecting you?\"\n\n\"I think so.\"\n\n\"And who should I say is here?\"\n\n\"Nobody.\"\n\nHis relaxed attitude and badly-hidden contempt disappeared instantly and his eyes flickered around the parking lot. One hand lightly touched the grip of his hand gun while he keyed his mike with the other.\n\n\"Central this is Gate. The Nobody Girl is here. She wants in.\"\n\nI couldn't hear the response because he had an earpiece in, but seconds later four more guards arrived. Two with shotguns.\n\nThey gave the suit a once over; I wasn't the raggedy-girl they'd been expecting to see.\n\nOne of them ran a metal detector over me before they led me in. The guy with the hooked mustache met us in a hallway and waved the guards off, raised an eyebrow at the suit and led me further in, to an outer office where a slender black woman -- obviously a very competent and professional secretary - sat and typed on a computer.\n\nThe man gave a wry smile and pointed to a chair in front of the secretary. \"Wait here.\"\n\nAs soon as the inner office door closed, the secretary whispered.\n\n\"Don't take any shit from her. She needs you.\"\n\n\"Why?\"\n\n\"You're the Nobody Girl. They say if it can't be done, if there's no way in, Nobody can do it. Nobody sees everything. Nobody can handle it. Nobody can do everything. They've been using you for the hardest targets out there for years now. Bargain for whatever you want.\"\n\n\"Why are you telling me this?\"\n\n\"Amber and Tommy were my friends a long time ago. I'm Candy.\"\n\nAlive. Candy was alive. Which meant that, maybe, Donna meant it when she said she planned to let them go.\n\nShe kept glancing at the door to Donna's office, mouth in a grim line. \"They saved me from myself, but they were willing to let the asshole that killed Amber and Tommy go. But you weren't were you?\"\n\n\"They were the only friends I've ever had.\"\n\nShe smiled with a curled lip. \"He pre-paid for five days at the hotel. He was pretty much stewed meat by the time they went looking for him.\"\n\nBefore I could respond, the door opened and the guy gestured me in.\n\nI sat in the chair in front of her desk while the big guy leaned against the doorway.\n\nDonna took off her reading glasses and looked me over. She noticed the suit, a suit similar to hers, and I knew she got the message.\n\nI was done just being the raggedy-girl, except as a disguise. I might not be her equal here, but I knew I was valuable.\n\n\"Why are you here?\"\n\n\"Because you need me and I think I need to do this. I don't know who 'we' are, but I know some of what we've been doing and I know somebody has to do it.\"\n\n\"You go off the reservation again, I absolutely will have you killed.\"\n\nThe guy at the door smirked and mouthed the words \"If she can find you.\" at me. I got the instant impression he'd known her for a long time and loved pulling her chain when he could.\n\nI kept a straight face.\n\nDonna sighed. \"When we learned you'd killed Gervais, we knew you'd be coming for Gallagher sooner or later. And I was pretty sure you'd get to him, no matter what we did short of putting him in Guantanamo. I don't have the manpower to cover him forever and he wouldn't take the custody deal. So we wrung him out as fast as we could.\" A grim smile. \"Since he had the consistency of wet dog food by the time we found him, it was for the best.\"\n\n\"Nobody wants something.\"\n\nHer face hardened and her eyes flickered to something on the corner of her desk. \"What?\"\n\n\"Tommy and Amber get married.\"\n\nA glimmer of confusion, then understanding. \"It'll be registered in Virginia, dated from when they started working for me.\" She smiled softly. I didn't even know she was capable of that. \"They're already next to each other. I buried her in that blue dress, wearing her ring. And him in his suit. I'll have the headstones changed.\"\n\nWe both ignored the tears that started sliding down my cheeks, but she studied me intently for a long few seconds.",
        "\"Here's a freebie.\" She reached out and turned a picture on that corner of her desk around. Four people standing in a line with their arms around each other, wearing Aloha shirts, flowered leis and laughing. The white-haired man had his arm draped across Donna's shoulders. \"He goes by Pogo. Maybe, in a few years, if you play everything straight, I'll tell you where he lives. It'd serve him right.\"\n\nThere was a glint of wicked humor in her eyes.\n\nSeeing his picture sent a flutter through my stomach. Something not entirely unpleasant. I pushed it away as best I could.\n\n\"Do I get to ask who we are now?\"\n\n\"The CUMULOUS program, we're the guys in the basement.\" She nodded over to the guy at the door \"We deliver karma. Bad guys doing bad things to bad people. He runs GREEN for me, it's the more presentable part of the program. I run the whole thing and directly oversee RED. It does the dirty work. That's you.\"\n\nShe meant it when she said \"dirty work.\" Honey traps, badger games, blackmail, murders in back alleys. Whatever it took to win. The targets were human versions of cancer: terrorists, arms traders, human traffickers. Cancers that had to be found and removed.\n\nUsing disposable people to do it. People that went unmissed, unloved and unmourned. At least most of the time.\n\nIt'd take me a long while to fully understand how dirty it had to be sometimes, but somebody had to do it.\n\nOr Nobody.\n\n***\n\nPost Production Notes:\n\nThis one has some unpleasant edges -- I really, really didn't want Tommy and Amber to die. But I couldn't save them. They were, to use an old Scottish term, \"Fey.\" It's often translated as \"doomed\" but really it means \"fated to die and knowing it.\" Tommy and Amber knew how it was all likely to end and accepted it, even as they wished it were different.\n\nPeople can sneer at Tommy for loving a whore, or at Amber for loving a tweaker, but in the end, as screwed up as they were, at least they had each other, even if only on Sundays. Which makes them far luckier than nearly everyone else in the story. \n\nI try not to judge Donna too harshly; she has a horrible job that she does to the best of her ability, and it certainly eats at her. She isn't there to save any of the people that she \"recruits\", and for most of them, they join of their own free will. Still, she tries, when she can. "
    ],
    "authorname": "Todd172",
    "tags": [
        "violence",
        "shack",
        "secret agent",
        "covert",
        "cumulous"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/tales-from-the-shack-nobody"
}