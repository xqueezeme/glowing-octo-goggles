{
    "title": "The Trouble with Moonlighting",
    "pages": [
        "\"Has anyone seen the nerd girl from accounting?\" I heard my boss yell from his office as I hid behind the cabinet. I was that nerd girl and I really did not want him to find me. I hated my boss. I'm fairly certain it was guys like him that guaranteed I'd stay a virgin the rest of my life. \n\nAll he wanted was the report that I was currently printing, but today I wore the wrong shirt to work. It may sound silly, but I have worked very hard to keep my body and its curves from showing. All of my clothes must be bulky and high-necked, otherwise, doing my job would be impossible, especially around Mr. Bradley. While he has never done anything to warrant a sexual harassment suit, he still makes you feel dirty with looks and weighted remarks. He was a man who knew what he could get away with and what he couldn't. \n\nThe reason for today's wardrobe goof was because of my second job. During the day, I am nerd girl accountant for Bradley International. I dress like a frump and I work with the numbers I love. At night, well, that's a little different. I have lofty goals that include a nice house and a CPA office all of my own. In order to achieve these goals, I need more money than Ted the Dread can pay so I found alternate employment. Being blessed in the chest more than some girls, I decided to make use of my assets. I found a club outside of town that was far enough away (and wasn't classy enough) for my B.I. coworkers to frequent. I started off just stripping two or three nights a week. Then, after I realized how much I enjoyed it and how much I could make, I started going every night. Thanks to one of my regulars, I even found another way to supplement my income. That other way is partly responsible for my current predicament. \n\nWhen I first started working at the club, I would not bring anyone to the backroom. Most of the girls did after a lap dance, but I couldn't take that extra step. I was (still am) a virgin and I really didn't want to give it up to some guy at a strip club, so I tried to keep everything and everyone up front. Howard, one of my regulars, had, after several nights of multiple lap dances, asked me if I would bring him to the back. He had noticed other girls bringing their regulars back and wanted the same treatment. I suggested he start frequenting the other girls, but he said that they did nothing for him. He dropped the subject that night, but asked again the next. Because he was such a good guy, and he was helping to fund my dreams, I explained to him why I did not want to go to the backroom. His eyes lit up and he smiled. Since I happened to be straddling his lap at the time and noticed that the bulge in his pants had grown even larger. I was not surprised. Guys either reacted one of two ways when they heard of my condition. They either ran for the hills or fell in love. \n\nAfter the dance finished, he stayed in his seat looking contemplative. Then, close to closing time, he approached me while I was dancing on the stage. Most everyone had already left, but it was my turn at the pole. \"Francesca, (that's my stage name) I completely understand your predicament and I think I might have a solution that will accommodate us both. When you're finished up there could you come down for another lap dance so that I may discuss my idea with you?\" \n\nI finished my set while he and one or two other guys watched. It was so late, I couldn't be sure one of the guys wasn't asleep. Making my way down to him, I wondered what his idea could be. The point of this second job was because I needed money, but I wasn't willing to put out for it. I might be a stripper, but I'm not a whore. \n\nHe took a seat further away from the stage. As I approached, I turned my back to him and sat on his lap. While I danced my ass cheeks around his groin, he discussed his idea with me, whispering his words into my neck. \"If my idea makes you uncomfortable just say so and we will continue on as we were. However, if you would even consider it, I would be immensely grateful.\" He paused giving me time to agree so I nodded for him to continue. \n\n\"I know how you feel about the backroom, but would you be willing to take me back there if all you had to do was dance for me and perhaps encourage me as I masturbate? You would not have to touch my penis nor would it touch you. You would dance for me as you do now, talk to me, and watch me. Your virginity would be safe and I would still get the release that I need.\" \n\nI blushed from head to toe. \"Oh Howard...I don't know. I'm not sure. I will think about it, but I just don't know if I would be any good at the encouragement part. Can you give me until your next visit to think it over?\" \n\n\"Sure! Don't worry about the encouragement part if it bothers you. Just seeing you is enough encouragement for now. You can always work up to it if you like.\" \n\nI could tell he was hoping for a yes, because his cock leapt to life beneath me. I treated myself a little by grinding up against it for a minute (No one said I couldn't enjoy my job). Howard began breathing hard beneath me as I worked my way around to face him. As my tits brushed his face, I felt him buck against me. My already encouraged pussy began to moisten as I felt dampness come from his slacks. Howard was really looking forward to my agreement. \n\nAfter my shift that night, I went home, cleaned up, and lay in bed thinking of Howard's proposal. Just the idea of watching Howard excited me. I wasn't sure how I would react. I thought of him coming beneath me as he did earlier and imagined seeing it instead of just feeling it. My pussy began to ache as I imagined talking him through the act. I thought of him stroking his big cock while I hovered over it and rubbed my tits in his face. I reached down to stoke the fire between my legs. With dripping fingers, I moistened the light hair on my outer lips as I continued to play out the scenario in my head. \n\nHoward was a nice looking man. Unlike most of the guys that came into the club who were usually truckers or farm hands, Howard was more professional. He didn't dress up to come in, but you could tell he normally wore a suit to work. \n\nThat's how I imagined him, dressed in a suit, leaned back in a chair, stroking his cock. \n\nI raked my nails along my inner thighs, squeezing them as I spread my legs. Virgin or not, it did not mean I couldn't masturbate. I loved to play with my pussy when I got home from work. Tonight, after listening to Howard, it was going to be even better. I pulled on my nipples, forcing them into even tighter peaks. \n\nI thought of rubbing Howard's cock between my tits, making him cum all over the top of them. Moistening my fingers in my cunt I rubbed them into my cleavage, imagining his cock doing the same as I used my other hand to tease and pinch my clit. \n\n\"Oh Howard, spray your hot load onto my tits.\" I moaned, plunging my finger into my dripping slit. I flipped over onto my stomach and spread my legs as wide as I could, letting the sheet bunch between my legs. I ground my hips into the bed over and over again, imagining myself on top of Howard riding his dick like the slut I wanted (at that moment) to be. \n\n\"Oh yes! Please fuck me harder!\" I yelled into my pillow as I pounded my pussy into the bed. My ass jiggled from the force teasing my asshole as my cheeks opened and closed. The coarse percale sheets grazed my nipples as they bounced back and forth making my breasts heavy and aching. I felt my orgasm starting to slowly build and I increased my speed, twisting my hips as far forward as I could. Moans of bliss poured from my mouth as my orgasm erupted within me. My belly and thighs contracted as I continued to pump my pussy into the bed reveling in the aftershocks, teasing myself into a second and then a third climax. Wave after wave of ecstasy crashed over me. Exhausted, I collapsed deeper into my bed and fell asleep. \n\nHoward didn't show up for an entire week and I found myself slightly disappointed. I went through my normal routine and drudged through the each day hoping to see him that night. At the end of the week during my second set, he walked in looking a little wary, but certainly excited. He sat near the stage at first and watched as I finished my dance. A few other guys had asked for lap dances so I attended to them before he called me over. \n\n\"A lap dance if you please miss,\" he said as he smiled at me. \n\nI laughed and gave him a curtsy, \"As you wish sir.\" Occasionally, he liked to pretend to be a gentleman so I played my part and treated him like one. \n\nAs the song came on, I went through the motions of my dance. I could feel myself getting wet already and I worried that he would see it leaking around the side of my thong. Squatting in front of him, I lifted my tits onto his thighs and ran them back and forth along the tops before brushing my nipples across his crotch. \n\nHe raised his eyebrow at me in question but went along. Standing, I turned around and slowly ran my hands down my legs until I gripped my ankles then ran them back up to my thick ass. I massaged my fingers deep into the flesh while I played with my oil-covered ass, stretching and molding it until tendrils of pleasure snaked down to my pussy. Standing at peeks, my nipples called me to give them attention too. I allowed them to fall towards my face as I bent over backwards. Left and right they swished. Their weight pulled me lower, requiring me to quickly right myself. I twisted around and ended up with my face right in the V of his legs. \n\n\"God Francesca, Your tits are perfect,\" He gushed out while breathing heavily and glowing with awe. \n\n\"Then you're going to love this,\" I said as I climbed into his lap and shoved his face into my cleavage. \n\nHe shook his head back and forth as his hips rose in reflex. I pressed my hands on either side of the mounds pushing them harder against his head and ground my pussy into his swollen bulge, pushing my thong deeper into my pussy lips. \n\nGrunting and heaving deeply, he pulled back, \"Have you given anymore thought to my proposal?\" he panted. \n\n\"I gave it a lot of thought and I think we might be able to work something out. I'm still not sure how I will do with the encouragement part, but I will at least try.\" \n\nTaking him by the hand, I led him to the back room. Large pillows were strewn around the floor and a big chair sat in the center. Mirrors lined the wall and ceiling. I motioned toward the chair as I hit the button that would turn on the music. \n\nI turned to find him pants-less in the chair with his hand firmly gripping his engorged cock. Taken aback, I gasped, not quite expecting him to start so soon. I tried not to show my surprise as I stood two feet in front of him and began to dance. Fear kept me from getting too close. The intensity of his gaze and the strength of his grip on his cock concerned me. Had I made a mistake? \n\nI tried to remember that this was Howard, my nice client, as my hips began to move with the rhythm. \n\n\"Is there anything special that I should be doing?\" I asked, hoping to ease some of my tension. \n\n\"Play with your tits. Suck hard on those fat nipples of yours,\" he moaned as his hand slid up his dick. \n\nHe wasn't moving very fast like I thought guys did, but who was I to tell him how to stroke himself? \n\nSucking my nipple deep, I groaned. Goosebumps popped up on my legs as I pinched the other. Howard panted as his hand slipped back down. A wet sheen now covered the bulging mass as precum oozed down his shaft. \n\n\"Stroke it for me, Howard,\" I hesitantly coaxed. \n\nHis eyes widened and his head lolled back. \"Francesca, I can't hold back much longer. Just looking at you makes me want to spray my load.\" \n\nFeeling bold from his words I continued, \"Spray it then. Cum for me Howard. Can you feel it building? Are you getting closer?\" \n\nI ran my hands over my pussy. I knew Howard could see the evidence of my need but I was too far gone to care. \"Oh that's it Howard, now harder! Fuck your fist for me!\" \n\nHe pounded away at his fist as he watched me dance around him rubbing my dripping pussy and heaving breasts. \"Yeah Francesca, rub your pussy for me. Oh fuck, I'm going to cum. Watch Francesca, watch me cum for you,\" he ordered. \n\nThick white cum spewed from the head of his cock. \"Oh fuck yeah,\" he grunted out as another string shot from his cock. Twice more cum jetted out before I watched him collapse in the chair. \n\nI slipped my fingers between my netherlips and tweeked my clit once before I slowly walked over to him. \n\n\"Are you okay?\" I asked. Having only seen a man ejaculate in porn, I didn't know what to expect afterwards. \n\n\"Yes, but I'm afraid I made a bit of a mess,\" he grimaced. \n\n\"It's okay,\" I reassured him, \"I'll get this cleaned up.\" I wasn't sure how, but I would figure it out. \n\nPulling a handkerchief out of his pocket, he wiped himself off and tucked himself back into his pants. \"Thank you Francesca. That was better than even I could have hoped for. You truly are a wonder. I sincerely hope that you were not too uncomfortable and perhaps might have actually enjoyed yourself a bit.\" He smiled. \n\nIf the liquid running its way down my leg was any indication, I certainly enjoyed it, but he didn't need to know that. I smiled back at him. \"I don't think I would have a problem doing that again sometime.\" \n\n\"Well, I do not want to take advantage of your generosity, but I will certainly avail myself of it whenever you allow,\" he grinned. \n\nWith that he left and I struggled to find something to clean up the mess. Asking one of the girls \"Excuse me, what exactly do we use to clean up cum?\" managed to earn a few giggles and knowing grins but I figured it out finally and went on to finish out my night. \n\nWhile Howard's night might have been over, I still had a few hours to go. The condition I was in when he left continued to worsen throughout the night. My dances became more heated and all the guys could tell. I did several lap dances before the end of my shift, each one leaving me breathless and the client straining his jeans. Two more guys asked to go to the back but I declined, instead handing them off to one of the other girls. \n\nBy the time I finally walked to my car, my knees were almost too weak to move. Trembling, I found my keys and drove myself home. As I made it in the door, I began stripping off my clothes. My flush skin felt weighted down by the heavy cloth. I knew release would come soon and I could hardly wait, but I needed to get the stench of the club off of me first. \n\nI climbed into the shower and gave myself over to the bliss. Water teased my nipples as it cascaded down my chest, beading in the oil that lingered. I covered my body in a soapy lather, enjoying the way my hands slid along my curves. I pinched and pulled on my nipples and pussy lips as I cleaned myself off, teasing myself ever higher. I quickly rinsed, dried, and climbed into my bed. To intensify matters, I put in a porn DVD and let it play in the background. The sounds of moaning and slapping skin helped set the mood as I lay back on my bed and began to finish what started hours earlier. \n\nClosing my eyes, I pictured Howard as he had been with his hand gripping his cock. I softly ran my palm over my feverish pussy and let my imagination run wild. \n\nI saw myself kneeling in front of Howard as he stroked his cock. Unable to resist, I put my mouth on the fat purple head that stuck out above his fist. I sucked it into my mouth, pressing down on the cushiony head and rubbing my tongue on the V underneath. I couldn't keep my tongue out of that little V as I sucked deeper down the shaft. Howard's hand grabbed a handful of my hair and guided my head up and down as he moved his cock in and out of my mouth. \n\nAs I envisioned Howard fucking my mouth, I began to work my finger in and out of my pussy with one hand, while grinding the palm of my hand into my clit. The tempo of my hand rose in time as I saw Howard's cock move in and out of my mouth faster and faster. \n\n\"That's it Franny, suck my fat cock. Take my load down your throat like the slut you really are,\" he instructed as our movement built to a crescendo. Just as my imaginary Howard shot his load deep down my throat, my body convulsed into a back-buckling orgasm. My body shook as I ground down on my pussy and fucked myself harder and harder. \"Uhh! God! Yes!\" I grunted out as another orgasm split through me. \"Oh shit! That's it, fuck me again and again!\" \n\nI sucked my tit into my mouth as I continued to fuck myself with one hand, bringing on two more orgasms back to back. Realizing that if I didn't stop, I might actually go blind, I softly petted myself into one final orgasm and drifted off to sleep. \n\nThe following month came and went without too many adventures. Howard came in twice, but never asked for more than a lap dance. The girls had heard what I did for him and joked with me about it repeatedly, but I only took it for the good-natured teasing they intended. They did encourage me to allow other clients the same courtesy. I considered it, but wasn't quite sure. Howard was a good guy and I knew he wouldn't hurt me or force me to do more than I wanted. He understood how much I wanted to protect my virginity. Would the others? \n\nOne night Howard came in looking a little haggard. He dropped down into a chair near the stage and smiled weakly. He waited until I had finished my set and he motioned me over. As I began my dance, I noticed he didn't seem as into it as usual. Vacant eyes and a distracted attitude did little to encourage me either. Because he was paying for it, I finished the song out and decided that he needed a little pep. I didn't know what was going on with him and I made it a point not to pry into my clients' lives, but damned if I was going to sit idly by while he brought the mood of the club down to Eeyore level. \n\n\"Howard, please get up and follow me.\" \n\n\"Huh? Why?\" He shook his head. \"You don't have to do this, Francesca.\" \n\n\"I know that. Just come on and do what I say.\" \n\nHis interest slightly peaked, he trudged behind me as we made our way to the room. \n\n\"Please take off your pants, leave on your underclothes, and be seated,\" I told him. \n\n\"Francesca, please don't torture me like this. I don't expect you to do this for me tonight.\" \n\nIgnoring him, I went to turn on some soft jazz. He certainly wasn't in a dubstep kinda mood. I danced around him as he stood before me, passing my hands across his chest. He stood motionless before me. My heart sank. \"I'm sorry, Howard. I just wanted to cheer you up. You looked so glum.\" \n\nHis chin dropped to his chest. Don't apologize Francesa, I just have a lot on my mind, but I couldn't stay away again another night. \n\nI led him over to the chair, pushed him into it, and sat on his lap. His arms lay still at his side, but he leaned his head onto my chest and sighed deeply. After a minute in this position, I felt a stirring between us. No matter what Howard said, at least one part of him was feeling perky. I shifted a bit to re-position Mr. Happy and began to rotate my hips to the music. Howard sighed again, but this time it was more a sigh of contentment than anything else. Smiling inwardly, I reached around him to grab the back of the chair and force his face deeper into my cleavage. It also gave me extra leverage to press myself harder onto his ever-growing cock. I rocked myself back and forth, taking pleasure in the process. \n\nSlowly, I stood up then leaned down and whispered into his ear. \"Do not touch yourself until I tell you. Tonight, we are going to do this my way. I will let you know when and how to touch. Do you understand?\" \n\nHe nodded an affirmation as I began to give him another lap dance. I knew that he wasn't ready and I wanted him straining, almost bursting with need before I let him touch himself. Standing behind him, I massaged his shoulders, letting my breasts hug the back of his head as I attempted to ease his stress. I ran my hands down his chest and my face along the side of his neck, breathing onto his ear as I brushed past. ",
        "I watched as his pants began to tent slightly. \"I'm going to need you to remove those for me.\" I instructed. Howard unfastened his pants and pulled them off, tossing them to the side. \n\n\"Did you miss me, Howard?\" I whispered into his ear. \"Did you have to touch yourself all alone while thinking of me? Did you imagine burying your face in my tits as you pounded my pussy?\" I blushed a little as I let the words that normally stayed buried deep in my head spill out. \n\nHis cock twitched in his boxers, pressing higher, forcing the boxers tighter across the head. \n\nI climbed on top of his lap and straddled him. The thin strip of my thong and the light cotton of his boxers were all that separated us. I rocked back and forth again. This time, with little in between us, my pussy lips clasped around his shaft. \n\nHe dropped his head down into my cleavage and moaned. \"Oh gooood. Soo goood.\" \n\nI bounced up and down on his cotton covered cock, \"Do you like this Howard? Do you like feeling my pussy bouncing on your fat cock? Can you feel how wet I am?\" \n\nHe shuddered out a groan and pushed against me. \n\nHis cloth covered cock began to slide between my lips as I rocked back and forth. I looked down and watched my juice mix with his precum to stain the front of his boxers. \"Oh, I see you liked that. What about fucking my tits, did you think of that? Did you think about wrapping my huge tits around your slick swollen cock and fucking them in and out until you sprayed your cum all over my face?\" \n\nHe thrust against me, pushing the cloth of his boxers into my clit. On reflex, I thrust back as it pushed me close to my own climax. Then, he stopped. \n\n\"Enough please. You have certainly mastered the encouragement part. Please, just let me finish.\" he begged. \n\nFinding it difficult to breath, I stuttered out, \"N-No, not quite yet. First, take your boxers off. You're making a mess out of them.\" Thankfully, he was nice enough not to point out that I was the one who made the mess. \n\nI climbed off of his lap sliding his cock in my cleavage as I went. \n\nHe picked up his hips and worked his boxers down past his knees. His dick sprang free, bobbing in excitement over its freedom. \n\n\"Oh my, Howard, look at what you have for me. I knew it was large, but this was more than I anticipated. I think it may even be bigger than last time.\" \n\nI crouched in front of him, leaning in close, looking at it from all angles, watching as it twitched each time I came near. I ran my nails over his thighs, watching as precum oozed from his head. I climbed up onto the chair, putting a foot on either arm, letting my pussy hover, just over the head of his dick. \n\n\"I want you to take one fingertip only, and work the precum away from the head of your dick, down the bottom of your shaft, and back up again until your cock is covered.\" \n\nAs he complied with my instructions, I bobbed my pussy above his cock, always close, but just out of reach. My soaked thong teased my pussy. \n\nI lifted my breast to his mouth, \"Open your mouth. Do not touch my nipple. Just breathe on it as you rub that one finger back and forth.\" \n\nI let him breathe on it until it hardened to a nub, then switched breasts. \"Now add a second finger. Be sure to rub over the head and around the ridge.\" \n\nI lowered myself to the edge of his thighs, just above his knees, where my pussy rested inches from his cock but just far enough to keep his knuckles from brushing against me. Rocking on his lap, I edged closer and closer to him, but never close enough to make contact. I looked up into his face and pulled my right tit to my mouth and sucked on my nipple. \n\n\"Mmm - that feels so good! Don't you wish you could taste it?\" I drew the other one into my mouth as I pulled on the now wet one with my fingers. \n\nSliding down off of his legs, I sat on the floor and rested my head on his thigh. \"Fit him fully in your grasp, raise your hips and thrust him into your hand. Now, bring your other hand to your balls and fondle them. Squeeze them as tight as you can bear.\" \n\nI blew hot air onto his cock as he thrust into his hand. \n\n\"Push your fist as far down your shaft as you can, then slowly squeeze up the shaft until the head is centered in your palm. Quickly stroke up and down without allowing the head to leave your hand. Do not let it peek out the top between your fingers either. Now stop and slide down the shaft to the base once again and hold it tightly.\" \n\nAs he held his cock tightly in his fist, I moved away from him and lay upon the pile of pillows. I spread my legs and elevated my head so that he could see all of me, while I observed him. \"Now, it is time for me to watch. You are free to stroke yourself exactly how you want to, but I want you to watch me as I watch you.\" \n\nHoward heaved a large sigh of relief and released his cock, placing his hands on his thighs. He rose from the chair and clumsily knelt in front of me. He reached down into the pockets of his slacks and drew out a handkerchief. \n\nCrimson crept into his cheeks, \"I didn't want to make another mess for you to have to clean.\" He spread it on the floor between us and began to pull on his cock. \n\n\"Touch yourself. Everywhere. Squeeze your tits and rub your pussy. Let me see you touch all the places that I want to touch,\" He groaned. \"I leave here at night thinking about you, itching to take care of this - this discomfort you have caused. I lay at night stroking myself thinking of all the many different things that I want to do to you or what I would like for you to do to me.\" \n\nI slid my hand over my pussy and lifted it to show him the juices that covered it - that he had caused. \n\nHe jerked against his hand. \"Fuck, Francesca!\" \n\nI frigged my clit, making myself moan and gasp as I rapidly neared my orgasm. \n\n\"Oh my - Are you coming?\" He strangled out as huge ropes of cum sprayed the floor, the handkerchief and my thigh. \n\nFeeling his burning cum hit my thigh sent me over an edge I wasn't quite prepared for. I bucked against my hand as my eyes rolled back in my head. \n\n\"That's it Franny. Cum for me baby. Cum just like you would if I were fucking you.\" Howard prompted as he stood over me still holding his cock. \"I didn't think you could be more beautiful until now.\" \n\nEmbarrassed for letting myself go like that, I blushed from head to toe as I rose from the floor. \"I'm sorry, Howard. I can't believe I did that. I only wanted to encourage you and help you get over whatever was bothering you when you came in. This was supposed to be about you, not me.\" \n\n\"If it makes you feel any better, I can assure you, I will be smiling for the rest of the week.\" He grinned. \"Thank you Francesca. Thank you for the gift of being able to watch such a beautiful sight, but also for trusting me enough to let yourself go.\" \n\nHe dressed as I straightened the room. I couldn't look at him without blushing. \n\nHe walked over and stood in front of me. Tilting my head up with his knuckle, he forced me to look him in the face. \"I came in tonight to tell you that I'm going to have to go out of town for a while. I have no way of knowing how long it will be. It could be several weeks or several months. I know I don't have to tell you all of this, but because I do come in with some regularity, I didn't want you to worry. I'd like to think we are becoming friends. Thank you for making tonight something special.\" He leaned down and softly kissed me on my cheek. Then he turned and walked out the door. \n\nIt had been months, and I had almost lost hope of ever seeing Howard again. For the first couple of months, I watched and waited every night for some sign of him. Over time, I stopped watching. The other girls used this time to try to convince me to allow other guys some of the same privileges Howard had enjoyed. I balked; I just didn't feel as comfortable with any of the other guys. How did I know they wouldn't try anything or get insistent? \n\nMy friend Bella finally explained that there were some guys who didn't want to do anything but watch and touch themselves. There were married guys who didn't consider it cheating as long as they weren't penetrating anything. There were guys that knew what felt good to them and took care of it themselves. There were also the guys who got excited by the thought of a beautiful woman watching them stroke themselves. \n\nI finally gave in toward the end of the third month. I let a few guys come to the back once I was assured they only wanted to watch and be watched. The first man, a middle-aged farmer had me rub oil all over my ass while I knelt on all fours. That was all he needed. Another man wanted the oil on my tits. A third man had me dance for him and then instruct him from across the room. They all varied and they all were very polite. Not one of them caused me to be overcome with desire or lose myself the way I had with Howard. The money was great, but I wasn't having quite as much fun. \n\nThe nights dragged on as well as the days. I went from one job to the next with little interest for anything in between, until the night Howard walked back in. \n\nFour months had passed. \n\nI was dancing on the stage, swinging around the pole when he walked through the door. My stomach leapt into my throat and I almost slipped. He was wearing a suit. The tie was loose and the jacket was unbuttoned, but it was still a suit. \n\nHe walked right up to the stage and stared as if he were drinking me in. He knew I had to finish my set and he was attempting to give me that time. \n\n\"I would like to request a lap dance, if you please.\" I nodded my head and continued to work the pole, keeping my eyes locked to his. My breath started coming faster as I wrapped myself around the pole and slid to the floor. Every nerve in my body was coming alive. I writhed on the floor, stroking my body while still holding his gaze. Then the music stopped. \n\nI barely managed to get off the stage before I was in his lap. As the next song came on, I gyrated and bounced my way through it, knowing this would not end here. When it was over, we slowly made our way to the backroom. As soon as we were out of sight, he picked me up and carried me the rest of the way into the room. He slammed the door behind us and pinned me up against the wall. He kissed his way up my neck and took my mouth in a kiss that stole my breath. Grinding his hips into me, he continued to kiss me until I was whimpering underneath. \n\n\"I missed you,\" he breathed into my mouth, barely stopping the kiss long enough to say the words. \n\nI felt him hard against me and I wrapped my legs around his waist. \n\n\"I want you so bad,\" he groaned into my neck, \"but I'm not going to take you here. I respect what you said before and I will abide by that, but if I don't get release soon, I'm going to explode.\" \n\nHe thrust against me harder, the cloth of his suit rasping against my barely-covered pussy. I came, covering the front of his pants. \n\n\"Jesus, Francesca!\" he exclaimed. \n\nI recovered quickly and decided what I wanted to do. \"Put me down please, get undressed, and sit in your chair,\" I ordered as I bit his bottom lip. \n\nHe looked at me quizzically, but complied. \n\nAs he sat in the chair fully naked, he shook with his need. I wouldn't make him wait any longer. I climbed on his lap and kissed him hard while I slid myself across his engorged cock. Then I slid myself off his lap and onto the floor. I knelt between his legs and wrapped my hands around his dick. The oils on my hands mixed with the precum seeping out of the head to create a slick lubricant. \n\nHis eyes widened and his head fell back as I grasped his balls with one hand and stroked down his shaft with the other. He raised his hips to meet my hand. I leaned down and took him into my mouth. A gasp tore from his throat and he lifted off the chair. Pulling back, I kept the head of his penis in my mouth while I wrapped my breasts around the rest of it. I felt it start to twitch as I started to rock. I moved back and forth sliding his cock in and out of my mouth\u2014back and forth between my tits. He shoved his hands into my hair and grasped the back of my head just as he erupted into my mouth. Cum shot deep into my throat, flooding my mouth. I swallowed as much as I could, but he filled me so full it leaked out onto the top of my breasts. I rubbed it into my skin as I continued to stroke him. \n\n\"Stop! No more,\" he gasped even as his hips continued to move against me. I released him, sat back on my feet, and looked up at him. He smiled down at me and reached to pull me back onto his lap. I let him pull me up to sit astride him. His now-limp penis nestled in the crook of my legs as he stroked over my chest and kissed my face. \n\n\"I have to return to work. They will come looking for me if I don't go back soon.\" I mumbled. I really wanted to stay where I was, but we had a rule about how long we could stay in the room. \n\nHe sighed deeply. \"If you must, but I will remain here in the club until you get off. If you don't mind, I would like to have a chance to talk to you. \n\nWe both grudgingly stood and set ourselves to rights. He followed me back out to the main part of the club where it was my turn back at the pole. In a daze, I ran through my set, trying to watch the rest of the crowd but my eyes kept returning to him. I couldn't imagine what he needed to talk to me about. I worried I went too far. I couldn't believe that I got so carried away that I put him in my mouth like that! \n\nA few hours later, it was finally time to close. Howard assured me that he would wait if I wanted to shower and get dressed. I took advantage of his generosity and ran to clean up. Thankfully, the club has a shower stall near the changing area. I rushed through a quick shower and threw on the clothes I wore to the club. \n\nBob was getting ready to shut everything down for the night. Not wanting to lose the chance to talk to Howard, I asked Bob if I could stay a while longer and lock up when I left. He eyed Howard briefly but then agreed. It had not been the first time I had locked up for him; it was just the first time I ever had a guy around. \n\n\"Don't get yourself into any trouble now. You understand? I'm just a phone call away if you need me,\" Bob said, looking once again at Howard. \n\nHoward nodded solemnly in response and Bob walked away. \n\nLeft alone in the dark club with Howard I found myself getting nervous. What did I really know about this man? All I really knew was that he dressed nice, spoke nice, and had a fondness for my breasts. He could be some gentleman serial killer and I had played into his trap. I looked up warily into his face. He smiled at me, as if he knew all the issues running through my head and hoped to reassure me. At that moment, I saw the sincerity of his smile and knew that he was not here to hurt me. \n\nI took his hand and walked him over to a sofa that sat against the wall. Whatever he needed to say to me, I wanted to be seated for it. \n\n\"Francesca, it's okay, truly. You don't have anything to be nervous about, please relax. I just want to talk to you,\" he said as he sat down beside me on the sofa. \n\n\"With my job, I do a lot of traveling. I know it seems like I come in here often, but really it's only when I'm in town. My home, until recently, was entirely across country. I went away in order to facilitate the sale of my home. Because I so frequently find myself in this area, I have decided to relocate. I'm telling you all of this in order to let you know that I will be around the more often. I have hope that you would allow me to see you outside of this establishment. It would be nice to talk to you without music blaring in the background.\" \n\nI couldn't believe the words that I was hearing. Howard wanted to date me? Did guys do that? Considering what I did earlier in the evening, did it even make sense? I struggled with the impact of it all as he patiently awaited any kind of response. \n\nTaking a deep breath, I exhaled forcefully before responding. \"Well I can honestly say that I was not anticipating that. I had expected you to tell me you were going away for good or something equally final. Are you sure this is something you really want? How do you know that I won't bore you to tears?\" \n\n\"I'm willing to take the chance. I'm not asking for anything other than the opportunity to take you to dinner and perhaps a movie or play.\" \n\nThe thought of sitting down to dinner having intelligent conversation with Howard certainly appealed to me. \n\n\"Just one date, and if it doesn't work, nothing changes. I will still come in to watch you dance\u2014with the occasional extra service,\" Howard rushed to assure me. \n\nI nodded my ascent. He beamed at me. \n\n\"Great! I promise we will have a wonderful time.\" \n\nHe quickly leaned down, giving me a brief kiss on the cheek. I peeked up at him, giving him a soft smile. Dark, heavy eyes seared into me as he focused on my lips. The heat in the room rose to smoldering levels. \n\nMy tongue flicked out to moisten my bottom lip. His nostrils flared in response. Before I could blink, he captured my mouth and the gasp that followed. I sucked his lip into my mouth biting down. \n\nTwo seconds later I found myself straddling his lap as his tongue plunged into my mouth. My skirt rode up my hips and my leggings stretched over me clinging to my pussy as we took up our normal position. \n\nHis hands climbed under my skirt and wrapped around my hips. With fingers digging into my ass cheeks, he pulled me tightly against him as he began to kiss down the side of my neck. Back and forth, he repeated the motions, sliding his hands up my thighs, grabbing my ass and grinding me into him over and over again. His tongue snaked into my cleavage as his thumbs glanced over my pussy causing me to throw off his rhythm. \n\nHe bit my nipple in response. \n\nI grasped his head and forced his face into my open V-neck as I began riding him harder and faster. My breath quickened as I thought I would surely explode. \n\nAs quickly as before, our position changed and I found myself flat on my back. He freed one of my breasts from my shirt and began suckling. My hips writhed on the couch. I felt his dick pressing against my side, hard and unyielding. I began to turn towards him, but his hand thrust between my legs and held me still. Moans and whimpers were wrung from my throat as he ground his palm into my mound. I lifted my hips to meet him only to find he replaced his hand with his mouth. \n\n\"Howard! What are you doing?\" \n\nMuffled noises were my response. \n\nLightening shot behind my eyelids as I felt Howard draw my clit into his mouth - leggings and all. All thoughts left my mind as I thrust my fingers into his hair and began to ride his mouth into a vessel bursting climax. Howard sucked, bit, nipped, and lathed my burning pussy until my arms collapsed, falling away from him. \n\nI pried my eyes open when I felt soft flesh pushing at my lips. I opened my mouth to speak allowing him to slide his cock in deep. Wanting to give Howard as much pleasure as he had given me, I danced my tongue along the underside of his dick as he fucked further and further into my mouth. Hands slid along my jaw and down my throat as he breached my tonsils. My nose rubbed into the hair at the base of his cock and my lower lip grazed his balls as he held my face against him. He pulled quickly out only to slide back in with as much force. Not being able to handle his enthusiasm, the next time he pulled out, I wrapped my hands around him and let him use my hands as a substitute. I kept the head in my mouth applying suction as he thrust into my hands. Feeling the onset of his orgasm, I released his cock giving him access to my mouth again. As soon as the length of him ran against my tongue, hot cum shot into my mouth and down my throat. I gagged a little, but swallowed it all. \n",
        "Drained, Howard pulled out of my mouth, fell to his knees and lay his head on my chest. \n\nPiercing light from the front door jarred us awake three hours later. \n\nHoward had at some point climbed onto the couch with me. I stretched languorously only to jump straight up screaming. \"Oh my God! Holy crap! I'm going to be so late for work. I'm never late for work.\" \n\nBeing unceremoniously dumped onto the floor caused Howard to jump to his feet in an attempt to find the fire. \"Francesca! Calm down. What the hell is the matter? You are at work! What are you talking about?\" \n\n\"Huh? What? Oh, no. My other job. This is only my side job. I'm sorry. Really, but I have to go. I would call in, but I just can't. Not today.\" \n\nI ran back to the bathroom and tried to clean up and straighten my clothes the best I could. Thankfully, Howard was still sitting on the couch where I had left him. \n\n\"Here, this is my cell phone number.\" I rushed out as I handed him a scrap of paper. \"I found paper and pen in Bob's office. I really do have to go, but if you're still interested, call me this evening.\" \n\nI gave him a peck on the cheek, pushed him out the door, locked it behind me, and did Mach 1 as I tried to get to work on time. \n\nThus I find myself hiding away in the copy room wearing the same shirt I wore to the club. I hear Mr. Bradley getting progressively closer. \n\n\"Thompson! Have you seen what's-her-face from accounting? I can't find her and I need that report.\" \n\n\"If you mean Fran sir, then I believe she's in the copy room printing out that report now.\" \n\n\"Hmph. She better be,\" he said as he walked in the door. \n\nI jumped out from behind the cabinet and pretended to be checking the printer as he crossed the threshold. \n\n\"Oh hello, sir!\" I smiled pretending that I was not really screaming inside. \"I was just about to bring you this report. I had a little trouble with the printer jamming.\" \n\nHe showed he acknowledged my comment by giving me a sharp nod, but his eyes were glued to my chest. His face broke into a full-on grin as he pulled his eyes up to mine. \n\n\"Of course you were, Fran,\" he said in a saccharine voice. I will be sure to have someone look at it. In the meantime why don't you come back to my office with me? I have a client waiting in my office to see that report. I believe if you were to explain the details, it might smooth things over a little better. \n\n\"Oh sir, I don't know,\" I hedged. \"I am not very good with presentations. I'm liable to do more harm than good.\" \n\n\"No, I find I have to insist. This client requires special handling and I believe you would be just the girl to help with that. This is a very important client and we cannot afford to lose him.\" \n\nEyes downcast, I nodded my assent. \n\nWith a swift leer at my chest, he grinned, \"Wonderful! Grab that report and follow me.\" \n\nI pulled the report off the printer and drug my feet as I followed him down the corridor to his office. All the effort I had put into keeping below his radar went up in a big ball of smoke. I would get no peace now. It looked like I was going to have to find a new job now. As good as the money at the club was, I still didn't have enough saved up to start my business. \n\nFeeling defeated, I walked the last few steps into his office. He walked behind his desk and motioned me forward. A man was seated in one of the large chairs facing the desk. There was something familiar about his shape, but I was too nervous to think. \n\nMr. Bradley's booming voice broke into my defeatist fog. \"Charles, I would like to introduce you to Fran from our accounting department. She's been working the numbers on that report for you. I thought maybe she could explain them better. Fran, this is Mr. Charles Howard of Howard Engineering. \n\nRealization dawned as the man turned and a weary Howard stood facing me. He was the first to recover from our discovery. Barely a flicker of recognition hit his face. Widening eyes and a flare of the nostrils were the only indication that he recognized me. \"Fran you say, Ted?\" he asked turning to Mr. Bradley. \n\n\"Yes, that's her name.\" \n\n\"Well, then it is a pleasure to make your acquaintance Fran.\" he held out his hand and I gave him mine thinking to shake hands. He surprised me by turning it over and kissing the back of it. \"Please tell me what this report says.\" \n\nWhatever Howard...or Charles was thinking I could not tell, but he was determined to play this out so I was not going to disappoint. Pulling up my big girl panties, I ignored the butterflies in my stomach and I showed Charles Howard the brain behind the boobs. What he did after that remains to be seen."
    ],
    "authorname": "Nyneve",
    "tags": [
        "virgin",
        "stripper",
        "lapdance",
        "masturbate",
        "encouragement",
        "blowjob",
        "titfuck",
        "big tits",
        "male/female",
        "office"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-trouble-with-moonlighting"
}