{
    "title": "Saturday Night School Ch. 06",
    "pages": [
        "(This is the sixth chapter of the Saturday Night School series, by Jessica Tang-Von Harper.\n\nOur story so far: \n\nCharlie Tucker is a high school senior who spends most of his Saturdays editing videos in the A/V room at Pine Hills High School. One Saturday, he discovers cheerleader Michelle Santos walking naked through the school. Michelle has a fascination with public nudity, and she and Charlie enter into a secret relationship centered around Michelle's experiments with streaking.\n\nAfter a disagreement with Michelle, Charlie asks junior Ronni Arthur to the prom. Michelle, feeling hurt, agrees to go to the prom with football player Glenn Mack. Charlie and Michelle renew their secret relationship during a trip to Charlie's film school interview in another city, which results in a wild sexual encounter on the train ride back. Unfortunately, Glenn's best friend Cody sees them and takes a video of them kissing on the train station platform. \n\nIn an effort to split up Charlie and Michelle, Cody first threatens Charlie before school, then sends the picture of Charlie and Michelle kissing to Ronni.)\n\n*\n\nRonni held her phone up to Charlie's face like an accusation. Charlie gazed at the picture on her screen, and his first, completely inappropriate thought was, \"Cody took a pretty good picture!\"\n\nBoth his and Michelle's faces were captured in profile and clearly visible. Michelle had her back against the pillar at the train station, and Charlie pushed against her. Cody had captured the moment of their kiss, their eyes closed, their mouths pressed together. Not a chaste kiss, not a friendly kiss. This was a kiss with desire behind it.\n\nHe must have zoomed in on our faces, Charlie thought. How long did he have his camera on us, anyway?\n\n\"Cody sent you that picture?\" he asked Ronni.\n\n\"Yes. Did you know he saw you?\" Ronni pulled the phone back and stabbed at the screen with her finger. \"So he took that picture on Saturday. That means while I was shopping for a prom dress, you were out with Michelle. Then I sent you a picture of the dress. Here's your response.\" She read from her phone: \"Hey Ronni, looks great. You're going to look amazing.\" Ronni lifted her eyes, glaring at him. \"Were you actually still with Michelle when you wrote this?\"\n\nCharlie felt a throb of pain from the side of his head. \"I just saw Cody in the bathroom. He had one of his football buddies punch me in the head.\"\n\n\"What?\" The change of subject caught her by surprise. \"Why? Because you kissed Michelle?\"\n\n\"I think so...\" Charlie leaned against a table and rubbed his head.\n\nRonni nodded. \"Because she said she would go to the prom with Glenn. You were kissing Glenn's date. So now, what? The whole football team is your enemy?\"\n\n\"Maybe...\"\n\n\"Charlie... please just be honest with me. I was glad that you asked me to the prom, and I thought it would be fun to go with you. But I can find someone else to go with. I really don't want to find out a week before that you're taking Michelle instead.\"\n\n\"I wouldn't do that to you, Ronni.\"\n\n\"You wouldn't? What if she insisted? Do you really think she couldn't get you to take her? You'd drop me in a minute.\" Ronni shook her head. \"What happened, Charlie? We talked about this before. You said you'd gone out with her a few times, but it was over. Then Cody sends me this picture, and it clearly isn't over. What happened?\" She looked up at him imploringly. \"Just tell me, Charlie. I need the truth from you, okay?\" \n\n\"The truth...\" Charlie whispered under his breath. He glanced down at his hands, tangled together in front of him. For a moment, he wrestled with indecision. He met her gaze, her eyes watching him, waiting for him.\n\nHe gave her the truth.\n\nHe started with how he glimpsed someone passing outside the A/V room, on a Saturday when no one should have been there. Ronni's eyes widened when Charlie described catching Michelle walking naked through the school. He tried to explain how Michelle's initial embarrassment had turned into a peculiar companionship, how he had escorted her on her nude stroll through the school, how they'd even gone outside to the parking lot. He left out a lot of the details, in particular the sex, and Ronni seemed to notice the gaps in his story but didn't press him. \n\nHow easily I tell Michelle's secrets, Charlie thought with a surge of guilt, but he went on to describe the Second Michelle incident. How she'd appeared naked in the A/V room, a few Saturdays later, after undressing by his car and sliding her clothes through his car window so she couldn't get to them again. Again, he left out the sex, and kept Daryl's role to a minimum. He skipped Third Michelle entirely, but tried to explain how his secret encounters with Michelle combined with the apparent social chasm between them at school had caused him to feel dissatisfied with his life, and that had prompted him to invite Ronni to the prom.\n\nHe described his conversation with Michelle on the bleachers, and his belief that it had ended things between them. But then he described how Michelle had come with him to Jefferson University for his film school interview, and how it had ended with her undressing in the train on the way back.\n\nRonni listened intently, asking few questions. The home room bell rang, but Charlie ignored it, and Ronni didn't show any intention of leaving until he was done with his story. He reached the kiss in the train station, and how he had discovered Cody on the opposite platform, recording them with his phone.\n\n\"Cody isn't going to show the picture to Glenn... but he did threaten me to stay away from Michelle. And Michelle told me she still wants to go to the prom with Glenn.\" Charlie threw up his hands. \"So... all that stuff that happened on Saturday, her taking off her clothes in the train, her kissing me in the train station... none of it has really changed anything.\"\n\nRonni didn't speak at first, but just sat quietly with her hands in her lap, a thoughtful look on her face. Charlie suddenly felt terrified that he'd just made a big mistake. He'd given up Michelle's secret and now Ronni, feeling slighted, would tell everyone at the school.\n\n\"Ronni... he spoke urgently. \"You can't tell anyone any of this.\"\n\n\"I won't,\" she said quickly. \"It's just... it's not what I expected.\" She looked up at Charlie with a sly grin on her face. It caught him by surprise.\n\n\"I know.\" Charlie looked away, nervously pushing his fingers through his hair. \"It's a weird situation. Definitely. I mean... it was just by chance that I caught her that first time. She has this thing that turns her on... this fetish... and because I was the one who caught her doing it... and I'm the only one who knows about it... now I'm a part of it.\"\n\n\"She likes the thrill of being naked out in public, and now she likes having you there to witness her do it,\" Ronni murmured.\n\n\"Yeah. Right.\"\n\n\"Because she knows you like to see her doing it. You like to watch her while she streaks.\"\n\n\"Uh...\"\n\n\"Oh, don't pretend. Just about every boy in this school would like to see Michelle Santos naked. You're no different.\"\n\n\"I'm not pretending anything,\" Charlie said. \"I'm just not going to speak for Michelle. You'd have to ask her why she likes having me there.\"\n\nRonni look thoughtful for a moment. \"I know a place,\" she murmured.\n\n\"What place?\"\n\n\"A place where Michelle could be outside. Where you and her could walk around and no one would care.\"\n\n\"Walk around?\" Charlie struggled to understand what she was suggesting. \"You mean where Michelle could... um...\"\n\n\"Where she could walk around naked,\" Ronni said matter-of-factly. \"Outside. And you could take her there and be with her and Cody and Glenn would never know.\"\n\n\"Where?\"\n\n\"Have you ever been to Greenholt Gardens?\"\n\n\"Yes...\" Charlie said slowly. \"We had a class picnic there in seventh grade.\" He remembered green paths that wound through flower beds and groves of trees. An artificial pond filled with koi. A wide green field where some of the boys had tossed around a football. \n\n\"My brother works there,\" Ronni said. \"He's like the night watchman. There's a restaurant there called The Shamrock, that's open until 10 or 11, and after it closes, my brother says its just him. This big, beautiful garden, and it's totally empty, all night long.\"\n\n\"Except for your brother,\" Charlie said. \n\n\"Right.\" Ronni smiled. \"But I'm pretty sure he wouldn't mind.\"\n\nCharlie shook his head. \"Thanks for the thought. But I didn't tell you all this looking for your help. I just felt like I owed you the truth of this thing I'm mixed up in with Michelle. If it's too much, if you want to go with someone else to the prom, then I totally understand.\"\n\nRonni leaned forward in her chair. \"We're going to the prom together as friends, right?\"\n\n\"Yeah.\"\n\n\"So that's why I want to help you with Michelle. Because we're friends.\" Ronni gazed up at him.\n\n\"Okay. But you know, I can't even tell her we had this conversation. It's just between us, okay?\"\n\n\"I know, Charlie.\" Ronni pantomimed turning a key at the corner of her mouth, then smiled. \"You can trust me.\" She leaned back in her chair again and crossed her hands in her lap.\n\n***\n\nCharlie had trouble concentrating as lunch approached. He kept an eye out for Michelle in the halls but didn't see her, and started to wonder if she hadn't come to school that day. Maybe she'd skipped school for some reason. He thought about texting her, now that he had her number saved in his phone, but couldn't think of what to say.\n\nThe lunch bell rang and he walked towards the cafeteria with grim expectations. She wouldn't be there. He'd asked her to lunch spontaneously, after a long day, and she probably didn't even remember she'd agreed to it. It made sense that she would forget. If she was even in school at all.\n\nCharlie pushed through the doors into the cafeteria. He stepped to the side, out of the way of the steady stream of people entering behind him, and stood with his back against the wall. He scanned the cafeteria, and found Michelle immediately. She was sitting at a table by herself, almost in the center of cafeteria. He could only see the back of her head, but he knew it was her. His heart bounced in his chest. \n\nThis is it, he thought. I'm going to walk over and sit right in front of her, and everyone's going to see us together, and everyone's going to know that we're a couple. Maybe in a weirder way than they can ever understand... but it's the truth. Michelle Santos and I are a couple.\n\nEven in his thoughts, it sounded unbelievable.\n\nCharlie took a step towards Michelle. Just one step and then he froze in place.\n\nHe could see a group approaching Michelle's table, flowing inevitably towards her. Vampire Vanessa, flanked by two more cheerleaders, Sandy and Tina. Behind them, Cody and Glenn Mack and Ryan Fender. Ryan Fender, most likely the source of the punch that had made Charlie's head spin that morning. Cody, the guy who had ordered the punch. More of Michelle's friends, a procession of them, headed for her table. \n\nHe could see Michelle perk up as Vanessa called out to her. Charlie was too far away to hear, but he could see Michelle raise her head, and could see her smiling and nodding to the approaching group. Vanessa set down her tray next to Michelle, and Sandy and Tina did the same. Cody and Glenn were already grabbing another table and moving it next to Michelle's. A long table for them all to sit.\n\nI can't do it, Charlie thought. If it was just her alone, maybe I could. But I can't sit with all her friends. I just don't belong there.\n\nHe realized then that it was just a fantasy, the idea that he could bring their fling into the daylight. Seeing her, surrounded by her friends, he understood that what he and Michelle shared in private could never be revealed to the world. It was a secret link between them, a bond meant for empty schools and empty trains. Michelle had been alone before with her secret impulses; now he had joined her in her hidden life, and she wasn't alone anymore. Nevertheless, her secret still separated the two of them from everyone else.\n\nHe gazed at Michelle, surrounded by her circle of friends. Enjoy her, he thought to them. Talk to her, have fun with her, even go to the prom with her. But you'll never truly know her. Not like I do. You've never seen her face as filled with life as I have.\n\nHe would talk to her later, sometime when he could speak to her alone. Maybe he would spend his lunch brainstorming a way to present Ronni's Greenholt Gardens offer to her. Of course, first he would have to gently break the news to her that he had told Ronni everything, and that was a conversation he wasn't looking forward to.\n\nOr maybe he'd leave Ronni out of it and think of something else he and Michelle could do together. Maybe they could just get together and drive, leave Pine Hills behind and drive for miles and miles. Find someplace else to be for an evening, someplace where no one knew them. Someplace far from Cody and Glenn and all the rest of them.\n\nCharlie let his eyes linger on Michelle one last time as he turned to leave the cafeteria. Was it a fair exchange? To give up any public association with Michelle in exchange for the private life he shared with her? Resigning himself to watching her from the other side of the cafeteria, from the other side of the hallway, from his camera perch at the top of the bleachers, knowing that later when she was alone with him she would be naked and beautiful in his arms? Was he satisfied with that deal?\n\nYes, he decided. It was enough. More than he ever hoped for.\n\nHe turned and walked out of the cafeteria.\n\n***\n\nAs he walked away, uncertain where he was going, Charlie moved to the side of the hallway to avoid the flow of students that headed into the cafeteria. He was almost at the end of the hall when he stopped abruptly.\n\nMichelle! It was Michelle! He saw her walking right towards him, part of the stream of students walking to lunch. So that girl he'd just seen in the cafeteria, sitting with Cody and Glenn and Vampire Vanessa... That wasn't Michelle at all! He'd made a mistake, misidentified some other girl with long dark hair. What a dummy! \n\nHe raised his hand to Michelle, smiling, about to greet her.\n\nThe instant before he spoke, he realized he was wrong. It wasn't Michelle walking towards him. He vaguely recognized this dark-haired girl; she was a sophomore, and Charlie didn't know her name. She didn't even really look like Michelle. Charlie's hand wilted to his side. How could he have made that mistake? Was it a matter of his eyes seeing what he wanted to see?\n\nCharlie stopped, putting his back against the wall, watching the dark-haired girl as she passed by him. A stranger, she didn't notice him, didn't look at him. She just walked right by as if he wasn't there.\n\nHe turned, no longer looking at the dark-haired girl, now looking at the cafeteria door as it opened and closed. He was shaking his head without noticing what he was doing. \"No.\" He spoke out loud. \"No. It's not enough.\"\n\nHe couldn't go back to walking past Michelle and pretending he didn't know her. He didn't want just the secret part of her life. \n\nHe wanted all of it.\n\n\"Shit,\" he swore softly, squeezing his hands into fists, knowing what he had to do. \"Come on, Charlie. If you're gonna go, then go. Don't keep her waiting.\" He took a deep breath. \"She's worth it.\" He felt like he could repeat those three words over and over again, like a mantra, to keep his resolve firm. He left the wall and went back into the cafeteria.\n\nHe didn't go directly towards Michelle. The whole idea was that they were going to have lunch together, so he needed to buy himself a lunch. He went to one of the refrigerated bins and grabbed a pre-packaged chicken salad sandwich, then grabbed a bottle of Sprite. He didn't even feel hungry; the sandwich and soda were more like props. He stood in line at the register and handed the cashier a twenty. He almost walked away without his change.\n\nHe walked along the edge of the cafeteria, eyeing the group that now took up three tables in the middle of the cafeteria. He could see Michelle's profile clearly now, sitting right in the middle of the group. She was smiling, talking to Vanessa. She wore a thin-strapped blue dress that left her shoulders mostly bare. What was it Greg Arden had said once, in this same cafeteria? \"That Michelle Santos always has something on...\"\n\nCharlie changed course, heading directly for that cluster of three tables with his sandwich and his Sprite. He approached from an angle that was just behind Michelle's peripheral vision, so she didn't see him coming towards her, and she wasn't likely to notice him until he was right up at her table. \n\nNo one paid him any attention until he was almost right behind Michelle, and it was Tina who noticed him first. She sat across from Michelle, and she glanced up at him as he approached. At first, her eyes dropped back down, showing little interest, and then something clicked in her mind and she looked back up at him, now very interested. She grinned, glancing between him and Michelle.\n\nCharlie stood awkwardly, surveying the group. Vanessa sat to Michelle's left, and Sandy to her right. Tina sat across from Sandy, and Glenn sat across from Vanessa. In between Sandy and Glenn, across from Michelle, a chair sat empty.\n\nHis seat. Michelle had saved it for him.\n\nCharlie saw the faces looking up at him, the different reactions to his presence. Vanessa looked startled, Glenn looked puzzled. Sandy's face matched Tina's, a grin of delighted interest. Cody looked annoyed and Ryan Fender almost looked impressed.\n\nMichelle looked up at him and she had the most beautiful smile he had ever seen. She didn't say anything, only pointed at the empty seat across from her.\n\nAs Charlie circled the cluster of tables, heading for that empty seat, he heard Cody say, \"THAT'S who you were saving the seat for?\" \n\n***\n\nCharlie sat with Michelle's friends expecting to be eyed suspiciously as an outsider, particularly after the way Cody had treated him earlier that day. But Cody mostly kept his thoughts to himself (aside from a few barbed comments) and Charlie was surprised to find that most of Michelle's friends were friendly to him. Vanessa, who more than anyone else must have realized what Charlie's presence meant for Michelle, made a clear effort to engage him in the conversation, and Sandy and Tina kept smiling at him and giggling.\n\nHe expected some animosity from Glenn; after all, weren't they rivals for the same girl? But Glenn was actually very friendly towards him, first asking questions about a highlight reel Charlie had edited together for the football team and then becoming very interested when Charlie mentioned pursuing a career in film. As they discussed different films, Charlie found to his astonishment that he was beginning to like Glenn. The tall football player actually seemed like a pretty cool guy.\n\nMaybe Glenn didn't see him as a rival for Michelle. It made sense. Glenn didn't know about the kiss in the train station; Cody had intentionally kept that information from him. And he was still taking Michelle to the prom. Maybe Glenn just saw Charlie as one of Michelle's odd friends, maybe a means to get closer to her.\n\nMaybe a guy like Glenn wouldn't see Charlie as a rival anyway. Glenn was tall, handsome, athletic. What did he have to fear from a quiet loner like Charlie?\n\nMichelle acted shy, speaking very little, only slipping in a comment now and then. Whenever Charlie glanced in her direction, she always seemed to be peeking at him, and she always had the same little smile on her lips. \n\n\"You've barely touched your sandwich,\" she observed as lunch period came near to ending.\n\n\"Oh. Yeah,\" he said, looking down at his sandwich with three bites out of it. \"I'll save it for later.\"",
        "She nodded, her eyes twinkling. The same little smile.\n\nGlenn got to his feet. \"Better get to class,\" he said. \"What do you have now, Charlie?\"\n\n\"Video 3.\"\n\n\"Awesome. I'll see you around then.\" Glenn clapped him on the shoulder, before turning to leave with Cody and a few of the other football players.\n\nCharlie stood, uncertain how Michelle would say goodbye to him in public. He felt slightly disappointed when she only waved at him and said, \"Bye, Charlie!\" before flitting away with her circle of friends. That disappointment was somewhat tempered when several of the other cheerleaders also said goodbye to him, including Vanessa, who gave him an assessing look before turning away. \n\nHe lingered behind, watching the group of girls as they left the cafeteria, in particular watching Michelle, her blue dress clinging to her perfect figure as she walked out the door. The lunch group had dispersed; Charlie had arrived alone, and he would leave alone. \n\nThat was fine. He had done it! Lunch with Michelle, out where everyone could see, and it couldn't have gone better. Charlie felt like he was floating as he walked to his next class. He felt like smiling and saying hi to everyone he passed.\n\nHis good mood lasted all through the afternoon, up to the point where he walked to his car after school and discovered all of his tires had been slashed.\n\n***\n\nHe would have preferred that Daryl not get involved, but it was impossible to hide his slashed tires from the security guard, especially when he had his car jacked up with a stack of tires next to it. Charlie had found a nearby place called Discount Tire Warehouse, and after Charlie explained his predicament over the phone, the sales manager agreed to deliver four slightly worn replacement tires to the school parking lot. Unfortunately, Charlie couldn't afford the labor to have the tires changed, so he was stuck doing that himself.\n\n\"Who the hell did this?\" the guard fumed. \"I'm not going to let this kind of thing happen in my parking lot.\"\n\nCharlie tried to evade the question, but Daryl wouldn't drop it. Finally, Charlie told him, \"I had lunch with Michelle today in the cafeteria. I think I probably made someone jealous.\"\n\n\"Who?\" Daryl looked at him intently. \"You have an idea?\"\n\n\"I don't know for sure...\" Charlie said. \"You don't have to worry about it. It's my problem.\"\n\n\"The hell I don't have to worry about it. I'm the security guard. It happened in my parking lot. That means it involves me. You have any idea who it was, even just a notion, you tell me. I'll find 'em and make 'em admit it.\"\n\nCharlie held up his hands. \"I don't know. Someone who's pissed that I'm hanging out with Michelle. That's my best theory, and unfortunately it doesn't narrow it down much. Lots of guys like Michelle.\"\n\nDaryl scowled. \"All right. All right. Maybe that's all I got to go on. But maybe it's enough.\" He nodded to himself and muttered, \"Maybe it's more than enough.\" The guard dropped the subject, although the stony scowl never left his face as he helped Charlie change the four tires.\n\nCharlie finally made it home three hours after school let out. He could see that his mom's car wasn't there, which was a relief. She would have asked why he was at school so late, and he had no idea how he would have explained to her that someone had intentionally flattened all his tires.\n\n\"Just an act of random vandalism, mom,\" he murmured to himself as he unlocked the front door. \"Could have been anyone.\"\n\nShe probably would have insisted on calling the police. \n\nAs it was, he doubted she would notice his car had different tires. The discount replacement tires he bought were used and already showed some wear. They wouldn't stand out like new tires would have. And his mom was not the most observant person. \n\nHe noticed the message light blinking on the answering machine. He pressed the button and heard his mom's voice. \"I'm gonna be late, Charlie...\" she said. \"We're doing an inventory of one of the storerooms and I need to cover a swing shift. See you later tonight, okay?\"\n\nCharlie went to the kitchen to cook himself some dinner. He was just starting the microwave when his phone rang. He glanced at the name on the screen. Michelle. The first time she'd ever called him.\n\nHe walked to the living room and answered the call. \"Hello?\"\n\n\"Charlie?\" Michelle's voice.\n\n\"Yeah. Hi.\"\n\n\"Are you okay? Are you still at the school?\"\n\n\"No.\" Charlie sat down in a chair. \"I'm at home.\"\n\n\"I heard about your tires. I'm so sorry that happened to you.\"\n\n\"Do you know who it was?\" Charlie asked. \n\nMichelle hesitated. \"I got mad at him,\" she said.\n\n\"Cody?\"\n\n\"Vanessa and I yelled at him. He said he didn't do it... but I know he had something to do with it. Charlie... he's going to pay you back for the damage. How much was it?\"\n\n\"He's going to pay me back?\" Charlie thought he must have misheard.\n\n\"He is. How much?\" \n\n\"Um... about $250 for four tires. Four used tires.\"\n\n\"Ok. I'll get the money from him and give it to you.\"\n\n\"Wow,\" Charlie said. \"Thanks, Michelle. What did you say to him? You must have really let him have it.\"\n\n\"Well...\" she said, \"Vanessa was with me.\"\n\n\"Right. He's dating Vanessa. I forgot about that.\"\n\n\"Mm... I don't know that they're really dating...\" Michelle said. Her voice sounded subdued. \n\n\"Okay. But they're going to the prom together. That kind of means they're dating, right?\"\n\n\"No... I mean, I don't know.\" Michelle paused. \"Charlie, I need to tell you something.\"\n\n\"What?\"\n\n\"I hope you won't be mad.\"\n\nCharlie sat up in his chair. \"What is it?\"\n\n\"When I talked to Cody... I had to tell him that there's nothing between you and me. I told him you and I are just friends. I mean, that I just see you as a friend.\"\n\nCharlie held the phone to his ear, his body motionless. \"Is that true?\" he asked. \"Do you just see me as a friend?\"\n\n\"No...\" she said softly. \"It's not true. You're not just a friend.\"\n\n\"Then why'd you say it to him?\"\n\n\"So he'll leave you alone.\"\n\nCharlie scowled. \"So you're going to let him win.\"\n\n\"No...\" She paused. \"It's just none of his business. He thinks it's his business, he thinks he's being a good friend to Glenn. But I don't belong to Glenn or anybody.\"\n\n\"So then why didn't you tell him to stay out of it?\"\n\n\"Because...\" She hesitated. \"I just don't know if that'll work. I mean, I don't think he'll stay out of it. Glenn is his friend...\" She sighed. \"Please, Charlie... just until prom, okay? I told Glenn I would go with him. I mean... I still hope I'll see you... outside of school.... but at school, can we just be friends?\"\n\nCharlie closed his eyes. \"So back to walking past you pretending I don't know you.\"\n\n\"Um, friends say hi to each other, you know. I'm not asking you to pretend you don't know me.\" Michelle paused, then continued in a softer voice, \"I just... I don't want Cody watching us. Following us, to see what we're doing. I don't want him taking any more pictures... because... what if he catches me? And what if he takes a picture of me?\"\n\n\"Oh...\" Charlie nodded slowly. \"Like outside.\"\n\n\"Yeah,\" she whispered. \"Outside. Like what if he takes a picture and shows it to everyone? He almost caught us on Saturday. I had just put my dress back on when he saw us.\"\n\n\"Right,\" Charlie said, thinking that he had been the one to put her dress back on. Michelle had showed every intention of stepping out of the train while still completely naked. That would have presented an interesting picture for Cody to take. \"I see what you're saying. So... you think we're going to have more... adventures?\"\n\n\"Well... I'm having fun. Aren't you?\"\n\n\"Yeah.\" Charlie suddenly thought of Ronni. He needed to tell Michelle that Ronni knew what they'd been doing. But it didn't seem like the right time to tell her. \"Okay. Just friends at school. Outside of school...\"\n\n\"Bonnie and Clyde,\" she said.\n\n\"Our secret life of crime.\"\n\nShe giggled. \"Yeah.\"\n\n\"You know, Daryl was pretty mad about the tire thing. I told him I didn't know for sure who did it. But he seemed pretty set on figuring out who it was.\"\n\n\"Oh. Well... if Cody pays you back, do you think you could talk to Daryl and get him to drop it?\"\n\n\"Maybe,\" Charlie said. \"I can try. He is the security guard, though.\"\n\n\"Yeah. What about your mom? What did she say?\"\n\n\"I'm not going to tell her, to be honest. She's not home yet, anyway. She's working late.\"\n\n\"Oh? How late?\"\n\n\"She's covering a second shift at work. She won't be home until past 11.\"\n\n\"Oh, really...\" Michelle murmured. \"Are you all by yourself?\"\n\n\"Yeah, I'm home by myself.\" Charlie abruptly realized the tone of the conversation had changed. He sat up straighter in his chair. \"Why?\"\n\n\"Let me come over.\"\n\n\"You want to?\"\n\n\"I want to make it up to you. For telling Cody that you and I are just friends. I felt like I had to say it, but I'm sorry I said it and I want to make it up to you.\"\n\n\"It's fine. I get why you said it.\"\n\n\"I want to make it up to you anyway.\" Her voice was low and sultry, like a purr. \"Should I come over?\"\n\nCharlie licked his lips. \"Do you remember where I live?\"\n\n\"I can find it. See you soon.\" She disconnected before he could say anything else.\n\nCharlie set his phone on the armrest and leaned back in his chair. He'd come home while the sun was still up, but now it was dusk and he hadn't turned on any lights so he sat in a rapidly darkening house. He could feel his heart beating in his chest as he anticipated Michelle's arrival.\n\nHe thought, \"When she gets here... we're going to have sex.\" It wasn't even wishful thinking. He was pretty sure he could treat it as a fact. Every time he'd been with her, they'd ended up having sex.\n\nThen he thought, \"That was the first time I've ever talked to her on the phone.\" Which was so strange to think about that he thought for sure it must be wrong. How could it be that they'd never talked on the phone before? \n\nHe roused himself from his chair and went around the house turning on lights, trying to give the house a warm glow. He remembered that he had microwaved a mini-pizza for himself, so he took it out and put in a second mini-pizza for Michelle. He took out two cans of Sprite and set them on the table.\n\nWhat else to do? He thought about turning on the TV but felt too restless to sit and watch it. He paced back and forth through the house, tidying things here and there. The microwave beeped, so he took Michelle's pizza out and sat it on a spot at the table with her Sprite. He put his own pizza on the table across from hers. Not exactly a romantic candlelight dinner, but at least if she was hungry she'd have something to eat.\n\nA timid knock came from the front door. Charlie walked quickly to the door and pulled it open. \"Hi,\" he said.\n\n\"Hi,\" Michelle said. She stepped inside. Charlie admired the short tan summer dress she was wearing, dotted with a pattern of tiny red flowers. It fit her loosely, coming down to just above her knees, and he could tell by the way it draped over her breasts that she wasn't wearing a bra underneath. He could easily make out the points of her nipples against the fabric. She wore brown sandals, which she kicked off beside the door. She set her purse down as well.\n\n\"Still here by yourself?\" she asked.\n\n\"Yeah.\"\n\n\"Good.\" She reached down to the hem of her dress and in a single fluid motion pulled it up, tugging the fabric over her arms and head until it came loose in her hands. She was naked underneath. She balled up the dress and handed it to him. \"Will you put this in your room?\"\n\nCharlie gaped down at her exposed body for a moment, then realized she was standing in the open doorway. He hastened to close the door, pulling her in by her shoulder. He peeked out the door to see if anyone had seen, but no one was outside. \"Wow,\" he breathed. \"Not wasting any time, are you?\"\n\n\"No.\" Michelle walked into the living room and stood there, looking around. \"You don't mind, do you?\"\n\n\"No.\" Charlie's eyes lingered on her perfect ass. \"Not at all.\"\n\nAs if she could feel his eyes on her body, she looked over her shoulder, smiling. \"I'm usually like this when we're alone, right? You're probably used to it.\"\n\n\"I wouldn't exactly say I'm used to it...\" Charlie said. \"Um... I'll go put your dress in my bedroom, then.\"\n\n\"Okay.\" Michelle carefully lowered herself onto the couch, perching on the edge of the cushion for a moment before slowly settling back. He noticed her hands rubbing her upper legs in that habit of hers.\n\nCharlie quickly went up the stairs and entered his room. He draped her dress over his desk chair and then came back down, taking the stairs two at a time. \n\nMichelle looked up at him as he entered the living room. She sat in the middle of the couch, her legs together and her hands on her knees. Charlie thought she looked nervous, sitting as if she shared the couch with two enormous invisible men on either side. \n\n\"Um... so I don't know if you're hungry...\" he said, \"but I cooked you a pizza for dinner... it's on the kitchen table, if you want it...\"\n\nShe nodded. \"Ok. I haven't had dinner.\" She rose to her feet.\n\nCharlie started walking towards the kitchen. He glanced over his shoulder but Michelle still stood in front of the couch, gazing at him. \"I made one for myself, too,\" he said. \"I mean... I made one for myself before I knew you were coming... and I haven't eaten it yet. It's on the table, too.\"\n\nMichelle just stood there, watching him.\n\n\"Aren't you coming?\" he asked.\n\n\"Charlie...\" Michelle said softly. \"You haven't even kissed me yet.\"\n\nHe blinked at her for a moment, surprised. Then he came to her and embraced her. His arms circled her waist, touching her warm skin. He could smell the perfume on her. His lips found hers, and he kissed her softly, conscious of her breasts which pressed against his chest. He kissed her again, harder this time, and allowed his hand to rise up and press against the cushion of her left breast, the nipple hard against his palm.\n\n\"I guess sometimes I forget I'm allowed to kiss you,\" he murmured, their heads tilted and leaning against each other.\n\n\"I'm sorry,\" she said. \"Are you sure you're all right with me being like this? It's not weird, is it?\"\n\n\"That you're naked?\"\n\n\"Yeah.\" She leaned against him, her arms loosely wrapped around his shoulders.\n\n\"It's fine. My mom's not coming back until late tonight.\" He lightly stroked her nipple with his finger, playing with it. It occurred to him that not only was she nude in his house, but very likely he was free to touch her body however he liked, whenever he liked. His erection surged to life, swelling against the front of his pants. He thought about reaching between her legs, to test his theory, but he didn't want to push her too far too fast. \"Come on.\" He looped his arm behind her waist. \"I need your help to fulfill this fantasy of mine. It involves me watching a beautiful naked woman eat a pizza.\"\n\nShe laughed and let herself be pulled towards the kitchen.\n\nThe dinner looked pathetic when he saw it, an empty table with just the two cheese pizzas on paper plates. He hadn't even cut them into slices. \"I know it's not much...\" he said, embarrassed. \"I can see what else we have...\"\n\n\"No, no. It's great! I love pizza.\" She approached the table. \"Which one is mine?\"\n\n\"That one is hotter. Let me cut it into slices.\"\n\n\"No! You sit.\" Michelle took his arm and guided him to a chair. \"I'll cut them for us. Where's your silverware?\"\n\nCharlie sat down and pointed to the silverware drawer. He watched Michelle as she swayed over to the drawer and found a knife. She walked back and leaned over the table, her breasts wiggling as she vigorously cut his pizza into quarters. After it was done, she stood up straight, her arms behind her back. \n\n\"Where's your cups?\" she asked.\n\n\"Cups? That cabinet, right there.\" He pointed. She spun and walked to the cabinet. He watched her stretch up and pull out two glass tumblers. She took them to the refrigerator and filled them with ice. Returning to him, she sat a glass down by his plate and a glass by hers. She took his Sprite and opened it, filling his glass until the bubbles threatened to overflow the top. Once again, she stood up straight and put her arms behind her back, her body displayed to him from head to toe.\n\n\"Do you need anything else?\" she asked. With her naked body right there in front of his eyes, it was hard not to react to the double entendre in her question. \n\n\"Not right now...\" he managed to say. His erection felt like it was going to rip through his pants. \n\n\"Bon Appetit!\" She smiled.\n\n\"Thanks,\" he said, picking up a piece. \"Uh... you, too.\" She stood and watched him until he lifted his pizza and took a bite, then sat down in front of her own pizza and started to cut it. He couldn't help watching her breasts dance as she moved the knife back and forth. \n\n\"You seemed to get along with everyone at lunch today,\" Michelle remarked.\n\n\"Yeah,\" Charlie said. \"I guess so. Even Glenn. I thought he'd give me shit about sitting by you, but he seemed okay.\"\n\n\"Yeah, Glenn is nice.\"\n\n\"Cody told me he wasn't going to tell Glenn about seeing us at the train station. So Glenn doesn't know.\"\n\nMichelle shrugged. \"He doesn't need to. It's not his business.\"\n\n\"He likes you, though.\"\n\n\"It's still not his business.\" She opened her own Sprite and filled her glass.\n\n\"Does Vanessa know?\" Charlie asked. \"About us and the train station?\"\n\nMichelle shook her head. \"No. I don't know how to tell her without telling her everything. She'll ask questions, and she'll know that I'm holding things back.\"\n\n\"Right.\" Charlie took a bite of his pizza. Michelle hadn't touched hers.\n\nA car could be heard driving by outside. Michelle tensed, looking towards the front of the house.\n\n\"Don't worry,\" Charlie said. \"We still have a few hours before my mom comes home.\"\n\nMichelle laughed nervously. \"Can you imagine what she would think of me if she saw me like this?\"\n\n\"You're fine,\" he soothed her. \"Relax.\"\n\nMichelle reached for her pizza, took a tiny bite of the tip and then set it back down. \"Do you think you'll sit with us in the cafeteria from now on?\" she asked.\n\nCharlie brooded on her question before answering, \"No, I don't think so.\"\n\n\"No?\" She looked up at him.\n\n\"We're going to be just friends at school, right?\"\n\n\"Yeah,\" she said softly. \"But friends eat lunch together.\"\n\n\"I know...\" he said. \"But I don't think I'm a very good actor.\"\n\n\"Actor?\"\n\n\"Yeah. You know... sitting at a table with all those people, putting on a show like I just wanna be your friend.\" Charlie shrugged. \"I don't think I can do it.\"\n\nMichelle looked to the side, gazing at a painting of a dog running in a field that hung on the wall. Her fingers traced the edge of the table. \"You think they won't believe you?\" she asked. \n\n\"Nah. I mean, really, who would?\" Charlie glanced at the painting, not sure what it was about it that held her attention. \"What guy just wants to be friends with you?\"\n\n\"Because guys think I have a nice body,\" she murmured. \"Is that what you mean?\"\n\n\"Um... well, you do have a nice body... obviously...\"\n\n\"So you're worried that everyone at the table is going to know you want to fuck me?\" Michelle still had her eyes to the side, avoiding his eyes.\n\n\"No. That's not what I'm saying.\" \n\n\"You think everyone's going to know that you DO fuck me?\"\n\n\"No, no.\" Charlie took a breath. \"I'm not just talking about... sex. I'm talking about everything. I can't sit at the table and act like we don't have all this between us. It's going to be really obvious to everyone that you mean much more to me than just a friend. I think Vanessa is already pretty wise to us.\"\n\nMichelle finally moved her eyes to Charlie. \"Yeah,\" she said softly, smiling. \"I think she is.\" A car honked outside, and she flinched, turning to look in that direction. ",
        "\"Just the neighbor across the street,\" Charlie said. \"His car beeps when he puts on the alarm. I hear it all the time.\"\n\nMichelle nodded. Despite her obvious anxiety that she might be caught, she still seemed devoted to remaining nude. She'd barely touched her pizza, while Charlie had mostly just the crusts left. \n\nHe pushed back his chair and stood. She looked up at him, watching as he came to kneel beside her.\n\n\"What are you doing?\" she asked.\n\nHe reached out and touched her right breast, gently caressing it. \"I don't want you to be nervous,\" he told her. \"Just relax, and eat your dinner. My mom's not coming home for hours. It's just you and me.\" He circled her nipple with his finger, and she took a slow breath, accepting his touch.\n\nShe picked up a slice of pizza and took a bite, chewing it quietly while he leaned down and took her nipple in his mouth. He peeked up at her but her eyes were closed. She sighed as he ran his tongue around the tip of her nipple, then gently sucked on it.\n\nCharlie's hand slid over her flat tummy, stroking her groomed line of pubic hair, finding the wet spot between her thighs. He nudged her legs with the back of his hand, urging them apart, and she obediently acquiesced, separating them to the sides of the chair. He traced her slit with his fingers, her slickness leaving a shine on his fingertips. His finger slipped into the cleft at the top of her pussy, pressing against the thin veil over her clit.\n\n\"Charlie...\" she breathed.\n\nHe lifted his mouth from her breast to ask her, \"Are you finished with your dinner?\"\n\n\"No...\"\n\n\"Go ahead and finish.\" \n\nShe nodded. Her trembling hand brought the slice of pizza up to her mouth and she took another small bite as Charlie pushed his finger into her pussy. He explored her with his fingers while his mouth returned to her nipple, his tongue swirling around the hard tip, nudging it in a circle. He could see her face, her eyes closed, her lips parted. She struggled to continue eating, clearly distracted by her body's reaction to his manipulations.\n\nHis earlier instinct had been correct; she was naked in his house, offering her body to be touched by him however he wanted. It turned him on immensely to have such unrestrained access to her beautiful body, and he understood that this was a turn-on to her as well, to leave herself so deliciously vulnerable, completely naked, to accept his mouth on her breasts, his fingers in her pussy, while she pretended to eat her dinner as if nothing was out of the ordinary.\n\nHe had an outrageous thought that made his erection throb, a test to see if she had truly surrendered her whole body to him. He reached under her leg, pulling it up towards her. His other hand slid down over her pussy, continuing lower. She took a sharp breath as his finger tip slid against her asshole. He waited to see if she would object, but she just took another small bite of pizza. He wriggled his fingertip against that opening, toying with it while he watched her face. She struggled with the fragment of pizza in her mouth, clearly distracted by what he was doing.\n\n\"Oh my god, Charlie...\" she gasped. \"What would your mom think if she walked in right now? What would she think of me?\"\n\nHe murmured, \"She would think maybe you let me get away with a little too much.\" He leaned in close to Michelle's ear, his finger pressed against her asshole. \"It's all my influence. Isn't that what we decided we'll tell everyone, if we ever got caught? I'm the one that's doing this. You're just doing it because you like to please me. Isn't that what we'll say?\"\n\n\"Ohh...\" she moaned.\n\nHe pulled his finger away. Now he used both hands to grip her knees and pull her legs wide apart. \"What are you doing now?\" she asked.\n\n\"Having you for dessert.\" He gazed at her glistening pussy, then leaned forward and pressed his lips at the tip of her crevice, just below her strip of pubic hair. He held her legs up, angling her pussy towards him so he could put his mouth on it. He breathed in the tangy scent of her desire, savored the taste of her juice on his tongue as he ran his mouth up and down her slit. Michelle leaned her head back, a slice of pizza dangling forgotten in her hand, her body writhing as he slid his tongue into her.\n\nHe could feel her hips tensing as he hunted for her clit. His tongue swirled, pressing urgently against her sensitive nub, and she shivered underneath him. Outside, a car drove by, and Michelle asked, \"Did your mom just drive up?\" Despite her concern, she kept her legs splayed open and made no effort to push his head out from between her legs.\n\nCharlie lifted his head. \"Don't worry...\" he said. \"When she walks in, just say, 'Hi, my name is Michelle, it's nice to meet you.' \"\n\n\"Ohhh.... don't tease me,\" she sighed. \"Ohh.. that feels good...\"\n\nCharlie teased her anyway, but with his mouth and tongue, grinding his tongue against her clit until she was thrusting her pelvis up towards him, then pulling away, leaving her desperate for more. She was so wet that he knew his cock would enter her effortlessly, and finally he couldn't restrain himself any longer. He slid his hands under her ass and lifted her off her chair, setting her at the edge the table. He unzipped his pants and pulled his hard cock free. It only took a moment to position the swollen head at the opening to her pussy, and then it was just a matter of leaning forward to plunge it inside her. \n\nCharlie moved slowly, pulling out, pushing back in, enjoying the feel of her warm pussy yielding to his cock. Michelle had her eyes closed, lost in the sensation of their joining. She draped her arms around his neck, holding him loosely, her head against his shoulder, her hair tickling his face.\n\n\"Charlie...\" she spoke urgently. \"Let's go up to your room... to your bed...\"\n\nCharlie felt reluctant to stop. \"You want to?\"\n\n\"Charlie...\" she breathed. \"Please... can we go upstairs?\"\n\n\"Okay.\" He pushed in once more and held himself there, giving himself a moment to experience the exquisite sensation of her warm pussy squeezing his cock. Then he pulled out. He started to put himself away, but Michelle reached out and took hold of his shaft in her small hand. \n\n\"You don't need to put it back,\" she said. \"You're going to take off all your clothes anyway, right?\"\n\nSo they walked up the stairs, naked Michelle leading the way, her perfect ass bobbing right in front of his eyes while his erect cock jutted out towards her as if straining to touch her. When they reached his room, he had no sooner turned on the light when she was on her knees taking him into her mouth. Her lips slid up and down his shaft while he closed and locked the door. His mom wouldn't be home until 11 o'clock... but better safe than sorry. He doubted he would be paying any attention to the sound of a car pulling into the driveway.\n\nMichelle pulled off his cock for a moment, smiling and licking her lips. \"I can taste myself,\" she said.\n\n\"Probably you would if you kissed me, too,\" Charlie said.\n\nShe giggled. \"I'll try that in a minute.\" She kissed the tip of his penis and let it slip once again between her lips. He pulled off his shirt and tossed it on the floor. She helped him pull off his pants, then allowed him to sit on the bed before lowering her mouth on his cock again.\n\nCharlie closed his eyes, enjoying the feel of her tongue as it slid around his shaft like a snake winding around a tree branch. He leaned back on his elbows, settling onto his bed. Her dark hair fell across his lap and he could feel strands of her hair flowing over his balls as she bobbed up and down. He struggled to restrain himself from thrusting up into her mouth, matching her rhythm, pushing up as far as he could until her lips touched the base of his shaft. He couldn't imagine that his entire cock could fit into her mouth. He felt sure that if he tried, he would choke her.\n\nMichelle let him pop out of her mouth and she paused to catch her breath, her chin resting against the head of his penis. With her eyes closed, she began to climb onto the bed, her warm body sliding against his, his cock dragging between her breasts and down her belly. She hovered above him on her hands and knees, and with her eyes still closed, reached down for his cock and fed the head of it into her waiting pussy. Sighing, she sank down onto him.\n\nWith a contented smile on her face, she began to move up and down on him. Charlie lay there, barely moving, letting her pleasure herself on his erection. She shifted her hips as she slid up, grinding her clit against his shaft, and he could tell that every time she eased down onto him, it moved her closer and closer to a climax. It didn't take long. She came suddenly, gasping and trembling, before collapsing on top of him. He could feel the sweat on her back as he embraced her.\n\nIt was his turn. He gripped her by the hips and began to move her on his cock, pushing her down onto it as he thrust into her, then holding her in place as he pulled out. He had restrained himself before, but now he surrendered to the urgency of his need, roughly driving into her, try to get as deep into her as he could. He forced a gasping cry out of Michelle with each hard thrust. \n\nFinally, he pushed her down onto his cock and held her there, deep inside her, and he came. He could feel himself pulsing inside her, filling her, and he felt her on top of him, her weight resting against him like a blanket; down below, her pussy enveloped him, squeezing him. He smelled the sweet scent of her perfume mingled with the musk of her sweat and her sex, and he breathed it in deeply. He wrapped his arms around her and held her close, and felt like they could remain that way forever.\n\n\"You give me the most amazing orgasms,\" she murmured.\n\nCharlie said nothing. He wished he could attribute it to his sexual prowess, but he knew that it had more to do with the charge she got from walking around naked. She was primed to have a tremendous orgasm before he ever even entered her.\n\nShe shifted on top of him. \"I'm going to take a shower, okay?\"\n\n\"Okay.\"\n\n\"You want to join me?\"\n\nHe did. He rinsed off quickly in the shower spray and stole a few kisses from Michelle before leaving her to finish showering on her own. Returning to his room, he quickly dried off and put on his clothes. Michelle's dress still hung over his desk chair and he eyed it for a minute, listening to the sound of the water cascading in the shower. He picked the dress off his chair and brought it to the bed. He stowed it in his private spot in the boxspring, where he already had a small collection of her clothes.\n\nWalking swiftly down the stairs, Charlie kept his ears perked, but he didn't hear anything. His mom was still out, and the first floor of the house remained empty. Charlie walked to the kitchen. He cleaned up the paper plates and put the other dishes in the sink.\n\nFrom upstairs, he heard the shower turn off. He took his can of Sprite, which still had a little bit at the bottom, and leaned against the frame of the door to the kitchen. He sipped his drink and waited. After a few minutes, Michelle came slowly down the stairs. She was still naked, her hair wet and her skin glowing from the shower. She took each step tentatively, peering around like a wary cat.\n\n\"We're still alone,\" Charlie said, and took a sip from his can.\n\n\"Is my dress in your room somewhere?\" Michelle asked. \"I couldn't find it.\"\n\nCharlie finished the last bit of Sprite in the can, and tossed it into the recycling bin. \"What dress?\" he asked.\n\nMichelle stared at him for a moment. Then she looked down at herself. \"Oh,\" she said softly. \"Right.\"\n\n\"My mom's not home for another three hours,\" Charlie said. \"Want to find something to watch on TV?\"\n\nMichelle fidgeted with her wet hair. \"Okay.\" \n\nShe followed him into the living room. He sat on the couch and picked up the remote. He touched a button and the TV turned on.\n\n\"Charlie...\" Michelle said nervously, glancing towards the front door. \"You'll walk me to my car, when it's time to go, won't you? I parked around the corner. I didn't park in front of your house.\"\n\nCharlie realized with a surge of excitement that she thought she was expected to walk naked back to her car. \"Sure,\" he said. \"Yeah, I'll walk you back to your car.\" He would return her dress, of course. He wouldn't make her walk naked all that way. \n\nWould he?\n\nHe marveled at her willingness to go along with what he told her. Just like that, she had accepted that her dress was no longer available to her, that she had to remain naked, that she even had to walk to her car naked. He'd give the dress back, when the time came. He'd even help her put it on, like he had on the train. Until then, let her believe she had a nude walk in her future. It probably excited her as much as it excited him.\n\nHe would give her the dress back. Maybe. Probably he would. \n\n\"What do you want to watch?\" he asked.\n\nMichelle came over to the couch and took the seat next to him. \"Anything,\" she said. She didn't stay upright for long, quickly leaning over until she was lying across his lap with her legs folded to the side. He put his arm around her, casually reaching down to fondle her breast. She accepted his petting without complaint.\n\nCharlie flipped through the channels. He found the movie \"Mean Girls\" and left it on that channel after Michelle remarked, \"Oh, I like this movie!\" Charlie didn't care; he could have watched anything. He had a naked girl draped across his lap and felt pretty confident that he could let his hands wander wherever he wanted across her body. He fondled her breasts for a few minute, and when he finally let his hand drift lower, her only response was to open her legs wider so he'd have easier access between them.\n\n\"I'm lying on something hard, but I'm not sure what it is,\" she teased as she pressed her hand against the growing erection in his pants. She undid his zipper and let his cock out. While they watched TV, she stroked it lightly with her fingernails. \n\n\"Do your parents know you're here?\" Charlie asked.\n\n\"Not specifically,\" Michelle said. \"I told them I had a school thing.\"\n\nCharlie chuckled, glancing down at her hand on his cock. \"Oh, okay. So this is a 'school thing.' \"\n\nShe smiled. \"In a way.\" She shrugged, moving her hand up and down. \"It's fine. I've been pretty busy senior year. My mom's used to me missing dinner.\"\n\nCharlie slipped his finger into her pussy, noting that she was still wet. His cock was fully erect, and it seemed more and more likely that their sex had a sequel on the way. He gazed at Michelle's body, fresh and clean from her shower. He could smell the lingering fragrance of body wash on her skin.\n\nShe was going to need to take a second shower.\n\nA door slammed from the kitchen. His mom called out, \"Charlie! I'm home!\"\n\nMichelle bolted upright. She stared at Charlie with her mouth open, panic showing clearly on her face. Charlie shoved his erection back into his pants, and it was a miracle that he didn't catch himself in his zipper as he quickly pulled it up.\n\nMichelle scrambled to her feet, her eyes darting around the room, looking for a place to hide. She looked toward the stairs that led to the second floor. Charlie stood quickly and caught her arm. If she tried to go up the stairs while his mom was in the kitchen, she would be clearly visible. But she couldn't stay in the living room either. His mom would walk in any second.\n\nWhere to hide her?\n\nCharlie glanced at the front door. Michelle's purse and sandals still sat where she had tossed them, right next to the door. Charlie went in that direction, tugging Michelle's arm, and she followed.\n\nHe picked up her purse and sandals and pushed them into her arms. \"Charlie!\" she pleaded. \"Where do I go? Where's my dress?\"\n\nFrom the kitchen: \"Charlie! I'm home! Are you here? I saw your car!\"\n\nHe didn't have time. So he did the first thing he could think of. He pulled open the front door.\n\nMichelle's eyes were wide. \"Charlie! Out there?\"\n\n\"Just for a minute. Let me just say hi to her, and then I'll make up some reason to come outside.\" He put his hand on Michelle's back, urging her out the door.\n\nMichelle took an uncertain step out onto the front porch. She turned to look back at him, and he couldn't help but admire the way her naked body looked in the glow of the porch light, with the street and the night sky behind her.\n\n\"Just a few minutes,\" he said. He caught a glimpse of her stunned expression just before he closed the door.\n\n\"Charlie?\" his mom called again.\n\n\"I'm here!\" he called back. He headed for the kitchen.\n\nTO BE CONTINUED "
    ],
    "authorname": "jessica_tang_vonharper",
    "tags": [
        "exhibitionism",
        "voyeurism",
        "public nudity",
        "submission",
        "domination"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/saturday-night-school-ch-06"
}