{
    "title": "Three Square Meals Ch. 075",
    "pages": [
        "The Maliri Shandrass-class battleship jumped into the Epsilon Aquarii system in a flash of blue particles, the Tachyon field quickly dispersing as it came out of hyper-warp. The light from the blue star in the centre of the system made the battleship's golden hull gleam majestically, as the Galaena Serine powered up its huge Trankaran engines, and plotted a course towards the gigantic facility in the heart of Valaden Space.\n\nShaped like a colossal wheel, the vast golden space station was filled with row after row of maintenance gantries, positioned inside the slowly-rotating orbital shipyard. Genthalas station was a beautiful golden edifice of sweeping crystal domes and magnificent spires that seemed to reach loftily for the heavens. Fully a third of the enormous technological marvel now twinkled with lights, and scores of civilian vessels were making use of the sweeping banks of docking bays, as traders went about their business. There was a significant military presence here too, with corvettes all the way up to battleships and carriers in attendance, watching protectively over their smaller civilian counterparts.\n\n\"I don't remember Genthalas being that busy,\" Ceraden murmured, as he watched the docking ships performing careful course corrections, retro-thrusters flaring brightly against their metallic hulls.\n\nMyriana slipped her arm through his, and said soothingly, \"How many years is it since you visited Valaden, my love? I'd imagine a lot's changed since then.\"\n\nHe nodded, and his handsome blue face was shadowed with grief as he replied, \"It's been fifteen years, three months and ten days.\"\n\n\"Sylmae's funeral? I'm so sorry, Ceraden,\" she murmured, leaning in to give him a gentle kiss on the cheek.\n\n\"That was the last I saw or spoke to my girls,\" he replied despondently, his eyes losing focus as he remembered that bitter meeting, full of unfounded recriminations.\n\n\"I promise you, you'll always have a place in our little one's life,\" Myriana said to him, her voice earnest as she gazed at him.\n\nHe smiled at her as he focused on her beautiful face once more, and his rich blue eyes sparkled with happiness. \"You're such a treasure, my love. Have I told you that yet today?\" he asked, as he pulled her into a fierce hug.\n\nShe nodded when he released her, then gave him a coy smile as she replied, \"Actually yes, just after you gave me my delicious breakfast this morning.\"\n\nCeraden laughed uproariously at that, and he brushed his hand through her short white hair as he marvelled, \"I've never met anyone like you, my dear. You really are quite wonderful!\"\n\nMyriana smiled at him fondly, and then tugging his hand, she said, \"We better get ready to disembark. We'll be landing at Genthalas soon.\"\n\nThe week's journey from Geniya Trading Station to Genthalas Shipyard had gone by in a blur for Ceraden, with Myriana proving to be a most enticing distraction. As they walked back to their cabin, he smiled as he recalled the blissful week's journey. They'd been equally elated about her pregnancy, and had spent hours discussing their plans for the future together. He'd willingly allowed himself to put his concerns about his meeting with Edraele Valaden to one side while he relished Myriana's thrilling company, but he'd never entirely forgotten the purpose behind his visit to Valaden. As wonderful as the trip had been, he now felt a pang of regret that he hadn't spent the week preparing an excellent justification for avoiding the confrontation with the terrifying Valaden Matriarch.\n\nStill, Ceraden reasoned he could languish on Genthalas for a couple of days, and put the meeting off for at least a little while. Enough time to think of a way out of this predicament. He glanced at Myriana as she smiled at him playfully and pushed his suitcase towards him. Anti-grav devices were built into the luggage to make it weightless, and he stopped it with a smile. She was fun to be around, kind and considerate, interested in hearing his thoughts and views, and seemed to genuinely enjoy his company. His budding relationship with her was so radically different from the awkward liaisons he'd experienced in the past. He was still astonished by it.\n\nThey left their quarters and walked hand-in-hand along the high-arched corridors, as they followed the happily chatting throng of white-haired Maliri women. They smiled and waved at Myriana, before their inquisitive eyes met his as well, and they greeted him in a similar friendly manner. Ceraden still found the way these stunning girls interacted with him to be deeply unsettling, with such open cheerfulness a radical departure from anything he'd witnessed from Maliri women in the past. He'd asked Myriana about her white hair, and it had been the only subject with which she'd ever been evasive, promising him that all would be revealed eventually.\n\nThey made their way through the airlock, and stepped out of the enormous warship into the docking bay at Genthalas. Ceraden glanced up at the gleaming crystal plating of the Galaena Serine as they walked away, and shuddered at the sight of the ferocious weapons dotting its hull. He'd been more than a little unsettled to find they were travelling back to Valaden on a battleship, but it was just one more perplexing piece in a series of very mysterious puzzles.\n\n\"Ceraden, would you follow me, please,\" a lovely, rich voice said to him, courteously.\n\nShocked out of his reverie, he turned to see who had spoken to him. The black-garbed woman was cowled, revealing only her impassive yellow eyes. One glance at the sword hilt rising up over her shoulder made his heart skip a beat, and he realised at once that she must be one of House Valaden's feared assassins. He briefly considered making a run for it, but Myriana's soft hand holding his dispelled that thought just as quickly.\n\n\"I'll meet up with you later, my dear,\" he said to her, turning to give her a reassuring smile so she wouldn't be alarmed.\n\n\"The Matriarch wishes to speak with you too, Myriana,\" the assassin informed them, before the engineer could reply.\n\nCeraden felt his heart lurch in his chest, but as he gazed at Myriana, she just nodded amiably and smiled as she replied, \"I can't wait to see her again! Lead on please, Luna.\"\n\nThe assassin nodded, and turned away, slinking across the docking bay like the predator she was, with Ceraden and Myriana following after her. Ceraden's feet felt leaden as he walked along robotically, his mind whirring as he darted furtive looks at the white-haired angel at his side. It appeared she'd been keeping more than the origin of her snowy locks from him! She'd told him she was an engineer, and from her impressive knowledge of the spacecraft she'd described when telling him about her work, he hadn't doubted her story for a moment. However, this encounter begged the question of how an engineer knew the most powerful and tyrannical Matriarch in the entire Regency, let alone one of her dreaded assassins!\n\nAs they made their way to the Matriarch's suite, Ceraden felt like he was being drawn inexorably towards the inescapable gravity well of a black hole. His mind floundered for a way to escape from the meeting with the notoriously foul-tempered Valaden leader, knowing that one wrong word could mean a brutal and protracted end. Unfortunately, the walk was over with all too soon, and Luna stepped aside at a set of guarded double doors, gesturing for Ceraden and Myriana to proceed through.\n\nHe felt chills run up his spine when he saw Edraele Valaden standing on the far side of the lounge, watching her fleet out of the window, and looking as regal and as intimidating as ever. His sharp ears heard the doors clicking together, the sound making him think of a jail door being closed, and he realised there was no escape as the guards sealed the doors behind him.\n\n\"I've brought Ceraden as you requested, Matriarch,\" Luna said, her dulcet tones sounding deafeningly loud to his electrified senses.\n\nEdraele turned to look at them, and to Ceraden's amazement, she gave him a sparkling smile that left him reeling. Her voice throbbed with sincerity as she said, \"My humblest apologies for all the theatrics, Ceraden. I knew if I'd asked you nicely to travel to Valaden, you would have been absolutely convinced I had some horrible fate planned for you. Nothing could be further from the truth, I promise.\"\n\nShe glanced to the side of the lounge, and a door to his right opened, admitting four young women he hadn't seen for over fifteen years.\n\n\"Father!\" Elinris blurted out, rushing over to him.\n\nHe stared at his four daughters in shock as they swept towards him, barely having time to register their white hair, before opening his arms reflexively to embrace them.\n\n\"We've treated you so badly, daddy. Will you ever forgive us?\" Ifene asked, hugging him close.\n\n\"I'm so sorry,\" Dalesse murmured, resting her head on his shoulder. \"I've missed you so much.\"\n\nLaenya gazed into his eyes and said earnestly, \"I was such a fool to push you away! I blamed you for Sylmae's death, but now I know you tried everything to save her!\"\n\nCeraden's eyes filled with tears, and he hugged them as best he could, wishing he had longer arms to surround all four of them at once. \"My girls!\" he croaked, quite overcome.\n\nGlancing to one side, he saw Myriana smiling at him lovingly, biting her lip as her beautiful eyes welled up.\n\nHe turned back to look at Edraele, and she removed her diadem and pulled back the cowl from her head, unveiling her flowing mane of snowy-white hair. She answered his look of utter astonishment with a benevolent smile, and said gently, \"Enjoy as much time catching up with your daughters as you need. Whenever you're ready, we must have a talk about John Blake.\"\n\nWith that, she glided out of the room, followed by Luna, who smiled at him kindly as she pulled off her cowl and fluffed out her own long, silky white tresses.\n\n***\n\n\"What trickery is this, Tsarra?\" the House Baelora Matriarch asked sharply. \"I've just seen reports that you've removed all fleet assets from our border!\"\n\nTsarra Perfaren held her hands open wide, and replied, \"There's no trickery involved, Gaenna. I'm simply moving my fleets to respond to a deadly new threat.\"\n\nNarrowing her eyes, the older Maliri Matriarch's voice dropped a few octaves as she said, \"Just because House Baelora is ranked sixth, you shouldn't be so foolish as to dismiss me as inconsequential. If you're not careful, you might find House Perfaren tumbling from its lofty perch at Rank Three!\"\n\nShaking her head, Tsarra responded sincerely, \"I wouldn't dream of dismissing you, Gaenna. The reason I'm calling you is quite the opposite in fact - you're potentially my most powerful ally.\"\n\n\"You're proposing an alliance?!\" Gaenna scoffed, her tone one of scornful disbelief. Her magenta eyes flared with anger as she continued, \"You have some nerve! After your mother stole the Kappa Aquarii system from me not more than-\"\n\n\"I'll give it back,\" Tsarra said quietly, cutting the other Matriarch off mid-tirade. \"You can have the system back, I don't care. All I ask, is that you listen to what we're about to tell you, and take it seriously.\"\n\nGaenna gaped at her in shock, never for one moment expecting their impromptu conversation to turn out this way. Her eyes widened as a golden-masked woman appeared by Tsarra's side, and said in a calm but gravelly voice, \"We have to work together now, or everything we hold dear will be destroyed.\"\n\n\"This is Tashana Valaden. Her mother and sister have been enslaved,\" Tsarra said solemnly. She leaned forward, and the fear was quite apparent in her young face as she added, \"If you're like me, and have no wish to become a Progenitor's broodmare, I'd suggest you listen closely to everything she tells you.\"\n\nGaenna sat there in stunned silence as the two women explained everything to her. Their story inadvertently confirmed some of the more bizarre and worrying reports she'd received from her spies in Genthalas, about the strange behaviour of white-haired women that were appearing around the shipyard with increasing frequency. When Tashana revealed the pictures of her enthralled sister and the images of the Mael'nerak, Geanna couldn't deny the strange draw she felt towards them, nor the creeping dread when Tashana explained what it meant.\n\nHer expression turned to one of horror as she recognised the simple truth in everything they were telling her. The childhood fairy tale was not simply a frightening story to get little girls to behave themselves, but a chilling warning from millennia past: Be a good girl, or the Mael'nerak will come for you. Gaenna had not been a good girl, and she was suddenly very afraid...\n\n\"What do you want me to do?\" she asked, as she shivered in her chair, all artifices and posturing forgotten. \"Tell me, and I'll help you...\"\n\n***\n\nJohn rubbed his chin thoughtfully as he looked over the Invictus, pleased with the progress they'd made over the last several days. Large swathes of the new Maliri crystal hull were completed in the midsection of the ship, and it would only take a few more days to finish the rest. Once that was done, they'd be able to start replating the Invictus in Crystal Alyssium armour plates. A large crane was lowering the spherical Tyrenium lattice through one of the huge turret wells in the topdeck, where it would be carefully manoeuvred into position at the heart of the Singularity Generator.\n\n\"We'll need your assistance today, in armouring the munitions rooms,\" Rachel said, as she glanced his way.\n\nHe smiled at her, and said, \"I suppose it's only fair, it was my idea after all. The last thing we need is a lucky hit to the magazines blowing the ship apart from the inside!\"\n\nThe tawny-haired brunette grimaced, and nodded her wholehearted agreement. She appeared thoughtful for a moment, then said, \"We'll be converting the Mass Driver magazines to carry rounds for the Singularity Drivers, so you might want to armour them too.\"\n\n\"They won't be storing explosive shells now, so it shouldn't be necessary,\" John said, shaking his head. He mulled it over for a moment, then changed his mind, and added, \"Actually, we don't want the Singularity Drivers being knocked out of action by some fluke shot. I'll plate them too, just in case.\"\n\nRachel glanced towards the stern of the ship where Alyssa was lifting, melting, and reshaping a dozen armour plates at a time, and said, \"You're on your own there, I'm afraid. Alyssa appears to have her hands full with quad-shaping all the armour plating.\"\n\n\"That's alright, she looks like she's having fun,\" John said, waiting for an explosive reaction from the blonde.\n\n*I'll give you 'fun', mister,* Alyssa grumbled, turning and sticking her tongue out at him. *Have I told you how much I hate reshaping the armour plating?*\n\n*Repeatedly, honey, repeatedly,* he replied, sending her a teasing wink. His tone was conciliatory as he added, *We can swap, if you like? I don't mind taking a shift with the armour plating, if you want to work on armouring the internal rooms.*\n\n*Nah, I'm barely having to concentrate to do this. It's just a bit boring. If you stay out here, you'll distract half our workforce!* she said, with amusement.\n\nHe chuckled, but before he could reply, he heard the familiar high-pitched hum of one of the Maliri Cutting Beams at work. Trying to place the sound, he saw a blue beam of energy lance out from the front underbelly of the Invictus, and a large titanium segment crashed to the drydock deck below. There was now a gaping hole about forty metres wide in the lower bow of the assault cruiser, just beyond the secondary Hangar Bay.\n\n\"What the hell was that?\" John asked Rachel, looking at her in surprise. \"I thought we'd finished chopping up my ship!\"\n\nThe brunette put her arm around his waist and gave him a hug, as she said in a reassuring voice, \"A last minute addition from Dana. She said it's going to be 'fucking awesome'.\"\n\nHe thought about it for a moment, then groaned as he said, \"She's going to a hell of a lot of trouble for something we're never going to use!\"\n\nRachel giggled, and replied, \"She knew you'd say that, and told me to remind you, that you said, 'Join the crew as Chief-Engineer, and you can work on whatever side-projects you like'.\"\n\n\"What is it with these Karron girls and verbal contracts?\" John grumbled good-naturedly, and he heard Alyssa's laughter even from up on the maintenance gantry.\n\n*Sorry to interrupt, John,* Edraele said to him, her telepathic voice sounding happier than it had done in days. *I just wanted to let you know some friends are on their way.*\n\nHe was pleased to hear her striking a more cheerful tone, and was about to ask who, when he spotted a large crowd of white-haired Maliri walking into the drydock. He spotted lots of familiar faces in the crowd, and grinned at Rachel as he exclaimed, \"The engineers from the first refit! They must have just got back from Geniya!\"\n\nRachel shared his grin, looking forward to seeing the Maliri she'd befriended on the last refit, and she said, \"Let's go and say hello!\"\n\nThe two of them jogged along the maintenance gantries, boots clanging on the metal structure as they darted down the steps to the drydock deck. The Maliri had gathered around Alyssa, who was sharing hugs with the engineers, and chatting to them animatedly.\n\n\"Welcome home!\" John called out to them, as he loped up to the group.\n\nHe was soon deluged in loving hugs, as the Maliri engineers thanked him emphatically for everything he'd done for them. There was congratulations all round as one smiling girl after another confirmed they were now expecting, and John stroked their slender tummies, as he told them how much he was looking forward to seeing them bloom with their pregnancies. He worked his way around the group, greeting them all by name, until he came to the last group of five, who stood apart, watching with nervous anticipation.\n\nFilaurel stepped, forward, and gazing at him with wide eyes, she said nervously, \"Hello again, John. We'd like to speak to you for a moment in private, if that's alright?\"\n\nNodding, he smiled at them, and replied, \"Of course, girls! I know where we can go.\" He began to walk towards the double doors leading out from the drydock, and slipped an arm around Filaurel and Thessalia as they fell into step beside him. He grinned at each of the group in turn, and continued, \"It's so wonderful to see all of you again!\"\n\nThey smiled back at him, but didn't respond, too keyed-up for small talk. He wondered what had them all on edge as he guided them into the recruiting room, and led them over to a space on the soft matting. When they were all sitting comfortably together, and the door was closed to give them some privacy, he looked around at the five engineers, waiting for them to speak. They blushed and stayed quiet, so he reached out to take Filaurel's delicate blue hand in his, and squeezed it gently.\n\nHe gave her an encouraging smile, and to break the ice, he asked, \"Did all of you have a good trip to Geniya Station?\"\n\n\"We didn't go!\" Thessalia blurted out, then flushed with embarrassment.\n\nFrowning at that, John asked gently, \"But I thought all of you were longing to having a baby? I asked Edraele to arrange the trip, because it's what I thought you wanted.\"\n\n\"We do!\" Ioelena said with enthusiasm. Her voice turned quiet, as she added shyly, \"Just not with anyone at Geniya Station.\"\n\nJohn was about to ask her who she had in mind instead, but Alyssa's soft, affectionate voice whispered through his mind, *With you, you big dummy. They're all smitten with you.*\n\n*I hope this wasn't a bad surprise?* Edraele asked him, and he could hear the sudden worry in her voice. *They asked me just before they were scheduled to depart for Geniya, and I told them they could speak to you about it when you returned. They spent a lot of time with you on the refit, and you made more of an impact on them than the other engineers.*",
        "John blinked in surprise, and one glance at the doe-eyed looks the five engineers were giving him instantly confirmed his Matriarch's words. The Maliri sitting in front of him were all stunningly beautiful women, even though they were all several decades older than him. He couldn't deny the thought of all five of them pregnant with his babies was extremely arousing, but something held him back from springing into lusty action.\n\nHe gave them all a warm smile, and asked, \"Just so there's no confusion, you're all asking me to be the father of your children?\"\n\n\"That's right,\" Syndra murmured, her angular eyes wide with excitement as she stared at him.\n\nHe met each of their searching gazes in turn, then said earnestly, \"I'm really flattered, but this has just come as a bit of a surprise. I don't have any children yet, so this is a big step for me, too. Would you give me a little while to think about it? I promise I won't keep you waiting long for an answer.\"\n\nThey each returned his smile, and chorused that they understood, and he could take as much time as he needed. John rose to his feet before helping them stand too, and shared a brief kiss with each girl. With coy waves goodbye, the five engineers left him on his own in the recruiting room, sporting a painfully hard erection in his trousers. \n\nHe closed the door after they left, and leaned back against it, trying to collect his scattered thoughts. As much as he lusted after these blue-skinned temptresses, something was holding him back from agreeing to their wonderful offer. However, after just stroking seventy-five freshly impregnated slender tummies, he had a one-track mind at the moment.\n\nAlyssa only let him stew for thirty seconds before she said sympathetically, *Why don't you head up to our bedroom in the Invictus? Irillith's waiting for you there, she wants to talk to you.*\n\n*Alright, on my way,* he replied, before flinging open the door, and strolling back towards the Invictus.\n\nWhen he entered the drydock, he stepped aside to make room for a grav-truck, which was towing four anti-grav sleds of Maliri crystal support structure into place for the Invictus' hull. He weaved his way around Alyssa's neat stacks of re-shaped armoured plating, and she blew him a kiss as he strolled past, with the attending group of engineers giving him a friendly wave. Dana was working with an exclusive group of white-haired engineers to secure the second Progenitor Power Core to a lifting harness so that it could be lowered into the hull, and they all stopped what they were doing and waved at him as walked up the ramp into the ship.\n\nIt seemed everywhere he looked, there were dozens of beautiful Maliri girls watching him in fascination, and he knew he only had to ask, and they'd be overjoyed to join him for some fun. He was in quite a flustered state when he finally made it into the bedroom, and found Irillith sitting on the bed waiting for him.\n\nShe gave him a smouldering look as she rose to her feet, and slipped the dress off her shoulders, letting it fall to the floor. \"Are my fellow Maliri driving you to distraction?\" she purred, her violet orbs hiding behind her long lashes.\n\nJohn nodded as he walked over to her, and he reached out to brazenly squeeze her big, round breasts, delighting in the contrast of his skin against her flawless azure flesh. \"You drive me wild,\" he admitted, as he enjoyed the heavy weight of her taut orbs, as they filled his palm.\n\nShe kicked off her shoes, then climbed on the bed, as she said alluringly, \"Come and use me to blow off some steam, then we can chat when you can think straight.\"\n\nScarcely believing his luck, he quickly stripped off his clothes, then joined her on the bed as she spread her thighs for him in invitation. He could see she was as turned on as he was, and when he positioned the head of his cock at her dark-blue pussy, she was wet and ready for him. Not wasting any time, he thrust forward, loving the delicious sound of her lusty groan as he pushed deep inside her.\n\nHe raised himself up on his arms so he could look down at her flushed face, and after admiring her luscious body for a moment, he said, \"You're a truly beautiful girl, Irillith.\"\n\nShaking her head, she hissed at him, \"No, I want it nastier than that. Use me hard, and work off those frustrations!\"\n\nCovering her body with his own, he pinned her wrists to the bed above her head, and asked, \"Is this what you want, you horny little slut?\"\n\nHer violet eyes flashed dangerously, and she retorted, \"Show me how you ride your Maliri Thralls, Progenitor. If you want to put a baby in my belly, you better be a good fuck!\"\n\nHe leaned down and kissed her fiercely, forcing his tongue into her mouth as he pulled back with his hips, and then rammed forward, knocking the breath out of her with the impact. \"Hold on tight... you aren't going to be able to walk straight after this,\" he promised her, his eyes sparkling with lust.\n\nJohn began to pick up the pace, pulling his wide-girthed cock out of her clutching pussy, before driving back in, the tip kissing her uterus with every thrust. He held her down, stretched out beneath him as he fucked her, and after a dozen strokes, he rammed in hard, penetrating all the way into her womb.\n\n\"Oh, fuck!\" she grunted, as she took his entire length, her body forced wide open to accept the massive invader. After panting for a moment, and getting used to being so tightly stretched, she whispered in his ear, \"That gets you going, doesn't it? The thought of blue Maliri bellies loaded up with your cum!\"\n\nHe pulled back slowly, then gave her a long, pussy-stuffing thrust that made her grunt as she took him all, his quad resting against the soft cheeks of her ass. \"You're all so fucking hot, and practically begging me for it!\" he muttered, as he stared into her eyes. He grinned then, and added, \"Except you! You really made me work to get balls-deep in your tight little body!\"\n\n\"But that's what makes fucking me better, isn't it?\" she asked, staring back at him, her angular eyes flashing with lust. \"You had to work to break me in, not like those girls outside. You only have to snap your fingers, and they'd spread their legs for you.\"\n\nTightening his grip on her wrists, he began a steady, rhythmic pounding, her body moving with his as he rode her lithe frame. He nodded, as he said, \"I had to collar you first, before you started sucking down my cum.\"\n\n\"Fuck!\" Irillith hissed, her eyes rolling back as she came. Her athletic legs clung to him in a powerful grip as her pussy convulsed around his shaft, massaging him with undulating contractions.\n\n\"That's right, keep cumming for me, you smoking-hot, blue piece of ass,\" he grinned, fucking her harder now, and loving the sound of her ecstatic cries.\n\nShe arched her back, her warm, soft breasts pressing into his chest as she climaxed hard, her thighs trembling as she responded to his domination. \"Don't stop! I love it!\" she pleaded with him, as he really began to go to town, his hips a blur as he skewered her nubile body.\n\nAfter ten minutes of pussy-punishing action, which left Irillith a sobbing, whimpering, orgasmic wreck around his burgeoning shaft, he stopped focusing on screwing her brains out, and focused on his own pleasure. He let go of her wrists, and she wrapped herself around him, a sudden flush of energy from Alyssa rousing her from her ecstasy-induced stupor.\n\n\"That's right, you've earned your prize now,\" she whispered in his ear, as she caressed him. She planted a loving kiss on his cheek and continued, \"You proved what a stallion you are. Now, just use me to empty those big, full balls.\"\n\nHe cradled her head in his hands, and stared into her eyes as he drove into her soft, warm body, slowing his thrusts so he could see her reaction to each one.\n\n\"I'm going to breed you one day,\" he said firmly, no doubt in his mind.\n\nHer pupils flared with arousal, and the heated look in her angular eyes turned gentle as she murmured, \"Whenever you want, I'm yours.\"\n\nThey kissed again, but it was tender and passionate this time, and he could feel her heartfelt yearning as she responded to him. He came then, long and hard, his quad convulsing with powerful contractions as he spurted huge streams of cum into her womb. She joined him in his release when she felt that first splash of spunk, and her tightly-stretched pussy squeezed him as he flexed inside her. They stared into each other's eyes as he continued to fill her up, with John lifting his weight off her a little, to give her rapidly-expanding abdomen room to grow.\n\nWhen every last drop had been wrung from his four balls, John groaned with relief, then gently eased out of her lust-swollen pussy, before flopping down on the bed beside her. He rolled to one side, and placed a possessive hand on her sperm-laden belly, and said in wonder, \"You've no idea how much I needed that.\"\n\nIrillith let out a low groan as she stretched her lithe limbs, and she laughed airily as she replied, \"You weren't kidding about me not being able to walk straight after that. You were a beast!\" He laughed along with her, and she turned her head to stare into his eyes, as she added softly, \"Until the end, of course. That was just wonderful.\"\n\n\"It was,\" he agreed, as he caressed the rounded curve of her cum-stuffed abdomen.\n\nThey lay like that for several minutes, both enjoying the intimate, loving afterglow. Eventually, Irillith gave him a sparkling smile, and asked, \"Now we've emptied your quad, do you want to talk about what got you in such a state in the first place?\"\n\nHe returned her smile, and replied, \"Alyssa must have told you?\"\n\n\"She did, but I want to hear it from you,\" Irillith replied, studying him with those enchanting violet orbs.\n\nHe thought it over for a moment, then said simply, \"Five of the engineers from the last refit have asked to have children with me.\"\n\n\"I know which ones you mean. You spent more time with Filaurel and her friends than any of the others,\" she replied, looking thoughtful. She brushed her fingers along his cheek, and smiled as she added, \"I think we just established that you're quite the fan of Maliri women, so what's the problem? They'd be overjoyed to have you as the baby's father.\"\n\nJohn looked conflicted as he confessed, \"There's a big part of me that would love that - to knock them up, and see them get big bellies with my babies growing inside them.\" He stroked her enormously swollen stomach pointedly, and they shared a lusty grin.\n\n\"But?\" she prompted him, seeing he was holding something back.\n\nHe let out a regretful sigh, as he replied, \"Fantasy isn't the same as reality. I've made commitments to so many girls already, and when we do settle down to raise a family, I'm not going to have enough time in the day to devote to them all.\" He rested his head on the pillow, and smiled at her as he continued, \"To start with, obviously, there's all you girls on the ship, so that's seven.\"\n\n\"Mmmhmm,\" Irillith agreed, a look of contentment on her face as he stroked her tautly-curved belly.\n\n\"Then there's Luna, Ilyana, and Almari. I promised them the same when I restored their fertility,\" he explained, watching her lovely features. He gently caressed her, as he added, \"That brings the total to ten expectant mothers.\"\n\nShe arched an eyebrow, and continued wryly, \"Speaking of which, I'm sure you plan to have Edraele give me another sibling or two.\"\n\nHe blushed then, and apologised, \"I'm so sorry for the position that puts you in. I can't even imagine how weird that must be.\"\n\nIrillith studied his tense expression for a moment, then gave him a reassuring smile, as she replied, \"I'm sure such a thing would be scandalous in the Terran Federation, but I'm actually perfectly alright with it. With men in such short supply in the Regency, it's really not much of a culture-shock for me. We Maliri are so long-lived, it's far from uncommon that an unrelated male might father children with one or more sisters, or yes, even a mother and a sister.\"\n\nNodding his understanding, and letting out a sigh of relief that made her giggle, he then said, \"Finally there's the four Matriarchs that Edraele has made an alliance with. They raised the same prospect with me a couple of days ago, and I've been meeting with them regularly for their daily meetings, and getting to know them quite well. I'm already quite fond of all four girls.\"\n\n\"Fathering children with the Matriarchs of all the highest-ranked Noble Houses would help secure an incredibly powerful alliance,\" she noted, nodding enthusiastically. \"You should definitely give them each a baby as soon as you can, they all need to rebuild their Houses.\"\n\nJohn raised his eyebrow at the thought of his girlfriend eagerly encouraging him to impregnate several more girls. It seemed Irillith wasn't alone in that opinion.\n\n*I so want to be there when you knock them up, lover!* Alyssa agreed, her lusty voice echoing through his mind.\n\n*I'll protect them and keep them safe while you're away, my Lord,* Edraele agreed, equally as enthusiastic. *There's also no reason to wait with them, they won't be in any danger, not safely protected here in Genthalas.*\n\n*Edraele should definitely be there when you breed them!* Alyssa exclaimed, growing more excited by the moment. *It'll be a wonderful bonding moment for her and her girls, when you pack their wombs full of cum. Are you going to do them two at a time, or-*\n\n*Alright, calm down!* he said to them both, shaking his head in amusement. *We can discuss all that later!*\n\nTrying to remember where he was in his conversation with Irillith, he said, \"The Matriarchs bring the total to fourteen.\"\n\n\"So, the engineers would make nineteen,\" Irillith noted, then winked at him as she added, \"You're going to be a very busy boy.\"\n\n\"Fourteen is already crazy! I want to be there to support each of you through your pregnancies, and adding another five women I barely know seems ridiculously selfish,\" he explained, trying to make her understand his predicament.\n\n\"You could just give them what they want, but not be so involved with their children's upbringing. It might seem callous to you, but that's how Maliri society works.\" Irillith explained, her tone patient and non-judgemental. \"With so many women to men, it's the exception, not the rule, when a father is heavily involved with bringing up children.\"\n\n\"I'm trying to change that, though,\" he said emphatically. \"I'd be a ridiculous hypocrite if I went along that route. Besides, I know what it's like not growing up with parents, and I've always sworn that I'd be there for my kids.\"\n\nShe leaned in to give him a tender kiss, and said softly, \"I think you have your answer, then.\"\n\nHe nodded, and frowned as he replied, \"I'm not looking forward to telling them. It's going to sound like a rejection, when I'm really just trying to do the right thing.\"\n\n*Don't tell them just yet, handsome,* Alyssa said thoughtfully. *I've just been discussing it with Edraele, and we think we might have come up with an interesting solution.*\n\n*Really? What's that?* he asked, equally curious and relieved.\n\nHer melodic teasing laughter filled up his mind as she replied, *You'll just to wait and see. It involves another one of Edraele's surprises.*\n\nHe groaned inwardly at the thought, to the amusement of both his Matriarchs. Turning his attention to Irillith, he stroked her cheek, and said, \"Thank you for this. Talking to you really helped.\"\n\n\"It was quite literally my pleasure,\" she replied, smiling at him as she stroked her swollen belly. Her expression turned more serious then, as she added, \"It felt wonderful being able to help you for a change. I'm always here for you, if you ever have anything else you need to get off your chest.\"\n\n\"Likewise, honey,\" he agreed, and they shared a loving kiss as they cuddled together.\n\n***\n\nJohn spent the rest of the afternoon working on the refit, shaping Crystal Alyssium into a sturdy, reinforced cage around the vulnerable areas of the ship. He decided to quad-shape the alloy to make it as robust as was reasonable, considering the amount of material involved, but he had to call on Edraele to supply him with Eldritch power, to avoid becoming exhausted. She seemed to have no problem supplying him with a steady surge of psychic energy, more than enough in fact, for him to finish all the rooms, without unduly taxing his own reserves.\n\n*You must be tapped out after all that,* he marvelled, as he finished shaping the armour for the last of the new magazines, moulding it neatly into place. He winked at the engineer back in the corridor and gave her a thumbs up, before backing out of the maintenance ducts at the rear of Singularity Driver ammunition room. Voicing his concerns, he added, *Don't drain yourself excessively, I don't want to leave you worn out. I can always use more of my own energy next time.*\n\n*I'm fine, John, honestly!* Edraele said, sounding positively delighted. *You've more than quadrupled all the energy reserves I have at my disposal, from both myself and my network of wards! It's not just because of all the Maliri you've been adding, either. After all the effort you've made to get to know them all, their connections to me are all so much stronger than they were under the old bond. It's amazing, how much enforcing the compulsion to obey, inhibited the psychic energy they could contribute.*\n\nJohn clambered out into the corridor and closed his eyes for a moment, so that he could examine the rows of Maliri under Edraele's care. Sure enough, the hundreds of lines linking them all to each other were much stronger than the faint, fairly noticeable trails that were in place beforehand. While they weren't in the same league as the blazing conflagration of light from Alyssa and the Invictus' crew, it was still a startling improvement.\n\n*We noticed the exact same thing when we renewed the bond,* Alyssa said, agreeing with the Maliri Matriarch. She hesitated, then added with a tinge of regret, *My girls also had a bunch of epiphanies, with lots of breakthroughs on everything they were working on. It's a shame we hadn't been able to build up stronger connections with the assassins and the first group of engineers, before you two changed the nature of your bond.*\n\n*Not to worry, they've all been working incredibly hard on the refit,* John said, smiling gratefully at one of the engineers as she handed him a towel and a flask of water. \"Just what I needed, thanks, Caelitia!\" he added, before downing the flask, and upending the last over his face, so he would wipe away the sweat and grease. She smiled and took the items back when he was done with them.\n\n*You better get ready,* Alyssa prompted him. *We're going out for dinner tonight, remember?*\n\n*I'm looking forward to it,* he agreed, genuinely looking forward to a break from the hectic refit schedule over the last week-and-a-half.\n\nHe nodded in greeting to the white-haired Maliri he passed as he walked along the partially-completed decking on this corridor. There were still huge holes in the midsection of the ship, with the work crews focusing on building up the support framework, and then constructing the most important areas first. They were planning to fill in the rest over the next week, before moving on to the final stages of the refit.\n\nThe busy corridor led into Deck Five on the aft section of the Invictus, and he stepped through the door into the grav-tube, before rising in the blue glow. There were no Maliri on Deck Two, so the corridor was silent and deserted as he strolled towards his bedroom. His sharp ears caught the sound of a running shower, and when he walked into the bathroom, it was warm in there and filled with clouds of steam. A pair of luscious sirens appeared through the swirling clouds, their brown and red hair slicked back as they glistened wetly.",
        "\"Hello, handsome stranger,\" Rachel purred, as she wasted no time in helping him shuck off his clothes. \"We'll be your bathroom companions this evening.\"\n\nDana nodded, her sky-blue eyes glistening, as she said lustily, \"We're supposed to get you squeaky clean, then empty your quad.\" She winked at him, and added, \"Dealer's choice where it goes.\"\n\nHe laughed at her bawdy greeting, and when he was as naked as they were, slipped an arm around them both as they led him into the shower. \"How come the rest of you girls aren't coming with me, Alyssa, and Edraele?\" he asked, curiously, closing his eyes as they all soaked under the warm water.\n\n\"It will all become clear, later,\" Rachel murmured, as she began soaping down his shoulders. \"We'd be in terrible trouble if we spoiled the surprise.\"\n\nAfter a sigh of satisfaction, John asked, \"What are all of you planning to do instead?\"\n\n\"We've invited Edraele's bodyguards over to watch a holo-vid movie. We figured with two Progenitors as company, she'll be safe enough,\" Dana explained, nonchalantly.\n\n\"I suppose I better provide the refreshments, then,\" John said with a grin.\n\n\"We'll be the perfect entr\u00e9es,\" Rachel agreed, before the two girls giggled with delight.\n\n***\n\nThe bedroom was much busier when John finally emerged from the bathroom, and he smiled at all the women waiting on the vast bed, then turned to give Dana and Rachel a grateful kiss. He playfully patted their rounded tummies, before giving them a firm swat on their pert rumps to send them on their way. They laughed as they rejoined their friends, who enthusiastically welcomed them onto the bed.\n\nJohn headed into the walk-in wardrobe next, and quickly got dressed in a fetching dark-blue suit with a with freshly-pressed white shirt. He tied the blue tie into a full-windsor knot, and after adding his cufflinks, he strolled out into the bedroom again. Calara, Dana, Rachel, Jade, Irillith, Sakura, and the three assassins were all nude now, accompanied by an equally-naked purple sprite. However, it wasn't them who drew his attention.\n\n\"You look amazing,\" he marvelled, as he stared at Edraele and Alyssa in awe. \n\nThey had their hair up, with a few artfully curled locks framing their naturally beautiful faces, which had been subtly and expertly enhanced by the judicious use of make-up. They both looked absolutely ravishing, and to complete their devastating efforts to ruin his concentration for the night, their lithe, athletic figures were swathed in form-fitting evening dresses. He licked his lips as he approached them, reaching out to gently stroke their toned stomachs through the velvety material.\n\n\"I know what you like, my exceedingly handsome man,\" Alyssa purred, a loving smile on her lips, while posing for him as he caressed her.\n\nEdraele's purple eyes sparkled as she looked down at his roaming hand, and listening to his thoughts, she said, \"Alyssa thought it prudent to have Dana and Rachel empty your quad before we left. I can see she knows you very well, indeed.\"\n\n\"It wouldn't do to make us look like we're pregnant before we go out,\" Alyssa murmured, pressing her tummy into his hand.\n\n\"We'll be good girls for you when we return home,\" Edraele promised him, leaning forward too, and letting out a barely audible moan.\n\n\"Bye, ladies, don't wait up!\" John announced cheerfully to the onlookers on the bed, much to their amusement.\n\nHe offered his Matriarchs his arms, and they slipped their hands through, and let him escort them out of the room. The sound of giggling reached their ears, as the girls on the bed decided who was going to be first to enjoy the sweet-tasting treats John had left in Dana and Rachel.\n\n*That's going to be the third time for Luna, Almari, and Ilyana,* John said, glancing at both the blondes in turn. *I'm going to have to speak to Athena tonight, and get that Astral Ward in place.*\n\nAlyssa patted his arm, and said seductively, *We'll have a fun evening together, then empty your quad for you. Edraele and I can go to sleep with full tummies, while you chat to Athena.*\n\nHe reached down to squeeze their taut cheeks, and said quite reasonably, *Sounds like a hell of a plan.*\n\nNeither Alyssa nor Edraele would tell him where they were going, but there was a golden hover-car waiting outside the Invictus for them when they left through the airlock. He opened the door for the girls, and let them climb inside, before shutting it after them and walking around to the other side. When he sat down, John recognised one of Kali Loraleth's white-haired bodyguards at the wheel, and he said hello to Avelissa when she turned around to smile at them, as she checked they were safely aboard.\n\nJohn studied the former assassin as she drove, not paying attention to their journey, but focusing entirely on her instead. That strangely discordant aura about her had gone now, and she seemed relaxed and happy as she operated the hover-car.\n\n*I'm so sorry about everything that happened with Avelissa and the other assassins,* Edraele said, squeezing his arm. *At the time, it seemed so clear that it was best way forward.*\n\n*I've removed the compulsions you added to her mind, and fully restored her now. She'll be perfectly fine, as will all the others,* John said, nodding with satisfaction. He turned to smile at Edraele, and added, *Let's not dredge that up again, alright? It was my fault, not yours, and I hate seeing you get upset over it.*\n\n\"I won't,\" she replied in a whisper, leaning in to brush his lips with her own. \"I promise.\"\n\nHe smiled at her, and she looked at him adoringly, but before anyone could say anything else, they slowed to a halt in front of a grand-looking restaurant. John recognised Avelissa's counterpart, Renaya, who was standing at the door, shaking her head with an apologetic smile as she turned away a couple of hopeful-looking prospective diners. He glanced at the sign, \"Ralomoire\" written in sweeping lettering, and raised his eyebrow in appreciation.\n\n\"I've heard some of the engineers talking about this place,\" he noted, as he opened the door to get out. \"It's practically impossible to get a table, isn't it?\"\n\nEdraele laughed gaily, and replied, \"Not when you own the station it's built in, it isn't.\"\n\nHe offered her a hand to get out of the car, then jogged around to the other side to open the door for Alyssa, and help her out too. With a girl on either arm, he walked up the steps towards the grand double doors that opened before them. Inside the restaurant the decor was elegant and refined, with an outer circuit of tables surrounding an inner layer. The layers were separated by flowing streams, and their path to the middle took them over low-walled bridges. It was also entirely emptied of guests, with the lighting on the outer circuit lowered to a soothing ambient glow, with brighter lighting around the central table, which had place settings for five.\n\n\"You didn't need to clear the restaurant,\" John said, smiling at Edraele as he rolled his eyes in amusement.\n\nAlyssa laughed, and replied, \"Oh yes, she did! Can you imagine trying to eat with a whole load of Maliri fawning over you? I want a nice, hefty load tonight, and I didn't fancy sharing with a bunch of random women, who all want to try some of what you're serving.\"\n\n\"Alright, good point,\" he agreed, bowing his head in apology to Edraele. He pulled out two of the chairs for the blondes to sit, and glancing at the two extra place settings, he added, \"Who are we dining with?\"\n\n\"My friend! It's so wonderful to see you!\" Ceraden called out to him, as he walked through the door with Myriana on his arm.\n\nJohn turned in amazement, his jaw dropping open as he stared at the Maliri trader. \"Ceraden! What on Terra are you doing here?!\" John asked, walking over to meet the man halfway, and shaking his hand firmly as he grinned at him.\n\n\"I was invited by an acquaintance of yours,\" Ceraden replied archly, his bright blue eyes flicking to the Valaden Matriarch.\n\n\"I hope this was a good surprise?\" Edraele inquired, gliding over with Alyssa, to stand beside John.\n\n\"An amazing surprise, thank you!\" John said, with a disbelieving chuckle. He turned his attention to Ceraden's companion, and continued, \"It's lovely to see you again, too, Myriana.\"\n\n\"Thank you, John,\" she replied, flushing with happiness. Glancing fondly at Ceraden, she added, \"I had the time of my life at Geniya.\"\n\nJohn looked at the pair of them for a moment, until he realised what she was hinting at, and blurted out, \"That's amazing! Congratulations, the pair of you!\"\n\n\"Myriana's a truly marvellous woman, my friend,\" Ceraden confided in him, with a broad smile. \"I'm happy to admit I've fallen head-over-heels for her. I believe you had a hand in sending her to Geniya, so it appears I'll forever be in your debt.\"\n\nJohn laughed in astonishment, shaking his head as he marvelled, \"Isn't it strange the way things work out?\"\n\nEdraele smiled with satisfaction, as she agreed, \"Oh yes, these kinds of coincidences can be truly bizarre.\"\n\n*You're so naughty,* Alyssa told her, glancing Edraele's way with a sparkle in her cerulean eyes. *He'll give you a well-deserved spanking when he finds out what you've been up to.*\n\n*Look how happy he is,* Edraele replied, her purple eyes darting to John's beaming face as he spoke with Ceraden. She nodded to herself, and added, *I'd willingly endure far worse to see a smile like that again.*\n\nCeraden turned his attention to her, and performed a sweeping bow as he said respectfully, \"You look positively radiant this evening, Matriarch.\"\n\n\"Just Edraele, please, Ceraden,\" she replied, giving him a warm smile.\n\nHe nodded, meeting her gaze for a fleeting moment, before turning his attention to Alyssa. Ceraden grinned at the Terran teenager, and exclaimed, \"It's so good to see you again, Alyssa! Have you grown weary of this scallywag, yet?\"\n\nShaking her head, Alyssa gave him a dazzling smile, as she replied, \"No, he's still doing a splendid job of keeping me entertained.\" She arched an eyebrow at Ceraden, and asked, \"Why? Are you still looking for more companionship?\"\n\nHe shot a wary glance at Myriana and shook his head, as he replied, \"Of course not, my dear. I wouldn't dare risk my current status as Lady Luck's most-favoured son.\"\n\n\"You old charmer, Ceraden,\" Myriana replied, grinning at him happily. She shared a very quick glance with Edraele, and added airily, \"Although, I wouldn't be too hasty in writing off some more company.\"\n\nCeraden blinked in surprise as he doubted his own ears for a moment, but he brushed it off, figuring now was neither the time nor place for such a discussion, no matter how intriguing. \n\n\"Let's all sit down, everyone,\" John suggested, gesturing to the table. He held the chairs for Alyssa and Edraele as they sat, then took the seat between them. A white-haired waitress glided across the bridges to their table, and he was surprised to recognise one of Leena's bodyguards this time.\n\nShe saw his inquisitive glance, and smiled at him, as she said, \"Leena and all the other Matriarchs are quite safe, you have nothing to worry about. Now, what would you like to drink?\"\n\nDinner was a delightful affair, with everyone sampling the light, fragrant wines, except for Myriana, who was avoiding alcohol due to her pregnancy. Conversation was light-hearted and flowed freely, with everyone well at-ease in each other's company. Course after course appeared, with the assassins proving that being an accomplished martial artist and trained killer provided useful, transferable skills, for slightly more mundane professions. They removed trays stacked high with plates, without so much as a single spillage, as their guests moved on to a selection of exquisite desserts.\n\nOnce dinner was finished, John and Ceraden left Myriana to gossip with Alyssa and Edraele. Brandishing glasses of whiskey, they made their way up a flight of stairs to a couple of chairs on the balcony that overlooked the restaurant. The ceiling was formed from a clear-crystal canopy, giving a breathtaking view of the Valaden system. Sitting back in their chairs, the two men watched the broad variety of golden-hulled vessels flying to and from Genthalas, against the backdrop of a brilliant multi-hued starscape.\n\n\"It's been a fantastic evening, Ceraden,\" John said, toasting his friend, before taking a sip. \"You've no idea how much I've missed some male company!\"\n\nCeraden smiled back at him, and said, \"After everything you've done for me, my friend, consider it the smallest of karmic favours being repaid.\" Before John could ask what he meant by that, the Maliri added, \"It seems you've been entertaining some quite delightful new female company yourself?\"\n\nJohn glanced down at the white-haired Matriarch, and he smiled as he said, \"Edraele's remarkable, isn't she?\"\n\n\"She certainly is,\" Ceraden agreed, with a slight catch in his throat. He coughed and took a quick sip of his drink, before he smiled, and added, \"It seems I was quite wrong with the unfounded warning I gave you, regarding the esteemed Edraele Valaden. My apologies, for giving you such terrible advice.\"\n\n\"No need to apologise,\" John replied hastily. He faltered then, before replying, \"I think she's had a relatively recent change of heart.\"\n\n\"Ah, I see. There seems to be quite a bit of that going around, of late,\" Ceraden murmured, studying John in fascination. Watching one of the House Aeberos assassins walking away with the dessert dishes, he continued, \"What do you think of this new fashion for white hair amongst the females of my species? I believe it's a most fetching look, myself.\"\n\nJohn spluttered into his drink for a moment, then managed to collect himself, and replied, \"I've had a bit of a thing for blondes since Alyssa bounded into my life. I'd have to agree with you there.\" Eager to change the subject, he added, \"I'm so pleased for you and Myriana. I think you'll make wonderful parents together.\"\n\nCeraden nodded, and said earnestly, \"Children are a gift John, and one to be treasured. You'll understand how much they mean to you, when you become a parent.\"\n\nFlinching as he remembered that Ceraden had lost contact with his daughters, John nodded, while trying to think of another, safer, topic to shift to next.\n\nCeraden took pity on him, and quickly said, \"Myriana tells me that you're thinking of becoming a parent yourself, in the near future?\" When John glanced down at the two lissom blondes chatting to Myriana, Ceraden chuckled, and added, \"You aim high, my friend, I'll give you that! Until today, I would have considered any man pursuing Edraele Valaden in that regard to have lost all grip on his sanity. Now, I must confess, I'm envious that you attracted the favourable attention of such a woman.\"\n\nJohn nodded, and said, \"All the women in my life are truly exceptional.\" He smiled at his friend, as he added, \"I'm sorry to tell you, but I think Lady Luck is still in my corner.\"\n\nThe Maliri trader laughed, and raising his whiskey glass, he said, \"A toast, then - to all the remarkable women, tamed by Lady Luck's most-favoured son!\"\n\nSomething about the way Ceraden said that made John pause, and he watched the Maliri while he took a sip from his drink. Those blue eyes of his twinkled in amusement, as though he were privy to a joke that John wasn't aware of, and John wondered what he was up to.\n\n*We're getting ready to call it a night, if that's not too soon for you, my love?* Alyssa asked him, her tone loving and affectionate.\n\n*No, that's okay, we'll come down and join you,* John replied, wondering just how heavily Alyssa had been hitting the wine. Although he always felt those emotions from her towards him over their empathic bond, it was unusual for her to put them into words, usually hiding behind mischievous teasing, instead.\n\nShe sounded amused as she said, *I think I need to keep you away from Rachel. Some of her uncanny perceptiveness seems to be rubbing off on you.*\n\nJohn and Ceraden walked down the steps, and rejoined the three women seated at the table. They were sipping coffee, and they all turned to smile at their men, as they sat with them again.\n\nEdraele grinned at John, as she asked, \"I thought you might like to meet the chefs before we leave?\"\n\nHe nodded, and said enthusiastically, \"Their food was incredible! I'd love to learn how to cook more Maliri dishes; Jade loves it, and it would be a nice surprise for Irillith, if she gets homesick.\"\n\n\"It's a sweet gesture, but her home's with you, aboard the Invictus,\" Edraele replied, stroking his hand fondly. Her mouth turned up into a generous smile, as she added, \"At least until I can convince you to give up your nomadic existence, and put down your roots here.\"\n\n\"You're doing an excellent job so far!\" John said, with a chuckle.\n\nMovement at the far side of the restaurant caught his attention, and his eyes widened as the four chefs glided out of the kitchen to join them. He shook his head in amusement, and then said to Ceraden, \"We've just had dinner prepared for us by four of the most powerful women in the Regency!\" He rose from his chair and walked around the table to meet the four girls, and said, \"Dinner was absolutely delicious, thank you, ladies!\"\n\n\"One of the benefits of preparing all your own food to avoid being poisoned - you end up becoming a good cook!\" Leena said, with a beaming smile.\n\nJohn had heard Irillith echo similar sentiments, and although the meal had been incredible, it was sad to hear that their lives had been so dangerous, that such precautions were necessary. He turned around to look at Ceraden and Myriana, and said, \"Please let me introduce you to: Kali Loraleth, Nyrelle Aeberos, Valani Naestina, and Leena Ghilwen, Matriarchs of their respective Houses.\"\n\nNow it was Ceraden's turn to look astonished, and he took one look at their long-flowing hair, then shared a quick glance with Edraele. When she nodded imperceptibly, his eyes flashed to John with a newfound glimmer of awe. The exchange only took a second, and he shrugged it off quickly, as he performed a sweeping bow, and said, \"I feel honoured to have sat at your table and eaten such an exquisite meal, Matriarchs. Consider me your humble servant.\"\n\nThey smiled at him, and murmured that he was welcome, unsure how to react to the flamboyant merchant. After saying goodbye, they left the restaurant while flanked by their bodyguards, leaving the group of five alone.\n\nJohn grinned at his friends, and said, \"Well, this evening's been full of nice surprises. I'm not going to forget this night out in a hurry!\"\n\n\"I had a lovely time, thank you for arranging everything,\" Alyssa said, stroking Edraele's arm.\n\nShe inclined her head, and said, \"Seeing everyone enjoy themselves made it all worthwhile. I'm so pleased you had a good time.\"\n\nJohn nodded towards the door, and said, \"Shall we head off?\"\n\n\"One moment, John,\" Edraele said, raising a slender blue hand to caress his shoulder. Turning to glance at the Maliri merchant, she added, \"I believe the others are travelling back to your guest suite, Ceraden?\"\n\n\"That's right, Edraele,\" he replied, his smile enigmatic.\n\n\"Others?\" John asked in confusion, assuming that they had been left alone.\n\nThe door to the kitchen opened once more, with the four sous chef's making an entrance, having just finished tidying up. John was astounded to see the four unruly noblewomen he'd seen only a few days ago, and they flashed playful smiles at him, as they walked up to the table. The four white-haired women gathered around Ceraden, and each gave him an affectionate peck on the cheek.\n\nBefore John could jump to the wrong conclusion, Dalesse said, \"We're so pleased you enjoyed dinner, father!\"\n\nIfene nodded, and said, \"Maybe you can tell us some stories when we get home, like you used to, Daddy? I haven't heard the one about the Mael'nerak in years...\"",
        "The four women glanced John's way, eyes flashing with amusement at his look of stunned amazement, tinged with more than a little dread. He eyed Ceraden warily, as his friend walked over to him and clasped him on a shoulder. He had no idea how the man was going to react, especially if he suspected what had gone on between John and his four daughters.\n\n\"Children are a precious gift, John,\" he said earnestly, reiterating his words up on the balcony. \"I'll never be able to repay you for returning mine to me. Thank you.\"\n\nWith that, he turned and left, with Laenya and Elinris on each arm, while Ifene and Dalesse hugged Myriana, and walked hand-in-hand with her, as they left the restaurant. Now it really was just John, Alyssa, and Edraele left inside, and he turned to look at both women with wide eyes.\n\n\"You set up all of this?\" he asked them both, looking from one beautiful woman to another.\n\nAlyssa glanced at Edraele, and grinned as she replied, \"I was aware of everything once we'd bonded, but I can't claim credit for any of it. Edraele was the creative genius behind all that.\"\n\n\"A good surprise?\" Edraele asked him tentatively, her face lifted in hope.\n\nJohn pulled her in for a hug, and said, \"I can't believe the lengths you went to, setting all this up! It could have all been an unmitigated disaster, but somehow, you managed to pull it off!\"\n\nShe bit her lip coyly, and murmured, \"You did say you were missing male company, and I really want you to be happy here. Ceraden was so overjoyed at being reunited with his daughters, he forgave my manipulation in ordering him to return to Genthalas.\"\n\nAlyssa hugged Edraele from behind, and kissed her on the cheek, as she replied, \"I've got a lot to learn from her, she's quite ingenious.\"\n\nJohn blanched then, and asked, \"What on Terra did you tell him I'd done to his daughters?! I can't imagine him reacting that way if he knew they'd all swallowed my cum!\"\n\nEdraele met his worried gaze, and leaned in to kiss him, as she replied, *I told him that you're related to the Mael'nerak, but a benevolent version instead. That you have psychic powers that let you heal the trauma Maliri society inflicted on his daughters.* When she pulled back, she added earnestly, \"I didn't lie to him. Everything I said was true, but Ceraden didn't want to delve any deeper into talk of psychic abilities; he's quite squeamish in that regard.\"\n\nJohn chuckled, and replied, \"That was an incredible surprise, thank you.\"\n\n\"You're very welcome,\" she said in a soft voice, planting a tender kiss on his lips. \"It was magical to see you looking so relaxed and happy with your friend.\"\n\n\"Come on, let's go to bed,\" John said with a grin. \"Despite your best efforts to give me a heart attack, I'm fully restocked and ready to go.\"\n\nAlyssa raised an eyebrow, and asked, \"I assume you'll want us to leave the evening dresses on?\"\n\nHe pulled back so he could admire both women in their figure-hugging outfits, and ran the backs of his fingers over their firm breasts, and down to their toned abdomens. \"Oh yes, absolutely,\" he agreed, his cock throbbing at the thought.\n\nThey walked out of the restaurant arm-in-arm, as Alyssa mentioned conversationally, \"The fabric's designed to stretch, but I think you should give it a field test. You should really stuff Edraele's womb for her, just to make sure...\"\n\nJohn put his arms around them both as they snuggled into him in the back seat of the car, and said to their driver, \"Edraele's suite please, Avelissa. I think Edraele and Alyssa are going to be quite noisy tonight, and we wouldn't want to wake up the girls.\"\n\n\"Of course, John,\" she replied with a wide grin, the hover-car pulling away on silent anti-grav motors.\n\n***\n\nJohn gave his sleeping Matriarchs a final loving glance, before closing his eyes and pulling his astral-form away from his body. Even though he felt like he was dragging an anvil with him, it felt easier than the last time he'd done this, either through practice, or because of his growing strength.\n\n\"It's so good to see you!\" Athena gasped, steadying him, and helping him sit upright on Edraele's bed.\n\nJohn smiled at her, and was about to reply, but something in her deeply worried expression made him pause. \"You look scared, Athena. Is something wrong?\" he asked, pulling her in for a hug.\n\nShe tried to deny it at first, but his strong arms were comforting, and he felt her nod as she tucked her head in under his chin. \"She's getting stronger, so quickly,\" Athena murmured into his chest.\n\nIt took him a moment to realise what she meant, then asked, \"You're getting close? The time when the two of you are going to merge?\"\n\n\"I've only likely got a matter of weeks, maybe a month or two, at most! Then I'll be gone,\" she corrected him, shivering in his arms. She glanced up at him, and he could see the fear etched in her radiant face, as she added plaintively, \"I know that's why you created me, but I want more now! I see how much pleasure you gain from each other's company, and now I've tasted some of what life has to offer, I want to gorge myself on it!\"\n\n\"I didn't realise we were that close,\" he apologised, as he stroked her back.\n\nAthena shuddered, and said, \"We still had some time, and I was starting to hope, but when Alyssa bonded with Edraele...\"\n\n\"We'll try and come up with some ideas,\" John said, trying to stay optimistic. \"Rachel, Edraele, Alyssa, Dana, they're all very clever, they might be able to come up with something!\"\n\nShe shook her head, her face looking forlorn, as she replied, \"There's no time. You should forget about me, you've got enough to deal with.\" She pulled out of his arms, and sat back as she gave him a sad smile, and added, \"Let's get this Astral Ward in place. You already know what to do, you learned the Progenitor runes during the last nightmare, so it should be easy.\"\n\n\"Wait, let's talk about saving you fir-\" John started to say, before she cut him off abruptly.\n\n\"No, this is too important. You can't waste too much time in the Astral Plane, you don't want to exhaust yourself. Now, you need to weave a tight set of wards around yourself, no more than a few inches from your body. Keep it close, so you don't accidentally drag Alyssa or Edraele into the nightmare, if it goes wrong,\" she advised him, sternly. Her expression softened then, and she smiled as she added, \"Don't forget to close all the gaps this time. We don't want a repeat of the dome fiasco.\"\n\nHe nodded, understanding what he had to do, then reached out to stroke her arm, and said, \"We'll try and think of something to help you. You've done so much for me, I won't let you down.\"\n\n\"You can't save everyone,\" she told him softly, turning away as he was pulled out of the Astral Plane, his concentration broken.\n\nJohn fell back into his body as the Spirit-walk ended, the disorientation fading as he readjusted to being back in the Physical Plane. He was tempted to rest and try to reach Athena again, but he knew she'd be furious if he ignored her advice so blatantly, putting himself at risk. She'd saved them time and again over the last few months, and it was galling to think that he couldn't reward her for such unflinching dedication, with what she desired the most. He was determined to speak to the girls about it the following morning, but for now, he had work to do.\n\nRelaxing on the bed and calming his breathing, he felt the runic language of the Progenitors flowing from his subconscious. The runes tingled with potential, and while he understood what each of the glyphs meant, linking them together into runic phrases of Eldritch power, was something else entirely. He chose the nebulous rune that represented the Astral Plane, the warding rune for protection, and the shadowy rune for concealment, before discarding the rest.\n\nMashing them together into the equivalent of \"Run, Spot, Run,\" he formed a primitive sigil that he knew would do what was required. He summoned a glowing shell constructed of hexagons that completely encased his body, then daubed that sigil on every one, armouring himself in a runic fortress that would protect him while he slept.\n\nWith one last glance to check he hadn't missed anything, he smiled as he wriggled between Alyssa and Edraele, then pulled them close to him. They mumbled in their drowsy state, then snuggled closer, pressing their warm, cum-filled stomachs against his sides, as they nestled in against him. He let out a contented sigh, then closed his eyes, letting himself drift off to sleep.\n\n***\n\nThe swirling mists came for him that night, some otherworldly horror in the Astral Plane drawn to him like a beacon, just as he'd feared would happen. The feelings of mind-numbing terror were muted this time, and he felt like he was able to view them dispassionately, almost as if they were tangible things, on this Plane of dreams given physical form. With a start, he realised the leviathan was swathed in an insidious psychic aura that would worm its way into a man's soul, filling him with paralyzing terror, and leaving him vulnerable to ruin.\n\nAlthough he couldn't see anything more than a few feet in any direction, what with the obscuring nature of the fog that pervaded this realm, he could -feel- that something was hunting him. It was vast, ancient, and possessed of an alien and unnatural intellect that left him quaking, even with his protective wards in place. Although he desperately wanted to exit the dreamworld, he had no way of forcibly ejecting himself, not while the hideous presence was blocking the exits as it had done before.\n\nSomething titanic loomed overhead, eerie wails and discordant cries trailing in its dreadful wake, but the shroud of wards held strong, hiding him from the Astral behemoth. He heard something else skittering nearby, his mind conjuring frightful images filled with eyes and fangs. Then, yet another antediluvian monstrosity lurched past, unseen, but its dread presence left a wake of horror in its passing.\n\nHe quailed, as he suddenly realised that whatever hideous abomination lurked there, as the mastermind behind this pocket plane, it was not the creature that attacked them last time. That massive titan was but one pawn in this terrifying legion of slavering monstrosities, who were searching for him in vain, and so hungered for his flesh.\n\nThe minutes stretched out for what seemed like an eternity in that damnable place, but his wards held strong, shrouding him from the monsters' malevolent intent. Then, just like that, the confining blocks were removed, and he was able to burst clear, his eyes snapping open as he returned to reality again. His heart hammered in his chest, but it wasn't with the same feeling of unspeakable horror as before. He quickly calmed himself, then smiled at Edraele and Alyssa, as they hugged him tightly.\n\nSending a heartfelt message of thanks to Athena, he closed his eyes, and drifted off to sleep once again.\n\n***\n\nThe following morning, John did as he promised he would, and called a meeting with his crew and Edraele, asking all of them to think of any possible way they might be able to assist Athena. They agreed that they would, before they moved on to a quick recap of the refit plans. Rachel had been delighted by the return of the dedicated engineers from the last refit, and she put them into supervisory roles, freeing up the crew for more useful work.\n\nSakura and Calara were both overjoyed when Rachel told them this. Not only did they now have time to spar again, Sakura was able to devote more time to the security upgrades, while Calara was able to test the holo-functionality in her new Fleet Command interface. There was to be no respite for John and Alyssa, though, as they were the only ones able to psychically shape the Crystal Alyssium they were using to reinforce and protect the ship.\n\nBefore John started any work that morning, he sought out Filaurel and her friends, to gently decline their wonderful offer. He was surprised, but greatly relieved when they weren't distraught, and told him that they understood, when he explained that he had already made such commitments to a significant number of other women. Ioelena looked guilty as she admitted that Myriana had reached out to them late the previous night, with a most intriguing alternative. Sensing Alyssa and Edraele's hand in events, he thanked them both profusely, then went back to assisting with the refit.\n\nA week passed, with the work on the Invictus proceeding faster than Rachel had scheduled. The dedication and focus of all the engineers was remarkable, and they swept through the mid-section of the hull, building the Maliri Crystal superstructure for the new rooms and corridors, before laying down the required power and data cables. After several more days of feeding sessions, every engineer in the project was now linked to Edraele, her psychic network throbbing with new potential.\n\nWhile John and Alyssa helped with the heavy-lifting and psychic reshaping, Dana focused on the complex and detailed work of constructing the new Progenitor components. She finished the third Power Core, and the moment it had been installed, she launched straight into construction of the Progenitor variant of the Tachyon Drive. Irillith soon had all of the old digital network restored, and working with Jade and Faye, they began to construct the Nexus server required to host the Invictus' gateway.\n\nEverything seemed to be going fantastically well, but there was one unknown that had them all on edge: Tashana. They all wondered where she was, and equally as importantly, was she alright?\n\nJohn stood with Dana outside the Invictus, studying intricate schematics on her portable holo-viewer, of her variant of the hugely-upgraded Maliri Pulse Cannons. He'd been tasked with extending the defence grid and constructing another sixteen of those weapons, while his mischievous blonde counterpart had started working on the exciting new weapons. As he flogged his brain to memorise the exact dimensions and precise shape of the two-metre-long barrels, Edraele's alarmed voice echoed through his mind.\n\n*I've received some very disturbing reports, John,* she said, sounding alarmed. *Do you think you could return to my suite? I'd like to go over these with you in person.*\n\n*Of course, I'll be right there,* he agreed, trying to sound as reassuring as possible.\n\nDana looked at him curiously, and said, \"You zoned-out for a second there. Everything okay with Edraele?\"\n\nHe nodded, then said apologetically, \"Sorry, Sparks, I need to get over there. I think I've got the Pulse Cannons memorised now, though, and I'll make a start on them as soon as I can.\"\n\nShe shrugged, and said, \"There's no rush. It won't take long to fit them on the ship, not like the big fuckers Alyssa's working on. I can leave you the holo-viewer, if you want a refresher on the Pulse Cannons.\"\n\nShaking his head, John jogged over to a passing hover-truck, and jumped nimbly onto the back to catch a ride. \"I'm sure I've got it now. See you after lunch!\" he called back to her, waving goodbye.\n\nThe redhead grinned at him, showing him a sparkling white smile, before she bounced off to her Engineering Bay, to continue work on the Tachyon Drive.\n\nJohn leaned forward to tap the driver on the shoulder, and said, \"Hey, Zinthae! Are you heading to the crystal plant in sector fifty-seven?\"\n\nShe glanced over her shoulder at him in surprise, then grinned, as she said, \"That's right, I'm off to pick up the next delivery. Hey, how'd you know it was me driving?\"\n\n\"Your elegant posture gave it away,\" he replied, with a wink. \"Mind if I hitch a ride part of the way? I've got to see the boss lady.\"\n\nShe chuckled, and shaking her head, she replied, \"I can't believe you, of all people, have to answer to a Matriarch!\"\n\n\"I've got two nagging me all day!\" he answered in a staged whisper, while rolling his eyes. \n\nShe giggled at that, and he sat back on the truck, enjoying the banter with the young woman. He frowned then, remembering that she was actually seventy-eight, but she looked so youthful, it was easy to forget.\n\n*I do not nag,* Alyssa said, faking a frosty, disapproving tone.\n\n*Sure you do,* he teased her, in return. Adopting a high-pitched telepathic voice, he continued, *Have you remembered to bone this girl today? How about fucking that one up the ass? Don't forget to have these four girls blow you! Oh, and leave the recruitment of nubile young playmates to me, I'm the XO, remember...*\n\n*Your life is just one monotonous grind, isn't it?* Alyssa said, with faux-sympathy. *You must really wish you could catch a break someday?*\n\n*Welcome to my life,* he replied glumly, then grinned as he heard her laughter reverberate through his mind.\n\n\"Nearly there, John,\" Zinthae called back to him.\n\n\"Thanks, beautiful!\" he replied, patting her on the shoulder, before leaping off the side of the truck.\n\nHe jogged down a side corridor as he headed from the main thoroughfare towards the Matriarch's quarters, and the blonde guards smiled at him as he walked between them. The lounge was empty, so he walked straight through to Edraele's study, where he found her sitting behind her desk, while the four young Matriarchs sat on the sofas nearby. He acknowledged each of them with a warm smile.\n\n\"Thank you for arriving so quickly,\" Edraele said, rising to her feet and gliding over to greet him with a kiss.\n\n\"Of course, what's the problem exactly?\" he asked, looking at her tense expression with concern.\n\nShe sighed, and said, \"We think we know where Tashana went.\" She glanced over at the House Loraleth Matriarch, and continued, \"Kali, could you show John what you showed me, please?\"\n\n\"Of course!\" Kali replied, springing energetically to her feet.\n\nShe took a deep breath to remind herself to be stately and calm, and walked over to the holo-projector on Edraele's desk and pressed a button. A Maliri Regency territory map sprang into existence in the centre of the room, clearly showing the areas of space owned by each of the rival Houses. She pointed to a significantly-sized area of territory, that was marked as belonging to House Perfaren.\n\n\"I've been receiving reports from spies and hidden sensor probes, which have been showing massive fleet movements into House Perfaren territory,\" Kali explained, hitting a couple of buttons which showed sizeable numbers of ships crossing the border. \"My sources believe that Matriarch Gaenna Baelora has stripped every fleet asset from her territory, and has sent them into Perfaren space.\"\n\n\"Are you sure it's not some kind of massive invasion?\" John asked, just to check.\n\nShaking her head, Kali replied, \"No, definitely not. Their forces are forming up together in huge staging grounds. It looks like they've thrown everything into an alliance.\"\n\nJohn frowned, and pointing at the House Baelora territory on the map, he asked, \"Won't that leave this Geanna vulnerable to attack from Houses... Holaris, Romenor, and Kayden?\"\n\nNyrelle shook her head, and replied, \"I'm afraid not, John. House Aeberos shares a border with Holaris and Romenor, and my spies report they've withdrawn all fleet assets from the border as well. They're all gathering in House Perfaren territory.\"\n\nEdraele placed her hand on his shoulder, and sounded deeply concerned, as she explained, \"That would mean that House Perfaren at Rank Three, has formed an alliance with Houses ranked Six, Eight, Nine, and Fifteen.\"\n\n\"How many Houses are there in total?\" John asked, looking around the group of worried women.\n\n\"Nineteen!\" Leena answered in a rush. \"The number fluctuates slightly as new houses are formed or old ones brought down.\"\n\n\"Alright, but your Houses are ranked One, Two, Four, Five and Seven, right? Surely based on pure power, we have a significant advantage?\" he asked them.\n\n\"Against those five Houses alone, we would have a huge advantage in fleet size,\" Edraele confirmed for him, but her frown told him there was more bad news.",
        "\"Let me guess, there's more Houses in this new alliance?\" he asked, looking pensive.\n\nEdraele nodded, and replied, \"We think all of them have thrown in their lot with House Perfaren.\"\n\nJohn winced, and exclaimed, \"All of them! I thought alliances were extremely rare?!\"\n\nEdraele nodded, and replied, \"Such a vast coalition is unprecedented. For the last several days, I've been attempting to reach out to various Houses, to see if the pressure we applied had borne fruit. They're all refusing to take incoming calls from me. I tried contacting some of the more remote Houses as well, but I've been facing an identical comms blackout.\"\n\n\"They won't open comms with any of us, either,\" Kali confirmed, sounding nervous.\n\nValani looked apprehensive, as she cleared her throat, and said, \"I think all this might have been my fault.\" She ignored the supportive words and denials from her fellow Matriarchs, and stepped over to John, as she continued, \"I accidentally met with Tashana a couple of times before she left, and she was deathly afraid of you, and what you might do to the Maliri. I only just remembered it now, after seeing what's been happening with House Perfaren, but I mentioned to her that I'd been having problems with my Fleet Commander on that border.\"\n\n\"There's no way you could have known what she was about to do,\" John said, taking her hand in his and smiling at her supportively. \n\n\"We think Tashana slipped into House Perfaren territory,\" Edraele summarised for him. \"She must have convinced Tsarra Perfaren that the Mael'nerak threat is real, and they've been working nonstop to gather allies.\"\n\n\"Hold on, let me think a moment,\" John said, clenching his jaw as he stared at the map. He narrowed his eyes, and continued grimly, \"We've got to assume your theory is correct, that they've managed to recruit all the other Houses against us. How do we stand in a knockdown fight against their forces?\"\n\n\"They slightly outnumber us, by a margin of perhaps twenty percent,\" Edraele said soberly. \"Although, all vessels in my fleets have been upgraded with Trankaran engines and retrothrusters.\"\n\n\"And we've got the Invictus,\" John said, then grimaced as he added, \"When it's finally spaceworthy.\"\n\n\"What should we do?\" Kali asked, looking at him with wide eyes.\n\nHe closed his eyes for a moment, trying to put himself in Tashana's position. He knew she hated Irillith and Edraele, blaming them for everything that had happened in the Unclaimed Wastes. However, he'd seen how terrified of him she was, and armed with whatever knowledge she had gathered about Progenitors in her research, he knew that opposing him had to be her highest priority.\n\n\"I want you to move all your fleets to Genthalas. Tashana and her Matriarchs aren't interested in territory, they want to take out everyone in this room,\" John said, looking at each of them in turn. \"We'll need everything you've got to stand off against Tashana's rebellion. Whichever fleet gets here first, we'll start upgrading those ships with Trankaran engines and thrusters. I planned to give all of you access to some more of my tech so you could upgrade your fleets, but we won't have time for major refits now. Will any of your Fleet Commanders give you any difficulty about moving your forces?\"\n\nNyrelle smiled at him, and brushed her hand through her long flowing white hair, as she replied, \"Since we've been with you, they wouldn't dream of disobeying us. Kalmaera has been helpful and eager to please.\"\n\n\"Good, just let me know if you need me to intervene,\" he said, supportively. Turning to look at the map again, he asked, \"I need to know two things: How long until they finish amassing all their forces, and how long will it take them to fly to Genthalas?\"\n\nEdraele and the others shared pensive glances, until she replied, \"I'd estimate four days for forces from the furthest-flung Houses to assemble. Then three days for their armada to arrive at Genthalas.\" The young Matriarchs nodded their agreement with her hasty estimates.\n\nJohn nodded, and said authoritatively, \"We'll assume only two days for them to gather enough ships, just in case they don't wait, and try to catch us unawares. However, they'll still need three days to get here. So we need to prepare for a massive battle in five days, ladies.\"\n\n\"A battle this closely matched, involving every ship in the Regency, is going to be a bloodbath,\" Leena said quietly, sounding more than a little scared.\n\n\"We'll be looking at Maliri casualties in the tens of millions,\" Valani agreed, having gone deathly pale.\n\n\"I'm going to try and make sure it doesn't come to that,\" John replied, reaching out to put a comforting hand on her shoulder, then looking around the group and meeting each of their frightened gazes.\n\nThey nodded, drawing strength from his supportive smile and confident bearing.\n\n*Rachel says it's going to be tight,* Alyssa warned him. *You better get back here. We need everyone working balls-to-the-wall to get this crate hammered back together in time!*\n\n*Alright, I'll head back in a minute. We'll review and see if there's anything else we can scratch from the refit, while we just focus on getting the Invictus ready for battle,* John agreed, doing his best to keep his worry from his face.\n\nHe beckoned the young Matriarchs over for a group hug, and when they'd gathered to him, he said to them in a calm, steady voice, \"Now, It's important that you don't go worrying yourselves sick, wondering what might, or might not happen next. I need all of you fresh and alert, so that we can react quickly and efficiently to anything unexpected that crops up.\" He smiled at Edraele, and beckoning her over, he added, \"That goes for you too, beautiful.\"\n\nEdraele put her arms around, Nyrelle and Valani, and said obediently, \"I'll try to just focus on the tasks at hand. I'll recall all my border forces, and marshall them at Genthalas.\"\n\n\"Thank you,\" he said, giving her an approving smile. He looked at the four young women around him, and continued, \"Can all of you do the same for me?\"\n\nThey all nodded, looking at him with big eyes, the nervous tension quite apparent in their beautiful young faces.\n\n\"You're all good girls, and I'm very proud of you. We've made our strategic decisions and now we just need to wait to see how this plays itself out. Just focus on gathering your forces as we discussed, and if circumstances change, we'll adapt to them,\" he said, locking eyes with each of them, as he looked around the group.\n\n\"I'm so glad you're here to help us get through this!\" Kali exclaimed, her indigo eyes full of gratitude.\n\nHe leaned in and gave her a tender kiss, and said, \"Everything will be alright. We've got one huge advantage that Tashana's Matriarchs don't have.\"\n\n\"What's that?\" Valani asked him, hanging on his every word.\n\n\"All of us genuinely care for each other, and want to do our best to improve the lives of billions of Maliri. Knowing that we're doing the right thing makes a huge difference to morale, and the women under your command will already know about the impact you've made to the worlds you govern,\" he explained, looking into her lovely teal-coloured eyes. \n\n\"John, can we meet up for a team-building session tonight?\" Nyrelle asked him, her dark-blue eyes flashing with excitement.\n\nHe smiled at her, and replied, \"That's an excellent suggestion, Matriarch. I'll bring my crew too, if that's alright? They've been dying to meet all of you.\"\n\nNyrelle nodded eagerly, and the others smiled at her, then nodded too, equally as excited as the lusty House Aeberos Matriarch.\n\n*Celebrate the news that we're about to face an empire-wide civil war, with an orgy?* Alyssa asked him, curiously. He could feel her flush of arousal across the empathic bond, as she added, *I like your style, Mister Blake!*\n\nEdraele met his gaze across Nyrelle and Valani's shoulders, and said, *Thank you for putting them at ease, John. You did a superb job of keeping your worries so well hidden. If I couldn't hear your thoughts, I'd never have suspected.*\n\n*It's my job to shoulder that burden of responsibility, so they don't have to,* he replied, dropping his confident bravado for a second, as he met Edraele's probing purple gaze.\n\nAlyssa's soothing purr coasted through his mind, as she murmured, *And it's our job as your Matriarchs, to reward you for your diligence in your new role. We're going to be very good girls for you tonight, handsome.*\n\nEdraele's full lips lifted up into a beautiful smile, and she nodded, as she stared at him reverently.\n\n***\n\nTashana gave the young House Perfaren Matriarch a reassuring pat on the shoulder, and said in her rough voice, \"I have every confidence in you, Tsarra. You can do this.\"\n\nDoing her best to fight down her nerves, Tsarra nodded, and then turned in her chair to face the screen. She glanced at her assistant, Renelle, who began the recording, then stared at the camera, and said decisively, \"My name is Matriarch Tsarra Perfaren, and I lead the Maliri Freedom Alliance. The Matriarchs who stand with me profoundly reject your attempts to subjugate our civilisation, Progenitor. We will not bow down for another of your kind, like our ancestors were forced to for the Mael'nerak, and we will fight you to the last woman, to protect the Regency! On behalf of all the Free Maliri, we declare war on you and your Thralls, enslaver!\"\n\nWith a curt nod to Renelle, the recording was ended, and she slumped in her chair, glancing at Aadya and Tashana with a worried frown. \"How was that? Did I sound nervous?\" she asked, lifting her ragged thumbnail to nibble on it, before forcing herself to clasp the armrests of her chair, to keep her anxious hands occupied. \n\n\"That was perfect!\" Tashana said, her violet eyes flashing with excitement. \"You didn't seem nervous at all.\"\n\nAadya smiled at her youthful Matriarch, remembering well her vicious predecessor, and felt profoundly grateful that Tsarra had been the one to inherit her position, rather than her two spiteful older sisters. She nodded her agreement with Tashana, and said, \"You had just the right amount of gravitas, Matriarch. Your speech was very inspiring.\"\n\nTsarra looked immensely relieved, and she said, \"I was sure you'd be able to see I was shaking with nerves!\"\n\n\"Should I arrange for your declaration of war to be broadcast to our worlds, Matriarch?\" Renelle asked, her tone respectful, as she looked at Tsarra.\n\nAfter a moment of indecision, Tsarra nodded, and said, \"Yes, do that please, Renelle. Oh, and don't forget to send a copy to the other Matriarchs too! It's important they see what we're transmitting to the Progenitor and his Thralls.\" She blushed then, remembering that a Matriarch shouldn't be so polite to one of her servants.\n\n\"At once, Matriarch,\" her assistant replied, smiling at her before bowing and leaving the room.\n\n\"Is Edraele still attempting to contact you?\" Tashana asked, her tone pensive. \n\nTsarra nodded, and replied, \"She's been trying to reach me daily for the last several days.\"\n\nTashana's eyes narrowed suspiciously as she asked, \"You haven't viewed any of her messages have you? It's imperative you don't expose yourself to her lies and insidious influence!\"\n\nThe pressure on the young House Perfaren Matriarch had been intense over the last few weeks, as over a dozen Houses looked to her, to organise and lead their unlikely coalition. Overwrought with the stress, she frowned at the masked woman's tone, and Tsarra bristled as she replied, \"Of course not! Why are you treating me like some half-witted fool? I listened to your warnings!\"\n\n\"I'm sorry, Matriarch. I'm just worried,\" Tashana replied, averting her eyes from Tsarra's indignant glare. She went quiet for a moment, then added urgently, \"We can't afford to take any chances with the other Matriarchs, though. I think you should destroy any comms beacons around Valaden Space. We need to contain and isolate House Valaden territory, and quarantine the Progenitor and his Matriarchs in Genthalas, before he can corrupt any more Houses!\"\n\nTsarra darted a worried glance at Aadya, and the older Fleet Commander nodded, as she said, \"I know such a thing is unheard of, but it's a sensible precaution.\"\n\n\"Alright, issue the command then, Aadya,\" Tsarra said, as she rose from her chair. She shivered, as she continued, \"I'd better go and prepare for my meeting with the Alliance. I can't let the other Matriarchs see how scared I am...\"\n\n\"I'll issue your command to the appropriate fleet assets, immediately,\" Aadya replied, while dipping her head to the younger woman a respectful bow. \n\nTsarra started to walk for the door, with Tashana and Aadya falling into step beside her, and the House Perfaren Matriarch sounded apprehensive, as she asked, \"Are you sure it's wise to charge headlong for Genthalas? You advised me previously that the station's defences are formidable...\"\n\n\"We have no choice,\" Tashana replied, her rough voice insistent. \"The longer we wait, the more time John Blake has to enthrall more of the Maliri. We have to strike as quickly as we can, while we still have an advantage in numbers.\"\n\nAadya nodded, as she replied, \"It's their most powerful defensive asset, drawing them away from it will be almost impossible.\" She sounded resigned to the decision, as she continued, \"If we're going to confront the Progenitor and House Valaden, we have to prepare for a battle around Genthalas Shipyard. I've drawn up plans for numerous different scenarios involving an assault on the station.\"\n\nTashana smiled grimly behind her mask as they walked along the corridor, and she sounded confident as she said, \"Even if we can't kill him outright in the battle, we just have to damage his forces enough to make him abandon his Maliri Matriarch and flee. That's how Mael'nerak's foul dominion was finally overthrown.\"\n\n\"I hope you're right,\" Tsarra said, sharing a nervous glance with Aadya, as they approached the meeting room. \"We're gambling everything on this strategy.\"\n\n\"I've heard it from Mael'nerak's Matriarch herself,\" Tashana replied, her faith unshakeable. \"Valada, my ancient ancestor, was the First Matriarch of what was to become House Valaden, and she left a warning for future generations. Mael'nerak was attacked, and was forced to abandon her when he left. That was what freed the Maliri from his tyranny ten millennia ago.\"\n\nAadya's normally-calm face was tense with worry, as she said, \"We do have the advantage in numbers, but that's balanced by Genthalas. If he doesn't flee, and his forces don't surrender, the scale of death and destruction will be too terrible to contemplate.\"\n\n\"Trust me,\" Tashana said, not wavering for a moment. \"It's our single best chance of defeating him.\"\n\nWith that, they walked into the meeting room, and prepared themselves to convince thirteen other Matriarchs of the validity of exactly that strategy.\n\n***\n\nReceiving Tsarra Perfaren's declaration of war invigorated John, the girls, and the Maliri, with renewed focus. With a dramatic deadline now set, work on the Invictus continued at a frantic pace. The Maliri engineers finished the superstructure after two more days, and the empty shells of all the new rooms were completed by the third. Power and data cables were put into place for all the new facilities, although construction for a number of them had been postponed, with the push to get the Invictus combat-ready paramount. While hundreds of engineers laboured away inside the assault cruiser, even more burst into action, rapidly cladding the entire outer-hull in Alyssa's quad-shaped Crystal Alyssium armour plating.\n\nAs soon as Dana had finished constructing the Tachyon Drive, it was swiftly installed in the refurbished Drive Room, the power-hungry device hooked up to dozens of power relays, to provide it all the energy it needed. John and Dana called for Alyndra and her group of white-haired technicians to visit them in the Invictus' cargo bay afterwards, and they presented the astonished women with the now-obsolete Power Core and Tachyon Drive that had just been removed from the Invictus, along with the schematics to build more. There was no rest for the redhead after that, as she immediately got to work on creating smaller versions of the Progenitor devices, that would be installed in the Raptor.\n\nThe Invictus had started the refit at a trim five-hundred metres, which was the standard size for a Terran Federation cruiser. With the additional superstructure in place, it had been extended to a burgeoning length of seven-hundred-and-fifty metres, making it comparable in size to a battlecruiser. It took nearly three days to affix all the new armour plating into position, but Rachel grinned with satisfaction when the grey, denuded vessel, was a resplendent sparkling-white once again.\n\nIt took John a few attempts to get the Pulse Cannon barrels exactly right, but one of the advantages of working with a psychically-reformable material, was that he could simply melt the alloy into a big floating ball, and start all over again. Eventually, he received an approving nod from Dana, when she examined the first one he was happy with, and he proceeded to blitz through the rest of the sixteen that were required.\n\nAlyssa worked on the twelve huge, forty-metre-long howitzers that would be required for the new batteries in the mid-section, and she finished at roughly the same time as John completed the last of the Pulse Cannons. After a quick game of rock-paper-scissors, John began to form the plating for the inside of the turret wells. Alyssa was overjoyed to have avoided working on any form of armour plating, and she only teased him lightly for losing. As the victor, she worked on the sixteen new ten-metre barrels for Dana's latest toys, which would be mounted on the underbelly of the Invictus.\n\nTeams of engineers worked frantically to assemble the rest of the weapons, while secondary teams laboured on the turret housings which would support all this new firepower. Meanwhile, a number of the existing Beam Lasers on the underbelly were moved to new hardpoints, making room for the new weapons, and providing an even spread of weaponry over the hull. By the time the engineers had finished armour plating the Invictus' hull, the Pulse Cannon turrets were fully built, and ready to be installed on weapon hardpoints.\n\nIt was at that time Edraele contacted John, warning him of a massive incoming armada. Sensors on the edge of Loraleth territory had picked up several hundred vessels crossing over the border with House Perfaren, and just as John had predicted, they ignored all House Loraleth's worlds, as they made a beeline for Genthalas Station. Ships from John's forces had been arriving at the station daily, and it was now a race to get all the vessels there in time, before the invaders arrived.\n\nKnowing they only had a couple of days left to finish the work, had everyone working long shifts to wrap up the final stages. By the evening of the fifth day, the last of the new huge cannons had been lowered into place, massive hull doors were aligned and secured for the additional hangar, and the launching mechanism for Dana's secret project was hastily fixed in the bow of the ship. \n\nJohn and the girls met up on the maintenance gantry overlooking the Invictus that evening, to see the final results of all their hard work. All the weaponry was exposed from the hull, revealing the forbidding arsenal contained within the ferociously upgraded vessel. \n\nShaking his head in wonder at the glorious sight, John put his arm around Rachel, and said, \"You excelled yourself, honey. I can't believe we managed to get everything finished in time.\"\n\n\"Not quite everything,\" she admitted, with a resigned expression on her beautiful face. Ticking off the unfinished items on her fingers, she continued, \"We had to postpone refurbishing the Officers' Lounge, and we still need to construct the Observatory. We haven't made a start on Jade's-\"",
        "Alyssa laughed, and interrupting her, she said, \"If we're still alive tomorrow, we can worry about installing the rest, after the battle. John's right, you did a hell of a job coordinating everything.\"\n\n\"The sheer number of components we've installed and upgraded is astounding,\" Irillith agreed, giving Rachel a respectful nod of the head. \"Planning out the phases of the install was tremendously helpful; we would have been lost without your guidance.\"\n\nDana slipped her arm around the brunette's waist, and said honestly, \"There's no way I could've built all those Progenitor devices, and supervised everything too. If I'd been left in charge, the ship would still be in bits!\"\n\n\"I've no idea how you managed all those teams,\" Sakura agreed, nodding. She smiled at Rachel, and added, \"I watched you organising pretty much everything, and I still don't know how you pulled it off!\"\n\n\"I wouldn't have known where to even start,\" Jade freely admitted. \n\nAlyssa smiled at the Nymph, and said affectionately, \"You spent most of the last three weeks either acting as a very tasty straw for John's quad, or blown up like a deliciously curvy, cum-inflated balloon. I doubt you'd have had time for anything else, sexy!\"\n\nJade let out a happy sigh, and glancing at John, she said, \"Feeding all those little kittens was bliss!\" She smiled at Rachel, and added, \"Even if I hadn't been busy, I still couldn't have managed everything. I don't think any of us could have.\"\n\nRachel grinned at her in gratitude, and looking around at her friends, she replied, \"Thanks, everyone! I must admit, it was very exciting, running a project of this size. I'd be happy to plan and oversee the next one, too.\"\n\nJohn faked a groan, and exclaimed, \"We've only just put my ship back together again! I'm not having you girls chopping it to bits, again!\"\n\nDana grinned at him, and her eyes sparkled, as she said, \"With the right tech, you'd change your tune!\"\n\n\"Yeah, that's true enough,\" he conceded, sharing her grin.\n\n\"Shall we take a tour?\" Calara asked everyone, impatient to have a good look around.\n\nJohn nodded, and said, \"Not much has changed in the rear of the ship, if I remember right? Pretty much everything new, is built into the middle section?\"\n\nDana nodded, and said, \"Yeah, most of the new stuff, we can access from the front-tube.\"\n\n\"'Front Tube'?\" Calara asked with a frown. \"Maybe we should start calling them the 'fore grav-tube', and 'aft grav-tube', to be more accurate?\"\n\n\"Nah, that's too much of a mouthful. We refer to those fuckers dozens of times a day,\" Dana said, as they followed her down the steps from the maintenance gantry, to the drydock deck. She waved a hand dismissively, and continued, \"Front-tube, and rear-tube will do.\"\n\n\"Which do you prefer taking, John?\" Alyssa asked airily. \"Are you a front-tube, or a rear-tube man?\"\n\n\"I like to use both, as frequently as possible,\" he replied, suppressing a grin with some difficulty.\n\nDana groaned, and said, \"Yeah, you lot won't let that go, will you? Fine, we'll use whatever Calara said.\"\n\n\"How about we compromise with 'fore-tube' and 'aft-tube'?\" the Latina suggested with a smile, as they approached the secondary airlock on the starboard side of the hull.\n\n\"Sounds good to me,\" John agreed, and the nodding heads all-round clinched it.\n\nStopping by the forward airlock, Dana said, \"Alright, let's start right here. I decided to install two new airlocks, on the port and starboard side, mainly for ease of access. They operate in the same way as the old one, with DNA scanners built into panels beside the outer and inner airlock doors.\"\n\nSakura stepped forward, and turned to look at her audience, as she said, \"I wasn't sure it was wise to triple the number of possible entry points for hostile boarders, but Dana made some compelling arguments.\"\n\nThe redhead smiled at her, and said, \"Firstly, we've beefed up internal security. Secondly, I'd prefer badguys come in through the doors where we're prepared for them, rather than burn their way through my hull, and thirdly...\" She grinned at her audience, and added, \"Anyone boarding us would have to be fucking crazy. If they're badass enough to survive for more than a few seconds... Well, it probably wouldn't make a difference if we just had one or three airlocks, at that point.\"\n\nSakura pressed her hand on the DNA scanner, and it flashed green, when it identified her. The airlock door spiralled open, and she gestured inside, and said, \"Shall we?\"\n\nThe tour group proceeded inside, where they were met by Faye, who greeted them all with a beaming grin. \"Welcome to your new home!\" she announced, cheerfully.\n\n\"Thanks, Faye,\" John said with a smile. He raised an eyebrow, and asked, \"Have you got free-run over all the new rooms?\"\n\n\"I certainly do! There's holo-projectors mounted everywhere!\" she replied, bouncing with excitement. Turning to Dana, she gave her a guilty smile, and added, \"Sorry to interrupt your tour!\"\n\n\"No problem, Faye,\" the redhead replied, grinning at her affectionately. Turning to look at her audience, she added, \"Alright, the first new internal room, is this security corridor.\"\n\nLooking past her, the long corridor stretched back for just under half the width of the Invictus, before turning a sharp corner.\n\n\"I've been wondering about this,\" Jade mused. \"Why is there a bend in the corridor? Wouldn't it have been easier to just build it in a straight line, connecting the two airlocks?\"\n\nRachel nudged her lover, and asked playfully, \"Did you lose your ruler when you made the plans?\"\n\nDana rolled her eyes, and pointing at Sakura, she said, \"Hey, it was her idea!\"\n\n\"Very nice,\" John said, nodding his approval as he took a few steps along the corridor, moving to one side, to try and see around the corner.\n\n\"What is?\" Rachel asked, in confusion.\n\nSakura smiled at the brunette, and replied, \"With the modified design, if we're boarded from both sides simultaneously, defenders in the reinforced sentry station in the middle can't be caught in a crossfire.\"\n\nDana nodded, and said, \"We've built pop-out turrets in the walls, and pop-up barricades for cover in the floors. There's also a small secured armoury at the bend in the corridor, to make sure defenders are stocked-up on gear.\"\n\nSakura pointed to the floor, and said, \"The decking can be electrified to stun intruders, and when the blast doors have been lowered, we've got knock-out gas we can use to incapacitate people caught between them. We added the same security measures to the corridor inside the original airlock.\"\n\n\"Very sensible precautions,\" Irillith replied, looking suitably impressed. She raised an eyebrow as she turned to look at Sakura, and asked, \"Would they have stopped you?\"\n\nThe Asian girl thought about it for a moment, then shook her head, and replied, \"Not on their own, no. However, we've repositioned the airlock's sensors to a non-standard location, to make them much harder to find and block. They're also shielded, so simple scanning devices won't pick them up, either.\"\n\nDana shared a look with Sakura, then explained, \"I also modded the cameras to add thermal and mag-vision, and motion scanners have been built into the walls that are designed to detect disruptions in airflow. Infiltrators using similar stealth technology to that light-bending weave Sakura had, would be immune to most forms of detection, but the motion scanners would have allowed us to track her, when she snuck aboard.\"\n\nSakura nodded, and continued, \"The motion scanners are tiny and shielded, making them very hard to locate. I wouldn't have been able to block or hide from them, and Faye would have been alerted.\"\n\n\"Unfortunately, we've still only got Gatling Lasers in the turrets at the moment,\" Faye said, with a cute frown. \n\nGiving her a sympathetic smile, Sakura said, \"The upgrade had to be abandoned on the tighter timeframe, but we'll work on them soon.\"\n\n\"What are you going to replace them with?\" John asked, as it hadn't come up in earlier briefings.\n\nDana winked at him, and replied, \"Remember that weird-looking sonic rifle I swiped from Underworld? I've been redesigning and improving that in my spare time, and I'll fit Sonic Cannons to replace the Gatling Lasers. They can be used on lethal or non-lethal modes, and although they have a hard time with very thick armour, they'll be ideal to combat most invaders, without fucking up the hull with missed shots.\"\n\n\"They'll be devastating against stealth-based infiltrators who favour light armour,\" Sakura agreed. She gave them a rueful smile, and added, \"I think we're all agreed we don't want any shady characters like that sneaking aboard.\"\n\nJohn put his arm around her, and said, \"If they all turn out like you did, that wouldn't be so bad.\"\n\nShe gave him a playful peck on the cheek, then pointed at the nearest door leading to the bow of the ship. \"Do you want to show them that, next?\" she asked Dana.\n\n\"Nah, that's not finished,\" she replied, pouting in annoyance.\n\nRachel rolled her eyes, and said, \"Yeah, you did say you wouldn't get a chance to work on it. I suppose I'll be putting my delicate surgeon's hands to work on your grubby electronics again, right?\"\n\n\"Oh, a girl after my own heart!\" Dana swooned, holding a theatrical hand on her chest, before grinning at the brunette.\n\n\"Yeah, yeah, on with the tour,\" Rachel replied, smiling at her lover.\n\nTurning to the double-doors on the aft side of the corridor, Dana hit the button, and the reinforced doors slid wide open, revealing the cavernous room beyond. \"Here, we have the Primary Hangar,\" she said, walking inside the two-hundred-metre long hangar bay, and turning with her arms wide apart. \"What the fuck we're actually going to do with all this space, I've got no idea!\"\n\n\"You could fit a destroyer in here!\" Calara marvelled, slowly walking out into the cavernous room. \"I hadn't realised how big this was actually going to be!\"\n\nDana nodded, and pointing upwards to the ceiling that soared high overhead, she said, \"It's double the height of the old hangar, just in case.\" She stood with her hands on her hips as she turned around to survey the enormous room, and added, \"We don't necessarily have to use it for one big ship, we've got tons of options. We could convert it into automated-combat-drone bays, or maybe Maliri-crewed fighter bays. Hell, we don't even have to keep it as a hangar! You could convert this whole area into one vast missile battery.\"\n\nAlyssa appeared to be mulling the options over, until she said, \"I vote for the Maliri fighter bays.\" She raised an eyebrow as she glanced at John, and added disingenuously, \"How many gorgeous Maliri pilots and groundcrew do you reckon we'd need for that? Fifty? One hundred? More?\"\n\nHe laughed, and grinned at her, as he said, \"I'm not sure that's such a great idea. Next, you'll be wanting to know if they can fly fighters while pregnant.\"\n\n\"Accidents do happen,\" she said archly. \"Who knows how reliable Maliri birth-control is, or if they even bother with no men around!\"\n\nRachel suddenly looked stunned, and she murmured, \"How on Terra did I miss that?!\"\n\n\"What's the matter?\" John asked her, startled to see her looking so taken aback. The incredibly intelligent doctor rarely seemed to be surprised by much these days.\n\nShaking her head, the brunette replied, \"Let me look into it, and I'll get back to you, okay?\"\n\n\"Sure,\" John agreed amiably, seeing the bemused looks on all the girls' faces, except for Alyssa, who appeared flushed with arousal. Realising he wasn't going to get any answers for the moment, he glanced at Dana, and continued, \"Let's leave the decision on the Primary Hangar for the moment, there's no rush. I'm guessing the Secondary Hangar is basically the old one, with the Raptor in it?\"\n\n\"Yeah, that's right,\" she confirmed for him. Smiling then, she added, \"I did think of something new to add there, that wasn't on my original plans. I'll show you that in a minute.\"\n\nThey filed back into the corridor, and followed her along to the bend, where they found the entrance to the fore-tube. The design was identical to the previous grav-tube, with red and blue anti-gravity fields in a large cylindrical shaft, that rose up through the decks. There were only two exits from this tube though, one at Deck Five, and the other was right at the top of the tube, on Deck Three.\n\nStepping into the blue field, Dana said, \"There's no point showing you Deck Three yet. We had to postpone everything there, to finish all the combat-orientated facilities in time.\"\n\n\"No problem, let's just take a stroll along Deck Five,\" John agreed, shrugging his shoulders amiably. He knew what had been constructed on that level, having armoured most of it, but this was still new for most of the others in their group.\n\nStepping out into another long corridor, there were closed bulkheads every fifty metres or so, which were designed to limit the damage from internal explosions. This level contained the two new Power Core Chambers, along with the magazines for all the new ordnance-based guns. They stopped at the first pair of those magazines, with Dana strolling inside the one on the right, as soon as they'd all caught up with her.\n\nPointing to an enormous reinforced caisson that dominated the room, Dana said, \"The ammo for the front pair of cannons goes in there, and there's six rooms like this, one for each set of Heavy Cannons. We used Maliri crystal-tipped rounds so we didn't waste any priceless elements like Onyxium, but they're harder and denser than standard Terran titanium rounds, so I was able to reduce the calibre, and pack in a lot more.\" Nodding towards tubes that rose up through the ceiling, she continued, \"Rounds are fed by gravity fields up to the chambers above, then auto-loaded into the cannon.\"\n\nCalara nodded her approval, and said, \"Looks like an elegant, sturdy, and reliable design, and a huge improvement over the original.\" She smiled at the others, and explained for their benefit, \"Terran Heavy Cannon magazines have been notorious for conveyor-belt jams.\"\n\nDana chuckled, and said, \"Yeah, I didn't fancy running all the way out here mid-combat, and getting stuck in with my wrench. We'll leave that shit to Terran Federation crews! They've usually got more engineers aboard than they know what to do with!\"\n\nWith that, she led them outside, and jerked a thumb at the next room, as she said, \"Same idea here, but it's smaller calibre, for the cannons on the underbelly.\" \n\nThere were two identical rooms opposite each other, one for the port weapons, the other for the starboard batteries. John glanced through the clear-crystal window in the sealed door, and spotted tubes leading down into the floor this time. He jogged to catch up with the rest of the group, who were walking through the first bulkhead.\n\n\"So, there's three pairs of each magazine type, along this deck?\" Calara was asking, when he fell into step beside Dana.\n\nThe redhead nodded, and replied, \"There's no point showing you the others, they all look the same. I figured it was sensible to split the magazines though, what with John reinforcing them all. Even if one is penetrated, the resulting explosion would just vent out through the point of impact. A detonation wouldn't be powerful enough to rupture the quad-shaped Crystal Alyssium shell. The main benefit, is that the rest of the guns can keep on firing, even if we lose a magazine.\"\n\n\"That's a very sensible damage-mitigation policy,\" Calara said, thoroughly approving of the redhead's modifications to her original plans.\n\n\"I thought you'd like it,\" Dana said, nudging the Latina with an elbow.\n\nThey walked along the length of the corridor until they reached the aft-tube, and the newly-cut hole in its Crystal Alyssium shell. \n\nBefore Dana could step out into the grav-tube, Alyssa said, \"When you asked me to shape new doorways in this grav-tube, I was too busy to bother asking questions at the time, but won't punching holes in it fuck up the Inertia Negation device?\"\n\nThe Chief Engineer shook her mane of dark auburn hair, and replied, \"Nope! The tube is incredibly strong, with the built-in crystalline lattice. Knocking a few holes in it won't make a difference, and besides, we've got the 'fore-tube' to share the load now. If anything, the stress on the frame has been lessened since the refit.\"\n\nAlyssa patted her on the shoulder, and smiled, as she said, \"I knew you'd have thought it through, Sparks, I was just curious.\"\n\n\"Anyone else want to second-guess my designs?\" Dana asked, airily. When everyone shook their heads, she smiled at them, and continued, \"Alright, let's move on to the really good shit!\"\n\nThey stepped into the grav-tube, and rose up in the blue field, passing level after level, until they reached Deck Two. Dana jumped out with a spring in her step, and bounced there impatiently, while she waited for the others to join her.\n\n\"Aren't you going to show us the new Tachyon Drive?\" John asked, glancing back down the tube.\n\n\"It's a big, round, shiny sphere, on Deck Five,\" she replied with a shrug. \"Progenitors have developed some incredible technology, but it's not particularly exciting to look at.\"\n\n\"Alright, we'll skip that then,\" John said, with a chuckle. The rest of the group had arrived, so he bowed to Dana, and gestured down the familiar corridor with his hand, as he said, \"You may continue with the tour, Grand Engineering Overlord.\"\n\nShe giggled with excitement, then skipped down the corridor ahead of them, turning around every ten metres to urge them to hurry. The girls had been sleeping in their own rooms for the last couple of days, just while the Captain's Bedroom went through a refurbishment, and Dana had forbidden anyone from entering until the work was complete. John had been involved with her plans, as he'd been the one reinforcing the walls with Crystal Alyssium, to keep them safe while they slept.\n\nThey passed all the Officer's Rooms, and strolled into the Captain's Bedroom, to find it had dramatically changed. The room was now double the length, with the vast bed still dominating the back wall.\n\n\"Isn't the corridor a bit longer now?\" Jade asked, looking back through the door, to get her bearings.\n\nDana nodded, and said, \"Well spotted!\"\n\nJohn saw Alyssa dart off to the left, a worried look on her beautiful face, as she disappeared through the new door in the wall.\n\n\"Are you alright? Where are you going?\" Calara called after her.\n\n\"Checking my clothes!\" the blonde replied, her voice muffled from inside the new room.\n\nAlyssa reappeared a few moments later, and sounding deeply relieved, she said, \"I'll have to thank whoever you got to move everything. It all looks pristine!\"\n\n\"I'll tell my boys you said thanks!\" Faye replied, grinning at her. She frowned for a moment, then added, \"Enhancing their programming for that level of fine-motor-control was tricky, but they were due an upgrade, anyway. I knew you'd be upset if anything got wrinkled.\"\n\nJohn walked over to the door and peered inside, finding everything looking much the same as before, but with twice as much space in the wardrobe. At the far end was the weapon rack, and two armour-equipping frames, complete with armour. His and Alyssa's clothing were hung up in a breathtaking display of neatness and orderly perfection, with long empty rails beyond the ones occupied by their clothes. \n\n\"It looks so sad, half-empty like this,\" Alyssa said, a forlorn expression on her beautiful face. She glanced at him with puppy-dog eyes, and continued, \"It's just begging to be filled up with loads of sexy new outfits...\"\n\nHe laughed, and rolled his eyes, as he replied, \"Alright, we'll go on a shopping trip sometime.\" He smiled at Sakura and Irillith, and added, \"You two haven't experienced the joys of one of Alyssa's shopping bonanzas yet. I wouldn't want you to feel left out.\""
    ],
    "authorname": "Tefler",
    "tags": [
        "swallow",
        "cum inflation",
        "blowjob",
        "psychic",
        "domination",
        "submission",
        "maliri"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-75"
}