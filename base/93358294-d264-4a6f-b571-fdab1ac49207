{
    "title": "Unbreakable Bond Ch. 08",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nChris Donovan vs. Shane Lewis \n\nDedicated to Honey24\n\nCock-blocking! \n\n***\n\nChris stood in the doorway and watched Shane sleeping peacefully on the bed. He couldn't suppress his sigh of relief. It was the best sight ever. Chris said a quick thanks to all the angels as he toed off his loafers. After getting rid of an upset Tracy and firing his silly housekeeper, he'd almost gone insane with worry when he couldn't find Shane. Chris' only consolation was that he knew for a fact that Shane hadn't left the house. After moving from room to room, he finally found Shane in one of the rooms...fast asleep.\n\nChris climbed into the bed and spooned behind Shane, wrapping an arm around Shane's waist. His intention wasn't to wake Shane up. He only wanted to feel Shane's body close to his. Fuck, Shane smelled divine, Chris moaned. He almost groaned when there was a hitch in Shane's even breathing, indicating that he'd probably woken up. His fears were confirmed when Shane began to turn around in his arms. Chris really wasn't looking forward to the anger he knew Shane would have towards him. Who wouldn't be angry after witnessing what Shane had? With a sigh, he got ready for whatever Shane had to say.\n\nShane wriggled till he was on his side, facing Chris. \"Hey.\" Came his sleepy voice.\n\n\"Hey.\" Chris responded softly as his hand moved up to caress Shane's cheek. \"You okay?\"\n\n\"Uh-huh. Your visitor gone?\" Shane mumbled, watching the wariness in Chris' eyes.\n\n\"Yes.\" Chris sighed. \"I'm sorry about that. I didn't know...\"\n\n\"That's alright.\" Shane murmured. \"Just tell me one thing.\"\n\n\"Shoot.\" \n\n\"If I hadn't been here, would you have...\"\n\n\"Hell no.\" Chris growled. \"How can you even ask that?\"\n\n\"I just wanted to know that's all. Chill.\"\n\n\"Well before...us, I would have done it without a thought. But not now.\" Chris said quietly\n\n\"Okay.\" Shane yawned.\n\n\"You've been sleeping for about...\"Chris looked at his wrist watch, \"forty-five minutes. What makes you think I didn't fuck her?\" Chris asked with a smile in his voice.\n\n\"You wouldn't dare.\" Shane growled, drawing laughter from Chris. \"I trust you.\" He added quietly.\n\n\"Well, you should. Because the mere thought of having sex with anyone else besides you, turns my stomach. Trust me...I've tried.\" Chris muttered.\n\nShane went quiet for a moment and then shocked Chris with his next question. \"Do you like dirty talk during sex?\"\n\n\"Whoa... I don't know. I've never thought about it. Why do you ask?\" Chris sounded curious.\n\n\"Your visitor...she was talking dirty. Don't worry, she didn't know it wasn't you. She had a blindfold on.\" Shane explained.\n\nChris chuckled. \"Listen, I think I need to explain...\"\n\n\"You don't have to explain yourse...\" \n\n\"Shut up, Shane.\" Chris breathed as he pulled Shane closer to him. \"I need you to listen. I can count the number of real relationships I've been in, on one hand. I don't have time for the stress that comes with relationships so I hardly do relationships. Most of my encounters have been mere hook-ups.\"\n\n\"You mean fuck-buddies.\" Shane said dryly.\n\nChris shrugged. \"I don't mean to disappoint you but that has been my life. The kind of women who would settle for mere hook-ups or as fuck-buddies as you so crassly put it, are just crazy fun loving girls who can say or do anything crazy during sex and get away with it. I don't usually pay attention to what they say 'cause I usually just wanna fuck and move on. So I really can't tell whether I like dirty talk during sex. Tell you what... Why don't you try it one day? Talk dirty to me during sex. Then we'll both know whether it rocks my boat. How about that?\"\n\n\"Okay.\" Shane chuckled. \"Chris?\"\n\n\"Yes baby?\"\n\n\"I promise not to stress you out in this relationship.\" Shane said softly.\n\n\"Oh baby, you can stress me all you want. I ain't going nowhere.\" Chris drawled, making Shane laugh softly.\n\n\"That was one hot chic, by the way.\" Shane murmured.\n\n\"Don't tell me she turned you on.\" Chris growled. \"'Cause she sure as hell didn't turn me on. I was pissed as fuck.\"\n\n\"Of course you would be pissed. After all, you didn't know how your boyfriend was going to react to that.\" Shane chuckled.\n\n\"God, I almost died when I heard her voice. I'm so sorry I put you through that. I've fired the housekeeper.\"\n\n\"Why?\"\n\n\"I've warned her not to allow anyone who doesn't have a key to the house, into the house when I'm not around. Apparently Tracy has been bribing her with money to allow her to come in. Can't trust her now, can I?\"\n\n\"People have keys to the house?\"\n\n\"Kyle, Dean, Matt and Mary, Michael's wife.\" Chris muttered.\n\n\"Your cousin. Why not the others?\"\n\n\"I had only four spares. Had another set made two weeks ago. For you.\" Chris said.\n\n\"Thanks.\" Shane said quietly. \"I don't think I can ever enter your bedroom and not picture your visitor in my mind though.\"\n\n\"Well, that problem can be rectified. You see, if we had gone round, you would have seen the real master bedroom. That's not the room I'm using now. I only opted to use that room because I could see the...ladies who came to visit, actually catwalk to the house.\"\n\nShane burst into laughter. \"Oh my God, you're an idiot.\"\n\n\"You should see them walk. One lady wore heels so high, she fell flat on her face before she actually got to the door.\" The two men roared with laughter. \"I ended up cleaning her cuts and soothing her bruised ego. Didn't get any that day but was not even disappointed. I laughed my head off when she left.\"\n\n\"That's rather unfortunate but still hilarious.\" Shane laughed. \"Why do they bother?\"\n\n\"Do I even know?\" Chris wiped the tears of mirth from his eyes. \"So as I was saying, now that I don't have to look at girls, cat-walking to my house to fuck me on that bed, I don't see why I can't use the real master bedroom. Will you tell your designer to come see me tomorrow?\"\n\n\"Sure.\" Shane chuckled.\n\n\"She can work her magic in there. And whilst she's at it, throw in a Tantra chair.\" Chris murmured, moving down to nuzzle the sensitive spot between Shane's neck and shoulder.\n\n\"I knew it.\" Shane moaned. \"You have such a dirty mind.\"\n\n\"But you love me anyway.\" Chris kissed Shane on the nose.\n\n\"With all my heart.\" Shane whispered.\n\n\"You know, you're taking this really well. Too well actually.\" Chris murmured with a slight frown. \"Should I be worried?\"\n\nShane looked surprised for a moment and then laughed quietly. \"What can I do, Chris? I know you had a life before all this. I can't expect everything to go away overnight can I?\"\n\n\"You're angry.\" Chris stated quietly.\n\n\"No I'm not. If I were angry, you wouldn't be seeing me like this. Trust me on that.\" Shane said dryly. \"I'm fine. Really. You didn't ask her to come and wait for you did you?\"\n\n\"No, I didn't.\" Chris gave a deep sigh.\n\n\"There you go. If you were expecting me to whine like some bitch, I'm sorry but...\" Shane shook his head slowly. \"Not gonna happen.\"\n\n\"I should have stopped her the last time she pulled that stunt.\" Chris groaned. \"I didn't bother because you and I were not...\" Chris trailed off.\n\n\"Hey, I understand.\" Shane pressed a soft kiss to Chris' forehead. \"Don't worry about it.\"\n\nChris still looked unhappy. \"What do you say we finish the tour and get out of here?\" \n\n\"Thought you'd never ask.\" Shane rasped. \"Hey, cheer up.\" He husked, leaning forward to draw Chris' lower lip into his mouth to suck sensuously on it. \"It's not every day you get to see a sexy woman, naked and hot for your cock.\" He murmured when he released Chris' lip, ignoring Chris' sharp intake of breath at his words. \"Did you see how wet she was for you?\" Shane went on in a low voice, licking at the corner of Chris' mouth. \"I bet you would have loved plunging into her wet pussy...\"\n\n\"Okay, that's it...\" Chris exploded, shooting off the bed. \"I don't...\"\n\n\"Just kidding.\" Shane laughed, pulling Chris down into his arms. \"I just had to do it.\" Shane gave Chris a fierce kiss which he didn't return. \"Hey, loosen up. I was just pulling your legs.\"\n\n\"That wasn't funny.\" Chris growled. \"I didn't like it.\"\n\n\"I'm sorry.\" Shane's chest rumbled with laughter. \"Damn, you're easy.\" Shane husked, capturing Chris' mouth in a kiss so sensual he didn't have any choice but to kiss Shane back. The kiss was wild, hot, wet, passionate and dick-hardeningly good. \n\n\"Hmm... Maybe we should...\" Coherent thought fell out of Chris' reach when Shane's hand slipped under his shirt to pinch his nipple lightly. \"Shane...\" With a lustful moan, Chris slanted his lips over Shane's, his tongue fucking deep and fast till Shane had to tear his mouth away to draw in breath.\n\n\"Check my back pocket.\" Shane panted. \"There's lube.\"\n\n\"And he says I've got a dirty mind.\" Chris laughed breathlessly. \"You're such a slut.\"\n\n\"Do you blame me?\" Shane murmured, still trying to catch his breath. \"I'm in a constant state of arousal whenever I'm around you. What was that you said about unleashing...\"\n\n\"Shut up and kiss me, Shane Lewis.\" Chris husked, rolling onto Shane and rubbing his covered erection against Shane's. And even as their lips locked together in a toe-curling kiss, the two men couldn't help but hump the fuck out of each other.\n\n\"Oh fuck, Chris.\" Shane gasped against Chris' wet lips when they came up for air. \"I need...need the pants out of the way...\" He whimpered and promptly sighed his approval when Chris moved down and reached out to unbuckle his belt. By the time Chris finished unbuttoning Shane's cargo pants, Shane was trembling in anticipation. Chris reached in and pulled out Shane's hard throbbing cock and gave the flared head a light squeeze. Smiling at Shane's lustful moan, Chris watched the drop of precum that grew at the tip of Shane's cock. As it started to slide from the opening, he caught it on his tongue and licked at the leaking slit with the tip of his tongue. \"Chris...\" Shane gasped with pleasure, thrusting up against Chris' mouth. Chris drew his head back and both men watched, entranced, the thin string of clear liquid that seemed to link Chris' lips with the tip of Shane's full and heavy erection. \"Oh God.\" Shane's eyes glazed over as he stared, riveted. \"I need you now, Chris...\" \n\nIn a fluid movement that was so smooth it deserved applauds, Chris pulled off Shane's pants together with his boxers, rescuing that tube of lube from Shane's pocket before the pants actually landed on the floor. When Shane felt Chris' slick fingers enter him, he almost drooled from pleasure. It felt amazingly good.\n\n\"Get out of those pants, Chris.\" Shane growled as he fucked himself on those wicked thick fingers. \"I need to feel that co...\" Shane trailed off when his phone started ringing. \"Oh shit!\" He groaned, almost as if he was in pain.\n\n\"Ignore it.\" Chris growled.\n\n\"Fuck, I can't.\" Shane moaned. \"It's Lizzie and from that ringing tone, she's using the emergency line. Fuck, where's my phone?\" Shane looked disoriented. \n\nChris pulled out his fingers as he reached for Shane's phone with his other hand. \"Here.\" Chris handed the phone to Shane and got off the bed.\n\n\"Thanks.\" Shane muttered as he sat up. \"Talk to me, Lizzie.\" He demanded immediately he clicked on the answer button, watching Chris disappear into the en suite bathroom.\n\n\"Shane. It's Adele.\" Came Lizzie's frantic voice.\n\nShane was already on his feet, reaching for his boxers. \"What's wrong?\" He had his phone tucked between his ear and shoulder as he pulled on his boxer briefs. \n\n\"She fell. I think her arm is broken because it's started swelling at the elbow.\"\n\n\"Shit! Where are you now?\" Shane pulled up his pants as Chris emerged from the bathroom. He was so disconcerted he couldn't even button up his pants. Chris slapped Shane's hands away from his fly and carefully adjusted his semi-hard cock before buttoning him up and buckling his belt. \n\n\"We just left home. We're going to M&M. It's closer.\" Lizzie responded.\n\n\"Thanks.\" Shane mouthed at Chris and quickly slipped his feet into his boots. \"I'm on my way.\" Shane said and cut the call. \"They're going to M&M. Adele broke her arm.\"\n\n\"Shit.\" Chris swore and started dialing a number on his phone as he followed Shane down the stairs. \"Michael?\"\n\n\"Sup, Lover-boy?\" Michael's teasing voice came on the line.\n\n\"Shut up and listen to me, fool.\" Chris growled as he signaled the security guard to lock up. \"Shane's daughter is hurt. She broke her arm. They're on their way to the hospital. Are you there?\"\n\n\"Yes I'm here.\" Michael answered. \"What's her name?\"\n\n\"She's Adele and she's four...well, almost five.\" Chris said as he switched to the speaker phone so that he could drive without the stress of having a phone to his ear. \n\n\"One moment, Chris.\" Michael said. \"Hey Alex, get ready for a little girl who's hurt. They'll be here soon so go wait at the entrance. Who's she coming with, Chris?\"\n\n\"Her mum. She's Lizzie. You can't miss her. She's pregnant.\" Chris said, tearing out of his gate.\n\n\"You mean a pregnant chic almost broke your nose?\" Michael asked in such a funny tone that Shane couldn't help but laugh despite his worry over his daughter. \"Shane?\"\n\n\"Hello Michael. Thanks for your help.\" Shane responded.\n\n\"You're an asshole, Michael.\" Chris said.\n\n\"They're here. That was fast. Talk to you guys later.\" Michael hung up.\n\n\"She's in good hands.\" Chris said, reaching for Shane's hand. Shane looked so tense. Chris brought their entwined hands to his lips and kissed Shane's knuckles. He wished he could do something to lighten the mood. \"Hang in there.\"\n\n\"Thanks.\" Shane muttered looking pensive. Chris thought fast.\n\n\"Michael is an asshole. How could the idiot tease me at such a time?\" Chris managed to sound angry.\n\n\"Well, you decided to tell him about getting punched.\" Shane shrugged.\n\n\"Hmm...silly me.\" Chris muttered. \"I told all of them. Now he's going to inform the fools that the lady who almost broke my nose was actually pregnant. I'll never live this down.\" Chris groaned, making Shane laugh softly despite himself.\n\n\"So you guys discuss everything huh?\" Shane asked, turning to look at Chris.\n\n\"Yep.\" Chris responded as he sped towards Michael's hospital and Adele. \"Well, it depends on how sensitive the issue is.\" Chris answered carefully, remembering how he still hadn't told the squad about Aaron raping Kyle. He didn't have any intention of ever doing that too. Those guys would have really dealt with Aaron if they'd heard about that unfortunate incident. \"But even you must admit a man like myself taking such a blow from a lady is rather funny.\" Chris chuckled.\n\n\"Well, I didn't find it funny at the time.\" Shane said with a frown.\n\n\"Neither did I, trust me.\" Chris chuckled, jumping a red light. He was happy that Shane was at least talking and didn't look as pensive as he did before. \"But it was funny so I couldn't help myself. I told them.\" Then Chris decided to bring out the big guns. \"There was a day I overheard Damon and Tristan making love. Well, it was just a blowjob actually. I was in a conference call with Damon and some business partners. During the call, Tristan decided to blow Damon. They were actually on a plane, going to Germany or France. I can't remember exactly where they...anyway that's not important. The idiots completely forgot there was a conference call going on and they could be heard by everyone on the link.\"\n\n\"Oh fuck.\" Shane muttered, giving Chris his undivided attention.\n\n\"That's what I said.\" Chris chuckled. \"Knowing \n\nhow horny my friend always is whenever he's around Tristan, I acted immediately I heard the first moan. Thankfully the others didn't hear and fortunately, I was the one who linked the calls so I quickly disconnected everyone.\"\n\n\"Oh my God.\" Shane breathed, looking relieved.\n\n\"But I stayed on the line.\" Chris gave a naughty grin as he turned onto the hospital's street. \n\n\"You pervert.\" Shane laughed. \"You are so fucked up.\"\n\n\"Let's just say immediately I finished congratulating the idiots on their unplanned voyeuristic adventure, I was on another conference call with the squad, giving them a word for word account.\" \n\nThe two men roared with laughter as Chris entered the gates of the hospital and headed directly to the executive section, where he knew Michael would take Adele. Chris listened to Shane laugh and breathed a sigh of relief. He'd achieved his goal. And it was a very calm Shane who walked into the hospital to see his daughter.\n\n***\n\nWhen Shane and Chris got to the private waiting room, they found Lizzie and her husband, Sam, who was pacing with worry written all over his face.\n\n\"Shane.\" Lizzie said as she got up and walked into Shane's arms.\n\n\"Where's she?\" Shane asked as he hugged her.\n\n\"They're taking some scans.\" Lizzie said as she went to hug Chris.\n\n\"How did it happen?\" Shane asked as he gave Sam a one-armed hug.\n\n\"I was in the shower when I heard her scream.\" Sam answered, hugging Chris too. \"I think she stood on that tiny doll chair in her room and tried reaching for something and fell. She was in too much pain I didn't want to ask her anything.\"\n\n\"She said she was going to get something but I was too engrossed in my books I didn't listen.\" Lizzie whimpered. \n\n\"Hey, don't worry she'll be fine.\" Shane soothed her. He knew Lizzie was busy studying for her exams, which was to start from the very next day. And taking into consideration the fact that those military exams were important for promotion, Lizzie needed maximum concentration in order to pass. \"Let's hope this is...\" Shane trailed off when Michael entered the room.\n\n\"Good news.\" He said immediately he saw Chris' face. Michael knew if he wasted time beating about the bush like his colleagues were known to do when they were talking to relations of patients, Chris would kill him. \"It didn't break.\" \n\n\"Thank God.\" Lizzie gasped as the others breathed sighs of relief. \n\n\"It's a Strain. She landed on her elbow so some tendons stretched. She's been given something for the pain and the elbow has been bandaged. She's sleeping now. Want to come see her?\"\n\nAll four anxious but relieved grown-ups followed Michael to a really lovely room with some really cool pictures of Disney characters on the wall. Adele was fast asleep on the bed. Lizzie went to touch her daughter lightly on the head. \n\n\"As you can see, she's fine.\" Michael said. \"She can go home when she wakes up. That's not going to be any time soon though so...\" Michael looked at the grownups with raised brows.\n\n\"I'll wait.\" Lizzie said immediately. \n\n\"No you won't.\" Shane countered, ushering everyone out so that Adele wouldn't be disturbed. \"Listen, I'll wait till she wakes up, and then take her home. Just go home and study okay?\" \n\n\"But...\"\n\n\"No buts, Liz. At least you know she's fine. Let her spend the week with me. I promise to take good care of her. Just go break a leg, soldier woman.\" Shane insisted. \"Sam, a little help here...\"\n\n\"Honey I think Shane is right.\" Sam said. \"You can check up on her anytime you want.\"\n\nLizzie didn't look convinced. \"She has to go to school.\"\n\n\"No school till she's okay.\" Shane said. \"She needs to rest. Wouldn't want her still in pain by Friday will you?\" Shane asked with a grin on his face.\n\n\"What's happening on Friday?\" Michael asked.\n\n\"Her birthday party. She's turning five.\" Chris said.\n\n\"Friday is a holiday.\" Michael said unnecessarily. \"A party. Cool.\" He grinned. \n\n\"It's a kids' party, moron.\" Chris growled.\n\n\"A party is a party.\" Michael said making Shane and Sam laugh. \"She'll be fine by then.\"\n\n\"Sam, I'll miss her.\" Lizzie said pitifully. \"I won't be able to concentrate...\"\n\n\"Lizzie?\" Chris finally decided to step in. He threw an arm around Lizzie's shoulder and murmured, \"I think this is the best time for me to watch and get used to all the cartoons and Disney stuff, don't you think?\" ",
        "\"Huh?\" Lizzie looked up at Chris. \"You'll be going to work, Chris.\"\n\n\"Full day tomorrow 'cause I have lots of meetings that can't be cancelled. But from Tuesday till Thursday, I can do half days. I should be a pro on how to handle kids after this week. Come on, help me out. Tell you what,\" Chris spoke conspiratorially to Lizzie, \"I'll even take my whiskey in one of those princess cups Shane keeps in the kitchen.\"\n\nLizzie stared at Chris as though his nose had suddenly elongated, and then erupted into laughter. \"You're nuts, Chris.\"\n\n\"Please say yes. Please Lizzie.\" Chris looked at Lizzie with the most ridiculous puppy eyes ever.\n\n\"Will you stop making that face?\" Lizzie laughed. \"Okay, you can take her. But God help you two if you do anything x-rated in front of my bab...\"\n\n\"Liz...\" Shane groaned. \n\n\"Care to define what you mean by x-rated?\" Chris murmured with a naughty glint in his eyes, drawing a curse from Shane and laughter from Lizzie and Sam.\n\n\"You're such a perv.\" Michael said looking at Chris with amusement. \"Listen Shane, how about turning this party into a full blown...\"\n\n\"Fuck off, Michael.\" Chris said quickly. \"It's a kids' party and that's how it's going to remain.\"\n\n\"Err...actually, all my friends are coming.\" Lizzie laughed. \"Olivia is turning it into a reunion. It's a holiday, Shane. What did you expect?\" She turned to give Shane a pleading look. She knew how her friend disliked being amongst lots of people.\n\n\"It's definitely not going to be an all-kids' party, Chris.\" Sam added with a chuckle. \n\nShane laughed softly. \"Michael? Dare I say it? Let's do this.\"\n\n\"Yes!\" Michael fist-pumped the air, making Chris groan. \"I'll inform the guys.\"\n\n\"Idiot.\" Chris murmured. \"One would think the first person he would tell would be the wife since it's a kids' party and all.\" Chris' arm remained around Lizzie as they headed for the wide sliding doors.\n\n\"It was nice meeting you, Lizzie.\" Michael called out after them. \"Anyone who's able to make this idiot bleed, earns my respect.\" He added with an evil grin. \n\n\"Fuck you, Michael.\" Chris retorted, flipping Michael off as the others laughed. \"Adele will be okay, Lizzie.\" Chris assured Lizzie as he opened the front passenger door of Sam's Lexus for her.\n\n\"I know.\" Lizzie said, getting into the car. \n\n\"Talk to you soon guys.\" Shane said as they waved at Sam and Lizzie. \n\n\"Whew! She can be a handful.\" Shane groaned as they headed back to Adele's room.\n\n\"She's a mother.\" Chris chuckled. \"It's only to be expected.\"\n\nWhen they got back to Adele's room, Michael was writing on her chart. \"How long do you think she'll be out, Michael?\" Shane asked, tenderly touching Adele on the cheek.\n\n\"At least three hours.\" He informed them. \"Better make yourselves comfortable. \"He gestured towards the couch in the room. \"I'll be back.\" With that, Michael left Chris and Shane with a sleeping Adele.\n\n\"I'm so sorry, Chris.\" Shane murmured.\n\n\"For what?\" Chris asked as he flopped into the couch.\n\n\"This. I know you were looking forward to getting some rest after the trip.\"\n\n\"Don't insult me, Shane.\" Chris said quietly. \"Is resting more important than being here with you? In any case, who says I can't rest now? Come here.\" Chris reached for Shane's hand and drew him down beside him.\n\n\"I'm so relieved she's okay.\" Shane sighed as he rested his head against Chris' shoulder. \"Thanks for convincing Lizzie.\"\n\n\"Hmmm... Guess she didn't stand a chance in the face of the Donovan charm.\" Chris murmured, nuzzling Shane's neck.\n\n\"Don't flatter yourself dickwad.\" Shane breathed, enjoying the feel of Chris' lips on his neck.\n\n\"Who're you calling a dickwad?\" Chris husked, stretching to lie on his back and pulling Shane to lie on top of him. Without wasting time, he captured Shane's mouth in a fiery kiss.\n\nShane opened up, kissing Chris right back. Chris' hand went to the back of Shane's head to hold him to his devouring lips whilst his other hand moved to Shane's lower back to caress his sweet spot with butterfly touches. Shane arched his back, moaning lustfully into the kiss. He was hard in an instant, his cock pushing against his buttons, begging to be released.\n\n\"Chris...\" Shane moaned as he tore his mouth away from Chris, thrusting slowly against Chris' equally hard bulge, his eyes shut in bliss.\n\n\"Not here.\" Chris rasped. \"Come on.\" Both men got off the couch.\n\n\"Where are we going?\" Shane was so hard, he couldn't focus.\n\n\"Restroom.\" Chris didn't miss the grimace on Shane's face when he mentioned the restroom. \"Don't worry. This hospital is virtually like a five star hotel. The restrooms on the executive wing are neat, classy, spacious, and aren't used much as all the executive rooms have their own en suite bathrooms.\"\n\n\"But Adele...\"\n\n\"I'll get a nurse to watch her. Unless of course you don't mind staying here with...that.\" Chris said, staring pointedly at the bulge in front of Shane's pants.\n\n\"Let's go.\" Shane groaned, reaching down to adjust himself.\n\nChris and Shane quietly went out of the room with one destination in mind...the restroom. They paused briefly by the nurse who couldn't seem to take her eyes off Shane. Chris couldn't stop the growl of irritation that tore out of his throat. Shane narrowed his eyes at Chris and turned to give the nurse a brilliant smile. But before he could open his mouth, Chris was speaking.\n\n\"Maggie.\" Chris said, looking at the nurse's nametag. \"Would you be a darling and watch my little girl for me please. We'll be right back.\"\n\n\"Certainly, Mr. Donovan.\" Of course she knew Chris. Who didn't know Dr. Murphy's crazy, handsome rich friends?\n\n\"Thank you darling.\" Chris said too sweetly to be genuine, and turned towards the restroom with Shane. \"Florence Nightingale wants you.\" Chris growled. \"She's obviously dying to fuck your brains out.\" He rasped, pushing open the restroom door. \"Wanna give her a taste of that wicked cock?\" Chris taunted as he quickly locked the door behind them and pushed Shane against the double-wide vanity with its beautiful marble countertop.\n\n\"Will you hurry the fuck up and stop talking about some chic who is never going to see my dick?\" Shane growled.\n\nChris chuckled as he reached between them to unbuckle Shane's belt. \"See how frustrating and irritating it is when the one your heart beats for, decides to talk about some chic you don't care for, at a time when all you want to do is love the hell out of him?\" Chris smirked as he unbuttoned Shane's pants and freed his pulsing shaft. \n\n\"You've made your point.\" Shane breathed. \"Now...oh fuck!\" He threw his head back and moaned when Chris squeezed the curved mushroomed head of his cock. His head fogged with pleasure. \"Chris wait...\" Shane's hand moved down to cover the hand on his cock. The feel of Chris' thumb, rubbing against his wet slit was pure torture. Shane looked at Chris with eyes hazy with lust and uncertainty. He was obviously having second thoughts. \"I don't think this is a good idea. We could get caught.\" He whispered shakily.\n\n\"And what if we are?\" Chris retorted as he shook Shane's hand off and pushed his pants and boxer briefs past his arse. \"Sometimes, it's good to live dangerously.\"\n\n\"Chris...\"\n\n\"Shut up Shane.\" Chris murmured and leaned forward to kiss Shane softly on the mouth. \"Sit on the counter.\" Chris said huskily and waited till Shane did as he demanded.\n\nWithout wasting time, Chris first pulled off Shane's boots, and then completely pulled off his pants together with his boxers, leaving him in only his polo shirt and socks. Then Chris took a step back and unzipped his jeans, smirking at the look of pure hunger on Shane's face when he released his own hard throbbing cock. And when Chris bit his lower lip sexily and stroked his cock, Shane gave a tiny moan and licked his lips. At that erotic sound, Chris' cock got even harder, the skin straining over thick veins, its head an angry purple. He was leaking like a faucet.\n\n\"Oh fuck.\" Shane moaned lustfully, completely forgetting about his initial uncertainty. \"Chris...\"\n\nAlthough Shane had already been lubed up before they were interrupted by Lizzie's call in Chris' home, Chris knew that with his girth, there was nothing like too much lube. He slowly stroked his cock, spreading the precum all over it, getting it slick. His eyes never once left Shane's lust-filled face. \n\n\"Maybe we shouldn't...\" Chris breathed. \n\n\"Shut up and give me that cock.\" Shane commanded gutturally, breathing harshly with arousal.\n\nChris lost his train of thoughts at that sexy command. He stepped closer to Shane and lightly pushed Shane on the chest till Shane leaned back, supporting his weight on his hands behind him. Chris gripped one side of Shane's butt with one hand and pulled his arse to the edge of the counter. Then he slowly rubbed the tip of his cock against Shane's still slick puckered hole, watching as Shane's eyes dilated with arousal and anticipation. Then with bated breath, Chris rolled his hips up and slowly impaled Shane on his cock, inch by blissful, thick inch. They gasped in unison. Both men watched, riveted as Chris slipped slowly into Shane, both moaning their pleasure as Chris bottomed out. Neither moved. They held still, savoring the exquisite feeling of becoming one. \n\n\"God, you feel like pure heaven.\" Chris groaned.\n\nShane felt full, stretched and totally possessed. He could have sworn Chris was still thickening inside him. Even though Shane had been lubed and opened up earlier, it was a really tight fit. And it felt damned delicious. No matter the number of times he took Chris inside him, every time felt just like the first...the overwhelming sensations of feeling Chris along his inner walls was simply amazing. \n\nShane drew a shaky breath through his teeth. \"Fuck, you're huge.\" He breathed. \"Ugh, you're driving me insane.\" He panted and bit his lip to hold in his cry of pleasure. \n\n\"You okay?\" Chris husked, staring into Shane's passion-glazed eyes. Shane's lips parted but he was beyond thinking or talking. At his nod, Chris leaned forward and pressed a kiss to his parted lips. \"May I move?\" Chris whispered. Again Shane nodded. Chris pulled out till only the head of his cock remained inside Shane, and then slid back in slowly.\n\nWith a helpless gasp, Shane clung to Chris' shoulders. \"Ah fuck, that feels so good.\" Shane moaned, half blinded by that first luscious burst of pleasure. And when Chris began to thrust steadily into him, Shane's eyes closed as he gave himself up to the pleasure, wrapping his legs around Chris' waist and locking his feet behind him. He forgot about everything but the feel of Chris inside him. The friction of Chris rubbing against his sensitive walls, and that cock head pressing against his gland felt so good Shane was on cloud nine. \"More...faster...harder please...\" Shane whimpered deliriously as he bucked insistently against Chris. \n\n\"God, this feels fantastic.\" Chris whispered, rolling his hips, grinding hard, taking Shane. He loved the hot, tight clasp on his cock. And as he rode Shane, he watched his face, loving the way he threw his head back in ecstasy, gasping in time to his thrusts. Damn, the man was gorgeous, Chris couldn't help thinking. \"I want to be inside of you forever.\" Chris breathed shakily just as he leaned forward and slammed his mouth against Shane's. \n\nAnd even as both men devoured each other's lips in a heated kiss, Chris gave Shane what he wanted. He fucked into Shane with such complete abandon, sending both of them to rapturous heights. It was hot, fast, deep and mouthwateringly good. When Chris heard his cell phone ringing, he almost ignored it but remembering Adele, he picked it up, not pausing even once in his thrusts. It was Michael.\n\n\"What?\" Chris breathed, impatience clear in his voice.\n\n\"Where the fuck are you guys?\" Michael asked.\n\n\"Is she up?\" Chris demanded gutturally.\n\n\"Mary is here to see... Oh fuck, Chris...\" Michael trailed off, knowing without a doubt what was going on at the other end of the phone. He could clearly hear the erratic breathing and muffled grunts. \n\n\"Is Adele up?\" Chris growled.\n\n\"No.\" Michael tried very hard not to laugh.\n\n\"Then get the fuck off the phone. Tell Mary I'll be there soon.\" Chris hung up and threw his phone onto the counter. He definitely wasn't going to allow himself to be cock-blocked for the second time that day. \n\n\"Adele?\" Shane whispered shakily.\n\n\"Still sleeping.\" Chris replied huskily, wrapping his arms around Shane's waist. Then he picked Shane off the counter and turned to press his back against the tiled wall.\n\n\"Chris...\" Shane gasped, worried he might be too heavy. But his gasp turned into a loud moan when Chris thrust deeply into him, slamming directly into his pleasure button. \"Oh fuck!\" Then Chris proceeded to fuck the shit out of Shane, grinding deeply as he knew Shane liked it. He nailed Shane's gland head-on with each thrust, reducing Shane to an incoherent mess. \n\n\"Oh fuck, not going to last Shane.\" Chris groaned, his breathing becoming erratic and shaky as he neared orgasm. He suddenly began thrusting frenziedly into Shane with something close to desperation.\n\nThere was a knock on the door but neither man paused even once in their frantic race towards release. Chris opened his eyes to look at Shane, worried that the knock would snap Shane out of the lustful haze they were both under. But the look in Shane's eyes... raw desire and excitement...was enough to make Chris relax and rather increase his rhythm. Then Chris did something that for reasons Shane didn't understand, looked so naughty and sexy it rather shocked Shane into an unexpected orgasm... Chris grinned.\n\nWhen that knock sounded on the door, it dawned on Shane that they could be arrested for public indecency. But instead of getting scared and uncomfortable like he would have under normal circumstances, Shane was shocked at the excitement that flashed through him. He didn't care about anything other than Chris not stopping what he was doing. The danger...the fear of getting caught rather made the whole experience so much more mind-blowing. Then he saw that shit-eating grin on Chris' face and just like that, his orgasm was upon him before he even knew it. \n\n\"Oh, fuck Chris, I'm going to come.\" Shane's eyes rolled up into his head, his moans and whimpers becoming cries of pleasure.\n\nChris couldn't risk people hearing them. Especially, whoever was at the door as the person was still trying the knob. He covered Shane's lips with his, swallowing his cries of pleasure as his orgasm hit hard. Chris quickly slipped a hand between them and cupped it around Shane's mushroomed head, in order to capture his spunk. He didn't think they would ever live it down if Michael saw Shane's polo shirt soiled with cum. And even as Shane shot rope after rope of cum into Chris' palm, his muscles contracted rhythmically and so pleasurably around Chris that he couldn't help but follow Shane over the edge as sensations overtook his entire body, exploding outward. Chris cried into the kiss as his body shook with release. They swallowed each other's cries of passion, trembling with mind blowing pleasure.\n\n\"Fuck!\" Chris muttered as aftershocks shook their bodies. He opened his eyes and looked into Shane's dazed ones. Then keeping his eyes locked on Shane's, Chris brought out the hand that had Shane's essence securely in it to his lips and licked every drop. Shane didn't wait for Chris to initiate a kiss after that erotic act. He leaned forward and captured Chris' lips in a kiss so passionate and sweet it left them both breathless. \"I love you.\" Chris whispered when they eventually came up for air.\n\nShane grinned, his eyes suspiciously bright. Hearing those words from Chris was definitely going to take some getting used to, he thought emotionally. His heart was filled to the brim with love and joy. \"Love you too, baby.\" Shane murmured and kissed Chris lightly on the mouth. \"The person finally gave up.\" He murmured, looking towards the door.\n\n\"Uh-huh.\" Chris rumbled, looking sated and amused. \"Idiot.\"\n\n\"You really are a bad influence, Chris.\" Shane murmured. \"I wouldn't have done this in a million years.\" He cupped Chris' jaw and kissed him gently.\n\n\"The combination of sex and danger is a huge rush.\" Chris grinned. \"Damn, I can still taste pineapples. Looks like all that pineapple you ate this morning ended up in your balls.\" Chris drawled, kissing Shane softly on the cheek.\n\n\"For real?\" Shane laughed. That morning, he'd eaten a whole lot of pineapples for breakfast. \n\n\"I shit you not.\" Chris responded, tightening his hold on Shane when he felt Shane unlock his ankles from behind him. \"No, hold it.\" Chris groaned and quickly moved them back to the counter. Then he sat Shane back down and slowly pulled out of him, smirking when Shane moaned at the feeling. \"Damn, you love my cock.\" He purred, gazing up at Shane, his eyes heavy lidded.\n\n\"Damn right, I do.\" Shane laughed softly. \"And I love it when you look at me like that.\" He murmured, shaken by the adoration and love shining in Chris' eyes.\n\n\"Like what?\" Chris looked at Shane curiously.\n\nShane shrugged, wondering how to describe the look in Chris' eyes. A look that said Chris couldn't live without Shane... Like he needed Shane as importantly as he needed air. \"Like I'm your world.\" Shane whispered, his eyes filled with a look so intense Chris felt like Shane was looking into his very soul. \n\nA shiver passed through Chris as heat suffused his whole body. He ducked his head to hide his face and kissed Shane's chest tenderly...almost shyly. That look in Shane's eyes made his insides tingle and his heart flutter within his chest. Now Shane had reduced him to a fucking shy teen, Chris thought with a silent groan. Great! \n\nShane didn't miss Chris' reaction. He noticed the nice tinge of pink on Chris' cheeks and saw how flustered he'd suddenly become. On Chris, that look was rare and so adorable, Shane thought amused.\n\n\"Oh my.\" Shane murmured. \"He blushes. That is the most adorable sight ever.\"\n\n\"Shut up.\" Chris growled and buried his face against Shane's neck as Shane's chest rumbled with laughter. \"And yes, you are my world.\" He murmured against Shane's neck.\n\n\"The feeling is mutual, baby.\" Shane said as he gently stroked Chris on the back. \"Feeling is mutual.\"\n\nEventually, Chris stepped back, wet some paper towels and then proceeded to wipe them both clean. Then amidst lingering kisses, they fixed their clothes. They found a bottle of cherry flavoured mouth wash in the cabinet and rinsed their mouths thoroughly.\n\n\"I wish we were in bed.\" Shane murmured as he kissed Chris softly. \"I want to hold you.\" He whispered, smiling when Chris' eyes fluttered close as a shudder passed through him. \n\nChris moaned softly and opened his eyes to stare into Shane's beautiful eyes. Then he cupped Shane's jaw with such tenderness and sighed. \"I'd have loved that too. You know I can't sleep over tonight don't you?\" Chris asked softly.\n\nShane's eyes widened. \"Why not? Because of Adele?\"\n\nChris nodded. \"You did say yourself that she always ends up in your bed before morning. Remember?\"\n\nWith a groan, Shane leaned his forehead against Chris. \"Shit! I need you in my bed, Chris.\" Shane actually pouted, drawing a laugh from Chris.\n\n\"I'll miss you too.\" Chris chuckled as he went to open the door. \"Hey Shane,\" Chris paused with his hand on the knob and turned his head to look at Shane.\n\n\"Yes?\"\n\n\"Michael guessed what we were doing.\" Chris didn't look in the least bothered.\n\n\"So?\"\n\n\"You know what that means, right?\"\n\n\"What?\" Shane looked confused. Then a light bulb seemed to go off in his head. \"Oh, he's going to tell the guys.\" Shane said.\n\n\"Yep.\" Chris responded. \"Can you handle the...heat?\"\n\nShane laughed. \"Dude, I'm sure the guys know we fuck all the time so...\"\n\n\"But that's not going to stop them from teasing the hell out of us. Trust me...I know my guys. I just want to know...\"",
        "\"I can handle it, Chris.\" Shane chuckled, leaning forward to press a kiss on Chris' lips. \"Don't worry about it. In fact, if they want us to fuck in front of them...\"\n\n\"No, no no...\" Chris started shaking his head and laughing. \"I'm not going to give those idiots a show.\" Chris finally opened the door to an empty corridor. \n\n\"You already did, dickhead.\" Shane laughed as they headed for Adele's room. \"You kiss...\"\n\n\"That was different, Shane. It was just a kiss. A hot one at that.\" Chris said, winking at Shane.\n\n\"Oh you can say that again. It was mind-meltingly hot!\" Shane grinned. And as he opened the door to the waiting room attached to Adele's room, neither man could keep the goofy smiles off their faces.\n\n***\n\n\"There they are.\" Michael's voice was filled with amusement as he watched Chris and Shane enter the waiting room. \n\nShane couldn't help but groan at the knowing smirk on Michael's face. The silly doctor was sprawled in the couch, with his head on the lap of a petit pretty lady in a hot sea-blue sexy dress that stopped mid-thigh. She stood up with a grin on her sweet face immediately she saw Chris.\n\n\"There's my favourite cousin.\" Chris laughed as he drew Mary into his arms, picked her up and twirled her around as if she were a little girl, making Shane smile.\n\n\"Put me down, Chris Donovan.\" Mary squealed as she struggled to get out of Chris' arms. It was so funny a scene, both Michael and Shane started to laugh.\n\n\"That's my wife.\" The pride in Michael's voice was so palpable it brought a smile to Shane's face. \n\n\"If you insist.\" Chris laughed putting Mary back on her feet. Then with a teasing grin on his face, he turned Mary to face Shane. \"Meet my cousin, Shane. I can bet my last cent she only came here to see you.\" \n\n\"No, I didn't.\" Mary splattered, going red in the face as Michael and Chris laughed their heads off.\n\n\"Yes, you did darling.\" Michael laughed.\n\n\"Shut up, Michael.\" She said without looking at her husband. \n\nWhen Michael told Mary that her cousin was in the hospital with his boyfriend, Mary had insisted on coming to see for herself as she never had any idea that Chris was bi. Hell, they'd been close since they were kids and as far as she knew, her cousin was into ladies and not men. Ladies fell all over themselves just to be around Chris. The more he made them know he didn't have the time, the more they fell for him. She always told Chris it was those intense striking eyes of his that attracted the ladies to him like moth to fire. This gay Chris...she just wanted to be the judge. Initially she thought Michael was pulling her legs. But then, he'd also sounded like he was serious so... It was obvious her husband had known for a while and also knew some details but he was tight-lipped. Men! \n\nMary had watched as Chris walked into the waiting room with a drop dead gorgeous, hot black hunk. Just one look at them and she'd known her husband had been serious. Her eyes had widened. Not only was her cousin obviously bi, he'd also managed to snag for himself a totally hot guy.\n\n\"Hi. I'm Mary.\" She stretched forth her hand to give Shane a handshake.\n\n\"I'm Shane.\" Shane said with a dazzling smile as he took Mary's hand and pressed a kiss on the back of her hand. \"Nice to finally meet you, Mary.\"\n\n\"Oh my God, you're so handsome.\" Mary breathed. \"Why are you gay?\" She asked, ignoring Chris' growl and Michael's laughter. \"You should make a lot of babies. With that face... sorry.\" She seemed to have come back to her senses. \"You are gorgeous.\"\n\n\"Thank you, Mary. You are beautiful yourself.\" Shane said, watching a smile spread across Mary's face. \"As for my being gay...your cousin turned me gay.\" Shane said with such a look of innocence Michael roared with laughter whilst Chris looked at Shane as if he'd suddenly sprouted horns. \n\n\"You turned him gay?\" Mary turned to Chris and screeched. \"When did you even become gay yourself? She demanded. But before Chris could even gather his scattered thoughts, Mary turned back to Shane and asked in an urgent whisper which was so intentionally loud, both Chris and Michael heard... \"Can you unturn?\" \n\nMichael was howling with laughter on the couch. Shane looked bemused. And Chris looked...\n\n\"Will you drop the act, Mary?\" Chris growled. \"She's dense but not that dense, Shane.\" Chris said and groaned when Mary elbowed him.\n\n\"Oh my God, I should have recorded this.\" Michael laughed.\n\n\"Shut up.\" Chris squeezed the bridge of his nose. \"Dr. Mary Murphy at your service.\" Chris told Shane. \"Like I said, she's not that dense.\"\n\n\"So... all that was an act?\" Shane asked, looking at a beaming Mary. \"Thank God.\" Shane breathed. \"Because I'm still wondering if it's possible for anyone to 'unturn'.\" He gave the word quotations with his fingers, drawing a chuckle from Chris.\n\n\"I forbid you to unturn, Shane Lewis.\" Chris murmured and kissed Shane softly on the cheek.\n\nMary couldn't stop grinning. She looked at Shane adoringly. \"Aww...how swee...wait!\" Her eyes widened. \"Did you say Shane Lewis? The Shane Lewis?\"\n\n\"The one and only.\" Chris drawled.\n\n\"You're going out with Shane Lewis?\" Mary's surprised gasp made all three men laugh. \"Why didn't you tell me?\" Mary turned on her husband.\n\n\"Would you have believed me?\" Michael rolled his eyes.\n\n\"No, I wouldn't have.\" She said and turned to face Shane. \"So I finally get to see the face behind the name. One day, you're going to tell me why you stay out of the public eye, Shane.\"\n\n\"Whenever you're ready, let me know.\" Shane chuckled.\n\nChris looked at Shane. He realized he didn't know Shane's reason behind that either. He made a mental note to ask him when they were alone.\n\n\"I'll hold you to it.\" Mary grinned. \"I've got to go guys. It was a pleasure meeting you, Shane.\"\n\n\"Likewise.\" Shane responded.\n\n\"And thanks for the invite to the birthday party.\" Mary said, offering her hand to Shane for a handshake but Shane surprised her by giving her a hug instead.\n\n\"Can't wait to meet Melissa and Marcel.\" Shane said.\n\n\"See you on Friday.\" Mary said and hugged Chris. \"You owe me.\" She growled into Chris' ear.\n\n\"We'll talk. I promise.\" Chris whispered.\n\n\"Good. And next time you two decide to fuck each other's brains out, try not to do it when you're supposed to be watching a sick person.\" \n\n\"How did you...\"\n\n\"That kind of glow...that blissfully sated look, can only stem from one thing. And cherry flavoured mouth wash? Really?\" With that last parting shot, Mary pulled her husband, who was busily talking on his cell phone, up from the couch and left Chris and Shane with a wave.\n\n\"Hey, I wasn't the one who stocked your cabinets!\" Chris shouted after them but Mary didn't even turn.\n\n\"What?\" Shane asked a still bemused Chris.\n\n\"She could tell we just fucked.\" Chris chuckled, shaking his head.\n\n\"What?\" Shane's eyes widened. \"Michael must have...\"\n\n\"He wouldn't.\" Chris said, entering Adele's room. \"Oh, thanks for sitting with her, darling.\" Chris told the nurse, who batted her lashed at Shane as she went out. Chris growled and went to lie on his back in the couch with his head on the armrest, watching as Shane kissed his daughter. \n\n\"Sure about that?\" Shane asked as he walked towards the couch. How could Mary have known they'd just fucked if Michael hadn't told her, Shane thought.\n\n\"Positive.\" Chris turned on the TV and flipped to the sports channel, where Arsenal was playing against Manchester City. \n\n\"Didn't know Walcott was back.\" Shane said as he picked up Chris' legs off the couch, sat down and placed them on his lap. \"So how did Mary know?\" Shane didn't sound worried at all. He slipped his hand beneath Chris' shirt and drew circles on his tummy, chuckling when he felt a ripple under his palm.\n\n\"She said something about there being a glow or a look that clearly showed what we did. Don't know whether she could tell the style too.\" Both men burst into laughter.\n\n\"Oh damn! She could tell just by looking at us?\" Shane asked as what Chris said dawned on him.\n\n\"Don't beat yourself up. She's a Psychologist.\" Chris drawled. \"The little witch reads people for a living. And she's damned good at what she does too.\" The pride in Chris' voice couldn't be masked. \n\n\"She's feisty. I like her.\" Shane murmured. \"I'm hungry. Can't wait to...\" He trailed off when his phone started ringing. \"Lizzie.\" He murmured before clicking the answer button. \"Hey.\"\n\n\"Is she up?\" Lizzie asked without preamble.\n\n\"No. Still sleeping. I'll call immediately she wakes up okay?\"\n\n\"Okay.\" She said with a sigh. \"Talk to you later.\" She said and hung up.\n\n\"Daddy?\" Both Shane and Chris heard Adele's sleepy voice and rushed to her side.\n\n\"Hey princess.\" Shane said, hugging Adele to him. \"How are you feeling?\"\n\n\"Hungry.\" She said, making Chris laugh. \"Hi, Uncle Chris.\" Adele said with a brilliant smile.\n\n\"Hi Sweetheart. What do you want to eat?\" Chris asked, sitting beside Adele on the bed.\n\n\"Pizza.\" She responded delightedly. Obviously, she was feeling no pain.\n\n\"Immediately, the doctor finishes checking you out, we're off to Pizza Hut.\" Shane said. \"How does that sound?\"\n\n\"Yayyy!\" Adele squealed. \n\nChris had already called Michael so just as Shane started dialing Lizzie's number, Michael entered and went to see to Adele. In no time at all, the little girl and the two hunks were good to go. Shane reached into his back pocket for his wallet.\n\n\"I'll be right back, Chris. Let me settle...\"\n\n\"Hey don't worry about it.\" Chris murmured. \"It's on my tab.\"\n\n\"Chris...\"\n\n\"She's mine too, remember?\" Chris asked with a raised brow and a challenging flash in his eyes.\n\nShane gave a slight nod and went to give Michael a one-armed hug as Chris picked Adele up. \"Thanks man.\" Shane said to Michael. \"I'll keep you posted on whatever happens.\"\n\n\"Do that.\" Michael said as he walked with them to the door. \"Adele, tell Daddy immediately you feel any pain in your arm okay?\" Michael said, giving the little girl a kiss on the forehead.\n\n\"Okay, Dr. Michael.\" She responded with a smile as her tiny arms coiled around Chris' neck.\n\nIn the car, Chris carefully placed Adele in the back seat and buckled her in. Then he went round to the driver's seat and turned on the engine. \"Adele, can you tell me where we're going?\" Chris asked in a singsong voice.\n\n\"Pizza Hut.\" The little girl shouted.\n\n\"I can't hear you.\" Chris shouted too, making Adele laugh and scream 'Pizza Hut' again.\n\n\"Aw come on you two.\" Shane laughed. \"Are you trying to burst my eardrum?\" \n\nAnd even though Shane and Chris knew Abigail had already prepared some food for them, they bought a family size pizza and ate with Adele. By the time they got home, Adele was fast asleep. Shane took her to her room, changed her dress for pajamas and tucked her in. When he got back downstairs, he heard laughter coming from the kitchen. Shane got to the kitchen to find Chris laughing with Abigail, with a plate of food sitting on the Island in front of him. He wasn't even seated. And the fork in his hand was poised over the food, ready to dig in.\n\n\"Dude, I thought you said you were full.\" Shane said with surprise written all over his face.\n\n\"Come on, this is Abby's food.\" Chris laughed. \"I couldn't resist.\" He said, digging in.\n\n\"Would you want me to fix a plate for you, Mr. Lewis?\" Abigail asked Shane.\n\n\"Thanks for the offer, Abigail. But I'll pass. And you can retire for the night. We'll be fine.\" Shane said, rubbing in his eye.\n\n\"Oh I don't mind...\" Abigail started.\n\n\"Don't worry. I got it.\" Shane insisted.\n\n\"Alright. Good night.\"\n\n\"Good night, Abigail.\" Shane responded.\n\n\"Night Abby.\" Chris responded with a full mouth, making Shane almost roll his eyes. \"Open up.\" Chris murmured, holding up a heaped fork.\n\n\"Chris...\"\n\n\"Hey, come on.\" Chris moved to pin Shane against the Island with his body and slipped the food into his opened mouth. Chris watched as Shane munched on the food, smiling at the obvious pleasure on Shane's face. \"Good?\"\n\n\"Delicious.\" Shane moaned.\n\nAnd standing on their feet, right there in Shane's kitchen, Chris fed them both till the plate was empty. Then he washed and dried the plate, looking around to make sure the kitchen was spotlessly clean.\n\n\"You could have used the dishwasher you know.\" Shane murmured, looking amused and impressed.\n\n\"This was faster.\" Chris said, putting out the light in the kitchen. Back in the living room, he bent to pick up his car keys from the center table. \"I gotta go.\" He said when he straightened up.\n\n\"Stay.\" Shane breathed. \"Please.\"\n\n\"Hey...\" Chris leaned in and took Shane's mouth in a soft kiss. \"I plan on doing just that one of these days before the week ends. Just not today. Tell me you'll be okay.\"\n\nShane gave a deep sigh. \"I'll be okay.\"\n\n\"Good.\" Chris turned and headed for the door, but then stopped and turned back to face Shane. \"I wanted to ask. Why did you stay out of the public eye?\"\n\nShane stiffened. Then he shrugged and said quietly... \"I was hiding from you.\"\n\nChris went as white as sheet. \"Is that why you changed your name?\" Chris couldn't believe he'd never actually asked Shane why he changed his name. Well, Shane was his middle name but still...\n\n\"Yes.\" Shane whispered.\n\nChris suddenly wanted to bawl his eyes out. He wanted to scream. To let out the pain that was squeezing his heart that very instant but he knew he couldn't do that. Chris nodded, took a deep breath and plastered a smile on his face.\n\n\"Okay. See you tomorrow.\" Chris' voice remained steady even though his heart rate sped out of control. He needed to get out of there before he broke down, he told himself.\n\n\"Hey, are you okay?\" Shane asked softly.\n\n\"I'm fine.\" Chris said and turned towards the door.\n\n\"Can we come take you out for lunch tomorrow?\" Shane asked.\n\n\"I'll love that.\" Chris turned around to respond.\n\n\"Okay. I'll take Adele to the office for a brief meeting. From there, we'll pick you up.\"\n\n\"It's a date.\" Chris nodded. \"And don't forget to give Adele her medication.\"\n\n\"Yes, mum.\" Shane with humorously but Chris didn't even crack a smile. \n\n\"I'll call when I get home.\"\n\n\"Chris...\"\n\n\"I'll call, Shane.\" Chris said hoarsely.\n\nAnd after Chris left, Shane stared unseeingly at the wall, feeling terrible that he had to tell Chris the real reason for his antisocial lifestyle. But they did promise each other to always be honest and face problems head-on hadn't they? He hadn't been bothered when Mary had mentioned that same issue because he was used to telling anyone who asked that he stayed out of the public eye because he was a private person and preferred to stay private. He couldn't possibly have given Chris that crap could he? Shane had known the truth would hurt Chris because he remembered Damon telling him how Chris had searched for him. On the other hand, Shane felt that Chris was a grown man and didn't need any sugar-coated truth.\n\nBut he couldn't shake off the look in Chris' eyes when he'd dropped the bombshell. That look of pain and defeat had torn at Shane's heart. All he'd wanted to do at that point was to take Chris into his arms, but for some reason, he couldn't. Twisted as it may seem, he'd also felt some sort of satisfaction within at Chris' pain. Was it possible he was still a teeny-weeny bit angry at Chris, Shane asked himself. He knew without a doubt that he loved the guy...was head over heels in love with Chris. Shane really wasn't comfortable with that dark satisfaction he always felt whenever he said something in connection to their past, that ended up hurting Chris.\n\n\"Shit.\" He breathed, starting for the stairs. \n\nShane knew he needed help. He needed to talk to someone, he thought fiercely. Much as he'd already told Chris not to be surprised if he brought up what he'd put him through once in a while because he's human and all, he couldn't keep hurting the man he loved. If it was the last thing he did, he would get help, talk it out, and love Chris with a clean heart, Shane thought fiercely. Shane went to check on Adele and headed for the bathroom. Just as he was about to step under the shower, his phone rang. It was Chris.\n\n\"Are you okay?\" Shane asked immediately he picked up.\n\n\"I'm fine.\" Chris responded, though he couldn't shake off the pain within.\n\n\"I'm so sorry, Chris...\"\n\n\"Hey, don't be.\" Chris said gruffly. \"I'm glad you were honest with me. I'm not happy you did what you did but I understand and respect it because I know why you did it. Hell, I might have done the same had I been in your shoes.\"\n\nShane went quiet for a moment, and then gave a deep sigh. \"I'm about to take a shower. May I call you back?\" \n\n\"Sure. I'm about to hit the showers myself. Talk to you soon.\" Chris said and hung up.\n\nAnd that night, Shane talked to Chris on phone till he heard Chris' even breathing, indicating that he was asleep. Shane stayed on the line, listening to Chris breathe, missing him with everything in him. He'd managed to talk Chris out of the shitty mood he'd obviously been in because of what he'd revealed earlier that evening. And when Chris had confessed that if he'd been told some months earlier that he would love someone that much, he wouldn't have believed it, Shane have fallen even deeper in love with him. It was hands down the greatest feeling. Shane chose not to disconnect the line. He went to sleep listening to Chris breathing softly on the other end of the phone.\n\n***\n\nChris stopped and stared at Shane. He'd never seen a more ravishingly gorgeous man in his entire life. Shane was leaning against a black 2014 Aston Martin Rapide S, with his hands stuck in his pockets, rocking a black suit on a black shirt. Not only did he not have on a tie, the top three buttons on the shirt were opened. He looked so hot Chris felt himself hardening right there in the open, by just looking at Shane.\n\n\"Shit.\" He muttered and groaned when he saw mirth twinkle in Shane's eyes. The idiot knew the effect he had on him and was obviously relishing it. \n\nChris shrugged off the jacket of his grey suit as he started towards Shane. He really wasn't ready to get himself involved in any scandal. Definitely not one involving his erect dick on a Monday afternoon. He held his suit securely in front of him as he made his way to where Shane leaned sexily against an equally sexy car.\n\n\"Really?\" Shane murmured when Chris got to his side, not making any effort to hide his knowing smirk.\n\n\"Fuck off.\" Chris growled, wishing he could kiss Shane right then. But apart from the fact that they were standing in broad daylight in front of one of his banks, Adele was in the back seat, smiling at him. \"Shit, I have to sit with her.\" Chris muttered. \"If I sit beside you, it's not going to go down.\"\n\nShane burst into laughter. \"You would rather risk her seeing it and telling her mother?\" That did it for Chris. He went from hard to soft in micro-seconds.\n\n\"Thanks a lot.\" He muttered pulling on his jacket. \"That helped.\" But he still opened the back door and kissed Adele on the cheek. \"How's my little darling doing?\"\n\n\"Great.\" Adele laughed. \"You didn't kiss daddy.\" The little girl observed. \n\nChris was quick to cover his shock. \"Well, today your daddy looks like a frog so I don't want to touch him with any part of my body.\"\n\nAdele burst into delighted laughter. \"No, he doesn't.\" She protested laughingly.\n\n\"Yes he does.\" Chris insisted as he closed the door and went round to the front seat to sit beside an amused Shane. \"Did you by any chance fall into a gutter on your way here?\" Chris asked Shane loudly with a frown on his face. \"'Cause you smell funny.\" Adele was laughing so hard. \"And your face...\"\n\n\"Shut up, Chris.\" Shane laughed. \"Did Sandra show up?\" He asked.\n\n\"She's one feisty designer.\" Chris said. \"She's in my house even as I speak.\"\n\n\"Wow!\" Shane laughed.\n\n\"Yes. Wow. She says she can't wait for me to see the room this evening.\" Chris grinned.",
        "\"That fast huh?\"\n\nChris nodded. \"She'll be done by noon tomorrow.\" \n\n\"Can't wait to see it.\" Shane said.\n\n\"Is that all you wanna do? See it?\" Chris murmured.\n\nThey were at a red light so Shane turned to give Chris a smoldering look. \"What do you think?\" He whispered.\n\n\"Are you two going to kiss now?\" Adele asked with all seriousness. \"The light will turn green soon.\"\n\nChris turned around in his seat to look at Adele. \"Like I said earlier, I don't kiss frogs.\" He said making both Adele and Shane laugh.\n\nChris started chatting with Adele. Shane only half listened as Adele narrated the story of Pocahontas to Chris. And what a narration it was. All he could hear was Pocahontas, Meeko, Flit and John Smith. Shane could have bet his last cent Chris couldn't make the head or tail of the story.\n\nAt the restaurant, they had a nice meal. Adele obviously enjoyed the company and attention of the two men. Throughout lunch, Shane caught Chris staring at his mouth with so much longing. He would loudly clear his throat to distract Chris or kick him under the table to get his attention. But when Chris caught his eye at a point and mouthed 'I love you', Shane stood and leaned over as if in a trance and kissed Chris lightly on the mouth. Then he sat back and the two men simply stared at each other, till Adele's voice snapped them out of whatever haze they were under.\n\n\"Finally.\" She grinned at first her father, then at Chris. \"You got kissed by a frog, Uncle Chris. I bet you liked it too?\" The little girl taunted.\n\nChris really tried to suppress the heat but couldn't. He groaned as he felt himself blush. He saw the amusement on Shane's face and looked into his plate, suddenly more interested in the virtually empty place.\n\n\"You think he's turning into a frog now, princess?\" Shane asked Adele but his intent gaze remained on Chris.\n\n\"They usually turn at midnight.\" She informed Shane. \"Like Cinderella. At midnight, she turned into a frog and the Prince married her.\"\n\n\"Right.\" Shane was obviously trying very hard not to laugh. \"So you think Uncle Chris will turn into a frog at midnight huh?\" He asked, still watching Chris.\n\n\"No. Because you're not really a frog.\" Adele said with all seriousness. \"If you were a real frog, then Uncle Chris would turn into one too at midnight. Then you would have to marry him to get him to become a woman bean.\"\n\nShane smiled. \"A human being huh? I see.\" Shane drawled, looking as serious as his daughter. \"But since we are both human beings already...\" \n\n\"You can get married.\" The little girl chipped in. \"Do you want to marry Uncle Chris?\" Eyes that were so much like Shane's turned on Shane. \n\nChris' eyes widened as he stared at Shane. What surprised him even more was the way Shane didn't even flinch at Adele's question. \n\n\"I'll be the happiest man if Uncle Chris agrees to marry me.\" Shane's eyes remained locked on Chris'.\n\n\"You'll have to ask him, Daddy.\" Adele said, sounding older than her age.\n\n\"Oh I plan to.\" Shane said cheerfully. \"As soon as I get my ring ready.\" Shane saw the shock on Chris' face. \"Adele?\"\n\n\"Yes Daddy?\"\n\n\"Till I get the ring and ask Uncle Chris, can this be our big secret?\" He finally turned to his daughter.\n\n\"Yes.\" Adele grinned. \"I'm a big girl. I can keep secrets. Here...\" She wriggled her little finger in front of Shane and giggled when Shane wrapped his around hers. \"Err... Uncle Chris, don't tell anyone okay?\" She turned to look at Chris.\n\n\"I promise not to.\" Chris' voice sounded hoarse, drawing a frown from the little girl.\n\n\"Are you okay, Uncle Chris?\" But before Chris could answer, the little girl went right ahead. \"Daddy will ask you when he gets the ring. Promise.\"\n\n\"I'm very fine, Adele.\" Chris said with a smile. \"And I can't wait for your dad to get that ring.\" He turned his intense eyes which mirrored all the emotions within him, back on Shane. \n\nTo say Chris was surprised would be an understatement. He was thrilled too but he knew a marriage between him and Shane wouldn't happen anytime soon. They needed to take care of more important issues before they jumped into anything like marriage. During their talk the night before, they'd both agreed that it would be good if Shane saw someone to help with all that bottled up anger. Chris had told Shane that he was ready to talk to a professional too. He'd even suggested Shane booked an appointment with Dr. Murray, Kyle and Aaron's shrink. He'd obviously done a splendid job with those two. If not for the fact that Stephen, Ken's soldier fianc\u00e9 was out of the country on a mission, Kyle and Aaron would have been married by then. Kyle wanted a double wedding with his twin brother Ken so they had to wait till Stephen returned. \n\n\"Earth to Chris.\" Shane said, finally getting Chris' attention. \"You okay?\"\n\nChris nodded. \"Never better.\" He murmured, noticing that Adele was no longer in her seat. \"Where's Adele?\"\n\n\"Sonja, the waitress took her to the bathroom.\" Shane said, reaching for Chris' hand.\n\n\"Did they just leave?\" Chis asked.\n\n\"Yes.\" Shane answered, not seeing Chris' intent soon enough. His eyes widened as he watched Chris stand up and come around to his side. \"Chris...\" Shane breathed warningly, looking around. They could be clearly seen by some of the people in the restaurant but Chris seemed not to care. \n\nWhen Chris got to Shane's side, he took the seat beside him and cupped the sides of Shane's face. Then as if in a slow motion, he lowered his mouth to Shane's and kissed him. Shane resisted the kiss for a moment, but when Chris drew his lower lip into his mouth and sucked sensuously on it, Shane moaned and relaxed into the kiss, his mouth opening to accept Chris' tongue. With eyes closed in pure bliss, Shane kissed Chris back with passion, his mouth just as eager and hungry as Chris'. When Chris sucked on Shane's tongue, he almost went out of his mind with pleasure. With a guttural groan, Shane took over the kiss. Slanting his head, he devoured Chris' mouth, the kiss getting deeper and hotter, tasting of a wild promise. Chris broke off the kiss when it dawned on him that they were getting carried away.\n\n\"Damn.\" Chris breathed harshly, leaning his forehead against Shane's. \"For someone who was reluctant to kiss, you sure know how to turn an innocent kiss into an x-rated scene. \"Fuck.\" Chris muttered as he sat back and watched a dazed Shane. Shane couldn't bring himself to speak. He raised a hand with the intention of touching Chris on the cheek but both men watched, riveted, as his hand literally shook. \"Shit.\" Chris whispered, and then reached up to clasp Shane's hand in both of his. \n\nAnd they just sat staring at each other till Adele got back to the table, happily eating a cone ice cream. \"Uncle Chris, why did you change seats?\" She asked as she climbed onto Chris' lap.\n\n\"No reason. That looks delicious.\" Chris laughed shakily.\n\n\"It is. Want to taste?\" She asked but didn't wait for an answer. \"Open up.\" She ordered, making Chris laugh.\n\n\"Alright Ma'am'.\" Chris said and brought out his tongue to lick the side of the ice cream, his eyes shooting to Shane's when he heard Shane moan lustfully. \n\n\"Are you okay daddy?\" Adele turned to ask Shane. At Shane's nod, Adele shoved the ice cream into his face. \"Lick.\"\n\n\"No honey. You know I'm not a sweet tooth like you and your mum...and your Uncle Chris here.\" He chuckled. \"Hurry up darling. We have to take Uncle Chris back to the office.\"\n\n\"Oww no!\" The little girl moaned with a sad face. \"Can't we just...adbat him?\" She whimpered.\n\n\"No we can't abduct him.\" Shane gave Chris a warning look when he noticed the amused and incredulous look on his face. \"Uncle Chris will be home before we know it.\"\n\n\"Okay.\" She said pitifully. \"Here, Uncle Chris, you can have the rest. I'm too full.\" Adele handed the rest of the ice cream to Chris.\n\n\"Oh thank you kind Queen.\" Chris actually sounded as if he were acting a play.\n\n\"Will you cut the crap?\" Shane laughed as he wiped Adele's sticky fingers with a napkin. \"Shall we?\" Shane said, laughing when Adele started skipping ahead of them. Since their bill had already been placed on Shane's tab, he left a huge tip for Sonja and then reached up to wipe a bit of cream from the corner of Chris' mouth. \"Come on.\" He murmured, turning to follow his skipping daughter out of the restaurant. \n\nWhen they dropped Chris off at his office, he promised to see them later, blew Adele a kiss and watched with a forlorn expression on his face as they drove away. Too bad he had meetings scheduled till close of work, Chris thought sadly. He would have loved to go home with Shane and Adele and spend the rest of the day with them. With a sigh he turned and headed into the building, wishing he could clear his calendar for the next day. But he knew he couldn't get out of an important meeting scheduled for the next morning. It looked like he didn't have any choice but to do a half day the next day...as he'd already planned, instead of having the whole day off as he wished.\n\nBut even as he went through his meetings and conferences, Chris couldn't keep the smile off his face. He knew he had it real bad...and not just for Shane, but his daughter as well.\n\n***\n\n\"Shane?\" Chris called out when he entered Shane's foyer the following day at noon. He started unbuttoning his shirt as he climbed the stairs. \"Shane?\" He called again.\n\nChris heard the door to Shane's bedroom open and looked up just in time to see a shaken Shane come out of the room. Something was wrong, Chris thought as he finished the rest of the stairs in a run.\n\n\"Hey, what is it?\" Chris asked as he cupped his palms around Shane's cheeks and looked into eyes that looked upset. What scared Chris was the way Shane trembled. \"Adele?\"\n\n\"Sh...she's f...fine.\" Shane stuttered. \n\n\"Shane...\" Chris stopped talking and simply hugged Shane fiercely. Something had obviously shaken the man but Chris wanted to calm him down first. When he felt Shane's arms wrap around his waist, Chris hugged him even tighter. \"Everything's going to be okay.\" He promised without even knowing what the problem was. Chris heard Shane breath shakily and leaned back to look at him. \"Want to tell me what happened?\"\n\nShane unwrapped his arms from Chris' waist and showed Chris the broken CD in his hand. \"You're not going to believe what almost happened.\" He said gruffly.\n\n\"What?\" \n\n\"I was in the study, working.\" Shane begun softly. \"Adele was sleeping. I think she decided to come and look for me in here when she woke up.\" Shane pointed a thumb at his door. \"Of course I wasn't there so she decided to make herself comfortable in the bed. But not before slotting in this CD...which was the only CD outside the case...\"\n\nChris grabbed Shane's wrist and took a closer look at the broken CD. \"Don't tell me...\" He growled. \"Oh fuck.\" He raked his fingers through his hair. \"Shit, tell me she didn't...\"\n\n\"She didn't.\" Shane sighed. \"I got here just in time. I came up to check up on her. Went to her room but she wasn't there but saw my door open so... Fuck!\" Shane swore. \"I almost had a heart attack when I got to the door just in time to hear her squeal, Daddy excitedly. I followed her gaze and froze when I saw myself talking to Mr. Coillet on phone in the study.\"\n\n\"Oh my God.\" Chris breathed.\n\n\"Then I saw you enter the study and just like that, I sprang into action. The terror that gripped me at that instance unfroze me. God, that was close.\" Shane moaned, burying his face against Chris' neck. \"I broke the CD into two immediately I took it out.\"\n\n\"What's she doing now?\" Chris asked, rubbing Shane on the back.\n\n\"Watching cartoons.\"\n\n\"And that's what she should be watching.\" Chris chuckled. \"Hell, I'll take a leaked sex tape over what almost happed, any day. At least by the time she would be old enough to see it, she would be too old to be traumatized.\" Chris drawled.\n\n\"Dude, even if she's eighty years old she'll still be traumatized if she has to watch her Uncle Chris fuck the living daylights out of her dad. All that kinky shit you did...\" Shane shuddered as he remembered. He stepped away from Chris with a groan, feeling horny all of a sudden despite his worry over the incident.\n\n\"The kinky shit I did? Wait, was I on that tape?\" Chris blinked in mock innocence.\n\nShane gave a slight frown. \"Oh right. It must have been Jim and I. My bad.\" Shane made to turn away but found himself instantly pushed against the door.\n\n\"Who the fuck is Jim?\" Chris growled. He knew Shane was merely joking but he still couldn't suppress the panic. \n\nShane's eyes widened in surprised when he saw the genuine fear on Chris' face. \"Hey, calm down.\" Shane murmured and took Chris' mouth in a kiss meant to do exactly that...calm him.\n\n\"Fuck.\" Chris breathed when they came up for air. \"Don't ever do that to me again.\"\n\n\"You're an idiot.\" Shane murmured.\n\n\"I know.\" Chris chuckled as he reached behind Shane to open the bedroom door. \"Did you remember to book an appointment with Dr. Murray?\"\n\n\"Yep. I'm to see him next week Tuesday.\" Shane responded as he followed Chris into the room.\n\n\"Good.\" Chris said as he pulled off his shirt, leaving his undershirt. He grinned when Adele turned to look in his direction upon hearing his voice.\n\n\"Uncle Chris.\" Adele screeched and jumped out of the bed to throw herself into Chris' outstretched arms. \"You didn't come last night.\"\n\n\"I'm so sorry sweetheart.\" Chris said, sitting on the bed with Adele. \"It was too late to come over when I finished for the day. See I'm here early today?\"\n\n\"Will you be going back to that place?\" She asked, obviously referring to Chris' office.\n\n\"Not now.\" Chris bent to unzip his classy designer shoes. \"I'll leave in the evening.\"\n\n\"Oh no, please don't leave.\" Adele pleaded as Shane sat at the foot of the bed and took over the task of removing Chris' shoes and socks.\n\n\"But I have to Ade...\"\n\n\"We can eat ice cream and watch movies and...and swim and tell stories...and...\" The little girl trailed off, her lips trembling slightly as she tried to stop herself from bursting into tears.\n\n\"Hey, hey don't cry Adele.\" Chris said, pulling her into his arms. \"I'll stay.\"\n\n\"You will?\" She asked with wide eyes.\n\n\"You really thought I'd let you eat all that ice cream all by yourself?\" Chris wiggled his eyebrows devilishly, making Adele laugh and roll to the other side of the abnormally big bed. Chris rolled after her, making the little girl scream with delight. They didn't even notice when a laughing Shane left the room. And they still didn't notice or even hear Shane come back in amidst the screams and laughter. \"Gotcha.\" Chris finally hugged the wriggling girl to his chest and rolled them till they hit the headboard.\n\nIt was only after they sat up against the headboard, panting harshly that they both noticed a laughing Lizzie standing beside Shane in the room. \"Mummy.\" Adele squealed and jumped out of the bed into her mother's arms. \n\n\"Oh baby, I've missed you so much.\" Lizzie laughed.\n\n\"I've missed you too. Have you finished your test?\" Adele asked.\n\n\"No darling. I just finished today's. The last one is on Thursday.\"\n\n\"Then my party will be on Friday.\" The little girl squealed, making the three grown ups laugh.\n\nBy the time Shane and Adele got back to the room after seeing Lizzie off, Chris was fast asleep. Shane quietly turned off the TV and went to the living room with Adele to continue watching her cartoons.\n\n***\n\nChris eyes snapped open when the door to Shane's bedroom opened just before dawn. He watched as the little girl in her Minnie mouse pajamas entered the room and headed towards the bed. When she got to the bed, Chris reached out to pick her up and placed her between him and Shane. Adele wriggled till her head was comfortably resting on Chris' shoulder, then lightly kissing Chris on the cheek, her breathing evened out as she fell asleep. Chris smiled and kissed her forehead, and then went back to sleep. And that was how Shane found them when he woke up. He reached for his phone and took pictures of the two people who ruled his world. God, he loved them, Shane thought, not bothering to suppress the grin that broke out on his face.\n\n\"You know that's creepy right?\" Chris rasped.\n\n\"What is?\" Shane looked at Chris.\n\n\"Staring at people whilst they sleep.\" Chris yawned.\n\n\"How did you know? Your eyes are closed.\n\nChris opened his eye. \"I felt your eyes on me.\"\n\n\"Now who's creepy?\" Shane retorted, turning and heading for the washroom.\n\nShane was brushing his teeth when Chris entered and wrapped his arms around him from behind, his morning wood poking against Shane's arse. \"I wish I didn't have to go to work.\" He groaned.\n\nShane rinsed his mouth and put some toothpaste on Chris' brush. Then he turned around and gave the brush to Chris. \"The earlier you get there, the earlier you can come back home.\" He said as he jumped onto the beautiful glass counter top of the vanity to watch Chris brush his teeth.\n\nWhen Chris finished brushing his teeth, he pulled Shane off the counter into his arms and kissed him till they were both breathless. \"Fuck, I'm going out of my mind with want.\" Chris muttered against Shane's mouth. \"Two days, Shane.\" He growled as he rubbed his hard-on against Shane.\n\n\"Technically, it's not yet two full da...\"\n\n\"Shut up, Shane.\" Chris muttered and stood back from Shane when he heard Shane laughing softly. \"Think this is funny?\" He asked with mock indignation, pointing at his obscenely huge bulge which was stretching his sweats.\n\nShane laughed harder as his hand went to lightly squeeze Chris' cock. \"The last thing on my mind when I look at this, is laughter. So no, I don't find this funny.\" He said, squeezing Chris harder and drawing a moan from him. \"Watching you freak out on the other hand is fun.\" He whispered into Chris' ear and started for the door. \"You're going to be late if you don't get ready for work.\" Shane closed the bathroom door behind him and laughed softly when he heard Chris swear colourfully. \n\nShane shook his head, grinning as he went back to the bed to check up on his daughter. Chris thought he was the only one going out of his mind with lust, Shane thought with a chuckle. If only Chris knew Shane had to wake up twice in the middle of the night to wank off. He'd opened his eyes at a point during the night just in time to see Chris' tongue come out to lick his lips. Why Chris had to lick at his lips whilst still fast asleep, Shane would never know. But he'd gotten so hard when he'd instantly recalled what that tongue had done to his hole the very first time Chris had fucked him. Chris had done something so exquisite to his hole with that tongue it had made Shane's eyes water. Shane knew there was no way he could have gone back to sleep without relief. He'd rushed to the washroom and wanked off. It hadn't been what he craved but he had to make do. \n\nHe'd woken up again about three hours later with a dick that was so hard it was almost painful. And it was all because in his dream, he'd been having hot steamy sex with Chris. Shane was grateful he hadn't gotten a wet dream like some teenager. That would have been the ultimate disgrace. The past two days that they had Adele had been both fun and sexually frustrating as they'd both silently agreed not to have sex with Adele in the house. Now all Shane could think about was either fucking Chris' brains out or having Chris so deep inside him, they couldn't tell where Chris ended and he began. Thanks to his sexy boyfriend, he was now a sex addict. Great!\n\nWhen Shane heard his cell phone ringing, he quickly grabbed it and pressed the answer button as he didn't want it to disturb Adele. \"Hello Ma.\" He murmured whilst going out of the room and down the stairs.\n\n\"Hi honey.\" Came Sylvia Lewis' excited voice. \"Guess what?\"\n\nShane had to try very hard to suppress the groan that almost tore out of his throat. Whenever his mother started the guess game, unpleasant news followed. \"What is it Ma.\" Despite himself, Shane couldn't stop the smile that spread across his face.",
        "\"I've decided to come to L.A today instead of Thursday.\" Sylvia said excitedly. \"I've been able to finish all my meetings earlier than I thought I would. Well...I canceled some.\" She said in a whisper and laughed at her own smartness. \"I want to come and see to the preparations. I know both you and Lizzie are busy so it will be better if I come earlier.\"\n\n\"Ma, there's a party planner...\"\n\n\"What happened to proper old fashioned party preparation by the family, Nicolas Shane Lewis?\" Sylvia retorted, making Shane actually groan this time. That was all he needed...his mother making his situation with Chris even more worse. On the other hand... \"I'm coming and that's final. Lizzie said Adele is with you to enable her concentrate on her exams.\" Shane made a metal note to thank Lizzie for not telling his mother about Adele's injury. The woman would have been hysterical by now. \"Well, I'll be there today so that you can get the chance to concentrate on your work. I need to spend time with my granddaughter. How's Chris by the way?\"\n\n\"Chris is fine. Did you say you're coming today?\" Shane couldn't help the excitement that begun to bubble up within.\n\n\"Yes. I'll be there by six p.m. Want me to bring you anything?\"\n\n\"Just your sweet adorable self, Ma.\" Shane laughed. \"I can't wait to see you, Mrs. Lewis.\" Shane said knowing calling his mother that always made her laugh. \"Have a safe trip Ma.\" He hung up and started doing some silly dance steps. Hearing laughter, Shane turned around to find Abigail, the cook and Mrs. Smith, the housekeeper, looking at him with amusement. \"Sorry ladies. Mrs. Lewis will be coming today. Can you get her room ready please, Mrs. Smith?\"\n\n\"Sure Mr. Lewis.\" The housekeeper laughed and turned to go.\n\n\"Abigail...\"\n\n\"I know Sir.\" The cook grinned. \"I'll make sure we have all her favourite ingredients.\"\n\n\"Thanks.\" Shane said and raced up the stairs, busting to tell Chris the good news. \n\nHe couldn't wait to try out Chris' newly designed master bedroom, that night."
    ],
    "authorname": "adjoaq",
    "tags": [
        "restroom",
        "restaurant",
        "hospital",
        "cock-blocking"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/unbreakable-bond-ch-08"
}