{
    "title": "Flower Girl Ch. 08",
    "pages": [
        "The sunlight streaming through the clerestory window landed on Tracy where she lay reading on the bed. William sat drinking tea, pretending to read as well, but in reality he was studying her naked form. He delighted in the fact that she was comfortable enough with her own body to remain nude, although she complained about a thickening waistline. He could not yet perceive a change in her body. \n\nTracy lay on her belly, knees bent, feet in the air crossed at the ankle, while William allowed his eyes to move slowly over her pale skin, feeling like a voyeur as he took so much pleasure in through his eyes without her knowledge. She was up on her elbows, and her feet gently rocked back and forth, and he adored her rounded bottom and the two dimples above her butt cheeks. 'Dimples of Venus' had always been a favorite part of the female body and Tracy's were pronounced. He thought about how he loved to dig his two thumbs into those indentations when it occurred to him that she would not be able to lie on her belly much longer. His mind shifted to the baby growing inside of this beautiful woman on his bed and he smile at remembering his sister's reaction to the news; after the initial shock, she was thrilled. William felt the same way. \n\n\"What are you thinking about?\" Tracy asked, looking up from her book. \n\n\"Being a father.\" \n\nTracy rolled on to her side, giving William a frontal view. She wanted to ask how he was feeling about being a dad, but was afraid to hear the answer. She was still getting used to the idea herself and had contradictory emotions, so instead she asked, \"Are you going to tell your parents?\" \n\n\"Of course, but maybe not during this trip. I'll wait and see how things go. Besides, this visit is about Kate and the new baby.\" \n\nTracy nodded in agreement. They were booked on a flight to Chicago that afternoon and Kate was in surgery this morning, having a scheduled C-section. Tracy didn't like the idea of meeting William's parents and immediately hitting them with the news of her pregnancy. Besides, they would have the new baby Connor on their minds. \n\n\"Do you get nervous about flying?\" Tracy asked. \n\n\"Not at all. Do you?\" \n\n\"No. I prefer trains, but that has more to do with comfort.\" \n\n\"Yes, but it's only a two hour flight and our seats are in first class.\" \n\n\"Really?\" Tracy asked, \"Do you always fly first class?\" \n\n\"No, not usually. I just want to make sure you are comfortable. Especially in your condition.\" William answered. \n\nTracy replied, \"Come here, sweetheart.\" \n\nHe rose from his chair and went over to lie next to her, both on their sides looking at each other. \"You are really good to me, but coach would be just fine. I'm not a princess,\" she said as she lightly tickled the hair on his chest. \n\n\"Not a princess, but precious cargo. In fact, precious cargo carrying precious cargo,\" William's hand stroked her still-flat belly. \"Everything that matters to me is right here in this bed right now,\" he said, and rolled on to his back and pulled Tracy on top of him as his hands found their way to the 'dimples of Venus.' \n\n\"How much time do we have?\" Tracy asked. \n\n\"At least an hour before we even need to get ready.\" \n\n\"Good,\" Tracy laughed, \"Enough time to adhere to the two-to-one ratio.\" And she kissed and licked his lips, inviting his tongue to play with hers. \n\n* * * * * \n\n\"Were you able to get my stuff into a storage unit?\" Andy asked. \n\nVera hesitated before answering, \"No, not exactly.\" \n\nAndy didn't know what to say. It was a favor; she didn't owe him anything, but then again she said she would do it. Well, he wouldn't complain. It was mostly clothing since his wife took almost everything when they split up. Besides, he didn't want to trouble Vera. He already felt indebted to her and couldn't believe she made the long drive to come visit him again. \n\n\"Andy, it really wasn't much stuff. It seemed a waste to pay a storage facility when I have plenty of room at my place.\" \n\nAndy thought for a second, \"Oh, so do you want me to pay you to store my stuff?\" \n\n\"Ugh!\" Vera groaned, and then looked at Andy, exasperated that she had to spell it out for him, \"No, Andy! Don't you get it? You don't need to pay me to store your stuff for you! You don't ever have to pay me for anything ever again!\" \n\n\"Oh,\" Andy answered, trying to process what she was saying. Does that mean she wouldn't accept him as a client anymore? \n\nVera's face and voice both softened, \"Look Andy, I feel pretty guilty about you being in here. I mean I know it's not my fault, but if I'd known about your financial situation, I wouldn't have accepted your money.\" \n\n\"Yeah, but that's why I couldn't tell you. I didn't want to...\" Andy looked around to make sure no one was listening, \"I didn't want to stop being your client.\" \n\nVera looked down at the table, giving Andy a chance to admire her cleavage, and then she looked up at him and asked, \"Are you really dense enough to believe you're just a client to me?\" \n\nAndy hesitated, hoping not to reveal too much or blow it by making assumptions, \"Well...no...I mean, we are obviously friends, but even that surprises me. I still can't believe that you'd come all this way to visit. You've been a really good friend to me.\" \n\n\"I'm your 'good friend' then, Andy?\" then she whispered in a hissing tone, \"And do you want to fuck all your good friends?\" \n\nAndy flushed and turned red, \"Well no, Vera. I didn't mean...uh...well...I just don't want to make you uncomfortable?\" \n\n\"Too late, Andy. You made me horribly un-fucking-comfortable by going to jail. You made me horribly uncomfortable by making me have to deal with how much I miss you and how much you mean to me. I am uncomfortable Andy. I don't think I'll be completely comfortable until you are out of here.\" \n\nA warm feeling spread throughout Andy's body, starting in his chest and reaching all the way to the tips of his toes and his skull. Vera really did have feelings for him. He smiled at her, basking in the warmth of her statement, wishing he could feel the warmth of her arms and her mouth. But he could not, so he offered her the best condolence he could. \"Two more months, Vera. Two months and I'm outta' here and then I am gonna fuck you so hard I'm gonna rattle your fillings loose.\" \n\nVera threw her head back and laughed a big open-mouthed laugh, \"You better make good on that promise, Andy. You owe me. Big time.\" She winked at him, before she rose to go. \n\n* * * * * \n\nWilliam looked up from his reading, as he heard the announcement to fasten seat belts. They were about to land and Tracy was asleep with her head on his shoulder. \"Buckle up, Kitten. We are close to landing.\" \n\nTracy smiled with her eyes still closed and said, \"I dreamt we had a little boy, and he kept saying 'look mommy, look at me!' as he was running around on a grassy field.\" \n\nWilliam rubbed her cheek with his thumb. The thought of having a son with a healthy mom momentarily eclipsed the anxiety he was feeling about seeing his own mother. \n\nAfter a pleasantly uneventful landing and car rental, they were on the road, making their way to St. Charles, William's hometown. \"It feels wonderful to drive a car again,\" William said as soon as they were on the road. \"I don't miss driving, but when I do get behind the wheel it feels fantastic to be in control of the speed.\" \n\n\"We should take a road trip, sometime.\" Tracy said. \n\n\"I would love that. Maybe next summer we can drive across the country?\" \n\nTracy hesitated. She hated to be a killjoy, but she felt frustrated that he seemed to forget at times that she was pregnant. \"Um, well...there will be three of us next summer.\" \n\nWilliam nodded in agreement, silently considering that this would be his last summer not being a parent. Tracy went on, \"Maybe we could do something before the baby comes? Something shorter? It seems like too much with a newborn.\" \n\nWilliam remained silent for several minutes, and then asked Tracy the date the baby was expected. \n\n\"June 3<sup>rd</sup>.\" \n\n\"Wow.\" William was quiet again, which Tracy interpreted as disappointment. After a few minutes he broke the silence with, \"What do you think of taking a vacation in April? Perhaps you will not be comfortable enough for a long road trip, but we could fly somewhere and rent a car. I really wanted to visit that ghost town you are writing about. Isn't Bodie in Nevada?\" \n\nTracy looked at William and felt overcome with love for him at that moment, for she had erroneously assumed he was feeling negatively about how his life was changing without his control. \"Seriously, William? If you are trying to make me fall in love with you, it is too late. Being completely in love with you feels like the most certain thing in my rapidly changing life.\" \n\nWilliam glanced at her with surprise, not knowing what he had said to make her happy, but glad she was pleased. \n\n\"California,\" Tracy said, \"near Nevada, though.\" \n\n\"Ah, we should look at a map, but I would love to fly to San Francisco. I have always wanted to see that city and perhaps we could see Yosemite too.\" \n\n\"Oooo, that is perfect! I've studied the area and Reno and Sacramento are the closest airports, but I love your idea of seeing San Francisco.\" \n\nWilliam took his hand off the wheel to place it on Tracy's bare knee. They were getting close to the hospital and William had received a text stating that Kate and baby \"Connor\" were both doing well and the entire family was at the hospital. William told Tracy more about Kate, her husband and son, and about their parents. He tried to prepare Tracy, but admittedly he didn't know what his mom would say or how she would act. When they reached the hospital, William asked, \"Are you nervous?\" \n\n\"No. Should I be?\" \n\n\"No, no, of course not. Kate will love you, my dad loves everybody, and I hope my mother does not make you uncomfortable in any way.\" \n\n\"She's allowed, William. She has an illness.\" \n\nWilliam was quiet for a moment before saying, \"I am glad you understand that, Tracy. You will not have the normal satisfaction of meeting someone's mother and making a good impression based on merit. But I don't want you to feel ...\" \n\n\"Don't worry about me, William. I'll be fine.\" Tracy rested her hand on his leg reassuringly. William tried to relax as he parked the car, turned off the ignition, and opened the door for Tracy. \n\nKate's text told them what room to find her in, so they made their way without having to ask. As they exited the elevator and turned down the hallway, they spotted William's parents walking towards them. \"Hello, Mom, Dad.\" Tracy watched as William hugged first his mother then father, and then turned to introduce them. \"Mom, Dad, this is Tracy,\" and then gesturing to his parents, \"Tom and Lillian Travis.\" \n\n\"How nice to meet you,\" Tom Travis said, and immediately embraced Tracy in a bear hug. He was a thin man that looked like he swallowed a basketball, and he smelled like mouthwash. When he released her, she turned to Lillian who held out her hand. Tracy was surprised how attractive she was; she hadn't expected that for some reason. Tracy shook her hand as Lillian looking at her dress and not her face, and then she looked into Tracy's eyes and said with a knowing but friendly smirk, \"I knew you'd be wearing blue.\" \n\n\"Well,\" Tracy answered, not sure how to respond, \"I like blue.\" \n\nLillian rolled her eyes, and then with a less friendly grin whispered, \"Well of course you would say that.\" \n\nTracy looked at William, not sure what she should do, but Tom intervened with, \"Billy tells me you own a flower business! And that you write sexy novels too!\" \n\nWilliam cringed and Tracy was not sure why. Was it being called \"Billy\" or the sexy novel comment? \n\n\"Tom,\" Lillian whispered, \"I need to get home before dark. You can talk to them tomorrow, back at the house.\" \n\n\"Oh sure, sure. I'll bet you two are anxious to get in there and meet that precious baby! We'll see you two tomorrow back at the house.\" Tom patted William on the shoulder, \"Good to see you, son. Nice to meet you, Tracy.\" \n\nThey said good-bye and Tracy watched them walk down the hall. Lillian had a fast gate and Tom seemed to struggle to keep up with her. She looked at William who wore a stressed expression. \"That wasn't so bad, was it? Your dad was nice.\" \n\nWilliam shook his head slowly with dismay, \"Notice that dress she was wearing?\" \n\n\"Yes, it's pretty. Does she always dress so formal?\" \n\n\"I've never seen her in that dress, but I bought it for her almost ten years ago. I meant for her to have something appropriate to wear to my college graduation, but she didn't show up.\" \n\nTracy looked down for a second, and then asked, \"Did your dad go?\" \n\n\"No. He had stopped leaving her side by that point.\" \n\nTracy didn't answer with words, but with an embrace, and then whispered in his ear, \"I love you William. Let's go see Kate and meet Connor, okay?\" She released him and took his arm and they made their way to the room and knocked on the half-open door. \"Come on in,\" they heard as they were already entering. Kate was sitting up in bed with a bundle at her breasts. \n\n\"Will!\" She whispered loudly. \"Come give me a hug!\" William walked to the bed and embraced his sister on her side and kissed her forehead, being careful not to squish the baby, then backed up to have a look. \"So nice to meet you, Tracy,\" Kate held a hand out for Tracy who made the observation that she looked very much like a female version of William, with the same coloring and sharp handsome features with high cheek bones. On Kate, the features almost gave her a bird-like appearance, but even tired and without make-up, she was lovely. \n\n\"Did you see mom and dad?\" she asked, looking at William, \"Dad cried when he saw Connor and said 'Oh, he looks just like Billy!'\" \n\nWilliam smiled and looked at the baby again, \"Really? I can't even tell what he looks like yet.\" \n\n\"It's the hair. He has a bunch of hair like you did when you were born.\" Kate pulled aside the little beanie and Tracy made an involuntary cooing noise. \"You can hold him,\" Kate offered Tracy. \"He isn't nursing any more, he fell asleep.\" As she pulled the baby away, both Tracy and William leaned in to look at Connor's tiny face. William looked at Tracy and then looked back at Kate. \n\n\"He's beautiful, Kate.\" \n\n\"Sit down,\" Kate gestured to Tracy with her chin, then told William, \"Go ahead, take him.\" \n\nWilliam took the tiny bundle from Kate and held him close in his arms before taking the few steps to hand the bundle to Tracy, who cooed and smiled at the precious baby in her arms. \n\n\"Have you ever held a baby that young?\" Kate asked. \n\n\"Yes. My twin sister has a baby boy.\" \n\n\"Ah, and old pro, then.\" \n\nTracy nodded and continued smiling at the tiny sleeping face when William asked Kate, \"Where's Frank and Roger?\" \n\n\"Frank took him outside to run around for a bit, but I'm sure Frank wanted to get away from Mom.\" \n\n\"Was she difficult today?\" \n\n\"Not too bad. How was your flight?\" \n\n\"Pleasant.\" \n\n\"Hey, thanks for coming out and for helping Frank with Roger. He really appreciates it too.\" Kate said to both, then turning to Tracy, \"His mom and dad will be coming when I get out of the hospital. The baby and I need to stay here for two days because of the C-section. I can't even control my feet yet, it is such a weird sensation. Here, look.\" Her foot jerked under the covers. \"I tried to lift both feet. Isn't that weird?\" \n\nTracy glanced up in time to see Kate's foot jerk, but returned her gaze to baby Connor. \"Oooh, look William! Look how tiny his fingernails are!\" William leaned his head in next to Tracy's and both studied the baby, thinking the same thing but not speaking. \n\n\"Hey Will, would you mind going and getting Frank for me? Tracy can wait here.\" \n\n\"Sure,\" he excused himself, leaving the women alone with the baby. \n\n\"So,\" Kate wasted no time, \"You are pregnant.\" It was a statement, not a question, so Tracy nodded. \n\n\"That sure happened fast.\" \n\n\"It did.\" Tracy agreed, wondering what else she could possibly say. \n\nKate stared, waiting for Tracy to go on, but Tracy was in a rare predicament where she felt intimidated, so she continued to study the baby in her arms. \n\nKate broke the silence, \"You must understand how I feel. Just a few weeks ago, my brother was reiterating that he did not want children, then the woman he is newly in love with drops him without explanation, and the next phone call I get you two are madly in love and you're having his baby.\" Kate paused before adding in a serious tone, dragging out each word, \"Do not fuck with my brother's head.\" And then she smiled sweetly and asked for her baby back. \n\nTracy carefully carried Connor back to Kate's arms and sat back down. After a few moments of tense silence, Tracy spoke. \"Look Kate, it's obvious you and William are close and he's told you all about us. Hopefully he explained that I freaked out because I was completely shocked about being pregnant and not very happy about it at first. But I love William. I don't need him, I want him.\" \n\n\"He did say that,\" Kate smiled. \"But I wanted to hear it from you. Good job standing up to me, Tracy. You are going to need that kind of backbone to deal with our mother.\" \n\nTracy smiled in relief and hoped Kate hadn't notice her voice shake. \n\n* * * * * \n\n* * * * * \n\nAndy sat on his bunk re-reading the letter from Vera. Would he be an employee? It said she needed help with Victor and that she was only serving \"online customers\" these days. Room and board for taking care of Victor sounded like a good deal, but what would happen with Vera? Would they be roommates? How would it change their relationship? Well, he wasn't exactly sure what she meant, but the answer would be yes. He didn't know if Vera was just being kind or if she really did need his help, but he would not have any other prospects for employment or housing as a convicted felon. But either way, he would do anything for her, whatever the terms, even if it is just temporary. It wasn't just that he was indebted to her. As much as he had tried to prevent it from happening, Andy could no longer deny he was in love with Vera. \n\n* * * * * \n\nWilliam stopped reading and rolled over on the guest bed they were sharing and asked, \"Have you thought of a title?\" \n\n\"Well...I'm still not sure. It needs to reflect both stories and what they have in common is a john with a weekly appointment. It hasn't come to me yet.\" \n\n\"Hmmm. Kate likes you, by the way. But I knew she would.\" \n\n\"Really? I'm not so sure. She thinks I trapped you by getting pregnant.\" \n\nWilliam laughed, although Tracy didn't know what was funny, so she looked at him expectantly. \n\n\"Maybe I trapped you by getting you pregnant?\" \n\nTracy laughed and said, \"I don't feel trapped. I love you.\" \n\nWilliam stroked her hair with a flat palm and said, \"And I love you.\" \n\n\"Do you really think she likes me?\" \n\n\"She said so and she is very forthright with me. She can see that I am happy and that makes her happy.\" \n\n\"Yes...you do seem happy. You seem...to have accepted being a father?\" Tracy brought William's hand to her mouth and began nibbling his fingertips, taking his first two fingers into her mouth one at a time and sucking firmly. \n\n\"Accepted? That is an understatement. I am very pleased with this package deal, especially since it comes with a sweet sexy woman who happens to have an oral fixation.\" Tracy smiled between sucking William's fingertips, then took his forefinger deeper into her mouth. \"I've read that pregnancy hormones can increase a woman's sex drive,\" he added. \n\nTracy laughed, \"I'm pretty sure I'd be sucking your fingers if I wasn't pregnant.\" ",
        "\"And I'd be getting just as hard,\" he answered, as he pressed his member into her thigh emphasizing his point and removed his fingers from her mouth to kiss her. \n\nTracy pulled back and grinned before slithering down under the covers. Feeling William's two hands in her hair, she took him firmly in her hand and lowered her mouth deftly over him and heard him moan. No licking, no teasing, this time. Tracy went straight to deep thrusts, using her hand to squeeze him tightly. \"Fuck,\" he whispered. Was it an expletive or a command? Her other hand dug into his butt cheek and she was being unusually aggressive, taking him deep and fast into her mouth, time and time again. Then she suddenly stopped, loosened her grip, and lightly twirled her tongue around the tip of his cock, tasting the salty precum that she milked out of him. Then she covered her teeth with her lips, made a big \"O\" before lowering her mouth back down on him again. Her tongue applied extra pressure along the underside of his shaft over and over with each dip of her mouth. \n\n\"Come here,\" William reached under her arms and pulled her back up, \"I want to taste your mouth.\" \n\n\"What?\" Tracy asked, but offered up her mouth. \"You'd rather have my mouth way up here?\" \n\n\"I'm lacking my usual patience,\" William whispered. \"I've been craving your pussy all day.\" \n\n\"Oh my,\" Tracy purred as William rolled on top of her and kissed her neck while exploring between her legs with his hand. \"What about Frank? Will he hear us?\" \n\n\"I'll muffle your screams,\" William whispered, causing Tracy to laugh at his unusual playfulness. She felt him position his cock at her entrance and felt the head part her lips as he rubbed it back and forth along her slit. Tracy wiggled from below, her own craving reaching torturous levels, until she felt him press into her fully, filling her completely with his cock and she muttered without thinking, \"I love your cock inside me.\" \n\n\"Mmmmm, not as much as I do,\" William whispered as he ground his hips side to side without pulling back. \n\nTracy gulped and began sucking the skin on his shoulder so she wouldn't cry out, for he was doing that thing that he did, rubbing her in just the right spot, seeming more mindful of making her feel good than worrying about himself. That is when she realized he wasn't just trying to impress her, that her pleasure actually was his pleasure and that this wasn't going to go away. She sucked on his skin, tasting the saltiness. She wanted to let him know how amazing he felt, but was mindful that only a thin wall separated them from his brother-in-law. William began deep thrusts and the bed made a squeaky noise and the headboard pounded the wall, \"William? Can we move to the floor?\" \n\nWilliam let out a low laugh and whispered, \"If you'd be more comfortable.\" And he tossed the pillows on the floor and pulled out long enough for her to relocate, then mounted her again and slid back to the warm void where he was sorely missed after a momentary absence. His cock made such a satisfying return that an involuntary moan escaped her lips. \n\nWilliam's hand found its way to her breast and the massaging interspersed with intense pressure on her pubic bone triggered a trembling deep within her. She had to bite and suck his shoulder to keep from crying out. Her hips bucked and she wrapped her legs around his for leverage. Her hips lifted slightly off the ground as she rubbed herself into him, enjoying the motion of the circular grinding that was rubbing her so sweetly. She raised a foot even higher, bringing it behind his butt and holding her own ankle, giving him even greater access to grind himself deep inside her. Tracy continued to suck his skin, as the rubbing on her clit and intermittent pulsating pinch of a nipple was more than enough to spark the spasms of orgasmic bliss. William responded by mumbling in her ear, at times incoherently, but she heard mutterings of \"love, sweet, sexy, so good...mmmm...ah...my, love, baby...mmm...yes, oh god, ...ahh.\" His moans of endearment overwhelmed her, as did the taste of skin, and the rotating plunging motion - she was seeing flashes of color through her eyes closed. The shuddering of her walls triggered him and they joined together in a sweet, long, orgasm that crashed like waves over and over, leaving both panting with ecstasy. \n\nWilliam leaned up on his elbows to kiss her face and was surprised to feel the wetness of tears on her face. \"Are you okay? Did I hurt you?\" He panicked. \n\n\"No, no, I'm not hurt. Just feeling overwhelmed at how much I love you.\" \n\nWilliam sighed in relief and kissed her wet cheeks. \n\n\"I feel so vulnerable William, I'm really scared. I hate feeling needy, but I feel like I really do need you so bad.\" \n\nWilliam stopped kissing her to look in her eyes and answered, \"That's the sweetest thing you've ever said to me. I want to feel needed.\" \n\n\"Really? I thought guys were repulsed by needy women?\" \n\n\"You are far from needy, Tracy. In fact, you are incredibly independent, which attracts me, but also keeps me at a distance. I want to be your solace, your safe haven, the person you don't need to be strong in front of. I've tasted your vulnerability when we make love and it's beautiful, but I want more. I want you to trust me and love me with reckless abandon.\" \n\n\"I'm scared. I feel like I am jumping off a cliff.\" \n\n\"Hold my hand. I'm jumping too,\" William answered and kissed her lips, then leaned up to look at her face. Her eyes were half closed and a contented smile rested on her lips, then her eyes widened and she looked horrified. \n\n\"Oh crap. William!\" she whispered, still mindful of Frank in the other room. \"I gave you a hickey! Oh my god, I am so sorry!\" \n\nWilliam laughed and assured her he didn't mind, that he enjoyed getting it. \n\n\"But your parents! Get up. We need to do the cold spoon trick.\" \n\nWilliam reluctantly crawled off Tracy and the pile of pillows on the floor and helped Tracy up. They both dressed and tip toed into the kitchen, where Tracy found a spoon, put it in the freezer, then turned to assess the damage. It was near the collar, probably possible to hide with makeup if he allowed her. \n\n\"Hey,\" Frank stood in the doorway looking disheveled in a t-shirt and boxer shorts. \n\n\"Oh, sorry. Did we wake you?\" William asked. \n\n\"Nah, heard my name being called.\" \n\n\"Roger?\" Tracy asked. \n\n\"Chips Ahoy,\" Frank answered, reaching up to a high shelf in the cabinet and withdrawing a pack of cookies, then looking at William said, \"When the cat's away, the mouse will have refined sugar, saturated fat, and white flour. You two hungry?\" \n\nWilliam and Tracy both shook their heads and William said, \"We are trying to minimize the hickey this little minx left on my neck.\" \n\nFrank looked at Tracy and said, \"What, are you in high school?\" But he was smiling and William had warned her that he liked to joke around, so Tracy teased back. \n\n\"If I were, he'd have a whole necklace in addition to my initials on his butt cheeks. This little mark is just the result of trying to stay quiet during the throes of passion.\" \n\nFrank laughed, then glanced at William and said, \"Lucky,\" while shaking his head. \"Sure you don't want to join me?\" Frank gestured to the pack of cookies and milk on the table. \n\n\"I'll have a cookie,\" Tracy offered and William did too. \n\n\"Good, I hate to party alone.\" \n\nTracy stood to get the spoon out of the freezer and told William to hold it as she placed the flat part on the hickey. \"Boy, your parents are going to think...\" \n\n\"Tom will think you're lucky,\" Frank interrupted, \"Who knows what Lillian will think?\" \n\n\"Who knows,\" William agreed. \n\n\"But I'm hoping they don't see it,\" Tracy added. \n\n\"I am a grown man,\" William reminded her. \n\n\"I'm not worried about what they think of you. I don't want them to think I'm a neck-sucking-pregnant-whore.\" \n\n\"Aren't you?\" Frank laughed. \n\nTracy glared at Frank with mock-anger, but couldn't help laughing. She liked a guy who had the confidence to make fun of her. \"Yeah. Pretty much. But a one-man-whore.\" \n\nFrank laughed and called William 'lucky' for the second time, while Tracy pulled the spoon away to assess the damage and shook her head, mad at herself for leaving a mark on him, but the smile on William's face told her he couldn't care less. \n\n* * * * * \n\nTracy sat on the couch trying not to let her eyes wander around too much, feeling like she was in a museum of freakish clutter. William sat very erect at her side and periodically took deep breaths. Her nausea had returned and there was an unusual smell she could not name, coupled with an empty stomach. \n\nLillian wore red from head to toe and behaved friendly and cheerful, despite the chaotic surroundings. There was barely room to sit on the couch due an abundance of throw pillows. Stacks of books, boxes, an easel, a sewing machine, an ironing board, a cabinet of trophies, and a tray of sea shells were caught by her discreet visual sweep of the room. \"Do you paint?\" she asked. \n\n\"I haven't in years, but I like to be prepared when the muse hits.\" \n\n\"And you sew too?\" \n\n\"Yes, when I have time.\" \n\nTom smiled with his teeth slightly parted. He seemed eager in a friendly, canine manner and William finally seemed to relax some and sat back on the couch. \"Can I show you Billy's trophies?\" \n\n\"Sure,\" Tracy answered, and heard an audible groan from William. \n\n\"Billy was an amazing ball player. Did you know he got a scholarship?\" \n\n\"Yes, I did in fact.\" Tracy looked into the case full of trophies etched with the name William Travis. She was trying to ignore her increasing queasiness and asked Tom, \"Did you play baseball yourself?\" \n\nTom smiled widely, looking delighted as he answered, \"I did! But I was never as good as Billy. I'll tell you, that boy was a natural!\" \n\n\"I bet he's still great,\" Tracy smiled towards William, who did not look horribly uncomfortable any longer. \"I haven't seen him play yet, but he said I can go to his next game!\" \n\n\"He gets nervous when people watch him,\" Lillian spoke up. \"It's best not to let him know you are there.\" \n\nTracy looked back at William as she absorbed another implication of what it must have been like for him growing up. Suddenly William spoke up, \"Mom, Dad, I have some news for you. Tracy's pregnant. She's having my baby.\" \n\nTom's face morphed into wonderment as he looked back and forth from William to Tracy, his bloodshot eyes filling with tears, then he hugged Tracy and stepped over three boxes to hug William. Tracy glanced at Lillian and noted that her expression hadn't changed. \n\n\"Lillian, honey - isn't this amazing, sweetheart?\" \n\nLillian shook her head dismissively and whispered to Tom, \"It isn't true.\" \n\nEveryone got quiet and looked at Lillian who looked innocent and nonchalant, until Tom said to Lillian, \"Well sweetheart, I ...I...I think it is true. If Billy says-\" \n\nLillian put her hand up and shook her head again, with scrunched up lips and eyes closed, then she looked at Tracy and said, \"She's not pregnant.\" \n\n\"I am. Nine weeks.\" \n\nLillian shook her head but was smiling now, \"You may have fooled them.\" \n\nWilliam spoke up, \"Mom, this is serious. Tracy is pregnant. She may not look it yet, but soon it will be undeniable.\" William glanced at Tracy who wore a horrified expression, \"Tracy -\" \n\n\"I'm going to throw up,\" Tracy warned. \n\n\"This way!\" Tom gestured to a hallway and a closed door. Tracy had to crawl over boxes and a stack of books and squeeze by a chair in the hallway to get to the bathroom and barely raised the lid on the toilet in time, and then sank down and sat on the floor. \n\n\"Are you okay?\" William asked from the open doorway. \n\n\"I puked,\" Tracy answered. \"I shouldn't have gone that long without eating, and there was a funny smell and...I'm sorry William.\" \n\n\"Sorry?\" William came and sat on the floor next to her, \"for getting nauseous?\" \n\nTracy shrugged and William said, \"Tracy, look at this bathroom.\" Tracy looked around at the tiny cluttered room. Every inch of the wall was papered in magazine articles. \"Look at this,\" William pulled the shower curtain back, revealing stacks of boxes inside the bathtub. And then Tracy laughed, she couldn't help it. It suddenly seemed hilarious that she apologized for puking, and to her surprise, William joined in. \n\n\"You've just given us a brilliant excuse to leave. Thank you.\" \n\n\"Ugh...I'm going to need some water and crackers.\" \n\n\"There is a convenience store nearby. Are you okay now?\" \n\n\"Yes. I'm okay now,\" Tracy laughed, shaking her head at the absurdity of the cluttered room. She rinsed her mouth and got out of the claustrophobic bathroom, with William helping her navigate through the obstacle course. \n\nAfter explaining to his parents that Tracy had morning sickness and needed to go lie down, Tom hugged her again and congratulated her and told William to take good care of her. Lillian whispered to Tracy, \"Kate used to throw up too. She wasn't pregnant either.\" She smiled, knowingly, and said goodbye. \n\nAs they walked to the car, William got another laugh out of Tracy by pointing out, \"No one even noticed my hickey!\" \n\n* * * * * \n\nWilliam didn't mind being back at work on Monday, among the smell of books, the predictable clientele, the clear pathway to the restroom. He had some time before a meeting so he checked his email and opened the one from Tracy first. \n\nW - \n\nI found the card you snuck in my suitcase when I unpacked this morning. It made me so happy to hear you think I am beautiful, I actually cried. You might think I am hormonal and that may be true too, but I am so very happy that we still get to have a romance. \n\nLove, Tracy \n\nWilliam sat at his desk and wondered what she meant, \"still get to have a romance.\" He shook his head, pondering how woman could be so confusing. Why wouldn't they have a romance? He gathered that it was because she was pregnant, but he still didn't understand why she would expect the romance to stop. Should he ask? Did he want to know? He realized he did, so he responded. \n\nT- \n\nI know I am socially inept at times, but could you explain why you wouldn't expect us to be romantic? Isn't that normal for two people who are newly in love? \n\nWilliam \n\nWilliam answered the work related email and helped a patron before reading her response. \n\nWilliam - \n\nWe are not normal! We are pregnant. We discussed baby names in the same conversation where we learned each other's middle names! We have so many serious and frightening conversations ahead of us about practical matters that are not fun or sexy. It was very nice to get a card that is just you and me. \n\nLove, Tracy \n\nWilliam got uncomfortable for a moment, and then realized it is true. They are still getting to know each other while being faced with big decisions and Tracy is frightened. Her two biggest concerns seem to be being taken for granted or worrying that he felt stuck with her. Now she worries about missing out on romance needlessly? He only had a few minutes before his meeting, but he knew he wanted to answer right away. He felt really pleased with himself that he actually figured out how to handle her. Tracy was either going to need either constant reassuring or humor, and he certainly preferred the latter. \n\nT- \n\nI want to lick your pussy while we set up a college fund for Jr. \n\n-W \n\nHer one line response assured that he nailed it, \"Omg, I love you.\" \n\n***** \n\nPlease vote or comment, I really appreciate your input. Also - I need to thank my pre-readers Yoshimatsu and Gaius Petronius for pushing me to write this chapter when I got lazy and thought I was done. This story would have been so incomplete without this chapter and I am really grateful for their help. There is one more chapter left."
    ],
    "authorname": "DonnaBeck",
    "tags": [
        "love",
        "romantic sex",
        "pregnancy",
        "felatio",
        "oral sex",
        "novel",
        "romantic novella"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/flower-girl-ch-08"
}