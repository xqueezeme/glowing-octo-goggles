{
    "title": "You're Not a Serial Rapist Ch. 10",
    "pages": [
        "End of January. The quarter was moving way too quickly. Kathy and I each knowing that the middle of March would be here soon. We tried to bury that fact in the back of our minds.\n\nIt was cold, even for southern Illinois. The three of us would meet in the Library every night, find a quiet corner away from others so I could help Valerie on her two problem classes. She was doing good, bordering on a 'B'. She was happy.\n\nDuring a break in the studying, I had a thought.\n\n\"Val. Remember last winter when we organized a pool volleyball night, at the university's swimming, pool with some of the girls from your floor and guys from my dorm?\"\n\n\"Yeah. That was fun.\"\n\nKathy looked at us like she didn't know what we were talking about. I explained the whole open pool thing.\n\n\"I never knew about that. It sounds like fun. Especially now in the cold. A nice warm pool, even if it does smell like chlorine.\"\n\n\"Yeah. For some reason, it's not well known.\"\n\nLooking at Valerie first, \"Do you think Marsha and Terri would be interested?\"\n\nThen Kathy, as I asked, \"What about Alex? Maybe others on your floor? I'm sure my two roommates would be interested.\"\n\nValerie chuckled and grinned, \"You just was to see a bunch of girls in bikinis.\"\n\nI looked back, grinning, \"And your point is.\"\n\nShaking her head, \"Guys are all pigs. You show em a little skin and they're like putty in your hand.\"\n\n\"Well, there would only be two that I would be imagining topless,\" Recalling images of a topless sunbathing afternoon.\n\nValerie recalling that afternoon, \"That was fun,\" sighing, \"I don't know if I'll ever be able to experience that again.\"\n\nKathy looked over at me and gave a coy grin. We each had the same thought... once we get settled... check out a nudist resort... then see if Valerie would be interested in expanding her topless experience.\n\n...................................\n\nThe roommates were all on board. Kathy got a couple of other girls that were interested. Boomer and Ken were into it too, especially at the mention that Alex and Valerie were going to be there. Ken remembered the time us guys at the dorm went to the pool from last year. It was news to Boomer. Boomer called some of his friends and got more interested... mostly guys, but a couple of girls. It was going to be quite a group.\n\nIt was quite a mixture. All just average guys and gals. I do have to admit... Kathy, Valerie, Alex, and Terri stood out. All the girls wore two piece. Some modest. Some smaller and sexy. Marsha had the biggest boobs, with a lot of 'boob flesh' spilling over her top. Kathy wore the modest two piece that I had first seen her in the previous summer. When I saw her, she whispered in my ear, \"The red bikini is for your eyes only,\" as she kissed my cheek.\n\nI had Valerie on one side of me and Kathy on the other as we formed teams. Ken and Boomer were on our team as were Alex and Terri.\n\nIt was fun. I would occasionally lift Kathy by her waist up to take a swing at a high ball over the net. I would do the same with Valeri and Alex. My trailer mates took notice of the physical contact I made with all three. Kathy, they weren't surprised. But when I did the same thing to Valerie and Alex they each were a bit surprised. I didn't care.\n\nAfter volleyball, there were games of 'chicken fights'. Girls on the shoulder of guys trying to knock each other over. What made the whole thing fun, was that none of the girls were worried about getting their hair wet, or makeup messed up. I mean they were in a pool.\n\nThey chased us out of the pool at 9:00. Boomer's friends thanked us for letting them join us as did Kathy's floor friends and they headed back. We hung back in the warmth of the lobby, deciding what to do with the rest of the evening. It was either the girl's apartment or our trailer. The girls were more comfortable at their place.\n\nAfter driving to the liquor store... Boomer, Alex, Ken, and Valerie in Boomer's car, the rest with me, we returned to the girl's apartment. They all disappeared for a bit to do girls stuff... dry hair... touchup makeup... more comfortable clothes.\n\nIt was us guys in the kitchen area sucking on some beers.\n\n\"I can't believe how comfortable Valerie and Alex were with you picking them up around the waist. I mean you have Kathy. And she was fine with it. She even seemed to enjoy watching you guys,\" Boomer quietly said.\n\n\"Yeah. I can't imagine Jess putting up with that, if she was still around,\" Ken added.\n\n\"Yeah. I've got Kathy. You both know that I'm leaving at the end of the quarter, but will be back for the graduation ceremony,\" they both nodded. \"What I haven't told you, is that soon after graduation, Kathy will be coming up north... we'll be living together.\"\n\nThey both looked at me in surprise. As I went on.\n\n\"Valerie and I have a special friendship, since the beginning of last year. Kathy knows that, and is fine with it. They're friends too. Staying over at Kathy's room sometimes has brought a bit of familiarity between Alex and myself. Again, Kathy's fine with that also.\"\n\n\"Living together. What do yours and her parents think about that?\"\n\n\"Mine aren't nuts about it, but know we would do it anyway. They're already referring to Kathy as their future daughter-in-law. Hers are OK, knowing that I will be their future son-in-law.\"\n\n\"Wow. You guys really have a future planned out.\"\n\n\"Not really. Just some basics. Hey Boomer. We might even be close to you.\"\n\nJust then the girls returned. Hair all dry. New makeup. Comfy clothes. No bras (it wasn't real noticeable, but if you were to look real close you could tell). Again, Boomer and Ken were amazed at the girls comfort level.\n\nIt was fun. We alternated between just hanging out. I saw Alex and Boomer doing a slow dance. Ken and Valerie hung out. The four of them getting into a game of Hearts. Kathy and I hung out with the rest of the girls.\n\nKathy again spent the night in my warm bed. Each of us basking in the afterglow. Each of us warmed by the closeness and love we shared. Who needs pajamas?\n\n......................................\n\nSecond week in February, Valerie and Kathy were meeting for their mid-week get-together at the Student Center. Even though they saw each other during our study time, this was their alone time... 'girl talk' time.\n\nKathy noticed that Valerie acted like there was something on her mind. She knew that Valerie and Ken had started seeing each other and wondered if there was something she needed to talk about.\n\n\"Kath. Remember that art class I took last year? The one that I drew Bill?\"\n\n\"Yeah. You want to use him again?\" she grinned.\n\n\"Well, kind of.\"\n\n\"What do you mean, 'kind of'?\"\n\n\"Well, we're still drawing nudes. I've gone to all the labs, so that isn't a problem. The topic for the last few classes and latest assignment has me wondering,\" Kathy kept quiet as she let her friend gather her thoughts.\n\n\"We've been studying how to bring emotion and passion into our sketches. The models that have been at the lab have been couples. The problem is... there's no emotion between them, in my opinion. How can you draw something when it's not there?\"\n\n\"Have you talked about this with your instructor? I mean, I'm sure others in your class have noticed the same thing.\"\n\n\"Actually, I think I'm the only one with this problem. I've talked to him, and he just says that since nobody else has expressed the same concern that it must be me, as he hasn't noticed it between the models. I mean, I watch the couples, looking for a spark... a look, letting me know they're into each other. They embrace. They kiss. But there's nothing. I think they are just two random people, and not boyfriend and girlfriend. When they separate, the guy's not even hard. What does that tell you?\"\n\n\"That they're not boyfriend and girlfriend. Val, are you suggesting what I think you're suggesting...? That Bill and I pose for you like we're making love?\"\n\nValerie looks at her friend with a soft, \"Yeah. I mean. I've never seen two people so in love.\"\n\nKathy thinks about it for a moment, and then with an encouraging smile, \"Val, you know I'd do anything for you. Bill would do anything for you. We'd do anything for you. When do you want to do it?\"\n\nValerie's face lightens up, \"Saturday night?\"\n\n\"OK. Let me talk to Bill. I've got a couple of ideas. Don't say anything tonight. I'll talk to him after our study session.\"\n\n\"Thanks Kath,\" they stand and hug.\n\n..........................................\n\nPulling into the parking lot by Kathy's dorm, \"Bill, let's sit here for a few minutes. I've got to ask you something.\"\n\nThe alerts started to go off. Kathy had never asked that. It was like those four words guys hate, \"We need to talk\". Those 'alerts' were quickly quelled, as she scooted closer and went over the conversation she had with Valerie.\n\n\"So, what do you have in mind?\" I asked.\n\n\"Well, I was thinking of posing in 'Our love making position'... you making love to my nipple...complete with having you inside of me.\"\n\nMy dick twitched at both the sight, and the fact that Valerie would be only a few feet away.\n\n\"Sounds like fun,\" as I kissed her soft lips, her eyes gleaming.\n\nThe next night, Thursday, after our studying is done.\n\n\"Val, Bill and I would be pleased to pose for you, as we make love.\"\n\nIt was a good thing we were alone in a quiet section of the library as Valerie let out a loud, \"Oh my!! Thank you,\" as she stood to hug and kiss each of us.\n\nKathy went on to explain her idea for the pose. Leaving out the fact that we would be joined; but, knew that once Valerie saw us, she would know. Adding to the emotion and passion of the scene she would be recreating on paper.\n\n.............................................\n\nKathy and I spent Friday night in my bed; but, decided to save our love making for the following night. Not that we needed to save our passion for each other. Just thought it would add to the moment.\n\nValerie gave each of us a huge hug and kiss as we stepped into the apartment. Her roommates were out, but it was decided to do this on Valerie's' bed, as it the most comfortable for us. She left us alone for a few moments as we 'got ready'.\n\n\"Let me know when you're ready,\" Valerie gave us each a grin as she left the room. The radio playing softly in the background.\n\nWe decided this wasn't going to be a 'strip and mount' thing. We wanted to build our passion and emotions. To build a hunger... a longing.\n\nOur lips devoured each other. Tenderly, then passionately. My lips moved to her long smooth neck. I nibbled on the loose flesh. Kathy had worn a button down top... no bra, of course. My lips followed my fingers down her chest as each button was freed and new smooth flesh was exposed. Pushing the top off, my eyes took in my topless girlfriend.\n\n\"This never gets old,\" I grinned.\n\nAs I kissed each hardening nipple I could feel the vibrations of her purring.\n\n\"No, it never does. That I watch you gaze, and appreciate, my little boobs each time you see them is like the first time. It's one of the reasons I love you so much.\"\n\nHer hands moved to unbutton my shirt, which was soon alongside her discarded blouse. We embraced. Her warm bare chest against mine as she rubbed her erect nipples against my chest.\n\n\"I love feeling my nipples move through this soft sexy hair,\" as I stroked her back.\n\n\"Come on... time for me to see all of you,\" I said softly as I kissed her lips.\n\nSitting on the bed, I undid the snap and belt of her jeans. The panties and jeans came down together as my hands moved down her hips and smooth thighs. The soft honey blonde forest came into view, as she stepped out of her jeans and panties and kicked them aside. I reverently planted a kiss directly in the center of that soft wispy fur, and breathed in her scent. Her arousal was building.\n\nLeaning back, I once again took in my totally nude girlfriend, as she struck the \"Pose' with a sultry smile. My dick throbbed inside my tightening shorts.\n\nNot saying a word, we switched. Kathy's hand firmly moving over my hidden length. Giving my balls a gentle squeeze through the rough denim.\n\nI watched as she unbuckled, unzipped, and slid my jeans a shorts down my legs. My hard dick springing free from its confinement.\n\nShe licked her lips. \"I'll never get tired of seeing this big guy,\" as her cool hands gently cradled my smooth scrotum and reverently kissed the sensitive tip.\n\nWe stood, embraced, and kissed... longingly and tenderly. Letting our passion for each other build. My length fitting snugly between her soft inner thighs.\n\n\"I love you Bill, my love.\"\n\n\"I love you Kathy, my love.\"\n\nWe decided I would wear a condom. Not only to keep any accidental release from messing up Valerie's bed, even though we would be sitting on a couple of towels, but we thought it would help keep me hard. Kathy wanted me hard the whole time. Said she had some ideas on how to accomplish that. That last comment was said with a shit eating grin.\n\nValerie entered the room. I heard her gasp as she took in our pose. I instantly knew that she knew we were joined.\n\nKathy was sitting on my lap facing me, my legs crossed, with her legs wrapped around my hips, in our Lotus position. I was sitting up holding her against me. Her firm warm breasts against my chest. Her soft wet lips kissing the top of my scrotum. I was as deep inside of her as I could get.\n\nWe never considered ourselves as exhibitionists; but, here we were, my hard cock completely inside the love of my life. In front of our mutual friend. I throbbed. Kathy grinned and squeezed me, as she was having the same thought.\n\nValerie took up a position to the side and slightly behind us.\n\n\"How's this, Kathy asked?\"\n\nShe leaned back and turned slightly, offering me her right nipple. Her small left breast and rigid nipple completely exposed. Her right hand casually resting on the back of my neck. Her head back, tilted, her long supple neck extended with her left hand behind her head, creating the effect of raising, and tightening Kathy's exposed little breast. Eyes closed with a gentle upturned smile.\n\nMy right hand rested at the base of her soft exposed breast. My thumb and fingers spread apart so as to 'frame' the delicate morsel. The moment my tongue made contact with her engorged nipple Kathy took in a complete lungful of air. I also heard a hushed 'oh my' from our left.\n\nSilence.\n\n\"Val... you still here?\"\n\nWe heard Valerie exhale deeply, \"Yeah, I'm here,\" she said in a soft voice, \"Just taking in you guys. I've never seen, or felt, anything like this,\" as she felt herself 'stir' below at the pure passion and raw emotions she was witnessing and feeling. \"That's perfect. My god it's so perfect,\" her voice almost a whisper.\n\n\"Val, I think that the artist should at least be topless for this,\" Kathy said as she sat up, and breaking the contact at her nipple, \"To feel our energy... our passion... our love.\"\n\nValerie was behind me, but I heard the rustle of clothing. I could only watch Kathy as she smiled contently, before settling back into our pose.\n\nFor the next hour, or so, the only words spoken were when Valerie said we could relax from our pose, and then to resume. And by 'relaxing' it meant that I would give Kathy's neglected nipple some deserved attention. When we would resume our pose. I swear I could hear Valerie let out a soft 'oh my' as she watched me slowly pull back on Kathy's extended nipple, as it popped out from between my lips, glistening with my saliva.\n\nKathy kept me hard. We were having fun. She would squeeze me. Slightly rock her hips back and forth to rub the tip of my hardness against her cervix. I don't think Valerie picked up on that motion. I suspected that she was full 'Artist' mode.\n\nAt times, I could feel the walls of her love tunnel constricting all along my length, as if 'milking' me. I don't know how she did that, but it felt exquisite.\n\nA couple of times, Kathy's breathing labored and her body stiffened. I was certain that 'nipple orgasms' had raced through her body, as my tongue and lips made love to that sensitive rigid gumdrop. Those motions I was sure Valerie noticed, as I heard another 'oh my'.\n\n\"I think I've got enough that I can finish on my own. Besides, you guys are probably getting tired and stiff from sitting there.\"\n\n\"Don't stop because of us,\" Kathy said, \"Besides, there's only one thing here that's stiff,\" she giggled and squeezed me. I could hear the little giggle from behind me.\n\n\"OK. Give me a few more minutes.\"\n\nKathy and I continued our 'play' for the next fifteen minutes, or so.\n\n\"OK. I've got it.\"\n\nValerie stood and walked over so we could see her sketch.\n\nValerie was wearing panties... and only panties... light blue cotton bikini panties with little yellow roses. The faint shadow of her underlying dark brown bush just barely visible, but there all the same. My dick throbbed. Kathy smiled and squeezed me.\n\nThe sketch was incredible. The detail. Kathy's little mound and pointed nipple. The expression on her face was one of complete bliss... and that smile. She was in complete heaven, oblivious to the world. In her own realm of pleasure and love.\n\n\"Wow Val. That's beautiful. So lifelike. It's strange to see myself from that angle. I love it. You captured us,\" Kathy's voice cracking.\n\n\"Val, that is so outstanding. I mean the one you of me before... this is on another level.\"\n\n\"Thanks you two. I couldn't have done it without having two close friends. And Bill, you sound like an engineer,\" as she leaned in to kiss my cheek.\n\n\"I'll leave so you guys can... can do whatever you want.\"\n\n\"Val, put your sketch down and come back here,\" Kathy said softly. I wondered what was up.\n\nValerie returned. Standing to our side. Her creamy white B cup breasts, the caramel colored areola and engorged pink nipples at my eye level. And then there was that scent. A sweet musky scent that I had never noticed before... Valerie's unique scent. She was as turned on as we were.\n\nI watched as they both looked intently into each other's eyes. Kathy reached up to gently... lovingly stroke her friend's face. Taking her chin, Kathy guided Valerie's lips to her own, as they met in a prolonged 'friends' kiss.\n\n\"I love you Valerie.\"\n\n\"I love you Kathy.\"\n\n\"Val, you can go... or you can stay... I would like it if you stayed. Join with us,\" Valerie's eyes went wide, \"No, not that kind of joining,\" at least not yet thought Kathy.\n\n\"Bill, touch her breasts. Kiss her nipples.\"\n\nWe both pulled back and looked at Kathy in surprise.\n\nHer voice soft and tender, \"Go ahead... Kiss em. Kiss em like you kiss mine. Like I know you've kissed em before. Like I know you know how she likes it. Val, you OK with that?\"\n\nValerie and I exchanged looks, before turning to Kathy with looks of confusion.\n\n\"I have two wonderful and dear friends. One, who happens to be the love of my life,\" kissing my cheek. \"The other, my very best girlfriend. Who without her... none of this would be happening,\" her voice cracking as tears were welling up in both Kathy and Valerie's eyes. Mine were close.\n\n\"Val, you have given me a gift. A gift I can never repay you for,\" As Kathy lightly kisses my cheek. \"And no, this is not some kind of 'repayment'. You two have a special relationship that I have never seen before. You'll always be friends. Val, I want you to share in our love... our connection,\" as she looks over at me and again kisses my cheek. \"I want Bill's tongue and lips on your breasts and nipples while he's inside of me. That our bond will flow into you through your sensitive nipples. Does that make any sense?\"\n\nValerie and Kathy's lips met in another 'friends' kiss. Then Valerie's and mine met in a more than 'friends' kiss. Our tongues reacquainted themselves, as we tasted each other. My right hand reached up to gently stroke her smooth bare back, just above the top of her panties. Kathy had her hand on Valerie's upper back gently stroking. My left hand sat on Kathy's smooth upper thigh. Valerie's left hand resting on my shoulder.",
        "We pulled back a bit. Our eyes locked as I melted into her soft brown eyes. A gentle approving smile appeared. My hand left the small of her back to gently trace a line from below her ear, along her jaw, to brush against her soft lips. Valerie opened her mouth to suck on my index finger, and bathe it with her soft tongue.\n\nI leaned in to kiss the open valley between her soft breasts. She closed her eyes as my slickened finger traced circles around the base of her left nipple before gliding over the hardened nub itself. Valerie let out a gasp of pleasure as she inhaled a lungful of air. Her left hand now behind my head, combing through my hair... pulling me into her.\n\nI engulfed as much of the supple flesh as I could, my tongue moving over the ever hardening nipple. Valerie gasped again, this time with a slight whimper. I throbbed inside the love of my life. She squeezed me. Her hand always present on my upper bare back. Valerie's right hand moving to cup Kathy's breast. Her fingers tightening around the aroused nipple as Kathy's placed her hand on top of Valerie's pulling her friend's hand into her own breast, their lips meeting in a longing kiss.\n\nTheir lips still pressed together, Valerie turned to offer her other nipple for my attention. Her breathing intensifying as she continued to roll Kathy's nipple. I could feel the walls of Kathy's vagina contract around my entire length as she let out sharp cries as her body jolted.\n\nSuddenly, Valerie's whole body shook and jolted like quick electric shocks had been applied. Sharp cries of pleasure echoed in her room.\n\nLater, as breathing returned to normal for all three of us. Kathy and I kissed deeply. Valerie and Kathy kissed lovingly. Valerie and I kissed slowly and tenderly.\n\n\"I love you Bill.\"\n\n\"I love you Valerie.\"\n\n\"I love you Kathy.\"\n\n\"I love you Valerie.\"\n\n\"I love you Kathy.\"\n\n\"I love you Bill.\"\n\n\"I'll let you guys finish,\" Valerie said softly.\n\n\"You don't have to,\" Kathy whispered, \"You can stay. Watch Bill make love to me. Do whatever you want.\"\n\nValerie l looked lovingly at each of us, \"I don't know... I don't think I'm ready for that... yet. Maybe some other time. OK?\"\n\nKathy rose off me and went to hug her friend. I saw Valerie look down at my encased hardness and matted dark pubic hair. Kathy's essence coating each dark strand; her exotic aroma rising and filling the still air.\n\n\"Anytime Val. Anytime at all,\" as the two friends kissed one last time before Valerie shut the door behind her.\n\nWe showered, as we were each a mess 'down there'. Valerie gave us each parting hugs and kisses. The mood was light and tender. A lot of raw emotions had been brought out and shared. The type of emotions that could only be shared between very close friends.\n\nKathy and I made slow love in my bed before drifting off to our shared twilight.\n\n.......................................\n\nThe two of them met midweek, for their usual 'girl talk' time. This time Valerie was there first and had picked a table for two set apart from the rest of the student crowd.\n\n\"Kath, I want to thank you, and Bill, again for helping me on my assignment.\"\n\n\"It was our pleasure. I know that Bill had fun,\" she grinned.\n\n\"Kath, when you said I could've stayed... I almost did. I mean... I've never felt anything like I felt when he kissed my nipple, and when you but your hand on my breast. I've never been touched by a woman before. Never been kissed by a woman, at least not like that. But it wasn't just that. You were right. I could feel the two of you. I don't know how to explain it. The raw open emotions. It'll be something I'll never forget. Or probably never experience again.\"\n\nLittle did she realize.\n\n\"When you got off him, he looked so sexy... so desirable... The soft look in his eyes as he watched me look at him, all of him. I almost wanted to peel my panties off and jump on. To feel him inside of me. I'm sorry. I shouldn't be talking about your boyfriend like that.\"\n\nTaking Valerie's hand into her own, Kathy looked into her best friend's eyes, and gently said, \"No, Val. You love him, and he loves you. Neither of that will ever change. I would've been fine with watching you two finally join... to bond. Maybe even helped,\" they both grinned at that thought.\n\nTaking a breath, \"Before I came along, you had set lines in your relationship not to be crossed. I think you told me you had crossed a couple of those lines, but nothing too serious,\" they each grinned at each other and Valerie blushed a bit. \"I'm sure it frustrated both of you. But, the two of you accepted it, and became really good close friends. I remember overhearing some of the girls on the floor talking about the two of you. Saying how close a couple you were. How cute you two were together. That they knew you were boyfriend and girlfriend. They didn't know, and neither did I at the time, that you two were just 'boy friend' and 'girl friend'. At that time in my life, I still had that controlling boyfriend. I was so jealous of the two of you. I wished I could've had someone like that... who cared that much for me. To respect me so much,\" Kathy's voice cracking on those last few words.\n\n\"But, Kath, you guys are going to live together. He's going to marry you.\"\n\n\"Yeah, that's true.\" nodding her head, \"And you know what...? He'll always have a place in his heart for you,\" Kathy's voice again, cracking at that last sentence her hands tightening around Valerie's as their eyes peered into each other's soul.\n\n\"And you know something else...? Like I've told you before, you will always have a free pass where he is concerned. I'm looking forward to this summer, when you will come over to see us. It'll be fun.\"\n\n\"Being down here next the next two years without you two around... it'll be so lonely. Maybe I could transfer closer to you guys, wherever you wind up. Just a thought.\"\n\nThey hugged as they parted. I never heard the details of the conversation, as Kathy stowed them away in the depths of her heart.\n\n...............................................\n\nKathy's parents would invite us out for Friday night fish fry at their fraternal Club every so often. I think it was their way of getting to know me better. Their future son-in-law. It was fun. It was relaxing. I was at ease. They introduced me to their friends as 'Kathy's boyfriend'. After a few times there, I was getting to know their friends pretty well. Kathy was always by my side with the ever present smile.\n\nThe band didn't know any polkas so Kathy couldn't show off her new moves. I did dance with Judy a number of times. She commented on my dancing skills, told her I had a good teacher.\n\nThen there were always the slow dances with my Kathy.\n\nIt was a small community, and everybody knew everything about everyone. I was kind of concerned that it would get out that her 'boyfriend' wouldn't be around after the end of the quarter. That her 'ex' would show up. I mentioned it to Kathy at one point. She told me not to worry about it. Her mom had told her that she heard that had he moved out of town to parts unknown, a while back. I guess the 'message' got through. She hugged, and thanked, me for my concern. Besides, she had her dad... and we both knew the implications there.\n\n..............................................\n\nThe instructor had hung all the student's sketches around the room. Valerie's was front and center. The instructor gave the students fifteen minutes to mill around and view all the portraits. Valerie's drew the most attention.\n\nMurmured questions filled the small groups. The most common was, \"Do you think he was inside of her?\"\n\nOnce seated, the instructor told the students how much they had improved. That the level of emotion was starting to come through. He then added.\n\n\"One artist went beyond our lab model sessions. She ran what she wanted to do past me. I approved and this is the result, as he pointed to Valerie's sketch. I think you will all agree that she captured the raw passion and emotion of the couple. Her attention to the detail of the two lovers is exquisite.\n\n\"Miss Valerie, you should be proud. Well done.\"\n\nEverybody turned, and clapped. Valerie blushed.\n\nOne of her classmates asked the unasked question, \"So, are they coupled?\"\n\nValerie just grinned, before saying, \"That is left to the eye and imagination of the viewer.\"\n\nValerie and two other artists were asked to stay at the end of class. The instructor told them that he would like to hang their works in his gallery for a private 'invitation only' opening the coming Saturday night. Some the town's best would be there. He warned that all of the art pieces would be for sale, and there was a good chance that their work could be bought for a nice price. He also explained that should a piece be sold, proceeds would be split between the artist and the gallery.\n\nThe other two artists readily agreed.\n\nValerie thought about it. Yes, she could agree also. She knew she could get us to pose again and recreate a second pose. But, it wouldn't be the same. The raw emotions that the three of us experienced that evening wouldn't be there. That this original would bring back those feelings every time each of us would view it. Besides, Valerie had future plans for this captured intimate moment in time.\n\n\"Sir. I am honored, and even humbled. I know I could recreate a second sketch with my friends. They are the most loving couple I've ever met. The thing is... there were a lot of raw and open emotions in that room that evening... during, and after, that I don't think could be recreated. That would be missing whenever I would look at it. I would like to decline your generous offer.\"\n\n\"Miss Valerie. I respect your wishes. And I totally understand. Raw emotions are fleeting. That they are there and then they are gone. Are difficult, or impossible to recreate. What if I did this? Presented your work, but put a \"not for sale\" sign on it, or something like that. As you can tell, I would really like to show your work. Work like this draws others to my gallery. Who knows...? You might get offers to do some private sittings from of some those that attend.\"\n\nValerie beamed, \"I can do that. Thank you so much.\"\n\n\"Oh. You all will be getting invitations. Come by my office in the next day, or even now, if you have time. And Miss Valerie... please bring your friends.\"\n\n...........................................\n\nValerie was literally on cloud nine when we met for our study session as she told us about her art class earlier that day, the gallery, the invitations, and that Kathy and I were also invited. It was hard to keep her focused on her Chemistry and Physics assignments. We finished relatively early and decided to hit the bars to celebrate. Luckily it was quarter night, and luckily I had drawn out some cash from my account earlier in the day.\n\nTonight, they had live music. We toasted. We drank. We danced. Some slow dances we danced as a three-way. We got funny looks, but we didn't care.\n\nSuddenly the female vocalist began with the Patsy Cline song, \"I Fall to Pieces\".\n\nI had heard the song many times at home at my parent's fraternal Club, but never really listened to the words. This time I did... and so did my girlfriends, as I led Valerie to the dance floor.\n\nI fall to pieces\n\nEach time I see you again\n\nI fall to pieces\n\nHow can I be just your friend...\n\nI held her tight. She held me tight. Her head on my shoulder. Tears soaking through my shirt, as I rubbed her back. We swayed in our private little world.\n\nOccasionally, I would find Kathy's eyes. The soft smile.\n\nThe song ended. Our eyes boring into each other's soul. Hers, teary. Mine, welling up.\n\n\"I love you Valerie,\" my voice cracking.\n\n\"I love you Bill,\" her voice cracking.\n\nOur lips met in a tender love laden kiss.\n\nReturning to our table, I found Kathy smiling and drying her eyes, as Valerie headed to the ladies room. Our lips met.\n\n...........................................\n\nThe parking lot in front of the gallery was filled with late model expensive cars. My Plymouth Fury stood out like a sore thumb. Alongside there was another car that was obviously a student's.\n\nThe greeter checked our invitations and names against his list, pointed us to where we could hang our coats, and then toward the hors d'oeuvres and champagne table. We each looked at each other and grinned. There was no problem with Valerie being underage.\n\nThe girls looked incredible. Each knew that I loved it when they wore something that would mold to their small breasts.\n\nValerie was wearing a soft dark blue pullover top with a modest V-neck. The material formed well to her firm mounds. Her slacks were a satin-like material dark tan that hung off her cute bottom.\n\nKathy wore a light blue soft cotton sweater with a deeper V-neck, which clung to her slightly smaller breasts. Yes, there was a bra. A gold cross glistened against her lightly tanned skin that hung a few inches from her graceful neck. Her slacks were a beige tone that hugged her petite little cheeks.\n\nGrabbing flutes of the chilled 'bubbly' we toasted. They each giggled as the bubbles hit their noses. Valerie said it was the first time she had had champagne. Kathy and I just looked at each other and grinned. Valerie caught it. Kathy would explain later.\n\nWe milled around. The men all wore coats and ties. The women expensive gowns and jewelry up the wazoo, and it wasn't costume jewelry. Their makeup exquisite.\n\nThere were a lot of pieces that made up the gallery. Some were sculptures, some paintings, and then the pencil sketches. There was a quiet buzz in the room as the various groups discussed the finer points in each piece of art.\n\nValerie's instructor was with a small group when he noticed us and came over.\n\n\"Professor Robinson, these are my two very good friends: Kathy and Bill.\"\n\nWe shook hands, \"Please call me Richard, and it's very nice to meet you two. You have a very talented friend and artist. Miss Valerie, her sketch is getting a lot of complementary reviews. Why don't you all take a look,\" as he motioned with his head to his left.\n\nThere was a group of maybe four couples gathered around Valerie's work. Richard interrupted the group as he introduced Valerie as the artist. She received a soft applause from the small group. Kathy and I hung back and proudly watched our friend at the center of attention. She blushed. It was cute.\n\n\"Thank you everybody. This is a first for me. So, thank you. But, I couldn't have done it without my very dear, and close friends,\" as she turned to us. Kathy blushed.\n\nThere was a woman in front of the group studying the sketch, her husband behind her with his hand resting on her shoulder. She was probably in her mid-thirties. Around 5'-8\" tall. Maybe 125 pounds. Some women can be described as 'beautiful', or 'cute', or 'gorgeous'. In a word... she was elegant. Flawless complexion. Her green eyes were highlighted by the little makeup she wore with a look of maturity. Her long blonde hair, the color of wheat, in a French braid. She was smartly dressed in a skirt and top with a gentle scooped neckline. The loose top gently outlined her round breasts that looked like two navel oranges. The material was soft and delicate enough that each mound was clearly defined. The skirt coming down to a few inches above her knees showing off her smooth toned calves.\n\nI sensed Kathy noticing me checking out this woman. My arm found her waist and pulled her in closer to me. I got a smile. And a hug back, as I kissed the top of her head.\n\nHer husband seem like the athletic type. Handsome. A rugged tan face with a square jaw. Short wavy brown hair. He wasn't a big man, maybe 5'10\" tall and around 180 pounds. He was checking out both Valerie and Kathy, as I pulled her in closer. It wasn't a predatory look, more like an appreciative look. That I could understand, as I give both of my girls that kind of look as often as I can.\n\nWhatever the two of them did for a living, they were good at it, as they each had the look of 'money'. Besides, they were a good looking couple.\n\nShe turned, smiled at Valerie, then us and then said, \"You've got a couple of very good, and nice looking friends. I do have a couple of questions... if you don't mind.\"\n\nI took notice of her soft feminine voice.\n\nValerie just nodded.\n\n\"I see that the piece is labeled as 'For your Viewing Pleasure Only'. I was curious why you chose not have it for purchase? I would buy it in an instant.\"\n\nValerie looked at us and then back at the woman, \"When Richard told me that there was a good chance someone would buy it, I thought about it. I knew my friends would be more than happy to pose for me for another sketch,\" as she looked over at us... Kathy smiled, blushed, and moved in closer to me.\n\nContinuing, \"But.\" Taking a deep breath, and still looking at us, \"There were a lot of raw emotions that the three of shared throughout that evening. That every time I would look at this one, I would be reminded of the special closeness I have with my friends,\" her voice cracking.\n\nThe woman nodded in an approving way, \"I understand completely. By the way, my name is Cynthia, and this my husband Roberto.\"\n\nValerie made the introductions on our side.\n\n\"So, let me ask you. If you were to do another, do you think you could recapture the emotions of your friends? Of the woman?\"\n\nValerie looked over at us. I smiled. Kathy beamed at the thought.\n\n\"I don't think that would be a problem,\" she giggled. We giggled. I heard quiet giggles in the group.\n\n\"Ok. Do it. Make me one. Give it to Richard and I will pay for it. One more question, before I ask my final question... Would you be interested in a private sitting? Say at our house.\"\n\nValerie looked over at us for assurance. We nodded.\n\n\"OK. Do you mind if I bring my friends? I mean... and please don't be offended... but I don't even know you. I am sure you are an acquaintance of Richard. But beyond that...\"\n\n\"No. No. I'm not offended in the least. You're a smart and careful girl. I do understand and would do the same. I'm a complete stranger. I can assure you we are not serial rapists, or axe murderers.\"\n\nThe three of us broke out in hysterics. The Cynthia looked at us, like we had lost our collective minds. Once we all regained our composure, Valerie told the story on how she and I first met, and then how Kathy and I first met, and how the phrase, 'I know you're not a serial rapist' came to be.\n\nCynthia was smiling broadly as Valerie finished the story, \"That's a cute story. I can see why you three broke-up at my statement. OK. One last question, and I will let you three enjoy the rest of your evening.\"\n\nLooking at Kathy, \"Are you two...,\"\n\nI could tell she was searching for a polite way of asking the obvious. So I volunteered, \"Joined?\"\n\nShe looked at me and grinned, \"Thank you. I was trying to find a nice and polite way of asking. So, are you?\"\n\nThe three of us looked at each other, before Valerie answered the same way she answered the same question in her class, \"That, is left to the eye and imagination of the viewer\".\n\nCynthia grinned, \"Nice answer. I like it. My imagination is working overtime,\" she hugged Valerie, \"Have a nice evening, Valerie, Kathy, and Bill.\"\n\nThey exchanged phone numbers, as we went to get more champagne. The evening turned out to be fun.\n\n............................................\n\nLast week in February. Kathy and Valerie at their usual meet up for the latest 'girl talk'.\n\n\"So... did you hear from Cynthia?\"\n\n\"Yeah. She wants to get together this Saturday afternoon. She was going to suggest Saturday evening, but figured we would have plans.\"\n",
        "\"What do you think she is envisioning? She did say a 'private' sitting.\"\n\n\"I don't know. I've been wondering that myself. I mean... does she just want a portrait? What if she wants a sketch of her and Roberto like you guys were? Or maybe just her, nude? Or the two of them together, nude?\"\n\n\"Do you think you could do it? I mean if she wants something along those lines of being nude?\"\n\n\"Yeah. I could do that. I've done it in our labs. Had nude models pose, both male and female. I just put on my 'Artist' hat and concentrate on my work. If that's what she is looking for, then I'm glad she's OK with you guys being with me. Otherwise, in her house... by myself. I'd be nervous.\"\n\n\"I don't know if I can sit there and watch. I'd be squirming all over. I mean, I've never seen a mature woman nude, or a guy. But if she is thinking of something with a sexual overtone... I think that afterwards, I'd have to have Bill fuck me like crazy.\"\n\n\"Stop Kath. Too much information,\" Valerie grinned.\n\n\"I'm sure he'd be happy to take care of you too,\" Kathy looked at her friend with a half serious look.\n\nValerie stared back at her for a moment, before changing the subject. However; that thought lingered in her head.\n\n.........................................\n\nWe pulled into Cynthia's and Roberto's house at exactly 2:00, and parked in the circular driveway. Wow.\n\nIt was a few miles out of town and set back from the country road by about fifty yards, hidden by large oak trees. The house itself was a two story brick that was recently built. The yard was expansive and terraced with shrubs. Even in the middle of winter, it was beautiful. I tried to imagine what it would look like in the summer, with all the greenery, flowers in bloom, and leaves on the trees.\n\nCynthia met us at the door before we even had a chance to ring the doorbell. She was dressed casually, a pair of loose fitting sweat pants and an SIU maroon sweatshirt. As she walked, I could tell there was no bra, as her firm mounds gently swaying.\n\nThe inside of the house was breathtaking. The whole back of the house was a wall of glass that looked out over a wide open backyard that must have been fifty yards deep. All professionally landscaped. A large in-ground Jacuzzi sitting back about thirty feet from the brick paved patio. It was set far enough from the house that I would imagine that sitting in there at night, you would feel like you were out in the open.\n\nEnvisioning the middle of winter, with the steam gently rising in the still night air, the water swirling around our naked bodies, with the love of my life embraced in my arms, fueled my brain.\n\nShe led us into what was a formal sitting room with a sofa, a love seat, a couple of formal sitting chairs, marble topped coffee table and two matching end tables. The soft beige carpet provided a quietness and warmth to the room. At the far side a gentle fire inside an expansive natural stone fireplace that went from the floor to the ceiling warmed the room. A tray with sodas and a couple of dozen tea sandwiches sat on the coffee table. The walls were adorned with paintings and sketches. Cynthia obviously had a taste for original art.\n\nWe all got comfortable, as we each grabbed a soda, and a couple sandwiches at Cynthia's offering. Kathy and I sitting on the love seat, her open hand resting on my thigh.\n\n\"First, Roberto is with his guy friends. He knows what I had planned for today, and that I preferred he wasn't here. I think it would have just added to my nervousness. So, I suppose you're all wondering what I have in mind,\" her voice soft and feminine.\n\nWe all sat there in anticipation.\n\n\"I know the level of art classes that Richard teaches. Over the years, he has shared some of his student's work with me to get my opinion, on his up-and-coming student artists. He did show me the one that was in his studio, so it wasn't the first time I had seen it. When I first saw it... well, it took my breath away,\" looking at me, \"I also saw the one you did of your friend here, Bill, last year.\"\n\nIt was my turn to blush.\n\n\"I want you to do a nude sketch of me. The one you are going to remake of your friends and this one will each hang in our bedroom. I'm just not sure which will be hanging over our bed. I'm thinking this one, but will see.\"\n\nKathy and I looked at each other. Cynthia caught the look.\n\n\"Will my nudity be OK with you guys? I know Valerie's OK with it, as she has done nude sketches in her classes. I know this is kind of a shook to you.\"\n\nKathy spoke first, \"I'm fine. It's not like I've never seen another woman nude. But, yeah it's just kind of a surprise... that's all.\"\n\n\"I agree with Kathy. Although she's probably seen more nude women than I have,\" that got a laugh out of everybody as Kathy gave me a gentle poke and a playful peck on the cheek.\n\nCynthia rose, \"Let me get myself ready. Give me ten minutes. Valerie set up wherever you think would be best. I'm open to any pose you would like,\" she thought of adding the condition of 'tasteful' but figured it was assumed.\n\nValerie started to set up her sketch pad and sketching stuff. Kathy was playful.\n\n\"So, you're going to see a full nude woman with bigger boobs. You'll probably never look at these little mounds the same after today,\" Kathy was grinning. Her hands cupping each of her braless mounds through her sweatshirt.\n\n\"Just wait until later. I'll show you as I'll worship, kiss, taste, and suck those luscious breasts and sensitive nipples of yours,\" our lips came together in a playful kiss as my hand slipped under her sweatshirt and cupped her firm bare left breast... gently rolling and pinching the nipple. She whimpered as she closed her eyes to savor the touch.\n\n\"Down you guys. You're getting me all worked up. I'm the artist here.\"\n\nI looked over at Valerie, \"Same goes for your sexy nipples,\" she grinned and blushed.\n\nA few minutes later, Cynthia standing in front of us in a long dark blue silk robe, with a glass of chilled white wine. I imagined that might be the same robe she might wear going to and from the Jacuzzi... naked underneath.\n\n\"I'm sorry. I didn't offer you guys anything else. Would you like some wine?\"\n\n\"I've never had a white wine before, only a dark red that we mixed with 7-up,\" Kathy said.\n\n\"Let me get you a glass. I think you'll like it. Your budget might not. Anyone else?\"\n\n\"I'll try it too,\" I said.\n\n\"Valerie?\"\n\n\"No, I'm good. Maybe later.\"\n\nWe each took a sip of the cool smooth golden nectar from the gods.\n\n\"This is wonderful. It kind of makes my mouth feel dry and crisp,\" Kathy nodded appreciatively.\n\n\"You'll get addicted,\" Cynthia smiled back.\n\nLooking at Valerie, \"Do you have any ideas on the kind of pose?\"\n\n\"Well, since this is going in your bedroom, I was thinking of having you lie on the couch in a relaxing pose. Like you're napping. Your head propped on a pillow. Your right hand resting behind your head. Maybe one leg off the couch and on the floor. The other leg either bend or straight out in front of you. Not sure how erotic you want to get.\"\n\n\"OK. I was kind of thinking the same. I wanted something that had some sexuality and eroticism to it, because, like you said, it is going in our bedroom. It's not like it will be hanging above the fireplace. Ok. Let's try a couple poses.\"\n\nThere was an air of nervous energy in the room as Cynthia prepared for her unveiling.\n\n\"I've never done anything like this before. Undress before an audience,\" she said nervously.\n\nValerie offering words of encouragement, \"Take your time. I've watched models in our class at their first time. Soon, it will be all natural, and comfortable. Right Bill?\"\n\nI recalled my initial unveiling that afternoon in Valerie's dorm room, \"That's true. My first time, when Valerie did that sketch of me, I was more than bit nervous. But after the first few minutes it passed. Plus, I didn't have any wine at the time,\" I looked at Valerie and smiled. She grinned back.\n\nTaking a big gulp and setting her glass on the table. Cynthia took in a lungful of air, as she faced the group. Untied the bow. The front of the robe opened slightly revealing a sliver of fresh skin down her torso, and a peak at the blonde forest. Suddenly the robe fell from her shoulders and pooled at her feet.\n\nI stifled a groan as I held my breath.\n\nShe was the first mature women I had ever seen nude... it was captivating. Even for the middle of winter, her skin had a soft golden glow with no tan lines. An image of her lying next to the Jacuzzi in the middle of summer... naked, flashed through my brain. Her breasts had a slight upturn like two large teardrops... definitely \"C's\". The quarter size rust colored areola sat atop each soft pillow of female flesh. The darker pink erect nipples pointing slightly upward. A slight swell of her midsection, gave way to a triangular forest of dense curly golden blonde pubic hair that hid the underlying crease. Her hips with a gentle swell. I felt Kathy tighten her grip on my thigh as I think that, she too, was holding her breath.\n\nCynthia took up a pose on the couch. First on her back. Her head propped on a pillow. Her neck extended back. Eyes close. Mouth upturned in gentle smile. One leg on the floor and the other straight out. Her left arm raised and cradling her head. Her right hand resting casually on her flattened stomach, just above her navel. Her breasts, now two soft pillows of flesh with the nipples resting comfortably in the center pointing straight upward. Her pubic mound, with a gentle upward swell, enhancing that thick golden mat.\n\n\"Or, how about this?\"\n\nShe raised the straightened leg and bent it at the knee, resting lazily against the back of the couch. Her legs now slightly parted. It was erotic.\n\nWe were sitting directly across from her, so she wasn't as exposed. Valerie, on the other hand, was set up a bit further down, looking up, and along, Cynthia's nude form.\n\n\"Or this?\"\n\nShe turned to her side slightly. Causing her legs to open a bit more. Still nothing was really showing. The details of the hidden treasure was still left to the viewer. This pose oozed of sensuality and eroticism. It would go perfectly in her bedroom, alongside ours.\n\n\"I like it. Hold it for as long as you can. Let me know when you want to rest.\"\n\nFor the next two hours, Valerie was in full 'Artist' mode. It was awe inspiring to watch her concentration.\n\nCynthia relaxed.\n\nAt each 'relaxation' in the pose, she would reach over and take a sip of her wine. She would slightly roll and rest on her side. As she sipped her wine, her breasts would bunch together, forming two soft mounds. She once asked if I would mind refilling her glass. I'm sure she was checking my package for any hint of a bulge as I filled her glass. Luckily my tight undershorts hid my arousal. Kathy noticed a slight grin, as Cynthia checked me out.\n\nFinally, Valerie announced that she was sure she had it.\n\nCynthia gracefully got off the couch and stood behind Valerie admiring her work, still nude. Valerie turned the sketch pad around for us to view her work. It was amazing. Valerie had an angle on Cynthia's body that we couldn't see. She had captured this woman's femininity, sensuality, and her sexual being.\n\n\"I love it. You're such a good artist. You captured exactly what I was hoping for. I'm sure Roberto will show me tonight how much he likes it. Maybe I'll show it to some of my girlfriends. Who knows... you could be a busy girl next quarter.\"\n\nThe girls all giggled.\n\n............................................\n\nWe hit the bars. Valerie insisted on paying for our drinks, as she was now $50 richer, which back then was a lot. We talked about when we would do our second pose, as finals were creeping up on us and our schedules would tighten. We decided on the next afternoon.\n\nKathy and I made sweet love that night, in my bed. I worshiped her small delicate breasts and sensitive nipples, as she held me close to her bosom. Her arousal, from the afternoon was still evident. My tongue tasting her through her slick fragrant folds. Her eyes gazing up at me as I watched her pink lips glide over my glistening glans. The tip of her little pink tongue tracing through the underlying sensitive valley before probing the seeping orifice. Her hand cupping and kneading my testicles. I watched, and throbbed inside of her, as she struck 'The Pose' and gently swayed. Grinning at the affect, her little body was having on me. Squeezing me whenever I throbbed inside of her.\n\nI had her lay on her back, directly on top of me. Her hands up and behind my neck. Kathy gently rocked her hips as her soft labia caressed the sensitive crown with each gentle stroke of her hips. My hands cupping each of her flattened breasts, pinching and rolling each engorged little egg. Soft sounds of our contentment filled the quiet room. Kathy gave me smiles of fulfillment as I moved slowly in and out of her. Her legs opened to the maximum as I filled her completely with every down-stroke. She held me tight, and softly whispered my name as I filled her with my thick essence.\n\nCuddling underneath the warm covers, our warm bare bodies, minds, and souls drifted off to our shared slumber land. Content with the love, and passion, we just shared.\n\n.............................................\n\nThe three of us met in Valerie's room for our second 'love making' pose. Kathy and I took our time undressing each other, as before. Stirring our arousal and love for each other.\n\nValerie came into the room as we were happily 'joined'. I watched Kathy as I heard the rustle of clothing behind me. A gentle smile on her face at whatever was happening. I was picturing my second best friend becoming topless, clad only in a pair of bikini panties.\n\nFor the next two hours I made love to Kathy through those so sensitive nipples. Jolts of nipple orgasms shook her body a few times, as I again heard from behind me soft 'oh my's'. Kathy kept me hard as she would occasionally flex her internal muscles along my hardness. It was fun.\n\nAll too soon, Valerie said she was done. She moved to our side with her sketch pad. My eyes first caught her creamy mounds and bright pink erect nipples. But what really took my breath away was the fact that Valerie was, now, completely nude. I throbbed inside my love. Kathy kissed the top of my head and squeezed my hard length. My eyes feasted on Valerie's full dark brown triangle of soft curls for the first time. Her aroused essence filling my nostrils.\n\nSilence.\n\n\"So what about my sketch?\"\n\nI could hear the nervousness in her voice, as I reluctantly moved my gaze to her sketch.\n\nShe had done it again. Kathy, in a state of compete peaceful bliss, once again, captured on this piece of paper.\n\n\"It's beautiful Val. Absolutely captivating... and so are you.\"\n\nShe gave me a loving smile. My hand moved to her bare waist as I pulled her lips to mine to show my appreciation. I watched as Kathy then pulled Valerie up for a deep friend's kiss of their own.\n\n\"I don't know what made me do this. Maybe it was from yesterday. I mean, I've seen nude models before; but, yesterday was different. She was so sexy. So comfortable with everything. I mean, let's face it, she has a gorgeous body. And those tits. I wish I had tits like that.\"\n\n\"I don't,\" as I leaned over to first kiss her breast before taking the erect nipple into my mouth and bathing it with my tongue. Valerie let out a soft whimper as she held me to her breast. I worshipped the sensitive nub, as the three of us joined again.\n\nValerie pulled back and gave me a grin, my hand still resting on her hip, \"OK. I'm curious. I know guys like big boobs... well most guys. I know you like my little ones,\" her hands roaming over her creamy mounds, \"And I know you really love Kathy's little ones. Why is that?\"\n\n\"I don't know. I find them sexy... cute. Maybe, it's because even after you've had a couple of kids,\" turning back to Kathy and planting a kiss on her right breast, \"and you've had a couple of our own,\" a warm smile greeted me as I pulled back, \"they will still look just like this... pert... firm... and riding high on your chest. Cynthia's were already starting to droop, as I'm sure most women with big boobs do as they age.\"\n\n\"I like that answer,\" as Valerie first pulled me into her chest so I could kiss her nipples one more time before pulling back to let me appreciate her completely bare and sexy body for the first time. She stood up straight and struck a 'Pose' of her own. My dick throbbed one more time, as Kathy gave me another squeeze.\n\nI did just that. I took in how her breasts were now pulled up tight against her chest with just a hint of curvature. Her pink wet nipples erect and begging for more attention. The contrast of her dark brown pubic hair against the snow white skin was captivating. Valerie's mons had a slight outward swell, causing her pubic mound to enhance the display of its brown covering. The underlying crease of her womanhood was hidden. But in my mind, the puffy outer lips smiled at me. I wanted to touch her... all over. To feel her arousal, but thought, 'be patient'. Perhaps that day will come. Kathy was sensing my urge to touch her... our friend.\n\nKathy took and held my hand between Valerie's cute navel and her soft curls. I could feel the heat of her soft skin through the palm of my hand, a fraction of an inch above those soft strands of brown hair. My fingers resting just below her navel, as she looked into her friend's soft brown eyes. Eyes filled with a need. Valerie's breathing now laboring.\n\nIn a soft whisper, \"Val, do you want Bill to touch you?\"\n\nI could tell she was pondering the question. Did she? Was she ready for that?\n\n\"I don't know... maybe...,\" breathing, rubbing her hand through my hair as she looked longingly at me, \"I don't know.\"\n\n\"We'll do whatever you want,\" Kathy whispered as she stroked her friend's bare back.\n\nMy hand not moving, as Valerie's hand moved to cover ours.\n\nI soo wanted to feel her soft curls. To comb my fingers through that damp forest. To probe between those soft underlying lips. To feel her wetness. To maybe touch her in her most intimate spot.\n\nValerie looked into my eyes with a serious look, \"Bill, will you think I'm a tease if I say, that I'm not ready for that... yet? I mean I'm sure I've got you all worked up... again. That I've got you all turned on, and not wanting to go further,\" her voice cracking.\n\nMy hand moving to her back I pulled her bare body into us as Kathy and I sat, still joined. Bringing our friend into our shared energy... our love. Tears spilling down her cheeks.\n\nCalming down, \"Bill. You are the first guy who has ever seen me like this. When I decided to take off my panties for this, and be completely nude as I drew, I wasn't sure what was going to happen. What I was going to expect. What I was going to feel,\" she sniffled.\n\n\"To have you look at all of me. Like you look at the love of your life. Like I saw you look at Cynthia yesterday. But those two looks are different. You look at Kathy as your love, as the only person in your life, and 'yes' you adore her little boobs,\" Kathy grinned as she kissed my cheek and squeezed my still hard length.\n\n\"Your look at Cynthia was completely different. I mean it wasn't lust, like 'I wish I could have that'. I think it was an appreciation of a beautiful woman. And I think she felt it. She probably fucked her husband silly as soon as he entered the door. I doubt she ever got dressed.\"\n\nWe all had a good laugh.\n\n\"Val,\" as I pulled back to look at her, \"We are your friends. And to answer your basic question... NO. I don't, and never have, thought of you as a tease. We will both always be here for you. That you wanted to bare yourself to me for the first time is a great honor. I will always love you,\" our lips meeting for a deep soul-full kiss.",
        "The smile returned.\n\n\"So, I have a dilemma... which sketch should I keep for myself. I mean both have strong and raw emotions tied to them. If it were you... which would you keep?\"\n\nKathy thought about it, \"I think the first one. I mean it was the first time the three of us shared those emotions. The first time we had joined like that, as deep friends. This time there were emotions too, but you'll always remember the first time,\" I nodded as I totally agreed.\n\nI don't know how much Cynthia paid Richard for the sketch, but Valerie had $30 and she was happy."
    ],
    "authorname": "32aa",
    "tags": [
        "small breasts",
        "best friends",
        "coed",
        "college",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/youre-not-a-serial-rapist-ch-10"
}