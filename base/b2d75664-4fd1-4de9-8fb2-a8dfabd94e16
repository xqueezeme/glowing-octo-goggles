{
    "title": "Suzanne's Massage Surprise",
    "pages": [
        "My name is not really Suzanne, but I'm going to go with it as I need to stay under the radar. Anyone who knows me well enough may start to figure out who I really am as time goes along, but that's a chance I'll just have to take. \n\nWhat is true is that live in London, but it's a big place and I should be OK with telling you that much. I work as a Beauty Therapist, I'm in my late 20's, and my figure what is generally known as \"petite\" being just shy of 5 feet tall and am a size 6. I have what I consider perfectly sized breasts (ok - small) and play a lot of Squash so am nice and trim (I think).\n\nSo enough of this let's get into why I feel the need to write all this down...\n\nWhere it all Started\n\nAbout 6 months ago this guy walked into the salon where I work, booked in for a full body massage. He was with his girlfriend and the massage was a apparently a birthday present. I was hovering around the back of reception, waiting, when they checked in and seemed quite a happy looking couple, early thirties or so, and comfortable with each other, although not what I'd call \"touchy-feely\" in the way they stood together.\n\nThe woman asked how long it would take and when she found out it was just over an hour appointment, she pecked him on cheek, said she'd see him later, and headed out of the door - shopping clearly the priority for that afternoon.\n\nHe took a seat and was just reaching for a magazine when I called him through. He stood up and as I led him through to the treatment room and I noticed how tall he was this close up, and caught a brief waft of his aftershave. Nice, I think, he's bothered to freshen up - I hate people who turn up sweaty and stale. He wasn't particularly good looking, but was pleasant enough, and I warmed to him as he stood there looking lost. Clearly a first timer.\n\nI was straight into business mode, letting him know what the massage involved (shoulders, back, arms, legs, torso), how long it would take, blah blah blah...you get the idea...but for some reason forgot to mention the towel discipline. The bit where I explain how we use the towel across the middle to protect his modesty, and my blushes. So telling him to get undressed and hop up on the table, I headed out to give him a moment to get ready.\n\nI walked back into the room and - bless me - he's lying face down on the massage table stark naked. I stood gaping for a moment and then, realising anyone passing by in the corridor could see in, quickly closed the door. He was lying with his face planted through the face hole at the top of the table and didn't say anything or even move, so I wasn't sure he'd noticed me come in, although he must have heard the door as I'd given it quite a shove to get it closed, pronto like.\n\nI stepped over to the table and had a moment to take in the fact he clearly worked out - he was nothing short of ripped - with a very, very nice arse. I know exactly what I should have done then (grab a towel, cover him up, and be all professional again ), but I just didn't. I don't know what came over me, I'd seen him with his partner, and the rules about this sort of thing couldn't be clearer, no hanky-panky in the treatment rooms. We don't do \"that kind\" of massage and sackings and general unpleasantness will follow anyone breaking of the rules. But we all talked about it, and I knew the legends of the other therapists who had had some fun on company time, none of whom worked here anymore - ominous.\n\nBut like I said, something just came over me. I've been in a relationship with my partner for nearly two years, I get plenty of sex at home, and I never considered myself an \"unfaithful\" kind of person, let alone a floozy to take advantage of someone else's guy. But that arse - it was just perfect.\n\nI leaned over and quickly flicked the lock on the door before grabbing a bottle of oil and started warming it in my hands.\n\n\"You OK there?\" I asked, voice just ever so slightly squeaky with nerves.\n\n\"Fine\" came a voice from under the table, \"am I OK like this?\"\n\n\"Just - perfect\"\n\nI saw him relax slightly and thought - hey ho - to work.\n\nI have no idea whether he was genuinely naive about not being naked for a regular massage, or whether he played me, but I stopped caring as soon as I walked to the head of the table and started working on his shoulders. Like I said, he was ripped and it was like trying to get the knots out of a slab of week old beef. This guy seriously worked out and I actually earned my keep, using a gallon of oil and thinking I might need to get help, my hands were really aching. He groaned appreciatively at all the right points, and by the time I'd worked all the way down his back and then back up his legs, it wasn't only my hands that were sticky and wet - this guy was seriously affecting me, in a good way.\n\nAt this point the normal procedure is to lift the towel, the client turns over safely protected while I discretely turn my head away, just in case, and they settle down facing upwards ready for the next bit. Today I was looking at the most perfectly formed butt I'd had the pleasure to ever gaze on and I made a decision.\n\nPouring far more oil onto my hands than was strictly necessary, I placed both hands firmly onto his buttocks. It took all my self control not to whimper as I heard the deepest sigh come from under the head end of the table. Did he think this was just a normal part of the massage? OK - let's make it so. I began to press and knead his tight buns, sliding firmly and then caressing lightly in turn. It was just so horny! I was starting to get a little breathless myself when I noticed his legs part ever so slightly - and my life changed forever.\n\nAs his legs parted I saw he had a great set of balls, shaved clean and perfectly formed. And below those, starting to make its way down the table, I could see his cock was starting to harden - pressed against the table - and getting bigger with every stroke of my hand across his butt. I consider myself a woman of the world, and thought I'd been with some decent guys, but this was in a different league. I watched in awe as it got longer, and thicker. I half heard an embarrassed apology and something about my hands being too good, but I just mumbled a quick \"It's fine, really\" as I gazed on a 10 inch wonder of the world.\n\nI slid my hands into the crack between his butt cheeks, pulling them apart and letting oil pour down over his arsehole, sack and onto this long, hard cock. I then followed the flow with my fingers, pressing onto his hole briefly before cupping my hands over his balls, squeezing and gripping them hard enough to raise a real groan from under the table. My pussy was going crazy. I was beyond hot and wet, my breathing had reduced itself to a soft pant and I actually thought I might cum right there. Without noticing, I'd been rubbing myself on the padded edge of the table and was well onto the way to getting myself off. I was losing any semblance of control and I needed more.\n\nSlowly, oh so slowly, I let his balls slide through my hands as I stretched down to the base of his cock. My nails grazed their way around his shaft and I felt the heat and hardness for the first time, tingles spreading through my fingertips as I took hold of the biggest erection I'd ever seen. A long soft moan came form under the table as I slid my grip along his length the to swollen head, raging and purple, already oozing pre-cum in a little sticky teardrop. My head began to swim and I had to remind myself to breath before I passed out from the sexual tension, it was just awesome. I had never felt so horny, and I was with a complete stranger, lying naked and gorgeous in my workplace.\n\nAll pretense stopped right there. He wanted to cum. I wanted him to cum. I needed to cum.\n\nAs I began to stroke the underside of his cock, I could he was getting a little uncomfortable. He was face down and his cock was lying along the table between his legs the wrong way. I reluctantly lifted my hands away and nudged his side.\n\n\"Flip over\" I whispered.\n\nI don't know if he'd actually heard me, but he eased himself over and I saw his cock in all its rock hard glory. As he turned it sprang to life like a baseball bat, springing up to its natural place and waving like a flagpole as he settled onto his back. It was an independent thing. Rising up from his balls at an angle and hanging in the air, the bell shaped cock end hovering just a couple of inches above his belly button. My mouth was dry as I took a moment to admire the view.\n\nI managed to look away for a brief moment and really look him in the eye for the first time. He was in control here and he damn well knew it. Behind a boyish half grin (which I thought had been shy and unassuming - what a mug) there was a confidence - earned from god knows how many encounters just like this one, I bet. He pointed at his cock,\n\n\"Do you mind just...?\" he asked.\n\nThe bastard already knew the answer. He knew I was so far gone by now I would do pretty much anything he asked so long as it involved that gorgeous hard-on. And now I understood why some girls were more than happy to get fired over this kind of thing.\n\nI responded with what my mother would have called \"gusto\".\n\nSmiling right back, I started to unbutton my work top. Popper by popper I worked down the blouse front and as I slipped it off my shoulders I glanced back down to his cock, and was rewarded with a healthy twitch in response. I lifted my vest top up over my head and thanked mother nature for giving me the small pert breasts that meant I could get away without a bra most days.\n\nIt was his turn to take a breath as he watched me reach for his cock, leaning low, and letting my hardening nipples brush the side of his chest. He reached up with his right hand and cupped by breast as I leaned towards his cock, my face just inches from the raging head and my hand circling his shaft. I stroked slowly at first, but quickly picked up the pace, squeezing and teasing in turns. Cupping his balls with the other hand I pulled and twisted while I wanked him, from the base to the underside of the head, then gripping and twisting that head, all the while feeling him squirming under my touch.\n\nI was desperate to take him into my mouth, but he was so oily I'd have gagged (note to self - find a nice fruit flavored lube for next time - oh god, I'm already thinking about the next time). So this was a hand-job only session, which was fine by me as well, he felt so damned big and hard I was close to ecstasy just wanking him off.\n\nI almost whimpered with disappointment when he stopped cupping my breast and teasing my nipple, moving his hand away, only to gasp in excitement as his hand slid up between my legs. His pressed up into the crotch of my trousers and I felt a gush of wetness as he grazed my clit. Heaven - he was happy to sort me out as well - and boy did I need it!\n\nKeeping up the stroking with one hand, I reached around with the other and grabbed at my waistband, tugging my trousers and panties down in a series of inelegant shoves so they slipped halfway down my thighs, just far enough to expose my dripping pussy and let his hand delve deeply into my cunt.\n\nTwo fingers slipped easily up into me, curving straight round to find my G spot - damn, this guy was good - his thumb pressing against my own rock hard clit. Shit, this felt fabulous, and I wasn't going to last long as he expertly finger fucked me in response to my own stroking of his cock. His breaths were getting short and he began to buck on the table under my grip, and then without any warning he blew. Great white streams of cum jetted out of his cock, coating my face and hair. My lips were slightly parted and one superbly aimed stream of spunk shot straight into my mouth, finally pushing me over the edge. As he came, he tensed so hard his fingers rammed up me, rigid as cocks themselves, and while my face and hair were being bathed in spunk I orgasmed like never before. My juices poured over his fingers and down my legs as my cunt spasmed in overdrive. Waves of pleasure surged up through my body and I'm sure I passed out for a moment as my head felt like it exploded in white light and I collapsed onto him on the table as my knees gave way.\n\nSilence. For a moment it was pure silence, and then my senses started coming back to life.\n\nThe first thing I became aware of was him groaning quietly.\n\n\"Wow - that was fucking incredible\"\n\nHis cock was starting to go limp and I eased myself up and away from him. Turning to see him smiling at me. I smiled back back, \"Yup\" was all I could manage right then. I took a deep breath and the waves of my own orgasm began to subside, and I felt fabulous. I'd just has one of the horniest, most satisfying, experiences of my life. A glance at the clock told me we'd only been at it for 20 minutes which surprised me, it felt like forever. We had plenty of time to get ourselves together, tidy up and appear respectable again before he headed out of the door at the end of the session.\n\nThere's a full length dressing mirror by the door in the treatment room, and I caught a new image of myself. Naked as far as the trousers and knickers pushed around my thighs, hair dishevelled, with spunk dripping down my face. \n\nAnd do you know what - I really liked what I saw."
    ],
    "authorname": "SuzanneHandzon",
    "tags": [
        "handjob",
        "massage",
        "masseusse",
        "wanking",
        "masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/suzannes-massage-surprise"
}