{
    "title": "The Shepherd's Crook Pt. 01",
    "pages": [
        "Author's Notes:\n\n'A Shepherd's Crook' is a new tale in the Chronicles of Ben Shepherd. The chronological order of the stories is: \n\n<ul type=\"disc\"><li>The Shepherd of Ashburn Court -- Parts 1 - 5</li><li>A Shepherd in France -- Parts 1 &amp; 2</li><li>A Shepherd Afield -- Parts 1 - 5</li><li>The Shepherd's Crook -- Part 1</li></ul>\n\nMinimal effort is made in this tale to explain the backstory, so please read the other stories first.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nA Shepherd's Crook -- Part 1\n\n********\n\nChapter 1\n\nBen stretched out on his back on the living room carpet, baby Gretchen asleep on his chest. Sam was wiggling on his blanket at his side, Ben's big arm protectively encircling the infant. The only child missing from this picture was Christopher who'd opted to go to daycare to play with his friends.\n\nHe heard footsteps and glanced up to see Tina and Lucy approaching with big smiles on their faces.\n\n\"Who's a proud papa? Who's a proud papa? You are! Yes, you are!\" Lucy teased in a voice she used on her daughter.\n\nBen chuckled because he couldn't argue with the beauty. He was proud! Thrilled as well. He'd never expected to have children of his own much less three! He smiled lovingly at the two ladies, and they knelt next to him and gave him kisses before they scooped up their babies.\n\nBen made a slight noise of protest, but Tina gave him a raised eyebrow.\n\n\"You know Captain Kendricks will be here shortly. Don't you need to prepare?\" she asked.\n\nBen sat up and pouted at them but nodded. He leaned forward and kissed the heads of the babies and got another kiss from their mothers before he stood and walked downstairs to his office. A prototype of his latest design was resting atop his drafting table. The original was in the glass cabinet lining the wall of his workshop. It didn't seem very impressive at first glance, but then most of the devices he designed hid their cleverness beneath a simple fa\u00e7ade. He gathered the design spec sheets and stuffed them in the docket with a memory stick containing all the digital files. Picking up the docket and the prototype he went back upstairs just in time to hear the muted tones of the doorbell.\n\nTina and Lucy had insisted he come up with a quieter way to announce the many visitors he received these days now that he was working with the US military and other departments of the government. The new doorbell didn't wake the babies.\n\nSmiling, Ben opened the door for Captain David Kendricks who was right on time. A big personnel carrier was waiting at the end of the driveway. Ben grinned as he recalled the night he'd met Kendricks and his predecessor's shock and awe tactics.\n\n\"David! Good morning!\"\n\n\"Ben! Good morning to you!\" He looked to the dossier Ben was carrying. \"Is that it?\"\n\nBen smiled and nodded. \"Yes, let's go take a look.\"\n\nDavid kicked his shoes off and followed Ben to the dining room as this had become their pattern. Ben placed the docket on the table and opened it, and they took chairs side by side. He walked the Captain through the reports he'd made, and they inspected the physical prototype.\n\nDavid grinned at Ben. \"We had a bet going back at headquarters on methods you might use to alleviate the air turbulence the device would produce. Corporal Killcade bet we'd all be wrong and suggested you'd find a solution that adapted dynamically to the increase in friction. While she didn't supply the solution you devised, she did identify the basis of your design. She won the bet again!\"\n\nBen grinned at the man then tried to recall someone named Killcade. \"Have I met her?\"\n\nDavid shook his head. \"No, she's new. Been working in the think tank for maybe... six months? Absolutely brilliant but incredibly awkward socially. I understand she's one hell of a soldier, but she couldn't integrate with the others on her squad. If she wasn't so damn smart, they might have released her from the army. Instead, she came to work for us. I immediately put her on reviewing your work.\" A sly grin began to appear on the Captain's face. \"I think she might have a little crush on you.\"\n\nBen stared at him nervously.\n\nDavid laughed and patted Ben on the arm. \"Not to worry, it's just a little innocent infatuation with someone she believes may be as smart as she is.\"\n\nBen frowned. \"I'm not particularly smart. Just ask the ladies I live with. My mind just likes puzzles.\"\n\nDavid gave him a skeptical look. \"Riiiiight.\" Then his expression showed a little embarrassment.\n\n\"What's wrong?\" Ben asked.\n\n\"Nothing! It's silly really... but I promised I'd ask,\" David shifted a little in his chair. Ben just waited until the Captain finally managed to spill. \"That wager we made over your air turbulence solution? As her reward for always being right, Corporal Killcade asked if she might be permitted to join me on my next visit.\"\n\n\"Oh! Well, if you vouch for her, then I suppose it'd be fine,\" Ben responded with a small shrug. David's relieved smile and brisk nod were good enough for him.\n\n\"Did you bring me the file for the new project?\" Ben asked eagerly.\n\nWith an indulgent smile, David reached into his briefcase and pulled out a dossier stuffed with crinkled papers.\n\nBen's eyebrows rose as he looked at the old notes. \"How ancient is this request?\"\n\n\"Pretty old. Pre-dates my tenure and then some. The memory stick includes all of the attempted solutions people have come up with over the years to solve it. You're welcome to try.\"\n\nBen nodded and smiled as he flipped through the pages.\n\nDavid smiled as he knew he'd lost Ben's attention. The man's voracious mind was eager to begin. David was starting to worry at the lull in challenges for him. Admittedly there were plenty of top-secret projects that would have loved to have a mind like his on the team, but Ben had made it clear he wasn't interested in designing weapons. Aside from this, there were still people in Kendricks' chain of command who were seriously uncomfortable about having a 'celebrity' working for them. He kept that little fact from Ben. He moved the prototype and the dossier into his briefcase.\n\n\"I'm going to leave you to it then. Thanks again for this!\"\n\nBen turned his attention back to his guest with a guilty smile. \"Sorry. Thanks for the new puzzle!\" He walked the Captain to the door and shook his hand before the man left.\n\nBen immediately walked down to his office and took a seat at his desk. He pulled the sheets out and got to work, a little smile on his face.\n\nThree hours later he trudged up the stairs, a little frown had replaced his earlier smile.\n\nLucy was approaching the stairs with her daughter in her arms and saw the frustrated look. \"Oh oh. That doesn't look like a 'Eureka' expression.\n\nHe gave her a weary smile. \"Actually, in this case, it is. My latest puzzle turned out to be something I solved a while ago. Well, something I invented a few years ago can be adapted to solve this.\" He closed his eyes and shook his head to shake off his grumpiness. \"It doesn't matter. They'll have a solution.\"\n\nLucy smiled at Ben. \"You've saved me the effort of calling you up for lunch. Come join us in the kitchen.\"\n\nThey walked into the room where Tina was placing their lunch on the table. The delicious scent of the meal brought a smile back to his face.\n\nHe could always count on her to take care of his happiness.\n\n-=-\n\nBen was finishing up cleaning the kitchen when the phone rang. Tina got to it first.\n\n\"Shepherd residence. Oh, hello Mr. Greyson. Ben's right here. Hold please.\"\n\nBen smiled at Tina and accepted the handset from her.\n\n\"Hi Walter, what's up?\"\n\n\"Hi Ben. I've spoken to the mortgage officer about the Berlin condo you inherited from Gretchen's estate. I've managed to get them to acknowledge the life insurance clause covers all remaining payments. They wouldn't budge on the penalties for the missed installments. That required payment and Jerry's accounting firm dealt with that for you. He purchased this condo through a numbered company too. I don't know why Rainor hid his ownership of the properties he bought behind the blank corporation, and I'm not opening that can of worms. To get the bank to acknowledge the insurance claim, I sent them the paperwork proving Rainor's ownership of the numbered company and a copy of his death certificate indicating he was deceased. The good news is, the mortgage is paid off.\"\n\n\"Sorry for the grief that caused you, Walter.\"\n\n\"That's fine. It's not all good news, however. I'm having no luck with the bank in regards to that safe deposit box. They're insisting you go to the bank and either close it out or renew it, in person.\"\n\n\"What? In Berlin? What a pain in the ass!\" Ben grumbled.\n\n\"To make matters worse, they're saying the rental on the box is going to expire within the next week,\" Walter continued. \"The notice was apparently mailed but who knows where that went.\"\n\n\"What happens if we just let it lapse?\" Ben asked.\n\n\"The contents would be claimed by the bank. You're not really considering that are you? Aren't you curious about what's inside?\"\n\nBen snorted. \"You know what curiosity did to the cat.\" He brooded for a moment then growled quietly. \"Right... fine. What's the deadline?\"\n\n\"A week from this Wednesday.\"\n\nBen sighed. \"Guess I'm going to Germany. Send me the details?\" Tina and Lucy looked at him in surprise.\n\n\"Thanks, Ben. I'll send them through right now,\" Walter said in relief.\n\n\"Bye, Walter.\"\n\n\"Bye, Ben.\"\n\nHe looked at the concerned expressions on the faces of the two ladies. \"What?\"\n\n-=-\n\nBen parked his truck in the airport long-term parking lot and looked over at the smiling face of his 'traveling companion'.\n\nAfter learning of his trip, Tina and Lucy called a meeting of the ladies in his life. Hearing that Ben would be imminently traveling to Europe on his own, they checked their schedules to see who could join him.\n\nGabriella was scheduled to travel to New York the same week, so she was out. Catherine was in the middle of preparing a fundraiser.\n\nTina and Lucy had doctor's appointments for their babies that week.\n\nThe twins would have loved to go, but it was too short notice to arrange replacement help at the daycare.\n\nTrish, who arrived late to the meeting, was not so secretly delighted that she was the only one who could rearrange her work to free up the time. She would have Ben all to herself.\n\n\"Are we flying first class? Maybe we can sneak in a quickie in the washroom! We never got to do it on our trip to France,\" Trish pouted.\n\nBen rolled his eyes. \"You know how tiny those rooms are?\"\n\n\"Just part of the fun!\" she insisted.\n\nBen grabbed their bags and made his way inside. They went through security and walked to the far end of the terminal to approach a solitary gate. Trish looked around curiously.\n\n\"Where are the other passengers?\" she asked.\n\nBen smiled at her. \"There aren't any other passengers.\"\n\nHer eyes lit up. \"No fucking way! We're flying on the private jet?\"\n\nBen nodded, and Trish jumped up against his chest to kiss him.\n\nTruthfully, after their last flight back from their vacation in France, he'd vowed to use his friend's jet service whenever possible. Being verbally accosted for his reportedly decadent lifestyle by a gaggle of self-righteous old ladies at 30,000 feet was a memory he'd prefer to forget. He recalled Trish had enjoyed the moment, making more than one of the matrons faint with her boasts of just how decadent it felt to be with Ben.\n\nSo, no more commercial airlines, if he could avoid them.\n\nHe ushered Trish through the gate and down to the tarmac. He paused as he gaped at the jet they'd be boarding.\n\nHe'd recently made a significant investment in the company, and one of the things they'd apparently done with the money was to upgrade their fleet.\n\n\"Holy Fuck! That's gorgeous!!!\" Trish gasped in glee. The jet before them was sleek and looked like it was already moving at light-speed just sitting still. He blinked in surprise as it looked nothing like the company's old design. The company colors had changed too. The jet was shiny black with white letters on the side. \"Sky Shepherd?\" he mumbled in surprise.\n\n\"You own the jet?!?\" Trish gasped.\n\nHe looked at her with a confused frown. \"No... no, I just invested capital in the company... oh my god...\"\n\nHe was looking at the emblem painted on the tail. It was the same silhouette used on the tags of Gabriella's, or rather Brezza's, designer clothing! It was him! Naked! Granted it wasn't as detailed as the embroidered tag, but the stylized version they ended up with hadn't eliminated the one detail outline that disturbed him the most! Worse, it was much larger than the garment tag.\n\nA big man with sandy blonde hair left the plane and hustled over towards them.\n\n\"Ben! So glad to see you again! We've been talking so much on the phone, but we haven't had a face to face since you did the original design work on the interiors! When I heard you'd booked one of our new birds I just had to come down to shake your hand!\" They gripped and shook though Ben remained dazed.\n\n\"Dennis, hi. This is Trish Campbell. Trish, Dennis Thomasson.\" She shook the man's hand with a smile.\n\nBen pointed to the plane. \"Sky Shepherd?\"\n\n\"Yeah! Much catchier than our old name. Your branding people are awesome! So helpful! We're getting so many reservations since we rebranded! But hey, we'll always make sure you're a priority!\" he assured Ben.\n\n\"My branding people?\" he asked.\n\n\"Yeah, Gabriella put me in contact with them. They took care of everything from registering the name, hooking us up with a web designer to fix our site, marketing, stationery, business cards- shit! The whole enchilada! That investment you made and Gabriella's advice gave us one hell of a boost!\"\n\nBen recalled Gabriella talking to him about the labels and spinning off a business... crap. He'd been ogling her cleavage when she told him. She'd also been pressing her delightful tits against him at the time. Then he recalled what they'd done next and found himself stiffening in his pants. He'd have to talk with her again to get more information on how his 'brand' was being used.\n\nThe pilot poked his head out the door. \"Dennis! Let our passengers board, or we'll miss our window.\"\n\nThe man gave them a guilty smile and walked them to the door. \"Have a great flight and thanks again!\"\n\nBen and Trish waved to him and climbed the stairs into the jet. Trish walked in, and her jaw dropped.\n\n\"Oh my god, Ben! This is fucking gorgeous!\" she gushed.\n\nHe loaded their carry on suitcases into the closet next to the galley then followed Trish back.\n\n\"Mr. Shepherd, if you could take your seats we'll be taxiing momentarily,\" the pilot said from the cockpit doorway.\n\n\"Certainly. Thanks!\"\n\nBen gestured for Trish to take a seat and he sat in the one facing her. The seats were decadently comfortable and even fit Ben's larger frame. His head rested back against the headrest instead of flopping over the seatback.\n\n\"Shit! I'm ruined for commercial travel!\" Trish moaned as she buckled her seat belt.\n\n\"Me too,\" he sighed.\n\nThe pilot announced they were beginning their taxi out to the runway, so they sat back and smiled at each other.\n\nIt didn't take long to get out to the runway and soon the jet was leaping into the sky. The pilot came on over the intercom and announced they'd be landing in New York to top up their fuel then the next stop would be Berlin. When the seat belt lights went out, Trish popped hers and went immediately to the galley.\n\n\"Damn! They have some quality hooch here! This stuff is for us?\" she asked.\n\n\"Yes, help yourself.\"\n\n\"Maybe later,\" she said distractedly as she nodded to herself and continued to poke around. The snacks looked yummy, and the menu indicated two different entr\u00e9es for dinner, both of which sounded good!\n\nShe walked behind the seating area to look at a door. \"What's behind this door?\"\n\nBen swiveled on his chair to face her. \"Open it and find out.\"\n\nRaising an eyebrow at him, she pulled on the handle and slid the door open.\n\n\"Oh, you gotta be fucking kidding me!\" she gushed as she saw the bed and another door next to it. She rushed to open that door and saw a fully appointed bathroom with a small shower.\n\nBen grinned at the happy, excited sounds coming from Trish. She came running back to his seat and jumped on him. His chair immediately folded flat, so she was stretched out over his body.\n\n\"I LOVE this jet!\" she purred!\n\n\"And you wanted to have a quickie in a commercial jetliner washroom!\" he scoffed gently.\n\nShe smiled and kissed him sensually. He was really enjoying the kiss when she suddenly squeaked and pushed herself back to her feet to rush back into the bedroom. He watched her go in surprise.\n\nShe disappeared around the corner, and he heard a happy yelp. \"I did see a TV on this wall!\"\n\nBen snorted in surprise that a TV had captured Trish's attention more than rubbing her body against him. Maybe the magic was over! That thought made him snort again.\n\nHe climbed to his feet to follow her. When he could see her again, she was sitting on the end of the bed pointing a remote at the TV he couldn't see. He joined her in the bedroom and saw the TV had a menu of available movies. He saw some fairly current movies then the screen jumped to the adult section.\n\n\"Now you're talkin'!\" Trish purred. She scanned through the titles. \"Lame, lame, soft, stupid, lame, oh! This one has promise!\" She stopped on a cover that showed a sultry blond socialite grabbed roughly by a tough looking fellow.\n\n\"You want to watch porn?\" Ben asked incredulously.\n\nShe grinned up at him. \"No!\" He began to feel a little better then she continued. \"I want to act it out with you while we watch porn.\n\n\"You've done this before?\" Ben asked nervously as his eyebrows climbed upwards.\n\n\"Once. Shortly after I married John... but he got stupidly jealous and hit me. I was young and stupid, so I believed his excuses and forgave him. I never watched porn with him again though. You wouldn't react as he did, would you.\" Trish was watching him with loving eyes as Ben tried to suppress his rage at the idea of her husband hitting her.\n\n\"Of course, I wouldn't!\n\n\"So, you'll do it?\" she grinned excitedly.\n\nHe sighed and nodded in defeat. Only for Trish.\n\nWith a happy squeal, she jumped up against his chest and wrapped her arms around him. Her lips found his, and he enjoyed the sensations of her deep kiss and her tits pressing against his chest. His hands cupped her ass to hold her up against his body, and he gave the muscular orbs a good squeeze.\n\nTrish pulled back from the kiss to moan. \"Fuck! I love your hands on my body!\"\n\n\"We should probably hold off on that activity until the stretch between New York and Berlin,\" he suggested.\n\nShe smiled up at him and nodded. She could wait.\n\nThey walked back out to the galley and made their selections for dinner. It was pretty simple to complete the preparations for the meals. They enjoyed the food and Trish had some lovely white wine to accompany it. Ben stuck with water.\n\nThe stopover at New York was short and sweet, and soon they were on their way to Berlin.\n\nTrish smiled at Ben wickedly and walked backward towards the bedroom tugging him along after her. He smiled at her mischievous nature. He knew she liked to try new things, but this one felt odder than most.\n\nHe closed the bedroom door, and she let go of his hand to prepare the TV.\n\n\"You're going to have to fill me in on how this is supposed to work,\" Ben said uneasily.\n\nShe grinned at him. \"Think of it as a kind of party game. We watch the movie and feel free to comment on the production values or acting. We only begin to mirror them when the sex scenes begin. Then we attempt to match their actions and movements as closely as possible. Obviously, I'm the snooty socialite, and you're the rough dude who fucks her silly.\"",
        "\"Do I need to say his lines?\" Ben asked, and Trish barked a laugh.\n\n\"If you want to toss in a few ad libs that fit the scene feel free, but you can't go out of character.\"\n\nTrish started to take her clothes off. Ben's eyebrows rose. \"We don't get to undress as the actors do?\"\n\nShe snorted. \"Are you kidding? This guy is probably gonna tear her clothes off! I don't want you ruining my clothes! We start naked. Adds to the fun!\"\n\nBen took off his clothes as she started the movie. The title sequence was rolling, and the leading actress was driving through an expensive neighborhood. Lots of shots of mansions and big lawns. Lots of close-ups of the woman driving, big sunglasses hiding her eyes. She wore an elegant white silk shirt and a black pencil skirt with high heels.\n\n\"She really does look like she's actually driving,\" Ben remarked.\n\nTrish nodded. \"Probably didn't have the budget for anything more. Shit! Do you see those nails? How would she get anything done with nails that long!\"\n\nBen was beginning to enjoy this. \"She's supposed to be a socialite. What manual labor would you expect her to do?\"\n\n\"She couldn't wipe her ass with nails that long!\"\n\n\"Maybe she has servants to do that for her,\" Ben suggested.\n\n\"HAHAHAHAHA! FUCK! That's gross! Worst fucking job ever!\" Trish howled. She looked at Ben from the corner of her eye. \"You have a sick mind!\"\n\n\"Hey! You were the one who brought up ass wiping!\" he argued.\n\n\"Wait, wait, wait! Credits are done, and she's home. It's starting!\"\n\nBen settled back against the bed's headboard next to Trish who was watching the movie with rapt attention.\n\nOn the screen, the socialite was walking up to the front door of her mansion, flicking her mane of blond hair back over her shoulders. The scene cut to an interior to show her entering and off to the side was a tall, well-dressed man with his pants down around his ankles as he drove himself into the ass of a pretty Hispanic woman in a maid's outfit.\n\nThe socialite paused and shot a look of disgust at the man who was probably supposed to be her husband.\n\n\"The cheating husband! Of course!\" Trish called out. \"Fucking the staff and she's not happy about it.\"\n\nBen assumed that as well from her expression.\n\n\"Fuck! He's really going to town on that poor girl's ass,\" she mumbled, and Ben glanced at her.\n\nThe main actress said some bitter things to her husband who continued to pound until he pulled out and finished on the maid's ass.\n\nHe sneered at his wife and called her a frigid bitch before walking away.\n\n\"Did they not hire any writers for this movie?\" Ben asked.\n\nTrish glanced at him with a grin. \"People don't watch these for the scintillating dialog. They just established that she and he aren't getting it on, so she's probably sexually frustrated. They've set the groundwork for the action to follow.\"\n\nBen gazed at Trish in amazement. \"You got all of that out of his 'frigid bitch' comment?\"\n\n\"Read between the lines!\" she snorted.\n\n\"There was only one line!\" he retorted. \"You'd need at least two to have a between!\"\n\nTrish giggled and put her finger on Ben's lips to hush him. He kissed the pad, and she pulled her finger back, giving him a quick hot look.\n\nBack in the movie, the socialite loudly fired the maid on the spot. The girl begged for her job as she was an illegal, but the socialite pointed to the door. The actress playing the maid needed some lessons on fake crying as the sounds she was making were clearly just that, fake.\n\n\"On the bright side, she no longer has to wipe the woman's ass,\" Ben suggested.\n\nTrish exploded with laughter then slapped Ben's arm. \"EWWW! Sick fucker!\" She was laughing as she said it, so Ben just grinned back at her. He liked to make her laugh.\n\nThey watched the blond climb the stairs. There was a cutaway scene showing the house at night. It was apparent that some time had passed. The next scene was the blond preparing for bed. She began to undress. Standing in her panties, she seemed to be critically examining herself in a mirror. Then her hands began to wander.\n\n\"Ah! Mandatory masturbation scene!\" Trish looked to Ben whose eyes had brightened as he looked to her. \"You get to watch. No touching. Make sure I follow the acts you see on the screen.\"\n\n\"I have to watch the screen with you doing that?!?\" Ben growled.\n\nTrish was already sliding her hands over her tits, plucking at her nipples, following every move the actress did. She nodded to Ben as she bit her lower lip, eyes locked on the screen.\n\nHe was getting hard watching Trish touch herself so, with no immediate outlet for his lust, he turned his eyes to the screen. He could still see Trish in the corner of his eye, mirroring the acts seen on the screen. This game was a strange kind of torture.\n\nHands slid down tight stomach muscles and found their way between thighs to tease the silky smooth skin there.\n\nTrish was breathing hard as she slipped fingers inside as the actress pushed hers deep. The duo kept pace, and soon Trish was slamming two fingers into herself.\n\n\"Oh fuck! I'm getting close!\" she moaned. Ben's cock felt hard as iron.\n\nThe socialite's husband arrived suddenly and barked at his wife to do that elsewhere before he climbed into bed and shut off his light. She immediately stopped and threw herself down on the bed, pulling the sheets over herself in anger.\n\n\"MOTHERFUCKER!\" Trish growled loudly as she pulled her fingers from her wet pussy.\n\nBen looked at her in surprise. \"Why did you stop?\"\n\n\"That's how the game's played. I have to stop if she does.\" She looked at Ben. \"You'll have to stop if the actor you're mirroring does.\"\n\n\"Ah, good to know.\" He thought about that.\n\n\"At least I understand her sexual frustration. I'm so friggin' close!\" she moaned.\n\nBen took her wrist and pulled her hand close, sliding her wet fingers into his mouth. Trish stared at him and moaned softly as he sucked them clean for her.\n\n\"Damn, you're such a sexy man!\" she purred softly, then tore her eyes away to look back to the screen. She pulled her fingers away from him and pointed to the TV. He smiled at her dogged determination to see this game through to the end. Truthfully, he was feeling the need for some relief himself, and all he'd done was watch! He was hoping his character showed up soon.\n\nThe next scene was playing, and the blond was in the driveway watching in shock as her husband drove off in her car. She went into the garage and got into his car and drove off down the street in the opposite direction. There were some scenes of her driving on a freeway followed by a closeup of the vehicle's front as the engine began to steam as it overheated. She had no other choice but to pull off the highway into an industrial area. There was a grimy looking automotive repair shop, and she pulled up to one of the bays. She got out and gestured frustratingly towards the car.\n\n\"That's ditzy woman sign language for I don't understand cars!\" Trish riffed, and Ben chuckled.\n\nThe woman walked into the door of the shop.\n\nThis was the first scene with the main male character and Ben looked at him critically. He was physically big, perhaps just a bit smaller than himself. Muscular and tough looking with smears of oil on his face, arms, and hands. Either he had a few days growth of facial hair, or it was make-up to make him look rugged and dangerous.\n\nHe looked at the blond then wet his lips and adjusted himself through his dirty coverall. When he opened his mouth to snarl at her, his accent was so painfully exaggerated, it dispelled most of the tough guy image. \"Why the accent? Completely wrong!\" Ben grumbled.\n\n\"He's acting!\" Trish said with grand theatrical hand gestures. \"Get ready!\"\n\nHe glanced at her in question then nodded. \"Oh, right!\"\n\nThe socialite was grimacing as she looked at the mechanic, and she was saying some pretty rude things to him. He ignored her barbs as he blatantly eyed her body then they went outside to take a look at the car.\n\nWithout even opening the hood he told her it was the rad and she'd need a new one. She demanded he do it immediately and he drove the car into the bay.\n\nThe next scene was inside the bay. The mechanic met the woman next to the car. He told her the part wouldn't be in until tomorrow and she got angry and slapped his face. Trish glanced at Ben as he looked back at her and without speaking, they agreed that wasn't included in their play.\n\nThe mechanic was mad and grabbed the socialite's hair and forced her back over the hood of the car.\n\nBen once more glanced at Trish, and she nodded. So hair pulling was in. He tossed a pillow from behind himself to the foot of the bed and grabbed Trish to spin and throw her down the bed. He grabbed what he could of Trish's short red hair and forced her onto her back over a pillow. With her head tilted back she could still see the TV, just upside down.\n\nThe mechanic ripped the woman's shirt open, pushing her bra down to expose her big fat tits.\n\n\"See! Ripped her clothes- off!\" Trish gasped, already excited from Ben's manhandling of her body. When he roughly grabbed and squeezed her right tit, tugging and twisting the nipple, her breath gusted from her lungs. His teeth tugged at her left nipple, and she cried out from the sharp pain/pleasure shooting through her.\n\nWhen Ben didn't immediately release her nipple as he usually would, another kind of thrill shot through her. He was following her rules, staying in character for her. Fuck, she was in for some hot rough sex!\n\nBen was struggling to keep his eyes on the screen with Trish wriggling under him. The mechanic ripped the woman's lovely dress all the way down. Then he shoved two fingers up into the socialite's pussy and fucked her hard and fast with them. He shoved his fingers into his mouth then reached down to gather some wetness from her. Then he was ready.\n\nWhen Ben's thick fingers thrust deeply into Trish, she almost fainted. There was some pain, an intense sensation of being full, but it was so brutally sexy, it once more took her breath away. Her body and mind were having a difficult time keeping up with the sensations flooding through them. Her pussy was dripping down between her ass cheeks.\n\nEyes on the screen, she saw she was experiencing exactly what the socialite was enduring, and reality began to slip a little.\n\nBen saw the actor pull his fingers from inside and begin to spank her clit. He immediately started rapidly slapping Trish's swollen pussy lips and stiff clit with his wet fingers.\n\n\"FFFFFFFUUUUUHHHHHH!!!!\" she screamed as an orgasm ripped through her. Her heels drummed against the mattress as her back arched, pushing her pussy up against his slapping fingers.\n\nThe actress cooed and writhed under the mechanic's hand, so no orgasm for her. Ben was unsure if he should continue as... had he won? Was that the point of the game? He should have gotten Trish to explain the rules beforehand.\n\nMr. Mechanic wasn't finished. He took the blond by the hair once more and dragged her off the car's hood to make her kneel before him. Ben knew where this was going. While he wanted some relief, he wasn't sure if Trish could continue. \"Trish?\"\n\n\"Don't... stop...\" she panted.\n\nBen pushed himself up to kneel on the mattress and pulled Trish up by her hair as he rubbed his thick cock against her face as the mechanic was doing to the socialite.\n\nTrish felt the heat and solidity of Ben's cock against her flushed cheeks and her mind spun away from her. Sensation was all. When the thick head pressed against her lips, she automatically opened her mouth to let him inside. She moaned at the raw sexiness and heard Ben's answering moan as her tongue slid along the underside. He began to fuck her mouth, hands gripping her hair and she struggled to take in more of him.\n\nThe socialite was thrashing her arms around, trying ineffectually to push him away. The mechanic pulled her from his cock and slapped her face. Ben frowned as there was no way he was doing that. Trish couldn't see the screen with her face pulled against his body so she wouldn't know.\n\nDocile once more, the socialite took his cock into her mouth and proceeded to gag, spit, and drool as he stabbed her throat repeatedly. Instead, Ben ensured his cock was slick with her spit and began to fuck her mouth deeper and deeper as he had in Costa Rica. She'd managed to get him into her throat before. She was going to do it again. That should be a sufficient replacement for face slapping.\n\nTrish was in heaven. Ben was feeding his hot cock into her mouth so smoothly yet forcefully. He was so dominant! She was his. When one of his strokes finally reached the back of her throat, she felt a slight push before he pulled out and she knew what he wanted. She tilted her head upwards a little more to straighten the entrance to her throat. Fuck, this was so sexy!\n\nThe next stroke reached her throat barrier, but he pressed beyond. She immediately gagged but Ben was already withdrawing. She knew he'd be back and her anticipation sent sparks to her pussy. She managed not to gag the second time as she was suppressing the instinct with everything she had. His rhythm smoothed out, and soon he was fucking her throat. She moaned, and he echoed her.\n\nBen glanced at the TV as he'd been in a daze and saw he wasn't following the action. With a growl, he pulled himself from Trish's mouth and moved the pillow under her hips as he rolled her onto her stomach.\n\nThe mechanic was pounding the socialite's pussy from behind as he held her down over the hood of the car, his fist buried in her long blond locks. Trish was very wet as was his cock, so he grabbed the hair on the back of her head, lined up his cock with her wet opening and slammed himself deep on the first stroke.\n\n\"FFFUUUUUUUUCCCKKK!!! OH FUCK BEN! fuck fuck fuck...\" Aftershocks from the initial thrust sent sparks along her limbs.\n\nHis other hand gripped her hip, and he pounded her as hard as the mechanic slammed the blond. It felt too good, and soon Ben was outpacing the actor but he couldn't stop his hips.\n\nTrish was having another out of body hallucination as she felt the sensations the socialite was experiencing as if they were one person.\n\nBen's heavy balls were slapping her clit with every thrust, and he was spreading her wide. That sensation of fullness was beginning to overwhelm her; then he upped the ante by sliding his thick thumb deep into her tight asshole.\n\n\"AAAAAAAHHHHHHH!!!!\"\n\nTrish felt the world begin to slip away as her orgasm exploded through every nerve. Her last coherent sensation was feeling heat filling her as Ben's orgasm released his cum deep inside.\n\nBen gasped for breath as he leaned over Trish's sleeping body. He saw the peace on her face, and he bent down to kiss her cheek.\n\nWhen he's softened enough to pull free, he did and moved off the bed. He pulled the pillow from under her and threw the blanket over her body.\n\nGlancing back to the screen, he watched the mechanic finish by covering the socialite's face and tits with a coating of cum which went on and on. Ben's eyebrows rose as it continued until the blonde looked like a glazed donut. He snorted and shook his head as the woman panted and cooed happily, somehow transformed by her experience. The mechanic loaned her a dirty workshop coverall to wear home and told her to come back tomorrow to pick up the car. He promised to fuck her again if she was a good little slut and she simpered excitedly.\n\nBen couldn't watch this outrageous crap any longer, so he shut it off and walked into the small washroom to the shower and tidy up. That was a novel experience as well.\n\nWhen he came out of the bathroom, Trish's eyes were open, half open at least, and she smiled blissfully at him.\n\n\"Hey, gorgeous! You missed the end of a truly epic movie!\" he said softly.\n\n\"Hmmm? Epic? I don't know about the movie but what we did was epic!\" Trish purred as she stretched on the bed. \"Ooo! But now I must pee!\" She scooted off the bed and rushed into the bathroom.\n\nBed tidied up the bed and folded their clothes as he tried not to listen to the little squeak sounds Trish was making only steps away. Finally, he couldn't take it any longer.\n\n\"Are you ok in there?\" he called out gently.\n\nHe heard a flush and the sound of running water, then the door opened. Trish smiled at him as she stepped out holding his eyes with hers. \"Yes, everything's fine!\" She slipped under the sheets and crooked her finger at Ben to get him to join her. He grinned and did as she asked.\n\nTrish snuggled up against his chest and purred happily. After a few moments, she glanced up at him. \"So, what did you think of the game. I'll concede the movie left much to be desired.\"\n\nHe chuckled. \"They kept looking into the camera!\"\n\n\"They do that in porn as they want to involve the viewer. They break the fourth wall all the time!\" she explained.\n\nHe snorted in annoyance. \"I don't get the appeal. You're watching two people having sex, which is an intimate and sexy moment, then they're looking at you, and the sense of separation tears away. It feels like they're as aware of you as you are of them.\" He looked down at Trish, but she was looking back at him, waiting for him to explain. He frowned and tried a different tack. \"What if you knew people were watching us right now and had watched what we just did?\"\n\nTrish stretched her tingling body against his and felt a small ache from overdoing it. \"Fuck, don't get me going again! I'm done for tonight! Shit, you say the sexiest things!\"\n\nHe snorted in amusement because, of course, Trish would enjoy that idea. It sent a chill down Ben's spine. He wanted to keep his private moments just that, private.\n\nHe reached up and pressed the intercom button to ask for a wakeup call one hour before arrival. The captain gave him an affirmative and said goodnight before Ben disconnected. Trish just grinned and closed her eyes to drift off.\n\nIt took Ben a little longer as he thought of their game tonight. He decided he could never be a porn star.\n\nWith a softer snort of amusement at the ridiculous notion, he drifted off too.\n\nChapter 2\n\nBen and Trish sat in the back of the taxi as it drove them from the airport to Berlin. They watched the scenery go by as they held hands.\n\nTheir first destination was the condo he'd inherited from Gretchen. Walter called ahead and spoke to the property manager who would meet them this morning at the building.\n\nThis made Ben think about the monster who'd kept Gretchen captive for so many years. The fact that the bastard had written her into his will at all was the only generous act the man had ever done. That Gretchen had immediately named Ben as her heir after a single night together still gave him pause.\n\n\"Hey, what's making you sad?\" Trish asked softly.\n\nHe shook his head and forced a smile onto his face. \"Sorry, lost in thought for a moment.\"\n\nTrish rested her head against his arm, and he kissed her sweet smelling hair.\n\nThey drove on in silence as the taxi took them deeper into the city's core. Ben thought he caught sight of the bank he would be visiting.\n\nThe visit to Berlin wasn't going to be a long one. He planned on checking out the condo today. He'd probably want to put it on the market which he could do from home. He wanted to see if there was anything of Gretchen's in the unit before he did that. Tomorrow, he'd deal with the bank, and the blasted safe deposit box. They'd fly home that night. A quick in and out. He had to get back as he had work to do at home- Shit, actually he didn't. He frowned again. He needed to do something about that.\n\nThe taxi pulled up to an eight-story building with a classic design. Ben was surprised as he thought Rainor would have preferred to live in one of those cold steel and glass towers, considering how he decorated his condo in Sydney.",
        "After paying the driver and collecting their suitcases, they walked to the front door. A man was waiting for them there with a smile on his wrinkled face. He couldn't have been more than an inch or two taller than 5' and very slim in his tailored suit. He glanced at his pocket watch, and Ben had the oddest sensation of witnessing a scene from the past.\n\n\"Mr. Shepherd! Very punctual!\" the small man said softly with a smile.\n\n\"Herr Schmitt?\" Ben asked. The man gave him a quick nod. \"This is Trish Campbell.\"\n\nShe received a quick little bow drawing a smile from her.\n\n\"A formality, I must ask to see identification before presenting you with the keys to your property.\"\n\nBen pulled out his passport which the building manager reviewed and handed back. He gave a set of keys to Ben.\n\nHe glanced at the keys and used the largest one to open the grand front door. They stepped inside, and Trish nodded appreciatively. The modest exterior hid the very luxuriously appointed interior of gleaming marble, highly polished brass, antique furniture, and oil paintings, all lit by spectacular crystal chandeliers. Ben wasn't surprised that Rainor had chosen a unit in such a high-end building, but he knew the man's decorating tastes were far colder than this.\n\nAfter a brief stop at the manager's office to store their baggage securely, they moved to an old cage style elevator. Their guide demonstrated how it worked and took them up to the top floor.\n\nBen glanced at Trish with a puzzled expression. \"He must have been one hell of an investment manager to be able to afford a place like this and the condo in Sydney.\"\n\nTrish just nodded as they walked up to the door to Rainor's unit.\n\nBen went to use the key on the lock then he froze. The lock had been drilled out. He looked to the building manager who frowned and looked closer at the lock.\n\nThe older man tried the door, and it swung inwards. The interior of the apartment was a disaster zone. Every piece of furniture was broken, every cushion was ripped open, their stuffing scattered all over the floor.\n\n\"Can't say I care for how he decorated the place,\" Trish said with raised eyebrows.\n\n\"I don't see any smoke, but it definitely smells like something burned in there. Maybe we should call the fire department... and the police,\" Ben muttered and saw the building manager was already dialing. He saw the remains of the sofa, and sure enough, it had been far more modern than the decor of the rest of the building. White leather, steel, glass, and all with a modern motif. Looking around at what he could see from the doorway, it looked like there'd been paintings on the walls, but now all that remained were slightly darker squares of paint and picture hooks.\n\nThe firemen arrived within ten minutes and confirmed the absence of active fires, but there was fire damage in the master bedroom.\n\nThey waited in the hallway for the police to arrive and this took close to thirty minutes.\n\n\"So good of you to join us Detective Freder,\" Schmitt said with a cold tone. The detective's unpleasant expression in return indicated a possible history between them.\n\nBen shared a look with Trish. He wasn't sure if their knowing each other was a good sign or not.\n\nThe detective was almost as tall as Ben, but he was as slim as Schmitt. Slim to the point of looking like a corpse. Pale with a grayish tint to his skin, he wasn't the healthiest looking specimen. Sunken eyes and cheeks, he cast a disapproving glare at the group standing in the hall.\n\n\"Schmitt.\"\n\nBen swore the detective spit the word out. Definitely some bad blood between the two men. Then those pale blue eyes were locked on him, and Ben saw recognition flare.\n\n\"Why am I not surprised to find the infamous Ben Shepherd outside the apartment of Rainor Hahn?\" Freder sighed.\n\n\"Infamous?\" Ben asked with a scowl.\n\n\"What moldy crypt did you crawl out of?\" Trish growled.\n\nThe detective's eyes flicked to Trish and away, dismissing her.\n\n\"What happened here?\" Freder asked Schmitt.\n\n\"What does it look like, detective?\" the building manager snapped. When the man said nothing Schmitt continued. \"Mr. Shepherd came to Berlin to take possession of his property, the apartment, and its contents. We arrived to discover the lock broken and we smelled smoke. I called the fire department and foolishly, the police as well.\"\n\nThe detective turned to look at Ben. \"How did this property come into your possession? What was your relationship with Rainor Hahn?\"\n\nBen scowled at the unpleasant man.\n\n\"I had no relationship with the man. I spent a few unpleasant minutes in his company on a boat in Sydney Harbor, Australia. After he accidentally fell into the harbor and died, I... came to the aid of his widow. She signed over all of his possessions to me in her will. I didn't discover that fact until after she was killed.\"\n\nFreder stared back at Ben with a weary expression. \"Why have you come now? The death of the widow happened months ago! We all saw it on the television.\"\n\nBen was becoming seriously pissed off at this asshole's attitude. \"I had business in Berlin, so I decided to drop by.\"\n\n\"Business?\"\n\n\"Yes.\" That's all Ben was willing to give him.\n\n\"So you arrive just in time to find the apartment ransacked.\"\n\nBen paused at the odd wording. \"Just in time? What the hell does that mean?\" He looked in the door at the destruction then back to the suspicion in the detective's eyes. \"You think I had something to do with this?\" He gestured toward the door. \"Why on earth would I do that?\"\n\n\"Covering up the possession of stolen art?\" Freder suggested, and Ben looked to the empty walls.\n\n\"Rainor had stolen art? Well, that sheds some light on... things,\" Ben finished, fixing a glare on the detective. He wasn't about to disclose anything to this asshole. \"I had no knowledge of the contents of his apartment, and I had nothing to do with whatever happened inside it.\"\n\nFreder sniffed disdainfully and made his way into the apartment.\n\nBen looked at the building manager. \"Are we expected to stay here or can we go check into our hotel?\"\n\n\"Stay!\" Freder called out from the apartment.\n\nTrish frowned. \"This prick has a pickle up his ass, doesn't he?\" she said loudly enough for the detective to hear.\n\n\"How do you know him?\" Ben asked Schmitt.\n\nThe smaller man sighed. \"A thoroughly unpleasant man. He's been after Mr. Hahn since shortly after he moved into the building. He's made a nuisance of himself with all of the tenants. Several of them lodged complaints against him, and his senior officers finally managed to get him to leave us alone.\"\n\n\"He was probably right about Rainor. That man was evil,\" Ben growled.\n\nSchmitt glanced into the apartment then to Ben. \"I thought you said you didn't know him,\" he said quietly.\n\n\"I didn't, but I learned a lot about him from his wife after I brought her home. What he did to that woman... I wish I'd had a chance to get my hands on him before he died by such a stupid accident.\"\n\nFreder was suddenly in the doorway. \"You are not the only one who feels that way about the late Mr. Hahn.\"\n\nBen examined the detective's expression and saw a tremendous amount of pent-up frustration. He nodded to him slightly.\n\n\"Do you know what he kept in his wall safe?\" the man pressed.\n\nBen's eyebrows went up. \"How could I know that? I just finished saying I didn't know the man. I wasn't even aware the apartment had a wall safe. We haven't entered the unit yet.\"\n\nThe detective fixed a scornful eye on him then gestured for him to enter.\n\nBen shared another look with Trish then walked into the apartment with her following. Ignoring the destruction as they moved through the unit, he saw the layout was very nice. As an older building, there was less open flow between the kitchen, dining room and living room but each separate room was generous in size. They saw it had two bedrooms, the smaller one used as an office. There was considerable destruction in that room.\n\nOnce they were in the master bedroom, they saw the source of the burnt smell. He made his way closer and stood next to the bed to get a better look. The wall around the wall safe was severely scorched. Its door was on the floor under the opening.\n\nBen looked back towards the detective and was startled to see one painting had been left behind. It remained hanging on the bedroom wall opposite the bed. It was a small portrait of a clown's face, in full makeup. It stared back at them with a sad expression.\n\n\"Rainor dealt with stolen art? Could that be a Red Skelton original?\" Ben asked the detective. The man turned to look back at the painting with a thoughtful expression.\n\n\"Why the fuck would anyone want a clown staring at you while you sleep... or while you had sex! That's fucking creepy!\" Trish said with a shudder.\n\nBen snorted in amusement then nodded in agreement. He found its sad stare to be slightly unnerving.\n\nGiving his head a shake, Ben glanced around the destroyed room. \"If there was anything of Gretchen's in the apartment it's either been destroyed or taken by whoever did this. I don't think there's any reason for us to remain.\" He looked to the property manager. \"There doesn't appear to be any significant damage to the structure of the apartment, aside from the safe and scorch marks on the surrounding wall. I intend to sell. Would I be able to have you arrange the repairs and disposal of the contents?\"\n\nThe man nodded and smiled at him. \"You don't wish to keep anything?\" He glanced to the painting of the clown.\n\nBen grinned. \"That's right. It can all go.\" The man nodded to him again.\n\n\"We're done here,\" Ben announced as he looked to the detective. The man looked like he was going to argue but turned his face away with a scowl.\n\nThe property manager plucked the painting from the wall, and they left the condo to return to his office where they got their bags. Ben gave the keys back to him as the man would work with the realtor once the unit was ready for selling. He called them a taxi and walked them out. They shook hands with the property manager on the sidewalk then climbed into their ride.\n\nBen leaned forward to speak to the driver. \"Ritz-Carlton, Berlin, please.\"\n\n\"Really?\" Trish squeaked.\n\nBen nodded. \"Tina made the reservation for us. It's right downtown as the bank I'm visiting is close by.\" He smiled at her. \"There's a shopping district close by as well.\"\n\nTrish grinned happily at him, and she trembled with excitement.\n\nAfter a short time, and several excited exclamations from Trish as she spotted the shopping areas, they reached the hotel. Ben paid the driver, and they headed inside with their bags. He led them up to the reception desk.\n\n\"Ah, Mr. Shepherd. Welcome to the Ritz-Carlton. We've been expecting you,\" the gentleman behind the counter said with a professional smile.\n\nBen nodded to him.\n\nThe clerk looked at his screen. \"I see we have you for just the one night in the Carlton Club Suite, checking out tomorrow.\"\n\n\"That's right,\" Ben agreed as he handed over his credit card.\n\nThe man checked them in and made two keys. \"Here are your keys. The elevators are to your right. I do hope you enjoy your stay with us tonight.\" A young female clerk stepped up next to the man with an envelope in her hand and an awestruck look on her face. \"What is it, Diana?\"\n\n\"A note was delivered for Mr. Shepherd last night,\" the woman said.\n\nTrish looked to Ben. \"Who knew you were going to be here?\"\n\nHe held out his hand for the note as he glanced at Trish. \"Other than Tina, no one.\"\n\nThe young woman gave him the envelope. He opened it and read the message. \"It's not Tina. It's a dinner invitation from someone called Darius Milonas. Is Grill Royal a good restaurant?\" he asked the clerks.\n\n\"Yes, it's excellent,\" the man replied.\n\nBen looked to Trish and caught her little frown. He smiled at her as he crumpled the note in his fist. \"Yeah, I don't feel like going to dinner with a stranger either. Besides, the note made this Darius fellow sound a little pushy and rude.\"\n\nShe grinned at him as he handed the crushed paper back to the clerk who dropped it in the trash.\n\nThey took the elevator up, and Ben let Trish use her key to get them into their room. It was every bit as luxurious and well-appointed as Ben had expected. He would have been perfectly comfortable in a smaller boutique hotel but seeing the joy on Trish's face made it all worthwhile.\n\nBesides, it was only for one night.\n\nChapter 3\n\nFrom the outside, the dance club didn't look like much. Just another multistory brick factory conversion. Nothing like the splashy clubs he'd been to back home. Still, when in Berlin, do as the Berliners do.\n\nThey'd enjoyed an intimate dinner at a nice Italian restaurant which had excellent online reviews. Ben did his best to ignore the watching eyes of the other customers and the overly attentive staff. The food was excellent, and Trish was happy, so that's what mattered to him. As they finished up a light dessert, Tish looked up the address to a dance club she'd read about previously. She seemed pretty excited about it, and Ben was looking forward to exercising off the dinner they'd just enjoyed.\n\nOnce they arrived, he discovered he was able to skip the queue when the doorman recognized him. He had to admit this was the only perk of celebrity he found useful. He entered the building behind Trish who was already starting to move to the beat. As they walked through the tunnel-like entrance hall, the music reverberated and beat on their bodies. She cast a happy grin over her shoulder.\n\n\"This is just like the clubs John and I went to when we first got married. We were so much into the industrial rock scene. Come on!\" she exclaimed as she grabbed his hand and pulled him out onto the crowded dance floor. It wasn't his kind of music, but she was happy he went with it.\n\nBen was amazed at the level of energy the people around him were showing. It was like the music was feeding raw power to them and the only outlet was to dance.\n\nSharing an impressed smile with Trish who was watching him with sparkling eyes, Ben let the music soak into him as well. Pretty soon, he was moving in sync with the crowd, and Trish laughed with joy.\n\nSet after set went by until Trish gripped his arm. He looked at her, and she mimed drinking something. He realized how dehydrated he was becoming as well, so he nodded to her. They danced their way to the edge of the dance floor until they could separate themselves from the crowd. The bodies weren't as densely packed here, and they moved into the next room where a bar ran along one wall with stand up tables filling the remaining space. The room wasn't designed for relaxing but for recharging to get back to the dancing, Ben assumed. He looked at Trish, and she was covered with a sheen of sweat, and he knew he was a sweaty mess too.\n\nHer grin told him she was loving this.\n\nThey made their way to the bar and a blond woman wearing dark kohl around her eyes, black lipstick and many facial piercings leaned over the counter while she held Ben's eyes with hers. She said something Ben assumed was a request for their order.\n\n\"Bottled still water and a beer,\" he said glancing at Trish who nodded. He made hand gestures to indicate 'a large bottle' and the bartender smirked at him before moving away.\n\nWhile they waited, they glanced around the room, and people watched. Ben saw a few groups who seemed to have recognized him but thankfully they remained at their tables. Maintaining ownership of the coveted tables trumped a face to face with him it seemed. He was ok with that!\n\nThe dress code in the club seemed to be mostly black with silver accessories like studded belts, rings, earrings, and, of course, piercings. He saw lots of goth-lite makeup as well. His black dress shirt, black jeans, and black dress shoes made him fit right in. He turned to look at Trish.\n\n\"I don't know. I can't see you with this style.\"\n\nShe snorted. \"Don't ask me to show you the pictures from that time because I think I burned them all. I still like the music though. Gets the blood pumping!\" A sexy smile slipped across her lips. \"Speaking of pumping...\"\n\nThe bartender returned, sparing Ben from having to respond.\n\nThe bottle was large, and the water was cold. Ben drank half of it in one go and smiled at the bartender when he thumped the bottle back down on the bar. The woman wasn't smiling anymore. She was looking at the two well-dressed thugs standing next to Trish and himself. The woman moved away, quickly.\n\nThe man next to him had on a nicely tailored dark blue suit, but his rough tattoos and oddly shaved head ruined the look. Ben caught the flash of gold and silver caps as he smiled up at him while holding his eye. \"Our employer invited you to dinner. You did not show.\"\n\nBen scowled and the scar bisecting his face flared. The man's smile faltered. \"I'm not in the habit of accepting unsolicited invitations from strangers. Our not showing should have been enough of a clue. Not interested.\"\n\n\"Still, Mr. Milonas would very much like to speak with you.\"\n\n\"No.\"\n\nThe man sucked his teeth in frustration as he stared into Ben's eyes. He sighed. He nodded to his partner who moved closer to Trish menacingly. Ben saw him pull his suit jacket back slightly, exposing the butt of his gun. The bald man tilted his head with a cocky smile as he carefully displayed the weapon to Ben.\n\nFrowning, Ben glanced at Trish and saw he'd better keep up because she was about to-\n\nBeer and glass exploded against the face of the goon at her elbow, the frothing liquid jetting up his sinuses and into his eyes.\n\nBen's fist hammered into the temple of the tattooed man, and he sagged to the floor, completely limp.\n\nTrish followed up the beer with a punch to the choking man's solar plexus and on his way down she smashed Ben's half empty bottle of water over his head.\n\nBen scanned the room and spotted a third goon-in-a-suit glaring at them from the far doorway. He ducked out and disappeared in the crowd. Not coming to rescue his buddies, so probably off to speak to his boss.\n\n\"You know, I wasn't finished drinking that,\" Ben grumbled to Trish, looking at the remains of the bottle.\n\n\"And I was finished my beer?\" she snorted with a grin. She looked down at the two unconscious men. \"They owe us drinks.\"\n\nThe tables nearby hadn't had any time to react; it happened so quickly. They stood frozen, stunned and silent. But soon everyone was taking pictures of Ben and Trish standing at the bar with the men at their feet.\n\nThe bartender came back and looked over the bar.\n\n\"Can I get another bottle of still water and a beer?\" Ben asked. \"Oh, and could you call the police?\"\n\nThe woman nodded and quickly moved away.\n\n\"I couldn't hear what he said. Who were they?\" Trish asked.\n\nBen glanced at Trish in surprise. \"They apparently worked for the man who invited us to dinner. He was insistent on speaking to us. Pretty rude to send armed thugs to threaten us.\" He frowned as he wondered if this Darius fellow would get the hint this time.\n\nThe bartender returned with their drinks and Ben gave her a bill that more than covered the cost. \"Keep the change. Sorry about the mess,\" he said.\n\nTrish held up her glass with a grin, so he tapped the rim with his bottle. Flashes went off. Ben frowned at the watchers then drank.\n\nBen saw the flicker of colored lights on the wall then police were pouring into the bar. Cell phone flashes were going off as the officers rushed up to Ben and Trish.\n\nOne of the policemen barked something at them as others inspected the men on the floor.\n\n\"Sorry, I don't speak German,\" Ben said to him.\n\n\"Did you do this?\" the officer said pointed to the two men.\n\n\"In self-defense, yes, we did,\" Ben explained.\n\nThe officer's eyes went to Trish in surprise, and she just rolled her eyes.",
        "\"They wanted us to go with them, and I said no. That's when they threatened us with their guns. So we... disabled the threat,\" Ben said calmly. Trish was smiling at him proudly.\n\n\"Did you know the men?\"\n\nBen's eyebrows rose. \"No! We've never seen them before. That one said they worked for Mr. Milonas. Earlier, I ignored a dinner invite from a Darius Milonas.\"\n\nSeveral of the officers looked at Ben nervously, and the two unconscious men were quickly cuffed.\n\n\"You will come with us to the station. The captain will want to speak with you.\"\n\nBen looked at Trish wearily. \"Yeah, I thought this might happen. Fine. Let's go.\"\n\nTrish preceded Ben as they followed the officer outside and got into the back of the police cruiser. She took Ben's hand. \"You know how to show a lady a good time.\"\n\nHe looked to her and saw the playful smile. That brought a smile of his own. He lifted her hand and kissed her knuckles.\n\n\"Mmmm... hey, you ever do it in the back of a police car?\" she chuckled.\n\n\"Behave!\" he growled quietly but fought to hide his grin.\n\n-=-\n\nWhen Ben woke the following morning in the plush hotel bed, he felt jet-lagged and more than a little grumpy. He hadn't slept too well the night before after the police finally released them.\n\nThey'd been held for questioning for hours. The police pressed Ben to divulge his connection to Darius Milonas who, it turned out, was suspected of being involved in criminal activities including smuggling, drug trafficking, extortion, and murder. Not a nice man.\n\nBen maintained that he didn't know Milonas and when the police began cycling back through their questions a third time Ben finally lost his patience. He insisted they either charge him or release him. He collected Trish, and they went directly back to the hotel to get some sleep. For once, Trish behaved which proved how tired she was as well.\n\nHe reached out to her, but her side of the bed was empty. He sat up and listened for the sound of the shower but heard nothing but the soft murmur of the air conditioning. Yawning, he climbed off the bed to stand and stretch his back muscles as the mattress was just a little too plush for his tastes.\n\nGlancing at the clock next to the bed, he saw it was still reasonably early. He might be able to get in some time in the hotel gym before breakfast. That would get work the kinks out of his muscles.\n\nHe walked into the gorgeous ensuite bathroom but the lights were off, and Trish wasn't there. Moving out into the living room, he spotted a note perched on the back of the sofa facing the bedroom door.\n\n\"Ben, gone for a run. Back soon. Trish.\"\n\nHe frowned in annoyance. With no idea of when she left, he had no idea when she'd be back. His back tweaked once more so he walked back into the bedroom and put on his workout clothes.\n\nHe updated the note to let Trish know where he was and left the room.\n\nThe hotel gym wasn't empty, but the few guests inside kept to themselves and that suited Ben perfectly. He found a free machine and went through his routine. He didn't push himself too hard as he was still feeling the drag of the time difference. By the end, his muscles were warm and moving smoothly. Trish hadn't joined him in the gym, so he wiped down his machine and went back to his room.\n\nWhen Ben entered, he saw his note was still resting on the sofa facing the front door. That brought another frown and just a hint of worry. He picked up his cell and dialed her number but heard it ringing in the bedroom. She hadn't taken it with her.\n\nMaybe she got lost running in the core of a strange city? That seemed unlikely.\n\nMore trouble from the goons from last night? That was a possibility, but Trish was no easy target, and she'd keep to the main roads.\n\nHe couldn't shake the sense of unease, but standing in the middle of the living room all sweaty from the gym wasn't helpful. Ben walked into the master bathroom and took a shower, shaved and got dressed.\n\nTrish still hadn't returned, and he was beginning to worry seriously.\n\nHis cell began to buzz which meant a call from a number not on his approved caller list. He picked it up and answered.\n\n\"Hello?\"\n\n\"Am I speaking with Benjamin Shepherd?\" The voice had a distinct accent.\n\n\"Ben,\" he replied. He was picking up a strange vibe from the voice.\n\n\"What?\"\n\n\"Ben, not Benjamin. Who is this?\" he asked.\n\n\"This is Darius Milonas. We need to speak, Benjamin.\"\n\nBen scowled as he heard the smirk in the man's tone. \"I thought I was pretty clear when I ignored your dinner summons. My response to your sending armed goons to threaten me should have completely clarified my desire to be left alone,\" he growled.\n\n\"Yes, your unpleasant American manners have left me with no choice but to ensure your willingness to join me for what should be a brief conversation,\" Darius sighed.\n\nBen froze. Trish wasn't back. \"What-\"\n\n\"Your lady friend would very much like you to join her. I will send two of my men to bring you to her. We will have our conversation. Have I made myself clear, Benjamin?\" There was steel in Darius' tone now.\n\nHis gut twisted at the thought of Trish in the hands of this thug sent a shot of fear for her through him. Then his rage threatened to erupt. He took a deep breath to fight that down as well. Threatening Darius while he had Trish was not a smart move.\n\n\"When-\"\n\nThere was a knock at the door of his room. \"Go with them now and follow their instructions. Don't waste any more of my time, Benjamin,\" Darius sighed and the line went dead.\n\nBen hung up and went to the door. He opened it to see two grim looking men in dark suits. One of them was the third goon from the bar last night. He scowled at them.\n\n\"Leave the cell here,\" Goon number three insisted as he saw Ben holding his phone.\n\nBen left it on the table by the front door and stepped out into the hall.\n\n\"Follow,\" the talkative goon said. Ben was grateful they weren't pointing guns at him at least.\n\nThey took the elevator all the way to the underground parking lot where a driver in a silver Mercedes SUV with heavily tinted windows waited for them. Ben was directed to get into the back seat. Goon number three got in the opposite side next to him, and his silent partner climbed in the passenger side up front. They left the lot and joined the early morning commuting traffic.\n\nBen ignored the other passengers as he looked out the window at the scenery passing by. His mind was trying to connect the dots to determine what Milonas might want from him. His jaw muscles twitched as he thought of Rainor Hahn's trashed apartment. Was there a connection? Detective Freder seemed to believe Rainor dealt in stolen art. That suggested Rainor might be a criminal, but certainly not in the same league as Milonas, if he went by what the police had told him. The ransacking of the condo made no sense to him. There were too many unanswered questions. He'd have to wait.\n\nHis mind took him back to Trish. If Milonas' hurt her, Ben was going to kill him.\n\nThey left the core and passed through some residential areas to reach the outer edge of the city. They drove into an industrial park with lots of new buildings under construction. The SUV passed through a fence guarded by another dark-suited man then approached the front of a tall office tower which was in its early stages of building; ten stories of concrete floors and an external elevator bolted to the face of the tower. Glancing at the nearby towers which were further along in their build, this tower was likely going to be clad in glass and steel as well. For now, though, it was just a stack of ugly grey floors with safety fencing to keep the workers from stepping out into space.\n\nThe driver remained with the SUV and Ben's two escorts led him into the elevator and rode it up to the top floor. Ben stepped off to face two more men, each carrying a nasty little machine gun. He wondered at the elevated level of security Milonas seemed to have surrounding him. Ben had no exposure to the criminal world, so he had to accept this was one of the costs. He scowled as he scanned his eyes over the men and saw them clutching their weapons a little tighter.\n\nGoon number three approached him cautiously. \"I must check for weapons.\"\n\nBen had seen enough television to know the pose and stretched his arms out to the side. The man quickly patted him down then stepped back. He nodded and gestured for Ben to continue down the hall to the right, now surrounded by the four men.\n\nAfter a short distance, they pushed through a curtain of translucent plastic. Beyond this Ben saw a portable table set up with some chairs. His eyes immediately locked on Trish first. She had a dark bruise on her left cheekbone, and he saw the tension in her eyes.\n\n\"Ben! I'm ok. Calm. It's ok.\"\n\nHe blinked at her as he heard the growl coming from his lips die down. He was also several feet closer to the table. The men circling him were all pointing their weapons at him while glancing nervously at the man seated a short distance ahead.\n\n\"You're ok?\" Ben asked roughly.\n\n\"I'm ok. Nothing I can't handle,\" Trish said as she held his eyes.\n\nBen took a few deep, slow breaths then looked across the table.\n\nThe man watching him stood slowly with a smile on his face. He looked to Trish. \"You spoke the truth. He isn't intimidated by my men. Foolish.\"\n\nBen recognized the voice from the call. This was Darius Milonas. The man was maybe 5' 7\" but had broad shoulders, muscular arms, and a narrow waist. His hair was dark, tight curls with patches of grey at his temples. His trimmed black beard carried on the grey patch theme on either side of his strong chin. Pale grey eyes assessed Ben as they took the measure of each other. There didn't appear to be any soft edges to Darius.\n\n\"So this is the Bronze Man. Benjamin Shepherd,\" the crime boss said with a little condescension in his tone.\n\n\"Ben.\"\n\nDarius' gaze cooled a little, and the smirk slid away.\n\n\"I was a little surprised to discover someone with your reputation had a relationship with Rainor Hahn-\"\n\n\"I had no relationship with him. I met him once, for only a few minutes on the night he fell off the charter boat into Sydney Harbour and became shark food,\" Ben interrupted.\n\nDarius gazed thoughtfully at Ben. \"Yet you took possession of his condominium.\"\n\nThat answered one question for Ben. \"His wife left the estate in my name. I didn't discover this until... later.\" He wasn't going to share his feelings about Gretchen with this thug.\n\n\"His wife? That bastard was married?!?\" Darius chuckled in surprise. Ben nodded, holding the man's eyes. \"And she just signed over everything to you?\"\n\nBen nodded again. He didn't deserve more of an answer than that.\n\nThe crime boss moved slowly around the table until he was behind Trish. Ben bristled but noted the man stopped outside of Trish's strike zone. So he was aware of how she'd bested one of his men.\n\n\"Rainor was managing some funds for me. He had a considerable amount of my money switching from account to account. Then he disappeared without delivering the final account numbers and ownership credentials. I believe the ledger of these accounts is now in your possession,\" Darius said with a little stiffness. Rainor's theft had damaged his pride, and with Rainor's death, Darius lost the opportunity to punish him for the betrayal.\n\n\"So it was you and your men who trashed the condo?\" Ben asked.\n\nThe smirk was back. \"I don't personally deal with such trivial tasks. Not when I have people to do them for me. The ledger wasn't there. It must be in the bank safe deposit box you will be visiting today.\"\n\nBen blinked at the man in surprise. \"May I ask how you're aware of that?\"\n\nDarius' smile widened in satisfaction. \"No, you may not. What will happen today is that you will go to the bank and bring the ledger to me. My assistant will accompany you to ensure this happens.\" He looked behind Ben and gestured for someone to approach.\n\nThe sound of heels on concrete was too sharp and high pitched to come from the shoes of one of Darius' men.\n\nBen turned to see a woman striding towards him with a confident smile at the corner of her lips. She was tall, over 6' with the 3\" heels on her tall, tan leather boots. She wore her long, red leather jacket open, and the plunging V of her white silk blouse displayed a delightful amount of cleavage courtesy of a black lace push up bra. Her body was svelte and long-limbed, and she moved with an energy that hinted at strength beneath her grace. Her yellow blonde hair fell in soft waves to mid-back. She had high cheekbones, almond-shaped sky blue eyes, a slim nose and a sensual mouth painted with a deep crimson lipstick to match her manicure. Right now that mouth was beginning to display a broad smile of recognition. Her step faltered only momentarily as she moved to stand before Ben. She reached out a hand, and Ben automatically enclosed it in his larger one. He felt her testing his grip, and the unexpected strength in her hand caused his brows to rise slightly as they shook hands.\n\n\"Mr. Shepherd! It is an honor to meet you!\" Her thick Russian accent flavored her speech, but she could make herself understood. There was a sharp intelligence in those lovely eyes.\n\n\"Not under the best of circumstances,\" he responded with a frown. The blonde turned her eyes to Darius curiously.\n\nDarius wasn't pleased with the charmed tone in the woman's voice. \"Benjamin, this is Liliya Sokolov. Liliya, you will accompany Benjamin to the bank to collect my ledger. There and back with no delays.\" She nodded to her employer as she dipped her eyes downwards submissively.\n\nDarius turned his attention back to Ben. \"To ensure you do not attempt anything stupidly heroic, your companion will remain with me until you return. Contact the police, prevent Liliya's retrieval of the ledger, fail to follow any of my instructions, and the bitch dies, slowly. Do you understand me... Benjamin?\"\n\nBen locked eyes with Darius, the scar across his face flaring from his scowl. He gave the man a slow nod. Then he looked to Trish. She looked into his eyes and smiled at him.\n\n\"See ya soon, big guy,\" she said.\n\nA shiver ran down Ben's back when he heard her confidence in him in her voice. A small smile slipped onto his lips, and he gave her a nod.\n\nTurning back to Milonas, the smile fell away. He could almost feel the machismo and arrogance radiating from him. He could see Milonas was physically strong and his eyes gave away his cruel streak. The man was clearly a vicious criminal and matched the description the police gave the previous night. \"I'll assist Ms. Sokolov in collecting your ledger for you but, trust me, make any attempt to harm Trish, and you'll regret it.\"\n\nDropping his smile, Milonas nodded for Liliya to lead Ben away. She nodded and turned, gesturing for Ben to join her. She guided Ben back to the elevator, and he noted they were being followed by three armed escorts. One had remained behind, probably to guard Trish.\n\nBen picked up a slight stiffness in Liliya's smile now, which just increased his unease at leaving Trish behind. He glanced back at the guards, but they were watching him like hawks.\n\nWhen she opened the gate, he had no choice but to step into the elevator. The three gunmen followed them on. Soon they were on their way down, and Ben lifted his eyes to look up to the floor rising above him.\n\nHe turned his face to Liliya, but she looked away.\n\nA cold lump formed in his stomach but there was nothing he could do. Trish was on her own.\n\n-=-\n\nOnce he heard the elevator depart, Darius turned his eyes to the redhead who looked back with a smirk on her lips.\n\nHe took off his jacket and hung it over the back of a chair neatly.\n\n\"Benjamin should not have challenged me as I never back down from a challenge.\" He unbuttoned his shirt and stripped it off to place it over the chair back as well. His thickly muscled chest was now on display, and he smiled as he saw her eyes scan over the thick curls there. He rolled his neck and shoulders to stretch his muscles in preparation.\n\nTrish's smirk grew into a condescending smile. \"His warning wasn't to protect me.\" She turned her head to look at the remaining guard with the automatic weapon watching her so carefully. Looking back to Darius, she snorted quietly. She saw his jaw muscles jumping slightly then he gestured for the guard to leave.\n\n\"Sir?\" the man nervously asked as he'd been part of the group that collected her.\n\n\"Leave!\" Darius snapped.\n\nThe guard moved to the plastic sheeting and passed through the gap. Trish heard his heels scuff against the cement as he rushed away towards the elevator. Doing a quick survey of the space around them, she nodded to herself. She kicked off her runners and tugged off her socks before standing to face Darius who was slowly prowling towards her. She moved back and turned slightly to put the building's core at her back.\n\n\"I hope you don't have a fragile male ego because you're about to get your sorry ass kicked by a woman.\"\n\n\"American women, so fucking arrogant. I will enjoy teaching you some humility,\" he returned with a grunt as he kicked off his leather shoes and tugged off his socks.\n\nHe went into his fighting stance, and Trish tried to identify the style. She bounced on her toes and raised her arms, hands ready to deflect or strike as required.\n\nMilonas made a few feints and Trish stayed just out of range as she watched his eyes. He was fast; maybe even approaching Ben's speed. That wasn't good.\n\nHe threw a series of jabs, a few of them glancing off her upper arms, and she realized if he managed to strike her solidly, he might put her down for the count.\n\nA swift sweeping kick skimmed past her cheek as she threw herself back to avoid it. He followed up with a series of lunges she barely managed to escape, but the last one left him open for a cupped palm slap against his left ear. He gasped and staggered from the popped eardrum. She hadn't been able to hit him hard enough to burst it, but it dazed him at the very least.\n\nSeeing a chance, she launched an attack of her own but crashed backward as he lashed out with his heel, catching her solidly in the gut. When she hit the concrete, she rolled and narrowly avoided his follow up stomp. Gasping to get the wind back in her lungs, she spun and jabbed the point of her elbow into the meat of his calf before rolling away. He grunted loudly in pain as the dense muscle knotted immediately. He bounced back from her on his uninjured leg.\n\n\"Fucking Bitch!\" he barked as he put his foot down carefully. He grimaced as he tried to stretch the muscles out.\n\n\"You hit... pretty hard... but... not as hard... as Ben,\" she wheezed out as she got her breath back.\n\nDarius paused to look at her in disbelief. \"He hit you?\"\n\nShe wickedly grinned as she got her breathing back under control. Her stomach hurt terribly as did her bruised arms, but she wouldn't let it show. \"Ben hit the heavy bag I was bracing. Knocked me off my feet and I lost my wind. Not like your little punk taps.\"\n\nDarius' eyes went cold. \"I think you don't understand your situation or your station in life.\" He took a step closer, and she took a step back. They repeated this pattern slowly, but only he could see she was getting close to the building's core and soon there would be no room to retreat.\n\n\"Station in life? What the fuck is that supposed to mean? Are you one of those disillusioned shit for brains who whines about the days when men were men and women were subservient?\" she spat.\n\nHe allowed himself a smile to keep her talking. He'd have her soon as they continued to move back.\n\n\"A woman's place is in the kitchen making her man meals, ironing his clothes, keeping the house clean?\" She risked a glance to the left, and her target was finally within reach.",
        "\"Fuck that noise!\" she laughed as she skipped back to grab hold of the push broom's handle. Some delinquent construction worker left it for her, leaning it up against the wall. She gripped the pole tightly and drove her heel against the spot it screwed into the bristle head. Wood cracked and split.\n\nSuddenly, she had herself a makeshift quarterstaff.\n\nHis eyes flashed wide then the blunt end of the broom handle connected with his Adam's apple in a sharp jab. He choked and stumbled back.\n\nDarius tried to fend off the pole with one hand as the other went to his throat. He attempted to call out but only managed a weak croak.\n\nTrish spun and whipped the staff against the fingers of his outstretched hand, breaking three. He squeaked and yanked his broken hand back as his good one reached for the darting broom handle. His croaking got louder, so Trish struck his throat once more with the blunt end of her weapon.\n\nHe gasped and finally caught the end of the pole with his uninjured hand. Trish used his grip to brace herself while she dropped and spun in to deliver a vicious heel strike to the side of the knee on his planted leg. As it was carrying his weight, it gave with a sharp, tearing pop. He staggered and lost his grip on the broom handle.\n\nTrish spun the shaft and jabbed the jagged, splintered end into his right eye. She was rewarded with a high pitched wheeze as the orb popped.\n\nBlinded and in intense pain, Darius staggered forward, and she threw herself down and under his sweeping grab. She rolled behind him and thrust the blunt end of the stick back towards Darius. It struck his inner thigh and quickly slid upwards to catch him in the balls.\n\nWith a pained grunt, he collapsed to his knees and fell forward, bouncing once on the dusty concrete. He slipped under the 2 x 4 boards bolted across the opening of an elevator shaft. His forward momentum made him begin to slide into the opening. At the last second, he frantically hooked his arm around the wall next to the opening, as the rest of his body slipped over the lip. He clung to the wall with all his strength.\n\nTrish climbed to her feet as she looked to Darius struggling to keep from falling into the shaft. \"Shit,\" she sighed. She'd intended on beating him unconscious, but now she was stuck. He was too heavy for her to pull up and if she called for the guard, he'd shoot her.\n\n\"Help me...\" Milonas croaked. The arm he'd braced against the wall was the one without broken fingers, but his leg on that side had torn knee ligaments. He couldn't use it to pull himself up. When he tried, he loosened his arm's precarious grip. He was gasping and sputtering as his grip began to slip in the dust.\n\nShe looked down into his desperate eye and thought of the lives he'd probably destroyed. He was no longer her primary concern. \"No.\"\n\nTrish sprinted back to the table and pulled the gun from the pocket of his jacket. She knew how to shoot, but she wasn't a crack shot like Catherine. She wished the tall blonde was here with her. She ducked down behind the chair covered by the jacket. It blocked the view of her from the opening in the plastic sheeting. She looked over to where Darius struggled to climb out of the shaft. She could see the desperation and terror in his remaining eye.\n\nWith a sudden puff of dust, his grip on the floor slipped, and his head disappeared as he dropped away.\n\nHis scream was surprisingly high pitched, but it cut off suddenly.\n\nTrish watched the opening in the plastic with the gun held out before her in both hands. The guard slipped through the gap, his machine gun clutched tightly in his hands.\n\nHer shot was deafening from under the table, but the guard dropped bonelessly as the bullet punched through his heart.\n\nTrish waited a second then rushed forward to collect the machine gun.\n\nThis was a first for her. She'd actually killed a man, two if she counted Milonas. She knew she'd beaten Eli Sturn unconscious, but the blow that killed him hadn't come from her hand. Maybe she could consider Milonas the same as Sturn, but looking down at the dead guard's body, she couldn't deny this guy was her first deliberate kill. She didn't want to do anymore. That said, she didn't want the others to come to investigate but how could she stop them?\n\n-=-\n\nWhen the guard's lifeless body hit the sidewalk like a bag of wet cement, the goons standing by the cars jumped for cover. When no further bodies fell, they slowly came out and stared at the broken and twisted thing.\n\nThen they looked up.\n\nThe crazy redhead with the big tits was waving at them with the guard's weapon in her hand. They ran for cover again. A quick discussion behind the vehicle and they all agreed. Darius must be dead. The scream they'd heard earlier must have been him, not the redhead as they'd all assumed.\n\nIt was time to leave.\n\n-=-\n\nTrish watched the cars quickly head for the gate and collect their colleague before driving away. She walked back to Darius' jacket and found his cell. It was locked, but she'd be able to make an emergency call. She wasn't going to put Ben at risk as he still had at least one gunman and the blonde bitch watching him. She'd trust Ben to take care of himself.\n\nShe couldn't tell the police where Ben had gone so she'd have to play dumb. She unzipped her top a little more and tugged down her sports bra to make her girls bulge upwards.\n\nNow she was ready.\n\nShe hoped Ben was safe.\n\n-=-\n\nThe bank's architecture was imposing, and Ben was finding himself distracted by the arches, high ceilings, and antique moldings. The vault was huge, and his engineering instincts were tingling like mad. He was also nervous for Trish, but he had to trust that she could take care of herself and keep out of trouble until he could return to her.\n\nWhen they'd arrived at the bank, only Liliya and Ben had gone inside. The silver SUV with its driver and armed escort would wait to take them back. As they'd walked, Ben glanced over at Liliya, trying to get a read on the tall blonde. Undeniably lovely, she moved... like Trish; like power held in check. This didn't detract too much from the image of elegance she was striving to portray; most people would end their assessment at her beauty. Ben, however, was surrounded by beauty and looked closer. Her long red leather coat and tall boots hid her body, but her movements suggested her svelte form was all muscle. He wondered if the circumstances were different, would she and Trish share enough interests to find some common ground.\n\nOnce inside, he introduced himself and Liliya to the clerk responsible for managing the safe deposit boxes. Ben showed his documentation as Walter instructed. After a tedious period of reading and signing documents, the clerk finally escorted them into the vault. Now, they used their keys to open the locks, and the clerk pulled a long box from the compartment and handed it to Ben.\n\nLiliya shared a glance with Ben then followed the clerk to a private room to view the contents. Once they were alone, they looked at the long metal box on the table before them. Ben saw the slightest tremble run through Liliya's body. She reached for the lid, but he pressed a big hand down on it as his eyes caught hers.\n\n\"Is Trish going to be safe when we bring back the ledger?\" he asked.\n\nSomething flashed in her eyes and his gut clenched. She was afraid. Not of Ben, but for Trish.\n\n\"We should return, soon,\" she answered quietly. Ben heard the warning and lifted his hand. She reached for the lid again. \"Rainor did not like paper. Will be memory stick,\" she said. Her accent was getting thicker with her tension.\n\n\"How well did you know Rainor?\" Ben asked.\n\nShe paused, looking at the tension in Ben's jaw. \"Well enough to know how he worked... and how he fucked. Not well enough to know he had wife. Darius say stay close to him. He wanted to be sure Rainor would not do what he did do. I read him wrong. I... paid for mistake. So many mistakes.\" Her expression was bleak before she caught herself and forced the stiff smile back in place.\n\nBen sighed. Damn, she was another woman in distress. For Trish's sake, he was going to have to look the other way. Trish was his only priority.\n\nLiliya lifted the lid and reached in to pull out some rolled bundles of paper. After a cursory glance, she handed them to Ben.\n\nHe looked closer and saw they were deeds. He accepted the last of them from Liliya's hands as she went back to searching the box. He read the titles of the papers, and there were seven separate deeds for property in Germany, France, Hong Kong, Singapore, Russia, England, and the US. He'd have to do a little research on the addresses, but he was likely looking at a sizable fortune in real estate.\n\nLiliya made a sound of relief. She pulled her hand out of the box holding a tiny silver object. It had a USB connector so she'd found the memory stick.\n\n\"Is that it? Can we go?\" he asked, conscious of how long they'd been away from Trish.\n\nLiliya pulled a small tablet from an inner pocket of her jacket. She turned it on, and once it was booted, she connected the memory stick.\n\nWhen the folder opened, it showed a series of image file icons. There was nothing else on the stick.\n\n\"Images? Shouldn't a digital ledger be a spreadsheet or a document file?\" Ben asked.\n\nLiliya glanced nervously at Ben and nodded stiffly. She tentatively double tapped on the first icon, and the tablet opened the image file.\n\nShe gasped as she stared at the screen in shock.\n\nBen saw the image was of an older man with a stocky build and close-cropped grey hair. His barrel chest was matted with grey curls. He was standing at the foot of a large bed, taking his clothes off. The camera must have been positioned on the headboard aiming down the bed. On the mattress was a dark-skinned young man with long, wavy black hair. He was naked and quite erect. Liliya swept her finger across the picture to the left, and the next image file appeared. The older man was naked now, and the young man had taken his cock in his mouth. The older man's head was thrown back in bliss. She flipped through the images faster and faster, and Ben saw the young man had performed a number of sexual acts for his lover. The photos were quite clear and explicit. Their faces were clearly visible if these images were for blackmail purposes which Ben suspected.\n\nIn the last few, the activity on the bed took a dark turn. The older man was choking his partner then broke his neck.\n\nBen's eyes caught sight of something familiar in the background of the last image. It was so distinct and jarring it took a few minutes for him to place it.\n\nOn the wall next to the door to the bedroom, hung a painting. A clown's sad face watching the activities on the bed.\n\n\"Geezus! That's Rainor's bedroom in his Berlin condo!\" Ben exclaimed as he pointed to the painting. He saw the room's layout matched as well. The bed's footboard, too.\n\nLiliya's pale skin had gone pasty, and her face held a stricken expression. \"We should not have looked at these,\" she mumbled to herself. She shut down the tablet and pulled the memory stick. These went into the inner pocket of her coat. Then she turned a fierce gaze at Ben. \"Tell no one what you saw.\" He nodded.\n\n\"What about the ledger?\" Ben asked tensely.\n\n\"Is not there.\"\n\n\"What does that mean for Trish?\" Ben growled, and her eyes told him it wouldn't be good. \"If the ledger data was on a memory stick, Rainor might have kept it with him. His key ring is somewhere in Sydney Harbor.\" Her expression didn't improve.\n\nIn desperation, Ben tipped the container up and thumped its end. A rolled black velvet cloth, stuck at the far end of the box, slid into view. He carefully tugged it free and noted it was tied closed with two satin ribbons. He shoved the empty container aside and placed the rolled cloth on the table surface. Undoing the ribbon bows, he unrolled the velvet to display a fortune in fairly large diamonds, ranging from one to ten carats. While there were fewer of the larger ones, there had to be close to three hundred of the pretty stones. All were cut beautifully, and the light they reflected was dazzling.\n\nBut no memory stick. FUCK!\n\nBen looked to Liliya, and saw her eyes were trapped by the vast fortune in glittering stones. He saw an intense hunger there.\n\nHis current situation was a nightmare. He had to go back to that monster and extract Trish from his clutches. He had a fortune in diamonds he could use as a bargaining tool. The properties were potentially worth more. There was a memory stick with blackmail images on it. Maybe that was worth something, but he was reluctant to give him the stick. He saw the beginnings of a plan to get out of this alive if he could get Liliya's cooperation.\n\n\"Give me your cell phone,\" he said.\n\nShe blinked at him as she tore her gaze away from the diamonds. \"What?\"\n\n\"Your cell phone, I need its camera.\" He held his hand out expectantly with a determined look.\n\nLiliya found herself handing it over after she launched its camera app.\n\nBen took several shots of the diamonds to capture the sheer quantity and their brightness. He took one shot of the deeds lined up in a row then handed the cell back to her and rolled the black velvet to protect the stones again. Once the bundle was tied closed, he pushed it into the back of the safe deposit box once more.\n\n\"What!?! What are you doing?\" she cried.\n\nHe ignored her and put the deeds back into the box as well, closing the lid.\n\n\"We're going back to get Trish. If you help me extract her, half the diamonds are yours.\" He thought the diamonds were likely tainted with the crime Rainor had to be involved in to get them. If she wanted to deal with the fallout that was her business but the remaining diamonds were going to the authorities.\n\nCold eyes held his. \"I could take them.\" She suddenly reached into her jacket for her gun but found herself folded backward and slammed to the surface of the small table. She was dazed for a few seconds. She stared up at Ben with wide, frightened eyes and saw him flinch but his grip remained firm. She hadn't seen him move! He held her throat in his left hand as his right eased the small but deadly gun from her jacket. Once he tucked it into his jacket pocket, he collected the memory stick from her too. He released her and stood back, but he never took his eyes off hers. Liliya sat up and rubbed her throat. She eased herself off the table and watched him cautiously.\n\nHe sighed. \"You have no leverage. I could see in your eyes that you don't think Trish and I are going to get out of this alive. What you were supposed to collect isn't here, so you've failed Milonas once more. You may be in as much danger as we are. Now that I know what's in the box and you have the proof on your cell, I have something to bargain with for our safety.\"\n\nShaken, she opened the door at his gesture and walked back out to meet the clerk once more. Ben put the safe deposit box back into the vault and followed the clerk back upstairs. As Ben sat with the clerk renewing its lease for another year, she racked her brain to find a way to get herself out of this situation and get her hands on those diamonds. They would assure her future.\n\nBen finally rejoined her, and they made their way from the bank to the side street where their ride would pick them up.\n\n\"You must give me memory stick,\" she quietly said as they waited for the SUV.\n\n\"Not until we get away from Milonas,\" he growled. She frowned and looked away.\n\nThe vehicle arrived, and they climbed in. The SUV headed back to the edge of the city in silence.\n\nAs they approached the industrial complex, they began to see an abundance of emergency vehicles. An ambulance went by followed by a police car. Ben was shocked to see Trish sitting in the back seat. A huge wave of relief crashed through his body, and he sighed.\n\n\"Pull into the parking lot on right,\" Liliya snapped at the driver.\n\nHe did, and goon number three sitting in the front passenger seat looked back to see her pointing her deadly little gun between his eyes.\n\n\"You two, get out, leave keys, walk away. Milonas is dead or captured if redhead is with police. You need to disappear. Look for a new job,\" she suggested with a calm voice. The two men in front shared a look, stepped from the car, and walked away without a backward glance.\n\nBen looked at her in surprise as she must have noticed Trish in the police car as well. Then he saw the gun in her hand was the one he'd collected from her. She must have picked his pocket while he was distracted, looking out the window. He frowned at his stupidity.\n\nThe gun was aimed at him now, and her back was to the door. She watched him very carefully.\n\n\"Memory stick, please. Slow and easy.\"\n\nBen made no move to give it to her. \"You said it yourself. Your boss is dead or in jail. You don't need to do this anymore,\" Ben replied.\n\n\"Weak minded fool was not my boss,\" she snapped in frustration.\n\nBen's eyebrows went up in surprise.\n\nLiliya softly sighed as she looked at Ben. \"I work for man you saw on memory stick. I infiltrated Milonas' operation to keep eye on him. He was working with Rainor. When Rainor disappeared with ledger, my employer made me stay close to Milonas who hunted Rainor. Tracked him to Australia but then Rainor died. That news made my employer very upset, but he made me stay with Darius to ensure he only got ledger. I- I was not told what he was truly after.\"\n\nShe shuddered, and Ben felt uneasy that the man frightened the woman so much.\n\nLiliya looked him in the eye. \"He knows about you. He knows you had access to Rainor's safe deposit box. You need to give me memory stick. Police must never see it as he will kill everyone you love for revenge. We all know who you love,\" Liliya softly said as she recalled the stories on TV about Ben and his ladies.\n\nBen growled as his fame was showing yet another side of its pervasive evil.\n\n\"It contains proof that he murdered the young man. That could put him behind bars and set you free from him,\" Ben suggested.\n\nLiliya smiled sadly. \"Murder charge means nothing to him. If was proven he was homosexual, he would lose contracts with Russian government, especially military.\" She paused as she thought about her next move. \"We go to bank. You get me diamonds. I must have them. And stick.\"\n\nBen tilted his head as he examined the woman before him. \"Why are you working for this man if he terrifies you?\"\n\nEyes flashing angrily, she lifted the gun and pointed it between his eyes.\n\n\"That won't get you the diamonds,\" he said, watching her calmly.\n\nLiliya's emotions surged, and uncertainty flared in her eyes for the first time. \"You must! I- it is only way.\" She went silent as Ben waited. Rage flared then desperation, and finally, resignation. The hand with the gun dropped to her lap. \"He has my daughter, Rose,\" she whispered.\n\n\"Shit!\" Ben raged internally. Outwardly, he struggled to appear calm. \"Who is he?\" Ben asked gently.\n\nShe was looking at her hands in her lap as she answered. \"Yuri Gruzinsky. He is very powerful industrialist and will kill to ensure those images never get out. I might have signed our death warrant by seeing them. He will suspect.\"\n\n\"When's the next time you have to contact him?\" Ben asked.\n\n\"Tonight. If Milonas is dead or captured by police, will be on news. Yuri will want update. He will tell me to return. Tomorrow. I need diamonds!\" She raised the gun once more.\n\nHe ignored the threat. \"Give me your cell. I need to send a text.\"\n\nSteaming in frustration, she held his eyes but finally gave in. She handed him the phone, and he banged out a quick text.\n\n\"Trish will head back to the hotel once she frees herself from the police. Her cell is there as is mine. I'm having her meet me where we ate dinner last night. The police won't know the location. We won't involve them. We'll head to the bank now,\" he told her, and she sighed.",
        "They moved to the front seats when they saw the coast was clear and she drove them back into the city. As they approached the bank, Liliya hissed between her teeth in frustration. The police were parked before the building. She turned off onto a side street and pulled over.\n\n\"What do we do now?\"\n\nBen's stomach rumbled. \"We eat,\" he said with a small smile.\n\n-=-\n\nIt was late afternoon when Trish slipped into the dining area of the restaurant from the kitchen. Ben surged out of his chair and pulled her into his arms. Once he'd hugged her, his lips found hers, and he fed his passion and relief into the kiss.\n\nTrish moaned in pleasure and a little discomfort. After surrendering to his kiss, she pulled back gently. \"Easy big guy! Don't squeeze too hard; I'm pretty bruised.\" Her eyes moved to the side to see Liliya sitting at Ben's table. She immediately bristled. \"What the FUCK is she doing here?!?\"\n\nBen gently touched her chin to tilt her face back to look at him. \"It's complicated. She's not the enemy, but we still have one. Did you bring my cell?\"\n\nShe handed him his phone then sat down opposite the blonde who looked back at her calmly with just a hint of a smile at the corners of her lips.\n\nTrish addressed Ben. \"I didn't tell the police about the safe deposit box as the lead detective inspired no fucking confidence. He seemed the shoot first, check for hostages second kind of asshole. I told them I'd been kidnapped to get to you, but I'd freed myself when Darius decided to get a little rough. I said I wasn't sure if he'd contacted you before I took him out.\"\n\n\"What happened to Milonas?\" Liliya asked quietly.\n\n\"After you two left, his male ego was offended by Ben's warning, so he decided to prove what a man he was by beating me up.\"\n\n\"Oh my god! I'm so sorry, Trish!\" Ben gasped.\n\nShe held up her hand with a grin. \"No, it was perfect. You made it possible for me to go one on one with Darius. The arrogant prick couldn't conceive of losing to me. Sent the guard away to prove he didn't need any protection and we went hand to hand.\" She glanced over at the Russian blonde whose smug little smile had slipped away.\n\n\"You fought him barehanded? I saw him fight. Brutal! I would not do it,\" Liliya leaned forward to say to the woman across from her.\n\n\"Yeah, he connected a few times and fuck, did he hit hard! I've got the bruises to prove it.\" Then she grinned wickedly. \"But the idiot let me guide him over to where I could get my hands on a wooden broom handle. Once I had that, I took him apart.\"\n\nBen grinned at the readhead's vicious glee. She'd gotten her revenge.\n\n\"You killed him?\" Liliya asked quietly.\n\nTrish shook her head. \"No, I think the fall down the elevator shaft did that.\"\n\nLiliya snorted explosively in surprise and lifted a napkin to cover her face in embarrassment. Trish grinned at her.\n\n\"What about the guard?\" Ben asked.\n\nTrish's smile dimmed a little. \"Yeah...\" She took a deep breath as she paused. \"I had to shoot him with Darius' gun.\" She shook her head. \"I dropped his body over the railing, so he hit the ground near the remaining guards. I waved the machine gun to them, and they booked.\"\n\n\"Booked?\" Liliya asked.\n\n\"Ran away like the little bitches they are,\" she said with a smile.\n\nBen shook his head in amazement at Trish and kissed her hand, getting a loving smile for that. He returned to a search on his cell and found the man. \"Yuri Gruzinsky,\" he mumbled then clicked on the images search so he could show Trish an image of the man who was potentially a threat to him and his family.\n\n\"This is the face of our new enemy,\" he said to Trish as he showed her the image.\n\nThere were some pictures of the man at his factories and refineries. There were also some images of him at charity functions. One caught his eye, and he zoomed in. Yuri was standing next to a man who Ben recognized, Nikolai Noskov. His lovely wife Galena stood at his side. He turned the cell's screen to Liliya who looked at it with interest.\n\n\"Yuri and Nikolai Noskov know each other?\" Ben asked her.\n\nLiliya nodded. \"Rivals. Fierce. Much hated.\" She paused then looked into Ben's eyes. \"Yuri arranged Noskov twins kidnapping.\"\n\n\"WHAT?!?\" Ben roared, and both women grabbed an arm to calm him and pull him back down in his chair. The other customers were looking at them in interest. \"Sorry,\" he grumbled once he got control back. He looked to the blonde and saw her nodding.\n\n\"Nikolai beat Yuri for a big contract. Mining gold. For revenge, Yuri stole children and sold to a slaver. He said, will sell Rose too if I disobey.\"\n\n\"Who's Rose?\" Trish asked.\n\nLiliya looked at Trish. \"My daughter.\"\n\n\"Shit,\" Trish growled then glanced at Ben. They shared a look.\n\n\"According to Liliya, since we picked up a very sensitive item from the safe deposit box that Yuri wants, he'll put the ones I love in danger until he gets it. Not sure if that threat goes away once he does.\" He stood up. \"I have to make a quick call.\"\n\nAs he walked off, Trish turned to look at Liliya. Her expression hardened. \"I want you to know, if you're playing on Ben's white knight syndrome, I will personally kick your ass twice as hard as I did Darius'. And you fucking better have a daughter named Rose who needs rescuing!\"\n\nLiliya blinked at the fierce creature sitting across from her. She pulled out her cell and opened her photo album to search until she got to the selfie she took holding her daughter in her arms. She handed the cell to Trish who looked at it cautiously. Once she saw the young girl, Trish could no longer maintain her scowl, and her expression softened. \"Damn... she's so beautiful. What a sweetie,\" she said gently.\n\nSilent tears ran down Liliya's cheek as she nodded. Trish handed the phone back and held her hand.\n\nBen returned and saw Liliya's tears. He glanced to the image on the phone, and his heart lurched in his chest. He shared another look with Trish then collected himself.\n\n\"Nikolai's secretary informed me that he's at a family gathering but will call me first thing in the morning,\" he said.\n\nLiliya's eyes widened when a light came on behind them. \"You rescued his daughters!\"\n\nHe shifted uncomfortably. \"Yes, but I'm not calling in a favor. He needs to know who put his daughters in that horrific situation and he may have advice on how to deal with the threat Yuri represents. They travel in the same circles. This is way outside my experience. I'm just a simple mechanical engineer.\"\n\nLiliya snorted in amusement again, and Trish grinned with her. The redhead shared a look with the amused and skeptical blonde.\n\n\"Ben has a cockeyed perception of his impact on those around him. He actually thinks it's small,\" Trish said to the woman.\n\n\"Trish!\" Ben yelped then looked at her in confusion as he replayed her words in his mind.\n\nShe laughed as she saw him struggling to separate what she'd actually said from what he'd heard.\n\n\"What? I wasn't talking about the impact your cock has on us!\" She leaned towards Liliya and spoke with a conspiratorial tone. \"Which is by no means small!\"\n\n\"Trish! Stop!\" Ben exclaimed once more, and both ladies laughed at his look of embarrassment though Trish held up her hands in surrender. She reached out and rubbed his arm affectionately then winced as her bruised muscles protested.\n\nBen immediately sent her a look of concern, but she just smiled sweetly to him. \"It's just the bruising.\"\n\nHe shivered at the thought of Trish being hurt. She reached up to smooth the worry lines on his forehead.\n\nHe sighed at her touch. \"Nothing we can do until tomorrow morning. We'll give the bank another try. It must have been a coincidence that the police were at the bank today when we went back to it.\"\n\n\"Are you going to give me the diamonds?\" Liliya asked hopefully.\n\nTrish perked up. \"Diamonds?\"\n\nBen nodded to Liliya. \"Show her the pictures,\" he suggested.\n\nThe Russian blonde found them on her cell and passed it across to Trish whose eyes widened with shock.\n\n\"Where the fuck- these were in the safe deposit box?\" she hissed quietly to the two of them. Ben and Liliya nodded. She turned her eyes to Ben. \"And you're giving them to her? She works for the bad guys!\"\n\nBen leaned forward. \"Half. She might be able to use them to get Rose to safety and keep her safe.\"\n\nTrish leaned back, mouth open in surprise, flustered at the idea of Ben giving all of those diamonds to someone who worked with the bad guys! She saw Ben's mind was made up, so she threw her hands in the air. \"Fuck it. Whatever.\"\n\nBen could see some of the tension leave Liliya's face when she saw Trish wasn't going to fight her on it. Trish looked exhausted. He needed to let her rest. \"It's been a difficult day for all of us. I think we'll head back to our hotel. Where are you staying? Will you be ok tonight?\"\n\nLiliya smiled at Ben. \"I will be fine. I have hotel room a few blocks from here,\" she said. \"I see you tomorrow morning, yes?\" Ben nodded. \"The memory stick-\"\n\n\"I'll hang on to that until tomorrow. If Yuri's going to threaten my family I'm going to see this through,\" Ben said grimly. \"Take my cell number so you can reach me.\"\n\nShe still looked a little frustrated that he wouldn't give her the stick but entered his number into her cell and shared hers. With a final look into his eyes, she nodded to herself. \"Until tomorrow.\" Ben stood as she did and with a nod to Trish she made her way to the entrance and stepped out into the street.\n\nTrish frowned. \"I love her Natasha Fatale impression-\" Ben began to protest, but Trish held up her hand. \"I'm trying to keep an open mind,\" she sighed then held Ben's eyes. \"This could very well be a trap. She's playing the damsel in distress card pretty hard and bringing in the big guns of her daughter in the hands of the villain. I concede it might be true. The picture of the young girl did look like it could be hers.\" She sighed and shifted uncomfortably. \"I need food, preferably room service, then a hot bath followed by a soft bed with my man beside me.\"\n\nBen smiled at her. \"That can be arranged. Let's go.\"\n\nShe leaned against his side as they walked to the exit. \"So... you're really giving her those diamonds?\"\n\n\"Trish.\"\n\nChapter 4\n\nBen woke with a headache, so he got up and took a few painkillers. He ordered breakfast from room service then opened his laptop and did a little work in the living room. He started making notes on what had happened to date to bring them to this point, who the key players seemed to be and tried to work out how Rainor managed to create such a mess. It was a little disheartening.\n\nHe also did a little research on the properties be recalled from the deeds he now owned. That was enlightening, but he was left with more questions.\n\nThe math seemed off considering the value of the items in that safe deposit box. While he hadn't been told the actual dollar value of the investments Rainor had stolen from Milonas, it seemed unlikely to account for the commercial evaluation of the diamonds and the property. One or the other but both? It felt like a piece of the puzzle was missing.\n\nRoughly forty-five minutes later Trish wandered out of the bedroom and Ben frowned when he saw the bruises on her arms and her stomach. He'd held her gently the night before, and the marks didn't look much better today. \"Good morning.\"\n\nThere was a knock on the door. \"Room service.\"\n\nTrish pivoted on her heel and walked back into the bedroom as Ben let the waiter wheel the cart into the room. Ben signed for it as Trish returned, wrapped in a fluffy robe, plenty of cleavage on display. The young man's eyes threatened to pop out of his head until Ben's thank you broke his hypnosis, and he gushed his thanks as he left and Ben locked up.\n\nHe walked back to the living room and fixed the grinning redhead with a weary stare.\n\n\"What? You gave him a tip. Why can't I?\" she said with a grin.\n\n\"Because yours makes them want to give you more than just the tip.\"\n\nTrish burst into a loud laugh then she clutched her stomach muscles. \"Oooo! Don't make me laugh! It hurts to laugh,\" she moaned through her chuckles.\n\nThey settled down to enjoy their breakfast and Ben filled her in on what he'd worked out so far.\n\n\"I don't know how it started but somehow Rainor was interacting with some extremely wealthy people, some of whom were less than squeaky clean. We know of Darius Milanos and now Yuri Gruzinsky. He somehow arranged for Yuri to have a sexual encounter in his condo and captured it on camera. Yuri had sex with a young man and murdered him afterward. There are pictures of this on the memory stick. Rainor must have been blackmailing Yuri or at least threatened to.\"\n\n\"Shit. That's fucked up,\" Trish said softly.\n\nBen nodded. \"As we heard yesterday, Rainor was also working with Darius to launder his money. He was moving the cash through a series of accounts and kept a digital ledger of the accounts. There was no ledger in the safe deposit box, but there was a large number of diamonds- No!\" he said to interrupt Trish's interjection as she leaned forward. She plunked herself back with a pout.\n\n\"There was also deeds to seven properties; seven large plots of real estate in seven different countries. Their value exceeds the diamonds. These are prime sections of property in some of the busiest cities in the world. We might be talking billions of dollars' worth of real estate. How Rainor got his hands on this is a mystery. He seemed arrogant enough to believe he could outmaneuver these underworld figures and stay ahead of them.\"\n\n\"Only to fall victim to another kind of shark,\" Trish grinned. Ben rolled his eyes.\n\nBen's cell began to ring. He got up and collected the phone from the coffee table. \"Hello?\"\n\n\"Am I speaking with Ben Shepherd?\" a man's voice asked.\n\n\"Yes.\"\n\n\"This is Nikolai Noskov.\"\n\n\"Nikolai, thank you for calling back!\"\n\n\"Nonsense. I'm glad you called. Are you in Russia? Can you visit?\"\n\nBen smiled at the almost hopeful tone. He felt better about calling him away from his family. Speaking of which...\n\n\"I'm actually in Berlin now, but I was wondering if it would be possible for me to visit. I'm going to have to speak to the pilot of the jet service I'm using to see if we can land in Russia. I don't know how that works,\" Ben admitted.\n\n\"Give me the number for your pilot, and I will make the arrangements for you to fly into a private airport owned by a business partner of mine. Will this visit be for business or pleasure?\" Nikolai asked, picking up a little tension in Ben's voice.\n\n\"I came across some information yesterday which I need to discuss with you. It pertains to the source of the issue I helped you with when we met in France. There's another similar situation that will happen if I don't present this source with something he wants, probably today.\"\n\nNikolai was quiet for a moment then he cleared his throat. \"You must give me the number so I can make arrangements for your visit as soon as you can, yes?\"\n\n\"I can be at the airport in... ninety minutes,\" Ben said to Nikolai as he looked to Trish who was watching him with concern. She wiped her mouth and dashed off to the bedroom to start getting ready.\n\nBen gave Nikolai the pilot's contact number. \"I'll give him a call now and let him know to expect your call.\"\n\n\"My driver, Leo, will pick you up at the airport and bring you to my home. Thank you, Ben. See you soon,\" the man responded and hung up.\n\nBen called the pilot who was expecting them to fly home today and filled him in on the change of itinerary. As they spoke, Nikolai's call beeped on the line, so Ben said his goodbyes and rushed off to the bathroom to get ready himself. He tried not to ogle Trish as she squeezed into the form-fitting, long-sleeved red sweater and her black leather pants that squeezed her ass so nicely. Mmmm...\n\n\"Ben! I know that look, and as much as I'd love to ride you to exhaustion, we have a flight to catch!\" she cautioned him.\n\n\"Right,\" he grumbled. He forced himself into the bathroom to take his shower. A cold one.\n\nOnce they were heading out the door, Ben tried calling Liliya but it went straight to voicemail. He shared a worried look with Trish, hoping that wasn't a bad sign.\n\nBen walked up to the reception desk to check out.\n\n\"Was everything to your satisfaction Mr. Shepherd?\" the clerk said with a smile as he handed him the statement.\n\n\"Yes, you have a lovely hotel,\" Ben responded.\n\n\"You have a message. It came in during the night.\" The clerk handed him the paper.\n\nDistracted, Ben nodded. \"Thank you. Goodbye.\"\n\nHe walked back to Trish as he read and crumpled the note in his hand. \"Yuri called her back to Russia. She asked for me to bring the memory stick, but not the diamonds. I'm not sure what that means. She no longer thinks she can buy her freedom from the man?\"\n\n\"Sounds like her situation is going from bad to worse,\" Trish murmured. They rushed out of the hotel and flagged a taxi to get them to the airport.\n\n\"We never got a chance to do any shopping,\" Trish lamented as they drove through the posh shopping district.\n\n\"I'll make time for that when we get back home. We can visit any shopping district you want. New York, Los Angeles-\"\n\n\"Ooo! Rodeo Drive! Fuck yeah!\" she grinned. \"Oh! Can we bring the twins? They'd kill to shop there!\"\n\nBen chuckled. \"If they're available.\"\n\nThey got to the airport in good time and met with the pilot in the terminal.\n\n\"Good morning, sir. The flight plan is registered, and we are good to go. You have friends in high places to be able to turn this around so quickly.\"\n\nBen nodded. \"Very good friends!\" he agreed with a smile.\n\n\"How long will we be there?\" the pilot asked.\n\n\"Not more than a day or two I assume.\"\n\n\"Very good, sir. See you on the plane.\"\n\nBen and Trish went through security and made their way onto the Jet. Ben squirmed once more when he saw that big logo on its tail and ignored Trish's knowing smile.\n\n-=-\n\nThe flight was smooth, and soon they were landing at the private airport. A limo was waiting for them at the hangar the plane stopped before. When they left the plane a broad-shouldered man with just the tiniest fringe of grey hair stepped away from the side of the car to stride forward.\n\n\"Hello. I am Leo. Please, let me take your bags.\" He hustled them over behind the car and put them in the trunk then opened the door for Trish and Ben.\n\nHe drove them off the airport grounds and headed for the city. They hadn't gone through the usual security process at all. Ben shared a look with Trish.\n\nHe gawked out the windows as he'd never expected to find himself in Russia.\n\nNot too long after, they were driving through a gated community of the exceptionally wealthy and pulled through a second set of security gates and a long drive to stop before a grand mansion.\n\nNikolai was standing in the open doorway with Galena and their two daughters. All were smiling broadly. Once Ben was standing next to the car, the girls rushed forward and gave him hugs. Ben grinned and hugged them back. His eyebrows went up. \"They're growing so fast!\" he exclaimed to their parents who beamed broad and proud smiles back at them.\n\nTrish stepped from the car, and the girls went wide-eyed as did their parents. Ben smiled back at Trish's shy smile.\n\n\"May I present my lovely girlfriend, Trish Campbell,\" he said with a flourish and grinned to see her blush. It felt good to be on the other side of that for once. Her eyes twinkled at him when she realized he was getting his revenge.\n\n\"She's also one of my neighbors back home.\" He nodded proudly, and her face just warmed up a little more. \"Trish, this is Nikolai and Galena Noskov and their beautiful daughters...\" he looked closely, trying to recognize them from when they were so much smaller. \"Mika... and Roza?\" he guessed as he pointed to them. From their delighted smiles, he'd guessed correctly."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "mature",
        "romance",
        "harem",
        "threesome"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-shepherds-crook-pt-01"
}