{
    "title": "Just a Little Magic Ch. 08",
    "pages": [
        "JUST A LITTLE MAGIC Chapter 8\n\nSammy and Trish started dating right after the pool party. They both seemed to be happy. She was great for him, and he was constantly going out of his way to do nice things for her.\n\nSammy had done something wonderful for me, too - something I hadn't been smart enough to do myself: he'd taken a photo of Sophie talking to me. I only looked at it a few thousand times.\n\nI sent it to her immediately, attached to a short email, which took me four tries to write. I didn't want to be smarmy, but cool and distant sounded worse. Why not just admit that I'd been really struck by her, and that the pool party was still on my mind?\n\nShe replied with a link to the video of me working my magic.\n\nI'm sure you've seen it. I've watched it three times, and I still have no idea how you did it. It was a very memorable night for me, as well. Good luck on your upcoming tour!\n\nAh - Sophie had been checking our webpage. We had a six-week tour of the Eastern U.S. seaboard starting in the middle of August. We had new material to try out, and some pretty famous venues to perform in. We went from Vermont to Florida.\n\nThe shows went well. Sammy was missing Trish, while Janine was ticked off at having to spend so much time with the two of us. She was seeing some tennis player while we were in New York. Maybe that was why she wasn't getting on my case for not going out with groupies every night.\n\nThat's not to say that I didn't go out with women at all - because I did. But after a couple of times, I discovered that my heart just wasn't in it. It might have been a case of 'been there, done that'. You may find it hard to believe, but near-anonymous casual sex just wasn't the be-all and end-all for me.\n\nPart of that might have been because of Danielle. I knew the difference between fucking a groupie and making love to a woman who really cared about me. I'd spent quite a few hours trying to figure out what had gone wrong between us. The more I thought about it, though, the more my head hurt - literally.\n\nAnd then there was Sophie. Was there something there, between us? Could there be more? I couldn't quite see how, since she was tied to her job, in one place, while my career meant frequent travel.\n\nI understood that we needed to make money. This was Sammy's sole source of income, and we were still trying to amass a war-chest for the future. Nor had I forgotten what this whole thing was all about. It was getting closer all the time: the 12 women that I would have to seduce, and then impregnate.\n\nBut my thoughts still kept turning to Sophie. The temptation was there to phone or text her, to send her clever or funny links, just to remind her that I was thinking of her. Instead, I wrote myself little notes on hotel stationery, and turned those into a well-thought out email (okay, a better-thought out email) every week or two.\n\nI asked how her new job was going, told her how well Sammy and Trish were doing, and mentioned some of the highlights of the tour.\n\nShe responded. Her replies told me a little about her job (including the fact that she was too busy to have much of a social life - that was good news), and she asked about me.\n\nWe got home at the beginning of October. That, I decided, justified a phone call.\n\n- \"Pete? How are you?\"\n\n- \"I'm well. I just wanted to check that you were still coming down for Thanksgiving.\"\n\n- \"Of course I am. I won't get in until late Friday night, and Sunday is spoken for. But maybe we could get together on the Saturday?\"\n\n- \"How do you feel about Dim Sum?\" I'd learned a great deal about Chinese food from Danielle.\n\n- \"Sounds wonderful.\" said Sophie. \"I'm looking forward to it, Robin.\"\n\n- \"How long do you plan on calling me Robin?\"\n\n- \"Probably forever. Just to remind you of how we met.\"\n\nI had most of two weeks to wait, and to think of Sophie.\n\nChinese food for brunch. I'd given the matter considerable thought. A light meal, early in the day, was an opportunity to talk, to get to know each other, without any pressure or expectations. It most definitely was not a prelude to seduction.\n\nI was being especially careful. I didn't want to mess this up. Maybe it was serendipity, or Fate. I felt something special just hearing her voice. And I wasn't about to rush anything. That might sound strange for a guy who'd been with as many women as I had. I wasn't lacking in sexual experience; it was my dating experience that was severely limited.\n\nSomehow, though, our first date was ... epic.\n\nShe already loved Dim Sum - I'd chosen well. We talked throughout the meal, without the slightest awkwardness or hesitation.\n\nI learned that her parents had divorced when she was only 6; she'd grown up in Montreal with her father and his second wife. Her mother (and her second husband) lived in Toronto, as did her Aunt, the only member of her extended family who'd kept in touch with her through her childhood and teens.\n\nSophie wanted to know more about my family, and especially about Sammy, who was now dating her friend Trish.\n\n- \"Do you think it's serious?\" she asked.\n\n- \"I sure hope so. He was crazy about her before the pool party.\"\n\nYou might think that I was reading her mind the whole time. I wasn't.\n\nFor one thing, mind-reading is very taxing. I couldn't possibly have kept up that kind of effort for a solid hour. It also requires concentration. In order to 'hear' Sophie's thoughts, I would have had to stop paying attention to what she was actually saying. It's also near-impossible to talk and mind-read at the same time.\n\nMore importantly, though, I wasn't approaching Sophie as a one-night stand, or like a groupie. With those women, I read their minds to make sure that they truly wanted to have sex. Once that was confirmed, I only had to pick up enough of their thoughts so that I could impress them a little more, and 'seal the deal', as Janine put it.\n\nAfter that, I read their minds during sex, so that I could amaze them by providing exactly the kind of stimulation they were looking for, at exactly the right time (or just a little later - teasing and delay are powerful weapons).\n\nBut I was hoping for so much more than that with Sophie.\n\nWith Danielle, I'd been at ease. It wasn't necessary to try to impress her all the time. We were comfortable in each other's company. I could relax, with her, and just be myself.\n\nOf course, that didn't mean that I wasn't picking up surface thoughts here and there - I was. But I wasn't snooping in her mind to find out everything about her, or exactly what she thought of me.\n\nI didn't have to do that with Sophie, either. She had the refreshing habit of telling me exactly what she was thinking.\n\n- \"This was a wonderful idea. I'm sorry that the meal has to end. I just don't think that I could eat another bite.\"\n\n- \"Or drink another cup of tea.\"\n\n- \"But I don't know if I want to go straight home.\" she said. \"Do you think we might ...?\"\n\n- \"Would you like to see High Park?\"\n\nShe smiled, revealing all of her dimples.\n\nWe walked through the park, visited the animals, and sat on the grass near Grenadier Pond. She took my hand. It was only then that I realized that neither of us had spoken for some time. We'd been walking in companionable silence, without feeling the pressure to come up with a topic of conversation.\n\n- \"This is lovely.\" she said, finally. Sophie turned and looked me in the eye. \"Thank you for bringing me here.\"\n\n- \"Thank you for coming.\" I said.\n\nAfter a couple of hours, I could tell that she still wasn't sick of me. I raised the possibility of getting a drink.\n\n- \"Oh? Is there a good pub nearby?\" she said.\n\n- \"More than one.\" I took her to St James Gate (named after the Guinness brewery in Dublin).\n\nTo my amazement, Sophie was perfectly happy to order a pint of Guinness.\n\n- \"You drink beer?\"\n\n- \"I drink good beer.\" she said. \"Is that so strange? That doesn't mean that I'd say no to a good glass of wine, on a different occasion.\"\n\nThe conversation never flagged. We talked our heads off.\n\n- \"You're amazing.\" I said.\n\n- \"I'm glad that you think so. But what makes you say that?\"\n\n- \"I just realized ... I don't know how to explain it. We talked all through Dim Sum. I never felt like I had to think of a topic. It just ... flowed.\"\n\n- \"It did.\" she agreed.\n\n- \"But then, at the Park - we were just walking. Not talking at all.\"\n\n- \"We didn't have to.\"\n\n- \"That's what I mean - it was ...\"\n\n- \"Nice?\"\n\n- \"Better than that. And now - we're talking again, and it just feels so easy. So ... right.\"\n\nI immediately felt like a fool. That was possibly too much, too soon.\n\n- \"I couldn't agree more.\" she said. \"That's how I felt at the pool party. Or do you think that I'm in the habit of giving my number to strange magicians the very first time I meet them?\"\n\n- \"No ...\"\n\n- \"Are you hungry, Pete? I am. Do you think we should get something to eat?\"\n\nI got Sophie home by 10:30 that night - exactly 12 1/2 hours after I'd picked her up.\n\n***\n\nSammy and Trish were doing extremely well.\n\n- \"Dude ... I owe you for this - big time.\"\n\n- \"You did it yourself, Sam.\"\n\n- \"No. I'm going to name our first child after you, I swear.\"\n\n- \"Pete? Or Robin?\"\n\n- \"One of each.\"\n\nSophie was back in Toronto for Christmas, but only for a few days; she had get back to Montreal to spend New Year's Eve with her Dad.\n\nSomehow, she managed to squeeze in time for a second date with me, and then a double date with Sammy and Trish.\n\nSophie enjoyed going out with them on our third date. She wasn't pretentious, or artificial, and thoroughly appreciated the company of people who were the same way.\n\nI'd held Sophie's hand, on two more occasions after our first date. I'd kissed her cheek, after our second. Yet I was still being careful not to rush her. Yes, I'd read her mind a little.\n\nSometimes, she was way ahead of me. On other occasions, though, I could hear her doubts and fears. The distance. Time - between her demanding career and my weeks on tour, there weren't that many opportunities for us.\n\nSome days, her thoughts were a perfect match for mine. Neither of us wanted to rush this (whatever 'this' was). It was too precious to spoil.\n\nAfter our 3rd date, though, Sophie was a little bit ahead of me again. I dropped her off in front of her mother's house.\n\n- \"Is there something you're waiting for?\" she said. \"Some kind of signal?\"\n\n- \"Pardon?\"\n\n- \"I thought you said that you could read minds, sometimes.\"\n\nShe wanted me to kiss her. She'd been thinking about it on our last date. A first kiss. I was more nervous than I'd been at my Prom.\n\nSophie initiated it. She was 5'6'' - nowhere near as short as Danielle, or Janine. She leaned over, in the front seat of my car, and then pulled my head down, to reach my lips with hers.\n\nHer lips were amazing - why had I been so nervous? Her kiss was perfect: soft, warm, and just moist enough. She held me close, and briefly sought out my tongue with hers.\n\nShe cut the kiss short long before I would have.\n\n- \"Call me.\" she whispered.\n\n***\n\nIn late January, we flew to London, England, for the start of a 6-week European tour. Lillian and Janine felt that it was time for us to start building an international reputation. Janine had organized all of the bookings, through a British agent she knew.\n\nIt was my first time overseas - and Sammy's, too. But we didn't have all that much time for sightseeing. We did four shows in London, then Reading, Oxford, Luton and Cambridge.\n\nAmsterdam, the Hague, Antwerp, Brussels ... Bruges and Ghent, Lille, and Paris. Janine and I were able to use our French routines again.\n\nAnd if you're wondering how I could read the minds of people who were thinking in Dutch, or in Flemish ... the answer is very simple: magic.\n\nI discovered firsthand the international appeal of our act; people everywhere understand playing cards, and they appreciated the visual aspects of our show just as much as Canadian and American audiences did.\n\nSammy was missing Trish desperately. I thought of Sophie often, too. I wondered if there was any future in our friendship - had we progressed far enough to call it a relationship?\n\nI still sent her an email every week or so. Sammy was in touch with Trish several times a day: email, text, phone, video phone ...\n\nFortunately, Janine was having difficulties with our British agent. His name was Martin, and he thought that I was an idiot. He spent most of his time trying to get into Janine's pants. He didn't seem to understand the meaning of the word 'no'.\n\nJanine couldn't simply kick Martin in the balls, or make him wet his pants. We were still dependent on him, to a certain extent, for the success of our tour. So she resorted to using me as a shield. She let Martin know that we were a couple.\n\nThat was good news for me, because this way, she wasn't bothering me to go out with groupies. She couldn't very well let Martin see me openly cheating on her. She needed me nearby on those occasions when he became really persistent. I could also spend my time with Sammy. He wanted to talk about Trish, which was fine with me.\n\nThere was no way that Sammy was going to cheat on her. As for me ... I just didn't need more one-night stands. It wasn't all about Sophie. I mean, she could easily have a boyfriend in Montreal. We hadn't talked about our 'status', or anything like that. But I'd never caught the slightest hint of a thought of somebody else from her.\n\nI dealt with that fear the old-fashioned way; I just didn't worry about it. For now, I was content to hang out with Sammy, see a few of the sights, and think about Sophie.\n\n- \"I've seen her a grand total of four times, Sammy. That's it. Why do I spend so much time thinking about her?\"\n\n- \"Quality, Dude. Not just quantity.\"\n\n- \"Do you think I'm idealizing her? You know, making her out to be some kind of perfect woman? I mean, I've never seen her lose her temper. She's never been petty or cruel. But what if she's vain, or selfish - and I just don't know it yet?\"\n\n- \"I highly doubt that.\" said Sam. \"It's way more likely that she's exactly what you see.\"\n\n- \"But we're always on our best behaviour when we get together. It's kind of - artificial, you know. I've never seen her at her worst.\"\n\n- \"I've never seen Trish lose her shit. You don't hear me complaining.\"\n\n- \"That's because Trish is an angel, and you're incredibly lucky.\"\n\nSammy held up his hands. \"No argument there. But why are you trying so hard to convince yourself that Sophie isn't a sweetheart, too?\"\n\n- \"I don't know.\"\n\n- \"Haven't you been emailing her?\"\n\n- \"Yeah. Every week or two.\"\n\n- \"I don't know how you do that. I'd be contacting her all day long. But she answers you, right?\"\n\n- \"She does.\" Sammy was right. If she had some terrible character flaws, they would have come across one way or another.\n\n- \"And you enjoy her company. I know you do. Dude - why are you over-thinking this?\"\n\n- \"Thanks, Sammy.\"\n\n- \"That's what I'm here for. Sage advice, excellent company. It's your round, by the way.\"\n\n***\n\nI turned 23 years old on March 15.\n\nSammy finally came through for me. I'd been bugging him to set up a gig for us in Montreal. He got us a booking at the St Denis theatre on April 11th. It was one of Montreal's classic venues for music, comedy, and specialty acts.\n\nThe date was also four days after Sophie's birthday.\n\nI sent Sophie a pair of tickets, and asked if she could make it.\n\n-\"Of course I can!\" she answered. \"I only need one ticket, though. Are you free the following day?\"\n\n- \"I am.\"\n\nI can't tell you how thrilled I was that she only wanted one ticket.\n\n- \"Plan on spending it with me.\"\n\nThe show was fine. I was a little too conscious of Sophie being there, but I was certainly keyed up. And after the show ... there she was. She looked fantastic.\n\n- \"You were so good.\" she said.\n\n- \"I'm so glad you're here.\"\n\n- \"Where else would I be? Are you at all hungry? How about a late dinner?\"\n\n- \"That sounds wonderful.\"\n\nSophie took me to a little Greek restaurant. She was watching me closely, with the merest hint of a smile on her face.\n\n- \"This isn't a tour, is it?\"\n\n- \"No ... it's just ...\"\n\n- \"An excuse to come to Montreal.\" she said. \"And the fact that it's the night before Valentine's day ... that's not a coincidence, either - is it?\"\n\n- \"That was just ... luck.\" I confessed. \"I've actually been pushing Sammy to set up a show in Montreal since last July - after the pool party.\"\n\nIt was our 4th date. Sophie was determined to be even more forthright than I was. She reached across the table and covered my hand with hers.\n\n- \"Just so you know,\" she said, \"when you take me home tonight, I'm going to invite you in.\"\n\n- \"You are?\"\n\n- \"Yes. And you're welcome to stay for the rest of the night, if you'd like.\"\n\n- \"That's ... a wonderful offer.\" My heart was hammering in my chest.\n\n- \"I think we're both ready, don't you?\" she said.\n\n- \"Yes. Yes, I think we are.\"\n\n- \"In a way, I think I was ready after our afternoon in the park. I appreciate the fact that you've gone very slowly with me. It shows patience, and self-control.\"\n\n- \"I didn't want to rush you.\"\n\n- \"And you haven't. But there seems to be something very special between us. I have to admit ... I'm curious to see how deep it goes.\"\n\n- \"You mean, if we're physically compatible?\"\n\n- \"That too.\"\n\nWow. Conversations I'd never expected to have ... Sophie was so open. I wasn't sure how to respond.\n\n\"Aren't you curious too, Pete?\"\n\n- \"About you? From the moment we first met. No - that's not quite true - from the second time I looked at you.\"\n\n- \"The second?\"\n\nI had to explain. She was flattered, I think.\n\n- \"So it was love at second sight?\" she asked.\n\nWe skipped dessert.\n\nI was going home with a beautiful woman who wanted to have sex with me - something I'd done on dozens of occasions before. Why did it feel so different this time?\n\n- \"I've never done this before.\" she said.\n\n- \"Pardon?\"\n\n- \"I've never been so forward. I like to think that I'm reasonably confident, but I'm not in the habit of being so direct.\"\n\n- \"I think it's wonderful.\"\n\n- \"Will you be direct with me, too?\"\n\n- \"I can try. Sophie, I've been crazy about you since you turned your head in Brian's pool, and caught me looking at you.\"\n\nShe laughed. \"I would have been disappointed if you weren't looking at me.\"\n\n- \"But I've been thinking of you all of this time. Ever since you suggested that our meeting was serendipity.\"\n\n- \"Serendipitous.\" she said.\n\n- \"Marvelous word. Words.\"\n\nHer apartment was small, and she had more framed pictures than she could fit on the walls. Several of them were stacked behind her armchair.\n\n- Please - have a seat.\" she said.\n\nI chose her couch, and sat down.\n\n\"Would you like something to drink?\"\n\n- \"No.\" I said.\n\nShe smiled. \"Good.\" Then she shook out her long dark hair. \"I'd like to try something else I've never done. Please - bear with me.\"\n\nSophie stripped for me. One article of clothing at a time, she gradually revealed her body. I didn't say a word. I could hardly believe that she had the courage to do this.\n\nShe moved with a kind of sensual grace. Every movement was slow, and deliberate; she never seemed off-balance. First she unbuttoned her shirt, revealing a black bra. Then she turned her back to me, and removed the shirt entirely.\n\nHer hair was so long, it fell all the way down her back, almost to her ass. Sophie slowly unfastened her bra, and removed it.\n\nThen she turned around, and leaned back against the bare wall. She'd turned her head to the side, so that I could see her profile. She closed her eyes, and let me gaze at her.\n",
        "What an unusual - and wonderful - thing to do. Even had she been fully clothed, I would have enjoyed the opportunity to stare at her face, and her bumpy, one-of-a-kind nose. But she was showing me her breasts, and asking - inviting me to look.\n\nThey were large, and heavy. It may be heretical, but I couldn't help comparing them to some of my favourite breasts. Danielle's were fuller, rounder. Sophie's boobs sagged on her chest, like Janine's, but they also thrust out further, like ripe gourds.\n\nSophie turned again, and undid her pants. They weren't overly tight - with a little shimmy, they slid over her hips and ass, to puddle around her feet.\n\nShe was wearing a thong, which left her ass almost entirely bare. And what an ass - I didn't say anything, but Sophie must have heard me slowly exhale.\n\nWithout a word, she came closer, and then sat down in an armchair opposite the couch. She crossed her legs, rather demurely, and looked me in the eye.\n\n- \"I can't believe that you just did that.\" I said. \"I've never seen anything like it - and I never, ever imagined that I would.\"\n\n- \"I've been thinking about this for more than a month. I wanted ... to do something special for you.\"\n\n- \"I'll never forget it.\"\n\n- \"Go on.\"\n\n- \"You want to hear ... what I thought?\" I went ahead and described to her exactly what I'd thought, what I'd seen. I also told her how I'd her appreciated her slow, deliberate movements.\n\n- \"Three years of ballet, when I was a little girl.\" she said. \"But I don't have a ballerina's body.\"\n\n- \"Thank goodness.\"\n\n- \"Pete? Do you think that you could do the same for me? Show me your body?\"\n\nThere was no decent way to refuse. I couldn't deny her - not after what Sophie had just done for me. My only concern was that whatever I might do would look ridiculous after her performance.\n\nI can't dance. I have all the grace of an ox. But that didn't matter. Sophie was interested in me - my body, such as it was, was unlikely to be a deal-breaker.\n\nSo I closed my eyes, and unbuttoned my shirt - slowly. I took my cue from her: slow, unhurried movements. Let her look.\n\nI didn't pretend to be a practiced stripper. I just slowly took off all my clothing, and gave her plenty of time to stare. After all, that was what she'd done for me. Did I feel awkward? Damn straight. But with her sitting there stark naked, I didn't feel quite so self-conscious.\n\nI could also read her mind. And I was amazed by what I heard.\n\nSophie's main goal, in all of this, was to give me an unforgettable experience. She wanted to please me, more than anything. How could I argue with that?\n\n- \"Thank you.\" she said.\n\n- \"You're welcome.\"\n\n- \"I know you must have felt strange. But I really appreciate you doing that for me. And you've no reason to be embarrassed - you have a good body.\"\n\n- \"Thank you. Yours is magnificent.\"\n\nShe smiled a little, at that. \"Excuse me for a moment.\" She left the room, and returned with a towel, which she spread over the central cushion of her couch, and a couple of condoms, which she put on her coffee table.\n\nSophie took my hand, and stood directly in front of me.\n\nShe leaned forward, and kissed me. Then she pressed her spectacular body against me. I felt the pressure of her full breasts, her flat stomach, and the warmth of her loins. She even slid one naked leg between mine.\n\nI'd been in some pretty incredible situations before, but I couldn't remember ever having trouble breathing, as I was now. Nor had I ever felt my heart hammering so hard in my chest.\n\nMy arms went around her, to hold her close. My hands found the smooth, warm skin of her back. Sophie did the same, but she was more forward: she had one hand on my lower back, and the other on my ass.\n\nI had to pull back a bit, to take a breath. That gave me the opportunity to look into her beautiful blue eyes at close range.\n\n- \"I can't believe we're both here ...\" I said.\n\n- \"Finally.\"\n\n- \"You make me feel so wonderful, Sophie. I don't know how you do it.\"\n\n- \"Magic.\" she breathed. Then she smiled, showing me her amazing dimples.\n\nI used some of my own magic, then, to discover what she would like. I wanted her to have a wonderful experience, too. What I discovered was ... interesting.\n\nSophie was hoping that I would let her set the pace. She had plans for me. The striptease, the towel, the condoms - she'd prepared for these moments. All I had to do was let her lead the way.\n\nShe kissed me again - good grief, but she was a fabulous kisser. Then Sophie steered me to her couch, and had me sit me down. She knelt on the carpet, at my feet.\n\nI leaned forward and bent over, to kiss her. She kissed me back, for a time, but when she placed a hand on my chest, and pushed, I sank back on the couch.\n\nShe placed her hands on my legs, and slid them up my thighs. When she leaned forward, her lovely breasts rested on my knees. Sophie stroked my legs, and then bypassed my groin to caress my stomach.\n\nIt was a deliberate tease. Sophie knew exactly what she was doing. When I reached out, to fondle her breast, she took hold of my hand, and placed it on the couch.\n\nShe delayed a little longer, and then moved her head - so that her long hair brushed across my erection. She reversed direction, and did it again.\n\nHer hair was silky smooth, and the sensation was exquisite. She repeated the movement several times, before sitting back on her haunches. Sophie simply stared at my cock, as if studying all of its features. She wasn't even touching me - but she was driving me wild.\n\nShe slowly - tantalizingly - reached out with one finger, and ran it down the length of my erection.\n\n- \"You have a beautiful cock.\" she whispered.\n\nFinally - finally - she wrapped her hand around my erection. She stroked it lightly. Then she ran her fingernail - ever so gently - around the crown. She wasn't done teasing me.\n\nSophie leaned forward again, resting one of her beautiful breasts on my thigh. Her mouth came even closer - and she breathed on the tip of my cock.\n\nDamned traitorous organ - it quivered as she blew air over it.\n\nJust when I thought that I couldn't take any more of this punishment, Sophie extended her tongue, and licked the head of my erection.\n\nShe had me right where she wanted me - and she was more than a little pleased by my patience - by my self-control. For another full minute, she did no more than lick and kiss my shaft, or my crown. She also gently fondled my balls.\n\nWhen she finally slipped her lips over the top of my cock, I thought that I was going to explode into her mouth in a matter of seconds.\n\nInstead, she pulled back, and firmly squeezed the base of my shaft.\n\nI'd never had this kind of experience. The women I'd been with had sucked my cock, of course - but that was to get me hard, for intercourse, or to bring me off as quickly as possible. I'd met a few who genuinely liked sucking cock, but nothing like this.\n\nSophie was exploring - and allowing me to experience - a vast range of sensations. It was all about pleasing me, and discovering what turned me on.\n\nOnce my imminent orgasm had receded, she took me into her mouth again.\n\nShe was incredible. Just when I thought that I was about to come, she would slacken the pressure. But she explored every avenue, from licking my balls and gently taking them into her mouth, to pushing forward between my legs, and rubbing the tip of my erection over her nipples.\n\nMind-reading did me one small favour: Sophie didn't want me to grab her head while she was sucking me. I kept my hands to myself, and let her work.\n\nI have no idea how long she went down on me. It seemed like an age.\n\n- \"Oh, I am so going to pay you back for this.\" I warned her.\n\n- \"Mmm ...\" she moaned, with her lips around my cock.\n\nAnd then she deep-throated me. I lasted all of two deep lunges, and came in torrents, spewing cum into her mouth.\n\nMoments later, she climbed onto the couch, straddling my hips. Sophie wrapped her arms around me, and kissed me - hard.\n\nIt was a test, of sorts. I kissed her back, just as hard, slipping my tongue into her mouth - which had so recently enveloped my cock and swallowed my seed. There was nothing demeaning or revolting about what she'd just done - and I kissed her to let her know that I felt that way.\n\nThen I picked her up, and rose to my feet.\n\n- \"Your bedroom?\" I said. \"Where?\"\n\n- \"Left. Down the hall.\"\n\n- \"You are in so much trouble.\" I growled.\n\n- \"Oh - I hope so.\"\n\nI bent my legs, reaching down to pick up the condoms she'd brought out. Then I manoeuvred down her narrow hall, careful not to bump her head. I found her room, and unceremoniously dumped her on her bed. I climbed on top of her, pinning her down.\n\n- \"That was very evil - what you did out there.\" I said.\n\nJanine had been right: I didn't need any practice receiving a blowjob. Fortunately, she'd given me plenty of training eating pussy. And Sophie had had her way with me - she was ready, now, to submit to my attentions.\n\nI gave her my best - with a healthy dose of teasing.\n\nSophie actually purred. It was the most wonderful sound I'd ever heard. She wasn't obsessed by a mad rush to orgasm, either: Sophie wanted to experience everything I could possibly do for her.\n\nI paid attention to her breasts - how could I not? But she absolutely loved it when I ran my fingernails from her armpits down to her hips. She was also just as susceptible to teasing as I'd been.\n\nYes, I read her mind. That was why I tongued her asshole, and eventually stuck a finger up her ass as I sucked on her prominent clit. There was no way to delay her orgasm, but as I reached up to grasp and squeeze her nipple, Sophie came - hard.\n\nShe clutched my head, and pulled me up, into her arms.\n\nSophie was ready. She expected me to tease her again, in revenge. But what she really wanted, I was more than prepared to provide.\n\nI knelt above her, letting her watch as I rolled on a condom. She raised her knees to grant me even more access.\n\nThe moment of penetration was exquisite. We were looking into one another's eyes as I pushed into her for the very first time.\n\nOnce I'd gotten my full length inside her, Sophie smiled, and hooked her legs around me. With her arms, she drew me down, so that she could kiss me.\n\nWe were joined, as deeply connected as we could be. I could feel her satisfaction - her happiness - which mirrored my own. And that was without reading her mind.\n\nI was very gentle, that first time. Sophie's eyes were on me for quite a while, until she closed them, just as she began to slowly rock her hips.\n\nThat was a hint. I propped myself up on my hands, and begin to thrust into her a little faster, and a lot deeper. As I picked up the pace, she did, too.\n\nBut I could sense that Sophie's movements were limited, with me on top. As much as she liked the closeness and the intimacy of the missionary position, she knew that she wasn't likely to come this way. And since she knew it, so did I.\n\nI flipped over, onto my back, and drew her onto me. She grinned as she mounted me.\n\nSophie began to ride me with deep lunges, grinding against me. From this position, I could enjoy the sight of her swinging breasts, as well as her beautiful face. My hands were free, too, to cup and caress and squeeze.\n\nShe was getting close ... I took hold of her magnificent buttocks, and began to hammer my cock into her from below. Our bodies were slapping together, hard - and that sent her over the edge.\n\nI only lasted a few moments longer, before I groaned and filled the condom with my essence.\n\nSophie lay down on top of me, seeking my lips with hers.\n\n***\n\nIn the early hours of the morning, she stirred. I woke up instantly. I had an erection.\n\n- \"I hope you were dreaming of me.\" she said.\n\n- \"I'm sorry. Did I wake you?\"\n\n- \"Don't be sorry.\" she said. \"Can you reach that second condom?\"\n\nShe had me enter her from behind, spoon fashion. It was another of my favourite positions, because she only had to turn her head slightly so that I could kiss her. I could also kiss her neck, her ear, her back ...\n\nI also had a free hand, and free access to her backside, her legs, her stomach, and of course her breasts. I could even reach her pussy, if I wanted to stroke her clit. It was a comfortable position, too, which didn't require a lot of energy to maintain a nice, easy motion.\n\nSophie enjoyed it just as much. But she had other plans for us, too. She rolled onto her stomach, and then rose to her hands and knees. Doggy style, it seemed, was one of her favourite positions.\n\n***\n\nI woke slowly. When my eyes finally opened, I saw Sophie, lying on her side, her head resting on her elbow as she watched me sleep.\n\n- \"Good morning.\" she said.\n\n- \"Did last night really happen?\" I asked her.\n\n- \"Pretty sure that it did.\" she said, with a grin. \"The shower is yours; I'm going to get a start on breakfast.\"\n\n- \"You wouldn't happen to have a spare toothbrush, would you?\"\n\n- \"The red one, beside the sink. It's still in the package.\"\n\nWhen I finally made to the kitchen, I found that Sophie had prepared a feast.\n\n- \"Holy mackerel! Are you expecting company?\"\n\n- \"I just wasn't sure what you would want. Have to keep your strength up, though, after last night ...\"\n\nInstead of sitting down at her little table for two, I took Sophie in my arms.\n\n- \"Last night was wonderful.\" I said.\n\n- \"For me, too.\" she said. \"You're a very ... accomplished lover. You must have had ... a lot of experience.\"\n\nHow to explain that I'd had more practice having sex than dating? I was 22 years old, and I'd had two girlfriends. Lots of sex, but only two romances - and both of those had ended far too soon.\n\n- \"I've been with women ... but only two I really cared for - and one of those broke up with me before ... before we ever had sex.\"\n\n- \"Was the other one Janine?\"\n\n- \"No. She was my first, though. And she taught me quite a bit. But that's all over now.\"\n\n- \"I'm not worried.\" she said. \"I don't feel like I have to compete with your past.\"\n\n- \"I've been in two relationships, Sophie. That's all. And I've never met anyone like you. Last night meant the world to me.\"\n\nShe heard the sincerity in my words.\n\n- \"Do you want to know about me? My experience, I mean.\"\n\nDid I want to know? Considering that I'd read her mind, for a brief moment, and already knew - why not let her tell me what she wanted to. Hopefully, she wouldn't go into detail.\n\n- \"I've been with three men. One was ... older. He taught me a great deal about what I like - and what I don't. I haven't been with anyone since last summer.\"\n\n\"Now eat your breakfast before it gets cold.\"\n\n- \"Thank you. This is an amazing spread.\"\n\n- \"I'm sure that you can find a way to repay me. How long can you stay?\"\n\nI called Sammy to find out the answer to that question.\n\n- \"Hey Dude. Good night?\"\n\n- \"Best night of my life.\" I said. Sophie smiled as she heard that. \"What's going on with you two?\"\n\n- \"Janine was happy to see you go with Sophie. She ... she thinks you went with a groupie.\"\n\n- \"You didn't say anything?\"\n\n- \"Nah.\" said Sammy. \"I didn't spill the beans - I saw how shitty she was to Danielle. The less Janine knows, the better.\"\n\n- \"Any chance you can give me another night?\"\n\n- \"I can probably manage that. I'll drive her home, if you're okay with getting a bus, or a flight. You might want to turn your phone off, though, so she can't reach you.\"\n\n- \"Thanks, Sammy.\"\n\n- \"What are friends for? See you ... tomorrow? And say hi to Sophie for me.\"\n\n- \"Will do.\" I hung up. \"Sammy says hi.\" I said.\n\n- \"Was that you negotiating a day off?\" she asked.\n\n- \"That's exactly what it was. Any idea what I should do?\"\n\n- \"Hmm. There's no way we'll get a reservation, this late. It's Valentine's day. We'll have to order food in.\"\n\n- \"That sounds pretty good to me.\"\n\n- \"\"Me too.\"\n\nIt may have been completely wrong. I probably shouldn't have done it. But I compared Sophie to Danielle - and to Janine.\n\nSophie was taller, and more confident than Danielle.\n\nDanielle wore frumpy clothes to conceal her large breasts, didn't consider herself attractive, and worried about her weight. Sophie was happy with her body. She was flexible, and a strong swimmer. Other than that, the biggest difference between the two was in terms of attractiveness. Beauty, if you like.\n\nSophie knew that she was good-looking, while Danielle had always considered herself plain. Danielle had rounder, fuller breasts - that might have been the only area where she felt that she was superior.\n\nSophie was a lovely woman, with a dynamite body, but she didn't play on it, or use it as a weapon, the way Janine did.\n\nJanine was high maintenance. Danielle was low maintenance. I wasn't quite sure where Sophie fit, on that kind of scale. She'd devoted a great deal of thought and effort to pleasing me - yet she also had the confidence to take what she wanted.\n\nMy musings meant nothing. I was absolutely fascinated by Sophie - and had been for months. And from what she'd said (and done), she felt the same way.\n\n- \"I love your emails.\" she said. \"Have I told you that? They're the perfect length. It's like ... an old-fashioned letter.\"\n\n- \"I'm glad you like them. I really like your replies, too.\"\n\n- \"How could I not respond in kind? It's so flattering, to know that you think of me so often.\"\n\n- \"I think of you all the time, Sophie.\"\n\n- \"I know - so do I. But you don't send me a text or a little email every day. And you don't text me six times a day, either.\" she said.\n\n- \"That's a good thing?\"\n\n- \"It most certainly is. Some people would think it was romantic, or thoughtful, if you were contacting me three times a day. But it's not; it's annoying. It means that I have to think of three answers, every day.\"\n\n\"Each one has to be different - you'd notice right away if I repeated myself. So then I have to come up with three clever, funny, or endearing things to say. Should I add an emoji? I did last time. So now I have to every time. How do I show emphasis now? Two exclamation marks? Three? That's not romantic ... it's just more pressure. Believe me - I've been there.\"\n\n\"If I didn't answer right away, you'd worry. You'd wonder if something was wrong. More pressure. And it works both ways. If I texted you while you were getting ready for a show, it might be hours before you could reply. Meanwhile, I'm imagining worst-case scenarios. Then you text me in the middle of a family gathering, and I have to leave you hanging.\"\n\n- \"You make it sound ... stressful.\"\n\n- \"I told you: been there, done that. I like your way so much better.\"\n\nSophie kissed me, then - which led to me kissing her back. Which led to other things.\n\nThe best night of my life was followed by the best day of my life.\n\n***\n\nJanine, Sammy and I had obligations to fulfill. We had to open for Penn and Teller at their theatre in Vegas. They were also suggesting a second appearance for us on their television show.\n\nJanine organized a couple of cash poker games for me while we were in Vegas. It was fun, actually, because the pros thought I was a celebrity mark, and were looking forward to thoroughly fleecing me. A couple of nights in those private poker rooms paid for our expenses three times over.\n\nAfter one of our shows, Janine let me know, in no uncertain terms, that she was expecting me to accompany me back to her room. I didn't need to be a mind reader to know that it wasn't so that we could go over our routine.\n\n- \"I can't, Janine.\" I said. \"I'm sorry, but I'm wiped. Plus I think I ate something that wasn't quite right. I don't want to be too far from the bathroom just in case -\"\n\n- \"Eew. Whatever. Your loss.\"",
        "There's nothing like the topic of vomiting or diarrhea for killing the mood. Truth be told, it wasn't all that easy to turn Janine down. She was still hotness incarnate. I just had Sophie on my mind. Even though the terms of our relationship weren't well defined, I wasn't interested in another woman.\n\nWe followed our stay in the desert with a series of shows in northern California. Then it was on to Portland, Seattle, and Vancouver. Then we worked our way back east, playing a couple of dozen gigs before we got to Ontario.\n\nSammy was done. He was pining for Trish.\n\nJanine was seriously ticked off. She'd hinted several times that she wanted me in her room. My excuses were growing pretty threadbare by the time we got to Winnipeg.\n\nI didn't really care. I phoned Sophie the moment we got home.\n\n- \"I want to come see you.\" I said.\n\n- \"That's wonderful. When?\"\n\n- \"The day after tomorrow. Whenever you want.\"\n\nShe laughed. \"That sounds wonderful, too. How long can you stay?\"\n\n- \"Three days - or three weeks. I'll stay for a few days, if that's all you have time for. But I have nothing on my plate until September. I'd love to spend as much time with you as I possibly can.\"\n\nThere was silence for a moment.\n\n- \"You have no idea, Pete, how glad I am to hear you say that. But ... I only have a couple of days' holidays left.\"\n\n- \"Sophie, I will make you breakfast every day. While you're at work, I'll clean your apartment. I'll do your laundry. I'll pick up groceries, and have dinner ready when you get home.\"\n\nShe laughed again.\n\n- \"You don't know how to cook.\"\n\n- \"I'll learn.\"\n\n- \"You're serious? You want to come and stay with me for three weeks?\"\n\n- \"More than anything.\" I said.\n\n- \"Three weeks?\"\n\n- \"As long as you'll have me.\"\n\nI didn't tell Sophie, but there was an additional reason that I wanted to spend an extended period of time with her. As I'd told Sammy, I'd never seen her angry, or even cross. Every time we'd been together, she'd been damned near perfect.\n\nNo, I wasn't expecting to unearth some deep, dark secret. I was the one with the dark secrets. But I wanted to see Sophie at her worst - well, maybe just less than perfect. I figured that after a couple of weeks at close quarters, I'd get to know the real Sophie.\n\nShe welcomed me with a huge smile and a bear hug.\n\n- \"I can't believe it. I'm so looking forward to this!\" she said.\n\n- \"Having someone clean your apartment?\"\n\nShe grinned. \"That too.\"\n\nI arrived on a Friday night. There was nothing urgent - except our lovemaking. Evidently she'd missed me as much as I had her.\n\nOn Saturday, she took me shopping at the grocery stores. Instead of one-stop shopping, though, we visited a bakery, a butcher's shop, and a delicatessen. It was fun.\n\nI know. Never in a million years would I have expected a shopping expedition to be enjoyable. I have to point out that it wasn't for clothes. Everything we bought was something that we were going to eat or drink - together. Given my cooking skills, we were going to have to prepare it together, too.\n\nWe unpacked the groceries, and then I undressed Sophie and ate her on the couch. She insisted on stripping me in return, and riding me to orgasm.\n\nThen I discovered one of Sophie's secrets. She could cook.\n\n- \"My mother taught me. And my Aunt Anna - Mom's sister. You'll have to meet her sometime - she's been really good to me.\"\n\nI made a minor error, that set us back a bit. It was a bit of a mess, too.\n\n- \"I'm so sorry, Sophie. I'll ... make it up to you.\"\n\nShe just shook her head. \"There's no scorecard, Pete. You don't have to make up anything. Just try not to do it again, okay?\"\n\nWe ate a darn good meal, and then Sophie asked if I wanted to watch a movie with her.\n\n- \"Whatever you like.\" I said.\n\nShe picked out a rom-com from her collection, and played it on her laptop. It was ... bearable.\n\n- \"Did you like it?\" she asked, when the suffering ended.\n\n- \"It was ... okay.\"\n\n- \"I know.\" she said. \"I used to enjoy it, but now ... now, that line 'You complete me' just makes me gag.\"\n\n- \"It does?\"\n\nShe looked me in the eye. \"In case you missed it, Pete, I'm a whole person. Not perfect - far from it. And some of my parts may not work as they should ... but I'm okay, you know?\"\n\n- \"You're better than okay, Sophie. You're amazing.\"\n\n- \"I'm glad you think so. But it took me years to figure out that I'm reasonably good. And I'm getting comfortable with that.\"\n\nWe made love on her couch again. Then we moved to her bedroom, for a repeat performance.\n\nOn Sunday, we made love in the morning. Then Sophie decided to prove to me that Montreal smoked meat was the best in the world.\n\nAfter lunch, she took me for a walk.\n\n- \"You know,\" she said, \"there's another version of 'You complete me' that bothers me.\" She was still thinking about the movie that we'd watched last night.\n\n\"It's 'You're my everything'. Who could be that?\"\n\nI wasn't sure what she meant. She could read my confusion.\n\n\"You and Sammy. Batman and Robin. I don't need to step in and become Batman.\"\n\n- \"Umm ...\"\n\n- \"I have friends to go shopping with. You don't have to suffer through that. I belong to a book club, that you don't have to join - unless you really wanted to. Believe me, I wouldn't be upset if you wanted to hang out with the guys and talk sports. You don't have to include me in everything you do, either.\"\n\nI was looking at her in complete disbelief. My mouth must have been hanging open.\n\n\"What?\" she said.\n\n- \"That's ... you've really given this some thought.\"\n\n- \"A little.\"\n\n- \"No, seriously - you could give advice. Like in one of those advice columns.\"\n\n- \"Dear Sophie? Or Sophie's Lonely Hearts Club?\"\n\nShe was so smart - way smarter than me. Better-looking than me. A nicer person, too. But I could try to improve in that last category. Maybe if I made an effort to be a better person, I could measure up a little more - in my own estimation, at least.\n\nSophie went off to work Monday morning. I leapt out of bed while she was showering so that I could get started on breakfast.\n\n- \"How do you like your eggs?\" I asked, when she came out of her bathroom, wrapped in a towel.\n\n- \"Look at you!\" she exclaimed, with a big grin that showcased all of her dimples.\n\n- \"Look at you.\" I replied, admiring her bath towel, and everything that it didn't conceal.\n\n- \"This is really sweet of you, Pete. But you don't have to go to so much trouble. I usually just have coffee and a croissant in the morning.\"\n\n- \"\"Fair enough.\" I had her show me how she liked her coffee, so that I could make it for her in future. \"And what do you do for lunch?\"\n\n- \"I just grab something in the cafeteria, if I have time.\"\n\nSophie dressed very casually for work. It didn't really matter what she wore, because she'd be putting a lab coat on over that.\n\nI kissed her goodbye.\n\nThree hours later, I let myself out of her apartment (she'd given me a key), and went shopping. I'd done some research, and found a few specialty shops within walking distance. I bought way too much stuff, and had a tough time lugging it all back to her place.\n\nWhen she came home from work, I had the windows open, to let out some of the remaining smoke. But I did have a glass of wine ready for her.\n\n- \"What's going on?\" she asked.\n\n- \"Well, I kind of messed up the fries. But I had a backup plan, so it's okay.\"\n\nSophie inspected the work in progress (either that, or she was appraising the damage to her kitchen).\n\n- \"Mussels? You bought mussels?\"\n\n- \"I had them in Belgium, and really enjoyed them. It was supposed to be mussels and fries. Now it's mussels and garlic bread.\"\n\nSophie's big grin was all the reward I needed. I gladly accepted her offer to help out (so that I didn't screw up the mussels as well).\n\nShe was absolutely delighted. Apparently, 'It's the thought that counts' really works in some situations. We ate, cleaned up together, and then made love on her living room carpet. After that, we moved to the bedroom for a slower, longer session.\n\nThe next morning, she was smiling again. I had her coffee going when she came out of the bathroom, and a chocolate croissant from the nearby bakery to go with it. Sophie leaned her head against my chest, and wrapped her arms around me.\n\n- \"You're going to spoil me.\" she said.\n\n- \"Impossible.\" I said. \"But there's no harm in trying.\"\n\nFor the rest of that week, I alternated between ordering food and having it delivered, and cooking something that I thought I could manage. After dinner, we watched a movie, or listened to music while we talked.\n\nShe finally told me about her parents' divorce. It had been fairly ugly: her mother and father had competed for her affection and loyalty - and they'd both reacted angrily when she refused to take sides.\n\n- \"They're better now.\" she said. \"I think that I could introduce you to my Mom and my Aunt when I come down for Thanksgiving.\"\n\n- \"You should meet my folks, too. They're going to love you.\" Even as I said it, I wondered how I could avoid having Sophie meet Janine. Somehow, I didn't expect that to turn into a mutual appreciation society.\n\nWe made love two (and sometimes three) times a night - every night.\n\nOn the weekend, Sophie took me to one of her favourite places, and also introduced me to some of her social circle. Her female friends were pretty cool; I didn't care for the males at all. One guy was okay; he was dating Sophie's friend Theresa. The other guys all lusted after Sophie, to one degree or another - even one or two who had girlfriends.\n\nOn Monday, she went back to work, and I resumed cooking (an adventure) or ordering food (much safer). By then, I had cleaned her apartment from top to bottom.\n\nOn Wednesday, Sophie seemed a little down.\n\n- \"My period started last night. And ... my flow is pretty heavy for the first couple of days.\"\n\n- \"That's okay.\" I said.\n\n- \"No, it's not. I mean ... I just don't feel comfortable ...\"\n\nI knew what she was trying to say. \"Don't worry about it. A couple of nights off won't kill me. Hey - I can probably use a break to recharge my batteries.\"\n\n- \"There's nothing wrong with your batteries.\" she said, with a smile. \"I just feel bad about leaving you hanging.\"\n\n- \"You're not!\"\n\nWe watched a movie that night, cuddled up together on her couch. Being so close to her, with her butt nestled in against my crotch, had the predictable result: she felt my erection pressing into her ass.\n\n- \"See?\" she complained.\n\n- \"It's no big deal, Sophie.\" I said.\n\nApparently, though, it was to her. She immediately slid off the couch and began pulling down the zipper of my jeans. I wasn't about to fight her of - she went down on me, and brought me off with her mouth.\n\nWhile I tried to resume normal breathing, she crawled back onto the couch.\n\n- \"You didn't have to do that.\"\n\n- \"I know.\" she said. \"But I enjoyed it - and I think you did, too.\"\n\nAfter the movie, we went to bed, where she insisted on spooning with me - which led to the same involuntary, yet entirely predictable reaction from me.\n\n- \"Ooh.\" she said. And then she proceeded to blow me again.\n\n- \"You don't have to -\"\n\n- \"Shh ...\"\n\nSophie went off to work the next day with a smile on her face.\n\nWhen she came home, though, she had a curious look of determination on her face - and a small plastic bag from the drugstore in her hand.\n\n- \"My flow is still heavy.\" she said. \"I'm sorry.\"\n\n- \"There's nothing to be sorry about.\" I said.\n\n- \"Well ... that doesn't matter. I thought ... if you want to, we could ... try something else.\"\n\n- \"Something else?\"\n\nSophie revealed what she'd bought at the drugstore. A bottle of lube.\n\n- \"If you want ...\"\n\nMy lover was (shyly) offering me anal sex - something she'd never done before. I took her in my arms, and kissed her.\n\n- \"Are you sure?\"\n\n- \"Of course I am. You think I go and buy lube every weekend?\"\n\nWe showered together. Sophie wanted us both to be scrupulously clean. We almost didn't make it out of the shower, because the sight of her wet, glistening skin, and her soap-coated breasts and ass nearly finished me off right there.\n\nI was incredibly, ridiculously hard by the time we got back to her living room. Sophie put a pillow under her knees, got down on all fours, and handed me the lube.\n\n- \"Lots of it, I think. In me, and on you.\" she said.\n\nHow incredible was she? Two or three nights of abstinence would hardly have killed me. But Sophie was willing to suck me off repeatedly, and even to offer me her ass. You may find it hard to believe, but my overwhelming feeling at that moment wasn't lust - it was love.\n\nI toyed with her nipples, which always got her motor running, and then began applying lube. She didn't seem to mind a finger in her ass at all. Two, though, got her attention.\n\n- \"We don't have to do this, Soph.\" I said.\n\n- \"I know. But let's try it.\" she said. \"Lots of lube - and go slow. I'll let you know if it's too much.\"\n\nI followed her instructions - especially the part about going slow.\n\n\"Okay - you can push a little harder.\" she said.\n\nIt might have been the excessive quantity of lube I'd used - or the unnatural hardness of my erection, but I felt the incredibly tight ring of her anus give a little .. and the head of my cock was suddenly lodged inside her rectum.\n\nShe didn't say a word; but I heard her gasp. I immediately stopped pressing forward.\n\n- \"Are you alright?\" I asked.\n\n- \"Yeah.\" she breathed. \"Wow ... that's ... wow.\"\n\n- \"Am I hurting you?\"\n\n- \"N-no. You can ... push a little more.\"\n\nI did. I would like to be able to tell you that Sophie loved it - that I fucked her ass hard and fast, and that she had multiple orgasms.\n\nTruth is, though, that I slowly and carefully inserted a little more than half her length into her bowels - and then I suddenly came in her ass.\n\nThat part she liked. Sophie felt me shooting my seed into her. She patiently waited until I'd finished coming, and only then did she turn around and kiss me.\n\n- \"I love you.\" she said.\n\n***\n\nI had an incredible stay with Sophie.\n\nI continued to shop, clean, and cook (or have food delivered). We had precious hours to spend together, making love several times every day, but also talking about anything and everything. I learned so much about what she liked, and what she cared about.\n\nOn the second weekend, she was happy to take me on a tour of her favourite spots in the city. Bakeries, cafes, restaurants and eateries, but also a grungy dive bar that she and her friends had frequented as students. She was a bit of a foodie - a food enthusiast, if you prefer - but she wasn't snobby or pretentious about it.\n\nThere was one odd moment, that Sunday, when I did a double take.\n\n- \"You okay?\" she asked.\n\n- \"Yeah. Sorry - I thought I just saw somebody I knew.\"\n\n- \"You know people in Montreal?\"\n\nOther than Ginette and Helene - who I wasn't about to mention to Sophie - the answer was no. But I thought I'd just seen a familiar head of red hair. I'd only caught a glimpse of her face before she turned away, but that woman looked an awful lot like Lillian.\n\nBut what would Janine's Mom be doing in Montreal?\n\nSophie continued to make love to me twice a day, if not more. I made it a point to go down on her as often as she would let me (though I drew the line at letting her stick anything in my ass).\n\nWe also paid return visits to most of the cafes and eateries she'd pointed out to me. And on the third weekend, I took her to the spa and treated her to the full package.\n\n- \"Are you sure?\" she asked. \"It's awfully expensive.\"\n\nShe wasn't faking it. Sophie wasn't after me for my money. Nor was she 'high maintenance'.\n\n- \"Three weeks of free accommodation.\" I said. \"I owe you a lot more.\"\n\n- \"Don't start that again.\" she warned. \"There's no balance sheet. Besides ... we haven't discussed your wages, considering that you've been cook, busboy, cleaner ... and sex slave.\"\n\n- \"You could get plenty of volunteers for that position.\" I'd only been joking, but I regretted it immediately as Sophie's face changed.\n\n- \"I'm not looking for anyone else, Pete.\" she said.\n\n- \"I'm sorry. It was a stupid thing to say. I don't want you to look for anyone else, either. I love you, too, Sophie.\"\n\nShe smiled, and kissed me. Then she happily went off to enjoy her spa treatment.\n\nI never did get to see Sophie angry, or in a foul mood. She assured me that she could and did have 'bad moments' - I just had to take her word for it. If she was hiding any dark secrets, I had no idea what they might be.\n\nThe three weeks were like a glorious low-budget honeymoon. The sex was fantastic, but so was the feeling I got just from being around her. I couldn't remember the last time that I'd been angry.\n\n- \"I'll see you at Thanksgiving.\" she said. \"Will you be able to come over and meet my Mom? And my Aunt?\"\n\n- \"I'm looking forward to it.\"\n\n- \"Thank you for doing this, Pete. It was ... absolutely wonderful to have you here.\"\n\n- \"Best three weeks of my life.\" I said. That was no lie.\n\n- \"Mine too.\" she said.\n\n***\n\nI thought about her all the way home. I had no idea what the future held for us. She was tied down by her new career. I had commitments, too, which would keep me on the road for the foreseeable future.\n\nCould I manage a long-distance relationship? I didn't even want to think about a few years from now. For the moment, I was only hoping that I wouldn't screw up this relationship, the way I had with Michelle and Danielle.\n\nOnce I got home, Sammy wanted a full update. I had to see Mom and Bill. And I got a curious text from Janine, the day after I got back.\n\n- 'Are you free Friday evening? We need to see you. Important.'\n\nI knocked on their door at 7:00. Janine let me in.\n\n- \"Have a seat.\" she said.\n\nLillian was already sitting down, in her armchair. I sat on the couch, facing her.\n\n- \"Would you like something to drink?\"\n\n- \"No, thanks. I'm fine. What's going on?\"\n\nLillian took a deep breath. She look tired.\n\n- \"Peter, what were you doing in Montreal? Who was that girl you were with?\"\n\n- \"You saw me? Were you there? I could've sworn that I saw you -\"\n\n- \"Yes. I was there. Now please answer my question: who was that girl?\"\n\n- \"Sophie? She's ...\" I was struggling to find a description that would be fair to Sophie, without upsetting Janine. There was no such word.\n\n\"She's my girlfriend.\"\n\n- \"Shit.\" said Janine.\n\nLillian shushed her. \"Peter - this is very important: how serious is your ... relationship?\"\n\nWell, the cat was definitely out of the bag. I might as well go with the honest answer. Lying to witches was probably not the best route to take. Besides, I found that I didn't want to deny how special Sophie was to me.\n\n- \"I'm in love with her.\" I said.\n\nLillian's reaction surprised me. She simply nodded.\n\n- \"I thought so.\" she said.\n\n- \"Shit.\" said Janine.\n\n- \"Listen to me carefully.\" said Lillian. \"You have to do everything in your power to keep that girl happy. You have to be the ideal boyfriend.\"\n\n- \"What?\"\n\n- \"You cannot break off with Sophie. You cannot allow her to break off with you. Do you understand me?\"\n\n- \"No.\" I had absolutely no clue what Lillian was talking about.\n\n- \"Peter: Sophie is on the list. She's one of the 13.\"\n\n*****\n\n \n"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "magic",
        "magician",
        "nerd",
        "first date",
        "dupe"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/just-a-little-magic-ch-08"
}