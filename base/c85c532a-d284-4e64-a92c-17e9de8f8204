{
    "title": "Beloved of Ashura: Learning to Fly",
    "pages": [
        "More than most of my stories, I owe a debt of gratitude to my editors, Terry and Snow. They did much more than just check spelling. Both of them helped to refine and improve the story. This is the first story where I substantially rewrote it once I had a version done. That turns out to be quite a bit harder than writing it in the first place. In particular, Snow wouldn't let me post something that wasn't as good as it could be. I love them both!\n\nThis is a very different story for me in many ways. It is set in a fantasy setting; and true to that genre, it is violent and at times bloody. It could just as easily been in the Sci-Fi & Fantasy or BDSM categories. I debated long and hard with myself as well as with Snow and Terry. In the end, it's a story about lesbians that involves D/s and is set in a fantasy setting. I expect it won't be for everyone. Like most of my stories, while there is some sex, it's only a part of the tale. It is a story about finding one's self, accepting it, and then embracing it. \n\nI hope you like it.\n\n*****\n\nThere was a smell in the air. Rayven knew it well. It was the smell of fear, of many people in a small space desperately afraid of what was coming. She shook her head. The reek rolled around her but none came from her. If there was a time when a pending battle brought fear with it for her, it was long past. She controlled her own fates. Let anyone opposing her feel fear; she wouldn't.\n\nAs she climbed the stairs to the upper levels of the castle, Rayven thought back to the conversation that she just finished. She couldn't remember the last time she spoke with the King before today. She tried to remember. It must have been a year or two after the last rebellion, which would make it about twenty years ago. It was hard to believe. It didn't feel like it was possible for that much time to have passed.\n\nBack then, she was one of his best warriors. She led the charge that broke the line in the final battle to end the rebellion and the King named her one of his champions. That didn't last too long. Once the war was over, there was not much to do. A life as a show warrior was not one she enjoyed. She left and had not been back in all that time.\n\nReaching the top of the stairs, Rayven looked both ways before heading towards where she remembered the royal suites were. She was tall but not as stocky as she once was; nor did she wear the armor of a warrior any more. When she was in the middle of her forties, she realized that fighting in battles was no longer something she could easily do. While she might continue for a while, eventually she would meet up with a younger, fresher warrior who would be her death. Now she wore the leather armor of a ranger; and rather than fighting in wars, she led squads of bodyguards for caravans and important people traveling. Still her armor made her big enough that people moved out of her way as they fled with what belongings they could carry. It didn't matter to Rayven whether all of what they carried belonged to them. That wasn't her mission.\n\nIt didn't take long to find the door that she sought. Without knocking, she pushed open the door. Seated on a chair and listening to a young maiden play a lute was her mission. \n\nLooking over at her, a lovely blonde woman ran her eyes over Rayven for a moment before looking away dismissively. She saw a tall woman wearing a cloak over well-worn armor. She was clearly older, with steel grey hair pulled back into a ponytail bound by cord wrapping around it for a third of the length. Her face was a bronzish red and had lines around the eyes and by her mouth. Despite the years that were easy to read on her face and a scar that ran across one cheek, she retained much of the beauty of her youth. Her brown eyes were dark and unreadable. Despite her gesture, she felt a little shiver run through her. This woman was not someone easily dismissed.\n\nRayven looked over at the woman playing the lute. While undoubtedly talented, her fingers were clumsy today. From her wide eyes, Rayven could tell that she was terrified. Like most of the castle residents, she wanted to run, but whether it was loyalty or a greater fear of her mistress, she was still there.\n\n\"Isana, we need to make ready to leave. Your father has charged me with getting you to safety,\" Rayven spoke sharply, interrupting the music. She looked again at the lute player. \"You are dismissed,\" she said in a slightly softer voice.\n\nThe young woman looked over at the princess, uncertain if she should obey. She saw her mistress' face cloud over and looked down, knowing that she was in a no win situation.\n\n\"I'm not going anywhere and neither is Usuri,\" Princess Isana said in the tone of someone who had been indulged all her life. \"No one commands me!\"\n\nWith a sigh, Rayven stepped forward. Without warning, her hand moved and slapped Isana on the cheek. It wasn't hard but left a little red spot behind. The princess' big blue eyes welled up. It was probably the first time in her whole life that anyone struck her. \n\n\"My father will have you flogged for that,\" Isana said in a tone that somehow conveyed her shock at someone daring to strike her as well as from the sting of the slap itself.\n\n\"I don't think so, Princess,\" Rayven said, saying the title with sarcasm. \"First your father owes me his life, more than once. His life debt will take a lot more than that to be cancelled. Second, he told me to expect you to behave that way and bade me to be free with dispensing discipline as I saw fit.\" Her hard eyes stared into Isana's until the younger woman's eyes dropped.\n\n\"You don't understand what is happening, Isana. The rebels are closing in, and soon the castle will be under siege by the Duke's forces. He has planned well, and there is no force your father can bring to bear to break the siege. If your father is lucky, the weather will turn and force the Duke to abandon it on his own. Your father doesn't believe in luck,\" Rayven said. The words were stark.\n\n\"You mean...\" Isana trailed off.\n\n\"I mean he expects to lose. And when they take this castle, the Duke's forces will rape every woman still alive. He personally will rape you, perhaps after others already have, and then your rapist will marry you. Marrying you will give him legitimacy among the Kantari, at least he thinks so, and they will accept him. Many of Onjani already accept him and are flocking to his banner, looking to throw down the invaders of three generations ago,\" Rayven said. \n\nLooking over at the handmaiden, Rayven grimaced. \"She knows. Her dark skin will condemn her. In your service, she will be a traitor. Being raped and killed is her fate, if you make her stay. The fair ones like you will be the 'lucky' ones. Most of them will be war brides, taken as prizes and given to the Duke's favorites. Is that how you will reward her loyalty for staying true?\"\n\nIsana looked at the other younger woman. For the first time, she noticed the trail of tears running down her face. \"Usuri, I'm sorry. I didn't know. You must go, now!\" she said.\n\n\"Your highness, I will go, but let us go together. I don't want to abandon you,\" she replied.\n\nDropping into the Onjani language, Rayven spoke. \"No, that isn't possible, kinswoman,\" giving her the honorific in recognition for her willingness to keep to her loyalty. \"The King was explicit that just the two of us travel. Her Highness' greatest safety is to draw as little attention as possible. Three are more visible than two.\" She reached under her cloak and brought out a purse. \"The King gives you this. He hopes it will help in finding safety. Now go, now. Go now if you want to live.\" Rayven's words were harsh and had the desired effect. Crying out her goodbye, Usuri ran out of the room and joined the throng trying to make their escape.\n\n\"Put these on,\" Rayven said, dropping an until now unnoticed knapsack at Isana's feet. \"And hurry, our escape depends on speed.\"\n\nReaching into the bag, Isana pulled out some clothes. She looked at Rayven in disbelief. \"I can't wear these,\" she said, holding up the pants and top, more suitable for a young man than a young lady.\n\n\"You can and you will, you silly girl. We are trying to hide who you are, not proclaim it. I have some other tricks to help, but it starts with you putting those on,\" the older woman said. It was clear that there would be no argument, and Isana felt the warmth on her cheek reminding her of how Rayven enforced her will.\n\n\"Fine,\" she replied. After hesitating a moment, Isana looked helplessly at Rayven. \"I can't undo this dress by myself. Could you help unlace it?\" She asked.\n\nTurning away, she missed the glint of humor in Rayven's eyes. \"Sure,\" she said. With a quick motion, she pulled her dagger from its sheath and used it to slice through all the laces up Isana's back. With the laces parted, the dress fell forward and off her body. \n\nIt happened too fast for Isana to say or do anything, but she glared at Rayven. \"Do you have any idea how much that dress cost?\" she asked.\n\n\"I don't know, but it is worthless to you at the present time. Anything that is worthless to our escape must discarded,\" Rayven said coldly. She turned and went to the door and looked out of it and then shut it again. \"Hurry, girl. We must move,\" she said as she pulled out her sword. She could tell that the looting was increasing and she wanted to be ready to defend them if necessary.\n\nSeeing that was the motivation Isana needed. She realized that Rayven wasn't being cold for its own sake, but because they really were in danger. She quickly pulled on the trousers and then the shirt, tucking it in before putting on the belt. Finally after slipping on the riding boots, she put on the forest green hooded cloak. Everything fit perfectly and she wondered if that was her father's doing or Rayven's. \n\n\"Done,\" she said. \n\nRayven turned and looked her over. She nodded in approval. \"Good, girl,\" she said. Isana felt a little flush of satisfaction from having pleased her protector for the first time. \n\n\"Now come here,\" Rayven said, leaning back against the door to block it. As Isana approached her, she raised her hands and concentrated. Under her breath, she spoke words that Isana couldn't understand but caused the hairs on the back of her neck to rise. It wasn't the first time she had seen magic, but it was the first time someone cast a spell on her. The words seemed to disappear, as if she was being wrapped by a cocoon that muffled all sound. She could feel the magic touching every bit of skin not covered by her clothes as well as running through her hair.\n\nWhen she finished, Rayven slumped back against the door. There were little beads of sweat on her forehead and she was breathless as if she had been running, even though it had only been fifteen or twenty seconds.\n\nCurious, Isana looked over at a full-length mirror, and gasped. Her hair was black and her skin bronze like Rayven's. Only her eyes betrayed her Kantari blood. They were still sky blue. She raised her hands to touch her cheeks. As she did so, the sleeves of her shirt slide down a little revealing pale skin. Tugging down on her neckline, she realized that the magic only changed the places it could touch. It had also changed the color of her clothes, making them a brownish color.\n\n\"It will only hold for two hours. It is easily discovered if anyone examines you closely, so we best move quickly and avoid contact with others. Later I have some other tricks that will disguise you longer,\" Rayven said. The weakness from casting the spell was already past. \"But if anyone asks about you, it will help with the confusion.\" She handed Isana a Kantari headband. \"Use this to pull your hair back,\" she told her. Kneeling, she attached a dagger in a sheath onto Isana's belt. That was it. They were ready to go.\n\n\"Hold my arm and don't let go, unless we run into trouble. If that happens, just say out of my way while I take care of it,\" Rayven said. She pulled open the door and they stepped out into the crowd. \n\nFor a while, Rayven went with the flow of the mass of people. It had been years since she dwelt in the castle, but she still remembered it well. Finally, she got to the place for which she was looking. She pushed her way through the crowd and went down a small side corridor that was ignored by everyone else. It was a dead end, leading back to where the servants emptied the chamberpots. Her practiced eye looked at the wall and found the stone she remembered. Pressing on it made a clicking sound and a portion of the wall opened a crack. Pushing it open further revealed a dark passage way.\n\n\"Quickly, get in,\" she told Isana. \"I don't want anyone else to see us.\"\n\nOnce the door closed, they were in total darkness. There was the usual musty smell of a stone passageway with a faint yet discernible smell of human waste. Without thinking about it, Isana reached out and grabbed Rayven's arm. The dark unnerved her, as did the sounds of some rodents moving through the passageway not too far away.\n\nOnce again, Rayven spoke under her breath, speaking more of that indecipherable language. Her hand was suddenly illuminated, as if she was holding a cold ball of light. It wasn't bright but it lit things well enough to see. They immediately started following the corridor, quickly coming to a flight of stairs. Rather than the twists and turns of the castle hallways and passageways, this seemed surprisingly straight.\n\n\"Are you a battle mage?\" Isana asked in hushed tones. The corridor seemed to be a place for whispering. \n\nRayven wasn't much louder. \"Not me. I can manage a few useful spells, but real magic, especially battle magic, is beyond me. I do well enough with my sword,\" she said. \"A little light, an emergency disguise; those are things that come in handy though.\"\n\nIt was hard to tell the exact time it took to get to the other end of the corridor, but it didn't seem terribly long to Isana. Unlatching the door, Rayven pulled it open and cautiously looked out. Although there was the sound of panic off in the distance, it was quiet here. Putting her arm around Isana, she pulled her along as they hurried along a path. \n\nIt took a moment but Isana recognized where they were. It was in the back of the castle, in an area where some of the servants lived. \"Why are we here?\" she asked, unaware of how her voice took on a whiny pitch.\n\nRayven ignored her. They came around a bend and she saw the building they needed. It was a small stable right against where the castle wall met the tall crag that was behind the castle. No wall was needed there, as there was a sheer faced cliff that went up for over five hundred feet. Noticing that the door was open, she frowned and sprinted to it, unsheathing her sword as she did. Isana ran after her, afraid of being alone.\n\n\"Wait here a moment, Isana,\" Rayven said as she pressed against the side of the building next to the door. With remarkable speed, she spun and went through the door with her sword ready. A few seconds later, Isana heard her. \"Come in. It's safe.\"\n\nWhen she entered the building, the first thing that she saw was two men on the ground in pools of blood. Neither one was moving. While she didn't recognize one, the other was a servant that she often saw helping take care of the hunting hounds. She came up short as she saw someone in death that she knew. It was the first time for her, and she felt her stomach churn a little.\n\nA painful gasp drew her attention away. Leaning against the wall was someone she had known all her life. Her father's stable master was sitting, holding his belly in a vain attempt to stop the bleeding.\n\n\"I stopped them,\" he said to Rayven who was kneeling and examining him. \"They thought they could steal the horses, but they had to go through me.\" He smiled at Isana. \"Your Highness, if I didn't know it was you, I wouldn't recognize you.\" The smile faded and he coughed. A speck of blood was left on his lips. Turning to Rayven, he nodded. \"Good thing you came quickly. The next ones would have gotten past me, I think. Everything's ready for you.\"\n\nRayven's face was grim. This man was an old friend, and one of the others that the King trusted implicitly. His wounds were mortal, but it would take a while. \"Daktu, I...\" she started to speak but he interrupted her.\n\n\"Please,\" he said. He was calm and full of acceptance. He looked over at Isana. \"Your Highness, I think you want to go into the stable now.\"\n\nLooking at Rayven, Isana shook her head. \"Why? Can't he get to the healers? He'll be okay, won't he?\" There was no sign of the spoiled brat in her now, just a scared young woman who was watching someone who she loved suffer. Daktu had taught her everything she knew about riding, from as far back as she could remember. \"Help him, please,\" she asked.\n\n\"I will,\" Rayven said softly, \"the only type of help there is now.\" Her own voice was full of sadness. She and the stable master had been comrades for years, even if she hadn't seen him in a long time. \"Go now. I'll be there in a moment.\" She waited as Isana went into where the horses were, and then she turned back to Daktu. She quietly drew her dagger.\n\n\"Just as sharp as ever?\" he asked her.\n\n\"Always. I could shave you if you wished,\" Rayven said as she reached up to stroke his head.\n\n\"No, I'll meet the gods as I am. I did my duty,\" the dying man said.\n\n\"That you did, my friend,\" Rayven said as she slid the edge of the blade along his throat in a quick and hard slice. She felt his blood gush over her hand. She continued to stoke his head. \"Ashura, greet him well. He has the heart of a great stallion,\" she whispered to her goddess. She couldn't remember which god Daktu worshipped but she trusted hers to help guide him to where he would be welcomed. His face relaxed as the burbling sound of his blood mixing with his airway began to fail. The light in his eyes dimmed and then failed. With her bloody fingers, she closed his eyes, leaving a smear behind.\n\nStanding up, she turned to see Isana staring at her with blue eyes, wide with horror. \"You killed him,\" she said. \n\n\"I gave him the release he asked for,\" Rayven said more harshly than she intended. Pausing to take a breath, she tried again. \"I'm sorry, Isana, he was my friend too. You haven't seen battle; he has. He was going to die; the only question was when and how painfully. It would have been some time, and he would have been in increasing agony. Is that what you wanted for him?\"\n\nGradually the horror failed from her eyes. Finally, all that was left were a few tears running down her face. \"He died for me, didn't he?\" she asked.\n\nRayven gently ran her hand up and down the young woman's arm. \"Yes,\" she said. \"So we can't waste his gift. We must go.\" Turning Isana around, she gave her a push and followed her further into the stable. Her horse was there, saddled with all of her gear and provisions. He nickered at her in greeting. \n\nIsana starred at the other horse. He was bigger by far than the horses she rode. While not as big as Rayven's, it was still intimidating. \"I don't know if I can ride that horse. I'm used to ladies horses,\" she said.\n\nPausing from checking her gear, Rayven looked over at her. \"Master Daktu picked that horse out for you. He knew what you could or couldn't do, and you know he wouldn't have picked him otherwise,\" she said. Without waiting, she went back to her task. Satisfied, she moved over to the wall. Like in the corridor, she searched until she found a little sunken button. Pressing it opened another secret door, this one leading to a passageway that led downward. There was a little glow of light coming from the other end around a bend.\n\nShe grabbed the reins of her horse and looked back at the princess in disguise. Rayven guessed how hard this was, to go from her pampered life to being on the run. \"It will be okay. Take your horse and follow me,\" she said gently.",
        "She paused long enough to secure the door again and then led the way through the tunnel. It opened into a ravine with the gated exit hidden behind a large bush. Producing a key, she opened the gate and then locked it behind her. The ravine was already deep and continued down to the foothills rising up to meet the side of the mountain. To protect the horses from injuries, they walked them down the trail.\n\nThe sound of people screaming and weapons clashing could be faintly heard in the distance. Isana looked back up and saw the hills beginning to obscure the view of her home. \"I guess it isn't my home anymore,\" she thought. \n\nLooking to her side, she examined the woman who so abruptly had entered her life. \"How did you know all this? All these passages, I never heard rumors of them,\" she asked.\n\nRayven's eyes were unreadable as she looked back over at Isana. \"Your father taught me those secrets many years ago. It was necessary for my job,\" she told her.\n\n\"Your job?\" Isana was confused. Unlike the passages, she had heard of rumors about the warrior woman, Rayven. She was a central figure in many of the tales told of the rebellion her father put down, but those were all about daring deeds done on the field of battle. She didn't remember anything about her being at the castle.\n\nRayven nodded. \"I was your mother's bodyguard for a while, at a time when your father feared that someone might try to avenge a death or two by taking his wife's life.\" They were coming down the edge of the ravine and would soon be able to ride. \n\n\"Oh, when did you leave?\" Isana asked. She wondered if Rayven had been around when she was born and knew her as a child. She didn't need to wonder long. \n\n\"When you were born,\" Rayven said flatly. \"The need for me went away.\" Even so many years later, she could still feel the pain.\n\nIsana immediately knew what she meant. She saw the same look on her father's face when someone mentioned her mother. It was different for her. All she felt was regret at never having known her mother, but she wasn't real to Isana. How could she love someone she never met?\n\nWhatever else Rayven might say was lost when she suddenly whirled and stared intently into the woods. She waved Isana back against the horses. As Isana moved, four men on horses burst through the woods. Their shouts made it clear that they saw them. They turned and came towards them.\n\n\"It's the princess,\" one of them called out. They all knew that the Duke had offered a reward for those who captured her. Now all they had to do was take her to claim it.\n\nIn an instant, the odds got a little better. Almost faster than Isana could see, Rayven pulled out her dagger and threw it. It hit the first man right in the throat and he toppled of his horse. Without any pause, Rayven had her sword in her hand and charged at the men. \n\nThat was the last thing they expected. She met the next one with her sword slashing and cutting deep into his thigh. She felt it hit bone and blood sprayed out and hit her. She knew the man would be dead in a minute or two. In the meantime, he wouldn't be a worry. His own sword slid from his hand as he screamed in pain and leaned against his horse. For good measure,she slammed her shoulder into the wound and then turned to face the last two. His shriek felt good in her ears.\n\nThey were both off their horses now, advancing in her with more caution. She grinned at them. Her face was speckled with the blood of the dying man. \n\n\"Ashura is smiling on me today. I've sacrificed two already to her. And two more to come,\" Rayven said with a laugh. She looked almost like an avatar of her warrior goddess to the other Kantari, and they shifted nervously as she began to swing her sword. They moved apart, trying to catch her between them. Charging together, Rayven parried the blade of one while slipping to the side of the other. Using her own momentum, as well as his, she kicked him hard and sent him sprawling to the ground. \n\nSensing the other attacking more than seeing it, she whirled and met his blade with her own. Spinning, she pulled out her second dagger and rammed it into the shoulder of his sword arm. It slid between a gap in his leather armor. While he managed to hold on to his sword, when he swung it, the force was gone. She parried his next stroke away easily. \n\n\"Brother, when you meet the gods, tell them you had to honor to die at the hands of the beloved of Ashura,\" she cried out as she struck with the full force of all her strength. Her sword sliced through the armor covering his belly, biting deeply enough to part open his stomach. His sword fell from his hand and he grabbed at his belly, trying to keep his guts from spilling out. Rayven kicked him in the chest, propelling him on to his back. Once again, she heard the screams of another warrior falling to her.\n\nTurning to take care of the last one, she saw that he was not up for continuing the fight. He was already on his horse and rounding about to ride away. He picked up speed and moved away. \n\n\"Damnation,\" Rayven cried. In his cowardliness, he was the most dangerous of the four. If he got back to report them, the Duke would have his army out chasing them. She ran to her horse and grabbed her long bow. Notching an arrow, she drew a bead on the man. \"Ashura, honor us, guide my arrow,\" she prayed as she released it. Whether it was her considerable skill in archery or her prayers, the arrow flew and hit him in the back of his neck. He slid lifelessly off the horse.\n\n\"Thank you, Ashura,\" Rayven said. It was always better to give credit to her goddess than assume it was her own skill. Her battle focus faded and she became more aware of the rest of her surroundings. The man with the sliced leg was silent, but his comrade with the belly wound was still moaning. She walked over to the dead man with her knife in his neck. Grabbing it, she pulled hard to remove it. There was a pool of blood in the wound but it was still. \n\nComing back to the last living man, Rayven crouched down. \"Sleep, brother,\" she said in Onjani. He nodded, but said nothing between his clenched teeth. Rayven struck, slicing through his throat in a violent yet effective motion. Unlike with Daktu, she felt no need to help him to go into the afterlife in a gentle way. She left his eyes staring up into the sky.\n\nStanding up, she turned to look at her charge. Isana was still up against her horse, but she'd had the presence of mind to grab the reins of Rayven's horse as well. It was well done, if not necessary. Well trained for war, her horse needed more than a little fight like that to make him bolt. \n\nShe was shaking. Some of the blood had managed to hit her along one arm. Rayven sighed and went over to her. Putting her arms around Isana, she gave her a hug. \"Oh little Dove, it's okay,\" she said. \"I'm sorry. My hand was forced.\"\n\n\"I know,\" Isana said as she gave a hug back. Somehow being held by Rayven made her feel better almost immediately. It was if she could draw strength from her. She squeezed tighter. \"We should go, right?\" She looked at Rayven and gave a wan smile.\n\n\"In a moment,\" Rayven said. She hugged Isana one more time and then let go. She went over to the closest body. She searched it quickly and pulled off his purse. She tossed it over to Isana. \"I've got a fair amount of coin from your father, but we can always use more.\" She collected the purses from the other three and brought them over to Isana. \"They are yours now, Dove,\" she said with a smile.\n\n\"I can see why they recognized you. The magic is fading,\" Rayven said. And it was. Isana's face was mottled, brown and pale, and the wisps of hair that could be seen under her hood were a collection of dark and light. \"Now we really should be getting a move on,\" she added. \n\nTwo of the horses from the Duke's men were still close by. They rode close and Rayven grabbed their reins. As she tied one to each of their saddles, she explained. \"We can use them to give our horses a rest. We can go faster and cover more ground. The further away we are, the better,\" she said.\n\nWith that, they began to ride. For a while, they just rode hard. Rayven didn't worry too much about leaving a trail to follow. All that mattered now was getting as far away as they could from the castle. That's where all the Duke's forces were. Once he figured out she had escaped, he would search but by then she would be using her tricks.\n\nThey covered ground quickly. Every couple of hours they switched horses. She didn't let them stop, not even for food. They ate preserved foods from the saddle. The hills that were far grew closer and closer. As dusk approached, they reached the edges of them. Rayven searched for a small hollow where they could camp for the night. \n\nIt didn't take long for her to set up camp for them. Isana tried to help but she had no experience. Doing any sort of work was new. Rayven smiled as she watched Isana pull the saddle off her horse. \"That will change,\" she thought, \"if we want to avoid attention. She's not the princess anymore.\" She would have to learn to do things for herself. \n\nThat wasn't all that would need to change. She went to her pack and got out a few things. She went over to a log and called her over.\n\nIsana looked over at Rayven and quickly obeyed. It hadn't taken her long to realize that Rayven knew how best to keep her safe. Beyond that, she was unlike any woman that Isana had met. \n\n\"We need to work on disguising you,\" Rayven said. \"Come sit down here.\" Isana settled down at her feet. She felt Rayven run her fingers through her hair. \"I'm sorry Dove, but I'll need to cut your hair.\"\n\nFor sophisticated Kantari women, their hair was something in which they took great pride. Isana swallowed hard, it was something she had cultivated since she was young. Still, she nodded. \"I understand. It can't be helped,\" she told Rayven. Changing her hair would make a huge difference in her appearance.\n\nUsing a razor, Rayven went to work. She cut back her hair into something much shorter, and then she shaved one side of Isana's head so that a band of a couple of inches was bare. She looked at the result and nodded. It was a style worn by some of the still barbaric tribes of Kantari in the far south. Not all of the tribes had followed Isana's great grandfather north when he invaded.\n\n\"Now for a final touch,\" Rayven said. She picked up a scroll and then stood up. \"Stand facing me, Dove,\" she told the younger woman. \"Once I start, try not to move.\"\n\nHolding the scroll in one hand, she began to trace a pattern on Isana's face. As Rayven began the say the words, it was as if her fingers became hot. It was not quite hot enough for Isana to flinch but it took some effort to avoid pulling away. When Rayven finished saying the spell, the scroll flamed up and disappeared into ash. Her finger lifted up, but Isana could still feel the fiery pattern burning into her face.\n\nShe raised her hands up to touch it but Rayven grabbed them. \"Don't touch them yet. The pattern needs to set in,\" she told her. \n\nIsana's curiosity burned even higher than her face. \"What did you do?\" she asked.\n\n\"Don't touch,\" Rayven said again before letting go. She went to the little gathering of things she collected earlier and found her polished silver mirror. Turning back to her charge, she held it up.\n\nThere was enough light left for Isana to see herself. She stared in amazement, finding it hard to recognize herself. Her hair was the least of it. She now had what looked exactly like a Kantari tattoo on her face, only the edges were glowing like embers. She could feel the burning fading away, and with it went the glow. There was a dark band covering an inch on either side of her eyes, like a mask. It disappeared into her hair, extending all the way to the back of her head on the shaven side. Only a thin line of pale skin right around her eyes remained. Her cheeks were marked with zigzagging streaks like claw marks and her lips had a tall rectangle over them. With her leather riding outfit, she looked the perfect savage from the Kantari homelands.  \n\nShe smiled. Something deep inside her awoke and was pleased. For the first time in her life, being of Kantari blood felt like it meant something to her. Isana wondered what her father would think if he saw her. Would he be pleased or appalled? She knew he was the first generation not to be tattooed. There were still older Kantari with tattoos, and not all of her father's generation abandoned the tradition. Nevertheless, there had been few new tattooed youths in the last 30 years.\n\n\"Is it permanent?\" she asked. Her hands raised to touch it, but stopped before doing so. She hadn't been told it was all right.\n\n\"No, Dove, it isn't. I can say a spell once a week and it will continue indefinitely,\" Rayven said. \"Go ahead; the fire has faded so it is safe to be touched.\"\n\nOnce permission was given, Isana explored her face. She could barely perceive any difference in how the skin felt, but there was something there. It was like the slightest of ridges. \n\n\"I feel almost like a different person,\" Isana said.\n\n\"That's good, Dove. It is safer for you,\" Rayven said, as she put her things away and began to get food together for a meal. It would be a cold meal. A fire could lead someone to them, and left traces that were harder to erase. Seeing what she was doing, Isana came over and did what she could do to help. \n\nSoon they were having their meal. As she ate the cold meat on bread, Isana watched Rayven. Her cloak leather armor was off and for the first time she could see her a little better, although the darkening skies still hid some things. She had more of a womanly form than Isana had realized. Without the chest armor pressing down, her breasts were full and the slightly unlaced leather top showed off her cleavage. Isana was amazed at how fit she was. Her muscles weren't huge but everywhere she could see them, they were firm and taut.\n\nHer years of experience fighting were obvious from the scars. It wasn't just the face. Her arms showed evidence of many cuts, and once when she leaned over to pick something up, Isana saw a long diagonal scar on her lower back. It disappeared under her top.\n\nRayven noticed how the other woman was examining her, and smiled. \"I've always survived. None of these came close to a killing blow. Just reminders of moments when I wasn't as careful as I should have been,\" she said.\n\nSomehow, after that, Isana felt a little more comfortable in talking with the woman who suddenly was the most important person in her life. It wasn't likely that she would take offense at questions. She peppered Rayven with questions and was delighted when she answered them all seriously. Finally, as they both finished eating, she had one more question, something that was more than just curiosity. It took her a little while to get up the nerve to ask it.\n\n\"Why do you call me Dove?\" she asked in a quiet voice.\n\nRayven chuckled. \"Because you can't go by your old one anymore. After I said it in the stable, it seemed natural so I kept on saying it. I'm the one who has to remember not to call you by that other one, not you. How often do you say your own name?\" she asked.\n\n\"I guess you're right. Only when I introduce myself,\" the young woman said. She was thoughtful for a few moments, before looking up at Rayven. \"Not even then very much, to be honest. When I meet someone, they know who I am already.\" She was quiet again. Finally, she spoke the question that had been on her mind for a long time.\n\n\"What is going to happen to my father?\" Isana asked.\n\nLooking at her for a few moments, Rayven thought about her answer. In many ways, Isana had come a long way in the course of the day. The spoiled princess was not much in view. She had experienced the death of someone she loved and seen men killed in front of her. She was more like the Kantari wildling that she now resembled than Rayven would have thought.\n\n\"War is never certain, Dove, but I think the Duke will take the castle. He took your father by surprise. The castle is not well stocked and he did not have time to call for reinforcements. When the Duke tries to take the castle, it will be hard to stop him. The King does not have enough troops to be everywhere. If there is a single breach, I don't think it can be stopped,\" Rayven said.\n\n\"Will he die?\" Isana asked after a little bit. Her voice shook slightly.\n\nSighing, Rayven moved over beside Isana and put her arm around her. \"It depends, Dove. If he has become too much of an Onjani, then I think he will. An Onjani man does not back down. He would rather break than bend in a storm. The Kantari are different. They know that sometimes, you have to give way and wait for a better time. Pick the time and place of your battles. A true Kantari King would disappear, only to pop up somewhere else where he had the advantage.\"\n\nShe stopped speaking. The night was fully upon them now. The moon was just rising but as yet cast little light. In the faint starlight, she could see tears running down Isana's face and she gave her another hug. \"Your father may yet prove to be Kantari at heart,\" she whispered.\n\n\"Perhaps,\" Isana whispered. In truth, she always saw him as unbending. Their relationship wasn't warm. Her nurse said it was because she reminded him of her mother too much. Still she loved him. She couldn't say why, although deep in her heart she knew he loved her back. He just didn't know how to express it. Moreover, if she angered him, his temper was truly frightening. She did her best not to. \n\nIt wasn't just her. She had seen his anger directed at others, people who he didn't hesitate to punish.\n\n\"What if he does live? How will I get back to him?\" Dove said. Her voice quivered as she contemplated a world without her father, but still clung to hope.\n\n\"If the siege fails, then I will take you back home when it seems safe. If the castle falls and your father escapes, then we have a plan. We agreed on a place for me to leave a message about where we can be found with someone I trust. Your father will pick someone that he can trust to take you to him. I swore to keep you safe until his messenger comes for you,\" Rayven said. \n\nIsana could almost hear the oath ringing in her head, as if she was there when she gave it. A scary thought occurred to her. Rayven said she would guard her until her father sent someone for her. \"And if he doesn't?\" she whispered. She left her real question unanswered\n\nRayven looked at her with a reassuring smile. She understood what Isana really wanted to know. \"Well then little Dove, I gave him my promise to keep you safe for as long as you need protecting. We will wait at the rendezvous spot until we are sure of your father's fate. After that, I'm not sure. Let's cross that bridge when we must. Even with the Duke winning, the kingdom will face unrest for a long time. Brigands will spring up; some from your father's defeated loyalists. Others may also try for the throne, hoping to catch the Duke before he consolidates his power,\" she said. She gave a light sigh. \"The common folk will suffer no matter what, and we will not be safe here for long.\" \n\n\"He isn't a great King, is he?\" Dove asked, still in a whisper. Rayven could hear the tears that were close to coming.\n\n\"A great King wouldn't have much of his kingdom rising up in rebellion, Dove. The last time, most of the Kingdom stayed loyal, despite the fact that the Kantari were their conquerors. Your grandfather was a good King who ruled wisely, and your father seemed to be following in his footsteps. That is why my family and most of the Onjani I knew supported him.\n\n\"I think my brothers are with the Duke, and my youngest uncle,\" Rayven said. \"None of my family stayed loyal this time.\"\n\nIsana stared at her in the darkness, catching her outline and a glint of her eyes. \"But you did. My father trusted you,\" she said softly.",
        "\"Yes,\" Rayven replied, offering nothing more.\n\nAs much as she wanted to ask why, Isana found that she couldn't. There was a melancholy aura about Rayven that held her back. Finally, she just said, \"I'm glad. Thank you.\"\n\n\"Let's go to bed, Dove. We have an even harder day of riding tomorrow,\" Rayven said as she got up.\n\nThey both went into the shelter and slipped under their bedrolls. At first, Isana thought it would take her forever to fall asleep, so much had happened that day, but exhaustion hit her. Before she realized it, sleep overwhelmed her. \n\nRayven took longer to fall asleep. She was used to this life and so was less exhausted. Memories from long ago disturbed her. Finally, she was able to fall asleep.\n\nIt was still deep in the night when she woke to the sound of a scream. It was Isana, who was thrashing next to her. She reached out and shook her by the shoulder.\n\n\"Dove ... Dove! It's okay; you're okay,\" she said.\n\nIsana suddenly sat upright, and looked around. There was more light now from the moon, which was hanging high in the sky. \"Oh, my gods,\" she said as she burst into tears. \"They were coming to get me. I couldn't find you and they were going to take me, and ... and ...\" she couldn't continue. The dream was still vivid in her mind. The lust in their faces still terrified her.\n\n\"Come here, my little Dove,\" Rayven said soothingly. \"No one is going to hurt you. I promise you. It was a dream; your fears speaking.\" She opened up her arms and Isana readily went into them, burying her face against the other woman's chest. Her cries were muffled but they continued for a while. As Rayven held her and stroked her back, finally she was able to stop.\n\nLooking up at Rayven, she sniffed. \"I kept calling your name. I knew you would protect me. And I knew you were looking for me; you just weren't there.\" She began to cry a little again.\n\n\"Shhh, Dove, I'll be there. Whenever you need me, I will. Okay?\" Rayven said soothingly.\n\nIsana blinked the tears away and nodded. \"I know you will be.\" She took a deep breath. \"It was a dream. Nightghosts sent to trouble me,\" she said, as she returned the hug. She looked up at Rayven, whose face was lit up with the moonlight. \n\n\"She's so lovely,\" Isana thought. \"I hadn't quite seen it before. If she was presented at court, all dressed up, she would be a beauty.\" She felt a little stirring inside her, and she looked away. It was a familiar longing to her, and one that no man had ever provoked. While she wasn't ashamed of it, it wasn't one that she had indulged. Other than kissing a friend when she was younger, she hadn't had the opportunity. She wondered if she ever would.\n\n\"Turn on your other side, my little Dove,\" Rayven said gently. \n\nAs was often the case, Isana quickly obeyed without question. She felt Rayven scoot next to her and put her arm over her. The younger woman pressed back against the warm body. It felt very secure to be held that way. It was also slightly distracting, as she could feel Rayven's breasts touching against her back. If not for Rayven starting to stroke her head, the stirring inside her might have gotten stronger. As it was, she found sleep coming on again. Being held like that helped keep the nightghosts at bay.\n\nRayven smiled when she felt Isana's relaxed breaths indicate that she was back in a deep slumber. She continued stroking her hair until she too drifted off.\n\nWhen she woke, Isana was still sleeping. They were still in the same position, neatly spooned together. Rayven smiled. It had been a while since she had a lovely young woman in her arms. Slowly the smile faded away and she gently shook Isana.\n\n\"Time to wake, little Dove,\" she said.\n\nIsana woke up with a start, uncertain at first where she was. The fresh breeze smelling of the surrounding brush quickly reminded her, as did the feeling of Rayven next to her. It was strange, waking up being held but not at all unpleasant. The selfish princess still in her complained at having to get up from the safety and warmth, but the Kantari wildling growing inside her understood.\n\n\"Yes, Rayven,\" she said as she turned over to face her. Her newly cut hair fell neatly into place. Her blue eyes were wide but looked completely different behind the mask of her tattoo. \n\nRayven nodded in approval. It was easier to look at her now. Her mother had always looked like a proper Kantari noblewoman with long hair, perfectly combed. Isana didn't look so much like her now. \"I like this better. Her ghost does not haunt me in the same way. I can treat Dove as her own person, easier this way,\" Rayven thought to herself. Already, she had made the transition to stop thinking of her as Isana. It helped that Dove was more appropriate for a tribal wildling.\n\nSitting up, Rayven reached behind her to check her own hair. Just as the Kantari haircut was designed to be easy to care for, the same was true for her Onjani ponytail. She tucked a few stay strands back into place as she spoke. \"Get out the porridge from the saddle bag and mix it with water. It takes longer when it is cold, but it will be fine by the time we have broken camp. Add some of the dried fruit,\" she said. Dawn wasn't quite there, but there was enough light to see.\n\nWhile Isana hurried to do her task, Rayven quickly disassembled the camp. Her long years of practice were evident. When Isana returned for more instructions, she told her to saddle their horses while she donned her armor. Between them, they were ready to go, including having eaten their morning meal, in about a half hour. \n\nThe sun was just up over the horizon, and Rayven looked off into the distance from which they came. After several long minutes, she looked over at Isana and smiled.\n\n\"No sign of anyone,\" she said as they walked over to the horses. She had methodically stripped the ones they took from the scouts of anything that would identify them as being from the Duke's forces, including dropping the saddles off a cliff into a lake. As far as anyone could tell now, these had been their horses forever.\n\nIsana went to mount her horse but found that her muscles were stiff enough that she couldn't get up. She looked helplessly over at Rayven. \"Could you help?\" she asked.\n\n\"Of course,\" the other woman said as she came over. When Isana tried to lift her leg up and over her horse, Rayven gave her ass a strong push. It was enough to help Isana get into the saddle.\n\n\"Thanks,\" Isana said. She hoped the mask tattoo helped hide her blush. The feeling of Rayven's hand on her ass remained imprinted there. Once again, she felt those stirrings.\n\n\"Happy to help, Dove,\" Rayven said, and then mounted her own horse in an easy motion. She double-checked her weapons and then began to lead them up into the hills. \n\nThe pace was steady but not too hard until they reached the top of the hills. There, the terrain flattened out into a big plateau with small copses of trees and wide grasslands. Rayven took her time before she came out of the stand of trees at the top of the hill.\n\n\"There's an Onjani village to the south of here,\" she told Isana. \"Most people come up the slope closer to it.\" She gazed out into the open lands. She couldn't detect anyone. \"Let's hope they stick to it today.\" With that, she rode into the open and began to ride due west. The pace was hard and they switched horses a few times so that they could keep going without much pause. Although occasionally they dismounted and walked, most of the day was spent in the saddle.\n\nIsana could feel the long miles piling up in her legs and her bottom. She wasn't used to this much riding. She wanted to beg Rayven to stop, but her pride wouldn't let her. More than wanting to stop, she wanted Rayven to approve of her. Even when they decided to camp in some woods shortly before the plateau ended and started to drop down again, she tried to be as helpful as she could and ignore the pain. It worked for a while but finally Rayven noticed her wincing as she lifted a saddlebag down to the ground. \n\n\"Dove, what is wrong.\" Rayven asked as she came over. \n\n\"It's nothing,\" she started to say before she caught the look in Rayven's eye. \"I'm just sore from the riding. It isn't too bad.\"\n\nHer protest didn't do much good. \"Go sit down and rest,\" Rayven said. \"There isn't much more to do. I'll have dinner ready soon.\" Looking firm, she pointed at the shelter where their bedrolls were already laid out. To make her point even more clear, she didn't start to work again until Isana was laying down in the shelter.\n\nIt was true that they were almost done. Rayven had the last few things completed in only a few minutes. Dinner was almost as easy. She still didn't want to light a fire. Although they were lucky so far in not running into anyone, she was still worried about trackers coming after them some days from now. Tomorrow she was going to work on making their trail even harder to follow. \n\nShe glanced over at the tent and smiled. \"At least, Dove will get some relief,\" she thought. The pace would be gentler as they focused on hiding traces of their passing. She picked up the meat and hard cheese along with the wayfarer's bread and brought it all over to the shelter.\n\nIsana sat up with a gasp as she felt her legs mightily protest at having to move. There were almost tears in her eyes. \"That's it,\" Rayven said. \"You're getting a massage when we finish eating. I have some balm that will help.\"\n\n\"I'm sorry, Rayven. I don't mean to be a bother,\" Isana said. Even as she said the words, it occurred to her that the whole reason for them being here was because of her. Although she tried to stop them, tears began to fall from her eyes. \"I'm sorry,\" she repeated.\n\nShe felt Rayven's strong arms go around her and give her a tight hug. Just like the previous night, she buried her head and gave into the protected feeling.\n\n\"My little Dove, it's okay. You are doing so well. This is all new, and you've held up admirably. It's just your muscles aren't yet used to this,\" Rayven said softly. Her chin rested on top of Isana's head, and she slowly rocked her. \"It isn't a bother. We are settled for the night, and there is nothing more to do.\"\n\nAfter hugging her for another minute, she loosened her hold and separated from the younger woman. The crying had stopped and she gave Rayven a brave little nod. \"I'll try not to come apart again,\" she said. \n\nRayven reached out and cupped her cheek. \"Don't worry about that. Let's have our dinner.\"\n\nThe two of them fell to eating. It was a simple meal again and didn't take long to finish it. Once she was done, Rayven went to the saddlebag that contained all her magical items. Searching through it, she found the bottle she needed and returned to the shelter.\n\n\"I'll need you to take off your pants, Dove,\" she said. After a moment, she added in a regretful tone, \"And your underclothes. You said it was your legs and your bottom, right?\"\n\nIsana was grateful for the night's concealment. She knew that her new tattoo couldn't hide the fiery red blush on her face. She never undressed like this with someone other than a servant, and Rayven was no servant. Unlike when she had changed in the castle, she didn't look away as Isana took off her clothes. \n\n\"I wonder what she's thinking,\" thought Isana. She couldn't tell from Rayven's face. As was often the case, it was unreadable. The stirrings inside Isana were stronger than ever. She felt the faintest beginnings of dampness between her legs and quickly turned over onto her belly to hide any traces, although the darkness did that for her. She felt vulnerable in a way she had never experienced, but somehow that made the stirring grow.\n\n\"Does she find me attractive?\" Isana couldn't help wondering. As she thought that, her hips pressed down just a little on their own. She felt Rayven moving behind her.\n\n\"The balm will be warm. Don't worry. I've done this before,\" Rayven said as she touched the calf of one leg. Isana felt several drops of a liquid hit her leg, and instantly there was a warmth there that sank deep into her muscle. A smell came to her, menthol and something else she couldn't identify. The smell was more than just in her nose. She could feel it swirling around her. Once again, she could feel the magic in the air.\n\nAs Rayven began to massage her, all other thoughts went away. It was a delicate balance between pain and pleasure. She felt the deep probing fingers working the muscles. She slowly moved from one calf to the other. Isana couldn't help the moans that she made. It felt so good. \n\nWhen Rayven moved higher and touched her thighs, Isana parted her legs without being asked. Somewhere deep in her mind she knew she had exposed her mound to Rayven, but she couldn't find any embarrassment about it. She was giving her body over to Rayven's treatment. \n\nThere were more drops on her legs. The magical liquid helped Rayven's talented fingers to banish the stiff muscles and the pain that had been almost crippling. She was working both thighs at the same time. Her strong hands spread wide with her thumbs on the inner parts. Isana became aware of yet one more scent, a musky one that was vaguely familiar but somehow she couldn't place.\n\nAs the hands came higher, Isana realized that they were now close to her exposed privates. \"Her thumbs are so close! Oh gods, will she touch me there?\" Isana wondered and secretly hoped. She bit her lip in anticipation. At the last moment, however they lifted and moved to her bottom.\n\nThat was hardly better. The heat for the balm spread all over her bottom and it burned in a delightful fire. More balm was added and she felt a little trickle slide down the curve of her bottom until it pooled in the crevasse between her cheeks. It sat there creating an intense little fire until Rayven's thumb found it and began to spread it around. Her hands were pulling apart the two hemispheres and she felt her little rosebud being stretched. When a thumb brushed against it, it transferred some of the balm there.\n\nIsana gasped. She could feel the balm slowly penetrating her. It was if it was something alive, almost pulsing. It was an intense and pleasurable feeling. \"Oh gods,\" she murmured softly. She arched her back, lifting up her rear. Her whole body seemed to be coming on fire.\n\nRayven lifted her hands up off the younger woman. \"I think I have gotten all the spots that need it,\" she said. She felt her own frustration. Although her groans were only in her head, they were real nevertheless. While not in quite the same state of arousal, it was impossible to remain completely calm while touching such a desirable woman. Isana was under her protection; that meant from her own urges as well.\n\nGetting up, she left Isana to calm down while she put away the balm and washed her hands clean of it. The cool night air helped her to let her own excitement to fade away. She took several deep breaths.\n\nWhen she came back to the shelter, she saw that Isana had only put back on her underclothes, not her pants. Her long legs were extended with the top of her bedroll only over her feet. It was still warm from the day, and so there was no reason to pull it up any higher yet.\n\nIsana watched silently as Rayven entered the shelter. Her lower body was still alive with the feeling of the massage and the balm. The throbbing inside her was not yet gone, but the intense excitement had abated. After Rayven settled in her bedroll, Isana turned on her side.\n\n\"Rayven?\" she asked.\n\n\"Yes, Dove?\" the older woman answered back.\n\n\"I keep thinking about my dream last night. What if I have it again?\"\n\nRayven reached out and stroked her cheek. \"Then I will hold you again,\" she said softly.\n\nIsana moved slightly closer. \"Maybe you could hold me for the beginning of sleep, and keep the nightghosts away altogether?\" she asked.\n\nFor a moment, Rayven didn't reply. Silently, she sent a thought to her goddess. \"Ashura, you tempt me, don't you? Don't be angry with me if I don't give in!\" At last, she opened her arms. \"Alright my little Dove, come let me hold you,\" she said.\n\nRather than turning over so that they could spoon again, Isana moved over alongside her without any hesitation and put her arm over her. With her eyes closed, she lay her head down on Rayven's chest. She wiggled for a few moments and then sighed. \"Thank you,\" she whispered softly.\n\n\"You're welcome, little Dove,\" Rayven said as she closed her arm around her. Once again, she sent an admonishing thought up to her goddess.\n\nFor a long while, they were both quiet and still. Then there was a voice in the darkness. \n\n\"You were my mother's lover, weren't you?\"\n\nRayven let out a long breath. She softly stroked the back of Isana's head. \"I loved your mother, yes,\" she said.\n\nShe felt Isana lift her head. \"That wasn't what I asked,\" she said accusingly. \"I know what Beloved of Ashura means.\"\n\nThere was a soft chuckle. \"You are so wise, Dove, but just because I pay homage to my goddess by only laying with women, what makes you think that your mother and I worshipped her that way.\"\n\n\"I hear your voice when you speak of her. There is the sound of loss, as only someone who truly loved would make.\" The strong fingers ran through her short hair, combing it free of all tangles. It felt wonderful, and stirred long suppressed desires in Isana.\n\n\"When the rebellion was over, your father asked me to come with him, to watch over your mother. He wanted to protect her but he was afraid. He has a tightly held secret, Dove. At the end of the rebellion, he was injured in a way that made it hard for him to perform as a man. He couldn't pleasure your mother anymore, and he was afraid she would look for it elsewhere, perhaps from a strong guard who watched her night and day,\" Rayven told her.\n\n\"So instead, he picked a Beloved of Ashura,\" Isana concluded.\n\n\"Yes, little Dove. If I pleased her instead of him, at least she would not get with child, and maybe she would not want someone who could,\" Rayven said. She was quiet for a minute. Finally, she continued. \"He didn't imagine that your mother might love me back.\"\n\nOnce again, Isana could hear the loss in her voice. \"Or you her?\" she asked.\n\n\"I don't think your father cared one way or the other if I loved her, but it cut him when he realized that I had her heart as he never did. He would never hurt me because he owed me a life debt, but I stopped being his favorite champion.\" Rayven didn't mention the times that he had her fight for him against men who were much stronger and bigger. Ashura always fought alongside her and eventually he stopped trying to let fate remove her as a rival.\n\n\"Wait! If Father couldn't perform as a man, how did he have me?\" It suddenly struck Isana that perhaps she was the child of another.\n\n\"Magic, little Dove. What else would the ruler of the Onjani turn to?\" Rayven said. It was known that the Kantari were much more suspicious of magic, while the Onjani used it in many everyday ways. The only magic the Kantari used was battle magic. For the King's fix, much more powerful magic was needed. He found one of the most powerful Onjani sorcerers in the kingdom and swore him to silence. It took several years and many gold coins, but eventually he presented the King with a potion.\n\n\"The magic could only work one time, so while your father desperately wanted a son, he would have to take what he got. The sorcerer monitored your mother to make sure that she was at her most fertile night, and on that night your father took his potion and got you,\" Rayven told her. Once again, she left a detail out. There was no reason to tell her that he extracted a modest amount of revenge by having her on guard in the bedroom that night, forcing her to have to watch and listen. She let go of the bitterness many years ago, and didn't want to stir it back up.\n\nIsana pressed against her a little harder and held on a little tighter. Her head rested on Rayven's breast again. Her breath touched the bare skin where the shirt was unlaced. Her curiosity was still not sated.",
        "\"Rayven, were you ...\" Isana trailed off, not sure how to say it.\n\n\"Yes, little Dove, I was. I watched you take your first breath; and I held her hand as she took her last,\" Rayven said in a voice that shook. The emotions of that moment were alive in her. She felt tears fall from her eyes all over again, though she swore many years ago to stop shedding them for this loss. \n\nHugging her tighter still, Isana lifted up her leg and placed it on top of Rayven. Just as Rayven had held and rocked her the night before, she returned the favor now. She held the older woman for a long time as she softly sobbed, until it gradually faded away.\n\n\"Thank you, little Dove,\" Rayven said at last.\n\n\"Of course, Rayven, any time,\" she replied.\n\nOnce again, they lay there in the dark, not saying anything. A question began to form in Isana's mind but it was another one that she didn't know how to ask. She rested against Rayven like that, as the curiosity grew. The tension in her slowly built until Rayven could feel it too.\n\n\"Because he told me to, little Dove. That was the only reason I would leave. I would have stayed to protect you too, but your father told me that my time as his champion was done. He offered me a command of a troop of warriors, but I turned him down. It wasn't right for me,\" she said before pausing to look at her. The growing moonlight faintly lit both of their faces. \"I told him, before I left that if he ever needed me to protect you, I would come. And I did.\"\n\n\"For her,\" Isana breathed softly.\n\n\"No, my little Dove, for you. Your mother lives with the gods, and does not worry about this world, but you are here and alive, and somehow I knew the day would come when you needed that protection.\"\n\nThere was a feeling of being cared for that Isana had never felt before. It made her respond in ways that confused her, going beyond the sexual feelings of earlier. She had never lacked for confidence before, but she had never known such a powerful and capable person before. More than anything, she couldn't explain the feeling that came over her when Rayven called her \"my little Dove.\"\n\n\"Now, it's time for us to sleep. We need to be here in the present. Tomorrow won't be as hard as today, but we still need our rest,\" Rayven said softly.\n\nAs much as she wanted to keep talking, it didn't occur to Isana to argue. She closed her eyes and snuggled against Rayven, trying to find the best spot. When she finally found it, she sighed with contentment.\n\n\"Goodnight, Rayven,\" she said as a yawn caught her.\n\n\"Sleep well, my little Dove,\" came the reply. \n\nIt did not take long for either of them to fall asleep.\n\nThe next morning came sooner than either of them liked, but they got up and broke camp quickly. For Rayven, it was with an ease that came from years of doing it. For Isana, it came from listening carefully to her instructions and then carrying them out to the letter.\n\nThe route they took today was not a straight one. Distance was not Rayven's goal. It was to leave as little trace as possible, traveling on hard rock and in streams. Some of the time, she had them walk while one of the horses dragged a branch behind them. \n\nThe more leisurely pace left them with more time to talk. While not forgotten, Isana steered away from the topic of last night. It had touched a raw nerve in Rayven. That was enough of a reason to leave it alone.\n\nRayven allowed them to stop early that day. They were well away from the castle and there was no sign of pursuit. After the stresses of the last two days, on both them and the horses, she felt like it was safe. They spent more time taking care of the horses, brushing them down and checking their hooves. They were doing pretty well considering the miles they had ridden.\n\nFinally, they got out some food and made a dinner. They sat on a log as they ate.\n\nIsana looked beside her at Rayven.\n\n\"What?\" she said, noticing the attention.\n\n\"Eventually, we will meet other people, right?\" Isana asked.\n\n\"Of course,\" Rayven replied.\n\n\"It's easy to tell people what you are. A soldier of fortune, a bodyguard, a ranger; all of those make sense for you, but what about me? How do we explain an Onjani woman traveling with a younger Kantari one?\" Isana wanted to know.\n\nMy plan was to tell them that you are my servant,\" Rayven started to say.\n\n\"Why would a wildling like me be a servant?\" Isana interrupted. \"From what I know of my homeland, it doesn't seem likely.\" She looked more intently at Rayven. \"It would be more believable if I was your slave, captured in some fight.\"\n\nRayven regarded her for a few moments without speaking. Thoughts were going through her mind faster than she thought possible. \"She has no way of knowing my past; what happened after her mother died,\" she told herself. The paths down which she walked since them were ones she kept secret. She wasn't the same young woman that fell so deeply in love all those years ago. There were things about herself that she only discovered while recovering from the loss.\n\nThe silence dragged on longer than it should have. Finally she spoke. \"That would explain it. Down south, a Kantari will serve someone who defeats her. That has honor. Being paid to serve, that has no honor.\"\n\nIsana looked pleased that Rayven approved of her idea. So far, she did little to help with her escape. It felt good to do something that would make them both safer. In the back of her mind, something else pleased her about the idea but she didn't examine it. It unnerved her. A slight excitement ran through her, betrayed by the way she shivered. \"I wish I could be as calm as Rayven,\" she thought.\n\nIn reality, Rayven just did a better job of hiding the turmoil inside her. While it wasn't that long since she laid another woman, it was a while since one called her Mistress and meant it in its full sense. Even more than when the young woman clung to her as they fell asleep, she felt the pull of just how desirable Isana was. Even though it would only be a disguise, having Isana call her Mistress would make it all the worse.\n\n\"She's right, though. It's the best explanation; the one least likely to be challenged,\" she thought. The temptation to take advantage of it would be there, she knew. Shaking her head slightly, her thought was firm. \"Then resist it! It's my responsibility to take care of her and protect her, even from myself.\"\n\nRayven looked intently at Isana. \"You would have to behave like my slave, my little Dove,\" she said.\n\n\"I know.\"\n\n\"I'd have to treat you like my slave.\"\n\n\"I know that too.\" Isana said in a much softer tone. She felt her body tingling, though she did not understand why.\n\nLooking at the plates and cups, Rayven abruptly said, \"Go clean up dinner.\" Her tone was much more brusque than normal.\n\nIsana blinked a little at the sudden change. There was also an unbidden thought that no one commanded her this way, just telling her to do chores. She blushed as she realized how meaningless being a princess was just now, especially as Rayven saved her from a horrible fate. \"All right,\" she said, and started to get up.\n\n\"No,\" Rayven said. \"That's not right. You say, 'Yes, Mistress.'\"\n\n\"Oh,\" Isana said. That same part of her rebelled slightly at calling anyone an honorific while she was unacknowledged, and yet she did what was necessary for both of their protection. \"Yes, Mistress,\" she said, and then got up. There was a faint little quiver as she said the word for the first time, and once again, her body tingled.\n\nReaching down, she grabbed both of their plates. A few crumbs tumbled off the plates and landed on the ground. Rayven looked at her. \"Don't be so careless, slave,\" she said harshly. \"Those little pieces could betray us. Pick them up.\"\n\nOnce again, Isana felt polar opposite reactions. She did what she wanted and how she wanted for her whole life. Having someone order her about and criticize her was a new experience, and not one that she liked. At the same time, it seemed natural to obey Rayven. She had such a commanding presence and Isana wanted her approval. \"More than just want,\" she thought. It seemed incredibly important to her.\n\nAfter hesitating for a moment, she knelt and carefully picked up every bit of food that she could find. She went over to the small basin, making sure not to spill anything else. She poured a little bit of water with some soap and washed the plates. This was another new thing for her. The feeling of Rayven's eyes helped her to avoid thinking about that. \"I can do this. I can make her proud of me,\" she thought. \"I'll show her that I can play the role of a slave and hide the princess.\"\n\nUsing her fingers, she wiped off the food and started to pull the plates out. About to turn around and flash a pleased smile at Rayven, she noticed that there was still a bit of food clinging to the plates. Sighing a little, she dropped them back into the water and used her nails to help get off everything. Finally, when she was convinced that Rayven would be pleased, she pulled them out and set them down to dry.\n\nTurning around, she saw Rayven smiling at her. \"Good job, Dove, but you have to rinse them with some clean water. We don't want soap in our food tomorrow,\" she said. This time, her voice was the normal gentle one. Isana blushed a dark red, although the fading light helped hide it. \"That didn't even occur to me,\" she thought. She nodded and turned around to obey. It didn't take long. Rayven showed her how to take the dirty water a little ways outside the camp and pour it in a small hole that she then filled. \n\nAs Isana watched her, she realized how much Rayven knew about living in the wilderness. That knowledge helped her to feel safer. \"I am so very fortunate. Father may not be a wise King, but he was wise in picking her,\" she thought. She knew there were other aspects of his choice that he might not appreciate.\n\nFor the rest of the evening, Rayven ordered her around in order to test her reactions and responses. Each time that she forgot to say Mistress, Rayven reprimanded her. She didn't use her normal soft voice that felt so comforting. It was harsh and at times made Isana feel as if she was an idiot even though she knew it was part of the disguise. She couldn't help feeling a little angry back. After all, she was a princess. Not even her father tried to command her like this.\n\n\"I'm being stupid,\" she thought as she curried Rayven's horse. \"She just wants me to learn how to play my part.\" She looked over at the older woman who was checking their supplies. \"I need to do better. I want her to be proud of me.\" It felt good to receive her praise. The one time that she completed a task without anything to criticize including her responses, Rayven dropped back into her normal self and gave her a hug and some soft words of encouragement. Now thinking back on it, she blushed as she remembered how she tingled all over and most strongly in her private places. \n\nThe moon was just visible over the horizon and the last traces of dusk faded away. \"That's good enough, Dove,\" Rayven said. \"Time for bed.\"\n\n\"Yes, Mistress,\" she replied. She gave the horse a couple more strokes and then patted him on the neck. As she walked back over to the shelter, she realized how much she smelled of horses now. \"I feel so dirty,\" she thought. \"Rayven,\" she started to say to herself, but then stopped. \"Mistress probably won't be able to stand the smell of me.\" The thought bothered her. Even after only a couple of nights, she felt like she needed the comfort of Rayven holding her to go to sleep. The fear of losing that seemed to overtake her. \"I don't understand,\" she thought to herself. \"I feel like I'm going to cry.\" She tried to keep her face impassive, not wanting to show Rayven this weakness.\n\n\"In bed, my little Dove,\" Rayven said. The voice that Isana was so used to was back. While the younger woman got into her bedroll, Rayven made one last check around the camp to make sure nothing was out to attract animals. She already did her mental check that no person was anywhere close. Tonight, she felt safe enough to get a good night's sleep. She couldn't go on like that for too many days. She needed to be at full strength.\n\nSlipping into her own bedroll, she glanced over at Isana. She was on her side, looking back. Her big blue eyes glistened in the moonlight. Rayven smiled at her. \"Do you need to be held, little Dove?\" she asked.\n\n\"Yes, Mistress,\" Isana said in a little voice. \n\nMore than anytime that evening, Rayven felt the power of the words. The younger woman only had on her undergarments now, and she could see the top of her breasts pushing out from under her top. Even with the tattoos, her face was beautiful. \"Goddess, help me,\" Rayven thought, though it was a foolish prayer. She knew her goddess too well to think that she would help her to avoid giving into temptation. \"She's waiting for me to fail,\" she told herself. She pushed away memories of other times when a woman called her Mistress and there was no need to restrain herself. Smiling reassuringly, she opened up her arms. \"Come here then, Dove,\" she said softly.\n\nIsana instantly moved over into the embrace and hugged her. \"Thank you, Ray ... Mistress,\" she whispered, even as she tensed for the reprimand from her little slip up. No harsh words came however. Instead, she just felt the comforting embrace of strong arms around her.\n\n\"You're welcome, my little Dove,\" Rayven said. \n\nFortunately, for both of them, it was the end of another long day. While the closeness caused some fleeting disturbing thoughts, their exhaustion was too strong. Soon they both fell into a slumber that was uninterrupted through the night.\n\nThe next day was much like the previous one, although Rayven focused a little more on getting more distance between them and the castle. They headed off in a somewhat different direction than the day before so it was impossible for Isana to figure out their ultimate destination.\n\nTheir conversation was a continuation from the night before. Rayven did her best to upset Isana's slave persona. For the most part, she didn't have much success. Despite the different gambits she tried, the young woman managed to maintain her composure and react in a servile manner. Even when she slipped up, Isana caught herself before Rayven even had a chance to correct her, although that didn't spare her a reprimand. Each time, she dedicated herself to doing better and making Rayven proud of her.\n\nAt midday, they paused in the shade of a copse of trees for a quick lunch. As she slowly ate her dried meat and waybread, Rayven observed her young charge. When they stopped, Isana immediately went about the task of preparing the meal without her even saying anything. She carefully got Rayven's food together first and served her, making sure to find out what she wanted to drink. Only after she finished taking care of her, did Isana make anything for herself. \n\n\"Well done, little Dove. You have the makings of a fine slave in you,\" she said with a laugh.\n\n\"Thank you, Mistress. That is what I desire the most,\" Isana said with a bowed head. The angle helped hide the slight smile on her lips. \n\n\"The problem isn't with your attitude. Most of the time, you do fine with that, although you still need to work on it. It is another aspect of our story that worries me now. You speak Kantari almost like I do, like an Onjani. The Kantari raised in the Kingdom have lost the way of speaking like those from your homeland. And your Onjani is as good as mine. No one would believe that you are someone captured there,\" Rayven said. \"Your voice will betray you.\"\n\n\"Oh, you're right. I never thought of that,\" Isana replied. She thought about the visits of Kantari from deep in their homeland. Their speech always seemed harsh and more guttural. The women sounded that way too, even when they had the softest of voices. At times, she struggled to understand them. It was worse when they spoke the singsong sounding Onjani. \n\n\"You've heard them, I see,\" Rayven said. \"For the rest of the day, we will speak Onjani but you must try to speak like they do. Use an accent. Don't worry if it feels forced and exaggerated. Most Onjani will find it just fits in with their image of the Kantari savages. Try it.\"\n\nIsana thought for a few moments, and then spoke. \"Thank you for the guidance, Mistress,\" she said. Each syllable was hard and ended with a guttural stop. It sounded more like, \"Thenkk ya fur da geeedunkce, Mestrass.\" It felt so unnatural and Isana found it hard to say.\n\n\"Don't say guidance, Dove. You speak too much like an educated woman. Say teaching instead.\"\n\n\"Yes, Mistress. Thank you for the teaching,\" Isana said, still in that hard guttural accent. It sounded odd to her ears.\n\n\"Better. Now keep it up, and don't drop it,\" Rayven told her. \"Remember our lives may depend upon this.\"\n\nDespite the warning, it was difficult for Isana to get it right. She slipped up with the accent far more than with her slave persona. The afternoon was full of Rayven's sharply spoken corrections, whether it was for her word choices or losing the accent. She slowly got better as the sun went down and the shadows lengthened, but Rayven continued to worry that it wouldn't be good enough.\n\nShe also worried about potential followers. Several times, they paused so that she could look back to search for anyone behind them. While she didn't catch any sign, she knew that no matter how well she attempted to hide their trail, the best trackers might still be able to follow them. Travelling with four horses could never be completely free of traces.\n\nFor the most part, focusing on correcting Isana's disguise helped her to avoid perilous thoughts. She concentrated more on how the words were said than what was said, allowing her to ignore being addressed as Mistress. She could ignore Isana submissiveness, although that seemed to becoming second nature to her even if she occasionally still slipped up how she expressed it. \n\nIt was a warm day and Isana took advantage of it when Rayven could not because of her leather armor. She loosened the laces in her shirt to allow more airflow. Rayven couldn't help notice that the tops of her small but perfectly shaped breasts now were very visible. She studiously tried to ignore them, but there were times when Isana moved while talking to her and they rose up to show the edges of her undergarment. At those moments, even though she knew she should look away, the other side of her took over. She realized it was wrong, but being repeatedly called Mistress stirred up old habits. \n\nMost of the time, Isana didn't see it. Chatting away, she concentrated on getting the pronunciation right and trying to make it feel natural. Late in the afternoon, she finally noticed. She glanced at Rayven and found her staring. It only took a moment or two for her to realize what caught her attention. Isana felt her face blaze as Rayven continued to look, even though she knew she was caught. Slowly, she looked up into Isana's eyes. There wasn't the slightest hint of being embarrassed. \n\nFor the first time, Isana felt the full power of her protector's personality. The calm strength in her was now amplified by her recognition of her right to be in charge. All her life, Isana was the one who ordered others around. Now she trembled inside with the realization that she didn't just accept Rayven's position, she wanted it. Her face burned an even brighter shade of red as she felt ashamed by the thought. \"I'm a princess,\" she told herself. \"Why is she affecting me like this?\" \n\nShe looked down, anxious to avoid seeing Rayven's eyes. They were part of the power that emanated from her. It was if they could see into her soul, and know what her darkest thoughts were. Even as she looked away, she caught a slight amused smile on her face that seemed to confirm how insightful Rayven was. ",
        "\"Oh gods,\" Isana thought as she felt excitement run through her again. \"I'm getting wet,\" she thought. She tried to stop it, but it was inexorable. It was more than the awareness of Rayven as a lover of women. It was that she was in charge. \"I'd do whatever she told me,\" she thought. The acceptance washed over her in a powerful wave, and she swallowed the little moan that wanted to burst forth. \"I wish she would command me,\" she suddenly realized.\n\nAfter that, her shyness began to fade away. Despite the casual interest Rayven showed, she also took no steps to exploit her position. Isana felt a craving that slowly built. The longer it wasn't fulfilled, the more she felt it. She began to do little things to try to entice her. Focusing on her posture as they rode, she arched her back a little more to thrust her breasts out. As the afternoon sun got hotter, she complained about the heat and unlaced her top a little more to display her cleavage. Yet other than an occasional glance, it seemed to have no impact. She could feel Rayven's appreciation for her body, but none of the desire she hoped to inspire. \n\nRayven felt fortunate that her training allowed her to ignore distractions that interfered with what she needed to do, although it was becoming increasingly challenging. Beyond the teasing, Isana seemed very comfortable with her new role. Her responses this afternoon were flawless, at least in acting the part of a slave. Her flirtations started it sliding into something that was hard for Rayven to avoid a visceral reaction. It took all of willpower to stay true to her training and continue to guide them safely through the wilderness. Still, she said nothing. Being in control wasn't just an image for her; it was part of who she was.\n\nEvery time that she checked for pursuers, she found nothing. They were getting farther and farther away from the castle. Each league that they traveled increased the chances that the Duke's forces wouldn't find them. \"That's a good thing,\" she told Isana as she came from climbing a tall tree. \"We are coming to an area with more people. We won't be able to avoid them.\" She mounted her horse and they started moving again. \"In fact, there is a small village that we will pass through midday tomorrow. I would avoid it, but it's a river crossing and the other ways across the Guamish are several days to either side. In any case, those have towns by them as well, and much larger.\" Pausing for a second, she wet her lips and sighed. \"It's a risk, but it can't be helped.\"\n\n\"I understand, Mistress, you know best,\" Isana said in heavily accented and slightly broken Onjani. \"I am yours.\" She looked at the moistened lips and felt a little twinge. \"What would it be like to have those lips on mine,\" she wondered. Without realizing it, she mirrored the action and licked her own.\n\nRayven, however, caught it. Once again, she felt the urge to exercise her power over the other woman and fought it as best she could. Turning her attention to the path, she focused on it and picking their way along a route that would leave the least trace of their passing. \n\nShe kept them going late, waiting until there was virtually no dusk left. Finally, they stopped and they set up a simple camp and ate from their stores of travel food. \n\nThe long day in the saddle took its toll on Isana. She really began to feel it after eating. There was a war between how her body ached and how tired she was. Part of her wanted to ask for another massage. With the desire growing inside her, the idea of Rayven's hands on her again was appealing. \"Perhaps she would see what I want,\" she thought. At the same time, she wasn't sure that she could stay awake through a good massage. Already, her eyelids were heavy.\n\nThat much at least was easy for Rayven to see. She reached out and ran her fingers through Isana's hair. \"My poor little Dove,\" she said softly. \"You're very tired, aren't you.\"\n\nThe gentle caress decided the battle. She gave a little sigh and leaned against it, feeling the weariness overwhelm her. \"Yes, Mistress, I am,\" she said softly. She felt the powerful fingers stroking her again and her eyes fluttered closed. Her eyes didn't open until she felt Rayven gently pushing her over to the waiting bedroll; then her wide blue eyes blinked open to look up at the beautiful woman pulling the covers up around her. \"Mistress?\" she whispered.\n\n\"Yes, my little Dove?\" Rayven said as she began to stroke her head again.\n\n\"Ohhhh. That's nice,\" Isana muttered. \"Mistress, would you hold me tonight?\" She liked the tender way Rayven smiled at her. It thrilled her in a way completely different from the sexual feelings from earlier.\n\n\"I will, all night,\" Rayven promised her. She slipped under the bedroll and felt Isana turn on her side so that they could spoon. Moving close, she put her arm over the young woman and pulled her close. Isana wiggled, trying to find the most comfortable spot. The feeling of the bigger woman holding her made her feel safe. Now, she could sleep without any worries.\n\n\"Yes please, all night,\" she murmured. \"Thank you.\" She wiggled again, pressing back. As she drifted off, she felt two points poking into her back. Her lips curled up as she realized it was Rayven's nipples, hard and erect. \"Mmmm,\" she thought just before she fell asleep.\n\nOnce again, Rayven found sleep much harder to find. The needs of her body were powerful and resisting them was not normal for her. In her long life, she felt free to worship Ashura whenever the opportunity presented itself. Now one of the most beautiful women she ever met was in her arms after having teased her all day. Even though she was hers for the taking, the duty to watch over her and guard her still was paramount. As tempting as Isana was, Rayven took her responsibilities as custodian very seriously. \n\nWith a deep sigh, she finally mastered the temptations and focused on going to sleep. It still took a while, but eventually she fell into a restless sleep. Waking from it several times during the night, she managed to get back to sleep each time until about an hour before dawn. She spent that last hour just appreciating the feeling of the sleeping woman beside her. Her thoughts weren't full of desire but instead she enjoyed the warmth and affection growing between them.\n\nIt had been far longer since she felt that for another person.\n\nReaching out to stroke the blonde hair, she almost stopped as she felt Isana stir. Old tendencies were difficult to break, however, and her dominant side came to the fore. She wanted to touch the other woman, and therefore she would. Her fingers slid through the short hair, grazing against her scalp, and then down her neck. \n\n\"Mmmmm,\" Isana sighed as she came more fully awake. She waited for another caress but it didn't come. Looking over her shoulder, she saw Rayven looking at her. Her dark eyes were smoldering, almost as if there was a golden flame in them. Never before had she seen such raw lust. Knowing that Rayven wanted her stirred up butterflies in her stomach, but at the same time, it pleased her to know her own desires weren't unrequited. Still, she was a virgin and taking the next step was daunting. She hesitated and in that moment, the golden glow began to fade away. The caring but somewhat withdrawn Rayven was back.\n\n\"Good morning, Dove,\" she said as she pulled back the bedroll and began to get up. \"Did you sleep well?\"\n\n\"Very well, Mistress,\" Isana replied, remembering to use her accented Onjani. \"Thank you for holding me all night.\"\n\n\"I promised, didn't I?\" she replied. \"I will always try to keep my promises to you, my little Dove.\"\n\nFor a second, Isana indulged in watching the other woman get ready. She slept dressed the same, with just her undergarments. Taking in the strong body, a little pout appeared on her lips as she watched her pull up her trousers. Her big breasts moved under her top, and Isana wondered how it would feel to touch them. Hidden under the bedroll, she let her fingers stroke her own breasts. \"Different, I'm sure, and exciting!\" she thought to herself. Her fingers just touched a nipple when Rayven looked over at her.\n\n\"No dawdling in bed! We need to be on the trail as soon as we can, Dove,\" she said. Isana nodded and quickly got up, facing away from her in hopes that she wouldn't see the sudden blush and guess the reason. Grabbing her own clothes, she quickly dressed. When she finished, she looked over her shoulder but Rayven was getting the horses ready to go.\n\n\"Break down the rest of camp, Dove,\" she said, focused on her tasks.\n\n\"Yes, Mistress,\" Isana replied. As she worked, she tried to dismiss the disappointment that it seemed so easy for Rayven to turn off her desire. Her own lingered and the dampness between her legs didn't go away. The more she tried not to think about it, the more impossible it was. Even her clothes seemed to be conspiring against her. The brush of her top against her breasts was more noticeable than usual, and every time she crouched down to pick something up, she felt a tiny stab of excitement. By when they were ready to leave, she was almost panting. It didn't help that she had a sneaking suspicion that Rayven was aware of her plight. More than that, it seemed like she enjoyed it.\n\nAt last, they climbed up onto their horses and began to make their way in the direction of where the small village was. The movement of the horse between her legs made things worse. It wasn't the first time she felt that particular stimulation but, as her father didn't allow her to ride alone, she never gave into it. The temptation now was hard to resist.\n\n\"What would Mistress do if I did?\" she wondered. A fantasy took form in her mind of her writhing on against her horse as Rayven looked on. Her face burnt red as she thought about how wanton it would be, and even more so because she watched. For a moment, she pressed down hard against her saddle. She sucked in a breath between her teeth. \"It would excite her too,\" she thought. The notion that she could turn on Rayven was almost as thrilling as the actual physical contact. \n\n\"I can't,\" she told herself just before the urge became irresistible. \"This isn't a pleasure trip. We're escaping a terrible fate for me. She's risking her life.\" With a sigh, she lifted the weight of her body and hoped that the tremors running through her body would dissipate. The urge to start again remained, but she stayed strong and didn't tempt herself another time.\n\nIn front of her, Rayven smiled. Isana was quite right. She knew the whole time what was going on, and it did excite her. \"Oh, it must be so hard for her to exercise discipline,\" she thought to herself. \"She hasn't had too much in her life.\" Still, it was the right choice. \"Today is the riskiest one so far.\"\n\nIt took several hours to get to the village. Along the way, they practiced speaking in tribal Kantari until it was just as automatic as the accented Onjani was to Isana. Just before they got there, Rayven dismounted and got into her saddlebags. She dug deep into one, search for something long buried. Finally, she felt it and pulled it out. It was a thick collar with a big buckle. She looked up at Isana, still on her horse.\n\n\"We need to mark you as a slave, Dove. There are more extreme ways of doing that, but hopefully this will be enough,\" she said.\n\nIsana dismounted. As she walked towards Rayven, she eyed the collar. It had a natural curl in it and the leather was soft on the inside with a darkness that indicated someone had worn this before her. Her eyes met Rayven's and she shuddered. The golden glow was back with its accompanying lust. She couldn't suppress the tiny flare of jealousy towards the woman who wore it before her. \"It wasn't a disguise then,\" she realized. \"She truly belonged to Mistress.\"\n\nThe taller woman looked at Dove. She could read her very well by now. \"She probably doesn't even know how hard her nipples are right now,\" Rayven thought to herself. The lust within her was rising, but it was impossible. She couldn't give into it. Even putting much meaning into the collaring was too much. It would not be like the last time.\n\nHer fingers were quick. The collar went around Isana's neck and she buckled it securely. It was neither too tight nor too loose, but instead would ride there without chafing. She would check it that night to make sure. Looking Isana in the eyes, she saw the desire there, but Rayven didn't dare unleash it.\n\n\"How does it feel, Dove?\" she asked.\n\nThe mix of emotions almost overwhelmed Isana. She tried to focus so she could answer. Finally, she looked up at her. \"Protected, Mistress. I feel protected,\" she softly replied.\n\n\"And so you are, my little Dove,\" Rayven answered back just as softly. The urge to kiss Isana swelled up in her. Not a passionate kiss, but instead she wanted to kiss her to let her know that she was safe and secure. With every bit of her willpower, she suppressed the urge. Her duty came first. \"I won't let anyone harm you, Dove. Stick by me in the town, talk as little as you can, and then only in Kantari. I'll deal with anyone who bothers us,\" she said ominously.\n\nWith that, they got back on their horses and continued their way into the village. Isana kept fingering her collar until finally Rayven told her to stop. \"You need to appear used to it,\" she told her firmly. Isana's training over the last couple of days took over. Obeying her Mistress was now second nature to her. \n\nOssik wasn't much of a village. Perhaps a hundred people lived in it, but it had a narrow crossing over the river that led to a steady traffic of people coming through town. It was too far out of the way to become a well-used trade route. Those who followed it were often on their way to the Kantari homelands, and there were not many of those.\n\nFor Isana, it was a revelation. While she had traveled with her father, it was always to the grander towns and cities of his realm. If they had slums, she never saw them. The poverty of the villagers was something she hadn't encountered before. Fortunately, her reaction worked well with her disguise. Her wide eyes could just as easily been because a village this large was a new experience for a savage more used to small camps of 10 to 20 people.\n\nIt was not the first time that Rayven passed through the village. She often preferred to take the out of the way routes. It wasn't so often that anyone should remember her in particular. She didn't go out of her way to draw attention. \n\nThe first order of business was to go to the market. Holding the horses, Isana followed her as she moved from stall to stall. She mostly looked at the fresh vegetables and fruits. They wouldn't last long, but they would help make the journey more pleasant for a few days. Isana watched her as she haggled with each stall vendor. It was another new thing for her. Rarely did she ever buy anything, and she just paid the price named. It would be common to argue over the price. Yet, she admired the skillful way that Rayven bargained the seller's price down. \n\n\"How much might I have saved if I tried to bargain?\" she wondered. At the same time, she knew that it wouldn't have worked. As the princess, if she asked for a lower price, the merchant had no option but to give it to her. An ordinary person couldn't argue with royalty. \"I hope I get a chance to haggle before this is over,\" she thought.\n\nRayven had a knack of driving the price just below where the seller wanted to go, but not so far as to make him angry. It was a just price, but not as much as he wanted. Her willingness to walk away made the difference a couple of times. Isana admired her effortless shrug as she regretfully turned away, and how quickly the seller called her back. Once again, she felt lucky to be with someone so experienced and capable.\n\nOnce they done with buying food, they headed to the tavern. Rayven had no difficulty in remembering where that was. She guided them to the stable beside the tavern with Isana leading the horses, as a good servant would do. There were several young boys there, hanging around outside. They ranged in ages, with Isana guessing the oldest were around 13 years old. After dismounting, Rayven crooked her finger at one of the boys who seemed a year or two younger than that. He had long blonde hair that kept falling into his eyes moments after he brushed it away.\n\n\"Boy, I suppose you are here to offer your services watching our horses,\" Rayven said. Isana looked at her. She sounded gruffer than usual, and with a hint of an accent that might make someone think she was from the distant northern mountains.\n\n\"Yes, Mestra,\" he said, looking up at her.\n\n\"How much?\" she asked, as she took stock of him. The other boys inched a little closer, hoping that he might not pass her muster.\n\nHis eyes were keen as he took stock of the woman in front of her. She was clearly an experienced traveler who understood that leaving horses and possessions in a tavern stable was a good way to lose both of them. At the same time, she had a good idea of the value of the service. \"How long are you staying, Mestra?\" he asked.\n\n\"We are just stopping to eat, so perhaps an hour and a half. We want to be on our way. It's days to Dynvard, and I don't want to give up on daylight,\" Rayven replied. It was a weak diversion, but she hoped that if anyone was looking for them, mentioning the false destination of the port on the southern edge of Onjani lands might help misdirect them.\n\n\"For you, Mestra, a single silver piece,\" he said and gave her what he hoped to be a winning smile. He held out his hand confidently\n\nIt didn't seem to impress Rayven. She looked at him with hard eyes. \"I'll give you ten coppers now, and then a silver piece when we come out. But if I see the slightest hint that you have gone through our things in the hope of finding a few valuable items that I might not notice, then I'll take back the coppers and treat you like I treated the last young lad who tried that.\" As quick as the strike of a viper, her dagger was in her hand, and she grabbed the outstretched hand. Her dagger flashed, and the cold metal of the back of the blade slid harmlessly across his wrist. \"You won't like it if I use the other side.\"\n\nThe boy struggled but could not pull his hand from her grip. \"Please, Mestra! I won't touch your things. I'll just watch.\" The fear was evident on his face.\n\nHer blade flashed again and was back in its sheath. \"Do we have a deal, my young friend,\" she said in a more pleasant voice, though she didn't let go of his hand.\n\nAlthough scared, the boy was quick. He expected at best to get 10 coppers. A silver was twice that. It was rare that he made that much money in a day. There were too many other boys and too few travelers were willing to pay even 10 coppers. He nodded. \"Yes, Mestra,\" he said, and was rewarded by getting his hand back.\n\n\"Done,\" Rayven said as she fished the initial payment out of a small coin purse that she kept inside her armor. She looked him in the eyes as she counted out the coins. \"I'll keep my word if you don't keep yours, boy.\"\n\nHer eyes were dark and hard. The boy knew without any doubt that she was serious. \"I understand. No one will touch your horses or your belongings.\" His hand moved and he had out a small dagger of his own. \"I know how to defend myself,\" he said in the bravest voice he could.\n\n\"Good for you,\" Rayven said, and gave him an approving nod. Looking at Isana, she spoke in Kantari. \"Dove, take the horses in and tie them off. I'll wait here.\"\n\nThe boy followed her inside, looking at her with a bit of curiosity. The Kantari conquered the kingdom many years ago, but everyone knew that not all the Kantari wanted to leave their homelands. Many of them still lived there, warring amongst themselves and with their neighbors. It was rare, but Kantari slaves caught in those incessant conflicts weren't unknown in the Kingdom. This one was pretty, or would be if she wasn't quite so dirty and smelling of travel. Looking over his shoulder, he could see the other woman watching him. Her look remained as sharp as the dagger she pulled on him. He swallowed and tried to ignore just how scary she was.",
        "Isana tied up the horses and checked all the saddlebags to make sure they were secure. Ignoring the boy, she came back outside and nodded to Rayven. As they started walking to tavern door, she leaned over and whispered in her accented Kantari. \"Mistress, did you really cut the hand off a boy for trying to steal from you?\" she asked.\n\nWhen Rayven looked at her, there was look that she had never seen before. It was cold and Isana felt a trace of the fear that the boy felt. \"I turned in a boy who did steal from me, and the owner of the tavern took it right off. His livelihood depended upon people stopping there, and he couldn't afford to get a reputation for thievery. I give this warning at every tavern since. I haven't had to carry it out, but I would. Never make a threat without being willing to follow through, little Dove,\" she said as she pulled the door open.\n\nThe inside of the tavern was a lot like the village. It wasn't big, with not a lot of people, and it was dirty. Rayven looked around and found a table up against the wall. Without a glance at Isana, she walked to it and sat down. It had a good view of the door as well as the opening that led to where she assumed the kitchen was. She carefully arranged her sword so that it would be easy to get to if necessary.\n\nShe glanced at Isana. \"Go get me an ale and ask what they have to eat. Get yourself some weak beer, Dove,\" she said, speaking the same way she did with the boys. She slipped Isana a few coins. \"Don't think I won't be watching to make sure I get all of my change,\" she added. \n\nAlthough she was very casual about it, she slowly surveyed the room as Isana made her way over to the bar. There were several groups of men spread about the place, both Kantari and Onjani. A couple were fully engaged in conversation amongst themselves and paid no attention to anything else. A couple more were more aware of what was going on in the room. She noticed a man nudging another as Isana walked past. The lust on their faces was easy to see, and as she passed, they continued to watch her ass. Her clothes weren't tight, but it was still easy to see that she had an attractive shape. Their chuckles carried over to Rayven though she gave no sign of it.\n\nHer scrutiny of the tavern continued, although she didn't completely stop watching Isana. In a spot almost opposite her own, there was a man sitting alone. He was another Onjani. His outfit gave him away as not being from the village. There was some similarity to her own, and she was fairly sure that he was another ranger. The question was whether he was a spy for the duke or just some random stranger. He was at least skilled enough to have picked a spot that would give him warning in case of trouble.\n\nWith two tankards in her hand, Isana returned to their table. \"Here, my Mistress,\" she said as she placed one down in front of Rayven. She placed the remaining coins beside it before taking her place next to her. \"The serving woman said they have a beef stew and some roast venison with vegetables to eat. What may I get you?\" Her practice was paying off. Her tribal Kantari flowed off her tongue naturally and the submissive tone was just as automatic.\n\n\"Get us both some of the stew. Is this enough coin?\" Rayven asked.\n\nThe young woman nodded. \"It should be.\" She picked up the coins and made her way back to the bar. Rayven looked on in approval as she noticed Isana taking a path that was further away from the group of men ogling her. It didn't seem to make a difference in how they acted. Their comments were louder, as if they wanted to make sure that Isana could still hear them.\n\nRayven tried to ignore them and instead surreptitiously observed the other ranger. It wasn't hard to see that he was doing the same to her. \"Hopefully, I'm harder to read,\" she thought as she looked over at the loud group of men making catcalls as Isana came back with the bowls of stew. She did it in a way that still allowed her to observe him.\n\n\"Hmmm,\" she thought. \"He wears no badges or anything that betrays his allegiance, but he clearly is someone's man. The sooner we are away from here the better.\"\n\n\"Here you are, Mistress,\" Isana said as she placed the bowl in front of her. Reaching out, Rayven pulled the bowl a little closer and began to eat from it. Taking her time, she effectively hid any concern on her part. For a moment, Isana stared at her. Even in her submissive role, courtesy was something Rayven always gave her. Now it was as if being served didn't warrant acknowledgement. \"Don't be stupid, Dove,\" she told herself after a few moments. \"It's the disguise.\" \n\nShe tasted the beef stew. It was bland and mushy. She forced herself to keep eating it as if it wasn't the worst tasting thing she ever ate. \"If this was served in the palace, she thought, \"the cook would be flogged.\" She felt her gorge begin to rise and forced it back down. Nothing would betray her more than throwing up her food. Worse than that, she would disappoint Rayven. More than anything, focusing on that helped her to keep going. Having her approval was already extremely important to Isana. \n\nSipping on the beer helped. She rarely drank beer but this wasn't terrible. It was weak but it quenched her thirst and allowed her to get a few difficult bites down. They spoke very little, and it was clear they wanted to be left alone. \n\nAs they were getting close to finishing, the serving woman came over. Her eyes flicked over Isana but dismissed her of any importance. She looked at Rayven. \"Would you be staying the night?\" she asked.\n\n\"No, we'll be moving on when we finish,\" Rayven replied. From behind the woman, she saw the other ranger lean forward as if straining to hear the conversation. It didn't matter. Rayven had no doubt that once coins passed hands, the woman would tell him everything.\n\n\"We have baths, if you want to stop long enough to wash the road off of you.\"\n\nRayven sighed. There was nothing she would like more than to soak in a hot tub, but it was out of the question. They needed to get a good distance between them and the village before nightfall. In fact, they would keep going as late as they could. More than that, however, was the vulnerability that came with undressing. She couldn't allow that.\n\n\"As tempting as that is, we must be off shortly,\" she replied. The woman nodded at her. \"I'll have some of that beer, however.\" When the woman turned to go back to the bar, Rayven handed Isana a few more coins. \"Go get it for me.\"\n\nSome more people were in the tavern now and the paths to get to the bar were few. Isana had no choice but to go right by the bawdy group of men. As she passed them, she heard them talking about what they would like to do with her. In her role, she was supposed to be unfamiliar with Onjani. It was impossible, however, not to understand what they were saying. Despite her best efforts, the automatic response was unstoppable; her cheeks flushed and she pursed her lips tightly. Gripping the coins tightly in her balled up fist, she kept walking to the bar.\n\nThe serving woman looked at her sympathetically. \"It's a rough life for a slave as pretty as you, dearie,\" she said. \"At least, your Mistress treats you well.\"\n\nIsana looked at her, giving the impression that she was trying to understand. Finally, she responded in broken Kantari. \"Yes. Maybe more bad. Mistress kind.\"\n\n\"That's it; see the bright side of things. That's what I always say,\" the woman said as she looked around the dingy tavern. \"It's not much, but it's mine.\" She gave Isana a smile and placed the mug of beer on the bar. After handing her the coins, she turned and began to make her way back.\n\nOne of the men had moved slightly, making it even more difficult to get through. Trying to avoid spilling, she carefully stepped around him. It put her uncomfortably close to another one of them. As she passed by, she felt a hand grope her bottom and squeeze until it was a painful pinch. Without thinking, she turned and forcefully slapped his hand away. A splash of beer sloshed out of the mug and landed on his boot. She began to swear at him, drawing upon a lifetime of listening to her father's men when they forgot she was around. Even in her anger, she managed to keep her accent.\n\nHis face darkened with anger. \"You Kantari bitch,\" he shouted. His hand drew back and he started to slap her in the face, but a firm hand caught his wrist before he could make contact. His arm stopped as if hitting a wall.\n\nRayven looked down at him with a pleasant expression, betraying no sign of the seething anger inside her. \"If you please, I apologize for my slave, but do not strike my property.\" Her hand squeezed a bit more; hard enough that his face betrayed the pain, and then let go. Her other hand rested on the pommel of her sword. \"If she needs discipline, I will do it.\"\n\nLooking over at Isana, her hand flashed and slapped her across her cheek. The sound rang through the tavern and Isana's head jerked with the blow. \"What have I told you? You're a slave now. If you have a complaint, you come to me. You're not a free woman of the Kantari now,\" she coldly said in Kantari. The white mark on Isana's face slowly turned a bright red. \"Please apologize to this man,\" she commanded.\n\nThe shock of being struck was far worse than the blow itself. Rayven cupped her hand in a way that softened the blow while making it sound harder. Still, Isana felt the sting of tears in her eyes. The look Rayven gave her was completely without any softness or warmth. There was only disappointment and anger. It might be a disguise, but even she couldn't see through it.\n\n\"I was wrong, Sir. Please accept my apology for hitting your hand,\" she replied in her accented allegedly native tongue.\n\n\"Shall I translate for you?\" Rayven looked at him.\n\n\"Nah, we had to learn the blondies' fuckin' language,\" he said with a sneer. \"Not no more, eh?\" He looked Isana up and down. \"How about you lend her to me for an hour and we will call it even?\" he asked Rayven.\n\nNow her cold glare swiveled to him. Her hand was back on the pommel of her sword. \"I think not, Sirrah,\" she said. His back stiffened slightly at the assumption that he was her inferior. \"I don't lend my slave to anyone.\" She gave him a slight smile. \"In any case, I'm training her to worship Ashara and I'd forfend anything that might lessen that. You understand, I'm sure\" she said. \"Come, Sirrah. Let me buy you and your table a round of ale, and my slave will clean your boot.\" \n\nThe anger was still plain on his face, but when he looked into her eyes, it melted away. The smile on her lips didn't touch them. They were as hard as steel. His eyes traveled up and down her. Unlike with Isana, he paid no attention to any of her feminine features. Instead, he noticed the well-worn but meticulously maintained armor, the practiced way her hand rested on her sword, and the way she balanced on her feet that gave away someone with years of experience as a warrior. There was almost an eagerness to fight in her, as if a coiled spring was waiting for release. Against all that, he wilted.\n\n\"That will do,\" he sullenly said, studiously avoiding eye contact with anyone.\n\n\"Madam, if you would bring my friends here a round of your fine ale,\" Rayven said without shifting her own eyes off him. She stayed like that as Isana dropped to her knees without being told and used her sleeve to mop off all the beer from the man's boot. The smell of him was overwhelming and she thought that he could use the bath much more than the two of them. Only when Isana was standing beside her again, and the men had mugs in front of them did Rayven allow her attention to shift.\n\nThroughout the confrontation, she remained aware of the unknown other ranger. While they were eating, he continued to pay them furtive attention, but now it seemed that he no longer seemed to care. As she strode over to the bar to pay for the drinks, she smiled in a tightlipped way. \"Good. You'd never imagine that the princess' protector would slap her across the face and order her to wipe a drunk's boot. Your lack of imagination is our best safeguard,\" she thought.\n\nIsana trailed in her wake, wanting to stay within her protective bubble. The spot Rayven hit still stung and it was hard not to let tears come. In her whole life, no one ever struck her, not even her father. Her lifeline was to cling to the role and take it as a slave would. \"It's her right to discipline me,\" she told herself over and over again. \"My mistake put us in danger.\"\n\nOnce done, they moved towards the exit. The other ranger stood at the same time and came towards them. Rayven pivoted and once again rested her hand on her sword, although her face and eyes were far more friendly than with the drunks. They were in the shadows as he approached.\n\n\"Greetings. If you don't mind, I noticed that you haven't marked your pretty little slave yet. Does that mean you might be thinking of selling her?\" he asked. \"I'd be interested, if so.\"\n\n\"Greetings Sir,\" she said, automatically giving him the respect that she denied the drunk. \"At some point yes, but I haven't tired of her yet. You're right, though, better not to make a permanent mark until she has a permanent owner,\" Rayven said. She felt Isana shrinking behind her to hide. \"As you saw, she still is adjusting to being owned. Capturing her in battle is easier than fully housebreaking a slave, don't you think?\"\n\nHe laughed. \"Indeed. Well, she looks spirited so I wish you full enjoyment of her,\" he said. \"Though be careful not to find your throat slit. I know how vicious they can be.\"\n\n\"No fear there. She tried that once. Being caned and then having to ride was enough to teach her the futility of trying to surprise me,\" Rayven said, pausing to look over her shoulder at Isana. \"She was much more pliant after that.\"\n\n\"Sounds like you have a made a good start on her training. Are you sure you wouldn't consider selling her? I'd love to ride that savage,\" he said. Lust crept into his voice.\n\n\"That's why my answer is no. I'm enjoying breaking her in far too much to stop now,\" Rayven said. \"My pardon, but we must return to the road. My next job awaits and Dynvard will not come to us. Fare thee well, Sir.\"\n\n\"And the same to you, Lady,\" the ranger said before returning to his table.\n\nAs Rayven shut the door behind her, she sighed in deep relief. She sensed curiosity and a trace of regret about them, but not suspicion. \"Probably because he doesn't have news yet of the princess' flight,\" she thought. \"We need to go as far as we can today,\" she said to Isana in Kantari, being careful to maintain the illusion of impatient travelers eager to reach their destination.\n\n\"Yes Mistress,\" Isana replied as they neared the stable.\n\n\"Boy? Are you there?\" Rayven called out. \n\nThe young lad instantly rose up from a pile of hay in the shadows. His eyes were wide as he looked at Rayven; clearly, the memory of her grabbing him was still vivid. \"Here, Mestra. No one's disturbed your things,\" he said.\n\nRayven started to smile and then noticed a red mark under his eye. She came close and looked down at him, putting her hand on his chin and lifting it. It was the beginnings of a black eye, absent before they went in to the tavern. \"What happened here?\" she asked softly.\n\n\"Just doing my job,\" he replied and twisted away from her.\n\n\"I see that. Some other boy thought that perhaps he could take and you would pay, eh?\" she said with a scowl.\n\nHis scowl was almost a perfect match, although it was somewhat more vicious. \"He won't make that mistake again,\" he snarled. \"Broke his arm, I did.\"\n\n\"Good for you, lad. Once you let someone take advantage of you, they'll do it again and again. Here you go,\" she said holding out two silver coins.\n\nHe looked at them with eager eyes, but he held back. \"Mestra, we agreed on one silver,\" he said.\n\nIsana smiled at the cute young boy as he tried to do the noble thing. She could tell how much a second silver would mean to him. She looked up at her Mistress and felt her breath quicken a little. \"She isn't just strong and skilled. It's matched with kindness and mercy too,\" she thought. \"And so beautiful,\" she added.\n\n\"Yes, but nothing stops a customer from giving a token for work well done,\" she said with a smile. \"Come, take it. We must be off,\" Rayven said.\n\n\"Then thank you, Mestra,\" he said as he palmed the coins and slipped them into a pouch hidden under his shirt.\n\nThe two women went over to the horses and untied them. While pleased, it didn't stop Rayven from looking over all the saddlebags just to be sure. They all looked undisturbed and she nodded over at the boy. \"Well done, boy,\" she said, still smiling. \"I wish you luck.\"\n\nAfter leading the horses outside, they mounted and left the boy and the village behind. While still in the village, they took a leisurely pace but as soon as they were over the bridge, they drove the horses harder as they went down the road. At first, there were a few other travelers on the road, but they soon left them behind. \n\nThe land changed after crossing the river. Their travels that morning were through scrub brush. Rather than short sparse trees growing up out of the dry land, they now rode through dense patches of forest. The tan and dusty landscape was exchanged for a more lush and green one. The further they got from the village, the denser the thickets seemed to spring up along the side of the road. \n\nAs they made a turn around a corner in the road, Rayven looked back over her shoulder and then strained to see ahead of her. \"No one on either side of us, Dove. We'll leave the road here. Let's dismount and try and leave no sign,\" she said. They both got off their horses and led them to a small break in the thickets. Once they were through, she went back and checked to see if they left any sign of their passage. Picking off a couple of tufts of horsehair off the branches on either side of the opening, she carefully erased the hoof prints that betrayed where they left the road. \n\nOnce satisfied, Rayven came over to where Isana was holding the reins of their horses. A little bit of light filtered down and she could see the red mark on her cheek, bearing testimony to the blow earlier. Stopping in front of her, she reached out and softly stroked the spot.\n\n\"I am sorry for this, little Dove,\" she said. \n\nIsana pressed her cheek against the gentle fingers and looked up at Rayven. \"I let you down and you did what you had to do,\" she whispered. Her eyes bored into the older woman's. \"I am yours, Mistress, to do what you will.\" Her heart beat faster as she said the words, hearing the truth in them. \"Does she hear that too,\" she wondered.\n\nRayven continued to stroke the spot for another few moments as she looked back. Unlike Isana, her eyes were unreadable. They were dark and didn't express much, except for a dim golden flicker deep in them. Finally, she bent her head and lightly brushed her lips against the tender spot on Isana's cheek. She heard the young woman let out a tremulous breath that seemed to come from deep in her body. \n\nWith a regretful sigh of her own, she turned away and walked over to her horse. \"Alright, we must go. We need to go farther than anyone might guess today,\" she said. When they were both mounted, she led the way, picking a path through the forest that went in the general direction she wanted. \n\nA couple of hours later, they broke out of the forest and into rolling plains. Before, the pace was slow as they made their way through the dense woodlands. Now and after they switched horses, they were able to ride faster. Rayven knew they would leave a trail to follow here, but distance was more important than stealth.\n\nIn the forest, they rode single file. With an extra horse between them, it made it difficult to talk. Here, they could ride side by side. Isana looked over at Rayven. It was hard not to openly admire her. She rode with strength and confidence, as she seemed to do everything. \"I haven't seen a moment yet when she wasn't sure what to do,\" she thought to herself. Her eyes rested for a moment on the swell of her breasts. Although it was only slight, Isana remembered how they looked when the armor was off. "
    ],
    "authorname": "-Ripley-",
    "tags": [
        "lesbian dominance",
        "dominance",
        "submission",
        "lesbian submission",
        "lesbian age difference",
        "fantasy novella",
        "lesbian sex",
        "goddess",
        "princess",
        "warrioress"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/beloved-of-ashura-learning-to-fly"
}