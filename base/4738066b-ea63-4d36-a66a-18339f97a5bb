{
    "title": "Brad's Road Trip Ch. 20",
    "pages": [
        "Here it is... the penultimate chapter. I wrote this one and the next/final one together, but due to mammothocity, broke it into two. As always, thanks to my editor, AnInsatiableReader, for helping me clean it up. When I send it to her, it looks nothing like the finished product you're about to read. Also thanks to samuraisan, who gave this and the next chapter a beta read.\n\n*****\n\nDay 18<br>Sunday, June 29, 2007<br>Grand Junction, CO to Pocatello, ID\n\nI woke up in unfamiliar surroundings. The sun was up, but just barely. There were strange sounds around me, and even though I listened carefully for a few moments, I couldn't make them out. I realized I was lying on a blanket in the grass, and I was actually pretty cold. Where the hell was I?\n\nI sat up and looked around, and the memories of just a few hours ago rushed back to me. Of course - I was in the Marine Corps recruiting tent, lying on a blanket I'd bought the night before. The sounds around me must have been the other nearby vendors, mostly food trucks, getting ready for the last day of the festival.\n\nNicole was lying right next to me, and I looked down at her - no, she wasn't. \n\nNicole was gone.\n\nI looked around, but she was nowhere in the tent. I scrambled outside and searched around frantically. The sun was just above the horizon to my left, giving me more than enough light to tell she was nowhere in sight. I was still shirtless, and the cold morning air was covering my upper body with goosebumps and making my nipples hard enough to cut glass. I retreated into the tent and found my T-shirt lying in a heap on top of the blanket, where I'd been using it as a pillow.\n\nI had no idea how long she'd been gone, but she'd taken everything with her except the blanket. I was generally a pretty sound sleeper, and she'd obviously been able to get up, gather her things and slip away without waking me. \n\nHow could she do this? She told me she felt as strongly about me as I did about her, so how could she just vanish in the middle of the night, leaving nothing behind?\n\nWell, nothing was the wrong word - when I picked up the blanket, I noticed a piece of fabric tucked underneath, on the side she'd been sleeping on. It was a yellow thong, and lifting it to my nose, I could definitely smell the traces of her arousal. She'd left me no way to contact her, but she'd just ensured I'd never forget her. \n\nNot that there was any chance of that happening anyway.\n\nI wanted to throw up. I'd never see her again, and the thought made me sick to my stomach. \n\nI stuffed the thong in my pocket and collapsed onto one of the recruiting tables in a dazed funk, not knowing what to do, where to go or who to talk to. I might have sat there all day if not for Gunny Granger's arrival.\n\n\"Sgt. Carver,\" he said, setting a big box of what I guessed were brochures down next to me. His utilities were freshly starched and his boots were shiny enough that he could have checked his clean-shaven face in the reflection. He had a slight scowl on his face that made it clear that he could kill me - and anyone else without a Bazooka in the general area - right now if it came to that. I didn't take it personal - I'd seen the same look on the face of pretty much every Gunnery Sergeant I'd ever come across, as if it was standard issue. \"To what do I owe the pleasure?\"\n\n\"Oh, um,\" I said. I didn't want to lie, nor did I want to depress myself. \"Had a pretty wild night at the show, and I couldn't make it back to the campsite. Figured you wouldn't mind me camping out on your grass.\"\n\n\"My grass is your grass,\" he said with a laugh. \"You look a little rough, though. I don't miss the hangover days.\"\n\nI'd had all of two beers after 6 p.m. yesterday, so it wasn't a hangover. I didn't tell him that.\n\n\"Yeah,\" I said. \"Listen, thanks for your hospitality this week. I'm on my way out of town in a little while here. It was good meeting you and your crew.\"\n\nWe shook hands, and I stumbled away from the tent. I pulled out my phone to check the time, and realized Kelly had probably texted me several times last night. Alas, I wouldn't find out until I got to back to the campsite, because my phone was out of juice. My head was on a swivel for the entire walk back to the campground - I knew in my heart Nicole was gone, but if I was wrong, I wasn't going to miss her simply because I wasn't looking.\n\nOutside of the festival vendors getting set up, the place was pretty much a ghost town, and my own campsite was no exception. Sara's car wasn't there, so I guessed she and Liz had stayed in town the night before. Russ had probably never made it back, and if Chad and Janine were in their tent, they were taking a break, because all was quiet.\n\nI plugged my phone into my car charger and walked into my tent to start packing up. I rolled up the sleeping bag and stuffed it in my trunk, then crammed all the clothes into a duffel bag and tossed it in the back of the car. I was breaking down the tent when I heard something rustle behind me.\n\n\"You have fun last night?\" Chad asked me. He stepped out of his tent, zipping up the door before he walked over to the picnic table in the middle of the campsite.\n\n\"Not nearly as much as you did, I'm sure,\" I said.\n\nHe grinned and shrugged with a 'what can you do?' look. \"Who was that girl yesterday?\" he asked.\n\n\"I ran her over in line for ice cream,\" I said. \"And it went from there.\"\n\n\"Ah,\" he said. \"I'm partial to ramming a hot woman's shopping cart in the produce aisle at H-E-B myself, but I guess just plowing them over works, too.\"\n\n\"Not that well, apparently,\" I said.\n\n\"Uh oh,\" he said. He grabbed a bottle of water from the cooler and chugged about half. \"Couldn't close the deal?\"\n\nI didn't tell him I could have, but I chose not to. \n\n\"It's not that,\" I said. \"Actually, we had a great time after the concert.\"\n\n\"So where is she, then?\"\n\n\"Your guess is as good as mine,\" I replied, sounding as awful about it as I felt, but much more awful than I had wanted to let on in front of my former boss and roommate.\n\n\"Ouch,\" he said. \"She got to you, huh?\"\n\n\"Big time,\" I agreed. I grabbed my own water and killed it off in one long swallow.\n\n\"You at least get her number?\" he asked.\n\n\"Nope,\" I lamented. \"I was too busy living in the moment to think about the future, I guess. Of course, I was expecting the moment to extend to this morning, too.\"\n\n\"Wow,\" he said. \"Middle of the night jailbreak. I've done that a time or two.\"\n\n\"Yeah, me too,\" I said. \"And with the way I'm feeling right now, I'll never do it again.\"\n\nHe said nothing for a minute. We just sat there in silence on the picnic table, enjoying the crisp morning air and letting the smells from the surrounding campsites' breakfasts waft around us.\n\n\"Pretty crazy, huh?\" he asked. \"The two of us, two of the biggest bachelors in the state of Texas, getting caught up the same weekend, two states away.\"\n\nI didn't want to tell him the truth, that I'd been caught well before arriving in Colorado, mostly because I didn't want to think about that right now. One massively fucked-up situation at a time, thank you very much.\n\n\"Yeah, that is pretty nuts,\" I agreed. \"At least you didn't screw up and let yours get away.\" I motioned toward his tent, where I assumed Janine was still sleeping.\n\n\"True,\" he said. \"But then, you didn't need me to land yours, and I can't say the same. I owe you big-time for that, Sgt. Carver.\"\n\n\"Any time, brother,\" I said, bumping fists with him. \"So is that what she is? Are you off the market?\"\n\n\"Yeah, I think so,\" he said. \"We haven't talked much about it. I have to go back Tuesday. I have another year in, and she has 18 months left here. We'll see how it goes, but yeah. I think the plan is to see each other once a month and see what happens from there. She grew up in Texas, so she comes back fairly often anyway.\"\n\nI remembered her talking about her east Texas upbringing, how her grandfather had been a raging racist, and how that had contributed to her fantasy of being with a black guy. I couldn't help but grin - it looked like she was going to be with him a lot more, too.\n\n\"Well, man, I'm glad it's all working out for you,\" I said.\n\n\"Thanks,\" he said. \"But don't give up, man.\"\n\n\"I don't see how I can do anything else.\"\n\n\"You may not have gotten her number, but she must have told you something about herself that would help you find her.\"\n\nI thought back to our chat yesterday. I guess there were some details there I could use, but... everything was just jumbled up. If I'd thought her arrival into my life had screwed things up in my head, her departure from it had made it 10 times worse.\n\n\"Maybe,\" I said. \"I gotta get rolling and head back home, man. Give Janine my best.\"\n\n\"Will do,\" he said. \"Let me know how it works out.\"\n\n\"Absolutely,\" I said. \"Either way, I'll be fine.\"\n\nAs I waved goodbye and drove out of the campsite, I couldn't help but wonder if I'd just lied.\n\n***********************************\n\nI got coffee and gas at a truck stop before jumping back on I-70, and I stopped for a sandwich in Price, maybe two hours inside the Utah border. All told, I'd been driving for three hours and I'd been treating my cellphone like it was radioactive waste. I never wanted to turn the damn thing on ever again.\n\nFinally, a few miles before getting onto I-15 - which would take me all the way back to my hometown - I broke down and turned on the now-fully charged phone.\n\nAs expected, I had about 20 text messages and I'd missed a few phone calls as well. None of the calls or voicemails had been from Kelly though, and only three of the texts were. I immediately ignored everyone else and went straight to her messages.\n\nThe first had been sent around 9 p.m. the previous night, saying she was on a break at work and was very much looking forward to reading my e-mail when she got home, as well as hearing about any fun I was going to get into tonight. Yeah, somehow I doubted she'd be looking forward to anything involving me when I told her what really happened last night.\n\nThe second text was around 3 in the morning, explaining that she'd had to work extra late and had just barely gotten the store closed, and that she was so tired she'd have to wait until the morning to read my e-mail. She was a little disappointed that I hadn't texted her all day, but she knew that I knew she was working.\n\nThe one she'd sent around 11 a.m. - just a couple hours ago - shook me the hardest. She didn't complain that she still hadn't heard from me, or that I hadn't texted her about what I'd done last night, or anything. She simply said that as far as she could remember, yesterday had been the first day since our first phone call that we hadn't talked on the phone, and that while she knew it was mostly her fault due to work, it still made her sad.\n\nYeah. I just about took a right turn off the next bridge after I read that one.\n\nAs conflicted as I was, I knew by now Kelly would be worried about me, maybe even going as far as to call my mom and ask if she'd heard from me. That would get my parents worried, and all I needed to do to stop it was send one little message.\n\nMe: Hey. I didn't plug my phone in last night, and it was dead when I woke up this morning. It's just now fully charged up. I'm somewhere south of Salt Lake City, and should be home in a few hours. I miss talking to you, too, and I'll call later.\n\nThat wasn't a lie - I did miss talking to her. I missed how easy things were between us less than 24 hours ago. She'd made this road trip even better than I thought it would be, and I couldn't imagine what it would have been like without her constant presence, even if it was just her voice. She really was the best woman I'd never met.\n\nThat made me feel even guiltier, because none of this was her fault. Sure, she'd been at work, but the main reason I hadn't texted or called had nothing to do with that. Normally, nothing would stop me from sending her 12 teasing text messages while she was on the clock, knowing she'd read them later and get herself off. But something had yesterday. \n\nA 5-foot-2, brunette, Australian, sultry-as-all-hell something.\n\nKelly's last text message also told me that she had more family functions to attend today, the last day of the weekend before everyone went their separate ways, and so she might not be able to talk until later in the evening. She also wondered exactly what I had planned for tonight. My last text to her the night I'd slept with Sara and Liz had been pretty straight forward:\n\n\"See you tomorrow.\"\n\nTomorrow was now today, but I had no idea how I would face her now. No fucking clue. But I was going to be at my parents' house in a little over three hours, and Kelly's apartment was just 45 minutes beyond that, in Idaho Falls. I was going to have to come up with something.\n\n\"What a fucking idiot!!\" I shouted to no one in particular. I pounded the steering wheel futilely, doing nothing but hurting my knuckles in the process. The steering wheel, in particular, was not impressed. It grinned back at me as if I'd just punched a big, inanimate plastic-coated rubber circle or something.\n\nI'd been with so many attractive, sexy, 13-on-a-scale-of-10 women in the past two-plus weeks. I'd had four threesomes, two foursomes and one huge orgy. I'd had sex at concerts, by the beach, in tents, and even once or twice in an actual bed. I'd hooked up with redheads, brunettes, blondes and everything in between. I'd fucked a lingerie clerk with a lingerie model's body on the floor of a lingerie shop. I'd fucked a Hooters girl in every hole until she passed out. I'd fucked a professional cheerleader, for crying out loud. I'd even managed to go back and rewrite my past, changing one of my few negative sexual encounters into one of the most amazing nights of my life.\n\nThere had been a close call here and there, but none of those women had distracted me from my main goal - to get back to Kelly, have sex for about 33 hours, and then tell her how I felt about her.\n\nNo, somehow that had happened after the long string of casual hookups had ceased, after I'd deliberately put my guard up, knowing I only had one more sunrise before I could get to her.\n\n\"How the FUCK did I let her get to me?!\" I shouted, loud enough that the people in the cars I was whizzing by on I-15 might have been able to hear me. As I yelled it, though, I knew it wasn't true.\n\nI didn't let Nicole get to me. I just never stood a fucking chance.\n\nAll I'd done is accidentally knock her down, help her back up and then look at her. And that was all it had fucking taken.\n\nThe heat between us was so intense that we could have been standing on the surface of the sun and there wouldn't have been a noticeable difference. Once we started talking, then when she smeared the ice cream all over my face... and oh yeah, that out-of-body spiritual excursion that had been me applying sunscreen to her body... \n\nYeah, I didn't yet know what Kelly looked like, but I knew after all we'd experienced together, even if it was all on the phone, that I'd find her gorgeous. I was well past the point of wondering if we would have a connection when we met.\n\nBut then my brain bounced back to Nicole - I KNEW she and I had a connection, even after just a few hours together. Now that I had experienced it with her, that I knew that kind of link could exist between two people, I'd be selling myself woefully short if I accepted anything less.\n\nAnd since I already had it with Nicole, it would be impossible to have it with anyone else, even someone as incredible as Kelly. \n\nRight?\n\nThere was another part of my brain reminding me that it really didn't matter what I had with Nicole, because what I didn't have was her phone number. Or an e-mail address. Or any other way of getting in contact with her. Hell, I didn't even know her last name. For reasons I'd never get to clarify, she'd decided to remove herself from my life almost as quickly as she'd arrived.\n\nI figured I probably knew the reason, anyway. She'd asked me to make love to her, and my brilliant response had been to confess my love for another woman. She'd replied by telling me she loved her boyfriend, too. She saw very clearly the dilemma we faced, and rather than stringing it out and agonizing over the decision, she eliminated the newer, less stable relationship.\n\nIt made sense from a logical standpoint. Sure, she was in Los Angeles for a while, but once that was done, she'd be back in Australia, and I was in the States. How the fuck would we have ever made that work, anyway? \n\nLogic didn't really matter, though. I wanted her so badly, and like Chad had said, if I really, really worked at it, I could find her. How many Australian exchange students could there be at UCLA? A couple hundred, maybe? Even if there were a thousand, how many of them were named Nicole? She said she was from Melbourne, so that would help, too. The school wouldn't just hand over their admissions records, of course, but I'm sure they had some grad assistants and interns working in their offices, and the law of averages said that at least one of them had to be an attractive female I could sweet-talk into doing me a favor, right?\n\nJust then, my phone pinged.\n\nKelly: You better call me. I'm not missing out on talking to you two days in a row. I'm glad you texted, though, because I was starting to get slightly concerned. Drive safe.\n\nI texted back that I was fine. I started to add that she had nothing to worry about, but I erased it before I sent the text. I hadn't lied to her since our first phone conversation, and I didn't want to start now.\n\nI could wander around in these mental circles for the rest of my drive and the rest of my life, but it wasn't going to make a damn bit of difference. At the end of the day, my situation boiled down to this:\n\nI hadn't been lying to Nicole the night before: I loved Kelly. I hadn't told her that yet, but I'd known it for a few days now.\n\nOn the other hand, if I'd just gotten to spend a few more hours with Nicole, I was pretty sure the colossal feelings we had for each other would have morphed into love, too.\n\nI was so, so fucked.\n\n******************\n\nThe nostalgia hit me like a tsunami when I pulled off the busy four-lane boulevard and into my neighborhood. It would still take me a few minutes to get to my house, but even though I'd only lived here for the four years of high school, the memories were everywhere.\n\nThere was the city pool, where I'd been a lifeguard, given swim lessons during the summer, and checked out more than a few bikini-clad high school classmates. Up the street from that was the little league baseball complex, where some of my American Legion and travel baseball teams had practiced, and where I'd been an umpire for the kids' games. \n\nI took a left onto Williams Drive, and passed the house of the girl I'd taken to my Junior prom. I'd come up with the idea of asking her by taping the question to an alarm clock hidden in her room and setting it for 2:45 in the morning, but I didn't want to give her mom the wrong impression by asking if I could go into her teenaged daughter's bedroom, so I got one of our mutual friends to do it. The memory of sitting by the curb while she went in and planted the clock was still fairly fresh.\n\nA right turn on Susan Street took me past my friend Nathan's house. I remembered hanging out there with our circle of friends a lot of weekends, playing video games, drinking whatever alcohol we could get our hands on and chatting about our classmates late into the night. We'd joined the Marines together, but he'd gone off to boot camp a few weeks before me. He'd suffered an accident during the swim qualifications, when the chlorine in the water led to some kind of chemical reaction in his lungs. Nathan spent the next three months in the hospital before finally passing away, and my own combat training had made it impossible to attend his funeral. The house basically looked the same, but I'd heard his parents had moved out and eventually gotten divorced. It didn't matter - to me, that would always be Nathan's house.",
        "Finally I made a left onto Brookline Avenue. I always laughed when I thought of that name - 'Avenue' implied busy traffic, lots of stop lights and pissed off drivers honking their horns. This street was tucked so far back in the neighborhood that it only had two stop signs, and you could run either of them any time without worrying about hitting something.\n\nI pulled past the next door neighbors' house and couldn't help but grin. When we first moved in, these neighbors were the only ones on the street with a pool. Our third or fourth day in the house, my parents were both at work and since it was still summer, I was at the house alone. I was up in my room when some movement caught my eye out the window. When I went to investigate, I saw a girl with auburn hair tanning naked by their pool.\n\nI was shocked but way too transfixed to look away, at least not until she got up and went inside half an hour later. You can guess what fueled my 14 year-old masturbation fantasies for the next few weeks. I kept an eagle eye on their pool from then on, and while I saw her swim a few more times, I never caught her naked again. I found out later that she had just graduated from the high school I was about to start at, and she went off to college in Oregon a few weeks later. I only met her once or twice, but if she ever found out about my spying on her, she never told me. My mom told me she'd moved back to town and was married now. \n\nMy parents' house was the last one on the left. It was a pretty good example of what most of our neighborhood was about - there were some mini-McMansions and some houses that were starting to look run down, but ours was right in the middle. It was a two-story house with a basement, a three-car garage, and a deck out back. My parents had a pool put in after I'd left home, mostly to improve the property value, but I had yet to use it. \n\nThe first floor was mostly brick, with siding running around the corners, but the upper floor was all siding. It was a great house but not too extravagant - my parents could have afforded much more, but this was all we needed when we'd moved here. Truthfully, it was more than they needed now. \n\nI'd come to terms with the Marine Corps chapter of my life being over a while ago, but when I pulled into the driveway and cut the engine, I realized that this road trip was over, too. All that was left was to claim the prize at the end, a prize I didn't know would be waiting for me when I planned the trip. At this point, I wasn't even sure how much of a prize it was, but before I could get into yet another full rehashing of the Nicole/Kelly conundrum that had been rattling around in my brain the entire way home, there was a tap at my window.\n\n\"You going to sit there all day?\" my mom asked. I grinned, and when she stepped aside, I opened the door and got out.\n\n\"Hi, mom - oof,\" I said, my normal greeting being swallowed by the massive hug she wrapped me in. I hugged her back just as hard - I'd seen and done a lot over these past five years, and I had only been back here a couple of times. I missed my parents a lot.\n\n\"Where's dad?\" I asked when she was finished squeezing my lungs.\n\n\"Around back,\" she said with a mischievous glint in her eye. A quick sniff of the air told me her secret - it was thick and muggy, but gale-force winds couldn't mask the smell of my dad's sizzling steaks.\n\n\"You guys are the best,\" I said. \"I have a couple expensive things I need to get out of the car, then I'll head back.\"\n\nShe took my laptop bag, and I hauled the boxes containing my desktop computer and my guitar case through the garage and into the mudroom.\n\n\"Just leave them here,\" she said. \"We can move them later.\"\n\nI followed my mom down the hall through the kitchen, and when I walked out the back door, I realized why she was in a hurry.\n\n\"SURPRISE!!\" \n\nThere were maybe 20 people in the backyard with my dad. Betsy and Ron, my mom's co-workers, were there, as well as couple of my dad's friends who I knew from growing up. About a dozen of my high school friends were there, including a couple ex-girlfriends who were sunning themselves by the pool. My high school baseball coach, his wife, and their two young kids were splashing around in the water with a few other people. The neighbor girl, the one I'd caught tanning naked all those years ago, was here with her parents, though I didn't see a husband. She'd gained a few pounds since I'd last seen her during high school, but she still looked pretty damn good.\n\nThe only person I didn't know was a tiny brunette girl, who stood near the back door looking at everyone. A thought flickered into my mind. The only personal details I'd managed to squeeze out of Kelly were that she was just an inch or two taller than five feet, and that she had brown hair. This girl fit both those bills, and I wondered if my mom hadn't invited her down here without telling me.\n\nIf so, I was sorely disappointed. The girl was actually fairly attractive, but I felt none of the spark I'd felt when I first saw Nicole yesterday, and -\n\nNevermind. One of my best friends from high school, Tommy, walked up to the girl, put one arm around her waist and led her over to me.\n\n\"Brad, welcome home, buddy!\" he said, wrapping me in another bear hug. My mom's had been tight, but Tommy was built a lot like Chad, except he was about 9 inches shorter. He could have squeezed me into unconsciousness if he'd wanted, but he showed mercy and let me go right as things were starting to turn gray.\n\n\"I can't tell you how good it is to see you, Tommy,\" I said. \"I missed you, man.\"\n\nTommy and I had been a large part of a core group of friends all throughout high school, along with Nathan and Scott, my Marine buddy from Florida. He'd wanted to join the Marines with us, and had been well on his way before getting medically disqualified. He'd stayed in Idaho and gotten really depressed for maybe a year before snapping out of it. He'd been gone the last time I came home, so while we'd talked and texted plenty, it had been over three years since we'd seen each other.\n\n\"Brad, this is Collette,\" he said. \"We've been dating a couple months. Collette, this is Brad, my boy from back in high school.\"\n\nWe shook hands, and I gave her a quick once-over. On second look, there was no way she could have been Kelly. My mom had given me Kelly's sizes, and the lingerie I'd purchased would have fit like a loose plastic bag over this girl. Her ribs weren't quite showing, but she was way too thin. I was kind of surprised Tommy was dating her, because he'd been into thicker girls in high school. \n\nWe talked for a few minutes, until some of our other high school friends meandered over. I managed to sneak away and worm through the crowd toward the grill, where my dad had a whole stampede worth of steaks going.\n\n\"Welcome home, son,\" he said, pulling me in for a hug with his free hand. \"How was your trip?\"\n\nWell, except for the last day or so...\n\n\"Pretty amazing, dad.\" I'd have thrown in an adjective-enhancing 'fucking' there if it had just been the two of us, but I didn't want to cuss in front of my mom and the kids.\n\n\"Glad to have you back,\" he said. \"Pull up a seat and grab a beer.\"\n\n\"Need any help with those?\" I motioned to his grill as I sat down and cracked open a Samuel Adams. My dad had good taste in just about everything. \"I mean, I know you're pretty good and all, but the master is here now, if you want a little break.\"\n\n\"Please,\" my dad scoffed. \"I taught you everything you know about grilling meat.\"\n\n\"No,\" I said. \"You taught me everything you know about grilling meat. Which is a great deal, I'll admit. But I've picked up a few things on my travels.\"\n\n\"They have a lot of world-class barbecue chefs in Afghanistan?\" my dad quipped.\n\nI laughed out loud. \"No, over there, the sun mostly barbecues humans,\" I said. \"But I lived in Texas the past few years, dad.\"\n\n\"Yeah, you grew up there, too, remember?\" he asked. He'd been in the military through my junior high years, and we'd spent several years in Texas. \"Where do you think I learned how to do this?\"\n\n\"Fair enough,\" I said. He flipped the steaks over then, satisfied for the time being, closed the grill and sat down next to me. We clinked our bottles together in a silent toast then drank together for a few moments.\n\n\"Your mom invited Kelly,\" he said. \"Apparently she really, really wanted to come, but she still had some family in town, I think.\"\n\n\"Yeah, that's what she told me,\" I said.\n\n\"I didn't hear the chat, but it sounds like she's pretty excited to meet you.\"\n\nI nodded. Up until a little while ago, there was nothing I wanted more. \n\n\"Yeah, I think I'm gonna head up there tomorrow.\"\n\nHe looked at me carefully for a moment. \"Trouble in paradise already?\"\n\nMy dad always could read me like a damn phone book, but I didn't feel like having this talk right now.\n\n\"Nah, everything's fine, dad.\"\n\n\"Is it the looks thing?\" he asked, and I shot him a glance. \"I know you haven't seen any pictures, and mom and I are under strict instructions not to give you any details. But if that's what's bothering you, I'll simply say this - you have nothing to worry about.\"\n\nIt didn't assure me that we'd have the same kind of sparks Nicole and I did yesterday, but it actually did make me feel a lot better. \n\n\"I appreciate that, dad, but really, I'm just beat. It's just been a long, long trip, and really, a long, long five years. I'm ready to go to battle with that bed downstairs and lose the fight for about 12 hours.\"\n\n\"I hear ya,\" he said. He got up and raised the grill cover, flipping two of the steaks immediately. \"But that's a ways off. These people are all here to welcome you home.\"\n\nOver the next two or three hours, all of them made their way over to me, catching me up on what was going on with them since I'd been gone. I shared a few stories from the Marines, but really, I had no desire to get into the really gory stuff that had happened overseas. \n\nThe sun started to set to our left, and people started to file out. Tommy and I made plans to hang out some tomorrow, and several people made sure I had their new cell numbers before they left. When it was finally down to just me, my parents and a couple of the neighbors, I got up, walked around the corner and pulled my phone out.\n\nIt was time to make a call.\n\n\"Thank God,\" she said, answering halfway through the first ring. \"I was starting to go into withdrawals.\"\n\nI couldn't help but chuckle. Somehow her voice sounded different than when I'd last heard it on Friday evening, but it was still one of the sexiest sounds I'd ever heard. \"They say addiction is unhealthy.\"\n\n\"I'll be unhealthy then,\" she said. \"Don't you ever go that long without at least texting me again.\"\n\n\"I'll try not to,\" I said. \"I would have called sooner, but my parents threw me a surprise welcome-home party. My dad said you were invited, but you gave him some lame excuse - changing diapers, I think he said - to avoid coming.\"\n\nMy tone of voice was playful, and her chuckle told me she understood I was joking.\n\n\"I've only been able to answer for the past 15 minutes anyway,\" she said. \"That's one of the reasons I couldn't come.\"\n\n\"There's more than one?\" I asked.\n\n\"Do you really think it would have been a good idea to meet for the first time in front of 20 people?\"\n\nShe had a point. Up until yesterday, I was pretty sure the first time we met was going to be light on speaking and heavy on... well... just about everything else. Not something you want a lot of people around for, and certainly not something my parents needed to see.\n\n\"That's true,\" I said. \"Though, I'm pretty sure my dad would found it entertaining.\"\n\n\"Probably, but I have to talk to your mom almost every day,\" she said. \"I don't need that to be a part of our normal conversation.\"\n\n\"Listen,\" I said. \"We've both had a busy day, and I know I'm still pretty wiped from all the driving. Plus, I'm still trying to wrap my mind around the fact that my Marine Corps days are done, and I'm a civilian now. Can we just take a raincheck tonight, rest up and be ready to go tomorrow?\"\n\n\"Yeah right,\" she scoffed. \"It's not just the drive that has you wiped. You've been having sex non-stop for two weeks now. And what are we going to be doing tomorrow that I need to rest up for, huh?\"\n\n\"Well, uh... you know,\" I said. \"I assumed I was going to take you to dinner somewhere. Eating takes a lot of energy.\"\n\n\"For you, maybe,\" she said. \"Not for me - I just have to sit back and enjoy it.\"\n\nThis exchange was reminding me why I was so looking forward to meeting her. I had no idea how I was supposed to tell her I had feelings for someone else, too.\n\n\"Anyway, yeah, I think that's a good idea to wait until tomorrow. I have to work until 5, but I'm free after that. Let me know what you have in mind.\"\n\nI was worried that she'd fight me, and was partly relieved and partly surprised when she agreed.\n\n\"I will,\" I said. \"I'll text and call you tomorrow. I'm actually so tired, I'm gonna be asleep within the next half an hour.\"\n\n\"Aww,\" she pouted. \"No fun times on the phone tonight? We still haven't had last night's story time.\"\n\nI really did hurt for Kelly. I wasn't the only one ready to say those famous three little words two days ago, and as far as she knew, nothing had changed. I was really tired, but I'd been worse off than this a few times during the trip and had found a way to fit her in.\n\n\"I didn't do anything that would fuel your spank bank,\" I said. \"There's nothing to tell. I decided, after all the stuff that happened with Sara the night before, that the next day would be a chill day.\" The words were true, but they felt hollow. \"I'm not sure how sexy me yawning all over the phone would be, anyway.\"\n\n\"Poor baby,\" she said, mostly sarcastically. \"I guess I can let you off the hook tonight, especially since you'll be here in person tomorrow.\"\n\n\"I promise, I will. Sleep well, sexy.\" \n\n\"How am I supposed to sleep when I'm dreaming of you? And Brad?\"\n\n\"Yeah?\"\n\n\"I want you to be crazy for me tomorrow,\" she said, the sexiness dripping off her words even from 50 miles away. \"So keep your hands to yourself tonight. Please?\"\n\nYeah... she had nothing to worry about there.\n\n************************\n\nPost-Trip Day 1<br> Monday, June 30, 2007<br> Pocatello, ID\n\n\"I'm telling ya man,\" Tommy shouted into my ear. \"Ya just gotta calm down and relax.\"\n\n\"Then maybe you should stop trying to kill me!\" I shouted back. In response, he dipped the right wing of the Cessna Caravan we were flying in. I wasn't sure how far the laws of physics would let him tilt this plane to the right before we fell out of the sky, but it was at least far enough that I got a good view of the mountains we'd unceremoniously crash into if he went too far.\n\nI'd gone to bed exhausted the night before, but I'd woken up after a few hours, tossing and turning and unable to quit thinking about Kelly and Nicole. I gave up around 1 a.m. and did the shit I assumed normal insomniacs do - caught up on e-mails, ate a sandwich, played mindless video games and watched Cindy Crawford pimp face cream on an infomercial. Finally, I went back to bed and laid there for an hour before finally falling back asleep sometime around 5 a.m., only to be woken up by the sun a couple hours later.\n\nIt was OK that I'd gotten so little sleep, though, because I only had an extremely busy day to plow through. It started at 7 a.m. with a brisk swim in the pool, followed by eggs, bacon and potatoes (it's Idaho, after all) with my parents at their favorite breakfast spot. I went down to the college campus after that, to double check that all my enrollment paperwork had gone through and to fill out a few scholarship forms. I went to our family doctor to have a few tests run, then went to the gym to try and burn off a little of my pent-up anxiety. \n\nI was supposed to have lunch with Tommy, but he'd told me to meet him at the airport instead. We'd both taken flying lessons in high school, but while mine had tapered off in the Marines, Tommy had kept his going, and had long since earned all his certifications - private, instrument, flight instructor, multi-engine and commercial. His long-term goal was to fly jumbo jets on international routes, but he had yet to build up enough hours to apply to the major airlines. One of the ways he earned hours was to fly cargo - mostly FedEx and UPS packages - from Pocatello to some of the smaller airports in and around the mountains. There was only enough business for him to do it two or three times a week, and today was one of those days.\n\nI'd spent the past half hour telling him everything, the first person I'd completely opened up to since Scott, back in Florida. Even then, that was two weeks ago, and things were just a little bit different now. As I knew he would, Tommy listened without interrupting and didn't judge, even when I admitted I'd never even seen a picture of Kelly. The only comment he made while I was talking was to call me a jackass for not getting Nicole's phone number, and I forgave that interruption because I agreed.\n\nI'd finally finished spinning my tale of woe a few minutes ago, and he was silent for a few minutes. His first comment was to tell me to relax, which I might have been willing to consider had he not said it while trying to barrel roll a cargo plane.\n\nWe were maybe 10 miles south of the airport near a small town called Salmon, which would be our third stop today. He'd let me fly some, but now that we were on approach, he'd taken over. He'd done his best to scare the hell out of me at the first two airports, too, but this was a little over the top.\n\n\"I think you're making too big a deal out of this,\" Tommy said as he straightened out the airplane and pointed it at the runway. \"Who says you can't have a crazy emotional connection with two different girls?\"\n\n\"Well, probably the two girls, for starters,\" I said. \n\n\"They don't get a say in the matter,\" he said, and before I could protest, he kept going. \"They'd get a say in what kind of relationship you had with each of them, but not how you felt.\"\n\nI nodded. We were about four miles out now. This airport was too small for a control tower, but every airport has a common traffic frequency, where pilots operating near the field can broadcast their intentions, whether it be to land, takeoff, taxi out, etc. You'd think that wouldn't be necessary at a tiny airport like this one, but it was the Big Sky theory - it's a big sky with millions of miles of flying space, so of course the only two airplanes within 200 miles of each other will be pointed right at one another at the same altitude.\n\nTommy keyed up his microphone and announced our intentions to land. We were both scanning the horizon for other airplanes, but saw nothing.\n\n\"Look, this is why you brought this to me, right? You wanted a second opinion, that only Dr. Tommy can provide?\"\n\nI nodded again. \n\n\"So here's my opinion - this is way, way simpler than you're making it out to be.\"\n\n\"I wish I agreed with you,\" I said. We passed over the numbers on the runway, and Tommy greased the landing, the wheels barely squeaking when we touched down. He let me handle the taxi to the hangar, where someone would meet us and take the boxes. He turned toward me.\n\n\"Before you met Nicole, you were excited about Kelly, right?\"\n\n\"Yes.\"\n\n\"Thought there might be a future for the two of you?\"\n\n\"Yes.\"\n\n\"You passed on taking a girl's virginity and gave up an opportunity to have sex at a baseball field, because of this girl, right?\"\n\n\"Yes, genius,\" I said, growing tired of the questions. \"Your point?\"\n\n\"That sounds to me like a pretty fucking strong connection, Brad,\" he said. We powered down the engines and headed into the FBO while crewmen unloaded the boxes. He poured himself a cup of coffee before turning back to me. I wasn't a big coffee drinker, but the way this day had gone so far, and with so much of it still to go, I was grabbing whatever pick-me-up I could find.",
        "\"So what, you had this earth-shattering meeting with another girl?\" he asked. \"I mean, I know I gave you crap about not getting her number, but it actually makes this a little easier. You go meet Kelly, and you see how things go. Maybe the whole fucking galaxy doesn't explode the first time you lay eyes on her, but who cares? There's already something between you, so give it some water and a little natural sunlight, and see if it grows into something bigger. And if it doesn't, you do what your Marine buddy told you to do. Use what information you do have, go to SoCal, and find Nicole.\"\n\nHe was making a lot of sense, but it still didn't feel right to me.\n\n\"But how can I open myself up and expect Kelly to open herself up to me, when I know in the back of my mind that I really, really want to be with someone else, too?\"\n\n\"You find a way to shut that shit off, just for one evening,\" he said. \"Focus on what you've got in front of you, and give her a chance.\"\n\n\"Easier said than done, man,\" I lamented.\n\n\"You're a Marine with combat medals,\" he reminded me. \"You've done harder shit than this. Stop being a pussy and handle your business.\"\n\nA lot of people might bristle at that, but I just took it in stride. I was fortunate to have friends who didn't pull punches. I didn't necessarily feel like I was being a pussy - I had a legitimate problem, and not having a ton of experience with emotions, I wasn't sure what to do with it. In Tommy's mind, though, the solution was obvious, and I needed to attack it head-on. I appreciated his input, but I wasn't sure things were quite as simple as he thought.\n\n\"What about you, huh?\" I asked, and he looked at me like I'd grown horns. \"Collette?\"\n\n\"Yeah,\" he said. I don't think he realized it, but his eyes dropped to the ground quickly before bouncing right back up. \"She's pretty hot, huh?\"\n\n\"She's an attractive girl,\" I agreed. \"Not really your type, though.\"\n\n\"What's that supposed to mean?\" he asked.\n\n\"I remember you being into bigger girls in high school, that's all,\" I said.\n\n\"Hey, I like what I like,\" he fired back, getting defensive.\n\n\"Pull it back there, turbo,\" I said. \"I like what you like, too, Tommy. I've been with some bigger girls on this trip, and I thoroughly enjoyed every one of them. But I like all types of girls, and Collette's even a little too thin for my tastes. I don't think I've ever seen you date a girl that didn't have serious curves.\"\n\n\"Yeah,\" he said, nodding. \"Look, we can't all be you, Carver. Collette is fun to be around, and she's great in the sack. We're just having fun right now. I don't expect it to last a whole lot longer. She and I don't have the kind of chemistry you seem to have found with two different women.\"\n\nI wondered if by the end of the night, that number wouldn't be sliced in half. The crewmen came into the terminal to tell Tommy they were finished. We drained our coffee cups, and after a stopover in the bathroom, we headed back to the plane.\n\n\"Let's get you back home and get you ready for your woman,\" Tommy said. \"I hope she's as hot as you think she's going to be. Matter of fact, what are friends for? Tell me which store she works at, and I'll go up there and do a little recon for you.\"\n\n\"I have no doubt you would,\" I said. \"And you'd probably get me in a metric asston of trouble along the way.\"\n\n\"Probably,\" he said as a shit-eating grin split his face. \"I don't see the drawback, though.\"\n\n\"No need, anyway,\" I said. \"My dad wouldn't give me any particulars, but he said I had nothing to worry about.\"\n\n\"Normally, I'd say that's an old man talking, and he probably thinks any girl under 40 is hot,\" Tommy said. \"But since this is your dad, I'll take his word for it.\"\n\n\"What's that supposed to mean?\" I asked, knowing exactly where he was going. After all, he'd been there numerous times during high school. \n\n\"Dude...\" he said, pausing only so we could climb into the plane. \"Your mom is fucking hot.\"\n\nIt was good to be home.\n\n**********\n\nWe flew to one more airport then landed back in Pocatello a little after 5 p.m. \n\nTime to go see Kelly.\n\nShe'd been texting me all day long, taking breaks at work to send me a quick message. Sometimes it was just a 'thinking of you' note, and other times, there were explicit descriptions of what she expected to happen tonight. I'd held back on getting dirty, but I'd answered each text, at least when we weren't in the air. I missed this X-rated banter with her, but I missed her voice even more. Only once in a 48-hour span wasn't nearly enough.\n\n\"You have no idea how much I've missed hearing your voice,\" she said, echoing my thoughts exactly. Her voice sounded like warm maple syrup drizzled all over a stack of steaming hot pancakes. It was at once comforting and exciting, both familiar and adventurous, and I felt better about life in general with it tickling my ear.\n\n\"Everything ok?\" she asked. Apparently, I'd been silent too long.\n\n\"Yeah,\" I stammered. \"I was just thinking of how much I agree with you.\"\n\n\"Listen, you have no idea how much I want to see you, but would you mind if we pushed it a bit later into the night?\" she asked. \"I need to spend some quality time with Tyler. I've been working so much lately, and the only days off I've had we've been with family, so I haven't had any mother-son time.\"\n\n\"Of course, Kelly,\" I said. \"Your son comes first.\"\n\n\"It's not that,\" she said. \"You're really important to me, too. So much so, that I haven't made a lot of plans to do anything else over the next few days... your mom made sure I got a few days off, and my mom and my aunt and uncle are looking forward to keeping Tyler for a while.\"\n\nI saw where she was going with this.\n\n\"Oh, really,\" I said. \"And just what are we going to be doing, young lady?\" A few days ago, I would have strongly suggested that she build in some time for me to meet her son, but with where my head was at the moment, I was smart enough not to go there.\n\n\"You know, playing checkers, knitting scarves, discussing the theory of evolution,\" she said. \"Things a toddler wouldn't be interested in.\"\n\n\"Right, right, okay. That makes sense.\"\n\n\"So, I wanted to hang out with him tonight for a while,\" she said. \"I'm gonna take him to the park and have a little picnic, toss a ball around with him some and buy him some ice cream.\"\n\n\"That sounds great, Kelly,\" I said. Again, I had to fight the urge to volunteer to come up right now and be with them. \"I didn't sleep well last night, so I can grab a little nap before I come up.\"\n\n\"Aww, sorry you couldn't sleep. Any reason in particular?\"\n\nYes, I thought. I was worried that when I tell you I really, really like another woman too, you might punch me hard enough to break my jaw.\n\n\"My back isn't used to my nice, soft bed after all those nights in tents,\" I quipped instead. \"Anyway, how does 10 o'clock sound? Do they have a Cracker Barrel up in Idaho Falls yet?\"\n\n\"They do, but I don't want to eat,\" she said. \"I want to meet you somewhere special, around 11. I'll eat with Tyler. Can you grab something on your way up?\"\n\n\"That sounds good,\" I said. \"Where am I going to meet you?\"\n\n\"I'll text you the directions.\"\n\n\"All right. I'll probably leave around 10,\" I said. Finally, I couldn't stand it anymore. \"Kelly? I need to talk to you about something before we go anywhere or do anything. I don't want to do it over the phone, but first thing when we meet, okay?\"\n\n\"Ok,\" she agreed happily. I expected her to try and pry the details out of me right now, but she didn't. \"I, uh, have something I need to tell you, too. But it'll keep till then.\"\n\n\"Ok,\" I parroted. The last time she waited to tell me something, I found out she had a son. I wanted to worry about what she might be holding back from me now, but I'd find out in a few hours. I could wait.\n\n\"Brad? I can't wait to see you,\" she said.\n\n\"Likewise, honey,\" I said. The pet name rolled off my tongue so smoothly that I didn't even realize I was going to say it until I did.\n\nI pulled into the drive a few minutes later. Nobody else was home just yet. I thought about another swim, more just to enjoy the novelty of having a pool than for any fitness benefits, but I decided to crash out instead. I briefly wondered if I'd sleep restlessly like the night before, but before I could even complete the thought, my eyes were closed.\n\n***********************************\n\nI woke up just before 9, and after a shower and a fresh shave, I felt better than I had in several days. I threw on an orange polo shirt, white cargo shorts, and a pair of tennis shoes and ventured into the kitchen to find food. There was left over steak and salad in the fridge from yesterday's barbecue, so I made myself a plate and devoured it. I was washing the plate and silverware when my parents walked into the room.\n\n\"Didn't know you were up, Brad,\" my dad said. \"You were sacked out when I got home.\"\n\n\"Yeah, I had a rough night last night,\" I said. \"Wanted to catch up a little before I go up to Idaho Falls tonight.\"\n\n\"Tonight's the night, huh?\" my mom asked. It should have been awkward, having this conversation with my mom and dad, but it wasn't. \n\n\"Yeah, she wanted to spend time with Tyler after all that slave labor you forced on her this weekend, so we decided to meet late tonight.\"\n\nMy mom just smiled, and my dad chuckled. It seemed like maybe there was something they weren't telling me, but I let it go. I had more important things to worry about.\n\n\"We won't wait up,\" my mom said, kissing me on the cheek before disappearing down the hall. My dad walked me out into the garage, and he put a hand on my shoulder before I got in my car.\n\n\"Don't do anything I wouldn't do,\" he said.\n\nI thought for a second. \"That doesn't really rule out much, does it? But ok, dad. No orgies. I got it.\"\n\n\"What makes you think we don't have orgies, huh?\"\n\nI chuckled as I pulled out of the driveway. In high school, my dad liked to embarrass me by telling me about my parents' sex life. I don't even know how much of it was true and how much he was making up just to fuck with me. Either way, I wasn't the same guy now. My parents had worked hard to stay in great shape in their mid-to-late 40s. I doubted they were having orgies, but if they were still having a fulfilling sex life, good for them.\n\nBefore I even made it to I-15, I made a decision - I was going to do what Tommy suggested, with a slight change. I owed it to Kelly to tell her that I'd made a real, strong emotional connection with another woman the last day of the road trip. After that, if she still wanted to stick around and see where things went with the two of us, then that's what I would do. We'd shared way too much together over the past two-and-a-half weeks to throw that away simply because I met a really hot girl. If it pissed Kelly off and she wanted nothing to do with me, then I'd have to live with that.\n\nThe decision was made, but I still had a 45-minute drive ahead of me, and if I didn't distract myself I'd keep obsessing over it. So, I grabbed a Grover Washington, Jr. CD out of my center console and popped it into the player. Most people consider smooth jazz to be nothing more than elevator music, but I disagree. All good music tells a story, but most jazz is instrumental, so they have to do it without the benefit of words. For the next 40 or so minutes, I let the wide selection of saxophones tell me stories about another world, a world where I didn't have to disappoint one of the greatest women I'd ever known.\n\nFinally, it was time to exit the freeway, and I pulled up Kelly's text. She wanted to meet on one of the walking trails that ran adjacent to the Snake River, which cut through Idaho Falls just west of downtown. There were parks and paths leading from the city out to the waterfalls, with trees, benches and numerous large boulders sprinkled throughout, between the walking paths and the water. I had no idea why she'd chosen this particular spot, but it was as good as any. It would be mostly deserted this time of night. \n\nI pulled into the parking lot she'd told me to use, and after taking a long, deep breath, I got out of my car. There were four other cars in the lot, and I assumed one of them was Kelly's. She'd told me to call her when I pulled in, so I did. I'd just reached the trail when she picked up.\n\n\"Was that you that just pulled in?\" she asked.\n\n\"Yeah,\" I answered. \"You're nearby, I guess?\"\n\n\"A few hundred feet up the trail, toward the waterfalls,\" she said, and I started walking that direction. \"It wraps back around to the other side of the parking lot, but you have to use the trail to get to where I'm at.\"\n\n\"I don't understand, Kelly,\" I said, continuing down the path. There were dim light posts every 40 or 50 feet down the path, providing just enough light to avoid running into the various trash cans and benches dotting the trail. \"Why did you pick here? If I didn't know any better, I might think you were a serial killer luring a victim out into the woods.\"\n\n\"They're not woods,\" she replied with a chuckle. \"Well, not really, anyway.\"\n\nI walked in silence for a few seconds.\n\n\"In about a minute, you're going to curve hard right, and you'll see a historical plaque. I'm waiting for you by a tree just past it.\"\n\nThat would have been a good time to hang up the phone, but I couldn't hold my tongue anymore.\n\n\"Look, Kelly, I need to tell you something, okay?\"\n\n\"Please, Brad,\" she said. \"I'll let you say whatever you need to say, but let me go first.\"\n\nI'd all but forgotten she had something she needed to tell me, too. I really felt like I should lead off here, but she seemed pretty emphatic about telling me first.\n\n\"First, I want to tell you something more about myself,\" she said. \"One of our little non-sexual facts.\"\n\nWe'd stopped doing that a couple days ago, knowing that our meeting was imminent, but really, our little sharing sessions were one of the many highlights of my trip. I had looked forward to learning more about her every other day, when it was her turn to share.\n\n\"Um, okay?\" I said, very clearly wondering why she wanted to do this now.\n\n\"I don't think we ever told each other our middle names,\" she said.\n\n\"I don't think we did either,\" I said. My pulse quickened when I saw the historical plaque she'd mentioned just 20 or 30 feet in front of me. This was an odd topic under the circumstances, but it kept my mind off our impending meeting. \"Mine is Mitchell, named after my mom's father. Bradley Mitchell Carver.\"\n\n\"Nice, I like that name,\" she said. \"Kelly is just a name my parents liked, but my middle name was taken from two people; my dad's sister, and my mom's uncle.\"\n\n\"How does that work? Your first name could be either/or, and your middle name is, too?\"\n\n\"Not exactly,\" she said. \"Remember that my mother is full-blooded Italian?\"\n\nI passed the plaque, which paid tribute to the first settlers along this river. I'd read it before, and I barely slowed down when I passed it now. She'd said just past the plaque, so I started looking around.\n\n\"Of course,\" I said. \"That's why you're half-crazy.\"\n\nShe giggled, then took a deep breath that I could hear plain as day. It was like she was steeling herself to tell me something. She exhaled just as audibly.\n\n\"Well, in Italy, Nicola is a man's name. It's my grandma's brother's name. My dad's sister is just named Nicole. So, that's me - Kelly Nicole Linton.\"\n\nAs soon as she said 'Nicola,' I froze in place. I was maybe six or seven trees past the plaque, but I was no longer looking around.\n\n\"I should tell you something else, too,\" she continued.\n\nI couldn't speak. Her next words made it damn near impossible to breathe, too.\n\n\"I can pull off an Australian accent nearly flawlessly,\" she said, demonstrating her words with her voice. I'd just heard this very accent two days ago, and it had been forever seared into my memory.\n\n\"But I lied to you,\" she said. \"I'm not really Australian.\" \n\nThe words didn't come out of my phone, but rather from just a few feet behind me. Just as importantly, the accent was gone, replaced by the voice that had filled my dreams for the past two-plus weeks. \n\nI spun around and there she was, standing beneath a light post at the edge of the path. It was dim, but between the lamp and the moonlight, there was no doubt - it was Nicole. \n\nKelly and Nicole were the same person.\n\nA fuse blew in my brain. It took a second for my neural processors to reset, but once they did, everything clicked into place.\n\nShe was everything I wanted. I knew her personality inside-out from our phone conversations, and now I knew the physical connection was there as well. We'd had an earthquake moment on Saturday in Colorado, and we were having another one right now. A miniscule part of me wanted to ask a million questions. My racing heart and suddenly granite-hard cock agreed on something for once, and told that part to shut the fuck up.\n\nI sprinted toward her, and within seconds I had her wrapped tightly in my arms. I pushed her up against the light post and attacked her mouth with mine, and she answered back with all the intensity of a hurricane. \n\n\"No foreplay,\" she stammered. \"Please.\"\n\n\"Not even if I wanted to,\" I growled back before kissing her again. I pushed her shorts down her legs as she worked on my zipper. She wriggled her left leg free of her shorts and wrapped it around my back just as I felt my cock emerge into the sticky summertime air. I grabbed her by the hips and lifted her slightly, forcing her against the light pole and supporting the rest of her weight with my arms until she was at the perfect height.\n\nI stared deep into her coffee brown eyes and saw about 50 different emotions, and I'm sure she saw the same in mine.\n\n\"I need you,\" I said.\n\n\"Take me,\" she breathed.\n\nI pushed forward, reclaiming her lips with mine and sliding my cock deep into her smoldering pussy with one slow, steady stroke. I came instantly, flooding her tight tunnel as if I'd never cum before. Her body tensed up immediately as she matched me, screaming into my mouth as I sucked feverishly on her studded tongue.\n\nAt that moment, the entire world disappeared. There was no one and nothing else. There was no river, no waterfall, no light pole, and no walking trail. There were no other girls, no other guys, no past experiences and no road trips. \n\nThere was only me and this exquisite, magnificent angel, bonded by our bodies and by so, so much more.\n\n\"I love you,\" she panted as soon as I let her tongue go.\n\n\"I love you, too,\" I answered back, pulling out just an inch or two before sliding back in. She came again as soon as I bottomed out. Her eyes were wide open, and she bored a hole straight into my soul. I knew she'd be there for a long, long time.\n\nMy cock stayed hard, and I finally plunged into her with a stroke that didn't instantly set her off. The world slowly reappeared around us, but I didn't care - I was going to use every moment of my existence to show Kelly how I felt about her, and that started now. \n\nI continued to attack her lips with mine as we worked into a steady pace. Somewhere in my periphery, I heard voices. I was just going to have to hope they were on a different trail, or they didn't reach us if they were on our trail, because I wasn't going to stop.\n\n\"Brad,\" Kelly whispered, reading my mind. \"There's a little spot behind me, down by the river,\" she said, and I needed no further encouragement. I pulled her sexy body tight against mine, and she wrapped her arms around my neck and her legs around my waist. Somehow, her shorts were still dangling from her right ankle, so we weren't leaving any clothes behind. I was still buried deep in her pussy as I slowly trudged off the path and through the grass.\n\n\"Careful,\" she whispered. I had to step on, over and around a few rocks to get where she was directing me, and at night, that would have been challenging even without a 20 year-old sexpot impaled on my cock. There was a small clearing just past a patch of trees, maybe 20 feet from the river and blocked from the walking trails by mammoth boulders. Random passers-by could still see us, but they'd have to be looking hard.",
        "There was a blanket laid out in the clearing, and laying on it was the same pastel yellow shoulder bag from two days ago. She'd obviously set this up before I arrived, and come to think of it, she wasn't wearing a bra or panties, either...\n\n\"You planned this?\" I asked.\n\n\"Mm hmm,\" she said with a giggle as I lay her down in the center of the blanket. \"I couldn't get the blanket out from under you the other night, or I'd have used it instead.\"\n\nI had other questions, of course, but they could wait. I slid my hands under her back and up over her shoulders and resumed pumping in and out of her. She rotated her hips upward and locked her legs behind my lower back, and she gasped as the new angle allowed me to push even deeper into her depths.\n\nDown here by the water, we had an unobstructed view of a moon that would be full in just a few days. It was quite the sight, but not nearly as beautiful as the one in front of me. Her face was deeply flushed, and the way the moonlight danced off her eyes... she had tears running down her cheeks, and I was so moved that I nearly joined her.\n\n\"You are so breathtaking,\" I said softly, snatching her top lip between mine before she could answer. \"I am so very much in love with you, Kelly Nicole Linton.\"\n\nShe was about to answer, and I'm sure it would have been a positive response, but her eyes rolled back in her head as she came once more. Hearing her moan, watching her mouth twitch and her lungs rise and fall rapidly as she struggled to draw a steady breath... if I was still alive at 90, I would remember every delicious detail of this night.\n\n\"Over,\" she stammered once the wave had subsided. I rolled onto my side and then my back, pulling her tight against my body so I was still sheathed inside her. Now on top of me, Kelly ground her hips in a circular motion as she showered my face and neck with kisses. I ran my hands underneath her shirt and grasped her breasts, and she sat up slightly so she could pull the shirt off.\n\n\"Oh my God, Kelly,\" I groaned at the sight of her gorgeous tits. \"They're - you're - perfect.\"\n\nI leaned up to introduce them to my tongue, but she waggled a finger at me.\n\n\"Not yet,\" she chided. \"I want to see these pecs and feel these abs again.\"\n\nI couldn't have taken my shirt off faster if it'd already been sliced down the middle. Once I was topless, she didn't protest. She just let out a long, loud moan when I captured her right nipple between my lips.\n\nTrue to her word, her hands roamed all over my chest and stomach, enjoying the muscular definition I worked hard to maintain. I worshipped her breasts with my tongue, teeth and lips, at least until she sat up straight and started really bouncing up and down on my lap. I could still reach her chest with my hands, though, so I squeezed her right breast and pinched her other nipple as she came yet again.\n\n\"It's your turn,\" she said breathlessly as she collapsed back onto my chest. I planted my feet on the blanket and fucked my cock up into her for all I was worth. She chanted my name directly into my shoulder as she buried her face against me, and it wasn't long before I was filling her steamy pussy for the second time in 20 minutes.\n\nShe tried to roll off of me as I came down from my peak, but I tightened my arms around her back.\n\n\"Brad, I don't want to squash you,\" she said.\n\n\"Please,\" I scoffed, laughing as heartily as I could. \"You weigh like 33 pounds.\"\n\nShe giggled, and it was an even better sound in person than it had been the hundreds of times I'd heard it over the phone. I let her swing her lower body off of me and onto the blanket, but she kept her head on my chest. I felt her nipples against my rib cage as I wrapped an arm around her back.\n\n\"Is it everything you thought it would be?\" she asked me. \"Our first meeting, I mean?\"\n\n\"And so much more,\" I said. \"I gotta ask.. why this spot, though?\"\n\n\"Well, I know there's still a lot of light from the city, but this is about as close to under the stars as you can get without heading into the sticks,\" she said. \"We've talked a lot about being outdoors, and I wanted our first time to be special.\"\n\n\"As long as you were there, we could have done it behind the dumpster at your restaurant, and it would have been special,\" I said, stroking her bare shoulders. \"Though, this probably smells a lot better.\"\n\nShe laughed again, and my heart soared.\n\n\"Seriously, baby,\" I said. \"This was a great idea. It's perfect.\"\n\nFor a long time, the only noises were the nearby waterfall and our breathing, and I was content with that. I could have lay there with her under the stars forever, or at least for another day or two. But finally, it was Kelly that broke the silence, addressing the large elephant that had taken up residence on the banks of the Snake River.\n\n\"So, have you ever watched I Love Lucy?\" she asked.\n\n\"A few times on old rerun shows, like Nick at Nite, yeah,\" I said. \"Why?\"\n\nAs soon as I asked, it hit me. Somehow, we both said the next line in unison.\n\n\"Lucy, you got some 'splainin' to do.\"\n\nWe laughed together, and it lasted a lot longer than it probably should have. She was stalling, and I made a snap decision.\n\n\"Look, Brad\u2014\"\n\n\"No,\" I said. \"Not yet.\"\n\nShe rested her chin on my right nipple and looked up at me quizzically. \n\n\"There will be time for that later,\" I continued. \"Trust me, I have so many questions that you'll think I'm a prosecuting attorney by the time I finish.\"\n\n\"And I promise I will answer them all,\" she answered. \"So why not start now?\"\n\n\"Because... Kelly, you have to know that I want way, way more than just your body,\" I said. \"But right now... I really, really want your body.\"\n\n\"Is that so?\" she grinned. She reached between my legs, where my cock was already starting to grow again.\n\n\"It is,\" I said. \"We've been building this anticipation for nearly three weeks. You're crazy if you think one single time with you is even going to put a dent in my appetite.\"\n\n\"Truer words have never been spoken,\" she said, then leaned down and kissed me. This one was slow, languid, and sensual, and was still hotter than any kiss I'd ever shared with anyone else. \"Still, I thought you'd want me to explain everything before we kept going.\"\n\n\"No,\" I said. \"I'll let you know when I'm temporarily satisfied enough to just talk.\"\n\n\"Then come here,\" she said, rolling onto her back. \"Get back over here where you belong.\"\n\n\"I think we've tempted fate enough for one evening,\" I said. \"Before, I didn't care- if someone had told me to jump out of an airplane with a discount parachute to get to you, I'd have done it. I'm still ready to devour you, but I'm thinking clearly enough now to remember that the Idaho Falls Police do river patrols twice an hour during the day. I'm sure they come through at night, too. So let's go back to your place and wake up all the neighbors.\"\n\n\"I have a better idea,\" she said, standing up and pulling her shorts back into place. I refused to hand over her shirt at first, but I finally gave in, on the condition that I put it on for her. Of course, I got a generous handful of her tits before I pulled the shirt down over her stomach. She made the same agreement with me. I'd never seen a woman use her mouth to put a shirt on before, but according to Kelly, licking my nipples prior to pulling my shirt over my head was a requirement. \n\nWe gathered up Kelly's things and walked hand-in-hand back up the path to the parking lot. We didn't say much - it's difficult to talk when your tongue is in someone else's mouth, and it took us at least half an hour to make what should have been a 5-minute walk. She walked with me to my car, agreeing to leave hers in the lot until morning.\n\n\"Your parents booked us a suite at the Shenandoah Inn, right next to the waterfalls,\" Kelly said. \"It's on the other side of the river.\"\n\n\"Oh, they did, did they? Gonna have to have a word with them,\" I said. \"Why does it seem like everyone was in on this but me?\"\n\n\"Later, remember?\" she reminded me. \"Anyway, I already checked into our room. I almost tried out the jacuzzi before I came to meet you, but I thought you might want to try it with me.\" \n\nI opened her door before getting behind the wheel, and I hadn't even left the parking lot yet when she reached across my center console and started fishing around in my shorts. I hadn't bothered to zip them up, and she had my cock out quickly.\n\n\"It won't take me more than three minutes to get there, Kelly,\" I groaned as she slowly moved her tiny hand up and down. \n\n\"I guess I better work quickly then, huh?\" she asked, then dipped her head into my lap, taking the first couple of inches between her lips.\n\n\"Fuck,\" I moaned. \"That feels incredible.\"\n\n\"I've been practicing, you know,\" she said. I felt the now-familiar pangs of jealousy in my stomach, but she quickly eased my fears. \"Not on the real thing, Brad. You're the one who was so concerned about the contents of my produce drawer, remember? Now I have a whole crisper full of cucumbers and bananas lining up to thank you.\"\n\nI laughed as she got back to her task. For all the experience I had, this was the first blowjob I'd ever had from a woman wearing a tongue ring, and the contrast between the hard metal and the softness of her tongue made it hard to focus on the road. If the hotel had been a little farther away, she might have gotten me off, but I pulled into the parking lot maybe 5 minutes too soon. She tucked me in for the walk through the lobby, but as soon as we were in the elevator, she was on her knees in front of me. \n\n\"I love your dick, Brad,\" she said before showing me again. As it was after midnight on a Tuesday morning, the hotel was quiet, but there was still a chance someone could buzz the elevator and catch us, and that excited me. No one did, and when the doors opened to the eighth floor, she led me down the hall by my cock. She inserted the key with one hand while she stroked me with the other, and she pushed me up against the door as soon as it was closed, tugging my pants down to my ankles before kneeling again. \n\n\"Jesus, honey,\" I groaned, threading my fingers through her brown curls as she attacked my cock. I didn't even care what the hotel room looked like - as long as she was in it with me, it could have been a roach motel. She took me as far into her mouth as she could, and I felt the head slide just an inch down her throat before she pulled off.\n\n\"I stared at pictures of your cock for hours, playing with myself when I couldn't talk to you,\" she said, kissing around the base of my cock and swiping her tongue across my balls as she looked up at me. \"The real thing is about a thousand times better than the picture.\"\n\n\"I know all about staring at your pictures,\" I said. \"I even have your pussy as my phone's background picture.\" She was already flushed from sweating, but I watched her turn an even deeper shade of red. \"That's right... you already know that, don't you?\"\n\nBefore she could answer, I lifted her under her arms and quickly deposited her on the edge of the tub, just around the corner from the door. I quickly tugged her shorts off and crawled between her legs, spreading them wide as she looked down at me. Her face was positively glowing. \n\n\"After all that worshipping from afar, I think it's time we were properly introduced, don't you?\"\n\nHer clit was clearly visible just above her lips, and I immediately sucked it into my mouth, earning a scream that I was sure would generate some complaints. Her fingers tightened like vise grips in my hair, and I felt her heels dig into my sides.\n\n\"Nice to meet you, too,\" I chuckled. I licked her from top to bottom, starting above her clit, passing over it and down between her pussy lips, dipping inside for a quick taste before finishing with a tongue inspection of her little pink rosebud. She squirmed as I wiggled it around there for a moment before starting back up, but I didn't finish the trip, detouring when I reached her pussy lips. I sucked each of them into my mouth, bathing them generously before switching to the other, over and over again.  \n\nShe was clean shaven except for a small strip of hair just above her clit, and I savored the texture and taste of her soft, smooth skin as I mapped out her most personal of areas with nothing but my tongue and lips. When I pushed into her tunnel, I was rewarded with an instant burst of her nectar.\n\n\"How do I taste?\" she asked with a little hesitation.\n\n\"Fucking amazing,\" I replied. \"You don't know that?\"\n\n\"I've tasted myself once or twice, but no one's ever really enjoyed going down on me like you're seeming to,\" she said.\n\n\"You'll never have to worry about that again,\" I answered. Her breath caught before she could reply. I wasn't at all worried about any implications of permanence in my last statement - I meant all of it and more. But this wasn't the time, so I dove back in with my tongue and two fingers before she could get herself together.\n\nFinally, I sucked her clit into my mouth and pushed two fingers into her pussy, and was rewarded by her thighs tightening around my cheeks as she cried out. \n\n\"Oh, Brad, Jesus - FUCK!\" she shouted. I kept up the intensity and pressure until she finally tugged on my hair.\n\n\"No more,\" she begged. \"Please. Inside, now. I need you.\"\n\nI scooped her up and laid her on her side on the king-sized bed, immediately scooting in behind her. I lifted her top leg, and I didn't even have to guide myself in - my cock already knew its way back home. I pushed all eight inches inside her in one stroke, and she groaned at the intrusion. I cupped her left breast as I pumped in and out of her, and she turned her head to the side to kiss me.\n\n\"You're mine,\" I growled into her mouth.\n\n\"Absolutely,\" she panted back. \"All yours.\" \n\nThere was a vacuum around us - nothing else mattered but the two of us, and maybe the half of the bed we were occupying. I was lost deep in her eyes for a long, long while - it could have been 15 or 20 minutes before she snapped her eyes closed as one more orgasm hit her. That triggered me, and I unloaded deep inside her for a third time. \n\nI don't know who dozed off first, but we were both asleep within seconds, my cock still nestled snugly inside her.\n\n*****\n\nYes, there is one more chapter. Yes, it's been submitted, minutes after the one you are reading right this second, so hopefully that means it goes up the day after this one. Yes, it answers all the questions (I hope, anyway). I always thank my editor, but you should, too - I wanted to cliffhang it, right after Brad figured out who she was. Both she and my beta reader convinced me I would have readers chasing me with flaming pitchforks and Howitzers. When those are the consequences, anything seems like a bad course of action. Hope you enjoyed this one."
    ],
    "authorname": "SpotInTheSand",
    "tags": [
        "brad",
        "kelly",
        "colorado",
        "nicole",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/brads-road-trip-ch-20"
}