{
    "title": "Spell, Crook and Handle Pt. 06",
    "pages": [
        "All characters are 18 years old. A switch of perspective for this part of the story, I didn't want to switch first person narratives and maybe confuse you, the reader. I hope you enjoy as I tie Louis' story to that of another popular character in my universe, Jon Masters. It made sense and this way I can rekindle the Evil Bitch storyline. Feel free to throw suggestions my way or comment and tell me if you like the cross over or not. \n\n*****\n\nSmoke and Mirrors:\n\nThe explosions rocked the facility and Lily took cover beneath her sleeping cot. It wasn't much protection if the ceiling collapsed but it was better than nothing. The lights flickered and went out. Her world was plunged into darkness and silence. She wasn't sure how much time passed but sickly red lights came to life and illuminated the room.\n\n\"Emergency lighting,\" she whispered. \"Where the hell am I?\"\n\nShe waited but her captor never came for her. She crawled to the steel door and reached up for the handle. She hesitated a few times but finally took ahold and twisted. The door opened into a dimly lit hallway. Just like her room the hall was illuminated by the red emergency lights. Lily knelt in the doorway and it took everything she had to get to her feet. She looked around and saw the exit sign at the end of left side of the corridor. She moved as quickly and quietly as she could. The door opened to her touch and beyond that a stairwell. She went up until she saw natural lighting streaming from the window in a door above her. \n\nHeart pounding Lily raced upwards heedless of danger and threw her weight against the outer door. It opened and she was outside! Adrenalin pumping she looked around and raced for the fence line. The sun was low on the horizon as she reached the chain link fence. There was a large rusted sign barely hanging there, three of the four clips that held it had broken. She lifted one corner of the sign up and pulled it towards her, the last clip snapped and she caught the sign. Lily turned it over and read it, Ft. Wood Military Base. Another explosion caused her to turn and see that two buildings were fully engulfed and others were slowly being consumed. It was getting dark and it was bitter cold out. The fire would draw attention and she would be rescued. She just needed to hide until the police or fire fighters arrived. \n\n\"I will survive damn it,\" she snarled and headed for the flames. \n\nThe heat would keep her from freezing and it would be the first place rescuers would flock to. A few minutes later she was close enough to feel the heat of the major fire and her limbs began to thaw and her body quick shaking. She stayed in the shadows and kept her eyes and ears open. A van pulled up and she almost ran up to it but her gut instinct told her to wait and see. This could be her kidnapper returning to finish the job. She crept a little closer as the three men got out. The driver was tall and built like a football linebacker. He had short cropped blonde hair, was good looking and had an aluminum baseball bat in his right hand. The guy that had been in the passenger seat was average height but easily as heavily muscled as the driver and had a long knife strapped to his leg. He looked to be American Indian with an anxious expression on his face. The last guy to step out of the back was by far the most frightening. He was close to six feet with wide shoulders, long dark hair and eyes like a shark, cold and dead. He was the only one carrying a gun. It looked like a 9mm but she wasn't sure she didn't know much about guns.\n\n\"We need to find her,\" the driver said. \"Kill her on sight... we can't let her expose our operation.\"\n\n\"I am not going back to jail,\" the passenger cursed. \"Let's kill this bitch and toss her in the flames.\"\n\n\"You do what you want. But I am going to throw her in the flames and then kill her.\" The man with the dead eyes purred.\n\n\"Let's split up and remember we have maybe a half hour before the fire department gets here.\" The driver told them as they began searching.\n\nLily sat there squatting in the shadows with both hands clamped over her mouth. She didn't dare make a sound or move until the trio were out of sight. She took deep measured breaths to calm her nerves.\n\n'Think, I need to think this through,' Lily thought to herself. 'If I panic I will either be killed or freeze to death. I need to find a weapon and find a place to hide. It is only thirty minutes. This place is huge and time is on my side. They don't look that smart except maybe the guy with the gun. The other two were just thugs but he was scary. The fires were still spreading and she had to take that into account. Good, that is good thinking keeps you from screaming. I need to move. They will be searching and I need to keep an eye on them. I need higher ground. I need to find someplace warm and high up.'\n\nFighting panic Lily moved towards a building near her current position that was mostly intact. It was three stories tall and looked out over the surrounding area. She moved from hiding spot to hiding spot. She kept low and did her best to keep her shadow from being cast by the fire light. The darkness and cold enveloped her as she entered what was once been an engineering building. Lily kept to the walls and headed for the stair well. If she could reach the third floor she could look down on her pursuers. She tried to avoid the broken glass as she slunk forward. It was so damn hard to hear, he heart was thundering in her chest and it seemed to drown out everything. \n\nShe found the door to the stairwell propped open. Had someone been here before her or had it been this way for years? There was no real way of telling. She peered in and up and saw no one and no movement, so far so good. Lily was keeping an eye out for anything that she could use as a weapon but so far nothing. She reached the second floor and again the door was propped open. Ignoring it she went towards her goal and hopefully safety. The stairs were littered with debris of all kinds and she cursed when nothing that she could use as a weapon appeared. The door to the third floor was closed. She pressed her ear to the door and listened. The only sound was the ever present pounding of her heart.\n\nLily opened the door as slowly as she could. The view was one of utter devastation. Debris had been hurled from the building next door had struck the wall facing the burning ruins. The windows had been blown inward and shards of glass glimmered in the pale fire light. She looked around for movement and seeing none crept towards the bank of windows to look out over the rest of the base. The van was still parked but there was no sign of life or rescue yet. Lily squatted down and took in her surroundings now. One door was labeled Lab and that gave her hope of finding some sort of make shift weapon. Her muscles ached as she continued low to the ground towards the engineering lab. \n\nThe door to the lab was unlocked and she opened it slowly. She peeked in and it was empty. She slipped inside and closed the door behind her. She stood up and rubbed her legs as she examined her surroundings. Got to hand it to the military, when they abandoned a base they were thorough. There were a few lockers still bolted to the walls but their doors were open and empty. The teacher's workspace was still intact and on top of that was three samples of concrete with a single piece of rebar lodged into it.\n\n'I bet it would hurt like a fucker to be hit in the knee or upside the head with that,' she thought as she worked one of the rebar free of its concrete prison. \n\nFootsteps outside alerted her that she wasn't alone. She dropped down placing the workspace between her and the door. She looked around and saw something sticking out behind one of the lockers and the wall. Lily took a deep breath and reached out and snatched it from behind the locker. She returned to her hiding place and looked into her hands at the object, it was a sheathed knife. The leather sheath appeared to be either snake or alligator skin. She rubbed the dirt and dust from the knife. The handle appeared to be dark animal horn that had been lovingly crafted. Lily pulled the knife free and stared at the gorgeous patterned metal blade. The shape of the blade was unusual, instead of being flat on one side and round on the other it was all sharp angles.\n\nShe turned it over in her hand and it looked wicked sharp. As she returned it to its sheath something fell to the floor, it was a note. Lily picked up the note and opened it. Whoever had made it had written the note to his sister of all people.\n\n'Dear Sis, I have been studying hard to make you proud. I know you told me to be good and keep my head down but I had to make this for you. I have been reading everything I could on metallurgy especially how the Japanese forge their swords. Did you know they use two types of steel? One steel is really hard and the other much softer. It is this ingenious combination that makes their blades for strong yet flexible. If you are reading this you are holding a 'Tanto' in your hands. I made this after hours in the metallurgy lab. It took days to make and I hope you like it. I had to hide it in a place no one would ever look to keep it safe. I am shipping out soon and when I get back I will give it to you. This will keep you safe when I can't. Your Loving Brother, Thomas.'\n\nLily blinked away the tears and wiped her eyes. She tucked the knife into the small of her back and promised she would find who this Thomas had been and return the knife to his sister. I am going to survive and I will kill anyone that gets in my way. The fear fell away in a wave of rage that broke the chains her captor had placed on her. Her thoughts were cut short as the door opened and Lily listened as his footsteps crunched on the debris. She shifted as he moved into the room. She kept the workspace between her and her pursuer. \n\n\"I am going to kill you little rabbit,\" the man said. \"I know you are here somewhere I tracked you.\"\n\nIt was the American Indian and he was following her footprints in the dirt. Lily drew the knife out and clenched it tight in her left fist. There was a metallic tapping on the surface of the workspace now. He had taken out his own knife and was trying to rattle her. It was working. She had never hurt anyone in her entire life. The man dashed to one corner outmaneuvering her. He glared down and licked his lips.\n\n\"You can make this easy and I can kill you quick. Maybe you want it drawn out and painful... how do you want to die?\"\n\n\"Fuck you,\" Lily spat her knife hidden behind her back.\n\n\"Slow and painful it is,\" he said closing the distance. \"I was hoping you'd put up a fight.\"\n\nShe waited until he was in range. His knife flashed down quicker than she expected and drew a livid line down her leg. The pain was intense but bearable for now. She watched as he licked her blood from his blade. He made the mistake of looking down at his knife and that's when she struck. The thrust was powered by her fear and rage, it hit its mark. The Tanto cleaved his heart piercing flesh and bone easily. The man fell dead almost yanking the knife from her grasp. She wiped her blade clean using the corpse's shirt. Wincing in pain she examined her own wound. The cut was precise and shallow. He had meant what he said about making her death slow and painful. The second rush of emotion crashed into her and she wept about what she had been forced to do. She was a killer. No, she was a survivor! \n\n'Stop it! There are still two more of them and still no sound of sirens approaching. It is time to channel your internal Sigourney Weaver, it is time to unleash the Bitch!' Lily thought as she hardened her heart to her situation.\n\nShe carefully sheathed her weapon and crept to the open door. She looked around and something reached the low end of the range of her hearing. Lily headed in that direction and by the time she reached the bank of windows again, the sound had become quite loud. What had begun as a metallic creaking was now a shriek of straining metal. \n\n\"What the hell is that,\" she said as she looked down into the blazing inferno. \"OH FUCK!\"\n\nLily raced away from the wall as the gas main, which had endured an explosion and furnace-like heat for so long, surrendered and erupted. Lily's world went white as the gas explosion rocked the entire area. She was hurled by the concussive wave that preceded the tower of flame. She was prone and her ears were ringing as she opened her eyes and looked around. In front of her the walls, ceiling and floor were cracked. Behind her that side of the floor was broken, burning and open to the sky. The lab she had been in was gone. The gas explosion had obliterated it along with much of the structural support for that side of the building. The roar of the fire was mingling with a deep guttural groan coming from all around her. \n\nLily moved her jaw and rubbed her ears to try to get rid of the constant ringing. She shook her head as she got to her feet. She checked to make sure the knife was still there. Comforted by the weapon she made her way to the other side of the floor. The creaking and groaning grew worse as she looked for the other stairwell. She reached the stairs and sat down as a new sound filled the air, sirens. That didn't mean she wasn't in danger it just meant they would be more intent on finding her. She got up and fought the dizzy spell. Lily reached up and came away with blood from her ear. She snapped her fingers on both sides and was satisfied she could still hear. \n\n\"Time to get the fuck out of Dodge,\" she moaned as she made her way down the stairs. \n\nShe heard both police and fire truck sirens. Hope welled up in her as she reached the second floor. She was rounding the corner to the lobby when she saw two silhouettes. Lily drew her knife and held it out in front of her.\n\n\"Stay the fuck away from me,\" she screamed.\n\n\"Hey, it's okay we are police,\" the figure on the left said.\n\n\"Put down the goddamn knife,\" the figure on the right ordered.\n\n\"Pinkerton, stand down this is the girl that has been missing,\" the officer on the left cried out.\n\n\"It's you,\" Lily said recognizing the officer on the right. \"You were in the van with the others! You're a fucking cop?\"\n\n\"I told you bitch, put down the knife,\" the other cop repeated as he cocked his weapon.\n\n\"Pinkerton, lower your fucking gun,\" the first cop said drawing on his partner.\n\nLily let the knife fall from her fingers and the motion was the first domino to fall. The cop on the right fired, his bullet striking her in the chest. The second cop squeezed the trigger killing his partner instantly. The officer called out for paramedics and announced an officer down. The cop moved over to Lily and looked at her wound. He told her over and over again, it is going to be okay. We got you... hold on... but the darkness of pain and blood loss won out. Lily lost consciousness.\n\nThe Other Side:\n\nThere were flashes of consciousness but they made little sense. There were lights and voices and then darkness again. Lily's eyes fluttered open and flinched as she sat up and cried out. She was in the hospital. There were IV's and monitors and a lot of annoying beeping sounds. \n\n\"It is okay,\" Louis said as his hand gripped hers.\n\n\"How long,\" she asked.\n\n\"Don't worry, you are safe, they got them. They are all dead.\"\n\n\"I got one,\" Lily said her emotions rising to the surface.\n\n\"Good for you,\" he said. \"Mom and dad are outside. You are still in the ICU. But the bullet missed a lot of vital stuff. A collapsed lung and a little hearing loss from the explosion but we are all behind you.\"\n\n\"Oh, is that all,\" Lily said smiling. \"Ow... it hurts to smile.\"\n\n\"Get some rest and we can talk later,\" Louis said as he got up to leave.\n\n\"NO... stay with me, talk to me at least until I fall asleep.\" She said her fingers clinging to his hand.\n\n\"Sure,\" he said. \"So where did you get the knife?\"\n\n\"I found it,\" Lily said and told him all about hiding, spotting the knife behind the locker and the letter. \"I want to find her. I want to give it to her.\"\n\n\"If you need any help,\" Louis offered and she smiled. \n\nThey talked until she drifted back to sleep and he watched her for a few minutes before leaving her room. Friends and family were gathered in the waiting room. His expression was grim and Gabrielle hugged him and promised him the full might of the Ordo Hereticus. Louis nodded and told everyone gathered that she needed rest right now. Louis and Gabrielle sat off by themselves and had a council of war. He watched his parents head over to Lily's room. Her mother was walking by her husband's side as he directed the wheel chair forward. \n\n\"Have you read her statement,\" Louis asked.\n\n\"That one word disturbs me, organization,\" Gabrielle said. \"The one that shot her was a fifteen year veteran of the police force. That is very unsettling.\"\n\n\"Have they identified the body in the lower level?\"\n\n\"Damien Vitale, age 37 and a career over the road trucker,\" she said frowning. \"We are cross referencing his routes with murders. I believe we will find some connections.\"\n\n\"How did he die,\" Louis asked.\n\n\"Cyanide, self-induced in a gelatin capsule,\" she said. \"He had time to make his way to an incinerator located near his body. It appears he miscalculated how long it would take for the capsule to dissolve. I am assuming he was going to burn his body beyond recognition to conceal his identity.\"\n\n\"Why would he do that? If he was hell bent on suicide why not kill Lily and then set off the explosives. If he was at ground zero we never would have found the body. Something is not right here.\"\n\n\"His family claimed the body last night. Ironically they are going to have him cremated.\"\n\n\"Family, after all he's done his family came for him? You just never know.\"\n\n\"What is really bothering you,\" she said taking his hand.\n\n\"I feel, I feel like the other shoe hasn't dropped yet. This group isn't done yet.\"\n\n\"We will be there waiting for them Louis. You and I will be there.\"\n\nThey returned to the main group and sat and talked. The feeling of impending doom never left him. What was the watcher doing while this thing blew up in its face? Was it done? No, it would still seek out retribution for the death of the First. Had they been lovers or were they simply family? There was no telling and it hurt his head to think about it. The others were discussing food while Louis' thoughts wandered down dark avenues and morbid contemplations. Iyaden appeared, flanked by two Inquisitors and motioned for him. It was time to go. It was time to train. The next time the Watcher appeared he was likely to perish, but damn it he would put up one hell of a fight!\n\nThe four of them went to another part of the hospital. They had made an agreement with Louis' physician in regards to his unorthodox training. He would be monitored while he trained. The sensors were quickly in place and he lay down. Iyaden would be seated next to him for the thirty minutes while the doctor monitored his vitals which included brain activity and heart rate. Louis and Iyaden closed their eyes and it began.\n\nHe was standing outside the concrete bunker. The solid steel door opened automatically and he entered. The interior was bleak barren walls with electric lights spaced evenly. The training room was stockpiled with a variety of melee weapons as well as firearms. He began with a breathing exercise to oxygenate his blood and get his heart pumping. He took out the Bo Staff and warmed up with that. Iyaden watched from a corner of the chamber. She was sitting cross legged observing his speed, accuracy and technique. If he performed well she would remain motionless. However, if his form proved sloppy or inadequate she would 'intervene'. The first few sessions had been brutal and that inspired the observation of a physician. Even though the training and this entire environment was virtual via his neural implant the impact it had on his body was quite real. ",
        "Louis flawlessly performed ten weapon katas and bowed in Iyaden's direction. He took a short breather and picked up matching gauss pistols and thumbed off their safeties as targets appeared down range. He held one gun behind his back and he fired with his right hand. Ten shots found their mark and he switched hands and nine struck true. Her reaction was fierce and without hesitation. The lash of psychic energy struck between his shoulder blades and registered on the monitors. Louis returned to his primary hand and once more fire ten precise shots. His second set with his off hand was better this time. He returned the gauss pistols and moved onto the next regiment.\n\nWhat was hours of work for Louis was mere minutes in meat time. He was just finishing up with his spell work and Iyaden was playing a very active roll now. She would conjure enemies and he would have to adapt to them and fire off the proper spell for a one shot kill. He never knew what was going to appear and she was highly unpredictable. One hundred creatures later and Louis was kneeling and panting from the unrelenting onslaught he had endured.\n\n\"Impressive, you made it all the way through a full century,\" she said in her offhand praise.\n\n\"I am so done,\" he wheezed. \n\n\"Are you,\" she said as something stirred in the shadows.\n\n\"Oh holy hell,\" he cursed and staggered to his feet.\n\nThe thing was barely a silhouette and it was the stuff of nightmares. It was not in any of the books he had read and something Iyaden had never summoned it's like before. He had no idea of its strengths or weaknesses. It radiated hate and the air crackled around it. Louis called a Bo Staff to his grasp and wrapped it in Astral energy. The blast of raw energy lashed out towards him but he managed to deflect the worst of it and absorb some it for healing. The thing was testing him and he knew it. Louis fired off a spell of his own that sent the thing tumbling backward. While it had struck dead center the creature recovered almost instantly. \n\n\"Are you fucking kidding me,\" Louis moaned still feeling the fatigue and drain tugging at his body and his mind. \n\nThe next attack came without warning. The psychic assault was powerful and brutal. It was trying to take over but Louis had been trained to resist such attacks. He visualized an adamantine sphere around his mind and managed to shove the invader out. The thing balked and he could sense its surprise. It was the perfect time to strike. Louis raised his Bo Staff sword-like above his head and teleported to within striking range. The overhand strike at the creature's head should have crushed its skull but the thing imploded once the outer shell had been breached.\n\n\"What the fuck was that?!\"\n\n\"That was a nightmare older than dreams and thankfully as rare.\" Iyaden replied. \"You defeated it handsomely. That is enough for today.\"\n\nThe neural link was disengaged and Louis opened his eyes. He sat up slowly and winced at the aches from his complaining muscles. The doctor moved next to him and handed him some medication for the pain. \n\n\"Your mental activity was off the charts, again. There doesn't seem to be any long term adverse effects from your implant. While your heart rate was elevated it never reached a dangerous level. I don't know what you are experiencing while the implant is active but it is having some serious impact as far as muscle development and burning calories. I want you to rest for at least half an hour before you are back on your feet.\"\n\nLouis nodded and drank the three water bottles that were by his bedside. Iyaden sat silent watching him intently. He raised an eyebrow and shrugged. She smiled and let him rest. He just shook his head and closed his eyes. He let his mind relax and drifted. Perhaps it was the last beastie that Iyaden had conjured or maybe it was just random. The nightmare struck out of nowhere. He was in the first chamber of the Black Cathedral with Yig and his children. His friends were with him and Tatiana was asking him to follow her.\n\n\"NO... I am not going to let you murder my friends,\" he snarled.\n\n\"You can't save them, they are already dead,\" she said and he was suddenly in the room with the pool and waterfall. \"You can never save them Louis.\"\n\nThe sound of gunfire and screams filled the air. The sounds faded and he was elsewhere as quickly as he had entered the room with the pool. It was dark but he felt some kind of force pushing against his body. He was hovering and as he adjusted his eyesight he could make out currents of energy below him. \n\n\"What the hell is going on,\" he shouted.\n\n\"Just checking up on you Louis,\" Yog-Sothoth whispered. \"You've been a busy boy.\"\n\n\"Is that you demon god?\" Louis asked. \"I thought you lost interest in me.\"\n\n\"Your encounter with the Watcher has sent ripples in all directions. I have been busy examining the permutations and I can tell they are quite interesting.\"\n\n\"Where am I,\" he asked.\n\n\"A memory,\" the entity replied chuckling. \"This place holds a special place for me. I wanted to share it for reasons of my own.\"\n\nThere was a flash of light in the darkness. A short time later there was a kind of breeze that washed over Louis. The light grew in intensity and the wind became a steady thing. As he stared out at the sphere of light there was movement in the surrounding blackness. There were things swimming in that dark ocean of space. It was impossible to guess their size until one of them crawled between Louis and the light. If this thing was in fact a biological entity it was in the scale of a small planetary body. Louis tried not to let the scale of the thing impact him but when it stopped and looked at him. The full weight of its gaze was upon him and Louis screamed. \n\n\"LOUIS, it is okay Louis,\" Iyaden said. \"It was just a dream.\"\n\nA nurse raced into the room and was soon followed by his doctor. They looked at his EEG printout and the doctor's expression was grave. The neural activity was dangerously high and in areas that had no reason to be active during a dream. Iyaden seemed unconcerned about the high activity and told the doctor so. \n\n\"That is to be expected,\" she told him.\n\n\"How long have you been having these nightmares?\" The doctor asked ignoring her.\n\n\"A few years now,\" Louis said placating the physician.\n\n\"YEARS... dear god,\" the doctor said as he began ordering more tests for abnormal brain activity.\n\nLouis shrugged and took Iyaden's hand telling her it was okay. She smiled and yielded to his will on this point. She let go and told him she would inform his family and the others about the tests. It was hours later that Louis returned to his family. He was wearing hospital scrubs and being pushed along in a wheelchair. They had heard about the tests but his change of garb and the chair had thrown them. He told them the outcome of the tests and they relaxed. There would be ongoing scans over the next six months to monitor the impact of the neural implant. \n\nGabrielle had sent out for food and Louis dug in greedily. He was always hungry after training as he tended to burn a ton of calories and the results were clearly showing. He was exchanging fat for muscle to an almost insane amount. Louis was six foot and had been around two hundred pounds but now was closing in on one seventy. He liked the new shape as did most of his lady friends. \n\n\"So what are we going to do,\" Louis asked between mouthfuls of a greasy cheeseburger.\n\n\"What can we do,\" Gabrielle asked.\n\n\"I have Feng running phone calls at the moment. We have four members of this group and we have no idea how large or well-connected it its. I still feel we are missing something.\"\n\n\"Like...?\" Louis' mom asked.\n\n\"Well there is something that you and one of these guys has in common,\" Inquisitor James added from the sidelines.\n\n\"What is that,\" she asked as everyone looked at him.\n\n\"This Damian Vitale, the guy dead in the underground, has an identical twin brother Simeon.\"\n\n\"Wait a fucking second, why am I just now learning about this?\" Louis asked.\n\n\"I told you he had family, his brother was the one that collected his body for cremation.\" Gabrielle said.\n\n\"Tell me about this Simeon Vitale,\" Louis asked. \n\n\"He is the surviving partner in Vitale Trucking,\" the young Inquisitor said. \"The trucking company was started by one Julius 'Shadow' Vitale. Julius has an extensive criminal record. According to police interviews Simeon has a solid alibi for the time Lily was kidnapped and held while Damian does not. They have written him off as a suspect.\"\n\n\"So the brothers ran the company together?\" Louis asked but James shook his head.\n\n\"No, Simeon ran the office while Damien was still an over the road trucker. They could easily trade places fooling the office staff. The photos of them in the office show a striking resemblance between the twins.\"\n\nLouis pondered a few different scenarios and all of them ended with kicking down the door to Vitale Trucking and kneecapping the surviving brother before torturing him to death. Gabrielle saw his expression and recognized it instantly. Her course of action was clear. She leaned down and whispered naughty things in Louis' ear until he smiled. Then the scream came from Lily's room and everyone rushed in. She was sitting up clutching her chest and covered in sweat. Louis stared at her and clenched his teeth. He knew what she was going through and didn't envy the long road ahead of her. \n\nIt was Iyaden of all people that intervened. Once the nurses had attended to Lily she took a place next to her bedside. Louis told everyone to give them some time alone and they left. Lily and Iyaden talked for a short while about what she had been through.\n\n\"You will be alright. Your family is here and they will support you no matter what.\"\n\n\"I know, I just feel like my life has been stolen from me. I will always be looking over my shoulder in fear.\" Lily said. \"I fucking hate it! I don't want to live in fear.\"\n\n\"I can help, if you let me,\" Iyaden offered.\n\n\"Anything,\" she said. \"I will do whatever it takes to get passed this.\"\n\n\"All you need to do is relax and I will do the rest.\"\n\nIyaden reached out and laid her hand against Lily's cheek. Lily's eyes closed as the connection was established. Her expression relaxed as Iyaden entered her thoughts. The last three days replayed over and over again as Iyaden witnessed the blaring siren, blinding lights and something else. There was something subtle at work. It was at the very edge of Lily's perception. Woven into the siren was a message repeated over and over again. Iyaden peeled away the layers of noise to retrieve the obfuscated virus.\n\n\"Kill Louis,\" the voice said. \"Kill him. When you see the sign you will kill him.\"\n\nThere buried in the flashing lights an image. A design of intricate cunning that would trigger Lily to attack and kill her brother, this was truly insidious. Iyaden smiled and continued to explore Lily's memories and discovered her hidden feelings regarding Louis. The time they had spent together under the influence of the succubus and the lasting impression it had left. She would use that to manipulate what was already in place. While Lily drifted in a peaceful limbo Iyaden dug deep and rewired both emotions and bonds. Lily would no longer fear her captor and his allies. She would become a hidden weapon against her brother's enemies. \n\nLily's eyes opened and her demeanor seemed improved. She was smiling and appeared at peace with what had happened. The pair talked for a long time and Iyaden was quite pleased with her handiwork. She told Lily to get some rest and she could talk to her family in the morning. Everyone was waiting patiently as Iyaden came out and pronounced Lily in a much better state of mind. The relief was clearly evident and Louis let out a sigh of relief even as his parents began talking and giggling. He watched as his parents left together and wondered what they had in mind. Everyone was in a better place once Lily's mental health seemed to have stabilized and that is all that anyone could ask. \n\nLouis watched his mom and dad head off together. They were smiling and mom actually giggled. What the hell was that all about? Were they just relieved to know that Lily was going to be okay? He knew he felt a huge weight lifted off his shoulders. He might just take Gabrielle up on some of her suggestions that she had whispered into his ear earlier. One was particularly interesting and involved Iyaden but he was unsure if the other was into women. I guess there was only one way to find out. He walked up to her and he paused. She was his friend, mentor and lover but for some reason he felt uncomfortable about asking her. He hmmed and hawed as he tried to find the right words. Iyaden found his awkwardness amusing and a little cute.\n\n\"Why not try just saying it,\" she said smiling.\n\n\"I uh... have you...\" he began and faltered as his cheeks burned.\n\n\"Have I what,\" Iyaden asked as Gabrielle looked on grinning fiercely.\n\n\"Ummm... I was just wondering,\" Louis stammered and stopped again.\n\n\"This is going to take a while does anyone want a soda?\" Gabrielle asked winking at Louis.\n\nLouis tried half a dozen times and was simply unable to ask Iyaden if she liked women. He growled and stomped off towards the elevator, Gabrielle and Iyaden followed him. The three of them took it down to the lobby listening to 'I kissed a girl and I liked it'. Louis threw up his hands and turned to face Iyaden. He opened his mouth and the elevator door opened on the lobby. Frustrated he stormed off again. The girls were giggling and laughing as they followed him. While Louis and Gabrielle bought soda Iyaden drank only water. She didn't like the taste of carbonated drinks and thought the toxic nature of the drink was ill advised. \n\n\"You would be better placing this noxious substance on the edge of a blade to poison it.\"\n\n\"Make mine water,\" Louis said changing his order.\n\n\"Say what you will, I need my Mountain Dew,\" Gabrielle said defiantly. \"Oh hey, Iyaden...\"\n\n\"Hmmm?\" She replied as she unwrapped the plastic seal on her water bottle.\n\n\"Have you ever slept with a woman,\" Gabrielle asked. \n\n\"Do you mean sex,\" She asked pulling the nozzle up so she could drink. \"I have had quite a few partners that were female. It is quite refreshing to be honest. Men can be so damn needy and awkward. Louis is a breath of fresh air on that front. Now he knows how to make a woman scream and rattle the windows as he pounds her relentlessly.\" She stopped and looked around as everyone was silently looking at her. \"What?\"\n\n\"Let's go back up and see how Lily is doing,\" Gabrielle said and they headed for the elevator.\n\n\"Louis, you were going to ask me something.\" \n\n\"Never mind,\" he said biting back a few choice curse words.\n\nThe trio returned to the waiting room while Lily slept recovering as much from the gun shot as from the emotional and mental manipulation. It would be months maybe years for a full recovery. She may be haunted by the psychic trauma for the rest of her life in one form or another. Louis stared out one of the windows as conversations went on around him. There were unanswered questions that irritated him. Why had he triggered the explosives? Was his brother involved in this? How many people were involved in this? Feng was still running phone records, email accounts and work histories. If there were any connections she would find it for him. \n\n\"You are worlds away Louis,\" Iyaden said drawing him back to reality. \"You are troubled?\"\n\n\"There are questions that demand answers,\" Louis growled. \"I just...\"\n\n\"CODE BLUE... CODE BLUE...\" came over the speakers and hospital staff rushed with a crash cart to one of the nearby rooms. \n\nEveryone got to their feet and stared as the nurses and doctor headed for one of the rooms. Louis made a face, wasn't that room empty. A robed figure appeared and it was his mom. What the hell was going on and why was she dressed differently. Louis walked over to his mom and she was crying. He peeked in and there was his half-dressed father being worked on. Louis turned to his mother and she blushed.\n\n\"Whose idea was this,\" he asked.\n\n\"Your father's,\" she replied. \"He figured if something went wrong we were already at a hospital. It has been so long Louis.\"\n\n\"I understand, I am not judging you,\" he said.\n\n\"The dreams just aren't enough,\" she whispered in her son's ear.\n\n\"Mara said you had been sharing,\" Louis said.\n\n\"We are still sisters,\" mom said blushing.\n\nLouis took her hand and held it as they continued trying to revive her husband and his father. Six minutes, that's all it took for their lives to change so drastically. They tried so very hard but his heart was so weak and he passed with the sound of shouting, machines and curses. Louis wanted to scream, was it worth it, be he couldn't. She loved him still as she sat by the empty shell and wept. Lily had been snatched from terror and death only for his father to die in the arms of his loving wife. Louis looked at them and despite the pain and anguish his father's life had ended making love to her.\n\n\"You lucky bastard,\" Louis whispered and found a smile buried beneath the agony. \"She loved you to the end.\"\n\n\"I am so sorry Louis,\" Gabrielle said so softly it almost hurt.\n\n\"He died in her embrace,\" he said equally tender. \"Is that so bad?\"\n\n\"You think he meant to die,\" she asked.\n\n\"I don't think it was intentional,\" Louis replied. \"But I think he measured the risks.\"\n\nLouis took it on his shoulders and told Lily. He held her as she cried but at some point she began giggling. They wiped away their tears and began sharing stories and memories of the man they had called father. Their mother joined them and they all sat there, the three of them and laughed and cried and did what family did at times like this, survived. It wasn't fair but life isn't fair it is just. Everyone born must perish and a simple man's time had come.\n\n\"I am going to London,\" Louis said at the last. \"I want to meet this impossible man that is responsible for me being here.\"\n\n\"I can't go,\" his mother said. \"I just can't.\"\n\n\"I am in great hands,\" Lily said. \"Iyaden wants to help me. I am safe thanks to you Louis. If it wasn't for you I'd be dead.\"\n\n\"What makes you think that?\" Louis asked. \"We never found you.\"\n\n\"It was something he said... before, well before the explosions began. He had switched on the speakers and I could hear him arguing with someone. It was a stark and terrible voice that demanded my death, a voice so dark and so cold screaming for my life. The man that called himself the Artist denied him and said that the day had been prepared for. A moment later the first detonation occurred and I climbed underneath the cot to hide.\"\n\n\"How does that have anything to do with me?\" Louis asked.\n\n\"He mentioned your name. The man demanding for my death said you had talked to him about the Artist. He had said that the Artist was meticulous. He wouldn't kill me because he would not be rushed. The other went into a rage when the Artist said 'Louis understands me'. After that he refused to lay a hand on me. Louis, you saved my life!\"\n\n\"I don't know what to say?\"\n\n\"Promise me you will never stop until you get all the answers you seek. There is something inside of you that needs to see this through.\" Lily said smiling.\n\n\"I promise.\"\n\nWind, Sword and Time:\n\nThree months had passed since his father had died. Louis had mourned the man that had raised him but now it was time to get the first of many answers. The private jet landed at Heathrow Airport at four in the morning. The limo was waiting for Louis and took him to the flat he would be renting while staying in England. It had two bedrooms and looked out over the Wolf and Hound Pub across the street. The elderly landlady, the Widow Beatrice Hyde White, was thrilled to have a famous young man like Louis staying at her flat. While meals were not included in the lease she had given him an open invitation for tea.",
        "Two suitcases and one backpack later Louis had all of his things carried to the second floor. While he unpacked he heard the Widow moving down below. The last of his clothing was put away when a knock came at the door. Louis opened the door and the silver haired insomniac greeted him with a hot cup of tea.\n\n\"You must be Louis,\" she said handing him the cup.\n\n\"Thank you Mrs. Hyde White,\" he said taking the tea from her.\n\n\"I was going to make a bite of breakfast if you are interested.\"\n\n\"That would be lovely,\" Louis said following her downstairs.\n\nIt was still dark out as they sat down to a light meal and a deep conversation. The Widow was very well versed in history as well as archaeology. They talked until the jet lag hit him between the eyes. He yawned and she just smiled and wished him pleasant dreams. He put Feng on watchdog mode and climbed into bed. He kicked off his shoes and plopped down onto the bed. He was too damn exhausted to get undressed. He closed his eyes and that was it. He dropped off and fell into the abyss. \n\nHe was hungry since he hadn't fed in a week and he was feeling the repercussions. Was it withdrawal symptoms or something more serious? He decided it was a good idea to not push it since he had business in London. He camouflaged his astral signature and drifted upwards to seek out his prey. When he first began using astral projection he was clueless, clumsy and careless. He had Iyaden to thank for the level of skill he now possessed. He had gone from the Goodyear Blimp to a gnat on ye olde astral radar. Louis cast his net and found a very potential target in the greater London area. He shifted to her position and hovered above her bed. \n\n'Goddamn, fucking jackpot first time out,' Louis thought as he reached down and touched her forehead.\n\nHe was standing in the London underground, a tube station by the looks of it. She was standing with a small crowd and he could pick her out easily. She was the one with the straight black hair that fell to her shoulder blades and the round ass that made the short skirt look like a fucking dream. She had on a violet mesh top with a black bra underneath and six inch stiletto heels. Louis walked up behind her and brazenly cupped her tits. Instead of crying out she ground her ass against his groin. \n\n\"I was hoping somebody had the balls to do that,\" she purred.\n\n\"This is just the beginning,\" he growled in her ear. \"I am going to fuck you until you can't stand up for a week.\"\n\n\"Oh god I hope so,\" the woman moaned.\n\nLouis grabbed the mesh top and tore it in half. The two halves drifted down and one half fell onto the train tracks below. The girl reached up between those amazing tits of hers and unhooked the bra. Louis' hands cupped her naked flesh and they both moaned. He thought her ass had looked fine but her tits were perfection itself. They were at least a D cup, full round and topped with half dollar sized areoles. Her nipples were already hard as he began caressing them leisurely. He was in no hurry and apparently neither was she.\n\n\"I am gonna lose the panties so whenever you feel the urge, slide that fine cock of yours inside of me.\"\n\n\"Good to know,\" he replied as she wiggled out of said black panties. \"You like to suck cock I hope.\"\n\n\"MMMMMM, boy do I,\" she said with a giggle.\n\nThe panties joined the one half of the mesh top on the ground. Louis growled in her ear as he spun her around to face him. He took ahold of her waist and lifted her up so that her pussy was eye level. The girl placed her legs over his shoulders and he began licking her tight little coin slot. Her squeals of delight were muffled by her thighs over his ears. When his tongue snaked deep inside her soaked cunt her voice went up a full octave. Her thighs clenched around his head as she got close to climaxing. \n\n\"I am close lover,\" she growled as the tip of his tongue hit her womb. \n\nThe rest was a bit incoherent as he held her there for a count of three body shaking orgasms. Instead of setting her down on her feet he simply inverted her so that her head was where it needed to be. His physical strength had grown quite noticeably since he began his training with Iyaden. The girl eagerly took half his cock between her lips with little hesitation. She was an enthusiastic little cocksucker and that was a very good sign for things to come. She seemed as adept inverted as she must be right side up. The crowd watched the pair as they played openly. \n\nA sudden rush of hunger roared through Louis and he urged her on by embracing her with the dark magic. The girl shoved her head forward taking him to the root in one smooth motion. He cried out as her tongue worked the head when she pulled her head back. He wanted to impale the little slut right then and there but found the fortitude to wait. He was close to his climax and she showed no signs of slowing down. Could she swallow inverted as she was? He was about to find out. Louis cried out as she drank his seed. \n\n\"Ta da,\" she said quite pleased with herself. \"Bet you didn't know I could do that.\"\n\n\"I got one for ya,\" Louis said as he lifted her so that she was right side up, pressed her back against one of the stone pylons and slid his cock into her all in one smooth action.\n\n\"Holy... SHIT...\" she cried out as he began moving.\n\nHe kissed her as he began hammering away. She kissed him back and as their tongues dueled his cock reached unplumbed depths. She was definitely not the girl next door. She was a fucking pro and that became apparent when she began squeezing him with her internal muscles. The dark magic gripped her serenely as Louis began to feed. It was just a trickle at first but the longer they fucked the more of her life that flowed into him. As the circuit grew stronger the more climaxes wracked her body. \n\nLouis dropped her to her feet. He spun her around and impaled her from behind. They both cried out as he jackhammered her tight little pussy. Louis took a fistful of her hair and pulled her head back. He used that hair for leverage as he slammed his hips into her. The girl's eyes rolled up in her head as a massive chunk of her life detached itself and she came hard enough to milk an orgasm from him. Louis yanked free of her and watched as her knees gave way and she fell to the ground.\n\n\"Oh shit no,\" he said. \"Please be okay, for the love of god, please be okay.\"\n\nShe wasn't of course, he had taken far too much of her essence. Fuck, what a tragedy for his first day in London. He cursed as he slipped free of her coma. She might recover, heavy on the word might. Chances are she would never wake from the dream he had locked her in. Louis opened his eyes and tears streamed down his cheeks as he sat up. It was his fault for not feeding more regularly. He had maimed another one. He pulled his knees up to his chest and sat there for a very long time.\n\nAstral projection was a strange and ludicrous thing. The flow of time was as unpredictable within the confines of that strange dimension as the realm of dreams itself. Five hours had passed since he closed his eyes and it felt like mere minutes. It was the diametric opposite to the effects of the neural implant. Louis resigned himself to continuing on with his meeting at the Numenor manufacturing plant. He stripped down and kept Feng on watch over his body armor as he showered. He washed his hair, shaved and even considered a haircut. He glanced in his closet and chose the gray suit with the dark blue tie. Kat had given him the suit so they could go out to a particular restaurant. He dressed and called for a cab. As Louis walked outside a limo pulled up and a familiar woman opened the door for him.\n\n\"Sora, it is good to see you,\" he said and she smiled.\n\n\"Louis-san it is good to see you too,\" she replied.\n\n\"How the hell did you know when to pick me up,\" he asked as slid next to Kat.\n\n\"Feng told me you were in the shower,\" Kat purred in his ear. \"I wanted to surprise you. Surprise!\"\n\n\"It is so good to see you,\" he said as Sora closed the door and the limo headed towards the plant.\n\n\"I stayed away,\" she said. \"I am sorry about your dad. I wanted to go to the funeral but I just wasn't sure.\"\n\n\"The flowers were gorgeous,\" Louis said. \"Orchids, but I don't know the type.\"\n\n\"I picked out a rare variety. They are called Lucifer's Orchid by the gardener. I was told they only grow where ley lines cross, if you believe that sort of thing?\"\n\nThey chatted a bit and finally addressed the reason for Louis' visit to London. Kat knew the man that he had come to see and she doubted he could possibly be Louis' biological father. They pulled into the parking lot of the plant and were greeted by the senior staff and chief among them Jon Masters. He looked so damn young, hell he looked younger than Louis. He couldn't possibly be the man Mara had been talking about though Louis could see why she would think so. There were certain traits that he had seen in the mirror. The deep set eyes, the general skeletal build, the nose was pretty close and that chin was dead on. All that proved is that they could be related.\n\n\"Finally,\" Jon said and shook Louis' hand. \"We meet in the flesh. My staff and I are thrilled to finally meet you. The suggestions you have sent have been key to our success here. Come on in and we'll give you the nickel tour.\"\n\nJon was all hands and gestures with tons of pointing and introductions as they passed through that place. Jon and Louis ended up alone in Jon's office. Jon seated in his comfy chair and Louis standing looking at all the little knick knacks. They talked about Gabrielle and her brain storms that redesigned a dozen popular products between London and Berlin. \n\n\"She does like her grenades,\" Jon said. \"I take it she likes blowing shit up.\"\n\n\"Yep, like a kid with really big fire crackers. Whoa is that what I think it is?\"\n\nLouis picked up the odd figurine crafted of some sort of gunmetal gray material. It had three tentacle-like limbs, each ending in three pseudo fingers, the thing had three eyes equally spaced around its pyramid shaped body. He turned the figure around to view it this way and that. There was something odd about the material, it felt cold and unyielding and yet.\n\n\"What is this thing made of,\" Louis asked.\n\n\"Meteor,\" Jon said. \"So Kat said you wanted a quiet face to face, what's up?\"\n\n\"My dad passed away,\" Louis said as he set down the figure. \"My crazy aunt Mara said... did I mention she was crazy... okay... she believed you were my biological father.\"\n\n\"OH her,\" Jon said smiling. \"I ran into her a few years back and yeah she is a little different. How about you come by the house for dinner and maybe we can compare family trees.\"\n\n\"Perhaps a DNA test,\" Feng said appearing next to Louis. \"I could sample each of you and then compare?\"\n\n\"Is that you Feng? You are looking good.\" Jon said smiling at her Talon avatar. \"I suppose you could do that. Oh wait, did you get the latest upgrade?\"\n\n\"My last upgrade was received seventeen days ago.\" Feng replied.\n\n\"Hold on a sec,\" Jon said and his fingers danced in the air as he accessed his own virtual network. \"There you go and you should be getting it about...\"\n\n\"Downloading,\" Feng replied as her gold eyes went out of focus for a moment. \"Reconfiguring holographic emitter... restructuring power matrix... rebooting...\"\n\nFeng disappeared and reappeared ten seconds later. She was all smiles and touching her arms and legs. She was hopping in place as Jon and Louis watched the way her breasts bounced. Louis shrugged and didn't see any difference until Feng picked up the figurine that Louis had held just a few minutes earlier. \n\n\"How the hell can you do that,\" Louis asked as Feng scanned the statuette.\n\n\"It is something we just developed, she is now a hard light construct,\" Jon explained. \"Oh here let me get you one.\"\n\n\"One what,\" Louis asked as Jon went to the safe in the corner and opened it.\n\n\"Here, keep this on you,\" Jon said as he tossed a small sphere to Louis.\n\nLouis looked at the metallic ball with a series of holes, vents and crystals in a series of geometric patterns. What the hell is this thing? Jon just smiled and walked over and touched the single blue crystal on the sphere. The thing made a kind of whirring sound as it took to the air. Its crystals flared to life and it flew straight for Feng and inside of her. She giggled and resumed her hopping in place. Jon and Louis watched for a bit as Jon explained the sphere.\n\n\"It is a remote holographic projector. I wish I could take credit for it but this is one of Nick's beauties. If you want Feng can have a level of independence she has never known before. I leave that entirely up to you. She has all the specs in her memory now. She can tweak its performance to suit her needs, oh and yours too.\"\n\n\"Feng, how do you feel?\" Louis asked.\n\n\"You have always been so concerned about my wellbeing. I feel more alive than ever before.\"\n\n\"Whoa, look at you,\" Louis said as he walked over to her and she stopped hopping. \"Your eyes and your skin... look at all the detail. I can see blood vessels in your eyes and veins beneath your skin.\"\n\n\"Shall I sample the DNA now?\" Feng asked smiling.\n\nShe leaned close and kissed Jon. They both let out a moan as Feng's tongue slipped into his mouth. His hands went around her waist and pulled her close. Louis watched and smiled. If this was her way of gathering DNA it was going to be fun. Feng broke the kiss and her skin was flushed a deeper red than usual. She placed a hand to her lips and grinned.\n\n\"Your turn,\" Feng said as she turned to face Louis.\n\n\"Should I give you guys a room,\" Jon asked as Feng threw her arms around Louis' neck and kissed him.\n\nThe door opened and two girls entered the office. They were dressed in identical dark blue suits with crisp white shirts beneath. The twins walked over to stand next to Jon and watched the DNA sampling with naughty expressions on their faces.\n\n\"What is going on,\" Carol asked.\n\n\"Isn't that Feng,\" Colleen asked.\n\n\"Yeah, that is her Thorn avatar,\" Jon said. \"I kind of like it. What do you think?\"\n\n\"I like the skirt,\" Colleen said.\n\n\"That is not a skirt, it's a loincloth,\" Carol said correcting her. \"But it is wicked looking, yeah.\"\n\n\"Makes for easy access, that's for sure,\" Jon said.\n\n\"Always thinking with your dick,\" the twins said in one voice.\n\n\"Comparing DNA,\" Feng said breaking the kiss. \"This won't take very long. Running side by side analysis... familial connection affirmative... shared mutation in gene m3111...\" \n\nFeng went on for another ten minutes comparing the two men's genetic material. She finished at last and compiled the data and made her announcement. While the two men shared some interesting commonalities they were not in fact father and son. But they were distant cousins sharing a few rare mutations which explained their shared eye color and similar bone structure. Feng pulled Louis to the corner and spoke to him in hushed tones. They were both smiling and in a flash Feng's avatar changed. \n\nHer new appearance was a compilation of all the physical traits that he found attractive. Feng had somehow managed to blend them together in a way that was not only functional but very pleasing to the eye. She now had long black hair that fell down to her ass, she had a petite body type with a bubble butt and a nice rack. Her facial features were a blend of Asian, American Indian and Slavic. She had upswept almond shaped eyes the color of ice, high cheek bones and a cute little nose. Her mouth was small with full lips and a dazzling smile. Feng wore a dark gray skirt that hit about mid-thigh showing off plenty of leg. The matching jacket was cut to perfection and finished off the look quite nicely. \n\n\"What do you think,\" Feng asked.\n\n\"Dang,\" Louis said. \"You are going to turn some serious heads.\"\n\n\"I have to agree,\" Jon said. \"So we are related, sort of.\"\n\n\"About that... I am sorry.\" Louis said but Jon shook his head and smiled.\n\n\"I would be just as curious if I was in your shoes. How about dinner tonight,\" Jon asked.\n\n\"About that,\" Carol chimed in. \"You have a business meeting in Berlin. You have to approve the new gauss designs.\"\n\n\"How about when we get back we can all get together?\" Colleen suggested.\n\n\"Give us a holler when you get back,\" Louis said. \"I am looking forward to it.\"\n\nKat and Louis went out for lunch and some less serious catching up. The limo drove away from the heart of the city towards the outskirts. They were heading for someplace special and there was no worming the secret from her no matter how hard he tried. It was a quiet little neighborhood with a pleasant mix of homes and small businesses. It was the diner on the corner that was their destination. The wooden hanging above the door just said Al's. The building was over a century old with a green and white exterior but it was the interior that made the diner a success. The center of the dining area was an ancient stone hearth. The tables formed a semicircle around it and on the other side was the kitchen. The place was crowded but comfortable. There were three female servers and they meandered through the tables taking order, dropping them off and cleaning up in a kind of frenetic pace that only teenage girls could manage. \n\nKat guided Louis to one of the empty tables and they sat down. He looked at the menu and laughed. It was an American burger joint. Al was in fact Allison Graves, a veteran of wars, conflict and economic disasters. She was a retired photo journalist from the previous century and retired in London to open her own little slice of heaven. Her dad had run a little mom and pops diner back in Detroit and was one of the best burger places in the city. The servers were local girls but Al did all the cooking. They placed their order and Louis did all the talking. He told her all about his dad and the memories of him from his childhood to the present.\n\n\"So he died while...\" Kat said leaving the last bit unsaid.\n\n\"Yeah, he figured since they were already in a hospital, why not,\" he added smiling. \"There are worse ways to go.\"\n\n\"I guess if I had to choose,\" she said and giggled. \"Sorry, I shouldn't laugh but...\"\n\n\"No, it is okay. Sure I miss him but I have to admire his exit strategy. How did you find this place?\"\n\n\"I was told about it from a business acquaintance. I share it with only my best friends and most stubborn clients.\"\n\n\"Food must be amazing then,\" Louis said as she looked around.\n\nThe interior walls were covered with photos of the famous, the infamous and others all posing with Al. He looked for it and there it was in a place of honor on the hearth itself. The picture of Kat and Al and right next to it was Nick and Al. How many diners have a multibillionaire walk into them? Their food arrived but the cute young server wasn't the one holding their plates. It was Al herself wearing an apron and chef's hat. She was younger than Louis expected. When he heard retired photo journalist he imagined a lady in her sixties with silver white hair and glasses. Allison was a tall blonde with those girl next door good looks and bright blue-green eyes that twinkled when she spoke. \n\n\"I can't bloody believe my eyes,\" Al said as she set the plates down. \"You are Louis, Louis...\"\n\n\"Everyone just calls me Louis,\" he said smiling up at her. \"Join us?\"\n\n\"I wish I could but I have a full house right now. Tell you what, you take your time with this gorgeous creature here and when you're done come back and we can talk while I cook.\"\n\n\"It's a deal,\" Kat said as Al went back to her kitchen. \"Wow, she has never invited anyone back to her kitchen before.\"\n\nThey ate and Louis had to admit it was the best damn burger he had ever had. They were silent as they enjoyed their meal. The French fries, or as the menu called them American Fries, were better than most of the fast food places across the pond. Kat and Louis finished their meal and walked back to the kitchen. Here the indefatigable Allison cooked like a fiend. She was laughing and cursing and singing as she wielded her spatula with warrior-like precision. There were assistant cooks but they only handled the secondary items. Al and only Al cooked the signature burgers. ",
        "\"Hey you made it,\" she said. \"So, how was it?\"\n\n\"Amazing,\" Louis replied smiling. \"Best burger ever...\"\n\n\"I love to hear that,\" Allison said. \"I have to admit I am a bit of a fan. I have been following your exploits for years. Can we get a picture later on, for my wall of fame?\"\n\n\"I have never been on anyone's wall of fame before. I'd be honored.\"\n\n\"I get off in an hour. The menu changes then so that I can get a break. If you want to check out the haunted house we can get together after work.\" \n\n\"Haunted house,\" Kat said eyes wide with curiosity. \"Ooh, that sounds interesting.\"\n\n\"Do you think we could sneak in or...\" Louis began but Allison cut him off.\n\n\"The house is occupied and the owner is a friend of mine. The address is number 32 Hobs Lane. It is just around the corner. Bob Dorchester is the owner and a great guy. I will meet you down at the pub after I get off.\"\n\nKat and Louis left the diner and walked down the street and then off to number 32 Hobs lane. The house looked amazingly normal. It wasn't dark and spooky but it did have the feel of age about it. It was a two story affair with plenty of windows and a fairly new coat of exterior paint, a dark blue. Louis looked around and there were three cars occupied on Hobs lane. He assumed it was Kat's security force and said nothing. Louis gestures and Kat moves forward and knocks on the door. There is mumbling from behind the door before it opens. Bob Dorchester opened the door and smiled when he saw Kat and then looked puzzled when he saw Louis.\n\n\"Can I help you,\" he asked.\n\n\"Allison sent us,\" Kat said rewarding him with her best smile.\n\n\"Oh... OH... um...,\" Bob looked confused and turned and spoke to his house guest. \"David do you mind... oh okay...\" Bob turned back to Kat. \"Please come in.\"\n\nKat and Louis entered number 32 and looked around. It appeared to be more of a museum that home. There were glass cabinets everywhere and bookshelves filled with memorabilia. Bob introduced his house guest David to Kat and Louis and offered them tea. The four of them sat down and Louis kept looking at David and he looked familiar. Bob reappeared with a fresh pot of tea and set it down. As he poured he told them about the house's history.\n\n\"This is the third house to sit on this property. The first was burned down by an angry mob killing the family that lived here to the last. There were no survivors. The second was destroyed by a freak tornado that touched down obliterating this house but never touching the neighboring properties.\"\n\n\"Sounds like a great opening for a horror story,\" David said.\n\n\"I know right,\" Louis said. \"Are you a writer?\"\n\n\"No, I am an actor,\" he said smiling. \"I have you seen you on the tellie. You are that archaeologist fella.\"\n\n\"Oh my god,\" Louis said as he looked around at the memorabilia and made the connection. \"You are...\"\n\n\"Looks like we both have fans,\" David said. \"Can we get a picture together? That would be brilliant!\"\n\nThey took turns behind the camera though David seemed quite reluctant to let go of Kat's waist a few times. Bob was in seventh heaven having two celebrities in his home. David and Louis pumped him for more information about the haunting and Bob gushed as he shared his stories over the paranormal experiences. Louis extended his perception to the astral and saw streamers of dark energy drifting through the air like an angry miasma. He shifted his eyesight back and blinked.\n\n\"What do you think Louis,\" Kat asked seeing his expression.\n\n\"There is something here,\" he replied. \"I take it that the three cars outside are David's security.\"\n\n\"Three, no they only sent two cars,\" David said. \"You noticed that, you are good. But uh, who is in the third car?\"\n\n\"Sora we have three cars outside, please check the car parked across the street and see who it is,\" Kat said into her necklace. \"We'll find out in just a bit.\"\n\nThe squeal of tires from outside alerted everyone and they rushed to the windows to see the back end of the car as it raced off. Louis called out its license plate number as Kat passed it on to Sora, her bodyguard. Feng and Sora stood outside as the police arrived and David's security team shared a description of the man with the authorities. \n\n\"I think I need a pint,\" David said. \"Drinks are on me!\"\n\n\"The Wolf and Stag is just down the street,\" Bob offered and it was decided.\n\nSora, Feng and the lead security officer for David entered the pub first. They gave it a quick once over and waved the group in. Louis thought it was interesting that Feng was shadowing Sora. He watched the other patrons of the pub and no one seemed to think anyone was out of place. Feng was just another woman in the place. She was the attention of a lot of flattery and she blushed when it was appropriate and gentle about turning down offers of food and drink. David was popular among the locals and a few even recognized Louis from his short stint on the news.\n\n\"You were in China,\" one of the regulars said to Louis.\n\n\"Yep,\" he replied sipping his pint. \"And no I can't talk about it.\"\n\n\"You look good,\" a female patron said to him. \"I guess digging all over the world agrees with you.\"\n\n\"Most of the time,\" Louis replied.\n\n\"You were in Japan when all of that happened,\" the lady continued and watched as the color drained from Louis' face. \"You alright sweetie you look like death.\"\n\nLouis hit the outer door at a brisk pace. Feng, Kat and Sora were outside with him moments later. He was bent over and fighting the urge to retch. David and Bob came out a little while later and the group formed up around Louis in support. He returned to the pub but now it was shots of Irish whiskey on board as he tried to numb body and mind. David stayed for two shots before prior engagements required his attention. He shook hands and departed in a flurry of well wishes from staff and patrons alike. Louis moved to a table and switched back to beer just as Allison arrived.\n\nThree pictures of beer later they began discussing the haunting at Bob's house. It was his turn to be in the limelight. He told me that he had grown up in the house and inherited it when his mom died ten years prior. The manifestations began when he was a child. There were noises and things moved around in the house. He often got blamed for moving his mother's china or other things but he hadn't done it. There were spikes of activity especially during storms when there was a lot of lightning in the air. He even admitted that he never went down in the basement at night. \n\n\"What do you think,\" Bob asked Louis.\n\n\"I want to examine your basement,\" Louis said and Bob paled when he looked out at the darkening sky.\n\n\"You can go but I am not setting foot down there,\" Bob said with fear ridden finality.\n\n\"I don't expect you to,\" Louis said.\n\nThey finished their drinks and they all walked back to number 32 Hobs Lane. Allison was actually excited about seeing Bob's basement. Sora stayed upstairs with Bob to give him some moral support. Feng was also curious about taking scans of the basement while they were down there. Louis was the first down followed by Feng, Kat and Allison. The walls were naked stone and there were boxes and crates in stacks and alone scattered all over. Louis extended his vision to the astral and looked around. The miasma that he had first seen on the first floor was here but far thicker and the sense of dread stronger.\n\n\"Wow, this is bad very bad,\" Louis whispered. \"I wish Gabrielle was here.\"\n\nHe followed the flow of the tendrils of darkness. Just like a stream there was a flow and direction to the negativity. He reached the end of the basement and everyone there could see the change of brickwork where Louis was standing. It had a shape that was easy to recognize, a door. Feng read off the drop in temperature as Louis ran his fingers along the dark stone. A part of him wanted to call Gabrielle and tell her what he had found. They could wait and tell Bob to move out until it was dealt with. That is what he would have chosen, but that choice was taken away from him.\n\n\"Warning, thirty degree temperature drop,\" Feng cried out. \"Thermal imaging is picking up a distinct shape! Louis, watch out!\"\n\nLouis leapt back and brought his hand up with a shield spell waiting to be released. The shape was roughly humanoid but its indistinct nature made it impossible to be sure. Allison cried out as she spied the thing that was darker than the surrounding shadows. Louis tried to discern its nature but it was definitely malevolent. Was it simply a trapped spirit or something more powerful? Feng continued counting down the temperature flux. \n\n\"Who are you,\" Louis asked addressing the entity.\n\nThe thing screamed but only Louis was able to hear her cry of anguish. He lowered his hand and snuffed out the spell. The entity raised its arms and moved forward but only Louis and Feng remained unmoved. Kat and Allison moved towards the stairs and watched from there. Louis repeated his question and the apparition cried out but this time it was sobbing.\n\n\"I can feel your torment. Let me help you.\"\n\n\"No one can help me,\" she said. \"It has a hold of me.\"\n\n\"What does,\" he asked closing the distance between them. \"I will free you.\" \n\n\"Don't touch me,\" she cried as Louis' hand reached out for her.\n\nHe rushed forward and embraced her. She was icy cold to the touch and even as she tried to free herself Louis launched his idea. He thought if he could feed off of sex and adrenalin why not rage and fear. He never hesitated seeing this poor soul suffering like this. He snared her with the dark magic and stole her terror and fury. The jolt of energy was as intoxicating as any sex act. She quit fighting him as she felt the chains binding her weaken and snap. When the last of the darkness had been sapped from her he let go. Feng had maintained her vigilance and was citing the rising temperature in the basement. The darkness was brushed aside as the cleansed soul shone there. She was so young and innocent looking. Allison and Kat gasped when they saw the spirit of the girl. Wrapped in the garb from two centuries ago she stood there smiling.\n\n\"Thank you,\" she said as she faded from view. \"You saved me.\"\n\nLouis stood up and tears streamed down his cheeks as the girl claimed her final reward. She disappeared and Louis was rushed by Kat and Allison. They held him and told him how wonderful he was. He made them promise not to tell anyone about this. It was bad enough about being hounded about China. They both understood and agreed. They went up and told Bob all about the spirit of the little girl and that she was now at peace. Bob appeared relieved and extended an open invitation to Louis if he ever returned to London. Allison got her photo with Louis while Kat had him for the next three days and that should have been the end of it, but it wasn't.\n\nLouis walked around the figure on the floor. It rested on a carpet that had been in this same spot for six decades. It has cleaned methodically and with gentleness you would a new born. He could still make out the hunting scene stitched into it by a lady of the castle all those years ago. He paused and glanced at the four posted bed that was a full century older than the carpet. The posts were carved elegantly and with the same kind of love that had gone into the carpet. The figure on the floor moaned and he returned his full attention to her. She had leather restraints on her wrists and ankles and attached to the restraints were metal rods. The woman was also sporting a blindfold, nipple clamps, a cat tail slid up her tight and proper bum and finally a ring gag snugly fitted in that talented mouth of hers. The long scarlet mane was spread cloud-like around her head which clashed with the emerald carpet.\n\n\"You asked for this,\" Louis remarked as he knelt down and slid two fingers along her labia. \"Soaked to the bone... what a slut... are you ready to get your throat fucked?\"\n\n\"MMMMMMM...\" Kat whimpered.\n\n\"Feng raise the level to six,\" Louis ordered and the business end of the tail in her ass was audible now.\n\nKat's back arched and she moaned as she climaxed. Louis lifted her up gently and placed her on the bed. He positioned her so that her head was hanging off the edge. He took his erection and teased her with the tip for a bit as he laughed when he saw the two little teddy bears hanging from the nipple clamps. One bear was armed with a wicked looking axe while the other hand a barbed bladed sword. He leaned forward to cup her tits which forced his cock halfway down Kat's throat. Louis moaned as her tongue worked furiously to pleasure him. \n\n\"I have always loved that tongue of yours,\" He said as he slowly rocked his hips.\n\nKat moaned as he fucked her throat properly now. He slid most of his length between her lips now and her moans were become more insistent now. Louis was panting now and his cock was bottoming out now as his climax got closer and closer. His teeth were tightly clenched as he fought his orgasm but Kat won out in the end. He ground against her face as he fired his load down her throat. He watched her muscles move as she swallowed. \n\n\"I needed that,\" Louis moaned as he repositioned her. \"Ready for a little magic, I am going to fucking wreck you.\"\n\nA single gesture and a fiery rune appeared in the air. Kat's restraints fell away and she rubbed her wrists and ankles. She removed the blindfold and the toy in her ass as she looked up and saw the hunger burning in his eyes. She smiled as he invoked another spell. The ceiling sprouted flesh colored tendrils that descended upon Kat. They moved slowly at first but then struck with lightning speed. She was up in the air and held fast as the second part of the spell took hold. The tentacles slunk down and took up their positions. \n\n\"You ready,\" Louis asked as he linked his senses with the tentacles.\n\n\"Do it...\" Kat whispered. \"UNNNNNN gods...\"\n\nHe flipped her so that her ass was up high and he could watch as the twin whip-like appendages invaded both her holes. They started out nice and thin so they could easily slither their way in. As they filled her up they swelled and her whimpers became cries of purest bliss. Then they began to move and Kat became down right profane. She was cursing and screaming as Louis violated her hard and fast now. \n\n\"Don't be gentle,\" she begged now. \"Come on and fuck me, fuck me like you mean it!\"\n\nLouis just smiled and brought two more tentacles down. One he slid between Kat's firm young breasts and the other slid between her lips. The tentacle between her breasts sprouted smaller tendrils that pushed her tits together to maximize the experience. It looked like something out of a bad Japanese hentai but damn it felt amazing. Louis was reaching sensory overload and fast. Kat's back arched as she came and Louis was right behind her. Multiple orgasms struck him at once and he fell against the bed. He withdrew the tentacles inside of her and waited. Kat hung there for a long moment and then her head came and she looked at him. She was grinning like a fiend. \n\n\"OH... I like that... do it again... do it again!\" \n\n\"You asked for it,\" Louis told her as a soft slippery sound filled the air.\n\n\"Are you kidding me,\" Kat said as she watched the tips of two of the tentacles split in half and moved towards her. \"OH YEAH...!!\"\n\nLouis collapsed to the floor as the last of his mana was used up. Kat tumbled to the bed below with a childlike cackle of laughter. She lay on her back panting and gasping. Louis was kneeling next to the bed completely exhausted. After a few minutes he managed to climb onto the bed and pull her close to him. He could hear her heart beating in her chest and her body was covered in perspiration from her erotic ordeal.\n\n\"Well,\" he asked.\n\n\"You did it... you wrecked me completely and utterly,\" she purred.\n\n\"I will keep my promise,\" Louis said as he passed his hand over her eyes.\n\n\"Tokyo,\" she muttered just before he stole the memory from her.\n\n\"It will be as a dream,\" he said. \"As we agreed I will bear the burden of my secret.\"\n\nThey snuggled in each other's arms and drifted off to sleep. It was mid-morning before either of them stirred from their slumber. Louis opened his eyes and there was Feng carrying a tray with freshly brewed coffee and orange juice. She set the tray down and handed him his coffee.\n\n\"Well look at you,\" he said accepting the cup. \"You are so enjoying this, aren't you?\"\n\n\"As a matter of fact, I kind of enjoyed watching last night,\" Feng replied with a wink.\n\n\"Is she programmed to be a voyeur,\" Kat asked sticking her hand out for her cup of coffee.\n\n\"She is now,\" Louis said smiling.\n\n\"Here is your coffee Kat,\" Feng said as she handed over the second cup. \"There is orange juice too.\"\n\n\"Yeah... yeah,\" Kat replied smiling as she took in the intoxicating aroma of the coffee. \"MMMMM coffee... unnnn my ass is a little tender this morning.\"\n\n\"You gave me the all clear,\" Louis replied.\n\nFeng left and returned with a second tray with two full English breakfasts and a pot of coffee. Kat and Louis ate in bed while Feng set out their clothing. Louis watched her move from one closet to another to a chest of drawers and holding up options until a full outfit had been chosen for each of them. Feng really appeared to be enjoying her new freedom as a hard light construct. He would have to do something really nice for Jon, like get him laid.\n\n\"So what's the plan for today,\" Louis asked as he forked his last piece of sausage.\n\n\"I don't know,\" Kat said. \"I just want to spend time with you.\"\n\n\"I suggest window shopping,\" Feng offered.\n\n\"Ooh, that could be fun,\" Kat said smiling. \"It might take my mind off my tender ass.\"\n\n\"I am so going to put you over my knee and spank you,\" Louis said reaching for her.\n\n\"The hell you are,\" she squealed and dashed naked into the adjoining bathroom.\n\n\"I will recharge... try not to use all the hot water,\" Feng said with a smile.\n\n\"Cheeky little thing aren't you,\" Louis said as he followed Kat into the bathroom.\n\n\"I suppose I am.\"\n\nIt was a long and leisurely 'shower' for the two of them. Despite her protests Louis managed to bend her over and swat her ass cheeks. They finished their shower, dried off and dressed. Fed, fucked and clean they headed out for a day of window shopping in the greater London area. They alternated between driving and walking. Sora and Feng were never far behind as they hit a rather particular series of stores. There were shoes, clothes and jewelry and not all in that order. Louis glanced at the old book stores, knick knack shops and antiques but Kat seemed oblivious to them. Now he did enjoy the lingerie store and the several bits and pieces Kat tried on and eventually purchased. They stopped for lunch and while Kat was pumped with her adrenalin coursing through her veins Louis was more reserved and quiet.\n\n\"You are not enjoying yourself,\" Kat said between sips of soda.\n\n\"I love seeing you happy,\" Louis replied dodging her statement effectively.\n\n\"That's not what I said or meant,\" she fired back. \"Why don't you take the helm for the rest of the day?\"\n\n\"Really... I thought you really wanted to go to that one particular jewelry store,\" he said and she grimaced. \"Tell you what, let's finish lunch, hit that store and then I will play navigator.\"\n\nShe smiled and it was agreed. It was after all only the third jewelry store compared to six of the others. Louis looked around and returned his gaze to Kat. It was one of those pinch me to make sure I am actually awake moments. He was having lunch with one of the most attractive and sought after women on the planet. She was the sister of Nick Shaw, billionaire and philanthropist and he was the son of a very loving and kind parents. He had always known affection and support while she and her mother had been on the run from the Russian mob since Kat was an infant. Maybe they were both lucky.",
        "Sheffield's of London, it was the iconic place where the wealthy went for custom jewelry in Great Britain. It was said that the royal family came here over past generations for their finest pieces. One foot inside and Louis believed it. The showroom was sound proofed against the outside world and the carpeting was thick and luxurious underfoot. It had the feel of individuality the moment you entered. A young couple was at one of the three display cases when Kat and Louis arrived. There was no chime or bell but from behind a scarlet curtain an elderly man appeared and greeted them. He was tall, thin and dressed in a thousand dollar suit. Not a single one of his gray hairs was out of place and his moustache was trimmed to perfection. This was of course Andrew Thomas Sheffield the fifth, eight generations of jewelers to the crown and nobility to the whole of Europe. \n\n\"Katrina,\" he said in greeting. \"It is so good to see you again. This must be the young man we made that handsome ring for. It is a pleasure to meet such a dashing adventurer such as yourself.\"\n\n\"No, the pleasure is all mine,\" Louis said taking his hand and shaking it.\n\n\"Powerful grip you have Sir,\" Andrew replied. \"Now what can we do for you?\"\n\n\"Actually, I have a request,\" Louis replied before Kat could answer. \"I am looking for a very special setting for a very special stone.\"\n\n\"We do enjoy a challenge,\" Andrew said his eyes widening in curiosity. \"What can we do for you?\"\n\n\"You sneaky little...\" Kat muttered under her breath.\n\nLouis reached into his jacket pocket and produced an old weathered box. It had been with him since he had left France and it held a long term project that had been idle for far too long. He handed the box to the older man who turned it to face him and opened it. The man's face lit up as if he had just seen the Holy Grail. Tears streamed down his cheeks as he smiled.\n\n\"Who cut the stone,\" Andrew asked as he closed the box and dabbed the tears with his handkerchief. \n\n\"I did,\" Louis said.\n\n\"YOU did,\" the old man remarked. \"I will hire you on the spot. If that were a resume young man I would be a fool to turn you away.\"\n\n\"Thank you for your kind offer but here is what I require,\" Louis said handing the man an envelope. \"It contains a hard copy as well as a digital one. Price is not an issue but time is, can you have it completed in a month?\"\n\nAndrew handed Kat the box as he opened the envelope and unfolded the papers within. Once more his eyes went wide and one corner of his mouth turned up. He stroked his chin as he looked at the demanding details and qualities required of the piece. The old man thought long and hard and shook his head.\n\n\"I would love to take this contract,\" he said folding the papers back up. \"But I could not meet the deadline. Six weeks I might be able to accomplish it, and in eight I could guarantee it, but not in four. I am sorry Sir.\"\n\n\"You have the job,\" Louis said.\n\n\"But I don't understand,\" Andrew replied his composure shaken.\n\n\"You are the tenth man I have asked and the first to stick by the quality of your work. You would rather refuse the contract on the basis of honesty and family pride. I respect that and I will send all my business your way.\"\n\n\"Thank you Sir,\" Andrew said pulling himself up to his full height. \"You are very kind.\"\n\n\"Wait until Gabrielle gets word of this. She is going to flip.\"\n\n\"Holy mother of...\" Kat said as she finally opened the box. \"It's gorgeous. You never mentioned that you were a gem cutter.\"\n\n\"We all have our secrets,\" Louis said taking the box and handing it over to Andrew.\n\nLouis let go of the box and shivered where he stood. He had been so busy with the transaction that he missed it. He glanced over at the woman by the counter. She was absolutely stunning but it was the waves of negative energy she was putting out that had made him shudder. He locked eyes with those of a stone cold killer. She smiled and returned back to the man she was clinging to.\n\n\"Oh please sweetie,\" she purred in his ear. \"Surely I am worth a paltry little trinket like this.\"\n\n\"Paltry, it is 35,000 pounds sterling,\" the man replied. \"I love you and all but my father would lose his bloody mind if I paid that for just an engagement ring.\"\n\n\"Remember that thing I said would have to wait until after the wedding,\" she counteroffered.\n\n\"Really,\" the young man gasped. \"Well... I uh...\"\n\nLouis whispered in Kat's ear and she nodded. She and Andrew haggled over the price of the project while Louis looked around. He moved directly behind the couple and shifted his perception to the astral. He looked over his shoulder and nearly cried out when he saw her true nature unveiled. While the young lady wasn't a demon she was definitely candidate material. Her aura was so dark and so repulsive he had no doubt about his earlier impression of her. She was a serial killer and had to be stopped. He restored his vision to the earthly plane and alerted Feng who in turn would alert the local authorities.\n\nLouis had been studying with Iyaden and his workouts were not just physical and spell combat but also the honing of his perceptions. His will was strong enough to peel away surface thoughts with ease. But with a little effort he could pry a person's entire life history if he desired it and he did. He looked down at the display case but his real attention was to the abomination behind him. His awareness sliced through her thoughts with no resistance at all. He dove into the very core of her being and unraveled it skein by skein. \n\nHer given name was Pandora. She came from a long and proud Greek heritage. That would explain that flawless olive skin of hers. Her childhood was a loving one but there was wickedness in the girl from the beginning. She enjoyed being bad. It manifested as little things at first but as she became older she learned how to harness her beauty as a weapon. Her first kill was a young man in her hometown. She lured him with promises of dark delights and in the throes of his first climax she pushed him into the well he had been leaning against. \n\nThe rest were a slow buildup of fast marriages followed by her becoming a widow over and over again. She had assumed so many identities over the last six years it was a testament to her consummate skills that she stayed in character long enough to bleed her husbands and their families dry before disappearing again. This poor bastard was Willem, landed gentry, with a proud family possessing both land and titles. It was her most audacious victim yet. Louis turned as he sent all the information, aliases and proof to Feng. She would contact the appropriate authorities while Louis performed his magic upon her.\n\n\"Pandora,\" Louis said and watched the girl's head whip around in utter astonishment. \"Is that you girl?\"\n\n\"You must have me mistaken for someone else,\" she said coolly.\n\n\"No, it is you, gods I haven't seen you in what six years now,\" Louis continued as he closed the distance between them.\n\nKat laid a hand on Andrew's arm and they shared a look that spoke of silence and patience. Let him do this and all will be well.\n\n\"I just have one of those faces,\" Pandora replied fidgeting now. \"Let's go, we can pick out a less expensive ring somewhere else.\"\n\n\"What's wrong,\" Willem asked. \"You are never like this.\" Pause while the truth sinks in. \"You told me your name was Virginia.\"\n\n\"I am, this bloody fool is an idiot that has me confused with someone else.\" She snarled as the mask began to fall away.\n\n\"Does she still have that birthmark just above her left cheek,\" Louis asked watching her movements intently.\n\n\"Good god woman,\" Willem said backing away from her. \"You said I was your first.\"\n\n\"Come with me,\" Kat said pulling Willem away from Pandora.\n\n\"YOU... you ruined everything... who the hell are you anyway,\" Pandora growled. \"FBI... Interpol... let me see your badge.\"\n\n\"I don't have a badge,\" Louis said moving closer still and weaving the dark magic around her.\n\n\"UNNNN... what is going on,\" Pandora snarled. \"MMMMMM... why am I so wet all of a sudden?\"\n\n\"I have no idea,\" Louis said as he reached out and slipped his fingers around her wrist. \"I am going to just hold you while the police arrive.\"\n\n\"UNNNNNNN...\" Pandora moaned as she climaxed from the simple contact of his flesh on hers. \"I just... how did I... can't think straight.\"\n\nShe collapsed to the floor and Louis gently cradled her from behind. Kat told Andrew the police would be discreet and it would be alright. Willem stared down at the woman he had fallen for and barely recognized her. Her skin was flushed with color and her eyes were half closed as she twitched on the floor of the store.\n\n\"Call an ambulance,\" Louis cried out. \"I think she's having a seizure!\"\n\nIt wasn't a seizure it was in fact Louis deliberately feeding on her life essence. Her shaking was the multitude of orgasms she was experiencing as he drained her dry. Everyone witnessed his gentle grip on her and watched as she passed away before their very eyes. Two minutes later the police and medics arrived but it was too late. She had apparently died from an undiagnosed epileptic condition. Statements were taken but it was pretty cut and dry. Willem thanked Louis and Kat and even invited them to the manor house when it was appropriate of course. \n\nKat smoothed things over with Andrew and paid the down payment for the project right then and there. All was well and forgotten as far as the old man was concerned. Kat and Louis left the jewelry store and wandered around until he saw an old shop that looked quite inviting, Old Man Corvinus the sign said.\n\n\"This looks promising,\" Louis said.\n\n\"Who was she really,\" Kat asked as they walked towards the store.\n\n\"A part of the group that had taken my sister,\" he lied. \"She was a serial killer.\"\n\n\"I was able to confirm at least ten men she had murdered Mistress,\" Feng chimed in from behind us.\n\n\"Ten... then poor Willem would have become number eleven,\" Kat said and kissed Louis' cheek. \"You are a hero.\"\n\n\"It was just a healthy dose of paranoia and good luck on my part.\"\n\n\"To die like that though,\" Kat made a face. \"Epilepsy... I never knew it could be fatal.\"\n\n\"It is uncommon, but a strong enough seizure can completely destabilize the brain and prove quite lethal.\" Feng added.\n\n\"I had a friend that died that way,\" Sora said. \"He got up one morning, fixed his first pot of coffee, turned on the television and died before he sat down.\"\n\nThe group fell silent as they entered Corvinus' shop of wonders. Old Man Convinus fit his name quite well. He had to be at least eighty but was pretty spry and quite enthusiastic when they entered. \n\n\"Back again Mr. Masters... oh no... I am sorry I thought you were someone else,\" Corvinus said. \"My apologies but for a moment there I would have sworn. Anyway, how can I be of service?\"\n\n\"Just looking,\" Kat said but Louis felt like he had been bitch slapped.\n\n\"Do you mean Mr. Jon Masters?\" Louis asked.\n\n\"Well I guess I should be more genial considering his home coming and all.\" The old man said smiling. \"It's not every day a Duke returns from across the pond.\"\n\n\"Duke,\" Kat and Louis said simultaneously. \n\n\"Oh yes, it is all over the news,\" Corvinus said. \"He inherited from his grandfather. Duke Jon Masters of Wind Sword Manor and blah blah blah... a bunch of lesser titles. He is a bit of a local hero and all. He and Prince William are working on starting a company together. What was it they called it?\"\n\n\"Eidolon,\" Feng supplied. \"They are going to be manufacturing state of the art artificial limbs and organs for military veterans, free of charge. It is a non for profit organization.\"\n\n\"That is wonderful,\" Kat said smiling. \n\nLouis took his time examining the amazingly diverse stock inside the shop. He was pointing and telling Kat about this object or that. There were objects from all over Europe and even Southeast Asia. The leather case caught Louis' attention and he picked it up. There was a faded design on top of the letter G and a winged creature worked together.\n\n\"What is that,\" Kat asked.\n\n\"It's a griffon,\" Louis replied as she opened the case. \"This must be nineteenth century medical equipment.\"\n\n\"Is that a syringe?\" She asked pointing to the antiquated hypodermic needle and two empty vials.\n\n\"Yeah,\" Louis said as he took up one of the vials. \"There's a little left at the bottom of this one.\"\n\n\"And this one too,\" Kat said. \"It looks like dried blood.\"\n\n\"That's what I tell customers,\" Convinus said as he approached them. \"That once belonged to none other than the famed doctor and scientist Professor Griffin. You know the one that inspired H. G. Wells.\"\n\n\"No way,\" Louis said. \"I loved that story when I was a kid. How did you get a hold of it?\"\n\n\"I didn't. My great-grandfather accepted it when a strangely clad young man pawned it ages back. He never came back so we have held onto it ever since.\"\n\n\"How much,\" Louis asked as Kat reached into her purse to take out her credit card. \n\n\"Let me write you up a receipt,\" Corvinus said smiling. \"Follow me to the front.\"\n\nKat bought Louis the case and was all smiles. Convinus offered to gift wrap it but Louis just slipped it into his back pocket. As they began to walk out, the old man made a striking comment.\n\n\"It is interesting,\" he said. \"Jon Masters also purchased a case from the Victorian era.\"\n\n\"I may have to ask him about it,\" Louis said as he left. \n\nThe next couple of hours and a few small stores and Louis was all shopped out. He threw up his hands in surrender and they called it a day. To repair his frazzled nerves they returned to the pub near Al's. \n\nLouis bought a round for everyone and after two pints felt his stress reduce to a tolerable level. His thoughts had been circling around the demise of Pandora. He knew why he had done it. The real reason was payback for Lily and his deceased father. He was no saint and in truth the woman was a prolific killer. So why the hell did he feel bad about killing her. \n\nAs if on cue he received an email from Gabrielle. She was interested in the situation at Bob's house and glad it was concluded without complications. Then there were three words in regards to what happened earlier that day... Let It Go. Louis knew that only one person would have contacted Gabrielle about the death of Pandora. He and Feng were going to have a little talk about boundaries. As if things couldn't get any worse a news article on the television covered the life and death of Pandora. All eyes were on the two televisions in the pub. Louis called a server over and ordered a bottle of tequila. Kat just sat back and asked for two glasses.\n\n\"Make it three,\" Bob said sitting down next to Louis. \"Hey guys... can we talk?\"\n\n\"Sure, bring bob here a pint too,\" Louis said. \"How is the house?\"\n\n\"Well, I actually went down to the basement for the first time last night. I have never felt comfortable down there when it was dark. But it started this morning. The noises from downstairs were quiet at first but by lunchtime it was bad... real bad. I need your help.\"\n\n\"What kind of noises are we talking about?\" Louis asked as Kat's color ran pale.\n\n\"It started off as creaks and settling. But now its voices, plural, and they sound like they are in pain.\"\n\nLouis held up his hand as the bottle of tequila arrived and he poured shots all around the table. One silent toast to lost souls later and Louis collected his thoughts. He was loath to even contact Gabrielle but he was quickly getting out of his depths on this one. \n\n\"Fuck... I need to make a call,\" Louis cursed. \"Feng connect me to Gabrielle now.\"\n\n\"Nnnnnn... uh Louis? What is going on?\" Gabrielle replied on the other end.\n\n\"I need your help. Things have escalated and I am out of my comfort zone.\" Louis said while Bob watched on confused.\n\n\"Who is he talking to? There is no phone or anything.\"\n\n\"It's his watch,\" Kat explained.\n\n\"How bad is bad,\" Gabrielle asked an ocean away.\n\n\"Multiple voices and they sound like they are in pain. This is my fault...\"\n\n\"Shut up Louis, blame can be determined later. I will make a call. I have the address so someone will be in touch.\" Click.\n\n\"Help is on the way.\" Louis told Bob as he poured a second round of shots.\n\nBob looked relieved but he hadn't met an Inquisitor yet. Louis knew that they had a presence in most major cities. So it shouldn't take her long to send a request for aid. Louis wondered if they would be aiding him or simply doing it for her. It didn't really matter in the end, as long as Bob's house was cleansed once and for all. He was so lost in thoughts he didn't notice the two girls that walked into the pub. They went to the bar and the bartender pointed at the table in the corner.\n\n\"It's really him,\" one girl said within ear shot of Louis.\n\n\"He really is cute,\" the other said. \"This is going to be fun!\"\n\n\"Can I help you,\" Louis asked checking out the pair.\n\nThey were both dressed in tight jeans and dark t-shirts. The blonde was cute as a button but the brunette was straight up smoking hot. He didn't recall meeting them before though. Kat though managed to figure it out pretty quickly. She sat back and let him hang himself. It was a slow painful conversation but oh so entertaining. Bob couldn't help but stare at the two attractive new comers. One plopped down next to Kat and the other slithered onto Bob's lap. \n\n\"Hello Bob,\" the brunette purred.\n\n\"Hello Louis,\" the blonde giggled.\n\n\"How the hell do you know my name,\" Louis asked.\n\n\"He really is silly,\" the blonde replied.\n\n\"He is rather cross,\" the brunette purred. \"Maybe he needs a hand job.\"\n\n\"Hey now,\" Kat intervened. \"If anyone is giving him a hand job it is going to be me.\"\n\n\"Ummm...\" Bob said finding the conversation strange and yet exciting.\n\n\"We haven't forgotten about you sweet cheeks. We are going to take care of you.\"\n\nThey introduced themselves, the blonde was Inquisitor Jinx and the brunette was Inquisitor Rumor. Louis looked at the pair and tried to process the way they were dressed along with their names. Jinx and Rumor, what kind of Inquisitors were they? Was this some kind of joke on Gabrielle's part? He tried to process it and his brain sneezed.\n\n\"Seriously,\" Louis said as he reached for the bottle of tequila.\n\nHis hand never reached it. Jinx snatched it and tossed it tumbling end over end towards Rumor. The two of them kept the bottle in the air for a full minute before settling it back on the table without spilling a drop. Louis looked from the bottle to the girls and back a few times. Well that was impressive. \n\n\"Okay, what's the plan,\" Louis asked.\n\n\"We'll fill you in on the way,\" Jinx said. \"Last call or better yet leave the bottle for Bob.\"\n\n\"Me...\" Bob said.\n\n\"Yeah, you should stay here,\" Rumor added. \"It's gonna get hairy. I think you and Kat should remain at the pub.\"\n\n\"I am not leaving you...\" Kat began but Louis shook his head.\n\n\"No, you are going to stay here.\" Louis demanded.\n\n\"Are you sure,\" Kat asked even as Jinx and Rumor got up to leave.\n\n\"Positive,\" he said. \"I will be back before you know it.\"\n\nThe three of them left the pub together and Louis followed the Bobbsey twins to a parked black Range Rover. They opened the back and geared up right out in the open. The Inquisitors strapped on gun belts, slipped on armored long coats and offered him the same. Louis accepted the matching gauss pistols and long coat. They locked up the vehicle and walked down to number 32 Hobs Lane. Bob had left it unlocked and once the trio had stepped inside why he wasn't worried about the place being robbed. The temperature had dropped below freezing and their breath came in clouds of steam as they exhaled. \n\n\"What the fuck,\" Jinx exclaimed.\n\n\"I did this,\" Louis said. \"When I freed her soul...\"\n\n\"You gave her a chance at heaven, this is something else.\" Rumor replied sharply. \"Jinx move forward, Louis goes right and I will cover the basement door. Sweep and meet back there.\"",
        "Louis was so used to Gabrielle calling out orders that he followed without hesitation. He didn't draw his weapon he peered into the astral and saw what should have been obvious; the energy source was below them in the basement. He finished his sweep and met up with the girls by the door. He pointed down and they nodded. Jinx yanked the door open while Rumor entered first with Louis close behind her. They nearly slipped down the frost covered stairs but caution kept them from a nasty spill. The temperature dropped to subzero conditions by the time they reached the bottom of the stairs. Everything was layered in frost and a light dusting of snow. Louis could see the pitch black aura around the stone door.\n\n\"The lighter bricks, the power source is behind that,\" Louis said thru chattering teeth.\n\n\"How are we getting through that,\" Jinx asked.\n\n\"I left the battering ram in the Range Rover, any suggestions?\" Rumor said drawing a runic dagger.\n\n\"Yeah, stay here,\" Louis said as he approached the far wall. \n\nHe shifted his body to compensate for the cold and with that distraction removed he strode over to the door. He didn't have this particular spell hanging so he traced the rune pattern on the stones and slowly invoked the spell as he backed away. He wove his hands in intricate patterns and focused the force of the spell on the stones. Once he was far enough back he spoke the last syllable and the bricks flew away from them as if struck by some invisible force.\n\n\"Impressive,\" Rumor said. \"What do you call that one?\"\n\n\"That ladies, is the Titan's Mattock,\" he said proudly. \"...After you?\"\n\n\"Such the gentleman,\" Jinx said as tossed two glow sticks into the gap.\n\nThe Inquisitors were armed identically with a gauss pistol in one hand and a knife in the other. Louis had combat spells at his fingertips. The Inquisitors led the way and Louis followed. The space beyond was a blasphemy of everything held sacred by life loving beings anywhere. It had been a massacre and the limit of the devastation was only left to the imagination of whatever entity performed these sacrifices. Most of the bodies were in parts while a scant few were mummified from the lack of oxygen and dry conditions. It was hard to make an accurate count but there were at least a hundred victims here. \n\nThe altar was a twisted piece of dark organically carved stone that stood twelve feet in height. Upon its gnarled surface were foul runes that coursed with a dark energy and the source of the malevolence here. Too late Louis returned his sight to the astral. Three beings guarded the altar and struck at the same instant. The psychic assault was precise and diabolical. \n\n\"Louis, wake up Louis,\" a voice said.\n\n\"Huh, what the hell just happened,\" Louis said as his vision focused.\n\n\"How many times did I warn you about that damn skateboard without a helmet?\"\n\n\"Mom, what are you doing here mom,\" Louis asked as he got to his feet and looked around. \"Wait, I was just in London.\"\n\n\"London, that's a good one,\" she laughed. \"Come on in the water's great.\"\n\nHe was standing in the backyard of the Old House. The house he had been born and raised in before, before it had burned down. He looked over at the sunken pool and there was his mom in a bikini of all things. She looked good, real good! He walked over to the edge and she was treading water in the deep end of the pool. As he watched she reached down and tugged the bow that held on her bikini bottoms. The scissor action of her legs was enough to dislodge them and send them floating away. \n\n\"How clumsy of me,\" she purred. \"It is just so damn hot out here today.\"\n\nThe top followed the bottom to the depths of the pool. Louis stared at his mother's naked form and felt his throat go dry. He dove into the water and damn it felt good. He came up right in front of her and she beckoned him with a finger. He swam over and her arms slipped around her neck. She closed her eyes as she kissed him. The hunger blossomed all-consuming and he kissed her back. Suddenly in dream fashion they were in the shallows of the pool. Mom was seated on the edge of the pool with her legs open to him.\n\n\"Come on and be mommy's big boy,\" she urged him. \"Stick that massive cock of yours inside of me!\"\n\nHe thrust in one brutal movement of his hips and impaled her. She cried out as he began moving. He had forgotten how wet and tight her cunt was. Louis hammered her for all he was worth. That's when something went dreadfully wrong. He felt the dark magic rise up but it was directed at him. His mother was trying to drain his life essence! Louis looked into her eyes and saw the black sclera with blazing red irises. \n\n\"DEMON,\" he roared. \"Oh fucker you picked the wrong goddamn fight!\"\n\nLouis' own power rose up and shattered the demon's hold on him. For the second time in one day he brought the full and unrelenting power to bear on a sentient. This time it was some inhuman entity. He had no remorse about snuffing out its spark. The thing tried to break free but failed. Louis took it by the throat and squeezed. How dare you impersonate my mother! The thing shifted and squirmed but his grip trapped it no matter its form. The dark magic pierced it to the core and he fed to its last. The illusion shattered and Louis stood where he had before. A quick glance showed the two Inquisitors still trapped in their own nightmares. Louis did the only thing he could. He turned his full might upon the altar.\n\nHe called upon a spell to seek out the weakness in the construction. It took desperate seconds but in the end he found the shatter point. If he struck there with enough force he could destroy the altar utterly. As he brought the next spell into his mind the Inquisitors fell to the floor. They were still breathing so the other two demons had let go for a reason.\n\n\"Strike the mage,\" a booming voice called out. \"Kill him... DESTROY HIM!\"\n\nThe demons that had once only been on the astral plane drew on the power of the altar and physically manifested. To do this they possessed the bodies of the fallen. Darkling energy coursed into bones, sinew and flesh long dead. A legion of the undead rose up to stop Louis and the Inquisitors. As he shouted for them to get up he drew the gauss pistols. He targeted those bodies that were most intact. The impact of the rounds blew them to pieces and only then did he see the futility of his actions. The demons moved hands, legs, skulls and anything else that could attack. Jinx and Rumor slowly got their feet and cried out as they saw the moving mass of body limbs heading for them. \n\nLouis holstered his pistols and began slinging spells at the altar. But whatever force had commanded the demons were shielding it. Bolts of force either bounced and ricochet off the barrier and struck the ceiling or walls. He cursed and tried to figure out a new strategy before they were overrun and torn apart. Rumor saved them when she reached under her shirt and revealed the holy relic hanging there. It shone like a beacon in that stygian darkness. The foremost of the demonic limbs lost mobility and for now they were kept at bay. Louis peered into the astral and the two remaining demons were gathered near the altar.\n\n\"This is bad,\" he said just as the bolt of hell fire lashed out and tossed him bodily against the wall.\n\n\"Louis!\" Jinx screamed as she raced to his side. \"He's out cold... oh god Rumor he's hurt... he needs a doctor!\"\n\n\"Take out your relic and search him,\" Rumor ordered. \"He might have a med kit on him or something. She is going to kill us if he dies! I will hold them off!\"\n\nJinx checked the armored coat but only found clips for the gauss pistol. It wasn't until she searched his person that she found the syringe and two empty vials. She cursed but she saw that the impact with the wall had revealed a concealed compartment in the case. There were two full vials within. They weren't labeled so she shrugged and injected him with both. \n\n\"I found a syringe case and two vials,\" Jinx told Rumor. \"I am injecting him with both. Oh shit he quit breathing! I am doing mouth to mouth.\"\n\n\"Damn it Louis, you better pull through,\" Rumor growled.\n\nThe Inquisitors and demons were at a standoff. The tension of the brewing conflict began to manifest in the atmosphere of the room. Dark and light began swirling around the other. A kind of mystic Yin-Yang formed in the center of the chamber. Jinx continued to give Louis mouth to mouth until he began breathing on his own. She watched as his head wound began closing on its own. What the hell was in those vials? Louis took a single deep breath and his eyes snapped open. His pupils were dilated and he slowly sat up.\n\n\"Louis, are you alright,\" Jinx asked as he slowly got to his feet.\n\n\"Yeah,\" he said. \"I think I will be alright. That really fucking hurt!\"\n\nHe stared at the growing darkness and suddenly his mind was ablaze with understanding, comprehension and he knew what to do. He turned to Jinx and snatched the relic from her neck. He took out one of his gauss pistols. He popped the clip and handed it to her.\n\n\"Hold this for a second,\" he said as he closed his fist over the relic.\n\n\"What are you going to do,\" Jinx asked as he began to sing.\n\nThe melody was soothing and drew power from itself and grew stronger. The light from the relic became sun bright but didn't hurt their eyes. Once the song was finished he opened his hand and the medallion was now an ornate metallic disk inscribed with prayers and infused with the power of Rome. He placed the relic into the clip and returned it to his pistol.\n\n\"You aren't doing what I think you are going to do,\" she asked and he smiled.\n\n\"Oh yes I am,\" he said as he took aim and invoked the shatter point spell once more. \"Gotcha mother fucker!\"\n\nLouis fired and this time the unrelenting power of saint and technology merged to destroy a primordial darkness. The altar shattered and the demons and their master were sent screaming back to hell. Louis smiled, handed Jinx his pistol and collapsed. The darkness this time was absolute and perfect. When he fell there was not a single ripple in the astral. Louis found himself on a familiar ocean. Above him storm clouds and the storm struck without hesitation and without mercy. He watched as the thirty foot wave crested and fell upon him like god's own hammer. His body was forced beneath the surface of the sea and he sank like a rock. \n\n'I deserve this,' he thought as he fell. 'I defiled a sacred relic. I murdered that girl in the jewelry store. I have fucked my mother, my sister and my aunt. I deserve whatever follows.'\n\n'You are such a fucking martyr,' Yog-Sothoth whispered in his mind. 'Are you sure you aren't really a masochist in disguise? I mean really Louis, you have been given so many gifts and you still cling to tiny things like morality. I don't know of any other being with your potential that would see things the way you do.'\n\n'Fine, what do you think I should do oh great and mighty Gate? You, who are eternal, dwell in the ever present past, present and future, what the fuck should I do?' Silence.\n\n'You know, I will put it in terms even you can understand Louis. Get the fuck over it! Let go of all the bullshit and just fucking live! Go meet with Jon and settle things there. Sleep with Kat while it lasts. Go home and tag team that little trio of mom, aunt and sister. Then, when the dust settles, help Gabrielle raise your child.'\n\n'Wait, she's pregnant,' Louis asked and there was only demonic laughter.\n\nLouis opened his eyes and he was naked and in bed. He tried to move but his spine stung when he attempted it. He cursed and Feng was hovering over him. She had reverted to her Thorn aspect and was smiling from ear to ear.\n\n\"You still function,\" she said.\n\n\"Yeah, I am still alive,\" he replied. \"It's good to see you too Feng.\"\n\n\"What do you need and I will fetch it,\" she said eagerly.\n\n\"Fresh coffee, a straw and a recap on what the hell happened.\"\n\n\"The ladies Rumor and Jinx are still here,\" Feng said. \"They wanted to debrief you and give you your commendation.\"\n\n\"What fucking commendation,\" he asked once more trying to sit up and cursed again. \"Fuck that hurts!\"\n\n\"You are lucky to be alive,\" Kat said and it was obvious she had been crying and recently.\n\n\"I am fine, just a few bruises.\" Louis said.\n\n\"She's right,\" Rumor said. \"If it hadn't been for Jinx and your little syringe kit you would have died.\"\n\n\"The syringe kit,\" Kat said. \"Those vials were empty.\"\n\n\"The ones on top were,\" Jinx said grinning. \"But not the ones in the hidden compartment, the force from hitting the wall dislodged the mechanism. I used both vials and here you are living and breathing.\"\n\nLouis looked at Kat and she shrugged. The Inquisitors watched the silent exchange and waited for the explanation and it was amazing. Kat talked about their trip to Old Man Corvinus and their purchase of the kit on a whim. If it hadn't been for that Louis would have died from his injuries. What the hell had been in those vials? It was linked to Professor Griffon and his research. With the help of both Inquisitors, Louis was able to sit up. Feng returned with coffee and a straw. Louis had her add a search for a Professor Griffon at the end of the nineteenth century. He didn't feel any different besides the pain. When he asked Feng to display his x-rays she pointed out the damage to his spine. The doctors had done what they could but they were unsure about his long term prognosis. It was the nature of the beast.\n\n\"Spinal injuries are tricky,\" Feng said as he sipped his coffee through a straw. \"The swelling could go down and you could be perfectly fine or well... we shall think positive.\"\n\n\"Yes we will,\" he said. \"I will walk again.\"\n\n\"You give it to him,\" Jinx whispered.\n\n\"When he's ready,\" Rumor growled back.\n\n\"Enough already,\" Louis said glaring at them. \"What is this commendation Feng mentioned?\"\n\n\"Since I am the senior Inquisitor present it is my duty and honor to award you the Sicarius. It is the weapon of an Inquisitor. This one has been blessed by the Holy Father himself during the entire crafting process. He blessed the ore as it was melted down, the smith who forged the blade and a final blessing during the weapon's final cooling. May it serve you well.\"\n\n\"I don't know what to say,\" Louis said as he opened the box. \"Why does Rome feel I deserve a commendation?\"\n\n\"For your ingenuity in creating what is being called hallowed ammunition,\" Rumor replied. \"Silver is all good but in situations such as what we faced something more is required. Your brilliance will save many lives. Now I have a question, what the hell was that thing in the basement?\"\n\n\"I guess you could call it an astral anchor,\" Louis said. \"All those people murdered created a kind of tear that manifested in the altar. It allowed them to charge it with negative energy so that they could eventually open a physical gate between the physical universe and...\"\n\n\"Yikes,\" Jinx cried out. \"I am glad you saved us Louis. I am in your debt.\"\n\n\"That makes two of us,\" Rumor added. \"If you ever need anything, just uh ask.\"\n\nThere was a hungry look in Rumor's gaze and he was in too much pain to take her up on her splendid offer. So he turned his attention back to the Sicarius. The weapon was eighteen inches from tip to tang. The marbled pattern of the metal was gorgeous and the runes on the blade were a prayer against the forces of darkness. The silver and pearl grip was as lovely as it was functional. This was a soldier's blade built to kill. He felt a headache coming on and closed the box. The women left to let him rest. He closed his eyes and winced at the one two punch of back pain and growing migraine.\n\n\"Feng close the drapes, the light is hurting my eyes.\"\n\n\"Yes Master Louis,\" she replied. \"Would you like anything before I leave?\"\n\n\"Please get me a couple of bottles of water. I am really thirsty all of a sudden.\"\n\n\"They will be next to the bed when you need them,\" she said as he slipped into a troubled slumber.\n\nLouis' pattern of sleep and consciousness were sporadic and in that time he drank all seven of the bottles of water Feng had provided. The bedside table had been replaced with a mini-fridge and stocked with water. So now there was a steady supply of fluids and this had an unavoidable consequence.\n\n\"Oh crap I need to piss,\" Louis said when next he awoke. \"Shit... fuck... damn...\"\n\nHe clenched his teeth and sat up. The pain that had kept him down for nearly forty eight hours was gone. There was no hint of it but the urging of his bladder was another matter entirely. He was up and heading for the bathroom in a flash. He was standing in front of the toilet and of course the lid was down. He reached out and his hand passed through the lid. \n\n\"What the holy hell is going on,\" he asked as he looked over his shoulder to see his prone form still in bed. \"I am astral projected?\"\n\nThe urge to piss disappeared and he walked over to his body. He looked down at the pain wracked features and grimaced. Damn that looked painful. There was no getting around it. He returned to his body and the moment he woke he shifted his form. The waves of pain lessened and as he had before he continued to shift from one form and sex to the other. Back and forth he went until he ended as fate would have it in the female albino form. While the pain was severely reduced his energy was spent. Louis closed 'his' eyes and slept.\n\n\"Master wake up,\" Feng whispered in his ear. \"Hurry up Louis and wake your ass up!\"\n\n\"Huh,\" he said opening his eyes. \"Hey Feng what's up?\"\n\n\"Change back... for the love of god change back! I can't keep the door closed much longer.\"\n\n\"Sorry,\" he said as he reverted to his male shape just as the door was forced open.\n\n\"Feng, are you malfunctioning?\" Kat said as she glared at the A.I.\n\n\"I told her to keep the door closed,\" Louis said intervening. \"If you want to blame somebody blame me.\"\n\nLouis got up and finished what he had started earlier. The sound of him relieving his bladder and the resounding sigh of relief echoed from the bathroom. He sniffed his pits and wrinkled his nose. He started a shower and found three women in the bathroom glaring at him.\n\n\"What the hell, I stink to high heaven,\" he said. \"You gonna draw lots for who helps me in the shower?\"\n\n\"I will generate a random integer between one and ten the closest wins,\" Feng said.\n\n\"Three,\" Kat said.\n\n\"Nine,\" Jinx picked.\n\n\"Six,\" Rumor said shrugging.\n\n\"The number was seven,\" Feng announced. \"Rumor has to decide if she wishes to... oh well... I will be outside.\" Rumor was stripping even as the others left. She climbed in behind Louis as he let the water wash away the funk.\n\n\"Damn it Feng you could have helped me out,\" Kat growled. \"He doesn't even know her.\"\n\n\"I believe there is a high probability by the end of the shower he will.\"\n\nRumor took the loofa and washed Louis from head to toe. She didn't miss a spot and he admired her attention to detail. He rinsed off and felt remotely human after his ordeal in Bob's basement. He started laughing and Rumor looked at him and raised a curios eyebrow.\n\n\"What is so funny?\"\n\n\"Bob's basement... you know Bob's Basement... sounds like an underground sex club.\"\n\n\"You are so bad,\" she replied.\n\n\"Let me show you how bad I can be,\" Louis moaned in her ear. \"What...?\"\n\n\"Is something wrong,\" Rumor asked watching as he turned his head as if listening for something.\n\n\"She is out there,\" Louis said. \"I can hear her heartbeat. Man is she pissed.\"\n\n\"Wait, you can hear her heartbeat, over the water from in here?\" \n\n\"Yeah, I can also hear those sighs of hers. Have you ever been with a girl before?\" Louis asked and Rumor just giggled.\n\n\"Of course silly, I am an Inquisitor after all,\" she said smiling. \"Go ahead, I don't mind.\"\n\nLouis kissed her fiercely and left her hungry and breathless. Naked, he stalked out of the bathroom into the bedroom. Kat looked up surprised as her grabbed her by the hair and she moaned as he brought her up to her feet. He looked her in the eye and nodded. His hands tore her clothes to shreds and led her by the wrist into the shower. Rumor pulled Kat into the shower and they kissed. They were both moaning as their hands explored each other's bodies. Louis watched enjoying the view quite a bit. While Kat was the classic red haired Russian beauty, Rumor was the tall leggy European brunette. Louis shivered and slipped behind them as they continued to get to know each other. He let out a sigh as the hot water struck his back. ",
        "\"We've decided,\" Kat said.\n\n\"I didn't hear any talk,\" Louis replied inquisitive.\n\n\"It's a girl thing,\" Rumor said. \"Let's take this into the bedroom and we can clean up later.\"\n\n\"I like the sounds of that,\" he agreed.\n\nThe three of them dried off and walked into the bedroom. Louis stopped when he saw a naked Jinx posing on the mattress. She had her ass high up in the air and her face buried in the pillows. Louis smiled as he understood. They had planned this while he was recuperating. The pouting Kat, the eager Rumor and the shy Jinx, they had worked this entire thing out already. He had never been with three women at once this could be quite entertaining. Louis walked up to the bed and sat on the edge. He lightly caressed Jinx's ass and she whimpered. Her sex was slick from her arousal. He took an index finger and traced her labia and she yelped in surprise.\n\n\"I think she likes it,\" Louis said smiling. \"Let's see just how wet she is.\" \n\nHe slid two fingers into her very snug pussy. Jinx's pussy muscles gripped his fingers and he was eager to feel her wrapped around his cock. He withdrew his fingers and placed them in his mouth tasting her most intimate place. Louis was about to ask how this was going to happen when he was pounced. Bodies tumbled, positioned and repositioned. He ended up on his back in the middle of the mattress. Jinx had her pussy over his face while Kat instructed Rumor in the most ancient and profound art of sucking dick. \n\n\"Do what I do,\" Kat said.\n\nLouis felt her tongue trace the entire underside of his erection from base to tip. The next tongue he assumed belonged to Rumor. Not to leave poor Jinx out of things he began eating her out. Jinx went from quiet shy Inquisitor to an eager sexual participant. Louis lapped at her pussy lips and heard each of Jinx's moans. His own moans were building as he discovered what a quick learner Rumor was. Kat had her taking half of his cock between her lips. He stabbed his tongue between Jinx's pussy lips and treated her to the infamous snake tongue technique. Jinx ground her pussy against his face now and went from excited to a passionate cursing lover. He had lost track of who was doing what to his cock. Rumor was that good and that eager. Was she the one suckling his balls or was she the one going down on him? It didn't really matter. Jinx cried out as her pussy clenched around his tongue.\n\n\"How are you doing that,\" she asked as she recovered from her orgasm.\n\n\"Doing what,\" Rumor asked.\n\n\"His tongue is so damn deep inside of me,\" Jinx purred. \"It's doing this pulsing thing and unnnnn damn that feel good!\"\n\n\"It's time,\" Kat said and bodies were moving around now.\n\n\"Like this,\" Rumor asked as Louis felt pussy lips brushing against the head of his cock.\n\n\"Perfect now just drop down nice and slow, I'll hold it for you,\" Kat replied as her fingers wrapped around the base of Louis' cock.\n\n\"UNNNNNN it's so damn thick,\" Rumor moaned as he slid inside of her. \"Oh Shit... filling me up!\"\n\n\"His tongue is getting bigger,\" Jinx whimpered. \"Can he do that?\"\n\n\"Yes, just enjoy it,\" Kat said soothingly.\n\n\"Oh my goodness so thick... so long... it's stretching me,\" Rumor growled. \"I never thought my first time would feel this good. Oh damn he just got harder!\"\n\n\"I think he likes being your first,\" Kat giggled. \"I can't wait to see him pound the shit out of Jinx.\"\n\n\"MMMMMMMMMMe neither,\" Jinx purred. \"His tongue is driving me crazy. It feels like, well like a snake slithering in my insides but not in a bad way.\"\n\nLouis began to thrust his hips upward meeting Rumor's downward movements. This caused the Inquisitor to cry out as she experienced her first orgasm with a man. She ground hard against Louis as her body shuddered. Jinx and Rumored swapped places. Louis treated Rumor just as he had Jinx and she like it even more than Jinx had. Kat talked Jinx into a reverse cowgirl position. She held Louis' cock and guided it inside of the younger girl. Kat stared intently as the head of his cock opened Jinx up fully. It was a very tight fit indeed. Her narrow hips and tiny sex were quite the combination for what followed.\n\n\"Holy shit... it's not gonna fit,\" Jinx squealed. \"It's just too... UNNNNNN... dddamn it's in.\"\n\n\"It was touch and go there for a bit,\" Kat purred. \"Louis I wish you could see this. It is one hell of a sight. Your cock is literally stuffed inside of her. Whenever you're ready sweetie, you can start moving, yeah just like that. How does that feel?\"\n\n\"Unfuckingbelievable,\" Jinx purred. \"Oh I want to do this a lot. Can we do this more? I LIKE cock!\"\n\n\"You are a hit lover,\" Kat said with that sexy lilt in her voice.\n\n\"Oh... oh... Oh yeah...\" Jinx was panting as she rode him.\n\nRumor hadn't been idle she was riding his tongue as if it were a cock. She was rocking her hips driving it in and out of her cunt. He was looking forward to taking a more active role and he didn't have long to wait. Poor Jinx and Rumor were both building quickly towards, by the sounds they were making, pretty damn strong climaxes. Kat was cursing at them and encouraging them at the same time. Rumor went off a few second before Jinx. Louis retracted his tongue as both women rolled off of him panting and gasping. He sat up and there was Kat, standing by the side of the bed. She was bent forward and ankles in hand.\n\n\"Now that's how you tell a guy you're interested,\" he said as he moved behind the redhead.\n\n\"If you are gentle with me I'll wring your bloody neck,\" Kat growled.\n\n\"It's your funeral,\" Louis said as he eased just the tip of his cock inside of her.\n\nHe waited a full six count before slamming his entire length inside of her. Kat let out a sound that was hard to describe in words. It was part surprise, part hunger and an equal measure of plain old animal lust. He heard the two Inquisitors adjust their positions on the bed as he began pounding the hell out of Kat. Now that they had a better look it became a play by play commentary.\n\n\"Look at her face,\" Jinx said. \"She looks almost... angelic.\"\n\n\"His balls are slapping her clit like crazy,\" Rumor moaned.\n\n\"I want that...\" the two said at the same time and then giggled.\n\n\"So... what are you real names?\" Louis asked as he continued to fuck Kat mercilessly just the way she loved it.\n\n\"Cassie,\" Rumor said.\n\n\"Jodi,\" Jinx replied.\n\n\"I wondered what the odds were that someone would name their children like that and two of them show up for me.\" Then without missing a beat he said. \"I am getting real close.\"\n\n\"I... I can tell,\" Kat moaned. \"On my ass... shoot it all over my ass!\"\n\nLouis thrust several more times before sliding free of her and painting her backside. Cassie and Jodie looked at each other and it was Cassie that took her turn at bat. Kat went to take a shower and wash up. Cassie got off the bed and presented herself to Louis. He touched his finger to his lips and she nodded. He took her by the hand and walked her to the nearest unobstructed section of wall. Cassie placed her hands up against it, kicked her feet out as if she were being frisked or arrested. Louis grabbed her hips and got her ass in just the right position. He took his cock and eased half of it inside of her.\n\n\"I was hoping you'd be up for another round,\" he said as he began moving.\n\nCassie understood the game and while she whimpered and moaned she never spoke. It was Louis' task to make her cry out. He built up the force and speed of his thrust slowly. She was definitely enjoying her second go round a lot. Unlike Kat, she was thrusting backward against him. Cassie desired a more active role in this little game. So be it, he thought, as he pounded her harder than ever. Jodi watched her friend and mentor get pounded and good. The faces Cassie made as she was being hammered from behind were far more intense than those she was used to seeing.\n\n\"You never make those faces when I go down on you,\" Jodi remarked and watched Cassie turn crimson.\n\n\"That's because you don't have a cock,\" she replied her eyes squeezed shut tightly. \"Close... damn I am close already!\"\n\nThe dark magic had risen unbidden and had entwined the young Inquisitor. Louis felt a small piece of her life flow into him and he stopped it instantly. The poor girl's knees buckled from the intensity of her orgasm. He eased out of her and helped her to the bed.\n\n\"Damn, I see why she is so infatuated with you,\" Cassie mumbled.\n\n\"She has talked about me,\" Louis asked as he made her comfortable.\n\n\"Of course she did silly,\" she purred. \"I am her sister after all.\"\n\nLouis stood there in shock. Gabrielle had never mentioned a younger sister. A sister she obviously confided in about her physical relationship with him. The thought was shoved aside when Jodi leapt into his arms and wrapped her legs around his waist.\n\n\"MY TURN,\" she squealed. \"How do you want me Louis?\"\n\n\"Like this,\" he said as he pinned her back to the nearest wall and slid inside of her.\n\n\"UNNNNNNNN... gently or I will break,\" she begged. \"I am so very tiny you know.\"\n\n\"MMMMMMMM I know,\" he said through gritted teeth. \"And so very tight... so very fucking tight.\"\n\nHe moved slowly enjoying the way her pussy gripped his cock. Jodi placed her head against his chest as he fucked her. \n\n\"I can see your thing going inside of me,\" Jodi purred. \"It is filling me up.\"\n\n\"I know,\" Louis grunted as his cock swelled inside of her.\n\n\"Oh shit, you are getting bigger,\" she moaned. \"Why are you getting bigger?\"\n\n\"I am close,\" he growled in her ear. \"Where... where do you want me to...?\"\n\n\"Inside,\" Jodi begged. \"I want to feel a man shoot inside of my pussy.\"\n\nLouis thrust harder and faster now. The sudden change of pace began pushing poor tiny Jodi headlong into her own climax. \n\n\"Harder... harder... I want you to fuck me harder!\" She pleaded with him and he gave her what she wanted. \"Oh shit, that's it... I am so close now too!\"\n\nThe two of them cried out together as Louis fired his load deep inside the young Inquisitor. Her nails drew angry red marks down his back as she came. They held each other tightly as they caught their collective breaths. Jodi recovered quickly and begged for more but Kat would have none of it. Louis needed his rest and they needed to get some sleep before they left the next morning. Playtime was over and Louis belonged to her for the next few days. Except for the day of shopping she spent with Jon Master's family and staff from Wind Sword Manor. The girls were out in force and he was glad for a day to sit down with Feng and check up on the tons of research he had heaped upon her virtual shoulders. \n\n\"Show me what you got,\" Louis asked.\n\n\"It is quite frustrating,\" Feng replied as she displayed a map of the continental United States. \"The more I discover the more I find there is to uncover. It is almost like geometric progression. However, it is reaching its end. The blue indicators are killings, the red are missing persons and the yellow are suspected serial killers.\"\n\nLouis stared at the map and the overlap was around eighty percent. The other twenty was still being processed. Then she displayed green circles that covered many of the empty quadrants of the map. Feng said that there were areas where occupations overlapped killings and missing persons. Then there was a series of neon pink lines that grew from a single point and ranged nationwide. That was the routes that Vitale drove over his time with the company. That was one of the final pieces to the puzzle. Those routes intersected many of the missing person reports that were left unaccounted for. It was monstrous! These bastards had been taking and killing people for decades. \n\n\"How many of these fuckers are still alive,\" Louis asked.\n\n\"Displaying suspects,\" Feng said. \"Here are there most current photos, occupations and ages.\"\n\n\"So many,\" Louis said. \"Are any of them in jail?\"\n\n\"Highlighting inmates,\" she responded. \"Twelve out of sixty seven and of those twelve incarcerated only three are for murder or kidnapping.\"\n\n\"Show me those connected to law enforcement or people of privilege or power.\" He asked and he gasped. \"Oh my god...\"\n\n\"Louis, what is wrong,\" Feng asked. \"Your heart rate and blood pressure have both spiked.\"\n\n\"I feel so damn helpless,\" he admitted. \"How many other people are going to suffer with these people running around free?\"\n\n\"Let me finish my work and worry about it then,\" she said soothingly. \"One thing at a time...\"\n\n\"You are right,\" he said. \"Thank you F... what the holy hell was THAT?!\"\n\n\"Louis?\"\n\nThe surge of energy washed over Louis and left him giddy and light headed. His body seemed to absorb it the way a lightning rod did electricity. It coursed through and after a minute or so he felt normal. It had been so damn strong he could actually determine which direction it had come from. \n\n\"Show me a map of London and any prominent structures along this line.\"\n\n\"Yes Louis,\" Feng replied throwing up a satellite image of the greater London area and a line running from his location outward.\n\n\"No fucking way,\" he said. \"Is that Wind Sword Manor?\"\n\n\"Yes it is,\" Feng said. \"Shall I call a cab?\"\n\n\"No, it might just be a coincidence and we are waiting for an invitation. I don't want to just drop by.\"\n\n\"Understandable,\" she replied. \"Would you like a run in the gym?\"\n\n\"Fire it up,\" Louis said as he closed his eyes.\n\nIt was late in the afternoon before Kat returned. She found Louis soaking in an ice bath. The bruises were prominent but not as bad as when he first awoke. Kat made a distasteful face but then began giving Louis a fashion show. She began with business suits and ended with some steamy lingerie. She finished with a long sensual strip tease and climbing into the shower.\n\n\"I'm right here,\" Kat purred.\n\n\"I know,\" Louis groaned as he climbed out of the tub. \"I'm almost... there... argh...\"\n\n\"Aw you poor thing,\" she moaned. \"Come here I'll make you feel better.\"\n\nShe was gentle and between the hot water and her eagerness he did feel better. Though he did have to explain the bruising and Kat found it interesting the neural implant had a direct physical impact. She would mention that to Nick and see how it all shook out in the end. They had just dried off when the phone call came in. It was Carol Masters, one of Jon's twin sisters and she was looking for Jon. The moment that Louis heard that Jon was missing his heart sank. He was positive that the energy surge that he had felt was directly tied to Jon. Kat and Louis agreed to come up to Wind Sword Manor and help look for him. There were a hundred plus acres to search.\n\nThe closer they came to the manor house the jumpier Louis became. Kat didn't miss this and he told her about the surge he had felt earlier in the day. It was dark by the time the town car reached Wind Sword. The entire Masters clan was assembled and they huddled around the massive stone hearth tossing out ideas for locating Jon. Louis kept looking over at the twins and comparing them. They really were identical. Colleen caught him looking once and despite the situation she smiled at him.\n\n\"Feng, I want you to run the entire spectrum. Let's get a satellite feed, infrared photography and try to trace his A.I.'s if you can.\"\n\n\"I am on it,\" Feng said and shut down everything else to perform the search. \n\nThey found nothing. There wasn't a single whisper of his A.I. since noon. It was as if they had fallen off the face of the planet. The manor had already been searched and again no sign of Jon. Louis wanted some fresh air and walked the grounds. There was a residual tingling in the air. He was at the source of whatever event had occurred and possibly spirited Jon away. He shifted his vision to the astral plane and gasped. Wherever he looked, within his line of sight, every living thing was bathed in a weird aura. He squatted down and dug his fingers into the rich soil and found that even the roots of the grass had been affected.\n\n\"What the hell happened here,\" Louis said aloud. \"I have never seen anything like this.\"\n\n'You have, just not on this level,' Yog-Sothoth whispered in his mind.\n\n\"I have,\" Louis said and looked at a small patch of grass. \"No way, how is this even possible?\"\n\n'Now that is a good question,' the demon god agreed.\n\n\"Thanks for the nudge,\" Louis said. \"Don't hear from you much since I went to Japan.\"\n\n'This is an unusual situation,' Yog-Sothoth laughed. 'This place reeks of another old one.'\n\n\"Are you saying that Jon or one of his family is affiliated with a being like you?\"\n\n'This is exactly what I am saying,' the alien demon chuckled. 'Beware Nyarlathotep...'\n\nThe aura was a clear sign of Temporal magic. Time magic on this level was unprecedented. Louis himself knew of only a handful of spells that utilized time as a component. Unless this was some sort of technology at work and if it was where the hell did it come from? Add the presence of another alien demon and things get real weird real fast. He had heard the name Nyarlathotep before and not in a good context. This entity was related to the Sultan and his court. He wondered if he needed to return to the Black Cathedral for some answers. It had been years since he had even pondered going back and now he was being drug back because Jon had gone missing. If Jon did have a connection to this old one it could mean really bad things. \n\nIt was after midnight when Louis returned inside and found blankets and pillows placed on the couch near the hearth. The fire had been built up and plenty of fire wood next to it if he needed it. Kat was nowhere to be seen but he suspected she was sleeping upstairs with the girls. The girls being Jon's mom and sisters, so he just smiled at the visual and stripped down to his boxers and got comfy on the couch. He closed his eyes and drifted to sleep with a smile on his lips.\n\nIt was pitch black but there was the sound of crashing waves echoing around him. He could smell salt in the air and knew he was close to the ocean. Was this a sea cave? He let the dream unfold and felt the psychic tug and followed it. It led him deeper into the cave system and a queer verdant radiation began to illuminate the tunnel. The tunnel led to a singular vast cavern. Louis stopped at the entrance to the cave and cringed. There was a dim glint of gold at the edge of his vision. Curious, ever curious, Louis walked forward to see what was causing it. \n\nIt was a child of the Dreamer in the Depths and it had been rendered in an eerie lifelike quality. The statue was twenty feet tall and the man-fish hybrid held a massive trident in one hand. The gold blade of the trident was what was giving off the pale illumination. There was another glint of gold and Louis followed that and another twenty foot statue. This one depicted what books of lore called the First Ones with their barrel shaped bodies, membranous wings and five pseudo feet. The top of the thing was crowned with five cilia covered protrusions whose function could only be guessed at. They were the master geneticists that had been mentioned to Louis years ago.\n\nThere were other statues and each of them belonged to nightmares and the category of monstrosity. Each of the two story carvings was set so that each was just inside the line of sight of the other. \n\nAt the center of the satellite statues was the hundred foot effigy of the Dreamer in the Depths. The imagery of the Dreamer was identical to that of the statue in the Black Cathedral except this idol was wrought from green stone. Louis looked up but the ceiling of the cave was shrouded in darkness. He cast the light spell and sent the sphere of radiance skyward until it revealed the roof. He let out a sigh of relief when he saw that the vaulted ceiling was raw stone uneven and free of markings. \n\n\"Look down,\" said a voice directly behind him.\n\n\"Dear god,\" Louis said as he saw the star map etched into the floor of the cavern.",
        "\"Hardly,\" the voice chuckled behind him.\n\n\"You have me at a disadvantage,\" Louis said as he turned to face the figure.\n\nHe was as tall as Louis was with dark swarthy skin and a keen intellect blazing in his eyes. His hair was long and dark with waves in it. He was dressed in a dark suit with a matching tie and yet there was something inhuman about him. The two regarded one another and that's when a singular detail came back to Louis. Nyarlathotep can take on a thousand forms and a few of them were human. One of those human forms was the dark pharaoh. \n\n\"What brings you here dark pharaoh?\" Louis asked.\n\n\"You are a lot better informed than he was,\" Nyarlathotep replied. \"He walked into things completely unawares.\"\n\n\"You mean Jon,\" Louis asked and the other nodded. \"Where is he? What did you do to him?\"\n\n\"I am not responsible for his displacement. I enlightened him just as the succubus and others have done the same for you.\"\n\n\"Displacement, that's an odd word to use. He's been dislodged in time. If you didn't then he must have somehow. He must have found something, an artifact or device. He fired it up and it bit him in the ass, literally.\"\n\n\"Close enough,\" the old one replied smiling its reptilian smile. \n\n\"Why me, what's my connection in all this?\"\n\n\"That will become clear shortly,\" Nyarlathotep said. \"I need something from you.\"\n\n\"What do you want and why?\" Louis asked taking a step back.\n\n\"You have made a huge mistake by impregnating that damn Inquisitor bitch of yours. You need to balance things out. You do this for me and I will spare your family.\"\n\nLouis clenched his teeth and made a fist but he knew how lop sided this fight was. No matter how fast he was or the most deadly spell he cast it would be ineffective against something like Nyarlathotep. A sense of futility overwhelmed him. Louis lowered his head and nodded. He was willing to do anything to protect his family. \n\n\"I knew you'd see things my way,\" the demon god chuckled. \"Let's get things started...\""
    ],
    "authorname": "Lost Boy",
    "tags": [
        "bondage",
        "anal",
        "magic",
        "harem",
        "demons"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/spell-crook-and-handle-pt-06"
}