{
    "title": "Nia Ch. 05",
    "pages": [
        "Many thanks to Mriceman1964 for his endless help and enthusiasm, his sense of reality, and his understanding of how my thought-processes work!\n\nMany thanks also to Firefly for lighting-up the dark recesses, and for her unfailing interest and ability to step into critic mode and tell me when she thought I was just plain wrong! Thank you both!\n\nIf you like this, please rate it, if you didn't please tell me why and I'll try and do better next time out. If you want to be rude, please, go ahead, the nasty or obviously insane stuff will just get deleted, and you only get one chance to post an anonymous comment, so if you want to be nasty again, you'll have to use your site name...\n\nAll comments are noted and acted upon, apart from those exceptions noted above, and if you have any suggestions or advice, please, be my guest, I welcome anything that will help improve my style or content for the readership. \n\n___________________________________\n\nExcerpt from the private diary of Nguye't Morrison\n\nFriday, 6th May, 2011\n\nOn Thursday evening, Jamie and I spoke to this bloke in Toronto that Limbu, his contact in Singapore, had given him, a Sergeant Louis D'H\u00e9rault, a man who's spent the last 15 years tracking down illegally adopted children funnelled into Canada from Asia, the former Russian hegemony, and South America. This man seemed to think we had a good chance of tracking Hu'e as there were indications that one of the crooked adoption agencies he'd made it his business to close down may have been the one that handled the sale of the child. My blood was boiling by the end of the conversation. \n\nThe Asian policemen we'd talked to, like prod-noses everywhere, had been reluctant to use that word 'sale'; 'traffic' was the closest they'd allowed themselves. This man was under no illusions as to the transaction that took place, and employed no euphemisms; as far as he was concerned, it was a human being, a child, who'd been put up for sale, like a can of beans or a sack of onions. We talked for almost an hour, and afterwards, Jamie and I had decided; we needed to go to Toronto, there was a good chance we could pick up the trail there and follow it through to the end. \n\nThis was always supposing we were actually following Hu'e's trail; I tried not to think of the other possible fates she might have endured; I could only manage to fit my head around the possibility that she'd been adopted and brought up by a good family. To think otherwise would lead me to something I can't even begin to consider; the possibility of her death years before, or life as a sex-slave or prostitute in some hell-hole. Either one of those possibilities can't be allowed into my head; to entertain them is to despair, and I still have hope, as does Jamie, darling, brave, caring Polar Bear that he is. As long as I believe that Hu'e had and is having a good life, I can keep on searching for her; to even consider any other possibility is to lose heart and quit, and I won't do that, not while hope remains.\n\n++++\n\nJamie\n\nYesterday evening, Nia and I had a long and interesting chat with this French-Canadian guy, a real, live Mountie, working with the Toronto Organised Crime Squad, together with the Special Victims Unit of the Sex Crimes Unit, of all things, digging into babies-for-cash adoption rackets, both recent and historical, and he mentioned that he may have possibly located Hu'e and the family who adopted her. He mentioned the information Limbu had sent him, and, in conjunction with the collated data from the stuff I'd brought back with me from Da Nang, hinted he was almost positive he had the right child, right age and gender, right timeframe, and was waiting for confirmation of some things from the US State Department. \n\nHe also mentioned that had been receiving some encouraging feedback from various overseas and foreign adoption advisory bodies in the United States, as well as some unofficial but very helpful intelligence from the FBI. He finished by stating that we could do worse than look over the information and files he had, and invited us over to do just that. That was all I was waiting for, so this morning Nia trotted over to the Canadian High Commission in Grosvenor Square, a short walk from Bond Street tube station, to get our visa status confirmed. Luckily, UK citizens don't need visa's, so I was in the throes of sorting out flights for us to go to Toronto. \n\nNia was excited at travelling to Canada, and keyed-up at the prospect of possibly tracking down her sister, our sister, in the next few days. I didn't want to burst her bubble by telling her how unlikely and unrealistic her expectations were; she needed this, she needed to feel as if she was making headway against 28 years of silence and conspiracy in the disappearance of her older sister. \n\nLast night the reality of what had happened to Hu'e finally seemed to have hit home, kicked-off in part by this Mountie bloke's refusal to use the term 'trafficking' in relation to the baby trade; he preferred to be blunt, and told Nia that her sister had been bought and sold, like so many hundreds of thousands of children spirited away from their families, a commodity with a cash value. She spent a good part of last night crying as that truth finally came home to her. \n\nI managed to get us two standby seats for Toronto from Gatwick on Sunday morning, so Nia packed a couple of flight bags while I booked us a cab for the trip to Victoria so w could get the Gatwick Express train -- driving to Gatwick was always an unrewarding experience, especially if the M25 motorway was playing its usual 'world's biggest Car-Park' game.\n\nI went to see mum while Nia was out doing some last minute shopping, I popped over to give her a hug, and get one in return; I was starting to feel the strain here; I wanted to get this over with, but at the same time I didn't want to get anyone's hopes up. There were just too many long-shots to hope for here, and even Nia's breezy confidence, her 'million-to-one shots come-up nine times out of ten' attitude was starting to grate on me. \n\nI lived in a world of certainties and cautious gambles based on an informed understanding of the variables involved and the risk/benefit ratio. It was a predictable world, and to be suddenly catapulted into a course of action with no predictable outcome worried me, and for a very good reason; I could see how emotionally invested Nia had become in this quest of hers, how much she believed in the happy ending as an inevitable consequence of our efforts; but what would happen if it all came to nothing, if Hu'e had indeed been swallowed up and destroyed by this whole thing years ago, or become one of those faceless women haunting the meat-rack alleys and side streets of London, Paris, Tokyo, Odessa, Sao Paolo? What would happen to Nia then? What kind of a fall was she heading for? That was my fear; that was what was keeping me awake at nights. That was why I needed mum, right now. \n\nMum was fatalistic about our success or failure; like me, she was more concerned about the effect this whole thing was having on both Nia and on us as a couple. Mum completely approved of our relationship, and to be truthful, I had almost completely forgotten that Nia, quite apart from being the absolute centre of my world, was also my younger sister, but now a very big-brotherly concern was building in me, and I needed to share it with mum. She was pragmatic, but caring, and, as usual, managed to give me a measure of calm and rebalanced perspective.\n\n\"Little boy, you worry too much about how I feeling about this. If you want my blessing, I give it, but this thing you both have decided to do, it is for Nguye't, not for me. I am grateful and pleased my children want to help me find my baby, but she gone a long time ago, I have other babies here, now, and I worried about them, what this doing to them. Nguye't have strong passions, that is good, she will be good, strong mother one day, but passion need to be...balanced? yes, balanced, with other parts of life, otherwise become obsession, that not good. This is where my little boy must help her. If she not find Hu'e, or find out she is gone, that is when she will need Huyn'h, she will need your strength.\"\n\n\"If you not find Hu'e, she must learn to understand, then, and you must help her, little boy, that I have not really lost Hu'e; every time I see Nguye't, I also see Hu'e, so she still here, a small part of her, in Nguye't, and I see her very day. This is what Nguye't need to understand, this is what little boy can help her to see; that both my daughters are still here, they both have same part of me, and so I see them both every day, just like I look at my little boy and see my sister every day. No-one ever really leave, it just how you look for them that count. I not have separate place in heart for each of my children, all of them live there together, so little girl not really gone, for me she will always be in my heart, maybe best place for her, yes?\" \n\nI was far too big to lean on mum now, like I used to when I was small, but I really needed to huddle up against her right now and whisper how scared I was, like I did when I was little, but grown men can't do that. She sensed what I was feeling though, so she leaned on me instead, her arm around my waist and my arm around her shoulder, still comforting, still my mum. I sat in silence, not knowing how to tell her what was wrong, but of course she knew she knew something was bugging me; she'd been reading my mind for years, after all. She'd also perfected the art of the pointed silence years ago, and now she was pointing it at me, forcing me to say what was really on my mind. Finally I couldn't hold out any longer.\n\n\"I'm still worried about Nia, mum. She's become this focussed, driven thing, she's forgotten about the job she wanted so much, everything in her is pointing at what we're doing to find Hu'e. I sometimes wish we'd never started this, because if it comes out any way other than us finding her alive and well and happy, it will destroy Nia, and I can't allow that. Talk to her, please, mum, get her to damp it down a bit, make her see that this may not have a happy ending, because I don't know how to!\" \n\nI was nearly in tears over this. Nia was worrying me no end with this task she'd thrown herself into, this quest I'd that I'd promised I'd see through with her. The problem is, she couldn't see that sometimes things don't end the way you want them to, and if you invest all your time, and effort, and heart in them, where do you go if they collapse and fail?\n\nMum patted me on the chest, her favourite comfort gesture.\n\n\"Little boy not have to worry, Nguye't coming here from shopping, I talk to her. You go home, calm down, make sure you have everything you need for trip, I make daughter see what she doing, not to worry!\"\n\nFeeling much less pressure now that mum had agreed to head Nia off, I went home and puttered around, checking and re-checking our ticket claim documents and passports half a dozen times, adding and removing again clothes from our flight bags, and checking and re-checking our documents again. Eventually I sat down and watched a film, getting half-way through it before I realised I had no idea what it was about, nor did I care. At last Nia came flying in, calling out my name and tossing her bags and packets aside to jump on me, a very gratifying feeling.\n\n\"Oh Jamie, I'm sorry, baby, really, mum told me what you talked about, I never realised you were so worried! I'm sorry, Polar Bear!\"\n\nAll the while, she was kissing me all over my face and lips, pecking me as she apologised, her smile back again as she saw mine, and the lump in my pants was also a source of an extra large grin from her!\n\nShe jumped off me, tugging me to my feet, and towed me into the bedroom, where she began undressing, throwing her clothes off in her haste to get naked. When she got down to her underwear I stopped her; this was my area of expertise, and I intended to apply my considerable skills in the area of extracting a pretty girl from her underwear. \n\nI slipped my hands into the back of her panties, enjoying the feel of her silky smooth bum, jiggling the cheeks slightly as I kissed her, and pushing her panties down to free her lovely globes. Nia kicked them off and reached up to unhook her bra, but I got there first, peeling it off her and dipping down to nibble and kiss her delectable little nipples.\n\nNia was meanwhile undoing my jeans and unbuttoning my shirt, while somehow managing to keep a firm hold of junior and giving him an encouraging squeeze every few seconds, just to keep him alert and ready to rumble...\n\nI managed to get stripped-off and my cock was able to stretch out at last, instead of being confined. Nia has this effect on me, and even after three years together, all she has to do is walk in the room and I get that old feelin' and Jamie jr. unfurls and starts knocking on my fly. Being around her is definitely an on-going turn-on situation, with imminent leg-over prospects!\n\nNia took hold of me and pumped suggestively a few times, while curling her hand up and around the back of my neck to pull me in for a long, slow kiss, the kind she does so well, the kind that blow-torches my brain and lights up my groin. The combination of that kiss, and her hand on me was enough to make my cock rock hard; she was so obviously into the moment, and, from the feel of her cute little pussy, ready for action, that I couldn't resist backing her up to the bed. She smelled so sweet and delicious I wanted a serious taste, right now! \n\nShe backed-up until the backs of her knees contacted the bed, and sat down, her face level with my cock, but I didn't want to go there, not just yet. No, I wanted some fun first, so I urged her back onto the bed, laying her down so I could kiss her from tip to toe, starting with her legs. Nia loves it when I take my time, and pay attention to all her body, not just the obvious bits, so I started kissing up along the inside of her right leg, starting at the ankle. \n\nI brushed little feather kisses in a line up the inside of her leg while she lay back contentedly, a small smile on her face as I played her favourite game. I kissed slowly, sometimes stopping to lick lightly, especially the soft skin behind her knee, making her sigh aloud and murmur \"yes Jamie, oh yes, just there, like that, oh yes!\" and so on up, until I was kissing and licking the inside of her creamy, satiny thigh, my kisses slowly approaching the sweet treat at the juncture of her thighs. \n\nNia was slowly squirming on the bed as I took my time; this was a treat for me, and I wanted to enjoy every second of it. I kissed up to the narrow strip of flesh that separate the labia from the top of the inner thigh, then switched to the corresponding thin strip of flesh at the top of the left inner thigh, blowing lightly on her labia as I passed, making her jump and squirm. Now I kissed down the left inner thigh, again soft, feather-like kisses, a torment for Nia, but one she gladly endured as the prelude to what she really wanted. \n\nSlowly I worked my way down her left leg, kissing and licking and occasionally nibbling, enjoying the sight of her gently squirming and undulating, the sounds of her sighs and muttered encouragement, and the occasional giggle as a particularly tender or ticklish spot caught my attention. As I worked my way down, I could smell the scent of her arousal, the fresh, tangy, musky sweetness of my darling little sister bride-to-be as she waited for the next act. \n\nBy the time I reached her ankle (and a sexy ankle it is too!) she was shifting impatiently, squirming even more, her pussy starting to demand attention, and her face starting to blush, the prelude to the alluring flush she always developed when she was approaching orgasm. I knelt up between her legs, kissing her once on each of her sexy knees, looking down and grinning at her to gently torture her, making her wait for what I actually wanted to do most of all.\n\n\"Jamie, please, don't...\" she moaned, so I moved in for the kill. \n\nHer pussy was beginning to engorge, the hairless lips swelling and blushing, her tantalising scent rising more strongly now as her excitement increased. I leaned in and kissed her softly on her labia, tipping my tongue in the crease between the two lips, making her sigh and gently trail her fingers across the top of my head. I pushed my tongue between her lips, hearing her gasp as I penetrated her, lapping at her as her labia swelled even further and parted revealing her pink inner flesh. \n\nI licked along the length of her slit, tapping her hooded clitoris with the tip of my tongue, making her gasp and writhe delightedly, rubbing her vulva against my face. I took the hint and concentrated on her hooded clitoris, probing and stroking with my tongue until it fully emerged, stiff and engorged, slick with her juices and my saliva. I licked and flicked the little fleshy button, making Nia jump and squirm, then retreated, sliding my tongue between her labia again to lap and taste her inner recesses, and flick her inner lips, something I know she particularly likes. She showed her appreciation by gasping and murmuring my name, that breathy murmuring that always gives me a raging erection...\n\nI changed tack now, sliding my tongue the entire length of her vulva and beyond, from her clitoris to her little pink anus, long wet, sweeping strokes that made her breathing deepen as she became even more stimulated, pushing herself into my face, forcing my tongue to rasp faster at her clitoris, until, with a long gasping groan, she orgasmed, her juices flooding out of her to coat my face and chin. She shook and quivered as the waves of pleasure beat through her, her thighs quivering on either side of my head as she clamped them tight in the throes of her orgasm.\n\nAt last she came down, relaxing her grip on my head and allowing me to surface, breathless but happy, my erection solid and needy.\n\nNia smiled languidly at me. \"Your turn Polar Bear!\" she husked, but I already knew what I wanted. Eating her delicious pussy had punched all my buttons, and had built in me a powerful need to fuck her, hard, and nothing was going to get in the way of that...\n\nShe saw in my eyes what I wanted, once again that ability to sense what I'm thinking and needing, and grinned, nibbling her bottom lip as I moved up to rear above her. She took hold of me and rubbed the head around her sopping wet pussy, frigging herself with me before pushing me inside herself, me following suit as I slowly slid the rest of the way into her, enjoying the sound of her hissing intake of breath as I filled her. \n\nAs I began to slide in and out, she laced her fingers behind my neck, supporting herself as she rose against me, using me as leverage to hump herself into me, rubbing her pussy against me and stimulating her clitoris as I pounded into her. I could feel the effect this was having, her pussy was rhythmically contracting and squeezing my length as I slid in and out of her, and her neck and chest were flushing deeper as she raced for another orgasm. I was close to the edge, and when she began to hitch and gasp, I began to speed up, feeling that tightening in the pit of my belly that told me I was going to come, and soon. \n\nNia sensed this, her own pumping redoubled, the walls of her pussy squeezing me in rapid pulsating ripples as her orgasm built, until; \"Oooh, YES! God, Yes, Jamie, oooh, oooh, oooh, YESS!\" she shouted, her head going back and her juices squirting out from her, bathing my lower belly and balls in her warmth, the sensation setting off my own eruption, long, satisfying bolts of spunk exploding deep inside her as I came like a train, my spunk powering into her again and again until I was emptied out, dry heaving as I gave all my sperm to my gorgeous sister.",
        "I withdrew and slumped down, head ringing from the force and depth of my orgasm, gasping for breath, Nia equally winded, both of our chests heaving with our exertions and the intensity of our mutual orgasm. At last, though, we calmed, hearts slowing to normal, our breathing slowing, and we held each other and touched, caressed and kissed lightly, gently, maintaining connection and contact. \n\nNia rose up on one elbow to lean down and kiss me once, firmly, on the lips.\n\n\"That's to say 'Sorry' once again, Polar Bear. Mum told me how worried you were, and you were right. I'm sorry. I forgot about us, baby, but it won't happen again, ever, I promise! If this trip takes us nowhere, then I'll accept that, I'll know that at least we tried, and we can go back to being us, and our life, and our future. I love you so much, Jamie Morrison!\"\n\nThat was all I wanted to hear, and I held her close to me, feeling her warmth, her heartbeat, listening to her soft breathing sounds, and enjoying the feel of her softness against me.\n\n\"And I love you, Nguye't Morrison!\" I said, kissing her once again.\n\n++++\n\nWe checked into our hotel, the Radisson Hotel Admiral on the harbour front, not far from the famous CN Tower, but we weren't there to sight-see. The flight was uneventful, more so clearing Customs and Immigration, and we grabbed a cab to get to the hotel. Nia called the Mountie bloke, speaking to him in French, as his English seemed a little hit and miss. We arranged to meet at our hotel in a couple of hours to discuss what we'd found, to match up with what he'd got, and, hopefully, to get our next move.  \n\nWhile she was on the phone, I pulled out a change of clothes, stripping out of my travel clothes as I asked Nia what she wanted to wear.\n\n\"Nothing Jamie, you just keep going, I'll catch up with you in a second!\" she grinned.\n\nYoung Jamie heard that, and immediately started clamouring for attention, something not lost on Nia!\n\n\"Oh Jamie, I knew you were a good boy-scout, you came prepared!\" she grinned, unzipping her light summer dress and letting it fall to the ground, revealing not a stitch on underneath.\n\nI gaped, but I had to grin; she'd been sitting next to me on a crowded transatlantic flight practically naked for almost nine hours; she had style, I had to give her that!\n\nI dropped my last shred of clothing and moved to lie down, patting the bed beside me, grinning like an idiot as my girl padded toward me, making a show of climbing slowly and languidly up next to me. We were both tired from our flight, and hungry for a real meal, but some appetites have to take priority, and right now I wanted to nibble my sister a little, and hump her a lot, so dinner was tabled until we'd had a little canoodling time!\n\n\"So Princess, what do you want to do first?\" I grinned, kissing her delectable little nipples as I squeezed and fondled her silky firm bum-cheeks. \n\nNia grinned back at me, pulling my head down for a soft kiss, and whispered \"I want to practice making babies, Jamie; it's time to start now, before we forget what we mean to each other!\"\n\nI pulled back in astonishment, suddenly seeing a new side to her, the adult inside the playful girl she'd always been. She misread my reaction, tears clouding her glorious eyes.\n\n\"Don't you want children, Polar Bear; don't you want to make babies with me?\" she asked plaintively, and I nearly choked with all the answers that tried to rush out of me, so I pulled her tight to me, crushing her against me, letting my actions speak for me while I tried to say something coherent.\n\n\"Princess, I want to make babies with you more than anything in the entire world, I've thought of nothing else for you and I for the last three years!\" I managed to choke out at last, afraid I'd hurt my Princess, seeing her lovely eyes glitter as she smiled, her sexy coral-pink lips curved in an arc of pure happiness. She burrowed down against me, wriggling until she was nearly underneath me, then grinned again, mischief and good-humour restored.\n\n\"What are you waiting for, big boy, come play in my lady-garden!\" she smiled, fondling me and rubbing my cock back to full stretch. I dipped down to kiss her again, slipping my tongue between her lips to roll and slide it against hers.\n\nNia lay flat on her back, pulling me over her, her need obvious and apparent, holding me and rubbing my head over her damp pussy as our tongues fenced and darted inside each others' mouths. \n\nNia took a firmer hold of me and rubbed me more deliberately against her dewy pussy, gasping at the sensation as I rubbed over her swelling clitoris. As much as I wanted to lap at her for a while, to suck and nibble that little nubbin of flesh that did such good things for her, I was also feeling her need now. I needed no more encouragement to lean in and slowly slide inside her, enjoying the sigh of satisfaction as I slid home. \n\nNia slid her arms around my neck and wrapped her legs around my thighs as I began pumping into her, she responding by thrusting her pelvis back at me in counterpoint, meeting me as my length slid in and out of her, her pussy squeezing my cock rhythmically, delightfully, as I pumped. I was rapidly approaching the point of no return, as was Nia, her breathing was hitching in short, rapid breaths, and that tell-tale flush was spreading down her throat to blush her upper chest and neck.\n\nAt last, though, her movements became rapid, ragged and forceful as she jammed herself against me, and she went rigid, her body tense as a wire, her head thrown back, as her pussy tightened around my length and squeezed me remorselessly as her orgasm broke over her. \n\n\"Oh God, Jamie, yesss, so good, oh fuck, yesss, yesss, YESS!!\" she screamed, release pounding through her, making her shudder and tremble as waves of orgasmic pleasure coursed through her. I couldn't withstand the torrent of sensations shuddering through me as her pussy squeezed and massaged my cock, and I erupted in jet after jet of sperm, long thrilling spurts deep into her womb.\n\nEventually, she stopped shuddering and quivering, and she rolled back off me and grinned at me as I slipped out of her. Her eyes were hooded as she slowly rubbed her pussy, lubricating her finger until she could slide it into her tight little anus, in and out, in an increasing tempo. She began to squeeze my still-hard cock, and I hardened even more as I realised what she wanted.\n\n\"Jamie...?\" she moaned, and I leaned forward, pushing my cock against the tight ring of her anus as she raised her legs up so I could hold her behind the knees, holding her legs high enough to bring her anus into line with my cock. I slowly pushed forward, feeling the tightness engulf me like a squeezing glove, her ring clamping down over me once the head popped through, and then equal pressure along my length as her rectum stretched to accommodate my girth. \n\nThe feeling made me want to come again, immediately, and I had to grit my teeth and think unsexy thoughts to back myself off; not easy when a stunner like Nia was staring back at me with that little grin on her face!\n\nNow I began pumping, Nia pushing back against me, holding herself tight to me to give herself leverage to pump back. I could feel everything happening inside her, the ripples and squeezing of her rectum as she built toward another orgasm, the tell-tale flush showing me just how close she was.\n\nNia suddenly began to gasp and groan as her orgasm burned through her, her anus fluttering and squeezing in sympathy with her vagina as it too contracted and fluttered, rolling her orgasm on and on.\n\n\"Oooh God, Jamie, oooh, yess, oooh yesss, Jamie...!\" she groaned, clamping down tight on me as her anus contracted. The feeling of her clenching and clamping me was too much, and I came in an explosion of sperm, groaning as I came inside her depths, the sensation at once joyful and extremely satisfying. I came again and again, blasting my spunk into the depths of her bowels, bathing her insides with my seed. \n\nWe slumped back, sweaty and satisfied, to relax and bask in the afterglow, muscles twitching and fluttering as adrenaline raced around our bodies and only slowly dissipated.\n\nNia raised up on one elbow and grinned down at me.\n\n\"So, Jamie, are you going to marry me and make babies any time soon?\" she asked, her eyes twinkling, and I could only grin back as I gently pulled her against me.\n\n\"Princess, you just say the word and we go for it, I'm ready!\" I reassured her, hoping my words convinced her. I felt ready for a family, and I wanted one with her, so I hoped she got that from me.\n\nSuddenly her eyes opened wide and she looked at my watch as she jumped up.\n\n\"Ready! Oh Christ, Jamie, that Mountie's going to be here in a few minutes, up, Jamie, up!\" \n\nWe hustled off the bed and into the bathroom, Nia pushing me into the shower first, telling me I should go first so I could delay him while she showered, so after the world's quickest shower, just a lick and a promise, really, I waited in the room while Nia did whatever it was that women did in showers for the three hours it takes them to take a shower; I was wondering if she'd decided to re-grout the bathroom while she was in there when she finally made her grand entrance, and this Louis D'H\u00e9rault bloke still hadn't made an appearance, so we decided to go see if we could intercept him in the foyer.\n\nWhen we got to the main desk, I asked if there had been any messages for us, and the clerk pointed us at a paunchy, rumpled-looking man, telling me that my guest had opted to wait for us rather than be sent on up to our room. Nia and I walked over to introduce ourselves, and he jumped up, suddenly all smiles, grinning appreciatively at Nia. \n\n\"Your Pardon, M'sieur, for not coming up to your room, they told me you had a beautiful lady with you, so I thought it best not to disturb you!\" he asserted, Nia smiling at the compliment, while I thought \"Yep, this guy's definitely French!\" \n\nAfter a few amenities, and some lavish compliments to Nia, which she politely accepted, he got down to the reason for us all being here, and it was a bombshell.\n\n\"M'sieur, I have been going through past investigations, witness testimony, and trial transcripts, and I believe I know where the child you are seeking was taken, and who she was adopted by.\"\n\nNia gasped, and I leaned forward, eager to hear more, as he continued.\n\n\"She was originally passed off as an orphan from a children's home run by a family we had reason to believe was involved in people trafficking. This home was in Vancouver, but all records of her in Vancouver are missing, probably destroyed in an attempt to disguise the true scale of the operation in Canada. However, a child closely matching her description was legally adopted by a family in San Francisco through an agency in Sacramento connected to, and possibly run by the same family. My colleague in the San Francisco Police Department and his contacts in Children & Family Services have managed to locate the child involved, and are waiting for a judge to rule on whether you can contact her, seeing as you are not the birth parents. As she's over 21 now, there may not be a problem, but I'll have to wait for a ruling and the go-ahead from the District Attorney's office in San Francisco before I can direct you further.\"\n\nI got all this second hand, as his English was too fragmentary for me to understand what he was saying, so the body of the story was related to Nia in French, but Canadian 'Quebecois' French dialect, which is a little like a modern English-speaker trying to have a conversation about computers and data processing with an eighteenth century Welsh milkmaid. Nia only spoke modern French, so she spent a certain amount of time screwing up her forehead as she tried to puzzle out what he was saying through the maze of anachronisms and local dialect shifts. \n\nWe got the gist of it, though; Nia was trembling with excitement at the thought of finally getting to meet her sister. I, however was anxious in case some judge in California decided that we had no right or compelling reason to contact this woman who may or may not be Nia's sister. If necessary, we could fly to the Bay Area tomorrow; both Nia and I had multiple-entry visa's from previous trips, I had a B1 and Nia had a B2 holiday visa, so the whole ESTA 72-hour thing didn't apply, otherwise I think Nia would have gone berserk in the US Consulate in Toronto, a place noted for its mind-numbingly long waits and legendary lack of urgency. \n\nWe decided to take the sergeant to dinner as a thank you, Nia noting with well hidden amusement his attempts to be charming as his eyes rolled up and down her. More than once she had to twist away from him as he slipped his hand onto the small of her back and tried slowly sliding it downwards. \n\nI watched this in amusement; anyone who tries to grope Nia usually ends up bitterly regretting it; ask Mark Jameson if you don't believe me, but eventually amusement ran out, and I had to have a word with him, something along the lines of if he didn't keep his hands to himself, then copper or not, I'd shove his head so far up his arse he could use his bellybutton as a blow-hole, and even in my fractured French he got the message. \n\nAfter this, dinner went off very cordially, and we parted having agreed to come and see him and his files at nine a.m. the following day. We were both bushed; local time was 10 p.m. but our body clocks were still on GMT, and it was three a.m. for us, on top of that the exhaustion from a transatlantic flight, plus the fun and games earlier. Right now, the thought of bed and some sleep was uppermost in both our minds. When we got back to the hotel, we had the Room Service send us up some coffee and a club sandwich to share; Thai-Nouvelle Cuisine fusion is all well and good, if a somewhat odd combination, but there's nothing there to get your teeth into, and tired as we were, we were already feeling the pangs. \n\nWe sat and chatted and while we ate our sandwich and absorbed the fact that we were in Toronto. Nia idly played with her bracelet, holding it in front of the lamp to watch blue glints cast by the diamond's spilling over the tablecloth and my face, turning it in fascination to watch the stones glitter and sparkle.\n\n\"Jamie, look, the light on the tablecloth, look, it's exactly the same colour as your eyes, or mine I suppose; how marvellous, you said you bought it to match my eyes, now I believe you!\"\n\nWe finished up and got ready for bed, Nia yawning hugely as she undressed and climbed into bed. I followed suit and switched off the light on my nightstand, while Nia kept her bedside lamp on, as she always does. I was just falling asleep when I heard her stirring restlessly and muttering, the click as she turned on the radio and the muted gabble as she hunted through stations. The sound of classic Philly soul made itself heard, and she gave a sigh, relaxing as The O'Jays played softly in the background. I listened to the sound and drifted away, dreaming of Nia and her incredible eyes.\n\n++++\n\nMonday, 9th May, 2012\n\n10th & Anza, San Francisco\n\nBethany woke with a start, realising she'd been dozing in front of the TV again. She'd especially wanted to see the episode of NCIS where Ari gets nailed for murdering Caitlin Todd and attempting to kill Gibbs, and now she'd missed it, again. Her dream had been strange and confused, and it was already fading as she woke; she'd been holding a bracelet with blue stones sparkling in lamplight, and had wanted to hold the bracelet up to the lamplight again, to admire the frosty blue glint, but the little boy, Jamie, had appeared from nowhere and taken the bracelet away and said to her \"She's coming soon, you have to be ready, remember that, Bethany, and wake up Bethany, WAKE UP!\"\n\nShe'd jolted awake to see Corey standing there, a cup of coffee for her.\n\n\"Wake up, honey, you were snoring! If you want to sleep, you should go to bed! Heavy day today, huh?\" he grinned, passing her the cup as he picked up his own off the side table.\n\nBethany glared at him. \"I do NOT snore! If you want to talk about snoring, let's start with your mother, shall we...? And I wasn't asleep, just...contemplating, OK?\"\n\nCorey grinned. \"Sure, baby, just look this way a second...\"\n\nHe wiped the corner of her mouth with his thumb. \"Little bit of contemplation just...leaked out there...got it!\"\n\nHe grinned at her expression, and eventually Bethany grinned back.\n\n\"Where are the kids, Corey?\" she asked, luxuriously stretching out and pointing her toes.\n\nCorey leaned back and stretched as well, enjoying the pleasant crackle as his joints popped.\n\n\"Jodie's waiting for you to tuck her in, and Ryan's playing some kid game with orc's and wizards and dragons and shit like that on-line with his new friend; don't worry, parental controls are on, and it's age-appropriate.\"\n\nBethany cocked an eyebrow at him. \"What new friend is this?\"\n\nCory closed his eyes as he leaned all the way back. \"Some kid he met at school, little older than him. Johnnie, or Jamie, or something. Seems to like him, I saw him, little oriental kid, dresses kinda strange, punky, y'know, like something out of the 'Bad' music video, but he seems OK. He gave Ryan this.\" Corey flipped something to Bethany, and she caught it to look curiously at it. It was a small silvery medallion with a depiction of a tiger surrounded by Chinese ideograms.\n\nBethany turned it over between her fingers, stood up and went over to the shelf and picked up the token the little boy had given her five days ago.\n\n\"Look at this, Corey, some kid gave it to me last week, he insisted it was mine. His name was Jamie, too...\"\n\nCorey examined the token carefully. \"This looks real old, why'd some kid want to give it to you out of the blue? You say he gave it to you last week? Funny, I never noticed it. And it's a tiger as well. Looks like we've started collecting Chinese tigers!\" he grinned. Bethany took it back from him; as soon as Corey took it from her, she'd felt uneasy, a sense of loss pervading her, disappearing as soon as she took it back from him. Strange that he'd not noticed something so gaudy in a room dominated by neutral shades and pale tones, she mused as she walked out of the room to tuck her daughter in and get Ryan off the Internet and into bed.\n\n++++\n\nI woke gradually, lying on my side, without, for once, Nia's arm draped across my face. Instead, she was spooned behind me, her arm around my midriff and her breathing slow and soft against my back. I lay still, not wanting to disturb her, and enjoying the absolute quiet and peace of the room. After a few minutes, however, she stirred and gently patted my stomach. \n\n\"Morning, Polar Bear,\" she murmured into my back. How did she do that, I wondered, how did she always know I was awake or asleep? It was like she was tuned-in on Radio Jamie and always picked up my current state. Mum tells me that whenever I'm dozing in front of the TV with dad, Nia will come into the house quietly, telling mum she doesn't want to disturb me. How does she know I'm asleep before she's even come in the house?\n\nI put all that away as I turned to her.\n\n\"Morning Princess, welcome to Canada, what's your pleasure this morning?\" I smiled at her, and she grinned back and slipped her hand into my shorts, wrapping her warm little fingers around my hardening cock.\n\n\"Oh, I see!\" I smiled back, pulling her closer for a nuzzle and a grope, slipping my hands inside her panties to cup and squeeze her delectable little bum cheeks. Nia continued to squeeze and gently slide her hand up and down my cock while I squeezed and moulded her buttocks, pulling them apart to slide my fingers along her damp slit, feeling the lips swell and part as I lightly rubbed between them. Nia pulled herself closer to me and kissed me gently as she continued to rub and squeeze me, pulling me into solid, throbbing hardness. ",
        "I slipped her panties down past her hips, and she let go of me to pull them all the way off, and sat up briefly to tug her t-shirt over her head, before hooking my shorts and yanking them down far enough for me to kick them off. I gathered her into me, and she smiled and gently pushed me back down onto my back, sliding a slim leg over me to pull herself on top of me. My hands slid down her soft, smooth back to once again cup and fondle her taut buttocks, and Nia smiled at me as she reached behind and found me, pointing my hardness at her and sliding down to slowly impale herself on me. \n\nThe feel of her moist heat engulfing my head was incredible, as always, the tight warmth slowly enveloping my length as she slid down me until I was balls-deep inside her. Now she began to undulate, sliding herself up and down on me, gripping and squeezing my length as she did so, while simultaneously rubbing her clitoris on the wiry hair at the base of my penis. Neither one of us could stand this long, and I watched as the flush spread down her throat and across her upper chest as her arousal built. Her movements against me became more and more definite as she ground and slid above me, the squeezing and clenching of her pussy walls becoming harder as she moved faster against me. \n\nThe end came for her with a loud, hissing groan, and she collapsed on top of me, holding me tight as she shuddered and quivered on top of me, her head buried in my shoulder and her teeth not quite breaking the skin of my shoulder as she clamped down on me. The pulsing and squeezing of her vaginal walls and the sudden sharp thrill of pain from her teeth clamped on my shoulder was too much to bear. I came with a loud groan, filling my darling sister-fianc\u00e9e's pussy with my sperm as my balls tightened and delivered their tribute into her. \n\nAt last, my convulsing penis was stilled, the torrent of spunk reduced to a trickle, and I lay back, satisfied, the afterglow feeling hazy and warm, my Nia sprawled on top of me with my hands still holding her tight to me by her delightful bum.\n\nAll good things have to come to an end, and even though I would have preferred to lie there all day with my girl held tightly against me, I knew we had places to go and people to see. I smacked her on her bum, lightly, of course, just enough to make her grin.\n\n\"Come on, you, we have to go and see Sergeant Happy Hands, I bet you're looking forward with bated-breath to even more of his blue-chinned leering, aren't you?\"\n\nNia grinned cheekily at me. \"But of course! I live for middle-aged Lothario's pawing at me; you're just a distraction until the right combination of middle-aged spread and hair-loss comes along!\"\n\nWe showered in turns, Nia went first then she ordered breakfast while I showered, then we took a cab to the Metropolitan Toronto Police HQ on College Street to meet the sergeant again. After the usual amenities, enquiries if we slept well, that sort of thing, but this time without the leering innuendo, we went to the office he shared with the Special Victims Unit to talk about his progress, if any, with the San Francisco District Attorney. \n\nThe upshot of the discussion was that various state and federal agencies had been informed and were assisting in California, and we should go back to our hotel and wait. Louis assured us that the various people involved would work out a way for us to meet with the woman we supposed to be Hu'e. He gave us a fairly detailed run-down on how it would work, but to be honest, I soon got lost in the maze of legal and federal rules and regulations governing these situations, but as this apparently had happened before, legal precedent existed. He was hopeful that we should hear very soon, and advised us to sight-see and enjoy Toronto for a couple of days. He ended the meeting with a promise to call us or leave a message as soon as he heard. \n\nWe left in good spirits; Louis was confident that all would be well. He explained that this wasn't unusual, and he expressed his hope that we'd soon be on our way. Nia hugged and thanked him, which brought a delighted smile to his rumpled face. I saw his hands twitch to go around her; however, he also saw me watching him, and he'd obviously taken my quiet word with him the previous night to heart, as his hands stayed firmly by his sides...\n\nWe spent the next two days sightseeing in Toronto, as suggested, and lazing in our room, feeling useless but waiting for that word that meant we could finally go and see if this was over, at last. It had taken three years of our lives, and to be honest, it was starting to become wearisome and depressing; a resolution one way or the other would have been welcome, whatever the outcome. \n\nI was really starting to feel like we'd come as far as we ever would; perhaps she really was gone forever, and we'd followed a dud clue to the wrong person? The fact is, I'd lost hope, and I'd lost faith in Nia's certainty that her sister as somehow still alive, happy, healthy and rarin' to find her real family; supposing she was happy in her family here; had Nia considered that? I didn't think so...\n\n++++\n\nWednesday, 12th May, 2012\n\n10th & Anza, San Francisco\n\nBethany and Cory were sitting in the kitchen, chatting about work and drinking a coffee while they waited for the lasagne to finish, when there came a ring at the doorbell. Bethany looked accusingly at Corey. \n\n\"If that's your mother again, I swear, I'm driving her up to Marin Headlands and kicking her off! Every time one of her 'relationships' implodes, she comes here, loaded, and then I have to explain to the kids, again, why Gramma's crying. And she won't leave! She drives me batshit and she won't go home, and that drives me even more batshit!\"\n\nCorey grinned ruefully as he headed for the door.\n\n\"She doesn't mean anything by it; she's just trying to be part of the family!\" \n\nBethany snorted. \"Why can't she be part of Jo and Eric's family, or Carl and Lena's family? I'll tell you why; it's because Eric and Lena both put their foot down, that's why. Visits I don't mind, turning up unannounced and loaded is becoming a regular thing, like it's some kind of right. Your family saw me coming, that's the problem; your sister and your brother don't have any problem keeping her and her drinking away, why don't you?\"\n\nBethany turned and went back into the kitchen to check on the lasagne; despite her objections, she knew she wouldn't turn Corey's mother away, she never had, no matter how scary drunk she'd been in the past, so she contented herself with muttering darkly about the family members who lived inconveniently far away and so had a perfect excuse not to take on Maureen Warren and her relationship issues. Bethany heard the sound of voices, male voices, not Maureen's slurred tones, Corey speaking with however it was, and the sound of the door closing, and him asking someone to take a seat.\n\nCorey appeared in the kitchen doorway. \n\n\"Babe, turn that off, someone's here to see you.\" \n\nHis tone and the expression on his face told her something was up, so, setting the oven timer for another 20 minutes, she wiped her hands and followed him into the living room.\n\nThere were two men standing up as she came into the room, and they introduced themselves as Detective Harry Regan, of the SFPD Special Victims Unit, and FBI Special Agent John Davison.\n\nBethany moved closer to Corey, unnerved by having the police and the FBI in her home.\n\n\"Corey, what's this about, why have...?\" she began, but Regan was quick to ease her fears.\n\n\"Mrs. Warren, we belong to a Task Force that's been investigating child trafficking and babies for cash dealers, both here in the continental United States, and in conjunction with other National, federal and local police and law-enforcement bodies worldwide. One of the items that came up was the matter of your own adoption. The Agency that arranged the adoption with your parents was a front for an international criminal enterprise selling babies on the black-market for legitimate adoption. We believe you yourself were obtained in this way, from an agency in Vancouver, smuggled into the US, and passed off as another child, with falsified birth records. Special Agent Davison has been in contact with a team in Canada investigating the same organisation in Canada and worldwide.\"\n\nSpecial Agent Davison spoke up now.\n\n\"Mrs. Warren, the team in Canada were able to track you across Asia and into Canada, thence to California due to the cooperation of several dedicated and motivated teams in various countries. A female child closely matching your description, including the birthmark on the left side of your neck, was stolen from a subdivision of Da Nang known as Hoa Hiep.\" \n\n\"That child subsequently surfaced in Vancouver less than a month later, and promptly disappeared, the child that was listed under that name and adopted in Vancouver was the wrong gender and age, and then a child closely matching the original description from Vancouver was adopted by John and Phyllis Keyes of Pleasanton. I understand your adoptive parents have passed away, please accept my condolences. I want you to understand, they did nothing wrong; all the paperwork was correctly filed and notarized, and they took delivery of what they had every reason to believe was an orphan legitimately placed for adoption.\"\n\nHe stirred, looking closely at Bethany.\n\n\"Mrs. Warren, your real family have never stopped hoping for news of you. They have been searching for you, and it was them who alerted us to your case through their own investigations conducted in Vietnam, in Hong Kong, Thailand, Laos and Singapore. I was asked to show you this.\"\n\nHe took out a photograph and passed it over to Bethany who looked at her own face, her hair, even her birthmark, but it wasn't her, it was an older woman. She wordlessly passed the photograph to Corey, who whistled at the resemblance.\n\n\"Special Agent Davison, who is this woman?\" she asked, her voice low and steady.\n\nDavison looked at her steadily. \"This is Anh Thienh Lo, your birth mother,\" he said, gauging her reaction.\n\n\"I see. Will you excuse me please?\" said Bethany in that same low monotone, rising and walking away into the kitchen, mechanically checking the lasagne and getting the plates and glasses out of the cabinet. \n\nCorey apologised with his eyes and slipped into the kitchen.\n\n\"Babe, don't you want to know more, anything else they might have to tell you?\n\nBethany looked at him steadily, and slowly shook her head.\n\n\"I had a mom, and a dad, they're gone, but they were my mom and dad, not some face in a photograph!\"\n\nCorey tried a different approach.\n\n\"Don't you want to know about the rest of your family, who and where they are?\" and again Bethany shook her head.\n\n\"My family are here, and I know who they are!\" she almost shouted, lowering her voice to tell him, \"I don't want to talk about it, Corey; I just want to have dinner!\"\n\nCorey nodded assent and rejoined the two men in the living room.\n\n\"She's a little shaken by all this just now, let me have some time with her, I'm sure I'll be able to get her to come round.\"\n\nThe two men agreed, and left their cards with him. As they were leaving, Special Agent Davison added one thing.\n\n\"Mrs. Warren's younger sister is the one who finally helped us track her down; she put the final pieces together, she's been looking for her older sister for years; you might want to let your wife know that there are others in this who are hurting as well, who want to see her again, perhaps it may help her see things differently.\"\n\nCorey came back into the kitchen to find Bethany sitting at the breakfast bar with tears in her eyes, the photograph of Anh on the counter in front of her.\n\n\"Why did I have to find out, Corey, why now? I only just got over losing her, now I have another one, when does this end, who else am I supposed to lose before it stops hurting and just becomes normal? How many mother's do you have to lose?\"\n\nCorey hugged her, understanding what she was saying, but his eyes kept being drawn back to the photograph on the counter. The woman in it was definitely Bethany's birth mother, there was no doubt about that, the resemblance was startling, with even the same quirk in her smile.\n\nBethany noticed the direction of his gaze, and grimaced.\n\n\"I know, and I accept she's my real mother, but if I accept that, then what about my mom, where's she supposed to fit in all this? She was my real mom too, and I loved her, no-one's going to replace her!\"\n\nCorey soothed her as she began to cry.\n\n\"It's all right, it's OK to feel like that, mom brought you up, not this woman, but she's also hurting. You were stolen away from her, she didn't give you away, and she's been hoping and waiting for her girl to come back as well. You have a sister, did I tell you? She's the one who found you, and she wants to meet you, just to know her sister is alive and well I suppose. How much could it hurt to meet this girl, your kid sister?\"\n\nBethany stopped crying to look levelly at him.\n\n\"I have a kid sister? Really?\"\n\nCorey nodded. \n\n\"That's what the FBI said. She's the one who's been digging around the world, looking for you, trying to trace you; are you sure you want to tell her to go away? Whether you accept her or not, she's committed herself to finding you; you owe her something for that at least!\" \n\n++++\n\nI woke in the middle of the night, thinking Nia had called me, but she was fast asleep, her breathing slow and deep, so I dismissed it as a dream. As I drifted, Nia suddenly spoke, but she wasn't speaking to me; she was dreaming, and talking in Ting Viet, or so I assumed for a second, then years of listening to mum kicked in, and I realised it wasn't Vietnamese, it was some other language. I'd heard something like it once before, and I struggled to think where, then an image of Nia kneeling, hands clasped in prayer popped into my mind, and I knew where I'd heard this before. It was Cham, the Vietnamese Latin, and Nia had told me she didn't speak it, she only knew the prayers. Now she was having a conversation in her dreams, and she was speaking Cham like a native tongue, having a long and involved discourse with...someone. \n\nWhatever this conversation was, it was beginning to have an effect on her; she was speaking faster, almost desperately, and her head began whipping from side to side. I switched on my bedside lamp, and reached over to touch her, and her eyes snapped open, staring at me, but they weren't her eyes. Gone were her sapphire blue doll's eyes, now her eyes in the muted golden light from the lamp seemed to flash light smoky amber, golden and sharp. Her eyes narrowed, and she said something to me, still in Cham, then she smiled, and closed her eyes, her face relaxing as she dropped back into deep sleep.\n\nI the morning, I asked her casually if she'd had a good night. She looked at me and pursed her lips, debating whether or not to share with me.\n\n\"Jamie, I had the strangest dream. I dreamed of Hu'e, but that's not her name; her name's ...I can't remember. In my dream, she had a husband, and a little girl, and maybe a boy. She lived...somewhere with lots of wires overhead, I could see them in shadows on her face. She looked just like mum! She asked me for my bracelet, and I gave it to her, and she gave me a little coin in return, a red coin with a golden...thing on it, then I was in the Linh Son Temple in Upper Norwood with mum, and I was looking at the big statue of Hu Ye, and he spoke to me; he said 'You must go to her, now she is ready'. And I asked him where I was supposed to go, and he said 'You will know when you know'\" and I woke up. I tell you, when I have weird dreams, I have world-class ones! I suppose I'm just lucky it wasn't carrots with teeth and an overwhelming fear of boots!\"\n\nI looked at her, relieved she wasn't reading portents and omens and God knows what into it. She accepted it was just the usual type of hugely significant dream that means so much while you're having it, and fades to nothing after you waken. \n\n\"You were talking in your sleep last night, which is a first, you were gabbling away in Cham, long involved and noisy!\" I grinned, and she grinned back.\n\n\"Bullshit, I don't speak Cham, and neither do you. It was just garbled dream nonsense! What are we doing today?\" \n\nWe spent the morning poking around various markets and little shops, not finding anything particularly unavailable in London, but Nia's addicted to street markets, so we poked and prodded and rummaged, looking through 'genuine' Native American handicrafts with the 'Made in China' printing still just visible, wobbly Mexican pottery from Taiwan, and bootleg CD's by the box-load.\n\nWhen we finally got back to the hotel at lunchtime, Nia's appetite for pawing through cheap tat finally sated, there was a message asking us to call Louis at Toronto Police HQ.\n\nWhen I'd finished speaking to him, Nia looked at me questioningly, so I grinned at her.\n\n\"Let's get packed, we're going to San Francisco!\"\n\nNia squealed and jumped on me, then calmed down as we started to work out the logistics of this. I had a date and a place to meet this woman, Bethany Warren; Friday, May 14th, at the FBI building on Golden Gate Avenue. We were meeting Agent Davison, and a policeman, Detective Harry Regan of the Special Victims Unit, at three p.m. that day. I had the front desk arrange our booking for the Radisson Hotel on Fisherman's Wharf, not a million miles from Golden Gate Avenue, and asked them to arrange flights for us for that afternoon or early evening to San Francisco. They had our card details, and there was a knock at the door before we'd even finished packing, a Customer Assistant with our flight details for later that afternoon and ticket claim checks.\n\nWe arrived at the hotel at seven p.m. to be met by Detective Regan, a pleasant man in his mid-thirties, who briefed us on what the meeting was about.\n\n\"Bethany Warren was not too happy about this meet,\" he explained, \"she grew up the daughter of a family from Pleasanton, in the East bay, Alameda County, so she was understandably more than a little shocked to hear what we had to tell her. I showed her the picture of her birth mother, and I have to say, the resemblance is startling, as it is with you, Miss Morrison; there's no doubt in my mind that you and she are siblings, the resemblance is extraordinary!\"\n\nNia wanted to know if Bethany would be amenable or hostile, and Detective Regan shrugged.\n\n\"I...think she'll be...approachable. This is all a great shock to her, but she's handling it as well as could be expected; just don't get your hopes up that she'll run into your arms; she's still not comfortable about how this has all come about.\" \n\nWe had a quiet dinner at a superb place on Fisherman's Wharf, just a few minutes' walk from the hotel, and watched the seals basking in the last of the evening sun as we chatted about what the next day would bring. Nia was excited but pragmatic. I thought she'd had some unrealistic expectations from the start, but Detective Regan telling us that this Bethany wasn't exactly straining at the leash to meet us had wound Nia down several notches.\n\nAfter a restless night, Nia finally fell asleep in the early hours, waking again with a start at nine o'clock, jittery and unable to relax. She paced, twiddled, chewed her lip and whistled tunelessly until I could take it no longer. As we had several hours to kill, and we were in San Francisco, I decided that we might as well do some touristy things, so we rode a cable car and a Muni train, took pictures of the city from Marin Headlands, strolled back across the Golden Gate Bridge and took pictures of the double-decked Bay Bridge. We wandered down Market Street for Nia to buy something for mum and dad, and by then it was time to go to our meeting.\n\nAt 2.45 p.m. we were waiting in the lobby of the FBI building for Special Agent Davison and Detective Regan. We'd been given to understand that Regan was here at the request of Bethany, which seemed odd, but it was her choice. ",
        "Agent Davison came and retrieved us and took us to his office, where we waited for Bethany and her husband to arrive. Eventually here came a knock at the door, and Regan came in followed by two people. As he stepped out of the way, Nia gasped, as did the woman standing there. I was speechless. She looked exactly like mum, her expression, the way she held her head, everything. Nia was half standing, her hand pressed against her lips, and we all stood there in silence. Eventually, Bethany's husband gently nudged her, and she gave a start, tearing her eyes away from her rapt study of Nia's features.\n\nOnce we were all seated again, Agent Davison introduced us all, and I learned that the man with Bethany was her husband, Corey, Nia's brother-in-law.\n\nBethany began by asking us how we'd traced her, never once taking her eyes of Nia, and Nia just sat there transfixed, so I made all the running. \n\n\"Your mother, Anh lives in England now. She escaped to Laos after you were stolen, to get away from a police captain, a man named Thuyet. He wanted your mother to pass around among his friends, and he'd decided that he'd had enough of waiting. Mum went to the market one day, and when she came back, you were gone, and so was your father, Vienh. A neighbour smuggled her into Laos after your father's body was found; he'd been murdered, and you'd disappeared without trace. Your name was Hu'e Vienh Lo, and mum has never forgotten you, and never stopped wanting you back.\" \n\nI paused, trying to gauge her reaction, but Bethany's face remained impassive while I unreeled what we'd been doing over the past few years\n\n\"Nia and I first learned about you three years ago, just before Nia went to university. While she studied Law, I've been digging around in Vietnam, Thailand, Singapore, and Hong Kong, using my connections, and friends, and friends of friends, to try and get a line on you.\" \n\n\"A little while ago, we caught a break. I work in the Oil industry, and while I was on a survey in Vietnam, I managed to find some records that led me to Laos, then to Hong Kong and a gang of people traffickers. My friend in the Thai Border Force gave me some records and details, which I'm sure Agent Davison here has copies of.\"\n\nSpecial Agent Davison nodded in affirmation. \n\n\"The records and information we obtained from Mr. Morrison and his contacts have been invaluable in closing several other cases of this nature here in the US and in Canada.\" he asserted. He nodded at me to go on.\n\n\"Mum, your mother, my stepmother, has been hoping for news of you for 28 years, and it's only now, because of the sharing of information between several national and regional law enforcement agencies, that we've been able together all the clues that led us here.\"\n\nI stopped, because something was wrong here. Bethany looked disinterested, almost hostile, and the way she was looking at Nia wasn't sisterly at all; quite the opposite.\n\n\"Can I ask you something?\" she requested, sounding laconic and bored, and I nodded.\n\n\"What exactly does this have to do with me?\" she asked, looking at Nia, at me, at the FBI agent. Nia looked like she'd been slapped, and I could see from Davison's expression that this was not how he'd expected this to go.\n\n\"I'm sorry, Mrs. Warren, I don't understand...!\" he said, looking mystified, and Bethany stood up, looking at Nia and I.\n\n\"All this is very interesting, but it's ancient history and I'm sorry, but really don't see that it has anything to do with me. Corey, can we go now?\" she asked, her husband also looking equally surprised at her tone. \n\nNia half-rose from her seat, looking at Bethany in something closely akin to shock, while I moved to hold her as she wavered.\n\n\"No, please, don't go, please...!\" she murmured, reaching out to Bethany, who looked at her outstretched hand, and looked away, disinterest radiating off her.\n\n\"Corey, this is nothing to do with us, the sitter goes home at six, so we have to go!\" \n\n\"But you're my sister, don't you want to...?\" began Nia, but Bethany cut her off.\n\n\"No I don't, and I'm sorry, but you're not my sister. I have no family except my children, I had a mother, and I loved her and she's gone. Your mother is your mother, not mine; none of this has any bearing on me or my life, so I think you should just please leave me alone. I want no part of you or your family; they're not my family, and my life works just fine right now without any of you in it. It may have meant something 28 years ago, but you're 28 years too late, and I have nothing for you, and you have nothing I want. Corey!\"\n\nNow I felt like I'd been slapped, but the look on Nia's sweet face was boring an acid hole in the pit of my stomach.\n\n\"Please, you're my sister! My mother...!\" and again Bethany cut across her.\n\n\"Your mother missed me so much she wasted no time in replacing me with you, is that what you were going to say? I've heard enough of this; this is your issue, not mine, it has nothing to do with me, and I have to go, my kids need me! Corey, we're leaving!\"\n\nNia was whispering \"That's not true, it's not true, how can you say that? Please, don't leave; I looked for you for so long, we all did, please...!\n\nShe turned to me, shocked and stunned.\n\n\"Jamie, please...don't...Jamie...please...no ...\" she whispered, tears filling her eyes and spilling down her cheeks. My girl needed me to make this nightmare not be happening to her, and I knotted-up inside, because I didn't know how. Bethany resolutely looked away as Nia clung to me, my heart breaking for her as the hurt from Bethany's rejection etched itself on her face. \n\nI gathered her into me as she started to sob, Bethany's face still impassive, unconcerned. Her husband looked shocked, an expression almost of distaste on his face as he stared at his wife. Bethany waited for Agent Davison to show her out, and she and Corey left, his look and shrug apologetic as the door closed behind him.\n\nDetective Regan was shocked, confused, and sympathetic.\n\n\"I'm really sorry it turned out this way,\" he stated, \"I've never seen a reaction like that before, it caught me completely off-guard. I really thought Mrs. Warren was eager to meet her sister, obviously I was mistaken. I'm so sorry.\"\n\nSpecial Agent Davison came back and said pretty much the same thing. He had no idea what had sparked-off Bethany's hostile, almost aggressive response to us, to Nia in particular, and to be honest, I didn't really care. This was the fall I had been trying so desperately to avert for Nia, the thing I had feared most of all, and now I had to try and salvage her from this bloody mess. \n\nShe'd spent three years of her life, all her spare time and effort, boundless emotional investment, and she'd been rejected out of hand by the one person in the whole world she wanted so much to find. Bethany had refused to even touch her, and I think that had hurt as much as the outright rejection. Out of nowhere the old aphorism popped into my head; 'Be careful what you wish for, you may just get it'. Here was the living truth of that.\n\nI was outraged at the callous rudeness and lack of common politeness that woman had shown; what had my Nia ever done to her except search the world over for her? My girl was one step away from hysterics here, and that woman had looked at her like she was a nasty stain on the sidewalk. If anybody richly deserved a slap right now, it was Bethany Warren, I was certain of it. \n\n++++\n\nFriday May 14th \n\n10th & Anza\n\nCorey sat tight-lipped in front of the television, staring blankly and bouncing his keys, a pall of anger and shame surrounding him; anger at Bethany for her callous cruelty, and shame for the way his wife had behaved toward those two kids, who'd done nothing except criss-cross the planet looking for her. They'd looked like such nice kids, they'd tried to reach out to her, and she'd slapped them away, instead spitting bile and bitterness he never knew she had in her, showing a side of her he'd never seen before; he'd always believed Bethany was the sweetest, most compassionate, most loving person he'd ever met, so who was that obnoxious bitch back at the FBI Building? \n\nBethany was avoiding him, and even the kids had picked up that daddy was in no mood to be trifled with; one look at his face and they'd faded into their rooms; he'd been silent and uncommunicative in the cab back from Golden Gate Avenue, and Bethany knew that he was mad at her; no, correction, he was furious with her. He sat pondering, not seeing the images on the screen, instead seeing again and again the shocked anguish in that young girl's eyes, in Bethany's sister's eyes, reminding himself again that there had been no need for it, she'd lashed out at an innocent target. Right now Corey wasn't feeling particularly friendly toward his wife; she'd done a mean, cruel and spiteful thing, and he was ashamed of her, and ashamed of himself for watching her do it and not stepping-in to call a halt.\n\nHe came to a decision, stood up, and headed toward the door, bouncing his keys. Bethany stepped in front of him as he fumbled with the door latch.\n\n\"Honey, where are you going?\" she asked, although she had a fairly good idea.\n\nCorey looked at her levelly. \"Please get out of my way Bethany, I have to go out, I have to fix this and I may be a while.\" He brushed past her, and yanked the door open, and paused, turning to look back at her.\n\n\"Why did you hurt those kids like that, baby? They did nothing to you; nothing at all. They came looking for you, all they wanted to do was see you, so they could tell their mom that her daughter's alive and well; they were reaching out to you, all you had to do was just smile, give a little back, and walk away; instead you pissed in their faces. I hope you feel proud of yourself, you made that little girl cry for nothing. Who are you, and what have you done with my Bethany? Because the Bethany I married would never have been so cruel or callous. While I'm gone, why don't you go sit down somewhere and think of a really good reason why you behaved like that, because I can't!\"\n\nBethany watched him leave, wanting to go with him, not daring to call him back, and writhing inside with shame at the disappointment she knew he was feeling right now. \n\nHe was right; those kids had done nothing, and she'd felt a small, mean sense of triumph at lashing out at them to demonstrate just how much she didn't need them, to drive home that they weren't her family, in any sense. Bethany knew anything she told herself right now was rationalisation, pure and simple; the truth was, the thought of having another family had made her feel that she'd never really belonged to her mom and dad, but even thinking that had felt deeply disloyal to their memory; they were her parents, and though they'd now passed away, she was afraid of anyone taking her away from them. \n\nFeeling that way, it had been easy to attempt to drive these interlopers away, these people who'd come to claim her for their own family when she knew she wasn't and never had been one of them. She wanted to keep on being Bethany Keyes, married to Corey Warren, not this Hu'e whatever persona they were trying to saddle her with.\n\nEven so, the look on that girl's face, in her eyes, the hurt she'd caused her, hadn't made Bethany feel any better. She'd set out to hurt these people for intruding in her life, and she'd succeeded, and knowing she was wrong had only compounded it for her, because having gone there, it had been easy to keep lashing out, and that poor kid hadn't done anything to deserve it. Bethany felt wretched, and found herself wishing she'd been less dismissive, less obnoxious, and a little more understanding of what those two kids had been doing and where they'd had to go to find her. \n\nNow it was too late; she'd burned her bridges there, no doubt about that. Corey had gone to try and make it right, but she doubted he could, nor should he have had to; it should have been her, and that made her feel even more wretched, that she'd forced poor Corey to go and try and undo what should never have happened at all. Bethany looked at herself in the hall mirror. She needed to apologise, but she didn't know how she could, and Corey shouldn't be trying to do it for her. The look on his face had hurt her deeply, and she knew she'd lost a little of him because of this, and that hurt even more. \n\n\"I thought you were better than that...\" she whispered to her reflection, and the eyes that looked back at her were filled with guilt and self-loathing.\n\n++++\n\nNia was crying, my baby was crying in the other room, and I couldn't do anything about it. Bethany's rejection of her had cut right through her, and wounded her deeply, and I didn't know how to make it better. Now I had to call mum, tell her what had happened, and ask her how to comfort Nia, because right now, I wasn't in a comforting mood; right now I wanted to find Bethany Warren and tell her exactly what I thought of cruel bitches that hurt my baby and made her cry for nothing. I was just getting in the right frame of mind to pick up the phone and make that call when it rang. It was the Front Desk; I had a visitor, so I asked them to direct him up to the suite. A few minutes later there was a light knock at the door. I opened it expecting to see Regan or Agent Davison, but it was Corey Warren.\n\n\"Hello James, I...I wanted to see you before you left,\" he started, \"may I come in? This will only take a few minutes, I promise, please, just hear me out!\"\n\nI invited him in, and motioned him to a seat, and I sat down opposite him.\n\n\"What can I do for you...?\" I began.\n\n\"Corey, please, call me Corey; we are family, after all!\" he smiled gently, and I found myself warming to him.\n\n\"OK, what can we do for you...Corey? I asked, returning his grin.\n\nHe clasped his hands together tightly in front of him, his fingers interlaced. \"I came here to apologise for my wife's behaviour. What she did was uncalled for, and completely out of character, and to be honest, I really don't want to see her for a while, not until I've apologised properly to you, and to ...Nia? \n\nThat little girl didn't deserve what Bethany did, and neither did you, and I honestly don't know why she did that. But it's done, and all I can do now is try and make it right.\"\n\nI could feel the sincerity radiating off him, and I grinned.\n\n\"Would you like to meet Nia, properly, this time?\" I asked him and he grinned back.\n\n\"I'd like that very much indeed,\" he said, \"she looks so much like Bethany when she was that age! Whatever's going on in Bethany's head right now, there's absolutely no doubt in my mind they really are sisters!\"\n\n\"Wait there, I'll just be one moment.\" I said, and knocked on the bedroom door before I went in. Nia was huddled on the bed, clasping a pillow tightly and staring into space. Her face was stained where her makeup had run and smeared, and her eyes were red and swollen. She turned to look at me, and tears welled up in her eyes again.\n\n\"Mum was right; some things should just be left alone. I was better off not knowing; all of this has been a fool's errand, Jamie, and I dragged you on it, I pushed you into the most God-forsaken places because of it, and you never complained, you just did it for me, and it was all for nothing. I'm sorry Polar Bear; I should have listened to mum, I should have just let this all go years ago! I wish I'd never heard of her, or come to this bloody place!\" \n\nMy heart wrenched as I listened to the last of her hope and idealism drain away, something else Bethany had taken away from her, but I still smiled and slid her close to me.\n\n\"We have a visitor, there's someone here to see you.\" I told her. She stared at me and I smiled encouragingly. \"Come on, princess, family calls!\"\n\nNia jumped up, knuckling her eyes. \"Bethany...? and I shook my head.\n\n\"No, but her husband's here, he wants to meet his sister-in-law!\"\n\nNia smiled sadly. \"Give me five minutes and I'll be there, OK?\n\nI rejoined Corey in the sitting room. \"She's just making herself presentable; give her a few minutes...about four hours ought to do it!\"\n\nCorey grinned back. \"Bethany's the same, it takes her most of the day to take a shower, and she always leaves the door tight shut, it's like a sauna in there for the rest of the day, and the smell of wet hair and conditioner is overpowering!\"\n\nWe chatted about nothing much until the bedroom door opened, and Nia gingerly poked her head out. Corey saw her, and immediately stood, smiling broadly at her. Encouraged, she smiled back and crept into the room to huddle against me. Corey offered her his hand, and when she took it he pulled her close and gave her a quick hug, making her squeak with surprise.\n\nWe all sat down, and Corey spoke directly to Nia. \"I came here to apologise for my wife's behaviour. I'm sorry you had to see that, I don't know where that came from. I've never seen her do that before in all the years I've known her, and I don't know why she did that to you, of all people. I'm sorry.\"\n\nNia smiled sadly at him. \"It wasn't your fault, I shouldn't have got my hopes and expectations up; she had no reason to accept me out of the blue like that.\"\n\nCorey demurred. \"Nevertheless, what she said and did was wrong, and she knew it. I can't explain it, I don't know what was going through her head, but all I can offer is my sincerest apologies for what happened; you're her little sister, and she had no right to behave like that!\"\n\nJust then, the telephone rang again. I answered it and was told we had a visitor. I was puzzled, but asked they they be sent up to our suite. Nia looked at me enquiringly, and I told her we had another visitor on the way up to see us. Sure enough, a couple of minutes later there was a knock at the door, and I opened it to see Bethany standing there!\n\nI was momentarily wrong-footed, and even Corey gaped to see his wife standing there. \n\n\"I'm sorry for coming here like this,\" she said quietly, \"I wanted to apologise to you...and to my sister.\"\n\nNia had risen from her seat, and Corey also stood, offering her his hand to help her rise. Wordlessly, I invited Bethany in, motioning her to sit, while Corey watched her in silence. \n\nBethany stood with her eyes fixed on Nia. \n\n\"James...Nia, I want to apologise for what I said today; my behaviour was inexcusable, and I'm truly sorry I hurt you. I was wrong, you are my sister, and you deserved better than what I offered; I'm sorry. Can we talk, please?\"\n\nNia waited in silence, her eyes big and fearful. Bethany looked at Corey, at me, for any clue as to how to approach her. I nodded and pointed with my chin in Nia's direction, and Bethany held her hand out to her. Nia tentatively reached out and took her hand, and smiled as two big tears rolled down her cheeks. Cory took Bethany's other hand and kissed her lightly on the cheek. \"So there you are, I was wondering where you'd gone!\" I heard him whisper.\n\nWe all sat down, Nia not letting go of Bethany's hand, but I think the breakthrough moment actually came when Bethany leaned over and gently blotted Nia's tears with her handkerchief, a 'mum' gesture I had seen a thousand times when Nia was small.\n\nBethany spoke first. \"Nia, I'm sorry, really, truly sorry, for the way I reacted earlier. I know I hurt you, and I apologise for that; I guess I wanted to hurt you for trying to make me part of you, because I didn't want to let go of my mom and dad, my adoptive parents. Does that make sense? I guess I overreacted when you started talking about 'our' mother. I couldn't hear that, because if I accepted your mom as mine too, then I'd have to let go of my mom, and I can't do that. My parents loved me very much, and I loved them and I miss them every single day!\"\n\nNia nodded in understanding. \n\n\"I would never ask you to give them up; they brought you up, they loved you, and it would be wrong and cruel to insist you let them go for a stranger. But my mum has a claim on you too. She didn't give you away, or abandon you, or sell you; she and her husband loved you very much, the three of you were all that was left of her family, and then you were taken, and they had to kill your father to take you away from him.\" ",
        "\"You were stolen, Bethany, by a man who's now sweltering in a hell-hole prison, thanks to Jamie, and sold to another man who's going to hang in a Chinese jail one day soon. Jamie and I wanted to find you, but not so we could tell you to turn your back on everything you know and love and come with us because you belong to us; we came to find you so my mum, who lost you so long ago, can finally know her little girl is safe, and well, and happy; that's all. I look at your face, and I see my mum; I look at you and I see my features as well, so I know you and I are family, the children of Anh Thienh Lo and all she's concerned about is the happiness of her children; you, me, and Jamie.\" \n\nBethany looked at me. \"You're my...brother?\"\n\nI grinned. \"In a manner of speaking. After you were abducted, mum had to be smuggled out of Vietnam and into Laos, because the man who took you wanted her as his own personal plaything, and he'd already had no qualms about killing her husband. She was still only a young teenager with no family to protect her; her husband was dead, her mother died in the war and her father died in a border skirmish, all she had in the world was her husband, and you.\" \n\n\"In Laos, she met a missionary family from England. When they came back to England, mum was still only a teenager, and she came with them. The missionary couple were my grandparents, and when they died mum and Laura, their daughter stayed together. Laura was my mother, she met my father at university but she died soon after I was born. When she found out how sick she was, she gave me to mum, her adopted sister, to be her son. Eventually mum married my father, and they had Nia; she's your half-sister and my half-sister, on both sides of the family.\"\n\nBethany nodded sombrely. \"She's had quite a life, by the sound of it. What's she like?\"\n\nNia looked at me, so I started. \"Mum is...mum; she's funny, wise, smart, she's tiny and beautiful, a fabulous cook, she makes the best bread on the planet, and I'll fight anyone who disagrees, she puts up with my dad's awful jokes, she'll feed anybody at the drop of a hat, and she makes mango ice cream all the time; I virtually live on it. You'll like her. She calls me 'Huynh', which means 'Big Brother', but mostly she calls me 'little boy', which is a bit rich, coming from a tiny little lady like her! How about you, Bethany, have you any children?\"\n\nHer eyes went soft for a moment. \"We have two; Ryan and Jodie. Would you like to meet them?\"\n\nNia's eyes lit up. \"Oh yes, please, but when?\" and Bethany grinned.\n\n\"They're in the Lobby with Detective Regan; I couldn't get a sitter, and I didn't know where you were staying, so I called him, and he offered to bring me and the kids. I'll go get them!\"\n\nBethany came back with two adorable little kids, a boy about six, and a little girl maybe a year younger, Ryan and Jodie. Ryan took after Corey, with a shock of jet black hair and grey eyes, but Jodie looked amazingly like Nia when she was that age, more proof, if any was needed, that these were her family. \n\nWe ordered dinner in the suite for everyone, and Corey and I watched Nia connect with Bethany, talking about their lives, kids, college...and our marriage plans.\n\nBethany looked puzzled at that. \n\n\"I thought you and Nia were half-siblings?\" she asked, and Nia explained how we'd come about. Bethany was surprised and intrigued by our relationship, but chose not to make an issue of it.\n\n\"I won't hide anything from you,\" she'd told Bethany, \"this is our family, warts and all. I've always loved Jamie, and he fell in love with me, we got engaged a few weeks ago, and we intend to get married as soon as we can. In fact, Jamie, you may as well know, the date booked for the church solemnization is July 16th, so no pressure, Polar Bear! Bethany, please come to my wedding, it would mean the world to me, and to mum, if you would!\"\n\nBethany looked thoughtful for a moment.\n\n\"Just over two months away, I'm sure we can work something out. Corey?\" Corey agreed, and so we were set. During our conversations one useful fact emerged. I happened to mention that we were getting married in Hong Kong, as per Nia's original plan, and Corey asked why we didn't just drive over to Reno and do it there. Because we were foreigners, all they needed was a photo document issued by a foreign government, and Nia and I both had UK driving licenses, which were acceptable as ID. They had different addresses, in different towns, so the names could be explained as coincidence, as Nia was not obviously my sister.\n\nOne odd incident; While Bethany and Nia were chatting, Bethany suddenly took hold of Nia's wrist and held up her bracelet, looking at it curiously. Nia asked her if there was anything wrong and Bethany shook her head, then said \"I dreamed of a bracelet like this the other night, it was flashing blue light onto a tablecloth, and then my dream got all garbled, but I'm sure I've seen this bracelet before somewhere...\" Nia looked oddly at her, and spoke slowly. \n\n\"I was...doing that...on Monday, in here, and I dreamed I gave you my bracelet, and you gave me a...a coin, or a medal or something, red, it was red and gold...\" she trailed off as Bethany showed her the token the little boy Jamie had given her. Nia looked at me in confusion.\n\n\"No it's not ...possible, just coincidence, a fluke...Jamie?\"\n\nI made sure I was deeply in conversation with Corey so I didn't hear her; whatever had happened between Bethany and Nia, I had no explanation, and I wasn't about to start reaching for one.\n\nWe followed Corey's suggestion, and two days later, we were legally married in Reno, the chapel even taking our documents to the courthouse to get the license for us. Nia had finally decided that she didn't want to work for UNICEF, she was wary of being posted abroad for years at a time; we'd talked about starting a family and we couldn't very well do that if Nia was seconded to Yemen or Djibouti or wherever. I decided I needed a legal advisor, and she had an International Law Diploma, so I asked her to come and work with me. \n\nSo now, because we suddenly had no pressing reason to return home, no deadline date for Nia to start work, and I had a couple of weeks before I had to go away again on any assignments, we based ourselves in San Francisco for a few days, sightseeing properly, spending time with our new family, and bonding closer with Corey, Bethany and the kids\n\n++++\n\nNia and I were pacing around the arrivals gate at Heathrow Terminal 3; Bethany's flight had touched down almost 40 minutes earlier, and Nia was getting impatient. I was trying to be reasonable; Heathrow in the summer is always a nightmare, it's the third busiest airport in the world, and it shows. The Arrivals lobby was heaving with people, and Nia resorted to standing on a seat to see if she could spot Corey anywhere, but so far no luck.\n\nAt last, she pointed, and I looked in the direction she indicated, seeing Corey's mop of black hair in among the crowd, so we waded toward them, Nia in my lee, holding onto my belt to avoid being swept away by the crowds. We finally caught them, Nia and Bethany hugging and sniffling at each other, and Cory and I exchanging handshakes. We'd left mum at home, waiting on tenterhooks, as we didn't think an airport was the place for a family reunion, so we headed down to the parking garage to load up and get back to South London.\n\nThe reunion was kind of what I expected; Bethany had been quiet, almost subdued on the drive back, but I noticed she had her hand tightly locked in Nia's, and Corey was stroking the back of her neck and whispering to her the entire time. When we arrived home, Nia took Bethany inside while Corey and I distracted the kids, unloaded the luggage and gave mum and Bethany a little time. \n\nWhen we finally went inside, mum and Bethany were having their own moment of non-verbal communication, and Nia was smiling and crying at the same time, holding on tight to dad as her mother and sister reunited. Mum saw the children, and that's when she lost it, and I must admit, I had a fairly sizeable lump in my throat while I watched her hold and kiss her grandchildren for the first time ever.\n\nEventually, mum noticed Corey and I, and beckoned us over. Corey introduced himself, and mum hugged him, then pulled my head down to kiss me.\n\n\"Thank you little boy!\" she whispered, and patted my chest, \"now all my children in one place; I have my daughters here, and I have my little boy, and new son as well, you have done well, my little boy, sister is very proud of you, I can hear her laughing; listen carefully, and so will you!\"\n\nThe wedding, our proper wedding, went off perfectly. We were married in church in Streatham, South London, in a Church of England church so Nia could have the bells ringing for her wedding day. She looked absolutely stunning in her white dress and long veil, with a silver tiara dad and I had bought her, and a trailing bouquet of white and pink roses dotted with vivid sky-blue Forget-me-nots. Bethany was her Maid of Honour, and she, Julie and Shelagh all wore pale blue gowns, Nia's favourite colour. Ryan was Page Boy, although he nearly rebelled when he saw the outfit Nia had picked out for him, and only some fast footwork and a couple of twenties persuaded him to accept his fate. Little Jodie was our flower girl, in a white crinoline dress and carrying a basket of rose petals (I know, but it was Nia's idea, her wedding etc.)\n\nMark stood as my best man, and Corey and Shelagh's boyfriend acted as Ushers. It was the wedding Nia had always dreamed of, the day we'd looked forward to for so long now; Reno was to legalise our union, today was when we would really become man and wife, in our eyes, and in the eyes of our family and closest friends.\n\nWe made love that night as man and wife, the culmination of all those years of being so close, a lifetime growing-up together, and the final act in our quest to be together. When I took Nia home, she really was my wife, in my heart as well as in fact, no longer my girl, not my sister anymore, but my real, true wife, and she was everything I'd always wanted.\n\nI helped her out of her wedding dress, almost drooling with anticipation. We'd stayed apart for the last week, Nia at mum's and me staying alone in the flat. She'd wanted our wedding night to be special, and now I was bursting with the need to make love to my beautiful wife. Wife! I still couldn't believe we'd finally gotten here. \n\nAs I peeled her dress off her, I re-acquainted myself with every feature of her body; her full lips, her smooth porcelain neck and flawless skin, her small, beautiful coral-tipped breasts, her elegant narrow waist, and, as her dress slipped down to the ground, her perfect, pert buttocks and pussy accentuated by the tiny thong she was wearing. She was wearing her blue diamond bracelet and a pair of antique earrings, and a pendant from mum's jewellery box, so that she fulfilled the 'something old, something new, something borrowed, something blue' wedding maxim.\n\nShe stepped out of her dress and let me admire her for a few seconds, but she was also eager for this night, and she wasted no time helping me unbutton and pull off my shirt, undo my belt and take of my trousers to stand in just my shorts, my excitement plain to see. I led her to the bed, and urged her to climb on, and lay down next to her.\n\nNia pulled herself closer to me, sliding her hands down to my shorts and gauging my erection, grinning as I squeezed her lovely bum and dipped down to lick and nibble her perfect nipples.\n\nShe slid my shorts down as I hooked her wispy thong with my thumbs and slid it off, Nia responding by kissing me firmly, determinedly, making a production of it. My cock responded, hardening even further against her, and I slid my hand down to find her pussy wet and ready for me.\n\n\"No foreplay, please Polar Bear!\" she whispered urgently, \"I've had to wait for you all week, and now all day today, please, make love to me, just fuck me, Jamie!\"\n\nTo hear is to obey, and I pulled her on top of me, wanting to see her above me, so I could hold and squeeze her beautiful tits, suck her nipples, and kiss her while I pumped her, but Nia had other ideas.\n\n\"No, Jamie, like this, please!\" she whispered, sliding off me to lie next to me, beckoning me over to her. \n\nI moved between her thighs, Nia taking hold of my swollen cock and rubbing herself with the end, the moist heat from her soaking pussy delightful and very stimulating. She grinned at me as she continued to play with my cock, one of her favourite gambits before penetration, so I let her have her fun before I moved over her and began pressing forward.\n\nNia gasped as I slid into her, the feel of her tight hot pussy enfolding my cock almost indescribable. She began to move against me, the week of abstinence obviously making itself felt, and as I pumped, she pushed back against me, meeting me stroke for stroke. \n\nAt first I was content to keep a steady pace; the feel of her was incredible, and I wanted to keep hold of that feeling for as long as possible. Gradually our mutual efforts gathered pace and we moved faster together, my cock hammering into her, and her pelvis meeting me at every stroke as she pumped and ground against me. At last I couldn't hold back any longer, and as I felt myself gathering inside, that unstoppable urgency rising, Nia's head lolled back as she groaned loudly, her pussy clenching down tightly on me as she orgasmed. As the waves of her orgasm pulsed through her, I came in a surging tide of ejaculation, stream after stream of spunk shooting into her and bathing her womb, more than I think I'd ever come in my life. \n\nAt last, we slipped into the calm on the other side of our mutual orgasm, my ejaculation slowing to a trickle as I emptied out into my darling sister-wife, and Nia's orgasmic after-shocks slowing and finally dying away, and I slipped out of her and dropped down to lie next to her. Nia pulled herself up against me, hugging me. She leaned in and kissed me once, to get my attention, and grinned happily.\n\n\"OK Polar bear, I think we made a baby tonight!\" she smiled, and I looked at her quizzically. She looked back with that cocked-eyebrow she does so well.\n\n\"Darling Jamie, I picked this date for a reason, for a very good reason. It's the right time in my cycle, and I stopped taking the pill a while ago, so hopefully we made our baby tonight. I hope so!\" \n\nShe was right. Four weeks later, I was woken at five in the morning by the sound of retching, the flush going, then Nia coming out of the en-suite wiping her mouth. In my muzzy state I asked her if she was alright, and she grinned happily.\n\n\"Polar Bear, I'm just fine for a girl in my condition!\"\n\nIt took a second for what she was saying to sink-in, then I sat bolt upright as Nia climbed on the bed next to me and hugged me.\n\n\"I was right, Jamie, you shot and scored, pat yourself on the back, we're having a baby!\" \n\n++++\n\nEpilogue.\n\nMarch 21st, 2011\n\nNia groaned and panted in the delivery room, holding tight to my hand as another contraction started.\n\n\"OK Nia, big push now, nearly there!\" encouraged the midwife, \"Yes, it's crowning, big breath ...and push, that's it Nia, Yes!\" and the baby was, out, placed in the bassinet and the cord clamped and cut, and one of the nursing team intubated to clear the infant's lungs, allowing her to cry for the first time but there was no time to stop and admire the baby, Nia was having another contraction.\n\n\"That's it, Nia, breathe... breathe... breathe...now! Push, that's it push, bear down, Nia, steady pressure, steady, keep bearing down...and PUSH! That's it, that's it!\"\n\nThe other little body slipped out and was deftly wiped and wrapped and placed on the bassinet to have the cord clamped, cut and taped and go through the intubation procedure. \n\nNia lay back, exhausted, but held her arms out to hold her babies and the nurses put one in the crook of each arm. She looked ...radiant is the only word I have, absolutely glowing as she held her children for the first time.\n\nNia looked down at the two tiny little people in her arms.\n\n\"Hello Jamie, hello Laura!\" she murmured, and that's when I took the picture that sits on our mantelpiece.\n\n\"Alright Jamie, you can go now, we have ...things to do, and you're in the way. She hasn't finished just yet, so let her get a little more presentable! There's a whole room of people out there who want to see her, go talk to them, we'll call you when we're done, go on, out you go!\" prodded the midwife, shooing me out of the delivery room.\n\nI wandered in a daze into the Family Room, and there was mum and dad, Julie, Mark, Shelagh, all the people who meant anything to us. Julie had little Markie with her, and Shelagh had a huge floppy rabbit for each of the babies.\n\n\"All went well, a boy and a girl!\" I announced, and mum grinned like sunlight, and dad cried like a girl. Mum handed me my phone, and I called Bethany. \n\n\"Bethany? Jamie. A boy and a girl!\" I could hear the whoop of joy and then Corey picked up the phone. \n\n\"Jamie, we're leaving right now, her flight's in two hours, she'll be with you tonight. Congratulations, man!\"\n\nI handed the phone back to dad as the midwife poked her head in and nodded, so I went back to the room, to find Julie and Shelagh already chucking and cuddling the two little people, MY little people!\n\nShelagh handed Laura to me, and pecked me on the cheek, then went to retrieve Markie from her father, because men are not really supposed to handle newborns in case they breathe beer on them, or infect them with bad habits or something. I pondered on the fact that Julie had given birth only two days earlier; that must have taken some nifty planning, I mused.\n\nMum came in, so I handed her granddaughter to her, and leaned over to kiss Nia.\n\n\"Bethany's on her way, she'll be here in the morning. How are you feeling? I asked, and she bit her lip and grinned as she kissed me back tenderly.\n\n\"Like someone just pulled a beach-ball out of my arse, Jamie, how do you think I feel? I love you more than anything in this world, but don't you ever touch me again!\" "
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother sister sex",
        "brother sister incest",
        "brother",
        "sister",
        "incest romance",
        "oral sex",
        "anal sex",
        "love",
        "marriage"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/nia-ch-05"
}