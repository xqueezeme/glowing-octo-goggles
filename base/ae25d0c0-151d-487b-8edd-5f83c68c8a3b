{
    "title": "It Started in the Rain Ch. 05",
    "pages": [
        "As much as I might want my chapters to stand alone well, I think they work much better together. This story contains oral, coitus, threesomes, polyamory, and romance.\n\nInstead of parking my car near the gate of Point Mugu Naval Station this time I pulled up to the gate. My watch read 1050. We were ten minutes early for our meeting. Kat showed the guard her ID and I showed my driver's license. He checked his clip board and told Kat where we were to go. We were waved in and Kat directed the drive. It wasn't far.\n\nAs I parked Pam came out of the building, still in her whites. When she was ten feet from me I asked, \"Can I hug you when you're in uniform?\"\n\n\"Not really, but I'm glad you want to.\" Her smile showed that she wasn't fine yet. She ushered us inside and to a conference room. Seated inside were two officers. One with a rank I couldn't identify and one with silver eagles on his shoulders. A Captain in the Navy. They stood as we entered and I suddenly had the feeling I was supposed to salute. I knew that wasn't true, but I had the feeling.\n\nAs we sat Kat whispered, \"The Captain is the base psychiatrist.\"\n\n\"Good morning,\" the Captain said, \"I'm Captain Abraham Evans and this is Commander Cross. I'm glad you could meet with us this morning. I know that you don't know why you are here and I need to say some things before we get to the real meat of this meeting. Please bare with me.\n\nThe subject of this meeting is beyond being classified. If it gets out it could ruin more than one career. I don't want that to happen. I don't think any of you do either.\"\n\nHeads nodded all round.\n\n\"So I must ask each of you to promise me that nothing that is said here or that may happen after this meeting will ever be spoken of outside this room. If any action is to be taken by you it must be without official sanction or even official knowledge. Is that understood?\"\n\nWe nodded.\n\n\"I need you to say it.\"\n\nKat said, \"I understand and I agree.\"\n\nPam said, \"I understand and I agree.\"\n\nI said, \"I understand and I agree.\"\n\n\"Thank you. Now, to the crux of it. We have some marines and sailors here who were hurt during hostilities in other parts of the world. We do our best to heal them in both body and mind. I think we do an exceptional job with most of them. It is the others that have us puzzled. We heal their bodies but their minds don't seem to be making the trip back to us.\"\n\nThe Captain took a breath and Commander Cross took over speaking. Commander Cross was a woman, about forty, short straight dark brown hair, blue eyes with glasses and a starched crisp white uniform.\n\n\"Just yesterday I was working with Lt. Dalby,\" she pointed at Pam, \"and we were talking about one of our boys. He is healing well from the car bomb that sent him back to the states but he isn't healing mentally. Pam, Lt. Dalby, found out from his roommate that right before he was sent here he had a visit from his fianc\u00e9. Two days later he got a Dear John letter. His roommate says he reads the letter every day. He says he has no reason to go on. He says that while he hasn't read the letter he has been told that the reason she broke off the engagement was that she didn't want to marry damaged goods.\"\n\nPam took over the speaking, \"I went in and talked with... Pete. His name is Pete Alcord. I went in yesterday to take vitals and he was sitting there and he wasn't crying but his eyes were full. I joked with him, like I do with all my boys and he didn't respond. I made a motion to his roomie and he left. I sat on the edge of Pete's bed and asked what was going on. At first he didn't want to talk, but he started and his story seemed to gush out of him. He does feel like damaged goods. The scars will show every time he wears shorts or goes without a shirt. He hasn't lost sexual function but he did lose one testicle and there are lots of scars in his genital area. One thing he said was, \"No normal woman is ever going to want to be in bed with me.\" I told him that wasn't true and he said, \"Nurses don't count. You aren't normal, wanting to take care of damaged people.\"\n\nI spoke up. \"OK I think we have the story. Why are we here?\"\n\nCaptain Evans answered me. \"You're here because the conversation between Lt. Dalby and Commander Cross has sparked an idea. We want to see what you, a civilian and someone who works with people in the area of sexuality, thinks of the idea.\"\n\n\"I can already tell you. That man needs to get laid, and with someone who is not a nurse!\"\n\n\"Exactly!\" Captain Evans smiled and so did Commander Cross.\n\n\"There's more, isn't there?\"\n\n\"Yes.\" Pam said. \"We can't put an ad in the paper saying emotionally fragile man needs pretty woman to have sex with him. We thought, no, I thought that maybe we could set things up so that we took him home, to your home, and maybe there could be someone there who would like him and maybe even bed him.\"\n\n\"Please! The only woman in my home who isn't a nurse is my daughter! You think she would be interested in a mercy fuck? You think Pete would take one?\"\n\n\"No. No. Not a mercy fuck. Maybe not Megan. You know lots of women. Aren't there some who might like Pete and who, if they did like him, would take him to bed and give him the therapy he needs?\"\n\nMy mind suddenly had five names on a list. I did know five women who would play in this game. They would get laid, have fun, and feel good about themselves and their service to the country as well. Damn! It was crazy, but it would probably work.\n\n\"How are we going to get Pete to my house for the weekend?\"\n\n\"I have that worked out.\" Captain Evans took over. \"We will be painting his room and we only have one unused bed. We are letting his roomie have that bed so we can keep an eye on the infection he still has. We found someone in the community willing to have a guest for the weekend. You are that someone. We will even be sending a nurse along to make sure he's OK.\"\n\n\"I'd buy that. OK. Next weekend?\"\n\n\"Yes! I'm sure you understand that when you recruit whoever you recruit for this they cannot know what we are doing. If word of this ever got out I would be doing psychotherapy on Mars. You would be invited on the Jerry Springer show and these ladies would be branded sluts by the media.\"\n\n\"We all have good reasons to save Pete and to keep this very quiet,\" I said.\n\n\"Can you arrange to pick Pete and Lt. Dalby up next Friday afternoon?\"\n\n\"What about me?\" asked Kat.\"\n\n\"You will be working next weekend. It just worked out that way. Lt. Dalby was on this weekend, you will be on next.\"\n\n\"OK.\" \n\nIt was clear that Kat wasn't too happy. I'd do something to make it hurt a little less, as soon as I thought of what that might be.\n\nThe meeting was over. I knew that because Captain Evans shook my hand and said \"Thank you\" to the three women, then he was gone.\n\n\"Are you free to go now?\" I asked Pam. She looked at Commander Cross and she nodded.\n\n\"Wait here. I'll grab my bag and we can go.\" I couldn't answer, she was gone.\n\n\"You must be a very unusual man.\"\n\n\"Thank you. I think I am. Kathleen told me recently that I am so we are building a consensus in that direction.\"\n\n\"I have arranged for you to have a base pass so that you can drive onto and off the base easily. Just put this decal on your bumper and fill out this card and it's done. From now on you can pick your passengers up inside the gate rather than waiting outside.\"\n\nIt was obvious that Commander Cross was choosing her words very carefully. I wondered why.\n\n\"Commander, I wonder if I might ask you for a big privilege?\" She nodded. \"I am not in the military. Haven't been in over thirty years. If it's possible I'd rather we used our names rather than always calling you commander and referring to Lt. Dalby and Lt. Walters can't we allow that when we are dealing with me she is Pam and she (pointing at Kat) is at least Kathleen?\"\n\n\"Yes, that makes sense. Even if it hadn't been quite that long I know the Air Force isn't as formal as the Navy tends to be. I am Corine.\"\n\n\"Do you have a car, Corine?\"\n\n\"Yes.\"\n\n\"Then I recommend that some time between tomorrow and Friday you drive down to my home and spend some time there. I want you to see where this special project will be happening. That way when Pete talks to you about his weekend you can honestly tell him you had checked it out ahead of having him stay with me.\"\n\nPam was back. I gave my business card to Corine and she gave me hers. We said our good-byes to Corine and she watched us drive away. At the gate the Marine snapped us a salute as we passed through. That felt good.\n\nFifty yards outside the gate I didn't turn onto the road that would have taken us to my home. I kept going straight. \n\n\"Are we going to Ojai?\" Pam asked.\n\n\"I hope so,\" Kat answered, \"I left my other clothes there.\"\n\n\"Is Madaline still in the room?\"\n\n\"No. She is with Richard. He's a good friend of mine and they are lovers. I told her that if Richard and she want they can call us and maybe we will share dinner with them tonight.\"\n\n\"Maybe?\"\n\n\"It's your call. Even if we do share dinner Madaline is spending the night, the whole night, with Richard. If I know Richard he may invite Kat to join them if we have dinner together.\"\n\nKat spoke up from the back seat, \"How would you feel about that?\"\n\n\"Are you asking if I would be jealous?\"\n\n\"Yeah, I guess I am.\"\n\n\"I am male. Men are biologically constructed to want many women to impregnate. There is a biological mechanism that rebels at the thought of some other man depositing his seed in you. I am stronger that that biological mechanism. Part of how I can do that is that I know he's not going to get you pregnant. I also know I'm not going to impregnate anyone. If you choose to go home with Richard and share their bed I will be OK. It won't hurt our relationship.\"\n\n\"God, you are so strange.\"\n\n\"Is that good?\"\n\n\"Any other man would have said Yes or No and stopped talking. You tell me your thinking about it, your thought process. Is there anything you haven't thought through?\"\n\n\"Lots of things, but not in the area of relationships. They are what my life is about. Ask me about what car to buy. I have some stray thoughts that are as likely to be wrong as right. Ask me about love, sex, or relationships and now I have opinions and some solid research to back up my thinking.\"\n\n\"If Richard invites me, do you want me to go?\"\n\n\"No. However, maybe we should also be asking Pam. She might want some one-on-one time and want you to accept Richard's invitation.\"\n\n\"No, I don't. I love you both and the best feeling I've ever had was when the three of us woke up holding each other. Last night I was sitting at the nurse's station and I was thinking about what I was missing. What I was missing was touching and being touched by both of you.\"\n\nPam started unbuttoning her uniform. She asked Kat to get her a shirt and pants from the bag. She was tired of being in uniform. She stripped down to bra and panties and then dressed in a nice long sleeved shirt and Levis. Kat handed Pam her athletic shoes and she put those on too. \n\n\"I think that tonight we just might have Pam sleep in the middle,\" Kat said.\n\n\"Good idea.\" I waited a few seconds and asked, \"How well do you two know Corine?'\n\n\"I didn't know her name was Corine.\"\n\n\"Neither did I.\"\n\n\"When did you talk to her about the Plan?\"\n\n\"Yesterday in the late afternoon. Why?\"\n\n\"She said something that let me know she is smart, through and likes mental games.\"\n\n\"What did she say?\"\n\n\"I asked if we could use our names rather than ranks and surnames. She responded that that would be Ok in that the Air Force wasn't as formal as the Navy.\"\n\n\"I didn't know you had been in the Air Force,\" Pam said.\n\n\"She did her homework. One of the guards at the gate probably wrote down my license number when I picked you up. She did some research. She knows where I live; she knows I was in the Air Force and even knows a little about what I did during my Air Force time. She communicated all that in one throw away statement. It was also a test. She wants to know if I will catch what she did.\"\n\n\"I hate to change the subject but I'm hungry. Can we stop somewhere and have lunch?\"\n\nWe were in Camarillo so I got off the freeway and found a western BBQ restaurant I knew of and we ate there. Both women had a bbq'ed chicken salad and I had half a rack of baby back ribs. Two men sitting at a table not far from us looked at me strangely when Kat said, \"Bathroom break,\" and Kat and Pam both kissed me as they left. I could almost hear them thinking, \"What's that old guy doing with two beautiful women.\" If they only knew the truth!\n\nWhen we got back in the car after lunch Pam spoke up.\n\n\"I've wanted to ask before now, but what are the oranges doing on the floor?\"\n\n\"Do you like oranges?\" I asked.\n\n\"Yes, if they're juicy.\"\n\nKat held up three and said, \"Choose.\"\n\n\"I just had a big salad.\"\n\n\"We'll share one.\"\n\n\"OK.\" She picked one. Kat started peeling. The smell of orange filled the car. Pam got the first section.\n\n\"Oh my, that's really good! Where did you get these?\"\n\n\"Found them.\"\n\n\"Can we find some more, Daddy? Can we?\"\n\nI love the sound of both of them laughing. I also knew that if Megan was with us she would be right there in the game too. I smiled. I've always liked the feeling of being Daddy. We rolled through town and Kat pointed to the things she remembered from yesterday and soon I was parking the car next to the orange groves.\n\nWe left with ten more oranges. We ate another one. Pam peeled and fed us slices while I drove. At the top of the \"mountain\" we washed up, walked around and found ourselves at the bench where Kat and I had spent some time the day before. I made sure Pam sat in the middle of the bench and that we spent time snuggling her.\n\n\"Lee, will you make love to us tonight?\" Pam asked.\n\n\"No,\" I said, softly.\n\n\"No! Why not?\"\n\n\"It isn't the act I object to, it's the words. I love you already. Putting my penis in you won't increase that. We won't make any more love than already exists. We will join. We can come together in ways that deepen our connectedness, bind us together in spirit. That is joining. I am happy to join with you any time or place that won't get us arrested, sun burnt or drown.\"\n\n\"You're right Kat. He thinks about relationships all the time.\"\n\n\"I think about these relationships a lot. I want this experience to benefit each of us in every other relationship we ever are in. Like the ones you have with Abraham and Corine. Like the one you have with Madaline and Richard.\"\n\n\"Does Richard believe what you do about relationships?\"\n\n\"Richard doesn't believe what I believe. He sees some personal advantage to going along with what I believe and what Madaline believes, but he doesn't believe in love and life and relationships like I do.\"\n\n\"He didn't have much trouble letting Madaline come spend most of the night with us last night.\"\n\n\"If he had trouble with that he would be telling Madaline that he wanted something more in their relationship, like exclusivity. He wants to be free to have anyone in his bed. He does not want a commitment. As long as he doesn't have a problem with Madaline loving me he gets a great bed partner whenever she comes by.\"\n\n\"That means that Madaline doesn't believe as you do either.\"\n\n\"Closer than Richard. She isn't afraid of commitment. A few years ago I had a tough time. My health and my life went in the wastebasket. Madaline came from wherever she was and stayed with me and cared for me until I got back up. She loves me, cares for me and is committed to my life being great. Richard didn't even visit.\"\n\n\"This is a lot to think about. I used to think about being in love, being in relationship, being married. Hell, on paper I was married. Now I'm swimming in my thoughts about this, whatever this is. I know I don't fully understand what this is but I know I love being here. I have no idea where this is going or even if there is somewhere for it to go.\"\n\n\"Pam, take a deep breath. When the water gets deep and you start wondering if you can swim repeat this mantra, 'I am totally and unconditionally loved.\" Say it.\"\n\n\"I am totally and unconditionally loved.\"\n\n\"Kat.\"\n\n\"I am totally and unconditionally loved.\"\n\n\"Again.\"\n\n\"I am totally and unconditionally loved.\"\n\n\"Again.\"\n\n\"I am totally and unconditionally loved.\"\n\n\"When you are with me you can say, \"I am totally and unconditionally loved by you.\" It will be true. It is always true. There is nothing you can say, do, or believe that will ever change that.\"\n\nWe sat quietly a long time. The sun was low in the sky when my cell phone rang.\n\n\"It's Madaline,\" Kat said.\n\nIt was. She and Richard invited us to dinner at the same wonderful place where we ate the night before. Kat said she wanted to show Pam that wonderful restaurant. Pam said she was Ok with having dinner with them. I told Madaline I would swing by Richard's and we would follow them. \n\nAs we drove I told Pam that eating at this place would give us a chance to dance, as they had music after dinner. I also reminded her that she never had to do anything she didn't want to do.\n\nMadaline and Richard were standing by Richard's truck and when they saw us they got in, started up and drove. We followed. Pam's only comment was, \"Pretty woman.\"\n\nDinner was wonderful again. Different, and just as wonderful. No menus. No bill. I was served one of the best servings of Cocoanut shrimp I had ever had. When the music began I asked Pam if she would like to dance. She stood. I stood. She took my hand and led me a few feet away from the table. We danced. We didn't talk.\n\nAs the music ended she whispered, \"I love being loved by you.\"\n\nI kissed her.\n\nWe stepped back to the table and Pam gave Kat the sign language word for bathroom. Kat got up and so did Madaline. Pam and Kat looked at her surprised.\n\n\"Aren't I invited too?\" Madaline said.\n\nThey laughed and off they went. Richard and I watched them go.\n\n\"I have envied you for many years Lee. Now I think it is hate.\" He laughed.\n\n\"Hate isn't a word I use much.\"\n\n\"I'm joking. I think you are the most fortunate man I have ever known. I've known since 1988 that Madaline loves you. I knew Bonny and Bonny loved you. Susan loved you, probably still does. Kat loves you. Pam loves you. Have I missed anyone?\"\n\n\"Yes. But I get your point. I am loved.\"\n\n\"No. My point is that Madaline is the only woman on the planet who loves me.\"\n\n\"For some men that would be enough. For others that would be too much.\"\n\n\"I know I've asked you before, but how do you get women to love you?\"\n\n\"Do you remember what I answered last time you asked?\"\n\n\"No.\"\n\n\"I don't do anything to get them to love me. I start every relationship by loving her, totally and completely. That seems to open them up to loving being loved. Some even give it back.\"\n\n\"I'm not even that sure I love me, much less someone else.\"\n\n\"Therein lies the problem.\"\n\n\"Yeah.\"  The conversation ended as we could see the three women walking back to us. I noticed that both Kat and Pam were now braless. Kat held out her hand and I took it. She led me to dance as the trio started playing, \"You've lost that lovin feelin.\"\n\nI said, \"I love this music but I'm glad they don't sing the words.\"\n\n\"I love it too.\"\n\nWe molded together and I held her to me just tight enough that she would know I wanted her that tight to me. I knew she could feel my erection pressing against her. As the music ended she said, \"I don't have a bra on, or panties.\"\n\n\"I don't either. We're even.\" We laughed and stepped back to the table.\n\nKat was back up and we went back to dance as Richard and Madaline stood to join us.\n\nThe band played an oldie, \"Mood Indigo.\" Kat felt very good in my arms.\n\n\"I saw how you danced with Pam.\"\n\n\"How?\"\n\n\"Anyone looking would have said, 'they love each other.\"",
        "\"What would they say now?\"\n\n\"Given half a chance she'd join with him right there.\"\n\n\"How big is half a chance?\"\n\nWe laughed softly and quietly danced to the rest of the tune. As it ended I asked, \"What did you both do with your bras and panties?\"\n\n\"Hid them in a planter by the bathrooms.\" We laughed again.\n\nI danced with Madaline once. Richard danced with Kat once and Pam turned him down. The evening was ending, Pam and Kat retrieved their bras and panties, and we all hugged and kissed good-bye. Madaline promised to email before she came down next time. \n\n\nWe drove to the Inn quickly and went to our suite with a minimum of conversation or sightseeing.\n\nInside Pam took an \"Oooo \u2013 awwww\" tour and when she came to the bedroom Kat and I were nude and waiting for her. We undressed her, kissing and teasing her as we did the job. It didn't take long. All she had on to start with were the shirt, Levis, and two shoes. \n\nWe stood together and took turns kissing each other. When Pam and Kat locked lips I kissed Kat's breast. While I kissed Pam's mouth and neck, Kat kissed Pam's breasts. When I French kissed Kat, Pam pushed her tongue into Kat's very wet slit. We were having fun and laughing both between and during the kisses. We varied what we did when not mouth to mouth with someone. I was as hard as any activity we might want could demand and while I was holding Pam in a full embrace and kiss I felt Kat take all of my cock in her mouth. It was so strange a feeling, holding and kissing a woman in my arms and suddenly another mouth swallowed my cock!\n\nI started really laughing and both my Honey's backed away from me, thinking I had lost it. I had. Something about this dance of laughter and kisses was just too funny.\n\nI fell on the bed still laughing. Pam and Kat watched for a few seconds and then pounced on me. They tickled and kissed until I cried, \"Uncle,\" and we collapsed.\n\nFrom the time Kat and Pam took off their bras and panties I had anticipated the action in bed would be really hot. As we had danced they both rubbed themselves against me as what I thought were clear signals of their sexual intentions. That may have been true then but, as most grown men know \"that was then and this is now.\" We collapsed on the bed and the sexual nature of our touching and kissing changed. It became the snuggling in before sleep. I knew Pam was tired; she had worked a full shift. One of us pulled the covers up and, with Pam in the middle, we fell asleep holding each other.\n\nSometime before the sun came up Kat woke up, used the bathroom and came back to bed with mischief on her mind. Pam and I were spooned with me behind her. Kat climbed onto the bed so that she was mouth to nipple aligned with Pam. She took Pam's nipple in her mouth and sucked, gently. Pam didn't immediately wake, but she did shift and put her arm over Kat's body. When she shifted I did wake. Maybe it was because she shifted and maybe it was because I needed the bathroom. I rolled away from Pam and out of bed. I didn't notice Kat sucking on Pam when I left. \n\nI did notice when I returned. I moved to the other side of the bed from where I had been and knelt behind Kat. I kissed her back and used my left hand to caress and knead her ass. Her response was to open her legs, inviting my attention to her pussy. Not wanting to be perceived as rude I accepted the invitation and began a slow dandle of her wetness. \n\nKat was playing with Pam's nipple and areola very gently and Pam had still not awakened. Pam's nipple had started tightening in answer to Kat's ministering. My fingers slipped between Kat's lips and became slick with her readiness. I avoided her clit as I was more interested in the slow giving of affection and sensual play than in giving her an orgasm. I moved closer with my face and began kissing her shoulder and then her neck.\n\nWe were both moving very slowly and not making noise as we seemed to both be playing a game of how much could we do without waking Pam. I was not helping Kat. The more I did the harder it was for her not to moan, not to lose focus, and wake Pam.\n\nKat put her foot on her knee, opening herself a little more to me. I put a fingertip at the entrance to her tunnel and with slow motion moved the finger tip in and out of her. As I did this I was reminded of the thing that kids do where they use their finger to make a popping noise with their mouth. I wondered if I would get a popping noise if I did what I was doing, but faster. I smiled and took Kat's ear lobe between my teeth and gently nibbled.\n\nThe moan that escaped from Kat transferred to Pam as a vibration on her nipple. She shifted again on the bed. Kat froze. I stuck my finger deep into Kat's more-than-moist tunnel. I sucked harder on her ear lobe. \n\nKat reached behind her and found my hard cock. Her hand wrapped around my shaft and she started to slowly stroke me. As softly as I was able I whispers, \"Oh\" into her ear.\n\nIn response to my \"Oh\" Kat let go of my cock and reached to her own pussy. She gathered her own nectar and then brought it to my cock. As she stroked me she spread her juices along my shaft and the lubrication made the strokes almost like being inside her. \n\nAfter a few strokes she reached again and gathered more of her wetness. She shared it with me, again stroking my shaft with her own juices. \n\nAs slowly as I was able I changed positions on the bed. I positioned myself so I could get her juices directly instead of first hand. I lifted Kat's foot from her knee and held it high, moving her leg out of the path my cock wanted to take into Kat's pussy. Pam still had not opened her eyes. Kat still held Pam's nipple in her mouth. \n\nThe tip of my erection touched the warm and wet opening into Kat. Instead of pushing in I rubbed against her slit, gathering as much of her natural lubrication as I could. I leaned forward sliding in completely in one slow stroke. \n\nKat moaned again and Pam's eyes opened. She looked down at her tit and Kat's attachment to it then at me. She smiled and closed her eyes again. Kat's eyes were closed and she didn't know that Pam was awake. I started moving my hips and pistoning in and out of Kat. At the end of the outward trip I heard the noise of our joining together as a soft slurping sound. It seemed as if that very soft sound made my cock twitch and harden even more. \n\nI moved back inside Kat and increased the pace just a bit. I changed from holding her leg high with my left hand to my right, freeing the left to gently touch Pam's crease. I made no attempt to enter but was content to trace my finger along the crease. Pam didn't open her eyes but did smile.\n\nWe teased each other for a long time. Kat was approaching her orgasm faster than Pam or I. I wondered if Pam would stay still while Kat went over the edge so I stopped stroking her crease and used that hand to find and stroke Kat's pleasure button. It was easy to find. My cock slid in and out a bit faster and I touched Kat's clit. It was enough.\n\nKat's back arched. She moaned loudly into the breast she held in her mouth. She grasped the hand that was touching her clit, and then she screamed. Her juices flooded both of us. Pam's eyes shot open! Kat let go of Pam's tit. I held on as Kat thrashed.\n\nWhen Kat calmed down Pam said, \"I was asleep.\"\n\nKat smiled the smile of the satisfied woman and said, \"The operative word is was.\"\n\nI said, \"Since you are awake I would love to join with you.\"\n\nPam rolled onto her back and said, \"Please be inside me.\"\n\nAs I entered her she said, \"Fast and hard please.\"\n\nThat is what she got. She opened herself up to me and I slammed in and out as hard and fast as we were able. On my every in-stroke she raised her pelvis to meet me. Kat joined the fun by again taking Pam's breast into her mouth. She did pick the other breast.\n\nPam stroked her own pussy and as I came she did too. For a few minutes we lay together catching our breath and allowing heart rates to normalize. \n\nKat untangled from us and said, \"This is so great! We made a mess of this bed, so we can shower and just change beds!\"\n\nFifteen minutes later we were in the other bed and asleep.\n\nWaking up in bed with Pam and Kat must be one of the great treats on this Earth. They both look great, smell great, feel great and love to share all that with me. I woke up, but didn't move anything except my eyelids. Those I opened. I could see Pam's hair and I could tell it was daytime by the light level. I could hear both women breathe and I could smell Pam's unique fragrance. Pam's warmth radiated against my legs, hips and chest. My arm draped over her body and my hand rested against her ribs just below her breasts. I enjoyed cataloging all the sensations of being so near. \n\nI began thinking of the special project I had accepted. Get Pete laid. Joyfully laid. Get it all set up and pull it off beginning Friday night. Who would I call? What would I tell her? Would I involve Megan? I realized I had to involve her. She lived with me.\n\nPam turned and faced me. She didn't open her eyes but moved close enough and kissed me. As her lips touched mine I felt the soft warmth of them and opened my lips, just barely. Her tongue touched my lips but did not intrude. Her hand grasped my cock and held my shaft against her slit. I moved my hips toward hers and felt my cock part her lips gently.\n\nWe were in no hurry. Time passed and the room warmed by the efforts of the sun. Our kisses and touches seemed more intent on enjoyment of the moment rather than a search for orgasms. Pam's nipples tightened and relaxed many times. Every time I touched her slit or opening I found them dripping, slippery, and welcoming. I accepted her invitation and moved to enter her.\n\nAs we joined we both exhaled. As I drew back, we inhaled. We kissed. I whispered.\n\n\"Pam, take a deep breath and hold it please.\"\n\nShe did. I moved in as deeply as I could.\n\n\"Release it as slowly as you can and focus on the inside of your vagina.\"\n\nI pulled back as she breathed out.\n\n\"Again.\"\n\n\"And again.\"\n\n\"Kiss me.\"\n\nOur tongues touched and danced and shared space together. I wrapped her in my arms and she wrapped her legs around my hips. She held me deep inside her self as we kissed. We stayed in that position until I softened and slid out of her. It wasn't a disappointment. We knew that there would be many orgasms in our future and many joinings in tenderness as well.\n\nWe released each other and when we did I discovered that parts of my body were expressing a desire for use of the bathroom facilities. I slowly got out of the bed and made my way to the bathroom. When I flushed Pam came into the bathroom and used the facilities. I remembered that in my first marriage my wife never let me be in the room when she peed. She was strange. She would encourage me to eat her pussy but wouldn't pee in front of me.\n\nI closed the bathroom door and started the shower. I climbed in and Pam followed me in. We kissed and cleaned each other until I'm sure our bodies were clean enough to enter a surgery without clothes on. We dried each other and snuck back into the bedroom to get clothes. As I picked up my pants Kat rolled over and said, \"Getting food?\" I nodded.\n\n\"Bring me something?\" \n\nI nodded again. Kat pulled the covers up and closed her eyes. Pam and I finished dressing and went to the dining room. As we were finishing our breakfast I ordered coffee and a fruit bowl for Kat, with an English muffin. \n\nBack in the room we woke Kat, fed her, showered her, dressed her, and then she was fully awake. Together we packed and left the Inn. I headed north again and when we entered Santa Barbara I exited the freeway and headed for the beach. We walked along the beach and out to the end of the pier. We looked in shops, admired the town, the ocean and the boats. We laughed. We talked. We kissed, held hands, and were generally physically affectionate in public. Seeing us together someone might have thought I was a rich sugar daddy who had hired two beautiful young women. They also might have thought I was a man with two affectionate daughters... until they saw one of our kisses.\n\nWe had lunch out on the pier. We drove north out of Santa Barbara for a while and looked at some of the beaches north of town. There is one with rocks just out in the surf and we stopped there and watched waves crashing onto the rocks. Kat noticed the time and asked how long it would take us to get her back to the base. My answer told us that our weekend time as a threesome was all but over.\n\nIn the van we motored south and then, finally, we talked about the weekend to come and Pete.\n\n\"You think this plan will work?\" I asked.\n\n\"If we don't screw up and if you know the right woman,\" Pam said.\n\n\"Let's assume for the moment that I do know the right woman. What can I do so I don't screw this up?\"\n\n\"Pete's going to be suspicious of the whole weekend. We've never done anything like this. We need something strong to go with what the Captain is going to tell him.\"\n\nKat joined in, \"I think you need something that will put him at ease. He already believes he is damaged goods. We need to convince him he isn't.\"\n\nMy turn. \"I think I need to be having a small party next Friday night. Maybe as many as six people. Two men and four women. Pam, Megan, Pete, me, Bonny and Rina.\"\n\nBonny and Rina? Who are they?\"\n\n\"Bonny is the one I think will assist Pete back to the living. Rina is another good friend who will like Pete and will tease him into being ready to have sex with anyone. They are both just a bit older than he is but I don't think that will be a problem.\"\n\n\"How do we get him to be willing to go with us to your house?\" \n\n\"The alternative is to spend the weekend in the hallway. Not much privacy and not much beer there.\" Pam said.\n\n\"Oh, now that may be something. How much access do they have to beer?\"\n\n\"Almost none. It is against the rules. To get it someone has to smuggle it in. I know Pete likes it because he has been caught twice with beer in the time since he arrived.\"\n\n\"Can he get along on crutches or does he need a wheelchair?\"\n\n\"Crutches. He's actually pretty good with them but we have trouble getting him out to use them.\"\n\n\"I feel a plan coming together. This just may work.\"\n\nThe rest of the trip we talked of other things. At the main gate I was waved through and we delivered Kat to her BOQ room with hugs and kisses. Pam went in with her and dropped off her uniform and grabbed something else. Ten minutes on base and we were headed home.\n\nAs we drove I called Megan. I invited her to meet us at the Reel Inn in Malibu and she thought that was a great idea. Half an hour later we pulled into their parking lot and Megan was waiting for us. Pam and Megan hugged and we walked in all arm in arm.\n\nOver dinner the conversation went back to Pete and the plan. We filled Megan in and she thought this was a great idea but also quite risky. She wanted to be in on whatever happened and said that if Pete was cute she might take a shot at him herself. After dinner we went home. They went somewhere to talk and I went into my office and called Bonny.\n\n\"Bonny? This is Lee. Got a minute or two?\"\n\n\"For you? Sure. What's up?\"\n\n\"Are you available for some part of this coming weekend?\"\n\n\"If I say yes will I be with you?\"\n\n\"Yes, and with a few others.\"\n\n\"I have the whole weekend free.\"\n\n\"OK. Now when can we meet before the weekend? I have something quite important and quite confidential I need to discuss with you.\"\n\n\"Talk. I'm listening.\"\n\n\"I'm pretty sure this conversation needs to be in person, face to face. Can that happen?\"\n\n\"How about right now? I can be at your place in under half an hour.\"\n\n\"The door is unlocked.\"\n\n\"Turn on the hot tub. We can talk there.\" The phone went dead in my hand. If I knew Bonny as well as I thought I could count to ten and call back but she would already be gone.\n\nI found Megan and Pam in the family room talking about the Friday night party. They had started a list of stuff we needed to get. I let them know that Bonny was on her way and that I had already turned on the hot tub. They were invited to join us in the hot tub.\n\n\"Lee, is Bonny someone who shares your bed?\"\n\n\"Until I brought Kat home no one had shared my bed in five years. Bonny and I joined some years before that but not while I was married and not after. I'm sure, I'm pretty sure she would stay if she was invited.\"\n\n\"Shall we invite her?\" Pam asked. Her eyes were saying 'No'. \n\n\"Not tonight. I'd like her to stay Friday night and maybe even Saturday night. Tonight I'd like to join with both of you and snuggle quietly together.\"\n\n\"Good!\" They spoke in unison.\n\nTwenty eight minutes after I had the phone go dead in my hand the front door opened and Bonny came in. She unwrapped herself and walked into the family room carrying her dress. She stopped short when she saw Pam and Megan.\n\n\"Oh, I'm sorry. I thought we were going to be alone.\"\n\n\"I'm sorry. You hung up so quickly I didn't get to tell you about these ladies. This is Pam and this is Megan, my daughter.\"\n\nPam stood, as did Megan and they hugged Bonny. As soon as they had hugged Pam undressed and said, \"I assume we are going to the hot tub?\"\n\nMegan and I piled our clothes on the couch too and we walked out to the hot tub and slid in. Pam sat near me on one side and Bonny on the other. Pam put her hand on my thigh as we sat down. Megan turned on the bubbles.\n\nWe didn't talk for a few minutes, just relaxed and enjoyed the bubbles. Bonny put her hand on my other thigh. I put an arm around each of them.\n\nMegan watched us for a little while and then shut off the bubbles.\n\n\"OK. What is this conversation you can't have over the phone?\"\n\n\"Can you keep a secret?\"\n\n\"You want a promise that this conversation will never leave this hot tub?\"\n\n\"Yes!\" Megan, Pam and I said in unison.\n\n\"OK. I promise.\"\n\nWe explained all about Pete to Bonny. She asked good questions and she thought about the plan and her part for a long time. \n\n\"OK. I'm in. I'll bring your Marine back to life. But I have some more questions.\"\n\n\"Ask,\" I said.\n\n\"How long have you and Pam been an item?\"\n\nPam answered, \"Since a week before I met him last month.\"\n\n\"How's that?\"\n\nPam explained about how Kat had met me and then brought Pam into the family a week later. Bonny lifted an eyebrow at that but listened and asked where Kat was tonight. After she got all that digested she asked another question.\n\n\"How long have you and your Dad been lovers?\" She was looking right at Megan.\n\n\"I have loved him since I was two and he brought me home. I have shared his life since then. We first joined a couple weeks ago.\"\n\nBonny looked at me and said, \"You are really something! Five years I thought you were becoming a celibate monk and now you have three women sharing your bed! Why aren't I one of them?\"\n\n\"Would you like to share our bed?\" Pam asked, softly.\n\n\"Yes.\"\n\n\"Will you be offended if we say, 'Not tonight, but soon?\"\n\n\"No. I will be honored. I have known how Lee loves for years and it hurt when he lost his wife and retreated. I'm so glad he is loving fully again. I am glad he found Kat and you, Pam, and that Megan is here too.\"\n\nBonny's hand reached for my cock and found it being held by Pam. When their hands touched Bonny didn't back off, she looked at Pam. Pam smiled and moved her hand, not away but to share. Since the bubbles weren't on Megan saw what was happening. She stood and moved between my legs, bent and kissed my mouth.\n\nMegan finished the kiss and said she was going into the house. She kissed Pam and then Bonny. Both kisses were lover's kisses. We watched her walk back to the house and go inside.\n\nPam stood and helped Bonny stand. She didn't speak but helped Bonny straddle my legs and sit in my lap. I wrapped my arms around her and we kissed. Pam hugged Bonny from behind and held her breasts. Bonny felt my erection pressing against her and felt Pam behind her. ",
        "I heard the phone ring once. A minute later Megan open the door and said, \"Dad, there's a woman named Corine on the phone. She would like to stop by. What shall I tell her?\"\n\n\"Tell her to come over. Ask her how long it will take her to be here.\"\n\nMegan disappeared and in less than a minute came back. She was smiling.\n\n\"Well? How long?\"\n\n\"Maybe two minutes. She was at Sunset and PCH.\"\n\nPam started moving. Bonny got up off my lap and followed Pam.\n\n\"Where are you going?\" I asked.\n\n\"To get some clothes on. Corine is my C.O. and I'll feel better if I have something on when she arrives.\"\n\n\"Go in my chest of drawers, third drawer. There is a wrap there. In fact there are three. Please don't get fully dressed, just use one of those wraps. I'm going to wrap myself in a towel. If I am right Corine is not in uniform and does not expect to be treated as a naval officer.\"\n\nPam nodded and went inside. Bonny followed. I got out of the water and wrapped myself in a bath sheet. Next to the hot tub is a locker where I keep ten or so large towels.  When I was half way to the door I heard the doorbell.\n\nI walked into the house and saw Megan leading Corine into the family room. Megan was wearing one of the wraps. When she stood still she was fully covered from the top of her cleavage to her knees. When she walked the wrap gapped in front and exposed her bare pussy to view. Corine may have known that but, because she was following Megan, I was the one treated to the scenery.\n\n\"I hope you don't mind. I went for a drive and realized that I was near here, so I called.\"\n\nCorine was wearing loose fitting cotton pants with a drawstring waist, a loose t-shirt and sandals. I walked to her and hugged her. There was no bra under the t-shirt.\n\nI introduced Megan to Corine and then we were joined by Pam and Bonny. Bonny was introduced. Three women in Hawaiian print wraps and a man in a towel standing with Corine. \n\n\"We were in the hot tub when you called. We would like it very much if you would join us.\"\n\n\"Oh, I don't have a suit.\"\n\n\"If you really want to be covered I can loan you a t-shirt but we generally use the hot tub without clothes. It's more comfortable and it lets the bubbles tickle us.\"\n\n\"I don't know if I should.\"\n\n\"Corine, this is not Navy property. This is my home, our home. You can do what makes you feel good. You can relax.\"\n\nBefore she could speak I turned to Megan, Pam, and Bonny. \"Ladies let me speak with Corine alone for a minute would you? We'll see you in the water.\"\n\nThey smiled and left. I faced Corine.\n\n\"You came here tonight to see if all this is real. If you really want the answer, stand still.\"\n\nShe smiled but didn't move. I reached out and lifted the t-shirt up over her head. She let me. I pulled the drawstring at her waist and the pants fell around her ankles. She stepped out of them. She was not wearing panties. She was not wearing anything. I spent no time looking at her body. I dropped my towel and took her in my arms. \n\nCorine looked up at my face and wrapped her arms around my chest. I bent my face to hers and kissed her. She welcomed me. Her lips were warm and soft. A few seconds into the kiss she opened her lips a bit in invitation. I accepted. \n\nMy tongue touched her teeth and she sucked me into her mouth. The smoldering heat was loose and she wanted whatever was available. Her hands slid down my back and grasped my ass. \n\nWhen the kiss ended I asked, \"Do you want to go out to the hot tub?\"\n\n\"If I say no what will happen? Wait. Yes. I understand that if I'm going to understand all this I need to go there. My God. I can't believe I'm here and I'm doing all this.\"\n\nWe folded her clothes over a chair and I wrapped her in my towel. With my arm around her we walked out and to the hot tub. Megan smiled at me and thanked me.\n\n\"What are you thanking me for?\"\n\n\"I bet them than when you came out Corine's clothes would be inside the house.\"\n\n\"Corine seemed to think this was more appropriate wear for the hot tub.\"\n\n\"Right.\"\n\nCorine looked at Pam and said, \"This has nothing to do with the Navy, does it?\"\n\n\"No Ma'am. Here, this is the proper uniform.\"\n\nCorine handed me the towel and stepped into the water. She sat between Bonny and Megan. I sat between Megan and Pam.\n\nCorine turned to Bonny. \"So how do you know Lee?\"\n\n\"We have been friends and lovers on and off for years. He invited me over tonight and I happily came. Over.\"\n\nWe all laughed at her addendum.\n\n\"Is the water hot enough for you ladies?\" I asked.\n\n\"102. That's perfection.\" Megan said, looking at the thermometer.\n\n\"Corine,\" Bonny said, \"How long have you been in the Navy?\"\n\n\"Eighteen years.\"\n\n\"Oh. Have you been stationed overseas?\"\n\n\"Frankfort Germany, Alice Springs, Australia, Tatchikawa, Japan, the Panama Canal, and three bases in the USA.\"\n\n\"Which was your favorite?\"\n\n\"As of about ten minutes ago I'd have to say Point Mugu California but maybe you need to ask again in a week or so.\"\n\n\"Do you believe in being impulsive?\" Megan asked.\n\n\"I'd have to say yes, given that I'm sitting here nude with all of you.\"\n\n\"Pam, please close your eyes.\" \n\nShe did. Megan turned to Corine and took her face in her hands. She leaned in and kissed Corine. The kiss was accepted with enthusiasm. Hands went into exploration mode and the kiss was repeated.\n\nPam opened her eyes and smiled. Bonny stood and resumed her seat in my lap. Pam reached into my lap and stroked me until I was hard. She helped Bonny invaginate me and then she moved over to Corine and Megan. When I looked over I saw Megan and Corine kissing and Pam had a hand in each pussy. It was erotic but I could not watch for long because I was being distracted by the motions of Bonny in my lap.\n\nBonny is long in the body. Long enough that I can be inside her and easily suck her nipples at the same time. I love sucking her nipples because she loves having them sucked hard, licked and pinched. She responds noisily and with lots of body action as well. I am blessed that she shares that with me. As I held her at the hips she raised and lowered herself, sliding along my cock, and used her arms to hold my face to her breasts. I could hear Bonny's moans and gasps and those of the three ladies behind her. I was working at being quiet. I didn't want the neighbors calling the cops on our little party.\n\nWhen the party in the hot tub was over we moved inside. I offered Corine the use of a guest room and both she and Bonny accepted. Pam, Megan and I retreated to our bedroom and fell asleep after some quiet snuggle time together. \n\nAt sometime during the night I got up to pee and heard sounds of pleasure coming from down the hall. Corine might need a day off tomorrow; she wasn't getting much sleep tonight.\n\nCorine was already in the kitchen when I walked in. She was wearing the wrap that Bonny had worn the night before. I looked at her perched on a kitchen stool. Her legs were exposed all the way up to her exposed pussy because the wrap gapped that way. She was tanned and physically fit. From what I could see her triangle of curly hair was trim and well cared for. Perhaps at some time I would be able to do a little closer exploration.\n\n\"I'm in the habit of getting up early,\" she said. I smiled and kissed her good morning. Her hands went around my waist and we embraced as well as kissed.\n\n\"I don't think I need to say this but I'll be uncomfortable if I don't. I'm not a lesbian.\"\n\nI smiled again. \"I have kissed you twice in the last twelve hours. I never gave a thought to you being anything except who you are. Straight, lesbian or bi, my opinion of you hasn't changed. I want to be affectionate with you and include you in all the loving that happens here in our family. If you can enjoy being with us I'm happy. This isn't just about joining. This is much more than that for me.\"\n\n\"Bonny said you were real. We talked a lot last night.\"\n\n\"I think there was more than conversation between you last night.\"\n\nCorine blushed and said, \"Yes, there was. Between acting like teenagers in heat we talked. She loves you. She has loved you for years and worried about you for a long time after your wife died. She did her best to explain who you are in her life to me last night. I watched her face as she talked. I felt her energy as she talked about loving you and being loved by you. She believes everything she says about you. I watched last night. I believe you are who they say you are.\"\n\n\"Thanks. Want coffee?\"\n\n\"Yes. Can I make it?\"\n\n\"Afraid I'll make that weak-in-the-knees coffee everyone in the Navy thinks the Air Force makes?\"\n\n\"Well...\"\n\n\"I spent four months on the Essex. I know what real coffee is. Give me a chance.\"\n\n\"OK.\" She sat and watched as I made a pot of Navy coffee. When it was done I poured her a mug and gave it to her, black and hot, no sugar. One sip and she smiled.\n\n\"OK. You make good coffee. What else?\"\n\n\"Breakfast?\"\n\n\"Shouldn't I be doing something? I can cook.\"\n\n\"You are doing something. You are here for me to love and to give my affection to. You give my ojos viejos something beautiful to look at.  You're just fine right there. How about French toast?\"\n\n\"That sounds good.\"\n\nI hauled out ingredients and a griddle. A few minutes later I had three slices on the griddle and five plates sitting on the counter. Megan walked into the kitchen wrapped in another of the Hawaiian prints and she went right to the coffee.\n\n\"Navy?\" She asked, looking at me. \n\nI nodded. She added cream and sugar. She sipped and smiled. She came to me and we kissed. Megan went to Corine and they kissed  Megan took the seat next to Corine.\n\n\"How are you this morning?\" Megan asked.\n\n\"Fine, and you?\"\n\n\"That wasn't an idle question. I actually would like to know how you are this morning. I know last night was probably a new experience for you.\"\n\n\"OK. I'll give you a real answer. I came here at your Dads invitation because I couldn't believe what I heard and more importantly I didn't believe what I saw of my two nurses when I met with them and Lee on the base. I was welcomed in last night. No long slow dance to see how it might go. When the door opened, I was in. When I woke up this morning I was in bed with someone I didn't know yesterday and she is more than my sister. So far this morning I have been given a good cup of coffee and two kisses. It looks like French toast is on its way to me. Megan, I haven't felt this good in a very long time, if ever. That's how I am.\"\n\nCorine's smile never changed during the whole speech. I dished up her French toast and sat the plate in front of her.\n\n\"Oh I'll never eat three slices.\"\n\n\"Megan, help her.\"\n\nCorine put butter and syrup on the slices and both took bites. I made three more. Just as they were done Bonny and Pam walked in. Bonny wore a towel. Pam had one of the wraps on. I dished up the French toast and they took them. Everyone got their kisses and I put three more slices on the griddle.\n\nIt was quiet for a couple of minutes in my kitchen, except for the small noises made by forks touching plates and the noises of happy people eating. Megan got up from her seat, speared a piece of French toast from her plate and tapped me on the shoulder. When I turned she fed it to me. I was guided to her chair and the she served me the toast from the griddle. She smiled and produced what I like on my French toast; peanut butter! Megan and I laughed at my quirk, but the others all tried it and discovered they liked it too. Corine and Pam did the clean up while the rest of us showered and got dressed for our day. By noon I was alone in the house with Pam.\n\nLate that afternoon I drove her back to the base. I took Kat out for dinner after her shift and by ten I was back at home. I went to bed and was reading when Megan came home. Shortly after that we were snuggled together in bed and slept touching each other.\n\nI worked and planned during the rest of the week. Thoughts of Pete were never far from my mind. Wednesday night I called him. We talked for a while and I asked what he liked and would like around the house while he visited. He wanted to know if he could have a few beers while he was here. I asked what brand he liked. I wrote it down so we could make sure we had some for him.\n\nRina was ready for a get together. When I spoke to her she had already spoken to Bonny and they were excited about meeting Pete. From her comments I knew Bonny had been discreet. Rina was in and knew nothing of the plan.\n\nMegan and I talked Thursday evening and decided that she wouldn't go to the base with me. I also talked with Pam and Corine and asked if Pete had some civvies to wear for the weekend. They checked and he was packed and ready to leave the base.\n\nEarly on Friday morning I was driving north, headed for Mugu NAS and the start of a Naval Operation. I decided it was called Operation Mae West. Because a Mae West is a life jacket that helps someone stay afloat.\n\nMegan was shopping. I thought about how very much she was like an angel. My angel. She fit in my life perfectly. She loved fully and openly. She was smart and capable. She wasn't needy. Every time I saw her, touched her, felt her presence, or smelled her, my heart quickened.\n\nAs I neared the base I saw four young men climbing the big rock. I smiled. Pete was climbing this weekend, and he didn't even know it yet.\n\nThe starched uniform at the gate smiled and saluted as I passed through. A man could get to like that kind of treatment. I stopped in front of the same building where I had met with Captain Evans and Corine just a week ago. I walked to the front door and was met just inside by Corine. She smiled and led me down the hallway to her office. Inside she closed the door and came into my arms. The feel was warmth covered in starch and stiffness. The lips were all warmth. Eventually the kiss ended.\n\n\"I discovered some things at your home last weekend.\"\n\nI did not let go of her. I just smiled. \"Oh?\"\n\n\"I discovered something I didn't believe existed. I wanted to be loved, even to possibly have sex at your home. I didn't expect to be loved like I was... am loved. I spent the night with someone I didn't know who loved me. I've been wanting this kiss for days. When our lips touched I knew all the thoughts and feelings I've been having are real. I understand why both Pam and Kathleen love you.\"\n\n\"Thank you. I love you too.\"\n\n\"I've been sitting with that all week. You don't push. You don't use a line. You are just the man that I've been looking for all my life. Do you have boundaries?\"\n\n\"Of course. I don't push my love on anyone. If you have boundaries, limits, taboos I respect them. I won't give up being me to be with anyone.\"\n\n\"Oh. Where do we go from here?\"\n\n\"For Pete's sake I recommend you don't come to the house this weekend. Seeing you in the hot tub might mess with his head. If you would meet me here when I bring him back I have a present for you. Actually, it's in the car right now.\"\n\nHer face brightened and surprise lit her eyes.\n\n\"A present? Must I wait?\"\n\n'No. I'll get it for you.\" \n\nI walked back out to the car and opened the glove box. Inside was a small cardboard box with three house keys inside. Each was on a small heart shaped key ring. One went into my pocket and the rest back inside the glove box.\n\nAfter I closed her office door I held out my hand. She unfolded my fingers and found the house key. She held it in her hands and looked up at my face with full eyes.\n\n\"Corine, this key opens the door into my home and my world. There are no restrictions on the use of this key except one. It can only be used in the expression of love. You never need to call first, and you can. If you want to bring someone with you, you may. The key is yours. When you are done with it, please give it back.\"\n\n\"Not likely.\"\n\n\"This Pete guy can he wait another minute?\"\n\nShe nodded. I took her in my arms and added two or three new creases in the starch of her whites. I also removed some of her lipstick. \n\nI followed her down a long hallway to Pete's room. Pam was sitting on a chair near Pete's bed. He was sitting on the bed dressed in khaki pants, athletic shoes and a Hawaiian shirt.\n\nHe looked up and smiled at Corine. She introduced us and we shook hands. I asked if he had a bag. He did. It was a gym bag and didn't look packed. Pam picked up her bag which looked packed. The sides bulged, pushed by the stuff within.\n\n\"If you don't have any questions before we go I guess we should get out of here and let the painters have the room.\"\n\n\"I didn't know exactly what I needed for the weekend.\"\n\n\"You packed your dop kit?\"\n\n\"Yes.\"\n\n\"Extra underwear and clean clothes?\"\n\n\"All I own. It isn't much.\"\n\n\"Perfect! You'll be fine. Let's go.\"\n\nPam walked beside Pete and carried his bag and hers. Pete used the crutches like a pro. Corine and I followed them down the hall. Near the exit I saw Kat and paused. I gave Corine my car keys and said I'd be right with them. I took Kat into a small room behind the desk where she was sitting.\n\n\"I'm missing you already.\"\n\n\"That's my line.\"\n\nHer face touched mine and the kiss said all that could be said about wanting. When it ended I whispered. \"Think about something you and I can do that can be just for us and soon. I want some time for just us.\"\n\nWe kissed again and she said, \"I'll plan it. OK?\"\n\n\"Call me at home later and I'll look at our calendar for dates.\"\n\nOne more kiss and I had to leave. Outside Corine smiled at me, handed me the keys and waved good-bye as we drove off. At the gate we got a salute and a smile.\n\nAs I turned right onto the highway south Pete relaxed, a little. He was sitting up front, with me. Pam was behind me.\n\n\"Pete, this weekend is about relaxing. I don't want to push you at all. I also don't want you to do anything that your medical team would disapprove of. Pam is the team for the weekend and I want her to be able to relax too.\"\n\n\"Pam?\"\n\n\"On duty she is Lt. Dalby. She isn't on duty now. Now she is Pam. And, in case you aren't clear about it, she is my girl-friend.\"\n\n\"Oh.\" \n\nHis eyes were sparkling and he kept looking between Pam and me.  At Sycamore Canyon Campground I pulled in and stopped by a bathroom. Pam got out with her bag and two minutes later came out in shorts and halter top. She leaned in through my window and kissed me. Bent over like that showed lots of skin and Pete had trouble walking, not looking. The therapy had begun.\n\nBack on the road Pete loosened up a little more.\n\n\"Pardon me for asking questions but am I some kind of project or something?\"\n\n\"Yes. I'm really an Arab spy who wants information about troop deployments in the Middle East. Yes, a special project that Pam thought of when she had to work last weekend and we didn't get much time together. When she heard that your room needed paint and you might get to be in the hallway all weekend she thought if we brought you home with us we would get more time together than if we were apart for another weekend.\"\n\n\"And you got Captain Evans to go along with this?\"\n\n\"We didn't sell it quite like that. We used all the good of the Navy stuff, community support for the troops, patriotic stuff. He couldn't hardly say No to that.\"\n\n\"OK, so it isn't really about me?\"\n\n\"Wouldn't I really need to know you for it to be about you?\"\n\n\"I suppose.\"\n\n\"I want you to have a good time. There is some beer in the refrigerator and it's your favorite brand. There is a pool, a hot tub, a big screen TV and about a hundred movies. Tell us what you like to eat and we'll do our best to get you some.\"\n\n\"OK.\" \n\nHe relaxed another level. As we passed Zuma Beach he saw four young women standing alongside the highway in bikinis.\n\n\"Oh yes. They remind me that I need to tell you that it won't be just us at the house this weekend. My daughter lives with me. She will be there and perhaps some of her friends or some of mine will drop in.\"",
        "\"Drop in?\"\n\n\"I opened my home years ago to my family and friends. Most of them have keys. If they want to swim, they come over. If they want to hang out with us, they come over.\"\n\n\"If I gave my friends keys they'd come over, eat all my food, drink all my beer and leave me empty.\"\n\n\"You train people how to treat you. Watch everyone who comes over this weekend. They will bring more than they consume. If Bonny was coming over and knew she wanted a salad and three beers she would show up with enough salad for six people and a case of beer. Last time Rina was over she wanted bar-b-qued shrimp so she brought three or four pounds.\"\n\n\"I talked to Megan last night and she said she was going to Costco this morning to stock up.\" Pam finally joined in.\n\n\"Pete, have no fear. We will not run out of anything important, including TP. Megan is my daughter and she loves Costco!\"\n\n\"How old is Megan?\"\n\n\"About my age,\" Pam answered.\n\n\"Oh.\" \n\nThe tone he used said he was making her presence mean something. I figured I needed to say something to move his head a little.\n\n\"She told me she was going to spend some time today with that guy, Eric. I wonder if that changed.\"\n\n\"I think she was taking him along to help carry stuff. Have you met him?\"\n\n\"Talked to him once on the phone, that's all.\"\n\n\"He's cute.\"\n\nI smiled. \"Just what I always wanted to be, cute.\"\n\nPete smiled and looked out the window. Pam and I pointed to various things as we drove. When I turned away from the ocean Pete watched as I drove. It wasn't long until I turned into our driveway. Megan's car was parked out front next to Rina's.\n\nI carried Pete's bag and Pam's. Pam was in civilian clothes but her nurse's training had her hover over Pete as he crutched his way into the house. He noticed that the front door wasn't locked. Inside I took the bags and deposited them in their respective places. I noticed the sign Megan had put on Pete's door. It said, \"Pete's room! Knock before entering! Please.\"\n\nPam guided Pete into the kitchen. He found a comfortable chair and sat. Pam asked if he wanted anything. He said he'd like a beer. She showed him where the refrigerator was and how it worked. She didn't get him a beer. He smiled. That's how it's going to be. No longer a patient, now just a part of the family. He got up and got himself a beer. Pam pointed out where things were kept in the kitchen: plates, glasses, silverware, bread, trash.\n\nThey both looked when they heard the sliding glass door open. It led from the family room out to the patio and pool. It was Rina. Pete almost dropped his beer. Rina is a sight one is best able to handle if warned ahead of meeting. She is forty or so. Black curly hair and skin that always looks tanned. She is about five foot five or so, average weight and two huge breasts. DD wouldn't fit. As she came through the door she was wearing a yellow almost bikini. The triangle of sheer cloth at her genitals was about an inch and a half wide at the widest part! The two triangles of yellow sheer material on her breasts didn't even cover her areolas.\n\nShe bounded through the door way and said, \"Oh, good! You're here!\" She went to Pam and kissed her hello and then turned to Pete.\n\n\"I'm Rina! I'm glad to meet you!\" Her arms went around him and she pressed her cold, wet chest against him. He froze. She held on. She looked up at his face and when he looked down she kissed him. Then she let him go.\n\nWhen Pete recovered his balance a little he said, \"I'm Pete.\"\n\n\"I'm glad to meet you.\"  Seconds later she was back outside. As she retreated it was obvious that the three tiny triangles were all of her that was covered at all.\n\n\"No, Pete. I don't have a suit like that.\"\n\n\"She might as well be naked.\"\n\n\"If you ask I'm sure she would be.\"\n\n\"Are you serious?\"\n\n\"Yes!\"\n\nPete sat back down. I came into the kitchen. I was in a t-shirt and swimming trunks.\n\n\"Rina, Megan, Eric and a couple others are outside. Want to join us out there?\"\n\n\"OK.\" Pete stood. I took his beer transferred it to a plastic cup and tossed the glass bottle in the trash. \n\n\"Glass stays inside. I don't want anyone stepping on broken glass or to get broken glass in the water. Come on.\"\n\nPam went to change and Pete followed me. I got him situated where he was in the group but not in the water. He was introduced around and immediately included in the conversations.\n\nPam came out in her blue bikini. It covered acres more skin than Rina's but I saw Pete's shorts twitch when he saw her. Pam is a delight to see. The therapy was doing well, so far.\n\nUntil about one people swam, talked, soaked, talked some more and noshed. Megan fired up the bar-b-que and grilled some chicken to go in the huge salad Rina provided. Everyone except Pete set the table, prepared food and then sat down for dinner.\n\nAs soon as everyone was seated at the table Megan spoke. \"Pete, when you were growing up did your family say something before they ate?\"\n\n\"Sometimes.\"\n\n\"Here we do. When I was a very little girl my Dad was a minister. We used to pray long prayers at every meal. One day that changed. It has stayed changed ever since. Dad says that the most powerful prayer anyone can say is two words long. Thank you. He also says that every time you say those two words it is a prayer of gratitude. Around here we turn to each person present and say Thank you.\"\n\nShe turned to Pam at her right and said, \"Thank you.\" Pam turned to Eric, \"Thank you.\" When it got back to Megan she said \"Thank you\" back and it went back around in the other direction. Rina was sitting next to Pete. When he said \"Thank you\" to her she smiled. When it came back she said, \"Thank you\" and kissed him.\n\nAs everyone started eating Pete said, \"I've never known a prayer like that. I even got kissed!\"\n\nI took that as a cue. \"As I see spirituality it is personal and physical as well as metaphysical. When people kiss who are intentional about their spirituality they are consciously connecting with another. Acknowledging the connection we all have to each other. Saying Thank you expresses gratitude to each person for being a part of our life.\"\n\n\"Amen.\" Eric said.\n\nMegan leaned to him and they kissed. Pam leaned to me and we kissed. Megan and Rina leaned to Pete and both kissed him. He smiled and said, \"Thank you!\"\n\n\"I think I like this church!\"\n\n\"Thank you!\" I said. Echoes were heard from round the table.\n\nThe meal was eaten and conversations danced. At some lull Eric spoke, \"We need to find something that Pete can do. He's using crutches so he can't carry stuff. Everyone helps as they can. What can Pete do?\"\n\nA few seconds passed. I hoped Pete would find whatever it was he could do.\n\n\"I can carry all the silverware in my pocket and put it on the table!\" \"OK! Great!\"\n\nThe table was cleared, the dishes done and the trash disposed. Pete went back to his seat by the pool. Rina sat next to him.\n\n\"Pete, is there a medical reason you haven't been in the water?\"\n\n\"No.\" He paused.  \"I'm embarrassed. I've got lots of scars and I don't want people to see them.\"\n\n\"OK. If you wore shorts and a t-shirt would you be OK?\"\n\n\"Yeah, but I don't have any.\"\n\n\"Whoa! Stop right there. What do you have?\"\n\n\"I have another pair of pants for tomorrow and a shirt.\"\n\n\"Don't move!\" She scurried off into the house. Pete watched her do it. He also smiled. She came back with a pad of paper and a pencil.\n\n\"OK. What color do you like?\"\n\n\"Navy blue.\"\n\n\"Right. Why did I even ask?\"\n\n\"What size pants?\"\n\n\"34X34.\"\n\n\"What size shirt?\"\n\n\"XL.\"\n\n\"Don't go home.\" She was gone.  I left Pete sitting alone for a while. I knew he was there. After a while Eric went out and took him another beer. They talked for a while. Eric drew him out about his home town, his high school, sports, and the Navy. They became friends.\n\nRina and Pam returned. They spread their purchases on the kitchen island and asked Pete to come in. Pete and Eric came in. On the island were two pair of surf shorts, three t-shirts, a pair of cargo pants and a Hawaiian shirt. Pete was in shock. He looked. He touched, but he didn't pick anything up.\n\nFinally, he looked at Rina. \"Is this stuff mine?\"\n\n\"Of course, Honey. It's all yours. Now pick some stuff and get changed.\"\n\nHe picked a dark t-shirt and Navy blue shorts. Pam took them from him and he started down the hall. Rina took them from Pam and she and Megan followed him down the hall. Therapy was into phase two.\n\nI turned on the hot tub. All of us except Pam went out to the pool. Ten minutes later Pete came out the door in his new clothes. As he crutched to the pool steps I noticed he still had a hard on. I wondered if that was a good sign. I decided it was. We got Pete into the water and he did well getting around after he was in. Pam tossed a canvas and aluminum chair in and it stayed on the bottom as long as he sat in it.\n\nPete positioned the chair so people sitting on the steps were near him. People frolicked in the pool and included him but didn't make him the center of attention. I saw Megan watching him. She had something in mind.\n\nI sat with him and asked how he was doing. As he started to answer Megan dove in at the far end of the pool. He watched. She glided all the way to us underwater. She surfaced in Pete's lap. As she surfaced I noticed her top was missing. Her beautiful pink nipples and areola were right there in Pete's lap.\n\nShe laughed and then stood. Now her breasts were right at his eye level.\n\n\"It's only fair. You let me see you.\" She turned and swam away.\n\nPete looked up and saw Rina tossing her yellow scraps onto the side of the pool. He turned to me and said, \"I don't know what to say.\"\n\n\"I do. Thank you.\"\n\nThe sliding glass door slid open and Bonny and another woman came out. Bonny was wearing a giant t-shirt and the other woman was wearing a light short summer robe. I told Pete who they were and he watched as they both came to meet him. Bonny pulled the t over her head and put it on the edge of the deck. She was wearing a modest bikini except that it was the same color as her skin and I was sure when it got wet it would be transparent.\n\n\"Lee, this is my sister Monica from Orlando. She flew in for the weekend and I wanted her to meet my friends.\"\n\n\"Welcome Monica. Make yourself at home.\"\n\nBonny glided down the steps into the water and stood before Pete. \"Hi, I'm Bonny.\"\n\n\"Pete. Nice to meet you.\"\n\n\"I'll be back.\" She stepped away and waited for her sister. Monica shed the robe and was wearing a one piece dark blue bathing suit. She was almost a match for her sister in body and size. Slightly tall, long legged with dark brown hair and smallish breasts high on her chest. I took the robe and hung it on a hook I knew of. Monica waded in and greeted Pete. The two sisters made the rounds and Monica met everyone. Soon Monica was comfortable enough that Bonny left her with Megan and Eric. She meandered around and found her way back to Pete and me. She sat between us. I had been right about the suit. She was wearing it but from any distance she looked nude. She was shaved and it was obvious. Pete was hard. Hell, so was I.\n\n\"Pete, right?\"\n\nHe nodded.\n\n\"You are in the Navy?\"\n\n\"Yes, Ma'am.\"\n\n\"What do you do in the Navy, if I may ask?\"\n\n\"I'm a SEAL.\"\n\n\"That's wonderful! I knew someone else who was a SEAL. He wouldn't tell me anything about being a SEAL except that it was dangerous and secret.\"\n\n\"I can't talk about any operations either, but I can talk about our training.\"\n\nThe next half an hour Bonny sat transfixed by Pete's story. She asked good questions. He felt pride in what he had done and in who he was. She asked him what it was going to take to get back in shape so he could go back to work. He sat quietly for a long time and then answered: \"The docs aren't sure I can go back.\"\n\nBonny put her hand on his arm and said, \"Make believe that they say it's possible, just barely possible. What will it take?\"\n\nAgain he sat quietly for a long time. Bonny's hand stayed on his arm. He looked at the water but he wasn't seeing it. He was thinking.\n\n\"I'm going to need to drop the crutches. I'll need to start walking and then running.\"\n\n\"Far?\"\n\n\"I'll need to get up to twenty miles in under five hours to have any chance.\"\n\n\"You used to do that?\"\n\n\"And more.\"\n\n\"Will you need upper body strength too?\"\n\n\"Yes. All this sitting around has made me flabby. I need to get back into doing push-ups and sit-ups.\"\n\n\"I do sit-ups when I work out. I can do thirty.\"\n\n\"Right now you can probably do more than I can. I haven't done one in five months.\"\n\n\"Is being a SEAL again what you want to do?\"\n\n\"Yes, Ma'am!\"\n\n\"Then I have an exercise I want you to try. Let's go inside and I'll show it to you. I'll even help you do it the first time. OK?\"\n\n\"OK. I do still need to be careful.\"\n\nBonny helped Pete to his feet and out of the pool. He reached for the crutches and Bonny put his arm around her shoulders. He left the crutches. No one seemed to notice that they went inside. I was wrong about that.\n\nMegan swam over to me and sat next to me. She said, \"I guess I'm too late.\"\n\n\"For?\"\n\n\"Bonny just took our boy inside and I'm betting that when he comes back outside he's been laid.\"\n\n\"She said she was going to teach him an exercise.\"\n\n\"The vaginal squeeze.\"\n\n\"I hope he enjoys it.\"\n\n\"Wouldn't you?\"\n\n\"I'm not wrestling with his demons.\"\n\n\"Right about now he's wrestling with Bonny. If I can hazard a guess, she's winning and so is he.\"\n\nEric joined us. \"How's Pete doing?\"\n\n\"Hard to tell at this moment. We'll know a lot better next time we see him.\"\n\n\"I saw Bonny take him inside.\"\n\n\"Bonny tends to exercise loudly. If things are going well we might hear the progress.\"\n\nEric laughed a little and kissed Megan. They swam off a ways and continued kissing. Over the next few minutes I was visited by Pam, Rina, and Monica. When Pam swam over she was a nurse. Her head was inside with Bonny and Pete. She was worried. I took her in my arms and kissed her until the nurse moved back and Pam was with me.\n\nRina swam over a few minutes later and kissed Pam and me. She never, in my experience, kisses with just her face. A Rina kiss involves the entire body. Also, they are never quick. As we broke the kiss she gave my erection a gentle squeeze.\n\nMonica waded over to me and said, \"I've been watching you. I like what I've seen. May I have a kiss too?\"\n\nI opened my arms and she entered. Our lips met and she welcomed me like we had been lovers a long time. I held her to me and enjoyed the feelings. Her warm tongue tentatively probed between my lips and found it was welcomed by my tongue.\n\nEventually we broke the kiss. \"Wow! Lee, Bonny told me about you and the family. Now, I believe her.\"\n\n\"And?\"\n\nShe stepped back and peeled the dark blue suit off. She tossed it out of the pool and stepped back to my arms. Her body was cold to the touch for a moment, then we warmed each other and our kisses added to the heat.  Monica leaned back and I kissed along her neck to the cleft at the base of her neck. My hands held her ribs alongside her breasts. \n\nA few kisses later she whispered, \"Would you kiss my tits?\"\n\nI did. All around her breasts avoiding the nipples at first. When I drew back she wrapped her hands around my head and aimed my mouth at her right nipple. Like her sister's it was like a small berry with a tiny dimple at the end. Her areola was puffy and conical and the color called dusty rose. At that moment the shape and color were my favorites. I remembered that Bonny loves to have her nipples sucked gently at first and then harder and harder. I held Monica's nipple gently and licked it with my tongue. She pressed my face harder into her breast and moaned. \n\nAs Monica moaned it sounded like stereo. From inside the house Bonny had moaned loudly. I broke my kiss of Monica and we all laughed. Seconds later we heard the bellow of the lion from between Bonny's thighs. Pam hugged Monica and me and said, \"I'm so worried about him.\"\n\n\"Worry is rent you pay on an apartment you can't live in.\" I said.\n\n\"What?\"\n\n\"All your worry will do what, exactly?\"\n\n\"Do?\"\n\n\"Will your worry sustain his erection, lubricate her vagina, cook dinner for us, or pay the electric bill?\"\n\n\"No!\"\n\n\"Does worry use up energy?\"\n\n\"Yeah.\"\n\n\"That energy is rent you pay for something you don't get any benefit from. I want things in there to work out, just like you do. I'm out here. I have two beautiful women in my arms. I would rather use my energy to enjoy and love both of you than to worry about Pete. If things go well, there is nothing for me to do. If they go badly, I'll do whatever seems appropriate, when I know about it.\" \n\nI took Monica's nipple back into my mouth and she moaned. My arm went around Pam and I squeezed her ass.\n\nThe next time I came up for air I almost didn't get any. Pam smothered my mouth and inserted her tongue. As her face neared mine she said, \"Lee, I love you.\"\n\nWe heard another moan, followed by the words, \"Yes! God, yes!\"\n\nMonica said, \"Wait for it.\"\n\nFrom inside the house we heard Bonny again. \"Thank you! Thank you! Thank you!\"\n\nThe lion was heard between the Thank yous. Things appeared to be going well inside the house. I heard the front door open and wondered who it might be. It wasn't long until I had my answer. The sliding glass opened and Kat walked out.\n\nPam stood up and said, \"Kat! You're here!\" Kat waved and came to us. We met her half way, shared hugs and asked why she wasn't working.\n\n\"The commander knew I wanted to be here and she came in and is covering my shift for me. She even lent me her car to get here, can you believe it?\"\n\nI smiled. \"Yes. I believe she understands that this is family and you need to be here with us.\"\n\n\"So where is Pete?\"\n\n\"Lee's friend Bonny took him inside over an hour ago and we haven't seen them since.\"\n\n\"We have heard from them, however.\"\n\n\"And?\"\n\n\"And, if I were to guess I'd say the boy is healed or well on the way to healed.\"\n\n\"And, when is dinner? Or did I miss it?\"\n\n\"Let's order some stuff delivered. How about Chinese?\"\n\n\"I'll call and order,\" Megan volunteered, \"What does everyone want?\"\n\n\"No, please allow me.\" I let go of Kat and Pam and went inside. I called my friend at a small Chinese restaurant nearby. \"Lao Tzu, ne how ma?\"\n\n\"I have been sitting here waiting for my friend to call and make me rich. Are you my friend?\"\n\n\"Yes. I have a hundred dollars green and I want you to bring food for us.\"\n\n\"How many fortune cookies?\"\n\n\"Ten.\"\n\n\"In half an hour open the door.\"\n\n\"Tsi gen, sheigh sheigh.\" I hung up.\n\nMegan looked at me and said, \"You didn't order.\"\n\n\"It takes impertinence to tell a master what you wish for them to make. My friend is a master. In half an hour a feast will arrive. Let's get the dining room ready.\"\n\nHalf an hour later I opened the door and my friend and his son and daughter were carrying boxes and bags of food inside. In the kitchen they unpacked and started preparations for our dinner. I went outside and told those out by the pool that dinner had arrived and they should dress as we had guests. \n\nAs they came into the house the smells of Chinese cooking filled the air. My friend had left his restaurant and was in my kitchen putting the finishing touches to a Chinese feast.  Tangerine chicken, beef and broccoli, brazed green beans with garlic, five spice shrimp, rice and tea were set out buffet style. We passed the island loading our plates and as we sat down to eat Pete walked in with Bonny.\n\n\"Damn, I somehow found a real appetite!\"\n\nEveryone laughed. The chef handed him a plate and Pete loaded it and sat down. Bonny took another plate and loaded it, but a bit less than Pete's. Pam and I noticed that Pete was walking without any unsteadiness. The food was wonderful!\n\nI had my friend and his children join us for dinner. I introduced the assembled family to them.",
        "\"Megan, do you remember a story from your childhood about a man who met another man in a far off land and they saved each other from death?\"\n\n\"Yes.\"\n\n\"This is the man, Lee Wong, who saved my life.\"\n\n\"It must be my place to correct you father's poor memory. It was he who saved me from death and possibly worse. These are my oldest children, Lee Wong and Lee Ann Wong.\"  The two children were teens and they stood and bowed to me as they were introduced.\n\nMegan stood and hugged all three, thanking them and kissing Lee Wong, the older.\n\nRina asked, \"Mr. Wong why are you and your children all named Lee?\"\n\n\"We honor the one who saved us. I had another name once. When I came to America I was told I could change it. I did.\"\n\nThe conversation turned back to the food and to eating. Within an hour the leftovers were in the refrigerator and the Wongs were gone. I sat on the couch with Megan and Pam beside me. Eric sat with Rina and Monica. Pete seemed lost in thought with Bonny sitting next to him and touching him.\n\n\"Dad, you always seem to surprise me.\"\n\n\"How is that?\"\n\n\"I thought that story was just a story and that I was supposed to learn something from it.\"\n\n\"Did you?\"\n\n\"Yes. But I didn't know it was real.\"\n\nPete spoke up. \"I think I missed something. What story?\"\n\n\"Dad and Mr. Wong were in South East Asia a long time ago. There were a lot of people looking for both of them and if they were found they would be killed. By helping each other they both escaped.\"\n\n\"When was that Mr. Peterson?\" I wasn't Lee anymore. My status had changed.\n\n\"1967. A long time ago. Mr Wong is possessed of a faulty memory as well as I am. We can leave it that we are life long friends and even brothers of a sort.\"\n\n\"I don't know about everyone else but I'm ready for bed. Pete has a room with his name on the door. The rest of you may stay up, swim some more or find a place to sleep. Is anyone planning to go home?\"\n\n\"I thought we were home.\" Megan said, smiling.\n\n\"OK, let me more precise. Is anyone leaving before breakfast?\"\n\nNo one spoke. No one moved. I stood and headed down the hall. When Kat stood Pete recognized her.\n\n\"Aren't you Lt....\"\n\n\"No. When we are on base, yes. Here I'm Katharine or Kat. This is not the Navy.\" \n\nShe bent to him and kissed him on the cheek. \n\n\"Having a good time, so far?\"\n\n\"Yes Ma'am! A fine time.\" \n\nKat smiled and followed me down the hall.  Behind the closed door of our bedroom Megan asked, \"Are you really tired Dad?\"\n\n\"Too tired to be all that social when I could be touching a deeper level of intimacy here.\"\n\nClothes disappeared and the touching commenced. The four of us enjoyed each other fully. Talking and kissing and prodding and teasing for the joy of being joined in love and affection. Each lady wanted me inside her and each got her wish. I wanted to nibble and feel each quiver to my tongue, lips and fingers and they granted my wish. We heard Pete twice more during the night. Once he woke us up. I looked at the clock and saw that it was four twenty-two.\n\nKat said, \"Noisy isn't he?\"\n\nNo one answered. We went back to sleep.\n\nEarly the next morning I went to the kitchen and started breakfast. Rina was next to join me in the kitchen. She made coffee. I got out another coffee maker and made Navy coffee. Together we made a huge omelet with bell peppers, chopped broccoli beef and braised green beans and two kinds of cheese in it. I used a dozen eggs. Rina was slicing and toasting bagels when Pam and Kat joined us.\n\nPam and Kat were wearing the Hawaiian print wraps. They kissed me and Rina good morning and set the island and the table for breakfast. Some of us were finishing up when Bonny and Pete arrived. He looked like he had just had a vitamin shot. He was smiling, moving well and joking as he loaded his plate high.\n\nDuring breakfast he asked if it would be OK if he used the pool for a while to swim some laps. I asked how long he wanted it and he said an hour. In his head he was already on the road back into the SEALS. I said sure. Bonny let us know that she had three appointments and might not be back until tomorrow. Pete walked her back to the bedroom to \"help her pack.\" I think he helped to pack her. While they were occupied Rina said, \"I love Bonny and everything... and I'm glad she's leaving. I want a shot at that young stud!\"\n\nShe sat out by the pool and counted laps for Pete while he swam. The longer he swam the better he got at it. At the end of an hour he was very tired and Rina decided she should rub his sore muscles. She rubbed muscles he hadn't even used while he was swimming. The young lion roared again before noon.\n\nAfter lunch Pam said to Pete, \"I want to check you're healing. If it will help I'll put on my whites.\"\n\nPete stood out by the pool and dropped his shorts and took off the t-shirt. Pam looked at his scars. She turned him so the sunlight shone on him between his knees and chest. His attitude had changed. Back on base he hadn't wanted anyone to see his scars. Now he was not hiding them.\n\n\"You're doing well.\" Pam pronounced.\n\n\"Yes, Ma'am. I just needed some good lovin.\"\n\n\"Don't we all.\"\n\n\"You and Lee have a real thing, huh?\"\n\n\"Yes. A real thing. Every minute I spend with him I get to say Thank you.\"\n\n\"Last night... I noticed that Megan and Katharine and you followed him through that door. Is that a bedroom?\"\n\n\"Are you asking me if Lee slept with three women last night?\"\n\n\"I guess I am.\"\n\n\"I guess that is a question you should ask Lee.\"\n\n\"I couldn't. That's so personal and I don't really know him very well.\"\n\n\"Do you trust me?\"\n\n\"Yes, you're my nurse.\"\n\n\"You can act as if Lee were the Dad you always wanted and your older brother all rolled into one great guy. You can talk to him about anything non-medical. He knows more about relationships and women than any man I have ever known. He also knows about God and Love and Life.\"\n\n\"Wow! You really are gone on the man aren't you?\"\n\n\"Yes! And I'm gone on Life and Love too. Go spend some time with him. The ladies around here will still be here when you're ready for whatever's next.\"\n\nHe pulled up the shorts and thanked Pam. She reminded him that around this house \"Thank you\" was often accompanied with a kiss. He gave her one and she molded her body to his and kissed his soul and his body with equal intensity.\n\nAs the kiss ended he looked at her and said, \"I thought you were with Lee?\"\n\n\"Does that mean that it is just Lee and me?\"\n\n\"Doesn't it?\"\n\n\"Are you and Bonny in a monogamous relationship?\"\n\n\"Not yet. We just met yesterday!\"\n\n\"Pete, sit down.\" \n\nHe did. Pam sat next to him. \"I need to talk to you even before you talk to Lee. I want you to hear me not as your nurse, not even as a nurse, but as a woman. I'm not a girl. I was once, now I'm a woman. I want you to fully be a man. I can see that you are on that path and doing well. I can help you get there. Kat, Bonny, Megan and Rina can help too. I'm sure Eric wants you to be the best man you can be. I know Lee wants that.\"\n\nThey sat quietly for a while. Pete looked at Pam and said, \"I'm on new ground here. I want what I hear being offered but I can't even tell you what it is.\"\n\n\"So?\"\n\n\"So, help me.\"\n\n\"OK. Close your eyes. Remember back to the week before you shipped out to the Middle East. Where were you?\"\n\n\"Home with my family.\"\n\n\"And your girl friend?\"\n\n'Yeah.\" His tone was flat and hurt.\n\n\"Did the two of you have sex?\"\n\n\"Yeah.\" The tone was better, warmer.\n\n\"Was it different than last night?\"\n\n\"Yeah!\"\n\n\"I want you to think about this for a while, then answer. On an emotional level what was the difference?\"\n\nPam stood and then said, \"Pete, stay here. I'll be back in a few minutes and we'll talk some more. I'll bring you a beer. Anything else you want?\"\n\n\"Another kiss?\"\n\n\"Later.\" \n\nShe was gone. Pete sat with his eyes closed and thought about the night with Bonny and the last night he had with his old girl-friend. At first his thoughts were about what Bonny did and what Sue, his old girl-friend, had done while they were in bed. But as he thought he noticed that Bonny was with him in a way he had never thought of before. She didn't allow him to fuck her. She wasn't giving in. She didn't act like she was doing him a favor. Sue did. He thought more about the two women. Sue had rules for their relationship. She had even told him that he wouldn't get sex with her until he had taken her out ten times. She would let him go down on her but thought sucking him was disgusting. He stopped thinking about the rules and went back to thinking about being with Bonny.\n\nHe remembered something she had said while they were kissing. \"Pete, I like the feeling I have when I'm with you like this. I want more. I want you to open up and really be with me.\"\n\nAt the time he hadn't understood what all that meant except he was going to get laid. Now he was seeing that there was more in what happened last night than sex. He opened his eyes. \n\nPam and Lee were sitting in front of him. Pam held an open can of beer in front of him. Lee held a plate with a sandwich on it. He smiled, took the beer, downed a swig and then took the sandwich. As he chewed Pam spoke.\n\n\"Which experience would you like to have again, last night or the last time you were with your old girl-friend?\"\n\n\"Last night.\"\n\nI asked, \"Why?\"\n\n\"Bonny and I were together last night. We were really together. She really wanted to be with me.\"\n\n\"How would life be if that was your experience of being with everyone?\"\n\n\"I can't even imagine.\"\n\n\"Pete, how tightly are you holding on to the things you were taught as a child?\"\n\n\"Like what?\"\n\nPam asked, \"Are you willing to entertain the idea that I love you?\"\n\nPete smiled, and then looked at Lee. \"I'm uncomfortable with you saying that in front of Lee.\"\n\n\"He already knew.\"  \n\nI nodded.\n\n\"Isn't love about one man, one woman?\"\n\n\"That is what we were taught. The evidence in front of us says that isn't the only way things are. You love your Mom and your Dad. Where is the conflict?\"\n\n\"That's a different kind of love!\"\n\n\"Only because our society says so. Can you imagine anything more loving than having someone you love teach you how to love others?\"\n\n\"Isn't that what our parents do?\"\n\n\"Who taught you how to kiss?\"\n\n\"Sherry Snyder. Seventh grade, behind the theatre in town.\"\n\n\"Imagine that Bonny was your aunt. Your Mom sees that you have developed an interest in girls so she has your favorite aunt come and teach you how to kiss. Imagine what that knowledge would do for your self-esteem and your popularity with the girls at school.\"\n\n\"Sherry Snyder didn't really know any more than I did. We just kissed and it felt good.\"\n\n\"If we taught everyone the truth about kissing, about relationships, about each other I think most of the problems the earth is wrestling with would be gone.\"\n\n\"Oh, the old prayer about world peace and no more wars.\"\n\n\"No. That prayer has been spoken, asking God to convince politicians and religious leaders to be more interested in doing what's best than in wealth and power. That path has been trod for so long it must be evident that it hasn't ever worked and won't work tomorrow either.\"\n\n\"And, you know the path that will give us world peace and no more wars?\"\n\n\"I know a path that isn't insane.\"\n\n\"Make love not war?\"\n\n\"No. You cannot do it.\"\n\n\"Do what?\"\n\nI leaned in towards Pete and he leaned ever so slightly towards me.\n\n\"Make love. It is a language thing. People call coitus by different names. Making love is one of them. That's a sham. Love is. I can't make any. You can't make any. Pam can't. It would be closer if the people in the sixties had said, 'Allow love, not war.\"\n\n\"Are you telling me that I'm here with all of you and you are some kind of a love cult?\"\n\n\"No,\" Pam said. \"We aren't a cult. No meetings no study groups, no tithing. We are a loving family. We don't offer anyone anything except a new way to see Life and Love and to use that as their heart and soul tells them is best. We are not organized in any way as a movement, a cause, a political or religious anything. Simply put, we just love.\"\n\n\"Pete, when you kissed Bonny last night what did you feel?\"\n\n\"I felt like she wanted me.\"\n\n\"When Pam kissed you what did you feel?\"\n\n\"She wanted me.\"\n\n\"Are you up to a challenge for the rest of the weekend?\"\n\n\"Yes! I think so.\"\n\n\"Good. There are women here and possibly more coming. Each and every one of them has something in common in their relationship with you. You can talk to any or all of them. You can touch, kiss or do whatever you agree to do for the whole weekend. Your challenge is to feel. There is something quite unusual here and you can have it. It cannot be explained very well. When it is experienced it is very clear what has been experienced. You have been chest deep in it since we left the base yesterday. You were interested in Rina's tits and Bonny's everything. You were interested in Megan's tits too. Now I challenge you to get past all their parts and feel what is available to you.\"\n\n\"You want me to fall in love with all of them?\"\n\n\"No. If you fall in love that would be an accident. Pam told you she loves you. Was that an accident?\"\n\n\"I don't think she planned it.\"\n\n\"Pam, did you plan to fall in love with Pete?\"\n\n\"No! I choose to love Pete.\"\n\nPete's eyes went from Pam to me and back to Pam. He was in deep water and he knew it. \n\n\"I don't get it. I didn't do anything to make you love me. I didn't even make a pass at you.\"\n\n\"It doesn't matter. If I love you I will naturally treat you from my heart and my mind instead of just with my mind. If I love you I won't hold back in my relationship with you. I will treat you as my beloved.\"\n\n\"Why me?\"\n\n\"Why not you? You were asked how tightly you hold onto the stuff you were taught as a child. You were taught that there were lots of different kinds of love between human beings. You were taught that you love Mom and Dad in one way, uncles and aunts in another way, friends in another way, lovers in another way, strangers you don't love. Lee taught me that when I put everyone in those boxes I make my life more complicated. I decided that what would make my life work is to love you. So, I love my life aligned with my decision to love you, and Lee, and Pam, and Megan, and Mr. Wong.\"\n\n\"Mr. Wong? You just met him last night.\"\n\n\"In my way of thinking I need a reason to NOT love him and I didn't see one. I love him because I choose to. Can you choose to love me?\"\n\nPete sat quietly for a long time. These are difficult things to ponder for anyone. I wondered if, perhaps, we had pushed too hard, too fast.\n\n\"I think I want to go back to the base.\"\n\n\"OK. I'll drive you back anytime you want to go. Going back to the base means you quit on the challenge I just gave you. A challenge you said you wanted.\"\n\n\"You said for me to get past all their parts and feel what's available to me. I don't even know what that means.\"\n\nPam scooted closer to Pete. \"Have you ever kissed Rina?\"\n\n\"No.\"\n\n\"What would it be like to kiss her?\"\n\n\"I can only imagine.\"\n\n\"To know, you would have had to done it already.\" I said.\n\n\"Yes, sir.\"\n\n\"All Lee is asking that you do is be here for the rest of the weekend, enjoy every one and every experience while you are here and see if you can figure out what you are being offered. Only when you know what the offer is can you authentically make a choice.\"\n\n\"At the end of the weekend I can go back to the base? No strings attached?\"\n\n\"At the end of the weekend Pam will be a nurse on the base. Kat will be a nurse on the base. Neither of them will ever mention the weekend. If you want to talk about it or to be invited back, you'll need to bring it up. Rina and Bonny won't call you or visit you on base, unless you invite them.\"\n\n\"You mean they don't really like me?\"\n\n\"No, I mean none of us ever pushes ourselves on anyone. If I offer you a beer and you turn me down saying, \"I don't want beer from you,\" would I ever offer another beer to you?\"\n\n\"No.\"\n\n\"The same is true for everything we offer. Check it out. Find out what is here for you, and then choose.\"\n\nPam smiled and asked, \"By the way, would you like a beer?\"\n\nPete thought and then answered, \"Yes, I think a beer would be perfect!\"  \n\nPam got it and one for herself. I went out in the front yard. I used the hose and watered the flower beds in front of the house. It gave me time to think and gave Pete time to process.\n\nAs the sun sank toward the ocean I finished up in the front yard and went back inside. Kat and Megan were in the kitchen. They were planning dinner. I sat down on one of the tall stools by the island and both ladies kissed me. Oh, how I love their kisses. They do the same things but differently when they kiss. Kat molded herself to me front to front and used a soft pressure between her lips and mine. She used her hands to hold me to her with the pressure she desired. Megan took her turn with an unhurried grace. It wasn't a competition. She held my face in her hands as we kissed and her body touched me softly. As my arms encircled her she melded against me, giving with my pressure and willingly connecting. \n\nPete came in from the pool area while we were kissing. He walked over to Kat, who was looking in the pantry, and asked, \"Could I have a kiss like that, please?\"\n\nShe didn't speak. Kat closed the pantry doors and stepped very close to Pete. She leaned a little and her lips touched his. His arms went around her and he pulled her to him. He was in a hurry. Kat stopped the kiss and stepped back.\n\n\"What?\" He asked.\n\n\"Why are you in such a hurry?\"\n\n\"A hurry?\"\n\n\"Have you ever struck a match?\"\n\n\"Sure.\"\n\n\"It flares hot and bright for ten seconds and then burns out. Am I a match?\"\n\n\"No.\"\n\n\"Then kiss me like I won't flare and burn out in a minute. Kiss me like this is an affirmation of our long lasting connection. Kiss me like this is a way for you to tell me you love how you feel when you are with me.\"\n\nPete stepped closer and their lips met. He didn't wrap her in his arms until the kiss had gone on for some time. When his arms encircled her it was with gentleness and not just so she would press her tits against his chest. Her arms encircled his waist and their bodies connected more as the kiss progressed. \n\nIt did end. Kat stepped back a couple of inches and Pete opened his eyes. I was still holding Megan. I asked, \"Pete, can you tell me the difference between kissing Kat and anyone else you have ever kissed?\"\n\n'You mean before now?\" I nodded. \"Kissing Kat is so much more than kissing before. I remember kissing Sue and wondering what she was thinking about. I don't wonder what Kat is thinking. I believe she isn't thinking. She's kissing.\"\n\nKat nodded. \n\n\"What were you thinking about when you were kissing Kat?\"\n\n\"I was thinking about how great it feels to hold her. I wondered if you were watching. I thought about how warm she is. I thought about the erection growing in my shorts and if she felt it.\"\n\n\"Pete, I want you to kiss me again. I want you to focus on this thought; \"I am kissing Love itself. This is a spiritual experience.\"\n\nThey kissed again. The kiss lasted a long time. The skin near Kat's neck mottled in passion. Their breathing changed. Their arms held each other and didn't move around.\n\nPete looked into Kat's eyes and said, \"What did you do to me?\"\n\n\"I kissed you.\"\n\n\"That was more than any kiss I've ever had!\"\n\n\"Pete that is lesson number one in being connected in Love. I recommend you stick around for the rest of the weekend and get a few more lessons.\"\n\n\"I don't want to go anywhere!\"\n\n\"I do!\" \n\nKat took Pete by the hand and led him back to his bedroom. I guessed it was time for a more in-depth lesson in connectedness. Megan and I made some choices and started cooking dinner.",
        "As we ate dinner out by the pool the phone rang. Normally when that happens I don't answer. The machine does and after the meal I listen and respond. Something told me to answer.\n\n\"Lee.\"\n\n\"Rina. Lee I didn't want to bother you but Siomara has had a heart attack. They took her to Cedars. I'm headed there now, stopping to pick up Jake on the way.\"\n\n\"We'll meet you at the hospital.\"\n\nThe phone clicked. Rina was on her way. I went back out and explained what the call had been about. Sio was a good friend and her husband Jake was also family. They were both in their early sixties. I was going to the hospital to be with Jake. Megan said she would go too. Pete asked what he should do.\n\n\"What does your heart tell you?\"\n\n\"Go. Be supportive of Jake and Sio. I can't do anything and I don't know them, but I want to be there for them.\"\n\n\"Get dressed. You're going.\"\n\nPam and Kat stayed at the house. We went to the hospital and Megan sat next to Jake for a couple of hours. When we were allowed in to Sio's room I held one hand and Jake the other. Sio opened her eyes and smiled a little. She went back to sleep. Pete stood at the end of the bed and watched.\n\nAt midnight I took everyone except Sio out in the hall.\n\n\"Megan I want you to take Jake home and make sure he gets at least six hours good sleep. I think Pete and I will stay here with Sio. After breakfast in the morning bring him back. OK?\"\n\nJake nodded and Megan led him off toward the car. Pete and I went back into Sio's room. I took one hand and Pete held the other.\n\nAt a little after one a nurse came in and softly said, \"Visiting hours have been over for a long time.\"\n\n\"We are spiritual practitioners here to assist Siomara at her family's request. May we stay?\"\n\n\"Yes. I didn't know.\"\n\nShe came in twice more during the night to administer meds through Sio's IV.\n\nPete sat quietly for a long time. When he spoke I realized he was speaking as much to himself as to me.\n\n\"I don't know this woman. I really don't know any of you. I got in the van on Friday and it was like getting in some science fiction machine. Things I didn't believe were possible have happened to me in one weekend. I've felt and feel emotions like nothing I've ever felt before. I know that there are people who love me. I feel that when Sio opens her eyes and sees me here she won't ask who I am, she will just love me. I love her. I love Jake too. I know Megan and Kat and Pam will take care of him and love him. He is swimming in the love of this family.\"\n\nI didn't speak. He didn't look at me. Pete sat holding Sio's hand. Later, he spoke again.\n\n\"Lee, can we talk?\"\n\nI nodded.\n\n\"I'm in. Whatever this is I want it. What's next?\"\n\n\"Nothing.\"\n\n\"I don't understand.\"\n\n\"You've been in since we met. To be accurate, you've been in all your life you just didn't know about it. You couldn't feel Love and Life the way you feel them now until you knew it was possible. All the kisses you ever saw were lips touching lips and sometimes included tongues. Pam and Kat and Bonny and Megan have each and all kissed your soul. Your experience of Life has opened the door to more Life, more Love. You want more? Then Live and Love.\"\n\n\"Oh.\"\n\n\"You sit here holding Sio's hand. Why?\"\n\n\"I asked that question hours ago. I didn't have an answer. I decided I would sit here holding her hand until I knew why. Now I know why and I don't want to let go.\"\n\n\"Why are you holding her hand?\"\n\n\"I am loving God by loving her. I am holding the hand of God.\"\n\n\"Do you know how that sounds?\"\n\n\"Yes. I don't even go to church. I just don't have any other way to say what I feel.\"\n\n\"You could say \"I am holding Life in my hand. I am in touch with Love.\"\n\nHe was quiet a long time. Sio didn't move. Her breathing was shallow and regular.  The monitor showed numbers for her pulse rate and blood pressure. The machine softly beeped when a drop of her meds dropped into her IV tube. The light in the room slowly got brighter with the approach of dawn. I could see a clock on the wall behind Pete. Six o'clock.\n\nPete stood and leaned over Sio. He still held her hand. His lips touched hers. He stood back up and continued to watch her.\n\nSio's eyes opened and she smiled. She mouthed the words, \"Thank you,\" and gripped both our hands a little tighter.\n\nAt seven-thirty a doctor came in and examined Sio. He explained to us everything he knew about her condition. The key information was that her heart was good and the damage was minor. She would stay in the hospital two or three days and then go home, if there would be someone there to care for her besides Jake. We assured the doctor that she would have twenty-four hour a day care. He spoke to the nurse and made notes. He ordered breakfast for Sio.\n\nJake and Megan were back by a little after nine. They heard the news and we watched them celebrate. By ten, other family was there to be with Jake and Sio. We went down to my van and went home. Pete and I had been up all night so Megan drove us home and Pete headed off to bed. He hadn't spoken between the hospital and home.\n\nAfter his door closed Megan asked, \"Well?\"\n\n\"Pete and I talked last night. Pete sat with Sio and held her hand for seven hours. He discovered the Love within him and he shared it with Sio. He kissed her and she opened her eyes. Pete is healed in ways he hasn't even imagined.\"\n\n\"So, what's next?\"\n\n\"I'm going to call Corine and ask if he can spend a few more days here. You OK with that?\"\n\n\"I'll make the call, you sleep.\"\n\nI was ushered off to bed. When I woke up it was getting dark. I felt and heard someone in bed with me. I reached out and found warm, soft skin that I didn't immediately identify. When I touched her she rolled over to face me and kissed me. I recognized the kiss! Corine was in bed with me!\n\n\"I came to see how we were doing. I was unprepared for what I found. When I walked in Pete was in the pool, swimming laps. Megan was sitting on a chair at one end of the pool and every time Pete finished a lap he lifted out of the water and kissed her pussy. After each kiss Megan announced the lap count and said, 'Thank you.'  He was on lap 164 when I quit watching.\"\n\n\"Not bad for a guy who sat up all night with a sick friend.\"\n\n\"Pam told me. She went into his room after he had five hours of sleep and crawled into bed with him. When he woke up his first words were, 'Thank you.\"\n\n\"I'd like him to stay a couple more days, if that's OK with you.\"\n\n\"Sure! Can I stay too?\"\n\n\"If the Captain at the base can do without three of the best nurses in the Navy, then sure.\""
    ],
    "authorname": "Scorpio44",
    "tags": [
        "polyamory",
        "threesomes",
        "oral",
        "coitus",
        "romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/it-started-in-the-rain-ch-05"
}